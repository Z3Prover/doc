(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x127 0)) (((x335 (x169 Int)) (x313 (x272 x127) (x370 Int)) (x15 (x284 x127) (x501 x127) (x479 Int)))))
(declare-fun x297 () Int)
(declare-fun x665 () Int)
(declare-fun x150 () Int)
(declare-fun x162 () x127)
(declare-fun x29 (x127) Int)
(declare-fun x382 () Int)
(declare-fun x538 () Bool)
(declare-fun x166 () Bool)
(declare-fun x26 () x127)
(declare-fun x391 () Int)
(declare-fun x354 () Int)
(declare-fun x21 () Bool)
(declare-fun x44 () Bool)
(declare-fun x268 () Int)
(declare-fun x450 () Int)
(declare-fun x611 () Int)
(declare-fun x229 () Bool)
(declare-fun x86 () Bool)
(declare-fun x194 () Int)
(declare-fun x215 () Int)
(declare-fun x601 () Int)
(declare-fun x100 () Bool)
(declare-fun x30 () Int)
(declare-fun x296 () Bool)
(declare-fun x98 () Int)
(declare-fun x445 () x127)
(declare-fun x528 (Int) x127)
(declare-fun x117 () Bool)
(declare-fun x563 () Bool)
(declare-fun x55 () Bool)
(declare-fun x201 () Int)
(declare-fun x294 () Int)
(declare-fun x526 (Int) Int)
(declare-fun x90 () Int)
(declare-fun x504 () Int)
(declare-fun x442 (Int) Int)
(declare-fun x309 () x127)
(declare-fun x221 () Int)
(declare-fun x510 () Int)
(declare-fun x36 () Bool)
(declare-fun x424 () Int)
(declare-fun x407 () Int)
(declare-fun x392 () Bool)
(declare-fun x25 () Int)
(declare-fun x123 () Int)
(declare-fun x659 () x127)
(declare-fun x106 () Bool)
(declare-fun x358 () Bool)
(declare-fun x603 () Bool)
(declare-fun x343 () Int)
(declare-fun x650 () Bool)
(declare-fun x349 () Int)
(declare-fun x438 () Bool)
(declare-fun x549 () Int)
(declare-fun x621 () Int)
(declare-fun x666 () Bool)
(declare-fun x261 () Int)
(declare-fun x213 () Int)
(declare-fun x267 () Int)
(declare-fun x657 () Int)
(declare-fun x521 () Int)
(declare-fun x341 () Bool)
(declare-fun x633 () Bool)
(declare-fun x307 () Int)
(declare-fun x353 () Int)
(declare-fun x38 () Int)
(declare-fun x420 () Bool)
(declare-fun x126 () Int)
(declare-fun x40 () Int)
(declare-fun x248 () Bool)
(declare-fun x3 () Bool)
(declare-fun x168 () Int)
(declare-fun x631 () Int)
(declare-fun x558 () Int)
(declare-fun x6 () Int)
(declare-fun x626 () Bool)
(declare-fun x574 () Int)
(declare-fun x664 () Int)
(declare-fun x328 () Bool)
(declare-fun x475 () Int)
(declare-fun x68 () Int)
(declare-fun x56 () Int)
(declare-fun x92 () Int)
(declare-fun x376 () Bool)
(declare-fun x523 (x127) Int)
(declare-fun x644 () Int)
(declare-fun x582 () Int)
(declare-fun x551 () Int)
(declare-fun x384 () Bool)
(declare-fun x23 () Int)
(declare-fun x324 (Int Int) Int)
(declare-fun x128 () Bool)
(declare-fun x373 () Int)
(declare-fun x398 () Int)
(declare-fun x282 () Bool)
(declare-fun x183 () Int)
(declare-fun x623 () Int)
(declare-fun x20 () Bool)
(declare-fun x559 () Int)
(declare-fun x227 () Int)
(declare-fun x455 () Int)
(declare-fun x206 () Int)
(declare-fun x274 () Bool)
(declare-fun x662 () Int)
(declare-fun x618 () Int)
(declare-fun x77 () Int)
(declare-fun x359 () Int)
(declare-fun x58 () x127)
(declare-fun x572 () Bool)
(declare-fun x266 () Bool)
(declare-fun x494 () Int)
(declare-fun x505 () Bool)
(declare-fun x638 () Bool)
(declare-fun x617 () Int)
(declare-fun x539 () Int)
(declare-fun x340 () Bool)
(declare-fun x390 () Int)
(declare-fun x573 () Bool)
(declare-fun x469 () Bool)
(declare-fun x187 () Bool)
(declare-fun x303 (x127) Int)
(declare-fun x31 () Int)
(declare-fun x54 () Int)
(declare-fun x411 () Int)
(declare-fun x404 () Int)
(declare-fun x79 () Int)
(declare-fun x472 () Bool)
(declare-fun x651 () Int)
(declare-fun x372 () Bool)
(declare-fun x548 () Bool)
(declare-fun x320 () Bool)
(declare-fun x326 () Int)
(declare-fun x302 () Bool)
(declare-fun x367 (x127) Int)
(declare-fun x339 () Int)
(declare-fun x380 () Int)
(declare-fun x584 () Int)
(declare-fun x4 () Bool)
(declare-fun x585 (x127) Int)
(declare-fun x387 () Int)
(declare-fun x57 () Int)
(declare-fun x534 () Int)
(declare-fun x379 () Int)
(declare-fun x490 () Int)
(declare-fun x247 () Int)
(declare-fun x132 () x127)
(declare-fun x464 () Bool)
(declare-fun x531 (Int) Int)
(declare-fun x242 () x127)
(declare-fun x65 () Bool)
(declare-fun x506 () x127)
(declare-fun x190 () x127)
(declare-fun x61 () Bool)
(declare-fun x569 () x127)
(declare-fun x88 () x127)
(declare-fun x629 () Bool)
(declare-fun x419 () Bool)
(declare-fun x89 () Int)
(declare-fun x493 () Int)
(declare-fun x588 () Int)
(declare-fun x619 () Int)
(declare-fun x436 () Bool)
(declare-fun x325 () Bool)
(declare-fun x430 () Int)
(declare-fun x136 () Int)
(declare-fun x45 () Int)
(declare-fun x151 () Int)
(declare-fun x612 () Int)
(declare-fun x640 () Int)
(declare-fun x104 () Bool)
(declare-fun x552 () Int)
(declare-fun x141 () Int)
(declare-fun x323 () Bool)
(declare-fun x260 () Int)
(declare-fun x417 () Bool)
(declare-fun x236 () Bool)
(declare-fun x289 () Int)
(declare-fun x555 () Int)
(declare-fun x18 () Bool)
(declare-fun x331 () Int)
(declare-fun x338 () Int)
(declare-fun x602 () Bool)
(declare-fun x519 () Bool)
(declare-fun x495 () Bool)
(declare-fun x446 () Bool)
(declare-fun x223 () Int)
(declare-fun x499 () Int)
(declare-fun x646 () Int)
(declare-fun x245 () Int)
(declare-fun x82 () Int)
(declare-fun x85 () Int)
(declare-fun x312 () Bool)
(declare-fun x5 () Int)
(declare-fun x314 () Bool)
(declare-fun x101 () Int)
(declare-fun x120 () Int)
(declare-fun x285 () Int)
(declare-fun x12 () Int)
(declare-fun x197 () Int)
(declare-fun x222 () Int)
(declare-fun x536 () Int)
(declare-fun x114 () Bool)
(declare-fun x547 () Bool)
(declare-fun x108 () Bool)
(declare-fun x75 () Int)
(declare-fun x76 () Bool)
(declare-fun x152 () Int)
(declare-fun x515 () Int)
(declare-fun x375 () Bool)
(declare-fun x441 () Int)
(declare-fun x386 () Bool)
(declare-fun x395 () Bool)
(declare-fun x330 () Int)
(declare-fun x71 () x127)
(declare-fun x111 () Int)
(declare-fun x383 () Int)
(declare-fun x118 () Bool)
(declare-fun x287 () Bool)
(declare-fun x518 () Int)
(declare-fun x224 () x127)
(declare-fun x91 () Bool)
(declare-fun x502 () Bool)
(declare-fun x484 () Int)
(declare-fun x653 () Int)
(declare-fun x8 () Int)
(declare-fun x595 () Int)
(declare-fun x97 () Bool)
(declare-fun x216 () Bool)
(declare-fun x225 (x127) Int)
(declare-fun x564 () Int)
(declare-fun x431 () Int)
(declare-fun x204 () Bool)
(declare-fun x217 () Int)
(declare-fun x208 () Int)
(declare-fun x527 () Int)
(declare-fun x195 () Int)
(declare-fun x249 () Int)
(declare-fun x545 () Int)
(declare-fun x620 () Int)
(declare-fun x237 () Int)
(declare-fun x53 () Int)
(declare-fun x425 () Bool)
(declare-fun x94 () Bool)
(declare-fun x478 () Bool)
(declare-fun x301 () Int)
(declare-fun x591 () Bool)
(declare-fun x416 () Bool)
(declare-fun x137 () Int)
(declare-fun x660 () Bool)
(declare-fun x415 () Int)
(declare-fun x107 () Bool)
(declare-fun x113 () Int)
(declare-fun x443 () Int)
(declare-fun x160 () Int)
(declare-fun x587 () Int)
(declare-fun x647 () Int)
(declare-fun x399 () Bool)
(declare-fun x480 () Bool)
(declare-fun x607 () Bool)
(declare-fun x59 () Int)
(declare-fun x200 () Int)
(declare-fun x405 () Int)
(declare-fun x456 () Int)
(declare-fun x357 () Int)
(declare-fun x637 () Int)
(declare-fun x377 () Int)
(declare-fun x365 () Int)
(declare-fun x84 () Bool)
(declare-fun x418 () Bool)
(declare-fun x378 () Int)
(declare-fun x116 () Int)
(declare-fun x220 () Int)
(declare-fun x422 () Int)
(declare-fun x143 () Int)
(declare-fun x83 () Bool)
(declare-fun x562 () Bool)
(declare-fun x413 () Int)
(declare-fun x157 () Int)
(declare-fun x35 () Bool)
(declare-fun x543 () Bool)
(declare-fun x554 () Bool)
(declare-fun x165 () Int)
(declare-fun x362 () Int)
(declare-fun x175 () Int)
(declare-fun x196 () Bool)
(declare-fun x348 () Bool)
(declare-fun x1 (Int) Int)
(declare-fun x134 () Bool)
(declare-fun x486 () Int)
(declare-fun x604 () Int)
(declare-fun x481 () Int)
(declare-fun x639 () Bool)
(declare-fun x447 () Int)
(declare-fun x74 (x127) Int)
(declare-fun x138 () Int)
(declare-fun x498 () Int)
(declare-fun x210 () Bool)
(declare-fun x205 () Int)
(declare-fun x310 () Bool)
(declare-fun x11 () Int)
(declare-fun x643 () Bool)
(declare-fun x22 () Int)
(declare-fun x246 () Bool)
(declare-fun x458 () x127)
(declare-fun x511 () Bool)
(declare-fun x192 (Int Int) Int)
(declare-fun x467 () Bool)
(declare-fun x342 () Bool)
(declare-fun x334 () Int)
(declare-fun x423 () Int)
(declare-fun x146 () Bool)
(declare-fun x256 () Int)
(declare-fun x109 () Int)
(declare-fun x145 () Int)
(declare-fun x533 () Bool)
(declare-fun x329 () Int)
(declare-fun x73 () Int)
(declare-fun x605 () Int)
(declare-fun x69 () Int)
(declare-fun x571 () Bool)
(declare-fun x17 () Bool)
(declare-fun x129 () Int)
(declare-fun x610 () Bool)
(declare-fun x625 () Bool)
(declare-fun x616 () Int)
(declare-fun x364 () Bool)
(declare-fun x489 () Bool)
(declare-fun x439 () Bool)
(declare-fun x239 () Int)
(declare-fun x410 () Int)
(declare-fun x110 () Bool)
(declare-fun x513 () Bool)
(declare-fun x597 () Bool)
(declare-fun x327 () Int)
(declare-fun x613 () Bool)
(declare-fun x575 () Int)
(declare-fun x568 () Bool)
(declare-fun x131 (x127) Int)
(declare-fun x645 () Bool)
(declare-fun x542 (Int Int) Int)
(declare-fun x497 () Int)
(declare-fun x385 () Int)
(declare-fun x347 () Int)
(declare-fun x663 () Int)
(declare-fun x451 () Bool)
(declare-fun x161 () Int)
(declare-fun x444 () Bool)
(declare-fun x63 () Int)
(declare-fun x178 () Bool)
(declare-fun x243 () Bool)
(declare-fun x550 () Int)
(declare-fun x432 () Int)
(declare-fun x507 () Bool)
(declare-fun x172 () Int)
(declare-fun x135 () Bool)
(declare-fun x457 () x127)
(declare-fun x51 () Int)
(declare-fun x96 () Bool)
(declare-fun x72 () Int)
(declare-fun x251 () Bool)
(declare-fun x556 () Bool)
(declare-fun x191 () Int)
(declare-fun x10 () Bool)
(declare-fun x397 () Bool)
(declare-fun x255 () Bool)
(declare-fun x179 () Int)
(declare-fun x276 () Int)
(declare-fun x553 () Int)
(declare-fun x466 () x127)
(declare-fun x622 () Int)
(declare-fun x189 () Int)
(declare-fun x275 () Int)
(declare-fun x244 () Int)
(declare-fun x491 () Bool)
(declare-fun x99 () Bool)
(declare-fun x401 () x127)
(declare-fun x124 () Bool)
(declare-fun x159 () Bool)
(declare-fun x396 () Bool)
(declare-fun x103 () Int)
(declare-fun x482 () Int)
(declare-fun x433 () x127)
(declare-fun x199 () Int)
(declare-fun x177 () Bool)
(declare-fun x252 () Int)
(declare-fun x170 () x127)
(declare-fun x139 () Int)
(declare-fun x299 (x127) Int)
(declare-fun x394 () Bool)
(declare-fun x332 () Bool)
(declare-fun x360 () Bool)
(declare-fun x188 () Int)
(declare-fun x279 () Bool)
(declare-fun x257 () Bool)
(declare-fun x34 () Int)
(declare-fun x634 () Int)
(declare-fun x70 () Bool)
(declare-fun x667 () Bool)
(declare-fun x158 () Bool)
(declare-fun x593 () Bool)
(declare-fun x258 () Int)
(declare-fun x232 () Bool)
(declare-fun x520 () Int)
(declare-fun x230 () Bool)
(declare-fun x628 () Int)
(declare-fun x254 () Int)
(declare-fun x233 () Bool)
(declare-fun x319 () Int)
(declare-fun x363 () Int)
(declare-fun x144 () Bool)
(declare-fun x409 () Int)
(declare-fun x264 () Int)
(declare-fun x514 () Bool)
(declare-fun x304 () x127)
(declare-fun x641 () Bool)
(declare-fun x656 () Bool)
(declare-fun x259 () Int)
(declare-fun x262 () Int)
(declare-fun x171 () Int)
(declare-fun x408 () Bool)
(declare-fun x286 () Int)
(declare-fun x492 () Bool)
(declare-fun x452 () Bool)
(declare-fun x295 () Int)
(declare-fun x115 () Bool)
(declare-fun x632 () Bool)
(declare-fun x173 () Int)
(declare-fun x186 () Int)
(declare-fun x263 () Int)
(declare-fun x403 () Bool)
(declare-fun x463 () Int)
(declare-fun x293 () Bool)
(declare-fun x560 () Bool)
(declare-fun x298 () Bool)
(declare-fun x400 () Int)
(declare-fun x49 () Int)
(declare-fun x522 () Bool)
(declare-fun x311 () Bool)
(declare-fun x155 () Int)
(declare-fun x468 () Int)
(declare-fun x566 () Int)
(declare-fun x627 () Int)
(declare-fun x661 () Int)
(declare-fun x630 () Int)
(declare-fun x291 () Int)
(declare-fun x7 () Bool)
(declare-fun x277 () x127)
(declare-fun x508 (x127) Int)
(declare-fun x352 () Int)
(declare-fun x355 () Bool)
(declare-fun x592 () Int)
(declare-fun x435 () Bool)
(declare-fun x655 () Int)
(declare-fun x209 () Int)
(declare-fun x529 () Int)
(declare-fun x540 () Bool)
(declare-fun x43 () Int)
(declare-fun x345 () Bool)
(declare-fun x470 () Bool)
(declare-fun x102 () x127)
(declare-fun x474 () Bool)
(declare-fun x344 () Bool)
(declare-fun x163 () Int)
(declare-fun x412 () Int)
(declare-fun x212 () Int)
(declare-fun x240 () Bool)
(declare-fun x459 () Bool)
(declare-fun x567 (Int) Int)
(declare-fun x235 () Int)
(declare-fun x52 () x127)
(declare-fun x600 () Bool)
(declare-fun x133 () Int)
(declare-fun x130 () Bool)
(declare-fun x270 () Bool)
(declare-fun x537 () Int)
(declare-fun x609 (Int Int) Int)
(declare-fun x440 () Bool)
(declare-fun x273 () Bool)
(declare-fun x654 () Int)
(declare-fun x265 () Bool)
(declare-fun x500 () Int)
(declare-fun x14 () Bool)
(declare-fun x594 () Bool)
(declare-fun x241 () Bool)
(declare-fun x488 () Bool)
(declare-fun x381 () Int)
(declare-fun x578 () Int)
(declare-fun x389 () Bool)
(declare-fun x288 () Int)
(declare-fun x337 () Int)
(declare-fun x9 () x127)
(declare-fun x300 () Int)
(declare-fun x448 () Int)
(declare-fun x226 () Int)
(declare-fun x147 () Bool)
(declare-fun x544 () Bool)
(declare-fun x557 () Bool)
(declare-fun x174 () Int)
(declare-fun x211 () Int)
(declare-fun x292 () Int)
(declare-fun x198 () Int)
(declare-fun x428 () Int)
(declare-fun x167 () Bool)
(declare-fun x586 () Bool)
(declare-fun x62 () Int)
(declare-fun x642 () Int)
(declare-fun x271 () Int)
(declare-fun x122 () Int)
(declare-fun x214 () Bool)
(declare-fun x33 () Int)
(declare-fun x636 () Int)
(declare-fun x202 () Int)
(declare-fun x193 () Int)
(declare-fun x149 () Bool)
(declare-fun x649 () Bool)
(declare-fun x333 () Bool)
(declare-fun x308 () Bool)
(declare-fun x461 () Int)
(declare-fun x185 () Int)
(declare-fun x374 (x127) Int)
(declare-fun x525 () Int)
(declare-fun x19 () Int)
(declare-fun x512 () Int)
(declare-fun x351 () Int)
(declare-fun x32 () Int)
(declare-fun x305 () Int)
(declare-fun x350 () Bool)
(declare-fun x316 () Int)
(declare-fun x180 () Int)
(declare-fun x658 () Bool)
(declare-fun x453 () Int)
(declare-fun x16 () Int)
(declare-fun x668 () Int)
(declare-fun x414 () Bool)
(declare-fun x317 () Int)
(declare-fun x579 () Bool)
(declare-fun x465 () Int)
(declare-fun x234 () Bool)
(declare-fun x460 () Int)
(declare-fun x434 () Int)
(declare-fun x406 () Bool)
(declare-fun x50 () x127)
(declare-fun x140 () Int)
(declare-fun x78 () Int)
(declare-fun x93 () Int)
(declare-fun x614 () Bool)
(declare-fun x250 () x127)
(declare-fun x509 () Int)
(declare-fun x24 () Int)
(declare-fun x41 () Int)
(declare-fun x624 () Bool)
(declare-fun x42 () Bool)
(declare-fun x280 () Bool)
(declare-fun x516 () Int)
(declare-fun x369 () Bool)
(declare-fun x218 () x127)
(declare-fun x336 () Int)
(declare-fun x437 () Int)
(declare-fun x524 (x127) Int)
(declare-fun x318 () x127)
(declare-fun x429 () Bool)
(declare-fun x80 () Int)
(declare-fun x599 () Bool)
(declare-fun x473 () Int)
(declare-fun x388 () Int)
(declare-fun x48 () Int)
(declare-fun x421 () Bool)
(declare-fun x517 () Int)
(declare-fun x583 (Int Int) Int)
(declare-fun x203 () Int)
(declare-fun x321 () Int)
(declare-fun x253 () Int)
(declare-fun x278 () Bool)
(declare-fun x581 () Int)
(declare-fun x546 () Int)
(declare-fun x541 () Int)
(declare-fun x87 () x127)
(declare-fun x154 () Int)
(declare-fun x142 () Int)
(declare-fun x598 () Int)
(declare-fun x462 () Bool)
(declare-fun x64 () Int)
(declare-fun x449 () Bool)
(declare-fun x219 () Int)
(declare-fun x148 () Int)
(declare-fun x606 () Bool)
(declare-fun x67 () Bool)
(declare-fun x652 () Int)
(declare-fun x28 () Int)
(declare-fun x427 () Bool)
(declare-fun x207 (Int) Int)
(declare-fun x361 () Int)
(declare-fun x60 () Bool)
(declare-fun x535 () Bool)
(declare-fun x483 () Bool)
(declare-fun x503 () Int)
(declare-fun x46 () Int)
(declare-fun x112 () Int)
(declare-fun x346 () Bool)
(declare-fun x283 () Bool)
(declare-fun x176 () Bool)
(declare-fun x393 () Int)
(define-fun x402 ((x127 x127) (x81 Int)) x127 (ite ((_ is x313) x127) (x313 (x272 x127) (+ (x370 x127) x81)) (ite ((_ is x15) x127) (x15 (x284 x127) (x501 x127) (+ (x479 x127) x81)) (x335 (+ (x169 x127) x81)))))
(define-fun x27 ((x532 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x532) (<= 0 x532)) x532 (- x532 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x589 ((x532 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x532) (> 0 x532)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x532) x532))
(define-fun x356 ((x532 Int)) Int (ite (and (< x532 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x532 0)) x532 (ite (and (< x532 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x532 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x532 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x532) (< x532 0)) (+ x532 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x324 x532 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x561 ((x269 Int)) Bool (and (< x269 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x269)))
(define-fun x95 ((x269 Int) (x648 Int)) Bool (=> (and (> x648 0) (> x269 0)) (and (<= 0 (x609 x269 x648)) (>= x269 (x609 x269 x648)))))
(define-fun x125 ((x269 Int) (x648 Int)) Bool (=> (and (and (<= 1 x648) (< x648 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x269 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x269))) (and (<= 0 (x609 x269 x648)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x609 x269 x648)))))
(define-fun x485 ((x269 Int) (x648 Int)) Bool (=> (and (< x648 x269) (> x648 1)) (< (x609 x269 x648) x269)))
(define-fun x454 ((x269 Int) (x648 Int)) Bool (=> (and (> x269 0) (> x648 0)) (= (< x269 x648) (= (x609 x269 x648) 0))))
(define-fun x476 ((x269 Int) (x648 Int)) Bool (=> (and (> x269 0) (> x648 0)) (and (>= x269 (x192 (x609 x269 x648) x648)) (< (- x269 x648) (x192 (x609 x269 x648) x648)))))
(define-fun x66 ((x269 Int) (x648 Int)) Bool (and (x454 x269 x648) (x485 x269 x648) (x95 x269 x648) (x476 x269 x648) (x125 x269 x648)))
(define-fun x371 ((x269 Int)) Bool (= 0 (x609 0 x269)))
(define-fun x615 ((x269 Int)) Bool (= (x609 x269 1) x269))
(define-fun x477 ((x269 Int)) Bool (=> (not (= x269 0)) (= 1 (x609 x269 x269))))
(define-fun x290 ((x269 Int)) Bool (and (x615 x269) (x477 x269) (x371 x269)))
(define-fun x105 ((x269 Int)) Bool (and (= (x542 115792089237316195423570985008687907853269984665640564039457584007913129639935 x269) x269) (= (x542 x269 115792089237316195423570985008687907853269984665640564039457584007913129639935) x269)))
(define-fun x156 ((x269 Int)) Bool (and (= 0 (x542 0 x269)) (= (x542 x269 0) 0)))
(define-fun x590 ((x269 Int)) Bool (= (x542 x269 x269) x269))
(define-fun x39 ((x269 Int)) Bool (and (x590 x269) (x156 x269) (x105 x269)))
(define-fun x577 ((x269 Int) (x648 Int)) Bool (= (x542 x269 x648) (x542 x648 x269)))
(define-fun x565 ((x269 Int) (x648 Int)) Bool (and (=> (>= x648 0) (<= (x542 x269 x648) x648)) (=> (>= x269 0) (>= x269 (x542 x269 x648))) (>= (x542 x269 x648) 0)))
(define-fun x530 ((x269 Int) (x648 Int)) Bool (and (x577 x269 x648) (x565 x269 x648)))
(define-fun x471 ((x269 Int) (x648 Int)) Bool (= (x192 x269 x648) (x192 x648 x269)))
(define-fun x281 ((x269 Int) (x648 Int)) Bool (and (=> (and (< 0 x648) (> 0 x269)) (> 0 (x192 x269 x648))) (=> (and (< x648 0) (< 0 x269)) (< (x192 x269 x648) 0)) (=> (and (> x269 0) (> x648 0)) (> (x192 x269 x648) 0)) (=> (and (> 0 x648) (< x269 0)) (> (x192 x269 x648) 0))))
(define-fun x231 ((x269 Int) (x648 Int)) Bool (=> (and (> x648 0) (> x269 0)) (= (= (x609 (x356 (x192 x269 x648)) x269) x648) (< (x192 x269 x648) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x119 ((x269 Int) (x648 Int)) Bool (=> (and (not (= 0 x269)) (not (= 0 x648))) (and (= (x609 (x192 x269 x648) x269) x648) (= x269 (x609 (x192 x269 x648) x648)))))
(define-fun x153 ((x269 Int) (x648 Int)) Bool (=> (and (> x269 0) (< 0 x648)) (= (> x648 (x609 115792089237316195423570985008687907853269984665640564039457584007913129639935 x269)) (> (x192 x269 x648) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x164 ((x269 Int) (x648 Int)) Bool (and (= (x356 (x192 x269 x648)) (x356 (x192 (- x269 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x356 (x192 (- x269 115792089237316195423570985008687907853269984665640564039457584007913129639936) x648)) (x356 (x192 x269 x648))) (= (x356 (x192 x269 (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x356 (x192 x269 x648)))))
(define-fun x182 ((x269 Int) (x648 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x648) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x648)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x269) (< 0 x269))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x648) (x609 57896044618658097711785492504343953926634992332820282019728792003956564819968 x269)) (>= (x192 x269 (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (< 0 x648) (<= x648 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x269 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x269))) (= (>= (x192 (- x269 115792089237316195423570985008687907853269984665640564039457584007913129639936) x648) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x269) (x609 57896044618658097711785492504343953926634992332820282019728792003956564819968 x648)))) (=> (and (and (<= x648 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x648)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x269) (> x269 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (x192 (- x269 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x269) (x609 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x648))))) (=> (and (and (<= x648 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x648 0)) (and (> x269 0) (<= x269 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= x269 (x609 57896044618658097711785492504343953926634992332820282019728792003956564819967 x648)) (<= (x192 x269 x648) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))
(define-fun x570 ((x269 Int) (x648 Int)) Bool (and (x471 x269 x648) (x231 x269 x648) (x119 x269 x648) (x281 x269 x648) (x153 x269 x648) (x164 x269 x648) (x182 x269 x648)))
(define-fun x2 ((x269 Int)) Bool (and (= 0 (x192 0 x269)) (= 0 (x192 x269 0))))
(define-fun x487 ((x269 Int)) Bool (and (= (x192 1 x269) x269) (= x269 (x192 x269 1))))
(define-fun x426 ((x269 Int)) Bool (and (x2 x269) (x487 x269)))
(define-fun x306 ((x238 Int)) Int (ite (= 128 x238) x619 (x1 x238)))
(define-fun x47 ((x238 Int)) Int (ite (= x238 160) x329 (x306 x238)))
(define-fun x496 ((x238 Int)) Int (ite (= 192 x238) x316 (x47 x238)))
(define-fun x181 ((x238 Int)) Int (ite (= 224 x238) x382 (x496 x238)))
(define-fun x608 ((x238 Int)) Int (ite (= x238 256) x578 (x181 x238)))
(define-fun x576 ((x238 Int)) Int (ite (= 128 x238) x654 (x531 x238)))
(define-fun x37 ((x238 Int)) Int (ite (= x238 160) x637 (x576 x238)))
(define-fun x184 ((x238 Int)) Int (ite (= 128 x238) x655 (x207 x238)))
(define-fun x368 ((x238 Int)) Int (ite (= 160 x238) x498 (x184 x238)))
(define-fun x121 ((x238 x127)) Int (ite (= x88 x238) x574 (x585 x238)))
(define-fun x13 ((x238 x127)) Int (ite (= x458 x238) x171 (x508 x238)))
(define-fun x580 ((x238 x127)) Int (ite (= x238 x277) x276 (x121 x238)))
(define-fun x322 ((x238 x127)) Int (ite (= x52 x238) x559 (x13 x238)))
(define-fun x228 ((x269 Int) (x648 Int) (x596 Int) (x635 Int)) Bool (=> (and (>= x648 0) (>= x596 x269) (<= 0 x269) (>= x635 x648)) (<= (x192 x269 x648) (x192 x596 x635))))
(define-fun x366 ((x269 Int) (x648 Int) (x596 Int) (x635 Int)) Bool (=> (= x596 x269) (= (x192 x269 (- x648 x635)) (- (x192 x269 x648) (x192 x596 x635)))))
(define-fun x315 ((x269 Int)) Bool (=> (and (not (= 558109909 x269)) (not (= x269 436938878)) (> x269 10000) (not (= 3995103268 x269)) (not (= 3647180086 x269)) (not (= 699302164 x269)) (not (= x269 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= x269 2265735533)) (not (= x269 1161348331)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x269)) (not (= x269 606387804)) (not (= x269 2746363844)) (not (= 1461501637330902918203684832716283019655932542975 x269)) (not (= 231365057 x269)) (not (= 1710941022 x269)) (not (= 3207937467 x269)) (not (= x269 2094874590))) (not ((_ is x335) (x528 x269)))))
(assert (x228 x253 x393 x51 x143))
(assert (x426 (- x582 x504)))
(assert (x228 x461 x504 x509 x423))
(assert (x426 (- x621 x98)))
(assert (x426 (- x518 x461)))
(assert (= x364 (or (and x358 (not x70)) (and (not x340) x394) (and x298 (not x243)) (and x478 (not x406)) (and x420 (not x560)) (and (not x229) x251) (and (not x597) x106) (and x130 (not x346)))))
(assert (x366 x504 x461 x33 x98))
(assert (x366 x198 x141 x33 x98))
(assert (x426 (- x378 x461)))
(assert (x366 x461 x504 x271 x92))
(assert (x366 x378 x339 x504 x461))
(assert (= (x299 (x335 3647180086)) 3647180086))
(assert (x570 x198 (- x141 x92)))
(assert (x366 x253 x393 x587 x621))
(assert (= (x299 (x528 x297)) x297))
(assert (x426 (- x141 x587)))
(assert (x570 x582 (- x249 x198)))
(assert (x366 x271 x92 x461 x504))
(assert (x366 x461 x504 x621 x587))
(assert (x366 x377 x604 x253 x393))
(assert (= (or x3 x483) x507))
(assert (x366 x587 x621 x461 x504))
(assert (x561 x316))
(assert (x570 x504 (- x461 x623)))
(assert (x426 (- x23 x621)))
(assert (x570 x504 (- x461 x98)))
(assert (x366 x33 x98 x253 x393))
(assert (x366 x504 x461 x410 x388))
(assert (x228 x393 x253 x518 x23))
(assert (x426 (- x518 x393)))
(assert (x228 x393 x253 x410 x388))
(assert (x426 (- x141 x92)))
(assert (= (or x547 x658 x472 x60 x10) x42))
(assert (x426 (- x587 x461)))
(assert (x570 x461 (- x504 x98)))
(assert (x366 x378 x339 x461 x504))
(assert (x426 (- x604 x253)))
(assert (x570 x623 (- x663 x253)))
(assert (= (and x602 (not x502)) x345))
(assert (x366 x461 x504 x141 x198))
(assert (x366 x377 x604 x393 x253))
(assert (x366 x377 x604 x461 x504))
(assert (x426 (- x249 x253)))
(assert (x228 x461 x504 x623 x663))
(assert (x366 x423 x509 x253 x393))
(assert (x570 x253 (- x393 x461)))
(assert (x366 x253 x393 x582 x249))
(assert (x570 x663 (- x623 x393)))
(assert (x570 x504 (- x461 x253)))
(assert (x561 x209))
(assert (x426 (- x582 x621)))
(assert (x426 (- x504 x388)))
(assert (x426 (- x604 x393)))
(assert (x366 x271 x92 x141 x198))
(assert (x426 (- x461 x141)))
(assert (x426 (- x23 x393)))
(assert (x570 x504 (- x461 x23)))
(assert (x426 (- x393 x621)))
(assert (x228 x393 x253 x141 x198))
(assert (x561 x305))
(assert (x561 x424))
(assert (x426 (- x339 x504)))
(assert (x228 x604 x377 x393 x253))
(assert (x366 x504 x461 x253 x393))
(assert (x228 x504 x461 x509 x423))
(assert (x366 x23 x518 x253 x393))
(assert (x426 (- x253 x623)))
(assert (x570 x51 (- x143 x504)))
(assert (x570 x604 (- x377 x141)))
(assert (x366 x33 x98 x461 x504))
(assert (x561 x494))
(assert (= (and x560 x420) x251))
(assert (x570 x410 x388))
(assert (x426 (- x141 x388)))
(assert (x426 (- x141 x98)))
(assert (x561 x665))
(assert (x228 x504 x461 x518 x23))
(assert (x426 (- x461 x587)))
(assert (x561 x331))
(assert (x366 x143 x51 x621 x587))
(assert (x39 x205))
(assert (x366 x198 x141 x249 x582))
(assert (= x146 (and x440 (not x266))))
(assert (x366 x621 x587 x393 x253))
(assert (x366 x249 x582 x461 x504))
(assert (=> (<= x300 10000) (= (x528 x300) (x335 x300))))
(assert (x570 x271 (- x92 x621)))
(assert (x570 x393 (- x253 x582)))
(assert (x366 x249 x582 x198 x141))
(assert (x366 x253 x393 x143 x51))
(assert (x561 x142))
(assert (x366 x249 x582 x621 x587))
(assert (x366 x249 x582 x253 x393))
(assert (x561 x634))
(assert (x366 x461 x504 x393 x253))
(assert (x228 x504 x461 x378 x339))
(assert (x570 x271 (- x92 x393)))
(assert (x39 x215))
(assert (x426 (- x582 x587)))
(assert (x228 x141 x198 x92 x271))
(assert (x228 x249 x582 x621 x587))
(assert (x426 (- x141 x23)))
(assert (x426 (- x198 x461)))
(assert (= (=> (and (and (= x202 x179) (= (ite x76 x285 x431) x595) (= x273 (not (= x179 x286))) (= x286 x154)) (or (and (and (= x222 x581) (= x450 x191) (= x661 x337) (= x564 x575) (= x413 x564) (= x68 (ite (<= x191 57896044618658097711785492504343953926634992332820282019728792003956564819967) x191 (- x191 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x222 (+ x413 x68))) x273) (and (and (= x552 x387) (= x575 x387) (= x581 x490) (= x661 x552)) (not x273)))) x548) x489))
(assert (x570 x461 (- x504 x339)))
(assert (x561 x276))
(assert (x561 x636))
(assert (=> (>= 10000 x618) (= (x335 x618) (x528 x618))))
(assert (x366 x621 x587 x23 x518))
(assert (x366 x141 x198 x253 x393))
(assert (x570 x393 (- x253 x23)))
(assert (x561 x289))
(assert (x570 x582 (- x249 x587)))
(assert (x366 x410 x388 x253 x393))
(assert (x366 x393 x253 x518 x23))
(assert (x426 (- x604 x461)))
(assert (x366 x23 x518 x587 x621))
(assert (x570 x410 (- x388 x253)))
(assert (x570 x141 x198))
(assert (x228 x423 x509 x621 x587))
(assert (x426 (- x253 x388)))
(assert (x366 x461 x504 x518 x23))
(assert (x570 x621 (- x587 x143)))
(assert (x366 x504 x461 x663 x623))
(assert (x570 x143 (- x51 x621)))
(assert (x228 x92 x271 x393 x253))
(assert (= (x335 3207937467) (x528 3207937467)))
(assert (x426 (- x461 x92)))
(assert (x570 x410 (- x388 x621)))
(assert (x228 x604 x377 x621 x587))
(assert (x570 x141 (- x198 x33)))
(assert (x426 (- x518 x253)))
(assert (x366 x509 x423 x621 x587))
(assert (x570 x621 (- x587 x253)))
(assert (x570 x92 x271))
(assert (x561 x412))
(assert (x426 (- x141 x143)))
(assert (x366 x253 x393 x509 x423))
(assert (x561 x253))
(assert (x366 x51 x143 x198 x141))
(assert (x426 (- x198 x604)))
(assert (x570 x339 (- x378 x253)))
(assert (x366 x98 x33 x253 x393))
(assert (x570 x23 (- x518 x461)))
(assert (x366 x198 x141 x378 x339))
(assert (x426 (- x51 x141)))
(assert (x570 x141 (- x198 x51)))
(assert (x426 (- x621 x51)))
(assert (x570 x198 (- x141 x587)))
(assert (x366 x388 x410 x141 x198))
(assert (x426 (- x98 x461)))
(assert (x426 (- x621 x388)))
(assert (x561 x79))
(assert (x366 x51 x143 x587 x621))
(assert (x570 x504 (- x461 x604)))
(assert (x426 (- x92 x253)))
(assert (x570 x623 (- x663 x587)))
(assert (x570 x582 (- x249 x461)))
(assert (x561 x521))
(assert (x366 x504 x461 x423 x509))
(assert (x426 (- x198 x271)))
(assert (x570 x393 (- x253 x143)))
(assert (x366 x621 x587 x623 x663))
(assert (x426 (- x393 x339)))
(assert (x426 (- x518 x504)))
(assert (= (and x328 x241) x187))
(assert (x366 x504 x461 x378 x339))
(assert (x228 x423 x509 x141 x198))
(assert (x366 x198 x141 x377 x604))
(assert (x570 x249 (- x582 x393)))
(assert (x366 x461 x504 x51 x143))
(assert (x426 (- x198 x98)))
(assert (x561 x349))
(assert (x426 (- x393 x504)))
(assert (= x59 (x299 (x528 x59))))
(assert (x570 x253 (- x393 x410)))
(assert (x426 (- x410 x461)))
(assert (x426 (- x461 x377)))
(assert (x366 x621 x587 x198 x141))
(assert (x561 x428))
(assert (x570 x253 (- x393 x587)))
(assert (x228 x198 x141 x98 x33))
(assert (x570 x253 (- x393 x582)))
(assert (x570 x141 (- x198 x98)))
(assert (x561 x56))
(assert (x570 x141 (- x198 x504)))
(assert (x426 (- x377 x587)))
(assert (x366 x141 x198 x423 x509))
(assert (x570 x198 (- x141 x271)))
(assert (x228 x143 x51 x393 x253))
(assert (x228 x198 x141 x393 x253))
(assert (x561 x155))
(assert (x366 x604 x377 x621 x587))
(assert (x426 (- x504 x253)))
(assert (x570 x461 (- x504 x587)))
(assert (x228 x377 x604 x141 x198))
(assert (x366 x143 x51 x393 x253))
(assert (x426 (- x509 x504)))
(assert (x228 x143 x51 x141 x198))
(assert (= (x299 (x528 x354)) x354))
(assert (x228 x423 x509 x504 x461))
(assert (x315 x73))
(assert (x570 x198 (- x141 x509)))
(assert (= (and x464 (not x341)) x282))
(assert (x570 x393 (- x253 x604)))
(assert (x561 x504))
(assert (x366 x461 x504 x33 x98))
(assert (x570 x518 (- x23 x461)))
(assert (x426 (- x423 x393)))
(assert (x366 x663 x623 x253 x393))
(assert (x570 x621 (- x587 x98)))
(assert (x561 x11))
(assert (x570 x423 (- x509 x587)))
(assert (x561 x244))
(assert (x561 x239))
(assert (x426 (- x509 x253)))
(assert (x366 x393 x253 x33 x98))
(assert (x426 (- x393 x461)))
(assert (x366 x587 x621 x253 x393))
(assert (x570 x141 (- x198 x92)))
(assert (x570 x621 (- x587 x461)))
(assert (x366 x623 x663 x253 x393))
(assert (x561 x75))
(assert (x561 x213))
(assert (x366 x604 x377 x141 x198))
(assert (x426 (- x393 x98)))
(assert (x426 (- x143 x141)))
(assert (x561 x498))
(assert (x66 115792089237316195423570985008687907853269984665640564039457584007913129639935 x621))
(assert (x228 x253 x393 x518 x23))
(assert (x561 x620))
(assert (x426 (- x504 x51)))
(assert (x561 x188))
(assert (x228 x253 x393 x98 x33))
(assert (x426 (- x423 x253)))
(assert (x39 x588))
(assert (x426 (- x393 x198)))
(assert (x426 (- x504 x587)))
(assert (x570 x198 (- x141 x253)))
(assert (x366 x663 x623 x393 x253))
(assert (x570 x461 (- x504 x604)))
(assert (x426 (- x98 x253)))
(assert (x366 x663 x623 x141 x198))
(assert (x570 x621 (- x587 x271)))
(assert (x228 x587 x621 x92 x271))
(assert (x228 x504 x461 x604 x377))
(assert (x426 (- x378 x393)))
(assert (x366 x393 x253 x198 x141))
(assert (x366 x339 x378 x504 x461))
(assert (x366 x141 x198 x98 x33))
(assert (x570 x509 (- x423 x198)))
(assert (x366 x51 x143 x393 x253))
(assert (x228 x410 x388 x504 x461))
(assert (x39 x503))
(assert (x570 x393 (- x253 x33)))
(assert (x561 x631))
(assert (x366 x582 x249 x504 x461))
(assert (x570 x393 (- x253 x51)))
(assert (x570 x141 (- x198 x663)))
(assert (x366 x141 x198 x623 x663))
(assert (x426 (- x461 x623)))
(assert (x426 (- x339 x621)))
(assert (x561 x646))
(assert (x228 x518 x23 x504 x461))
(assert (x426 (- x393 x271)))
(assert (x561 x138))
(assert (x561 x664))
(assert (x570 x621 (- x587 x509)))
(assert (x561 x198))
(assert (x366 x198 x141 x623 x663))
(assert (x228 x621 x587 x518 x23))
(assert (x228 x388 x410 x393 x253))
(assert (x426 (- x509 x621)))
(assert (x570 x249 (- x582 x504)))
(assert (x426 (- x98 x587)))
(assert (x561 x297))
(assert (x228 x198 x141 x51 x143))
(assert (x561 x555))
(assert (x570 x393 (- x253 x388)))
(assert (x570 x198 (- x141 x663)))
(assert (x426 (- x198 x504)))
(assert (x228 x587 x621 x504 x461))
(assert (x426 (- x621 x143)))
(assert (x570 x253 (- x393 x388)))
(assert (x315 x448))
(assert (x366 x253 x393 x410 x388))
(assert (x426 (- x253 x378)))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x299 (x335 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (x426 (- x92 x621)))
(assert (x426 (- x587 x143)))
(assert (x426 (- x388 x393)))
(assert (= (x299 (x335 1161348331)) 1161348331))
(assert (x228 x253 x393 x141 x198))
(assert (x228 x141 x198 x518 x23))
(assert (x426 (- x378 x587)))
(assert (x570 x198 (- x141 x51)))
(assert (x570 x393 (- x253 x504)))
(assert (x561 x619))
(assert (x228 x621 x587 x504 x461))
(assert (x366 x461 x504 x509 x423))
(assert (x426 (- x378 x141)))
(assert (x426 (- x663 x198)))
(assert (x561 x627))
(assert (x570 x504 (- x461 x378)))
(assert (x366 x587 x621 x249 x582))
(assert (x366 x509 x423 x198 x141))
(assert (x570 x388 (- x410 x253)))
(assert (x570 x253 (- x393 x623)))
(assert (x426 (- x271 x253)))
(assert (x561 x400))
(assert (x426 (- x253 x198)))
(assert (x366 x587 x621 x198 x141))
(assert (x570 x504 (- x461 x339)))
(assert (x570 x393 x253))
(assert (x561 x157))
(assert (x561 x179))
(assert (x570 x198 (- x141 x339)))
(assert (x366 x393 x253 x92 x271))
(assert (x426 (- x51 x253)))
(assert (x561 x441))
(assert (= (x528 2265735533) (x335 2265735533)))
(assert (= (and x440 x266) x10))
(assert (x228 x33 x98 x393 x253))
(assert (x228 x518 x23 x621 x587))
(assert (x570 x393 (- x253 x587)))
(assert (x366 x23 x518 x393 x253))
(assert (x366 x51 x143 x141 x198))
(assert (x228 x51 x143 x621 x587))
(assert (x228 x141 x198 x621 x587))
(assert (x570 x141 (- x198 x587)))
(assert (= (or x544 x505) x464))
(assert (x561 x481))
(assert (x570 x198 (- x141 x582)))
(assert (x570 x249 (- x582 x253)))
(assert (x366 x582 x249 x198 x141))
(assert (x561 x655))
(assert (x426 (- x198 x621)))
(assert (x426 (- x587 x198)))
(assert (x570 x621 (- x587 x249)))
(assert (x366 x423 x509 x621 x587))
(assert (= x414 (or x364 x187 x282 x42 x107 x345 x449)))
(assert (x570 x141 (- x198 x143)))
(assert (x561 x637))
(assert (x366 x141 x198 x504 x461))
(assert (x570 x271 (- x92 x198)))
(assert (x561 x34))
(assert (x426 (- x393 x388)))
(assert (x366 x504 x461 x388 x410))
(assert (x561 x398))
(assert (x228 x461 x504 x604 x377))
(assert (x570 x393 (- x253 x518)))
(assert (x426 (- x198 x92)))
(assert (x570 x621 (- x587 x339)))
(assert (x426 (- x663 x504)))
(assert (=> (<= x630 10000) (= (x528 x630) (x335 x630))))
(assert (x426 (- x198 x410)))
(assert (x228 x504 x461 x92 x271))
(assert (x426 (- x623 x621)))
(assert (x228 x461 x504 x98 x33))
(assert (x561 x72))
(assert (x561 x252))
(assert (= x375 (or x638 x360)))
(assert (= 1710941022 (x299 (x335 1710941022))))
(assert (x366 x33 x98 x393 x253))
(assert (x570 x621 (- x587 x198)))
(assert (x366 x271 x92 x621 x587))
(assert (x366 x271 x92 x504 x461))
(assert (x366 x33 x98 x198 x141))
(assert (x561 x103))
(assert (= (x528 3995103268) (x335 3995103268)))
(assert (x426 (- x621 x378)))
(assert (=> (<= x73 10000) (= (x528 x73) (x335 x73))))
(assert (x570 x378 (- x339 x253)))
(assert (=> (<= x430 10000) (= (x335 x430) (x528 x430))))
(assert (x570 x621 (- x587 x582)))
(assert (x366 x143 x51 x461 x504))
(assert (x426 x253))
(assert (x228 x271 x92 x393 x253))
(assert (x366 x377 x604 x141 x198))
(assert (x366 x141 x198 x582 x249))
(assert (x570 x141 (- x198 x253)))
(assert (x426 (- x377 x461)))
(assert (x366 x393 x253 x249 x582))
(assert (x366 x504 x461 x141 x198))
(assert (x366 x587 x621 x143 x51))
(assert (x228 x33 x98 x504 x461))
(assert (x228 x582 x249 x621 x587))
(assert (x366 x461 x504 x410 x388))
(assert (x228 x51 x143 x141 x198))
(assert (= (and x436 x632) x241))
(assert (x561 x541))
(assert (x561 x359))
(assert (= x210 (and x146 (not x115))))
(assert (x570 x504 (- x461 x410)))
(assert (x570 x141 (- x198 x410)))
(assert (x570 x504 (- x461 x143)))
(assert (x561 x612))
(assert (= x427 (and x593 x554)))
(assert (x570 x141 (- x198 x23)))
(assert (x570 x92 (- x271 x198)))
(assert (x426 (- x271 x461)))
(assert (x315 x297))
(assert (x228 x621 x587 x378 x339))
(assert (x561 x77))
(assert (x228 x509 x423 x621 x587))
(assert (x561 x200))
(assert (x366 x621 x587 x461 x504))
(assert (x561 x381))
(assert (x561 x219))
(assert (x426 (- x587 x410)))
(assert (= (and (not x20) x414) x638))
(assert (x426 (- x378 x621)))
(assert (x366 x504 x461 x51 x143))
(assert (x228 x98 x33 x504 x461))
(assert (x228 x92 x271 x504 x461))
(assert (x366 x621 x587 x92 x271))
(assert (x570 x461 (- x504 x388)))
(assert (x570 x393 (- x253 x461)))
(assert (= 606387804 (x299 (x335 606387804))))
(assert (x366 x518 x23 x621 x587))
(assert (x228 x377 x604 x621 x587))
(assert (= x279 (and x427 (not x176))))
(assert (= (and x341 x464) x602))
(assert (x366 x504 x461 x604 x377))
(assert (x228 x198 x141 x92 x271))
(assert (x228 x377 x604 x393 x253))
(assert (x570 x461 (- x504 x141)))
(assert (x315 x484))
(assert (x561 x165))
(assert (x561 x383))
(assert (x561 x69))
(assert (x426 (- x604 x621)))
(assert (= (=> (or x20 (not x20)) x568) x543))
(assert (x366 x393 x253 x51 x143))
(assert (x426 (- x141 x423)))
(assert (= x97 (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x291) (>= x291 0) (= x317 x398) (<= x78 1461501637330902918203684832716283019655932542975) (= x631 3207937467) (<= x154 1461501637330902918203684832716283019655932542975) (< x631 3995103268) (>= x398 0) (= x448 x291) (= x91 (< 0 (x303 (x528 x300)))) (>= x636 0) (> x300 0) (>= x154 0) (= (x303 (x528 x300)) x634) (= x295 x636) (>= 1461501637330902918203684832716283019655932542975 x398) (>= x202 0) (= x309 (x15 (x528 x78) (x335 0) 0)) (>= 1461501637330902918203684832716283019655932542975 x300) x91 (< 0 x634) (<= x636 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 3207937467 x631)) (<= 0 x383) (>= 1461501637330902918203684832716283019655932542975 x202) (= (x374 (x528 x300)) x383) (not (< x631 2094874590)) (= x78 x448) (= x636 (x524 x309))) (and (and (= x295 x206) (= x24 x63) (> x57 0) (= x45 1161348331) (= (x15 (x528 x109) x162 0) x433) (= x59 x154) (<= 0 x63) (> 1710941022 x45) (<= x109 1461501637330902918203684832716283019655932542975) (= x109 x448) (= x257 (= x481 x437)) (= (x15 (x528 x59) (x335 1) 0) x162) (= x57 (x303 (x528 x300))) (> 2094874590 x45) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x63) (= x448 x481) (not (< x45 1161348331)) (<= x59 1461501637330902918203684832716283019655932542975) (= x437 x154) (= x63 (x74 x433))) (and (and (and (>= x578 0) (= (x608 192) x380) (<= 0 x382) (<= 0 x329) (> x168 0) (>= x619 0) (= x294 x618) (= (x15 (x528 x618) (x335 2) 0) x87) (= x329 (x523 x318)) (= (x608 160) x482) (= (x608 224) x353) (= x553 x598) (= x151 (x608 256)) (= 1 x183) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x619) (> 3995103268 x54) (= x201 x619) (= x455 x618) (= (= x165 x329) x55) (= (x402 x250 1) x26) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x578) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x316) (not (= x54 3207937467)) (= x619 (x29 x87)) (= x578 (x225 x569)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x382) (>= x316 0) x55 (not (< x54 3207937467)) (= x168 (x303 (x528 x300))) (= x625 (or x255 x240)) (not (< x54 2094874590)) (= (x608 128) x152) (= x664 (x526 x294)) (= x134 (= x201 x664)) (= x569 (x402 x26 1)) (= 3647180086 x54) (= (x367 x26) x382) (= x316 (x131 x250)) (= x318 (x402 x87 1)) (= x240 (= x598 1)) (<= x329 115792089237316195423570985008687907853269984665640564039457584007913129639935) x134 (= (x567 x618) x165) (= (x402 x318 1) x250)) (and (and (and (< x529 1161348331) (= x50 (x15 (x528 x354) x218 0)) (= x292 (x368 128)) (not (= x529 436938878)) (>= 1461501637330902918203684832716283019655932542975 x354) (= (x585 x50) x655) (= x354 x202) (= (x303 (x528 x300)) x646) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x498) (= 606387804 x529) (= x430 x455) (= (x15 (x528 x430) (x335 3) 0) x218) (= x651 x211) (<= x655 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x655 0) (= x102 (x402 x50 1)) (< x529 2094874590) (<= 0 x498) (< x529 699302164) (= x261 x640) (> x646 0) (= (x368 160) x545) (not (= x529 558109909)) (= x498 (x508 x102)) (not (= x529 231365057))) (and (or (and (not x666) (and (= x80 x211) (= x373 x357) (= x373 x80) (= x189 x363))) (and (and (= x642 x357) (= x212 x363) (= x352 (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x256) x256 (- x256 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x450 x256) (= x239 x8) (= (- x8 x352) x212) (= x211 x239)) x666)) (and (= x292 x575) (= x129 x154) (= x202 x351) (= x77 x545) (= (not (= x129 x351)) x666)))) (and (not (= x262 558109909)) (<= x630 1461501637330902918203684832716283019655932542975) (< x262 699302164) (= x380 x25) (= x138 x482) (> 2094874590 x262) (= x152 x365) (= 606387804 x262) (= x154 x630) (>= x637 0) (<= 0 x654) (= x151 x203) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x637) (> x12 0) (= x457 (x402 x132 1)) (= x455 x484) (= x379 x353) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x654) (not (= 231365057 x262)) (= (x303 (x528 x300)) x12) (= x190 (x15 (x528 x484) (x335 3) 0)) (not (= x262 436938878)) (= x637 (x508 x457)) (= (x37 128) x651) (= x261 (x37 160)) (= x132 (x15 (x528 x630) x190 0)) (> 1161348331 x262) (= x654 (x585 x132))))) (and (= x424 x24) (= x28 x448) (= (= x85 x38) x255) (= x456 x553) (= x390 1) (> 2094874590 x64) (<= x456 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x456 (x74 x224)) (= (x303 (x528 x300)) x584) (= x297 x202) (= (x15 (x528 x297) (x335 1) 0) x466) (= x641 (or x573 x257)) (= x573 (= 1 x424)) (= x448 x38) (>= 1461501637330902918203684832716283019655932542975 x28) (>= x456 0) (< x64 1710941022) (= x224 (x15 (x528 x28) x466 0)) (= x64 1161348331) (< 0 x584) (not (< x64 1161348331)) (= x202 x85) (<= x297 1461501637330902918203684832716283019655932542975))))) x265)))
(assert (and (= (x192 27 3) 81) (= 81 (x192 9 9)) (= (x192 3 3) 9) (= 27 (x192 9 3))))
(assert (x561 x30))
(assert (x228 x141 x198 x410 x388))
(assert (x561 x407))
(assert (x366 x461 x504 x604 x377))
(assert (x366 x198 x141 x271 x92))
(assert (= x394 (and x106 x597)))
(assert (x570 x198 (- x141 x393)))
(assert (x561 x174))
(assert (x570 x92 (- x271 x621)))
(assert (x426 (- x198 x249)))
(assert (x570 x393 (- x253 x621)))
(assert (x561 x295))
(assert (x366 x393 x253 x582 x249))
(assert (x366 x141 x198 x604 x377))
(assert (x366 x621 x587 x271 x92))
(assert (x366 x587 x621 x23 x518))
(assert (x561 x223))
(assert (x570 x509 (- x423 x461)))
(assert (x570 x587 (- x621 x33)))
(assert (x570 x461 (- x504 x518)))
(assert (x228 x393 x253 x378 x339))
(assert (x570 x33 (- x98 x621)))
(assert (x561 x503))
(assert (= (=> (= true x20) x543) x177))
(assert (x366 x410 x388 x504 x461))
(assert (x366 x410 x388 x621 x587))
(assert (= (x299 (x528 x245)) x245))
(assert (x366 x582 x249 x461 x504))
(assert (x366 x504 x461 x393 x253))
(assert (x426 x393))
(assert (x366 x393 x253 x604 x377))
(assert (x570 x621 (- x587 x51)))
(assert (x561 x385))
(assert (= x140 (x299 (x528 x140))))
(assert (x570 x98 (- x33 x621)))
(assert (x561 x575))
(assert (x561 x578))
(assert (x561 x525))
(assert (= (and x229 x251) x298))
(assert (x426 (- x141 x271)))
(assert (x426 (- x388 x198)))
(assert (x366 x253 x393 x198 x141))
(assert (x426 (- x587 x393)))
(assert (x570 x604 (- x377 x461)))
(assert (x570 x198 (- x141 x621)))
(assert (x366 x604 x377 x253 x393))
(assert (x561 x437))
(assert (x561 x120))
(assert (x570 x51 (- x143 x141)))
(assert (x366 x388 x410 x198 x141))
(assert (x570 x393 (- x253 x249)))
(assert (x228 x623 x663 x504 x461))
(assert (x366 x623 x663 x461 x504))
(assert (x228 x253 x393 x378 x339))
(assert (x426 (- x393 x410)))
(assert (x570 x378 (- x339 x393)))
(assert (x570 x198 (- x141 x410)))
(assert (x228 x141 x198 x504 x461))
(assert (x570 x504 (- x461 x198)))
(assert (x228 x621 x587 x92 x271))
(assert (x561 x5))
(assert (x426 (- x388 x461)))
(assert (x561 x90))
(assert (x366 x604 x377 x198 x141))
(assert (x228 x621 x587 x410 x388))
(assert (x228 x249 x582 x393 x253))
(assert (x426 (- x393 x141)))
(assert (x570 x509 (- x423 x504)))
(assert (x426 (- x461 x378)))
(assert (x366 x198 x141 x92 x271))
(assert (= 3995103268 (x299 (x335 3995103268))))
(assert (x426 (- x388 x253)))
(assert (x426 (- x33 x461)))
(assert (x561 x463))
(assert (x426 (- x621 x339)))
(assert (x561 x353))
(assert (x366 x504 x461 x509 x423))
(assert (x561 x28))
(assert (x366 x410 x388 x141 x198))
(assert (x570 x663 (- x623 x141)))
(assert (x561 x301))
(assert (x228 x461 x504 x393 x253))
(assert (x366 x623 x663 x198 x141))
(assert (x561 x116))
(assert (x570 x423 (- x509 x461)))
(assert (x366 x339 x378 x393 x253))
(assert (x228 x23 x518 x393 x253))
(assert (x366 x461 x504 x92 x271))
(assert (x366 x271 x92 x253 x393))
(assert (= (x335 1461501637330902918203684832716283019655932542975) (x528 1461501637330902918203684832716283019655932542975)))
(assert (x426 (- x461 x393)))
(assert (x366 x587 x621 x388 x410))
(assert (x570 x504 (- x461 x271)))
(assert (x426 (- x621 x509)))
(assert (x570 x339 (- x378 x461)))
(assert (x426 (- x98 x198)))
(assert (x570 x504 (- x461 x377)))
(assert (x228 x141 x198 x51 x143))
(assert (x426 (- x461 x423)))
(assert (x426 (- x621 x377)))
(assert (x426 (- x621 x249)))
(assert (x561 x354))
(assert (x570 x663 (- x623 x587)))
(assert (x366 x621 x587 x509 x423))
(assert (= (=> (= true x20) x543) x519))
(assert (x228 x393 x253 x623 x663))
(assert (x366 x271 x92 x393 x253))
(assert (x39 x493))
(assert (x426 (- x393 x582)))
(assert (x561 x45))
(assert (= x618 (x299 (x528 x618))))
(assert (x366 x504 x461 x92 x271))
(assert (x561 x268))
(assert (x570 x604 (- x377 x393)))
(assert (= (=> (and (and (= x76 (not (= x268 x6))) (= x202 x6) (= x268 x154) (= (ite x666 x363 x357) x468)) (or (and (and (= x431 x510) (= x200 x640) (= x510 x200) (= x537 x285)) (not x76)) (and x76 (and (= x534 (ite (<= x275 57896044618658097711785492504343953926634992332820282019728792003956564819967) x275 (- x275 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x46 x431) (= x285 x434) (= x434 (- x267 x534)) (= x549 x267) (= x640 x549) (= x652 x275))))) x489) x265))
(assert (x366 x141 x198 x509 x423))
(assert (x570 x393 (- x253 x377)))
(assert (x426 (- x253 x504)))
(assert (=> (<= x28 10000) (= (x528 x28) (x335 x28))))
(assert (x366 x461 x504 x582 x249))
(assert (x366 x33 x98 x141 x198))
(assert (x426 (- x621 x23)))
(assert (x561 x647))
(assert (x570 x461 (- x504 x582)))
(assert (x366 x504 x461 x271 x92))
(assert (x426 (- x587 x663)))
(assert (x426 (- x504 x509)))
(assert (x570 x621 (- x587 x388)))
(assert (x366 x587 x621 x509 x423))
(assert (x561 x145))
(assert (x228 x253 x393 x623 x663))
(assert (x366 x141 x198 x461 x504))
(assert (x366 x393 x253 x388 x410))
(assert (x561 x559))
(assert (x228 x393 x253 x51 x143))
(assert (x570 x141 (- x198 x423)))
(assert (x426 (- x509 x393)))
(assert (x366 x92 x271 x141 x198))
(assert (x366 x339 x378 x621 x587))
(assert (x228 x198 x141 x518 x23))
(assert (x426 (- x504 x518)))
(assert (x228 x339 x378 x393 x253))
(assert (x366 x253 x393 x461 x504))
(assert (x366 x504 x461 x623 x663))
(assert (x570 x377 (- x604 x393)))
(assert (x570 x253 (- x393 x377)))
(assert (x426 (- x141 x621)))
(assert (x228 x504 x461 x410 x388))
(assert (x570 x423 (- x509 x504)))
(assert (x561 x150))
(assert (x561 x173))
(assert (x561 x260))
(assert (x570 x198 (- x141 x143)))
(assert (x570 x623 (- x663 x141)))
(assert (x228 x51 x143 x504 x461))
(assert (x366 x504 x461 x587 x621))
(assert (x366 x198 x141 x51 x143))
(assert (x426 (- x339 x393)))
(assert (x426 (- x198 x582)))
(assert (x366 x663 x623 x461 x504))
(assert (x561 x41))
(assert (x570 x663 (- x623 x621)))
(assert (x366 x393 x253 x504 x461))
(assert (x366 x410 x388 x461 x504))
(assert (x570 x143 (- x51 x504)))
(assert (x561 x588))
(assert (x426 (- x141 x33)))
(assert (x570 x98 (- x33 x141)))
(assert (x426 (- x253 x518)))
(assert (x426 (- x509 x198)))
(assert (x426 (- x461 x143)))
(assert (x366 x410 x388 x393 x253))
(assert (x426 (- x51 x587)))
(assert (x366 x587 x621 x339 x378))
(assert (x570 x377 (- x604 x253)))
(assert (x561 x113))
(assert (= x472 (and x283 x17)))
(assert (x426 (- x33 x393)))
(assert (x426 (- x423 x461)))
(assert (x561 x186))
(assert (x570 x621 (- x587 x518)))
(assert (x426 (- x587 x23)))
(assert (x561 x89))
(assert (x366 x393 x253 x98 x33))
(assert (x426 (- x388 x504)))
(assert (x228 x198 x141 x582 x249))
(assert (x366 x518 x23 x587 x621))
(assert (x366 x393 x253 x339 x378))
(assert (x426 (- x23 x461)))
(assert (x228 x604 x377 x141 x198))
(assert (x570 x339 (- x378 x198)))
(assert (x561 x307))
(assert (x570 x621 (- x587 x33)))
(assert (x366 x198 x141 x604 x377))
(assert (x570 x249 (- x582 x621)))
(assert (x426 (- x461 x253)))
(assert (x426 (- x461 x271)))
(assert (x570 x143 (- x51 x393)))
(assert (= (and x643 x438) x296))
(assert (x561 x326))
(assert (x561 x536))
(assert (x570 x33 (- x98 x504)))
(assert (x561 x126))
(assert (x426 (- x410 x504)))
(assert (= (and x70 x358) x478))
(assert (x426 (- x518 x141)))
(assert (x366 x249 x582 x141 x198))
(assert (x426 (- x504 x377)))
(assert (x228 x253 x393 x604 x377))
(assert (x570 x141 (- x198 x621)))
(assert (x366 x253 x393 x339 x378))
(assert (x570 x198 (- x141 x23)))
(assert (x366 x518 x23 x253 x393))
(assert (x561 x529))
(assert (x570 x198 (- x141 x249)))
(assert (x570 x141 (- x198 x604)))
(assert (x561 x365))
(assert (= (and x666 x348) x3))
(assert (x561 x461))
(assert (x561 x205))
(assert (x366 x143 x51 x198 x141))
(assert (x570 x388 (- x410 x141)))
(assert (x366 x23 x518 x621 x587))
(assert (x570 x393 (- x253 x339)))
(assert (x426 (- x410 x141)))
(assert (x561 x455))
(assert (x570 x623 (- x663 x621)))
(assert (x570 x410 (- x388 x198)))
(assert (x366 x587 x621 x33 x98))
(assert (x366 x198 x141 x98 x33))
(assert (x426 (- x249 x461)))
(assert (x366 x143 x51 x253 x393))
(assert (x366 x33 x98 x587 x621))
(assert (= (x335 2746363844) (x528 2746363844)))
(assert (=> (<= x484 10000) (= (x528 x484) (x335 x484))))
(assert (x570 x621 (- x587 x378)))
(assert (= (and x36 x312) x358))
(assert (x570 x410 (- x388 x393)))
(assert (x366 x504 x461 x621 x587))
(assert (x570 x141 (- x198 x249)))
(assert (x561 x245))
(assert (x426 x504))
(assert (x366 x271 x92 x587 x621))
(assert (x561 x329))
(assert (x366 x621 x587 x339 x378))
(assert (x426 (- x339 x198)))
(assert (x426 (- x504 x198)))
(assert (x561 x258))
(assert (x530 x301 x627))
(assert (x426 (- x339 x461)))
(assert (x228 x621 x587 x393 x253))
(assert (x426 (- x461 x249)))
(assert (x570 x98 (- x33 x504)))
(assert (x570 x461 (- x504 x621)))
(assert (x570 x253 (- x393 x604)))
(assert (x366 x587 x621 x141 x198))
(assert (x530 x205 x453))
(assert (x570 x423 (- x509 x621)))
(assert (x570 x249 (- x582 x198)))
(assert (x570 x621 (- x587 x504)))
(assert (x228 x461 x504 x621 x587))
(assert (x570 x92 (- x271 x587)))
(assert (x570 x587 (- x621 x378)))
(assert (x561 x286))
(assert (x228 x339 x378 x141 x198))
(assert (x366 x461 x504 x198 x141))
(assert (x366 x253 x393 x377 x604))
(assert (x366 x378 x339 x141 x198))
(assert (x426 (- x249 x587)))
(assert (x570 x504 (- x461 x423)))
(assert (x366 x253 x393 x423 x509))
(assert (x426 (- x253 x410)))
(assert (x228 x23 x518 x621 x587))
(assert (x561 x226))
(assert (x228 x504 x461 x141 x198))
(assert (x228 x141 x198 x378 x339))
(assert (x570 x518 (- x23 x621)))
(assert (= (+ (x299 x88) 1) (x299 (x402 x88 1))))
(assert (x570 x509 (- x423 x621)))
(assert (x366 x249 x582 x504 x461))
(assert (x426 (- x141 x509)))
(assert (x570 x249 (- x582 x141)))
(assert (x570 x253 (- x393 x249)))
(assert (x570 x377 (- x604 x198)))
(assert (x561 x25))
(assert (= (and (not x76) x507) x488))
(assert (x570 x461 (- x504 x23)))
(assert (= x107 (and x36 (not x312))))
(assert (x570 x621 (- x587 x393)))
(assert (x570 x51 (- x143 x253)))
(assert (x366 x198 x141 x587 x621))
(assert (x570 x623 (- x663 x504)))
(assert (x570 x271 (- x92 x253)))
(assert (x561 x411))
(assert (x366 x621 x587 x582 x249))
(assert (x228 x249 x582 x141 x198))
(assert (x228 x504 x461 x621 x587))
(assert (x570 x98 (- x33 x253)))
(assert (x426 (- x198 x33)))
(assert (x561 x317))
(assert (x426 (- x253 x249)))
(assert (x39 x627))
(assert (x426 (- x141 x604)))
(assert (x426 (- x98 x621)))
(assert (x570 x23 (- x518 x504)))
(assert (x426 (- x143 x198)))
(assert (x228 x393 x253 x509 x423))
(assert (x366 x339 x378 x198 x141))
(assert (x366 x141 x198 x339 x378))
(assert (x426 (- x621 x518)))
(assert (x366 x623 x663 x587 x621))
(assert (x366 x393 x253 x141 x198))
(assert (x426 (- x393 x518)))
(assert (x228 x587 x621 x393 x253))
(assert (x366 x198 x141 x388 x410))
(assert (x228 x143 x51 x504 x461))
(assert (x366 x33 x98 x504 x461))
(assert (x570 x198 (- x141 x461)))
(assert (x426 (- x98 x393)))
(assert (x570 x198 (- x141 x623)))
(assert (x570 x623 x663))
(assert (x570 x461 (- x504 x271)))
(assert (x570 x253 (- x393 x98)))
(assert (x570 x461 (- x504 x377)))
(assert (x290 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x426 (- x604 x504)))
(assert (x570 x253 (- x393 x143)))
(assert (x570 x33 (- x98 x198)))
(assert (x366 x198 x141 x663 x623))
(assert (x561 x109))
(assert (x366 x393 x253 x621 x587))
(assert (x366 x393 x253 x143 x51))
(assert (x228 x393 x253 x504 x461))
(assert (x426 (- x393 x509)))
(assert (= (x335 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x528 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x366 x587 x621 x423 x509))
(assert (x561 x668))
(assert (x570 x393 (- x253 x423)))
(assert (x426 (- x143 x253)))
(assert (x426 (- x461 x388)))
(assert (x366 x518 x23 x141 x198))
(assert (x570 x378 (- x339 x141)))
(assert (x570 x253 (- x393 x141)))
(assert (x426 (- x92 x461)))
(assert (x426 (- x587 x339)))
(assert (x570 x141 (- x198 x388)))
(assert (x366 x504 x461 x339 x378))
(assert (x426 x377))
(assert (x426 (- x504 x423)))
(assert (x366 x23 x518 x461 x504))
(assert (x570 x504 x461))
(assert (x426 (- x33 x198)))
(assert (x426 (- x378 x198)))
(assert (x366 x461 x504 x143 x51))
(assert (x570 x587 (- x621 x393)))
(assert (x570 x253 (- x393 x23)))
(assert (x228 x623 x663 x393 x253))
(assert (x228 x92 x271 x621 x587))
(assert (x426 (- x143 x393)))
(assert (x426 (- x141 x339)))
(assert (x570 x504 (- x461 x51)))
(assert (x228 x461 x504 x518 x23))
(assert (x366 x509 x423 x393 x253))
(assert (x228 x621 x587 x509 x423))
(assert (x570 x587 (- x621 x461)))
(assert (x570 x623 (- x663 x198)))
(assert (x570 x253 (- x393 x509)))
(assert (x228 x621 x587 x623 x663))
(assert (= (and x346 x130) x643))
(assert (x366 x98 x33 x393 x253))
(assert (x366 x198 x141 x410 x388))
(assert (x426 (- x388 x621)))
(assert (x366 x23 x518 x504 x461))
(assert (x366 x587 x621 x378 x339))
(assert (x426 (- x504 x23)))
(assert (x426 (- x339 x141)))
(assert (= (+ (x299 x26) 1) (x299 (x402 x26 1))))
(assert (= (x299 (x335 3207937467)) 3207937467))
(assert (x366 x587 x621 x504 x461))
(assert (x366 x504 x461 x98 x33))
(assert (= x514 (=> (and (= x341 (= 0 x188)) (< 0 x330) (= x154 x555) (>= 1461501637330902918203684832716283019655932542975 x163) (>= x82 0) (= x326 x73) (= x361 x441) (= x163 x657) (>= 1461501637330902918203684832716283019655932542975 x16) (= x441 x525) (= x155 x140) (>= x163 0) (= x185 x497) (= x330 (x303 (x528 x300))) (= x555 x245) (= x412 x202) (= x56 x185) (<= 0 x16) (<= x82 1461501637330902918203684832716283019655932542975) (= x237 (ite x118 x247 x622)) (= x450 x361) (= x155 x455) (= x497 x652) (= x326 x412) (= x82 x448) (= x186 x657)) (and (=> (and x341 (and (> 3207937467 x515) (not (= x515 2094874590)) (= 2265735533 x515) (= x245 x550) (= x140 x122) (= x502 (= x245 x555)) (not (> 2094874590 x515)) (< x515 2746363844))) (and (=> (and x502 (and (= x647 x73) (= x312 (= x73 x326)))) (and (=> (and (= true x20) (not x312)) x543) (=> (and x312 (and (<= x336 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x56 x404) (= (x15 (x528 x245) x304 0) x88) (= x336 (x585 x88)) (>= x336 0) (= (and (= true (<= x525 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x525)) x96) (= x574 (x589 (- x336 x441))) (= (x15 (x528 x140) (x335 3) 0) x58) (= x277 (x15 (x528 x73) x58 0)) (= (x15 (x528 x140) (x335 3) 0) x304) (= x71 (x15 (x528 x140) (x335 2) 0)) (= x525 x264) (= x70 (ite (not x96) (not x96) (not (> x574 x336)))))) (and (=> (and (and (= x513 (or (and (> 0 x264) (= (<= x264 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x264))) (= x406 (ite (not x513) (not x513) (not (< x574 x336))))) x70) (and (=> (not x406) x177) (=> (and x406 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x347) (= (x508 x458) x347) (= (x589 (- x347 x56)) x171) (>= x347 0) (= x597 (ite (not x100) (not x100) (not (< x347 x171)))) (= (x402 x88 1) x458) (= (and (= true (<= x404 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x404)) x100))) (and (=> (not x597) x177) (=> (and x597 (and (= (or (and (< x404 0) (= (<= x404 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x404 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x600) (= x340 (ite (not x600) (not x600) (not (< x171 x347)))))) (and (=> (not x340) x177) (=> (and (and (<= 0 x327) (= x560 (ite (not x147) (not x147) (not (< x327 x276)))) (= (x27 (+ x525 x327)) x276) (<= x327 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x327 (x121 x277)) (= x147 (or (and (= (<= x264 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x264)) (> x264 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x340) (and (=> (and x560 (and (= x342 (and (< 0 x264) (= true (<= x264 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (ite (not x342) (not x342) (not (< x276 x327))) x229))) (and (=> (not x229) x177) (=> (and (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x404) (and (= true (<= x404 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x404))) x214) (= (x27 (+ x56 x235)) x559) (<= 0 x235) (= (x402 x277 1) x52) (<= x235 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x235 (x13 x52)) (= (ite (not x214) (not x214) (not (> x559 x235))) x243)) x229) (and (=> (and x243 (and (= (and (= true (<= x404 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x404)) x571) (= x346 (ite (not x571) (not x571) (not (> x235 x559)))))) (and (=> (not x346) x177) (=> (and (and (= (x542 x301 x627) x539) (>= x461 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x461) (= (= 0 x504) x533) (= x252 (x567 x140)) (>= x504 0) (= (x609 115792089237316195423570985008687907853269984665640564039457584007913129639935 x504) x199) (= x99 (= x252 x461)) x99 (= (= x539 0) x438) (= x242 (x402 x71 1)) (= (x523 x242) x461) (<= x504 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x627 (ite (> x461 x199) 1 0)) (= (x322 x458) x504) (= (ite (not x533) 1 0) x301)) x346) (and (=> (not x438) x403) (=> (and x438 (and (= (= x587 x142) x311) (>= x587 0) (= x587 (x523 x242)) (= x463 (x609 115792089237316195423570985008687907853269984665640564039457584007913129639935 x621)) (= (ite (< x463 x587) 1 0) x453) (= (x542 x205 x453) x213) (= (x567 x140) x142) (= (x356 (x192 x504 x461)) x616) (= (x322 x52) x621) (= x656 (= 0 x213)) (= x205 (ite (not x144) 1 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x621) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x587) (= x144 (= 0 x621)) (>= x621 0) x311)) (and (=> (and (and (= x307 (x74 x506)) (= x452 (= x245 x448)) (= (ite x572 1 0) x5) (>= x307 0) (= (ite x563 1 0) x244) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x226) (= x554 (> x208 0)) (= (x15 (x528 x448) x401 0) x506) (= x401 (x15 (x528 x73) (x335 1) 0)) (= x208 (x542 x11 x215)) (= x226 (x74 x9)) (= x215 (ite (or x572 x563) 1 0)) (= x170 (x15 (x528 x245) (x335 1) 0)) (= (x15 (x528 x448) x170 0) x9) (= x11 (ite (or x86 x452) 1 0)) (<= x307 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x307 1) x572) (<= 0 x226) (= (= x73 x448) x563) (= (ite x86 1 0) x49) (= x86 (= 1 x226)) (= x62 (ite x452 1 0)) (= (x356 (x192 x621 x587)) x362)) x656) (and (=> (and (and (= x659 (x402 x242 1)) (= (= x605 0) x176) (<= x141 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x131 x659) x198) (= (ite (> x198 x69) 1 0) x588) (= x493 (ite (not x522) 1 0)) (= (= 0 x141) x522) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x198) (= (x542 x493 x588) x605) (= (x580 x88) x141) (>= x141 0) (= x69 (x609 115792089237316195423570985008687907853269984665640564039457584007913129639935 x141)) (>= x198 0)) x554) (and (=> (and (and (= x266 (> x616 x611)) (= x611 (x356 (x192 x141 x198)))) x176) (and (=> x266 x519) (=> (and (and (= x253 (x131 x659)) (= (x580 x277) x393) (>= x393 0) (<= 0 x253) (= x227 (x542 x331 x503)) (= x331 (ite (not x65) 1 0)) (= (x609 115792089237316195423570985008687907853269984665640564039457584007913129639935 x393) x422) (= (= 0 x393) x65) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x253) (= (= 0 x227) x115) (= x503 (ite (> x253 x422) 1 0)) (<= x393 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x266)) (and (=> (and (and (= x17 (< x288 x362)) (= x288 (x356 (x192 x393 x253)))) x115) (and (=> (and (and (= x436 (< 0 x43)) (>= x219 0) (= x104 (= x219 0)) (= x349 (x225 x445)) (= (x322 x458) x219) (= (ite (or x104 x287) 1 0) x43) (<= 0 x349) (= x445 (x402 x659 2)) (<= x349 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (not (> x349 x616)) x287) (= x157 (ite x104 1 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x219) (= (ite x287 1 0) x72)) (not x17)) (and (=> (and (and (= x527 (x322 x52)) (= (ite x230 1 0) x41) (<= x527 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (not (> x174 x362)) x232) (<= 0 x527) (<= x174 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x174) (= (ite (or x232 x230) 1 0) x665) (= (= 0 x527) x230) (= x328 (< 0 x665)) (= (x225 x445) x174) (= (ite x232 1 0) x612)) x436) (and (=> (not x328) x519) (=> (and x328 (= false x20)) x543))) (=> (not x436) x519))) (=> x17 x519))) (=> (not x115) x403))))) (=> (not x176) x403))) (=> (not x554) x519))) (=> (not x656) x403))))))) (=> (not x243) x177))))) (=> (not x560) x177))))))))) (=> (not x70) x177))))) (=> (and (= x20 true) (not x502)) x543))) (=> (and (= x20 true) (not x341)) x543)))))
(assert (x570 x509 (- x423 x253)))
(assert (x570 x378 (- x339 x587)))
(assert (x228 x587 x621 x410 x388))
(assert (x366 x623 x663 x504 x461))
(assert (x366 x253 x393 x92 x271))
(assert (x561 x605))
(assert (x366 x582 x249 x587 x621))
(assert (x561 x217))
(assert (x570 x388 (- x410 x504)))
(assert (x366 x423 x509 x198 x141))
(assert (x570 x198 (- x141 x518)))
(assert (x570 x604 (- x377 x198)))
(assert (x561 x122))
(assert (x366 x621 x587 x378 x339))
(assert (x366 x623 x663 x141 x198))
(assert (x570 x509 x423))
(assert (x426 (- x393 x623)))
(assert (x366 x587 x621 x623 x663))
(assert (x366 x461 x504 x98 x33))
(assert (x366 x504 x461 x582 x249))
(assert (x570 x621 x587))
(assert (x570 x253 (- x393 x339)))
(assert (x426 (- x271 x393)))
(assert (x366 x461 x504 x388 x410))
(assert (x570 x339 (- x378 x393)))
(assert (x366 x51 x143 x504 x461))
(assert (x366 x393 x253 x378 x339))
(assert (x561 x497))
(assert (x39 x331))
(assert (x366 x423 x509 x393 x253))
(assert (x426 (- x253 x582)))
(assert (x228 x253 x393 x621 x587))
(assert (x561 x592))
(assert (x366 x253 x393 x249 x582))
(assert (x570 x461 (- x504 x143)))
(assert (x561 x587))
(assert (x228 x504 x461 x98 x33))
(assert (x561 x211))
(assert (= (=> (= true x20) x543) x403))
(assert (x561 x154))
(assert (x561 x644))
(assert (x366 x504 x461 x23 x518))
(assert (x366 x461 x504 x423 x509))
(assert (x366 x378 x339 x253 x393))
(assert (x366 x587 x621 x582 x249))
(assert (x561 x53))
(assert (x228 x271 x92 x621 x587))
(assert (x570 x587 (- x621 x410)))
(assert (x366 x253 x393 x604 x377))
(assert (x366 x518 x23 x393 x253))
(assert (= (x528 699302164) (x335 699302164)))
(assert (x426 x663))
(assert (x426 (- x143 x461)))
(assert (x228 x604 x377 x504 x461))
(assert (= 699302164 (x299 (x335 699302164))))
(assert (x561 x347))
(assert (x228 x393 x253 x621 x587))
(assert (x426 (- x198 x587)))
(assert (x561 x338))
(assert (x570 x587 (- x621 x509)))
(assert (x426 (- x92 x587)))
(assert (x570 x509 (- x423 x587)))
(assert (x228 x98 x33 x393 x253))
(assert (x570 x604 (- x377 x504)))
(assert (x426 (- x141 x249)))
(assert (x570 x504 (- x461 x388)))
(assert (x426 x378))
(assert (x561 x334))
(assert (x366 x393 x253 x509 x423))
(assert (x570 x253 (- x393 x621)))
(assert (x426 (- x51 x393)))
(assert (=> (<= x78 10000) (= (x335 x78) (x528 x78))))
(assert (x366 x388 x410 x253 x393))
(assert (x561 x256))
(assert (x228 x410 x388 x621 x587))
(assert (x366 x393 x253 x23 x518))
(assert (x570 x461 (- x504 x663)))
(assert (x530 x331 x503))
(assert (= (+ (x299 x318) 1) (x299 (x402 x318 1))))
(assert (x426 (- x141 x504)))
(assert (x366 x393 x253 x623 x663))
(assert (x426 x141))
(assert (x366 x621 x587 x410 x388))
(assert (x570 x378 (- x339 x621)))
(assert (x561 x379))
(assert (x426 (- x253 x423)))
(assert (x561 x336))
(assert (x561 x545))
(assert (x561 x430))
(assert (x366 x461 x504 x377 x604))
(assert (x228 x504 x461 x51 x143))
(assert (= (x335 1710941022) (x528 1710941022)))
(assert (x426 (- x249 x504)))
(assert (x426 (- x271 x504)))
(assert (x570 x582 (- x249 x393)))
(assert (x366 x388 x410 x587 x621))
(assert (x570 x504 (- x461 x587)))
(assert (x570 x198 (- x141 x378)))
(assert (x426 (- x198 x377)))
(assert (x315 x109))
(assert (x561 x123))
(assert (x426 (- x141 x663)))
(assert (x315 x59))
(assert (=> (>= 10000 x245) (= (x335 x245) (x528 x245))))
(assert (x366 x518 x23 x198 x141))
(assert (x426 (- x198 x253)))
(assert (x426 (- x461 x518)))
(assert (x426 (- x587 x582)))
(assert (x366 x253 x393 x23 x518))
(assert (x561 x549))
(assert (x366 x141 x198 x410 x388))
(assert (x426 (- x141 x377)))
(assert (x561 x201))
(assert (x366 x410 x388 x198 x141))
(assert (x366 x582 x249 x393 x253))
(assert (x366 x141 x198 x388 x410))
(assert (x570 x518 (- x23 x393)))
(assert (x228 x587 x621 x51 x143))
(assert (x426 (- x504 x249)))
(assert (x426 x518))
(assert (x366 x621 x587 x51 x143))
(assert (x315 x618))
(assert (x570 x621 (- x587 x377)))
(assert (x561 x456))
(assert (x290 x141))
(assert (x366 x393 x253 x271 x92))
(assert (x561 x551))
(assert (x228 x663 x623 x393 x253))
(assert (x570 x339 (- x378 x587)))
(assert (x366 x141 x198 x51 x143))
(assert (= (x299 (x528 x430)) x430))
(assert (x561 x493))
(assert (= (x335 436938878) (x528 436938878)))
(assert (x426 (- x504 x582)))
(assert (x570 x587 (- x621 x518)))
(assert (x561 x404))
(assert (x366 x587 x621 x410 x388))
(assert (x228 x393 x253 x98 x33))
(assert (x366 x141 x198 x23 x518))
(assert (x366 x141 x198 x249 x582))
(assert (x315 x140))
(assert (x366 x377 x604 x621 x587))
(assert (x426 (- x663 x393)))
(assert (x366 x253 x393 x623 x663))
(assert (x228 x393 x253 x92 x271))
(assert (x426 (- x339 x253)))
(assert (x426 (- x582 x141)))
(assert (x426 (- x504 x143)))
(assert (x570 x378 (- x339 x504)))
(assert (x426 x621))
(assert (x228 x143 x51 x621 x587))
(assert (x426 (- x423 x621)))
(assert (x228 x663 x623 x141 x198))
(assert (x561 x259))
(assert (x366 x198 x141 x461 x504))
(assert (x228 x587 x621 x582 x249))
(assert (x228 x33 x98 x621 x587))
(assert (x426 (- x587 x271)))
(assert (x570 x253 (- x393 x504)))
(assert (x561 x203))
(assert (x366 x461 x504 x587 x621))
(assert (x228 x621 x587 x51 x143))
(assert (x426 (- x143 x587)))
(assert (x228 x461 x504 x92 x271))
(assert (x570 x621 (- x587 x23)))
(assert (x366 x388 x410 x504 x461))
(assert (= (x299 (x402 x50 1)) (+ 1 (x299 x50))))
(assert (x366 x253 x393 x504 x461))
(assert (x570 x587 (- x621 x623)))
(assert (x561 x129))
(assert (=> (>= 10000 x297) (= (x528 x297) (x335 x297))))
(assert (x561 x191))
(assert (x570 x587 (- x621 x604)))
(assert (x570 x393 (- x253 x623)))
(assert (x426 (- x623 x587)))
(assert (x570 x143 (- x51 x198)))
(assert (x426 x51))
(assert (x228 x623 x663 x141 x198))
(assert (x426 (- x587 x249)))
(assert (x426 x98))
(assert (=> (<= x140 10000) (= (x528 x140) (x335 x140))))
(assert (x426 x604))
(assert (x366 x377 x604 x587 x621))
(assert (x570 x621 (- x587 x423)))
(assert (= (=> (and (or (and (and (= x247 x136) (= (+ x558 x432) x136) (= x103 x652) (= x53 x558) (= (ite (<= x103 57896044618658097711785492504343953926634992332820282019728792003956564819967) x103 (- x103 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x432) (= x77 x53) (= x622 x473)) x118) (and (not x118) (and (= x133 x77) (= x133 x193) (= x622 x193) (= x517 x247)))) (and (= x202 x160) (= x112 (ite x273 x581 x661)) (= x154 x150) (= x118 (not (= x160 x150))))) x514) x548))
(assert (= x78 (x299 (x528 x78))))
(assert (= x658 (and x593 (not x554))))
(assert (x570 x143 (- x51 x587)))
(assert (x426 (- x587 x423)))
(assert (x561 x553))
(assert (x366 x378 x339 x393 x253))
(assert (x426 (- x663 x587)))
(assert (= x484 (x299 (x528 x484))))
(assert (= x505 (and x7 (not x118))))
(assert (x366 x582 x249 x141 x198))
(assert (x561 x133))
(assert (x570 x141 (- x198 x377)))
(assert (x426 (- x587 x604)))
(assert (x426 (- x604 x141)))
(assert (x570 x141 (- x198 x271)))
(assert (x366 x98 x33 x461 x504))
(assert (= (and (not x436) x632) x547))
(assert (x561 x380))
(assert (= (and x394 x340) x420))
(assert (x228 x582 x249 x141 x198))
(assert (x570 x249 (- x582 x461)))
(assert (x570 x198 (- x141 x33)))
(assert (x426 (- x198 x509)))
(assert (x228 x388 x410 x504 x461))
(assert (x366 x504 x461 x143 x51))
(assert (x426 (- x621 x410)))
(assert (x228 x51 x143 x393 x253))
(assert (x228 x253 x393 x509 x423))
(assert (x570 x410 (- x388 x587)))
(assert (x366 x98 x33 x504 x461))
(assert (x426 (- x621 x253)))
(assert (x426 x92))
(assert (x366 x141 x198 x377 x604))
(assert (x228 x141 x198 x582 x249))
(assert (x570 x582 (- x249 x141)))
(assert (x366 x339 x378 x253 x393))
(assert (x561 x288))
(assert (x570 x388 (- x410 x393)))
(assert (x426 (- x621 x393)))
(assert (x366 x98 x33 x587 x621))
(assert (x570 x98 x33))
(assert (x366 x253 x393 x51 x143))
(assert (x426 (- x423 x587)))
(assert (x570 x23 (- x518 x587)))
(assert (x426 (- x253 x663)))
(assert (x570 x461 (- x504 x249)))
(assert (x426 x339))
(assert (x561 x38))
(assert (= (x299 (x528 x448)) x448))
(assert (= (and x298 x243) x130))
(assert (x366 x92 x271 x461 x504))
(assert (x426 (- x504 x141)))
(assert (x561 x574))
(assert (x570 x587 (- x621 x388)))
(assert (x570 x504 (- x461 x509)))
(assert (x570 x198 (- x141 x388)))
(assert (x561 x151))
(assert (x426 (- x504 x393)))
(assert (x561 x651))
(assert (= (+ (x299 x87) 1) (x299 (x402 x87 1))))
(assert (x570 x23 (- x518 x141)))
(assert (x570 x410 (- x388 x461)))
(assert (x561 x484))
(assert (x570 x423 (- x509 x253)))
(assert (x290 x393))
(assert (x366 x253 x393 x271 x92))
(assert (x570 x587 (- x621 x504)))
(assert (x426 (- x621 x198)))
(assert (x570 x388 (- x410 x461)))
(assert (x561 x73))
(assert (x570 x621 (- x587 x141)))
(assert (= x124 (and (not x438) x643)))
(assert (x561 x652))
(assert (x426 (- x504 x663)))
(assert (x366 x92 x271 x587 x621))
(assert (x366 x198 x141 x253 x393))
(assert (x426 (- x623 x393)))
(assert (x366 x141 x198 x518 x23))
(assert (x570 x461 (- x504 x423)))
(assert (x426 (- x393 x51)))
(assert (x228 x509 x423 x504 x461))
(assert (x426 (- x587 x388)))
(assert (x570 x461 (- x504 x33)))
(assert (x426 (- x621 x582)))
(assert (x561 x390))
(assert (= (x335 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x528 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x426 (- x423 x198)))
(assert (x228 x504 x461 x582 x249))
(assert (x426 (- x582 x198)))
(assert (x426 (- x253 x92)))
(assert (= x28 (x299 (x528 x28))))
(assert (x570 x393 (- x253 x509)))
(assert (x426 (- x393 x249)))
(assert (x570 x253 (- x393 x51)))
(assert (x426 (- x623 x504)))
(assert (x561 x12))
(assert (x426 (- x141 x582)))
(assert (x561 x57))
(assert (= (x299 (x528 x73)) x73))
(assert (x570 x253 (- x393 x663)))
(assert (x570 x393 (- x253 x98)))
(assert (x426 (- x198 x423)))
(assert (x426 x33))
(assert (x426 (- x143 x504)))
(assert (x228 x249 x582 x504 x461))
(assert (x228 x663 x623 x621 x587))
(assert (x426 (- x92 x393)))
(assert (= (x299 (x335 2746363844)) 2746363844))
(assert (x426 (- x253 x271)))
(assert (x426 (- x23 x198)))
(assert (x426 (- x621 x663)))
(assert (x315 x28))
(assert (x570 x23 (- x518 x253)))
(assert (x426 (- x249 x198)))
(assert (x561 x227))
(assert (x366 x621 x587 x33 x98))
(assert (x228 x621 x587 x582 x249))
(assert (x426 (- x141 x378)))
(assert (x570 x621 (- x587 x623)))
(assert (x426 (- x253 x621)))
(assert (= (and x507 x76) x293))
(assert (x228 x253 x393 x582 x249))
(assert (x228 x198 x141 x621 x587))
(assert (x561 x351))
(assert (x570 x393 (- x253 x141)))
(assert (x366 x587 x621 x393 x253))
(assert (= x483 (and (not x666) x348)))
(assert (x426 (- x253 x23)))
(assert (x366 x253 x393 x621 x587))
(assert (x570 x143 (- x51 x253)))
(assert (x366 x339 x378 x141 x198))
(assert (x228 x621 x587 x98 x33))
(assert (x570 x461 (- x504 x378)))
(assert (x426 (- x663 x621)))
(assert (x570 x249 (- x582 x587)))
(assert (x228 x141 x198 x604 x377))
(assert (x570 x410 (- x388 x141)))
(assert (x570 x518 x23))
(assert (x570 x393 (- x253 x410)))
(assert (x426 (- x410 x198)))
(assert (x426 (- x587 x141)))
(assert (x426 (- x271 x621)))
(assert (x426 (- x504 x98)))
(assert (x570 x141 (- x198 x518)))
(assert (x561 x199))
(assert (x570 x143 (- x51 x461)))
(assert (x366 x143 x51 x141 x198))
(assert (x366 x587 x621 x98 x33))
(assert (x426 (- x504 x604)))
(assert (x228 x378 x339 x141 x198))
(assert (x228 x410 x388 x393 x253))
(assert (x366 x623 x663 x621 x587))
(assert (x366 x621 x587 x143 x51))
(assert (x570 x393 (- x253 x198)))
(assert (= (and x602 x502) x36))
(assert (x570 x604 x377))
(assert (x426 (- x461 x582)))
(assert (x561 x516))
(assert (x366 x141 x198 x663 x623))
(assert (x561 x43))
(assert (x570 x271 (- x92 x141)))
(assert (= 231365057 (x299 (x335 231365057))))
(assert (x366 x604 x377 x393 x253))
(assert (x366 x141 x198 x621 x587))
(assert (not x97))
(assert (x561 x208))
(assert (x570 x98 (- x33 x587)))
(assert (x530 x11 x215))
(assert (x426 (- x377 x198)))
(assert (x366 x604 x377 x587 x621))
(assert (x366 x198 x141 x582 x249))
(assert (x426 (- x98 x504)))
(assert (x228 x393 x253 x582 x249))
(assert (x570 x388 (- x410 x587)))
(assert (x366 x253 x393 x98 x33))
(assert (x561 x215))
(assert (x228 x198 x141 x378 x339))
(assert (x570 x461 (- x504 x509)))
(assert (x561 x202))
(assert (x366 x253 x393 x388 x410))
(assert (x570 x518 (- x23 x587)))
(assert (x570 x393 (- x253 x378)))
(assert (x366 x388 x410 x621 x587))
(assert (x570 x51 x143))
(assert (x570 x504 (- x461 x393)))
(assert (x570 x587 (- x621 x92)))
(assert (x228 x141 x198 x98 x33))
(assert (x366 x51 x143 x253 x393))
(assert (x315 x430))
(assert (x570 x604 (- x377 x587)))
(assert (x570 x198 (- x141 x423)))
(assert (x570 x393 (- x253 x271)))
(assert (= (x299 (x335 2094874590)) 2094874590))
(assert (x366 x410 x388 x587 x621))
(assert (x561 x294))
(assert (x366 x98 x33 x198 x141))
(assert (x561 x171))
(assert (= (+ (x299 x132) 1) (x299 (x402 x132 1))))
(assert (x366 x461 x504 x23 x518))
(assert (x426 (- x393 x663)))
(assert (= (or x234 x562) x7))
(assert (x426 (- x253 x33)))
(assert (x561 x387))
(assert (x570 x141 (- x198 x393)))
(assert (=> (<= x354 10000) (= (x528 x354) (x335 x354))))
(assert (x570 x582 x249))
(assert (x570 x504 (- x461 x249)))
(assert (x426 (- x623 x141)))
(assert (x426 (- x249 x393)))
(assert (x561 x450))
(assert (x426 (- x604 x198)))
(assert (x561 x163))
(assert (x570 x504 (- x461 x518)))
(assert (x570 x253 (- x393 x271)))
(assert (x570 x378 (- x339 x461)))
(assert (x426 (- x253 x141)))
(assert (x228 x98 x33 x621 x587))
(assert (x426 x623))
(assert (x426 (- x504 x33)))
(assert (= (+ 1 (x299 x250)) (x299 (x402 x250 1))))
(assert (x426 x461))
(assert (x570 x504 (- x461 x621)))
(assert (x570 x461 (- x504 x198)))
(assert (x228 x461 x504 x378 x339))
(assert (x426 (- x587 x377)))
(assert (x366 x143 x51 x504 x461))
(assert (x426 (- x621 x504)))
(assert (x426 (- x393 x92)))
(assert (x426 (- x51 x461)))
(assert (x570 x461 (- x504 x92)))
(assert (x315 x630))
(assert (x366 x253 x393 x378 x339))
(assert (= (and x20 x414) x360))
(assert (x570 x587 (- x621 x423)))
(assert (x561 x564))
(assert (x426 (- x621 x33)))
(assert (x570 x504 (- x461 x92)))
(assert (x366 x621 x587 x518 x23))
(assert (x570 x51 (- x143 x461)))
(assert (x570 x377 (- x604 x504)))
(assert (x366 x509 x423 x461 x504))
(assert (x366 x423 x509 x461 x504))
(assert (x570 x663 (- x623 x198)))
(assert (x228 x92 x271 x141 x198))
(assert (x570 x377 (- x604 x461)))
(assert (x561 x611))
(assert (x426 (- x621 x271)))
(assert (x426 (- x587 x92)))
(assert (x561 x630))
(assert (x228 x509 x423 x393 x253))
(assert (x570 x271 (- x92 x504)))
(assert (x570 x518 (- x23 x198)))
(assert (x366 x377 x604 x198 x141))
(assert (x426 (- x271 x587)))
(assert (x366 x198 x141 x23 x518))
(assert (x561 x141))
(assert (x561 x111))
(assert (x570 x582 (- x249 x253)))
(assert (x366 x339 x378 x587 x621))
(assert (x228 x504 x461 x393 x253))
(assert (x570 x518 (- x23 x504)))
(assert (x570 x504 (- x461 x663)))
(assert (x426 (- x509 x461)))
(assert (x426 (- x143 x621)))
(assert (x426 x249))
(assert (x570 x587 (- x621 x51)))
(assert (x228 x587 x621 x604 x377))
(assert (x366 x388 x410 x461 x504))
(assert (x228 x423 x509 x393 x253))
(assert (x366 x271 x92 x198 x141))
(assert (x366 x33 x98 x621 x587))
(assert (x228 x198 x141 x504 x461))
(assert (x426 (- x23 x253)))
(assert (x366 x198 x141 x621 x587))
(assert (x570 x587 (- x621 x339)))
(assert (x228 x378 x339 x621 x587))
(assert (= x348 true))
(assert (x366 x253 x393 x663 x623))
(assert (x426 (- x393 x143)))
(assert (x366 x51 x143 x461 x504))
(assert (x228 x410 x388 x141 x198))
(assert (x426 (- x504 x92)))
(assert (x426 (- x198 x339)))
(assert (= (x335 606387804) (x528 606387804)))
(assert (x570 x141 (- x198 x623)))
(assert (x426 (- x504 x339)))
(assert (x561 x422))
(assert (x426 (- x582 x393)))
(assert (x366 x604 x377 x504 x461))
(assert (x426 (- x271 x198)))
(assert (x426 (- x249 x141)))
(assert (x570 x92 (- x271 x504)))
(assert (x570 x51 (- x143 x587)))
(assert (x39 x301))
(assert (x228 x582 x249 x504 x461))
(assert (x426 x582))
(assert (x366 x92 x271 x621 x587))
(assert (x228 x271 x92 x141 x198))
(assert (x426 (- x271 x141)))
(assert (x570 x141 (- x198 x378)))
(assert (x561 x148))
(assert (x561 x264))
(assert (x366 x141 x198 x33 x98))
(assert (x426 (- x604 x587)))
(assert (x570 x98 (- x33 x393)))
(assert (x426 (- x393 x604)))
(assert (x426 (- x92 x141)))
(assert (x426 (- x388 x587)))
(assert (x366 x92 x271 x393 x253))
(assert (x570 x377 (- x604 x621)))
(assert (x561 x63))
(assert (x366 x253 x393 x518 x23))
(assert (x570 x92 (- x271 x141)))
(assert (x228 x621 x587 x604 x377))
(assert (x570 x141 (- x198 x339)))
(assert (x315 x300))
(assert (x315 x78))
(assert (= (and (not x273) x419) x234))
(assert (x570 x253 (- x393 x92)))
(assert (x561 x618))
(assert (x426 (- x410 x253)))
(assert (x426 (- x378 x504)))
(assert (x366 x423 x509 x587 x621))
(assert (x426 (- x410 x621)))
(assert (x228 x198 x141 x509 x423))
(assert (x366 x378 x339 x621 x587))
(assert (x426 x23))
(assert (x426 (- x198 x143)))
(assert (x366 x92 x271 x253 x393))
(assert (x366 x393 x253 x423 x509))
(assert (x561 x160))
(assert (x426 (- x410 x393)))
(assert (x426 (- x393 x377)))
(assert (x561 x539))
(assert (x570 x92 (- x271 x461)))
(assert (x426 (- x378 x253)))
(assert (x570 x51 (- x143 x198)))
(assert (x561 x330))
(assert (x570 x253 (- x393 x33)))
(assert (x426 (- x33 x621)))
(assert (x366 x461 x504 x663 x623))
(assert (x228 x339 x378 x621 x587))
(assert (x366 x393 x253 x461 x504))
(assert (x570 x51 (- x143 x621)))
(assert (x366 x198 x141 x339 x378))
(assert (x66 115792089237316195423570985008687907853269984665640564039457584007913129639935 x141))
(assert (x570 x621 (- x587 x604)))
(assert (x570 x198 (- x141 x604)))
(assert (x426 (- x141 x461)))
(assert (x366 x621 x587 x504 x461))
(assert (x426 (- x377 x621)))
(assert (x570 x587 (- x621 x377)))
(assert (x561 x321))
(assert (x228 x461 x504 x51 x143))
(assert (x570 x388 (- x410 x621)))
(assert (x228 x587 x621 x518 x23))
(assert (= (x299 (x402 x71 1)) (+ (x299 x71) 1)))
(assert (x366 x621 x587 x423 x509))
(assert (x426 (- x461 x198)))
(assert (x366 x198 x141 x504 x461))
(assert (x561 x382))
(assert (x570 x461 (- x504 x393)))
(assert (x426 (- x587 x378)))
(assert (x561 x82))
(assert (x228 x141 x198 x393 x253))
(assert (x426 (- x393 x33)))
(assert (=> (<= x109 10000) (= (x528 x109) (x335 x109))))
(assert (x570 x393 (- x253 x92)))
(assert (x366 x253 x393 x141 x198))
(assert (x561 x221))
(assert (x570 x509 (- x423 x393)))
(assert (x570 x377 (- x604 x587)))
(assert (x228 x461 x504 x582 x249))
(assert (= (x299 (x528 x630)) x630))
(assert (x570 x587 (- x621 x249)))
(assert (x561 x235))
(assert (x570 x621 (- x587 x92)))
(assert (x426 x423))
(assert (x426 (- x461 x621)))
(assert (x228 x388 x410 x141 x198))
(assert (x426 (- x587 x623)))
(assert (x366 x509 x423 x141 x198))
(assert (x366 x198 x141 x518 x23))
(assert (x426 (- x377 x504)))
(assert (x426 x143))
(assert (x228 x198 x141 x410 x388))
(assert (x366 x663 x623 x504 x461))
(assert (x366 x461 x504 x253 x393))
(assert (x426 (- x253 x461)))
(assert (x570 x33 (- x98 x461)))
(assert (x570 x504 (- x461 x582)))
(assert (x426 (- x461 x410)))
(assert (x426 (- x393 x423)))
(assert (x561 x262))
(assert (x66 115792089237316195423570985008687907853269984665640564039457584007913129639935 x504))
(assert (x561 x584))
(assert (= x440 (and x427 x176)))
(assert (x426 x198))
(assert (x561 x185))
(assert (x426 (- x461 x51)))
(assert (x366 x621 x587 x377 x604))
(assert (x366 x587 x621 x271 x92))
(assert (x426 (- x198 x378)))
(assert (x561 x393))
(assert (x426 (- x141 x51)))
(assert (x561 x59))
(assert (x426 (- x377 x141)))
(assert (x366 x377 x604 x504 x461))
(assert (x426 (- x623 x253)))
(assert (x228 x393 x253 x604 x377))
(assert (x570 x198 (- x141 x504)))
(assert (x570 x587 (- x621 x141)))
(assert (x366 x423 x509 x504 x461))
(assert (x426 (- x141 x253)))
(assert (x570 x98 (- x33 x198)))
(assert (x366 x388 x410 x393 x253))
(assert (x366 x518 x23 x461 x504))
(assert (x561 x616))
(assert (x426 x388))
(assert (x570 x141 (- x198 x509)))
(assert (x366 x92 x271 x198 x141))
(assert (x570 x587 (- x621 x198)))
(assert (x228 x509 x423 x141 x198))
(assert (x570 x198 (- x141 x377)))
(assert (x570 x587 (- x621 x143)))
(assert (x570 x423 (- x509 x141)))
(assert (x426 (- x198 x623)))
(assert (x561 x362))
(assert (x228 x23 x518 x141 x198))
(assert (x426 (- x461 x663)))
(assert (x290 x504))
(assert (x561 x482))
(assert (x570 x271 (- x92 x461)))
(assert (x561 x291))
(assert (x366 x23 x518 x198 x141))
(assert (x426 (- x663 x461)))
(assert (x66 115792089237316195423570985008687907853269984665640564039457584007913129639935 x393))
(assert (x366 x509 x423 x504 x461))
(assert (x426 (- x621 x423)))
(assert (x366 x621 x587 x604 x377))
(assert (x570 x388 (- x410 x198)))
(assert (x561 x220))
(assert (= 558109909 (x299 (x335 558109909))))
(assert (x561 x78))
(assert (x39 x11))
(assert (x228 x253 x393 x92 x271))
(assert (x366 x504 x461 x377 x604))
(assert (x228 x141 x198 x509 x423))
(assert (x426 (- x587 x51)))
(assert (x570 x253 (- x393 x518)))
(assert (x561 x527))
(assert (x228 x378 x339 x393 x253))
(assert (x228 x141 x198 x623 x663))
(assert (x426 (- x621 x461)))
(assert (x570 x143 (- x51 x141)))
(assert (x426 (- x461 x604)))
(assert (x426 (- x253 x377)))
(assert (x570 x377 (- x604 x141)))
(assert (x570 x518 (- x23 x141)))
(assert (x570 x504 (- x461 x141)))
(assert (x561 x292))
(assert (x561 x85))
(assert (x426 (- x92 x198)))
(assert (x570 x587 (- x621 x663)))
(assert (x570 x33 (- x98 x141)))
(assert (= (x299 (x335 2265735533)) 2265735533))
(assert (x561 x49))
(assert (x366 x504 x461 x518 x23))
(assert (x426 (- x253 x587)))
(assert (x426 (- x623 x198)))
(assert (x366 x621 x587 x663 x623))
(assert (x366 x198 x141 x393 x253))
(assert (x426 (- x393 x587)))
(assert (x228 x461 x504 x141 x198))
(assert (x228 x587 x621 x98 x33))
(assert (x426 (- x393 x23)))
(assert (x366 x378 x339 x198 x141))
(assert (x570 x461 (- x504 x51)))
(assert (x570 x92 (- x271 x393)))
(assert (x228 x33 x98 x141 x198))
(assert (x426 (- x504 x271)))
(assert (x228 x388 x410 x621 x587))
(assert (x366 x393 x253 x410 x388))
(assert (= (x299 (x335 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x366 x623 x663 x393 x253))
(assert (x426 (- x253 x509)))
(assert (x570 x410 (- x388 x504)))
(assert (x366 x509 x423 x587 x621))
(assert (x426 (- x461 x33)))
(assert (x366 x141 x198 x393 x253))
(assert (x315 x354))
(assert (x570 x253 (- x393 x378)))
(assert (= (+ (x299 x659) 2) (x299 (x402 x659 2))))
(assert (= x568 (=> (and (= x20 x639) (= x652 x30) (= x623 x468) (= x450 x541) (= x663 x551) (= x475 x652) (= (x192 x582 x249) x40) (= (x192 x604 x377) x175) (= x551 x25) (= (- x546 x465) x19) (= x120 x25) (= (+ x662 x415) x31) (= x79 x172) (= x339 x592) (= x500 (x192 x518 x23)) (= x209 x546) (= (ite (<= x113 57896044618658097711785492504343953926634992332820282019728792003956564819967) x113 (- x113 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x662) (= x260 x203) (= x217 x143) (= (+ x391 x197) x137) (= (ite (<= x30 57896044618658097711785492504343953926634992332820282019728792003956564819967) x30 (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x465) (= x145 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x89) (= x32 x22) (= x48 x460) (= x323 (< x486 x40)) (= (or x274 x196) x633) (= (> x148 0) x429) (= 0 x494) (= x202 x173) (= x511 (and x236 x633)) (= x594 (not x421)) (= x652 x428) (= x620 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x385 x139) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 x405) x83) (= x350 (and x624 x14)) (= x429 x492) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x334) (= x372 (not (= 0 x443))) (= x34 x388) (= 0 x359) (= (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x541) x541 (- x541 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x161) (= x138 x305) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x75) (= x536 0) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x111) (= x116 0) (= x223 x138) (= x400 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x259 x25) (= x641 x421) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 x137) x418) (= x604 x112) (= (+ x520 x48) x263) (= x397 (> x319 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x221 x202) (= (and x586 x425) x462) (= x79 x211) (= x338 x450) (= x520 (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x381) x381 (- x381 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x188 x148) (= (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x428) x428 (- x428 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x653) (= (> x260 x566) x14) (= x237 x443) (= x237 x410) (= (> 0 x601) x459) (= x601 (- x172 x161)) (= x274 (> 0 x263)) (= x625 x355) (= x90 0) (= x237 x509) (= (or x594 x246) x389) (= (or x639 (not x492)) x392) (= (x192 x51 x143) x93) (= x446 (> 0 x31)) (= x196 (> x409 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x628 (ite (<= x475 57896044618658097711785492504343953926634992332820282019728792003956564819967) x475 (- x475 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x512 x595) (= x595 x92) (= x499 x391) (= x415 x411) (= (- x139 x101) x195) (= (> x195 115792089237316195423570985008687907853269984665640564039457584007913129639935) x395) (= x271 x223) (= x77 x460) (= x270 (> x93 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x640 x32) (= x217 x138) (= (x192 x410 x388) x343) (= x246 (not x355)) (= x305 x423) (= (ite (<= x516 57896044618658097711785492504343953926634992332820282019728792003956564819967) x516 (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x101) (= (or x418 x446) x586) (= x248 (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 x19)) (= x197 (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x338) x338 (- x338 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (+ x628 x180) x409) (= x582 x595) (= x237 x51) (= x120 x33) (= x499 x575) (= x138 x592) (= (> 0 x194) x376) (= x25 x407) (= x566 (x192 x378 x339)) (= x23 x259) (= x407 x377) (= x668 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x617 x203) (= x386 (> x343 x500)) (= x624 (not (= x512 0))) (= x61 (or x248 x376)) (= x138 x34) (= x450 x113) (= x385 x211) (= x289 x154) (= x640 x209) (= x258 0) (= x138 x521) (= x486 (x192 x623 x663)) (= x405 (x192 x92 x271)) (= x411 x575) (= x425 (not (= x126 x173))) (= x194 (- x22 x653)) (= (x192 x98 x33) x319) (= (x192 x509 x423) x447) (= x444 (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 x175)) (= x595 x378) (= x154 x126) (= x112 x518) (= x18 (or x459 x395)) (= x98 x468) (= x521 x249) (= x77 x321) (= x652 x381) (= 0 x644) (= x435 (and x372 x21)) (= x21 (> x617 x447)) (= x516 x450) (= (not (= x289 x221)) x236) (= x321 x180)) (and x392 (=> (and (= x325 (or x167 (not x166))) (= x18 x166) (= x167 x20)) (and x325 (=> (and (= x607 x61) (= (or (not x607) x540) x332) (= x540 x20)) (and (=> (and (= x20 x302) (= x474 (or (not x204) x302)) (= x462 x204)) (and x474 (=> (and (= x20 x599) (= x606 x511) (= (or (not x606) x599) x4)) (and (=> (and (= x20 x645) (= x649 x83) (= (or (not x649) x645) x344)) (and x344 (=> (and (= x20 x626) (= x469 (or x626 (not x67))) (= x270 x67)) (and (=> (and (= x650 x389) (= x384 x20) (= (or x384 (not x650)) x408)) (and x408 (=> (and (= (or (not x278) x396) x614) (= x278 x397) (= x20 x396)) (and (=> (and (= x84 x20) (= x323 x491) (= x467 (or x84 (not x491)))) (and x467 (=> (and (= x216 (or x399 (not x535))) (= x399 x20) (= x444 x535)) (and x216 (=> (and (= x110 (or x538 (not x280))) (= x280 x386) (= x538 x20)) (and (=> (and (= (or x108 (not x158)) x417) (= x108 x20) (= x350 x158)) (and (=> (and (= x20 x128) (= (or (not x416) x128) x451) (= x416 x435)) (and x451 (=> (and (= x233 (or x310 x591)) (= x610 (or x613 x35)) (= x159 x397) (= (or x44 x233) x117) (= x557 (or x308 x94)) (= x556 (or x579 x629)) (= x18 x310) (= (or x470 x557) x495) (= x511 x94) (= (or x117 x114) x308) (= x135 x20) (= x462 x114) (= (or x333 x603) x613) (= x667 (or x159 x480)) (= x83 x470) (= x270 x320) (= (or x178 x369) x480) (= (or x495 x320) x369) (= x333 (or x667 x660)) (= x444 x603) (= x591 x429) (= x61 x44) (= x386 x35) (= x439 (or (not x135) x556)) (= x350 x149) (= (or x149 x610) x629) (= x660 x323) (= x579 x435) (= x178 x389)) x439))) x417)) x110)))))) x614)))) x469)))) x4)))) x332))))))))
(assert (x426 (- x663 x253)))
(assert (x426 (- x253 x51)))
(assert (x570 x587 (- x621 x98)))
(assert (x228 x621 x587 x141 x198))
(assert (x561 x16))
(assert (x228 x23 x518 x504 x461))
(assert (x426 (- x141 x518)))
(assert (x561 x152))
(assert (x366 x393 x253 x587 x621))
(assert (x426 (- x388 x141)))
(assert (x366 x393 x253 x663 x623))
(assert (x426 (- x461 x339)))
(assert (x426 (- x509 x587)))
(assert (x561 x64))
(assert (= (x335 231365057) (x528 231365057)))
(assert (x561 x453))
(assert (x570 x623 (- x663 x393)))
(assert (x570 x23 (- x518 x621)))
(assert (= (x335 3647180086) (x528 3647180086)))
(assert (x570 x271 (- x92 x587)))
(assert (x426 (- x253 x143)))
(assert (x426 (- x253 x604)))
(assert (x426 (- x141 x623)))
(assert (x570 x339 (- x378 x141)))
(assert (x561 x54))
(assert (x561 x140))
(assert (x570 x461 (- x504 x253)))
(assert (x426 (- x623 x461)))
(assert (x366 x98 x33 x621 x587))
(assert (x561 x621))
(assert (x228 x518 x23 x393 x253))
(assert (x561 x261))
(assert (x426 (- x339 x587)))
(assert (x366 x51 x143 x621 x587))
(assert (x228 x587 x621 x509 x423))
(assert (x426 (- x51 x504)))
(assert (x366 x621 x587 x249 x582))
(assert (x366 x98 x33 x141 x198))
(assert (x426 (- x198 x518)))
(assert (x366 x339 x378 x461 x504))
(assert (x366 x582 x249 x621 x587))
(assert (x426 (- x518 x198)))
(assert (x570 x582 (- x249 x621)))
(assert (x561 x327))
(assert (= x632 (and (not x17) x283)))
(assert (x570 x393 (- x253 x663)))
(assert (x426 (- x587 x509)))
(assert (x228 x377 x604 x504 x461))
(assert (x228 x253 x393 x410 x388))
(assert (= (x335 1161348331) (x528 1161348331)))
(assert (x426 (- x582 x253)))
(assert (=> (<= x448 10000) (= (x528 x448) (x335 x448))))
(assert (x366 x249 x582 x587 x621))
(assert (x366 x23 x518 x141 x198))
(assert (x426 (- x198 x663)))
(assert (x426 (- x198 x393)))
(assert (= 436938878 (x299 (x335 436938878))))
(assert (x570 x98 (- x33 x461)))
(assert (x570 x663 (- x623 x504)))
(assert (x366 x518 x23 x504 x461))
(assert (x570 x461 (- x504 x410)))
(assert (x570 x461 (- x504 x623)))
(assert (x561 x515))
(assert (x366 x461 x504 x378 x339))
(assert (x366 x621 x587 x388 x410))
(assert (x426 (- x504 x410)))
(assert (x426 x271))
(assert (x426 (- x198 x51)))
(assert (x570 x518 (- x23 x253)))
(assert (x366 x621 x587 x141 x198))
(assert (x570 x33 (- x98 x393)))
(assert (x570 x587 (- x621 x253)))
(assert (x426 (- x249 x621)))
(assert (x426 (- x198 x388)))
(assert (x561 x6))
(assert (x426 (- x461 x23)))
(assert (x426 (- x23 x587)))
(assert (x570 x604 (- x377 x253)))
(assert (x570 x141 (- x198 x461)))
(assert (x426 (- x582 x461)))
(assert (x366 x587 x621 x92 x271))
(assert (x570 x587 (- x621 x582)))
(assert (= (+ 1 (x299 x242)) (x299 (x402 x242 1))))
(assert (x426 (- x253 x98)))
(assert (x426 (- x509 x141)))
(assert (= x593 (and x296 x656)))
(assert (= x109 (x299 (x528 x109))))
(assert (x570 x253 (- x393 x423)))
(assert (x366 x198 x141 x509 x423))
(assert (x228 x98 x33 x141 x198))
(assert (x561 x183))
(assert (x570 x621 (- x587 x410)))
(assert (x561 x617))
(assert (x570 x23 (- x518 x393)))
(assert (x570 x587 (- x621 x23)))
(assert (x561 x24))
(assert (x228 x271 x92 x504 x461))
(assert (x561 x460))
(assert (x366 x504 x461 x198 x141))
(assert (= (+ 1 (x299 x277)) (x299 (x402 x277 1))))
(assert (= (and (not x656) x296) x314))
(assert (x366 x393 x253 x377 x604))
(assert (x366 x143 x51 x587 x621))
(assert (x426 (- x33 x253)))
(assert (x570 x33 (- x98 x587)))
(assert (= x562 (and x419 x273)))
(assert (x366 x423 x509 x141 x198))
(assert (= 1461501637330902918203684832716283019655932542975 (x299 (x335 1461501637330902918203684832716283019655932542975))))
(assert (x228 x582 x249 x393 x253))
(assert (x426 (- x621 x141)))
(assert (x530 x493 x588))
(assert (x228 x587 x621 x141 x198))
(assert (x426 (- x51 x198)))
(assert (x570 x141 (- x198 x582)))
(assert (x570 x339 (- x378 x621)))
(assert (x366 x604 x377 x461 x504))
(assert (x561 x206))
(assert (x570 x504 (- x461 x33)))
(assert (x426 (- x587 x504)))
(assert (x561 x550))
(assert (x228 x587 x621 x623 x663))
(assert (x561 x598))
(assert (x570 x92 (- x271 x253)))
(assert (= (or x279 x124 x210 x314) x449))
(assert (x561 x361))
(assert (= (x528 558109909) (x335 558109909)))
(assert (x426 (- x621 x92)))
(assert (x426 (- x461 x509)))
(assert (x561 x475))
(assert (x426 (- x518 x587)))
(assert (x561 x168))
(assert (x366 x198 x141 x143 x51))
(assert (x366 x461 x504 x249 x582))
(assert (x426 (- x33 x587)))
(assert (x561 x640))
(assert (x570 x604 (- x377 x621)))
(assert (x366 x582 x249 x253 x393))
(assert (= (x528 2094874590) (x335 2094874590)))
(assert (x426 (- x587 x98)))
(assert (x366 x587 x621 x377 x604))
(assert (x561 x300))
(assert (x228 x253 x393 x504 x461))
(assert (x426 (- x377 x253)))
(assert (x561 x275))
(assert (x426 (- x504 x623)))
(assert (x426 (- x621 x623)))
(assert (x570 x253 (- x393 x198)))
(assert (= (and x7 x118) x544))
(assert (x570 x423 (- x509 x393)))
(assert (x570 x663 (- x623 x253)))
(assert (x426 (- x253 x339)))
(assert (x366 x461 x504 x339 x378))
(assert (x366 x141 x198 x271 x92))
(assert (x366 x509 x423 x253 x393))
(assert (x426 (- x141 x393)))
(assert (x366 x461 x504 x623 x663))
(assert (x426 (- x92 x504)))
(assert (x366 x621 x587 x98 x33))
(assert (= x283 (and x115 x146)))
(assert (x570 x621 (- x587 x663)))
(assert (x561 x654))
(assert (= x106 (and x478 x406)))
(assert (x228 x339 x378 x504 x461))
(assert (x426 (- x23 x504)))
(assert (x561 x80))
(assert (x561 x657))
(assert (x426 (- x587 x518)))
(assert (x570 x587 (- x621 x271)))
(assert (x570 x378 x339))
(assert (x366 x141 x198 x587 x621))
(assert (x366 x92 x271 x504 x461))
(assert (x426 (- x393 x378)))
(assert (x561 x32))
(assert (x228 x461 x504 x410 x388))
(assert (x426 x587))
(assert (x570 x582 (- x249 x504)))
(assert (x366 x587 x621 x604 x377))
(assert (x228 x663 x623 x504 x461))
(assert (x366 x141 x198 x378 x339))
(assert (x366 x253 x393 x33 x98))
(assert (x228 x198 x141 x623 x663))
(assert (x561 x62))
(assert (x366 x587 x621 x663 x623))
(assert (x426 (- x621 x604)))
(assert (x39 x453))
(assert (x570 x663 (- x623 x461)))
(assert (x561 x448))
(assert (x570 x509 (- x423 x141)))
(assert (x426 (- x518 x621)))
(assert (x228 x518 x23 x141 x198))
(assert (= (and (not x328) x241) x60))
(assert (x426 (- x33 x141)))
(assert (x570 x423 (- x509 x198)))
(assert (x228 x587 x621 x378 x339))
(assert (x426 (- x423 x504)))
(assert (x426 (- x33 x504)))
(assert (x570 x51 (- x143 x393)))
(assert (x426 (- x198 x23)))
(assert (x426 (- x587 x253)))
(assert (x426 (- x98 x141)))
(assert (x426 (- x504 x621)))
(assert (x426 (- x587 x33)))
(assert (x426 (- x141 x410)))
(assert (x366 x587 x621 x51 x143))
(assert (x228 x198 x141 x604 x377))
(assert (x366 x621 x587 x253 x393))
(assert (x570 x33 (- x98 x253)))
(assert (x228 x504 x461 x623 x663))
(assert (x366 x587 x621 x518 x23))
(assert (x426 (- x663 x141)))
(assert (x366 x663 x623 x587 x621))
(assert (x426 (- x23 x141)))
(assert (= (x299 (x528 x300)) x300))
(assert (= x419 (or x293 x488)))
(assert (x366 x141 x198 x143 x51))
(assert (x570 x378 (- x339 x198)))
(assert (x570 x339 (- x378 x504)))
(assert (x426 (- x461 x98)))
(assert (x366 x663 x623 x198 x141))
(assert (x426 x509))
(assert (x426 (- x377 x393)))
(assert (x426 (- x423 x141)))
(assert (x426 (- x51 x621)))
(assert (x366 x504 x461 x249 x582))
(assert (x366 x198 x141 x423 x509))
(assert (x228 x623 x663 x621 x587))
(assert (x570 x198 (- x141 x98)))
(assert (x366 x249 x582 x393 x253))
(assert (=> (<= x59 10000) (= (x528 x59) (x335 x59))))
(assert (x366 x141 x198 x92 x271))
(assert (x366 x378 x339 x587 x621))
(assert (x561 x254))
(assert (x366 x663 x623 x621 x587))
(assert (x561 x499))
(assert (x228 x378 x339 x504 x461))
(assert (x426 x410))
(assert (x570 x23 (- x518 x198)))
(assert (x426 (- x410 x587)))
(assert (x426 (- x504 x378)))
(assert (x315 x245))
(assert (x290 x621))
(assert (x570 x623 (- x663 x461)))
(check-sat)
(exit)
