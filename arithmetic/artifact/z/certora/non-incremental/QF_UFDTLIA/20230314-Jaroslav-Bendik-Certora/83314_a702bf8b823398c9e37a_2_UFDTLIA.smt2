(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1493 0)) (((x1665 (x876 x1493) (x1068 x1493) (x26 Int)) (x1536 (x1790 Int)) (x1376 (x802 x1493) (x990 Int)))))
(declare-fun x1315 () Int)
(declare-fun x345 () Int)
(declare-fun x1782 () Int)
(declare-fun x1822 () Int)
(declare-fun x1721 () Bool)
(declare-fun x848 () Bool)
(declare-fun x192 () Int)
(declare-fun x1284 () Bool)
(declare-fun x861 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x5 () Int)
(declare-fun x1627 () Bool)
(declare-fun x1565 (Int) Int)
(declare-fun x1552 () Bool)
(declare-fun x1198 () Int)
(declare-fun x186 () Bool)
(declare-fun x313 () x1493)
(declare-fun x333 () Int)
(declare-fun x1082 () x1493)
(declare-fun x214 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x411 () Int)
(declare-fun x926 () Int)
(declare-fun x1321 () Bool)
(declare-fun x1699 () Int)
(declare-fun x805 (Int) Int)
(declare-fun x657 (Int Int) Int)
(declare-fun x128 () Int)
(declare-fun x976 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x328 () Int)
(declare-fun x1309 () Int)
(declare-fun x1252 () Int)
(declare-fun x1025 () Int)
(declare-fun x792 () Bool)
(declare-fun x66 () Bool)
(declare-fun x672 () Int)
(declare-fun x481 () Int)
(declare-fun x605 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x1518 () Int)
(declare-fun x86 () Int)
(declare-fun x117 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x306 () Bool)
(declare-fun x1267 () Int)
(declare-fun x1343 () Bool)
(declare-fun x475 () Int)
(declare-fun x858 () x1493)
(declare-fun x1057 () Bool)
(declare-fun x1743 () Int)
(declare-fun x871 () Bool)
(declare-fun x299 () Int)
(declare-fun x1160 () Bool)
(declare-fun x561 () Int)
(declare-fun x96 () Int)
(declare-fun x415 (Int Int) Int)
(declare-fun x1815 () Int)
(declare-fun x1774 () Bool)
(declare-fun x390 () Int)
(declare-fun x1247 () Int)
(declare-fun x1371 () Int)
(declare-fun x480 () Bool)
(declare-fun x1679 () Int)
(declare-fun x291 () Bool)
(declare-fun x1001 () Int)
(declare-fun x1481 () Int)
(declare-fun x1695 () Int)
(declare-fun x1803 () Int)
(declare-fun x230 () Int)
(declare-fun x671 () Int)
(declare-fun x1824 () Int)
(declare-fun x496 () Int)
(declare-fun x1326 () Int)
(declare-fun x31 () Int)
(declare-fun x220 () Int)
(declare-fun x744 () Int)
(declare-fun x448 () Int)
(declare-fun x1392 () Int)
(declare-fun x759 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x1719 () Int)
(declare-fun x838 () Bool)
(declare-fun x541 () Int)
(declare-fun x92 () Int)
(declare-fun x256 () Int)
(declare-fun x603 () x1493)
(declare-fun x736 () Bool)
(declare-fun x1180 () Int)
(declare-fun x1559 () Int)
(declare-fun x1012 () Int)
(declare-fun x213 () Int)
(declare-fun x1290 () Bool)
(declare-fun x885 () Int)
(declare-fun x1370 () Int)
(declare-fun x1504 () Int)
(declare-fun x1019 () Int)
(declare-fun x1675 () Int)
(declare-fun x419 () Int)
(declare-fun x263 () Int)
(declare-fun x451 () Bool)
(declare-fun x176 () Int)
(declare-fun x1772 () Int)
(declare-fun x1449 () Int)
(declare-fun x1104 () x1493)
(declare-fun x1649 () Int)
(declare-fun x962 () Int)
(declare-fun x79 () Int)
(declare-fun x102 () Int)
(declare-fun x431 () Int)
(declare-fun x849 (Int Int) Int)
(declare-fun x109 () Int)
(declare-fun x1384 () Int)
(declare-fun x1542 () Int)
(declare-fun x664 () Int)
(declare-fun x693 () Int)
(declare-fun x1406 () Bool)
(declare-fun x235 () Int)
(declare-fun x394 () Int)
(declare-fun x938 () Bool)
(declare-fun x945 () Bool)
(declare-fun x1513 () Int)
(declare-fun x321 () Int)
(declare-fun x494 () Bool)
(declare-fun x1287 () Int)
(declare-fun x1631 () Int)
(declare-fun x1157 () Int)
(declare-fun x881 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x1429 () Int)
(declare-fun x493 () Int)
(declare-fun x1249 () Bool)
(declare-fun x560 () Bool)
(declare-fun x766 (x1493) Int)
(declare-fun x1316 () Int)
(declare-fun x53 () Int)
(declare-fun x614 () x1493)
(declare-fun x1382 () Bool)
(declare-fun x108 () Int)
(declare-fun x200 () Int)
(declare-fun x1767 () Int)
(declare-fun x799 () x1493)
(declare-fun x1311 () Bool)
(declare-fun x514 () x1493)
(declare-fun x1469 () Bool)
(declare-fun x1424 () Int)
(declare-fun x259 () Bool)
(declare-fun x1475 () Int)
(declare-fun x619 () Bool)
(declare-fun x1728 () Int)
(declare-fun x177 () x1493)
(declare-fun x1430 () Bool)
(declare-fun x446 (Int) Int)
(declare-fun x1739 () Bool)
(declare-fun x941 () Int)
(declare-fun x712 () Int)
(declare-fun x784 () Bool)
(declare-fun x732 () x1493)
(declare-fun x255 () Bool)
(declare-fun x569 () Bool)
(declare-fun x1801 () Int)
(declare-fun x1638 () Int)
(declare-fun x229 () Int)
(declare-fun x1235 () Int)
(declare-fun x1670 () Bool)
(declare-fun x1173 () Int)
(declare-fun x502 () Int)
(declare-fun x351 () Bool)
(declare-fun x72 () Int)
(declare-fun x80 () Int)
(declare-fun x384 () Bool)
(declare-fun x939 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x376 () Int)
(declare-fun x416 () Int)
(declare-fun x488 () Int)
(declare-fun x1166 () Int)
(declare-fun x568 () Bool)
(declare-fun x1044 () x1493)
(declare-fun x832 () Bool)
(declare-fun x83 () Int)
(declare-fun x963 () x1493)
(declare-fun x1587 () Bool)
(declare-fun x349 () Bool)
(declare-fun x729 () Int)
(declare-fun x1792 () Int)
(declare-fun x1830 () Int)
(declare-fun x634 () Int)
(declare-fun x1698 () Int)
(declare-fun x1393 () Int)
(declare-fun x800 () Int)
(declare-fun x1106 () Int)
(declare-fun x918 () Int)
(declare-fun x901 () Bool)
(declare-fun x1351 () Int)
(declare-fun x1490 () Bool)
(declare-fun x82 () Bool)
(declare-fun x1238 () Int)
(declare-fun x780 () Int)
(declare-fun x1564 () Int)
(declare-fun x1409 () Int)
(declare-fun x1282 () Int)
(declare-fun x1302 () Bool)
(declare-fun x224 () x1493)
(declare-fun x1733 () Bool)
(declare-fun x1300 () Int)
(declare-fun x1207 () Int)
(declare-fun x1260 () Int)
(declare-fun x162 (Int) Int)
(declare-fun x528 () x1493)
(declare-fun x309 () Int)
(declare-fun x1744 () Int)
(declare-fun x1337 () x1493)
(declare-fun x1004 () Bool)
(declare-fun x450 () Bool)
(declare-fun x1400 () Int)
(declare-fun x387 () Bool)
(declare-fun x1674 () Int)
(declare-fun x1028 () Int)
(declare-fun x111 () Int)
(declare-fun x1683 () Int)
(declare-fun x1192 () Int)
(declare-fun x1584 () Bool)
(declare-fun x183 () Int)
(declare-fun x994 () Int)
(declare-fun x601 () Int)
(declare-fun x1617 () Bool)
(declare-fun x674 () Bool)
(declare-fun x638 () Int)
(declare-fun x1029 () Bool)
(declare-fun x1130 () Int)
(declare-fun x806 () Bool)
(declare-fun x556 () Int)
(declare-fun x1555 (Int) Int)
(declare-fun x287 () Int)
(declare-fun x1047 () Int)
(declare-fun x1017 () Int)
(declare-fun x275 () Bool)
(declare-fun x318 () Int)
(declare-fun x840 () Bool)
(declare-fun x1292 () Int)
(declare-fun x950 () Int)
(declare-fun x1472 () Int)
(declare-fun x675 () Bool)
(declare-fun x319 () Int)
(declare-fun x731 () Bool)
(declare-fun x650 () Bool)
(declare-fun x442 () Int)
(declare-fun x957 () Int)
(declare-fun x761 () Int)
(declare-fun x1138 () Int)
(declare-fun x748 () Int)
(declare-fun x175 () Int)
(declare-fun x402 () Int)
(declare-fun x473 () Bool)
(declare-fun x679 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x1660 (Int) Int)
(declare-fun x579 () x1493)
(declare-fun x1112 () Bool)
(declare-fun x119 () Int)
(declare-fun x1186 () x1493)
(declare-fun x928 () Int)
(declare-fun x518 () Int)
(declare-fun x564 () Int)
(declare-fun x1169 () Int)
(declare-fun x1537 () Bool)
(declare-fun x1484 () Int)
(declare-fun x562 () Int)
(declare-fun x786 () Int)
(declare-fun x1133 () Int)
(declare-fun x1522 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x1466 () x1493)
(declare-fun x348 () Int)
(declare-fun x515 () Int)
(declare-fun x1437 () Int)
(declare-fun x1330 () Bool)
(declare-fun x425 () x1493)
(declare-fun x1635 () Int)
(declare-fun x1753 () Int)
(declare-fun x1716 () Bool)
(declare-fun x1206 () Int)
(declare-fun x437 () Int)
(declare-fun x757 () Int)
(declare-fun x334 () Int)
(declare-fun x810 () Bool)
(declare-fun x288 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x445 () Bool)
(declare-fun x649 () Int)
(declare-fun x277 () Int)
(declare-fun x171 () Int)
(declare-fun x1097 () Int)
(declare-fun x300 () Int)
(declare-fun x15 () Int)
(declare-fun x1637 () Int)
(declare-fun x702 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x191 () Int)
(declare-fun x742 () Int)
(declare-fun x902 () Bool)
(declare-fun x746 () Bool)
(declare-fun x1279 () Int)
(declare-fun x969 () Int)
(declare-fun x355 () Int)
(declare-fun x469 () Int)
(declare-fun x1390 () x1493)
(declare-fun x738 () Int)
(declare-fun x1102 () x1493)
(declare-fun x1506 () Int)
(declare-fun x1647 () Int)
(declare-fun x1427 () Int)
(declare-fun x1451 () Int)
(declare-fun x524 () Int)
(declare-fun x1770 () Int)
(declare-fun x1751 () Bool)
(declare-fun x1811 () Int)
(declare-fun x221 () Int)
(declare-fun x507 () Bool)
(declare-fun x1703 () Int)
(declare-fun x551 () Int)
(declare-fun x1769 () Int)
(declare-fun x670 () Int)
(declare-fun x1759 () Int)
(declare-fun x1340 () Int)
(declare-fun x972 () Int)
(declare-fun x1227 () Int)
(declare-fun x107 () Bool)
(declare-fun x483 () Int)
(declare-fun x1045 () Int)
(declare-fun x20 () Bool)
(declare-fun x714 () Int)
(declare-fun x563 () Bool)
(declare-fun x148 () Int)
(declare-fun x1417 () Int)
(declare-fun x740 () Int)
(declare-fun x51 () Int)
(declare-fun x704 () Int)
(declare-fun x246 () x1493)
(declare-fun x612 () Int)
(declare-fun x1009 () Int)
(declare-fun x692 () Int)
(declare-fun x360 () Int)
(declare-fun x1259 () Int)
(declare-fun x295 () Bool)
(declare-fun x811 () Int)
(declare-fun x264 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x558 () Bool)
(declare-fun x398 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x101 () Int)
(declare-fun x956 () Int)
(declare-fun x771 () Int)
(declare-fun x1476 () Int)
(declare-fun x1554 () Bool)
(declare-fun x791 () Bool)
(declare-fun x157 () Int)
(declare-fun x1603 () Bool)
(declare-fun x896 () Bool)
(declare-fun x850 () Bool)
(declare-fun x1418 (Int) Int)
(declare-fun x400 () Int)
(declare-fun x1438 () x1493)
(declare-fun x1294 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x633 () Int)
(declare-fun x808 () Int)
(declare-fun x651 () Bool)
(declare-fun x686 () Int)
(declare-fun x961 () Int)
(declare-fun x1242 () Bool)
(declare-fun x297 () Bool)
(declare-fun x1572 () Int)
(declare-fun x1185 () Int)
(declare-fun x94 () x1493)
(declare-fun x1819 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x14 () Int)
(declare-fun x1761 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x231 () Bool)
(declare-fun x203 () Int)
(declare-fun x587 () Bool)
(declare-fun x1202 () x1493)
(declare-fun x1588 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1397 () Int)
(declare-fun x1150 () Int)
(declare-fun x379 () Int)
(declare-fun x169 () x1493)
(declare-fun x661 () Int)
(declare-fun x401 (Int) Int)
(declare-fun x228 () Int)
(declare-fun x1407 () Int)
(declare-fun x1726 () Int)
(declare-fun x964 () Int)
(declare-fun x490 () Bool)
(declare-fun x949 () Bool)
(declare-fun x1329 () Int)
(declare-fun x121 () Int)
(declare-fun x681 () Bool)
(declare-fun x273 () Bool)
(declare-fun x1780 () Int)
(declare-fun x1120 (Int Int) Int)
(declare-fun x468 () Int)
(declare-fun x958 () Int)
(declare-fun x59 () Bool)
(declare-fun x889 () Int)
(declare-fun x1831 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x420 () Bool)
(declare-fun x269 () Int)
(declare-fun x1386 () Bool)
(declare-fun x1659 () Int)
(declare-fun x421 () Int)
(declare-fun x1750 () Int)
(declare-fun x454 () Int)
(declare-fun x1746 () Int)
(declare-fun x1270 () Int)
(declare-fun x1154 () Bool)
(declare-fun x340 () Int)
(declare-fun x616 () Int)
(declare-fun x89 () Int)
(declare-fun x1092 () Int)
(declare-fun x774 () x1493)
(declare-fun x4 () Int)
(declare-fun x520 () Bool)
(declare-fun x39 () Int)
(declare-fun x516 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x527 () Int)
(declare-fun x1356 () Int)
(declare-fun x1280 () Int)
(declare-fun x41 () x1493)
(declare-fun x1550 () Int)
(declare-fun x589 () Int)
(declare-fun x1508 () Int)
(declare-fun x28 () Int)
(declare-fun x959 () Int)
(declare-fun x659 () Int)
(declare-fun x423 () Bool)
(declare-fun x511 () Int)
(declare-fun x1389 () Int)
(declare-fun x660 (Int) Int)
(declare-fun x1708 () Int)
(declare-fun x151 () Int)
(declare-fun x1474 () Int)
(declare-fun x1224 () Int)
(declare-fun x330 () Bool)
(declare-fun x1372 () x1493)
(declare-fun x1058 () Int)
(declare-fun x36 () Bool)
(declare-fun x245 () Bool)
(declare-fun x545 () Int)
(declare-fun x1335 () Int)
(declare-fun x1715 () Bool)
(declare-fun x773 () Bool)
(declare-fun x167 () Int)
(declare-fun x585 () Int)
(declare-fun x884 () Bool)
(declare-fun x865 () Bool)
(declare-fun x193 () Int)
(declare-fun x719 () Int)
(declare-fun x1396 () Bool)
(declare-fun x923 () Int)
(declare-fun x943 () Int)
(declare-fun x1682 () Int)
(declare-fun x1345 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1833 () Bool)
(declare-fun x1446 () Int)
(declare-fun x610 () Int)
(declare-fun x1557 () Int)
(declare-fun x241 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x38 () Int)
(declare-fun x1239 () Int)
(declare-fun x1663 () Bool)
(declare-fun x691 () Int)
(declare-fun x1225 () Int)
(declare-fun x888 () Int)
(declare-fun x847 () Int)
(declare-fun x1061 () Int)
(declare-fun x677 () Int)
(declare-fun x590 () Bool)
(declare-fun x831 () Bool)
(declare-fun x991 () Bool)
(declare-fun x262 () Bool)
(declare-fun x1052 () Int)
(declare-fun x301 () Int)
(declare-fun x982 () Int)
(declare-fun x1426 () Int)
(declare-fun x823 () Bool)
(declare-fun x1285 () Int)
(declare-fun x733 () Int)
(declare-fun x539 () Bool)
(declare-fun x770 () Int)
(declare-fun x815 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x1776 () Int)
(declare-fun x891 () Bool)
(declare-fun x954 () Int)
(declare-fun x103 () Int)
(declare-fun x55 () Int)
(declare-fun x1066 () x1493)
(declare-fun x1448 () Int)
(declare-fun x1318 () Int)
(declare-fun x284 () Bool)
(declare-fun x1211 () Int)
(declare-fun x1089 () x1493)
(declare-fun x1723 () Int)
(declare-fun x864 () Int)
(declare-fun x1244 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x900 () Int)
(declare-fun x97 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x226 () Int)
(declare-fun x1702 () Bool)
(declare-fun x1354 () x1493)
(declare-fun x399 () Int)
(declare-fun x1784 () Bool)
(declare-fun x844 () Int)
(declare-fun x1740 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x921 () x1493)
(declare-fun x1567 () Bool)
(declare-fun x35 () Int)
(declare-fun x1570 () Int)
(declare-fun x1018 () Bool)
(declare-fun x380 () Int)
(declare-fun x218 () Int)
(declare-fun x1549 () Int)
(declare-fun x519 () Int)
(declare-fun x1574 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x233 () Int)
(declare-fun x600 () Int)
(declare-fun x695 () Int)
(declare-fun x1075 () Int)
(declare-fun x1399 () Int)
(declare-fun x485 () Int)
(declare-fun x122 () Int)
(declare-fun x1443 () Int)
(declare-fun x919 () Bool)
(declare-fun x905 () Int)
(declare-fun x604 () Int)
(declare-fun x179 () Int)
(declare-fun x512 () Bool)
(declare-fun x1151 () Int)
(declare-fun x1486 () Bool)
(declare-fun x93 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x637 () Int)
(declare-fun x1350 () Bool)
(declare-fun x1502 () Int)
(declare-fun x439 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x1256 () Int)
(declare-fun x337 () Int)
(declare-fun x777 () Bool)
(declare-fun x711 () Bool)
(declare-fun x829 () Int)
(declare-fun x497 () Int)
(declare-fun x16 () Bool)
(declare-fun x845 () Int)
(declare-fun x1526 () Int)
(declare-fun x239 () Bool)
(declare-fun x996 () Int)
(declare-fun x196 () Int)
(declare-fun x417 () Int)
(declare-fun x332 () Bool)
(declare-fun x1336 () Int)
(declare-fun x1630 () Int)
(declare-fun x536 () Int)
(declare-fun x267 () Int)
(declare-fun x880 () Bool)
(declare-fun x632 () Int)
(declare-fun x1385 () Int)
(declare-fun x160 () Int)
(declare-fun x1140 () Bool)
(declare-fun x1163 () Int)
(declare-fun x367 () x1493)
(declare-fun x611 () Int)
(declare-fun x898 () Int)
(declare-fun x1428 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1658 () Int)
(declare-fun x1725 () Int)
(declare-fun x1187 () Int)
(declare-fun x181 () Int)
(declare-fun x1071 () Int)
(declare-fun x500 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x249 () x1493)
(declare-fun x392 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x1814 () Int)
(declare-fun x1060 () Int)
(declare-fun x1827 () Int)
(declare-fun x1804 () Int)
(declare-fun x1086 () Int)
(declare-fun x933 () Int)
(declare-fun x586 () Int)
(declare-fun x1589 () Bool)
(declare-fun x76 () Int)
(declare-fun x1 () Int)
(declare-fun x893 () Int)
(declare-fun x567 () Int)
(declare-fun x676 () Bool)
(declare-fun x453 () Bool)
(declare-fun x491 () Int)
(declare-fun x1200 () Int)
(declare-fun x1146 () Int)
(declare-fun x174 () Bool)
(declare-fun x460 () Bool)
(declare-fun x1598 () Int)
(declare-fun x526 () Int)
(declare-fun x1779 () x1493)
(declare-fun x1040 () Int)
(declare-fun x1688 () Bool)
(declare-fun x814 () Int)
(declare-fun x45 () Bool)
(declare-fun x410 () Int)
(declare-fun x354 () Int)
(declare-fun x583 () Int)
(declare-fun x443 () Int)
(declare-fun x656 () Int)
(declare-fun x13 () Bool)
(declare-fun x54 () Bool)
(declare-fun x339 () x1493)
(declare-fun x734 () Int)
(declare-fun x336 () Int)
(declare-fun x694 () Bool)
(declare-fun x1015 () Int)
(declare-fun x795 () Int)
(declare-fun x1233 () Int)
(declare-fun x1444 () Int)
(declare-fun x1581 () Int)
(declare-fun x33 () Int)
(declare-fun x843 () Int)
(declare-fun x1272 () Int)
(declare-fun x326 (Int) Int)
(declare-fun x444 () Int)
(declare-fun x1685 () Int)
(declare-fun x1624 () Bool)
(declare-fun x43 () Bool)
(declare-fun x523 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x391 () Int)
(declare-fun x58 () Int)
(declare-fun x232 (Int Int) Int)
(declare-fun x10 () Int)
(declare-fun x640 () Int)
(declare-fun x1039 () Bool)
(declare-fun x3 () Bool)
(declare-fun x1048 () Int)
(declare-fun x1442 () x1493)
(declare-fun x404 () Bool)
(declare-fun x1643 () Int)
(declare-fun x172 () x1493)
(declare-fun x244 () Int)
(declare-fun x1735 () Int)
(declare-fun x899 () Int)
(declare-fun x223 () Bool)
(declare-fun x225 () Int)
(declare-fun x1132 () Bool)
(declare-fun x510 () Int)
(declare-fun x1379 () x1493)
(declare-fun x574 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x653 () Bool)
(declare-fun x1560 () Int)
(declare-fun x532 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x311 () Int)
(declare-fun x782 (Int) Int)
(declare-fun x1347 () Int)
(declare-fun x1190 () Bool)
(declare-fun x474 () Int)
(declare-fun x1458 () Int)
(declare-fun x282 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x622 () Int)
(declare-fun x1777 () Int)
(declare-fun x1119 () Int)
(declare-fun x1184 () Int)
(declare-fun x1352 () Bool)
(declare-fun x1664 () Int)
(declare-fun x1817 () Int)
(declare-fun x1064 () Int)
(declare-fun x1037 () Int)
(declare-fun x1296 () Int)
(declare-fun x1212 () Bool)
(declare-fun x1174 () Int)
(declare-fun x1007 () Int)
(declare-fun x1452 () Int)
(declare-fun x1610 () Int)
(declare-fun x626 (x1493) Int)
(declare-fun x397 () Int)
(declare-fun x1011 () Bool)
(declare-fun x133 () Int)
(declare-fun x1736 () Int)
(declare-fun x40 () Bool)
(declare-fun x678 (x1493) Int)
(declare-fun x22 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1153 () Int)
(declare-fun x1714 () Int)
(declare-fun x369 () x1493)
(declare-fun x967 () Int)
(declare-fun x1375 () x1493)
(declare-fun x1482 () Int)
(declare-fun x834 () Bool)
(declare-fun x449 () Bool)
(declare-fun x154 () Int)
(declare-fun x489 () Int)
(declare-fun x11 () Int)
(declare-fun x750 () Bool)
(declare-fun x662 () Int)
(declare-fun x812 () Bool)
(declare-fun x1088 () Int)
(declare-fun x631 () Bool)
(declare-fun x1621 () Int)
(declare-fun x1209 () Bool)
(declare-fun x577 () Bool)
(declare-fun x1258 () Int)
(declare-fun x1148 () Bool)
(declare-fun x147 () Int)
(declare-fun x251 () x1493)
(declare-fun x294 () Int)
(declare-fun x1639 () Bool)
(declare-fun x1661 () x1493)
(declare-fun x1575 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x1369 () Int)
(declare-fun x879 () Bool)
(declare-fun x1168 () Int)
(declare-fun x1530 () Int)
(declare-fun x618 () Int)
(declare-fun x1623 () Bool)
(declare-fun x667 () x1493)
(declare-fun x772 () Int)
(declare-fun x236 () Int)
(declare-fun x735 () Int)
(declare-fun x1523 () Int)
(declare-fun x381 () Int)
(declare-fun x513 () Bool)
(declare-fun x525 () Int)
(declare-fun x106 () Int)
(declare-fun x1478 () Bool)
(declare-fun x30 () Bool)
(declare-fun x1650 () x1493)
(declare-fun x1828 () Int)
(declare-fun x1135 () Int)
(declare-fun x906 () Int)
(declare-fun x499 () Int)
(declare-fun x374 () Bool)
(declare-fun x598 () Int)
(declare-fun x1503 () Bool)
(declare-fun x429 () Int)
(declare-fun x315 () Int)
(declare-fun x252 () Int)
(declare-fun x1749 () Int)
(declare-fun x1142 () Int)
(declare-fun x323 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x1745 () Int)
(declare-fun x1137 () x1493)
(declare-fun x767 () Int)
(declare-fun x621 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x1807 () Int)
(declare-fun x134 () Bool)
(declare-fun x1196 () Int)
(declare-fun x85 () Int)
(declare-fun x588 () Int)
(declare-fun x930 () Int)
(declare-fun x19 () Bool)
(declare-fun x683 () Int)
(declare-fun x1197 () Int)
(declare-fun x1107 () Int)
(declare-fun x1742 () Bool)
(declare-fun x1388 () Int)
(declare-fun x826 () Int)
(declare-fun x495 () Bool)
(declare-fun x118 () Int)
(declare-fun x721 () Int)
(declare-fun x1795 () Int)
(declare-fun x776 () Int)
(declare-fun x867 () x1493)
(declare-fun x1691 () Int)
(declare-fun x517 () Bool)
(declare-fun x760 () Int)
(declare-fun x1470 () x1493)
(declare-fun x570 () Int)
(declare-fun x116 () Bool)
(declare-fun x268 () Int)
(declare-fun x505 () Int)
(declare-fun x457 () Int)
(declare-fun x554 () Int)
(declare-fun x1609 () Int)
(declare-fun x874 () Int)
(declare-fun x114 () Int)
(declare-fun x1361 () Int)
(declare-fun x260 () Int)
(declare-fun x565 () Int)
(declare-fun x152 () Int)
(declare-fun x937 () Bool)
(declare-fun x932 () Int)
(declare-fun x1077 () Bool)
(declare-fun x975 () Int)
(declare-fun x1709 () Int)
(declare-fun x1816 () Int)
(declare-fun x572 () Int)
(declare-fun x1277 () Int)
(declare-fun x842 () Int)
(declare-fun x1176 () Bool)
(declare-fun x1208 () Int)
(declare-fun x1644 () Int)
(declare-fun x1450 () Int)
(declare-fun x765 () Bool)
(declare-fun x835 () Int)
(declare-fun x788 () Int)
(declare-fun x575 () Int)
(declare-fun x1374 () Int)
(declare-fun x1286 () x1493)
(declare-fun x1604 () Int)
(declare-fun x1597 () Int)
(declare-fun x1613 () Int)
(declare-fun x1432 () Int)
(declare-fun x67 () Bool)
(declare-fun x1113 () Int)
(declare-fun x573 () Int)
(declare-fun x1062 () Int)
(declare-fun x1453 () x1493)
(declare-fun x552 () Bool)
(declare-fun x2 () Bool)
(declare-fun x818 () Int)
(declare-fun x1074 () Bool)
(declare-fun x1569 () Int)
(declare-fun x1162 () Bool)
(declare-fun x188 () Bool)
(declare-fun x710 () Int)
(declare-fun x688 () Bool)
(declare-fun x47 () Bool)
(declare-fun x1498 () Int)
(declare-fun x741 () Int)
(declare-fun x383 () Bool)
(declare-fun x1204 () Int)
(declare-fun x1183 () Int)
(declare-fun x642 () Int)
(declare-fun x922 () Bool)
(declare-fun x1261 () Int)
(declare-fun x1487 () x1493)
(declare-fun x1512 () Int)
(declare-fun x877 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1032 () Int)
(declare-fun x1785 () Int)
(declare-fun x202 () Int)
(declare-fun x533 () Bool)
(declare-fun x347 () Int)
(declare-fun x860 () Bool)
(declare-fun x1414 () Int)
(declare-fun x373 () Bool)
(declare-fun x629 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x112 () x1493)
(declare-fun x1024 () Int)
(declare-fun x180 (Int) Int)
(declare-fun x764 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x720 () Int)
(declare-fun x1205 () Int)
(declare-fun x1700 () Int)
(declare-fun x1193 () Bool)
(declare-fun x862 () Bool)
(declare-fun x113 () Int)
(declare-fun x1445 () x1493)
(declare-fun x508 () Int)
(declare-fun x705 () Int)
(declare-fun x156 () Int)
(declare-fun x1358 () Int)
(declare-fun x1748 () Int)
(declare-fun x685 () Bool)
(declare-fun x1299 (x1493) Int)
(declare-fun x357 () Int)
(declare-fun x620 () Int)
(declare-fun x1642 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x504 () Int)
(declare-fun x64 () Int)
(declare-fun x599 () Int)
(declare-fun x821 () Int)
(declare-fun x1511 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x1217 () Int)
(declare-fun x940 () Int)
(declare-fun x1440 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x498 () Int)
(declare-fun x1201 () x1493)
(declare-fun x597 () Bool)
(declare-fun x1668 () Int)
(declare-fun x699 () Int)
(declare-fun x749 () Bool)
(declare-fun x1255 () x1493)
(declare-fun x665 () Int)
(declare-fun x641 () Int)
(declare-fun x1553 () Int)
(declare-fun x995 () Int)
(declare-fun x578 () Int)
(declare-fun x1416 () Int)
(declare-fun x435 () Int)
(declare-fun x854 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x436 () Bool)
(declare-fun x1274 () Int)
(declare-fun x627 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1652 () x1493)
(declare-fun x1317 () Int)
(declare-fun x1053 () Int)
(declare-fun x1093 () x1493)
(declare-fun x266 () Int)
(declare-fun x105 () x1493)
(declare-fun x1539 () Int)
(declare-fun x929 () Int)
(declare-fun x1116 () Int)
(declare-fun x338 () Int)
(declare-fun x1654 () x1493)
(declare-fun x931 () Bool)
(declare-fun x433 () Bool)
(declare-fun x1533 () Int)
(declare-fun x856 () Int)
(declare-fun x1331 () Bool)
(declare-fun x382 () Bool)
(declare-fun x625 () x1493)
(declare-fun x1812 () Bool)
(declare-fun x322 () Int)
(declare-fun x1304 () Int)
(declare-fun x37 () Int)
(declare-fun x755 () Int)
(declare-fun x1391 () Int)
(declare-fun x159 (Int) Int)
(declare-fun x1576 () Int)
(declare-fun x1152 () Bool)
(declare-fun x833 () Int)
(declare-fun x580 () Int)
(declare-fun x1808 () Bool)
(declare-fun x725 () Int)
(declare-fun x724 (Int) x1493)
(declare-fun x1607 (x1493) Int)
(declare-fun x312 () Int)
(declare-fun x163 () Bool)
(declare-fun x352 () Bool)
(declare-fun x212 () Int)
(declare-fun x204 () Int)
(declare-fun x182 () Int)
(declare-fun x127 () Int)
(declare-fun x1269 () Int)
(declare-fun x878 () Int)
(declare-fun x343 () Bool)
(declare-fun x819 () Int)
(declare-fun x1170 () Bool)
(declare-fun x1366 () Int)
(declare-fun x1763 () x1493)
(declare-fun x1641 () Bool)
(declare-fun x1628 () Int)
(declare-fun x1706 () Int)
(declare-fun x1049 () Int)
(declare-fun x1524 () Int)
(declare-fun x1499 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x1545 () Int)
(declare-fun x673 () Int)
(declare-fun x753 () Int)
(declare-fun x1694 () x1493)
(declare-fun x7 () Int)
(declare-fun x1666 () Int)
(declare-fun x1362 () Int)
(declare-fun x689 () Bool)
(declare-fun x1080 () Int)
(declare-fun x73 () Int)
(declare-fun x910 () Int)
(declare-fun x205 () Int)
(declare-fun x1731 () Int)
(declare-fun x1219 () Int)
(declare-fun x1114 () Bool)
(declare-fun x703 () Bool)
(declare-fun x1395 () Int)
(declare-fun x1069 () Int)
(declare-fun x124 () Bool)
(declare-fun x613 () Int)
(declare-fun x1729 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1766 () Int)
(declare-fun x1415 () Int)
(declare-fun x1161 () Int)
(declare-fun x1471 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x595 () Int)
(declare-fun x364 () Bool)
(declare-fun x1098 () Int)
(declare-fun x529 () Int)
(declare-fun x1191 () Int)
(declare-fun x1738 () Int)
(declare-fun x1109 () Int)
(declare-fun x161 () Int)
(declare-fun x1265 () Int)
(declare-fun x1634 () Int)
(declare-fun x602 () Bool)
(declare-fun x298 () Int)
(declare-fun x530 (Int Int) Int)
(declare-fun x464 () Int)
(declare-fun x155 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x1540 () Int)
(declare-fun x1618 () x1493)
(declare-fun x1456 () Int)
(declare-fun x743 () Bool)
(declare-fun x407 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1348 () Int)
(declare-fun x999 () Int)
(declare-fun x60 () Int)
(declare-fun x1213 () x1493)
(declare-fun x1236 () Bool)
(declare-fun x1646 () Int)
(declare-fun x1515 () Int)
(declare-fun x1672 (Int Int) Int)
(declare-fun x1606 () Int)
(declare-fun x537 () Bool)
(declare-fun x146 () Int)
(declare-fun x1291 () Int)
(declare-fun x115 () Bool)
(declare-fun x1671 () Int)
(declare-fun x1467 () Int)
(declare-fun x1181 () Int)
(declare-fun x1178 () Bool)
(declare-fun x1535 () Int)
(declare-fun x1339 () Int)
(declare-fun x1079 () Bool)
(declare-fun x476 () Int)
(declare-fun x630 () Int)
(declare-fun x1027 () Int)
(declare-fun x981 () Bool)
(declare-fun x747 () Bool)
(declare-fun x1655 () Int)
(declare-fun x1101 () Int)
(declare-fun x87 () Bool)
(declare-fun x1373 () Int)
(declare-fun x1036 () Bool)
(declare-fun x104 () Bool)
(declare-fun x946 () Int)
(declare-fun x1412 () Int)
(declare-fun x57 () Int)
(declare-fun x1220 () Int)
(declare-fun x830 () Int)
(declare-fun x1229 () x1493)
(declare-fun x1223 () Bool)
(declare-fun x846 () Int)
(declare-fun x1820 () Bool)
(declare-fun x189 () Bool)
(declare-fun x492 () Bool)
(declare-fun x440 () Bool)
(declare-fun x207 () Int)
(declare-fun x126 () Int)
(declare-fun x1516 () Bool)
(declare-fun x1405 () Int)
(declare-fun x1488 () Bool)
(declare-fun x925 () Bool)
(declare-fun x904 () Int)
(declare-fun x978 () Bool)
(declare-fun x222 () Int)
(declare-fun x1468 () Bool)
(declare-fun x1818 () Int)
(declare-fun x140 () x1493)
(declare-fun x242 () Int)
(declare-fun x1419 () Bool)
(declare-fun x1226 (x1493) Int)
(declare-fun x296 () Int)
(declare-fun x331 () Int)
(declare-fun x56 () Int)
(declare-fun x1460 () Bool)
(declare-fun x754 () Int)
(declare-fun x484 () Int)
(declare-fun x668 () Int)
(declare-fun x324 () Int)
(declare-fun x644 () Int)
(declare-fun x1578 () Int)
(declare-fun x1023 () Int)
(declare-fun x828 () Int)
(declare-fun x531 () Int)
(declare-fun x1118 () Bool)
(declare-fun x23 () Int)
(declare-fun x582 () Int)
(declare-fun x1095 () Int)
(declare-fun x886 () Bool)
(declare-fun x1377 () Int)
(declare-fun x997 () Bool)
(declare-fun x790 () Int)
(declare-fun x897 () Bool)
(declare-fun x210 () Int)
(declare-fun x540 () Int)
(declare-fun x403 () Int)
(declare-fun x872 () Int)
(declare-fun x6 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1320 () Int)
(declare-fun x422 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x1322 () Int)
(declare-fun x1441 () Int)
(declare-fun x1013 () Int)
(declare-fun x68 () Bool)
(declare-fun x344 () Int)
(declare-fun x1010 () Int)
(declare-fun x247 () Bool)
(declare-fun x1614 () Int)
(declare-fun x875 () Int)
(declare-fun x1087 () Int)
(declare-fun x890 () Int)
(declare-fun x715 () Int)
(declare-fun x1713 () x1493)
(declare-fun x1214 () Int)
(declare-fun x758 (Int) Int)
(declare-fun x258 () Int)
(declare-fun x1681 () Int)
(declare-fun x628 () Int)
(declare-fun x302 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x209 () Int)
(declare-fun x983 () Int)
(declare-fun x1778 () Int)
(declare-fun x980 () Bool)
(declare-fun x482 () Bool)
(declare-fun x185 () Int)
(declare-fun x1806 () Int)
(declare-fun x1139 () Bool)
(declare-fun x95 (Int) Int)
(declare-fun x594 () Int)
(declare-fun x1353 () Int)
(declare-fun x1034 () Int)
(declare-fun x173 () Int)
(declare-fun x240 () Int)
(declare-fun x463 () Int)
(declare-fun x1091 () Int)
(declare-fun x145 () x1493)
(declare-fun x521 () Int)
(declare-fun x916 () Int)
(declare-fun x624 () Bool)
(declare-fun x985 () Int)
(declare-fun x1455 () Int)
(declare-fun x1254 () Int)
(declare-fun x21 () Bool)
(declare-fun x1115 () Int)
(declare-fun x1756 () Int)
(declare-fun x779 () Int)
(declare-fun x1423 () Int)
(declare-fun x1651 () Int)
(declare-fun x745 () Int)
(declare-fun x385 () Bool)
(declare-fun x478 () Int)
(declare-fun x1002 () Bool)
(declare-fun x285 () Int)
(declare-fun x1328 () Int)
(declare-fun x438 () Int)
(declare-fun x1799 () Bool)
(declare-fun x1494 () Int)
(declare-fun x869 () Int)
(declare-fun x966 () Int)
(declare-fun x467 () Int)
(declare-fun x1243 () Int)
(declare-fun x1529 () Bool)
(declare-fun x1538 () Int)
(declare-fun x920 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x1459 () Int)
(declare-fun x131 () Int)
(declare-fun x1179 () Int)
(declare-fun x709 () Bool)
(declare-fun x1303 () Int)
(declare-fun x1310 () Int)
(declare-fun x914 () Bool)
(declare-fun x987 () Int)
(declare-fun x1054 () Bool)
(declare-fun x1705 () Int)
(declare-fun x1232 () Bool)
(declare-fun x42 () Int)
(declare-fun x1525 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x274 () Int)
(declare-fun x654 () Int)
(declare-fun x1103 () Bool)
(declare-fun x778 () Bool)
(declare-fun x170 () Int)
(declare-fun x1195 () Int)
(declare-fun x698 (Int) Int)
(declare-fun x798 () Int)
(declare-fun x8 () Int)
(declare-fun x1298 () Bool)
(declare-fun x71 () Int)
(declare-fun x50 () Int)
(declare-fun x142 () Int)
(declare-fun x135 () Int)
(declare-fun x751 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x190 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x1760 () Int)
(declare-fun x412 () Int)
(declare-fun x1648 () Bool)
(declare-fun x377 () Int)
(declare-fun x903 () Bool)
(declare-fun x265 () Int)
(declare-fun x1622 () Int)
(declare-fun x234 () Bool)
(declare-fun x936 () Int)
(declare-fun x909 () Int)
(declare-fun x690 () Int)
(declare-fun x462 () Int)
(declare-fun x206 (Int) Int)
(declare-fun x368 () Bool)
(declare-fun x1030 () Int)
(declare-fun x430 () Int)
(declare-fun x1346 () Bool)
(declare-fun x310 () Int)
(declare-fun x1798 () Int)
(declare-fun x550 () Bool)
(declare-fun x375 () Int)
(declare-fun x907 () Int)
(declare-fun x1194 () Bool)
(declare-fun x465 () Bool)
(declare-fun x794 () Bool)
(declare-fun x1802 () Int)
(declare-fun x125 () Bool)
(declare-fun x320 () Int)
(declare-fun x1143 () Int)
(declare-fun x680 () Int)
(declare-fun x1050 () Int)
(declare-fun x501 () Int)
(declare-fun x1551 () Int)
(declare-fun x49 () Int)
(declare-fun x1826 () Int)
(declare-fun x617 () Bool)
(declare-fun x1398 () Int)
(declare-fun x977 () Bool)
(declare-fun x851 () Int)
(declare-fun x90 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x361 () Int)
(declare-fun x81 () Int)
(declare-fun x466 () Bool)
(declare-fun x895 () Int)
(declare-fun x718 () Int)
(declare-fun x486 () Bool)
(declare-fun x1809 () Int)
(declare-fun x1234 () Int)
(declare-fun x1159 () Int)
(declare-fun x841 () Int)
(declare-fun x1577 () Int)
(declare-fun x645 () Int)
(declare-fun x1006 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x1558 () Int)
(declare-fun x1266 () Bool)
(declare-fun x684 () Bool)
(declare-fun x948 () Int)
(declare-fun x868 () Int)
(declare-fun x1171 () Int)
(declare-fun x61 () Int)
(declare-fun x1218 () Int)
(declare-fun x1463 () Int)
(declare-fun x75 () Int)
(declare-fun x912 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x1314 () Int)
(declare-fun x194 () Bool)
(declare-fun x1124 () Int)
(declare-fun x1434 () Bool)
(declare-fun x1076 () Int)
(declare-fun x365 () Int)
(declare-fun x1099 () Int)
(declare-fun x1521 () Int)
(declare-fun x195 () Bool)
(declare-fun x1477 () Int)
(declare-fun x197 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x248 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x1182 () Int)
(declare-fun x1435 () Int)
(declare-fun x409 () Bool)
(declare-fun x1123 () Int)
(declare-fun x534 () x1493)
(declare-fun x243 () Int)
(declare-fun x596 () Int)
(declare-fun x1602 () Bool)
(declare-fun x1349 () Int)
(declare-fun x178 () Bool)
(declare-fun x1810 () Int)
(declare-fun x1507 () Int)
(declare-fun x952 () Bool)
(declare-fun x1216 () Int)
(declare-fun x168 () Int)
(declare-fun x1593 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1527 () Int)
(declare-fun x472 () Int)
(declare-fun x687 () Bool)
(declare-fun x1573 () Int)
(declare-fun x405 () Bool)
(declare-fun x538 () Bool)
(declare-fun x986 () Int)
(declare-fun x509 () Bool)
(declare-fun x546 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x27 () Int)
(declare-fun x1046 () Int)
(declare-fun x1313 () Bool)
(declare-fun x756 () Bool)
(declare-fun x65 () Int)
(declare-fun x1273 () Int)
(declare-fun x461 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x283 () Int)
(declare-fun x809 () Int)
(declare-fun x1678 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x370 () Bool)
(declare-fun x1014 () Int)
(declare-fun x543 () Int)
(declare-fun x408 () Bool)
(declare-fun x1156 () Int)
(declare-fun x955 () Int)
(declare-fun x1690 () Int)
(declare-fun x652 () Bool)
(declare-fun x1245 () Int)
(declare-fun x785 () Int)
(declare-fun x607 () Int)
(declare-fun x716 () Int)
(declare-fun x1797 () Int)
(declare-fun x647 () Int)
(declare-fun x1611 () Int)
(declare-fun x807 () Int)
(declare-fun x1241 () Int)
(declare-fun x1149 () Int)
(declare-fun x1325 () Int)
(declare-fun x281 () Bool)
(declare-fun x1005 () Int)
(declare-fun x88 () Int)
(declare-fun x413 () Int)
(declare-fun x998 () Int)
(declare-fun x307 () Int)
(declare-fun x304 () Int)
(declare-fun x584 () Int)
(declare-fun x393 (Int) Int)
(declare-fun x1324 () x1493)
(declare-fun x123 (Int Int) Int)
(declare-fun x165 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x1253 () Int)
(declare-fun x1338 () Bool)
(declare-fun x866 () Int)
(declare-fun x314 () Int)
(declare-fun x1594 () Bool)
(declare-fun x1126 () Int)
(declare-fun x1041 () Int)
(declare-fun x1439 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x238 () Int)
(declare-fun x452 () Int)
(declare-fun x1228 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x606 () Int)
(declare-fun x934 () Int)
(declare-fun x1360 () Int)
(declare-fun x1528 () Int)
(declare-fun x136 () Int)
(declare-fun x353 () Bool)
(declare-fun x335 () Bool)
(declare-fun x479 () Bool)
(declare-fun x1342 () Int)
(declare-fun x1582 () Int)
(declare-fun x329 () Bool)
(declare-fun x271 () Int)
(declare-fun x1601 () Int)
(declare-fun x1431 () Int)
(declare-fun x1105 () Int)
(declare-fun x728 () Int)
(declare-fun x708 () Int)
(declare-fun x1832 () Int)
(declare-fun x455 () Int)
(declare-fun x1100 () Int)
(declare-fun x503 () Int)
(declare-fun x592 () Int)
(declare-fun x24 () Int)
(declare-fun x935 () Bool)
(declare-fun x1768 () Bool)
(declare-fun x1677 (Int) Int)
(declare-fun x824 () Int)
(declare-fun x1676 () Bool)
(declare-fun x1394 () Int)
(declare-fun x216 () Bool)
(declare-fun x276 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x737 () Bool)
(declare-fun x1237 () x1493)
(declare-fun x1090 () Int)
(declare-fun x84 () Int)
(declare-fun x158 () Bool)
(declare-fun x99 () Int)
(declare-fun x1619 () Int)
(declare-fun x1404 () Int)
(declare-fun x286 () Int)
(declare-fun x1246 () Int)
(declare-fun x150 () x1493)
(declare-fun x1008 () Bool)
(declare-fun x427 () Int)
(declare-fun x857 () Bool)
(declare-fun x327 () Bool)
(declare-fun x522 () Int)
(declare-fun x1800 () Int)
(declare-fun x1620 () Int)
(declare-fun x219 () Int)
(declare-fun x389 () Int)
(declare-fun x1546 () Bool)
(declare-fun x447 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x290 () Int)
(declare-fun x1580 () Bool)
(declare-fun x414 () Int)
(declare-fun x1519 () Int)
(declare-fun x927 () Bool)
(declare-fun x1083 () Int)
(declare-fun x648 () Int)
(declare-fun x308 () Bool)
(declare-fun x971 () Int)
(declare-fun x316 () Int)
(declare-fun x459 () x1493)
(declare-fun x1755 () Int)
(declare-fun x362 () Int)
(declare-fun x1251 () Int)
(declare-fun x1000 () Bool)
(declare-fun x1117 () Int)
(declare-fun x608 () Bool)
(declare-fun x78 () Int)
(declare-fun x1510 () Int)
(declare-fun x822 () Int)
(declare-fun x953 () Int)
(declare-fun x143 () Bool)
(declare-fun x237 () Int)
(declare-fun x1563 () Bool)
(declare-fun x1111 () Int)
(declare-fun x853 () Int)
(declare-fun x1312 () Int)
(declare-fun x542 () Int)
(declare-fun x1447 () Int)
(declare-fun x726 () Int)
(declare-fun x701 () Bool)
(declare-fun x793 () Bool)
(declare-fun x700 () Bool)
(declare-fun x278 () Int)
(declare-fun x979 () Int)
(declare-fun x217 () Int)
(declare-fun x623 () Int)
(declare-fun x254 () Bool)
(declare-fun x1189 () Int)
(declare-fun x98 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x359 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1155 () Int)
(declare-fun x208 () Int)
(declare-fun x1278 () Int)
(declare-fun x762 () Int)
(declare-fun x1495 () Bool)
(declare-fun x804 () Bool)
(declare-fun x576 () Int)
(declare-fun x553 () Bool)
(declare-fun x825 (Int) Int)
(declare-fun x272 () Int)
(declare-fun x535 () Int)
(declare-fun x110 () x1493)
(declare-fun x1425 () Bool)
(declare-fun x432 () Int)
(declare-fun x44 () Int)
(declare-fun x120 () Int)
(declare-fun x557 () Int)
(declare-fun x547 () Bool)
(declare-fun x769 () Bool)
(declare-fun x636 () Int)
(declare-fun x717 () Int)
(declare-fun x775 () Int)
(declare-fun x198 () Int)
(declare-fun x418 () Int)
(declare-fun x643 () Int)
(declare-fun x1473 () Int)
(declare-fun x1764 () Int)
(declare-fun x973 () Int)
(declare-fun x25 () Bool)
(declare-fun x1747 () Int)
(declare-fun x713 () Int)
(declare-fun x1633 () Int)
(declare-fun x363 () Bool)
(declare-fun x944 () x1493)
(declare-fun x1479 () Int)
(declare-fun x924 () Int)
(declare-fun x609 () Int)
(declare-fun x1789 () Bool)
(declare-fun x1600 () x1493)
(declare-fun x887 () Int)
(declare-fun x100 () Int)
(declare-fun x1043 () Int)
(declare-fun x855 () Int)
(declare-fun x1662 () Bool)
(declare-fun x1288 () Int)
(declare-fun x1687 () Int)
(declare-fun x1541 () Int)
(declare-fun x1616 () Int)
(declare-fun x1531 () Bool)
(declare-fun x227 () Bool)
(declare-fun x635 () x1493)
(declare-fun x1825 () Int)
(declare-fun x913 () Int)
(define-fun x707 ((x1493 x1493) (x166 Int)) x1493 (ite ((_ is x1376) x1493) (x1376 (x802 x1493) (+ (x990 x1493) x166)) (ite ((_ is x1665) x1493) (x1665 (x876 x1493) (x1068 x1493) (+ x166 (x26 x1493))) (x1536 (+ x166 (x1790 x1493))))))
(define-fun x581 ((x164 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x164) (<= 0 x164)) x164 (- x164 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x48 ((x164 Int)) Int (ite (and (> 0 x164) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x164)) (+ x164 115792089237316195423570985008687907853269984665640564039457584007913129639936) x164))
(define-fun x46 ((x164 Int)) Int (ite (and (<= 0 x164) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x164)) x164 (ite (and (< x164 231584178474632390847141970017375815706539969331281128078915168015826259279872) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x164)) (- x164 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x164 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x164)) (+ x164 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x164 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1141 ((x1240 Int)) Bool (and (>= x1240 0) (< x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x960 ((x1240 Int)) Bool (and (= (x657 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1240) x1240) (= (x657 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1240)))
(define-fun x1730 ((x1240 Int)) Bool (and (= 0 (x657 0 x1240)) (= (x657 x1240 0) 0)))
(define-fun x199 ((x1240 Int)) Bool (= x1240 (x657 x1240 x1240)))
(define-fun x873 ((x1240 Int)) Bool (and (x1730 x1240) (x199 x1240) (x960 x1240)))
(define-fun x137 ((x1240 Int) (x1786 Int)) Bool (= (x657 x1240 x1786) (x657 x1786 x1240)))
(define-fun x1724 ((x1240 Int) (x1786 Int)) Bool (and (=> (>= x1240 0) (>= x1240 (x657 x1240 x1786))) (<= 0 (x657 x1240 x1786)) (=> (>= x1786 0) (>= x1786 (x657 x1240 x1786)))))
(define-fun x801 ((x1240 Int) (x1786 Int)) Bool (and (x137 x1240 x1786) (x1724 x1240 x1786)))
(define-fun x292 ((x1240 Int)) Bool (= (x46 x1240) (+ (x657 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x123 x1240 32))))
(define-fun x184 ((x1240 Int)) Bool (and (x801 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x292 x1240)))
(define-fun x1485 ((x1240 Int) (x1786 Int)) Bool (and (<= 0 (x123 x1240 x1786)) (> x1786 (x123 x1240 x1786))))
(define-fun x870 ((x1240 Int) (x1786 Int)) Bool (=> (and (> x1786 0) (<= 0 x1240)) (= (= x1240 (x123 x1240 x1786)) (> x1786 x1240))))
(define-fun x970 ((x1240 Int) (x1786 Int)) Bool (=> (and (< 0 x1786) (and (<= x1786 x1240) (> (+ x1786 x1786) x1240))) (= (- x1240 x1786) (x123 x1240 x1786))))
(define-fun x1543 ((x1240 Int)) Bool (= 0 (x123 0 x1240)))
(define-fun x789 ((x1240 Int)) Bool (= (x123 x1240 1) 0))
(define-fun x1632 ((x1240 Int)) Bool (= (x123 x1240 x1240) 0))
(define-fun x346 ((x1240 Int)) Bool (and (x789 x1240) (x1632 x1240) (x1543 x1240)))
(define-fun x396 ((x1240 Int) (x1786 Int)) Bool (=> (and (> x1786 0) (> x1240 0)) (= (< (x1120 x1240 x1786) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1786 (x1672 (x46 (x1120 x1240 x1786)) x1240)))))
(define-fun x470 ((x1240 Int) (x1786 Int)) Bool (=> (and (not (= x1240 0)) (not (= 0 x1786))) (and (= x1786 (x1672 (x1120 x1240 x1786) x1240)) (= (x1672 (x1120 x1240 x1786) x1786) x1240))))
(define-fun x1571 ((x1240 Int) (x1786 Int)) Bool (=> (and (> x1786 0) (< 0 x1240)) (= (< (x1672 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1240) x1786) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1120 x1240 x1786)))))
(define-fun x593 ((x1240 Int) (x1786 Int)) Bool (and (= (x46 (x1120 (- x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1786 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x46 (x1120 x1240 x1786))) (= (x46 (x1120 (- x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1786)) (x46 (x1120 x1240 x1786))) (= (x46 (x1120 x1240 (- x1786 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x46 (x1120 x1240 x1786)))))
(define-fun x69 ((x1240 Int) (x1786 Int)) Bool (and (=> (and (and (<= x1786 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1786)) (and (> x1240 0) (<= x1240 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1786) (x1672 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1240)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1120 x1240 (- x1786 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1786) (> x1786 0)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1240) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1240))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1240) (x1672 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1786)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1120 (- x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1786)))) (=> (and (and (<= x1240 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1240)) (and (> x1786 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1786))) (= (>= (x1672 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1786)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1240)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1120 (- x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1786 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1240) (> x1240 0)) (and (< 0 x1786) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1786))) (= (>= (x1672 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1786) x1240) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1120 x1240 x1786))))))
(define-fun x70 ((x1240 Int)) Bool (and (= 0 (x1120 x1240 0)) (= 0 (x1120 0 x1240))))
(define-fun x892 ((x1240 Int)) Bool (and (= x1240 (x1120 1 x1240)) (= x1240 (x1120 x1240 1))))
(define-fun x696 ((x1240 Int)) Bool (and (x892 x1240) (x70 x1240)))
(define-fun x1344 ((x1240 Int) (x1786 Int)) Bool (=> (and (> x1240 0) (< 0 x1786)) (and (<= (x1672 x1240 x1786) x1240) (<= 0 (x1672 x1240 x1786)))))
(define-fun x1592 ((x1240 Int) (x1786 Int)) Bool (=> (and (and (< x1786 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1786 1)) (and (<= 0 x1240) (< x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1672 x1240 x1786)) (<= 0 (x1672 x1240 x1786)))))
(define-fun x1534 ((x1240 Int) (x1786 Int)) Bool (=> (and (< 1 x1786) (< x1786 x1240)) (> x1240 (x1672 x1240 x1786))))
(define-fun x803 ((x1240 Int) (x1786 Int)) Bool (=> (and (< 0 x1786) (< 0 x1240)) (= (= (x1672 x1240 x1786) 0) (> x1786 x1240))))
(define-fun x471 ((x1240 Int) (x1786 Int)) Bool (=> (and (> x1786 0) (> x1240 0)) (and (<= (x1120 (x1672 x1240 x1786) x1786) x1240) (> (x1120 (x1672 x1240 x1786) x1786) (- x1240 x1786)))))
(define-fun x783 ((x1240 Int) (x1786 Int)) Bool (and (x1534 x1240 x1786) (x471 x1240 x1786) (x803 x1240 x1786) (x1344 x1240 x1786) (x1592 x1240 x1786)))
(define-fun x1773 ((x1240 Int)) Bool (= 0 (x1672 0 x1240)))
(define-fun x1271 ((x1240 Int)) Bool (= (x1672 x1240 1) x1240))
(define-fun x342 ((x1240 Int)) Bool (=> (not (= 0 x1240)) (= 1 (x1672 x1240 x1240))))
(define-fun x827 ((x1240 Int)) Bool (and (x342 x1240) (x1271 x1240) (x1773 x1240)))
(define-fun x406 ((x1240 Int)) Bool (= (x657 x1240 1461501637330902918203684832716283019655932542975) (x123 x1240 1461501637330902918203684832716283019655932542976)))
(define-fun x1203 ((x1240 Int)) Bool (and (x406 x1240) (x801 x1240 1461501637330902918203684832716283019655932542975)))
(define-fun x261 ((x1240 Int)) Bool (= (+ (x657 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x123 x1240 256)) (x46 x1240)))
(define-fun x894 ((x1240 Int)) Bool (and (x801 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x261 x1240)))
(define-fun x74 ((x1240 Int)) Bool (= (x123 x1240 18446744073709551616) (x657 x1240 18446744073709551615)))
(define-fun x1323 ((x1240 Int)) Bool (and (x801 x1240 18446744073709551615) (x74 x1240)))
(define-fun x253 ((x1240 Int) (x1786 Int)) Bool (= (x1120 x1240 x1786) (x1120 x1786 x1240)))
(define-fun x325 ((x1240 Int) (x1786 Int)) Bool (and (=> (and (> 0 x1240) (< 0 x1786)) (> 0 (x1120 x1240 x1786))) (=> (and (> 0 x1786) (> x1240 0)) (< (x1120 x1240 x1786) 0)) (=> (and (< 0 x1786) (< 0 x1240)) (> (x1120 x1240 x1786) 0)) (=> (and (< x1240 0) (> 0 x1786)) (> (x1120 x1240 x1786) 0))))
(define-fun x138 ((x1240 Int) (x1786 Int)) Bool (and (x470 x1240 x1786) (x396 x1240 x1786) (x253 x1240 x1786) (x69 x1240 x1786) (x1571 x1240 x1786) (x325 x1240 x1786) (x593 x1240 x1786)))
(define-fun x951 ((x1240 Int)) Bool (= (x657 x1240 1) (x123 x1240 2)))
(define-fun x1787 ((x1240 Int)) Bool (and (x801 x1240 1) (x951 x1240)))
(define-fun x1436 ((x1240 Int)) Bool (= (x657 x1240 79228162514264337593543950335) (x123 x1240 79228162514264337593543950336)))
(define-fun x559 ((x1240 Int)) Bool (and (x1436 x1240) (x801 x1240 79228162514264337593543950335)))
(define-fun x34 ((x1240 Int)) Bool (= (x657 x1240 115792089237316195417293883273301227089434195242512125785869492901042639077375) (- x1240 (x657 x1240 6277101735386680763835789423128438253588091106870490562560))))
(define-fun x372 ((x1240 Int)) Bool (and (x801 x1240 115792089237316195417293883273301227089434195242512125785869492901042639077375) (x34 x1240)))
(define-fun x441 ((x1240 Int)) Bool (= (x123 x1240 6277101735386680763835789423207666416102355444464034512896) (+ (x123 x1240 79228162514264337593543950336) (x657 x1240 6277101735386680763835789423128438253588091106870490562560))))
(define-fun x1669 ((x1240 Int)) Bool (and (x801 x1240 6277101735386680763835789423128438253588091106870490562560) (x441 x1240)))
(define-fun x549 ((x1240 Int)) Bool (= (x123 x1240 4294967296) (x657 x1240 4294967295)))
(define-fun x1701 ((x1240 Int)) Bool (and (x801 x1240 4294967295) (x549 x1240)))
(define-fun x1402 ((x1240 Int)) Bool (= (x46 x1240) (+ (x123 x1240 79228162514264337593543950336) (x657 x1240 115792089237316195423570985008687907853269984665561335876943319670319585689600))))
(define-fun x1167 ((x1240 Int)) Bool (and (x801 x1240 115792089237316195423570985008687907853269984665561335876943319670319585689600) (x1402 x1240)))
(define-fun x1257 ((x1240 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x530 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1240)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x530 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1368 ((x1240 Int)) Bool (and (= x1240 (x530 0 x1240)) (= x1240 (x530 x1240 0))))
(define-fun x727 ((x1240 Int)) Bool (= x1240 (x530 x1240 x1240)))
(define-fun x658 ((x1240 Int)) Bool (and (x727 x1240) (x1368 x1240) (x1257 x1240)))
(define-fun x91 ((x1240 Int) (x1786 Int)) Bool (= (x530 x1240 x1786) (x530 x1786 x1240)))
(define-fun x257 ((x1240 Int) (x1786 Int)) Bool (and (=> (>= x1786 0) (<= x1786 (x530 x1240 x1786))) (<= (x530 x1240 x1786) (+ x1786 x1240)) (=> (>= x1240 0) (>= (x530 x1240 x1786) x1240))))
(define-fun x62 ((x1240 Int) (x1786 Int)) Bool (and (x257 x1240 x1786) (x91 x1240 x1786)))
(define-fun x506 ((x1240 Int)) Bool (= (- x1240 (x657 x1240 26959946660873538059280334323183841250429478006438217036639575736320)) (x657 x1240 115792089210356248762697446949407573530086143415211086033019366971273553903615)))
(define-fun x1645 ((x1240 Int)) Bool (and (x801 x1240 115792089210356248762697446949407573530086143415211086033019366971273553903615) (x506 x1240)))
(define-fun x655 ((x1240 Int)) Bool (= (+ (x657 x1240 26959946660873538059280334323183841250429478006438217036639575736320) (x123 x1240 6277101735386680763835789423207666416102355444464034512896)) (x123 x1240 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x1341 ((x1240 Int)) Bool (and (x655 x1240) (x801 x1240 26959946660873538059280334323183841250429478006438217036639575736320)))
(define-fun x781 ((x1240 Int)) Bool (= (x657 x1240 26959946667150639794667015087019630673637144422540572481103610249215) (x123 x1240 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x817 ((x1240 Int)) Bool (and (x781 x1240) (x801 x1240 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x697 ((x1240 Int)) Bool (= (x657 x1240 255) (x123 x1240 256)))
(define-fun x1754 ((x1240 Int)) Bool (and (x697 x1240) (x801 x1240 255)))
(define-fun x1680 ((x1771 Int)) Int (ite (= x1771 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1660 x1771)))
(define-fun x591 ((x1771 Int)) Int (ite (= 132 x1771) x1797 (x1680 x1771)))
(define-fun x1707 ((x1771 Int)) Int (ite (= 0 x1771) x966 (x805 x1771)))
(define-fun x270 ((x1771 Int)) Int (ite (= 128 x1771) x966 (x591 x1771)))
(define-fun x1718 ((x1771 Int)) Int (ite x701 (x270 x1771) (x591 x1771)))
(define-fun x1413 ((x1771 x1493)) Int (x1607 x1771))
(define-fun x1125 ((x1771 x1493)) Int (x678 x1771))
(define-fun x859 ((x1771 Int)) Int (ite (= x1771 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1418 x1771)))
(define-fun x9 ((x1771 Int)) Int (ite (= 132 x1771) x1797 (x859 x1771)))
(define-fun x908 ((x1771 Int)) Int (ite (= 128 x1771) x200 (x9 x1771)))
(define-fun x1757 ((x1771 Int)) Int (ite x1036 (x908 x1771) (x9 x1771)))
(define-fun x386 ((x1771 x1493)) Int (x1125 x1771))
(define-fun x1433 ((x1771 x1493)) Int (x386 x1771))
(define-fun x1332 ((x1771 x1493)) Int (ite (= x1771 x1487) x1502 (x1433 x1771)))
(define-fun x1033 ((x1771 x1493)) Int (ite (= x1771 x1694) x1101 (x1332 x1771)))
(define-fun x723 ((x1771 x1493)) Int (ite x1585 (x1433 x1771) (x1033 x1771)))
(define-fun x1003 ((x1771 x1493)) Int (x723 x1771))
(define-fun x289 ((x1771 x1493)) Int (ite x1345 (x723 x1771) (x1003 x1771)))
(define-fun x279 ((x1771 Int)) Int (ite (= x1061 x1771) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1718 x1771)))
(define-fun x1051 ((x1771 Int)) Int (ite (= x1782 x1771) x1797 (x279 x1771)))
(define-fun x968 ((x1771 Int)) Int (ite (= x1061 x1771) x1533 (x1051 x1771)))
(define-fun x1752 ((x1771 Int)) Int (ite x619 (x968 x1771) (x1051 x1771)))
(define-fun x130 ((x1771 x1493)) Int (x766 x1771))
(define-fun x1136 ((x1771 Int)) Int (ite (= x1771 x391) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1757 x1771)))
(define-fun x350 ((x1771 Int)) Int (ite (= x1771 x1803) x1797 (x1136 x1771)))
(define-fun x366 ((x1771 Int)) Int (ite (= x391 x1771) x846 (x350 x1771)))
(define-fun x426 ((x1771 Int)) Int (ite x1615 (x366 x1771) (x350 x1771)))
(define-fun x317 ((x1771 x1493)) Int (x130 x1771))
(define-fun x250 ((x1771 x1493)) Int (ite (= x1771 x921) x1777 (x317 x1771)))
(define-fun x1275 ((x1771 x1493)) Int (ite x186 (x317 x1771) (x250 x1771)))
(define-fun x211 ((x1771 x1493)) Int (ite x282 (x317 x1771) (ite x407 (x317 x1771) (ite x2 (x317 x1771) (x1275 x1771)))))
(define-fun x1072 ((x1771 x1493)) Int (ite (= x1771 (x1536 9)) x1303 (x211 x1771)))
(define-fun x1085 ((x1771 x1493)) Int (ite (= (x1536 9) x1771) x708 (x1072 x1771)))
(define-fun x1380 ((x1771 x1493)) Int (ite (= x1771 (x1536 9)) x1560 (x1085 x1771)))
(define-fun x739 ((x1771 x1493)) Int (ite (= x1771 (x1536 9)) x1609 (x1072 x1771)))
(define-fun x1231 ((x1771 x1493)) Int (ite (= x1771 (x1536 9)) x1551 (x1072 x1771)))
(define-fun x17 ((x1771 x1493)) Int (ite x978 (ite x539 (x1380 x1771) (x739 x1771)) (x1231 x1771)))
(define-fun x1734 ((x1771 x1493)) Int (ite (= x1771 (x1536 2)) x618 (x17 x1771)))
(define-fun x1401 ((x1771 x1493)) Int (ite (= x150 x1771) x1027 (x1734 x1771)))
(define-fun x615 ((x1771 x1493)) Int (ite x408 (x17 x1771) (x1401 x1771)))
(define-fun x839 ((x1771 x1493)) Int (ite (= x1771 (x1536 9)) x856 (x615 x1771)))
(define-fun x1517 ((x1771 x1493)) Int (ite x387 (x615 x1771) (x839 x1771)))
(define-fun x395 ((x1771 x1493)) Int (ite (= x1771 (x1536 9)) x1315 (x1517 x1771)))
(define-fun x863 ((x1771 x1493)) Int (ite (= (x1536 2) x1771) x809 (x395 x1771)))
(define-fun x356 ((x1771 x1493)) Int (ite (= x1771 x1618) x102 (x863 x1771)))
(define-fun x548 ((x1771 x1493)) Int (ite x1469 (x395 x1771) (x356 x1771)))
(define-fun x797 ((x1771 x1493)) Int (ite (= (x1536 19) x1771) x1807 (x548 x1771)))
(define-fun x915 ((x1771 x1493)) Int (ite (= (x1536 20) x1771) x403 (x797 x1771)))
(define-fun x666 ((x1771 x1493)) Int (ite (= x1771 x514) x645 (x915 x1771)))
(define-fun x1221 ((x1771 x1493)) Int (ite x778 (x915 x1771) (x666 x1771)))
(define-fun x730 ((x1771 x1493)) Int (ite x264 (x317 x1771) (ite x1525 (x915 x1771) (x1221 x1771))))
(define-fun x1561 ((x1771 x1493)) Int (ite (= x110 x1771) x35 (x730 x1771)))
(define-fun x989 ((x1771 x1493)) Int (ite (= (x1536 2) x1771) x633 (x1561 x1771)))
(define-fun x153 ((x1771 x1493)) Int (x989 x1771))
(define-fun x883 ((x1771 x1493)) Int (ite (= x1771 x94) x604 (x153 x1771)))
(define-fun x1722 ((x1771 x1493)) Int (ite x769 (x153 x1771) (x883 x1771)))
(define-fun x1056 ((x1771 x1493)) Int (ite (= x1600 x1771) x1273 (x1722 x1771)))
(define-fun x1704 ((x1771 x1493)) Int (ite x500 (x1722 x1771) (x1056 x1771)))
(define-fun x1122 ((x1771 x1493)) Int (ite (= x1438 x1771) x217 (x1704 x1771)))
(define-fun x1583 ((x1771 x1493)) Int (ite (= x1771 x1324) x1126 (x1122 x1771)))
(define-fun x129 ((x1771 x1493)) Int (ite x1586 (x1704 x1771) (x1583 x1771)))
(define-fun x1794 ((x1771 x1493)) Int (ite (= x1771 x1375) x918 (x129 x1771)))
(define-fun x787 ((x1771 x1493)) Int (ite x1345 (x1704 x1771) (ite x617 (x129 x1771) (x1794 x1771))))
(define-fun x1383 ((x1771 x1493)) Int (x787 x1771))
(define-fun x1305 ((x1771 Int)) Int (ite (= x1771 x1764) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1752 x1771)))
(define-fun x917 ((x1771 Int)) Int (ite (= x1679 x1771) x1797 (x1305 x1771)))
(define-fun x682 ((x1771 Int)) Int (ite (= x1771 x1764) x1539 (x917 x1771)))
(define-fun x378 ((x1771 Int)) Int (ite x353 (x917 x1771) (x682 x1771)))
(define-fun x1547 ((x1771 x1493)) Int (x1413 x1771))
(define-fun x1334 ((x1771 Int)) Int (ite (= x283 x1771) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x426 x1771)))
(define-fun x706 ((x1771 Int)) Int (ite (= x1771 x340) x1797 (x1334 x1771)))
(define-fun x796 ((x1771 Int)) Int (ite (= x283 x1771) x1748 (x706 x1771)))
(define-fun x1465 ((x1771 Int)) Int (ite x1768 (x796 x1771) (x706 x1771)))
(define-fun x1608 ((x1771 Int)) Int (ite (= 0 x1771) x1533 (x206 x1771)))
(define-fun x768 ((x1771 Int)) Int (ite (= 0 x1771) x846 (x758 x1771)))
(define-fun x1566 ((x1771 Int)) Int (ite (= 0 x1771) x1539 (x95 x1771)))
(define-fun x882 ((x1771 Int)) Int (ite (= x1771 0) x1748 (x1677 x1771)))
(define-fun x1381 ((x1771 Int)) Int (x1555 x1771))
(define-fun x639 ((x1771 Int)) Int (ite (= 128 x1771) x1156 (x180 x1771)))
(define-fun x1480 ((x1771 Int)) Int (ite (= 160 x1771) x1683 (x639 x1771)))
(define-fun x1657 ((x1771 Int)) Int (ite (= 192 x1771) x1010 (x1480 x1771)))
(define-fun x1686 ((x1771 Int)) Int (ite (= 224 x1771) x202 (x1657 x1771)))
(define-fun x1821 ((x1771 Int)) Int (ite (= 256 x1771) x1708 (x1686 x1771)))
(define-fun x1110 ((x1771 Int)) Int (ite x1676 (x1686 x1771) (ite x1428 (x1657 x1771) (ite x702 (x1480 x1771) (ite x1018 (x639 x1771) (x1821 x1771))))))
(define-fun x1548 ((x1771 Int)) Int (ite (= x1771 x505) x1507 (x1110 x1771)))
(define-fun x1038 ((x1771 Int)) Int (ite (and (< x1771 (+ x1507 x1455)) (>= x1771 x1455)) (x1555 (+ (- x1771 x1455) x1015)) (x1548 x1771)))
(define-fun x12 ((x1771 Int)) Int (ite (= x570 x1771) 0 (x1038 x1771)))
(define-fun x1295 ((x1771 Int)) Int (ite (= x1771 x1322) x640 (x12 x1771)))
(define-fun x911 ((x1771 Int)) Int (ite (and (>= x1771 x932) (< x1771 (+ x1184 x932))) (x1555 (+ (- x1771 x932) x551)) (x1295 x1771)))
(define-fun x144 ((x1771 Int)) Int (ite x155 (x1295 x1771) (x911 x1771)))
(define-fun x1073 ((x1771 Int)) Int (ite (= x1771 x800) x263 (x144 x1771)))
(define-fun x477 ((x1771 Int)) Int (ite x30 (x144 x1771) (x1073 x1771)))
(define-fun x820 ((x1771 Int)) Int (ite (= x1766 x1771) x344 (x477 x1771)))
(define-fun x988 ((x1771 Int)) Int (ite (and (< x1771 (+ x767 x972)) (>= x1771 x972)) (x1555 (+ (- x1771 x972) x551)) (x820 x1771)))
(define-fun x1248 ((x1771 Int)) Int (ite x927 (x820 x1771) (x988 x1771)))
(define-fun x1355 ((x1771 Int)) Int (ite (= x1771 x1214) x27 (x1248 x1771)))
(define-fun x566 ((x1771 Int)) Int (ite x1720 (x1248 x1771) (x1355 x1771)))
(define-fun x187 ((x1771 Int)) Int (ite (= x193 x1771) x148 (x566 x1771)))
(define-fun x458 ((x1771 Int)) Int (ite (and (>= x1771 x964) (> (+ x964 x1155) x1771)) (x1555 (+ (- x1771 x964) x551)) (x187 x1771)))
(define-fun x852 ((x1771 Int)) Int (ite (= x314 x1771) x1370 (x458 x1771)))
(define-fun x1215 ((x1771 Int)) Int (ite (= x1322 x1771) 46861972923178205566985210922759877011903582497231265773045854621316061069312 (x12 x1771)))
(define-fun x1172 ((x1771 Int)) Int (ite (and (> (+ 32 x1322) x1771) (>= x1771 x1322)) (x698 (+ 0 (- x1771 x1322))) (x1215 x1771)))
(define-fun x1365 ((x1771 Int)) Int (ite (= x1771 x472) x719 (x1172 x1771)))
(define-fun x722 ((x1771 Int)) Int (ite x186 (x12 x1771) (x1365 x1771)))
(define-fun x942 ((x1771 Int)) Int (ite x282 (x12 x1771) (ite x407 (x12 x1771) (ite x2 (x12 x1771) (x722 x1771)))))
(define-fun x544 ((x1771 Int)) Int (ite (= x1771 x930) x160 (x942 x1771)))
(define-fun x424 ((x1771 Int)) Int (ite (and (< x1771 (+ x488 x1219)) (>= x1771 x1219)) (x1555 (+ (- x1771 x1219) x551)) (x544 x1771)))
(define-fun x1765 ((x1771 Int)) Int (ite x560 (x544 x1771) (x424 x1771)))
(define-fun x32 ((x1771 Int)) Int (ite (= x1771 64) 128 (x326 x1771)))
(define-fun x1297 ((x1771 Int)) Int (ite (= x1115 x1771) x875 (x32 x1771)))
(define-fun x837 ((x1771 Int)) Int (ite (= x1690 x1771) 81655993114286172543975849523773895523710823181222424266797447834442299080704 (x1765 x1771)))
(define-fun x1711 ((x1771 Int)) Int (ite (= x1771 x1449) x57 (x837 x1771)))
(define-fun x305 ((x1771 Int)) Int (ite (and (<= x1690 x1771) (< x1771 (+ x1690 (ite (> 32 x1090) x1090 32)))) (x1297 (+ x266 (- x1771 x1690))) (x1711 x1771)))
(define-fun x1505 ((x1771 Int)) Int (ite x1627 (ite x1462 (x305 x1771) (x1765 x1771)) (x1765 x1771)))
(define-fun x141 ((x1771 Int)) Int (ite (= x213 x1771) x584 (x1505 x1771)))
(define-fun x1359 ((x1771 Int)) Int (ite x1302 (x1765 x1771) (x141 x1771)))
(define-fun x1696 ((x1771 Int)) Int (ite (= x1192 x1771) x233 (x1359 x1771)))
(define-fun x836 ((x1771 Int)) Int (ite (and (<= x1113 x1771) (< x1771 (+ x1572 x1113))) (x1555 (+ (- x1771 x1113) x551)) (x1696 x1771)))
(define-fun x215 ((x1771 Int)) Int (ite x1500 (x1696 x1771) (x836 x1771)))
(define-fun x1514 ((x1771 Int)) Int (ite (= x1771 x1569) x1809 (x215 x1771)))
(define-fun x434 ((x1771 Int)) Int (ite x335 (x215 x1771) (x1514 x1771)))
(define-fun x1640 ((x1771 Int)) Int (ite (= x1771 x864) x1578 (x434 x1771)))
(define-fun x1590 ((x1771 Int)) Int (ite x408 (x434 x1771) (x1640 x1771)))
(define-fun x1121 ((x1771 Int)) Int (ite (= x1771 x741) x1446 (x1590 x1771)))
(define-fun x293 ((x1771 Int)) Int (ite x838 (x1590 x1771) (x1121 x1771)))
(define-fun x1158 ((x1771 Int)) Int (ite (= x1771 x101) x599 (x293 x1771)))
(define-fun x1464 ((x1771 Int)) Int (ite x1469 (x293 x1771) (x1158 x1771)))
(define-fun x63 ((x1771 Int)) Int (ite (= 64 x1771) 128 (x660 x1771)))
(define-fun x487 ((x1771 Int)) Int (ite (= x126 x1771) x995 (x63 x1771)))
(define-fun x1625 ((x1771 Int)) Int (ite (= x497 x1771) 112349551054952423155953805921267728290102753186399332250345724850365349756928 (x1464 x1771)))
(define-fun x1697 ((x1771 Int)) Int (ite (= x1771 x464) x531 (x1625 x1771)))
(define-fun x1605 ((x1771 Int)) Int (ite (and (>= x1771 x497) (< x1771 (+ (ite (> 32 x287) x287 32) x497))) (x487 (+ (- x1771 x497) x695)) (x1697 x1771)))
(define-fun x947 ((x1771 Int)) Int (ite x1525 (x1464 x1771) (ite x778 (x1464 x1771) (x1605 x1771))))
(define-fun x663 ((x1771 Int)) Int (ite (= x1771 x438) x798 (x947 x1771)))
(define-fun x1732 ((x1771 Int)) Int (ite (and (> (+ x1328 x1429) x1771) (<= x1429 x1771)) (x1555 (+ (- x1771 x1429) x551)) (x663 x1771)))
(define-fun x1758 ((x1771 Int)) Int (ite (= x1519 x1771) x1706 (x1732 x1771)))
(define-fun x1813 ((x1771 Int)) Int (ite x264 (ite x447 (x458 x1771) (x852 x1771)) (ite x1808 (x1732 x1771) (x1758 x1771))))
(define-fun x965 ((x1771 Int)) Int (ite (= x1771 x348) x753 (x1813 x1771)))
(define-fun x752 ((x1771 Int)) Int (ite (= x1360 x1771) x1109 (x965 x1771)))
(define-fun x763 ((x1771 Int)) Int (ite (and (<= x785 x1771) (< x1771 (+ x1243 x785))) (x1555 (+ (- x1771 x785) x551)) (x752 x1771)))
(define-fun x1059 ((x1771 Int)) Int (ite (= x1771 x207) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x763 x1771)))
(define-fun x18 ((x1771 Int)) Int (ite (= x1771 x1325) x1750 (x1059 x1771)))
(define-fun x1496 ((x1771 Int)) Int (ite (= x1771 x1124) x1760 (x18 x1771)))
(define-fun x456 ((x1771 Int)) Int (ite (= x1771 x207) 1 (x1496 x1771)))
(define-fun x1556 ((x1771 Int)) Int (ite x981 (x1496 x1771) (x456 x1771)))
(define-fun x1783 ((x1771 Int)) Int (ite (= x1771 x1397) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1556 x1771)))
(define-fun x77 ((x1771 Int)) Int (ite (= x1007 x1771) x885 (x1783 x1771)))
(define-fun x1823 ((x1771 Int)) Int (ite (= x632 x1771) x576 (x77 x1771)))
(define-fun x1829 ((x1771 Int)) Int (ite (= x1397 x1771) 1 (x1823 x1771)))
(define-fun x371 ((x1771 Int)) Int (ite x1585 (x1823 x1771) (x1829 x1771)))
(define-fun x813 ((x1771 Int)) Int (ite (= x1771 x1649) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x371 x1771)))
(define-fun x139 ((x1771 Int)) Int (ite (= x1771 x1279) x742 (x813 x1771)))
(define-fun x1078 ((x1771 Int)) Int (ite (= x1635 x1771) x347 (x139 x1771)))
(define-fun x52 ((x1771 Int)) Int (ite (= x1771 x1649) x1506 (x1078 x1771)))
(define-fun x341 ((x1771 Int)) Int (ite x1345 (x371 x1771) (ite x1586 (x1078 x1771) (x52 x1771))))
(define-fun x1599 ((x1771 x1493)) Int (ite (= x1771 x1470) x463 (x1547 x1771)))
(define-fun x1667 ((x1771 x1493)) Int (ite (= x1442 x1771) x999 (x1599 x1771)))
(define-fun x29 ((x1771 x1493)) Int (ite x981 (x1547 x1771) (x1667 x1771)))
(define-fun x1420 ((x1771 x1493)) Int (x29 x1771))
(define-fun x1127 ((x1771 Int)) Int (ite (= x99 x1771) x1009 (x341 x1771)))
(define-fun x280 ((x1771 Int)) Int (ite (= x1771 x541) x1058 (x1127 x1771)))
(define-fun x816 ((x1771 Int)) Int (ite (= x1771 x469) x1719 (x280 x1771)))
(define-fun x1096 ((x1771 Int)) Int (ite (= x754 x1771) x167 (x816 x1771)))
(define-fun x1070 ((x1771 Int)) Int (ite (= x1477 x1771) x1174 (x1096 x1771)))
(define-fun x1775 ((x1771 Int)) Int (ite (= 0 x1771) 1 (x162 x1771)))
(define-fun x1805 ((x1771 Int)) Int (ite (= 0 x1771) 1 (x159 x1771)))
(define-fun x1629 ((x1771 Int)) Int (ite (= x1771 128) x728 (x782 x1771)))
(define-fun x992 ((x1771 Int)) Int (ite (= 128 x1771) (ite true 1 0) (x1629 x1771)))
(define-fun x1491 ((x1771 Int)) Int (ite (= 0 x1771) x1524 (x1565 x1771)))
(define-fun x1020 ((x1771 Int)) Int (ite (and (< x1771 (+ 0 x287)) (>= x1771 0)) (x487 (+ (- x1771 0) x695)) (x393 x1771)))
(define-fun x1796 ((x1771 Int)) Int (ite (and (<= 0 x1771) (< x1771 (+ 0 x1090))) (x1297 (+ x266 (- x1771 0))) (x401 x1771)))
(define-fun x571 ((x1771 Int)) Int (ite (= x969 x1771) x1620 (x1070 x1771)))
(define-fun x1673 ((x1771 Int)) Int (ite x98 (x1070 x1771) (ite x1016 (x1096 x1771) (ite x1236 (x816 x1771) (ite x1499 (x280 x1771) (x571 x1771))))))
(define-fun x1596 ((x1771 Int)) Int (ite (= x588 x1771) x1348 (x1673 x1771)))
(define-fun x984 ((x1771 Int)) Int (ite (= x1371 x1771) x1407 (x1596 x1771)))
(define-fun x1165 ((x1771 Int)) Int (ite (= x1317 x1771) x1351 (x984 x1771)))
(define-fun x388 ((x1771 Int)) Int (ite (= x1771 x429) x644 (x1165 x1771)))
(define-fun x1210 ((x1771 Int)) Int (ite (= x1296 x1771) x242 (x388 x1771)))
(define-fun x149 ((x1771 Int)) Int (ite (= x1771 x648) x359 (x1210 x1771)))
(define-fun x555 ((x1771 Int)) Int (ite x352 (x1210 x1771) (ite x284 (x388 x1771) (ite x512 (x1165 x1771) (ite x422 (x984 x1771) (x149 x1771))))))
(define-fun x1727 ((x1771 Int)) Int (ite (= x1771 0) x200 (x825 x1771)))
(define-fun x1762 ((x1240 Int) (x1786 Int) (x974 Int) (x1021 Int)) Bool (=> (and (>= x1021 x1786) (<= 0 x1240) (<= 0 x1786) (<= x1240 x974)) (>= (x1120 x974 x1021) (x1120 x1240 x1786))))
(define-fun x1483 ((x1240 Int) (x1786 Int) (x974 Int) (x1021 Int)) Bool (=> (= x974 x1240) (= (- (x1120 x1240 x1786) (x1120 x974 x1021)) (x1120 x1240 (- x1786 x1021)))))
(define-fun x358 ((x1240 Int)) Bool (=> (and (not (= x1240 1871194811)) (not (= x1240 274184521717934524641157099916833587280)) (not (= x1240 6277101735386680763835789423207666416102355444464034512895)) (not (= x1240 3586168516)) (not (= 3028789119 x1240)) (not (= x1240 4167276458)) (not (= x1240 2580288415)) (not (= x1240 1779675522)) (< 10000 x1240) (not (= 18446744073709551615 x1240)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1240)) (not (= 500647658 x1240)) (not (= 3224796394 x1240)) (not (= 238709543 x1240)) (not (= 826074471 x1240)) (not (= x1240 1962127369)) (not (= x1240 2514000705)) (not (= x1240 1889567281)) (not (= x1240 1984976886)) (not (= x1240 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 228615836 x1240)) (not (= x1240 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1240 1439069736)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1240)) (not (= x1240 1461501637330902918203684832716283019655932542975)) (not (= 79228162514264337593543950335 x1240)) (not (= 2757214935 x1240)) (not (= x1240 115792089237316195417293883273301227089434195242512125785869492901042639077375)) (not (= x1240 1883652118)) (not (= 46861972923178205566985210922759877011903582497231265773045854621316061069312 x1240)) (not (= x1240 4294967296)) (not (= x1240 404098525)) (not (= x1240 112349551054952423155953805921267728290102753186399332250345724850365349756928)) (not (= 1000000000000000000 x1240)) (not (= x1240 18446744073709551616)) (not (= x1240 2681156919)) (not (= x1240 4294967295)) (not (= x1240 2127478272)) (not (= 81655993114286172543975849523773895523710823181222424266797447834442299080704 x1240)) (not (= 954831406 x1240)) (not (= x1240 115792089210356248762697446949407573530086143415211086033019366971273553903615)) (not (= x1240 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665561335876943319670319585689600 x1240)) (not (= x1240 2714230913)) (not (= 370555621 x1240)) (not (= x1240 2835717307)) (not (= 2863377861 x1240)) (not (= x1240 307731845)) (not (= x1240 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1240 363856219))) (not ((_ is x1536) (x724 x1240)))))
(assert (x1141 x645))
(assert (x1141 x1553))
(assert (x1141 x1373))
(assert (x1141 x244))
(assert (x1141 x1714))
(assert (x1141 x1086))
(assert (= (and x897 x461) x473))
(assert (= (or (and x404 (not x190)) x1283) x700))
(assert (x1141 x1616))
(assert (x873 x272))
(assert (= (x1536 2714230913) (x724 2714230913)))
(assert (x1762 x1185 x1726 x152 x511))
(assert (= 1000000000000000000 (x626 (x1536 1000000000000000000))))
(assert (x138 x1391 (- x845 x1614)))
(assert (x1141 x1267))
(assert (= 363856219 (x626 (x1536 363856219))))
(assert (= (x724 3586168516) (x1536 3586168516)))
(assert (x1141 x1828))
(assert (= x1129 (and x66 x749)))
(assert (x1141 x1291))
(assert (= (=> (and (not (< x1417 4)) (> 2127478272 x1267) (= x606 x1679) (= 1889567281 x1267) (not (= x362 0)) (= x1687 (x581 (+ 32 x606))) (= x950 (x1299 (x724 x1797))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1769) (and (< x1769 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1769)))) x736) (= 36 x1417) (= x842 (x581 (+ x56 x135))) (not (> 1439069736 x1267)) (not (= x950 0)) (not (= 1883652118 x1267)) (= x1061 x286) (= (x581 (+ 4 x1764)) x606) (> x1062 0) (not (or (> x1306 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1306 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1306)))) (= (x1752 x286) x56) (= x1062 (x1299 (x724 x1797))) (= x1797 x1510) (= x1417 x1504) (= (x48 (- x1687 x1764)) x1504) (= (x581 (+ 31 x1306)) x1747) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x354) (not (= x1267 1871194811)) (> 1984976886 x1267) (= x1764 (x581 (+ x1061 x1369))) (not (>= (+ x56 x135) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> 954831406 x1267)) (not (< x1267 1871194811)) (= x1769 (x48 (- x1417 4))) (= x1369 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1747))) (and (=> (and (not x736) (and (= x1482 x1510) (= true x1733))) (and (=> (and x1733 (and (= x1424 x788) (= (x1665 (x724 x1510) (x1536 0) 0) x369) (= x1191 32) (= x733 1) (= (x130 x369) x1539))) x650) (=> (not x1733) x857))) (=> x736 x857))) x1249))
(assert (x1483 x973 x432 x1100 x1195))
(assert (x696 (- x1391 x1541)))
(assert (x696 79228162514264337593543950336))
(assert (x873 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1483 x1416 x1614 x511 x152))
(assert (x1141 x489))
(assert (x696 (- x1416 x973)))
(assert (x696 (- x1770 x432)))
(assert (x696 (- x1770 x1416)))
(assert (= (or x447 x194) x264))
(assert (= x1692 (and x1733 x227)))
(assert (= (x1536 404098525) (x724 404098525)))
(assert (= (and (not x383) x1721) x794))
(assert (x1762 x1726 x1185 x845 x1391))
(assert (x1483 x1614 x1416 x973 x432))
(assert (x1141 x729))
(assert (= (x180 x735) 0))
(assert (x1141 x1658))
(assert (x1141 x809))
(assert (x138 x1770 (- x1541 x319)))
(assert (= (=> (and (= 0 x240) (= x442 x811)) x1434) x848))
(assert (x346 (* x637 79228162514264337593543950336)))
(assert (x1483 x1195 x1100 x845 x1391))
(assert (x138 x845 (- x1391 x319)))
(assert (x1141 x630))
(assert (= x819 (x626 (x724 x819))))
(assert (x696 (- x1726 x319)))
(assert (x1483 x1195 x1100 x1726 x1185))
(assert (x696 (- x1541 x1614)))
(assert (= (x626 (x724 x1258)) x1258))
(assert (x1141 x307))
(assert (=> (<= x691 10000) (= (x1536 x691) (x724 x691))))
(assert (x827 x1792))
(assert (x1762 x319 x745 x152 x511))
(assert (x1141 x1192))
(assert (x1141 x478))
(assert (x1483 x1541 x1770 x973 x432))
(assert (= x684 (and x466 x980)))
(assert (x138 x1195 (- x1100 x1726)))
(assert (= 0 (x660 (+ x695 (- x244 x497)))))
(assert (x1141 x1699))
(assert (x1762 x1416 x1614 x1541 x1770))
(assert (= x1513 (x626 (x724 x1513))))
(assert (x1141 x1087))
(assert (x138 x432 (- x973 x1726)))
(assert (x138 x1416 (- x1614 x1195)))
(assert (= (x724 228615836) (x1536 228615836)))
(assert (x1141 x1238))
(assert (x1483 x432 x973 x1100 x1195))
(assert (= (x626 (x724 x1472)) x1472))
(assert (and (x870 x898 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x898 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x898 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x898 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x898)) (x1485 x898 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1141 x1423))
(assert (x138 x152 (- x511 x1726)))
(assert (x783 x376 x845))
(assert (= x765 (=> (and (or (and (= x399 x1671) (not x480)) (and x480 (and (= x1671 25) (> x833 2) (= (x707 x1379 2) x1375) (= x1379 (x1376 (x1536 25) 0)) (= x918 (x581 (+ x1256 x397))) (= x833 (x129 (x1536 25))) (= x397 (x129 x1375))))) (and (= (< 0 x1256) x480) (= (x581 (+ x693 x1649)) x1630) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x442) (and (< x442 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x442))))) (not (= x240 0)) (= x693 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x670)) (= (x581 (+ 31 x442)) x670))) x1162)))
(assert (x873 x1682))
(assert (x873 1))
(assert (x1141 x710))
(assert (x1141 x100))
(assert (x1762 x1391 x845 x745 x319))
(assert (= 18446744073709551615 (x626 (x1536 18446744073709551615))))
(assert (= (x1672 x719 79228162514264337593543950336) (x415 x719 96)))
(assert (= (=> (= x994 x1100) x746) x546))
(assert (x1141 x203))
(assert (x138 x1185 (- x1726 x1195)))
(assert (and (x870 x1028 256) (x970 x1028 256) (=> (> 256 0) (= (+ (* (x1672 x1028 256) 256) (x123 x1028 256)) x1028)) (x1485 x1028 256)))
(assert (x138 x432 (- x973 x1391)))
(assert (x1141 x1025))
(assert (x138 x1541 (- x1770 x152)))
(assert (= (or x1357 x186) x178))
(assert (= (x626 (x1536 1962127369)) 1962127369))
(assert (x1141 x136))
(assert (= 0 (x180 x503)))
(assert (x358 x336))
(assert (x1141 x1233))
(assert (and (and (= (- (* x1778 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1778)) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1778)) (= (- (* 1000000000000000000 (- x1778 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1778 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1778 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 1000000000000000000 (- x1778 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x1778 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 1000000000000000000 x1778) (x1571 1000000000000000000 x1778) (= (* x1778 1000000000000000000) (x1120 1000000000000000000 x1778)) (x593 1000000000000000000 x1778) (x470 1000000000000000000 x1778) (x69 1000000000000000000 x1778)))
(assert (x1141 x959))
(assert (x696 (- x511 x1195)))
(assert (x1141 x298))
(assert (x696 (- x1391 x1100)))
(assert (= x422 (and (not x445) x40)))
(assert (x696 (- x845 x1541)))
(assert (= x3 true))
(assert (x1141 x1539))
(assert (x696 (- x1391 x1185)))
(assert (x696 (- x152 x745)))
(assert (x696 (- x1195 x1185)))
(assert (x873 x502))
(assert (x1141 x1135))
(assert (x696 (- x1726 x1541)))
(assert true)
(assert (x1483 x152 x511 x1185 x1726))
(assert (x1141 x242))
(assert (= (=> (and (= x245 (= x240 0)) (or (not x245) x245)) x765) x1434))
(assert (= (=> (and (= (x1758 x438) x855) (< 0 x1225) (= (not (> x855 1)) x1011) (= x1519 (x581 (+ 32 x438))) (= (x1732 x438) x1225)) (and x1148 x1011)) x1350))
(assert (= x1002 (and x1537 x291)))
(assert (x696 (- x1195 x1391)))
(assert (x138 x1541 (- x1770 x1416)))
(assert (x138 x845 (- x1391 x1100)))
(assert (= 3028789119 (x626 (x1536 3028789119))))
(assert (x1141 x430))
(assert (x1141 x754))
(assert (x1141 x336))
(assert (= (and (not x1114) x794) x1462))
(assert (x696 (- x845 x745)))
(assert (= (x660 (+ x695 (- x83 x497))) 0))
(assert (x138 x511 (- x152 x845)))
(assert (x138 x1614 (- x1416 x845)))
(assert (=> (<= x851 10000) (= (x724 x851) (x1536 x851))))
(assert (x1141 x1613))
(assert (x1141 x585))
(assert (x696 (- x745 x1726)))
(assert (x138 x1541 (- x1770 x1195)))
(assert (x1762 x1416 x1614 x845 x1391))
(assert (x1141 x221))
(assert (x1141 x23))
(assert (x1141 x365))
(assert (x1141 x315))
(assert (= (x626 (x1536 4167276458)) 4167276458))
(assert (x696 (- x1100 x1726)))
(assert (x1141 x429))
(assert (x1141 x1507))
(assert (x783 x1023 x973))
(assert (x1141 x1014))
(assert (x1483 x1195 x1100 x1416 x1614))
(assert (x1483 x973 x432 x1416 x1614))
(assert (= 3586168516 (x626 (x1536 3586168516))))
(assert (x1483 x432 x973 x1726 x1185))
(assert (x1141 x265))
(assert (= 0 (x180 x1526)))
(assert (and (x803 x376 1000000000000000000) (x1534 x376 1000000000000000000) (x1592 x376 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x376)) (and (> (* (x1672 x376 1000000000000000000) 1000000000000000000) (- x376 1000000000000000000)) (>= x376 (* (x1672 x376 1000000000000000000) 1000000000000000000)))) (x1344 x376 1000000000000000000)))
(assert (x696 (- x1391 x1416)))
(assert (x696 (- x745 x1541)))
(assert (x1141 x526))
(assert (x1141 x1204))
(assert (x696 (- x1195 x1541)))
(assert (x1141 x1777))
(assert (x138 x1185 (- x1726 x1770)))
(assert (= (and x259 x1242) x54))
(assert (x1141 x1183))
(assert (x1141 x278))
(assert (= (x626 (x1536 18446744073709551616)) 18446744073709551616))
(assert (x1141 x1049))
(assert (x1762 x1770 x1541 x1726 x1185))
(assert (= x542 (x626 (x724 x542))))
(assert (x1483 x1185 x1726 x511 x152))
(assert (x138 x1185 (- x1726 x152)))
(assert (= (x326 (+ x266 (- x1818 x1690))) 0))
(assert (= (and x1595 x343) x1357))
(assert (= 0 (x180 x835)))
(assert (x1141 x1426))
(assert (= (and x1648 x976) x117))
(assert (x1483 x1541 x1770 x1391 x845))
(assert (x358 x53))
(assert (= 0 (x326 (+ (- x226 x1690) x266))))
(assert (x696 (- x1726 x152)))
(assert (x138 x432 (- x973 x1416)))
(assert (= x1663 (and x794 x1114)))
(assert (x358 x1197))
(assert (= (or (and (not x1612) x373) x850) x1330))
(assert (x1141 x957))
(assert (x873 x1028))
(assert (x1141 x1725))
(assert (x696 x959))
(assert (x1483 x1614 x1416 x1185 x1726))
(assert (x1762 x845 x1391 x1195 x1100))
(assert (x1141 x1179))
(assert (= (x626 (x1536 307731845)) 307731845))
(assert (and (x870 x986 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x986 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x986 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x986 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x986)) (x1485 x986 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x696 x1058))
(assert (x1141 x1581))
(assert (x1141 x1750))
(assert (x346 x589))
(assert (x1141 x673))
(assert (x1141 x109))
(assert (x696 (- x1541 x973)))
(assert (x1141 x1458))
(assert (x696 (- x745 x1770)))
(assert (x1141 x1405))
(assert (x1141 x734))
(assert (x138 x1541 (- x1770 x1726)))
(assert (x873 x589))
(assert (= x30 (and (not x1717) x1118)))
(assert (x873 x1738))
(assert (x1483 x1726 x1185 x1614 x1416))
(assert (x1141 x181))
(assert (x1141 x1189))
(assert (=> (<= x334 10000) (= (x724 x334) (x1536 x334))))
(assert (x827 x686))
(assert (x138 x511 (- x152 x1185)))
(assert (= (or x1266 x1302) x1552))
(assert (= (x626 (x724 x851)) x851))
(assert (and (and (= (- (* x798 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x798)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x798)) (= (- (* 32 (- x798 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x798 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x798 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x798 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x798 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x798) (x1571 32 x798) (= (* x798 32) (x1120 32 x798)) (x593 32 x798) (x470 32 x798) (x69 32 x798)))
(assert (x1141 x1326))
(assert (x138 x511 (- x152 x1726)))
(assert (= (x660 (+ x695 (- x49 x497))) 0))
(assert (x1141 x38))
(assert (x138 x1416 (- x1614 x1541)))
(assert (x1483 x319 x745 x1770 x1541))
(assert (x1483 x973 x432 x1185 x1726))
(assert (x1141 x86))
(assert (= x1729 (and (=> (and (not x1495) (and (= x884 (< x1415 x1245)) (or (and (not x884) (and (= x1641 (= 0 x1159)) (= (x317 (x1536 7)) x662) (= x1159 (x657 255 x662)))) (and x884 (= x884 x1641))))) x891) (=> (and x1495 (and (or x938 (and (and (= x1184 (x46 (* 32 x640))) (= (x581 (+ x1322 32)) x932)) (not x938))) (and (= (= 0 x640) x938) x453 (= x1099 (x317 (x1536 8))) (= (x12 128) x561) (= x716 (x46 (* x690 32))) (= (x317 (x1536 2)) x88) (= (x317 (x1536 2)) x1088) (= x183 (x581 (+ x716 32))) (= x1703 (x581 (+ x183 128))) (= (x12 x1703) x1179) (= (x46 (* 32 x640)) x712) (= 255 x72) (not (< x1088 x1179)) (= x677 (x12 128)) (= x453 (= x888 1)) (= (x48 (- x561 1)) x640) (> x677 x690) (= x1098 (x581 (+ 32 x712))) (= (x415 x1099 255) x888) (= x256 (x48 (- x1088 x1179))) (= (x581 (+ x1098 x1322)) x1766)))) x920))))
(assert (x1141 x1216))
(assert (and (x870 x161 256) (x970 x161 256) (=> (> 256 0) (= (+ (* (x1672 x161 256) 256) (x123 x161 256)) x161)) (x1485 x161 256)))
(assert (and (and (= (- (* x726 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x726)) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x726)) (= (- (* 1000000000000000000 (- x726 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x726 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x726 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 1000000000000000000 (- x726 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x726 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 1000000000000000000 x726) (x1571 1000000000000000000 x726) (= (* x726 1000000000000000000) (x1120 1000000000000000000 x726)) (x593 1000000000000000000 x726) (x470 1000000000000000000 x726) (x69 1000000000000000000 x726)))
(assert (x1141 x822))
(assert (x138 x1770 (- x1541 x1100)))
(assert (x1483 x1614 x1416 x845 x1391))
(assert (= x861 (=> (and (and (and (> x807 0) (= 128 x1399) (= x1405 x1658) (not (= x1095 228615836)) (= x490 (> 32 x518)) (= x659 (x1299 (x724 x1797))) (= x807 (x1299 (x724 x108))) (> 954831406 x1095) (= x1095 307731845) (not (= 0 x1832)) (not (< x613 826074471)) (not (= x613 826074471)) (= 1889567281 x613) (= x1655 36) (not (> 4 x1655)) (= (x1299 (x724 x108)) x1832) (> 500647658 x1095) (< x1095 2127478272) (= x518 (x48 (- x1655 4))) (= x851 x1797) (not (= x1095 238709543)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x510) (not (> 228615836 x1095)) (= 36 x1655) (< x1095 363856219) (> x659 0)) (or (and (and (= x208 x1404) (= x1557 0)) x490) (and (not x490) (and (= x246 (x1665 (x724 x851) (x1536 1) 0)) (= (x1420 x246) x200) (>= x200 0) (= 32 x1404) (= x1638 x851) (= x1557 1) (<= x200 115792089237316195423570985008687907853269984665640564039457584007913129639935))))) (and (= x1012 (x787 (x1536 2))) (= x1826 x1285) (= (x581 (+ x377 x1317)) x1106) (= x1045 x829) (not (= x220 370555621)) (= (x46 (* 32 x1407)) x377) (not (> 363856219 x220)) (< x220 500647658) (> 954831406 x220) (= (x581 (+ 32 x1826)) x564) (= (ite (= x564 0) x1373 (ite (= 32 x564) 0 (ite (= x564 64) x1826 (x555 x564)))) x508) (= x220 404098525) (= x1049 x1106) (< 0 x1699) (= x1407 x1254) (= (x46 (* x1407 32)) x1358) (not (> 228615836 x220)) (= x1012 x1405) (> 2127478272 x220) (= x1045 (x581 (+ x478 x1358))) (= x1699 (x1299 (x724 x1797))) (= (ite (= 0 x1285) x1373 (ite (= x1285 32) 0 (ite (= x1285 64) x1826 (x555 x1285)))) x1064) (not (= 363856219 x220)))) x1503)))
(assert (x1141 x776))
(assert (x1141 x1807))
(assert (x138 x1614 (- x1416 x1770)))
(assert (x827 x1043))
(assert (x1141 x693))
(assert (x1141 x1476))
(assert (x1141 x322))
(assert (x358 x874))
(assert (x1483 x432 x973 x1614 x1416))
(assert (x1141 x491))
(assert (x138 x1614 (- x1416 x1100)))
(assert (x1483 x1185 x1726 x1770 x1541))
(assert (and (and (= (- (* x1058 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1058)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1058)) (= (- (* 32 (- x1058 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1058 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1058 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x1058 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x1058 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x1058) (x1571 32 x1058) (= (* x1058 32) (x1120 32 x1058)) (x593 32 x1058) (x470 32 x1058) (x69 32 x1058)))
(assert (x1141 x1254))
(assert (= x234 (or x364 x25)))
(assert (= 1461501637330902918203684832716283019655932542975 (x626 (x1536 1461501637330902918203684832716283019655932542975))))
(assert (x827 x1195))
(assert (x1141 x192))
(assert (x1141 x1481))
(assert (x1141 x1225))
(assert (x827 1000000000000000000))
(assert (=> (<= x1685 10000) (= (x724 x1685) (x1536 x1685))))
(assert (x1141 x753))
(assert (= (or x117 (and x1648 (not x976))) x90))
(assert (x184 x898))
(assert (x696 (- x1100 x152)))
(assert (= (or x284 x512 x352 x422 x860) x1327))
(assert (x1141 x1277))
(assert (= (=> (and (= x901 (= 0 x362)) (or x901 (not x901))) x1249) x1501))
(assert (= x107 (=> (and (and (not (< 18446744073709551615 x160)) (= (x581 (+ x930 x8)) x1690) (= x431 (x46 (* x160 32))) (= x239 (= x160 0)) (= x8 (x581 (+ x431 32)))) (or (and (and (= x488 (x46 (* 32 x160))) (= (x581 (+ 32 x930)) x1219)) (not x239)) x239)) x163)))
(assert (= x308 (or x886 x30)))
(assert (x1762 x1541 x1770 x1726 x1185))
(assert (x894 x1611))
(assert (x1483 x1541 x1770 x152 x511))
(assert (x1483 x1770 x1541 x1391 x845))
(assert (x1141 x1550))
(assert (= (x626 (x724 x705)) x705))
(assert (x1762 x1541 x1770 x745 x319))
(assert (and (x870 x521 32) (x970 x521 32) (=> (> 32 0) (= (+ (* (x1672 x521 32) 32) (x123 x521 32)) x521)) (x1485 x521 32)))
(assert (x1141 x1475))
(assert (x696 (- x1770 x973)))
(assert (x1141 x525))
(assert (x1483 x1100 x1195 x1185 x1726))
(assert (= x939 x1489))
(assert (x894 x622))
(assert (x1483 x1100 x1195 x511 x152))
(assert (x1141 x1253))
(assert (x1141 x1443))
(assert (= (x626 (x724 x1695)) x1695))
(assert (x1141 x1133))
(assert (x696 (- x1726 x1100)))
(assert (x1141 x808))
(assert (= x574 (and x332 x949)))
(assert (x696 x152))
(assert (x1141 x183))
(assert (= (and x382 x901) x1396))
(assert (= 0 (x180 x741)))
(assert (x1141 x578))
(assert (and (x870 x412 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x412 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x412 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x412 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x412)) (x1485 x412 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x326 (+ (- x835 x1690) x266)) 0))
(assert (x1141 x1512))
(assert (x1141 x1256))
(assert (x138 x1614 (- x1416 x973)))
(assert (x1141 x359))
(assert (x1483 x973 x432 x845 x1391))
(assert (x1483 x1195 x1100 x745 x319))
(assert (x1141 x598))
(assert (x1141 x1374))
(assert (x1141 x979))
(assert (x1141 x1264))
(assert (x1141 x49))
(assert (x1141 x152))
(assert (x1141 x1528))
(assert (x1483 x1614 x1416 x432 x973))
(assert (= x509 (=> (and (= x274 (x371 128)) (= x486 (> x274 2))) (and (=> (and x486 (and (> x400 2) (> x411 2) (= x1256 (x371 x503)) (= (= x108 x1797) x791) (= 2 x85) (= (x581 (+ x83 32)) x454) (= (x581 (+ 32 x49)) x503) (= (x371 x1360) x400) (= (x371 x1314) x411) (= x347 (x371 x454)))) (and (=> x791 x1284) (=> (and (= x116 (= x1622 x1797)) (not x791)) (and (=> (not x116) x629) (=> x116 x1284))))) (=> (and (and (= x399 x1373) (= x1649 x1826)) (not x486)) x1054)))))
(assert (x894 x412))
(assert (x696 x160))
(assert (x1483 x1195 x1100 x319 x745))
(assert (x138 x1770 (- x1541 x973)))
(assert (x1141 x1463))
(assert (= x560 (and x440 x239)))
(assert (x1141 x475))
(assert (x1141 x713))
(assert (= (=> (and (= x43 (= x252 1)) (= (ite (> x78 x924) (x48 (- x78 x924)) 0) x726) (= x1637 (ite (> x924 x1647) (x48 (- x924 x1647)) 0)) (= x575 (x17 (x1536 8))) (= 255 x1046) (= x1443 0) (= x252 (x415 x575 255))) (and (=> (and (and (or (and (and (= x755 (x17 (x1536 18))) (= x380 (x657 18446744073709551615 x755)) (= x380 x994)) x602) (and (= x994 x654) (not x602))) (= (< 0 x740) x602)) (not x43)) x546) (=> (and x43 (= x1100 0)) x746))) x197))
(assert (and (x870 x589 18446744073709551616) (x970 x589 18446744073709551616) (=> (> 18446744073709551616 0) (= (+ (* (x1672 x589 18446744073709551616) 18446744073709551616) (x123 x589 18446744073709551616)) x589)) (x1485 x589 18446744073709551616)))
(assert (=> (>= 10000 x444) (= (x1536 x444) (x724 x444))))
(assert (= (and x1175 (not x931)) x1737))
(assert (= (x626 (x724 x1622)) x1622))
(assert (x1141 x128))
(assert (x1141 x1427))
(assert (x1141 x878))
(assert (x827 x1246))
(assert (x1141 x299))
(assert (x138 x1726 (- x1185 x845)))
(assert (x1141 x170))
(assert (x1141 x1683))
(assert (x1141 x64))
(assert (x696 (- x1391 x1195)))
(assert (= (or x1026 x47) x405))
(assert (x1141 x636))
(assert (x1141 x853))
(assert (x1141 x1792))
(assert (= 0 (x326 (+ (- x930 x1690) x266))))
(assert (x696 (- x1614 x1770)))
(assert (= (x626 (x724 x543)) x543))
(assert (= (x626 (x1536 1779675522)) 1779675522))
(assert (x1141 x269))
(assert (x1141 x1690))
(assert (= x619 (and (not x231) x1330)))
(assert (x696 (- x1726 x1195)))
(assert (x1141 x987))
(assert (= x687 (or x1781 x681)))
(assert (x1141 x633))
(assert (x696 (- x1726 x1391)))
(assert (= (x326 (+ (- x49 x1690) x266)) 0))
(assert (= x1768 (and x1387 x188)))
(assert (x1141 x1010))
(assert (x696 (- x1100 x1391)))
(assert (x138 x152 (- x511 x1770)))
(assert (x1141 x1047))
(assert (= x466 (or x927 x273)))
(assert (x1762 x1195 x1100 x1726 x1185))
(assert (x1141 x543))
(assert (= x902 (or x54 (and x577 x495))))
(assert (= x1077 (and x124 x743)))
(assert (and (x870 x1814 32) (x970 x1814 32) (=> (> 32 0) (= (+ (* (x1672 x1814 32) 32) (x123 x1814 32)) x1814)) (x1485 x1814 32)))
(assert (x1762 x511 x152 x1614 x1416))
(assert (x1141 x200))
(assert (= x1026 (and (not x1488) x1311)))
(assert (x1141 x785))
(assert (x1141 x1817))
(assert (x138 x319 (- x745 x1100)))
(assert (x346 x1034))
(assert (= (x626 (x724 x336)) x336))
(assert (x1141 x1404))
(assert (x1141 x230))
(assert (= (x724 115792089210356248762697446949407573530086143415211086033019366971273553903615) (x1536 115792089210356248762697446949407573530086143415211086033019366971273553903615)))
(assert (x138 x1185 (- x1726 x319)))
(assert (x1141 x1239))
(assert (x1483 x152 x511 x1614 x1416))
(assert (x873 26959946660873538059280334323183841250429478006438217036639575736320))
(assert (x696 (- x845 x1185)))
(assert (x138 x973 (- x432 x1195)))
(assert (x1762 x511 x152 x1195 x1100))
(assert (= 0 (x326 (+ (- x375 x1690) x266))))
(assert (and (and (= (- (* x690 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x690)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x690)) (= (- (* 32 (- x690 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x690 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x690 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x690 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x690 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x690) (x1571 32 x690) (= (* x690 32) (x1120 32 x690)) (x593 32 x690) (x470 32 x690) (x69 32 x690)))
(assert (x1141 x1091))
(assert (x873 1461501637330902918203684832716283019655932542975))
(assert (x138 x1541 (- x1770 x973)))
(assert (x1483 x1541 x1770 x1100 x1195))
(assert (x1141 x1826))
(assert (= (x626 (x1536 6277101735386680763835789423207666416102355444464034512895)) 6277101735386680763835789423207666416102355444464034512895))
(assert (x1141 x972))
(assert (x358 x691))
(assert (x1141 x599))
(assert (x1483 x845 x1391 x1100 x1195))
(assert (x138 x152 (- x511 x845)))
(assert (x358 x623))
(assert (x1141 x1288))
(assert (x1483 x1185 x1726 x432 x973))
(assert (x1141 x562))
(assert (x138 x319 (- x745 x1726)))
(assert (x1762 x432 x973 x845 x1391))
(assert (= 0 (x660 (+ x695 (- x478 x497)))))
(assert (x1141 x1815))
(assert (x138 x152 (- x511 x1614)))
(assert (= (or x21 x1615) x1262))
(assert (and (x870 x1611 256) (x970 x1611 256) (=> (> 256 0) (= (+ (* (x1672 x1611 256) 256) (x123 x1611 256)) x1611)) (x1485 x1611 256)))
(assert (x1141 x953))
(assert (= (and x451 x935) x1439))
(assert (= x398 (=> (= x142 x1389) x806)))
(assert (x1141 x1251))
(assert (= 2863377861 (x626 (x1536 2863377861))))
(assert (= (=> (and (= x1426 x1204) (= x78 x607)) x197) x1039))
(assert (x1141 x779))
(assert (and (x870 x318 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x318 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x318 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x318 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x318)) (x1485 x318 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (=> (<= x496 10000) (= (x1536 x496) (x724 x496))))
(assert (x1483 x1726 x1185 x319 x745))
(assert (x1141 x1071))
(assert (x696 (- x152 x1416)))
(assert (x1483 x1185 x1726 x319 x745))
(assert (x1141 x1764))
(assert (= (=> (and (= x1712 (not (> x1407 4))) (= x359 (x1210 x375)) (= x1287 (x581 (+ x648 32))) (= (x581 (+ 32 x375)) x1644)) (and x1712 (=> (and (= x829 x1644) (= x1287 x1049) (= x1254 4)) x861))) x1789))
(assert (= (x724 2127478272) (x1536 2127478272)))
(assert (= (x1536 274184521717934524641157099916833587280) (x724 274184521717934524641157099916833587280)))
(assert (x1141 x28))
(assert (x1141 x394))
(assert (= (x415 x1099 255) (x1672 x1099 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x346 x900))
(assert (x1141 x662))
(assert (x827 x1099))
(assert (= (x1536 238709543) (x724 238709543)))
(assert (x1141 x256))
(assert (x1141 x1143))
(assert (x1141 x705))
(assert (x138 x973 (- x432 x319)))
(assert (x1203 x1247))
(assert (= (or x87 x335) x1579))
(assert (x1141 x1703))
(assert (x346 x941))
(assert (x1141 x1749))
(assert (= x1623 x1298))
(assert (x1141 x1097))
(assert (= x1503 (=> (and (or (not x306) x306) (= x306 (= 0 x1557))) x1497)))
(assert (= (x724 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1536 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x1141 x869))
(assert (x1141 x1782))
(assert (= (and (not x652) x1788) x1587))
(assert (= x823 (and x1799 x1250)))
(assert (x658 x1616))
(assert (x696 (- x511 x1726)))
(assert (= (x660 (+ x695 (- x1285 x497))) 0))
(assert (= 0 (x180 x31)))
(assert (x696 (- x432 x1185)))
(assert (x1141 x1760))
(assert (= x414 (x626 (x724 x414))))
(assert (= x1586 (or x919 x862 (and x1035 x1147) (and (not x16) x1761) x737 x420)))
(assert (x873 x986))
(assert (= (x626 (x724 x830)) x830))
(assert (x1141 x400))
(assert (x1141 x504))
(assert (= x750 (and (not x449) x756)))
(assert (x1141 x1578))
(assert (x1141 x535))
(assert (x358 x106))
(assert (= x857 (=> (and (= 0 x733) (= x1424 x788) (= x1191 x1451)) x650)))
(assert (x1483 x1770 x1541 x1726 x1185))
(assert (= (and (not x288) x303) x1595))
(assert (= (x724 1461501637330902918203684832716283019655932542975) (x1536 1461501637330902918203684832716283019655932542975)))
(assert (= (and x1002 (not x1000)) x98))
(assert (x696 (- x1770 x1614)))
(assert (= x945 (or x1190 x679)))
(assert (x1141 x464))
(assert (x1483 x1416 x1614 x1100 x1195))
(assert (= (=> (and (and (= (x581 (+ x1397 x1646)) x1649) (not (= x260 0)) (= (x581 (+ 31 x235)) x1157) (= (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1157) x1646) (= (> x1691 0) x392) (not (or (and (= true (<= x235 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x235 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x235)))) (or (and (= x594 x399) (not x392)) (and (and (= (x1722 (x1536 25)) x1200) (= (x1722 x1600) x641) (= x105 (x1376 (x1536 25) 0)) (< 1 x1200) (= x1273 (x581 (+ x641 x1691))) (= x1600 (x707 x105 1)) (= 25 x399)) x392))) x509) x1624))
(assert (x1141 x1416))
(assert (x358 x1216))
(assert (= (x660 (+ x695 (- x375 x497))) 0))
(assert (and (x803 x1220 1000000000000000000) (x1534 x1220 1000000000000000000) (x1592 x1220 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x1220)) (and (> (* (x1672 x1220 1000000000000000000) 1000000000000000000) (- x1220 1000000000000000000)) (>= x1220 (* (x1672 x1220 1000000000000000000) 1000000000000000000)))) (x1344 x1220 1000000000000000000)))
(assert (x1141 x1809))
(assert (= 115792089237316195423570985008687907853269984665561335876943319670319585689600 (x626 (x1536 115792089237316195423570985008687907853269984665561335876943319670319585689600))))
(assert (= (and (not x949) x332) x1602))
(assert (= (and x922 x90) x1128))
(assert (x1141 x788))
(assert (x1483 x152 x511 x1541 x1770))
(assert (x696 (- x1614 x1391)))
(assert (x1141 x818))
(assert (x1762 x1541 x1770 x152 x511))
(assert (x1141 x1545))
(assert (= 0 (x180 x1481)))
(assert (x1141 x102))
(assert (x138 x1614 (- x1416 x1726)))
(assert (x1141 x638))
(assert (x1141 x1643))
(assert (= 0 (x180 x454)))
(assert (x873 115792089237316195417293883273301227089434195242512125785869492901042639077375))
(assert (x138 x319 (- x745 x1770)))
(assert (x358 x1807))
(assert (x358 274184521717934524641157099916833587280))
(assert (= (and x40 x445) x1594))
(assert (x346 x986))
(assert (x873 x316))
(assert (x696 (- x319 x511)))
(assert (x1483 x1391 x845 x319 x745))
(assert (x1141 x1273))
(assert (x1141 x1785))
(assert (x1141 x1095))
(assert (x1141 x1755))
(assert (= (x724 307731845) (x1536 307731845)))
(assert (= x1321 (or x409 x1222)))
(assert (x696 x640))
(assert (x1762 x845 x1391 x745 x319))
(assert (= (x326 (+ (- x1285 x1690) x266)) 0))
(assert (x138 x1726 (- x1185 x1541)))
(assert (x1762 x152 x511 x1614 x1416))
(assert (x1141 x472))
(assert (x1141 x573))
(assert (x138 x845 (- x1391 x432)))
(assert (= x2 (and x1129 x1741)))
(assert (x1483 x432 x973 x1195 x1100))
(assert (= (and x1552 (not x1055)) x840))
(assert (= (and x938 x1461) x155))
(assert (= (x626 (x1536 46861972923178205566985210922759877011903582497231265773045854621316061069312)) 46861972923178205566985210922759877011903582497231265773045854621316061069312))
(assert (x1141 x260))
(assert (=> (<= x1032 10000) (= (x1536 x1032) (x724 x1032))))
(assert (x1141 x1282))
(assert (= x1500 (and x1552 x1055)))
(assert (x827 x954))
(assert (x1483 x152 x511 x1416 x1614))
(assert (x1141 x22))
(assert (=> (<= x1472 10000) (= (x1536 x1472) (x724 x1472))))
(assert (x1141 x634))
(assert (x1483 x745 x319 x432 x973))
(assert (x1141 x1622))
(assert (and (x870 x1816 79228162514264337593543950336) (x970 x1816 79228162514264337593543950336) (=> (> 79228162514264337593543950336 0) (= (+ (* (x1672 x1816 79228162514264337593543950336) 79228162514264337593543950336) (x123 x1816 79228162514264337593543950336)) x1816)) (x1485 x1816 79228162514264337593543950336)))
(assert (= (x626 (x724 x381)) x381))
(assert (x1141 x171))
(assert (x1141 x1646))
(assert (x1483 x1100 x1195 x432 x973))
(assert (x1141 x191))
(assert (x1141 x1814))
(assert (x827 x256))
(assert (x696 (- x1770 x845)))
(assert (x1762 x1770 x1541 x745 x319))
(assert (x696 (- x511 x319)))
(assert (x783 x1342 x1479))
(assert (= x1589 (or x1808 x1164)))
(assert (x1141 x196))
(assert (x696 x1391))
(assert (and (and (= (- (* x160 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x160)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x160)) (= (- (* 32 (- x160 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x160 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x160 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x160 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x160 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x160) (x1571 32 x160) (= (* x160 32) (x1120 32 x160)) (x593 32 x160) (x470 32 x160) (x69 32 x160)))
(assert (x1141 x448))
(assert (x1141 x1124))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 (x626 (x1536 115792089237316195423570985008687907853269984665640564039457584007913129639680))))
(assert (and (and (= (- (* x65 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x65)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x65)) (= (- (* 32 (- x65 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x65 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x65 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x65 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x65 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x65) (x1571 32 x65) (= (* x65 32) (x1120 32 x65)) (x593 32 x65) (x470 32 x65) (x69 32 x65)))
(assert (x1141 x609))
(assert (x358 x819))
(assert (x1141 x1827))
(assert (x1141 x75))
(assert (= x880 (and (not x1313) x621)))
(assert (x1141 x1448))
(assert (x783 x468 x1633))
(assert (x1141 x1502))
(assert (= (x1536 2757214935) (x724 2757214935)))
(assert (x696 (- x432 x1770)))
(assert (x1141 x338))
(assert (= (or x1492 x925) x66))
(assert (x1141 x913))
(assert (x358 x1472))
(assert (x1141 x875))
(assert (x1141 x545))
(assert (x1141 x11))
(assert (x138 x1195 (- x1100 x1541)))
(assert (x1141 x770))
(assert (x696 (- x319 x1100)))
(assert (x1141 x826))
(assert (x138 x1416 (- x1614 x1770)))
(assert (x1141 x1155))
(assert (x1141 x868))
(assert (x1483 x1100 x1195 x1416 x1614))
(assert (x1762 x432 x973 x1726 x1185))
(assert (=> (>= 10000 x168) (= (x724 x168) (x1536 x168))))
(assert (x138 x1416 (- x1614 x1726)))
(assert (= (x626 (x1536 2681156919)) 2681156919))
(assert (x696 (- x1541 x1391)))
(assert (= (x1672 x455 6277101735386680763835789423207666416102355444464034512896) (x415 x455 192)))
(assert (x827 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1141 x606))
(assert (x1141 x1767))
(assert (and (and (= (- (* 26959946667150639794667015087019630673637144422540572481103610249216 x686) 3121748550315992231381597229793166305748598142664971150859156959625371738819765620120306103063491971159826931121406622895447975679288285306290176) (x1120 (- x686 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216)) (= (- (* x686 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (- 13407807926820848549258032766824248897686199514843795235058590292862607070448175237982108678046597324626539887026659119732347259916498594267145363699793920)) (x1120 (- x686 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089210356248756420345214020892766250353992003419616917011526809519390720))) (= (x1120 x686 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (* x686 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)))) (x396 x686 26959946667150639794667015087019630673637144422540572481103610249216) (x1571 x686 26959946667150639794667015087019630673637144422540572481103610249216) (= (* 26959946667150639794667015087019630673637144422540572481103610249216 x686) (x1120 x686 26959946667150639794667015087019630673637144422540572481103610249216)) (x593 x686 26959946667150639794667015087019630673637144422540572481103610249216) (x470 x686 26959946667150639794667015087019630673637144422540572481103610249216) (x69 x686 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= x631 (=> (and (and (= x421 (x581 (+ x1253 32))) (= (= 0 x344) x1636) (= x1253 (x46 (* 32 x344))) (= x193 (x581 (+ x1766 x421))) (= x344 (x477 x1322))) (or (and (not x1636) (and (= (x581 (+ 32 x1766)) x972) (= x767 (x46 (* 32 x344))))) x1636)) x1653)))
(assert (x1141 x1675))
(assert (= (and x1833 x327) x302))
(assert (x1141 x1349))
(assert (x138 x1726 (- x1185 x1614)))
(assert (x138 x1416 (- x1614 x432)))
(assert (x783 x1220 x959))
(assert (x138 x1100 (- x1195 x511)))
(assert (x1141 x906))
(assert (x1141 x780))
(assert (x1141 x1394))
(assert (x873 x662))
(assert (x696 x233))
(assert (x1141 x1795))
(assert (x1141 x1511))
(assert (x1483 x1391 x845 x152 x511))
(assert (= (and (not x1636) x1421) x273))
(assert (x696 (- x1185 x745)))
(assert (x696 (- x1185 x1195)))
(assert (and (x870 x1747 32) (x970 x1747 32) (=> (> 32 0) (= (+ (* (x1672 x1747 32) 32) (x123 x1747 32)) x1747)) (x1485 x1747 32)))
(assert (x1762 x1195 x1100 x1614 x1416))
(assert (x358 x1326))
(assert (x1141 x156))
(assert (x827 x489))
(assert (x1483 x319 x745 x1726 x1185))
(assert (x1141 x1766))
(assert (x1141 x1644))
(assert (x1762 x1770 x1541 x973 x432))
(assert (x1141 x807))
(assert (x138 x1541 (- x1770 x845)))
(assert (x1141 x536))
(assert (x1141 x757))
(assert (x138 x1726 (- x1185 x1391)))
(assert (x138 x1100 (- x1195 x319)))
(assert (= (x626 (x724 x108)) x108))
(assert (x827 18446744073709551616))
(assert (x1762 x1726 x1185 x1614 x1416))
(assert (x1483 x1416 x1614 x845 x1391))
(assert (x1141 x690))
(assert (x696 x1407))
(assert (x1762 x1391 x845 x1726 x1185))
(assert (x1141 x361))
(assert (x1141 x898))
(assert (x1141 x1397))
(assert (x1141 x421))
(assert (x696 (- x845 x1195)))
(assert (x1141 x1824))
(assert (x1141 x592))
(assert (= x1688 (and (not x568) x1411)))
(assert (x1141 x649))
(assert (=> (<= x1622 10000) (= (x1536 x1622) (x724 x1622))))
(assert (= x545 (x626 (x724 x545))))
(assert (x138 x1185 (- x1726 x511)))
(assert (x138 x745 (- x319 x973)))
(assert (x696 (- x1541 x319)))
(assert (= x492 (and x245 x1084)))
(assert (= 0 (x180 x1455)))
(assert (x358 x1181))
(assert (= x1164 (or x624 x1439)))
(assert (x358 x334))
(assert (x1141 x1258))
(assert (x696 (- x319 x432)))
(assert (x696 (- x1100 x745)))
(assert (x1141 x1100))
(assert (x873 4294967295))
(assert (= (and x16 x1761) x1081))
(assert (= (x724 26959946667150639794667015087019630673637144422540572481103610249215) (x1536 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1141 x1336))
(assert (x138 x319 (- x745 x511)))
(assert (= (x626 (x724 x390)) x390))
(assert (and (x1534 x1099 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1344 x1099 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x803 x1099 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1592 x1099 57896044618658097711785492504343953926634992332820282019728792003956564819968) (=> (and (< 0 57896044618658097711785492504343953926634992332820282019728792003956564819968) (< 0 x1099)) (and (> (* (x1672 x1099 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (- x1099 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= x1099 (* (x1672 x1099 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (= (* 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1672 x1099 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (- x1099 (x657 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1099)))))
(assert (x1141 x432))
(assert (x696 (- x845 x319)))
(assert (x1483 x1614 x1416 x1195 x1100))
(assert (x1483 x973 x432 x1195 x1100))
(assert (x1141 x907))
(assert (x1141 x790))
(assert (x138 x511 (- x152 x1391)))
(assert (x1141 x135))
(assert (= (=> (and (or (and (and (= x1598 x221) (= 0 x818)) x507) (and (not x507) (and (and (= x734 x1032) (= true x188)) (or (and x188 (and (= x221 32) (= x1748 (x1383 x224)) (= x818 1) (= (x1665 (x724 x1032) (x1536 0) 0) x224))) (and (and (= 0 x818) (= x1598 x221)) (not x188)))))) (and (= x1025 x572) (= x1780 (x1299 (x724 x1797))) (not (< x230 1871194811)) (= x391 x642) (not (> 4 x572)) (not (= 1871194811 x230)) (not (= x230 1883652118)) (= x60 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x900)) (< x230 2127478272) (= x230 1889567281) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x218) (= x900 (x581 (+ 31 x671))) (= (x581 (+ x1804 x203)) x307) (not (>= (+ x203 x1804) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> x1780 0) (= (x581 (+ x60 x391)) x283) (= x1 (x581 (+ x283 4))) (= x1041 (x48 (- x572 4))) (= x1797 x1032) (= (x426 x642) x1804) (not (> 1439069736 x230)) (not (> 954831406 x230)) (not (= x1019 0)) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x671)) (< x671 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x671))) (= (x581 (+ x1 32)) x1260) (not (= 0 x7)) (= (x1299 (x724 x1797)) x1019) (= x340 x1) (= x1025 (x48 (- x1260 x283))) (= x572 36) (= x507 (or (and (< x1041 32) (= (<= x1041 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1041 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x230 1984976886))) x1134) x834))
(assert (x358 x762))
(assert (x1141 x348))
(assert (x1141 x237))
(assert (x1141 x1825))
(assert (x1141 x1474))
(assert (x1483 x511 x152 x1195 x1100))
(assert (x1141 x941))
(assert (x1141 x283))
(assert (x873 x670))
(assert (x1141 x1477))
(assert (x696 (- x1185 x152)))
(assert (x873 x1217))
(assert (x1141 x320))
(assert (x1483 x1541 x1770 x1416 x1614))
(assert (x1141 x1015))
(assert (x138 x1770 (- x1541 x1391)))
(assert (x1141 x96))
(assert (x1141 x551))
(assert (x1141 x1700))
(assert (= x216 (=> (and (= x1562 (> x1759 0)) (= x798 (x581 (+ 1 x413))) (= x1265 0) (= x413 (x947 x887)) (= (x581 (+ x438 x38)) x285) (= x1558 (x46 (* 32 x798))) (not (< 18446744073709551615 x798)) (= (x46 (* x798 32)) x1328) (= x1759 (x1732 x438)) (= x1429 (x581 (+ 32 x438))) (= x38 (x581 (+ 32 x1558)))) (and (=> (and (and (= (= x690 0) x451) (or (and x451 (= 0 x1706)) (and (not x451) (and (= x1668 x1706) (= x1619 (x46 (* 32 x1340))) (= x1277 (x1732 x887)) (= (x1732 x1798) x1668) (= (x581 (+ x887 x498)) x1798) (< x1340 x1277) (= x498 (x581 (+ x1619 32))) (= x1340 (ite (< 0 x690) 0 115792089237316195423570985008687907853269984665640564039457584007913129639935)))))) x1562) x1350) (=> (not x1562) x1148)))))
(assert (and (x1534 x455 6277101735386680763835789423207666416102355444464034512896) (x1344 x455 6277101735386680763835789423207666416102355444464034512896) (x803 x455 6277101735386680763835789423207666416102355444464034512896) (x1592 x455 6277101735386680763835789423207666416102355444464034512896) (=> (and (< 0 6277101735386680763835789423207666416102355444464034512896) (< 0 x455)) (and (> (* (x1672 x455 6277101735386680763835789423207666416102355444464034512896) 6277101735386680763835789423207666416102355444464034512896) (- x455 6277101735386680763835789423207666416102355444464034512896)) (>= x455 (* (x1672 x455 6277101735386680763835789423207666416102355444464034512896) 6277101735386680763835789423207666416102355444464034512896)))) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1672 x455 6277101735386680763835789423207666416102355444464034512896)) (- x455 (x657 6277101735386680763835789423207666416102355444464034512895 x455)))))
(assert (= x1651 (x626 (x724 x1651))))
(assert (x1141 x1681))
(assert (= 3224796394 (x626 (x1536 3224796394))))
(assert (x1141 x845))
(assert (x1141 x81))
(assert (x696 (- x1195 x319)))
(assert (x1141 x982))
(assert (x1141 x89))
(assert (= (x626 (x724 x1530)) x1530))
(assert (x138 x845 (- x1391 x1614)))
(assert (= x106 (x626 (x724 x106))))
(assert (= 0 (x1660 x286)))
(assert (x346 x521))
(assert (x1141 x1013))
(assert (x1141 x1738))
(assert (x1483 x319 x745 x1100 x1195))
(assert (= 0 (x180 x1314)))
(assert (= (x232 x637 96) (x46 (* x637 79228162514264337593543950336))))
(assert (= x1004 (=> (and (or (and x810 (and (= x1335 (+ x102 x1817)) (= x620 (x395 (x1536 2))) (= (x863 x1618) x1743) (= (x581 (+ x599 x1423)) x102) x1751 (not (>= (+ x1423 x599) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x874 (x657 1461501637330902918203684832716283019655932542975 x502)) (= (x863 x1337) x1423) (= (x1665 (x724 x874) (x1536 0) 0) x1618) (= x953 0) (= (- x1335 x1743) x360) (= (x581 (+ x620 x599)) x809) (= x1414 (x657 1461501637330902918203684832716283019655932542975 x502)) (not (>= (+ x620 x599) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1751 (= x958 x360)) (= x118 x958) (= x497 x101) (= (x1665 (x724 x1414) (x1536 0) 0) x1337))) (and (= x1817 x118) (not x810))) (and (= x810 (> x599 0)) (= x1479 (ite (> 1000000000000000000 x1770) (x48 (- 1000000000000000000 x1770)) 0)) (= (x1672 x1342 x1479) x599) (ite x879 x879 (= (x1672 x1342 x1541) x1770)) (= x1342 (x46 (x1120 x1541 x1770))) (= x879 (= 0 x1541)) (not (= 0 x1479)))) x651)))
(assert (x138 x1614 (- x1416 x432)))
(assert (x1141 x632))
(assert (x1483 x1195 x1100 x432 x973))
(assert (= (x180 x226) 0))
(assert (= (x724 81655993114286172543975849523773895523710823181222424266797447834442299080704) (x1536 81655993114286172543975849523773895523710823181222424266797447834442299080704)))
(assert (x1141 x218))
(assert (and (x870 x1675 32) (x970 x1675 32) (=> (> 32 0) (= (+ (* (x1672 x1675 32) 32) (x123 x1675 32)) x1675)) (x1485 x1675 32)))
(assert (x1141 x1444))
(assert (= (x724 18446744073709551615) (x1536 18446744073709551615)))
(assert (x1141 x154))
(assert (x1141 x1339))
(assert (x1141 x148))
(assert (and (x870 x1814 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1814 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1814 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1814 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1814)) (x1485 x1814 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1141 x1577))
(assert (and (x870 x941 18446744073709551616) (x970 x941 18446744073709551616) (=> (> 18446744073709551616 0) (= (+ (* (x1672 x941 18446744073709551616) 18446744073709551616) (x123 x941 18446744073709551616)) x941)) (x1485 x941 18446744073709551616)))
(assert (x1141 x841))
(assert (x1483 x1195 x1100 x1770 x1541))
(assert (= x194 (or x912 x823)))
(assert (= (x1536 363856219) (x724 363856219)))
(assert (x1141 x502))
(assert (x1141 x1369))
(assert (x696 (- x319 x1541)))
(assert (=> (>= 10000 x336) (= (x1536 x336) (x724 x336))))
(assert (x138 x1770 (- x1541 x745)))
(assert (= (and x1603 x1152) x1642))
(assert (=> (>= 10000 x542) (= (x724 x542) (x1536 x542))))
(assert (x1141 x1048))
(assert (and (x870 x622 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x622 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x622 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x622 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x622)) (x1485 x622 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x346 x1028))
(assert (x1141 x8))
(assert (x696 (- x1614 x152)))
(assert (x696 (- x1726 x745)))
(assert (and (x870 x485 6277101735386680763835789423207666416102355444464034512896) (x970 x485 6277101735386680763835789423207666416102355444464034512896) (=> (> 6277101735386680763835789423207666416102355444464034512896 0) (= (+ (* (x1672 x485 6277101735386680763835789423207666416102355444464034512896) 6277101735386680763835789423207666416102355444464034512896) (x123 x485 6277101735386680763835789423207666416102355444464034512896)) x485)) (x1485 x485 6277101735386680763835789423207666416102355444464034512896)))
(assert (= (x326 (+ x266 (- x394 x1690))) 0))
(assert (x1141 x208))
(assert (= x850 (and x373 x1612)))
(assert (= (x326 (+ (- x1526 x1690) x266)) 0))
(assert (= (and x731 (not x43)) x195))
(assert (x1141 x236))
(assert (= (=> (= x1716 (not (< 1 x160))) (and (=> (= x930 x142) x107) x1716)) x806))
(assert (= x444 (x626 (x724 x444))))
(assert (x1141 x1269))
(assert (=> (<= x1610 10000) (= (x1536 x1610) (x724 x1610))))
(assert (x358 x1610))
(assert (= x363 (and (not x1567) x1737)))
(assert (x1141 x1619))
(assert (x1141 x819))
(assert (x559 x1816))
(assert (x1141 x576))
(assert (x1483 x152 x511 x1726 x1185))
(assert (x1141 x564))
(assert (x1483 x1541 x1770 x1185 x1726))
(assert (x1141 x1818))
(assert (x1141 x1329))
(assert (x138 x1391 (- x845 x152)))
(assert (x1141 x207))
(assert (x1483 x1100 x1195 x1541 x1770))
(assert (x1141 x1513))
(assert (x1483 x845 x1391 x1726 x1185))
(assert (= (and x19 x1170) x1799))
(assert (x1141 x286))
(assert (x827 x1633))
(assert (x783 x1792 x1426))
(assert (x696 x1340))
(assert (x1141 x160))
(assert (= x1580 (and x93 x1819)))
(assert (x138 x1391 (- x845 x511)))
(assert (x346 18446744073709551616))
(assert (x783 x337 x536))
(assert (x358 x1530))
(assert (= x784 (or x1602 x574)))
(assert (x358 x414))
(assert (x1141 x1041))
(assert (x1141 x1798))
(assert (x696 (- x1541 x1185)))
(assert (x138 x1100 (- x1195 x1770)))
(assert (x346 x1157))
(assert (= (and x13 (not x736)) x227))
(assert (= 0 (x326 (+ x266 (- x244 x1690)))))
(assert (x1141 x1664))
(assert (= (=> (and (< 0 x869) (= (x12 128) x869) (= x351 (not (< 1 x1535))) (= (x12 160) x1714) (= (x12 128) x1535) (= x1235 x1714)) (and (=> (= x1767 x1235) x254) x351)) x189))
(assert (x696 (- x1185 x1100)))
(assert (x1141 x1027))
(assert (x1141 x419))
(assert (x1762 x1416 x1614 x973 x432))
(assert (x1141 x1272))
(assert (x346 x1738))
(assert (x1762 x1100 x1195 x1541 x1770))
(assert (x1483 x1770 x1541 x1185 x1726))
(assert (x1141 x1287))
(assert (x1141 x1130))
(assert (x1141 x272))
(assert (x1141 x202))
(assert (x1762 x319 x745 x1195 x1100))
(assert (x138 x1100 (- x1195 x1541)))
(assert (x1141 x1052))
(assert (x1483 x432 x973 x1185 x1726))
(assert (x1141 x1058))
(assert (x696 (- x511 x1416)))
(assert (x873 x898))
(assert (x1141 x888))
(assert (x1141 x1062))
(assert (x827 x1479))
(assert (x1141 x1247))
(assert (x138 x845 (- x1391 x1541)))
(assert (x1141 x1451))
(assert (x827 x1023))
(assert (x138 x432 (- x973 x1770)))
(assert (x696 (- x432 x745)))
(assert (x1141 x4))
(assert (= x1148 (=> (and (= x753 x1437) (= x118 x1576) (= x1360 x285) (= x1314 x438)) x241)))
(assert (x1141 x910))
(assert (= 1439069736 (x626 (x1536 1439069736))))
(assert (x1141 x1572))
(assert (= (x626 (x724 x192)) x192))
(assert (x1483 x1770 x1541 x1416 x1614))
(assert (= (and x1263 x1079) x1232))
(assert (and (x870 x670 32) (x970 x670 32) (=> (> 32 0) (= (+ (* (x1672 x670 32) 32) (x123 x670 32)) x670)) (x1485 x670 32)))
(assert (= x1735 (x626 (x724 x1735))))
(assert (x696 x637))
(assert (x138 x1185 (- x1726 x973)))
(assert (x1141 x995))
(assert (x1141 x677))
(assert (x696 (- x152 x1100)))
(assert (x1141 x588))
(assert (x1141 x1523))
(assert (= x1112 (=> (and (= x1419 (< x1778 x1246)) (= x517 (ite (not x1419) (not x1419) (= 0 x1185)))) (and (=> (and (not x517) (and (or (and (not x1488) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x1778)) (= (x46 (* 1000000000000000000 x1778)) x1349) (= (x1672 x1349 x1246) x4) (= x4 x1143))) (and (= x1143 0) x1488)) (and (not (= x1246 0)) (= x1488 (= x1778 0))))) x214) (=> (and x517 (= x1770 0)) x1004)))))
(assert (x1483 x1100 x1195 x845 x1391))
(assert (x1141 x1830))
(assert (x1323 x589))
(assert (= (x1672 x1447 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x415 x1447 255)))
(assert (x696 (- x1416 x511)))
(assert (x1141 x1611))
(assert (x696 (- x1391 x1726)))
(assert (x138 x745 (- x319 x152)))
(assert (x1141 x65))
(assert (x873 x1746))
(assert (= (x626 (x1536 4294967295)) 4294967295))
(assert (x827 x86))
(assert (= 0 (x180 x73)))
(assert (= (x180 x916) 0))
(assert (x1141 x741))
(assert (x1141 x121))
(assert (= (=> (= (not (< 1 x160)) x1268) (and (=> (= x438 x844) x216) x1268)) x1244))
(assert (x1141 x895))
(assert (= (x626 (x1536 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (x1141 x623))
(assert (x1141 x1506))
(assert (x696 (- x973 x1195)))
(assert (x696 (- x152 x1391)))
(assert (x696 (- x152 x1726)))
(assert (x894 x1028))
(assert (= x1188 (and x1094 (not x68))))
(assert (x1141 x604))
(assert (x1141 x375))
(assert (x1141 x1598))
(assert (x1141 x607))
(assert (x1141 x240))
(assert (= (x180 x1441) 0))
(assert (x696 (- x1770 x1391)))
(assert (= x891 (=> (and (= x749 (< 0 x160)) (= x699 0) x1641) (and (=> (and (not x749) (= x1322 x930)) x107) (=> (and (= (= 0 x690) x1741) x749) (and (=> (and (= x1322 x142) x1741) x806) (=> (and (and (= x1654 (x1665 (x1536 0) (x1536 17) 0)) (= (= 0 x455) x288) (= (x317 x1654) x455)) (not x1741)) (and (=> (and (= x1322 x142) x288) x806) (=> (and (and (or (and (and (= 256 x1384) (= 0 x1052) (= (x581 (+ 31 x1013)) x318) (= x1389 x595) (= x940 x485) (= 0 x535) (= 0 x33) (= x921 (x1665 (x1536 0) (x1536 17) 0)) (= x967 (x581 (+ x1080 x58))) (> 4294967296 x1013) (= x686 (x581 (+ x1245 x113))) (= x1255 (x1665 (x1536 0) (x1536 17) 0)) (= (x581 (+ x58 x1080)) x1388) (= x1776 64) (= (x581 (+ x1300 x1362)) x1777) (= x481 32) (= x338 x1738) (= x1616 x324) (= x595 (x581 (+ x1322 x156))) (= 255 x79) (= x1123 32) (= x304 x719) (= 255 x278) (not (or (and (= (<= x1013 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1013 32)) (> x1013 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x345 255) (= (x415 x686 32) x1052) (not (= 0 x578)) (= x324 (x657 115792089237316195423570985008687907853269984665561335876943319670319585689600 x1738)) (= x1362 (x657 26959946667150639794667015087019630673637144422540572481103610249215 x1261)) (= x156 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x318)) (= (x232 x686 224) x1300) (= x33 (x415 x719 96)) (= (x317 x1255) x338) (= x595 x472) (= (x1299 (x724 x1216)) x578) (= x926 64) (= (>= 79228162514264337593543950335 x304) x1294) (= (ite (>= 79228162514264337593543950335 x304) x1581 (ite x1294 x76 x790)) x940) (= x790 (x530 x1616 x304)) (= x1827 (x657 115792089210356248762697446949407573530086143415211086033019366971273553903615 x485)) (= (ite (<= x58 6277101735386680763835789423207666416102355444464034512895) x1388 x967) x379) (= x1581 (x581 (+ x1616 x304))) (= 32 x661) (= x379 x1261) (= x713 224) (= x1270 192) (= x58 x1827) (= 255 x1138) (= x719 (x1172 x1005)) (= x1080 (x232 x113 192)) (= (x581 (+ x1616 x304)) x76) (= x1604 32) (= (x657 1461501637330902918203684832716283019655932542975 x1682) x1216) (= 0 x294) (= (x415 x719 96) x294) (= x1322 x1005) (= x770 96)) x343) (and (= x1322 x1389) (not x343))) (and (= x418 32) (= (x657 4294967295 x1282) x113) (= 32 x1274) (= x467 (x415 x455 224)) (= 224 x957) (= (> x1245 x467) x343) (= x1282 (x415 x455 192)) (= x151 192))) (not x288)) x398)))))))))
(assert (x1141 x1472))
(assert (x696 32))
(assert (x696 (- x1416 x152)))
(assert (x1141 x595))
(assert (x1141 x1705))
(assert (= (x626 (x1536 81655993114286172543975849523773895523710823181222424266797447834442299080704)) 81655993114286172543975849523773895523710823181222424266797447834442299080704))
(assert (x1141 x1185))
(assert (x138 x1195 (- x1100 x1416)))
(assert (= x1461 (and x1321 x1495)))
(assert (x1141 x1310))
(assert (x1141 x157))
(assert (= (or x492 (and x1084 (not x245))) x450))
(assert (x346 x316))
(assert (x358 x936))
(assert (x1141 x524))
(assert (x1141 x589))
(assert (x827 x1447))
(assert (x1141 x1241))
(assert (x1483 x1416 x1614 x1195 x1100))
(assert (= (x724 500647658) (x1536 500647658)))
(assert (x696 x845))
(assert (= 0 (x326 (+ (- x868 x1690) x266))))
(assert (x1762 x1195 x1100 x745 x319))
(assert (x1483 x1391 x845 x1726 x1185))
(assert (x696 x1156))
(assert (x358 x1510))
(assert (= (x626 (x1536 826074471)) 826074471))
(assert (= (or x689 x1627) x1266))
(assert (x138 x511 (- x152 x745)))
(assert (x346 x1747))
(assert (and (and (= (- (* x1450 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1450)) (= (- (* 32 (- x1450 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1450 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1450 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x1450 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x1450 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x1450) (x1571 32 x1450) (= (* x1450 32) (x1120 32 x1450)) (x593 32 x1450) (x470 32 x1450) (x69 32 x1450)))
(assert (= x920 (=> (and (= (x144 x1322) x1048) (= (< 0 x1048) x1717)) (and (=> (not x1717) x764) (=> x1717 x563)))))
(assert (x138 x511 (- x152 x319)))
(assert (x1141 x296))
(assert (= (x180 x998) 0))
(assert (x138 x1416 (- x1614 x152)))
(assert (x138 x1100 (- x1195 x1185)))
(assert (x696 (- x152 x1614)))
(assert (x696 (- x1185 x973)))
(assert (x1141 x1219))
(assert (x873 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x696 (- x1391 x432)))
(assert (x1141 x909))
(assert (x1762 x152 x511 x845 x1391))
(assert (x1762 x1726 x1185 x1541 x1770))
(assert (x1141 x926))
(assert (= (x724 2835717307) (x1536 2835717307)))
(assert (x1141 x1362))
(assert (x184 x521))
(assert (x696 (- x1195 x1614)))
(assert (x1141 x1816))
(assert (x1141 x725))
(assert (x1483 x432 x973 x1770 x1541))
(assert (x696 (- x1416 x1100)))
(assert (x1141 x572))
(assert (x696 (- x432 x1726)))
(assert (x696 (- x1541 x1726)))
(assert (x1483 x1770 x1541 x973 x432))
(assert (= (and (not x1140) x1176) x368))
(assert (x1141 x377))
(assert (x1141 x438))
(assert (x1141 x929))
(assert (= x496 (x626 (x724 x496))))
(assert (x138 x1726 (- x1185 x973)))
(assert (x1141 x889))
(assert (x1141 x1437))
(assert (x1483 x1416 x1614 x1541 x1770))
(assert (x1203 x502))
(assert (x1141 x1306))
(assert (x1141 x1479))
(assert (= (and (not x1031) x687) x408))
(assert (x1141 x1649))
(assert (x1141 x866))
(assert (and (x870 x755 18446744073709551616) (x970 x755 18446744073709551616) (=> (> 18446744073709551616 0) (= (+ (* (x1672 x755 18446744073709551616) 18446744073709551616) (x123 x755 18446744073709551616)) x755)) (x1485 x755 18446744073709551616)))
(assert (x1141 x469))
(assert (x138 x973 (- x432 x745)))
(assert (x138 x319 (- x745 x1541)))
(assert (x696 (- x319 x973)))
(assert (x1141 x1161))
(assert (x894 x1217))
(assert (= (and x773 x1642) x1537))
(assert (x1141 x1735))
(assert (x1141 x1535))
(assert (x1141 x314))
(assert (x1141 x738))
(assert (x1141 x612))
(assert (x1141 x1708))
(assert (x1141 x1601))
(assert (x1141 x1400))
(assert (x696 (- x432 x845)))
(assert (x1141 x856))
(assert (x138 x1726 x1185))
(assert (x1483 x1391 x845 x1770 x1541))
(assert (x894 x316))
(assert (x696 (- x511 x1614)))
(assert (x358 x108))
(assert (x1141 x1156))
(assert (x1141 x1482))
(assert (x1762 x1185 x1726 x1541 x1770))
(assert (x1483 x432 x973 x845 x1391))
(assert (x1141 x120))
(assert (x138 x1541 (- x1770 x745)))
(assert (x827 x973))
(assert (= (x626 (x724 x277)) x277))
(assert (x138 x1391 (- x845 x1541)))
(assert (x1141 x277))
(assert (x1483 x1185 x1726 x1614 x1416))
(assert (x1141 x362))
(assert (= 0 (x660 (+ (- x226 x497) x695))))
(assert (x1141 x113))
(assert (x783 x173 x649))
(assert (= (and x165 (not x1486)) x778))
(assert (= x1656 (and (not x1132) x405)))
(assert (x1141 x1196))
(assert (x1483 x1391 x845 x432 x973))
(assert (x696 x1047))
(assert (= (=> (and (and (not (or (and (< x1191 32) (= true (<= x1191 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1191 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (>= (+ x23 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x581 (+ x842 x23)) x923) (not (= x733 0)) (= x1764 x683) (= x23 (x378 x683)) (= x923 x704)) (and (= x262 (or x977 x1193)) (or (and (> x551 x1474) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1474) (<= x551 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x551) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1474))) (>= x866 0) (not (< 18446744073709551615 x111)) (not (< x551 4)) (= x824 1962127369) (not (< 18446744073709551615 x1156)) (= (x46 (* x1156 32)) x452) (= (> x505 18446744073709551615) x977) (<= x269 1461501637330902918203684832716283019655932542975) x1457 (= (ite x262 1 0) x647) (> 1984976886 x824) (not (> 1871194811 x824)) (>= x598 0) (= x1755 (x581 (+ x154 4))) (= (> 128 x505) x1193) (= x222 (x581 (+ 32 x128))) (= x780 x1196) (= x1511 x779) (= x269 x1014) (= false x1144) (= x1264 x779) x793 (= x725 x1238) (= x1457 (= x1030 x1135)) (not (> 954831406 x824)) (>= x269 0) (<= 0 x692) (>= 1461501637330902918203684832716283019655932542975 x598) (= x1377 x504) (= x1474 (x581 (+ 31 x1755))) (not (or (and (= true (<= x1432 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 224 x1432)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1432))) (not (< x824 1439069736)) (= (> x1156 0) x1678) (and (< 227 x551) (= true (<= x551 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x504 x616) (= x630 x1749) (not (= x824 1871194811)) (= x909 x109) (= x28 x665) (= x505 (x581 (+ 128 x222))) (= (x1555 x1755) x1156) (= x1795 x1247) (not (= x824 1889567281)) (<= 0 x1512) (= 0 x647) (not (= x824 1883652118)) (= x1613 3586168516) (= x1549 x540) (>= 1461501637330902918203684832716283019655932542975 x6) (= x1432 (x48 (- x551 4))) (= x1014 x692) (<= x866 1461501637330902918203684832716283019655932542975) (= x704 x636) (< 0 x1484) (= x1702 false) (= x893 (x581 (+ 32 x1755))) (= (= x309 (x46 (* 32 x1047))) x793) (= (x46 (* 32 x1156)) x128) (>= x1749 0) (= x975 x1247) (= x109 x866) (<= x504 1461501637330902918203684832716283019655932542975) (<= x1749 1461501637330902918203684832716283019655932542975) (= x1198 1962127369) (> 2127478272 x824) (= x1793 true) (= x1484 (x1299 (x724 x1797))) (<= 0 x6) (= (x581 (+ x893 x452)) x119) (= 0 x1196) (>= 1461501637330902918203684832716283019655932542975 x692) (= x111 x154) (= 128 x1515) (<= x1512 1461501637330902918203684832716283019655932542975) (<= x1247 1461501637330902918203684832716283019655932542975) (not (> x119 x551)))) (and (=> (not x1678) x569) (=> (and x1678 (and (= (x1555 x893) x1683) (= x1828 (x581 (+ 32 x893))) (= (< 1 x1156) x1263))) (and (=> (and x1263 (and (= x1010 (x1555 x1828)) (= (x581 (+ 32 x1828)) x1459) (= (> x1156 2) x82))) (and (=> (and x82 (and (= (x1555 x1459) x202) (= (> x1156 3) x743) (= (x581 (+ x1459 32)) x1280))) (and (=> x743 x1063) (=> (not x743) x569))) (=> (not x82) x569))) (=> (not x1263) x569))))) x1820))
(assert (x1141 x795))
(assert (= (or x533 x1145) x1176))
(assert (x894 x161))
(assert (x1141 x312))
(assert (x346 x1261))
(assert (x1141 x1384))
(assert (= x627 (=> (and (= (x1590 x735) x1545) (= (x581 (+ x1192 32)) x741) (= x1001 (x1590 x741)) (= (x48 (- x1001 x1545)) x1446) (> x1291 0) (= (x581 (+ x887 32)) x735) (< 0 x1745) (= x439 (not (< 1 x1822))) (= x1745 (x1590 x1192)) (not (> x1545 x1001)) (= x1291 (x1590 x887)) (= x943 (x1590 x1192)) (> x943 0)) (and x439 x676))))
(assert (x358 x1513))
(assert (= (and x1788 x652) x877))
(assert (and (and (= (- (* x148 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x148)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x148)) (= (- (* 32 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x148 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x148) (x1571 32 x148) (= (* x148 32) (x1120 32 x148)) (x593 32 x148) (x470 32 x148) (x69 32 x148)))
(assert (x1141 x1659))
(assert (x138 x1614 x1416))
(assert (x1141 x1800))
(assert (x1141 x1822))
(assert (x696 (- x1195 x511)))
(assert (x1483 x745 x319 x1770 x1541))
(assert (= x1411 (and (not x1367) x1081)))
(assert (= (or (and (not x605) x1262) x1065) x1516))
(assert (x1141 x481))
(assert (x138 x1391 (- x845 x1195)))
(assert (x184 x1157))
(assert (x696 x1109))
(assert (x696 (- x152 x1770)))
(assert (x1141 x616))
(assert (x696 (- x1541 x432)))
(assert (x1141 x1032))
(assert (x1141 x628))
(assert (x1762 x432 x973 x1195 x1100))
(assert (x696 (- x1770 x511)))
(assert (x873 x161))
(assert (x1141 x1728))
(assert (x1483 x1391 x845 x1185 x1726))
(assert (x138 x1100 (- x1195 x745)))
(assert (x696 (- x432 x1391)))
(assert (= 228615836 (x626 (x1536 228615836))))
(assert (x138 x973 x432))
(assert (x138 x1195 (- x1100 x319)))
(assert (x1141 x1526))
(assert (x1141 x1166))
(assert (x1141 x417))
(assert (x1483 x432 x973 x745 x319))
(assert (= (and (not x327) x1833) x838))
(assert (x1483 x845 x1391 x1195 x1100))
(assert (x1483 x1541 x1770 x511 x152))
(assert (x1762 x1195 x1100 x152 x511))
(assert (x138 x973 (- x432 x1770)))
(assert (x696 (- x1770 x745)))
(assert (x873 x1611))
(assert (x696 (- x432 x1416)))
(assert (x1762 x1391 x845 x1614 x1416))
(assert (= (x326 (+ x266 (- x564 x1690))) 0))
(assert (= (x626 (x724 x1685)) x1685))
(assert (= (and x1642 (not x773)) x1236))
(assert (x1141 x1521))
(assert (= x624 (and (not x451) x935)))
(assert (and (x870 x1034 2) (x970 x1034 2) (=> (> 2 0) (= (+ (* (x1672 x1034 2) 2) (x123 x1034 2)) x1034)) (x1485 x1034 2)))
(assert (x1141 x108))
(assert (x1141 x258))
(assert (x1483 x1100 x1195 x152 x511))
(assert (x1483 x511 x152 x1541 x1770))
(assert (x827 x719))
(assert (x1141 x1780))
(assert (x827 x1224))
(assert (x696 (- x432 x1541)))
(assert (= (=> (and (= (or x751 x804) x1352) (not (< 18446744073709551615 x725)) (= x634 (x581 (+ 4 x1238))) (= x776 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1814)) (= x1700 (x581 (+ 31 x634))) (= x28 x44) (= x540 x672) (= (x581 (+ x1455 x1507)) x570) (= x1744 (x12 128)) (= x1322 (x581 (+ x300 x505))) (= (x12 128) x1189) (= x1518 (ite x1352 1 0)) (= x751 (< x1322 x505)) (= x1189 x160) (= x1814 (x581 (+ 31 x1507))) (= x1507 (x1555 x634)) (not (< x551 x315)) (= x804 (> x1322 18446744073709551615)) (= x1518 0) (= x300 (x581 (+ 32 x776))) (= x315 (x581 (+ x1507 x1015))) (not (< 18446744073709551615 x1507)) (= (x581 (+ x505 32)) x1455) (= x449 (> x1744 0)) (= x1015 (x581 (+ 32 x634))) (or (and (<= x551 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1700 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1700 x551) (= (<= x1700 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x551 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (and (not x449) (= 0 x1767)) x254) (=> x449 x189))) x569))
(assert (x138 x1614 (- x1416 x1185)))
(assert (x138 x1770 (- x1541 x511)))
(assert (x138 x745 x319))
(assert (x1483 x1100 x1195 x1391 x845))
(assert (x138 x1195 (- x1100 x745)))
(assert (= x334 (x626 (x724 x334))))
(assert (x1141 x503))
(assert (x696 (- x1416 x1726)))
(assert (x1141 x554))
(assert (x827 x1726))
(assert (= x831 (or x993 x520)))
(assert (x1141 x745))
(assert (x1762 x1185 x1726 x1195 x1100))
(assert (x1141 x586))
(assert (x1483 x845 x1391 x973 x432))
(assert (x1141 x1748))
(assert (= x621 (or x104 x408)))
(assert (x827 x1541))
(assert (x1141 x1023))
(assert (x138 x845 (- x1391 x511)))
(assert (x1141 x1504))
(assert (x138 x511 (- x152 x1416)))
(assert (x1141 x403))
(assert (x696 (- x1541 x745)))
(assert (= (=> (and (= 1 x982) (= (x581 (+ x31 32)) x83) (= (x1556 x83) x576) (= (x1556 x49) x1691) (> x1069 1) (= x212 (x1556 x1314)) (= (x581 (+ x209 32)) x49) (= x652 (= x1622 x108)) (< 1 x212) (= x1069 (x1556 x1360))) (and (=> x652 x1623) (=> (and (= true x1639) (not x652)) (and (=> (and (= x1797 x1622) (not x1639)) x1298) (=> x1639 x1623))))) x1791))
(assert (x1141 x1211))
(assert (x1141 x1569))
(assert (x827 x649))
(assert (= (=> (and (= (x46 (* x65 32)) x191) (> x720 x65) (= (x581 (+ x191 32)) x1312) (= (x1514 x1192) x1628) (= (not (> x1628 1)) x1710) (= (x215 128) x720) (= (x581 (+ x1312 128)) x394) (= x1569 (x581 (+ 32 x1192))) (< 0 x320) (= x320 (x215 x1192)) (= x1809 (x215 x394)) (= (ite (> x690 0) 0 1) x65)) (and x1710 x523)) x1160))
(assert (x1141 x786))
(assert (x1141 x900))
(assert (x1141 x556))
(assert (= (and x1330 x231) x1382))
(assert (= 0 (x326 (+ (- x998 x1690) x266))))
(assert (x1141 x1441))
(assert (x1483 x1195 x1100 x1185 x1726))
(assert (= (x724 79228162514264337593543950335) (x1536 79228162514264337593543950335)))
(assert (x1483 x845 x1391 x1770 x1541))
(assert (x1141 x106))
(assert (x696 x745))
(assert (x138 x1614 (- x1416 x1541)))
(assert (= x500 (and x700 (not x392))))
(assert (= x47 (and x1488 x1311)))
(assert (x1141 x1171))
(assert (x1483 x745 x319 x511 x152))
(assert (and (x870 x1747 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1747 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1747 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1747 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1747)) (x1485 x1747 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x912 (and x1799 (not x1250))))
(assert (= (x626 (x724 x623)) x623))
(assert (x696 (- x973 x1726)))
(assert (x138 x1416 (- x1614 x1391)))
(assert (x1141 x1810))
(assert (x696 (- x973 x1614)))
(assert (x358 x1347))
(assert (x1141 x15))
(assert (x1141 x580))
(assert (x1141 x508))
(assert (x1141 x1206))
(assert (x1141 x1604))
(assert (x1141 x1153))
(assert (x358 x680))
(assert (= 0 (x660 (+ (- x454 x497) x695))))
(assert (= (and x1562 x125) x935))
(assert (x1762 x511 x152 x845 x1391))
(assert (x1483 x1185 x1726 x973 x432))
(assert (x346 x1814))
(assert (x1141 x101))
(assert (and (x870 x1217 256) (x970 x1217 256) (=> (> 256 0) (= (+ (* (x1672 x1217 256) 256) (x123 x1217 256)) x1217)) (x1485 x1217 256)))
(assert (x696 (- x511 x1100)))
(assert (x346 x1675))
(assert (x138 x319 (- x745 x152)))
(assert (= (x1536 112349551054952423155953805921267728290102753186399332250345724850365349756928) (x724 112349551054952423155953805921267728290102753186399332250345724850365349756928)))
(assert (x696 x686))
(assert (x1141 x1351))
(assert (x696 (- x1614 x1100)))
(assert (x1141 x1353))
(assert (x1762 x745 x319 x973 x432))
(assert (= x881 (and x1579 (not x1532))))
(assert (x1483 x1185 x1726 x1541 x1770))
(assert (x1762 x511 x152 x1726 x1185))
(assert (x346 x898))
(assert (x346 x161))
(assert (x1141 x767))
(assert (x1141 x1099))
(assert (x1483 x511 x152 x745 x319))
(assert (= (and x370 x1594) x1531))
(assert (x358 x277))
(assert (x1141 x311))
(assert (x1762 x1100 x1195 x1614 x1416))
(assert (x696 (- x1541 x1416)))
(assert (x1141 x1832))
(assert (x1141 x936))
(assert (x1141 x1417))
(assert (= x165 (and x1509 x1290)))
(assert (x138 x1726 (- x1185 x432)))
(assert (x696 (- x1541 x1195)))
(assert (x1483 x745 x319 x1195 x1100))
(assert (= (x1672 x987 64) (x415 x987 6)))
(assert (= 0 (x180 x478)))
(assert (= (or x701 x1591) x373))
(assert (x1141 x1146))
(assert (x346 x1523))
(assert (x346 x1217))
(assert (x1141 x1197))
(assert (= x512 (and (not x370) x1594)))
(assert (x1483 x1416 x1614 x973 x432))
(assert (x1141 x1019))
(assert (x1141 x151))
(assert (x138 x432 (- x973 x1195)))
(assert (=> (>= 10000 x543) (= (x1536 x543) (x724 x543))))
(assert (x696 x432))
(assert (x1141 x1109))
(assert (x1754 x662))
(assert (and (x870 x412 256) (x970 x412 256) (=> (> 256 0) (= (+ (* (x1672 x412 256) 256) (x123 x412 256)) x412)) (x1485 x412 256)))
(assert (x1141 x1111))
(assert (x1141 x855))
(assert (x696 (- x1195 x745)))
(assert (x696 (- x973 x845)))
(assert (= x1499 (and x1603 (not x1152))))
(assert (= (x660 (+ x695 (- x503 x497))) 0))
(assert (x1141 x501))
(assert (x1483 x845 x1391 x1416 x1614))
(assert (x1762 x432 x973 x745 x319))
(assert (= x669 (=> (and (or (and x922 (and (= (x153 x94) x929) (< 0 x1772) (= x594 25) (= x1772 (x153 (x1536 25))) (= x604 (x581 (+ x929 x1252))) (= x140 x94) (= x140 (x1376 (x1536 25) 0)))) (and (not x922) (= x1610 x594))) (and (= (< 0 x1252) x922) (= x1467 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x898)) (not (= x1494 0)) (= x1397 (x581 (+ x207 x1467))) (= (x581 (+ 31 x103)) x898) (not (or (and (> 32 x103) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103))))) x1791)))
(assert (x1141 x1797))
(assert (x696 x973))
(assert (x1483 x152 x511 x1391 x845))
(assert (x138 x745 (- x319 x1391)))
(assert (x696 (- x511 x845)))
(assert (= (and (not x1509) x1290) x1525))
(assert (= (=> (and (= x980 (< 0 x1802)) (= (x1248 x1322) x1802)) (and (=> (not x980) x1742) (=> x980 x553))) x1653))
(assert (x696 (- x1726 x1614)))
(assert (= (x626 (x724 x1347)) x1347))
(assert (x1141 x71))
(assert (=> (<= x1728 10000) (= (x724 x1728) (x1536 x1728))))
(assert (= 0 (x326 (+ x266 (- x312 x1690)))))
(assert (x138 x1195 (- x1100 x1391)))
(assert (and (x1534 x219 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1344 x219 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x803 x219 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1592 x219 57896044618658097711785492504343953926634992332820282019728792003956564819968) (=> (and (< 0 57896044618658097711785492504343953926634992332820282019728792003956564819968) (< 0 x219)) (and (> (* (x1672 x219 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (- x219 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= x219 (* (x1672 x219 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (= (* 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1672 x219 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (- x219 (x657 57896044618658097711785492504343953926634992332820282019728792003956564819967 x219)))))
(assert (x1141 x742))
(assert (= (x1660 x683) 0))
(assert (x696 (- x745 x1100)))
(assert (x1141 x1560))
(assert (x346 x755))
(assert (x1141 x1))
(assert (x873 x504))
(assert (and (x1534 x120 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1344 x120 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x803 x120 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1592 x120 57896044618658097711785492504343953926634992332820282019728792003956564819968) (=> (and (< 0 57896044618658097711785492504343953926634992332820282019728792003956564819968) (< 0 x120)) (and (> (* (x1672 x120 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (- x120 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= x120 (* (x1672 x120 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (= (* 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1672 x120 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (- x120 (x657 57896044618658097711785492504343953926634992332820282019728792003956564819967 x120)))))
(assert (x138 x1100 (- x1195 x1614)))
(assert (x1141 x310))
(assert (x1141 x1370))
(assert (x1323 x755))
(assert (x1141 x1214))
(assert (x1141 x271))
(assert (x1141 x127))
(assert (x1141 x1245))
(assert (x1141 x683))
(assert (= (x626 (x1536 1889567281)) 1889567281))
(assert (= (=> (and (= x1140 (= 1 x583)) (= x120 (x395 (x1536 8))) (= x583 (x415 x120 255)) (= 0 x1825) (= x1076 255)) (and (=> (and (not x1140) (and (or (and (= x654 x1463) (not x1490)) (and x1490 (and (= x589 (x395 (x1536 18))) (= (x657 18446744073709551615 x589) x643) (= x643 x1463)))) (= x1490 (> x740 0)))) x1281) (=> (and (= 0 x1185) x1140) x1617))) x115))
(assert (= (and x165 x1486) x1478))
(assert (x138 x1726 (- x1185 x1100)))
(assert (= x1346 (=> (and (= x587 (> x22 0)) (= (x215 x1192) x22)) (and (=> x587 x1160) (=> (not x587) x523)))))
(assert (x1483 x1770 x1541 x1614 x1416))
(assert (x1141 x220))
(assert (x138 x1391 (- x845 x973)))
(assert (= (=> (and (= x1150 (x1299 (x724 x1797))) (not (< x1431 4)) (not (> 2127478272 x1674)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1435) (= x474 (x581 (+ 4 x1649))) (not (= 2681156919 x1674)) (not (= x1674 2714230913)) (= x1050 (x48 (- x1811 x1649))) (= x474 x1279) (not (= x1674 2757214935)) (= x1147 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1060) (and (< x1060 64) (= true (<= x1060 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 2835717307 x1674) (not (= 0 x1150)) (< 0 x1475) (not (< x1674 2580288415)) (= x1050 x1431) (= x1475 (x1299 (x724 x1797))) (< x1674 3224796394) (= (x581 (+ 32 x1279)) x1635) (= x1811 (x581 (+ x474 64))) (= x728 x347) (= 68 x1431) (< x1674 2863377861) (not (> 2681156919 x1674)) (= (x657 1461501637330902918203684832716283019655932542975 x1247) x742) (= x742 x1695) (= (x48 (- x1431 4)) x1060)) (and (=> x1147 x848) (=> (and (and (= x1695 x1180) (= x16 true)) (not x1147)) (and (=> (not x16) x848) (=> (and x16 (and (= (= 0 x1797) x1367) (= x175 x728))) (and (=> x1367 x848) (=> (and (= x568 (= x1695 0)) (not x1367)) (and (=> x568 x848) (=> (and (and (= 416 x717) (= x1151 (x1704 x313)) (= x538 (< x1151 x728)) (= x313 (x1665 (x724 x1797) (x1536 0) 0))) (not x568)) (and (=> (and (not x538) (and (= x330 (> x228 x1126)) (= x1126 (x581 (+ x228 x728))) (= (x1665 (x724 x1797) (x1536 0) 0) x1438) (= (+ x217 x299) x1366) (= (= x904 x39) x247) (= x904 (- x1366 x714)) x247 (= (x48 (- x1151 x728)) x217) (= x177 (x1665 (x724 x1695) (x1536 0) 0)) (= (x1704 x1438) x714) (= (x1122 x177) x228))) (and (=> x330 x848) (=> (and (not x330) (and (= x1801 (+ x39 x1126)) (= x795 (x1122 x1324)) (= x442 32) (= x1524 (x992 128)) (= (- x1801 x795) x179) (= 1 x181) (= 1 x240) (= x1324 (x1665 (x724 x1695) (x1536 0) 0)) (= x1338 (= x596 x179)) x1338 (= (x992 128) x1506))) x1434))) (=> x538 x848))))))))))) x629))
(assert (= (or x1454 x1768 x1554) x537))
(assert (= x939 (=> (and (= x1750 x444) (= x843 x1325) (= x136 68) (= x771 (x581 (+ x843 64))) (= (x657 1461501637330902918203684832716283019655932542975 x1247) x1750) (not (= x1075 2514000705)) (> x592 0) (= x1760 x1097) (not (= 1889567281 x1075)) (= x952 (< x1564 64)) (= (x581 (+ x207 4)) x843) (not (> 826074471 x1075)) (= (x581 (+ x1325 32)) x1124) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1329) (= x853 x136) (= x122 (x1299 (x724 x108))) (not (= 0 x122)) (= (x1299 (x724 x108)) x592) (= (x48 (- x136 4)) x1564) (not (= 826074471 x1075)) (= x1075 2835717307) (not (> 4 x136)) (= x853 (x48 (- x771 x207)))) (and (=> (and (not x952) (and (<= x1166 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x444 x1444) (= x1097 x1356) (= x625 (x1665 (x724 x1797) (x1536 1) 0)) (= (x1547 x625) x1166) (= x1670 (< x1166 x1760)) (>= x1166 0))) (and (=> x1670 x1333) (=> (and (not x1670) (and (= (x1599 x169) x729) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729) (= (x581 (+ x1097 x729)) x999) (= x463 (x48 (- x1166 x1097))) (<= 0 x729) (= x854 (< x999 x729)) (= (x1665 (x724 x1797) (x1536 1) 0) x1470) (= x169 (x1665 (x724 x444) (x1536 1) 0)))) (and (=> (and (and (= 32 x103) (= x1494 1) (= (x1665 (x724 x444) (x1536 1) 0) x1442) (= x268 x55)) (not x854)) x36) (=> x854 x1333))))) (=> x952 x1333)))))
(assert (x1141 x611))
(assert (x873 18446744073709551615))
(assert (x873 115792089210356248762697446949407573530086143415211086033019366971273553903615))
(assert (= (x415 x455 224) (x1672 x455 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= x1326 (x626 (x724 x1326))))
(assert (x1141 x39))
(assert (x873 6277101735386680763835789423128438253588091106870490562560))
(assert (=> (>= 10000 x705) (= (x1536 x705) (x724 x705))))
(assert (= x1454 (and x1387 (not x188))))
(assert (= x440 (or x384 x282)))
(assert (= (+ (x626 x1379) 2) (x626 (x707 x1379 2))))
(assert (x1141 x966))
(assert (= (=> (and (= (= 0 x733) x1819) (or x1819 (not x1819))) x1820) x650))
(assert (x1141 x462))
(assert (x1141 x1638))
(assert (x1141 x1080))
(assert (x184 x986))
(assert (x1141 x185))
(assert (x1141 x1459))
(assert (= (or x158 (and x550 (not x306))) x248))
(assert (= (and x1002 x1000) x223))
(assert (x1762 x745 x319 x152 x511))
(assert (x696 (- x745 x1185)))
(assert (= (x724 115792089237316195423570985008687907853269984665561335876943319670319585689600) (x1536 115792089237316195423570985008687907853269984665561335876943319670319585689600)))
(assert (= x93 (or x353 x1692)))
(assert (= (and x1688 (not x538)) x1563))
(assert (x1141 x484))
(assert (= (x660 (+ x695 (- x1441 x497))) 0))
(assert (= (and x288 x303) x407))
(assert (x1483 x511 x152 x1770 x1541))
(assert (x1141 x511))
(assert (= (and (not x602) x195) x937))
(assert (x1483 x152 x511 x1195 x1100))
(assert (x138 x1541 x1770))
(assert (x1141 x1218))
(assert (= (x660 (+ (- x31 x497) x695)) 0))
(assert (= x1281 (=> (= x1463 x1185) x1617)))
(assert (= (x1418 x642) 0))
(assert (= x1610 (x626 (x724 x1610))))
(assert (= (x724 1439069736) (x1536 1439069736)))
(assert (x138 x1391 (- x845 x319)))
(assert (x1141 x998))
(assert (x138 x1195 (- x1100 x511)))
(assert (x696 x1195))
(assert (x696 (- x432 x1195)))
(assert (= (x46 (* 6277101735386680763835789423207666416102355444464034512896 x113)) (x232 x113 192)))
(assert (and (and (= (- (* x640 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x640)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x640)) (= (- (* 32 (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x640) (x1571 32 x640) (= (* x640 32) (x1120 32 x640)) (x593 32 x640) (x470 32 x640) (x69 32 x640)))
(assert (x1141 x285))
(assert (x696 x344))
(assert (= (x626 (x1536 1984976886)) 1984976886))
(assert (and (x870 x1738 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1738 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1738 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1738 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1738)) (x1485 x1738 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1762 x1185 x1726 x845 x1391))
(assert (x696 x131))
(assert (x1762 x1614 x1416 x1726 x1185))
(assert (x138 x1391 (- x845 x1726)))
(assert (x1762 x1416 x1614 x1195 x1100))
(assert (x1141 x933))
(assert (= 0 (x180 x1703)))
(assert (x1483 x1770 x1541 x432 x973))
(assert (x1762 x511 x152 x745 x319))
(assert (x696 (- x745 x511)))
(assert (= x711 (or x750 x1022)))
(assert (x1141 x347))
(assert (x1762 x1770 x1541 x152 x511))
(assert (x1141 x1706))
(assert (x1141 x772))
(assert (x1141 x637))
(assert (x184 x1675))
(assert (x1762 x1770 x1541 x845 x1391))
(assert (x1141 x1060))
(assert (x1141 x718))
(assert (x1141 x1076))
(assert (x1483 x1726 x1185 x1100 x1195))
(assert (x1141 x1450))
(assert (x696 (- x1195 x845)))
(assert (x346 x502))
(assert (and (x870 x900 32) (x970 x900 32) (=> (> 32 0) (= (+ (* (x1672 x900 32) 32) (x123 x900 32)) x900)) (x1485 x900 32)))
(assert (x1483 x1100 x1195 x1770 x1541))
(assert (=> (<= x1651 10000) (= (x1536 x1651) (x724 x1651))))
(assert (x1141 x712))
(assert (x1141 x334))
(assert (x1141 x10))
(assert (= (and (not x1293) x494) x1302))
(assert (= x479 (and x423 x537)))
(assert (x1141 x496))
(assert (x1141 x210))
(assert (x346 2))
(assert (x783 x1043 x256))
(assert (= x461 (or x295 x1378)))
(assert (and (and (= (- (* x1156 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1156)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1156)) (= (- (* 32 (- x1156 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1156 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1156 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x1156 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x1156 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x1156) (x1571 32 x1156) (= (* x1156 32) (x1120 32 x1156)) (x593 32 x1156) (x470 32 x1156) (x69 32 x1156)))
(assert (x1141 x1806))
(assert (x1483 x1391 x845 x1100 x1195))
(assert (= x919 (and x1563 x330)))
(assert (= (x724 4167276458) (x1536 4167276458)))
(assert (x1483 x1416 x1614 x152 x511))
(assert (= x746 (=> (and (and (not (= 0 x1426)) (= x1178 (= 0 x1637))) (or (and (= 0 x1195) x1178) (and (and (= (x46 (* x1637 1000000000000000000)) x489) (= x1195 x1278) (= x1278 (x1672 x489 x1426)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1637 1000000000000000000))) (not x1178)))) x1588)))
(assert (= 0 (x180 x564)))
(assert (x1141 x1163))
(assert (x1141 x1138))
(assert (x1483 x1416 x1614 x1726 x1185))
(assert (x1141 x1538))
(assert (x1141 x1446))
(assert (x1141 x24))
(assert (x1141 x1655))
(assert (x696 (- x319 x1185)))
(assert (=> (<= x414 10000) (= (x1536 x414) (x724 x414))))
(assert (x1141 x1651))
(assert (x1483 x1614 x1416 x1391 x845))
(assert (x1762 x319 x745 x973 x432))
(assert (x184 x900))
(assert (x1141 x1312))
(assert (=> (<= x819 10000) (= (x1536 x819) (x724 x819))))
(assert (= (and x777 (not x1739)) x1057))
(assert (and (x870 x1233 6277101735386680763835789423207666416102355444464034512896) (x970 x1233 6277101735386680763835789423207666416102355444464034512896) (=> (> 6277101735386680763835789423207666416102355444464034512896 0) (= (+ (* (x1672 x1233 6277101735386680763835789423207666416102355444464034512896) 6277101735386680763835789423207666416102355444464034512896) (x123 x1233 6277101735386680763835789423207666416102355444464034512896)) x1233)) (x1485 x1233 6277101735386680763835789423207666416102355444464034512896)))
(assert (x1141 x457))
(assert (x1141 x691))
(assert (x1141 x971))
(assert (x1141 x488))
(assert (x827 79228162514264337593543950336))
(assert (x138 x1770 (- x1541 x1185)))
(assert (and (x870 x502 1461501637330902918203684832716283019655932542976) (x970 x502 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x1672 x502 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x123 x502 1461501637330902918203684832716283019655932542976)) x502)) (x1485 x502 1461501637330902918203684832716283019655932542976)))
(assert (x1141 x1432))
(assert (x1483 x1726 x1185 x973 x432))
(assert (x1483 x1391 x845 x511 x152))
(assert (= (x626 (x724 x1339)) x1339))
(assert (= (x626 (x724 x168)) x168))
(assert (x1141 x821))
(assert (x346 x1816))
(assert (= 0 (x180 160)))
(assert (= (=> (and (= (= x818 0) x423) (or (not x423) x423)) x1307) x1134))
(assert (x696 (- x973 x1185)))
(assert (x138 x1416 (- x1614 x1100)))
(assert (= x409 (and x711 (not x143))))
(assert (x696 (- x1770 x1195)))
(assert (x1141 x842))
(assert (x184 x1747))
(assert (= (x724 115792089237316195417293883273301227089434195242512125785869492901042639077375) (x1536 115792089237316195417293883273301227089434195242512125785869492901042639077375)))
(assert (= x1084 (or x1408 x1586)))
(assert (= x1715 (or (and x537 (not x423)) x479)))
(assert (x1483 x1614 x1416 x1770 x1541))
(assert (x1141 x1205))
(assert (= (and (not x486) x1544) x1345))
(assert (x1483 x1770 x1541 x152 x511))
(assert (x1141 x600))
(assert (= (and x392 x700) x896))
(assert (x696 (- x1100 x511)))
(assert (x1483 x1541 x1770 x745 x319))
(assert (= (and x538 x1688) x420))
(assert (= (x1536 2681156919) (x724 2681156919)))
(assert (x1141 x1107))
(assert (x1141 x1831))
(assert (x1141 x454))
(assert (= (or x1812 x552) x1035))
(assert (x1141 x1318))
(assert (x1141 x762))
(assert (x1141 x833))
(assert (= (=> (and (and (ite x709 x709 (= x432 (x1672 x1023 x973))) (= x1023 (x46 (x1120 x973 x432))) (= (= x973 0) x709) (not (= 0 x86)) (= (ite (> 1000000000000000000 x432) (x48 (- 1000000000000000000 x432)) 0) x86) (= (x1672 x954 1000000000000000000) x1259) (ite x460 x460 (= x511 (x1672 x954 x152))) (= (= 0 x152) x460) (= (x1672 x1023 x86) x1578) (= (x46 (x1120 x152 x511)) x954) (= x1031 (> x1578 0)) (= (x581 (+ x1259 x527)) x432)) (or (and x1031 (and (= x321 (+ x1424 x1027)) (= (- x321 x430) x1540) (not (>= (+ x656 x1578) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1734 x150) x430) (= x1817 x1105) (= (x581 (+ x1578 x656)) x1027) (= (x17 (x1536 2)) x171) (= 0 x956) (= (x657 1461501637330902918203684832716283019655932542975 x1746) x936) (= x618 (x581 (+ x1578 x171))) (= (= x1105 x1540) x1422) (= (x657 1461501637330902918203684832716283019655932542975 x1746) x830) (= x249 (x1665 (x724 x936) (x1536 0) 0)) (= (x1734 x249) x656) x1422 (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1578 x171))) (= x497 x864) (= (x1665 (x724 x830) (x1536 0) 0) x150))) (and (not x1031) (= x1424 x1817)))) x1684) x1131))
(assert (x1483 x511 x152 x1391 x845))
(assert (x1141 x1064))
(assert (= (and x466 (not x980)) x1720))
(assert (x346 x622))
(assert (x1483 x745 x319 x1391 x845))
(assert (x346 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1141 x14))
(assert (x1141 x497))
(assert (x346 6277101735386680763835789423207666416102355444464034512896))
(assert (x1141 x413))
(assert (x1141 x126))
(assert (x1483 x1726 x1185 x845 x1391))
(assert (and (x870 x662 256) (x970 x662 256) (=> (> 256 0) (= (+ (* (x1672 x662 256) 256) (x123 x662 256)) x662)) (x1485 x662 256)))
(assert (and (x870 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1217)) (x1485 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1141 x468))
(assert (x1483 x1726 x1185 x1391 x845))
(assert (and (x870 x1611 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1611 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1611 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1611 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1611)) (x1485 x1611 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x138 x845 x1391))
(assert (x696 (- x432 x319)))
(assert (= 0 (x180 x1798)))
(assert (x372 x1233))
(assert (x696 (- x745 x1195)))
(assert (x1141 x44))
(assert (x1141 x1414))
(assert (x1141 x1582))
(assert (x1141 x640))
(assert (x1141 x561))
(assert (x1141 x1280))
(assert (x1141 x846))
(assert (= (or x617 x297) x1410))
(assert (= x1440 (and x308 x1575)))
(assert (= (or x500 x896) x1544))
(assert (x138 x1726 (- x1185 x745)))
(assert (=> (>= 10000 x192) (= (x1536 x192) (x724 x192))))
(assert (= (=> (and (= x1708 (x1555 x1280)) (= (not (< 4 x1156)) x1425)) (and x569 x1425)) x1063))
(assert (x1141 x354))
(assert (= 0 (x180 x301)))
(assert (= x297 (and x480 x450)))
(assert (x1141 x680))
(assert (x138 x745 (- x319 x1185)))
(assert (x1141 x714))
(assert (= (x326 (+ x266 (- x600 x1690))) 0))
(assert (= (and x404 x190) x1283))
(assert (= (=> (and (or (and (not x1108) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x726 1000000000000000000)) (= x152 x50) (= (x1672 x1792 x1426) x50) (= x1792 (x46 (* 1000000000000000000 x726))))) (and (= x152 0) x1108)) (= (= 0 x726) x1108)) x1131) x1363))
(assert (x1141 x996))
(assert (x1483 x1726 x1185 x432 x973))
(assert (x346 x412))
(assert (= x1290 (or x349 x1469)))
(assert (x1141 x1709))
(assert (x138 x845 (- x1391 x745)))
(assert (= x1032 (x626 (x724 x1032))))
(assert (x1787 x1034))
(assert (x827 x120))
(assert (= (and (not x1468) x3) x701))
(assert (x1762 x1185 x1726 x745 x319))
(assert (x1483 x1541 x1770 x1614 x1416))
(assert (x1483 x1185 x1726 x845 x1391))
(assert (x696 x65))
(assert (= (=> (and (or (and x143 (and (= (x12 x505) x983) (not (or (> x983 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x983 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x983))))) (<= x772 255) (= x1495 (= 255 x772)) (= x772 (x12 x1455)))) (and (= x143 x1495) (not x143))) (and (= x269 x1728) (= (< 0 x878) x143) (< 0 x1767) (= x1264 x1304) (= (x12 x505) x878))) x1729) x254))
(assert (x1141 x1361))
(assert (x138 x1195 (- x1100 x973)))
(assert (x1762 x745 x319 x1195 x1100))
(assert (x783 x1342 x1541))
(assert (x1141 x557))
(assert (x696 (- x1391 x511)))
(assert (x696 (- x973 x319)))
(assert (x1141 x864))
(assert (x1141 x1756))
(assert (x1483 x152 x511 x845 x1391))
(assert (x1141 x131))
(assert (and (and (= (- (* x1047 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1047)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1047)) (= (- (* 32 (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x1047) (x1571 32 x1047) (= (* x1047 32) (x1120 32 x1047)) (x593 32 x1047) (x470 32 x1047) (x69 32 x1047)))
(assert (x696 (- x845 x1100)))
(assert (x138 x1770 (- x1541 x1726)))
(assert (x696 (- x745 x432)))
(assert (x138 x1185 (- x1726 x1391)))
(assert (x1141 x437))
(assert (x827 x1220))
(assert (x1141 x985))
(assert (x1141 x531))
(assert (x1483 x973 x432 x1726 x1185))
(assert (x1141 x726))
(assert (x138 x432 (- x973 x1100)))
(assert (x1141 x800))
(assert (x1141 x476))
(assert (x696 (- x319 x1195)))
(assert (x1141 x235))
(assert (x1203 x1682))
(assert (x1141 x1769))
(assert (x873 x1157))
(assert (x1762 x152 x511 x1195 x1100))
(assert (= x1118 (or x155 x516)))
(assert (x1483 x1195 x1100 x1614 x1416))
(assert (x1141 x217))
(assert (x1762 x1100 x1195 x152 x511))
(assert (x358 x457))
(assert (x1141 x1300))
(assert (x1762 x1541 x1770 x973 x432))
(assert (and (x870 x1523 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1523 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1523 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1523 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1523)) (x1485 x1523 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1141 x1303))
(assert (x1141 x122))
(assert (x1141 x1040))
(assert (x1141 x379))
(assert (x1141 x1235))
(assert (= (x180 x375) 0))
(assert (x1141 x213))
(assert (x1141 x1527))
(assert (= 0 (x326 (+ x266 (- x1798 x1690)))))
(assert (= (and x747 (not x587)) x335))
(assert (x1141 x435))
(assert (x1141 x467))
(assert (x1141 x618))
(assert (x1141 x668))
(assert (x1483 x1185 x1726 x1391 x845))
(assert (x1762 x973 x432 x845 x1391))
(assert (x696 x1130))
(assert (and (x870 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x670)) (x1485 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1483 x1185 x1726 x745 x319))
(assert (= (x1536 3224796394) (x724 3224796394)))
(assert (x696 (- x432 x1100)))
(assert (x138 x432 (- x973 x1185)))
(assert (= 4294967296 (x626 (x1536 4294967296))))
(assert (x827 x1349))
(assert (x696 x726))
(assert (x346 x1247))
(assert (x138 x432 (- x973 x845)))
(assert (= x447 (and x1170 (not x19))))
(assert (= (=> (and (or (and (and (= (= x121 x1185) x1740) (not x1139) (= (x1672 x1582 x1726) x121)) (not x1132)) (and (= x1740 x1132) x1132)) (and (= x1139 (= x1143 1000000000000000000)) (= (x46 (x1120 x1726 x1185)) x1582) (= x1726 (x48 (- 1000000000000000000 x1143))) (= (= x1726 0) x1132))) x1228) x214))
(assert (and (x870 x1738 79228162514264337593543950336) (x970 x1738 79228162514264337593543950336) (=> (> 79228162514264337593543950336 0) (= (+ (* (x1672 x1738 79228162514264337593543950336) 79228162514264337593543950336) (x123 x1738 79228162514264337593543950336)) x1738)) (x1485 x1738 79228162514264337593543950336)))
(assert (x696 x1778))
(assert (= x539 (and x1074 x532)))
(assert (= x494 (or x59 x560)))
(assert (x1141 x695))
(assert (x1483 x1185 x1726 x1100 x1195))
(assert (= (and x747 x587) x87))
(assert (x1141 x1037))
(assert (= (x626 (x724 x762)) x762))
(assert (x1141 x584))
(assert (= (or x1585 x363) x404))
(assert (x696 (- x973 x1100)))
(assert (= x1181 (x626 (x724 x1181))))
(assert (x138 x1195 (- x1100 x1614)))
(assert (= 0 (x180 x1173)))
(assert (x358 x1695))
(assert (x1141 x1061))
(assert (x1141 x1169))
(assert (x1483 x1726 x1185 x745 x319))
(assert (= x1175 (and (not x1319) x945)))
(assert (x358 x542))
(assert (x1141 x717))
(assert (=> (<= x1797 10000) (= (x1536 x1797) (x724 x1797))))
(assert (x1141 x647))
(assert (x696 (- x845 x152)))
(assert (and (x1534 x1224 18446744073709551616) (x1344 x1224 18446744073709551616) (x803 x1224 18446744073709551616) (x1592 x1224 18446744073709551616) (=> (and (< 0 18446744073709551616) (< 0 x1224)) (and (> (* (x1672 x1224 18446744073709551616) 18446744073709551616) (- x1224 18446744073709551616)) (>= x1224 (* (x1672 x1224 18446744073709551616) 18446744073709551616)))) (= (* 18446744073709551616 (x1672 x1224 18446744073709551616)) (- x1224 (x657 18446744073709551615 x1224)))))
(assert (= (=> (and (or (and (and (= x788 x808) (= x819 x361) (<= 0 x1533) (= (x1665 (x724 x819) (x1536 1) 0) x1093) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1533) (= x1533 (x1125 x1093)) (= x1306 32) (= x362 1)) (not x231)) (and (and (= x362 0) (= x1394 x1306) (= x788 x808)) x231)) (and (= (x48 (- x1153 4)) x1385) (= (x581 (+ x710 32)) x822) (= x231 (< x1385 32)) (= (x1299 (x724 x1622)) x1498) (not (or (and (< x821 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x821))) (> x821 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1797 x819) (not (= 826074471 x1288)) (< 0 x1666) (= (x48 (- x822 x1061)) x1785) (= (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1675) x744) (= (x581 (+ 128 x744)) x1061) (= x710 x1782) (= x1374 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x1153 x1785) (not (= x14 0)) (= 1889567281 x1288) (= (x1299 (x724 x1622)) x1666) (= x710 (x581 (+ x1061 4))) (= x1153 36) (= x1675 (x581 (+ 31 x821))) (= x135 (x1718 128)) (not (= x1498 0)) (not (< x1153 4)) (not (< x1288 826074471)))) x1501) x1029))
(assert (x358 x1414))
(assert (x1141 x656))
(assert (x1141 x1389))
(assert (=> (<= x108 10000) (= (x724 x108) (x1536 x108))))
(assert (x346 x1282))
(assert (= 0 (x180 x600)))
(assert (x1141 x1069))
(assert (x1762 x319 x745 x1726 x1185))
(assert (and (x870 x622 256) (x970 x622 256) (=> (> 256 0) (= (+ (* (x1672 x622 256) 256) (x123 x622 256)) x622)) (x1485 x622 256)))
(assert (x1141 x735))
(assert (x696 x113))
(assert (x1141 x1117))
(assert (=> (>= 10000 x1513) (= (x1536 x1513) (x724 x1513))))
(assert (= x703 (and x490 x1327)))
(assert (=> (>= 10000 x1735) (= (x724 x1735) (x1536 x1735))))
(assert (x346 (* x113 6277101735386680763835789423207666416102355444464034512896)))
(assert (x696 (- x1195 x1770)))
(assert (x1141 x1687))
(assert (x1483 x1195 x1100 x1391 x845))
(assert (= x516 (and x1461 (not x938))))
(assert (x1141 x76))
(assert (x1141 x1388))
(assert (= (and x532 (not x1074)) x1230))
(assert (x696 (- x1614 x1726)))
(assert (x358 x1634))
(assert (x696 (- x511 x1541)))
(assert (x1141 x161))
(assert (x1141 x1180))
(assert (x138 x1185 (- x1726 x1100)))
(assert (x138 x152 (- x511 x1195)))
(assert (=> (>= 10000 x390) (= (x1536 x390) (x724 x390))))
(assert (x1762 x973 x432 x1614 x1416))
(assert (= x1018 (and x1774 (not x1678))))
(assert (x1141 x1747))
(assert (x1141 x1634))
(assert (x1141 x1053))
(assert (x1483 x1391 x845 x1416 x1614))
(assert (x358 x1685))
(assert (x138 x1770 (- x1541 x1614)))
(assert (x1141 x1243))
(assert (x658 x304))
(assert (x1141 x1252))
(assert (x138 x1195 (- x1100 x152)))
(assert (x1141 x1001))
(assert (x1669 x1233))
(assert (x1483 x1726 x1185 x1416 x1614))
(assert (= x1022 (and x756 x449)))
(assert (x1483 x1541 x1770 x319 x745))
(assert (x1141 x1679))
(assert (= x132 (and x486 x1544)))
(assert (x138 x1541 (- x1770 x1391)))
(assert (x827 x1342))
(assert (x1141 x333))
(assert (x1141 x644))
(assert (x1762 x152 x511 x1541 x1770))
(assert (x696 x148))
(assert (x1141 x1407))
(assert (x138 x1541 (- x1770 x511)))
(assert (x1141 x266))
(assert (x1141 x916))
(assert (x1141 x969))
(assert (x1141 x142))
(assert (x1341 x485))
(assert (= (x626 (x724 x53)) x53))
(assert (x1141 x274))
(assert (=> (<= x1181 10000) (= (x724 x1181) (x1536 x1181))))
(assert (x1483 x973 x432 x1614 x1416))
(assert (x1141 x1195))
(assert (x1141 x1447))
(assert (x1141 x1564))
(assert (x1141 x975))
(assert (x358 x1797))
(assert (x1141 x92))
(assert (x138 x973 (- x432 x1541)))
(assert (x1141 x954))
(assert (= (and (not x791) x132) x1177))
(assert (x1141 x1719))
(assert (x1762 x1391 x845 x1195 x1100))
(assert (and (x870 x316 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x316 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x316 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x316 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x316)) (x1485 x316 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x184 x1814))
(assert (=> (>= 10000 x457) (= (x1536 x457) (x724 x457))))
(assert (x138 x1185 (- x1726 x845)))
(assert (x1141 x748))
(assert (x696 (- x973 x1416)))
(assert (x827 x575))
(assert (x696 (- x152 x845)))
(assert (= x67 (and x602 x195)))
(assert (= (x626 (x1536 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x626 (x724 x1414)) x1414))
(assert (x696 (- x152 x1195)))
(assert (and (and (= (- (* x403 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403)) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x403)) (= (- (* 1000000000000000000 (- x403 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x403 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x403 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 1000000000000000000 (- x403 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x403 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 1000000000000000000 x403) (x1571 1000000000000000000 x403) (= (* x403 1000000000000000000) (x1120 1000000000000000000 x403)) (x593 1000000000000000000 x403) (x470 1000000000000000000 x403) (x69 1000000000000000000 x403)))
(assert (x1141 x474))
(assert (x873 x318))
(assert (x1141 x1802))
(assert (x1141 x1398))
(assert (x696 (- x319 x1770)))
(assert (x1141 x1597))
(assert (and (x870 x1523 32) (x970 x1523 32) (=> (> 32 0) (= (+ (* (x1672 x1523 32) 32) (x123 x1523 32)) x1523)) (x1485 x1523 32)))
(assert (x1483 x511 x152 x1614 x1416))
(assert (x1141 x955))
(assert (x1141 x205))
(assert (x1141 x1635))
(assert (x1141 x699))
(assert (x1762 x1391 x845 x152 x511))
(assert (x1141 x851))
(assert (x1141 x243))
(assert (x1762 x1541 x1770 x1614 x1416))
(assert (x1141 x118))
(assert (x696 (- x1614 x511)))
(assert (= x689 (and x383 x1721)))
(assert (x138 x1726 (- x1185 x511)))
(assert (= (or (and (not x901) x382) x1396) x13))
(assert (= (and x832 x1784) x533))
(assert (and (x803 x1582 1000000000000000000) (x1534 x1582 1000000000000000000) (x1592 x1582 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x1582)) (and (> (* (x1672 x1582 1000000000000000000) 1000000000000000000) (- x1582 1000000000000000000)) (>= x1582 (* (x1672 x1582 1000000000000000000) 1000000000000000000)))) (x1344 x1582 1000000000000000000)))
(assert (x1141 x1776))
(assert (= x1529 (=> (and (= x1739 (= x1807 x705)) (or (and (not x1739) (and (= x1089 (x1665 (x724 x1807) (x1536 10) 0)) (= x1258 (x1590 x998)) (= (x1665 (x724 x680) x1286 0) x1104) (= (x581 (+ x1192 32)) x600) (= (x839 x1066) x1508) (= (x839 x1354) x1017) (= x448 x1017) (= x1472 (x1590 x600)) (= x1713 (x1665 (x724 x1472) x1089 0)) (= x1066 (x1665 (x724 x390) x1713 0)) (= (x581 (+ 1 x484)) x856) (= (x657 115792089237316195423570985008687907853269984665640564039457584007913129639680 x316) x484) (= (x1590 x998) x390) (= (x581 (+ 32 x600)) x998) (= (x1590 x600) x680) (= (x1665 (x724 x1258) x1104 0) x1354) (= (x1665 (x724 x1807) (x1536 10) 0) x1286) (= (x615 (x1536 9)) x316) (> x1508 0))) (and x1739 (= x1426 x448)))) x685)))
(assert (= (and (not x480) x450) x617))
(assert (x1141 x1030))
(assert (x696 (- x511 x1391)))
(assert (x1483 x1614 x1416 x152 x511))
(assert (x817 x1261))
(assert (x1141 x412))
(assert (x1483 x432 x973 x1391 x845))
(assert (x138 x1100 (- x1195 x152)))
(assert (x1141 x874))
(assert (x1141 x294))
(assert (x138 x1185 (- x1726 x745)))
(assert (x1141 x1429))
(assert (= (x1536 1889567281) (x724 1889567281)))
(assert (x1141 x720))
(assert (x1141 x950))
(assert (x1141 x1088))
(assert (= (=> (and (= x1630 x1826) (= x1373 x1671)) x1054) x1162))
(assert (x1141 x33))
(assert (x1483 x1100 x1195 x319 x745))
(assert (x138 x432 (- x973 x745)))
(assert (x696 (- x1100 x973)))
(assert (x696 (- x1391 x152)))
(assert (x1141 x1220))
(assert (=> (<= x1634 10000) (= (x1536 x1634) (x724 x1634))))
(assert (x1141 x1217))
(assert (x1762 x1614 x1416 x1195 x1100))
(assert (= 0 (x326 (+ x266 (- x478 x1690)))))
(assert (= (and x368 (not x1490)) x364))
(assert (and (and (= (- (* x131 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x131)) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x131)) (= (- (* 1000000000000000000 (- x131 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x131 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x131 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 1000000000000000000 (- x131 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x131 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 1000000000000000000 x131) (x1571 1000000000000000000 x131) (= (* x131 1000000000000000000) (x1120 1000000000000000000 x131)) (x593 1000000000000000000 x131) (x470 1000000000000000000 x131) (x69 1000000000000000000 x131)))
(assert (x873 x412))
(assert (x1483 x1770 x1541 x511 x152))
(assert (=> (<= x1326 10000) (= (x724 x1326) (x1536 x1326))))
(assert (x138 x845 (- x1391 x973)))
(assert (x1483 x745 x319 x152 x511))
(assert (x1141 x357))
(assert (x1762 x1185 x1726 x1614 x1416))
(assert (=> (<= x830 10000) (= (x1536 x830) (x724 x830))))
(assert (x1141 x391))
(assert (x1762 x1195 x1100 x1541 x1770))
(assert (x696 (- x319 x845)))
(assert (x1483 x745 x319 x1185 x1726))
(assert (x1141 x899))
(assert (= (or x1580 (and x93 (not x1819))) x1774))
(assert (x696 (- x1416 x1770)))
(assert (x1141 x1083))
(assert (x346 256))
(assert (= x1554 (and x1516 x507)))
(assert (x346 x485))
(assert (x873 x1247))
(assert (x696 (- x1185 x432)))
(assert (= 404098525 (x626 (x1536 404098525))))
(assert (x1762 x845 x1391 x1614 x1416))
(assert (x1141 x455))
(assert (x1141 x167))
(assert (and (x870 x504 1461501637330902918203684832716283019655932542976) (x970 x504 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x1672 x504 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x123 x504 1461501637330902918203684832716283019655932542976)) x504)) (x1485 x504 1461501637330902918203684832716283019655932542976)))
(assert (x138 x1726 (- x1185 x1770)))
(assert (= (x724 954831406) (x1536 954831406)))
(assert (x138 x1614 (- x1416 x511)))
(assert (x1141 x1106))
(assert (= 0 (x180 x209)))
(assert (x696 x1726))
(assert (= 0 (x660 (+ (- x73 x497) x695))))
(assert (x827 4294967296))
(assert (x1141 x872))
(assert (x1141 x1320))
(assert (x1141 x887))
(assert (x138 x845 (- x1391 x1416)))
(assert (x1141 x596))
(assert (x696 (- x511 x1770)))
(assert (x1762 x432 x973 x1541 x1770))
(assert (x783 x1597 x1195))
(assert (= (x1536 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x724 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x865 (or x513 x97)))
(assert (x358 x1651))
(assert (= (x1536 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x724 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1483 x1100 x1195 x1726 x1185))
(assert (x184 x1523))
(assert (x1141 x775))
(assert (x1141 x1278))
(assert (x827 x845))
(assert (x1762 x973 x432 x1195 x1100))
(assert (x1483 x845 x1391 x1614 x1416))
(assert (x1141 x1340))
(assert (x1141 x1647))
(assert (= x903 (and x1176 x1140)))
(assert (x1141 x620))
(assert (= (x1536 1000000000000000000) (x724 1000000000000000000)))
(assert (= (x1536 1779675522) (x724 1779675522)))
(assert (= 0 (x180 x244)))
(assert (x1141 x575))
(assert (= x1574 (and (not x952) x1662)))
(assert (= x936 (x626 (x724 x936))))
(assert (= x349 (and x810 x865)))
(assert (= (x626 (x1536 2127478272)) 2127478272))
(assert (x1141 x463))
(assert (x1141 x37))
(assert (x1483 x1770 x1541 x845 x1391))
(assert (x1141 x541))
(assert (x1141 x238))
(assert (x1141 x1358))
(assert (= 274184521717934524641157099916833587280 (x626 (x724 274184521717934524641157099916833587280))))
(assert (x696 (- x1416 x1195)))
(assert (x138 x1195 (- x1100 x1185)))
(assert (= 0 (x326 (+ (- x1441 x1690) x266))))
(assert (x696 (- x1541 x845)))
(assert (x1141 x828))
(assert (= 0 (x326 (+ (- x503 x1690) x266))))
(assert (x1141 x111))
(assert (x1141 x815))
(assert (= x1588 (=> (and (or (and x897 (= 0 x511)) (and (and (= x826 x511) (= (x657 18446744073709551615 x941) x826) (= (x1672 x1224 18446744073709551616) x941) (= x1224 (x17 (x1536 18)))) (not x897))) (and (= x437 255) (ite x812 x812 (= (x1672 x1597 x1195) x1100)) (= (x415 x219 255) x515) (= (= 0 x1195) x812) (= x897 (= x515 1)) (= (x1672 x1597 1000000000000000000) x527) (= (x17 (x1536 8)) x219) (= (x46 (x1120 x1195 x1100)) x1597) (= 2 x609))) x1363)))
(assert (and (x870 x1028 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1028 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1028 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1028 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1028)) (x1485 x1028 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1141 x1498))
(assert (x1141 x79))
(assert (= (x626 (x724 x1634)) x1634))
(assert (= x1308 (or x473 x1406)))
(assert (x1141 x930))
(assert (= (or x539 x1230) x978))
(assert (x696 (- x1770 x152)))
(assert (= x1065 (and x605 x1262)))
(assert (x1141 x1745))
(assert (= (x326 (+ (- x916 x1690) x266)) 0))
(assert (x1141 x1671))
(assert (x696 (- x1391 x319)))
(assert (x1141 x1260))
(assert (x827 x468))
(assert (x696 (- x1195 x432)))
(assert (=> (<= x680 10000) (= (x1536 x680) (x724 x680))))
(assert (and (x803 x954 1000000000000000000) (x1534 x954 1000000000000000000) (x1592 x954 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x954)) (and (> (* (x1672 x954 1000000000000000000) 1000000000000000000) (- x954 1000000000000000000)) (>= x954 (* (x1672 x954 1000000000000000000) 1000000000000000000)))) (x1344 x954 1000000000000000000)))
(assert (= x1333 (=> (and (= x268 x55) (= x1494 0) (= x103 x1006)) x36)))
(assert (= x1471 (=> (and (= x331 (x581 (+ 32 x969))) (= (not (< 4 x1058)) x174) (= (x581 (+ x244 32)) x1292) (= x1620 (x1070 x244))) (and x174 (=> (and (= x331 x1371) (= 4 x198) (= x1206 x1292)) x323)))))
(assert (x1141 x73))
(assert (x1141 x1772))
(assert (x1141 x53))
(assert (= x764 (=> (and (and (not (= x256 0)) (not (or (and (> 64 x1412) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1412) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1412))) (= x322 (x581 (+ x1455 32))) (= (x477 x1455) x1815) (= x1412 (x477 x505)) (= (x477 x322) x131) (= x1575 (= x131 0)) (<= x1815 255)) (or (and (= x1130 0) x1575) (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x131)) (= x15 x1130) (= (x46 (* x131 1000000000000000000)) x1043) (= (x1672 x1043 x256) x15)) (not x1575)))) x631)))
(assert (x346 (* 26959946667150639794667015087019630673637144422540572481103610249216 x686)))
(assert (x1141 x1034))
(assert (x783 x1023 x86))
(assert (x1141 x1187))
(assert (x1141 x755))
(assert (x1141 x1668))
(assert (x1141 x1028))
(assert (x1141 x1314))
(assert (x696 x1185))
(assert (= x163 (=> (and (= x146 0) (= x1293 (< 0 x160))) (and (=> (and x1293 (= x383 (= 0 x690))) (and (=> (and (and (or (and (and (= x1690 x1171) (= x1239 1000000000000000000)) x1114) (and (not x1114) (and (= (x48 (- x890 x266)) x1090) (= (x1299 (x724 274184521717934524641157099916833587280)) x71) (= (x657 79228162514264337593543950335 x1816) x875) (> x1169 0) (= x57 x1227) (= x1816 x296) (= (x48 (- x1521 x1690)) x1149) (not (or (and (> 32 x1090) (= true (<= x1090 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1090 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x581 (+ 32 x673)) x1521) (= (x1299 (x724 x1797)) x1169) (= x890 (x581 (+ 32 x1115))) (= x673 (x581 (+ 4 x1690))) (= x1584 (> 32 x499)) (= x1528 (x305 x835)) (not (> 4 x1621)) (= x1149 x1621) (= x258 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x521)) (not x1584) (= (x48 (- x1621 4)) x499) (= x673 x1449) (= (x581 (+ x1690 x258)) x196) (not (= x889 1779675522)) (= x835 x1690) (= 3028789119 x889) (not (= x71 0)) (= x948 0) (= (x32 64) x1115) (= x985 81655993114286172543975849523773895523710823181222424266797447834442299080704) (= 96 x1593) (= x1227 x296) (= x1621 36) (= x1239 x1528) (= x1171 x196) (= x266 (x1297 64)) (= (x581 (+ x1090 31)) x521)))) (and (= (x1665 (x1536 0) (x1536 17) 0) x425) (= (x211 x425) x57) (= x1114 (= x57 0)))) (not x383)) x547) (=> (and (and (= x580 x1690) (= x1391 1000000000000000000)) x383) x1301))) (=> (and (= x1690 x1192) (not x1293)) x1103)))))
(assert (x1141 x176))
(assert (=> (<= x381 10000) (= (x724 x381) (x1536 x381))))
(assert (x138 x1416 (- x1614 x973)))
(assert (x1483 x1614 x1416 x1726 x1185))
(assert (x138 x1770 (- x1541 x1416)))
(assert (x358 x1117))
(assert (x1141 x1043))
(assert (= (x1536 18446744073709551616) (x724 18446744073709551616)))
(assert (and (x870 x485 26959946667150639794667015087019630673637144422540572481103610249216) (x970 x485 26959946667150639794667015087019630673637144422540572481103610249216) (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (* (x1672 x485 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x123 x485 26959946667150639794667015087019630673637144422540572481103610249216)) x485)) (x1485 x485 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x138 x319 (- x745 x973)))
(assert (x873 x900))
(assert (x1141 x1227))
(assert (x1141 x1620))
(assert (x138 x1100 (- x1195 x432)))
(assert (x1141 x1674))
(assert (x1483 x152 x511 x1770 x1541))
(assert (x1141 x344))
(assert (x1483 x1195 x1100 x152 x511))
(assert (= (and (not x239) x440) x59))
(assert (x1762 x1770 x1541 x1195 x1100))
(assert (x1483 x1541 x1770 x432 x973))
(assert (x1141 x1515))
(assert (x1141 x1557))
(assert (x1141 x381))
(assert (x1483 x973 x432 x745 x319))
(assert (x1141 x78))
(assert (x1141 x31))
(assert (x1141 x1207))
(assert (x1141 x1316))
(assert (x1141 x830))
(assert (and (and (= (- (* x1109 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1109)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1109)) (= (- (* 32 (- x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x1109) (x1571 32 x1109) (= (* x1109 32) (x1120 32 x1109)) (x593 32 x1109) (x470 32 x1109) (x69 32 x1109)))
(assert (x138 x511 (- x152 x1195)))
(assert (x1141 x1533))
(assert (x138 x1391 (- x845 x432)))
(assert (x1762 x1614 x1416 x1541 x1770))
(assert (x827 x219))
(assert (x138 x432 (- x973 x319)))
(assert (= (and x1035 (not x1147)) x1761))
(assert (x1483 x319 x745 x432 x973))
(assert (x696 (- x845 x1614)))
(assert (= (and (not x854) x759) x329))
(assert (x1483 x511 x152 x1726 x1185))
(assert (x1762 x845 x1391 x1541 x1770))
(assert (x696 (- x1100 x1416)))
(assert (= (or x619 x1382) x382))
(assert (x1141 x719))
(assert (x1141 x397))
(assert (= x36 (=> (and (or (not x976) x976) (= x976 (= 0 x1494))) x669)))
(assert (= x1492 (and x991 x884)))
(assert (x1483 x1391 x845 x1541 x1770))
(assert (x1141 x1184))
(assert (x1141 x35))
(assert (x1141 x798))
(assert (x1483 x319 x745 x1185 x1726))
(assert (x1141 x416))
(assert (= 0 (x660 (+ x695 (- x1798 x497)))))
(assert (x1483 x973 x432 x1391 x845))
(assert (= (x724 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1536 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x696 (- x1100 x1770)))
(assert (= x124 (and x82 x1232)))
(assert (x1141 x84))
(assert (x696 (- x1541 x152)))
(assert (= x681 (and x1308 (not x1108))))
(assert (x1141 x893))
(assert (x346 x1682))
(assert (x1141 x1017))
(assert (x1141 x1360))
(assert (x138 x745 (- x319 x1541)))
(assert (=> (>= 10000 x1216) (= (x1536 x1216) (x724 x1216))))
(assert (x1141 x1168))
(assert (x1141 x80))
(assert (= x769 (and (not x922) x90)))
(assert (x1483 x1726 x1185 x1195 x1100))
(assert (= (and x1031 x687) x104))
(assert (x1141 x340))
(assert (= (or x702 x1428 x1676 x1077 x1018) x756))
(assert (= (and x777 x1739) x387))
(assert (x1483 x1726 x1185 x1770 x1541))
(assert (x696 (- x1391 x973)))
(assert (x1141 x1393))
(assert (x1141 x715))
(assert (= (and x1411 x568) x737))
(assert (= (x626 (x1536 1883652118)) 1883652118))
(assert (x138 x1195 (- x1100 x432)))
(assert (= (x1536 1883652118) (x724 1883652118)))
(assert (x783 x489 x1426))
(assert (x1141 x1551))
(assert (= (x724 6277101735386680763835789423207666416102355444464034512895) (x1536 6277101735386680763835789423207666416102355444464034512895)))
(assert (= (or (and x1662 x952) (and x854 x759) (and x1574 x1670)) x981))
(assert (x138 x1541 (- x1770 x1614)))
(assert (x1141 x1723))
(assert (x1762 x1541 x1770 x1195 x1100))
(assert (x696 (- x845 x973)))
(assert (x873 x1675))
(assert (x1483 x1770 x1541 x319 x745))
(assert (x1141 x229))
(assert (x696 (- x973 x1391)))
(assert (x696 (- x745 x973)))
(assert (x1762 x1726 x1185 x745 x319))
(assert (x1141 x1304))
(assert (x1483 x845 x1391 x319 x745))
(assert (= x886 (and x1717 x1118)))
(assert (x1141 x168))
(assert (= x1617 (=> (and (or (and (not x949) (and (= x267 x1778) (= (x46 (* x1541 1000000000000000000)) x468) (< (* x1541 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x267 (x1672 x468 x1633)))) (and (= 0 x1778) x949)) (and (= (= 0 x1541) x949) (not (= x1633 0)))) x1112)))
(assert (x696 x1770))
(assert (= x1603 (or x1410 x1345)))
(assert (x827 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x696 (- x319 x152)))
(assert (x1483 x745 x319 x973 x432))
(assert (x873 x485))
(assert (= 238709543 (x626 (x1536 238709543))))
(assert (= (x1672 x575 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x415 x575 255)))
(assert (x1141 x1449))
(assert (x696 (- x1185 x511)))
(assert (= x1228 (=> (and (= (x1672 x1582 1000000000000000000) x748) x1740 (= x1770 x748)) x1004)))
(assert (x696 (- x1195 x1726)))
(assert (=> (>= 10000 x1339) (= (x1536 x1339) (x724 x1339))))
(assert (x1141 x1726))
(assert (x1141 x686))
(assert (x1141 x316))
(assert (x1141 x209))
(assert (= 0 (x180 x1005)))
(assert (x696 (- x1614 x1185)))
(assert (x1141 x923))
(assert (and (x870 x318 32) (x970 x318 32) (=> (> 32 0) (= (+ (* (x1672 x318 32) 32) (x123 x318 32)) x318)) (x1485 x318 32)))
(assert (x1483 x1195 x1100 x973 x432))
(assert (x138 x1185 (- x1726 x432)))
(assert (x1141 x956))
(assert (x138 x1614 (- x1416 x152)))
(assert (x1141 x582))
(assert (x1141 x665))
(assert (x1483 x511 x152 x845 x1391))
(assert (x138 x1726 (- x1185 x319)))
(assert (and (x1534 x686 4294967296) (x1344 x686 4294967296) (x803 x686 4294967296) (x1592 x686 4294967296) (=> (and (< 0 4294967296) (< 0 x686)) (and (> (* (x1672 x686 4294967296) 4294967296) (- x686 4294967296)) (>= x686 (* (x1672 x686 4294967296) 4294967296)))) (= (* 4294967296 (x1672 x686 4294967296)) (- x686 (x657 4294967295 x686)))))
(assert (x696 (- x973 x1541)))
(assert (x138 x319 (- x745 x432)))
(assert (x358 x830))
(assert (and (x1534 x1447 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1344 x1447 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x803 x1447 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1592 x1447 57896044618658097711785492504343953926634992332820282019728792003956564819968) (=> (and (< 0 57896044618658097711785492504343953926634992332820282019728792003956564819968) (< 0 x1447)) (and (> (* (x1672 x1447 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (- x1447 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= x1447 (* (x1672 x1447 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (= (* 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1672 x1447 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (- x1447 (x657 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1447)))))
(assert (= x747 (or x840 x1500)))
(assert (x1141 x304))
(assert (= x1781 (and x1308 x1108)))
(assert (x1141 x1119))
(assert (=> (>= 10000 x874) (= (x724 x874) (x1536 x874))))
(assert (x1483 x1391 x845 x973 x432))
(assert (x1141 x99))
(assert (x1141 x1115))
(assert (x559 x272))
(assert (x1141 x1391))
(assert (x138 x511 (- x152 x1770)))
(assert (= (and x306 x550) x158))
(assert (= (or x978 x881) x731))
(assert (=> (<= x1258 10000) (= (x724 x1258) (x1536 x1258))))
(assert (x1141 x1573))
(assert (x138 x432 (- x973 x1541)))
(assert (= (=> (and (= x1826 x99) (= x1152 (< 0 x1058)) (= (x581 (+ 64 x1826)) x541) (= x469 (x581 (+ 32 x541))) (= x1009 64) (= (x581 (+ x1314 32)) x73) (= x1058 (x1127 x1314))) (and (=> (and (and (= x773 (< 1 x1058)) (= x1719 (x280 x73)) (= x226 (x581 (+ x73 32))) (= (x581 (+ 32 x469)) x754)) x1152) (and (=> (and x773 (and (= (x581 (+ x754 32)) x1477) (= x291 (> x1058 2)) (= (x816 x226) x167) (= (x581 (+ x226 32)) x475))) (and (=> (and x291 (and (= (> x1058 3) x1000) (= x244 (x581 (+ 32 x475))) (= (x1096 x475) x1174) (= x969 (x581 (+ 32 x1477))))) (and (=> x1000 x1471) (=> (and (not x1000) (and (= x1371 x969) (= 3 x198) (= x244 x1206))) x323))) (=> (and (and (= x475 x1206) (= x198 2) (= x1477 x1371)) (not x291)) x323))) (=> (and (and (= x198 1) (= x1371 x754) (= x1206 x226)) (not x773)) x323))) (=> (and (not x1152) (and (= x1371 x469) (= x73 x1206) (= x198 0))) x323))) x1054))
(assert (= (and x1081 x1367) x862))
(assert (x1141 x610))
(assert (x1141 x1006))
(assert (= (+ 1 (x626 x105)) (x626 (x707 x105 1))))
(assert (x1483 x845 x1391 x745 x319))
(assert (x783 x1349 x1246))
(assert (x1762 x1541 x1770 x845 x1391))
(assert (x1141 x542))
(assert (x1323 x941))
(assert (x696 (- x511 x745)))
(assert (x1141 x1105))
(assert (x1141 x1392))
(assert (x1483 x1100 x1195 x1614 x1416))
(assert (x1141 x1385))
(assert (= 500647658 (x626 (x1536 500647658))))
(assert (= (and x1079 (not x1263)) x702))
(assert (x1141 x1261))
(assert (x138 x1100 (- x1195 x1391)))
(assert (= (x626 (x724 x457)) x457))
(assert (x1141 x934))
(assert (= (x180 x814) 0))
(assert (x1141 x505))
(assert (x1483 x1614 x1416 x1100 x1195))
(assert (= x1469 (and x865 (not x810))))
(assert (x1141 x51))
(assert (and (x870 x986 32) (x970 x986 32) (=> (> 32 0) (= (+ (* (x1672 x986 32) 32) (x123 x986 32)) x986)) (x1485 x986 32)))
(assert (x1483 x1614 x1416 x511 x152))
(assert (= x1223 (and x68 x1094)))
(assert (x1141 x1435))
(assert (x1141 x1593))
(assert (= 0 (x180 x394)))
(assert (x1141 x328))
(assert (x873 x941))
(assert (and (and (= (- (* x1340 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1340)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1340)) (= (- (* 32 (- x1340 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1340 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1340 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x1340 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x1340 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x1340) (x1571 32 x1340) (= (* x1340 32) (x1120 32 x1340)) (x593 32 x1340) (x470 32 x1340) (x69 32 x1340)))
(assert (x696 (- x1614 x1195)))
(assert (=> (<= x545 10000) (= (x724 x545) (x1536 x545))))
(assert (x358 x1032))
(assert (and (and (= (- (* x1541 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1541)) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1541)) (= (- (* 1000000000000000000 (- x1541 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1541 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1541 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 1000000000000000000 (- x1541 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x1541 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 1000000000000000000 x1541) (x1571 1000000000000000000 x1541) (= (* x1541 1000000000000000000) (x1120 1000000000000000000 x1541)) (x593 1000000000000000000 x1541) (x470 1000000000000000000 x1541) (x69 1000000000000000000 x1541)))
(assert (x1141 x1090))
(assert (x1141 x493))
(assert (x1141 x318))
(assert (x1483 x1541 x1770 x1195 x1100))
(assert (x358 x1728))
(assert (= x1808 (and x125 (not x1562))))
(assert (x1203 x1746))
(assert (x1141 x613))
(assert (x1141 x692))
(assert (x346 x670))
(assert (= (=> (and (= x190 (= 0 x260)) (or (not x190) x190)) x1624) x590))
(assert (x1762 x1726 x1185 x973 x432))
(assert (x696 x690))
(assert (x696 (- x1416 x1541)))
(assert (x358 x705))
(assert (x1141 x1431))
(assert (x1141 x740))
(assert (x1141 x1005))
(assert (x358 x496))
(assert (and (x1534 x719 79228162514264337593543950336) (x1344 x719 79228162514264337593543950336) (x803 x719 79228162514264337593543950336) (x1592 x719 79228162514264337593543950336) (=> (and (< 0 79228162514264337593543950336) (< 0 x719)) (and (> (* (x1672 x719 79228162514264337593543950336) 79228162514264337593543950336) (- x719 79228162514264337593543950336)) (>= x719 (* (x1672 x719 79228162514264337593543950336) 79228162514264337593543950336)))) (= (* 79228162514264337593543950336 (x1672 x719 79228162514264337593543950336)) (- x719 (x657 79228162514264337593543950335 x719)))))
(assert (x1483 x511 x152 x1185 x1726))
(assert (= (and x577 (not x495)) x1568))
(assert (= x1615 (and (not x465) x248)))
(assert (=> (<= x1197 10000) (= (x1536 x1197) (x724 x1197))))
(assert (= x1036 (and (not x490) x1327)))
(assert (x696 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x358 x543))
(assert (x827 6277101735386680763835789423207666416102355444464034512896))
(assert (x696 (- x1416 x845)))
(assert (x696 (- x745 x845)))
(assert (x1141 x1637))
(assert (= x1284 x629))
(assert (x696 (- x1100 x1541)))
(assert (x1141 x1804))
(assert (= (and x1774 x1678) x1079))
(assert (=> (<= x1530 10000) (= (x724 x1530) (x1536 x1530))))
(assert (= (=> (and (and (= (x48 (- x715 1)) x233) (= (x46 (* 32 x690)) x328) (= x462 255) (= x1550 (x1359 x916)) (= x1194 (= x1092 1)) (= x895 (x46 (* x233 32))) (= x1092 (x415 x1447 255)) (= (x211 (x1536 8)) x1447) (> x1681 x690) (= (ite x1194 0 x540) x493) (= (x1359 128) x715) (= x1681 (x1359 128)) (= (x211 (x1536 2)) x554) (not (> x1550 x554)) (= x497 (x581 (+ x1272 x1192))) (= x973 (x48 (- x554 x1550))) (= x961 0) (= (x581 (+ 32 x328)) x962) (= (x211 (x1536 19)) x705) (= (x581 (+ x962 128)) x916) (= x1055 (= x233 0)) (= x1272 (x581 (+ x895 32))) (= x1647 (x211 (x1536 20)))) (or x1055 (and (not x1055) (and (= x1572 (x46 (* x233 32))) (= x1113 (x581 (+ 32 x1192))))))) x1346) x1103))
(assert (= 0 (x326 (+ (- x83 x1690) x266))))
(assert (x1141 x671))
(assert (x1141 x1285))
(assert (x873 x1261))
(assert (x1762 x1614 x1416 x973 x432))
(assert (x1141 x1322))
(assert (x1141 x103))
(assert (x1762 x845 x1391 x1726 x1185))
(assert (x827 x536))
(assert (x1141 x1473))
(assert (x696 (- x319 x1726)))
(assert (x696 (- x845 x511)))
(assert (x1483 x845 x1391 x1541 x1770))
(assert (x138 x152 (- x511 x1541)))
(assert (x1483 x1416 x1614 x1391 x845))
(assert (x1141 x427))
(assert (= (=> (and (= x738 x1807) (= x1476 1)) x1529) x255))
(assert (and (x870 x1157 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1157 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1157 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1157 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1157)) (x1485 x1157 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x696 (- x1100 x432)))
(assert (=> (<= x1117 10000) (= (x724 x1117) (x1536 x1117))))
(assert (x827 x1582))
(assert (= (and x134 x1531) x1546))
(assert (= 2835717307 (x626 (x1536 2835717307))))
(assert (x138 x511 (- x152 x1614)))
(assert (x1762 x319 x745 x845 x1391))
(assert (x827 x376))
(assert (x138 x973 (- x432 x1185)))
(assert (= x651 (=> (and (= x815 0) (= x1509 (> x160 0))) (and (=> (and (not x1509) (= x497 x438)) x216) (=> (and x1509 (and (or (and (= x844 x497) (not x1486)) (and (and (= x1241 96) (= 96 x668) (= x1753 x524) (= x531 x1753) (= x1523 (x581 (+ x287 31))) (= x435 160) (= x1736 x565) (= 0 x1182) (= x565 36) (= x1736 (x48 (- x389 x497))) (= x497 x1441) (= x1448 (x581 (+ x1810 x265))) (= x524 x272) (= x389 (x581 (+ x872 32))) (= x126 (x63 64)) (not x385) (= x645 (x1605 x1441)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x287) (and (< x287 32) (= (<= x287 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1731 (x581 (+ 32 x126))) (= x601 255) (= x80 160) (not (= 3028789119 x628)) (= (x581 (+ x497 x718)) x934) (= x1830 x265) (= x514 (x1665 (x1536 0) (x1536 17) 0)) (= x637 (x657 79228162514264337593543950335 x272)) (= x526 112349551054952423155953805921267728290102753186399332250345724850365349756928) (= x841 (x48 (- x565 4))) (= 96 x243) (= (x48 (- x1731 x695)) x287) (= (ite (>= 79228162514264337593543950335 x265) x1448 x664) x995) (= (x487 64) x695) (= 4167276458 x628) (not (> 4 x565)) (= x1233 x1753) (= (x657 115792089237316195417293883273301227089434195242512125785869492901042639077375 x1233) x1830) (= (x581 (+ x265 x1810)) x664) (= x872 (x581 (+ x497 4))) (= (x1299 (x724 x1797)) x1086) (> x1086 0) (not (= 1779675522 x628)) (= x531 (x915 x614)) (= (x232 x637 96) x1810) (= x718 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1523)) (= (x1299 (x724 274184521717934524641157099916833587280)) x42) (= (> 32 x841) x385) (= x614 (x1665 (x1536 0) (x1536 17) 0)) (= x872 x464) (not (= 0 x42)) (= x844 x934)) x1486)) (and (= x1037 (x657 1 x1034)) (= 6 x913) (= (x415 x987 6) x1034) (= x1486 (= x1037 1))))) x1244)))))
(assert (x1141 x1685))
(assert (=> (>= 10000 x106) (= (x724 x106) (x1536 x106))))
(assert (= 0 (x326 (+ (- 128 x1690) x266))))
(assert (x1483 x973 x432 x1770 x1541))
(assert (x138 x152 (- x511 x1391)))
(assert (x1141 x1399))
(assert (x1483 x1416 x1614 x1770 x1541))
(assert (= (=> (and (and (= x612 x567) (= x608 (> x1542 x1452)) (= x612 x1542) (= x1091 x847) (= x636 x1452) (= (or x608 (not x436)) x1042) (= x1527 x1658) (= (> x1527 x1091) x436)) (and (not (= x818 0)) (= x283 x365) (not (or (and (= true (<= x221 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x221)) (> x221 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x581 (+ x529 x307)) x1053) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x307 x529))) (= (x1465 x365) x529) (= x1053 x567))) x1042) x1307))
(assert (x1141 x1803))
(assert (x696 (- x1185 x1541)))
(assert (= (and x405 x1132) x281))
(assert (x1141 x928))
(assert (x696 (- x1726 x432)))
(assert (x1141 x1519))
(assert (x138 x745 (- x319 x1726)))
(assert (x1141 x1126))
(assert (x1141 x411))
(assert (= (x626 (x1536 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x696 x1614))
(assert (x1141 x1174))
(assert (x1141 x444))
(assert (x1141 x290))
(assert (x1141 x986))
(assert (x696 (- x152 x1541)))
(assert (x1141 x1736))
(assert (x1141 x1558))
(assert (= 0 (x180 x83)))
(assert (x1762 x973 x432 x745 x319))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x626 (x1536 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (=> (<= x762 10000) (= (x1536 x762) (x724 x762))))
(assert (= x1212 (=> (and (= x299 x268) (= x235 x10) (= x260 0)) x590)))
(assert (= x284 (and x1531 (not x134))))
(assert (x1483 x1195 x1100 x511 x152))
(assert (x1141 x1452))
(assert (x1762 x1614 x1416 x152 x511))
(assert (x1141 x1024))
(assert (x1141 x1045))
(assert (=> (>= 10000 x53) (= (x724 x53) (x1536 x53))))
(assert (= (x626 (x1536 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x696 x1450))
(assert (x1141 x1559))
(assert (x696 x1637))
(assert (and (and (= (- (* x1407 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1407)) (= (- (* 32 (- x1407 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1407 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1407 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x1407 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x1407 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x1407) (x1571 32 x1407) (= (* x1407 32) (x1120 32 x1407)) (x593 32 x1407) (x470 32 x1407) (x69 32 x1407)))
(assert (= (x660 (+ (- 128 x497) x695)) 0))
(assert (x1141 x1149))
(assert (x696 (- x973 x745)))
(assert (x1141 x570))
(assert (and (x803 x1597 1000000000000000000) (x1534 x1597 1000000000000000000) (x1592 x1597 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x1597)) (and (> (* (x1672 x1597 1000000000000000000) 1000000000000000000) (- x1597 1000000000000000000)) (>= x1597 (* (x1672 x1597 1000000000000000000) 1000000000000000000)))) (x1344 x1597 1000000000000000000)))
(assert (x1762 x845 x1391 x152 x511))
(assert (x1141 x733))
(assert (x827 x448))
(assert (= x1797 (x626 (x724 x1797))))
(assert (x1141 x540))
(assert (x1762 x973 x432 x1726 x1185))
(assert (x1141 x661))
(assert (x1141 x940))
(assert (= (=> (and (= x1239 x1391) (= x580 x1171)) x1301) x547))
(assert (= x20 (=> (and (= x314 (x581 (+ x193 32))) (= (x458 x193) x1353) (< 0 x1353) (= (not (> x638 1)) x688) (= x638 (x852 x193))) (and x1386 x688))))
(assert (x1141 x233))
(assert (x138 x511 (- x152 x1100)))
(assert (x138 x1416 (- x1614 x845)))
(assert (x138 x319 (- x745 x1195)))
(assert (x138 x845 (- x1391 x152)))
(assert (x1141 x399))
(assert (x1141 x1510))
(assert (= (and x1574 (not x1670)) x759))
(assert (x1141 x228))
(assert (= x384 (or x2 x407 x178)))
(assert (= x676 (=> (and (and (= (x293 x311) x1735) (= x1339 (x293 x311)) (not (> x1437 x1633)) (= (= 0 x403) x1784) (= x1315 (x581 (+ 1 x979))) (= x944 (x1665 (x724 x1530) x635 0)) (not (= x448 0)) (= x53 (x293 x868)) (= (x657 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1028) x979) (= (x48 (- x1633 x1437)) x1541) (= (x1665 (x724 x1807) (x1536 10) 0) x367) (= (x581 (+ 32 x868)) x311) (= (x1665 (x724 x53) x367 0) x1213) (= (x293 x868) x1530) (= (x1665 (x724 x1735) x944 0) x1102) (= x603 (x1665 (x724 x1339) x1213 0)) (= (x1665 (x724 x1807) (x1536 10) 0) x635) (= (x581 (+ 32 x1192)) x868) (> x1205 0) (= x1205 (x395 x1102)) (= (x395 x603) x403) (= x1028 (x1517 (x1536 9)))) (or (and (and (= (x46 (* 1000000000000000000 x403)) x786) (= x721 x1246) (< (* x403 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1672 x786 x448) x721)) (not x1784)) (and (= 0 x1246) x1784))) x115)))
(assert (= (or x1525 x45) x125))
(assert (= x1094 (and x1313 x621)))
(assert (x696 (- x152 x1185)))
(assert (= (x626 (x1536 112349551054952423155953805921267728290102753186399332250345724850365349756928)) 112349551054952423155953805921267728290102753186399332250345724850365349756928))
(assert (x138 x973 (- x432 x1100)))
(assert (and (x1534 x575 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1344 x575 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x803 x575 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1592 x575 57896044618658097711785492504343953926634992332820282019728792003956564819968) (=> (and (< 0 57896044618658097711785492504343953926634992332820282019728792003956564819968) (< 0 x575)) (and (> (* (x1672 x575 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (- x575 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= x575 (* (x1672 x575 57896044618658097711785492504343953926634992332820282019728792003956564819968) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (= (* 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1672 x575 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (- x575 (x657 57896044618658097711785492504343953926634992332820282019728792003956564819967 x575)))))
(assert (and (x870 x1282 4294967296) (x970 x1282 4294967296) (=> (> 4294967296 0) (= (+ (* (x1672 x1282 4294967296) 4294967296) (x123 x1282 4294967296)) x1282)) (x1485 x1282 4294967296)))
(assert (x696 (- x1185 x845)))
(assert (x1141 x1371))
(assert (x1762 x1416 x1614 x152 x511))
(assert (= 0 (x180 x312)))
(assert (= (or (and x736 x13) (and x227 (not x1733))) x353))
(assert (x1762 x432 x973 x1614 x1416))
(assert (x1141 x961))
(assert (x1141 x50))
(assert (= (and x1177 (not x116)) x552))
(assert (x1762 x845 x1391 x973 x432))
(assert (x138 x745 (- x319 x845)))
(assert (x696 6277101735386680763835789423207666416102355444464034512896))
(assert (= (x180 x1818) 0))
(assert (= 0 (x326 (+ x266 (- x741 x1690)))))
(assert (x358 x545))
(assert (= x352 (and (not x558) x1546)))
(assert (= (x180 x475) 0))
(assert (= (and (not x82) x1232) x1428))
(assert (x827 x1597))
(assert (x1141 x994))
(assert (x1483 x319 x745 x845 x1391))
(assert (x1141 x1695))
(assert (x1141 x309))
(assert (x138 x1100 (- x1195 x1416)))
(assert (= (or x597 (and x116 x1177)) x1812))
(assert (x1141 x204))
(assert (x1141 x1101))
(assert (x1483 x1416 x1614 x432 x973))
(assert (= (and x1537 (not x291)) x1016))
(assert (x138 x1100 (- x1195 x973)))
(assert (x138 x1391 (- x845 x1770)))
(assert (x138 x1185 (- x1726 x1541)))
(assert (x1141 x515))
(assert (x1141 x1377))
(assert (x1141 x744))
(assert (x1483 x319 x745 x973 x432))
(assert (= (and x1293 x494) x1721))
(assert (x1483 x319 x745 x152 x511))
(assert (x1141 x1628))
(assert (=> (>= 10000 x277) (= (x1536 x277) (x724 x277))))
(assert (x696 (- x745 x1391)))
(assert (x138 x1770 (- x1541 x1195)))
(assert (let ((x1240 (* 26959946667150639794667015087019630673637144422540572481103610249216 x686))) (and (x870 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1240)) (x1485 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= (or x223 x1236 x1016 x98 x1499) x40))
(assert (x1141 x1274))
(assert (x1762 x152 x511 x1726 x1185))
(assert (x1141 x1116))
(assert (x1141 x1296))
(assert (x1483 x745 x319 x1541 x1770))
(assert (= (x326 (+ (- x1455 x1690) x266)) 0))
(assert (x1762 x1100 x1195 x1726 x1185))
(assert (x696 (- x1726 x511)))
(assert (x346 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x873 x622))
(assert (and (and (= (- (* x1637 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1637)) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1637)) (= (- (* 1000000000000000000 (- x1637 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1637 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1637 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 1000000000000000000 (- x1637 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x1637 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 1000000000000000000 x1637) (x1571 1000000000000000000 x1637) (= (* x1637 1000000000000000000) (x1120 1000000000000000000 x1637)) (x593 1000000000000000000 x1637) (x470 1000000000000000000 x1637) (x69 1000000000000000000 x1637)))
(assert (x358 x444))
(assert (x1141 x1113))
(assert (x1141 x1157))
(assert (x1762 x1195 x1100 x973 x432))
(assert (x358 x1735))
(assert (x1141 x932))
(assert (x1141 x263))
(assert (x1141 x905))
(assert (x138 x1391 (- x845 x745)))
(assert (x1141 x1292))
(assert (x696 (- x1614 x432)))
(assert (= (or x903 x234) x332))
(assert (x1141 x1412))
(assert (and (x870 x316 256) (x970 x316 256) (=> (> 256 0) (= (+ (* (x1672 x316 256) 256) (x123 x316 256)) x316)) (x1485 x316 256)))
(assert (x358 x1622))
(assert (and (x870 x1261 26959946667150639794667015087019630673637144422540572481103610249216) (x970 x1261 26959946667150639794667015087019630673637144422540572481103610249216) (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (* (x1672 x1261 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x123 x1261 26959946667150639794667015087019630673637144422540572481103610249216)) x1261)) (x1485 x1261 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x1141 x924))
(assert (x1141 x890))
(assert (x358 x192))
(assert (x696 (- x1416 x1391)))
(assert (x1141 x521))
(assert (= (x626 (x724 x1807)) x1807))
(assert (x1141 x1315))
(assert (x1483 x1195 x1100 x1541 x1770))
(assert (= x520 (and x43 x731)))
(assert (x1762 x745 x319 x845 x1391))
(assert (x1141 x88))
(assert (x1141 x642))
(assert (x696 x319))
(assert (x696 x1100))
(assert (x1141 x1151))
(assert (x696 x511))
(assert (and (x870 x521 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x521 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x521 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x521 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x521)) (x1485 x521 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1483 x1726 x1185 x152 x511))
(assert (x827 x1426))
(assert (x1762 x973 x432 x1541 x1770))
(assert (x1141 x962))
(assert (= (and x1421 x1636) x927))
(assert (= (and (not x1343) x1331) x871))
(assert (x1141 x1317))
(assert (x358 x390))
(assert (x1141 x1731))
(assert (x1141 x1609))
(assert (= (and (not x1495) x1321) x991))
(assert (x696 (- x845 x1416)))
(assert (x138 x1541 (- x1770 x1100)))
(assert (= (or (and x1175 x931) (and x1737 x1567) (and x945 x1319)) x1585))
(assert (x1141 x85))
(assert (x827 x152))
(assert (x1141 x376))
(assert (x1141 x672))
(assert (x1141 x7))
(assert (x873 x1816))
(assert (x696 (- x1391 x1614)))
(assert (x1141 x964))
(assert (x1483 x1541 x1770 x845 x1391))
(assert (=> (>= 10000 x1414) (= (x724 x1414) (x1536 x1414))))
(assert (x1141 x319))
(assert (x1762 x1770 x1541 x1614 x1416))
(assert (x783 x954 x152))
(assert (x1483 x1391 x845 x745 x319))
(assert (x1762 x511 x152 x1541 x1770))
(assert (= (x724 2514000705) (x1536 2514000705)))
(assert (x1141 x182))
(assert (= (or x387 x1057) x1331))
(assert (= (and x3 x1468) x1591))
(assert (and (and (= (- (* x344 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x344)) (= (- (* 32 (- x344 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x344 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x344 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x344 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x344 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x344) (x1571 32 x344) (= (* x344 32) (x1120 32 x344)) (x593 32 x344) (x470 32 x344) (x69 32 x344)))
(assert (x1483 x973 x432 x1541 x1770))
(assert (x138 x1614 (- x1416 x1391)))
(assert (x138 x1541 (- x1770 x432)))
(assert (= 0 (x180 x49)))
(assert (x1141 x728))
(assert (x138 x845 (- x1391 x1195)))
(assert (x1483 x152 x511 x1100 x1195))
(assert (x696 (- x511 x1185)))
(assert (x138 x1726 (- x1185 x152)))
(assert (x1141 x1191))
(assert (x1141 x983))
(assert (x1141 x641))
(assert (x1141 x119))
(assert (= (x326 (+ (- x887 x1690) x266)) 0))
(assert (= (and x124 (not x743)) x1676))
(assert (x1141 x643))
(assert (x138 x1614 (- x1416 x1195)))
(assert (x1141 x519))
(assert (x358 x168))
(assert (= (and x1516 (not x507)) x1387))
(assert (= (x626 (x724 x874)) x874))
(assert (= 0 (x180 x1285)))
(assert (x1141 x1246))
(assert (x138 x959 x1130))
(assert (= (x724 370555621) (x1536 370555621)))
(assert (x1141 x648))
(assert (x138 x1391 (- x845 x1185)))
(assert (= (x660 (+ x695 (- x475 x497))) 0))
(assert (x1141 x225))
(assert (x138 x319 (- x745 x1391)))
(assert (= (x626 (x724 x1197)) x1197))
(assert (= (x415 x120 255) (x1672 x120 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x873 x1814))
(assert (and (x1534 x455 26959946667150639794667015087019630673637144422540572481103610249216) (x1344 x455 26959946667150639794667015087019630673637144422540572481103610249216) (x803 x455 26959946667150639794667015087019630673637144422540572481103610249216) (x1592 x455 26959946667150639794667015087019630673637144422540572481103610249216) (=> (and (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (< 0 x455)) (and (> (* (x1672 x455 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (- x455 26959946667150639794667015087019630673637144422540572481103610249216)) (>= x455 (* (x1672 x455 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)))) (= (* 26959946667150639794667015087019630673637144422540572481103610249216 (x1672 x455 26959946667150639794667015087019630673637144422540572481103610249216)) (- x455 (x657 26959946667150639794667015087019630673637144422540572481103610249215 x455)))))
(assert (= 370555621 (x626 (x1536 370555621))))
(assert (x1141 x402))
(assert (x1141 x498))
(assert (x1483 x511 x152 x1100 x1195))
(assert (x1141 x670))
(assert (= (and (not x1178) x831) x1378))
(assert (x1483 x745 x319 x1100 x1195))
(assert (x1762 x1100 x1195 x973 x432))
(assert (and (x870 x272 79228162514264337593543950336) (x970 x272 79228162514264337593543950336) (=> (> 79228162514264337593543950336 0) (= (+ (* (x1672 x272 79228162514264337593543950336) 79228162514264337593543950336) (x123 x272 79228162514264337593543950336)) x272)) (x1485 x272 79228162514264337593543950336)))
(assert (x1483 x845 x1391 x1185 x1726))
(assert (x1141 x1092))
(assert (= (and x784 (not x517)) x1311))
(assert (x138 x1541 (- x1770 x319)))
(assert (x827 x455))
(assert (x873 x1523))
(assert (x1141 x1348))
(assert (x873 x1282))
(assert (x1141 x708))
(assert (x873 x1233))
(assert (= (x626 (x724 x1216)) x1216))
(assert (x1483 x1416 x1614 x1185 x1726))
(assert (= x679 (and x1587 (not x1639))))
(assert (= (and (not x897) x461) x1406))
(assert (x138 x1185 (- x1726 x1416)))
(assert (x138 x152 (- x511 x1100)))
(assert (x1141 x1200))
(assert (x1141 x452))
(assert (x138 x1195 (- x1100 x845)))
(assert (x696 (- x152 x319)))
(assert (x1141 x1811))
(assert (x1141 x114))
(assert (x696 (- x1614 x1541)))
(assert (x696 (- x1391 x1770)))
(assert (= (x626 (x724 x691)) x691))
(assert (= x1421 (or x1440 x694)))
(assert (x184 x670))
(assert (= (or x1656 x281) x513))
(assert (x138 x319 (- x745 x845)))
(assert (x138 x1195 (- x1100 x1770)))
(assert (x1141 x946))
(assert (=> (>= 10000 x1347) (= (x1536 x1347) (x724 x1347))))
(assert (x827 x987))
(assert (x1141 x5))
(assert (x873 115792089237316195423570985008687907853269984665561335876943319670319585689600))
(assert (= 0 (x660 (+ x695 (- x887 x497)))))
(assert (x1483 x745 x319 x1726 x1185))
(assert (x138 x511 (- x152 x1541)))
(assert (= (or x1462 x1663) x1627))
(assert (x1483 x432 x973 x319 x745))
(assert (x1141 x55))
(assert (x1483 x1185 x1726 x152 x511))
(assert (=> (<= x936 10000) (= (x724 x936) (x1536 x936))))
(assert (let ((x1240 (* x637 79228162514264337593543950336))) (and (x870 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1240)) (x1485 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= x1497 (=> (and (or (and (and (= 0 x7) (= x671 x157)) x465) (and (not x465) (and (= x7 1) (= x846 (x289 x1390)) (= x1390 (x1665 (x724 x277) (x1536 1) 0)) (<= 0 x846) (= x491 x277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x846) (= 32 x671)))) (and (= (x581 (+ 128 x1111)) x391) (= x1427 x1803) (= (x1299 (x724 x1622)) x1601) (not (> 4 x1234)) (= x1111 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639904 x986)) (= x1797 x277) (not (= 0 x1557)) (= (x48 (- x955 x391)) x501) (not (< x1664 826074471)) (= x501 x1234) (= x1234 36) (= (x1299 (x724 x1622)) x310) (= x229 (x48 (- x1234 4))) (not (= 0 x1601)) (= x1427 (x581 (+ 4 x391))) (= (x581 (+ 32 x1427)) x955) (= (< x229 32) x465) (= x203 (x1757 128)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1404) (and (> 32 x1404) (= (<= x1404 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x290) (= x1664 1889567281) (= (x581 (+ 31 x1404)) x986) (< 0 x310) (not (= 826074471 x1664)))) x374)))
(assert (x1483 x1391 x845 x1195 x1100))
(assert (x1141 x1549))
(assert (= x25 (and x1490 x368)))
(assert (x1141 x594))
(assert (= (and x259 (not x1242)) x577))
(assert (x696 (- x1614 x845)))
(assert (x138 x1195 x1100))
(assert (x1141 x1098))
(assert (x1141 x659))
(assert (= (and x1532 x1579) x532))
(assert (x1141 x267))
(assert (= 0 (x326 (+ x266 (- x209 x1690)))))
(assert (x1141 x1208))
(assert (= (x626 (x724 x680)) x680))
(assert (and (x870 x1675 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1675 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1675 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1675 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1675)) (x1485 x1675 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1141 x565))
(assert (= (x626 (x1536 1871194811)) 1871194811))
(assert (x696 (- x1770 x1100)))
(assert (x1483 x1726 x1185 x1541 x1770))
(assert (x138 x973 (- x432 x1614)))
(assert (x138 x152 (- x511 x1416)))
(assert (and (x870 x1247 1461501637330902918203684832716283019655932542976) (x970 x1247 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x1672 x1247 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x123 x1247 1461501637330902918203684832716283019655932542976)) x1247)) (x1485 x1247 1461501637330902918203684832716283019655932542976)))
(assert (= x433 (=> (and (= x1612 (= x14 0)) (or (not x1612) x1612)) x1029)))
(assert (x696 (- x1100 x845)))
(assert (x138 x152 (- x511 x1185)))
(assert (= (x326 (+ x266 (- x1481 x1690))) 0))
(assert (x827 x337))
(assert (= 0 (x660 (+ (- x1818 x497) x695))))
(assert (x1167 x1738))
(assert (= x1742 (=> (and (= x1119 (x566 x1766)) (= (x46 (* 32 x148)) x133) (= (x581 (+ 32 x133)) x775) (= (> x1168 0) x19) (= x1155 (x46 (* 32 x148))) (= 0 x238) (= x964 (x581 (+ x193 32))) (= (x581 (+ x775 x193)) x1395) (= x1168 (x458 x193)) (= x148 (x581 (+ 1 x1119)))) (and (=> (and (and (or (and x1250 (= 0 x1370)) (and (and (= x1409 (x458 x301)) (= x1211 (x458 x1766)) (= (x581 (+ x410 x1766)) x301) (= x410 (x581 (+ x1251 32))) (= x1370 x1409) (> x1211 x1450) (= (x46 (* x1450 32)) x1251) (= (ite (> x690 0) 0 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1450)) (not x1250))) (= x1250 (= x690 0))) x19) x20) (=> (not x19) x1386)))))
(assert (x346 x1611))
(assert (x696 x798))
(assert (x1141 x844))
(assert (= (x415 x686 32) (x1672 x686 4294967296)))
(assert (x873 x755))
(assert (x1141 x829))
(assert (= 0 (x660 (+ x695 (- x564 x497)))))
(assert (x1141 x431))
(assert (and (and (= (- (* x233 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x233)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x233)) (= (- (* 32 (- x233 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x233 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x233 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x233 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x233 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x233) (x1571 32 x233) (= (* x233 32) (x1120 32 x233)) (x593 32 x233) (x470 32 x233) (x69 32 x233)))
(assert (= (x1536 4294967296) (x724 4294967296)))
(assert (x138 x1416 (- x1614 x1185)))
(assert (x1483 x319 x745 x1541 x1770))
(assert (x1141 x1743))
(assert (x1141 x1046))
(assert (x696 (- x1416 x432)))
(assert (x1141 x1778))
(assert (x1141 x1181))
(assert (= x1170 (or x684 x1720)))
(assert (x1141 x1234))
(assert (x138 x1541 (- x1770 x1185)))
(assert (x1141 x814))
(assert (= (x626 (x1536 2580288415)) 2580288415))
(assert (x1141 x1342))
(assert (x696 (- x1100 x319)))
(assert (x1141 x219))
(assert (x1141 x1759))
(assert (= (x180 x322) 0))
(assert (x1141 x1494))
(assert (x138 x1185 (- x1726 x1614)))
(assert (x358 x1258))
(assert (= x303 (and (not x1741) x1129)))
(assert (x873 x521))
(assert (x1141 x716))
(assert (x783 x1582 x1726))
(assert (= (x326 (+ (- x311 x1690) x266)) 0))
(assert (x1483 x432 x973 x1541 x1770))
(assert (x1483 x152 x511 x745 x319))
(assert (x1141 x973))
(assert (= x1190 (or x877 (and x1587 x1639))))
(assert (x696 (- x432 x1614)))
(assert (x1141 x847))
(assert (x696 (- x1541 x1100)))
(assert (x1141 x567))
(assert (= (x724 46861972923178205566985210922759877011903582497231265773045854621316061069312) (x1536 46861972923178205566985210922759877011903582497231265773045854621316061069312)))
(assert (x1483 x319 x745 x1391 x845))
(assert (x1141 x1270))
(assert (= x777 (or x880 x674)))
(assert (= (x1536 1962127369) (x724 1962127369)))
(assert (x1141 x1508))
(assert (x1762 x1416 x1614 x1726 x1185))
(assert (= x993 (or x937 x67)))
(assert (x1141 x390))
(assert (x1141 x1279))
(assert (x827 x173))
(assert (x1141 x760))
(assert (x358 x1339))
(assert (x138 x973 (- x432 x1391)))
(assert (= (and x132 x791) x597))
(assert (and (x870 x900 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x900 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x900 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x900 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x900)) (x1485 x900 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x1386 (=> (and (= x1360 x1395) (= x1576 x1424) (= x1314 x193) (= x753 x131)) x241)))
(assert (x1141 x1484))
(assert (x1141 x380))
(assert (= x1145 (and (not x1784) x832)))
(assert (x138 x319 (- x745 x1185)))
(assert (= (or x1128 x769) x1788))
(assert (x1762 x745 x319 x1726 x1185))
(assert (x1141 x331))
(assert (x696 (- x1770 x1726)))
(assert (= (and x1563 (not x330)) x1408))
(assert (x1762 x1391 x845 x1541 x1770))
(assert (x1762 x152 x511 x745 x319))
(assert (x696 (- x1195 x152)))
(assert (x138 x152 x511))
(assert (= (or x329 x981) x1648))
(assert (x138 x845 (- x1391 x1185)))
(assert (x696 (- x1770 x319)))
(assert (x1141 x42))
(assert (x1141 x485))
(assert (not x275))
(assert (= 954831406 (x626 (x1536 954831406))))
(assert (x1141 x58))
(assert (= (x326 (+ (- x73 x1690) x266)) 0))
(assert (= (=> (and (= x1206 x1187) (= x1371 x1087) (= x1058 x198) (= (x581 (+ x1826 32)) x588) (= x1348 (x48 (- x1371 x1826))) (= x445 (> x1407 0)) (= x1087 (x581 (+ x170 x469))) (= x1317 (x581 (+ x1371 32))) (= (x1596 x1360) x1407) (= x75 (x46 (* 32 x1058))) (= (x46 (* 32 x1058)) x170) (= (x581 (+ 32 x1360)) x478) (= x1187 (x581 (+ x73 x75)))) (and (=> (and (and (= x1254 0) (= x1317 x1049) (= x478 x829)) (not x445)) x861) (=> (and (and (= (x581 (+ 32 x478)) x1818) (= (> x1407 1) x370) (= x429 (x581 (+ x1317 32))) (= (x984 x478) x1351)) x445) (and (=> (and (not x370) (and (= x1254 1) (= x429 x1049) (= x829 x1818))) x861) (=> (and x370 (and (= (x581 (+ 32 x1818)) x312) (= (x581 (+ 32 x429)) x1296) (= x134 (< 2 x1407)) (= (x1165 x1818) x644))) (and (=> (and (and (= x375 (x581 (+ 32 x312))) (= (x388 x312) x242) (= x558 (> x1407 3)) (= (x581 (+ 32 x1296)) x648)) x134) (and (=> (and (and (= x648 x1049) (= x829 x375) (= 3 x1254)) (not x558)) x861) (=> x558 x1789))) (=> (and (and (= x312 x829) (= x1049 x1296) (= 2 x1254)) (not x134)) x861))))))) x323))
(assert (x1141 x1224))
(assert (x346 x272))
(assert (x696 (- x1614 x973)))
(assert (x1483 x1541 x1770 x1726 x1185))
(assert (x1141 x529))
(assert (= (x660 (+ x695 (- x312 x497))) 0))
(assert (x873 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1141 x499))
(assert (x1141 x704))
(assert (x1141 x664))
(assert (x1141 x355))
(assert (= 0 (x326 (+ x266 (- x735 x1690)))))
(assert (x1141 x1621))
(assert (x1141 x918))
(assert (x1141 x60))
(assert (=> (<= x1807 10000) (= (x1536 x1807) (x724 x1807))))
(assert (x783 x786 x448))
(assert (x1141 x1691))
(assert (x1141 x61))
(assert (= x21 (and x248 x465)))
(assert (x1141 x1610))
(assert (x1141 x268))
(assert (x138 x973 (- x432 x1416)))
(assert (x138 x845 (- x1391 x1726)))
(assert (x696 (- x1416 x1185)))
(assert (x138 x1770 (- x1541 x845)))
(assert (= x553 (=> (and (= x27 (x1672 x1220 1000000000000000000)) (> x271 0) (= x271 (x1248 x1766)) (= x1220 (x46 (x1120 x959 x1130))) (= x1173 (x581 (+ x1322 32))) (= (not (> x417 1)) x675) (= (= 0 x959) x482) (= (x581 (+ x1766 32)) x1214) (= x1698 (x1248 x1322)) (= x959 (x1248 x1173)) (> x1698 0) (ite x482 x482 (= (x1672 x1220 x959) x1130)) (= (x1355 x1322) x417)) (and x675 x1742))))
(assert (x346 32))
(assert (x1645 x485))
(assert (x1141 x1142))
(assert (x696 (- x1726 x1416)))
(assert (= x563 (=> (and (= (x144 128) x1183) (= (x581 (+ 128 x37)) x814) (= x800 (x581 (+ 32 x1322))) (= (x1073 x1322) x1133) (= x1806 (x46 (* x427 32))) (= x37 (x581 (+ x1806 32))) (= (ite (< 0 x690) 0 1) x427) (< x427 x1183) (< 0 x1398) (= x1067 (not (< 1 x1133))) (= (x144 x814) x263) (= x1398 (x144 x1322))) (and x764 x1067))))
(assert (x873 x1034))
(assert (= (x626 (x1536 2757214935)) 2757214935))
(assert (x696 1000000000000000000))
(assert (x1762 x1100 x1195 x845 x1391))
(assert (x1141 x1415))
(assert (= 274184521717934524641157099916833587280 (x626 (x1536 274184521717934524641157099916833587280))))
(assert (x1141 x27))
(assert (= (=> (and (= x204 x1822) (= (x1590 x887) x204) (= x1822 (x1590 x1192)) (= (< 0 x1822) x327)) (and (=> x327 x627) (=> (not x327) x676))) x1008))
(assert (and (x870 x1233 79228162514264337593543950336) (x970 x1233 79228162514264337593543950336) (=> (> 79228162514264337593543950336 0) (= (+ (* (x1672 x1233 79228162514264337593543950336) 79228162514264337593543950336) (x123 x1233 79228162514264337593543950336)) x1233)) (x1485 x1233 79228162514264337593543950336)))
(assert (x1141 x1012))
(assert (x1483 x1614 x1416 x1541 x1770))
(assert (x1141 x843))
(assert (x346 x1746))
(assert (x696 (- x1185 x319)))
(assert (= x1117 (x626 (x724 x1117))))
(assert (= 0 (x180 x868)))
(assert (x1483 x845 x1391 x432 x973))
(assert (x696 (- x1195 x973)))
(assert (x1141 x1150))
(assert (x1141 x1259))
(assert (= (or x838 x302) x832))
(assert (x696 (- x1770 x1185)))
(assert (x1141 x1007))
(assert (x1483 x1391 x845 x1614 x1416))
(assert (x696 (- x1100 x1614)))
(assert (x138 x845 (- x1391 x1770)))
(assert (x696 (- x845 x432)))
(assert (x1141 x1182))
(assert (x138 x745 (- x319 x1100)))
(assert (x358 x381))
(assert (x827 64))
(assert (x138 x152 (- x511 x319)))
(assert (x1483 x845 x1391 x511 x152))
(assert (x1483 x1770 x1541 x1100 x1195))
(assert (x1141 x1009))
(assert (x1483 x973 x432 x319 x745))
(assert (= (=> (and (and (> x557 0) (= x1460 (> (x1299 (x724 x108)) 0)) (= (x1226 (x724 x1728)) x1725) (>= 1461501637330902918203684832716283019655932542975 x108) (= false x1430) (> x108 0) x997 (not (= x1728 x623)) (= x114 1962127369) x792 (not (= x1797 x1728)) x1154 (= (x1226 (x724 x1622)) x522) (<= x1797 1461501637330902918203684832716283019655932542975) (not (> 228615836 x996)) x1403 (not (= x108 x623)) (= false x1364) (= false x914) (>= 1461501637330902918203684832716283019655932542975 x1728) (not (= x1728 x108)) (= (x1226 (x724 x1797)) x1577) (<= x623 1461501637330902918203684832716283019655932542975) (= x416 (x1226 (x724 x108))) (>= x416 0) (< 0 x1728) (not (= x1797 x1622)) (= (< 0 (x1299 (x724 x1622))) x997) (>= 1461501637330902918203684832716283019655932542975 x1622) (<= 0 x522) (> x623 0) (> 954831406 x996) (> x1622 0) (= (< 0 (x1299 (x724 x623))) x1403) (not (> 363856219 x996)) (= x557 (x1299 (x724 x1797))) x1460 (= x792 (> (x1299 (x724 x1728)) 0)) (<= 0 x1725) (not (= x108 x1797)) (= (< 0 (x1299 (x724 x1797))) x1154) (= x556 7) (= x1024 (x766 (x1536 2))) (not (= x1728 x1622)) (not (= x623 x1797)) (>= x1577 0) (= 404098525 x996) (= x1473 x1024) (<= 0 x443) (not (= 363856219 x996)) (= (x1226 (x724 x623)) x443) (not (= x623 x1622)) (< 0 x1797) (> 2127478272 x996) (not (= x108 x1622)) (= false x1209) (not (= x996 370555621)) (> 500647658 x996)) (and (or (and (not x1468) (and (= (x1607 x1229) x966) (= x185 x691) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x966) (= x14 1) (= x1229 (x1665 (x724 x691) (x1536 1) 0)) (= 32 x821) (>= x966 0) (= x808 x51))) (and x1468 (and (= x946 x821) (= x51 x808) (= x14 0)))) (and (< x1083 500647658) (= 36 x1458) (= 128 x1310) (= x1468 (> 32 x1400)) (not (> 4 x1458)) (< 0 x1316) (= 307731845 x1083) (not (> 228615836 x1083)) (< x1083 954831406) (= x1797 x691) (> 2127478272 x1083) (not (< x483 826074471)) (= 1889567281 x483) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x89) (= x562 (x1299 (x724 x1797))) (= x586 (x1299 (x724 x108))) (not (= x483 826074471)) (= x1400 (x48 (- x1458 4))) (not (= 228615836 x1083)) (not (= 238709543 x1083)) (= 36 x1458) (> x562 0) (= x1316 (x1299 (x724 x108))) (= x1473 x847) (not (= 0 x586)) (> 363856219 x1083)))) x433) x275))
(assert (x138 x973 (- x432 x845)))
(assert (and (and (= (- (* 79228162514264337593543950336 x637) 9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496) (x1120 (- x637 115792089237316195423570985008687907853269984665640564039457584007913129639936) 79228162514264337593543950336)) (= (- (* x637 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (- 13407807929942597099574024998205846127479365820583219383259601157675320746492338629038688038210230303195081502828938359349399943579666495733993146259865600)) (x1120 (- x637 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (x1120 x637 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (* x637 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600)))) (x396 x637 79228162514264337593543950336) (x1571 x637 79228162514264337593543950336) (= (* 79228162514264337593543950336 x637) (x1120 x637 79228162514264337593543950336)) (x593 x637 79228162514264337593543950336) (x470 x637 79228162514264337593543950336) (x69 x637 79228162514264337593543950336)))
(assert (let ((x1240 (* x113 6277101735386680763835789423207666416102355444464034512896))) (and (x870 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1240)) (x1485 x1240 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x1141 x811))
(assert (x1141 x1698))
(assert (x1141 x1456))
(assert (x1141 x300))
(assert (x1483 x1770 x1541 x745 x319))
(assert (x138 x1770 (- x1541 x152)))
(assert (x138 x1726 (- x1185 x1195)))
(assert (x696 x427))
(assert (x138 x1100 (- x1195 x845)))
(assert (x1141 x133))
(assert (x346 x504))
(assert (= (or x1478 x778) x45))
(assert (x696 (- x745 x152)))
(assert (= x1728 (x626 (x724 x1728))))
(assert (and (and (= (- (* 6277101735386680763835789423207666416102355444464034512896 x113) 726838724295606890549323807888004534353641360687318060281490199180639288113397923326191050713763565560762521606266177933534601628614656) (x1120 (- x113 115792089237316195423570985008687907853269984665640564039457584007913129639936) 6277101735386680763835789423207666416102355444464034512896)) (= (- (* x113 (- 115792089237316195417293883273301227089434195242432897623355228563449095127040)) (- 13407807929942597098847186273910239236930042012704388843369920083034445969792056777621235010053505504363840807472722485292991361205680392012899047377469440)) (x1120 (- x113 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195417293883273301227089434195242432897623355228563449095127040))) (= (x1120 x113 (- 115792089237316195417293883273301227089434195242432897623355228563449095127040)) (* x113 (- 115792089237316195417293883273301227089434195242432897623355228563449095127040)))) (x396 x113 6277101735386680763835789423207666416102355444464034512896) (x1571 x113 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 x113) (x1120 x113 6277101735386680763835789423207666416102355444464034512896)) (x593 x113 6277101735386680763835789423207666416102355444464034512896) (x470 x113 6277101735386680763835789423207666416102355444464034512896) (x69 x113 6277101735386680763835789423207666416102355444464034512896)))
(assert (x1141 x337))
(assert (x346 x1233))
(assert (= x259 (or x1589 x264)))
(assert (x1141 x522))
(assert (x1141 x948))
(assert (= (and (not x1575) x308) x694))
(assert (= (x626 (x724 x1510)) x1510))
(assert (x1141 x226))
(assert (x1141 x389))
(assert (x1141 x1746))
(assert (x138 x152 (- x511 x745)))
(assert (x1141 x1530))
(assert (x1141 x1347))
(assert (x1141 x56))
(assert (= (x326 (+ (- x505 x1690) x266)) 0))
(assert (x696 (- x1185 x1391)))
(assert (= (or x653 x871) x1833))
(assert (x1483 x745 x319 x845 x1391))
(assert (= (and (not x884) x991) x925))
(assert (= (=> (and (= (x1665 (x724 x1651) x528 0) x534) (= x1526 (x581 (+ x1481 32))) (= x1181 (x434 x1481)) (= x1756 (x1072 x534)) (= (x211 (x1536 9)) x1217) (= x1161 (x434 x1192)) (> x1756 0) (= (x581 (+ x1192 32)) x1481) (= x1303 (x581 (+ 1 x84))) (= x1651 (x434 x1526)) (= (x1665 (x724 x1181) x1137 0) x1237) (= (x1072 x867) x924) (= x867 (x1665 (x724 x1685) x1237 0)) (= (x1665 (x724 x496) x1763 0) x528) (= x910 (x434 x1192)) (= x84 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1217)) (= x1763 (x1665 (x724 x705) (x1536 10) 0)) (> x910 1) (= (= x182 0) x1532) (= (x434 x1481) x496) (= (x434 x1526) x1685) (< 0 x1161) (= (x1665 (x724 x705) (x1536 10) 0) x1137)) (and (=> (and x1532 (and (= x1074 (= 0 x1146)) (or (and (not x1074) (and (= x799 (x1665 (x724 x336) x1445 0)) (= x336 (x434 x1481)) (= x525 (x739 x339)) (= (x434 x1526) x542) (= x457 (x434 x1481)) (< 0 x525) (= (x581 (+ x100 1)) x1609) (= x1186 (x1665 (x724 x705) (x1536 10) 0)) (= (x1665 (x724 x334) x1082 0) x172) (= (x1665 (x724 x705) (x1536 10) 0) x1445) (= x339 (x1665 (x724 x542) x799 0)) (= x357 (x739 x172)) (= x334 (x434 x1526)) (= x924 x607) (= (x1072 (x1536 9)) x1611) (= x357 x1204) (= x100 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1611)) (= x1082 (x1665 (x724 x457) x1186 0)))) (and x1074 (and (= x622 (x1072 (x1536 9))) (= x1107 (x1380 x963)) (= x459 (x1665 (x724 x192) x1201 0)) (= x963 (x1665 (x724 x1634) x1650 0)) (= (x1665 (x724 x705) (x1536 10) 0) x1202) (= x192 (x434 x1526)) (= (x1665 (x724 x1117) x145 0) x1466) (= x1347 (x434 x1481)) (= (x1665 (x724 x168) x1466 0) x774) (= x1204 x1107) (= (x581 (+ 1 x210)) x1560) (= (x1665 (x724 x705) (x1536 10) 0) x1661) (< 0 x1218) (= x1117 (x434 x1481)) (= x112 (x1665 (x724 x543) x667 0)) (= (x434 x1526) x1634) (= x607 x1208) (= (x657 115792089237316195423570985008687907853269984665640564039457584007913129639680 x161) x210) (= x1207 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639680 x622)) (= (x434 x1481) x381) (= (x1085 x459) x1659) (= (x1665 (x724 x381) x1202 0) x1201) (= x708 (x581 (+ 1 x1207))) (= (x434 x1526) x543) (= (x1665 (x724 x705) (x1536 10) 0) x41) (= x667 (x1665 (x724 x1347) x1661 0)) (= (x1380 x774) x1218) (= (x1665 (x724 x705) (x1536 10) 0) x145) (= x762 (x434 x1481)) (= (x434 x1526) x168) (= x1650 (x1665 (x724 x762) x41 0)) (= x1208 (x1085 x112)) (> x1659 0) (= (x1085 (x1536 9)) x161)))))) x1039) (=> (and (and (= x1044 (x1665 (x724 x1513) x1453 0)) (= (x434 x1526) x1197) (= x732 (x1665 (x724 x705) (x1536 10) 0)) (= (x1231 x579) x582) (= x1551 (x581 (+ 1 x519))) (= x1453 (x1665 (x724 x705) (x1536 10) 0)) (= x78 x573) (= x414 (x434 x1526)) (= (x434 x1481) x1326) (= x1426 x573) (= (x1665 (x724 x414) x1044 0) x579) (= x519 (x657 115792089237316195423570985008687907853269984665640564039457584007913129639680 x412)) (= x1513 (x434 x1481)) (> x582 0) (= x573 (x1231 x858)) (= (x1072 (x1536 9)) x412) (= x1372 (x1665 (x724 x1326) x732 0)) (= (x1665 (x724 x1197) x1372 0) x858)) (not x1532)) x197))) x523))
(assert (x138 x1391 (- x845 x1100)))
(assert (x1141 x410))
(assert (and (x870 x1682 1461501637330902918203684832716283019655932542976) (x970 x1682 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x1672 x1682 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x123 x1682 1461501637330902918203684832716283019655932542976)) x1682)) (x1485 x1682 1461501637330902918203684832716283019655932542976)))
(assert (x1141 x1770))
(assert (x827 x786))
(assert (x346 1461501637330902918203684832716283019655932542976))
(assert (x1141 x1325))
(assert (x1141 x1753))
(assert (x346 x662))
(assert (x1141 x835))
(assert (x1141 x1606))
(assert (= (x626 (x1536 79228162514264337593543950335)) 79228162514264337593543950335))
(assert (x1762 x1726 x1185 x1195 x1100))
(assert (x138 x1391 (- x845 x1416)))
(assert (x1762 x1185 x1726 x973 x432))
(assert (x1483 x152 x511 x319 x745))
(assert (x1141 x527))
(assert (x1141 x1409))
(assert (x1141 x583))
(assert (= (x46 (* x686 26959946667150639794667015087019630673637144422540572481103610249216)) (x232 x686 224)))
(assert (and (and (= (- (* x427 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427)) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x427)) (= (- (* 32 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1120 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1120 32 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x396 32 x427) (x1571 32 x427) (= (* x427 32) (x1120 32 x427)) (x593 32 x427) (x470 32 x427) (x69 32 x427)))
(assert (= (and x1595 (not x343)) x186))
(assert (x1141 x885))
(assert (x1141 x1633))
(assert (= (x326 (+ (- x1314 x1690) x266)) 0))
(assert (= (x326 (+ (- x454 x1690) x266)) 0))
(assert (x696 (- x1185 x1770)))
(assert (x1762 x1195 x1100 x845 x1391))
(assert (x827 x959))
(assert (and (x870 x1157 32) (x970 x1157 32) (=> (> 32 0) (= (+ (* (x1672 x1157 32) 32) (x123 x1157 32)) x1157)) (x1485 x1157 32)))
(assert (and (x870 x161 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x970 x161 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1672 x161 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x123 x161 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x161)) (x1485 x161 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1141 x1395))
(assert (=> (>= 10000 x623) (= (x724 x623) (x1536 x623))))
(assert (= (x326 (+ (- x31 x1690) x266)) 0))
(assert (= 0 (x326 (+ x266 (- x475 x1690)))))
(assert (x1141 x212))
(assert (x1141 x958))
(assert (x1141 x943))
(assert (x1141 x1356))
(assert (= 0 (x1418 x365)))
(assert (= x1684 (=> (and (= x757 (x615 (x1536 15))) (= x1559 (x615 (x1536 14))) (= (x581 (+ x1578 x973)) x1633) (= (x615 (x1536 16)) x1831) (= x61 (x615 (x1536 13))) (= (> x1831 x1245) x1313)) (and (=> (and (and (or (and (not x68) (and (= (x46 (x1120 x1614 x1416)) x173) (= (x48 (- x1245 x757)) x1416) (= (x48 (- x61 x1559)) x1614) (= x738 x402) (= (x48 (- x61 x1631)) x402) (= x649 (x48 (- x1831 x757))) (> x649 0) (= (x1672 x173 x649) x1631))) (and (and (= (x46 (x1120 x745 x319)) x337) (= (x48 (- x1559 x61)) x745) (= x738 x81) (= (x1672 x337 x536) x610) (< 0 x536) (= (x581 (+ x610 x61)) x81) (= (x48 (- x1831 x757)) x536) (= (x48 (- x1245 x757)) x319)) x68)) (= (< x61 x1559) x68)) x1313) x255) (=> (and (and (= 0 x1476) (= x1807 x1559)) (not x1313)) x1529)))))
(assert (= (x626 (x1536 2514000705)) 2514000705))
(assert (= x550 (or x703 x1036)))
(assert (= (x1536 2580288415) (x724 2580288415)))
(assert (x1483 x432 x973 x1416 x1614))
(assert (x1141 x345))
(assert (x1141 x252))
(assert (x346 79228162514264337593543950336))
(assert (and (= (x1120 27 3) 81) (= 27 (x1120 9 3)) (= 81 (x1120 9 9)) (= 9 (x1120 3 3))))
(assert (x1141 x1524))
(assert (x1141 x721))
(assert (= x374 (=> (and (or (not x605) x605) (= (= 0 x7) x605)) x834)))
(assert (x873 79228162514264337593543950335))
(assert (x1141 x193))
(assert (x696 (- x1726 x845)))
(assert (x1141 x173))
(assert (x346 4294967296))
(assert (= (or x1223 x1188) x674))
(assert (x1701 x1282))
(assert (x696 (- x1100 x1185)))
(assert (= (x1536 2863377861) (x724 2863377861)))
(assert (x1141 x622))
(assert (x1483 x1185 x1726 x1195 x1100))
(assert (x138 x973 (- x432 x1726)))
(assert (x1483 x1100 x1195 x745 x319))
(assert (x873 255))
(assert (x1141 x57))
(assert (x1483 x1185 x1726 x1416 x1614))
(assert (= (x724 1871194811) (x1536 1871194811)))
(assert (x138 x745 (- x319 x511)))
(assert (x1141 x1455))
(assert (x696 (- x1726 x1770)))
(assert (x1141 x518))
(assert (x873 x1747))
(assert (= (x660 (+ (- x209 x497) x695)) 0))
(assert (x696 (- x1391 x745)))
(assert (x62 x1616 x304))
(assert (= (x724 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1536 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (x1141 x1576))
(assert (x1141 x1570))
(assert (x1762 x1100 x1195 x745 x319))
(assert (x138 x432 (- x973 x1614)))
(assert (x1141 x324))
(assert (x184 x318))
(assert (= x1301 (=> (and (= (x1672 x376 1000000000000000000) x584) (ite x276 x276 (= x1391 (x1672 x376 x845))) (= x428 (not (> x160 1))) (= (x581 (+ x930 32)) x213) (= (x1505 x930) x933) (= (x46 (x1120 x845 x1391)) x376) (> x933 0) (= (= x845 0) x276)) (and (=> (= x580 x1192) x1103) x428))))
(assert (x1141 x443))
(assert (and (x870 x898 32) (x970 x898 32) (=> (> 32 0) (= (+ (* (x1672 x898 32) 32) (x123 x898 32)) x898)) (x1485 x898 32)))
(assert (= (and (not x749) x66) x282))
(assert (x1141 x1123))
(assert (x1141 x761))
(assert (x1141 x287))
(assert (x1141 x1328))
(assert (x1141 x601))
(assert (= x241 (=> (and x1522 (= x1309 (+ x1576 x35)) (= x633 (x48 (- x333 x753))) (= 434 x905) (= x785 (x581 (+ x1360 32))) (= x106 (x657 1461501637330902918203684832716283019655932542975 x504)) (= x237 (x730 x110)) (= x236 (x657 1461501637330902918203684832716283019655932542975 x504)) (= (x581 (+ x355 x1360)) x207) (= x205 (x46 (* 32 x1109))) (not (= 0 x236)) (= (x730 x251) x419) (= (x763 x31) x1760) (= 1 x1269) (not (> x753 x419)) (= (x48 (- x419 x753)) x35) (= x1109 (x965 128)) (= x209 (x581 (+ x1360 32))) (= x1522 (= x55 x147)) (= x31 (x581 (+ x1314 32))) (= 0 x611) (= x251 (x1665 (x724 x106) (x1536 0) 0)) (= 0 x64) (= (x46 (* 32 x1109)) x1243) (= true x1242) (= (x1665 (x724 x1610) (x1536 0) 0) x110) (= x348 x1360) (= x147 (- x1309 x237)) (= x1252 (x763 x209)) (not (> x753 x333)) (= x355 (x581 (+ 32 x205))) (= x1610 (x657 1461501637330902918203684832716283019655932542975 x504)) (= (x1561 (x1536 2)) x333)) (and (=> x1242 x1489) (=> (and (not x1242) (= x495 (= x1622 x108))) (and (=> x495 x1489) (=> (and (= x1797 x108) (not x495)) x939)))))))
(assert (x138 x1726 (- x1185 x1416)))
(assert (x1141 x418))
(assert (x1141 x771))
(assert (x1141 x999))
(assert (x1762 x745 x319 x1541 x1770))
(assert (x1141 x824))
(assert (= (and x711 x143) x1222))
(assert (x1141 x967))
(assert (x1141 x1265))
(assert (x1483 x845 x1391 x152 x511))
(assert (x138 x745 (- x319 x432)))
(assert (x1141 x83))
(assert (and (x1534 x987 64) (x1344 x987 64) (x803 x987 64) (x1592 x987 64) (=> (and (< 0 64) (< 0 x987)) (and (> (* (x1672 x987 64) 64) (- x987 64)) (>= x987 (* (x1672 x987 64) 64)))) (= (* 64 (x1672 x987 64)) (- x987 (x657 63 x987)))))
(assert (x358 x851))
(assert (x696 (- x973 x1770)))
(assert (= (x724 826074471) (x1536 826074471)))
(assert (= (x626 (x1536 115792089210356248762697446949407573530086143415211086033019366971273553903615)) 115792089210356248762697446949407573530086143415211086033019366971273553903615))
(assert (x1141 x198))
(assert (x696 x403))
(assert (x1141 x1467))
(assert (x1141 x72))
(assert (x1141 x1159))
(assert (x696 (- x1185 x1614)))
(assert (x1141 x1518))
(assert (x1483 x511 x152 x319 x745))
(assert (x1483 x1100 x1195 x973 x432))
(assert (= (x724 3028789119) (x1536 3028789119)))
(assert (= x1662 (or x1568 x902)))
(assert (x1141 x654))
(assert (x1141 x1630))
(assert (= (x724 4294967295) (x1536 4294967295)))
(assert (x1141 x1631))
(assert (x1483 x511 x152 x1416 x1614))
(assert (= (x626 (x1536 2714230913)) 2714230913))
(assert (x1141 x510))
(assert (=> (<= x1510 10000) (= (x724 x1510) (x1536 x1510))))
(assert (=> (>= 10000 x1695) (= (x1536 x1695) (x724 x1695))))
(assert (x1141 x1173))
(assert (x1141 x1424))
(assert (x1141 x1744))
(assert (= 0 (x180 x311)))
(assert (= x685 (=> (and (and (= x828 (x1590 x1455)) (= x899 (x1590 x505)) (not (or (> x899 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x899) true) (> 32 x899)))) (> 2 x828) (= x1343 (= 1 x828))) (or (and (not x1343) (and (= x1437 x1800) (= x887 x1163))) (and x1343 (and (= x1336 x887) (= x1437 x760))))) x1008)))
(assert (x138 x1416 (- x1614 x511)))
(assert (= (x1536 1984976886) (x724 1984976886)))
(assert (x696 (- x1185 x1416)))
(assert (= (and x517 x784) x97))
(assert (x1483 x319 x745 x1195 x1100))
(assert (= (x415 x219 255) (x1672 x219 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x1141 x6))
(assert (x696 x1416))
(assert (x1483 x1726 x1185 x511 x152))
(assert (x1141 x222))
(assert (x696 (- x1726 x973)))
(assert (x696 (- x845 x1726)))
(assert (x696 (- x1195 x1416)))
(assert (x696 (- x319 x1391)))
(assert (x1762 x1391 x845 x973 x432))
(assert (x1762 x1726 x1185 x152 x511))
(assert (x138 x1100 (- x1195 x1726)))
(assert (x1141 x1614))
(assert (x1141 x1666))
(assert (x1762 x1614 x1416 x845 x1391))
(assert (x696 (- x1541 x511)))
(assert (x1141 x175))
(assert (x696 x1541))
(assert (x1141 x1682))
(assert (x1483 x1770 x1541 x1195 x1100))
(assert (x138 x745 (- x319 x1770)))
(assert (= (x626 (x1536 115792089237316195417293883273301227089434195242512125785869492901042639077375)) 115792089237316195417293883273301227089434195242512125785869492901042639077375))
(assert (x1141 x483))
(assert (= 0 (x180 x887)))
(assert (x1141 x414))
(assert (and (x870 x1746 1461501637330902918203684832716283019655932542976) (x970 x1746 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x1672 x1746 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x123 x1746 1461501637330902918203684832716283019655932542976)) x1746)) (x1485 x1746 1461501637330902918203684832716283019655932542976)))
(assert (x1141 x1542))
(assert (= x860 (and x1546 x558)))
(assert (x1483 x319 x745 x511 x152))
(assert (= x1298 (=> (and (= x1553 68) (= x298 (x581 (+ 64 x127))) (= x1606 (x1299 (x724 x1622))) (= x576 x1573) (= x1723 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x1606 0)) (= x885 (x657 1461501637330902918203684832716283019655932542975 x1247)) (= x127 x1007) (= x1553 x971) (= x545 x885) (< 0 x11) (= x1319 (> 64 x1040)) (= (x1299 (x724 x1622)) x11) (= (x48 (- x1553 4)) x1040) (not (= 1889567281 x928)) (not (= 826074471 x928)) (= 2835717307 x928) (= x632 (x581 (+ x1007 32))) (= x971 (x48 (- x298 x1397))) (= (x581 (+ 4 x1397)) x127) (not (< x928 826074471)) (not (= 2514000705 x928)) (not (> 4 x1553))) (and (=> x1319 x1212) (=> (and (not x1319) (and (= x545 x1318) (= (x1665 (x724 x1797) (x1536 1) 0) x1779) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1116) (<= 0 x1116) (= x931 (< x1116 x576)) (= x1071 x1573) (= (x1433 x1779) x1116))) (and (=> x931 x1212) (=> (and (and (= (x1332 x1652) x1320) (= (x1665 (x724 x1797) (x1536 1) 0) x1487) (<= 0 x1320) (<= x1320 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x48 (- x1116 x1573)) x1502) (= (x1665 (x724 x545) (x1536 1) 0) x1652) (= (< x1101 x1320) x1567) (= (x581 (+ x1320 x1573)) x1101)) (not x931)) (and (=> (and (not x1567) (and (= 32 x235) (= x1694 (x1665 (x724 x545) (x1536 1) 0)) (= x260 1) (= x299 x268))) x590) (=> x1567 x1212)))))))))
(assert (x346 x318))
(assert (= x295 (and x831 x1178)))
(assert (x1762 x319 x745 x1541 x1770))
(assert (x1141 x146))
(assert (= x653 (and x1331 x1343)))
(assert (x1203 x504))
(assert (x1141 x1541))
(assert (x696 (- x845 x1770)))
(assert (= (x660 (+ (- x1314 x497) x695)) 0))
(assert (x1141 x442))
(assert (x1141 x1050))
(assert (x1141 x1198))
(assert (x1141 x301))
(assert (x138 x745 (- x319 x1195)))
(assert (x138 x1770 (- x1541 x432)))
(assert (x1141 x1075))
(check-sat)
(exit)