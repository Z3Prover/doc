(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x20 () Bool)
(declare-fun x167 () Int)
(declare-fun x227 () Int)
(declare-fun x382 () Int)
(declare-fun x35 () Bool)
(declare-fun x306 () Int)
(declare-fun x315 () Bool)
(declare-fun x117 () Int)
(declare-fun x175 () Bool)
(declare-fun x240 () Bool)
(declare-fun x295 () Bool)
(declare-fun x182 () Bool)
(declare-fun x363 () Bool)
(declare-fun x325 () Bool)
(declare-fun x257 () Bool)
(declare-fun x43 () Int)
(declare-fun x104 () Bool)
(declare-fun x186 () Bool)
(declare-fun x31 () Bool)
(declare-fun x27 () Bool)
(declare-fun x267 () Int)
(declare-fun x147 () Int)
(declare-fun x6 () Int)
(declare-fun x364 () Bool)
(declare-fun x176 () Bool)
(declare-fun x93 () Int)
(declare-fun x344 () Int)
(declare-fun x178 () Int)
(declare-fun x331 () Bool)
(declare-fun x258 () Int)
(declare-fun x210 () Int)
(declare-fun x383 () Int)
(declare-fun x377 () Bool)
(declare-fun x347 () Int)
(declare-fun x78 () Int)
(declare-fun x64 () Int)
(declare-fun x391 () Bool)
(declare-fun x80 (Int Int) Int)
(declare-fun x305 () Int)
(declare-fun x165 () Bool)
(declare-fun x324 () Bool)
(declare-fun x37 () Bool)
(declare-fun x51 () Bool)
(declare-fun x342 () Int)
(declare-fun x229 () Bool)
(declare-fun x375 () Bool)
(declare-fun x118 () Int)
(declare-fun x276 () Bool)
(declare-fun x107 () Int)
(declare-fun x346 () Bool)
(declare-fun x49 () Bool)
(declare-fun x264 () Bool)
(declare-fun x81 () Int)
(declare-fun x288 () Int)
(declare-fun x137 () Int)
(declare-fun x381 () Bool)
(declare-fun x294 () Bool)
(declare-fun x110 () Bool)
(declare-fun x59 (Int Int) Int)
(declare-fun x255 () Int)
(declare-fun x61 () Int)
(declare-fun x400 () Bool)
(declare-fun x124 () Int)
(declare-fun x256 () Bool)
(declare-fun x200 () Int)
(declare-fun x352 () Bool)
(declare-fun x301 () Int)
(declare-fun x244 () Bool)
(declare-fun x219 () Int)
(declare-fun x190 () Bool)
(declare-fun x247 (Int) Int)
(declare-fun x274 () Bool)
(declare-fun x269 () Int)
(declare-fun x30 () Bool)
(declare-fun x174 () Bool)
(declare-fun x222 () Int)
(declare-fun x166 () Bool)
(declare-fun x339 (Int Int) Int)
(declare-fun x320 () Bool)
(declare-fun x25 () Bool)
(declare-fun x128 () Int)
(declare-fun x225 () Int)
(declare-fun x209 () Bool)
(declare-fun x75 () Int)
(declare-fun x266 () Bool)
(declare-fun x17 () Bool)
(declare-fun x270 () Int)
(declare-fun x254 () Bool)
(declare-fun x203 () Bool)
(declare-fun x403 () Bool)
(declare-fun x90 () Bool)
(declare-fun x13 () Bool)
(declare-fun x289 () Bool)
(declare-fun x238 () Int)
(declare-fun x168 () Int)
(declare-fun x82 () Bool)
(declare-fun x160 () Int)
(declare-fun x155 () Int)
(declare-fun x123 () Int)
(declare-fun x366 () Int)
(declare-fun x21 () Int)
(declare-fun x48 () Bool)
(declare-fun x216 () Bool)
(declare-fun x164 () Int)
(declare-fun x345 () Bool)
(declare-fun x173 () Int)
(declare-fun x253 () Int)
(declare-fun x135 () Int)
(declare-fun x415 () Int)
(declare-fun x279 () Int)
(declare-fun x281 () Int)
(declare-fun x351 () Bool)
(declare-fun x201 () Int)
(declare-fun x246 () Bool)
(declare-fun x355 () Int)
(declare-fun x353 () Bool)
(declare-fun x187 () Bool)
(declare-fun x218 (Int) Int)
(declare-fun x32 () Bool)
(declare-fun x365 () Int)
(declare-fun x34 () Int)
(declare-fun x102 () Bool)
(declare-fun x108 () Int)
(declare-fun x169 () Int)
(declare-fun x388 () Bool)
(declare-fun x188 () Int)
(declare-fun x367 () Int)
(declare-fun x71 () Int)
(declare-fun x280 () Bool)
(declare-fun x57 () Bool)
(declare-fun x8 () Int)
(declare-fun x29 () Bool)
(declare-fun x136 () Bool)
(declare-fun x36 () Int)
(declare-fun x245 () Int)
(declare-fun x262 () Int)
(declare-fun x38 () Bool)
(declare-fun x144 () Bool)
(declare-fun x386 () Bool)
(declare-fun x359 () Bool)
(declare-fun x26 () Int)
(declare-fun x220 () Int)
(declare-fun x129 () Bool)
(declare-fun x3 () Bool)
(declare-fun x236 () Bool)
(declare-fun x98 () Int)
(declare-fun x55 () Bool)
(declare-fun x63 () Int)
(declare-fun x259 () Bool)
(declare-fun x326 () Bool)
(declare-fun x183 () Int)
(declare-fun x99 () Int)
(declare-fun x263 () Int)
(declare-fun x46 () Int)
(declare-fun x109 () Bool)
(declare-fun x89 () Int)
(declare-fun x139 () Int)
(declare-fun x284 () Bool)
(declare-fun x398 () Bool)
(declare-fun x237 () Int)
(declare-fun x47 () Int)
(declare-fun x2 () Int)
(declare-fun x282 () Bool)
(declare-fun x5 () Int)
(declare-fun x94 () Bool)
(declare-fun x95 () Bool)
(declare-fun x358 () Int)
(declare-fun x133 () Int)
(declare-fun x68 () Int)
(declare-fun x103 () Int)
(declare-fun x157 () Bool)
(declare-fun x322 () Int)
(declare-fun x10 () Bool)
(declare-fun x152 () Bool)
(declare-fun x86 () Int)
(declare-fun x283 () Int)
(declare-fun x296 () Int)
(declare-fun x277 () Int)
(declare-fun x405 () Bool)
(declare-fun x335 () Bool)
(declare-fun x373 () Int)
(declare-fun x180 () Int)
(declare-fun x399 () Int)
(declare-fun x213 () Int)
(declare-fun x79 () Int)
(declare-fun x177 () Bool)
(declare-fun x349 () Bool)
(declare-fun x404 () Bool)
(declare-fun x101 () Int)
(declare-fun x233 () Int)
(declare-fun x243 () Int)
(declare-fun x303 () Bool)
(declare-fun x181 () Int)
(declare-fun x230 () Bool)
(declare-fun x22 () Bool)
(declare-fun x278 () Bool)
(declare-fun x417 () Int)
(declare-fun x212 () Bool)
(declare-fun x248 () Int)
(declare-fun x45 () Int)
(declare-fun x154 () Int)
(declare-fun x207 () Int)
(declare-fun x261 () Int)
(declare-fun x304 () Int)
(declare-fun x308 () Bool)
(declare-fun x179 () Int)
(declare-fun x171 () Int)
(declare-fun x370 () Bool)
(declare-fun x251 () Bool)
(declare-fun x343 () Int)
(declare-fun x91 () Int)
(declare-fun x19 () Int)
(declare-fun x70 (Int Int) Int)
(declare-fun x96 () Int)
(declare-fun x362 () Bool)
(declare-fun x265 () Int)
(declare-fun x113 () Int)
(declare-fun x162 () Int)
(declare-fun x211 () Int)
(declare-fun x221 () Bool)
(declare-fun x321 () Int)
(declare-fun x149 () Bool)
(declare-fun x140 () Int)
(declare-fun x142 () Bool)
(declare-fun x378 () Int)
(declare-fun x357 () Bool)
(declare-fun x150 () Int)
(declare-fun x85 () Int)
(declare-fun x53 () Int)
(declare-fun x33 () Bool)
(declare-fun x313 () Bool)
(declare-fun x317 () Bool)
(declare-fun x293 () Bool)
(declare-fun x329 () Bool)
(declare-fun x62 () Int)
(declare-fun x392 () Bool)
(declare-fun x185 () Bool)
(declare-fun x298 () Int)
(declare-fun x159 () Bool)
(declare-fun x224 () Bool)
(declare-fun x119 () Bool)
(declare-fun x416 () Int)
(declare-fun x60 () Int)
(declare-fun x50 () Bool)
(declare-fun x206 () Bool)
(declare-fun x380 () Bool)
(declare-fun x250 () Int)
(declare-fun x122 () Int)
(declare-fun x116 () Bool)
(declare-fun x158 () Int)
(declare-fun x314 () Bool)
(declare-fun x272 () Int)
(declare-fun x69 () Int)
(declare-fun x199 () Int)
(declare-fun x297 () Bool)
(declare-fun x215 () Int)
(declare-fun x105 () Int)
(declare-fun x125 () Bool)
(declare-fun x67 () Int)
(declare-fun x65 () Int)
(declare-fun x198 () Int)
(declare-fun x379 () Int)
(declare-fun x360 () Bool)
(declare-fun x15 () Int)
(declare-fun x115 () Bool)
(declare-fun x56 () Int)
(declare-fun x337 () Int)
(declare-fun x312 () Int)
(declare-fun x319 () Bool)
(declare-fun x141 () Int)
(declare-fun x242 () Bool)
(declare-fun x191 () Int)
(declare-fun x394 () Bool)
(declare-fun x44 () Int)
(declare-fun x385 () Bool)
(declare-fun x83 () Bool)
(declare-fun x402 () Int)
(declare-fun x231 () Int)
(declare-fun x361 () Bool)
(declare-fun x97 () Int)
(declare-fun x39 () Int)
(declare-fun x151 () Int)
(declare-fun x287 () Int)
(declare-fun x106 () Int)
(declare-fun x371 () Bool)
(declare-fun x327 () Bool)
(declare-fun x18 () Int)
(declare-fun x146 () Bool)
(declare-fun x271 () Int)
(declare-fun x291 () Bool)
(declare-fun x134 () Bool)
(declare-fun x184 () Int)
(declare-fun x127 () Int)
(declare-fun x131 () Int)
(declare-fun x414 () Int)
(declare-fun x409 () Bool)
(declare-fun x226 () Int)
(declare-fun x292 () Int)
(declare-fun x384 () Int)
(declare-fun x316 () Int)
(declare-fun x121 () Int)
(declare-fun x410 () Bool)
(declare-fun x204 () Int)
(declare-fun x4 () Bool)
(declare-fun x193 () Bool)
(declare-fun x189 () Bool)
(declare-fun x235 () Bool)
(declare-fun x328 () Bool)
(declare-fun x401 () Int)
(declare-fun x299 () Int)
(declare-fun x195 () Int)
(declare-fun x350 () Int)
(declare-fun x368 () Bool)
(declare-fun x334 () Bool)
(declare-fun x100 () Int)
(declare-fun x77 () Int)
(declare-fun x23 () Bool)
(declare-fun x153 () Bool)
(declare-fun x372 () Bool)
(declare-fun x241 () Int)
(declare-fun x290 () Int)
(declare-fun x74 () Int)
(declare-fun x217 () Bool)
(declare-fun x143 () Int)
(declare-fun x73 () Int)
(declare-fun x1 () Bool)
(declare-fun x170 () Int)
(declare-fun x232 () Int)
(declare-fun x389 () Int)
(declare-fun x54 () Int)
(declare-fun x239 () Int)
(declare-fun x330 () Int)
(declare-fun x14 () Int)
(declare-fun x249 () Bool)
(declare-fun x88 () Bool)
(declare-fun x369 () Bool)
(declare-fun x156 () Int)
(declare-fun x112 () Bool)
(declare-fun x72 () Bool)
(declare-fun x138 () Int)
(declare-fun x84 () Bool)
(declare-fun x407 () Bool)
(declare-fun x252 () Int)
(declare-fun x412 () Int)
(declare-fun x172 () Bool)
(declare-fun x234 () Bool)
(declare-fun x28 () Bool)
(declare-fun x9 () Int)
(declare-fun x16 () Int)
(declare-fun x285 () Int)
(declare-fun x24 () Int)
(declare-fun x208 () Bool)
(declare-fun x310 (Int) Int)
(declare-fun x205 () Bool)
(declare-fun x356 () Bool)
(declare-fun x323 () Bool)
(declare-fun x311 () Int)
(declare-fun x408 () Int)
(declare-fun x387 () Int)
(declare-fun x286 () Bool)
(declare-fun x268 () Int)
(declare-fun x302 () Bool)
(declare-fun x11 () Int)
(declare-fun x197 () Int)
(declare-fun x111 () Bool)
(declare-fun x7 (Int Int) Int)
(declare-fun x194 () Bool)
(declare-fun x390 () Bool)
(declare-fun x395 () Bool)
(declare-fun x396 () Bool)
(declare-fun x393 () Bool)
(declare-fun x40 () Bool)
(declare-fun x126 () Int)
(declare-fun x336 () Int)
(declare-fun x318 () Int)
(declare-fun x354 () Bool)
(declare-fun x76 () Bool)
(declare-fun x332 () Bool)
(declare-fun x300 () Int)
(declare-fun x148 () Int)
(define-fun x374 ((x397 Int)) Int (ite (and (<= 0 x397) (< x397 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x397 (- x397 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x130 ((x397 Int)) Int (ite (and (< x397 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x397)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x397) x397))
(define-fun x52 ((x397 Int)) Int (ite (and (>= x397 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x397)) x397 (ite (and (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x397) (>= x397 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x397 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x397) (< x397 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x397) (x7 x397 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x161 ((x413 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x413) (>= x413 0)))
(define-fun x273 ((x413 Int)) Bool (and (>= x413 0) (< x413 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x202 ((x413 Int) (x275 Int)) Bool (= (x339 x413 x275) (x339 x275 x413)))
(define-fun x341 ((x413 Int) (x275 Int)) Bool (and (=> (and (> 0 x275) (< 0 x413)) (< (x339 x413 x275) 0)) (=> (and (< x275 0) (< x413 0)) (< 0 (x339 x413 x275))) (=> (and (< 0 x413) (> x275 0)) (< 0 (x339 x413 x275))) (=> (and (< x413 0) (< 0 x275)) (> 0 (x339 x413 x275)))))
(define-fun x87 ((x413 Int) (x275 Int)) Bool (=> (and (> x413 0) (< 0 x275)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x339 x413 x275)) (= (x80 (x52 (x339 x413 x275)) x413) x275))))
(define-fun x340 ((x413 Int) (x275 Int)) Bool (=> (and (not (= x275 0)) (not (= x413 0))) (and (= x413 (x80 (x339 x413 x275) x275)) (= (x80 (x339 x413 x275) x413) x275))))
(define-fun x307 ((x413 Int) (x275 Int)) Bool (=> (and (> x413 0) (> x275 0)) (= (> x275 (x80 115792089237316195423570985008687907853269984665640564039457584007913129639935 x413)) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x339 x413 x275)))))
(define-fun x411 ((x413 Int) (x275 Int)) Bool (and (= (x52 (x339 x413 x275)) (x52 (x339 x413 (- x275 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x52 (x339 (- x413 115792089237316195423570985008687907853269984665640564039457584007913129639936) x275)) (x52 (x339 x413 x275))) (= (x52 (x339 x413 x275)) (x52 (x339 (- x413 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x275 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x333 ((x413 Int) (x275 Int)) Bool (and (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x413) (> x413 0)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x275) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x275))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x339 x413 (- x275 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x275) (x80 57896044618658097711785492504343953926634992332820282019728792003956564819968 x413)))) (=> (and (and (<= x275 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x275)) (and (<= x413 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x413 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x413) (x80 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x275))) (<= (x339 (- x413 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x275 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x413) (< 0 x413)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x275) (< 0 x275))) (= (>= (x80 57896044618658097711785492504343953926634992332820282019728792003956564819967 x275) x413) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x339 x413 x275)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x413) (> x413 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x275 0) (<= x275 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x339 (- x413 115792089237316195423570985008687907853269984665640564039457584007913129639936) x275) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x413) (x80 57896044618658097711785492504343953926634992332820282019728792003956564819968 x275))))))
(define-fun x145 ((x413 Int) (x275 Int)) Bool (and (x340 x413 x275) (x411 x413 x275) (x307 x413 x275) (x341 x413 x275) (x87 x413 x275) (x333 x413 x275) (x202 x413 x275)))
(define-fun x223 ((x413 Int)) Bool (and (= 0 (x339 x413 0)) (= 0 (x339 0 x413))))
(define-fun x309 ((x413 Int)) Bool (and (= (x339 x413 1) x413) (= (x339 1 x413) x413)))
(define-fun x228 ((x413 Int)) Bool (and (x223 x413) (x309 x413)))
(define-fun x260 ((x413 Int) (x275 Int)) Bool (=> (and (> x275 0) (< 0 x413)) (and (<= 0 (x80 x413 x275)) (<= (x80 x413 x275) x413))))
(define-fun x92 ((x413 Int) (x275 Int)) Bool (=> (and (and (<= 0 x413) (< x413 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (>= x275 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x275))) (and (>= (x80 x413 x275) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x80 x413 x275)))))
(define-fun x196 ((x413 Int) (x275 Int)) Bool (=> (and (< x275 x413) (< 1 x275)) (> x413 (x80 x413 x275))))
(define-fun x163 ((x413 Int) (x275 Int)) Bool (=> (and (> x413 0) (> x275 0)) (= (> x275 x413) (= (x80 x413 x275) 0))))
(define-fun x114 ((x413 Int)) Bool (= (x80 0 x413) 0))
(define-fun x406 ((x413 Int)) Bool (= (x80 x413 1) x413))
(define-fun x376 ((x413 Int)) Bool (=> (not (= 0 x413)) (= 1 (x80 x413 x413))))
(define-fun x338 ((x413 Int)) Bool (and (x406 x413) (x376 x413) (x114 x413)))
(define-fun x348 ((x413 Int) (x275 Int) (x41 Int) (x132 Int)) Bool (=> (and (>= x413 0) (<= x413 x41) (<= 0 x275) (<= x275 x132)) (<= (x339 x413 x275) (x339 x41 x132))))
(define-fun x58 ((x413 Int) (x275 Int) (x41 Int) (x132 Int)) Bool (=> (= x413 x41) (= (x339 x413 (- x275 x132)) (- (x339 x413 x275) (x339 x41 x132)))))
(assert (x273 x322))
(assert (x145 x306 (- x285 x140)))
(assert (x228 x100))
(assert (and (x340 500 x226) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x226) (- (* x226 500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x226))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x226 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x226 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (* (- x226 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x226 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (x339 500 (- x226 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 500 x226) (x307 500 x226) (x333 500 x226) (x411 500 x226) (= (x339 500 x226) (* 500 x226))))
(assert (= x370 (and x375 (not x284))))
(assert (x273 x415))
(assert (x228 x154))
(assert (x273 x8))
(assert (x273 x135))
(assert (= x116 (and x1 x216)))
(assert (= x76 (and x90 x31)))
(assert (x273 x387))
(assert (x273 x19))
(assert (x273 x416))
(assert (= (and x259 x410) x398))
(assert (x228 3))
(assert (= x22 (=> (and (and (= x191 (x80 x401 10)) (= x191 x155) (= x112 x326)) (and (= x16 x401) (= x221 x72) x72 (= x288 10) (= false x362))) x395)))
(assert (x273 x93))
(assert (x273 x292))
(assert (= (and x370 (not x354)) x3))
(assert (x228 x54))
(assert (x273 x290))
(assert (x228 500))
(assert (= (and x234 x83) x203))
(assert (x273 x184))
(assert (x145 x285 (- x306 x140)))
(assert (x228 10))
(assert (and (x340 3 x99) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x99) (- (* x99 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x339 3 (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 3 x99) (x307 3 x99) (x333 3 x99) (x411 3 x99) (= (x339 3 x99) (* 3 x99))))
(assert (x273 x414))
(assert (x273 x238))
(assert (x273 x126))
(assert (x273 x160))
(assert (x273 x301))
(assert (x273 x139))
(assert (x273 x77))
(assert (and (x340 3 x232) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x232) (- (* x232 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x232))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x232 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x232 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x232 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x232 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x339 3 (- x232 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 3 x232) (x307 3 x232) (x333 3 x232) (x411 3 x232) (= (x339 3 x232) (* 3 x232))))
(assert (= (and x3 (not x157)) x314))
(assert (x273 x60))
(assert (= x249 (and x57 x314)))
(assert (x273 x220))
(assert (x273 x26))
(assert (x273 x366))
(assert (= (and (not x33) x409) x90))
(assert (= (=> (and (and (= x121 (x80 x402 500)) (= x112 x326) (= x121 x155)) (and (= x316 500) (= x172 x216) x172 (= false x294) (= x16 x402))) x395) x295))
(assert (x273 x103))
(assert (and (=> (and (> x268 0) (< 0 400)) (and (<= (* (x80 x268 400) 400) x268) (< (- x268 400) (* 400 (x80 x268 400))))) (x260 x268 400) (x92 x268 400) (x196 x268 400) (x163 x268 400)))
(assert (= x229 (and (not x136) x313)))
(assert (x273 x383))
(assert (x228 x43))
(assert (x338 2))
(assert (and (x340 400 x26) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x26) (- (* x26 400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x26))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x26 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x26 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (* (- x26 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x26 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (x339 400 (- x26 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 400 x26) (x307 400 x26) (x333 400 x26) (x411 400 x26) (= (x339 400 x26) (* 400 x26))))
(assert (= (and x221 x209) x372))
(assert (x228 (- x306 x304)))
(assert (x161 x412))
(assert (x273 x78))
(assert (and (x340 500 x34) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x34) (- (* x34 500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x34))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x34 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x34 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (* (- x34 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x34 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (x339 500 (- x34 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 500 x34) (x307 500 x34) (x333 500 x34) (x411 500 x34) (= (x339 500 x34) (* 500 x34))))
(assert (= x209 (and (not x234) x83)))
(assert (x273 x253))
(assert (x228 x180))
(assert (x273 x330))
(assert (x228 x143))
(assert (x273 x321))
(assert (and (x340 500 x151) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x151) (- (* x151 500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x151))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (* (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (x339 500 (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 500 x151) (x307 500 x151) (x333 500 x151) (x411 500 x151) (= (x339 500 x151) (* 500 x151))))
(assert (x273 x227))
(assert (x58 x97 x105 x140 x304))
(assert (and (= (- x321 (x59 1 x321)) (* 2 (x80 x321 2))) (x196 x321 2) (=> (and (> x321 0) (< 0 2)) (and (<= (* (x80 x321 2) 2) x321) (< (- x321 2) (* 2 (x80 x321 2))))) (x163 x321 2) (x260 x321 2) (x92 x321 2)))
(assert (x58 x105 x97 x304 x140))
(assert (x145 x140 (- x304 x285)))
(assert (= (=> (and (and (= x150 x344) (= x357 false) (= 10 x93) (= x190 x234) x190) (and (= x326 x112) (= (x80 x344 10) x358) (= x358 x155))) x395) x4))
(assert (x228 (- x304 x306)))
(assert (x273 x171))
(assert (x338 500))
(assert (x273 x89))
(assert (= x83 (and (not x88) x308)))
(assert (and (x340 400 x292) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x292) (- (* x292 400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x292))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x292 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x292 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (* (- x292 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x292 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (x339 400 (- x292 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 400 x292) (x307 400 x292) (x333 400 x292) (x411 400 x292) (= (x339 400 x292) (* 400 x292))))
(assert (x273 x71))
(assert (x273 x75))
(assert (x338 400))
(assert (and (x340 2 x43) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x43) (- (* x43 2) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x43))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x43 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x43 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* (- x43 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x43 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (x339 2 (- x43 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 2 x43) (x307 2 x43) (x333 2 x43) (x411 2 x43) (= (x339 2 x43) (* 2 x43))))
(assert (x273 x258))
(assert (x338 x63))
(assert (x273 x408))
(assert (x273 x96))
(assert (x273 x344))
(assert (x338 x344))
(assert (x273 x150))
(assert (and (x340 2 x143) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x143) (- (* x143 2) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x143))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x143 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x143 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* (- x143 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x143 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (x339 2 (- x143 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 2 x143) (x307 2 x143) (x333 2 x143) (x411 2 x143) (= (x339 2 x143) (* 2 x143))))
(assert (x273 x99))
(assert (x273 x16))
(assert (x273 x181))
(assert (x145 x304 (- x140 x285)))
(assert (= x400 (=> (and (and (= x329 x403) (= x150 x267) (= x174 false) x403 (= x199 500)) (and (= x103 x155) (= x112 x326) (= (x80 x267 500) x103))) x395)))
(assert (x273 x412))
(assert (= (and (not x82) x129) x94))
(assert (x228 (- x105 x140)))
(assert (x273 x279))
(assert (= x10 (and x409 x33)))
(assert (x338 x184))
(assert (x145 x105 (- x97 x140)))
(assert (x228 x226))
(assert (x273 x105))
(assert (= x182 (and x251 (not x393))))
(assert (= (=> (and (and (= x243 x155) (= (x80 x268 400) x243) (= x326 x112)) (and (= 400 x6) (= x268 x150) (= false x390) (= x335 x274) x335)) x395) x28))
(assert (and (x340 10 x54) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x54) (- (* x54 10) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x54))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x54 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x54 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (* (- x54 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x54 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (x339 10 (- x54 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 10 x54) (x307 10 x54) (x333 10 x54) (x411 10 x54) (= (x339 10 x54) (* 10 x54))))
(assert (x145 x140 (- x304 x97)))
(assert (= (=> (and (and (= x382 (x80 x255 3)) (= x326 x112) (= x382 x155)) (and (= false x282) x303 (= x303 x323) (= x213 3) (= x150 x255))) x395) x30))
(assert (x228 (- x97 x140)))
(assert (and (x340 10 x64) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x64) (- (* x64 10) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x64))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x64 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x64 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (* (- x64 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x64 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (x339 10 (- x64 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 10 x64) (x307 10 x64) (x333 10 x64) (x411 10 x64) (= (x339 10 x64) (* 10 x64))))
(assert (x273 x131))
(assert (x273 x128))
(assert (x145 x140 (- x304 x306)))
(assert (x273 x74))
(assert (and (x340 400 x252) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x252) (- (* x252 400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x252))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x252 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x252 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (* (- x252 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x252 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (x339 400 (- x252 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 400 x252) (x307 400 x252) (x333 400 x252) (x411 400 x252) (= (x339 400 x252) (* 400 x252))))
(assert (x228 (- x304 x105)))
(assert (x348 x97 x105 x140 x304))
(assert (x273 x305))
(assert (x273 x201))
(assert (x273 x207))
(assert (x145 x140 (- x304 x105)))
(assert (x273 x107))
(assert (and (=> (and (> x402 0) (< 0 500)) (and (<= (* (x80 x402 500) 500) x402) (< (- x402 500) (* 500 (x80 x402 500))))) (x260 x402 500) (x92 x402 500) (x196 x402 500) (x163 x402 500)))
(assert (x228 x414))
(assert (= (and x394 x266) x332))
(assert (x273 x43))
(assert (and (=> (and (> x401 0) (< 0 10)) (and (<= (* (x80 x401 10) 10) x401) (< (- x401 10) (* 10 (x80 x401 10))))) (x260 x401 10) (x92 x401 10) (x196 x401 10) (x163 x401 10)))
(assert (x273 x156))
(assert (and (x340 10 x154) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x154) (- (* x154 10) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x154 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (* (- x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (x339 10 (- x154 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 10 x154) (x307 10 x154) (x333 10 x154) (x411 10 x154) (= (x339 10 x154) (* 10 x154))))
(assert (x273 x199))
(assert (x273 x155))
(assert (x338 x255))
(assert (x273 x180))
(assert (x273 x64))
(assert (x273 x6))
(assert (x273 x355))
(assert (x273 x62))
(assert (x338 x401))
(assert (= (and x370 x354) x115))
(assert (x228 (- x140 x105)))
(assert (x273 x169))
(assert (x228 x167))
(assert (x338 x268))
(assert (x228 x417))
(assert (x145 x105 (- x97 x304)))
(assert (x273 x296))
(assert (= x349 (=> (and (= x8 x65) (= 0 x210) (= 1 x62) (= x19 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2685885107 x173) (= x384 x126) (= x304 x262) (= x227 x126) (= x394 (or x242 x368)) (> x412 0) (= x123 x387) (= x176 (>= x222 1)) x315 (= x245 (x339 x140 x304)) (not (= x173 149895259)) (> x156 0) x176 (= x384 x118) (= x150 x283) (= x194 x206) (= x315 (< 0 (x310 x412))) (= x242 (= 0 x367)) (= x71 0) (= x241 x233) (>= x318 0) (= x318 (x247 x412)) (= x373 x296) (= x235 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x245)) (= x8 x311) (= x142 x235) (not (= x173 1245370514)) (= (not (= x387 0)) x194) (= x39 x65) (= x112 (and x206 x142)) (= x241 x373) (= x150 x389) (= x368 (= x283 0)) (= 400 x171) (= x123 x384) (= x140 x389) (= x150 x241) (= 0 x237) (= x16 x8) (= x16 x367) (= x156 (x310 x412)) (= x118 x222) (= x16 x262) (>= 1461501637330902918203684832716283019655932542975 x412)) (and (=> (and (not x394) (and (= x394 x224) (= x331 (not x224)) (= x123 x225) (= (= x225 x160) x136) x331 (= x160 x16))) (and (=> (and (not x136) (and x359 (= x36 x123) (= (not x110) x359) (= (= x197 x36) x109) (= x197 x150) (= x136 x110))) (and (=> (and (not x109) (and (= x16 x128) (= x158 2) (= x61 (* 2 x272)) (= x272 x123) (= (= x61 x128) x284) (= x104 x109) x353 (= (not x104) x353))) (and (=> (and x284 (and (= x326 x112) (= x27 x284) (= x337 x155) (= x150 x43) (= x169 2) x27 (= x337 (x52 (* x43 2))))) x395) (=> (and (and (= (* 2 x106) x298) (= (= x298 x148) x354) x17 (= x284 x297) (= x150 x148) (= (not x297) x17) (= x106 x123) (= x127 2)) (not x284)) (and (=> (and (and (= x281 x123) (= (not x84) x377) (= x98 2) x377 (= x211 (* 2 x96)) (= x96 x16) (= (= x281 x211) x157) (= x84 x354)) (not x354)) (and (=> x157 x291) (=> (and (not x157) (and (= x14 x123) (= x37 (not x407)) (= x47 (* x143 2)) (= x407 x157) (= (= x47 x14) x57) x37 (= 2 x366) (= x143 x150))) (and (=> (and (and (= x82 (= x379 x77)) (= x77 x16) (= (not x280) x159) (= 3 x201) x159 (= x123 x170) (= (* 3 x170) x379) (= x280 x57)) (not x57)) (and (=> (and (and (= x183 x123) x25 (= x150 x305) (= (not x50) x25) (= 3 x124) (= x82 x50) (= (= x305 x141) x404) (= x141 (* x183 3))) (not x82)) (and (=> (and (and (= x16 x232) (= x78 x155) x185 (= x326 x112) (= x279 3) (= (x52 (* 3 x232)) x78) (= x185 x404)) x404) x395) (=> (and (not x404) (and (= (= x258 x343) x323) (= x16 x300) (= (* x300 3) x343) x55 (= (not x278) x55) (= x278 x404) (= x123 x258) (= 3 x415))) (and (=> (and (not x323) (and x32 (= x150 x180) (= x385 x323) (= x322 3) (= x123 x162) (= x32 (not x385)) (= (* x180 3) x108) (= x33 (= x162 x108)))) (and (=> x33 x388) (=> (and (not x33) (and (= 10 x250) (= x123 x81) (= x200 (* 10 x81)) (= x23 x33) (= (= x408 x200) x31) (= x16 x408) (= x187 (not x23)) x187)) (and (=> (and (not x31) (and (= x54 x123) x320 (= (not x386) x320) (= 10 x195) (= x135 x150) (= x88 (= x135 x179)) (= x386 x31) (= x179 (* 10 x54)))) (and (=> (and (and (= x178 (x52 (* x86 10))) x351 (= x326 x112) (= x16 x86) (= x88 x351) (= x290 10) (= x155 x178)) x88) x395) (=> (and (not x88) (and x240 (= x20 x88) (= (= x147 x5) x234) (= (not x20) x240) (= x16 x219) (= 10 x378) (= x5 (* 10 x219)) (= x123 x147))) (and (=> x234 x4) (=> (and (not x234) (and (= 10 x139) (= x405 x234) (= (* 10 x64) x91) (= x64 x150) x244 (= x248 x123) (= x221 (= x248 x91)) (= x244 (not x405)))) (and (=> x221 x22) (=> (and (not x221) (and (= x123 x414) (= x164 x16) (= x336 500) (= (* x414 500) x215) (= (= x215 x164) x259) (= x324 x221) x391 (= x391 (not x324)))) (and (=> (and x259 (and (= x326 x112) (= x150 x226) x396 (= x155 x21) (= x21 (x52 (* 500 x226))) (= x396 x259) (= x299 500))) x395) (=> (and (and (= (= x350 x2) x125) (= x34 x123) (= x15 500) (= x259 x364) x29 (= x2 (* 500 x34)) (= x29 (not x364)) (= x150 x350)) (not x259)) (and (=> (and (and (= x253 (x52 (* 500 x204))) x254 (= x112 x326) (= x16 x204) (= 500 x46) (= x155 x253) (= x254 x125)) x125) x395) (=> (and (not x125) (and (= x123 x416) (= x138 x16) (= x18 (* x138 500)) (= x125 x48) x328 (= x328 (not x48)) (= (= x18 x416) x329) (= x137 500))) (and (=> x329 x400) (=> (and (not x329) (and (= x107 x123) (= x392 (not x381)) (= (= x399 x107) x216) (= x11 500) (= x151 x150) (= x329 x381) (= x399 (* x151 500)) x392)) (and (=> x216 x295) (=> (and (and (= (= x207 x117) x393) (= x207 x16) (= 400 x45) (= x123 x24) (= (not x51) x119) x119 (= x216 x51) (= x117 (* 400 x24))) (not x216)) (and (=> (and (not x393) (and (= x150 x53) x146 (= (* 400 x252) x69) (= x355 400) (= x393 x186) (= (not x186) x146) (= x252 x123) (= (= x53 x69) x356))) (and (=> (and (not x356) (and (= (= x287 x188) x274) x205 (= x60 400) (= x188 (* x292 400)) (= x16 x292) (= x205 (not x369)) (= x287 x123) (= x369 x356))) (and (=> x274 x28) (=> (and (not x274) (and (= x133 x123) (= x263 (* x26 400)) (= x26 x150) x317 (= x302 (= x263 x133)) (= x238 400) (= x274 x166) (= x317 (not x166)))) (and (=> (and (not x302) (and (= x246 (not x257)) x246 (= x13 x326) (= x13 false) (= x302 x257) (= x330 x155) (= 0 x330))) x395) (=> x302 x363))))) (=> (and (and (= x89 (x52 (* x167 400))) (= x167 x16) (= x356 x95) (= x89 x155) (= x112 x326) (= 400 x270) x95) x356) x395))) (=> (and (and (= (x52 (* 400 x100)) x122) x327 (= x327 x393) (= x100 x150) (= x347 400) (= x326 x112) (= x155 x122)) x393) x395))))))))))))))))) (=> (and x31 (and x49 (= x239 10) (= x112 x326) (= x49 x31) (= x113 (x52 (* x154 10))) (= x150 x154) (= x113 x155))) x395))))) (=> x323 x30))))) (=> (and x82 (and (= x269 3) (= x9 (x52 (* x99 3))) x144 (= x150 x99) (= x82 x144) (= x112 x326) (= x9 x155))) x395))) (=> x57 x360))))) (=> (and x354 (and (= x112 x326) (= x75 (x52 (* 2 x417))) (= x16 x417) (= x354 x217) (= x75 x155) x217 (= x131 2))) x395))))) (=> (and (and (= x326 x112) (= x220 x16) (= x155 x220) (= x149 x109) x149) x109) x395))) (=> (and (and (= x150 x74) (= x112 x326) (= x136 x111) (= x155 x74) x111) x136) x395))) (=> (and (and (= x112 x326) (= x394 x134) (= x231 0) (= x231 x155) x134) x394) x395)))))
(assert (= (=> (and (and (= 2 x261) x276 (= x371 false) (= x157 x276) (= x321 x150)) (and (= x326 x112) (= x342 (x80 x321 2)) (= x342 x155))) x395) x291))
(assert (x228 x285))
(assert (x273 x46))
(assert (x145 x97 (- x105 x140)))
(assert (x228 x292))
(assert (x273 x261))
(assert (and (=> (and (> x344 0) (< 0 10)) (and (<= (* (x80 x344 10) 10) x344) (< (- x344 10) (* 10 (x80 x344 10))))) (x260 x344 10) (x92 x344 10) (x196 x344 10) (x163 x344 10)))
(assert (and (x340 2 x106) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x106) (- (* x106 2) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x106))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x106 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x106 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* (- x106 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x106 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (x339 2 (- x106 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 2 x106) (x307 2 x106) (x333 2 x106) (x411 2 x106) (= (x339 2 x106) (* 2 x106))))
(assert (x228 x151))
(assert (= (and x125 x286) x152))
(assert (x228 x81))
(assert (x145 x97 (- x105 x304)))
(assert (x273 x262))
(assert (= (=> (and (and (= x326 x112) (= x101 (x80 x198 3)) (= x101 x155)) (and (= x35 false) x208 (= x16 x198) (= x33 x208) (= x44 3))) x395) x388))
(assert (x273 x367))
(assert (x273 x312))
(assert (x273 x162))
(assert (x228 x272))
(assert (x338 3))
(assert (x273 x167))
(assert (x58 x304 x140 x285 x306))
(assert (and (x340 10 x219) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x219) (- (* x219 10) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (* (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (x339 10 (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 10 x219) (x307 10 x219) (x333 10 x219) (x411 10 x219) (= (x339 10 x219) (* 10 x219))))
(assert (= (and x157 x3) x153))
(assert (x273 x86))
(assert (and (= (- x63 (x59 1 x63)) (* 2 (x80 x63 2))) (x196 x63 2) (=> (and (> x63 0) (< 0 2)) (and (<= (* (x80 x63 2) 2) x63) (< (- x63 2) (* 2 (x80 x63 2))))) (x163 x63 2) (x260 x63 2) (x92 x63 2)))
(assert (x273 x239))
(assert (x273 x85))
(assert (x273 x304))
(assert (and (= (x339 9 9) 81) (= 81 (x339 27 3)) (= 9 (x339 3 3)) (= (x339 9 3) 27)))
(assert (and (x340 500 x414) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x414) (- (* x414 500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x414))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x414 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x414 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (* (- x414 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x414 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (x339 500 (- x414 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 500 x414) (x307 500 x414) (x333 500 x414) (x411 500 x414) (= (x339 500 x414) (* 500 x414))))
(assert (x273 x401))
(assert (x58 x285 x306 x304 x140))
(assert (x58 x140 x304 x105 x97))
(assert (x273 x148))
(assert (x348 x285 x306 x140 x304))
(assert (and (x340 3 x170) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x170) (- (* x170 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x170))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x170 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x339 3 (- x170 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 3 x170) (x307 3 x170) (x333 3 x170) (x411 3 x170) (= (x339 3 x170) (* 3 x170))))
(assert (= x346 (and x136 x313)))
(assert (x273 x382))
(assert (x348 x105 x97 x140 x304))
(assert (= (and x209 (not x221)) x410))
(assert (x273 x204))
(assert (x273 x337))
(assert (x273 x118))
(assert (and (x340 400 x24) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x24) (- (* x24 400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x24))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (* (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (x339 400 (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 400 x24) (x307 400 x24) (x333 400 x24) (x411 400 x24) (= (x339 400 x24) (* 400 x24))))
(assert (= (and (not x356) x182) x38))
(assert (x58 x306 x285 x140 x304))
(assert (= (and x88 x308) x102))
(assert (x273 x233))
(assert (and (=> (and (> x255 0) (< 0 3)) (and (<= (* (x80 x255 3) 3) x255) (< (- x255 3) (* 3 (x80 x255 3))))) (x260 x255 3) (x92 x255 3) (x196 x255 3) (x163 x255 3)))
(assert (x273 x137))
(assert (and (=> (and (> x184 0) (< 0 400)) (and (<= (* (x80 x184 400) 400) x184) (< (- x184 400) (* 400 (x80 x184 400))))) (x260 x184 400) (x92 x184 400) (x196 x184 400) (x163 x184 400)))
(assert (x273 x11))
(assert (x273 x9))
(assert (x273 x225))
(assert (x273 x123))
(assert (x273 x285))
(assert (and (x340 2 x96) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x96) (- (* x96 2) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x96))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x96 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x96 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* (- x96 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x96 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (x339 2 (- x96 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 2 x96) (x307 2 x96) (x333 2 x96) (x411 2 x96) (= (x339 2 x96) (* 2 x96))))
(assert (x228 (- x140 x306)))
(assert (x145 x304 (- x140 x105)))
(assert (x228 (- x285 x304)))
(assert (x228 x304))
(assert (x228 x183))
(assert (x338 x267))
(assert (x273 x133))
(assert (x273 x124))
(assert (x273 x231))
(assert (x145 x306 (- x285 x304)))
(assert (x273 x195))
(assert (= x325 (and x264 x329)))
(assert (= x264 (and (not x125) x286)))
(assert (x273 x183))
(assert (x273 x250))
(assert (x228 x105))
(assert (x273 x122))
(assert (x228 400))
(assert (x348 x304 x140 x105 x97))
(assert (x273 x81))
(assert (x273 x140))
(assert (= x319 (and (not x404) x94)))
(assert (x273 x252))
(assert (x273 x281))
(assert (x228 x306))
(assert (x273 x14))
(assert (x228 x232))
(assert (x273 x158))
(assert (x228 (- x105 x304)))
(assert (x58 x140 x304 x306 x285))
(assert (x58 x304 x140 x306 x285))
(assert (x273 x219))
(assert (x58 x304 x140 x97 x105))
(assert (= x129 (and x314 (not x57))))
(assert (x228 x219))
(assert (= (=> (and (and (= x112 x326) (= (x80 x184 400) x383) (= x155 x383)) (and (= x289 false) x352 (= x302 x352) (= x16 x184) (= 400 x73))) x395) x363))
(assert (x273 x272))
(assert (x273 x164))
(assert (and (x340 400 x100) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x100) (- (* x100 400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x100))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x100 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x100 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (* (- x100 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x100 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (x339 400 (- x100 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 400 x100) (x307 400 x100) (x333 400 x100) (x411 400 x100) (= (x339 400 x100) (* 400 x100))))
(assert (x228 x96))
(assert (x273 x248))
(assert (x273 x121))
(assert (x228 x64))
(assert (x228 (- x140 x97)))
(assert (= (and (not x302) x293) x230))
(assert (x338 x402))
(assert (x58 x140 x304 x285 x306))
(assert (x145 x304 (- x140 x306)))
(assert (x273 x267))
(assert (x273 x306))
(assert (x338 x321))
(assert (x273 x147))
(assert (x273 x336))
(assert (and (x340 3 x300) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x300) (- (* x300 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x300))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x300 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x300 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x300 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x300 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x339 3 (- x300 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 3 x300) (x307 3 x300) (x333 3 x300) (x411 3 x300) (= (x339 3 x300) (* 3 x300))))
(assert (x273 x106))
(assert (x273 x15))
(assert (x273 x151))
(assert (= x313 (and x266 (not x394))))
(assert (x273 x191))
(assert (= (and x182 x356) x380))
(assert (= x165 (and x109 x229)))
(assert (x228 (- x304 x285)))
(assert (x145 x285 x306))
(assert (x228 (- x306 x140)))
(assert (x273 x39))
(assert (x273 x389))
(assert (x273 x268))
(assert (x273 x288))
(assert (x273 x311))
(assert (x273 x73))
(assert (and (x340 3 x180) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x180) (- (* x180 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x180))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x180 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x180 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x180 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x180 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x339 3 (- x180 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 3 x180) (x307 3 x180) (x333 3 x180) (x411 3 x180) (= (x339 3 x180) (* 3 x180))))
(assert (x273 x255))
(assert (= x251 (and (not x216) x1)))
(assert (x273 x299))
(assert (x228 x34))
(assert (x273 x138))
(assert (x273 x53))
(assert (x228 (- x285 x140)))
(assert (x273 x384))
(assert (x228 x97))
(assert (x145 x285 (- x306 x304)))
(assert (x273 x350))
(assert (= (and x375 x284) x236))
(assert (x273 x170))
(assert (x228 (- x140 x285)))
(assert (= x293 (and (not x274) x38)))
(assert (x145 x140 x304))
(assert (x273 x300))
(assert (x273 x417))
(assert (x228 x300))
(assert (x273 x213))
(assert (x338 x198))
(assert (x273 x45))
(assert (x273 x98))
(assert (= (and x90 (not x31)) x308))
(assert (x273 x36))
(assert (x273 x34))
(assert (x273 x232))
(assert (x273 x63))
(assert (x348 x140 x304 x285 x306))
(assert (x273 x316))
(assert (= x266 true))
(assert (x273 x237))
(assert (= x212 (or x153 x236 x372 x76 x325 x346 x102 x115 x361 x152 x249 x380 x345 x165 x40 x116 x398 x332 x203 x189 x334 x230 x177 x10)))
(assert (= (and x251 x393) x345))
(assert (x228 (- x304 x97)))
(assert (x273 x168))
(assert (= (and x293 x302) x40))
(assert (x273 x100))
(assert (= x395 (=> (and (and (= x168 x365) x326 (= x155 x365) (= x365 x312)) (and (= (- x271 1) x277) (= x118 x271) (= x85 x181) (= (x52 (x339 x105 x97)) x56) (= x181 (x130 (- x56 x79))) (= x301 1) (= x79 (x52 (x339 x285 x306))) (= x105 x233) (= (<= x85 x277) x256) (= x312 x265) (= x306 x118) (= x97 x311) (= x265 x285))) x256)))
(assert (and (=> (and (> x267 0) (< 0 500)) (and (<= (* (x80 x267 500) 500) x267) (< (- x267 500) (* 500 (x80 x267 500))))) (x260 x267 500) (x92 x267 500) (x196 x267 500) (x163 x267 500)))
(assert (x145 x105 x97))
(assert (x273 x197))
(assert (x228 2))
(assert (x145 x304 (- x140 x97)))
(assert (x273 x101))
(assert (x273 x127))
(assert (x273 x365))
(assert (x273 x318))
(assert (x273 x198))
(assert (x58 x105 x97 x140 x304))
(assert (x273 x173))
(assert (= (and x319 (not x323)) x409))
(assert (x273 x271))
(assert (= (and x404 x94) x177))
(assert (x228 x106))
(assert (x273 x154))
(assert (= (and (not x259) x410) x286))
(assert (x273 x270))
(assert (x273 x210))
(assert (and (x340 10 x81) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x81) (- (* x81 10) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x81))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (* (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (x339 10 (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 10 x81) (x307 10 x81) (x333 10 x81) (x411 10 x81) (= (x339 10 x81) (* 10 x81))))
(assert (x273 x143))
(assert (x273 x79))
(assert (and (x340 3 x183) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x183) (- (* x183 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x183 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x183 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x183 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x183 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x339 3 (- x183 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 3 x183) (x307 3 x183) (x333 3 x183) (x411 3 x183) (= (x339 3 x183) (* 3 x183))))
(assert (and (x340 2 x417) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x417) (- (* x417 2) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x417))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x417 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x417 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* (- x417 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x417 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (x339 2 (- x417 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 2 x417) (x307 2 x417) (x333 2 x417) (x411 2 x417) (= (x339 2 x417) (* 2 x417))))
(assert (x348 x306 x285 x140 x304))
(assert (x273 x222))
(assert (x273 x178))
(assert (x228 x140))
(assert (x228 x138))
(assert (x228 x170))
(assert (and (x340 10 x86) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x86) (- (* x86 10) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x86))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (* (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936) 10) (x339 10 (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 10 x86) (x307 10 x86) (x333 10 x86) (x411 10 x86) (= (x339 10 x86) (* 10 x86))))
(assert (x273 x54))
(assert (x273 x287))
(assert (and (x340 500 x204) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x204) (- (* x204 500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x204))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x204 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x204 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (* (- x204 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x204 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (x339 500 (- x204 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 500 x204) (x307 500 x204) (x333 500 x204) (x411 500 x204) (= (x339 500 x204) (* 500 x204))))
(assert (x273 x265))
(assert (= (and (not x109) x229) x375))
(assert (x58 x304 x140 x105 x97))
(assert (x273 x358))
(assert (x58 x306 x285 x304 x140))
(assert (x273 x24))
(assert (x228 (- x97 x304)))
(assert (not x349))
(assert (x273 x241))
(assert (x58 x140 x304 x97 x105))
(assert (x273 x342))
(assert (= (and x129 x82) x334))
(assert (and (x340 2 x272) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x272) (- (* x272 2) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x272))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (x339 2 (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 2 x272) (x307 2 x272) (x333 2 x272) (x411 2 x272) (= (x339 2 x272) (* 2 x272))))
(assert (x273 x97))
(assert (and (x340 400 x167) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x167) (- (* x167 400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x167 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x167 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (* (- x167 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x167 115792089237316195423570985008687907853269984665640564039457584007913129639936) 400) (x339 400 (- x167 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 400 x167) (x307 400 x167) (x333 400 x167) (x411 400 x167) (= (x339 400 x167) (* 400 x167))))
(assert (x228 x26))
(assert (x228 x252))
(assert (x273 x402))
(assert (x273 x373))
(assert (x273 x283))
(assert (x228 x99))
(assert (x273 x113))
(assert (x228 x204))
(assert (= x1 (and (not x329) x264)))
(assert (x228 x24))
(assert (x273 x378))
(assert (x273 x347))
(assert (x273 x56))
(assert (x348 x140 x304 x105 x97))
(assert (x273 x44))
(assert (x273 x21))
(assert (x273 x226))
(assert (x58 x285 x306 x140 x304))
(assert (x273 x68))
(assert (and (x340 500 x138) (and (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x138) (- (* x138 500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x138))) (= (x339 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x138 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x138 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (* (- x138 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x138 115792089237316195423570985008687907853269984665640564039457584007913129639936) 500) (x339 500 (- x138 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x87 500 x138) (x307 500 x138) (x333 500 x138) (x411 500 x138) (= (x339 500 x138) (* 500 x138))))
(assert (x273 x67))
(assert (x273 x65))
(assert (= (and x274 x38) x189))
(assert (x338 10))
(assert (= (and x319 x323) x361))
(assert (x273 x269))
(assert (and (=> (and (> x198 0) (< 0 3)) (and (<= (* (x80 x198 3) 3) x198) (< (- x198 3) (* 3 (x80 x198 3))))) (x260 x198 3) (x92 x198 3) (x196 x198 3) (x163 x198 3)))
(assert (x273 x243))
(assert (= x360 (=> (and (and (= x16 x63) x175 (= x193 false) (= 2 x68) (= x57 x175)) (and (= x67 (x80 x63 2)) (= x326 x112) (= x155 x67))) x395)))
(assert (x348 x304 x140 x285 x306))
(assert (x58 x97 x105 x304 x140))
(assert (x228 x86))
(check-sat)
(exit)
