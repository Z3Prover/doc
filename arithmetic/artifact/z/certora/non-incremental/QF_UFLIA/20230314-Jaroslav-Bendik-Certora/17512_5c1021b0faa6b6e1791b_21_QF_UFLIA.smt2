(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x596 () Bool)
(declare-fun x509 (Int Int) Int)
(declare-fun x627 (Int Int) Int)
(declare-fun x79 () Int)
(declare-fun x504 () Int)
(declare-fun x252 () Bool)
(declare-fun x18 (Int) Int)
(declare-fun x536 () Bool)
(declare-fun x226 () Bool)
(declare-fun x39 () Int)
(declare-fun x566 () Bool)
(declare-fun x754 () Int)
(declare-fun x788 () Int)
(declare-fun x10 () Bool)
(declare-fun x682 () Int)
(declare-fun x228 () Bool)
(declare-fun x414 () Int)
(declare-fun x124 () Int)
(declare-fun x420 () Int)
(declare-fun x27 () Int)
(declare-fun x219 () Int)
(declare-fun x590 () Int)
(declare-fun x259 () Int)
(declare-fun x1 () Int)
(declare-fun x460 () Int)
(declare-fun x544 () Int)
(declare-fun x304 () Int)
(declare-fun x90 () Bool)
(declare-fun x767 () Int)
(declare-fun x340 () Bool)
(declare-fun x421 () Int)
(declare-fun x771 () Int)
(declare-fun x545 () Bool)
(declare-fun x513 () Int)
(declare-fun x5 () Int)
(declare-fun x191 () Bool)
(declare-fun x7 () Bool)
(declare-fun x167 () Int)
(declare-fun x3 () Int)
(declare-fun x297 () Bool)
(declare-fun x797 () Int)
(declare-fun x244 () Int)
(declare-fun x448 () Int)
(declare-fun x328 () Bool)
(declare-fun x739 () Bool)
(declare-fun x324 () Int)
(declare-fun x216 () Int)
(declare-fun x498 () Bool)
(declare-fun x292 () Int)
(declare-fun x538 () Int)
(declare-fun x35 () Bool)
(declare-fun x351 () Int)
(declare-fun x154 () Bool)
(declare-fun x183 () Bool)
(declare-fun x641 () Int)
(declare-fun x21 () Int)
(declare-fun x619 () Int)
(declare-fun x402 () Bool)
(declare-fun x294 () Int)
(declare-fun x313 () Int)
(declare-fun x441 () Int)
(declare-fun x156 () Int)
(declare-fun x787 () Int)
(declare-fun x83 () Bool)
(declare-fun x594 () Int)
(declare-fun x672 () Bool)
(declare-fun x173 () Int)
(declare-fun x782 () Int)
(declare-fun x642 () Int)
(declare-fun x132 () Int)
(declare-fun x601 () Int)
(declare-fun x251 () Bool)
(declare-fun x710 () Bool)
(declare-fun x394 () Int)
(declare-fun x305 () Bool)
(declare-fun x602 () Int)
(declare-fun x170 () Int)
(declare-fun x283 () Int)
(declare-fun x423 () Int)
(declare-fun x133 () Int)
(declare-fun x593 () Int)
(declare-fun x643 () Bool)
(declare-fun x665 () Int)
(declare-fun x286 () Int)
(declare-fun x568 () Int)
(declare-fun x728 () Int)
(declare-fun x130 () Int)
(declare-fun x17 () Int)
(declare-fun x353 () Bool)
(declare-fun x442 () Int)
(declare-fun x649 () Bool)
(declare-fun x99 () Int)
(declare-fun x495 () Int)
(declare-fun x365 () Bool)
(declare-fun x274 () Int)
(declare-fun x4 () Bool)
(declare-fun x470 () Int)
(declare-fun x738 () Int)
(declare-fun x373 () Bool)
(declare-fun x605 () Int)
(declare-fun x46 () Int)
(declare-fun x366 () Int)
(declare-fun x400 () Int)
(declare-fun x288 () Int)
(declare-fun x494 () Int)
(declare-fun x29 () Int)
(declare-fun x422 () Bool)
(declare-fun x723 () Int)
(declare-fun x716 () Int)
(declare-fun x104 () Int)
(declare-fun x52 () Int)
(declare-fun x205 () Bool)
(declare-fun x652 () Bool)
(declare-fun x476 () Int)
(declare-fun x694 () Int)
(declare-fun x84 () Int)
(declare-fun x686 () Int)
(declare-fun x97 () Bool)
(declare-fun x452 () Int)
(declare-fun x281 () Int)
(declare-fun x411 () Int)
(declare-fun x515 () Int)
(declare-fun x77 () Int)
(declare-fun x345 () Int)
(declare-fun x320 () Bool)
(declare-fun x752 () Bool)
(declare-fun x71 () Bool)
(declare-fun x482 () Int)
(declare-fun x349 () Bool)
(declare-fun x576 () Int)
(declare-fun x651 () Bool)
(declare-fun x549 () Int)
(declare-fun x562 () Int)
(declare-fun x356 () Bool)
(declare-fun x431 () Int)
(declare-fun x265 () Int)
(declare-fun x449 () Bool)
(declare-fun x648 () Bool)
(declare-fun x434 () Bool)
(declare-fun x618 () Bool)
(declare-fun x45 () Int)
(declare-fun x799 () Int)
(declare-fun x117 () Int)
(declare-fun x680 () Bool)
(declare-fun x176 () Int)
(declare-fun x478 () Bool)
(declare-fun x341 () Int)
(declare-fun x203 () Bool)
(declare-fun x719 () Int)
(declare-fun x446 () Int)
(declare-fun x32 () Int)
(declare-fun x376 () Int)
(declare-fun x699 () Bool)
(declare-fun x193 () Bool)
(declare-fun x57 () Int)
(declare-fun x346 () Bool)
(declare-fun x155 () Int)
(declare-fun x676 () Int)
(declare-fun x607 () Int)
(declare-fun x385 () Int)
(declare-fun x352 () Int)
(declare-fun x517 () Int)
(declare-fun x123 () Int)
(declare-fun x78 () Int)
(declare-fun x91 () Bool)
(declare-fun x181 () Bool)
(declare-fun x318 () Int)
(declare-fun x660 () Int)
(declare-fun x473 () Int)
(declare-fun x664 () Int)
(declare-fun x600 () Int)
(declare-fun x588 () Int)
(declare-fun x100 () Int)
(declare-fun x315 () Int)
(declare-fun x678 () Int)
(declare-fun x775 () Int)
(declare-fun x213 () Bool)
(declare-fun x395 () Int)
(declare-fun x474 () Int)
(declare-fun x653 () Int)
(declare-fun x95 () Bool)
(declare-fun x573 () Bool)
(declare-fun x468 () Bool)
(declare-fun x367 () Int)
(declare-fun x574 () Bool)
(declare-fun x188 () Bool)
(declare-fun x391 () Bool)
(declare-fun x750 () Bool)
(declare-fun x331 () Bool)
(declare-fun x685 () Bool)
(declare-fun x747 () Int)
(declare-fun x371 () Int)
(declare-fun x73 () Bool)
(declare-fun x692 () Int)
(declare-fun x413 () Int)
(declare-fun x623 () Bool)
(declare-fun x722 () Bool)
(declare-fun x531 () Int)
(declare-fun x416 () Bool)
(declare-fun x322 () Bool)
(declare-fun x208 () Int)
(declare-fun x143 () Bool)
(declare-fun x734 () Int)
(declare-fun x237 () Int)
(declare-fun x472 () Int)
(declare-fun x766 (Int) Int)
(declare-fun x727 () Int)
(declare-fun x63 () Int)
(declare-fun x730 () Int)
(declare-fun x430 () Bool)
(declare-fun x736 () Int)
(declare-fun x621 (Int) Int)
(declare-fun x780 () Int)
(declare-fun x19 () Bool)
(declare-fun x493 () Bool)
(declare-fun x152 () Int)
(declare-fun x715 () Int)
(declare-fun x185 () Int)
(declare-fun x358 () Int)
(declare-fun x34 () Int)
(declare-fun x157 () Int)
(declare-fun x390 () Int)
(declare-fun x795 () Int)
(declare-fun x419 () Int)
(declare-fun x354 () Bool)
(declare-fun x581 () Bool)
(declare-fun x302 () Bool)
(declare-fun x249 () Bool)
(declare-fun x80 () Bool)
(declare-fun x502 () Bool)
(declare-fun x667 () Int)
(declare-fun x56 () Int)
(declare-fun x266 () Int)
(declare-fun x450 () Int)
(declare-fun x47 () Int)
(declare-fun x720 () Bool)
(declare-fun x744 () Bool)
(declare-fun x214 () Int)
(declare-fun x565 () Int)
(declare-fun x204 () Bool)
(declare-fun x758 () Int)
(declare-fun x789 () Int)
(declare-fun x220 () Int)
(declare-fun x772 () Bool)
(declare-fun x179 () Int)
(declare-fun x61 () Int)
(declare-fun x521 () Bool)
(declare-fun x577 () Int)
(declare-fun x206 () Bool)
(declare-fun x25 () Int)
(declare-fun x705 () Int)
(declare-fun x743 () Bool)
(declare-fun x198 () Bool)
(declare-fun x109 () Int)
(declare-fun x355 () Int)
(declare-fun x245 () Int)
(declare-fun x293 () Int)
(declare-fun x636 () Bool)
(declare-fun x98 () Int)
(declare-fun x655 () Bool)
(declare-fun x620 () Int)
(declare-fun x165 () Int)
(declare-fun x158 () Int)
(declare-fun x633 () Int)
(declare-fun x709 () Int)
(declare-fun x275 () Int)
(declare-fun x255 () Int)
(declare-fun x749 () Bool)
(declare-fun x522 () Bool)
(declare-fun x147 () Int)
(declare-fun x118 () Int)
(declare-fun x684 () Bool)
(declare-fun x207 () Bool)
(declare-fun x76 () Bool)
(declare-fun x234 () Int)
(declare-fun x583 () Int)
(declare-fun x163 () Bool)
(declare-fun x280 () Bool)
(declare-fun x703 () Bool)
(declare-fun x377 () Bool)
(declare-fun x122 () Bool)
(declare-fun x248 () Bool)
(declare-fun x40 () Int)
(declare-fun x791 () Int)
(declare-fun x215 () Int)
(declare-fun x189 () Int)
(declare-fun x597 () Int)
(declare-fun x344 () Bool)
(declare-fun x781 () Int)
(declare-fun x591 () Int)
(declare-fun x271 () Int)
(declare-fun x30 () Int)
(declare-fun x102 (Int Int) Int)
(declare-fun x578 () Bool)
(declare-fun x554 () Int)
(declare-fun x74 () Int)
(declare-fun x650 () Bool)
(declare-fun x397 () Int)
(declare-fun x291 () Int)
(declare-fun x533 () Int)
(declare-fun x182 () Int)
(declare-fun x359 () Bool)
(declare-fun x336 () Int)
(declare-fun x306 () Bool)
(declare-fun x696 () Int)
(declare-fun x794 () Int)
(declare-fun x762 () Int)
(declare-fun x459 () Bool)
(declare-fun x598 () Int)
(declare-fun x134 () Int)
(declare-fun x303 () Bool)
(declare-fun x500 () Bool)
(declare-fun x408 () Int)
(declare-fun x740 () Bool)
(declare-fun x764 () Bool)
(declare-fun x626 () Int)
(declare-fun x138 () Int)
(declare-fun x14 () Int)
(declare-fun x527 () Int)
(declare-fun x407 () Bool)
(declare-fun x741 () Int)
(declare-fun x427 () Bool)
(declare-fun x778 () Bool)
(declare-fun x796 () Bool)
(declare-fun x540 () Int)
(declare-fun x96 () Int)
(declare-fun x267 () Int)
(declare-fun x695 () Int)
(declare-fun x348 () Int)
(declare-fun x704 () Int)
(declare-fun x86 () Int)
(declare-fun x512 (Int) Int)
(declare-fun x673 () Bool)
(declare-fun x287 () Int)
(declare-fun x645 () Int)
(declare-fun x58 () Int)
(declare-fun x436 () Int)
(declare-fun x638 () Int)
(declare-fun x257 () Bool)
(declare-fun x378 () Bool)
(declare-fun x120 () Bool)
(declare-fun x81 () Int)
(declare-fun x60 () Int)
(declare-fun x506 () Int)
(declare-fun x284 () Bool)
(declare-fun x785 () Int)
(declare-fun x611 () Bool)
(declare-fun x433 () Bool)
(declare-fun x263 () Int)
(declare-fun x269 () Bool)
(declare-fun x184 () Int)
(declare-fun x89 () Bool)
(declare-fun x381 () Int)
(declare-fun x384 () Int)
(declare-fun x26 () Int)
(declare-fun x546 () Int)
(declare-fun x239 () Int)
(declare-fun x62 () Int)
(declare-fun x113 () Bool)
(declare-fun x55 () Int)
(declare-fun x604 () Bool)
(declare-fun x505 () Int)
(declare-fun x299 () Int)
(declare-fun x20 () Int)
(declare-fun x615 () Int)
(declare-fun x327 () Int)
(declare-fun x161 () Bool)
(declare-fun x149 () Int)
(declare-fun x707 (Int) Int)
(declare-fun x174 () Bool)
(declare-fun x278 () Int)
(declare-fun x432 () Int)
(declare-fun x631 () Int)
(declare-fun x592 () Int)
(declare-fun x793 () Int)
(declare-fun x68 () Bool)
(declare-fun x368 () Int)
(declare-fun x733 () Bool)
(declare-fun x437 () Int)
(declare-fun x200 () Bool)
(declare-fun x644 () Int)
(declare-fun x457 () Bool)
(declare-fun x523 () Bool)
(declare-fun x209 () Int)
(declare-fun x11 () Int)
(declare-fun x105 () Bool)
(declare-fun x295 () Int)
(declare-fun x12 () Bool)
(declare-fun x742 () Bool)
(declare-fun x477 () Int)
(declare-fun x148 () Int)
(declare-fun x125 () Int)
(declare-fun x53 () Bool)
(declare-fun x724 () Int)
(declare-fun x774 () Bool)
(declare-fun x438 () Int)
(declare-fun x343 () Bool)
(declare-fun x753 () Bool)
(declare-fun x92 () Int)
(declare-fun x164 () Int)
(declare-fun x268 () Int)
(declare-fun x455 () Bool)
(declare-fun x518 () Bool)
(declare-fun x702 () Bool)
(declare-fun x75 () Int)
(declare-fun x784 () Int)
(declare-fun x489 () Int)
(declare-fun x221 () Bool)
(declare-fun x332 () Int)
(declare-fun x440 () Int)
(declare-fun x70 () Int)
(declare-fun x254 () Int)
(declare-fun x187 () Int)
(declare-fun x107 () Int)
(declare-fun x779 () Bool)
(declare-fun x514 () Bool)
(declare-fun x144 () Int)
(declare-fun x317 () Int)
(declare-fun x458 () Bool)
(declare-fun x94 () Int)
(declare-fun x65 () Int)
(declare-fun x142 () Int)
(declare-fun x136 () Bool)
(declare-fun x339 () Bool)
(declare-fun x632 () Bool)
(declare-fun x688 () Int)
(declare-fun x511 () Bool)
(declare-fun x501 () Int)
(declare-fun x558 () Int)
(declare-fun x256 () Bool)
(declare-fun x361 () Int)
(declare-fun x190 (Int) Int)
(declare-fun x240 () Bool)
(declare-fun x401 () Int)
(declare-fun x570 () Int)
(declare-fun x375 () Int)
(declare-fun x630 () Int)
(declare-fun x510 () Int)
(declare-fun x321 () Bool)
(declare-fun x180 () Bool)
(declare-fun x530 () Int)
(declare-fun x542 () Bool)
(declare-fun x323 () Int)
(declare-fun x447 () Int)
(declare-fun x258 () Int)
(declare-fun x575 () Int)
(declare-fun x679 () Int)
(declare-fun x608 () Int)
(declare-fun x461 () Int)
(declare-fun x721 () Bool)
(declare-fun x759 (Int) Int)
(declare-fun x127 () Int)
(declare-fun x606 () Int)
(declare-fun x264 () Int)
(declare-fun x114 () Bool)
(declare-fun x225 () Int)
(declare-fun x197 () Int)
(declare-fun x755 () Int)
(declare-fun x451 () Int)
(declare-fun x569 () Int)
(declare-fun x330 () Bool)
(declare-fun x693 () Bool)
(declare-fun x172 () Bool)
(declare-fun x196 () Bool)
(declare-fun x64 (Int) Int)
(declare-fun x507 () Int)
(declare-fun x503 () Int)
(declare-fun x677 (Int Int) Int)
(declare-fun x334 () Int)
(declare-fun x776 () Int)
(declare-fun x51 () Int)
(declare-fun x8 () Bool)
(declare-fun x552 () Int)
(declare-fun x629 () Int)
(declare-fun x242 () Int)
(declare-fun x428 () Int)
(declare-fun x146 () Int)
(declare-fun x103 () Bool)
(declare-fun x496 () Int)
(declare-fun x729 () Bool)
(declare-fun x141 (Int) Int)
(declare-fun x465 () Bool)
(declare-fun x712 () Bool)
(declare-fun x131 () Int)
(declare-fun x466 () Int)
(declare-fun x690 () Int)
(declare-fun x425 () Int)
(declare-fun x765 () Int)
(declare-fun x756 () Int)
(declare-fun x687 () Int)
(declare-fun x67 () Int)
(declare-fun x485 () Bool)
(declare-fun x389 () Int)
(declare-fun x186 () Int)
(declare-fun x751 () Int)
(declare-fun x282 () Int)
(declare-fun x412 () Int)
(declare-fun x488 () Int)
(declare-fun x108 () Bool)
(declare-fun x761 () Int)
(declare-fun x535 () Bool)
(declare-fun x526 () Int)
(declare-fun x199 (Int) Int)
(declare-fun x201 () Int)
(declare-fun x725 () Int)
(declare-fun x110 () Int)
(declare-fun x532 () Int)
(declare-fun x435 () Int)
(declare-fun x479 () Int)
(declare-fun x714 () Int)
(declare-fun x539 () Bool)
(declare-fun x612 () Int)
(declare-fun x748 () Int)
(declare-fun x481 () Int)
(declare-fun x529 () Int)
(declare-fun x227 () Int)
(declare-fun x168 () Int)
(declare-fun x37 () Int)
(declare-fun x49 () Bool)
(declare-fun x560 () Int)
(declare-fun x85 () Int)
(declare-fun x556 () Bool)
(declare-fun x393 () Int)
(declare-fun x22 () Int)
(declare-fun x520 () Bool)
(declare-fun x640 () Bool)
(declare-fun x246 () Int)
(declare-fun x525 () Int)
(declare-fun x662 (Int Int) Int)
(declare-fun x669 () Int)
(declare-fun x54 () Int)
(declare-fun x746 () Int)
(declare-fun x229 () Int)
(declare-fun x262 () Bool)
(declare-fun x516 () Int)
(declare-fun x628 () Int)
(declare-fun x285 () Int)
(declare-fun x745 () Int)
(declare-fun x614 () Int)
(declare-fun x387 () Int)
(declare-fun x534 () Int)
(declare-fun x223 () Int)
(declare-fun x519 () Int)
(declare-fun x386 () Int)
(declare-fun x380 () Int)
(declare-fun x383 () Int)
(declare-fun x260 () Int)
(declare-fun x404 () Bool)
(declare-fun x112 () Int)
(declare-fun x160 () Int)
(declare-fun x737 () Bool)
(declare-fun x369 () Bool)
(declare-fun x508 () Int)
(declare-fun x467 (Int) Int)
(declare-fun x301 () Int)
(declare-fun x700 () Int)
(declare-fun x222 () Bool)
(declare-fun x372 () Int)
(declare-fun x717 (Int Int) Int)
(declare-fun x276 () Int)
(declare-fun x33 () Int)
(declare-fun x128 () Bool)
(declare-fun x491 () Int)
(declare-fun x106 () Int)
(declare-fun x497 () Bool)
(declare-fun x656 (Int) Int)
(declare-fun x557 () Int)
(declare-fun x469 () Int)
(declare-fun x370 () Int)
(declare-fun x261 () Int)
(declare-fun x121 () Int)
(declare-fun x273 () Int)
(declare-fun x326 () Int)
(declare-fun x453 () Bool)
(declare-fun x93 () Bool)
(declare-fun x9 () Bool)
(declare-fun x230 () Int)
(declare-fun x537 () Int)
(declare-fun x119 () Int)
(declare-fun x639 () Int)
(declare-fun x445 () Int)
(declare-fun x210 () Bool)
(declare-fun x617 () Int)
(declare-fun x609 () Int)
(declare-fun x36 () Bool)
(declare-fun x405 () Bool)
(declare-fun x217 () Int)
(declare-fun x760 () Int)
(declare-fun x547 () Int)
(declare-fun x374 () Int)
(declare-fun x671 () Bool)
(declare-fun x241 () Bool)
(declare-fun x456 () Int)
(declare-fun x424 () Int)
(declare-fun x360 () Int)
(declare-fun x166 () Bool)
(declare-fun x524 () Bool)
(declare-fun x409 () Int)
(declare-fun x499 () Bool)
(declare-fun x410 () Bool)
(declare-fun x42 () Bool)
(declare-fun x486 () Int)
(declare-fun x674 () Int)
(declare-fun x38 () Int)
(declare-fun x541 () Int)
(declare-fun x443 () Int)
(declare-fun x490 () Int)
(declare-fun x444 () Bool)
(declare-fun x362 () Int)
(declare-fun x616 () Int)
(declare-fun x171 () Bool)
(declare-fun x543 () Int)
(declare-fun x270 () Bool)
(declare-fun x396 () Int)
(declare-fun x87 () Int)
(declare-fun x357 (Int) Int)
(declare-fun x224 () Int)
(declare-fun x551 () Int)
(declare-fun x548 () Int)
(declare-fun x683 () Int)
(declare-fun x232 () Int)
(declare-fun x192 () Bool)
(declare-fun x398 () Int)
(declare-fun x587 () Int)
(declare-fun x307 () Int)
(declare-fun x16 () Int)
(declare-fun x798 () Int)
(declare-fun x159 () Bool)
(declare-fun x312 () Int)
(declare-fun x24 () Int)
(declare-fun x308 () Bool)
(declare-fun x559 () Int)
(declare-fun x364 () Int)
(declare-fun x44 () Bool)
(declare-fun x169 () Int)
(declare-fun x253 () Int)
(declare-fun x735 () Int)
(declare-fun x314 () Int)
(declare-fun x325 (Int) Int)
(declare-fun x624 () Int)
(declare-fun x335 () Bool)
(declare-fun x382 () Int)
(declare-fun x333 () Bool)
(declare-fun x462 () Bool)
(declare-fun x492 () Int)
(define-fun x622 ((x585 Int)) Int (ite (and (< x585 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x585 0)) x585 (- x585 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x338 ((x585 Int)) Int (ite (and (>= x585 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x585)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x585) x585))
(define-fun x233 ((x585 Int)) Int (ite (and (<= 0 x585) (< x585 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x585 (ite (and (>= x585 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x585)) (- x585 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x585 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x585)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x585) (x102 x585 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x59 ((x129 Int)) Bool (and (<= 0 x129) (< x129 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x454 ((x129 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129) (<= 0 x129)))
(define-fun x69 ((x129 Int) (x66 Int)) Bool (=> (and (> x66 0) (> x129 0)) (and (<= (x509 x129 x66) x129) (>= (x509 x129 x66) 0))))
(define-fun x706 ((x129 Int) (x66 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x66) (>= x66 1)) (and (<= 0 x129) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129))) (and (>= (x509 x129 x66) 0) (< (x509 x129 x66) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x463 ((x129 Int) (x66 Int)) Bool (=> (and (< x66 x129) (> x66 1)) (< (x509 x129 x66) x129)))
(define-fun x296 ((x129 Int) (x66 Int)) Bool (=> (and (< 0 x66) (> x129 0)) (= (= (x509 x129 x66) 0) (> x66 x129))))
(define-fun x580 ((x129 Int)) Bool (= (x509 0 x129) 0))
(define-fun x777 ((x129 Int)) Bool (= x129 (x509 x129 1)))
(define-fun x175 ((x129 Int)) Bool (=> (not (= x129 0)) (= 1 (x509 x129 x129))))
(define-fun x88 ((x129 Int)) Bool (and (x777 x129) (x175 x129) (x580 x129)))
(define-fun x483 ((x129 Int)) Bool (and (= x129 (x627 115792089237316195423570985008687907853269984665640564039457584007913129639935 x129)) (= x129 (x627 x129 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x783 ((x129 Int)) Bool (and (= (x627 x129 0) 0) (= (x627 0 x129) 0)))
(define-fun x439 ((x129 Int)) Bool (= (x627 x129 x129) x129))
(define-fun x363 ((x129 Int)) Bool (and (x483 x129) (x783 x129) (x439 x129)))
(define-fun x555 ((x129 Int) (x66 Int)) Bool (= (x627 x129 x66) (x627 x66 x129)))
(define-fun x563 ((x129 Int) (x66 Int)) Bool (and (>= (x627 x129 x66) 0) (=> (<= 0 x66) (<= (x627 x129 x66) x66)) (=> (>= x129 0) (>= x129 (x627 x129 x66)))))
(define-fun x661 ((x129 Int) (x66 Int)) Bool (and (x555 x129 x66) (x563 x129 x66)))
(define-fun x691 ((x129 Int)) Bool (= (x627 x129 1461501637330902918203684832716283019655932542975) (x102 x129 1461501637330902918203684832716283019655932542976)))
(define-fun x151 ((x129 Int)) Bool (and (x661 x129 1461501637330902918203684832716283019655932542975) (x691 x129)))
(define-fun x277 ((x129 Int) (x66 Int)) Bool (and (<= 0 (x102 x129 x66)) (> x66 (x102 x129 x66))))
(define-fun x698 ((x129 Int) (x66 Int)) Bool (=> (and (<= 0 x129) (> x66 0)) (= (> x66 x129) (= x129 (x102 x129 x66)))))
(define-fun x309 ((x129 Int) (x66 Int)) Bool (=> (and (and (>= x129 x66) (< x129 (+ x66 x66))) (> x66 0)) (= (x102 x129 x66) (- x129 x66))))
(define-fun x770 ((x129 Int)) Bool (= 0 (x102 0 x129)))
(define-fun x564 ((x129 Int)) Bool (= 0 (x102 x129 1)))
(define-fun x666 ((x129 Int)) Bool (= (x102 x129 x129) 0))
(define-fun x48 ((x129 Int)) Bool (and (x666 x129) (x770 x129) (x564 x129)))
(define-fun x790 ((x129 Int) (x66 Int)) Bool (=> (and (< 0 x129) (< 0 x66)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x677 x129 x66)) (= (x509 (x233 (x677 x129 x66)) x129) x66))))
(define-fun x487 ((x129 Int) (x66 Int)) Bool (=> (and (not (= x129 0)) (not (= x66 0))) (and (= x66 (x509 (x677 x129 x66) x129)) (= (x509 (x677 x129 x66) x66) x129))))
(define-fun x550 ((x129 Int) (x66 Int)) Bool (=> (and (< 0 x129) (> x66 0)) (= (< (x509 115792089237316195423570985008687907853269984665640564039457584007913129639935 x129) x66) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x677 x129 x66)))))
(define-fun x329 ((x129 Int) (x66 Int)) Bool (and (= (x233 (x677 x129 x66)) (x233 (x677 (- x129 115792089237316195423570985008687907853269984665640564039457584007913129639936) x66))) (= (x233 (x677 x129 (- x66 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x233 (x677 x129 x66))) (= (x233 (x677 x129 x66)) (x233 (x677 (- x129 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x66 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x726 ((x129 Int) (x66 Int)) Bool (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x129) (> x129 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x66 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x66 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129) (x509 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x66))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x677 (- x129 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x66 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (> x129 0) (<= x129 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x66 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x66 0))) (= (>= (x509 57896044618658097711785492504343953926634992332820282019728792003956564819967 x66) x129) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x677 x129 x66)))) (=> (and (and (> x66 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x66)) (and (> x129 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129))) (= (>= (x677 x129 (- x66 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= (x509 57896044618658097711785492504343953926634992332820282019728792003956564819968 x129) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x66)))) (=> (and (and (<= x66 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x66)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x129) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x677 (- x129 115792089237316195423570985008687907853269984665640564039457584007913129639936) x66)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x129) (x509 57896044618658097711785492504343953926634992332820282019728792003956564819968 x66))))))
(define-fun x635 ((x129 Int)) Bool (and (= (x677 x129 0) 0) (= 0 (x677 0 x129))))
(define-fun x613 ((x129 Int)) Bool (and (= (x677 1 x129) x129) (= (x677 x129 1) x129)))
(define-fun x218 ((x129 Int)) Bool (and (x635 x129) (x613 x129)))
(define-fun x162 ((x129 Int) (x66 Int)) Bool (=> (and (> x66 0) (> x129 0)) (and (<= (x677 (x509 x129 x66) x66) x129) (< (- x129 x66) (x677 (x509 x129 x66) x66)))))
(define-fun x319 ((x129 Int) (x66 Int)) Bool (and (x296 x129 x66) (x69 x129 x66) (x162 x129 x66) (x706 x129 x66) (x463 x129 x66)))
(define-fun x713 ((x129 Int) (x66 Int)) Bool (= (x677 x66 x129) (x677 x129 x66)))
(define-fun x250 ((x129 Int) (x66 Int)) Bool (and (=> (and (< x66 0) (< 0 x129)) (> 0 (x677 x129 x66))) (=> (and (> 0 x129) (< x66 0)) (< 0 (x677 x129 x66))) (=> (and (> x66 0) (< x129 0)) (> 0 (x677 x129 x66))) (=> (and (< 0 x66) (> x129 0)) (> (x677 x129 x66) 0))))
(define-fun x718 ((x129 Int) (x66 Int)) Bool (and (x250 x129 x66) (x726 x129 x66) (x713 x129 x66) (x487 x129 x66) (x329 x129 x66) (x550 x129 x66) (x790 x129 x66)))
(define-fun x298 ((x129 Int)) Bool (= (x102 x129 340282366920938463463374607431768211456) (x627 x129 340282366920938463463374607431768211455)))
(define-fun x675 ((x129 Int)) Bool (and (x661 x129 340282366920938463463374607431768211455) (x298 x129)))
(define-fun x115 ((x528 Int)) Int (ite (= x528 128) 2 (x325 x528)))
(define-fun x140 ((x528 Int)) Int (ite (= 160 x528) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x115 x528)))
(define-fun x757 ((x528 Int)) Int (ite (= 192 x528) 2 (x140 x528)))
(define-fun x150 ((x528 Int)) Int (ite (= 224 x528) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x757 x528)))
(define-fun x417 ((x528 Int)) Int (ite (= x528 256) 2 (x150 x528)))
(define-fun x399 ((x528 Int)) Int (ite (= x528 288) 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x417 x528)))
(define-fun x392 ((x528 Int)) Int (ite (= x517 x528) 1000000000000000000000000000 (x707 x528)))
(define-fun x342 ((x528 Int)) Int (ite (= x447 x528) x52 (x357 x528)))
(define-fun x139 ((x528 Int)) Int (ite (= x528 320) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x399 x528)))
(define-fun x350 ((x528 Int)) Int (ite (= x528 324) x121 (x139 x528)))
(define-fun x82 ((x528 Int)) Int (ite (= x528 356) x741 (x350 x528)))
(define-fun x659 ((x528 Int)) Int (ite (= 388 x528) x653 (x82 x528)))
(define-fun x406 ((x528 Int)) Int (ite (= 128 x528) 2 (x64 x528)))
(define-fun x15 ((x528 Int)) Int (ite (= x528 160) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x406 x528)))
(define-fun x415 ((x528 Int)) Int (ite (= x528 192) 2 (x15 x528)))
(define-fun x646 ((x528 Int)) Int (ite (= 224 x528) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x415 x528)))
(define-fun x768 ((x528 Int)) Int (ite (= x528 256) 2 (x646 x528)))
(define-fun x31 ((x528 Int)) Int (ite (= x528 288) 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x768 x528)))
(define-fun x589 ((x528 Int)) Int (ite (= x528 x133) x719 (x357 x528)))
(define-fun x637 ((x528 Int)) Int (ite (= x528 320) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x31 x528)))
(define-fun x28 ((x528 Int)) Int (ite (= 324 x528) x14 (x637 x528)))
(define-fun x769 ((x528 Int)) Int (ite (= 356 x528) x741 (x28 x528)))
(define-fun x289 ((x528 Int)) Int (ite (= 388 x528) x615 (x769 x528)))
(define-fun x316 ((x528 Int)) Int (x392 x528))
(define-fun x732 ((x528 Int)) Int (ite (= x528 x230) x67 (x190 x528)))
(define-fun x135 ((x528 Int)) Int (ite (= x528 x601) x156 (x732 x528)))
(define-fun x634 ((x528 Int)) Int (ite x556 (x190 x528) (ite x248 (x190 x528) (x135 x528))))
(define-fun x290 ((x528 Int)) Int (x342 x528))
(define-fun x6 ((x528 Int)) Int (ite (= x528 128) 2 (x766 x528)))
(define-fun x202 ((x528 Int)) Int (ite (= x528 160) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x6 x528)))
(define-fun x586 ((x528 Int)) Int (ite (= x528 192) 2 (x202 x528)))
(define-fun x773 ((x528 Int)) Int (ite (= 224 x528) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x586 x528)))
(define-fun x697 ((x528 Int)) Int (ite (= x528 256) 2 (x773 x528)))
(define-fun x111 ((x528 Int)) Int (ite (= x528 288) 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x697 x528)))
(define-fun x272 ((x528 Int)) Int (ite (= x528 x538) x590 (x290 x528)))
(define-fun x553 ((x528 Int)) Int (ite (= 320 x528) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x111 x528)))
(define-fun x50 ((x528 Int)) Int (ite (= 324 x528) x291 (x553 x528)))
(define-fun x178 ((x528 Int)) Int (ite (= 356 x528) x313 (x50 x528)))
(define-fun x279 ((x528 Int)) Int (ite (= x528 388) x470 (x178 x528)))
(define-fun x792 ((x528 Int)) Int (ite (= x797 x528) x58 (x634 x528)))
(define-fun x23 ((x528 Int)) Int (ite (= x528 x273) x466 (x792 x528)))
(define-fun x484 ((x528 Int)) Int (ite x455 (x634 x528) (ite x596 (x634 x528) (x23 x528))))
(define-fun x379 ((x528 Int)) Int (x272 x528))
(define-fun x654 ((x528 Int)) Int (ite (= 128 x528) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x467 x528)))
(define-fun x194 ((x528 Int)) Int (ite (= 132 x528) x748 (x654 x528)))
(define-fun x236 ((x528 Int)) Int (ite (= x528 128) x389 (x194 x528)))
(define-fun x599 ((x528 Int)) Int (ite (= x528 x438) x362 (x190 x528)))
(define-fun x657 ((x528 Int)) Int (ite (= x528 x751) x307 (x599 x528)))
(define-fun x41 ((x528 Int)) Int (ite x7 (x190 x528) (ite x174 (x190 x528) (ite x44 (x190 x528) (x657 x528)))))
(define-fun x101 ((x528 Int)) Int (x589 x528))
(define-fun x177 ((x528 Int)) Int (ite (= 128 x528) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x621 x528)))
(define-fun x708 ((x528 Int)) Int (ite (= 132 x528) x332 (x177 x528)))
(define-fun x603 ((x528 Int)) Int (ite (= x528 128) x134 (x708 x528)))
(define-fun x418 ((x528 Int)) Int (ite x632 (x399 x528) (x659 x528)))
(define-fun x137 ((x528 Int)) Int (ite (= x528 320) x274 (x418 x528)))
(define-fun x480 ((x528 Int)) Int (ite (= 320 x528) x274 (x137 x528)))
(define-fun x571 ((x528 Int)) Int (ite (= x528 352) x446 (x480 x528)))
(define-fun x670 ((x528 Int)) Int (ite (= 384 x528) 1000000000000000000000000000 (x571 x528)))
(define-fun x625 ((x528 Int)) Int (ite (= 320 x528) x505 (x418 x528)))
(define-fun x786 ((x528 Int)) Int (ite (= 320 x528) x505 (x625 x528)))
(define-fun x2 ((x528 Int)) Int (ite (= 352 x528) x446 (x786 x528)))
(define-fun x681 ((x528 Int)) Int (ite (= x528 384) 1000000000000000000000000000 (x2 x528)))
(define-fun x572 ((x528 Int)) Int (ite x796 (x670 x528) (x681 x528)))
(define-fun x300 ((x528 Int)) Int (ite (= x528 320) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x572 x528)))
(define-fun x337 ((x528 Int)) Int (ite (= 324 x528) x39 (x300 x528)))
(define-fun x579 ((x528 Int)) Int (ite (= 356 x528) x619 (x337 x528)))
(define-fun x145 ((x528 Int)) Int (ite (= 0 x528) 1 (x656 x528)))
(define-fun x13 ((x528 Int)) Int (ite x402 (x111 x528) (x279 x528)))
(define-fun x347 ((x528 Int)) Int (ite (= 320 x528) x276 (x13 x528)))
(define-fun x195 ((x528 Int)) Int (ite (= 320 x528) x276 (x347 x528)))
(define-fun x238 ((x528 Int)) Int (ite (= 352 x528) x268 (x195 x528)))
(define-fun x763 ((x528 Int)) Int (ite (= x528 384) 1000000000000000000000000000 (x238 x528)))
(define-fun x388 ((x528 Int)) Int (ite (= 320 x528) x678 (x13 x528)))
(define-fun x43 ((x528 Int)) Int (ite (= x528 320) x678 (x388 x528)))
(define-fun x464 ((x528 Int)) Int (ite (= 352 x528) x268 (x43 x528)))
(define-fun x582 ((x528 Int)) Int (ite (= x528 384) 1000000000000000000000000000 (x464 x528)))
(define-fun x595 ((x528 Int)) Int (ite x221 (x763 x528) (x582 x528)))
(define-fun x561 ((x528 Int)) Int (ite (= x528 320) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x595 x528)))
(define-fun x403 ((x528 Int)) Int (ite (= 324 x528) x558 (x561 x528)))
(define-fun x429 ((x528 Int)) Int (ite (= 356 x528) x450 (x403 x528)))
(define-fun x663 ((x528 Int)) Int (ite (= x528 0) 1 (x199 x528)))
(define-fun x231 ((x528 Int)) Int (ite x10 (x31 x528) (x289 x528)))
(define-fun x235 ((x528 Int)) Int (ite (= 320 x528) x46 (x231 x528)))
(define-fun x668 ((x528 Int)) Int (ite (= x528 320) x46 (x235 x528)))
(define-fun x153 ((x528 Int)) Int (ite (= 352 x528) x435 (x668 x528)))
(define-fun x311 ((x528 Int)) Int (ite (= 384 x528) 1000000000000000000000000000 (x153 x528)))
(define-fun x610 ((x528 Int)) Int (ite (= 320 x528) x223 (x231 x528)))
(define-fun x658 ((x528 Int)) Int (ite (= 320 x528) x223 (x610 x528)))
(define-fun x711 ((x528 Int)) Int (ite (= x528 352) x435 (x658 x528)))
(define-fun x243 ((x528 Int)) Int (ite (= x528 384) 1000000000000000000000000000 (x711 x528)))
(define-fun x647 ((x528 Int)) Int (ite x280 (x311 x528) (x243 x528)))
(define-fun x426 ((x528 Int)) Int (ite (= x528 320) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x647 x528)))
(define-fun x701 ((x528 Int)) Int (ite (= x528 324) x364 (x426 x528)))
(define-fun x471 ((x528 Int)) Int (ite (= x528 356) x366 (x701 x528)))
(define-fun x310 ((x528 Int)) Int (ite (= 0 x528) 1 (x512 x528)))
(define-fun x247 ((x129 Int) (x66 Int) (x211 Int) (x567 Int)) Bool (=> (and (<= x129 x211) (<= 0 x66) (>= x129 0) (<= x66 x567)) (<= (x677 x129 x66) (x677 x211 x567))))
(define-fun x212 ((x129 Int) (x66 Int) (x211 Int) (x567 Int)) Bool (=> (= x211 x129) (= (x677 x129 (- x66 x567)) (- (x677 x129 x66) (x677 x211 x567)))))
(assert (x59 x11))
(assert (x718 x631 (- x244 x341)))
(assert (= x511 (and (not x330) x693)))
(assert (x454 x149))
(assert (x218 x40))
(assert (x151 x442))
(assert (x718 x776 (- x79 x631)))
(assert (not (= (x717 x11 52) 1000000000000000000000000000)))
(assert (not (= (x717 x14 52) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x363 x442))
(assert (x454 x380))
(assert (=> (>= 10000 x442) (not (= x442 (x717 x442 52)))))
(assert (x454 x38))
(assert (x718 x244 (- x631 x79)))
(assert (x212 x244 x631 x40 x341))
(assert (x454 x515))
(assert (not (= 404098525 (x717 x33 1))))
(assert (x454 x52))
(assert (x454 x558))
(assert (not (= (x717 x33 1) 52)))
(assert (=> (>= 10000 x170) (not (= (x717 x124 1) x170))))
(assert (x212 x631 x244 x506 x214))
(assert (not (= (x717 x14 52) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (x454 x63))
(assert (x454 x549))
(assert (= x44 (and x122 x344)))
(assert (not (= (x717 x558 1) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (not (= (x717 x11 52) (x717 x33 1))))
(assert (not (= (x717 x124 1) (x717 x170 52))))
(assert (and (x309 x242 1461501637330902918203684832716283019655932542976) (x277 x242 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (* (x509 x242 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x102 x242 1461501637330902918203684832716283019655932542976)) x242)) (x698 x242 1461501637330902918203684832716283019655932542976)))
(assert (x212 x341 x40 x244 x631))
(assert (x454 x374))
(assert (x212 x79 x776 x631 x244))
(assert (= x410 (or x455 x302)))
(assert (x59 x364))
(assert (x454 x398))
(assert (x88 x51))
(assert (x212 x776 x79 x244 x631))
(assert (x454 x282))
(assert (x454 x696))
(assert (x454 x265))
(assert (x319 115792089237316195423570985008687907853269984665640064039457584007913129639935 x776))
(assert (x363 x526))
(assert (= x320 (=> (and (and (or x407 (and (not x407) (and (not (= x394 0)) (= (x141 x472) x394)))) (and (= x660 (x622 (+ 500000000000000000000000000 x184))) (not (< 340282366920938463463374607431768211455 x65)) (= x110 (x338 (- x741 x65))) (= x547 x275) (<= x741 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x615 0) (= x481 (x338 (- x615 x65))) (= 1000000000000000000000000000 x716) (= (x338 (- x741 x65)) x323) (<= 0 x127) (= x719 (x627 340282366920938463463374607431768211455 x481)) (= x381 (x627 1461501637330902918203684832716283019655932542975 x242)) (<= x127 1461501637330902918203684832716283019655932542975) (= x366 (x622 (+ x197 x519))) (= x113 (not x430)) (not (= 0 x65)) (= (x627 1461501637330902918203684832716283019655932542975 x242) x560) (= (x233 (* 1000000000000000000000000000 x40)) x184) (<= 0 x741) (= (x717 x14 52) x489) (= x407 (= x472 0)) (>= x40 0) (>= 1461501637330902918203684832716283019655932542975 x525) (= (x357 x489) x40) (= x779 (> x40 x714)) (= x441 (+ x719 x94)) (= x794 x560) (>= 1461501637330902918203684832716283019655932542975 x364) (= (x233 (* x366 1000000000000000000000000000)) x253) (= x283 x14) (= x77 (x141 x124)) (<= x14 1461501637330902918203684832716283019655932542975) (< 0 x77) (= x352 x554) (not (< x741 x65)) (= x519 x263) (< 0 x755) (= (x338 (- x408 x112)) x435) (>= x540 0) (= (x622 (+ 500000000000000000000000000 x167)) x29) (= x465 (not x779)) (>= 1461501637330902918203684832716283019655932542975 x472) (>= 340282366920938463463374607431768211455 x341) (not (> x112 x408)) (= (= 0 x341) x305) (= x685 x733) (= x618 x722) (<= x615 340282366920938463463374607431768211455) (= (x717 x14 52) x133) (<= 0 x525) (>= x472 0) (= (x717 x14 52) x765) (= x733 (not x498)) (= x185 (x357 x133)) (= (x357 x765) x615) x535 (= (x509 115792089237316195423570985008687907853269984665640064039457584007913129639935 x341) x714) (>= 1461501637330902918203684832716283019655932542975 x540) (= x535 (= x486 x431)) (> 340282366920938463463374607431768211456 x615) (not (< x615 x65)) (not (> 2113256763 x118)) (= x246 x592) (< x472 1461501637330902918203684832716283019655932542976) (= (x509 x29 1000000000000000000000000000) x112) (> x428 0) (= (or x305 x465) x154) (= x755 (ite x685 1 0)) (= x275 0) (= x516 (x622 (+ x253 500000000000000000000000000))) (<= x40 340282366920938463463374607431768211455) (= x381 x568) (= x130 (x717 x14 52)) (>= 340282366920938463463374607431768211455 x185) (> 340282366920938463463374607431768211456 x341) (= x618 (not x113)) (>= x341 0) (< x40 340282366920938463463374607431768211456) (= x431 (- x441 x185)) (= x498 (< 115792089237316195423570985008687907853269984665640 x40)) (not (< x118 3018967357)) (= (x233 (x677 x40 x341)) x167) (= x127 x412) (= x341 (x707 x130)) (>= x185 0) (= 3607235850 x118) (= x237 x540) (= (x627 1461501637330902918203684832716283019655932542975 x412) x568) (= x692 x237) (= x364 x54) (= x667 0) (not (< x118 3607235850)) (= (< 115792089237316195423570985008687907853269984665640 x366) x430) (= 1000000000000000000000000000 x552) (= x197 x537) (= (x509 x660 1000000000000000000000000000) x408) (= (x627 1461501637330902918203684832716283019655932542975 x412) x794) (= (ite x722 1 0) x667) (= x428 (ite x154 1 0)) (= (x509 x516 1000000000000000000000000000) x65))) (= x152 x592)) x478)))
(assert (= x699 (and x356 (not x684))))
(assert (x247 x99 x374 x506 x214))
(assert (x454 x237))
(assert (=> (= (x717 x14 52) (x717 x170 52)) (= x14 x170)))
(assert (x718 x776 (- x79 x374)))
(assert (= x196 (=> (and (= (= x124 x32) x753) (= x32 (x627 1461501637330902918203684832716283019655932542975 x527))) (and (=> (and (and (= x107 x785) (= x473 x488) (= x87 x472) (= x371 x313) (= x81 x315)) x753) x468) (=> (and (and (= x630 2835717307) (not (= 599290589 x630)) (= x619 x513) (= (or (and (> 64 x324) (= true (<= x324 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324)) x684) (not (= 1889567281 x630)) (not (= x630 404098525)) (>= x785 0) (= (x627 1461501637330902918203684832716283019655932542975 x527) x39) (not (= 157198259 x630)) (>= 1461501637330902918203684832716283019655932542975 x785) (> 1461501637330902918203684832716283019655932542976 x785) (= x39 x86) (= 320 x784) (= 68 x767) (= x358 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x189 (x141 x400)) (= x324 (x338 (- x767 4))) (not (> 4 x767)) (< 0 x189)) (not x753)) (and (=> x684 x524) (=> (and (not x684) (and (= x86 x690) (= true x536))) (and (=> (not x536) x524) (=> (and x536 (and (= x148 x513) (= (< x628 x619) x9) (= x628 (x190 x682)) (<= 0 x628) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x628) (= x682 (x717 x124 1)))) (and (=> x9 x524) (=> (and (= x518 (> x513 x628)) (not x9)) (and (=> x518 x524) (=> (and (not x518) (and (= x106 (x338 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x513))) (= x414 (x732 x734)) (<= x414 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x414 0) (= (x717 x86 1) x734) (= (> x414 x106) x71) (= x230 (x717 x124 1)) (= (x338 (- x628 x513)) x67))) (and (=> x71 x524) (=> (and (and (= x652 (< x156 x414)) (= (x622 (+ x414 x513)) x156)) (not x71)) (and (=> (and (not x652) (and (= 1 x217) (= x762 32) (= x371 x696) (= x38 x488) (= x401 x472) (= x785 x131) (= x315 x495) (= (x717 x86 1) x601))) x539) (=> x652 x524)))))))))))))))))
(assert (x212 x99 x374 x244 x631))
(assert (x454 x260))
(assert (x218 (- x341 x506)))
(assert (x319 115792089237316195423570985008687907853269984665640064039457584007913129639935 x214))
(assert (= (and (not x499) x205) x333))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x717 x442 52))))
(assert (not (= (x717 x86 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (>= 10000 x86) (not (= (x717 x442 52) x86))))
(assert (not (= (x717 x11 52) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (= (and x693 x330) x444))
(assert (x454 x229))
(assert (x218 x366))
(assert (not (= (x717 x747 1) (x717 x11 52))))
(assert (x454 x615))
(assert (x718 x776 (- x79 x99)))
(assert (x454 x488))
(assert (not (= (x717 x747 1) 599290589)))
(assert (not (= 52 (x717 x442 52))))
(assert (and (and (= (* (- x374 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (x677 1000000000000000000000000000 (- x374 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x374 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x374 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x374 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x374) (- (* 1000000000000000000000000000 x374) (* x374 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 1000000000000000000000000000 x374) (= (x677 1000000000000000000000000000 x374) (* x374 1000000000000000000000000000)) (x329 1000000000000000000000000000 x374) (x487 1000000000000000000000000000 x374) (x790 1000000000000000000000000000 x374) (x726 1000000000000000000000000000 x374)))
(assert (not (= (x717 x291 52) 3607235850)))
(assert (x247 x244 x631 x374 x99))
(assert (=> (>= 10000 x86) (not (= (x717 x747 1) x86))))
(assert (=> (>= 10000 x442) (not (= (x717 x86 1) x442))))
(assert (x212 x244 x631 x79 x776))
(assert (x212 x99 x374 x776 x79))
(assert (not (= 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x717 x291 52))))
(assert (not (= (x717 x558 1) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x454 x476))
(assert (not (= (x717 x558 1) 52)))
(assert (not (= 1 (x717 x124 1))))
(assert (not (= (x717 x170 52) 1)))
(assert (x363 x527))
(assert (not (= (x717 x558 1) 2113256763)))
(assert (not (= (x717 x747 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x48 340282366920938463463374607431768211456))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x717 x11 52))))
(assert (x454 x227))
(assert (=> (>= 10000 x747) (not (= x747 (x717 x747 1)))))
(assert (=> (<= x87 10000) (not (= x87 (x717 x11 52)))))
(assert (x212 x79 x776 x214 x506))
(assert (=> (<= x33 10000) (not (= x33 (x717 x442 52)))))
(assert (x454 x401))
(assert (x212 x244 x631 x506 x214))
(assert (x454 x575))
(assert (x454 x767))
(assert (not (= (x717 x442 52) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (x454 x39))
(assert (x59 x442))
(assert (= x210 (and (not x485) x193)))
(assert (x454 x510))
(assert (x454 x370))
(assert (not (= (x717 x170 52) 1000000000000000000000000000)))
(assert (x718 x244 (- x631 x776)))
(assert (x454 x217))
(assert (x454 x669))
(assert (and (and (= (* (- x40 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (x677 1000000000000000000000000000 (- x40 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x40 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x40 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x40 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x40) (- (* 1000000000000000000000000000 x40) (* x40 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 1000000000000000000000000000 x40) (= (x677 1000000000000000000000000000 x40) (* x40 1000000000000000000000000000)) (x329 1000000000000000000000000000 x40) (x487 1000000000000000000000000000 x40) (x790 1000000000000000000000000000 x40) (x726 1000000000000000000000000000 x40)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x717 x14 52))))
(assert (=> (>= 10000 x11) (not (= (x717 x170 52) x11))))
(assert (= (or x44 x95 x174) x83))
(assert (not (= (x717 x364 1) (x717 x11 52))))
(assert (x454 x448))
(assert (not (= (x717 x33 1) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (x88 x612))
(assert (x454 x481))
(assert (x454 x560))
(assert (=> (>= 10000 x124) (not (= x124 (x717 x747 1)))))
(assert (not (= (x717 x364 1) 52)))
(assert (x454 x32))
(assert (x212 x631 x244 x214 x506))
(assert (x59 x33))
(assert (=> (>= 10000 x747) (not (= (x717 x14 52) x747))))
(assert (x454 x315))
(assert (=> (>= 10000 x400) (not (= x400 (x717 x170 52)))))
(assert (x454 x33))
(assert (x454 x45))
(assert (x718 x40 (- x341 x244)))
(assert (= x721 (and (not x453) x511)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x717 x364 1))))
(assert (not (= 340282366920938463463374607431768211456 (x717 x33 1))))
(assert (not (= (x717 x364 1) 497176382)))
(assert (not (= (x717 x442 52) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (not (= (x717 x33 1) 826074471)))
(assert (x247 x99 x374 x244 x631))
(assert (x218 (- x79 x631)))
(assert (= (and x226 x93) x163))
(assert (and (x296 x37 1000000000000000000000000000) (x706 x37 1000000000000000000000000000) (x463 x37 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x37 0)) (and (>= x37 (* (x509 x37 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x37 1000000000000000000000000000)) (- x37 1000000000000000000000000000)))) (x69 x37 1000000000000000000000000000)))
(assert (x454 x100))
(assert (x718 x79 (- x776 x341)))
(assert (=> (>= 10000 x87) (not (= (x717 x364 1) x87))))
(assert (x454 x67))
(assert (x218 (- x99 x40)))
(assert (x454 x570))
(assert (x218 (- x631 x341)))
(assert (x218 (- x214 x631)))
(assert (x454 x312))
(assert (not (= (x717 x124 1) 1461501637330902918203684832716283019655932542975)))
(assert (x454 x428))
(assert (x454 x16))
(assert (x454 x307))
(assert (= x632 (and x198 x269)))
(assert (not (= (x717 x170 52) 340282366920938463463374607431768211455)))
(assert (x454 x368))
(assert (x454 x185))
(assert (not (= (x717 x291 52) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (=> (= (x717 x558 1) (x717 x747 1)) (= x747 x558)))
(assert (x454 x384))
(assert (=> (<= x107 10000) (not (= x107 (x717 x442 52)))))
(assert (x454 x667))
(assert (x454 x552))
(assert (not (= (x717 x364 1) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (=> (<= x364 10000) (not (= x364 (x717 x442 52)))))
(assert (=> (= (x717 x747 1) (x717 x124 1)) (= x124 x747)))
(assert (x454 x220))
(assert (=> (<= x107 10000) (not (= (x717 x14 52) x107))))
(assert (x454 x110))
(assert (x218 (- x506 x40)))
(assert (not (= (x717 x364 1) 826074471)))
(assert (=> (= (x717 x558 1) (x717 x86 1)) (= x558 x86)))
(assert (x247 x341 x40 x506 x214))
(assert (x718 x374 x99))
(assert (x454 x754))
(assert (x454 x385))
(assert (=> (<= x364 10000) (not (= x364 (x717 x14 52)))))
(assert (=> (<= x472 10000) (not (= x472 (x717 x14 52)))))
(assert (not (= 404098525 (x717 x558 1))))
(assert (x454 x156))
(assert (x454 x106))
(assert (x454 x22))
(assert (x212 x40 x341 x776 x79))
(assert (x212 x341 x40 x776 x79))
(assert (= (and x270 x68) x339))
(assert (not (= (x717 x86 1) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (=> (<= x170 10000) (not (= (x717 x558 1) x170))))
(assert (x454 x187))
(assert (x48 1461501637330902918203684832716283019655932542976))
(assert (x718 x631 (- x244 x40)))
(assert (not (= 599290589 (x717 x442 52))))
(assert (x454 x620))
(assert (x454 x477))
(assert (x218 (- x341 x776)))
(assert (=> (>= 10000 x170) (not (= (x717 x14 52) x170))))
(assert (=> (>= 10000 x170) (not (= x170 (x717 x170 52)))))
(assert (x363 1461501637330902918203684832716283019655932542975))
(assert (x454 x246))
(assert (not (= 340282366920938463463374607431768211455 (x717 x291 52))))
(assert (not (= (x717 x364 1) 115792089237316195423570985008687907853269984665640)))
(assert (and (and (= (* (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x677 3 (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x425) (- (* 3 x425) (* x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 3 x425) (= (x677 3 x425) (* x425 3)) (x329 3 x425) (x487 3 x425) (x790 3 x425) (x726 3 x425)))
(assert (not (= (x717 x364 1) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (=> (>= 10000 x87) (not (= (x717 x124 1) x87))))
(assert (=> (<= x785 10000) (not (= x785 (x717 x364 1)))))
(assert (x454 x791))
(assert (=> (<= x785 10000) (not (= x785 (x717 x170 52)))))
(assert (x454 x559))
(assert (x247 x244 x631 x79 x776))
(assert (x454 x565))
(assert (x454 x626))
(assert (=> (>= 10000 x170) (not (= (x717 x364 1) x170))))
(assert (not (= (x717 x291 52) 157198259)))
(assert (= x97 (or x402 x89)))
(assert (= x256 (and (not x204) x35)))
(assert (x454 x138))
(assert (x454 x255))
(assert (not (= (x717 x170 52) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (=> (>= 10000 x558) (not (= x558 (x717 x747 1)))))
(assert (x454 x473))
(assert (x454 x215))
(assert (=> (<= x124 10000) (not (= x124 (x717 x558 1)))))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x717 x442 52))))
(assert (x454 x543))
(assert (not (= (x717 x124 1) 52)))
(assert (x454 x295))
(assert (not (= (x717 x14 52) 1889567281)))
(assert (x218 (- x341 x374)))
(assert (= x10 (and x407 x391)))
(assert (=> (<= x107 10000) (not (= x107 (x717 x170 52)))))
(assert (not (= (x717 x11 52) 340282366920938463463374607431768211455)))
(assert (x454 x381))
(assert (x454 x400))
(assert (= (and x53 x71) x648))
(assert (not (= (x717 x86 1) 2835717307)))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x717 x11 52))))
(assert (x454 x771))
(assert (x218 (- x506 x79)))
(assert (x454 x414))
(assert (=> (<= x785 10000) (not (= x785 (x717 x442 52)))))
(assert (x454 x341))
(assert (= (and x349 (not x458)) x89))
(assert (and (x296 x503 1000000000000000000000000000) (x706 x503 1000000000000000000000000000) (x463 x503 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x503 0)) (and (>= x503 (* (x509 x503 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x503 1000000000000000000000000000)) (- x503 1000000000000000000000000000)))) (x69 x503 1000000000000000000000000000)))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x717 x170 52))))
(assert (=> (= (x717 x170 52) (x717 x11 52)) (= x170 x11)))
(assert (x218 (- x99 x506)))
(assert (x454 x450))
(assert (x454 x304))
(assert (not (= (x717 x14 52) 500000000000000000000000000)))
(assert (x218 (- x631 x506)))
(assert (not (= (x717 x11 52) 340282366920938463463374607431768211456)))
(assert (x212 x79 x776 x99 x374))
(assert (x48 x481))
(assert (x454 x61))
(assert (x212 x99 x374 x341 x40))
(assert (not (= (x717 x86 1) 1889567281)))
(assert (x454 x590))
(assert (not (= (x717 x86 1) 1461501637330902918203684832716283019655932542976)))
(assert (x247 x214 x506 x79 x776))
(assert (x212 x776 x79 x99 x374))
(assert (x218 (- x374 x79)))
(assert (=> (= (x717 x86 1) (x717 x364 1)) (= x86 x364)))
(assert (x454 x216))
(assert (x454 x619))
(assert (x718 x506 (- x214 x776)))
(assert (not (= (x717 x747 1) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (not (= (x717 x291 52) 340282366920938463463374607431768211456)))
(assert (=> (>= 10000 x87) (not (= x87 (x717 x86 1)))))
(assert (x718 x374 (- x99 x214)))
(assert (not (= (x717 x170 52) (x717 x86 1))))
(assert (x454 x700))
(assert (x454 x408))
(assert (x454 x466))
(assert (= (or x163 x280) x207))
(assert (=> (<= x472 10000) (not (= x472 (x717 x124 1)))))
(assert (=> (<= x442 10000) (not (= x442 (x717 x747 1)))))
(assert (=> (= (x717 x14 52) (x717 x442 52)) (= x442 x14)))
(assert (x454 x419))
(assert (x454 x461))
(assert (x718 x776 (- x79 x214)))
(assert (x454 x736))
(assert (x454 x94))
(assert (x218 (- x631 x99)))
(assert (=> (>= 10000 x33) (not (= x33 (x717 x124 1)))))
(assert (x718 x214 (- x506 x244)))
(assert (x212 x374 x99 x341 x40))
(assert (x218 (- x506 x631)))
(assert (= (and (not x128) x256) x693))
(assert (x454 x787))
(assert (x454 x245))
(assert (x454 x358))
(assert (x454 x376))
(assert (x454 x386))
(assert (not (= (x717 x170 52) 3018967357)))
(assert (x454 x58))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x717 x747 1))))
(assert (x454 x383))
(assert (not (= (x717 x364 1) 2113256763)))
(assert (=> (>= 10000 x87) (not (= x87 (x717 x33 1)))))
(assert (x454 x351))
(assert (x48 x442))
(assert (=> (<= x747 10000) (not (= (x717 x170 52) x747))))
(assert (= (and x434 x518) x581))
(assert (not (= (x717 x291 52) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (x454 x533))
(assert (x212 x631 x244 x776 x79))
(assert (x718 x506 (- x214 x341)))
(assert (=> (>= 10000 x472) (not (= (x717 x364 1) x472))))
(assert (not (= (x717 x14 52) 2113256763)))
(assert (x454 x664))
(assert (x218 (- x79 x99)))
(assert (not (= (x717 x11 52) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (x88 x208))
(assert (not (= (x717 x747 1) 2835717307)))
(assert (x454 x40))
(assert (x718 x214 (- x506 x40)))
(assert (x454 x557))
(assert (x212 x341 x40 x214 x506))
(assert (not (= 3607235850 (x717 x442 52))))
(assert (x454 x54))
(assert (= (or x744 (and (not x222) x76)) x205))
(assert (= (and x207 x188) x7))
(assert (x59 x14))
(assert (x218 x588))
(assert (x454 x51))
(assert (not (= 340282366920938463463374607431768211455 (x717 x364 1))))
(assert (x454 x5))
(assert (not (= 157198259 (x717 x86 1))))
(assert (not (= (x717 x14 52) 497176382)))
(assert (x454 x77))
(assert (not (= (x717 x33 1) 497176382)))
(assert (not (= (x717 x291 52) (x717 x33 1))))
(assert (x212 x79 x776 x374 x99))
(assert (= x297 (and x193 x485)))
(assert (x212 x341 x40 x99 x374))
(assert (not (= 826074471 (x717 x291 52))))
(assert (= (or x10 x672) x93))
(assert (and (x296 x516 1000000000000000000000000000) (x706 x516 1000000000000000000000000000) (x463 x516 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x516 0)) (and (>= x516 (* (x509 x516 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x516 1000000000000000000000000000)) (- x516 1000000000000000000000000000)))) (x69 x516 1000000000000000000000000000)))
(assert (x454 x78))
(assert (x218 (- x341 x79)))
(assert (x247 x244 x631 x506 x214))
(assert (x454 x694))
(assert (and (x309 x412 1461501637330902918203684832716283019655932542976) (x277 x412 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (* (x509 x412 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x102 x412 1461501637330902918203684832716283019655932542976)) x412)) (x698 x412 1461501637330902918203684832716283019655932542976)))
(assert (=> (<= x87 10000) (not (= x87 (x717 x170 52)))))
(assert (=> (>= 10000 x86) (not (= (x717 x33 1) x86))))
(assert (= x710 (=> (and (and (= (x101 x219) x788) (<= x259 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x170) (<= 0 x469) (>= 1461501637330902918203684832716283019655932542975 x469) (not (< x544 404098525)) (<= 0 x259) (<= 0 x788) (= x219 (x717 x170 52)) (= x283 x170) (= (x141 x124) x461) (<= x788 340282366920938463463374607431768211455) (>= x299 0) (= x412 x469) (= x299 x793) (< x544 2113256763) (= x788 x609) (not (= 404098525 x544)) (= 0 x616) (= x692 x793) (< x544 826074471) (= x544 497176382) (= x616 x547) (> 340282366920938463463374607431768211456 x788) (> x461 0) (<= x299 1461501637330902918203684832716283019655932542975)) (and (and (and (not (= 404098525 x510)) (= (x41 x482) x529) (= x482 (x717 x124 1)) (<= x124 1461501637330902918203684832716283019655932542975) (<= x281 1461501637330902918203684832716283019655932542975) (not (= 157198259 x510)) (<= 0 x529) (= x529 x395) (<= 0 x496) (= x229 x490) (<= 0 x229) (not (= 599290589 x510)) (= x594 x117) (= x281 x412) (= x547 x494) (<= 0 x281) (<= x529 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x534 (x141 x400)) (= x692 x490) (<= x229 1461501637330902918203684832716283019655932542975) (= 0 x494) (<= x496 1461501637330902918203684832716283019655932542975) (= x510 1889567281) (> x534 0)) (and (or (and (not x485) (and (= x5 (x509 115792089237316195423570985008687907853269984665640064039457584007913129639935 x631)) (> 1461501637330902918203684832716283019655932542976 x332) (= x340 (< x5 x244)) (= (ite x502 1 0) x60) (= x3 x507) (>= 1461501637330902918203684832716283019655932542975 x332) (> x60 0) (= x260 (x622 (+ 500000000000000000000000000 x168))) (= x168 (x233 (x677 x244 x631))) (= x750 (= 0 x631)) (= (or x378 x750) x502) (= (x603 128) x631) (= (not x340) x378) (= (x509 x260 1000000000000000000000000000) x3) (<= 0 x332))) (and (= x507 0) x485)) (and (< x78 2113256763) (= x485 (= 0 x244)) (not (> 404098525 x78)) (< x78 826074471) (<= 0 x26) (= x395 x288) (>= 1461501637330902918203684832716283019655932542975 x723) (= (x141 x124) x390) (>= 1461501637330902918203684832716283019655932542975 x368) (> x390 0) (= x758 0) (= 404098525 x78) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x244) (<= 0 x723) (>= x244 0) (<= 0 x368) (= x758 x547) (= x368 x412) (= x266 x26) (>= 1461501637330902918203684832716283019655932542975 x26) (= x692 x266)))) (and (= x30 0) (<= x437 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 404098525 x312)) (= x728 x692) (>= 1461501637330902918203684832716283019655932542975 x591) (= x138 (x141 x400)) (= x728 x780) (>= x437 0) (= x21 (x717 x33 1)) (= x591 x412) (<= 0 x591) (= (x41 x21) x437) (<= x254 1461501637330902918203684832716283019655932542975) (= x620 x609) (<= 0 x254) (= 1889567281 x312) (<= 0 x780) (= x437 x117) (>= 1461501637330902918203684832716283019655932542975 x33) (= x54 x33) (not (= 157198259 x312)) (= x30 x547) (>= 1461501637330902918203684832716283019655932542975 x780) (not (= x312 599290589)) (< 0 x138)))) x108)))
(assert (=> (= (x717 x33 1) (x717 x558 1)) (= x33 x558)))
(assert (x454 x239))
(assert (not (= 1 (x717 x33 1))))
(assert (x454 x435))
(assert (= (and (not x71) x53) x240))
(assert (and (x296 x75 1000000000000000000000000000) (x706 x75 1000000000000000000000000000) (x463 x75 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x75 0)) (and (>= x75 (* (x509 x75 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x75 1000000000000000000000000000)) (- x75 1000000000000000000000000000)))) (x69 x75 1000000000000000000000000000)))
(assert (= (and x699 x536) x252))
(assert (x454 x147))
(assert (=> (<= x14 10000) (not (= (x717 x364 1) x14))))
(assert (x218 (- x244 x99)))
(assert (not (= (x717 x33 1) 500000000000000000000000000)))
(assert (not (= 2113256763 (x717 x11 52))))
(assert (not (= (x717 x86 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (<= x291 10000) (not (= x291 (x717 x11 52)))))
(assert (x718 x214 (- x506 x374)))
(assert (=> (>= 10000 x11) (not (= x11 (x717 x86 1)))))
(assert (not (= (x717 x124 1) 3018967357)))
(assert (=> (>= 10000 x33) (not (= x33 (x717 x558 1)))))
(assert (x59 x785))
(assert (x218 (- x506 x341)))
(assert (=> (>= 10000 x291) (not (= (x717 x364 1) x291))))
(assert (x218 (- x631 x374)))
(assert (not (= 500000000000000000000000000 (x717 x11 52))))
(assert (x454 x616))
(assert (not (= (x717 x11 52) 599290589)))
(assert (x718 x99 (- x374 x214)))
(assert (x454 x268))
(assert (= x134 1000000000000000000000000000))
(assert (not (= (x717 x14 52) 52)))
(assert (x218 (- x99 x631)))
(assert (x454 x624))
(assert (x454 x165))
(assert (x218 (- x341 x631)))
(assert (not (= (x717 x291 52) (x717 x364 1))))
(assert (x48 x526))
(assert (x454 x537))
(assert (x454 x695))
(assert (= 1000000000000000000000000000 x791))
(assert (not (= (x717 x291 52) (x717 x747 1))))
(assert (x454 x254))
(assert (not (= (x717 x33 1) 157198259)))
(assert (x247 x776 x79 x506 x214))
(assert (x718 x79 (- x776 x244)))
(assert (x454 x738))
(assert (x454 x3))
(assert (not (= (x717 x291 52) 1889567281)))
(assert (x212 x244 x631 x374 x99))
(assert (x247 x214 x506 x374 x99))
(assert (not (= 3018967357 (x717 x11 52))))
(assert (not (= (x717 x747 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (and (and (= (* (- x366 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (x677 1000000000000000000000000000 (- x366 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x366 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x366 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x366 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x366) (- (* 1000000000000000000000000000 x366) (* x366 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 1000000000000000000000000000 x366) (= (x677 1000000000000000000000000000 x366) (* x366 1000000000000000000000000000)) (x329 1000000000000000000000000000 x366) (x487 1000000000000000000000000000 x366) (x790 1000000000000000000000000000 x366) (x726 1000000000000000000000000000 x366)))
(assert (x218 (- x506 x374)))
(assert (= x672 (and x391 (not x407))))
(assert (= x183 (=> (= (= x124 x558) x322) (and (=> (and (and (= x389 x473) (= x107 x748) (= x506 x730)) x322) x200) (=> (and (and (= x754 (x141 x400)) (<= x107 1461501637330902918203684832716283019655932542975) (not (= 599290589 x385)) (= 68 x736) (not (= 404098525 x385)) (not (= 1889567281 x385)) (= x629 (x338 (- x736 4))) (= x142 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 320 x798) (= x760 x450) (> x754 0) (= 2835717307 x385) (< x107 1461501637330902918203684832716283019655932542976) (= x558 x396) (not (= 157198259 x385)) (>= x107 0) (= (or (and (< x629 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x629) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x629)) x520) (not (> 4 x736))) (not x322)) (and (=> x520 x457) (=> (and (not x520) (= true x346)) (and (=> (not x346) x457) (=> (and x346 (and (<= x144 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x144 0) (= x144 (x634 x432)) (= x700 x760) (= x432 (x717 x124 1)) (= x204 (< x144 x450)))) (and (=> (and (= x128 (> x760 x144)) (not x204)) (and (=> (and (not x128) (and (= x58 (x338 (- x144 x760))) (= x727 (x717 x558 1)) (= x70 (x792 x727)) (= (x338 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x760)) x63) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x70) (= (x717 x124 1) x797) (= (< x63 x70) x330) (<= 0 x70))) (and (=> (and (not x330) (and (= (x622 (+ x760 x70)) x466) (= (< x466 x70) x453))) (and (=> (and (and (= 32 x45) (= x107 x98) (= (x717 x558 1) x273) (= x295 x730) (= x448 1) (= x473 x158)) (not x453)) x359) (=> x453 x457))) (=> x330 x457))) (=> x128 x457))) (=> x204 x457)))))))))))
(assert (x212 x40 x341 x244 x631))
(assert (x454 x382))
(assert (x247 x631 x244 x79 x776))
(assert (x454 x452))
(assert (not (= (x717 x558 1) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (=> (<= x87 10000) (not (= (x717 x558 1) x87))))
(assert (x454 x197))
(assert (not (= (x717 x291 52) 404098525)))
(assert (x718 x214 (- x506 x99)))
(assert (not (= (x717 x747 1) 3607235850)))
(assert (x454 x748))
(assert (x454 x121))
(assert (x454 x362))
(assert (x212 x214 x506 x99 x374))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x717 x33 1))))
(assert (x454 x134))
(assert (x247 x631 x244 x40 x341))
(assert (x218 (- x244 x374)))
(assert (x454 x81))
(assert (not (= (x717 x558 1) 340282366920938463463374607431768211456)))
(assert (x218 (- x40 x776)))
(assert (x718 x99 (- x374 x776)))
(assert (and (and (= (* (- x79 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (x677 1000000000000000000000000000 (- x79 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x79 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x79 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x79 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x79) (- (* 1000000000000000000000000000 x79) (* x79 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 1000000000000000000000000000 x79) (= (x677 1000000000000000000000000000 x79) (* x79 1000000000000000000000000000)) (x329 1000000000000000000000000000 x79) (x487 1000000000000000000000000000 x79) (x790 1000000000000000000000000000 x79) (x726 1000000000000000000000000000 x79)))
(assert (not (= 2113256763 (x717 x33 1))))
(assert (x454 x592))
(assert (=> (>= 10000 x442) (not (= x442 (x717 x364 1)))))
(assert (= x640 (and x205 x499)))
(assert (not (= 340282366920938463463374607431768211455 (x717 x747 1))))
(assert (x59 x107))
(assert (=> (>= 10000 x400) (not (= x400 (x717 x33 1)))))
(assert (x718 x506 (- x214 x99)))
(assert (=> (<= x472 10000) (not (= x472 (x717 x86 1)))))
(assert (x454 x142))
(assert (x247 x374 x99 x40 x341))
(assert (not (= (x717 x170 52) 52)))
(assert (x454 x715))
(assert (not (= (x717 x14 52) 115792089237316195423570985008687907853269984665640)))
(assert (x454 x534))
(assert (not (= 52 (x717 x747 1))))
(assert (x454 x676))
(assert (not (= 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x717 x86 1))))
(assert (x454 x355))
(assert (x454 x546))
(assert (not (= (x717 x364 1) 3018967357)))
(assert (x454 x679))
(assert (= (and x198 (not x269)) x251))
(assert (not (= 1889567281 (x717 x170 52))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x717 x364 1))))
(assert (x218 (- x776 x374)))
(assert (= x497 (and (not x68) x270)))
(assert (x218 (- x776 x40)))
(assert (not (= (x717 x14 52) 340282366920938463463374607431768211456)))
(assert (x454 x799))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x717 x170 52))))
(assert (x454 x674))
(assert (x454 x420))
(assert (= x349 (or x171 x556)))
(assert (x212 x506 x214 x244 x631))
(assert (not (= (x717 x747 1) (x717 x14 52))))
(assert (x718 x506 (- x214 x40)))
(assert (= (=> (and (= x87 x401) (= x81 x495) (= x696 x313) (= x107 x131) (= x38 x473) (> x286 0)) x468) x241))
(assert (x718 x214 (- x506 x79)))
(assert (and (x296 x570 1000000000000000000000000000) (x706 x570 1000000000000000000000000000) (x463 x570 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x570 0)) (and (>= x570 (* (x509 x570 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x570 1000000000000000000000000000)) (- x570 1000000000000000000000000000)))) (x69 x570 1000000000000000000000000000)))
(assert (not (= (x717 x14 52) (x717 x558 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x717 x170 52))))
(assert (x247 x631 x244 x374 x99))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x717 x86 1))))
(assert (x454 x14))
(assert (x454 x494))
(assert (x718 x341 (- x40 x506)))
(assert (=> (>= 10000 x558) (not (= x558 (x717 x364 1)))))
(assert (x212 x244 x631 x99 x374))
(assert (x454 x594))
(assert (x319 115792089237316195423570985008687907853269984665640064039457584007913129639935 x99))
(assert (=> (>= 10000 x442) (not (= (x717 x14 52) x442))))
(assert (=> (<= x400 10000) (not (= x400 (x717 x747 1)))))
(assert (=> (<= x107 10000) (not (= x107 (x717 x86 1)))))
(assert (x454 x413))
(assert (x88 x631))
(assert (=> (<= x785 10000) (not (= (x717 x747 1) x785))))
(assert (x454 x541))
(assert (and (x309 x398 340282366920938463463374607431768211456) (x277 x398 340282366920938463463374607431768211456) (=> (< 0 340282366920938463463374607431768211456) (= (+ (* (x509 x398 340282366920938463463374607431768211456) 340282366920938463463374607431768211456) (x102 x398 340282366920938463463374607431768211456)) x398)) (x698 x398 340282366920938463463374607431768211456)))
(assert (x218 (- x374 x244)))
(assert (=> (<= x558 10000) (not (= (x717 x33 1) x558))))
(assert (= x655 (or x749 (and x83 (not x103)))))
(assert (x454 x184))
(assert (x212 x79 x776 x244 x631))
(assert (not (= (x717 x291 52) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (=> (>= 10000 x124) (not (= x124 (x717 x124 1)))))
(assert (not (= 500000000000000000000000000 (x717 x442 52))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x717 x170 52))))
(assert (=> (>= 10000 x107) (not (= x107 (x717 x291 52)))))
(assert (x48 x398))
(assert (= (and x4 (not x651)) x203))
(assert (=> (<= x558 10000) (not (= (x717 x14 52) x558))))
(assert (x88 x37))
(assert (x454 x345))
(assert (x88 x503))
(assert (x454 x242))
(assert (not (= (x717 x291 52) 3018967357)))
(assert (x218 (- x776 x506)))
(assert (x454 x209))
(assert (not (= (x717 x364 1) (x717 x14 52))))
(assert (not (= 3607235850 (x717 x14 52))))
(assert (not (= (x717 x124 1) 340282366920938463463374607431768211456)))
(assert (not (= 404098525 (x717 x86 1))))
(assert (x247 x79 x776 x506 x214))
(assert (x454 x118))
(assert (x218 3))
(assert (not (= (x717 x747 1) 500000000000000000000000000)))
(assert (=> (>= 10000 x33) (not (= x33 (x717 x33 1)))))
(assert (not (= (x717 x558 1) (x717 x291 52))))
(assert (=> (<= x747 10000) (not (= (x717 x11 52) x747))))
(assert (not (= (x717 x14 52) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (x454 x393))
(assert (x247 x40 x341 x506 x214))
(assert (=> (>= 10000 x291) (not (= (x717 x747 1) x291))))
(assert (= x249 (and (not x373) x410)))
(assert (= (=> (and (and (= x68 (= x45 0)) (> x448 0)) (or (and (and (= x778 (not x284)) (= (ite x778 1 0) x164) (= x284 (= x291 0)) (= x45 32)) (not x68)) (and (and (= (x141 x107) x397) (> x397 0) (= x164 1)) x68))) x764) x671))
(assert (x454 x104))
(assert (x718 x374 (- x99 x79)))
(assert (=> (<= x785 10000) (not (= x785 (x717 x124 1)))))
(assert (x218 (- x214 x79)))
(assert (and (x296 x409 1000000000000000000000000000) (x706 x409 1000000000000000000000000000) (x463 x409 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x409 0)) (and (>= x409 (* (x509 x409 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x409 1000000000000000000000000000)) (- x409 1000000000000000000000000000)))) (x69 x409 1000000000000000000000000000)))
(assert (x218 (- x506 x99)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x717 x291 52))))
(assert (x218 (- x244 x79)))
(assert (x212 x214 x506 x341 x40))
(assert (x454 x367))
(assert (x218 (- x776 x631)))
(assert (x218 x450))
(assert (not (= 404098525 (x717 x747 1))))
(assert (= (and x103 x83) x749))
(assert (=> (<= x14 10000) (not (= (x717 x442 52) x14))))
(assert (not (= 404098525 (x717 x364 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x717 x124 1))))
(assert (not (= (x717 x14 52) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (= (or x796 x673) x172))
(assert (x718 x244 (- x631 x341)))
(assert (=> (>= 10000 x747) (not (= (x717 x364 1) x747))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x717 x558 1))))
(assert (not (= 599290589 (x717 x33 1))))
(assert (not (= (x717 x33 1) 2835717307)))
(assert (not (= (x717 x86 1) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (not (= (x717 x442 52) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x454 x660))
(assert (= x200 (=> (and (and (and (and (= x562 x412) (= x683 x34) (= x705 x692) (= x55 x705) (= x215 (x484 x460)) (= x688 0) (= x1 (x141 x400)) (<= x55 1461501637330902918203684832716283019655932542975) (>= x215 0) (>= 1461501637330902918203684832716283019655932542975 x602) (not (= x738 599290589)) (<= x562 1461501637330902918203684832716283019655932542975) (not (= 404098525 x738)) (>= 1461501637330902918203684832716283019655932542975 x124) (<= 0 x562) (= x738 1889567281) (= x460 (x717 x124 1)) (= x547 x688) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1 0) (= x215 x258) (>= x55 0) (not (= 157198259 x738)) (<= 0 x602)) (and (or (and (not x373) (and (= x679 (x509 115792089237316195423570985008687907853269984665640064039457584007913129639935 x214)) (= (or x416 x343) x206) (= (x622 (+ 500000000000000000000000000 x224)) x37) (= (x509 x37 1000000000000000000000000000) x695) (= (ite x206 1 0) x317) (< 0 x317) (<= 0 x748) (< x748 1461501637330902918203684832716283019655932542976) (= (= 0 x214) x416) (= x152 x695) (= (x236 128) x214) (= x343 (not x752)) (= (< x679 x506) x752) (>= 1461501637330902918203684832716283019655932542975 x748) (= (x233 (x677 x506 x214)) x224))) (and x373 (= 0 x152))) (and (= x547 x245) (<= x532 1461501637330902918203684832716283019655932542975) (<= 0 x506) (< 0 x419) (<= x355 1461501637330902918203684832716283019655932542975) (= 404098525 x334) (= x92 x258) (= 0 x245) (not (< x334 404098525)) (<= 0 x355) (= (= x506 0) x373) (>= 1461501637330902918203684832716283019655932542975 x413) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x506) (= x532 x412) (> 2113256763 x334) (< x334 826074471) (<= 0 x532) (= x355 x287) (= (x141 x124) x419) (<= 0 x413) (= x692 x287)))) (and (not (= x605 599290589)) (= x747 x54) (= x789 (x141 x400)) (>= 1461501637330902918203684832716283019655932542975 x747) (= x367 x692) (>= x614 0) (= x605 1889567281) (not (= 404098525 x605)) (= x456 (x717 x747 1)) (= x614 x412) (= x367 x771) (>= x239 0) (= x547 x383) (>= x771 0) (>= x372 0) (= x34 x372) (not (= x605 157198259)) (= x62 x541) (= (x484 x456) x372) (<= x239 1461501637330902918203684832716283019655932542975) (= 0 x383) (>= 1461501637330902918203684832716283019655932542975 x614) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x372) (>= 1461501637330902918203684832716283019655932542975 x771) (> x789 0))) (and (= (x141 x124) x787) (= x370 x412) (not (< x327 404098525)) (= x587 (x379 x548)) (= x746 x692) (<= 0 x576) (<= x370 1461501637330902918203684832716283019655932542975) (= x282 x547) (< 0 x787) (> 340282366920938463463374607431768211456 x587) (= x548 (x717 x11 52)) (< x327 2113256763) (<= x57 1461501637330902918203684832716283019655932542975) (>= x370 0) (> 826074471 x327) (<= x576 1461501637330902918203684832716283019655932542975) (>= x587 0) (= x282 0) (= x576 x746) (<= x11 1461501637330902918203684832716283019655932542975) (>= 340282366920938463463374607431768211455 x587) (not (= 404098525 x327)) (>= x57 0) (= x587 x541) (= x11 x283) (= x327 497176382))) x320)))
(assert (x454 x263))
(assert (not (= (x717 x364 1) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (not (= 1 (x717 x442 52))))
(assert (not (= 826074471 (x717 x558 1))))
(assert (x247 x506 x214 x374 x99))
(assert (x212 x244 x631 x341 x40))
(assert (not (= (x717 x442 52) (x717 x558 1))))
(assert (x454 x397))
(assert (x151 x527))
(assert (= 1000000000000000000000000000 x389))
(assert (x319 115792089237316195423570985008687907853269984665640064039457584007913129639935 x631))
(assert (not (= 599290589 (x717 x86 1))))
(assert (=> (<= x11 10000) (not (= x11 (x717 x11 52)))))
(assert (x718 x776 (- x79 x40)))
(assert (=> (= (x717 x86 1) (x717 x124 1)) (= x86 x124)))
(assert (x212 x776 x79 x214 x506))
(assert (x218 (- x79 x214)))
(assert (x218 (- x79 x506)))
(assert (x59 x291))
(assert (x454 x628))
(assert (x675 x398))
(assert (x454 x65))
(assert (not (= (x717 x170 52) (x717 x33 1))))
(assert (x454 x168))
(assert (not (= (x717 x124 1) 500000000000000000000000000)))
(assert (not (= (x717 x364 1) 599290589)))
(assert (x454 x148))
(assert (x363 x398))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x717 x291 52))))
(assert (x454 x631))
(assert (= x248 (or (and x652 x240) (and x684 x356) x581 x648 (and (not x536) x699) (and x9 x252))))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x717 x124 1))))
(assert (x218 x665))
(assert (=> (<= x14 10000) (not (= (x717 x170 52) x14))))
(assert (x718 x776 (- x79 x506)))
(assert (x212 x631 x244 x40 x341))
(assert (and (and (= (* (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x677 3 (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x633) (- (* 3 x633) (* x633 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 3 x633) (= (x677 3 x633) (* x633 3)) (x329 3 x633) (x487 3 x633) (x790 3 x633) (x726 3 x633)))
(assert (= x270 (or (and x742 (not x729)) x712)))
(assert (x454 x70))
(assert (x247 x99 x374 x79 x776))
(assert (x59 x170))
(assert (x88 1000000000000000000000000000))
(assert (x454 x366))
(assert (x454 x336))
(assert (= x457 (=> (and (= x295 x264) (= x479 x45) (= (x338 (- x313 x624)) x264) (= x158 x473) (= x448 0) (= x107 x98)) x359)))
(assert (not (= (x717 x33 1) (x717 x442 52))))
(assert (x454 x793))
(assert (x454 x598))
(assert (=> (<= x747 10000) (not (= (x717 x442 52) x747))))
(assert (x212 x506 x214 x40 x341))
(assert (x88 x516))
(assert (=> (<= x170 10000) (not (= x170 (x717 x11 52)))))
(assert (x454 x445))
(assert (not (= (x717 x11 52) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (x454 x758))
(assert (x454 x486))
(assert (not (= 2835717307 (x717 x14 52))))
(assert (=> (>= 10000 x442) (not (= (x717 x291 52) x442))))
(assert (x247 x776 x79 x40 x341))
(assert (=> (<= x124 10000) (not (= x124 (x717 x170 52)))))
(assert (x212 x214 x506 x374 x99))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x717 x33 1))))
(assert (not (= 340282366920938463463374607431768211456 (x717 x86 1))))
(assert (x218 (- x99 x79)))
(assert (and (x296 x51 1000000000000000000000000000) (x706 x51 1000000000000000000000000000) (x463 x51 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x51 0)) (and (>= x51 (* (x509 x51 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x51 1000000000000000000000000000)) (- x51 1000000000000000000000000000)))) (x69 x51 1000000000000000000000000000)))
(assert (=> (<= x291 10000) (not (= (x717 x86 1) x291))))
(assert (x718 x506 (- x214 x374)))
(assert (x218 (- x244 x40)))
(assert (x454 x569))
(assert (= x712 (and x729 x742)))
(assert (x212 x244 x631 x776 x79))
(assert (=> (>= 10000 x124) (not (= x124 (x717 x291 52)))))
(assert (x212 x341 x40 x79 x776))
(assert (= (and x203 (not x774)) x95))
(assert (not (= 157198259 (x717 x558 1))))
(assert (=> (<= x400 10000) (not (= (x717 x291 52) x400))))
(assert (= (=> (and (< 0 x164) (= x158 x389) (= x295 x506) (= x98 x748)) x200) x764))
(assert (= 1000000000000000000000000000 x158))
(assert (x454 x186))
(assert (x454 x760))
(assert (x454 x84))
(assert (=> (>= 10000 x558) (not (= (x717 x442 52) x558))))
(assert (x212 x214 x506 x79 x776))
(assert (x454 x274))
(assert (not (= (x717 x11 52) 1)))
(assert (not (= 1000000000000000000000000000 (x717 x33 1))))
(assert (x454 x371))
(assert (x247 x244 x631 x40 x341))
(assert (=> (<= x785 10000) (not (= x785 (x717 x14 52)))))
(assert (x454 x469))
(assert (not (= (x717 x11 52) 1461501637330902918203684832716283019655932542975)))
(assert (not x114))
(assert (=> (>= 10000 x11) (not (= x11 (x717 x558 1)))))
(assert (= (and x36 (not x574)) x796))
(assert (x319 115792089237316195423570985008687907853269984665640064039457584007913129639935 x341))
(assert (= x114 (=> (and (or x269 (and (not x269) (and (= x121 (x627 1461501637330902918203684832716283019655932542975 x442)) (= x491 (x141 x472)) (not (= x491 0))))) (and (= (x627 1461501637330902918203684832716283019655932542975 x412) x360) (>= x724 0) (= x530 (ite x737 1 0)) (= (or x377 x262) x737) (= (ite x331 1 0) x216) x354 (= (x509 x503 1000000000000000000000000000) x220) (= (x338 (- x653 x351)) x398) (= x443 x352) (>= x709 0) (= x208 (x622 (+ x593 500000000000000000000000000))) (= x225 (x627 1461501637330902918203684832716283019655932542975 x242)) (= x645 0) x191 (= x125 (x509 x612 1000000000000000000000000000)) (>= x741 0) (= x104 x412) x257 (not (< x653 x351)) (= x216 0) (= x447 (x717 x442 52)) (> x124 0) (<= x227 255) (>= x669 0) (= x612 (x622 (+ 500000000000000000000000000 x735))) (<= x209 1461501637330902918203684832716283019655932542975) (= x761 x234) (= (< 115792089237316195423570985008687907853269984665640 x619) x369) (>= 1461501637330902918203684832716283019655932542975 x785) (<= 0 x234) (= x352 x570) (<= 0 x99) (not (> x351 340282366920938463463374607431768211455)) (>= 1461501637330902918203684832716283019655932542975 x283) (= (x18 x400) x577) (<= x234 1461501637330902918203684832716283019655932542975) (= x547 x645) (= x306 (not x303)) (< 0 x530) (not (> x351 x741)) (= x16 (x18 x124)) (= (x357 x157) x653) (= (- x169 x149) x293) (not (> 3607235850 x27)) (>= 1461501637330902918203684832716283019655932542975 x165) (= (not x91) x262) x136 (= (x338 (- x741 x351)) x393) (>= 1461501637330902918203684832716283019655932542975 x124) (>= x227 0) (= x360 x676) (= (x717 x442 52) x132) (= (not (= x508 x201)) x191) (= (x627 1461501637330902918203684832716283019655932542975 x412) x304) (>= x104 0) (>= x209 0) (<= x653 340282366920938463463374607431768211455) (<= x400 1461501637330902918203684832716283019655932542975) (>= 340282366920938463463374607431768211455 x149) (= (= 0 x472) x269) (= x517 (x717 x442 52)) (= (ite x649 1 0) x47) (>= 1461501637330902918203684832716283019655932542975 x527) (<= x374 340282366920938463463374607431768211455) (> x348 0) (< x374 340282366920938463463374607431768211456) (= (x509 x570 1000000000000000000000000000) x56) (<= x104 1461501637330902918203684832716283019655932542975) (= (x141 x124) x348) (= x761 x692) (>= x785 0) (> 340282366920938463463374607431768211456 x653) (> x400 0) (not (< x27 3018967357)) (<= x99 340282366920938463463374607431768211455) (>= x374 0) (= x735 (x233 (* x374 1000000000000000000000000000))) (= x537 x619) (not (< x125 x220)) (= x756 1000000000000000000000000000) (= x503 (x622 (+ 500000000000000000000000000 x420))) (>= x16 0) (<= x54 1461501637330902918203684832716283019655932542975) (not (= x124 x400)) (< 0 x47) (<= x472 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x669) (>= x283 0) (= (x233 (x677 x374 x99)) x420) (= x149 (x357 x447)) (= x508 x124) (= x412 x709) (= (x627 1461501637330902918203684832716283019655932542975 x242) x676) (not (< x27 2113256763)) (<= 0 x165) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x741) (= x649 x306) (= x136 (= x293 x315)) (= x474 (x509 115792089237316195423570985008687907853269984665640064039457584007913129639935 x99)) (< x99 340282366920938463463374607431768211456) (= x680 (not x181)) (= x304 x225) (>= x472 0) (= x52 (x627 340282366920938463463374607431768211455 x398)) (<= x472 1461501637330902918203684832716283019655932542975) (= x27 3607235850) (= (x717 x442 52) x301) (= (x717 x442 52) x157) (= (< 0 (x141 x124)) x354) (= x209 x278) (= x352 x488) (= x442 x283) (<= x724 255) (= x400 x785) (>= x653 0) (= (x707 x132) x99) (= x283 x201) (= (x338 (- x741 x351)) x371) (<= 0 x577) (= x375 1000000000000000000000000000) (>= x149 0) (= x445 1000000000000000000000000000) (<= x442 1461501637330902918203684832716283019655932542975) (= (< x474 x374) x91) (= x351 (x509 x208 1000000000000000000000000000)) (= x54 x527) (>= 1461501637330902918203684832716283019655932542975 x709) (= (x233 (* x619 1000000000000000000000000000)) x593) (= (x357 x301) x374) (= (> x374 115792089237316195423570985008687907853269984665640) x303) (= x181 (not x369)) (> 1461501637330902918203684832716283019655932542976 x472) (= (x338 (- x125 x220)) x446) (<= 0 x472) (not (= x351 0)) (= x169 (+ x52 x94)) (= (< 0 (x141 x400)) x257) (= x680 x331) (<= 0 x54) (= x377 (= x99 0)))) x42)))
(assert (x454 x79))
(assert (=> (>= 10000 x291) (not (= (x717 x442 52) x291))))
(assert (x218 (- x214 x374)))
(assert (= x280 (and (not x226) x93)))
(assert (x454 x394))
(assert (x718 x99 (- x374 x506)))
(assert (x454 x271))
(assert (not (= 1889567281 (x717 x558 1))))
(assert (x218 x506))
(assert (x718 x374 (- x99 x341)))
(assert (=> (>= 10000 x86) (not (= x86 (x717 x11 52)))))
(assert (x454 x281))
(assert (= (=> (and (or (and x574 (and (= x505 (x338 (- x446 x619))) (not (< x446 x619)))) (and (not x574) (and (not (< x619 x446)) (= x274 (x338 (- x619 x446)))))) (= x574 (< x619 x446))) x196) x42))
(assert (x218 (- x79 x341)))
(assert (x718 x776 (- x79 x244)))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x717 x33 1))))
(assert (x454 x507))
(assert (=> (>= 10000 x558) (not (= x558 (x717 x558 1)))))
(assert (not (= (x717 x747 1) 157198259)))
(assert (= (and x458 x349) x402))
(assert (=> (<= x400 10000) (not (= (x717 x124 1) x400))))
(assert (=> (= (x717 x364 1) (x717 x124 1)) (= x364 x124)))
(assert (x454 x278))
(assert (x718 x40 (- x341 x374)))
(assert (not (= (x717 x364 1) 157198259)))
(assert (x718 x631 (- x244 x214)))
(assert (x454 x372))
(assert (=> (>= 10000 x472) (not (= (x717 x33 1) x472))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x717 x86 1))))
(assert (=> (<= x747 10000) (not (= x747 (x717 x86 1)))))
(assert (x454 x530))
(assert (not (= (x717 x14 52) 1000000000000000000000000000)))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x717 x364 1))))
(assert (x454 x532))
(assert (x218 (- x374 x776)))
(assert (x212 x631 x244 x374 x99))
(assert (x218 (- x374 x40)))
(assert (x212 x244 x631 x214 x506))
(assert (x454 x60))
(assert (x454 x334))
(assert (not (= (x717 x364 1) 3607235850)))
(assert (and (and (= (* (- x588 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x677 3 (- x588 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x588 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x588 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x588 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x588) (- (* 3 x588) (* x588 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 3 x588) (= (x677 3 x588) (* x588 3)) (x329 3 x588) (x487 3 x588) (x790 3 x588) (x726 3 x588)))
(assert (not (= 404098525 (x717 x442 52))))
(assert (not (= (x717 x170 52) 497176382)))
(assert (not (= (x717 x558 1) 1461501637330902918203684832716283019655932542975)))
(assert (= x744 (and x222 x76)))
(assert (= (=> (and (< 0 x664) (= x575 x134) (= x232 x332) (= x244 x380)) x710) x740))
(assert (x454 x261))
(assert (=> (<= x364 10000) (not (= x364 (x717 x86 1)))))
(assert (x88 x409))
(assert (x675 x481))
(assert (x212 x341 x40 x631 x244))
(assert (= 1000000000000000000000000000 x473))
(assert (x218 x244))
(assert (not (= (x717 x291 52) 1000000000000000000000000000)))
(assert (x212 x631 x244 x99 x374))
(assert (not (= (x717 x14 52) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x717 x558 1) 3018967357)))
(assert (= (and (not x542) x459) x4))
(assert (x718 x631 (- x244 x374)))
(assert (x218 (- x374 x631)))
(assert (x218 (- x341 x244)))
(assert (x218 (- x244 x776)))
(assert (x454 x285))
(assert (x218 x173))
(assert (=> (<= x291 10000) (not (= (x717 x14 52) x291))))
(assert (not (= (x717 x124 1) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (x454 x587))
(assert (x454 x547))
(assert (=> (<= x87 10000) (not (= (x717 x442 52) x87))))
(assert (not (= 340282366920938463463374607431768211455 (x717 x124 1))))
(assert (not (= (x717 x442 52) 1000000000000000000000000000)))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x717 x33 1))))
(assert (x454 x638))
(assert (= x523 (and x73 (not x520))))
(assert (not (= (x717 x11 52) 52)))
(assert (x718 x374 (- x99 x631)))
(assert (x454 x62))
(assert (x454 x318))
(assert (x454 x775))
(assert (x718 x374 (- x99 x244)))
(assert (=> (<= x747 10000) (not (= x747 (x717 x291 52)))))
(assert (= x514 (=> (and (or (not x103) x103) (= x103 (= 0 x715))) x8)))
(assert (x718 x40 (- x341 x99)))
(assert (x454 x442))
(assert (x454 x716))
(assert (x454 x124))
(assert (=> (>= 10000 x86) (not (= (x717 x14 52) x86))))
(assert (= x539 (=> (and (or (not x222) x222) (= (= 0 x217) x222)) x433)))
(assert (x454 x508))
(assert (not (= (x717 x124 1) 1889567281)))
(assert (x247 x776 x79 x244 x631))
(assert (x718 x341 (- x40 x244)))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x717 x170 52))))
(assert (= (and x252 (not x9)) x434))
(assert (and (x309 x481 340282366920938463463374607431768211456) (x277 x481 340282366920938463463374607431768211456) (=> (< 0 340282366920938463463374607431768211456) (= (+ (* (x509 x481 340282366920938463463374607431768211456) 340282366920938463463374607431768211456) (x102 x481 340282366920938463463374607431768211456)) x481)) (x698 x481 340282366920938463463374607431768211456)))
(assert (and (and (= (* (- x267 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x677 3 (- x267 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x267 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x267 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x267 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x267) (- (* 3 x267) (* x267 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 3 x267) (= (x677 3 x267) (* x267 3)) (x329 3 x267) (x487 3 x267) (x790 3 x267) (x726 3 x267)))
(assert (x247 x506 x214 x79 x776))
(assert (=> (<= x472 10000) (not (= (x717 x442 52) x472))))
(assert (x212 x79 x776 x341 x40))
(assert (x718 x99 (- x374 x40)))
(assert (not (= (x717 x747 1) 2113256763)))
(assert (x718 x244 (- x631 x99)))
(assert (not (= (x717 x442 52) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x356 (and x172 (not x753))))
(assert (x218 x425))
(assert (x454 x503))
(assert (x88 x570))
(assert (x454 x223))
(assert (x718 x79 (- x776 x506)))
(assert (x454 x529))
(assert (x718 x99 (- x374 x631)))
(assert (= x449 (and x344 (not x122))))
(assert (x218 (- x99 x214)))
(assert (and (= (x677 9 9) 81) (= (x677 27 3) 81) (= 9 (x677 3 3)) (= (x677 9 3) 27)))
(assert (x454 x176))
(assert (=> (<= x364 10000) (not (= x364 (x717 x33 1)))))
(assert (x454 x98))
(assert (x454 x232))
(assert (not (= (x717 x124 1) 157198259)))
(assert (=> (>= 10000 x785) (not (= x785 (x717 x291 52)))))
(assert (=> (<= x33 10000) (not (= (x717 x86 1) x33))))
(assert (x454 x472))
(assert (x218 (- x40 x506)))
(assert (x718 x631 (- x244 x99)))
(assert (x454 x526))
(assert (x247 x79 x776 x374 x99))
(assert (= x193 (or x7 x521)))
(assert (=> (>= 10000 x33) (not (= x33 (x717 x11 52)))))
(assert (not (= (x717 x86 1) 3607235850)))
(assert (x88 x29))
(assert (x718 x214 (- x506 x341)))
(assert (=> (>= 10000 x107) (not (= x107 (x717 x124 1)))))
(assert (not (= 3607235850 (x717 x558 1))))
(assert (= x462 (=> (= x188 (= x364 x124)) (and (=> (and x188 (and (= x244 x110) (= x488 x134) (= x785 x332))) x710) (=> (and (not x188) (and (>= 1461501637330902918203684832716283019655932542975 x785) (= 68 x600) (not (< x600 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x61) (< 0 x376) (not (= 1889567281 x294)) (not (= x294 599290589)) (= (x141 x400) x376) (= 320 x423) (not (= x294 157198259)) (< x785 1461501637330902918203684832716283019655932542976) (not (= x294 404098525)) (= x366 x146) (= 2835717307 x294) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x17)) (< x17 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x17)) x122) (>= x785 0) (= x559 x364) (= x17 (x338 (- x600 4))))) (and (=> (and (and (= x488 x575) (= x119 x704) (= x606 x380) (= x785 x232) (= (x338 (- x741 x65)) x606) (= 0 x715)) x122) x514) (=> (and (not x122) (= x578 true)) (and (=> (not x578) x80) (=> (and (and (= x25 (x717 x124 1)) (<= 0 x549) (= (> x366 x549) x308) (= x146 x421) (= x549 (x190 x25)) (<= x549 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x578) (and (=> x308 x80) (=> (and (not x308) (= x542 (> x146 x549))) (and (=> (and (and (= (x717 x364 1) x155) (= (x338 (- x549 x146)) x362) (= (x338 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x146)) x543) (= (x599 x155) x694) (= x438 (x717 x124 1)) (= (< x543 x694) x651) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x694) (>= x694 0)) (not x542)) (and (=> (and (not x651) (and (= x774 (< x307 x694)) (= x307 (x622 (+ x146 x694))))) (and (=> (and (and (= x704 32) (= x785 x232) (= x110 x380) (= x715 1) (= x575 x488) (= x751 (x717 x364 1))) (not x774)) x514) (=> x774 x80))) (=> x651 x80))) (=> x542 x80)))))))))))))
(assert (not (= 826074471 (x717 x86 1))))
(assert (x218 (- x40 x374)))
(assert (x212 x99 x374 x506 x214))
(assert (x454 x607))
(assert (x247 x341 x40 x79 x776))
(assert (x218 (- x244 x341)))
(assert (x454 x1))
(assert (x247 x214 x506 x244 x631))
(assert (=> (= (x717 x747 1) (x717 x364 1)) (= x747 x364)))
(assert (not (= (x717 x11 52) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x88 x214))
(assert (x151 x412))
(assert (=> (>= 10000 x86) (not (= (x717 x291 52) x86))))
(assert (x454 x55))
(assert (x247 x374 x99 x244 x631))
(assert (x88 x99))
(assert (= x604 (=> (and (= (> x268 x450) x643) (or (and (not x643) (and (not (< x450 x268)) (= (x338 (- x450 x268)) x276))) (and x643 (and (not (> x450 x268)) (= x678 (x338 (- x268 x450))))))) x183)))
(assert (x247 x79 x776 x40 x341))
(assert (x218 (- x40 x79)))
(assert (x454 x275))
(assert (x718 x244 (- x631 x40)))
(assert (x454 x152))
(assert (x454 x443))
(assert (x718 x99 (- x374 x244)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x717 x14 52))))
(assert (= x159 (and x542 x459)))
(assert (=> (= (x717 x33 1) (x717 x86 1)) (= x86 x33)))
(assert (not (= (x717 x11 52) 1889567281)))
(assert (x218 (- x214 x341)))
(assert (x454 x776))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x717 x170 52))))
(assert (x718 x341 (- x40 x214)))
(assert (not (= 826074471 (x717 x14 52))))
(assert (x454 x513))
(assert (not (= (x717 x442 52) (x717 x747 1))))
(assert (x718 x244 x631))
(assert (not (= (x717 x442 52) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (not (= (x717 x747 1) 340282366920938463463374607431768211456)))
(assert (and (x309 x526 340282366920938463463374607431768211456) (x277 x526 340282366920938463463374607431768211456) (=> (< 0 340282366920938463463374607431768211456) (= (+ (* (x509 x526 340282366920938463463374607431768211456) 340282366920938463463374607431768211456) (x102 x526 340282366920938463463374607431768211456)) x526)) (x698 x526 340282366920938463463374607431768211456)))
(assert (x218 x631))
(assert (x454 x201))
(assert (and (x309 x527 1461501637330902918203684832716283019655932542976) (x277 x527 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (* (x509 x527 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x102 x527 1461501637330902918203684832716283019655932542976)) x527)) (x698 x527 1461501637330902918203684832716283019655932542976)))
(assert (=> (<= x124 10000) (not (= (x717 x33 1) x124))))
(assert (x454 x125))
(assert (x218 (- x99 x244)))
(assert (x363 x412))
(assert (x454 x326))
(assert (x454 x645))
(assert (x212 x374 x99 x214 x506))
(assert (x59 x472))
(assert (x718 x374 (- x99 x506)))
(assert (=> (>= 10000 x86) (not (= x86 (x717 x86 1)))))
(assert (x718 x776 (- x79 x341)))
(assert (not (= (x717 x442 52) 2835717307)))
(assert (not (= (x717 x86 1) (x717 x14 52))))
(assert (=> (<= x785 10000) (not (= (x717 x86 1) x785))))
(assert (= x455 (and x322 x192)))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x717 x124 1))))
(assert (not (= 2835717307 (x717 x364 1))))
(assert (x454 x501))
(assert (not (= 3018967357 (x717 x33 1))))
(assert (not (= (x717 x14 52) 599290589)))
(assert (= x500 (and (not x566) x655)))
(assert (x218 x341))
(assert (x247 x374 x99 x506 x214))
(assert (x247 x40 x341 x79 x776))
(assert (= x524 (=> (and (= x131 x785) (= x424 x762) (= x696 x84) (= x217 0) (= x488 x38) (= x84 (x338 (- x741 x351))) (= x472 x401) (= x315 x495)) x539)))
(assert (x212 x776 x79 x40 x341))
(assert (x454 x784))
(assert (x454 x170))
(assert (x454 x266))
(assert (x454 x258))
(assert (=> (= (x717 x14 52) (x717 x11 52)) (= x11 x14)))
(assert (x454 x614))
(assert (x454 x735))
(assert (x454 x409))
(assert (not (= 1000000000000000000000000000 (x717 x124 1))))
(assert (=> (= (x717 x291 52) (x717 x442 52)) (= x291 x442)))
(assert (=> (<= x87 10000) (not (= (x717 x291 52) x87))))
(assert (not (= (x717 x124 1) 826074471)))
(assert (=> (>= 10000 x558) (not (= (x717 x291 52) x558))))
(assert (not (= (x717 x124 1) 497176382)))
(assert (= (=> (and (and (= (>= x440 x745) x12) (= x440 (+ x644 x123)) (= x725 3) (= x166 (and x545 x405)) (= x173 x56) (= x636 (and x650 x166)) (= x92 x565) (= x62 x477) (= x476 x683) (= (+ x533 x687) x597) (= x56 x665) (= x650 (and x422 x105)) (= (<= x255 x24) x422) (= x620 x255) (= x285 x504) (= (<= x598 x292) x545) (= x425 x56) (= x267 x56) (= (<= x476 x597) x405) (= (and x12 x772) x90) (= x686 x62) (= (* 3 x425) x687) (= (+ x411 x799) x179) (= x436 x683) (= x620 x271) (= x56 x633) (= (>= x617 x477) x105) (= x531 3) (= x799 x288) (= (* x588 3) x583) (= x598 x594) (= 3 x674) (= x617 (+ x271 x608)) (= x644 x92) (= x588 x56) (= 3 x187) (= (* x173 3) x782) (= x120 (and x90 x636)) (= x533 x594) (= (<= x565 x179) x772) (= 3 x160) (= x608 (* 3 x665)) (= x745 x288) (= x411 (* x267 3)) (= (* x633 3) x123) (= x318 3) (= x292 (+ x583 x436)) (= x24 (+ x782 x686))) (= x507 x504)) x120) x108))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x717 x11 52))))
(assert (=> (>= 10000 x442) (not (= (x717 x33 1) x442))))
(assert (not (= 599290589 (x717 x558 1))))
(assert (=> (<= x124 10000) (not (= (x717 x86 1) x124))))
(assert (x218 x99))
(assert (=> (<= x11 10000) (not (= (x717 x442 52) x11))))
(assert (x718 x79 (- x776 x214)))
(assert (not (= (x717 x11 52) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x717 x170 52) 3607235850)))
(assert (=> (= (x717 x86 1) (x717 x747 1)) (= x86 x747)))
(assert (= (or x180 x249) x391))
(assert (x212 x506 x214 x374 x99))
(assert (not (= (x717 x291 52) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x718 x214 (- x506 x776)))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x717 x124 1))))
(assert (= (or x596 x721) x742))
(assert (=> (>= 10000 x11) (not (= x11 (x717 x124 1)))))
(assert (x454 x724))
(assert (not (= (x717 x364 1) 1461501637330902918203684832716283019655932542976)))
(assert (x212 x40 x341 x214 x506))
(assert (=> (>= 10000 x785) (not (= x785 (x717 x11 52)))))
(assert (x454 x562))
(assert (x718 x506 (- x214 x244)))
(assert (not (= (x717 x86 1) 497176382)))
(assert (x454 x291))
(assert (not (= 500000000000000000000000000 (x717 x558 1))))
(assert (x454 x540))
(assert (x247 x40 x341 x244 x631))
(assert (=> (<= x124 10000) (not (= x124 (x717 x11 52)))))
(assert (x454 x109))
(assert (x454 x389))
(assert (=> (<= x14 10000) (not (= x14 (x717 x124 1)))))
(assert (= x36 (or x632 x251)))
(assert (not (= (x717 x86 1) 500000000000000000000000000)))
(assert (not (= (x717 x364 1) 1)))
(assert (x212 x776 x79 x506 x214))
(assert (not (= 1000000000000000000000000000 (x717 x364 1))))
(assert (x247 x214 x506 x40 x341))
(assert (not (= 497176382 (x717 x442 52))))
(assert (x454 x253))
(assert (x218 x267))
(assert (x454 x20))
(assert (x454 x612))
(assert (x454 x639))
(assert (x454 x705))
(assert (=> (<= x558 10000) (not (= (x717 x124 1) x558))))
(assert (= (and x643 x97) x213))
(assert (=> (<= x124 10000) (not (= x124 (x717 x14 52)))))
(assert (not (= (x717 x86 1) 3018967357)))
(assert (x454 x630))
(assert (x212 x214 x506 x40 x341))
(assert (x48 x242))
(assert (= (or x49 x500) x521))
(assert (x454 x568))
(assert (x454 x794))
(assert (=> (<= x442 10000) (not (= x442 (x717 x170 52)))))
(assert (not (= (x717 x14 52) (x717 x33 1))))
(assert (not (= 826074471 (x717 x442 52))))
(assert (x218 (- x631 x40)))
(assert (x247 x374 x99 x79 x776))
(assert (x454 x276))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x717 x291 52))))
(assert (=> (<= x442 10000) (not (= (x717 x11 52) x442))))
(assert (not (= (x717 x442 52) 157198259)))
(assert (x718 x506 (- x214 x631)))
(assert (x59 x86))
(assert (x454 x756))
(assert (x454 x602))
(assert (x454 x641))
(assert (not (= (x717 x442 52) (x717 x364 1))))
(assert (x218 (- x214 x99)))
(assert (x718 x40 (- x341 x79)))
(assert (= x575 1000000000000000000000000000))
(assert (x454 x283))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x717 x124 1))))
(assert (and (x309 x442 1461501637330902918203684832716283019655932542976) (x277 x442 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (* (x509 x442 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x102 x442 1461501637330902918203684832716283019655932542976)) x442)) (x698 x442 1461501637330902918203684832716283019655932542976)))
(assert (x454 x723))
(assert (x718 x214 (- x506 x631)))
(assert (x454 x127))
(assert (x454 x146))
(assert (x454 x390))
(assert (not (= (x717 x747 1) 115792089237316195423570985008687907853269984665640)))
(assert (x218 (- x79 x244)))
(assert (x454 x785))
(assert (x218 (- x79 x374)))
(assert (x454 x117))
(assert (=> (= (x717 x33 1) (x717 x364 1)) (= x33 x364)))
(assert (x218 x619))
(assert (= x221 (and x97 (not x643))))
(assert (= (and x128 x256) x19))
(assert (x454 x525))
(assert (x454 x600))
(assert (x212 x374 x99 x40 x341))
(assert (=> (>= 10000 x291) (not (= (x717 x558 1) x291))))
(assert (x454 x451))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x717 x33 1))))
(assert (=> (>= 10000 x472) (not (= (x717 x291 52) x472))))
(assert (=> (>= 10000 x747) (not (= x747 (x717 x124 1)))))
(assert (=> (= (x717 x33 1) (x717 x124 1)) (= x33 x124)))
(assert (x454 x728))
(assert (x88 x660))
(assert (not (= 1 (x717 x86 1))))
(assert (not (= 2113256763 (x717 x442 52))))
(assert (x718 x40 (- x341 x506)))
(assert (not (= (x717 x124 1) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (x218 1000000000000000000000000000))
(assert (x218 (- x99 x341)))
(assert (x218 (- x374 x341)))
(assert (not (= (x717 x291 52) 52)))
(assert (= 1000000000000000000000000000 x488))
(assert (not (= 1 (x717 x291 52))))
(assert (x212 x214 x506 x244 x631))
(assert (=> (>= 10000 x170) (not (= x170 (x717 x442 52)))))
(assert (=> (<= x558 10000) (not (= (x717 x170 52) x558))))
(assert (x218 (- x631 x214)))
(assert (x454 x591))
(assert (x212 x374 x99 x244 x631))
(assert (not (= (x717 x11 52) 115792089237316195423570985008687907853269984665640)))
(assert (x454 x92))
(assert (not (= 826074471 (x717 x11 52))))
(assert (not (= 599290589 (x717 x291 52))))
(assert (x48 x527))
(assert (not (= 404098525 (x717 x124 1))))
(assert (not (= (x717 x747 1) 826074471)))
(assert (= x459 (and x743 (not x308))))
(assert (x454 x606))
(assert (x454 x516))
(assert (not (= (x717 x11 52) 497176382)))
(assert (x454 x46))
(assert (=> (>= 10000 x11) (not (= x11 (x717 x747 1)))))
(assert (x218 (- x341 x214)))
(assert (=> (>= 10000 x400) (not (= x400 (x717 x11 52)))))
(assert (x454 x593))
(assert (x454 x314))
(assert (=> (>= 10000 x107) (not (= (x717 x33 1) x107))))
(assert (x454 x470))
(assert (x454 x761))
(assert (x718 x244 (- x631 x506)))
(assert (not (= (x717 x558 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x218 (- x244 x506)))
(assert (x454 x474))
(assert (x454 x313))
(assert (x59 x747))
(assert (=> (>= 10000 x14) (not (= (x717 x11 52) x14))))
(assert (not (= (x717 x558 1) (x717 x11 52))))
(assert (x454 x780))
(assert (and (and (= (* (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (x677 1000000000000000000000000000 (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x450) (- (* 1000000000000000000000000000 x450) (* x450 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 1000000000000000000000000000 x450) (= (x677 1000000000000000000000000000 x450) (* x450 1000000000000000000000000000)) (x329 1000000000000000000000000000 x450) (x487 1000000000000000000000000000 x450) (x790 1000000000000000000000000000 x450) (x726 1000000000000000000000000000 x450)))
(assert (x454 x37))
(assert (=> (>= 10000 x33) (not (= x33 (x717 x291 52)))))
(assert (=> (<= x124 10000) (not (= (x717 x364 1) x124))))
(assert (not (= (x717 x33 1) 340282366920938463463374607431768211455)))
(assert (x212 x506 x214 x776 x79))
(assert (=> (<= x86 10000) (not (= x86 (x717 x558 1)))))
(assert (=> (<= x14 10000) (not (= (x717 x33 1) x14))))
(assert (x88 x341))
(assert (x218 x776))
(assert (x212 x374 x99 x79 x776))
(assert (x454 x412))
(assert (not (= 599290589 (x717 x124 1))))
(assert (=> (<= x291 10000) (not (= x291 (x717 x170 52)))))
(assert (x454 x160))
(assert (x212 x99 x374 x79 x776))
(assert (x454 x554))
(assert (=> (<= x472 10000) (not (= x472 (x717 x11 52)))))
(assert (not (= (x717 x11 52) (x717 x86 1))))
(assert (not (= (x717 x86 1) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (x212 x40 x341 x506 x214))
(assert (=> (>= 10000 x400) (not (= (x717 x558 1) x400))))
(assert (x454 x789))
(assert (x454 x644))
(assert (x218 (- x506 x776)))
(assert (not (= (x717 x558 1) 340282366920938463463374607431768211455)))
(assert (=> (<= x14 10000) (not (= x14 (x717 x86 1)))))
(assert (not (= 599290589 (x717 x170 52))))
(assert (x454 x755))
(assert (=> (>= 10000 x400) (not (= x400 (x717 x14 52)))))
(assert (not (= (x717 x558 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (>= 10000 x124) (not (= (x717 x442 52) x124))))
(assert (=> (>= 10000 x107) (not (= x107 (x717 x747 1)))))
(assert (= x171 (or x333 x640)))
(assert (x247 x506 x214 x244 x631))
(assert (not (= 826074471 (x717 x170 52))))
(assert (x212 x506 x214 x341 x40))
(assert (x454 x491))
(assert (x454 x167))
(assert (not (= (x717 x442 52) 340282366920938463463374607431768211455)))
(assert (x218 (- x40 x214)))
(assert (x218 (- x214 x40)))
(assert (not (= (x717 x442 52) (x717 x124 1))))
(assert (x718 x79 (- x776 x374)))
(assert (not (= (x717 x124 1) (x717 x14 52))))
(assert (x454 x653))
(assert (not (= (x717 x33 1) 1889567281)))
(assert (= (=> (and (or (and (and (= (x141 x785) x100) (= x664 1) (< 0 x100)) x566) (and (and (= (= 0 x14) x493) (= x664 (ite x143 1 0)) (= x704 32) (= (not x493) x143)) (not x566))) (and (= x566 (= 0 x704)) (< 0 x715))) x740) x8))
(assert (=> (>= 10000 x364) (not (= x364 (x717 x291 52)))))
(assert (x454 x629))
(assert (x454 x798))
(assert (x454 x86))
(assert (x454 x747))
(assert (=> (<= x442 10000) (not (= (x717 x558 1) x442))))
(assert (x675 x526))
(assert (x218 (- x214 x776)))
(assert (= (and x192 (not x322)) x73))
(assert (not (= 497176382 (x717 x291 52))))
(assert (x218 x633))
(assert (x247 x99 x374 x40 x341))
(assert (not (= (x717 x86 1) (x717 x291 52))))
(assert (=> (>= 10000 x170) (not (= x170 (x717 x291 52)))))
(assert (and (and (= (* (- x665 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x677 3 (- x665 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x665 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x665 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x665 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x665) (- (* 3 x665) (* x665 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 3 x665) (= (x677 3 x665) (* x665 3)) (x329 3 x665) (x487 3 x665) (x790 3 x665) (x726 3 x665)))
(assert (=> (= (x717 x442 52) (x717 x170 52)) (= x170 x442)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x717 x124 1))))
(assert (x59 x87))
(assert (x212 x40 x341 x374 x99))
(assert (x218 (- x776 x214)))
(assert (x454 x375))
(assert (x454 x131))
(assert (=> (>= 10000 x33) (not (= x33 (x717 x364 1)))))
(assert (x454 x504))
(assert (x218 (- x631 x776)))
(assert (x718 x631 (- x244 x79)))
(assert (x218 (- x776 x341)))
(assert (=> (>= 10000 x785) (not (= x785 (x717 x33 1)))))
(assert (not (= (x717 x170 52) 340282366920938463463374607431768211456)))
(assert (x218 (- x40 x244)))
(assert (and (and (= (* (- x619 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (x677 1000000000000000000000000000 (- x619 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x619 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x619 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x619 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x619) (- (* 1000000000000000000000000000 x619) (* x619 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 1000000000000000000000000000 x619) (= (x677 1000000000000000000000000000 x619) (* x619 1000000000000000000000000000)) (x329 1000000000000000000000000000 x619) (x487 1000000000000000000000000000 x619) (x790 1000000000000000000000000000 x619) (x726 1000000000000000000000000000 x619)))
(assert (x218 (- x40 x631)))
(assert (x218 (- x631 x79)))
(assert (= (or x221 x213) x192))
(assert (not (= (x717 x558 1) 2835717307)))
(assert (not (= (x717 x442 52) 340282366920938463463374607431768211456)))
(assert (not (= (x717 x170 52) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (x454 x719))
(assert (x218 (- x776 x99)))
(assert (x454 x208))
(assert (x454 x678))
(assert (and (x296 x208 1000000000000000000000000000) (x706 x208 1000000000000000000000000000) (x463 x208 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x208 0)) (and (>= x208 (* (x509 x208 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x208 1000000000000000000000000000)) (- x208 1000000000000000000000000000)))) (x69 x208 1000000000000000000000000000)))
(assert (not (= (x717 x364 1) (x717 x170 52))))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x717 x558 1))))
(assert (= x53 (and x434 (not x518))))
(assert (x218 x214))
(assert (=> (>= 10000 x14) (not (= x14 (x717 x747 1)))))
(assert (not (= (x717 x291 52) 1461501637330902918203684832716283019655932542976)))
(assert (x363 x242))
(assert (not (= 1889567281 (x717 x442 52))))
(assert (x718 x244 (- x631 x374)))
(assert (x454 x788))
(assert (=> (<= x170 10000) (not (= (x717 x33 1) x170))))
(assert (x454 x688))
(assert (not (= 500000000000000000000000000 (x717 x364 1))))
(assert (=> (<= x86 10000) (not (= (x717 x124 1) x86))))
(assert (=> (<= x107 10000) (not (= (x717 x364 1) x107))))
(assert (=> (>= 10000 x11) (not (= (x717 x291 52) x11))))
(assert (x454 x119))
(assert (=> (>= 10000 x291) (not (= x291 (x717 x124 1)))))
(assert (= (=> (and (or (and (and (= (x338 (- x435 x366)) x223) (not (< x435 x366))) x226) (and (not x226) (and (not (> x435 x366)) (= x46 (x338 (- x366 x435)))))) (= x226 (< x366 x435))) x462) x478))
(assert (x454 x395))
(assert (x454 x144))
(assert (x212 x40 x341 x631 x244))
(assert (x218 (- x374 x506)))
(assert (not (= 2113256763 (x717 x124 1))))
(assert (=> (>= 10000 x400) (not (= (x717 x86 1) x400))))
(assert (x247 x506 x214 x40 x341))
(assert (not (= (x717 x170 52) 404098525)))
(assert (x88 x260))
(assert (x212 x99 x374 x214 x506))
(assert (not (= 3018967357 (x717 x442 52))))
(assert (x454 x323))
(assert (x718 x244 (- x631 x214)))
(assert (not (= (x717 x33 1) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (= (=> (and (and (= (= 0 x762) x499) (< 0 x217)) (or (and x499 (and (= x286 1) (< 0 x186) (= x186 (x141 x785)))) (and (not x499) (and (= x762 32) (= (= x442 0) x623) (= (ite x365 1 0) x286) (= x365 (not x623)))))) x241) x433))
(assert (x212 x776 x79 x631 x244))
(assert (=> (<= x400 10000) (not (= x400 (x717 x442 52)))))
(assert (x718 x341 (- x40 x79)))
(assert (not (= 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x717 x442 52))))
(assert (x718 x40 x341))
(assert (x718 x40 (- x341 x776)))
(assert (x212 x631 x244 x79 x776))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x717 x14 52))))
(assert (= x335 (or x210 x297)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x717 x291 52))))
(assert (x454 x214))
(assert (not (= 2835717307 (x717 x291 52))))
(assert (x59 x558))
(assert (and (x296 x29 1000000000000000000000000000) (x706 x29 1000000000000000000000000000) (x463 x29 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x29 0)) (and (>= x29 (* (x509 x29 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x29 1000000000000000000000000000)) (- x29 1000000000000000000000000000)))) (x69 x29 1000000000000000000000000000)))
(assert (x454 x259))
(assert (not (= 340282366920938463463374607431768211455 (x717 x86 1))))
(assert (= x174 (or (and x774 x203) x427 x159 (and x743 x308) (and x449 (not x578)))))
(assert (x59 x124))
(assert (x454 x506))
(assert (not (= (x717 x86 1) 52)))
(assert (not (= (x717 x170 52) 157198259)))
(assert (x454 x605))
(assert (x718 x374 (- x99 x776)))
(assert (x454 x479))
(assert (=> (<= x291 10000) (not (= x291 (x717 x291 52)))))
(assert (x59 x400))
(assert (not (= (x717 x364 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x717 x33 1))))
(assert (x454 x96))
(assert (x212 x79 x776 x506 x214))
(assert (x454 x714))
(assert (x218 (- x79 x40)))
(assert (x454 x352))
(assert (x454 x234))
(assert (x454 x396))
(assert (=> (>= 10000 x33) (not (= (x717 x747 1) x33))))
(assert (x454 x34))
(assert (not (= 404098525 (x717 x14 52))))
(assert (not (= (x717 x291 52) (x717 x124 1))))
(assert (=> (>= 10000 x472) (not (= x472 (x717 x170 52)))))
(assert (not (= (x717 x86 1) 2113256763)))
(assert (not (= (x717 x11 52) (x717 x124 1))))
(assert (= x38 1000000000000000000000000000))
(assert (= x359 (=> (and (or (not x729) x729) (= x729 (= 0 x448))) x671)))
(assert (not (= (x717 x558 1) 115792089237316195423570985008687907853269984665640)))
(assert (=> (>= 10000 x107) (not (= (x717 x11 52) x107))))
(assert (not (= (x717 x558 1) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (=> (<= x11 10000) (not (= x11 (x717 x14 52)))))
(assert (=> (<= x558 10000) (not (= (x717 x11 52) x558))))
(assert (x454 x683))
(assert (x454 x158))
(assert (x454 x57))
(assert (= (=> (and (and (< x79 340282366920938463463374607431768211456) (not (> 3018967357 x182)) (= x283 x291) (= x501 (x233 (* x79 1000000000000000000000000000))) (= x626 (ite x720 1 0)) (= x795 (x233 (* x450 1000000000000000000000000000))) (= (> x450 115792089237316195423570985008687907853269984665640) x353) (not (< x313 x624)) (<= 0 x79) (= x611 (< 115792089237316195423570985008687907853269984665640 x79)) (= (= x776 0) x228) (not (< x470 x624)) (> x626 0) (<= 0 x386) (= (x141 x124) x176) (> 340282366920938463463374607431768211456 x470) (>= 1461501637330902918203684832716283019655932542975 x87) (= 0 x109) (= x450 x263) (= (x290 x387) x470) (= x641 (x509 115792089237316195423570985008687907853269984665640064039457584007913129639935 x776)) (<= 0 x452) (= x776 (x316 x74)) (>= 340282366920938463463374607431768211455 x470) (<= 0 x87) (> 340282366920938463463374607431768211456 x776) (= (x290 x538) x386) (= x409 (x622 (+ x147 500000000000000000000000000))) (= x51 (x622 (+ 500000000000000000000000000 x795))) (>= x776 0) (>= x313 0) (= x642 x451) (= x387 (x717 x291 52)) (< 0 x176) (= x526 (x338 (- x470 x624))) (= (x233 (x677 x79 x776)) x147) (not (< x182 3607235850)) (= x638 (x627 1461501637330902918203684832716283019655932542975 x242)) (= (not x611) x573) (= x624 (x509 x51 1000000000000000000000000000)) (= 0 x326) (= x638 x265) (= (x627 1461501637330902918203684832716283019655932542975 x242) x642) (<= 0 x96) (= x74 (x717 x291 52)) (= x79 (x290 x85)) (= x412 x96) (= (not x703) x702) (>= 1461501637330902918203684832716283019655932542975 x384) (= (x509 x75 1000000000000000000000000000) x361) (= (x627 1461501637330902918203684832716283019655932542975 x412) x451) (<= x776 340282366920938463463374607431768211455) (= x321 (not x161)) (= x328 (= x775 x781)) (< 0 x546) (= x546 (ite x739 1 0)) (= x404 x702) (= x458 (= x87 0)) (= x692 x261) (= 3607235850 x182) (= 1000000000000000000000000000 x551) (= x20 x352) (= (x338 (- x313 x624)) x730) (= x515 1000000000000000000000000000) (= x547 x326) (= x265 (x627 1461501637330902918203684832716283019655932542975 x412)) (= (x627 340282366920938463463374607431768211455 x526) x590) (= (x717 x291 52) x538) (not (> x382 x361)) (= x573 x739) (<= x291 1461501637330902918203684832716283019655932542975) (= x75 (x622 (+ x501 500000000000000000000000000))) (= x384 x261) (<= x96 1461501637330902918203684832716283019655932542975) (= x268 (x338 (- x361 x382))) (= (- x492 x386) x781) (= (x338 (- x313 x624)) x314) (= (+ x590 x81) x492) (= x85 (x717 x291 52)) (<= x558 1461501637330902918203684832716283019655932542975) (<= x79 340282366920938463463374607431768211455) (not (< x182 2113256763)) (= (> x79 x641) x161) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x313) (> 1461501637330902918203684832716283019655932542976 x87) (not (> x624 340282366920938463463374607431768211455)) (<= 0 x470) (>= x384 0) (>= 1461501637330902918203684832716283019655932542975 x452) (= x109 (ite x404 1 0)) (>= 340282366920938463463374607431768211455 x386) (not (= 0 x624)) (= (not x353) x703) (= x720 (or x321 x228)) (= x382 (x509 x409 1000000000000000000000000000)) (= x558 x54) x328) (or x458 (and (and (= (x141 x87) x345) (not (= x345 0))) (not x458)))) x604) x468))
(assert (x212 x214 x506 x776 x79))
(assert (x247 x79 x776 x244 x631))
(assert (x48 x412))
(assert (x718 x631 (- x244 x776)))
(assert (not (= (x717 x170 52) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (x454 x224))
(assert (x454 x317))
(assert (x718 x79 (- x776 x99)))
(assert (=> (= (x717 x558 1) (x717 x364 1)) (= x558 x364)))
(assert (x454 x361))
(assert (=> (<= x14 10000) (not (= x14 (x717 x14 52)))))
(assert (x454 x527))
(assert (x454 x26))
(assert (x454 x745))
(assert (=> (>= 10000 x364) (not (= x364 (x717 x747 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x717 x86 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x717 x442 52))))
(assert (and (and (= (* (- x173 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x677 3 (- x173 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x173 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x173 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x173 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x677 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x173) (- (* 3 x173) (* x173 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x550 3 x173) (= (x677 3 x173) (* x173 3)) (x329 3 x173) (x487 3 x173) (x790 3 x173) (x726 3 x173)))
(assert (x212 x40 x341 x79 x776))
(assert (x247 x776 x79 x374 x99))
(assert (x454 x505))
(assert (=> (>= 10000 x364) (not (= (x717 x170 52) x364))))
(assert (=> (<= x87 10000) (not (= (x717 x747 1) x87))))
(assert (x454 x324))
(assert (x88 x776))
(assert (x454 x244))
(assert (= (or x19 (and x523 (not x346)) (and x520 x73) (and x453 x511) x444 (and x35 x204)) x596))
(assert (x454 x29))
(assert (x718 x79 (- x776 x40)))
(assert (and (x296 x260 1000000000000000000000000000) (x706 x260 1000000000000000000000000000) (x463 x260 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x260 0)) (and (>= x260 (* (x509 x260 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x260 1000000000000000000000000000)) (- x260 1000000000000000000000000000)))) (x69 x260 1000000000000000000000000000)))
(assert (x718 x631 (- x244 x506)))
(assert (x454 x436))
(assert (= (and x753 x172) x556))
(assert (not (= (x717 x558 1) 1000000000000000000000000000)))
(assert (=> (>= 10000 x11) (not (= (x717 x364 1) x11))))
(assert (x454 x30))
(assert (not (= 340282366920938463463374607431768211456 (x717 x364 1))))
(assert (x218 (- x214 x244)))
(assert (not (= (x717 x747 1) 497176382)))
(assert (not (= 2835717307 (x717 x124 1))))
(assert (and (x296 x660 1000000000000000000000000000) (x706 x660 1000000000000000000000000000) (x463 x660 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x660 0)) (and (>= x660 (* (x509 x660 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x660 1000000000000000000000000000)) (- x660 1000000000000000000000000000)))) (x69 x660 1000000000000000000000000000)))
(assert (=> (<= x400 10000) (not (= (x717 x364 1) x400))))
(assert (x151 x242))
(assert (not (= (x717 x558 1) 497176382)))
(assert (x454 x99))
(assert (x718 x341 (- x40 x99)))
(assert (not (= (x717 x11 52) 3607235850)))
(assert (=> (<= x364 10000) (not (= (x717 x11 52) x364))))
(assert (x454 x795))
(assert (x454 x364))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x717 x747 1))))
(assert (x218 x79))
(assert (x454 x75))
(assert (x363 340282366920938463463374607431768211455))
(assert (=> (= (x717 x291 52) (x717 x14 52)) (= x291 x14)))
(assert (x454 x287))
(assert (x454 x446))
(assert (not (= (x717 x170 52) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (x454 x424))
(assert (x718 x341 (- x40 x374)))
(assert (not (= 3018967357 (x717 x14 52))))
(assert (= x522 (and (not x652) x240)))
(assert (=> (>= 10000 x170) (not (= (x717 x86 1) x170))))
(assert (= x80 (=> (and (= x715 0) (= x232 x785) (= x488 x575) (= x557 x380) (= x557 (x338 (- x741 x65))) (= x704 x119)) x514)))
(assert (x454 x741))
(assert (=> (= (x717 x170 52) (x717 x291 52)) (= x291 x170)))
(assert (x454 x87))
(assert (not (= (x717 x170 52) 500000000000000000000000000)))
(assert (=> (= (x717 x558 1) (x717 x124 1)) (= x558 x124)))
(assert (x454 x107))
(assert (=> (>= 10000 x33) (not (= x33 (x717 x170 52)))))
(assert (not (= (x717 x442 52) 1461501637330902918203684832716283019655932542976)))
(assert (x212 x99 x374 x631 x244))
(assert (x212 x341 x40 x374 x99))
(assert (x218 (- x99 x776)))
(assert (=> (>= 10000 x472) (not (= (x717 x558 1) x472))))
(assert (= x427 (and x4 x651)))
(assert (x212 x374 x99 x506 x214))
(assert (x454 x686))
(assert (x218 x374))
(assert (x454 x531))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x717 x33 1))))
(assert (x454 x360))
(assert (not (= (x717 x747 1) 1000000000000000000000000000)))
(assert (x454 x327))
(assert (x718 x99 (- x374 x79)))
(assert (= x743 (and x449 x578)))
(assert (= (and x566 x655) x49))
(assert (not (= (x717 x364 1) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (x718 x506 (- x214 x79)))
(assert (x212 x214 x506 x631 x244))
(assert (not (= (x717 x14 52) 157198259)))
(assert (x454 x576))
(assert (x454 x164))
(assert (x88 115792089237316195423570985008687907853269984665640064039457584007913129639935))
(assert (x212 x341 x40 x506 x214))
(assert (not (= (x717 x747 1) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (x212 x776 x79 x374 x99))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x717 x747 1))))
(assert (x212 x40 x341 x99 x374))
(assert (=> (<= x33 10000) (not (= x33 (x717 x14 52)))))
(assert (x247 x341 x40 x244 x631))
(assert (= x180 (and x410 x373)))
(assert (not (= 500000000000000000000000000 (x717 x291 52))))
(assert (=> (= (x717 x747 1) (x717 x33 1)) (= x747 x33)))
(assert (=> (>= 10000 x364) (not (= x364 (x717 x364 1)))))
(assert (x454 x286))
(assert (x212 x776 x79 x341 x40))
(assert (not (= (x717 x747 1) 1461501637330902918203684832716283019655932542975)))
(assert (x454 x332))
(assert (x454 x519))
(assert (x247 x341 x40 x374 x99))
(assert (not (= 2835717307 (x717 x11 52))))
(assert (x454 x704))
(assert (x363 x481))
(assert (x454 x421))
(assert (x218 (- x506 x244)))
(assert (not (= (x717 x14 52) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (x454 x725))
(assert (= (or x248 x522) x76))
(assert (x718 x99 (- x374 x341)))
(assert (= (and x207 (not x188)) x344))
(assert (not (= 1 (x717 x14 52))))
(assert (=> (>= 10000 x442) (not (= x442 (x717 x124 1)))))
(assert (x454 x423))
(assert (x88 x75))
(assert (not (= (x717 x170 52) 2835717307)))
(assert (=> (>= 10000 x14) (not (= (x717 x291 52) x14))))
(assert (x218 (- x244 x214)))
(assert (x454 x746))
(assert (x212 x374 x99 x631 x244))
(assert (=> (<= x291 10000) (not (= x291 (x717 x33 1)))))
(assert (x454 x577))
(assert (x212 x79 x776 x40 x341))
(assert (x218 (- x341 x99)))
(assert (x212 x506 x214 x631 x244))
(assert (x247 x631 x244 x506 x214))
(assert (x454 x609))
(assert (not (= 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x717 x747 1))))
(assert (x454 x551))
(assert (not (= (x717 x14 52) 340282366920938463463374607431768211455)))
(assert (x454 x348))
(assert (not (= (x717 x11 52) 157198259)))
(assert (x454 x490))
(assert (x454 x264))
(assert (not (= 404098525 (x717 x11 52))))
(assert (x454 x182))
(assert (=> (<= x86 10000) (not (= x86 (x717 x364 1)))))
(assert (not (= 3018967357 (x717 x747 1))))
(assert (=> (<= x785 10000) (not (= x785 (x717 x558 1)))))
(assert (= x673 (and x574 x36)))
(assert (not (= 1 (x717 x747 1))))
(assert (=> (= (x717 x291 52) (x717 x11 52)) (= x291 x11)))
(assert (x454 x294))
(assert (=> (>= 10000 x364) (not (= (x717 x124 1) x364))))
(assert (x212 x506 x214 x99 x374))
(assert (x454 x11))
(assert (x454 x690))
(assert (x454 x709))
(assert (=> (>= 10000 x558) (not (= (x717 x86 1) x558))))
(assert (x718 x79 (- x776 x631)))
(assert (=> (<= x747 10000) (not (= (x717 x558 1) x747))))
(assert (x212 x631 x244 x341 x40))
(assert (x212 x506 x214 x79 x776))
(assert (not (= 3607235850 (x717 x33 1))))
(assert (x454 x225))
(assert (not (= (x717 x747 1) 1889567281)))
(assert (x718 x374 (- x99 x40)))
(assert (x212 x374 x99 x776 x79))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x717 x124 1))))
(assert (x218 (- x776 x244)))
(assert (not (= (x717 x33 1) 115792089237316195423570985008687907853269984665640)))
(assert (=> (>= 10000 x87) (not (= x87 (x717 x14 52)))))
(assert (x718 x40 (- x341 x214)))
(assert (x718 x506 x214))
(assert (x454 x730))
(assert (not (= (x717 x170 52) 2113256763)))
(assert (x718 x341 (- x40 x631)))
(assert (=> (<= x14 10000) (not (= (x717 x558 1) x14))))
(assert (x454 x47))
(assert (x218 (- x374 x214)))
(assert (x454 x495))
(assert (not (= (x717 x86 1) 1000000000000000000000000000)))
(assert (not (= 1889567281 (x717 x364 1))))
(assert (not (= (x717 x86 1) (x717 x442 52))))
(assert (x718 x40 (- x341 x631)))
(assert (x454 x642))
(assert (and (x296 x612 1000000000000000000000000000) (x706 x612 1000000000000000000000000000) (x463 x612 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x612 0)) (and (>= x612 (* (x509 x612 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x509 x612 1000000000000000000000000000)) (- x612 1000000000000000000000000000)))) (x69 x612 1000000000000000000000000000)))
(assert (x454 x437))
(assert (not (= (x717 x170 52) (x717 x747 1))))
(assert (not (= (x717 x558 1) 1)))
(assert (= x302 (or x497 x339)))
(assert (x454 x27))
(assert (=> (>= 10000 x472) (not (= x472 (x717 x747 1)))))
(assert (not (= (x717 x170 52) (x717 x558 1))))
(assert (x218 (- x40 x99)))
(assert (x718 x79 x776))
(assert (=> (= (x717 x11 52) (x717 x442 52)) (= x11 x442)))
(assert (= true x198))
(assert (=> (>= 10000 x107) (not (= x107 (x717 x558 1)))))
(assert (x247 x40 x341 x374 x99))
(assert (x454 x288))
(assert (x212 x99 x374 x40 x341))
(assert (=> (<= x11 10000) (not (= x11 (x717 x33 1)))))
(assert (x454 x496))
(assert (x454 x189))
(assert (=> (>= 10000 x747) (not (= (x717 x33 1) x747))))
(assert (x454 x692))
(assert (=> (<= x86 10000) (not (= x86 (x717 x170 52)))))
(assert (not (= (x717 x291 52) 2113256763)))
(assert (=> (<= x364 10000) (not (= (x717 x558 1) x364))))
(assert (x454 x762))
(assert (=> (>= 10000 x170) (not (= (x717 x747 1) x170))))
(assert (x454 x299))
(assert (not (= 3607235850 (x717 x124 1))))
(assert (x454 x17))
(assert (x454 x112))
(assert (x718 x341 (- x40 x776)))
(assert (x454 x544))
(assert (= (and x523 x346) x35))
(check-sat)
(exit)
