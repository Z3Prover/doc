(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x125 () Int)
(declare-fun x126 () Int)
(declare-fun x254 () Bool)
(declare-fun x74 () Int)
(declare-fun x1 () Int)
(declare-fun x62 () Int)
(declare-fun x12 () Int)
(declare-fun x35 () Bool)
(declare-fun x106 () Int)
(declare-fun x66 () Int)
(declare-fun x139 () Int)
(declare-fun x5 () Int)
(declare-fun x166 () Bool)
(declare-fun x266 (Int) Int)
(declare-fun x171 () Int)
(declare-fun x290 () Int)
(declare-fun x36 () Int)
(declare-fun x298 () Int)
(declare-fun x224 () Int)
(declare-fun x68 () Int)
(declare-fun x121 () Int)
(declare-fun x178 (Int) Int)
(declare-fun x63 () Int)
(declare-fun x177 () Int)
(declare-fun x133 (Int) Int)
(declare-fun x186 () Int)
(declare-fun x85 () Int)
(declare-fun x67 () Int)
(declare-fun x219 () Int)
(declare-fun x8 (Int) Int)
(declare-fun x326 (Int) Int)
(declare-fun x274 (Int Int) Int)
(declare-fun x45 () Int)
(declare-fun x29 (Int) Int)
(declare-fun x197 () Int)
(declare-fun x279 () Int)
(declare-fun x284 () Bool)
(declare-fun x103 () Int)
(declare-fun x55 () Int)
(declare-fun x263 () Int)
(declare-fun x153 () Int)
(declare-fun x80 () Int)
(declare-fun x118 () Int)
(declare-fun x157 () Int)
(declare-fun x210 () Bool)
(declare-fun x52 () Int)
(declare-fun x159 () Int)
(declare-fun x229 () Int)
(declare-fun x138 () Int)
(declare-fun x269 () Bool)
(declare-fun x28 () Int)
(declare-fun x129 () Int)
(declare-fun x137 () Int)
(declare-fun x200 () Int)
(declare-fun x154 () Int)
(declare-fun x328 () Int)
(declare-fun x252 () Int)
(declare-fun x255 () Bool)
(declare-fun x189 () Int)
(declare-fun x115 () Int)
(declare-fun x319 () Int)
(declare-fun x208 (Int) Int)
(declare-fun x239 () Int)
(declare-fun x165 () Bool)
(declare-fun x240 () Int)
(declare-fun x323 () Int)
(declare-fun x108 () Int)
(declare-fun x203 () Int)
(declare-fun x234 () Int)
(declare-fun x141 () Int)
(declare-fun x308 () Bool)
(declare-fun x54 () Int)
(declare-fun x57 () Int)
(declare-fun x322 () Int)
(declare-fun x163 (Int) Int)
(declare-fun x233 () Int)
(declare-fun x318 () Int)
(declare-fun x261 () Int)
(declare-fun x267 () Bool)
(declare-fun x31 () Int)
(declare-fun x231 () Int)
(declare-fun x155 () Bool)
(declare-fun x13 () Bool)
(declare-fun x98 () Int)
(declare-fun x172 () Int)
(declare-fun x223 () Int)
(declare-fun x170 () Int)
(declare-fun x123 () Int)
(declare-fun x77 () Int)
(declare-fun x134 () Int)
(declare-fun x201 () Int)
(declare-fun x204 () Bool)
(declare-fun x259 (Int Int) Int)
(declare-fun x88 () Bool)
(declare-fun x89 (Int) Int)
(declare-fun x243 () Int)
(declare-fun x185 () Int)
(declare-fun x79 (Int) Int)
(declare-fun x61 () Bool)
(declare-fun x84 () Int)
(declare-fun x295 () Int)
(declare-fun x119 () Int)
(declare-fun x232 () Bool)
(declare-fun x32 () Int)
(declare-fun x34 () Int)
(declare-fun x162 () Int)
(declare-fun x83 () Int)
(declare-fun x86 (Int) Int)
(declare-fun x151 (Int Int) Int)
(declare-fun x10 () Bool)
(declare-fun x316 () Int)
(declare-fun x160 () Int)
(declare-fun x27 () Bool)
(declare-fun x135 () Int)
(declare-fun x248 () Int)
(declare-fun x307 () Int)
(declare-fun x311 () Bool)
(declare-fun x16 () Int)
(declare-fun x302 () Int)
(declare-fun x156 () Bool)
(declare-fun x112 () Bool)
(declare-fun x44 (Int) Int)
(declare-fun x81 () Int)
(declare-fun x258 () Bool)
(declare-fun x242 () Int)
(declare-fun x117 () Bool)
(declare-fun x214 () Bool)
(declare-fun x94 () Bool)
(declare-fun x184 () Bool)
(declare-fun x180 () Bool)
(declare-fun x147 () Int)
(declare-fun x272 (Int) Int)
(declare-fun x250 () Int)
(declare-fun x309 () Int)
(declare-fun x175 () Int)
(declare-fun x303 () Int)
(declare-fun x26 () Int)
(declare-fun x65 () Int)
(declare-fun x2 () Bool)
(declare-fun x191 () Int)
(declare-fun x296 () Int)
(declare-fun x280 () Int)
(declare-fun x40 () Bool)
(declare-fun x199 () Int)
(declare-fun x75 () Int)
(declare-fun x324 () Int)
(declare-fun x173 () Int)
(declare-fun x226 () Int)
(declare-fun x102 () Bool)
(declare-fun x91 () Int)
(declare-fun x299 () Bool)
(declare-fun x235 () Int)
(declare-fun x202 () Int)
(declare-fun x321 () Int)
(declare-fun x268 () Int)
(declare-fun x69 () Int)
(declare-fun x9 () Int)
(declare-fun x291 () Bool)
(declare-fun x253 () Int)
(declare-fun x14 () Int)
(declare-fun x130 () Int)
(declare-fun x124 () Int)
(declare-fun x273 () Int)
(declare-fun x192 (Int) Int)
(declare-fun x228 () Int)
(declare-fun x305 () Int)
(declare-fun x256 () Int)
(declare-fun x110 () Int)
(declare-fun x87 () Int)
(declare-fun x46 () Int)
(declare-fun x244 () Int)
(declare-fun x109 () Int)
(declare-fun x312 () Bool)
(declare-fun x195 () Int)
(declare-fun x294 () Int)
(declare-fun x47 () Int)
(declare-fun x128 () Int)
(declare-fun x60 () Int)
(declare-fun x196 () Bool)
(declare-fun x190 () Int)
(declare-fun x230 () Bool)
(declare-fun x179 () Int)
(declare-fun x264 () Int)
(declare-fun x144 () Int)
(declare-fun x277 () Bool)
(declare-fun x93 () Int)
(declare-fun x59 () Int)
(declare-fun x146 () Int)
(declare-fun x140 () Int)
(declare-fun x265 () Int)
(declare-fun x41 (Int Int) Int)
(declare-fun x227 () Int)
(declare-fun x237 () Int)
(declare-fun x58 () Bool)
(declare-fun x73 () Int)
(declare-fun x218 () Int)
(declare-fun x211 () Int)
(declare-fun x222 () Int)
(declare-fun x275 () Int)
(declare-fun x48 () Int)
(declare-fun x142 () Int)
(declare-fun x150 () Int)
(declare-fun x167 () Int)
(declare-fun x23 () Int)
(declare-fun x317 () Int)
(declare-fun x207 () Bool)
(declare-fun x25 () Bool)
(declare-fun x194 () Int)
(declare-fun x315 () Bool)
(declare-fun x18 () Int)
(declare-fun x262 () Bool)
(declare-fun x132 () Int)
(declare-fun x325 () Int)
(declare-fun x111 (Int) Int)
(declare-fun x209 () Int)
(declare-fun x107 () Int)
(declare-fun x104 () Int)
(declare-fun x193 () Int)
(declare-fun x145 () Bool)
(declare-fun x238 (Int Int) Int)
(declare-fun x148 () Int)
(declare-fun x182 () Int)
(declare-fun x53 () Bool)
(declare-fun x246 () Bool)
(declare-fun x78 () Int)
(declare-fun x116 () Bool)
(declare-fun x241 () Int)
(declare-fun x99 () Bool)
(declare-fun x143 (Int Int) Int)
(declare-fun x158 () Bool)
(declare-fun x37 () Int)
(declare-fun x71 () Bool)
(declare-fun x100 () Int)
(declare-fun x70 () Int)
(declare-fun x331 () Int)
(declare-fun x288 () Int)
(declare-fun x205 () Int)
(declare-fun x198 () Int)
(declare-fun x105 () Bool)
(declare-fun x271 () Bool)
(declare-fun x245 () Int)
(declare-fun x39 () Int)
(declare-fun x304 () Int)
(declare-fun x120 () Int)
(declare-fun x260 () Int)
(declare-fun x301 (Int Int) Int)
(declare-fun x19 () Int)
(declare-fun x270 () Int)
(declare-fun x42 () Int)
(declare-fun x82 () Bool)
(declare-fun x327 () Int)
(declare-fun x21 () Int)
(declare-fun x96 () Int)
(declare-fun x136 () Int)
(declare-fun x188 () Int)
(declare-fun x292 () Int)
(declare-fun x278 () Int)
(declare-fun x257 () Int)
(declare-fun x30 () Bool)
(declare-fun x95 () Int)
(declare-fun x220 () Int)
(declare-fun x287 () Bool)
(declare-fun x6 () Bool)
(declare-fun x217 () Int)
(declare-fun x113 () Int)
(declare-fun x281 () Int)
(declare-fun x329 () Int)
(declare-fun x64 () Int)
(declare-fun x212 () Int)
(declare-fun x283 () Int)
(declare-fun x122 () Int)
(declare-fun x152 () Int)
(declare-fun x306 () Int)
(declare-fun x15 () Int)
(define-fun x114 ((x249 Int)) Int (ite (and (>= x249 0) (< x249 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x249 (- x249 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x181 ((x249 Int)) Int (ite (and (< x249 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x249)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249) x249))
(define-fun x330 ((x249 Int)) Int (ite (and (< x249 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x249 0)) x249 (ite (and (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x249) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249)) (- x249 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x249)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x249) (x259 x249 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x282 ((x4 Int)) Bool (and (>= x4 0) (< x4 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x51 ((x4 Int)) Bool (and (<= 0 x4) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4)))
(define-fun x289 ((x4 Int) (x187 Int)) Bool (=> (and (> x4 0) (< 0 x187)) (and (>= x4 (x301 x4 x187)) (<= 0 (x301 x4 x187)))))
(define-fun x313 ((x4 Int) (x187 Int)) Bool (=> (and (and (<= 0 x4) (< x4 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (<= 1 x187) (< x187 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x301 x4 x187)) (>= (x301 x4 x187) 0))))
(define-fun x251 ((x4 Int) (x187 Int)) Bool (=> (and (> x187 1) (< x187 x4)) (> x4 (x301 x4 x187))))
(define-fun x3 ((x4 Int) (x187 Int)) Bool (=> (and (< 0 x187) (< 0 x4)) (= (> x187 x4) (= (x301 x4 x187) 0))))
(define-fun x101 ((x4 Int) (x187 Int)) Bool (=> (and (< 0 x4) (> x187 0)) (and (< (- x4 x187) (x41 (x301 x4 x187) x187)) (>= x4 (x41 (x301 x4 x187) x187)))))
(define-fun x161 ((x4 Int) (x187 Int)) Bool (and (x101 x4 x187) (x3 x4 x187) (x289 x4 x187) (x251 x4 x187) (x313 x4 x187)))
(define-fun x285 ((x4 Int)) Bool (= (x301 0 x4) 0))
(define-fun x20 ((x4 Int)) Bool (= x4 (x301 x4 1)))
(define-fun x22 ((x4 Int)) Bool (=> (not (= 0 x4)) (= 1 (x301 x4 x4))))
(define-fun x276 ((x4 Int)) Bool (and (x20 x4) (x285 x4) (x22 x4)))
(define-fun x131 ((x4 Int)) Bool (and (= (x151 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4) x4) (= (x151 x4 115792089237316195423570985008687907853269984665640564039457584007913129639935) x4)))
(define-fun x332 ((x4 Int)) Bool (and (= (x151 0 x4) 0) (= (x151 x4 0) 0)))
(define-fun x72 ((x4 Int)) Bool (= (x151 x4 x4) x4))
(define-fun x168 ((x4 Int)) Bool (and (x332 x4) (x72 x4) (x131 x4)))
(define-fun x90 ((x4 Int) (x187 Int)) Bool (= (x151 x4 x187) (x151 x187 x4)))
(define-fun x169 ((x4 Int) (x187 Int)) Bool (and (=> (<= 0 x4) (>= x4 (x151 x4 x187))) (<= 0 (x151 x4 x187)) (=> (<= 0 x187) (>= x187 (x151 x4 x187)))))
(define-fun x17 ((x4 Int) (x187 Int)) Bool (and (x90 x4 x187) (x169 x4 x187)))
(define-fun x24 ((x4 Int) (x187 Int)) Bool (= (x41 x187 x4) (x41 x4 x187)))
(define-fun x215 ((x4 Int) (x187 Int)) Bool (and (=> (and (< 0 x4) (< 0 x187)) (> (x41 x4 x187) 0)) (=> (and (> 0 x187) (< x4 0)) (> (x41 x4 x187) 0)) (=> (and (> 0 x187) (< 0 x4)) (> 0 (x41 x4 x187))) (=> (and (< x4 0) (> x187 0)) (< (x41 x4 x187) 0))))
(define-fun x300 ((x4 Int) (x187 Int)) Bool (=> (and (> x187 0) (> x4 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x41 x4 x187)) (= x187 (x301 (x330 (x41 x4 x187)) x4)))))
(define-fun x149 ((x4 Int) (x187 Int)) Bool (=> (and (not (= x4 0)) (not (= 0 x187))) (and (= x4 (x301 (x41 x4 x187) x187)) (= (x301 (x41 x4 x187) x4) x187))))
(define-fun x127 ((x4 Int) (x187 Int)) Bool (=> (and (> x187 0) (> x4 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x41 x4 x187)) (> x187 (x301 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4)))))
(define-fun x43 ((x4 Int) (x187 Int)) Bool (and (= (x330 (x41 x4 x187)) (x330 (x41 (- x4 115792089237316195423570985008687907853269984665640564039457584007913129639936) x187))) (= (x330 (x41 x4 x187)) (x330 (x41 (- x4 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x330 (x41 x4 x187)) (x330 (x41 x4 (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x216 ((x4 Int) (x187 Int)) Bool (and (=> (and (and (> x4 0) (<= x4 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x187 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x187))) (= (>= (x301 57896044618658097711785492504343953926634992332820282019728792003956564819967 x187) x4) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x41 x4 x187)))) (=> (and (and (> x4 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x187) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x187))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x41 x4 (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x301 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x187)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4) (> x4 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x187 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x187))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x41 (- x4 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4) (x301 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x187))))) (=> (and (and (<= x187 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x187 0)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4) (<= x4 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x301 57896044618658097711785492504343953926634992332820282019728792003956564819968 x187) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4)) (>= (x41 (- x4 115792089237316195423570985008687907853269984665640564039457584007913129639936) x187) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968))))))
(define-fun x164 ((x4 Int) (x187 Int)) Bool (and (x43 x4 x187) (x149 x4 x187) (x216 x4 x187) (x24 x4 x187) (x300 x4 x187) (x215 x4 x187) (x127 x4 x187)))
(define-fun x225 ((x4 Int)) Bool (and (= 0 (x41 0 x4)) (= (x41 x4 0) 0)))
(define-fun x56 ((x4 Int)) Bool (and (= x4 (x41 x4 1)) (= x4 (x41 1 x4))))
(define-fun x174 ((x4 Int)) Bool (and (x225 x4) (x56 x4)))
(define-fun x297 ((x4 Int)) Bool (and (= (x143 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x143 x4 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x293 ((x4 Int)) Bool (and (= (x143 0 x4) x4) (= (x143 x4 0) x4)))
(define-fun x213 ((x4 Int)) Bool (= (x143 x4 x4) x4))
(define-fun x76 ((x4 Int)) Bool (and (x213 x4) (x297 x4) (x293 x4)))
(define-fun x97 ((x4 Int) (x187 Int)) Bool (= (x143 x187 x4) (x143 x4 x187)))
(define-fun x183 ((x4 Int) (x187 Int)) Bool (and (=> (<= 0 x187) (>= (x143 x4 x187) x187)) (=> (>= x4 0) (>= (x143 x4 x187) x4)) (>= (+ x187 x4) (x143 x4 x187))))
(define-fun x92 ((x4 Int) (x187 Int)) Bool (and (x183 x4 x187) (x97 x4 x187)))
(define-fun x38 ((x4 Int)) Bool (= (x259 x4 1461501637330902918203684832716283019655932542976) (x151 x4 1461501637330902918203684832716283019655932542975)))
(define-fun x221 ((x4 Int)) Bool (and (x38 x4) (x17 x4 1461501637330902918203684832716283019655932542975)))
(define-fun x320 ((x4 Int) (x187 Int)) Bool (and (<= 0 (x259 x4 x187)) (> x187 (x259 x4 x187))))
(define-fun x33 ((x4 Int) (x187 Int)) Bool (=> (and (>= x4 0) (> x187 0)) (= (= (x259 x4 x187) x4) (< x4 x187))))
(define-fun x176 ((x4 Int) (x187 Int)) Bool (=> (and (< 0 x187) (and (> (+ x187 x187) x4) (>= x4 x187))) (= (- x4 x187) (x259 x4 x187))))
(define-fun x50 ((x4 Int)) Bool (= 0 (x259 0 x4)))
(define-fun x11 ((x4 Int)) Bool (= (x259 x4 1) 0))
(define-fun x206 ((x4 Int)) Bool (= (x259 x4 x4) 0))
(define-fun x310 ((x4 Int)) Bool (and (x11 x4) (x206 x4) (x50 x4)))
(define-fun x7 ((x4 Int) (x187 Int) (x236 Int) (x49 Int)) Bool (=> (and (>= x236 x4) (<= 0 x187) (>= x49 x187) (>= x4 0)) (>= (x41 x236 x49) (x41 x4 x187))))
(define-fun x247 ((x4 Int) (x187 Int) (x236 Int) (x49 Int)) Bool (=> (= x236 x4) (= (- (x41 x4 x187) (x41 x236 x49)) (x41 x4 (- x187 x49)))))
(assert (not (= (+ 2 x15) (x274 x16 x261))))
(assert (=> (>= 10000 x322) (not (= x322 (+ 1 x142)))))
(assert (x76 x57))
(assert (x174 x18))
(assert (not (= (x274 x173 5) (x274 x248 1))))
(assert (=> (<= x65 10000) (not (= (+ 1 x235) x65))))
(assert (not (= (x274 x295 x80) 1710941022)))
(assert (not (= (x274 x227 1) 1980270339)))
(assert (not (= 699302164 (x274 x153 3))))
(assert (not (= (x274 x16 x261) 761373525)))
(assert (x168 x128))
(assert (not (= (x274 x153 3) (+ x152 3))))
(assert (not (= 3 (x274 x16 x28))))
(assert (=> (<= x65 10000) (not (= x65 (x274 x227 1)))))
(assert (=> (>= 10000 x65) (not (= x65 (x274 x153 4)))))
(assert (not (= 761373525 (+ x235 1))))
(assert (x51 x107))
(assert (not (= (x274 x153 2) 2)))
(assert (x17 x226 x107))
(assert (x51 x234))
(assert (x51 x159))
(assert (=> (= (x274 x227 1) (x274 x65 1)) (= x65 x227)))
(assert (x51 x118))
(assert (not (= (x274 x153 3) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (=> (<= x248 10000) (not (= x248 (x274 x153 2)))))
(assert (=> (>= 10000 x65) (not (= x65 (x274 x16 x261)))))
(assert (=> (>= 10000 x322) (not (= (x274 x248 1) x322))))
(assert (not (= 1980270339 (+ x142 1))))
(assert (x51 x186))
(assert (x282 x142))
(assert (=> (<= x264 10000) (not (= x264 (x274 x153 4)))))
(assert (=> (>= 10000 x173) (not (= (x274 x16 x28) x173))))
(assert (=> (<= x322 10000) (not (= x322 (x274 x153 3)))))
(assert (x168 x302))
(assert (x51 x322))
(assert (=> (<= x65 10000) (not (= (x274 x153 3) x65))))
(assert (not (= (+ x152 3) (+ x142 1))))
(assert (x174 x138))
(assert (not (= 699302164 (x274 x227 1))))
(assert (x51 x250))
(assert (x51 x201))
(assert (x51 x32))
(assert (x76 x139))
(assert (not (= (x274 x153 2) (x274 x248 1))))
(assert (x164 x328 x77))
(assert (=> (= (x274 x16 x261) (x274 x153 2)) (and (= 2 x261) (= x16 x153))))
(assert (not (= (x274 x153 4) (x274 x173 5))))
(assert (=> (<= x248 10000) (not (= x248 (x274 x264 x104)))))
(assert (not (= (x274 x264 x104) 231365057)))
(assert (and (x33 x93 1461501637330902918203684832716283019655932542976) (x320 x93 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x93 (+ (x259 x93 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x301 x93 1461501637330902918203684832716283019655932542976))))) (x176 x93 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x274 x153 3) 3)))
(assert (not (= (x274 x227 1) (+ x15 2))))
(assert (=> (= (+ x142 1) (+ 1 x235)) (and (= x80 2) (= x153 x295))))
(assert (not (= (x274 x227 1) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (=> (<= x227 10000) (not (= x227 (x274 x173 5)))))
(assert (not (= 3 (x274 x153 4))))
(assert (x276 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x201) x201 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x201 1)))))))
(assert (not (= (+ 1 x235) 2)))
(assert (not (= (x274 x295 x80) 2094874590)))
(assert (=> (>= 10000 x295) (not (= (x274 x65 1) x295))))
(assert (not (= 4 (+ 1 x142))))
(assert (not (= (x274 x16 x261) 699302164)))
(assert (=> (<= x248 10000) (not (= x248 (x274 x16 x28)))))
(assert (not (= (+ x98 4) 1814410054)))
(assert (not (= (x274 x295 x80) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= 2094874590 (x274 x248 1))))
(assert (=> (= (x274 x295 x80) (x274 x65 1)) (and (= x80 1) (= x65 x295))))
(assert (x168 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x227) (not (= (x274 x16 x321) x227))))
(assert (x17 x36 x303))
(assert (not (= 5 (x274 x153 4))))
(assert (not (= (x274 x153 4) (x274 x153 3))))
(assert (not (= (x274 x264 x104) 2094874590)))
(assert (not (= (x274 x248 1) 4)))
(assert (not (= 1763987465 (x274 x16 x321))))
(assert (x51 x290))
(assert (x168 x244))
(assert (x51 x125))
(assert (not (= (+ 2 x15) (+ 3 x152))))
(assert (=> (>= 10000 x264) (not (= x264 (x274 x153 2)))))
(assert (=> (<= x173 10000) (not (= x173 (+ 1 x142)))))
(assert (=> (= (x274 x16 x28) (x274 x248 1)) (and (= 1 x28) (= x248 x16))))
(assert (=> (= (x274 x153 2) (x274 x295 x80)) (and (= 2 x80) (= x153 x295))))
(assert (=> (= (x274 x16 x321) (x274 x264 x104)) (and (= x16 x264) (= x104 x321))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 4 x98))))
(assert (not (= 3 (x274 x173 5))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x274 x173 5))))
(assert (not (= (x274 x227 1) 1)))
(assert (not (= 231365057 (x274 x153 4))))
(assert (not (= (x274 x16 x261) 1814410054)))
(assert (not (= (+ x142 1) (x274 x16 x261))))
(assert (not (= (x274 x16 x28) 2)))
(assert (x51 x100))
(assert (not (= 1161348331 (x274 x173 5))))
(assert (=> (<= x295 10000) (not (= (x274 x16 x261) x295))))
(assert (x51 x63))
(assert (x92 x198 x222))
(assert (x51 x307))
(assert (not (= (x274 x153 4) (+ 4 x98))))
(assert (x51 x18))
(assert (not (= (x274 x264 x104) (+ 2 x15))))
(assert (x51 x327))
(assert (=> (<= x264 10000) (not (= x264 (x274 x65 1)))))
(assert (=> (<= x295 10000) (not (= x295 (x274 x153 4)))))
(assert (x51 x205))
(assert (=> (>= 10000 x16) (not (= x16 (+ x152 3)))))
(assert (not (= 1710941022 (x274 x16 x321))))
(assert (=> (>= 10000 x295) (not (= x295 (+ x15 2)))))
(assert (not (= (x274 x227 1) (+ x235 1))))
(assert (not (= (x274 x295 x80) 1980270339)))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x274 x173 5))))
(assert (not (= 761373525 (x274 x65 1))))
(assert (=> (<= x16 10000) (not (= x16 (x274 x16 x321)))))
(assert (x17 x115 x223))
(assert (x51 x126))
(assert (x17 x319 x34))
(assert (not (= (+ 1 x142) 699302164)))
(assert (not (= 1980270339 (x274 x65 1))))
(assert (=> (>= 10000 x16) (not (= (x274 x153 3) x16))))
(assert (x51 x211))
(assert (=> (>= 10000 x16) (not (= x16 (x274 x227 1)))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x274 x248 1))))
(assert (=> (<= x248 10000) (not (= x248 (x274 x16 x261)))))
(assert (not (= 2094874590 (+ x15 2))))
(assert (=> (<= x16 10000) (not (= x16 (x274 x173 5)))))
(assert (not (= 3 (x274 x153 2))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (+ 1 x142))))
(assert (x51 x260))
(assert (x51 x74))
(assert (not (= (x274 x173 5) (+ x152 3))))
(assert (=> (>= 10000 x264) (not (= (x274 x16 x261) x264))))
(assert (not (= (x274 x16 x261) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (=> (>= 10000 x264) (not (= x264 (+ 3 x152)))))
(assert (not (= (x274 x173 5) 1980270339)))
(assert (not (= (x274 x16 x321) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (not (= 231365057 (+ x98 4))))
(assert (x174 x162))
(assert (x168 x295))
(assert (x51 x73))
(assert (=> (= (x274 x264 x104) (x274 x16 x261)) (and (= x104 x261) (= x264 x16))))
(assert (=> (>= 10000 x322) (not (= (+ 2 x15) x322))))
(assert (=> (= (x274 x153 2) (x274 x16 x321)) (and (= 2 x321) (= x16 x153))))
(assert (=> (<= x248 10000) (not (= x248 (+ x15 2)))))
(assert (=> (<= x295 10000) (not (= (+ x142 1) x295))))
(assert (=> (<= x227 10000) (not (= (x274 x16 x28) x227))))
(assert (not (= (+ x152 3) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x274 x16 x28) 5)))
(assert (=> (= (x274 x16 x321) (x274 x173 5)) (and (= 5 x321) (= x173 x16))))
(assert (not (= (x274 x16 x28) (+ x142 1))))
(assert (not (= 3 (x274 x227 1))))
(assert (x51 x199))
(assert (not (= 761373525 (x274 x173 5))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x274 x227 1))))
(assert (not (= (x274 x153 4) (+ x235 1))))
(assert (not (= (+ x142 1) 1)))
(assert (x51 x77))
(assert (=> (<= x153 10000) (not (= (x274 x264 x104) x153))))
(assert (=> (>= 10000 x65) (not (= x65 (+ x142 1)))))
(assert (not (= (x274 x153 3) 2)))
(assert (x51 x59))
(assert (x51 x87))
(assert (not (= (x274 x227 1) 761373525)))
(assert (=> (>= 10000 x248) (not (= x248 (x274 x153 4)))))
(assert (x51 x239))
(assert (=> (= (x274 x295 x80) (x274 x16 x261)) (and (= x80 x261) (= x16 x295))))
(assert (not (= (+ x235 1) (x274 x153 2))))
(assert (x51 x115))
(assert (not (= 1161348331 (+ x235 1))))
(assert (=> (<= x264 10000) (not (= x264 (x274 x227 1)))))
(assert (=> (>= 10000 x264) (not (= (x274 x295 x80) x264))))
(assert (not (= (+ 4 x98) (x274 x16 x261))))
(assert (=> (>= 10000 x16) (not (= (x274 x153 2) x16))))
(assert (not (= 1814410054 (x274 x173 5))))
(assert (not (= (x274 x16 x321) (+ x235 1))))
(assert (x51 x148))
(assert (x168 x223))
(assert (=> (>= 10000 x248) (not (= x248 (x274 x153 3)))))
(assert (x76 x233))
(assert (x161 57896044618658097711785492504343953926634992332820282019728792003956564819967 x78))
(assert (x51 x68))
(assert (not (= 3 (x274 x295 x80))))
(assert (not (= 1161348331 (x274 x65 1))))
(assert (not (= 5 (x274 x248 1))))
(assert (=> (>= 10000 x322) (not (= (+ 1 x235) x322))))
(assert (not (= (x274 x153 4) 761373525)))
(assert (not (= (x274 x264 x104) 1)))
(assert (=> (>= 10000 x65) (not (= x65 (x274 x65 1)))))
(assert (not (= (x274 x153 3) 231365057)))
(assert (=> (<= x16 10000) (not (= x16 (+ x142 1)))))
(assert (x51 x189))
(assert (not (= (x274 x16 x321) 231365057)))
(assert (not (= (x274 x153 3) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x276 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x51 x190))
(assert (not x53))
(assert (=> (>= 10000 x322) (not (= (+ 4 x98) x322))))
(assert (not (= (+ x15 2) 699302164)))
(assert (not (= 761373525 (+ x152 3))))
(assert (not (= (x274 x264 x104) 699302164)))
(assert (not (= 1980270339 (x274 x16 x321))))
(assert (not (= 1 (+ x235 1))))
(assert (x168 x303))
(assert (not (= (+ 4 x98) (x274 x153 2))))
(assert (x17 x302 x54))
(assert (not (= (x274 x153 4) 699302164)))
(assert (x282 x261))
(assert (not (= (x274 x153 2) 1)))
(assert (x51 x219))
(assert (x51 x130))
(assert (=> (= (x274 x65 1) (x274 x16 x261)) (and (= x261 1) (= x65 x16))))
(assert (not (= 231365057 (+ x152 3))))
(assert (not (= (x274 x16 x28) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x51 x147))
(assert (x51 x191))
(assert (x51 x193))
(assert (x51 x65))
(assert (not (= 2 (x274 x153 4))))
(assert (=> (>= 10000 x153) (not (= x153 (x274 x16 x321)))))
(assert (not (= 1710941022 (x274 x153 3))))
(assert (not (= 5 (+ x235 1))))
(assert (not (= 1814410054 (x274 x264 x104))))
(assert (x51 x280))
(assert (x51 x197))
(assert (x174 x77))
(assert (x51 x229))
(assert (x51 x173))
(assert (=> (>= 10000 x173) (not (= (x274 x153 4) x173))))
(assert (=> (<= x153 10000) (not (= (x274 x227 1) x153))))
(assert (not (= (+ 3 x152) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x282 x15))
(assert (x161 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (< x203 57896044618658097711785492504343953926634992332820282019728792003956564819968) x203 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x203 1)))))))
(assert (not (= 231365057 (x274 x16 x261))))
(assert (not (= (x274 x16 x321) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x51 x203))
(assert (x282 x322))
(assert (not (= 699302164 (+ 4 x98))))
(assert (x51 x1))
(assert (=> (<= x264 10000) (not (= x264 (x274 x264 x104)))))
(assert (not (= 699302164 (x274 x16 x28))))
(assert (x168 x141))
(assert (not (= (+ 3 x152) (x274 x16 x321))))
(assert (=> (>= 10000 x264) (not (= (+ x235 1) x264))))
(assert (=> (>= 10000 x227) (not (= x227 (x274 x153 4)))))
(assert (x51 x188))
(assert (not (= (+ 1 x142) (x274 x248 1))))
(assert (=> (>= 10000 x173) (not (= x173 (+ 3 x152)))))
(assert (x51 x182))
(assert (not (= (+ x235 1) 1814410054)))
(assert (x51 x223))
(assert (x51 x304))
(assert (x76 x327))
(assert (not (= (+ x142 1) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (=> (>= 10000 x65) (not (= x65 (x274 x248 1)))))
(assert (not (= 4 (x274 x295 x80))))
(assert (x168 x186))
(assert (not (= 1 (x274 x153 4))))
(assert (not (= (x274 x65 1) (+ 2 x15))))
(assert (x51 x46))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x274 x153 4))))
(assert (not (= (x274 x295 x80) 5)))
(assert (not (= 1763987465 (x274 x227 1))))
(assert (=> (<= x16 10000) (not (= x16 (x274 x65 1)))))
(assert (x51 x110))
(assert (not (= (x274 x65 1) 5)))
(assert (x168 x220))
(assert (not (= (x274 x173 5) 231365057)))
(assert (not (= 1814410054 (+ 1 x142))))
(assert (not (= 4 (x274 x16 x261))))
(assert (not (= (+ x98 4) (+ 2 x15))))
(assert (x51 x42))
(assert (=> (= (x274 x153 3) (x274 x295 x80)) (and (= x153 x295) (= x80 3))))
(assert (x51 x160))
(assert (not (= (+ x235 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x274 x173 5) (+ 1 x142))))
(assert (x51 x256))
(assert (x174 x91))
(assert (x51 x78))
(assert (x51 x294))
(assert (=> (<= x16 10000) (not (= x16 (+ x235 1)))))
(assert (not (= (+ x142 1) 761373525)))
(assert (x51 x108))
(assert (=> (= (x274 x16 x261) (x274 x16 x321)) (= x321 x261)))
(assert (x51 x265))
(assert (x51 x134))
(assert (x51 x54))
(assert (x51 x162))
(assert (x282 x227))
(assert (=> (<= x322 10000) (not (= (x274 x16 x28) x322))))
(assert (=> (>= 10000 x227) (not (= x227 (+ x152 3)))))
(assert (=> (<= x295 10000) (not (= (x274 x248 1) x295))))
(assert (x174 x203))
(assert (=> (>= 10000 x153) (not (= (x274 x16 x261) x153))))
(assert (not (= 2 (x274 x16 x261))))
(assert (=> (>= 10000 x173) (not (= (x274 x153 3) x173))))
(assert (not (= (+ x152 3) (+ x235 1))))
(assert (=> (>= 10000 x322) (not (= x322 (x274 x16 x321)))))
(assert (not (= 1763987465 (x274 x153 4))))
(assert (not (= (+ 3 x152) 1814410054)))
(assert (=> (= (x274 x16 x321) (x274 x65 1)) (and (= x16 x65) (= x321 1))))
(assert (not (= (x274 x16 x321) 4)))
(assert (=> (<= x295 10000) (not (= (x274 x153 3) x295))))
(assert (not (= (+ 3 x152) 1763987465)))
(assert (x51 x231))
(assert (not (= (x274 x153 3) 1814410054)))
(assert (not (= (x274 x65 1) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= 699302164 (x274 x16 x321))))
(assert (not (= (x274 x248 1) 1710941022)))
(assert (not (= 1980270339 (x274 x248 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x274 x264 x104))))
(assert (x51 x248))
(assert (x51 x253))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x274 x16 x321))))
(assert (not (= (x274 x295 x80) (+ x98 4))))
(assert (x51 x144))
(assert (x282 x173))
(assert (not (= (+ 1 x235) (+ 2 x15))))
(assert (x51 x317))
(assert (not (= 231365057 (+ x235 1))))
(assert (not (= (x274 x248 1) 2)))
(assert (x51 x198))
(assert (not (= 5 (x274 x264 x104))))
(assert (not (= (x274 x173 5) 2)))
(assert (not (= (x274 x153 4) (x274 x153 2))))
(assert (not (= 3 (x274 x65 1))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x274 x16 x28))))
(assert (not (= (x274 x227 1) 4)))
(assert (x51 x64))
(assert (x168 x107))
(assert (not (= (+ x15 2) 231365057)))
(assert (=> (<= x227 10000) (not (= (+ x98 4) x227))))
(assert (=> (<= x295 10000) (not (= x295 (x274 x16 x28)))))
(assert (x51 x298))
(assert (=> (<= x248 10000) (not (= (x274 x295 x80) x248))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x274 x153 2))))
(assert (=> (>= 10000 x173) (not (= (x274 x16 x321) x173))))
(assert (not (= (x274 x153 4) (x274 x65 1))))
(assert (not (= 1161348331 (+ x142 1))))
(assert (x164 x138 x203))
(assert (not (= 699302164 (x274 x295 x80))))
(assert (not (= 3 (+ 4 x98))))
(assert (=> (= (x274 x227 1) (x274 x295 x80)) (and (= x80 1) (= x295 x227))))
(assert (not (= 1980270339 (+ 4 x98))))
(assert (=> (= (x274 x16 x28) (x274 x153 2)) (and (= 2 x28) (= x16 x153))))
(assert (=> (<= x153 10000) (not (= x153 (+ x142 1)))))
(assert (x51 x252))
(assert (x51 x324))
(assert (=> (>= 10000 x16) (not (= x16 (x274 x16 x28)))))
(assert (x168 x298))
(assert (x174 x78))
(assert (=> (>= 10000 x16) (not (= x16 (x274 x16 x261)))))
(assert (x161 57896044618658097711785492504343953926634992332820282019728792003956564819967 (ite (< x201 57896044618658097711785492504343953926634992332820282019728792003956564819968) x201 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x201 1)))))))
(assert (=> (>= 10000 x248) (not (= (x274 x248 1) x248))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 2 x15))))
(assert (not (= (x274 x65 1) (x274 x153 3))))
(assert (not (= (x274 x153 3) (+ 1 x142))))
(assert (x168 x54))
(assert (not (= 761373525 (x274 x16 x321))))
(assert (=> (>= 10000 x264) (not (= x264 (x274 x153 3)))))
(assert (x51 x26))
(assert (not (= 1161348331 (+ x98 4))))
(assert (x51 x34))
(assert (x282 x28))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x142 1))))
(assert (not (= (x274 x16 x28) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= 5 (x274 x227 1))))
(assert (x51 x37))
(assert (x51 x122))
(assert (=> (>= 10000 x173) (not (= (+ x15 2) x173))))
(assert (x51 x62))
(assert (x282 x152))
(assert (not (= 1980270339 (x274 x153 3))))
(assert (=> (>= 10000 x16) (not (= x16 (x274 x248 1)))))
(assert (not (= 231365057 (x274 x295 x80))))
(assert (x92 x57 x231))
(assert (x164 x1 x75))
(assert (=> (>= 10000 x227) (not (= x227 (x274 x248 1)))))
(assert (=> (<= x295 10000) (not (= (+ 4 x98) x295))))
(assert (not (= (x274 x248 1) 1814410054)))
(assert (=> (= (x274 x16 x261) (x274 x227 1)) (and (= x227 x16) (= x261 1))))
(assert (=> (>= 10000 x248) (not (= x248 (x274 x65 1)))))
(assert (not (= 2094874590 (+ x142 1))))
(assert (not (= (x274 x16 x28) 4)))
(assert (=> (= (x274 x153 3) (x274 x16 x321)) (and (= x153 x16) (= 3 x321))))
(assert (=> (>= 10000 x248) (not (= x248 (x274 x16 x321)))))
(assert (x51 x245))
(assert (not (= 1980270339 (x274 x264 x104))))
(assert (not (= (x274 x264 x104) (+ 1 x235))))
(assert (=> (<= x173 10000) (not (= x173 (x274 x264 x104)))))
(assert (not (= (x274 x153 4) 1161348331)))
(assert (not (= 761373525 (x274 x153 2))))
(assert (x161 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x201) x201 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x201 1)))))))
(assert (not (= 699302164 (x274 x65 1))))
(assert (not (= (x274 x153 4) 4)))
(assert (not (= (x274 x16 x261) 1)))
(assert (not (= (+ x142 1) (x274 x295 x80))))
(assert (not (= (x274 x248 1) 1161348331)))
(assert (=> (= (x274 x248 1) (x274 x65 1)) (= x65 x248)))
(assert (x51 x138))
(assert (not (= (x274 x16 x321) 1814410054)))
(assert (not (= 1 (+ 4 x98))))
(assert (not (= (+ x15 2) 5)))
(assert (not (= (+ x235 1) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x274 x227 1))))
(assert (x51 x153))
(assert (not (= (+ x15 2) (x274 x153 2))))
(assert (not (= (x274 x16 x261) 5)))
(assert (=> (= (x274 x264 x104) (x274 x153 3)) (and (= x264 x153) (= x104 3))))
(assert (=> (>= 10000 x173) (not (= x173 (x274 x173 5)))))
(assert (not (= (x274 x173 5) (+ x98 4))))
(assert (not (= (x274 x264 x104) 3)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x274 x248 1))))
(assert (x17 x323 x294))
(assert (x51 x296))
(assert (x168 x93))
(assert (not (= (+ 1 x235) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x51 x36))
(assert (not (= (x274 x153 2) 4)))
(assert (=> (= (x274 x264 x104) (x274 x248 1)) (and (= x104 1) (= x248 x264))))
(assert (x51 x302))
(assert (not (= (x274 x153 2) 5)))
(assert (=> (= (x274 x227 1) (x274 x248 1)) (= x227 x248)))
(assert (=> (>= 10000 x65) (not (= (x274 x153 2) x65))))
(assert (not (= 1710941022 (x274 x227 1))))
(assert (x168 x34))
(assert (x51 x137))
(assert (=> (= (x274 x173 5) (x274 x16 x261)) (and (= x261 5) (= x173 x16))))
(assert (not (= (x274 x16 x261) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (+ x15 2) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (=> (= (x274 x295 x80) (x274 x16 x28)) (and (= x80 x28) (= x295 x16))))
(assert (not (= (+ x142 1) (x274 x65 1))))
(assert (x282 x264))
(assert (not (= (+ x142 1) (+ x98 4))))
(assert (x51 x303))
(assert (not (= 761373525 (x274 x295 x80))))
(assert (x51 x69))
(assert (x168 x115))
(assert (not (= (x274 x227 1) (+ 1 x142))))
(assert (x51 x67))
(assert (not (= (x274 x295 x80) (+ 2 x15))))
(assert (not (= 5 (+ x152 3))))
(assert (x51 x185))
(assert (=> (= (x274 x264 x104) (x274 x295 x80)) (and (= x104 x80) (= x264 x295))))
(assert (x221 x295))
(assert (x92 x250 x109))
(assert (not (= 1161348331 (x274 x295 x80))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x274 x65 1))))
(assert (not (= 1980270339 (+ x15 2))))
(assert (=> (<= x248 10000) (not (= x248 (x274 x227 1)))))
(assert (not (= 4 (+ x15 2))))
(assert (not (= (x274 x264 x104) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= 2094874590 (x274 x153 4))))
(assert (x164 x203 x78))
(assert (x76 x256))
(assert (x51 x309))
(assert (=> (= (x274 x16 x321) (x274 x295 x80)) (and (= x16 x295) (= x80 x321))))
(assert (not (= 5 (x274 x16 x321))))
(assert (x282 x104))
(assert (=> (<= x16 10000) (not (= (+ x15 2) x16))))
(assert (=> (<= x173 10000) (not (= x173 (x274 x65 1)))))
(assert (x51 x103))
(assert (not (= (+ 2 x15) 1814410054)))
(assert (not (= 1763987465 (x274 x16 x261))))
(assert (x168 x319))
(assert (x51 x275))
(assert (not (= (+ 2 x15) (x274 x153 4))))
(assert (x51 x240))
(assert (not (= 1161348331 (x274 x16 x321))))
(assert (not (= 699302164 (x274 x173 5))))
(assert (=> (<= x295 10000) (not (= x295 (x274 x153 2)))))
(assert (not (= (x274 x248 1) 231365057)))
(assert (not (= (x274 x153 3) 1)))
(assert (x51 x150))
(assert (not (= (+ x15 2) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x274 x65 1) (+ x235 1))))
(assert (=> (= (x274 x16 x321) (x274 x227 1)) (and (= x321 1) (= x227 x16))))
(assert (x51 x91))
(assert (not (= (x274 x153 3) (+ 1 x235))))
(assert (x76 x109))
(assert (x17 x135 x268))
(assert (=> (>= 10000 x153) (not (= (x274 x173 5) x153))))
(assert (=> (>= 10000 x295) (not (= (x274 x173 5) x295))))
(assert (=> (>= 10000 x248) (not (= x248 (+ x142 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x274 x173 5))))
(assert (x51 x129))
(assert (not (= (+ x235 1) (x274 x248 1))))
(assert (=> (>= 10000 x248) (not (= x248 (+ x152 3)))))
(assert (not (= (+ x98 4) (x274 x153 3))))
(assert (not (= (+ 1 x142) 1710941022)))
(assert (=> (<= x173 10000) (not (= x173 (x274 x295 x80)))))
(assert (x51 x66))
(assert (=> (>= 10000 x16) (not (= x16 (x274 x264 x104)))))
(assert (not (= 231365057 (x274 x16 x28))))
(assert (not (= 1980270339 (x274 x153 4))))
(assert (x51 x202))
(assert (not (= (x274 x16 x321) (+ 4 x98))))
(assert (x51 x109))
(assert (=> (= (x274 x153 2) (x274 x264 x104)) (and (= x264 x153) (= x104 2))))
(assert (not (= (+ 3 x152) 4)))
(assert (x168 x135))
(assert (x51 x75))
(assert (not (= 1814410054 (x274 x153 2))))
(assert (x51 x244))
(assert (x51 x237))
(assert (=> (<= x153 10000) (not (= (x274 x153 3) x153))))
(assert (x51 x319))
(assert (not (= 1763987465 (x274 x65 1))))
(assert (not (= (x274 x227 1) (+ 4 x98))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (+ 3 x152))))
(assert (not (= (+ 2 x15) 1710941022)))
(assert (x51 x268))
(assert (not (= (x274 x173 5) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (=> (<= x173 10000) (not (= (x274 x227 1) x173))))
(assert (x51 x119))
(assert (not (= (x274 x16 x261) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (=> (>= 10000 x322) (not (= (x274 x173 5) x322))))
(assert (not (= (x274 x264 x104) 4)))
(assert (=> (<= x322 10000) (not (= (+ 3 x152) x322))))
(assert (x51 x81))
(assert (=> (>= 10000 x227) (not (= (x274 x227 1) x227))))
(assert (not (= (x274 x65 1) 1710941022)))
(assert (not (= (+ 3 x152) (x274 x65 1))))
(assert (=> (>= 10000 x153) (not (= x153 (x274 x153 2)))))
(assert (x76 x222))
(assert (=> (<= x227 10000) (not (= x227 (+ 1 x142)))))
(assert (not (= (x274 x16 x261) (+ x235 1))))
(assert (x282 x153))
(assert (not (= 5 (+ x142 1))))
(assert (not (= (x274 x264 x104) 761373525)))
(assert (x51 x295))
(assert (not (= 1710941022 (x274 x16 x28))))
(assert (=> (= (x274 x153 4) (x274 x16 x261)) (and (= x153 x16) (= x261 4))))
(assert (not (= (+ 3 x152) 699302164)))
(assert (=> (>= 10000 x248) (not (= x248 (+ x98 4)))))
(assert (x51 x233))
(assert (not (= (x274 x16 x321) 1)))
(assert (=> (= (x274 x65 1) (x274 x264 x104)) (and (= x264 x65) (= x104 1))))
(assert (not (= 1710941022 (x274 x264 x104))))
(assert (not (= (+ x142 1) (x274 x153 2))))
(assert (not (= (x274 x153 3) 2094874590)))
(assert (x282 x235))
(assert (not (= 1 (x274 x295 x80))))
(assert (x51 x47))
(assert (not (= (+ x142 1) (x274 x16 x321))))
(assert (x51 x120))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (+ x98 4))))
(assert (x221 x85))
(assert (=> (<= x322 10000) (not (= x322 (x274 x227 1)))))
(assert (not (= (x274 x153 3) (x274 x248 1))))
(assert (not (= (x274 x153 3) (x274 x173 5))))
(assert (= true x277))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 1 x235))))
(assert (x310 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x16 10000) (not (= x16 (+ 4 x98)))))
(assert (x51 x12))
(assert (x51 x292))
(assert (not (= 1814410054 (x274 x295 x80))))
(assert (not (= 5 (+ 4 x98))))
(assert (=> (= (x274 x153 4) (x274 x16 x28)) (and (= x16 x153) (= 4 x28))))
(assert (not (= (+ x15 2) 1161348331)))
(assert (not (= 4 (x274 x153 3))))
(assert (=> (>= 10000 x264) (not (= x264 (x274 x16 x321)))))
(assert (x276 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (not (= (x274 x153 3) 761373525)))
(assert (x51 x167))
(assert (x174 x75))
(assert (not (= (+ 3 x152) (x274 x16 x261))))
(assert (not (= (x274 x65 1) 2094874590)))
(assert (x51 x16))
(assert (not (= 2 (+ x15 2))))
(assert (x51 x279))
(assert (=> (<= x322 10000) (not (= x322 (x274 x153 2)))))
(assert (not (= (x274 x153 3) (+ x15 2))))
(assert (not (= (+ x152 3) 1161348331)))
(assert (not (= 1980270339 (+ x235 1))))
(assert (not (= (x274 x248 1) 3)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x274 x153 2))))
(assert (not (= (x274 x264 x104) (+ x98 4))))
(assert (=> (= (x274 x248 1) (x274 x295 x80)) (and (= x248 x295) (= 1 x80))))
(assert (=> (<= x295 10000) (not (= (x274 x295 x80) x295))))
(assert (not (= 5 (x274 x173 5))))
(assert (not (= (x274 x248 1) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (=> (>= 10000 x153) (not (= (x274 x153 4) x153))))
(assert (not (= 699302164 (+ 1 x235))))
(assert (x282 x16))
(assert (not (= 1161348331 (x274 x153 2))))
(assert (not (= (+ x152 3) 2)))
(assert (x51 x273))
(assert (=> (= (x274 x16 x28) (x274 x173 5)) (and (= 5 x28) (= x16 x173))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 4 x98))))
(assert (not (= (+ x15 2) (x274 x16 x321))))
(assert (x51 x241))
(assert (not (= (x274 x264 x104) (+ 1 x142))))
(assert (not (= (x274 x16 x261) 3)))
(assert (not (= (x274 x173 5) (x274 x227 1))))
(assert (=> (>= 10000 x173) (not (= (x274 x16 x261) x173))))
(assert (not (= 2094874590 (x274 x173 5))))
(assert (x168 x226))
(assert (x310 x85))
(assert (=> (<= x264 10000) (not (= (x274 x173 5) x264))))
(assert (x51 x9))
(assert (not (= (+ x142 1) 1763987465)))
(assert (=> (= (x274 x295 x80) (x274 x173 5)) (and (= x173 x295) (= 5 x80))))
(assert (not (= 1980270339 (+ 3 x152))))
(assert (x276 (ite (< x203 57896044618658097711785492504343953926634992332820282019728792003956564819968) x203 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x203 1)))))))
(assert (not (= 699302164 (x274 x248 1))))
(assert (not (= (x274 x227 1) 231365057)))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x274 x153 4))))
(assert (not (= 1710941022 (x274 x16 x261))))
(assert (not (= 1763987465 (+ x98 4))))
(assert (x51 x39))
(assert (x51 x243))
(assert (=> (<= x227 10000) (not (= (x274 x264 x104) x227))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x274 x65 1))))
(assert (not (= (+ x142 1) (x274 x153 4))))
(assert (not (= (+ x15 2) 3)))
(assert (not (= (x274 x153 2) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x17 x220 x296))
(assert (=> (>= 10000 x153) (not (= (+ 2 x15) x153))))
(assert (x51 x218))
(assert (=> (<= x264 10000) (not (= (+ 1 x142) x264))))
(assert (=> (<= x227 10000) (not (= x227 (x274 x153 2)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x142 1))))
(assert (not (= 1 (+ x152 3))))
(assert (not (= (x274 x16 x321) 2)))
(assert (not (= 1710941022 (x274 x173 5))))
(assert (not (= (x274 x227 1) (x274 x153 4))))
(assert (x168 x323))
(assert (not (= (+ 4 x98) 2)))
(assert (not (= 1710941022 (x274 x153 4))))
(assert (x282 x98))
(assert (not (= (+ 3 x152) (x274 x248 1))))
(assert (=> (= (x274 x153 3) (x274 x16 x261)) (and (= x261 3) (= x153 x16))))
(assert (not (= (x274 x16 x261) 1980270339)))
(assert (x51 x242))
(assert (=> (<= x65 10000) (not (= (+ x15 2) x65))))
(assert (not (= (x274 x16 x28) 1814410054)))
(assert (=> (>= 10000 x295) (not (= (+ 1 x235) x295))))
(assert (not (= (+ x235 1) 3)))
(assert (not (= (x274 x65 1) 1814410054)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x274 x153 4))))
(assert (x51 x128))
(assert (not (= 1161348331 (x274 x153 3))))
(assert (x51 x329))
(assert (x51 x227))
(assert (not (= (x274 x153 2) 699302164)))
(assert (not (= 1 (x274 x248 1))))
(assert (=> (>= 10000 x227) (not (= x227 (+ x235 1)))))
(assert (not (= (+ x152 3) (x274 x153 4))))
(assert (not (= (+ 4 x98) (x274 x248 1))))
(assert (=> (>= 10000 x248) (not (= x248 (x274 x173 5)))))
(assert (=> (= (x274 x264 x104) (x274 x16 x28)) (and (= x264 x16) (= x28 x104))))
(assert (and (x33 x295 1461501637330902918203684832716283019655932542976) (x320 x295 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x295 (+ (x259 x295 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x301 x295 1461501637330902918203684832716283019655932542976))))) (x176 x295 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x274 x65 1) (+ 4 x98))))
(assert (not (= (x274 x153 3) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x274 x16 x321) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x274 x65 1) 1461501637330902918203684832716283019655932542975)))
(assert (x168 x36))
(assert (x51 x154))
(assert (not (= 5 (x274 x153 3))))
(assert (x51 x96))
(assert (=> (= (x274 x248 1) (x274 x16 x321)) (and (= 1 x321) (= x248 x16))))
(assert (not (= (x274 x16 x321) 2094874590)))
(assert (x282 x65))
(assert (x276 x78))
(assert (=> (<= x65 10000) (not (= (x274 x264 x104) x65))))
(assert (x51 x84))
(assert (=> (= (x274 x16 x28) (x274 x65 1)) (and (= x28 1) (= x65 x16))))
(assert (=> (<= x153 10000) (not (= x153 (x274 x65 1)))))
(assert (=> (= (x274 x16 x321) (x274 x153 4)) (and (= x153 x16) (= x321 4))))
(assert (not (= (x274 x173 5) (x274 x153 2))))
(assert (not (= (x274 x227 1) 1161348331)))
(assert (=> (= (x274 x16 x261) (x274 x248 1)) (and (= 1 x261) (= x248 x16))))
(assert (not (= (+ x15 2) (+ x142 1))))
(assert (not (= (x274 x16 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (<= x65 10000) (not (= x65 (+ 4 x98)))))
(assert (=> (<= x65 10000) (not (= x65 (x274 x16 x28)))))
(assert (x51 x93))
(assert (x164 x91 x18))
(assert (not (= 231365057 (+ x142 1))))
(assert (not (= (x274 x16 x28) (+ x152 3))))
(assert (not (= 1710941022 (x274 x153 2))))
(assert (=> (>= 10000 x65) (not (= x65 (x274 x16 x321)))))
(assert (=> (<= x264 10000) (not (= x264 (+ x15 2)))))
(assert (x51 x157))
(assert (x51 x305))
(assert (not (= 1763987465 (x274 x153 2))))
(assert (not (= 2 (+ 1 x142))))
(assert (not (= (+ x98 4) 2094874590)))
(assert (x51 x85))
(assert (not (= (+ x152 3) 1710941022)))
(assert (=> (>= 10000 x153) (not (= x153 (x274 x16 x28)))))
(assert (x168 x268))
(assert (=> (= (x274 x16 x28) (x274 x16 x321)) (= x28 x321)))
(assert (x310 x295))
(assert (=> (<= x153 10000) (not (= (x274 x295 x80) x153))))
(assert (=> (<= x227 10000) (not (= (x274 x65 1) x227))))
(assert (=> (= (x274 x264 x104) (x274 x227 1)) (and (= 1 x104) (= x227 x264))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x274 x248 1))))
(assert (x51 x257))
(assert (not (= (+ 1 x235) 1710941022)))
(assert (not (= (x274 x295 x80) (+ x152 3))))
(assert (x51 x57))
(assert (=> (>= 10000 x65) (not (= x65 (+ x152 3)))))
(assert (not (= (+ x235 1) 1763987465)))
(assert (not (= 1 (x274 x173 5))))
(assert (x51 x212))
(assert (not (= (+ x15 2) (x274 x173 5))))
(assert (not (= 4 (+ x235 1))))
(assert (x282 x80))
(assert (x282 x295))
(assert (=> (>= 10000 x264) (not (= (x274 x16 x28) x264))))
(assert (not (= 1 (+ x15 2))))
(assert (x51 x217))
(assert (=> (>= 10000 x295) (not (= x295 (x274 x16 x321)))))
(assert (=> (>= 10000 x153) (not (= (+ 3 x152) x153))))
(assert (x164 x203 x162))
(assert (=> (<= x264 10000) (not (= (x274 x248 1) x264))))
(assert (not (= (x274 x65 1) (x274 x173 5))))
(assert (not (= 761373525 (x274 x16 x28))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x152 3))))
(assert (=> (>= 10000 x295) (not (= (+ 3 x152) x295))))
(assert (not (= 1763987465 (+ 2 x15))))
(assert (not (= (x274 x227 1) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (not (= 2094874590 (x274 x16 x28))))
(assert (not (= 231365057 (x274 x153 2))))
(assert (=> (<= x295 10000) (not (= x295 (x274 x227 1)))))
(assert (x51 x179))
(assert (not (= (x274 x153 3) (x274 x153 2))))
(assert (not (= (x274 x264 x104) 1161348331)))
(assert (x76 x198))
(assert (x174 x328))
(assert (x51 x222))
(assert (not (= (x274 x227 1) (+ x152 3))))
(assert (x51 x306))
(assert (=> (>= 10000 x153) (not (= (x274 x248 1) x153))))
(assert (not (= 761373525 (+ 2 x15))))
(assert (=> (>= 10000 x173) (not (= x173 (+ x98 4)))))
(assert (x168 x296))
(assert (not (= 1980270339 (x274 x16 x28))))
(assert (x51 x328))
(assert (not (= (x274 x295 x80) 2)))
(assert (x51 x170))
(assert (not (= 2094874590 (+ x235 1))))
(assert (and (x33 x85 1461501637330902918203684832716283019655932542976) (x320 x85 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x85 (+ (x259 x85 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x301 x85 1461501637330902918203684832716283019655932542976))))) (x176 x85 1461501637330902918203684832716283019655932542976)))
(assert (x51 x171))
(assert (x310 x93))
(assert (not (= (x274 x16 x28) (+ 2 x15))))
(assert (=> (<= x322 10000) (not (= x322 (x274 x295 x80)))))
(assert (x17 x186 x193))
(assert (= x53 (=> (and (and (= x102 false) (>= x224 0) (= x19 6) (>= x257 0) (= x308 false) (= 231365057 x74) (> 699302164 x74) (= x257 (x79 x322)) (= false x196) (<= x322 1461501637330902918203684832716283019655932542975) (> 2094874590 x74) (= x137 x229) x25 (= x160 1980270339) (<= x47 1461501637330902918203684832716283019655932542975) (<= x224 1461501637330902918203684832716283019655932542975) (<= 0 x229) (>= x47 0) (> x322 0) (= x224 x16) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x229) (= x25 (> (x111 x322) 0)) (= false x204) (= (x111 x322) x122) (= x47 x309) (< x74 1161348331) (> x122 0)) (and (and (and (and (= (x111 x322) x87) (not (< x69 699302164)) (not (= 699302164 x69)) (> 2094874590 x69) (= x136 x318) (< 0 x87) (= x69 761373525) (= x126 x172) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x318) (<= 0 x318) (< x69 1161348331)) (and (= (+ x279 x197) x95) (= x39 x279) (= x136 x197) (= (= x172 x95) x35))) (and (= x28 (x274 x65 1)) (= (ite (or x165 x184) 1 0) x109) (= x263 (x29 x281)) (= x57 (ite (not x112) 1 0)) (= x94 (= x278 x67)) (= (ite (not x158) 1 0) x319) (= x212 (x326 x113)) (< 0 x23) (= (ite (not x271) 1 0) x34) (= x248 (x151 1461501637330902918203684832716283019655932542975 x295)) (ite x2 x2 (not (< x212 x273))) (>= x26 0) (= (not x116) x180) (= (x181 (- x212 x290)) x273) (ite x117 x117 (not (< x229 x110))) (>= x46 0) (<= x179 1461501637330902918203684832716283019655932542975) (= x123 (+ x200 x66)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x229) (= x265 x295) (= x113 (x274 x264 x104)) (= (x301 57896044618658097711785492504343953926634992332820282019728792003956564819967 x78) x243) (= x284 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129) (and (> 0 x129) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129))))) (= x191 x12) (>= x305 0) (= (or (> x188 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x188) (= (<= x188 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x271) (= x325 x316) (not (> 1710941022 x304)) (= x153 x317) (= x42 (x86 x228)) (= x85 x199) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x130) (= (ite (or (and (> x201 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103)) (and (< x201 x103) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103)))) 1 0) x54) (<= 0 x242) (= x241 0) (= x235 (x274 x295 x80)) (= x153 x234) (and (= true (<= x62 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x62 195)) (= (ite x184 1 0) x148) (= (- x123 x331) x278) (= (x274 x248 1) x261) (ite x214 x214 (not (< x273 x212))) (<= x12 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x295 1461501637330902918203684832716283019655932542975) (= x267 (= x146 x195)) (not (= 1710941022 x304)) (= x65 (x151 1461501637330902918203684832716283019655932542975 x85)) x230 (= x296 (ite (not x246) 1 0)) (>= x229 0) (= x264 (x151 1461501637330902918203684832716283019655932542975 x93)) (= x256 (ite (not x315) 1 0)) (= (not x262) x287) (= x156 (and (> x129 0) (= (<= x129 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= 0 x144) (= (x330 (x41 x203 x78)) x129) (= (or (> x188 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x188 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x188) true))) x13) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x305) (= x145 (not (< x252 x46))) (<= 0 x179) (= (and (= true (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x201 0)) x158) (= (ite x269 1 0) x307) (= (x274 x173 5) x228) (= (x29 x132) x5) (= x220 (ite (not x255) 1 0)) (> 2094874590 x304) (= (ite (not x30) 1 0) x327) (= x295 x211) (= (and (< 0 x201) (= true (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x262) (= (x151 1461501637330902918203684832716283019655932542975 x93) x227) (<= 0 x42) (= (+ 2 x15) x175) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203)) (> 0 x203))) 1 0) x135) (= (ite x6 1 0) x59) (= (x151 x135 x268) x36) (= x112 (and (< 0 x201) (= true (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x85 x202) (= x37 (x114 (+ x129 x42))) (= (x274 x153 3) x80) (= x142 (x274 x153 2)) (>= x150 0) (> x64 0) (= (ite (and (< 0 x201) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201) true)) 1 0) x294) (<= x203 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x159 0) (= x162 (x114 (+ x171 x78))) (= x328 x138) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x48) (= (x274 x16 x28) x283) (= x214 (not x13)) (= x239 (ite x165 1 0)) (= x200 (x41 x328 x77)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x150) (= (ite (or (and (<= x240 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203) (<= x240 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x203 x240))) 1 0) x128) (= x157 x81) (<= 0 x245) (= x30 (> x252 x316)) (= (x151 x319 x34) x250) x10 (= x140 x93) (= (+ x152 3) x21) (= x153 x218) (= (ite (or x269 x99) 1 0) x233) (= (not x210) x105) (not (= 1814410054 x304)) (= (ite x145 1 0) x237) (= x188 x290) (= x132 (x274 x16 x321)) (<= 0 x12) (= (x151 1461501637330902918203684832716283019655932542975 x85) x9) (= x305 1) (= x104 (x274 x153 4)) x94 (= x205 x153) (= (< x150 x110) x246) (= x15 (x274 x153 2)) (ite x155 x155 (not (< x242 x91))) (= (not x82) x117) (< 0 x63) (= (x274 x153 2) x152) (= 1980270339 x304) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x18) (= (and (> x129 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129) true)) x58) (= (not x284) x232) (= x203 x167) (= x275 x1) (= x165 (= 1 x263)) (= (x41 x203 x162) x177) (= x217 x78) (= x78 x201) (= x55 (x274 x153 2)) (= x186 (ite (and (= (<= x203 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x203 0)) 1 0)) (< (x41 x138 x203) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x159 (x143 x198 x222)) (>= x18 0) (= x66 x260) (= (x151 1461501637330902918203684832716283019655932542975 x85) x124) (= x260 x270) (= x291 (and (< 0 x201) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201) true))) (>= x263 0) (= x26 (x29 x283)) (= x184 (= x324 x16)) (= x244 (ite (and (= (<= x203 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 0 x203)) 1 0)) (= x39 x67) (= x198 (ite (not x71) 1 0)) (<= x73 1461501637330902918203684832716283019655932542975) (= (x143 x256 x233) x119) (= x16 x179) (= x139 (x151 x226 x107)) (= x77 (x192 x205)) (= x275 (x208 x55)) (< x100 1161348331) (= (= x191 x121) x10) (= x108 x120) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x171) (>= x130 0) (= x100 231365057) (= (ite (not x88) 1 0) x107) (= (x111 x322) x52) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203) (and (< x203 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203))))) (<= 0 x212) (= x46 (x133 x106)) (= 0 x120) (= x83 (ite (= x201 0) 0 (ite (= (< x201 57896044618658097711785492504343953926634992332820282019728792003956564819968) true) (x301 57896044618658097711785492504343953926634992332820282019728792003956564819967 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x201) x201 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x201 1)))))) (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x330 (- (x301 57896044618658097711785492504343953926634992332820282019728792003956564819967 (ite (< x201 57896044618658097711785492504343953926634992332820282019728792003956564819968) x201 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x201 1)))))) 1))))))) (= x75 (x192 x218)) (= (ite x312 1 0) x292) (= x110 (x114 (+ x229 x129))) (= x170 x219) (= x40 (not x299)) (< x100 2094874590) (> 699302164 x100) (= x254 (and (= true (<= x188 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x188))) (= (x143 x139 x327) x63) (= (x151 x323 x294) x298) (= x311 (= x26 1)) (= x315 (and (= (<= x188 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x188 0))) (not (> 1161348331 x304)) (= (or (and (< x201 0) (= (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201)) x116) (= x88 (or (and (< x188 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x188))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x188))) (= (+ x270 x190) x146) (= x68 (x143 x250 x109)) (<= x26 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ 1 x142) x31) (= x223 (ite (> x203 x243) 1 0)) (= x134 (x151 1461501637330902918203684832716283019655932542975 x295)) (= (x274 x227 1) x321) (<= x42 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x125 x153) (= x99 (= x209 x16)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5) (< (x41 x203 x162) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite x40 x40 (not (> x242 x91))) (= (ite (= x201 0) 0 (ite (= false (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x201)) (x301 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (< x201 57896044618658097711785492504343953926634992332820282019728792003956564819968) x201 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x201 1)))))) (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x330 (- (x301 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x201) x201 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x201 1)))))) 1)))))) x240) (= (+ x235 1) x194) (= x226 (ite (not x291) 1 0)) (= x173 (x151 1461501637330902918203684832716283019655932542975 x85)) (= x242 (x89 x235)) (= x138 x96) (= 0 x14) (= x138 (x114 (+ x78 x12))) (= (not x207) x155) (<= x263 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x312 (= x16 x9)) (= (x208 x45) x12) (>= x275 0) (> x68 0) (not (= 0 x203)) (= x189 (ite x311 1 0)) (= (x181 (- x62 4)) x329) (= (or (> x201 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x201 0))) x71) (= (> x280 x48) x255) (= x130 (x114 (+ x229 x129))) (= x280 x70) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201)) (< x201 0))) x166) (not (= 1763987465 x304)) (= (+ x98 4) x106) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x212) (= x171 (x44 x194)) (= x258 (not x58)) (= (ite (or (> x203 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203) true) (> 0 x203))) 1 0) x323) (= x98 (x274 x153 2)) (not (or (> x329 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x329) true) (> 192 x329)))) (= (= 0 x162) x6) (= x207 (or (> x290 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x290 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x290)))) (= (x151 x220 x296) x231) (= (x274 x153 2) x45) (= (x151 x186 x193) x115) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201) (and (> 0 x201) (= true (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x141) (= x325 (x41 x91 x18)) (= x324 (x151 1461501637330902918203684832716283019655932542975 x295)) (<= x93 1461501637330902918203684832716283019655932542975) (= (ite x99 1 0) x154) (= (= x167 x182) x230) (<= 0 x203) (= x295 x288) (= x302 (x151 x244 x141)) (= (x266 x21) x48) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x41 x91 x18)) (= x147 (ite (or x6 x145) 1 0)) (ite x258 x258 (not (< x110 x229))) (not (< x62 4)) (= x245 x81) (= (x143 x57 x231) x23) (<= x242 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x114 (+ x253 x242)) x91) (= x241 (x151 x36 x303)) (= x61 (not x166)) (= x253 x290) (> x147 0) (>= x171 0) (= x306 0) (= x121 (x8 x317)) (= x209 (x151 1461501637330902918203684832716283019655932542975 x93)) (= x268 (ite (or (> x201 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x201) (= true (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (ite x180 x180 (not (< x12 x138))) (= x269 (= x5 1)) (= (and (< 0 x201) (= (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x210) (= x219 x153) x267 (= (x41 x1 x75) x331) (= x306 (x151 x298 x128)) (= (x41 x138 x203) x70) (= (not x254) x2) (= (ite (and (= true (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x201)) 1 0) x193) (= x126 x130) (= (x272 x31) x203) (>= x5 0) (= (x192 x170) x182) (= x82 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129)) (< x129 0)))) (<= x275 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite (or (and (<= x83 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x203 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x83) (<= x203 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x203 x83))) 1 0) x303) (<= 0 x73) (= (x151 x302 x54) x144) (ite x27 x27 (not (< x37 x42))) (ite x287 x287 (not (< x162 x171))) (< 0 x52) (= x222 (ite (or x311 x312) 1 0)) (<= x85 1461501637330902918203684832716283019655932542975) (= x190 x60) (= (ite (= x203 0) 0 (ite (= (< x203 57896044618658097711785492504343953926634992332820282019728792003956564819968) false) (x301 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x203) x203 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x203 1)))))) (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x330 (- (x301 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x203) x203 (x330 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x181 (- x203 1)))))) 1)))))) x103) (= (x178 x175) x18) (<= x46 115792089237316195423570985008687907853269984665640564039457584007913129639935) (ite x105 x105 (not (> x12 x138))) (= x14 (x151 x115 x223)) (= x299 (and (> x188 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x188)))) (<= x245 1461501637330902918203684832716283019655932542975) (= x177 x252) (= (x274 x16 x261) x281) (>= x48 0) (= (x151 1461501637330902918203684832716283019655932542975 x93) x118) (= x64 (x111 x322)) (ite x61 x61 (not (> x162 x171))) (< 0 x119) (= x93 x32) (ite x232 x232 (not (< x42 x37))) (= x27 (not x156)))) (and (> 1161348331 x185) (not (= 699302164 x185)) (= x185 761373525) (= x60 x318) (= x195 x137) (> x84 0) (= x84 (x111 x322)) (not (< x185 699302164)) (<= x318 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x318) (< x185 2094874590)))) x35)))
(assert (not (= (x274 x295 x80) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (not (= 4 (+ x98 4))))
(assert (x51 x263))
(assert (not (= 4 (x274 x173 5))))
(assert (x221 x93))
(assert (x51 x121))
(assert (x51 x139))
(assert (x51 x141))
(assert (not (= (x274 x153 2) (x274 x65 1))))
(assert (x51 x323))
(assert (=> (>= 10000 x295) (not (= (x274 x264 x104) x295))))
(assert (=> (>= 10000 x322) (not (= (x274 x16 x261) x322))))
(assert (=> (<= x227 10000) (not (= (x274 x153 3) x227))))
(assert (not (= (x274 x173 5) 1763987465)))
(assert (x168 x85))
(assert (not (= (x274 x16 x28) (+ x235 1))))
(assert (not (= (x274 x153 3) 1461501637330902918203684832716283019655932542975)))
(assert (not (= 3 (+ 1 x142))))
(assert (=> (= (x274 x16 x28) (x274 x16 x261)) (= x28 x261)))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (+ 4 x98))))
(assert (x51 x288))
(assert (not (= 1 (x274 x16 x28))))
(assert (x51 x135))
(assert (x76 x250))
(assert (not (= 231365057 (x274 x65 1))))
(assert (not (= (x274 x153 3) (x274 x227 1))))
(assert (=> (<= x153 10000) (not (= x153 (+ x98 4)))))
(assert (not (= 2094874590 (x274 x227 1))))
(assert (x51 x220))
(assert (=> (= (x274 x227 1) (x274 x16 x28)) (and (= x28 1) (= x16 x227))))
(assert (x51 x226))
(assert (x282 x248))
(assert (not (= 1763987465 (x274 x16 x28))))
(assert (not (= (x274 x16 x28) 1161348331)))
(assert (x51 x264))
(assert (x17 x244 x141))
(assert (not (= (x274 x248 1) 1763987465)))
(assert (not (= 2 (x274 x65 1))))
(assert (x51 x316))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x274 x295 x80))))
(assert (x51 x52))
(assert (not (= (x274 x153 2) 2094874590)))
(assert (=> (>= 10000 x227) (not (= (x274 x295 x80) x227))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x274 x16 x28))))
(assert (x51 x124))
(assert (not (= 2 (x274 x227 1))))
(assert (not (= 1980270339 (x274 x153 2))))
(assert (x51 x318))
(assert (not (= 3 (x274 x16 x321))))
(assert (x51 x23))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x274 x264 x104))))
(assert (not (= 1161348331 (x274 x16 x261))))
(assert (x51 x140))
(assert (not (= (x274 x295 x80) 1763987465)))
(assert (not (= (x274 x65 1) 4)))
(assert (not (= (x274 x264 x104) 1763987465)))
(assert (x51 x19))
(assert (not (= (x274 x153 2) (x274 x227 1))))
(assert (=> (>= 10000 x153) (not (= x153 (+ x235 1)))))
(assert (not (= (x274 x227 1) 1814410054)))
(assert (not (= 761373525 (+ 4 x98))))
(assert (=> (>= 10000 x65) (not (= x65 (x274 x173 5)))))
(assert (x51 x224))
(assert (=> (<= x322 10000) (not (= x322 (x274 x264 x104)))))
(assert (not (= (x274 x264 x104) (+ x152 3))))
(assert (not (= (+ 1 x235) (+ x98 4))))
(assert (and (= 81 (x41 27 3)) (= 81 (x41 9 9)) (= 9 (x41 3 3)) (= (x41 9 3) 27)))
(assert (=> (>= 10000 x322) (not (= (x274 x65 1) x322))))
(assert (=> (>= 10000 x173) (not (= (x274 x248 1) x173))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x274 x153 2))))
(assert (not (= (x274 x16 x28) (+ x98 4))))
(assert (x168 x294))
(assert (=> (<= x322 10000) (not (= (x274 x153 4) x322))))
(assert (=> (= (x274 x295 x80) (x274 x153 4)) (and (= x153 x295) (= 4 x80))))
(assert (x174 x1))
(assert (=> (<= x227 10000) (not (= x227 (x274 x16 x261)))))
(assert (=> (>= 10000 x248) (not (= x248 (+ 1 x235)))))
(assert (=> (<= x16 10000) (not (= (x274 x295 x80) x16))))
(assert (not (= (x274 x248 1) (+ 2 x15))))
(assert (x51 x60))
(assert (x51 x83))
(assert (not (= 3 (+ 3 x152))))
(assert (=> (<= x173 10000) (not (= (+ x235 1) x173))))
(assert (=> (= (x274 x173 5) (x274 x264 x104)) (and (= 5 x104) (= x264 x173))))
(assert (not (= (x274 x248 1) (x274 x153 4))))
(assert (x92 x256 x233))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x274 x153 4))))
(assert (not (= (+ 2 x15) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= (+ 4 x98) 1710941022)))
(assert (=> (>= 10000 x173) (not (= x173 (x274 x153 2)))))
(assert (=> (<= x65 10000) (not (= (x274 x295 x80) x65))))
(assert (x51 x14))
(assert (not (= (x274 x264 x104) 2)))
(assert (not (= (x274 x153 3) 1763987465)))
(assert (x92 x139 x327))
(assert (x51 x270))
(assert (not (= 2094874590 (x274 x16 x261))))
(assert (=> (>= 10000 x227) (not (= x227 (+ 2 x15)))))
(assert (not (= (+ 3 x152) (x274 x153 2))))
(assert (not (= (+ x98 4) (+ 3 x152))))
(assert (=> (= (x274 x153 4) (x274 x264 x104)) (and (= x104 4) (= x264 x153))))
(assert (not (= (+ x235 1) (x274 x173 5))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x274 x295 x80))))
(assert (not (= (x274 x153 4) 1814410054)))
(assert (x17 x298 x128))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x274 x264 x104))))
(assert (x282 x321))
(assert (x51 x136))
(assert (x51 x48))
(assert (x51 x209))
(assert (not (= 1 (x274 x65 1))))
(assert (x76 x231))
(assert (not (= (x274 x295 x80) (+ x235 1))))
(assert (not (= (+ x152 3) 2094874590)))
(assert (=> (>= 10000 x16) (not (= (x274 x153 4) x16))))
(assert (not (= (x274 x248 1) 761373525)))
(assert (x51 x5))
(assert (x168 x193))
(assert (=> (<= x264 10000) (not (= x264 (+ 4 x98)))))
(assert (=> (= (x274 x153 3) (x274 x16 x28)) (and (= x16 x153) (= 3 x28))))
(check-sat)
(exit)
