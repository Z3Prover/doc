(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x196 () Int)
(declare-fun x302 (Int) Int)
(declare-fun x66 () Int)
(declare-fun x133 () Int)
(declare-fun x287 () Int)
(declare-fun x171 () Bool)
(declare-fun x249 () Int)
(declare-fun x282 () Int)
(declare-fun x366 () Int)
(declare-fun x262 () Int)
(declare-fun x181 (Int Int) Int)
(declare-fun x461 () Int)
(declare-fun x141 () Int)
(declare-fun x203 () Bool)
(declare-fun x64 () Bool)
(declare-fun x139 () Int)
(declare-fun x333 (Int Int) Int)
(declare-fun x261 () Int)
(declare-fun x263 () Int)
(declare-fun x392 () Int)
(declare-fun x267 () Bool)
(declare-fun x429 () Int)
(declare-fun x397 (Int Int) Int)
(declare-fun x255 () Int)
(declare-fun x311 () Int)
(declare-fun x393 () Int)
(declare-fun x39 () Int)
(declare-fun x22 () Int)
(declare-fun x236 () Int)
(declare-fun x212 () Int)
(declare-fun x376 () Bool)
(declare-fun x176 () Int)
(declare-fun x93 () Int)
(declare-fun x224 () Int)
(declare-fun x201 () Bool)
(declare-fun x132 () Int)
(declare-fun x6 () Int)
(declare-fun x26 () Int)
(declare-fun x277 () Int)
(declare-fun x450 () Bool)
(declare-fun x72 () Int)
(declare-fun x258 () Bool)
(declare-fun x56 () Int)
(declare-fun x190 () Int)
(declare-fun x122 () Int)
(declare-fun x173 () Int)
(declare-fun x65 () Int)
(declare-fun x314 () Int)
(declare-fun x243 () Bool)
(declare-fun x303 () Int)
(declare-fun x13 () Int)
(declare-fun x25 () Int)
(declare-fun x414 () Int)
(declare-fun x318 () Int)
(declare-fun x79 () Int)
(declare-fun x444 () Int)
(declare-fun x266 () Int)
(declare-fun x348 () Bool)
(declare-fun x289 () Int)
(declare-fun x375 () Int)
(declare-fun x207 () Int)
(declare-fun x223 () Int)
(declare-fun x150 () Int)
(declare-fun x252 () Int)
(declare-fun x113 (Int Int) Int)
(declare-fun x307 () Int)
(declare-fun x330 () Int)
(declare-fun x33 () Int)
(declare-fun x278 () Int)
(declare-fun x125 () Int)
(declare-fun x143 () Int)
(declare-fun x361 () Int)
(declare-fun x260 () Int)
(declare-fun x164 () Bool)
(declare-fun x446 () Int)
(declare-fun x43 () Int)
(declare-fun x451 () Bool)
(declare-fun x156 () Int)
(declare-fun x167 () Int)
(declare-fun x91 () Int)
(declare-fun x182 () Int)
(declare-fun x281 (Int Int Int Int) Int)
(declare-fun x420 () Int)
(declare-fun x62 () Int)
(declare-fun x89 () Int)
(declare-fun x211 () Int)
(declare-fun x145 () Bool)
(declare-fun x230 () Bool)
(declare-fun x299 () Int)
(declare-fun x410 () Int)
(declare-fun x83 () Int)
(declare-fun x374 () Int)
(declare-fun x191 () Int)
(declare-fun x221 () Bool)
(declare-fun x60 () Bool)
(declare-fun x363 () Int)
(declare-fun x195 () Bool)
(declare-fun x324 () Int)
(declare-fun x462 () Int)
(declare-fun x55 () Int)
(declare-fun x153 () Int)
(declare-fun x356 () Bool)
(declare-fun x68 () Int)
(declare-fun x14 () Int)
(declare-fun x332 () Int)
(declare-fun x449 () Int)
(declare-fun x123 () Int)
(declare-fun x162 () Int)
(declare-fun x100 () Int)
(declare-fun x408 () Int)
(declare-fun x12 () Bool)
(declare-fun x321 () Bool)
(declare-fun x292 () Int)
(declare-fun x422 () Int)
(declare-fun x101 () Int)
(declare-fun x387 () Bool)
(declare-fun x40 () Bool)
(declare-fun x121 () Bool)
(declare-fun x197 () Int)
(declare-fun x380 () Int)
(declare-fun x364 () Int)
(declare-fun x286 () Int)
(declare-fun x372 () Int)
(declare-fun x298 () Bool)
(declare-fun x44 () Bool)
(declare-fun x185 () Int)
(declare-fun x213 () Int)
(declare-fun x47 () Int)
(declare-fun x335 () Bool)
(declare-fun x328 (Int) Int)
(declare-fun x436 () Int)
(declare-fun x15 () Bool)
(declare-fun x35 () Int)
(declare-fun x241 () Int)
(declare-fun x300 () Int)
(declare-fun x296 () Bool)
(declare-fun x338 () Int)
(declare-fun x413 () Int)
(declare-fun x405 () Int)
(declare-fun x337 () Int)
(declare-fun x88 () Int)
(declare-fun x313 (Int) Int)
(declare-fun x165 () Int)
(declare-fun x288 () Int)
(declare-fun x76 () Int)
(declare-fun x242 () Bool)
(declare-fun x416 () Bool)
(declare-fun x273 (Int Int) Int)
(declare-fun x2 () Int)
(declare-fun x199 () Bool)
(declare-fun x343 () Int)
(declare-fun x69 () Int)
(declare-fun x425 () Int)
(declare-fun x400 () Int)
(declare-fun x74 () Bool)
(declare-fun x411 () Int)
(declare-fun x407 () Bool)
(declare-fun x71 () Bool)
(declare-fun x250 () Int)
(declare-fun x245 () Bool)
(declare-fun x209 () Int)
(declare-fun x24 () Bool)
(declare-fun x151 () Bool)
(declare-fun x81 () Int)
(declare-fun x353 () Bool)
(declare-fun x259 () Int)
(declare-fun x130 () Bool)
(declare-fun x172 () Bool)
(declare-fun x102 () Int)
(declare-fun x202 () Int)
(declare-fun x155 () Bool)
(declare-fun x52 () Bool)
(declare-fun x322 () Bool)
(declare-fun x390 () Bool)
(declare-fun x352 (Int) Int)
(declare-fun x357 () Bool)
(declare-fun x368 () Bool)
(declare-fun x107 () Int)
(declare-fun x90 () Int)
(declare-fun x253 () Int)
(declare-fun x345 () Bool)
(declare-fun x394 () Int)
(declare-fun x218 () Bool)
(declare-fun x78 () Int)
(declare-fun x177 () Int)
(declare-fun x157 () Int)
(declare-fun x99 () Int)
(declare-fun x399 () Bool)
(declare-fun x365 () Bool)
(declare-fun x239 () Bool)
(declare-fun x301 () Bool)
(declare-fun x312 () Int)
(declare-fun x240 () Int)
(declare-fun x244 () Int)
(declare-fun x53 () Int)
(declare-fun x194 () Int)
(declare-fun x154 () Int)
(declare-fun x229 () Int)
(declare-fun x129 () Int)
(declare-fun x358 () Int)
(declare-fun x142 () Bool)
(declare-fun x124 () Int)
(declare-fun x19 () Int)
(declare-fun x401 () Int)
(declare-fun x342 () Int)
(declare-fun x438 () Int)
(declare-fun x403 () Bool)
(declare-fun x295 () Bool)
(declare-fun x297 () Bool)
(declare-fun x254 () Int)
(declare-fun x233 () Int)
(declare-fun x351 () Int)
(declare-fun x158 () Bool)
(declare-fun x279 () Int)
(declare-fun x383 () Bool)
(declare-fun x272 () Int)
(declare-fun x34 () Bool)
(declare-fun x174 () Int)
(declare-fun x406 () Int)
(declare-fun x30 () Int)
(declare-fun x1 () Int)
(declare-fun x31 () Int)
(declare-fun x334 () Int)
(declare-fun x8 () Int)
(declare-fun x220 (Int) Int)
(declare-fun x360 () Int)
(declare-fun x45 () Bool)
(declare-fun x18 () Int)
(declare-fun x370 () Int)
(declare-fun x159 () Int)
(declare-fun x377 () Bool)
(declare-fun x432 () Int)
(declare-fun x464 () Bool)
(declare-fun x386 () Bool)
(declare-fun x457 () Int)
(declare-fun x95 () Bool)
(declare-fun x391 () Int)
(declare-fun x94 () Int)
(declare-fun x373 () Int)
(declare-fun x458 () Int)
(declare-fun x459 () Int)
(declare-fun x329 () Int)
(declare-fun x423 () Int)
(declare-fun x137 () Int)
(declare-fun x246 () Bool)
(declare-fun x447 () Int)
(declare-fun x435 () Int)
(declare-fun x409 () Int)
(declare-fun x331 () Int)
(declare-fun x67 () Bool)
(declare-fun x109 () Int)
(declare-fun x270 () Int)
(declare-fun x82 () Int)
(declare-fun x36 () Int)
(declare-fun x219 () Bool)
(declare-fun x276 () Int)
(declare-fun x440 () Bool)
(declare-fun x16 () Int)
(declare-fun x434 () Int)
(declare-fun x421 () Bool)
(declare-fun x97 () Int)
(declare-fun x309 () Int)
(declare-fun x304 () Int)
(declare-fun x417 () Int)
(declare-fun x192 () Bool)
(declare-fun x433 () Int)
(declare-fun x290 () Int)
(declare-fun x208 () Int)
(declare-fun x106 () Bool)
(declare-fun x396 () Int)
(declare-fun x228 () Int)
(declare-fun x160 () Int)
(declare-fun x384 () Int)
(declare-fun x430 () Int)
(declare-fun x84 () Int)
(declare-fun x371 () Int)
(declare-fun x354 () Bool)
(declare-fun x29 () Int)
(declare-fun x268 () Int)
(declare-fun x382 () Int)
(declare-fun x189 () Int)
(declare-fun x346 () Int)
(declare-fun x180 () Int)
(declare-fun x193 () Int)
(declare-fun x215 () Int)
(declare-fun x453 () Int)
(declare-fun x442 () Bool)
(declare-fun x237 () Bool)
(declare-fun x257 () Int)
(declare-fun x161 () Int)
(declare-fun x135 (Int Int) Int)
(declare-fun x57 () Bool)
(declare-fun x77 () Int)
(declare-fun x104 () Int)
(declare-fun x367 () Int)
(declare-fun x115 (Int) Int)
(declare-fun x217 () Int)
(declare-fun x49 () Bool)
(declare-fun x17 () Int)
(declare-fun x452 (Int) Int)
(declare-fun x32 () Int)
(declare-fun x362 () Bool)
(declare-fun x7 () Bool)
(declare-fun x149 () Bool)
(declare-fun x136 () Int)
(declare-fun x120 () Int)
(declare-fun x349 () Int)
(declare-fun x402 () Bool)
(declare-fun x319 () Int)
(declare-fun x294 () Int)
(declare-fun x85 () Int)
(declare-fun x308 () Int)
(declare-fun x198 () Bool)
(declare-fun x206 () Int)
(declare-fun x441 () Int)
(declare-fun x454 () Int)
(declare-fun x439 () Int)
(declare-fun x87 () Int)
(declare-fun x116 () Bool)
(declare-fun x163 () Int)
(declare-fun x105 () Int)
(declare-fun x238 () Int)
(declare-fun x341 () Int)
(declare-fun x269 () Int)
(declare-fun x73 () Int)
(declare-fun x381 () Int)
(declare-fun x183 () Bool)
(declare-fun x48 () Int)
(declare-fun x275 () Int)
(declare-fun x166 () Bool)
(declare-fun x11 () Int)
(declare-fun x152 () Bool)
(declare-fun x274 () Int)
(declare-fun x50 () Int)
(declare-fun x265 () Int)
(declare-fun x234 () Int)
(declare-fun x37 () Bool)
(declare-fun x42 () Int)
(declare-fun x385 () Int)
(declare-fun x231 () Int)
(declare-fun x316 () Bool)
(declare-fun x119 () Int)
(declare-fun x398 () Int)
(declare-fun x126 () Int)
(declare-fun x427 () Int)
(declare-fun x355 () Bool)
(declare-fun x186 () Int)
(declare-fun x415 () Int)
(declare-fun x325 () Int)
(declare-fun x188 () Int)
(declare-fun x23 () Int)
(declare-fun x63 () Int)
(declare-fun x138 () Int)
(declare-fun x247 () Int)
(declare-fun x227 () Int)
(declare-fun x418 () Bool)
(declare-fun x75 () Int)
(declare-fun x210 () Bool)
(declare-fun x205 () Bool)
(declare-fun x448 () Bool)
(declare-fun x54 () Int)
(declare-fun x170 () Int)
(declare-fun x4 () Int)
(declare-fun x455 () Int)
(declare-fun x326 () Int)
(declare-fun x235 () Bool)
(declare-fun x111 () Int)
(declare-fun x320 () Int)
(declare-fun x70 () Int)
(declare-fun x339 () Bool)
(declare-fun x327 () Int)
(declare-fun x291 () Int)
(declare-fun x92 () Int)
(declare-fun x315 () Int)
(declare-fun x216 () Int)
(declare-fun x463 () Int)
(declare-fun x310 () Int)
(declare-fun x27 () Bool)
(declare-fun x140 () Bool)
(declare-fun x9 () Int)
(declare-fun x395 () Int)
(declare-fun x280 () Bool)
(declare-fun x86 () Int)
(declare-fun x80 () Int)
(declare-fun x147 () Int)
(declare-fun x103 () Int)
(declare-fun x117 () Int)
(declare-fun x264 () Int)
(declare-fun x187 () Int)
(declare-fun x38 () Int)
(declare-fun x114 () Int)
(define-fun x305 ((x10 Int)) Int (ite (and (>= x10 0) (< x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x10 (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x222 ((x10 Int)) Int (ite (and (> 0 x10) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x10)) (+ x10 115792089237316195423570985008687907853269984665640564039457584007913129639936) x10))
(define-fun x317 ((x10 Int)) Int (ite (and (< x10 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x10)) x10 (ite (and (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x10) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x10)) (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x10) (< x10 0)) (+ x10 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x135 x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x389 ((x460 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x460) (<= 0 x460)))
(define-fun x388 ((x460 Int)) Bool (and (< x460 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x460 0)))
(define-fun x118 ((x460 Int) (x232 Int)) Bool (= (x181 x232 x460) (x181 x460 x232)))
(define-fun x424 ((x460 Int) (x232 Int)) Bool (and (=> (and (> 0 x232) (< x460 0)) (> (x181 x460 x232) 0)) (=> (and (< x460 0) (> x232 0)) (< (x181 x460 x232) 0)) (=> (and (< 0 x460) (< 0 x232)) (> (x181 x460 x232) 0)) (=> (and (> 0 x232) (> x460 0)) (< (x181 x460 x232) 0))))
(define-fun x293 ((x460 Int) (x232 Int)) Bool (=> (and (< 0 x460) (> x232 0)) (= (= x232 (x273 (x317 (x181 x460 x232)) x460)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x181 x460 x232)))))
(define-fun x3 ((x460 Int) (x232 Int)) Bool (=> (and (not (= x232 0)) (not (= 0 x460))) (and (= x232 (x273 (x181 x460 x232) x460)) (= x460 (x273 (x181 x460 x232) x232)))))
(define-fun x271 ((x460 Int) (x232 Int)) Bool (=> (and (< 0 x232) (< 0 x460)) (= (< (x273 115792089237316195423570985008687907853269984665640564039457584007913129639935 x460) x232) (> (x181 x460 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x98 ((x460 Int) (x232 Int)) Bool (and (= (x317 (x181 x460 x232)) (x317 (x181 (- x460 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x232 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x317 (x181 (- x460 115792089237316195423570985008687907853269984665640564039457584007913129639936) x232)) (x317 (x181 x460 x232))) (= (x317 (x181 x460 (- x232 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x317 (x181 x460 x232)))))
(define-fun x428 ((x460 Int) (x232 Int)) Bool (and (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x460) (> x460 0)) (and (> x232 0) (<= x232 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= x460 (x273 57896044618658097711785492504343953926634992332820282019728792003956564819967 x232)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x181 x460 x232)))) (=> (and (and (<= x232 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x232)) (and (> x460 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x460 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x181 (- x460 115792089237316195423570985008687907853269984665640564039457584007913129639936) x232) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= (x273 57896044618658097711785492504343953926634992332820282019728792003956564819968 x232) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x460)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232) (> x232 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x460) (> x460 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x460) (x273 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x232))) (<= (x181 (- x460 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x232 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x460) (< 0 x460)) (and (> x232 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x232 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x273 57896044618658097711785492504343953926634992332820282019728792003956564819968 x460) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x232)) (>= (x181 x460 (- x232 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968))))))
(define-fun x378 ((x460 Int) (x232 Int)) Bool (and (x98 x460 x232) (x424 x460 x232) (x271 x460 x232) (x293 x460 x232) (x428 x460 x232) (x118 x460 x232) (x3 x460 x232)))
(define-fun x336 ((x460 Int)) Bool (and (= 0 (x181 0 x460)) (= 0 (x181 x460 0))))
(define-fun x51 ((x460 Int)) Bool (and (= (x181 x460 1) x460) (= x460 (x181 1 x460))))
(define-fun x128 ((x460 Int)) Bool (and (x51 x460) (x336 x460)))
(define-fun x431 ((x460 Int) (x232 Int)) Bool (=> (and (< 0 x460) (> x232 0)) (and (<= 0 (x273 x460 x232)) (>= x460 (x273 x460 x232)))))
(define-fun x443 ((x460 Int) (x232 Int)) Bool (=> (and (and (>= x232 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x232)) (and (< x460 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x460 0))) (and (< (x273 x460 x232) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 (x273 x460 x232)))))
(define-fun x20 ((x460 Int) (x232 Int)) Bool (=> (and (> x232 1) (< x232 x460)) (< (x273 x460 x232) x460)))
(define-fun x214 ((x460 Int) (x232 Int)) Bool (=> (and (> x232 0) (> x460 0)) (= (= (x273 x460 x232) 0) (> x232 x460))))
(define-fun x108 ((x460 Int) (x232 Int)) Bool (=> (and (< 0 x460) (> x232 0)) (and (> (x181 (x273 x460 x232) x232) (- x460 x232)) (>= x460 (x181 (x273 x460 x232) x232)))))
(define-fun x58 ((x460 Int) (x232 Int)) Bool (and (x108 x460 x232) (x431 x460 x232) (x20 x460 x232) (x443 x460 x232) (x214 x460 x232)))
(define-fun x168 ((x460 Int)) Bool (= 0 (x273 0 x460)))
(define-fun x426 ((x460 Int)) Bool (= x460 (x273 x460 1)))
(define-fun x445 ((x460 Int)) Bool (=> (not (= x460 0)) (= (x273 x460 x460) 1)))
(define-fun x110 ((x460 Int)) Bool (and (x168 x460) (x426 x460) (x445 x460)))
(define-fun x285 ((x460 Int)) Bool (and (= x460 (x333 115792089237316195423570985008687907853269984665640564039457584007913129639935 x460)) (= x460 (x333 x460 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x5 ((x460 Int)) Bool (and (= (x333 x460 0) 0) (= (x333 0 x460) 0)))
(define-fun x131 ((x460 Int)) Bool (= (x333 x460 x460) x460))
(define-fun x169 ((x460 Int)) Bool (and (x5 x460) (x131 x460) (x285 x460)))
(define-fun x419 ((x460 Int) (x232 Int)) Bool (= (x333 x460 x232) (x333 x232 x460)))
(define-fun x21 ((x460 Int) (x232 Int)) Bool (and (<= 0 (x333 x460 x232)) (=> (>= x460 0) (<= (x333 x460 x232) x460)) (=> (>= x232 0) (<= (x333 x460 x232) x232))))
(define-fun x404 ((x460 Int) (x232 Int)) Bool (and (x21 x460 x232) (x419 x460 x232)))
(define-fun x225 ((x460 Int)) Bool (= (x135 x460 1461501637330902918203684832716283019655932542976) (x333 x460 1461501637330902918203684832716283019655932542975)))
(define-fun x456 ((x460 Int)) Bool (and (x404 x460 1461501637330902918203684832716283019655932542975) (x225 x460)))
(define-fun x323 ((x460 Int) (x232 Int)) Bool (and (<= 0 (x135 x460 x232)) (> x232 (x135 x460 x232))))
(define-fun x127 ((x460 Int) (x232 Int)) Bool (=> (and (>= x460 0) (< 0 x232)) (= (= x460 (x135 x460 x232)) (> x232 x460))))
(define-fun x41 ((x460 Int) (x232 Int)) Bool (=> (and (> x232 0) (and (> (+ x232 x232) x460) (<= x232 x460))) (= (- x460 x232) (x135 x460 x232))))
(define-fun x379 ((x460 Int)) Bool (= (x135 0 x460) 0))
(define-fun x59 ((x460 Int)) Bool (= 0 (x135 x460 1)))
(define-fun x369 ((x460 Int)) Bool (= 0 (x135 x460 x460)))
(define-fun x256 ((x460 Int)) Bool (and (x379 x460) (x59 x460) (x369 x460)))
(define-fun x46 ((x61 Int)) Int (ite (= x61 13) x241 (x302 x61)))
(define-fun x148 ((x61 Int)) Int (ite (= x61 14) x303 (x46 x61)))
(define-fun x359 ((x61 Int)) Int (ite (= 15 x61) x326 (x148 x61)))
(define-fun x306 ((x61 Int)) Int (ite (= x61 16) x55 (x359 x61)))
(define-fun x226 ((x61 Int)) Int (ite (= 128 x61) x236 (x452 x61)))
(define-fun x175 ((x61 Int)) Int (ite (= 160 x61) (ite x34 1 0) (x226 x61)))
(define-fun x344 ((x61 Int)) Int (ite (= x61 128) x227 (x328 x61)))
(define-fun x200 ((x61 Int)) Int (ite (= 160 x61) (ite x235 1 0) (x344 x61)))
(define-fun x112 ((x61 Int)) Int (ite (= x129 x61) 77196514420459877940035116867124998943289115686762304616657918434777787006976 (x352 x61)))
(define-fun x350 ((x61 Int)) Int (ite (= x129 x61) 0 (x112 x61)))
(define-fun x146 ((x61 Int)) Int (ite (= x104 x61) 70508962019145425934951811999677760319478833095128838543097651878529435959296 (x350 x61)))
(define-fun x437 ((x61 Int)) Int (ite (= x61 x401) x120 (x146 x61)))
(define-fun x251 ((x61 Int)) Int (ite (= x289 x61) x391 (x437 x61)))
(define-fun x283 ((x61 Int)) Int (ite (= x212 x61) x370 (x251 x61)))
(define-fun x412 ((x61 Int)) Int (ite (= x104 x61) (ite true 1 0) (x283 x61)))
(define-fun x28 ((x460 Int) (x232 Int) (x144 Int) (x184 Int)) Bool (=> (and (>= x144 x460) (<= 0 x232) (>= x184 x232) (>= x460 0)) (>= (x181 x144 x184) (x181 x460 x232))))
(define-fun x96 ((x460 Int) (x232 Int) (x144 Int) (x184 Int)) Bool (=> (= x144 x460) (= (x181 x460 (- x232 x184)) (- (x181 x460 x232) (x181 x144 x184)))))
(assert (x96 x91 x454 x325 x33))
(assert (x96 x325 x33 x241 x288))
(assert (x378 x303 (- x288 x269)))
(assert (= x376 (and x402 (not x387))))
(assert (=> (>= 10000 x346) (not (= (x281 36 32 x70 (x397 x311 224)) x346))))
(assert (not (= (x281 36 32 x70 790236105) 3002540418)))
(assert (x96 x371 x223 x241 x288))
(assert (x110 x372))
(assert (x378 x80 (- x269 x454)))
(assert (x128 x371))
(assert (x388 x117))
(assert (x378 x33 (- x325 x303)))
(assert (x96 x303 x288 x223 x371))
(assert (not (= 25742203781880459408941457317362166305709681742799472914177068605934923677696 (x281 36 32 x70 1356689113))))
(assert (x110 x461))
(assert (not (= 1871194811 (x281 36 32 x70 3943638230))))
(assert (x378 x325 (- x33 x91)))
(assert (x128 (- x80 x174)))
(assert (x96 x288 x241 x80 x269))
(assert (x28 x327 x88 x303 x288))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 1840041978)))
(assert (=> (>= 10000 x299) (not (= x299 (x281 36 32 x70 3943638230)))))
(assert (x388 x358))
(assert (x388 x338))
(assert (x28 x288 x241 x371 x223))
(assert (x378 x174 (- x324 x80)))
(assert (not (= 3996650231 (x281 36 32 x70 (x397 x311 224)))))
(assert (x378 x288 (- x241 x80)))
(assert (=> (<= x299 10000) (not (= x299 (x281 36 32 x70 4105672269)))))
(assert (x388 x141))
(assert (x96 x454 x91 x327 x88))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 3366849169)))
(assert (= (=> (and (and (= x12 (not x155)) (= x155 x106) (= x106 x348) (= (not (= 0 x66)) x348)) (and (= (x200 160) x66) (= (not (= x90 0)) x235) (= (x200 128) x413))) x12) x296))
(assert (=> (>= 10000 x211) (not (= x211 (x281 36 32 x70 954831406)))))
(assert (=> (<= (x397 x311 224) 10000) (not (= (x397 x311 224) (x281 36 32 x70 954831406)))))
(assert (x378 x327 (- x88 x269)))
(assert (not (= (x281 36 32 x70 790236105) 3008386744)))
(assert (not (= 743225245 (x281 36 32 x70 790236105))))
(assert (x388 x294))
(assert (x128 (- x80 x324)))
(assert (x128 (- x269 x303)))
(assert (x378 x174 (- x324 x241)))
(assert (x96 x288 x303 x454 x91))
(assert (not (= 4105672269 (x281 36 32 x70 790236105))))
(assert (= (x397 x311 224) (x273 x311 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (=> (>= 10000 x374) (not (= (x281 36 32 x70 954831406) x374))))
(assert (x378 x33 (- x325 x371)))
(assert (x96 x303 x288 x174 x324))
(assert (x128 x174))
(assert (x388 x185))
(assert (x96 x241 x288 x325 x33))
(assert (x128 (- x223 x325)))
(assert (x58 x461 x160))
(assert (= (and x67 x316) x258))
(assert (= x201 (and x321 x37)))
(assert (x128 (- x269 x371)))
(assert (not (= 1840041978 (x281 36 32 x70 954831406))))
(assert (not (= (x281 36 32 x70 4105672269) 1984976886)))
(assert (= x280 (and x44 x171)))
(assert (not (= (x281 36 32 x70 3943638230) 1531409238)))
(assert (x128 (- x325 x91)))
(assert (=> (>= 10000 (x397 x311 224)) (not (= (x281 36 32 x70 790236105) (x397 x311 224)))))
(assert (=> (<= x346 10000) (not (= x346 (x281 36 32 x70 954831406)))))
(assert (x28 x88 x327 x303 x288))
(assert (x378 x241 (- x288 x454)))
(assert (x388 x162))
(assert (x28 x88 x327 x324 x174))
(assert (not (= (x281 36 32 x70 4105672269) 790236105)))
(assert (x128 (- x80 x88)))
(assert (not (= 21304723245256853039595661774342629002073543191790936201937503064778531143680 (x281 36 32 x70 790236105))))
(assert (x388 x381))
(assert (x96 x454 x91 x325 x33))
(assert (not (= (x281 36 32 x70 954831406) 15314092380000)))
(assert (x378 x91 (- x454 x288)))
(assert (x388 x161))
(assert (x388 x234))
(assert (x28 x223 x371 x303 x288))
(assert (x128 (- x454 x327)))
(assert (x96 x33 x325 x324 x174))
(assert (x388 x18))
(assert (x388 x174))
(assert (x28 x325 x33 x327 x88))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 596258137)))
(assert (x28 x324 x174 x327 x88))
(assert (x388 x435))
(assert (=> (<= x370 10000) (not (= x370 (x281 36 32 x70 (x397 x311 224))))))
(assert (x388 x244))
(assert (x388 x48))
(assert (not (= (x281 36 32 x70 1356689113) 110688705405039355050572217931781119515373813223972846963051619115990310191104)))
(assert (x388 x124))
(assert (not (= (x281 36 32 x70 1356689113) 32)))
(assert (=> (>= 10000 x370) (not (= x370 (x281 36 32 x70 954831406)))))
(assert (x388 x319))
(assert (not (= (x281 36 32 x70 790236105) 14)))
(assert (not (= (x281 36 32 x70 954831406) (x281 36 32 x70 1356689113))))
(assert (not (= (x281 36 32 x70 4105672269) 2064814097)))
(assert (x378 x288 (- x303 x324)))
(assert (x388 x311))
(assert (x128 x241))
(assert (x388 x66))
(assert (not (= (x281 36 32 x70 3943638230) 3890975986)))
(assert (x388 x382))
(assert (not (= 1816029635 (x281 36 32 x70 790236105))))
(assert (x388 x250))
(assert (x378 x88 (- x327 x33)))
(assert (x96 x33 x325 x288 x241))
(assert (x128 (- x288 x80)))
(assert (x378 x325 (- x33 x324)))
(assert (=> (<= x211 10000) (not (= x211 (x281 36 32 x70 3943638230)))))
(assert (x378 x88 (- x327 x91)))
(assert (not (= 1738207182 (x281 36 32 x70 4105672269))))
(assert (x128 (- x223 x241)))
(assert (x378 x288 (- x303 x371)))
(assert (x378 x269 (- x80 x454)))
(assert (x96 x288 x303 x269 x80))
(assert (x128 (- x91 x288)))
(assert (x378 x91 (- x454 x327)))
(assert (x28 x288 x303 x80 x269))
(assert (x96 x269 x80 x371 x223))
(assert (x388 x104))
(assert (x96 x223 x371 x80 x269))
(assert (=> (>= 10000 x346) (not (= x346 (x281 36 32 x70 790236105)))))
(assert (x96 x174 x324 x371 x223))
(assert (x388 x100))
(assert (x96 x288 x241 x371 x223))
(assert (x388 x1))
(assert (x96 x91 x454 x241 x288))
(assert (x96 x303 x288 x324 x174))
(assert (not (= 3002540418 (x281 36 32 x70 (x397 x311 224)))))
(assert (x388 x84))
(assert (x378 x327 (- x88 x241)))
(assert (not (= 3249860859 (x281 36 32 x70 790236105))))
(assert (x28 x454 x91 x303 x288))
(assert (x388 x77))
(assert (x96 x33 x325 x303 x288))
(assert (x388 x264))
(assert (x128 (- x88 x241)))
(assert (x388 x160))
(assert (not (= 2580288415 (x281 36 32 x70 3943638230))))
(assert (x28 x288 x241 x80 x269))
(assert (x128 (- x454 x223)))
(assert (=> (>= 10000 x299) (not (= x299 (x281 36 32 x70 954831406)))))
(assert (x96 x91 x454 x371 x223))
(assert (not (= 826074471 (x281 36 32 x70 1356689113))))
(assert (not (= 3871629458 (x281 36 32 x70 1356689113))))
(assert (x378 x88 (- x327 x303)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 3890975986)))
(assert (x378 x371 (- x223 x33)))
(assert (x388 x4))
(assert (x96 x288 x303 x327 x88))
(assert (not (= (x281 36 32 x70 1356689113) 106320276355336348263208190817157392285036095892762275362566149969828045127680)))
(assert (x96 x288 x241 x174 x324))
(assert (x388 x260))
(assert (=> (<= (x397 x311 224) 10000) (not (= (x397 x311 224) (x281 36 32 x70 3943638230)))))
(assert (not (= 70508962019145425934951811999677760319478833095128838543097651878529435959296 (x281 36 32 x70 954831406))))
(assert (x128 (- x80 x223)))
(assert (x28 x371 x223 x324 x174))
(assert (x388 x163))
(assert (x28 x241 x288 x454 x91))
(assert (not (= (x281 36 32 x70 1356689113) 822145385)))
(assert (x378 x303 (- x288 x324)))
(assert (x28 x327 x88 x454 x91))
(assert (not (= (x281 36 32 x70 1356689113) 3002540418)))
(assert (x128 (- x80 x288)))
(assert (x388 x330))
(assert (x128 (- x88 x303)))
(assert (x378 x91 (- x454 x371)))
(assert (x388 x173))
(assert (x378 x241 (- x288 x371)))
(assert (x388 x318))
(assert (x388 x254))
(assert (and (x431 x311 26959946667150639794667015087019630673637144422540572481103610249216) (x20 x311 26959946667150639794667015087019630673637144422540572481103610249216) (x443 x311 26959946667150639794667015087019630673637144422540572481103610249216) (x214 x311 26959946667150639794667015087019630673637144422540572481103610249216) (= (* 26959946667150639794667015087019630673637144422540572481103610249216 (x273 x311 26959946667150639794667015087019630673637144422540572481103610249216)) (- x311 (x333 26959946667150639794667015087019630673637144422540572481103610249215 x311))) (=> (and (< 0 x311) (> 26959946667150639794667015087019630673637144422540572481103610249216 0)) (and (< (- x311 26959946667150639794667015087019630673637144422540572481103610249216) (* (x273 x311 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) (>= x311 (* (x273 x311 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216))))))
(assert (x378 x371 x223))
(assert (x378 x325 (- x33 x88)))
(assert (x128 (- x174 x325)))
(assert (x388 x50))
(assert (= (x352 x107) 0))
(assert (x388 x47))
(assert (x128 x327))
(assert (not (= 1840041978 (x281 36 32 x70 3943638230))))
(assert (x378 x288 (- x241 x454)))
(assert (x128 x288))
(assert (=> (<= x70 10000) (not (= x70 (x281 36 32 x70 954831406)))))
(assert (=> (>= 10000 x299) (not (= x299 (x281 36 32 x70 (x397 x311 224))))))
(assert (not (= (x281 36 32 x70 790236105) 954831406)))
(assert (not (= 25742203781880459408941457317362166305709681742799472914177068605934923677696 (x281 36 32 x70 954831406))))
(assert (x96 x288 x241 x88 x327))
(assert (not (= (x281 36 32 x70 954831406) 770885568)))
(assert (x378 x303 (- x288 x223)))
(assert (x110 x338))
(assert (x389 x332))
(assert (not (= 100000 (x281 36 32 x70 954831406))))
(assert (x378 x88 (- x327 x174)))
(assert (=> (>= 10000 x374) (not (= x374 (x281 36 32 x70 4105672269)))))
(assert (x389 x211))
(assert (x128 (- x324 x33)))
(assert (not (= 910484757 (x281 36 32 x70 (x397 x311 224)))))
(assert (x96 x325 x33 x88 x327))
(assert (not (= (x281 36 32 x70 4105672269) 16)))
(assert (x378 x80 (- x269 x88)))
(assert (not (= (x281 36 32 x70 4105672269) 1871194811)))
(assert (x388 x26))
(assert (=> (= (x281 36 32 x70 954831406) (x281 36 32 x70 (x397 x311 224))) (= 954831406 (x397 x311 224))))
(assert (x128 (- x174 x241)))
(assert (not (= (x281 36 32 x70 1356689113) 910484757)))
(assert (not (= (x281 36 32 x70 4105672269) 36)))
(assert (x128 (- x241 x174)))
(assert (x96 x324 x174 x371 x223))
(assert (x388 x454))
(assert (x128 (- x303 x88)))
(assert (not (= 13 (x281 36 32 x70 4105672269))))
(assert (= (and (not x353) x60) x95))
(assert (=> (<= x370 10000) (not (= (x281 36 32 x70 790236105) x370))))
(assert (not (= (x281 36 32 x70 1356689113) 21304723245256853039595661774342629002073543191790936201937503064778531143680)))
(assert (x28 x223 x371 x80 x269))
(assert (x378 x91 (- x454 x223)))
(assert (x389 x346))
(assert (x388 x257))
(assert (x378 x454 (- x91 x33)))
(assert (x128 (- x223 x324)))
(assert (x96 x288 x241 x33 x325))
(assert (x378 x327 (- x88 x33)))
(assert (x110 x420))
(assert (not (= 503383097 (x281 36 32 x70 1356689113))))
(assert (not (= (x281 36 32 x70 954831406) 14)))
(assert (x96 x288 x241 x327 x88))
(assert (x388 x262))
(assert (not (= 1840041978 (x281 36 32 x70 1356689113))))
(assert (not (= (x281 36 32 x70 790236105) 1738207182)))
(assert (not (= (x281 36 32 x70 790236105) 15314092380000)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 2966737888)))
(assert (x388 x68))
(assert (x388 x325))
(assert (x378 x80 x269))
(assert (x58 x382 x366))
(assert (x388 x434))
(assert (x128 (- x327 x269)))
(assert (x28 x325 x33 x241 x288))
(assert (not (= 2966737888 (x281 36 32 x70 954831406))))
(assert (x388 x240))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 70508962019145425934951811999677760319478833095128838543097651878529435959296)))
(assert (not (= (x281 36 32 x70 3943638230) 954831406)))
(assert (not (= 790236105 (x281 36 32 x70 3943638230))))
(assert (= (or x295 x40) x199))
(assert (x96 x88 x327 x241 x288))
(assert (x378 x80 (- x269 x288)))
(assert (not (= (x281 36 32 x70 3943638230) 2966737888)))
(assert (x96 x223 x371 x324 x174))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 2580288415)))
(assert (x28 x454 x91 x33 x325))
(assert (= (=> (and (or (and (and (= x427 (x273 x215 x338)) (not (= 0 x338)) (= (x305 (+ x427 1)) x126) (= x215 (x222 (- x415 1))) (ite x399 x399 (= x288 (x273 x338 x241))) (= x415 (x317 (* 86400 x303))) (= x338 (x317 (x181 x241 x288))) (= (= 0 x241) x399) (= x231 86400) (= x343 x126) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 86400 x303))) x298) (and (not x298) (and (= (ite (= x202 0) 0 (x305 (+ (x317 (x273 (x222 (- x202 1)) x265)) 1))) x272) (= x202 (x317 (* x241 86400))) (= x272 x343) (= x446 86400) (not (= x265 0)) (= (x317 (x181 x303 x288)) x265) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x181 x303 x288)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x241 86400))))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x136 1000)) (= 0 x186) (= (> x303 x241) x298) (= (x317 (* 1000 x99)) x303) (= 1000 x170))) x383) x172))
(assert (x388 x11))
(assert (x388 x72))
(assert (x96 x33 x325 x91 x454))
(assert (x378 x88 (- x327 x325)))
(assert (x128 (- x91 x88)))
(assert (not (= (x281 36 32 x70 790236105) 519173431)))
(assert (x96 x241 x288 x454 x91))
(assert (x388 x2))
(assert (not (= (x281 36 32 x70 1356689113) 599290589)))
(assert (x128 (- x269 x91)))
(assert (x28 x174 x324 x303 x288))
(assert (not (= (x281 36 32 x70 4105672269) 743225245)))
(assert (not (= (x281 36 32 x70 4105672269) (x281 36 32 x70 3943638230))))
(assert (x378 x371 (- x223 x174)))
(assert (x128 x454))
(assert (x378 x33 (- x325 x88)))
(assert (not (= 2876725745 (x281 36 32 x70 4105672269))))
(assert (x388 x324))
(assert (not (= 70508962019145425934951811999677760319478833095128838543097651878529435959296 (x281 36 32 x70 1356689113))))
(assert (not (= (x281 36 32 x70 790236105) 1531409238)))
(assert (x378 x269 (- x80 x324)))
(assert (x388 x81))
(assert (x388 x394))
(assert (x388 x326))
(assert (x96 x303 x288 x269 x80))
(assert (=> (>= 10000 (x397 x311 224)) (not (= (x397 x311 224) (x281 36 32 x70 4105672269)))))
(assert (not (= (x281 36 32 x70 790236105) 3996650231)))
(assert (x128 x324))
(assert (x388 x212))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 21304723245256853039595661774342629002073543191790936201937503064778531143680)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x281 36 32 x70 (x397 x311 224)))))
(assert (x378 x223 (- x371 x241)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x281 36 32 x70 954831406))))
(assert (x128 (- x223 x174)))
(assert (x110 x241))
(assert (not (= (x281 36 32 x70 3943638230) 1984976886)))
(assert (x378 x454 (- x91 x303)))
(assert (x96 x324 x174 x303 x288))
(assert (not (= 2580288415 (x281 36 32 x70 4105672269))))
(assert (x378 x241 (- x288 x88)))
(assert (not (= (x281 36 32 x70 3943638230) 3812870723)))
(assert (x378 x33 (- x325 x223)))
(assert (x28 x88 x327 x454 x91))
(assert (x388 x93))
(assert (not (= (x281 36 32 x70 3943638230) 110688705405039355050572217931781119515373813223972846963051619115990310191104)))
(assert (not (= (x281 36 32 x70 4105672269) 1356689113)))
(assert (x96 x269 x80 x288 x303))
(assert (x28 x241 x288 x33 x325))
(assert (x128 x223))
(assert (x378 x303 x288))
(assert (x388 x75))
(assert (x28 x33 x325 x241 x288))
(assert (x388 x252))
(assert (= (and x245 x416) x121))
(assert (x388 x277))
(assert (x96 x241 x288 x33 x325))
(assert (x128 (- x288 x371)))
(assert (x388 x36))
(assert (not (= (x281 36 32 x70 954831406) 16)))
(assert (not (= (x281 36 32 x70 1356689113) 15)))
(assert (x388 x255))
(assert (not (= (x281 36 32 x70 3943638230) 106320276355336348263208190817157392285036095892762275362566149969828045127680)))
(assert (not (= (x281 36 32 x70 1356689113) 519173431)))
(assert (x378 x454 (- x91 x327)))
(assert (x96 x174 x324 x80 x269))
(assert (x388 x374))
(assert (not (= 790236105 (x281 36 32 x70 790236105))))
(assert (=> (<= x70 10000) (not (= x70 (x281 36 32 x70 3943638230)))))
(assert (x28 x91 x454 x371 x223))
(assert (x28 x371 x223 x454 x91))
(assert (x96 x303 x288 x33 x325))
(assert (not (= 3996650231 (x281 36 32 x70 4105672269))))
(assert (x96 x88 x327 x33 x325))
(assert (x128 (- x288 x269)))
(assert (not (= 70508962019145425934951811999677760319478833095128838543097651878529435959296 (x281 36 32 x70 790236105))))
(assert (x388 x19))
(assert (x128 (- x33 x88)))
(assert (x128 (- x371 x324)))
(assert (not (= 3002540418 (x281 36 32 x70 954831406))))
(assert (not (= 15314092380000 (x281 36 32 x70 3943638230))))
(assert (x96 x33 x325 x371 x223))
(assert (x378 x454 x91))
(assert (x388 x62))
(assert (x388 x143))
(assert (not (= 2876725745 (x281 36 32 x70 3943638230))))
(assert (x128 (- x269 x88)))
(assert (not (= 954831406 (x281 36 32 x70 1356689113))))
(assert (x28 x174 x324 x327 x88))
(assert (not (= (x281 36 32 x70 4105672269) 1840041978)))
(assert (x96 x454 x91 x288 x303))
(assert (x28 x223 x371 x324 x174))
(assert (x96 x91 x454 x327 x88))
(assert (x388 x9))
(assert (x388 x349))
(assert (x388 x215))
(assert (= (and (not x357) x145) x345))
(assert (x378 x327 (- x88 x325)))
(assert (x128 (- x33 x223)))
(assert (x378 x269 (- x80 x91)))
(assert (x128 (- x80 x454)))
(assert (not (= (x281 36 32 x70 790236105) 13)))
(assert (x388 x208))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 2863377861)))
(assert (x388 x307))
(assert (x388 x420))
(assert (x388 x132))
(assert (not (= 3366849169 (x281 36 32 x70 1356689113))))
(assert (x128 (- x91 x303)))
(assert (not (= (x281 36 32 x70 790236105) 922701707)))
(assert (x388 x88))
(assert (x378 x269 (- x80 x288)))
(assert (x96 x33 x325 x454 x91))
(assert (x388 x380))
(assert (x388 x370))
(assert (not (= (x281 36 32 x70 954831406) (x281 36 32 x70 790236105))))
(assert (= x192 (=> (and (= x339 (< x326 x422)) (not (< x329 x360)) (= (x302 14) x56) (= (x302 16) x422) (not (< 5000 x136)) (= (x222 (- x55 x326)) x288) (not (> 1 x136)) (= (x302 15) x6) (< 0 x84) (= x259 (x302 13)) (not (< x288 86400))) (and (=> (and x339 (and (= (< x259 x56) x171) (or (and (and (= x81 (x273 x439 x161)) (= x161 (x222 (- x422 x6))) (= (x317 (x181 x454 x91)) x439) (> x161 0) (= x82 x331) (= (x222 (- x259 x56)) x454) (= (x222 (- x259 x81)) x331) (= (x222 (- x326 x6)) x91)) (not x171)) (and x171 (and (= x82 x266) (= (x222 (- x56 x259)) x324) (= (x222 (- x326 x6)) x174) (= x19 (x222 (- x422 x6))) (< 0 x19) (= (x273 x330 x19) x132) (= (x317 (x181 x324 x174)) x330) (= (x305 (+ x259 x132)) x266)))))) x386) (=> (and (not x339) (and (= x186 0) (= x56 x241))) x172)))))
(assert (not (= (x281 36 32 x70 3943638230) 77196514420459877940035116867124998943289115686762304616657918434777787006976)))
(assert (x388 x292))
(assert (x378 x303 (- x288 x325)))
(assert (x96 x241 x288 x324 x174))
(assert (not (= 3002540418 (x281 36 32 x70 3943638230))))
(assert (not (= 2064814097 (x281 36 32 x70 3943638230))))
(assert (x388 x342))
(assert (x388 x310))
(assert (x28 x303 x288 x454 x91))
(assert (x378 x88 (- x327 x269)))
(assert (= x44 (and x158 x339)))
(assert (x388 x299))
(assert (x378 x324 (- x174 x327)))
(assert (x388 x94))
(assert (x378 x33 (- x325 x91)))
(assert (x378 x325 (- x33 x223)))
(assert (not (= (x281 36 32 x70 790236105) 77196514420459877940035116867124998943289115686762304616657918434777787006976)))
(assert (x388 x133))
(assert (= (and x353 x60) x418))
(assert (x128 (- x288 x327)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x281 36 32 x70 790236105))))
(assert (not (= (x281 36 32 x70 4105672269) 70508962019145425934951811999677760319478833095128838543097651878529435959296)))
(assert (=> (<= x70 10000) (not (= x70 (x281 36 32 x70 (x397 x311 224))))))
(assert (x96 x288 x241 x269 x80))
(assert (= (=> (and (= x83 1) (= x17 x236)) x27) x142))
(assert (not (= (x281 36 32 x70 4105672269) 826074471)))
(assert (x28 x33 x325 x324 x174))
(assert (x388 x182))
(assert (x96 x269 x80 x288 x241))
(assert (x378 x241 (- x288 x327)))
(assert (x110 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x388 x400))
(assert (x128 (- x288 x174)))
(assert (x378 x288 (- x241 x91)))
(assert (x388 x38))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 790236105)))
(assert (x388 x97))
(assert (not (= 25742203781880459408941457317362166305709681742799472914177068605934923677696 (x281 36 32 x70 4105672269))))
(assert (x388 x91))
(assert (x128 (- x269 x327)))
(assert (x96 x371 x223 x269 x80))
(assert (x128 (- x91 x241)))
(assert (x96 x33 x325 x223 x371))
(assert (x96 x324 x174 x223 x371))
(assert (not (= 3051865383 (x281 36 32 x70 4105672269))))
(assert (not (= 3506505391 (x281 36 32 x70 1356689113))))
(assert (x378 x80 (- x269 x223)))
(assert (x96 x371 x223 x324 x174))
(assert (x388 x360))
(assert (x128 (- x371 x174)))
(assert (not (= (x281 36 32 x70 3943638230) 36)))
(assert (not x152))
(assert (not (= (x281 36 32 x70 1356689113) 686821956)))
(assert (not (= 100000 (x281 36 32 x70 3943638230))))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 77196514420459877940035116867124998943289115686762304616657918434777787006976)))
(assert (x96 x325 x33 x288 x303))
(assert (x378 x303 (- x288 x88)))
(assert (x96 x88 x327 x454 x91))
(assert (x28 x80 x269 x327 x88))
(assert (x96 x288 x241 x325 x33))
(assert (x378 x324 (- x174 x223)))
(assert (x389 x370))
(assert (x378 x324 (- x174 x325)))
(assert (x128 x99))
(assert (x378 x223 (- x371 x325)))
(assert (x58 x439 x161))
(assert (x388 x213))
(assert (x388 x414))
(assert (not (= (x281 36 32 x70 790236105) 32)))
(assert (x28 x371 x223 x33 x325))
(assert (x96 x88 x327 x288 x303))
(assert (x96 x80 x269 x88 x327))
(assert (x128 (- x288 x325)))
(assert (not (= 3567393941 (x281 36 32 x70 (x397 x311 224)))))
(assert (x128 (- x327 x241)))
(assert (x96 x325 x33 x303 x288))
(assert (x378 x174 (- x324 x33)))
(assert (x388 x371))
(assert (x388 x282))
(assert (=> (<= x332 10000) (not (= (x281 36 32 x70 4105672269) x332))))
(assert (x388 x392))
(assert (x388 x396))
(assert (x128 (- x454 x303)))
(assert (x128 1000))
(assert (x388 x35))
(assert (x96 x80 x269 x371 x223))
(assert (x28 x288 x241 x324 x174))
(assert (x378 x269 (- x80 x88)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 86400)))
(assert (x388 x150))
(assert (x388 x453))
(assert (x388 x206))
(assert (=> (>= 10000 x211) (not (= (x281 36 32 x70 4105672269) x211))))
(assert (x128 (- x88 x80)))
(assert (x378 x288 (- x303 x325)))
(assert (not (= (x281 36 32 x70 4105672269) 503383097)))
(assert (not (= (x281 36 32 x70 954831406) 32)))
(assert (x28 x303 x288 x33 x325))
(assert (not (= (x281 36 32 x70 1356689113) 1862597803)))
(assert (x28 x327 x88 x80 x269))
(assert (x388 x65))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 2876725745)))
(assert (x378 x288 (- x241 x88)))
(assert (not (= 3996650231 (x281 36 32 x70 1356689113))))
(assert (=> (>= 10000 x332) (not (= x332 (x281 36 32 x70 954831406)))))
(assert (=> (>= 10000 x299) (not (= (x281 36 32 x70 1356689113) x299))))
(assert (x128 x269))
(assert (x96 x371 x223 x174 x324))
(assert (x378 x324 (- x174 x371)))
(assert (x128 (- x91 x327)))
(assert (=> (= (x281 36 32 x70 1356689113) (x281 36 32 x70 (x397 x311 224))) (= (x397 x311 224) 1356689113)))
(assert (not (= 3224796394 (x281 36 32 x70 (x397 x311 224)))))
(assert (=> (= (x281 36 32 x70 (x397 x311 224)) (x281 36 32 x70 4105672269)) (= 4105672269 (x397 x311 224))))
(assert (not (= (x281 36 32 x70 954831406) 922701707)))
(assert (x388 x186))
(assert (x28 x303 x288 x327 x88))
(assert (x378 x327 x88))
(assert (x388 x415))
(assert (not (= (x281 36 32 x70 1356689113) 3812870723)))
(assert (x169 x150))
(assert (x96 x80 x269 x223 x371))
(assert (not (= (x281 36 32 x70 4105672269) 686821956)))
(assert (x96 x324 x174 x88 x327))
(assert (x378 x454 (- x91 x241)))
(assert (x28 x288 x241 x327 x88))
(assert (x28 x174 x324 x241 x288))
(assert (not (= 16 (x281 36 32 x70 1356689113))))
(assert (x110 (x222 (- x202 1))))
(assert (not (= (x281 36 32 x70 1356689113) 2876725745)))
(assert (not (= (x281 36 32 x70 1356689113) 1461501637330902918203684832716283019655932542975)))
(assert (not (= 3871629458 (x281 36 32 x70 4105672269))))
(assert (x96 x325 x33 x371 x223))
(assert (x389 x299))
(assert (not (= (x281 36 32 x70 4105672269) 2863377861)))
(assert (x388 x229))
(assert (x128 (- x303 x325)))
(assert (x96 x288 x303 x33 x325))
(assert (and (x271 1000 x99) (x428 1000 x99) (= (x181 1000 x99) (* 1000 x99)) (x3 1000 x99) (x293 1000 x99) (and (= (* 1000 (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x181 1000 (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x181 (- 115792089237316195423570985008687907853269984665640564039457584007913129638936) (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000 (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x181 (- 115792089237316195423570985008687907853269984665640564039457584007913129638936) x99) (- (* 1000 x99) (* x99 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x98 1000 x99)))
(assert (x388 x43))
(assert (x388 x410))
(assert (x28 x288 x241 x33 x325))
(assert (=> (<= x346 10000) (not (= x346 (x281 36 32 x70 1356689113)))))
(assert (=> (>= 10000 x332) (not (= (x281 36 32 x70 (x397 x311 224)) x332))))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 1871194811)))
(assert (not (= (x281 36 32 x70 3943638230) 3366849169)))
(assert (x96 x327 x88 x33 x325))
(assert (and (x323 x150 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x135 x150 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x273 x150 1461501637330902918203684832716283019655932542976))) x150)) (x127 x150 1461501637330902918203684832716283019655932542976) (x41 x150 1461501637330902918203684832716283019655932542976)))
(assert (not (= 36576266130383907740409294828766280552204369950469466485900666250106563985408 (x281 36 32 x70 790236105))))
(assert (x128 (- x241 x223)))
(assert (= x40 (and x267 (not x298))))
(assert (x96 x241 x288 x80 x269))
(assert (x388 x17))
(assert (not (= (x281 36 32 x70 1356689113) 15314092380000)))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249216 (x281 36 32 x70 1356689113))))
(assert (x388 x33))
(assert (x96 x288 x303 x91 x454))
(assert (x378 x288 (- x303 x327)))
(assert (x28 x324 x174 x241 x288))
(assert (x28 x88 x327 x241 x288))
(assert (x388 x391))
(assert (x388 x188))
(assert (x378 x303 (- x288 x33)))
(assert (x96 x324 x174 x33 x325))
(assert (not (= 822145385 (x281 36 32 x70 790236105))))
(assert (not (= 826074471 (x281 36 32 x70 3943638230))))
(assert (x128 (- x269 x223)))
(assert (x388 x147))
(assert (x96 x269 x80 x241 x288))
(assert (not (= (x281 36 32 x70 790236105) 2039265891)))
(assert (x378 x269 (- x80 x241)))
(assert (x388 x87))
(assert (not (= 25742203781880459408941457317362166305709681742799472914177068605934923677696 (x281 36 32 x70 790236105))))
(assert (x388 x455))
(assert (not (= (x281 36 32 x70 1356689113) 922701707)))
(assert (x28 x80 x269 x371 x223))
(assert (not (= (x281 36 32 x70 790236105) 1840041978)))
(assert (x378 x241 (- x288 x223)))
(assert (x388 x167))
(assert (x128 (- x91 x33)))
(assert (not (= 3366849169 (x281 36 32 x70 4105672269))))
(assert (x110 x215))
(assert (not (= 954831406 (x281 36 32 x70 4105672269))))
(assert (x28 x91 x454 x327 x88))
(assert (not (= (x281 36 32 x70 1356689113) (x281 36 32 x70 3943638230))))
(assert (x28 x324 x174 x371 x223))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 1439069736)))
(assert (x96 x241 x288 x327 x88))
(assert (not (= (x281 36 32 x70 954831406) 954831406)))
(assert (x388 x332))
(assert (x378 x371 (- x223 x91)))
(assert (not (= (x281 36 32 x70 790236105) 2127478272)))
(assert (x389 x311))
(assert (x96 x325 x33 x174 x324))
(assert (not (= (x281 36 32 x70 954831406) 77196514420459877940035116867124998943289115686762304616657918434777787006976)))
(assert (x96 x174 x324 x88 x327))
(assert (not (= (x281 36 32 x70 4105672269) 1461501637330902918203684832716283019655932542975)))
(assert (x378 x88 (- x327 x288)))
(assert (x28 x269 x80 x327 x88))
(assert (not (= (x281 36 32 x70 4105672269) 2966737888)))
(assert (x96 x91 x454 x288 x303))
(assert (x96 x269 x80 x327 x88))
(assert (not (= (x281 36 32 x70 3943638230) 599290589)))
(assert (x28 x33 x325 x303 x288))
(assert (x378 x324 (- x174 x303)))
(assert (x388 x90))
(assert (x388 x266))
(assert (=> (<= x70 10000) (not (= (x281 36 32 x70 1356689113) x70))))
(assert (x128 (- x324 x303)))
(assert (x128 (- x324 x327)))
(assert (x96 x288 x241 x223 x371))
(assert (not (= (x281 36 32 x70 3943638230) 2127478272)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 3008386744)))
(assert (not (= 3506505391 (x281 36 32 x70 (x397 x311 224)))))
(assert (not (= (x281 36 32 x70 1356689113) 2863377861)))
(assert (x378 x327 (- x88 x324)))
(assert (x128 (- x325 x303)))
(assert (x96 x88 x327 x288 x241))
(assert (x378 x269 (- x80 x223)))
(assert (x378 x324 (- x174 x88)))
(assert (not (= (x281 36 32 x70 790236105) 2966737888)))
(assert (not (= (x281 36 32 x70 4105672269) 15)))
(assert (not (= (x281 36 32 x70 1356689113) 770885568)))
(assert (x128 (- x33 x371)))
(assert (not (= (x281 36 32 x70 4105672269) 922701707)))
(assert (x96 x324 x174 x269 x80))
(assert (x128 (- x223 x269)))
(assert (x28 x325 x33 x324 x174))
(assert (x388 x99))
(assert (and (x271 86400 x303) (x428 86400 x303) (= (x181 86400 x303) (* 86400 x303)) (x3 86400 x303) (x293 86400 x303) (and (= (* 86400 (- x303 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x181 86400 (- x303 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x181 (- 115792089237316195423570985008687907853269984665640564039457584007913129553536) (- x303 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 86400 (- x303 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x303 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x181 (- 115792089237316195423570985008687907853269984665640564039457584007913129553536) x303) (- (* 86400 x303) (* x303 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x98 86400 x303)))
(assert (x28 x80 x269 x454 x91))
(assert (not (= 1062488491900878629424266116482631147622884293147 (x281 36 32 x70 790236105))))
(assert (x96 x241 x288 x174 x324))
(assert (x28 x241 x288 x327 x88))
(assert (x378 x303 (- x288 x327)))
(assert (= (or x345 x448) x321))
(assert (x28 x91 x454 x241 x288))
(assert (x388 x228))
(assert (x128 (- x80 x327)))
(assert (not (= 2580288415 (x281 36 32 x70 1356689113))))
(assert (not (= (x281 36 32 x70 954831406) 1984976886)))
(assert (x388 x92))
(assert (not (= (x281 36 32 x70 3943638230) 14)))
(assert (not (= (x281 36 32 x70 4105672269) (x281 36 32 x70 954831406))))
(assert (x388 x114))
(assert (=> (<= x332 10000) (not (= (x281 36 32 x70 1356689113) x332))))
(assert (x388 x269))
(assert (x128 (- x269 x324)))
(assert (x378 x174 (- x324 x88)))
(assert (x378 x303 (- x288 x454)))
(assert (x28 x324 x174 x303 x288))
(assert (x96 x80 x269 x288 x303))
(assert (= x316 (and x442 (not x242))))
(assert (not (= 599290589 (x281 36 32 x70 (x397 x311 224)))))
(assert (not (= 21304723245256853039595661774342629002073543191790936201937503064778531143680 (x281 36 32 x70 3943638230))))
(assert (x96 x288 x303 x371 x223))
(assert (not (= (x281 36 32 x70 790236105) 15)))
(assert (not (= (x281 36 32 x70 954831406) 503383097)))
(assert (x128 (- x91 x80)))
(assert (x96 x303 x288 x325 x33))
(assert (= x15 (or x376 x354)))
(assert (x378 x454 (- x91 x325)))
(assert (not (= (x281 36 32 x70 954831406) 15)))
(assert (x96 x88 x327 x91 x454))
(assert (x28 x33 x325 x454 x91))
(assert (x388 x272))
(assert (= x402 (and x199 x116)))
(assert (x378 x325 (- x33 x371)))
(assert (not (= (x281 36 32 x70 790236105) 3812870723)))
(assert (not (= 3812870723 (x281 36 32 x70 (x397 x311 224)))))
(assert (x378 x325 (- x33 x174)))
(assert (x388 x107))
(assert (x128 (- x241 x325)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 503383097)))
(assert (not (= 21304723245256853039595661774342629002073543191790936201937503064778531143680 (x281 36 32 x70 4105672269))))
(assert (not (= 86400 (x281 36 32 x70 3943638230))))
(assert (x58 x420 x372))
(assert (not (= 100000 (x281 36 32 x70 4105672269))))
(assert (not (= (x281 36 32 x70 3943638230) 3506505391)))
(assert (x28 x174 x324 x33 x325))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 25742203781880459408941457317362166305709681742799472914177068605934923677696)))
(assert (x388 x259))
(assert (x128 86400))
(assert (x388 x270))
(assert (= (=> (and (= x22 x163) (= x129 x173)) x246) x237))
(assert (x96 x454 x91 x88 x327))
(assert (x388 x170))
(assert (x128 (- x241 x371)))
(assert (x128 (- x454 x241)))
(assert (not (= 1816029635 (x281 36 32 x70 954831406))))
(assert (x128 (- x88 x269)))
(assert (x378 x88 (- x327 x80)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 3249860859)))
(assert (=> (>= 10000 x346) (not (= (x281 36 32 x70 4105672269) x346))))
(assert (not (= (x281 36 32 x70 1356689113) 1984976886)))
(assert (x128 (- x325 x371)))
(assert (x388 x216))
(assert (x96 x88 x327 x174 x324))
(assert (x388 x308))
(assert (x378 x324 (- x174 x80)))
(assert (x378 x288 (- x303 x91)))
(assert (not (= 2064814097 (x281 36 32 x70 790236105))))
(assert (x378 x223 (- x371 x303)))
(assert (x128 (- x33 x174)))
(assert (x378 x327 (- x88 x174)))
(assert (not (= (x281 36 32 x70 954831406) 3996650231)))
(assert (x96 x91 x454 x88 x327))
(assert (not (= 2039265891 (x281 36 32 x70 (x397 x311 224)))))
(assert (x388 x320))
(assert (x378 x223 (- x371 x324)))
(assert (x96 x33 x325 x288 x303))
(assert (x128 x33))
(assert (x128 (- x303 x371)))
(assert (x128 (- x303 x327)))
(assert (not (= (x281 36 32 x70 954831406) 596258137)))
(assert (x28 x454 x91 x80 x269))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 15314092380000)))
(assert (=> (<= x70 10000) (not (= x70 (x281 36 32 x70 4105672269)))))
(assert (x128 (- x174 x288)))
(assert (x128 (- x88 x174)))
(assert (not (= (x281 36 32 x70 4105672269) 3224796394)))
(assert (x378 x371 (- x223 x288)))
(assert (x388 x70))
(assert (not (= 1862597803 (x281 36 32 x70 (x397 x311 224)))))
(assert (x28 x303 x288 x371 x223))
(assert (not (= (x281 36 32 x70 954831406) 3366849169)))
(assert (x96 x33 x325 x88 x327))
(assert (x128 (- x327 x324)))
(assert (=> (>= 10000 x211) (not (= (x281 36 32 x70 1356689113) x211))))
(assert (x378 x80 (- x269 x174)))
(assert (x128 x325))
(assert (not (= (x281 36 32 x70 954831406) 3890975986)))
(assert (x128 (- x80 x91)))
(assert (not (= 596258137 (x281 36 32 x70 4105672269))))
(assert (not (= 3249860859 (x281 36 32 x70 4105672269))))
(assert (x96 x454 x91 x241 x288))
(assert (not (= (x281 36 32 x70 4105672269) (x281 36 32 x70 1356689113))))
(assert (not (= (x281 36 32 x70 790236105) (x281 36 32 x70 4105672269))))
(assert (x128 (- x80 x371)))
(assert (x378 x88 (- x327 x454)))
(assert (not (= (x281 36 32 x70 1356689113) 36)))
(assert (x96 x223 x371 x325 x33))
(assert (x388 x427))
(assert (x388 x314))
(assert (not (= (x281 36 32 x70 954831406) 519173431)))
(assert (not (= (x281 36 32 x70 790236105) 36)))
(assert (x96 x454 x91 x33 x325))
(assert (x128 (- x174 x88)))
(assert (x96 x174 x324 x325 x33))
(assert (not (= (x281 36 32 x70 4105672269) 519173431)))
(assert (x96 x88 x327 x80 x269))
(assert (x388 x384))
(assert (x128 (- x33 x454)))
(assert (not (= 86400 (x281 36 32 x70 790236105))))
(assert (not (= 1531409238 (x281 36 32 x70 954831406))))
(assert (x128 (- x33 x288)))
(assert (x28 x269 x80 x241 x288))
(assert (x378 x223 (- x371 x269)))
(assert (x388 x187))
(assert (x378 x80 (- x269 x327)))
(assert (not (= 4105672269 (x281 36 32 x70 1356689113))))
(assert (x128 (- x223 x91)))
(assert (x378 x303 (- x288 x80)))
(assert (= (and (not x37) x321) x377))
(assert (not (= (x281 36 32 x70 954831406) 3871629458)))
(assert (x378 x288 (- x241 x327)))
(assert (x128 (- x91 x325)))
(assert (not (= (x281 36 32 x70 3943638230) 596258137)))
(assert (not (= 3249860859 (x281 36 32 x70 3943638230))))
(assert (x96 x288 x303 x223 x371))
(assert (not (= 36576266130383907740409294828766280552204369950469466485900666250106563985408 (x281 36 32 x70 3943638230))))
(assert (x128 (- x327 x454)))
(assert (x388 x401))
(assert (=> (<= x211 10000) (not (= (x281 36 32 x70 (x397 x311 224)) x211))))
(assert (x28 x80 x269 x241 x288))
(assert (not (= 910484757 (x281 36 32 x70 790236105))))
(assert (x58 x338 x241))
(assert (x378 x80 (- x269 x303)))
(assert (x128 (- x454 x325)))
(assert (x378 x223 (- x371 x454)))
(assert (x96 x174 x324 x288 x303))
(assert (x388 x446))
(assert (x128 (- x223 x33)))
(assert (not (= (x281 36 32 x70 4105672269) 3506505391)))
(assert (x388 x73))
(assert (x388 x411))
(assert (= (and x402 x387) x354))
(assert (not (= 86400 (x281 36 32 x70 1356689113))))
(assert (x128 x80))
(assert (x378 x174 (- x324 x223)))
(assert (x96 x454 x91 x269 x80))
(assert (x388 x236))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 3051865383)))
(assert (x58 x215 x338))
(assert (x96 x325 x33 x223 x371))
(assert (x388 x176))
(assert (not (= (x281 36 32 x70 954831406) 1439069736)))
(assert (x128 (- x174 x371)))
(assert (x128 (- x327 x174)))
(assert (x378 x454 (- x91 x223)))
(assert (x128 (- x288 x454)))
(assert (x388 x303))
(assert (x378 x223 (- x371 x80)))
(assert (not (= 15 (x281 36 32 x70 (x397 x311 224)))))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 1356689113)))
(assert (x378 x288 (- x303 x33)))
(assert (not (= 3051865383 (x281 36 32 x70 1356689113))))
(assert (x388 x111))
(assert (x388 x398))
(assert (not (= 1439069736 (x281 36 32 x70 1356689113))))
(assert (not (= (x281 36 32 x70 4105672269) 77196514420459877940035116867124998943289115686762304616657918434777787006976)))
(assert (x28 x88 x327 x33 x325))
(assert (x96 x91 x454 x288 x241))
(assert (x28 x174 x324 x371 x223))
(assert (x96 x325 x33 x454 x91))
(assert (x96 x371 x223 x454 x91))
(assert (= x152 (=> (and (and (= (x115 x332) x26) (= 86400 x395) x52 (<= 0 x26) x365 (< 0 x370) (= x254 3249860859) (> x299 0) (>= 1461501637330902918203684832716283019655932542975 x374) (< 0 x182) (= (x220 x370) x182) (not (< x254 2127478272)) (= (> (x220 x332) 0) x355) (< 0 x346) (> x332 0) (not (= x370 x374)) (>= 1461501637330902918203684832716283019655932542975 x332) (not (= x299 x374)) (>= x425 0) x218 (not (= x374 x332)) x421 (<= x299 1461501637330902918203684832716283019655932542975) (not (= x299 x332)) (>= x65 0) (not (= x346 x332)) (> 3812870723 x254) (= (< 0 (x220 x346)) x421) (not (= 3224796394 x254)) (= x425 (x115 x346)) (not (= x299 x346)) (= (x115 x299) x36) (<= x346 1461501637330902918203684832716283019655932542975) (>= x373 0) (<= 0 x36) (not (= x374 x346)) (= (> (x220 x374) 0) x365) x355 (= x218 (> (x220 x299) 0)) (< x254 3567393941) (not (> 3224796394 x254)) (= (x115 x374) x373) (= x65 (x115 x370)) (= x52 (> (x220 x370) 0)) (>= 1461501637330902918203684832716283019655932542975 x370) (not (= x370 x299)) (not (= x332 x370)) (> 3366849169 x254) (< 0 x374) (not (= x370 x346))) (and (and (and (= 2 x363) (not (< x125 500647658)) (not (= 910484757 x125)) (> 2127478272 x125) (not (= x125 822145385)) (= x411 (x220 x370)) (not (> 822145385 x125)) (= x9 0) (< x125 954831406) (= 86400 x216) (not (< x125 743225245)) (= 922701707 x125) (not (= x125 826074471)) (< 0 x411)) (and (and (= 1000 x29) (not (> 1738207182 x249)) (= x434 2) (> 2127478272 x249) (= x203 true) (= x405 (x220 x370)) (= 2 x50) (not (> 954831406 x249)) (= 1816029635 x249) (> 1871194811 x249) (not (< x249 1439069736)) (not (= 1738207182 x249)) (< 0 x405)) (and (and (< x410 954831406) (not (= x410 503383097)) (not (= 500647658 x410)) (= 1000 x208) (not (< x410 500647658)) (> 2127478272 x410) (= 519173431 x410) (< x410 596258137) (= x457 5000) (= x381 5000) (= x277 (x220 x370)) (= 1000 x414) (= true x149) (> x277 0) (< x410 743225245)) (and (and (< 0 x257) (not (< x54 596258137)) (> 2127478272 x54) (= x217 5000) (not (= x54 596258137)) (= x54 686821956) (> 743225245 x54) (= x62 1) (not (= 599290589 x54)) (= x78 1) (= (x220 x370) x257) (> 954831406 x54) (not (< x54 500647658))) (and (and (not (= 599290589 x42)) (not (= 596258137 x42)) (not (< x42 596258137)) (= x167 1) (< x42 2127478272) (< 0 x312) (not (< x42 500647658)) (= 1 x400) (= x247 1) (= x42 686821956) (= x312 (x220 x370)) (< x42 743225245) (< x42 954831406)) (and (and (and (and (and (and (and (= 64 x433) (not (> 3812870723 x16)) (= 3890975986 x16) (= 192 x441) (= (x220 x370) x111) (not (< x16 2127478272)) (< 0 x111) (not (< x16 3890975986)) (< x16 3996650231) (not (< x16 3224796394)) (= 192 x342) (= x151 true)) (and (and (= x210 true) (< x315 1984976886) (= (x220 x370) x385) (not (< x315 954831406)) (= x238 64) (< x315 2127478272) (not (< x315 1871194811)) (= x287 64) (> x385 0) (= x315 1871194811) (= x334 64) (not (> 1439069736 x315))) (and (and (> 596258137 x462) (not (> 500647658 x462)) (= x459 x391) (> 743225245 x462) (<= x2 1461501637330902918203684832716283019655932542975) (> 2127478272 x462) (= x94 64) (= x380 64) (= x320 x2) (= true x195) (= x462 519173431) (<= x459 1461501637330902918203684832716283019655932542975) (not (= x462 500647658)) (< x462 954831406) (>= x2 0) (>= x459 0) (not (= 503383097 x462)) (= x141 5000) (= x25 5000) (= (x220 x370) x307) (> x307 0)) (and (<= 0 x31) (= (x302 14) x255) (not (> 2863377861 x153)) (= 100000 x105) (not (< x153 2127478272)) (= x77 x79) (not (= 3008386744 x153)) (= (x302 13) x308) (<= 0 x282) (= (x302 15) x438) (> x85 0) (= 0 x77) (= x353 (> x409 x326)) (= x153 3051865383) (= x270 x391) (= x406 x31) (= x444 x406) (not (< x153 2580288415)) (= x409 (x302 16)) (<= 0 x270) (= (x220 x370) x85) (<= x31 1461501637330902918203684832716283019655932542975) (<= x282 1461501637330902918203684832716283019655932542975) (> 3224796394 x153) (= 5000 x13) (not (> 3008386744 x153)) (>= 1461501637330902918203684832716283019655932542975 x270))))) (and (not (< x139 1439069736)) (= 128 x253) (not (> 954831406 x139)) (= x109 192) (< x139 1871194811) (not (= 1738207182 x139)) (> 2127478272 x139) (not (< x139 1738207182)) (= true x130) (= 128 x292) (> x143 0) (= (x220 x370) x143) (not (= 1816029635 x139)) (not (= 1840041978 x139)) (= 1862597803 x139))) (and (= 64 x154) (< x310 3812870723) (< x310 3567393941) (= x310 3506505391) (not (> 3366849169 x310)) (= x43 (x220 x370)) (= true x24) (= 128 x138) (not (< x310 2127478272)) (not (= 3366849169 x310)) (not (< x310 3224796394)) (= 64 x436) (< 0 x43))) (and (< x294 2127478272) (not (> 1439069736 x294)) (= 0 x30) (not (< x294 1871194811)) (= 2064814097 x294) (not (> 954831406 x294)) (not (= 1984976886 x294)) (= x297 true) (= x341 64) (= x92 0) (not (= x294 2039265891)) (= (x220 x370) x351) (not (> 1984976886 x294)) (> x351 0))) (and (> 3224796394 x72) (not (= 2876725745 x72)) (not (= x72 2863377861)) (not (> 2127478272 x72)) (= 5000 x89) (< x72 3008386744) (not (< x72 2863377861)) (= x72 3002540418) (= x408 (x220 x370)) (not (= x72 2966737888)) (= x228 0) (< 0 x408) (not (< x72 2580288415)) (= x101 100000))) (and (= 5000 x47) (> 743225245 x190) (= x190 519173431) (not (= x190 503383097)) (not (= 500647658 x190)) (> x361 0) (= (x220 x370) x361) (= 0 x123) (< x190 2127478272) (= x188 1) (not (< x190 500647658)) (< x190 954831406) (> 596258137 x190) (= x191 5000)))))))) (and (< 0 x314) (< x32 3567393941) (not (= x32 3224796394)) (= x337 1531409238) (< x32 3366849169) (not (< x32 2127478272)) (> 3812870723 x32) (= x314 (x220 x370)) (= x384 86400) (not (< x32 3224796394)) (= 86400 x159) (= 3249860859 x32)))) (and (=> (and x353 (and (or (and x464 (and (= (x273 x38 x244) x69) (= x244 (x222 (- x409 x438))) (= (x317 (x181 x371 x223)) x38) (= x223 (x222 (- x326 x438))) (= x453 (x305 (+ x308 x69))) (= x17 x453) (< 0 x244) (= x371 (x222 (- x255 x308))))) (and (and (= (x222 (- x308 x260)) x133) (= (x273 x461 x160) x260) (= (x222 (- x409 x438)) x160) (= x88 (x222 (- x326 x438))) (= x327 (x222 (- x308 x255))) (= x133 x17) (< 0 x160) (= x461 (x317 (x181 x327 x88)))) (not x464))) (= x464 (> x255 x308)))) x142) (=> (and (and (= x236 x255) (= x83 0)) (not x353)) x27)))))
(assert (x28 x327 x88 x241 x288))
(assert (x378 x371 (- x223 x269)))
(assert (x96 x303 x288 x80 x269))
(assert (x128 (- x454 x80)))
(assert (x28 x303 x288 x80 x269))
(assert (x128 (- x241 x327)))
(assert (x388 x423))
(assert (x388 x105))
(assert (not (= (x281 36 32 x70 1356689113) 36576266130383907740409294828766280552204369950469466485900666250106563985408)))
(assert (not (= 1062488491900878629424266116482631147622884293147 (x281 36 32 x70 1356689113))))
(assert (and (x271 26959946667150639794667015087019630673637144422540572481103610249216 x213) (x428 26959946667150639794667015087019630673637144422540572481103610249216 x213) (= (x181 26959946667150639794667015087019630673637144422540572481103610249216 x213) (* 26959946667150639794667015087019630673637144422540572481103610249216 x213)) (x3 26959946667150639794667015087019630673637144422540572481103610249216 x213) (x293 26959946667150639794667015087019630673637144422540572481103610249216 x213) (and (= (* 26959946667150639794667015087019630673637144422540572481103610249216 (- x213 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x181 26959946667150639794667015087019630673637144422540572481103610249216 (- x213 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x181 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) (- x213 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 26959946667150639794667015087019630673637144422540572481103610249216 (- x213 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x213 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x181 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x213) (- (* 26959946667150639794667015087019630673637144422540572481103610249216 x213) (* x213 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x98 26959946667150639794667015087019630673637144422540572481103610249216 x213)))
(assert (x378 x325 (- x33 x288)))
(assert (x378 x371 (- x223 x324)))
(assert (= (or x335 x74) x267))
(assert (x128 (- x241 x88)))
(assert (x388 x263))
(assert (x378 x91 (- x454 x325)))
(assert (not (= (x281 36 32 x70 1356689113) 3249860859)))
(assert (x96 x80 x269 x454 x91))
(assert (x96 x325 x33 x288 x241))
(assert (not (= 3890975986 (x281 36 32 x70 1356689113))))
(assert (not (= 1862597803 (x281 36 32 x70 790236105))))
(assert (= (or x201 x377) x158))
(assert (= (=> (and (= x90 1) (= x227 x423)) x296) x164))
(assert (x58 (x222 (- x202 1)) x265))
(assert (not (= 3567393941 (x281 36 32 x70 1356689113))))
(assert (x388 x337))
(assert (x388 x209))
(assert (x388 x238))
(assert (x378 x288 (- x303 x454)))
(assert (x388 x53))
(assert (x128 (- x33 x91)))
(assert (x388 x341))
(assert (x378 x241 (- x288 x324)))
(assert (x378 x33 (- x325 x454)))
(assert (and (= 81 (x181 27 3)) (= (x181 3 3) 9) (= 81 (x181 9 9)) (= 27 (x181 9 3))))
(assert (not (= (x281 36 32 x70 4105672269) 15314092380000)))
(assert (x96 x288 x241 x324 x174))
(assert (not (= 1816029635 (x281 36 32 x70 4105672269))))
(assert (x96 x454 x91 x288 x241))
(assert (x378 x288 (- x303 x80)))
(assert (x128 (- x91 x269)))
(assert (x96 x327 x88 x241 x288))
(assert (not (= (x281 36 32 x70 954831406) 13)))
(assert (x388 x154))
(assert (x388 x29))
(assert (x128 (- x371 x454)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 36576266130383907740409294828766280552204369950469466485900666250106563985408)))
(assert (x128 x303))
(assert (=> (<= (x397 x311 224) 10000) (not (= (x397 x311 224) (x281 36 32 x70 (x397 x311 224))))))
(assert (x128 (- x303 x269)))
(assert (x128 (- x303 x324)))
(assert (x110 x382))
(assert (= x145 (or x368 x95)))
(assert (=> (>= 10000 x374) (not (= (x281 36 32 x70 (x397 x311 224)) x374))))
(assert (x388 x422))
(assert (not (= (x281 36 32 x70 4105672269) 500647658)))
(assert (not (= (x281 36 32 x70 790236105) 1871194811)))
(assert (x128 (- x325 x324)))
(assert (x378 x80 (- x269 x241)))
(assert (not (= (x281 36 32 x70 4105672269) 770885568)))
(assert (x388 x13))
(assert (not (= 110688705405039355050572217931781119515373813223972846963051619115990310191104 (x281 36 32 x70 4105672269))))
(assert (x96 x174 x324 x327 x88))
(assert (not (= 500647658 (x281 36 32 x70 790236105))))
(assert (not (= 110688705405039355050572217931781119515373813223972846963051619115990310191104 (x281 36 32 x70 790236105))))
(assert (x388 x439))
(assert (x128 (- x324 x241)))
(assert (= (=> (and (= x396 x157) (= x75 x240)) x322) x243))
(assert (not (= (x281 36 32 x70 3943638230) 32)))
(assert (x378 x223 (- x371 x174)))
(assert (x378 x91 (- x454 x241)))
(assert (x96 x288 x241 x91 x454))
(assert (not (= (x281 36 32 x70 790236105) 3224796394)))
(assert (not (= 3567393941 (x281 36 32 x70 954831406))))
(assert (x96 x371 x223 x288 x303))
(assert (x96 x33 x325 x174 x324))
(assert (x128 (- x327 x33)))
(assert (not (= 100000 (x281 36 32 x70 790236105))))
(assert (= x7 (and (not x67) x316)))
(assert (x388 x202))
(assert (x128 (- x325 x174)))
(assert (not (= (x281 36 32 x70 954831406) 2064814097)))
(assert (x96 x327 x88 x80 x269))
(assert (not (= (x281 36 32 x70 954831406) 1738207182)))
(assert (not (= 500647658 (x281 36 32 x70 (x397 x311 224)))))
(assert (not (= (x281 36 32 x70 790236105) 2863377861)))
(assert (x128 (- x223 x80)))
(assert (x128 (- x327 x325)))
(assert (not (= (x281 36 32 x70 4105672269) 2127478272)))
(assert (not (= (x281 36 32 x70 4105672269) 4105672269)))
(assert (not (= (x281 36 32 x70 4105672269) 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= x450 (and x44 (not x171))))
(assert (x388 x156))
(assert (x96 x88 x327 x303 x288))
(assert (x388 x102))
(assert (x96 x325 x33 x324 x174))
(assert (not (= (x281 36 32 x70 954831406) 21304723245256853039595661774342629002073543191790936201937503064778531143680)))
(assert (not (= (x281 36 32 x70 790236105) 3366849169)))
(assert (x28 x454 x91 x241 x288))
(assert (x96 x80 x269 x91 x454))
(assert (not (= 86400 (x281 36 32 x70 4105672269))))
(assert (x378 x324 x174))
(assert (x388 x126))
(assert (x128 (- x269 x174)))
(assert (x110 x330))
(assert (not (= 822145385 (x281 36 32 x70 3943638230))))
(assert (x110 x265))
(assert (x28 x241 x288 x324 x174))
(assert (not (= (x281 36 32 x70 1356689113) 100000)))
(assert (x388 x207))
(assert (x96 x269 x80 x174 x324))
(assert (x58 x38 x244))
(assert (not (= (x281 36 32 x70 3943638230) 1439069736)))
(assert (x28 x288 x303 x327 x88))
(assert (x128 (- x325 x241)))
(assert (not (= (x281 36 32 x70 3943638230) 503383097)))
(assert (x388 x79))
(assert (x388 x405))
(assert (x378 x269 (- x80 x371)))
(assert (x96 x288 x241 x454 x91))
(assert (x388 x80))
(assert (x388 x315))
(assert (x388 x289))
(assert (x378 x88 (- x327 x241)))
(assert (x96 x288 x303 x174 x324))
(assert (x28 x223 x371 x241 x288))
(assert (not (= (x281 36 32 x70 4105672269) 910484757)))
(assert (x128 (- x303 x223)))
(assert (x96 x327 x88 x454 x91))
(assert (x128 (- x303 x454)))
(assert (x378 x91 (- x454 x303)))
(assert (x128 (- x324 x88)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 13)))
(assert (x128 (- x174 x303)))
(assert (not (= 1531409238 (x281 36 32 x70 (x397 x311 224)))))
(assert (x28 x327 x88 x33 x325))
(assert (x388 x54))
(assert (x28 x371 x223 x303 x288))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 922701707)))
(assert (= x356 (and x442 x242)))
(assert (x378 x288 (- x241 x324)))
(assert (x388 x288))
(assert (x96 x303 x288 x371 x223))
(assert (= x386 (=> (and (= x82 x241) (= x186 1)) x172)))
(assert (x456 x150))
(assert (x388 x278))
(assert (x28 x223 x371 x33 x325))
(assert (not (= 1062488491900878629424266116482631147622884293147 (x281 36 32 x70 3943638230))))
(assert (not (= (x281 36 32 x70 3943638230) 70508962019145425934951811999677760319478833095128838543097651878529435959296)))
(assert (x378 x288 (- x303 x88)))
(assert (x96 x327 x88 x91 x454))
(assert (not (= 822145385 (x281 36 32 x70 954831406))))
(assert (not (= (x281 36 32 x70 1356689113) 3224796394)))
(assert (x96 x454 x91 x371 x223))
(assert (x378 x241 (- x288 x91)))
(assert (=> (>= 10000 x332) (not (= x332 (x281 36 32 x70 790236105)))))
(assert (not (= (x281 36 32 x70 3943638230) (x281 36 32 x70 790236105))))
(assert (not (= (x281 36 32 x70 954831406) 826074471)))
(assert (x388 x23))
(assert (not (= 1738207182 (x281 36 32 x70 1356689113))))
(assert (= x140 (and x221 x7)))
(assert (x388 x139))
(assert (x378 x324 (- x174 x241)))
(assert (x128 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x128 (- x174 x33)))
(assert (x128 (- x88 x288)))
(assert (x96 x269 x80 x91 x454))
(assert (x378 x325 (- x33 x327)))
(assert (= x322 (=> (and (= x396 x22) (= x240 x173)) x237)))
(assert (x128 (- x288 x91)))
(assert (x96 x88 x327 x269 x80))
(assert (not (= 13 (x281 36 32 x70 1356689113))))
(assert (not (= 2580288415 (x281 36 32 x70 954831406))))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 1062488491900878629424266116482631147622884293147)))
(assert (=> (<= (x397 x311 224) 10000) (not (= (x397 x311 224) (x281 36 32 x70 1356689113)))))
(assert (not (= 2064814097 (x281 36 32 x70 (x397 x311 224)))))
(assert (not (= 3812870723 (x281 36 32 x70 954831406))))
(assert (x96 x80 x269 x324 x174))
(assert (x388 x463))
(assert (not (= 790236105 (x281 36 32 x70 1356689113))))
(assert (x96 x80 x269 x303 x288))
(assert (x388 x32))
(assert (x378 x454 (- x91 x80)))
(assert (x128 (- x174 x327)))
(assert (x388 x367))
(assert (x378 x91 (- x454 x80)))
(assert (not (= 3871629458 (x281 36 32 x70 (x397 x311 224)))))
(assert (x388 x261))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 1816029635)))
(assert (x388 x157))
(assert (x28 x303 x288 x324 x174))
(assert (x96 x324 x174 x80 x269))
(assert (not (= 16 (x281 36 32 x70 790236105))))
(assert (x388 x224))
(assert (x96 x241 x288 x88 x327))
(assert (x128 (- x325 x454)))
(assert (=> (<= x370 10000) (not (= x370 (x281 36 32 x70 1356689113)))))
(assert (x388 x129))
(assert (= x383 (=> (and (= x86 3051865383) (< x86 3224796394) (= x390 (> x76 x432)) (= x319 x76) (not (> 2580288415 x86)) (= x318 x367) (= x326 x275) (>= 1461501637330902918203684832716283019655932542975 x318) (= 15314092380000 x176) (= x358 x23) (= x177 (x306 13)) (= x276 x429) (>= x429 0) (= (+ 15314092380000 x275) x432) x390 (>= x318 0) (>= x197 0) (not (< 2 x343)) (>= 1461501637330902918203684832716283019655932542975 x429) (>= 1461501637330902918203684832716283019655932542975 x300) (= x207 x68) (= x39 x207) (= x463 (x306 16)) (= x300 x367) (= x116 (> x463 x319)) (= x358 0) (>= x68 0) (not (< x86 2863377861)) (= x122 (x306 15)) (<= x197 1461501637330902918203684832716283019655932542975) (not (= x86 3008386744)) (<= 0 x300) (= x114 (x306 14)) (not (< x86 3008386744)) (= x117 (x220 x370)) (<= x68 1461501637330902918203684832716283019655932542975) (> x117 0) (not (> 2127478272 x86))) (and (=> (and (and (= x90 0) (= x114 x227)) (not x116)) x296) (=> (and x116 (and (or (and (not x387) (and (= (x317 (x181 x33 x325)) x382) (= (x222 (- x177 x262)) x35) (< 0 x366) (= (x222 (- x177 x114)) x33) (= x366 (x222 (- x463 x122))) (= (x222 (- x319 x122)) x325) (= x35 x423) (= (x273 x382 x366) x262))) (and (and (= (x222 (- x463 x122)) x372) (= (x222 (- x114 x177)) x80) (> x372 0) (= x290 (x273 x420 x372)) (= (x222 (- x319 x122)) x269) (= (x305 (+ x177 x290)) x124) (= x420 (x317 (x181 x80 x269))) (= x124 x423)) x387)) (= (> x114 x177) x387))) x164)))))
(assert (not (= 596258137 (x281 36 32 x70 790236105))))
(assert (x96 x33 x325 x241 x288))
(assert (x378 x80 (- x269 x371)))
(assert (x378 x174 (- x324 x371)))
(assert (not (= (x281 36 32 x70 790236105) 3051865383)))
(assert (= x335 (and x158 (not x339))))
(assert (x128 (- x241 x454)))
(assert (x96 x223 x371 x174 x324))
(assert (x378 x33 (- x325 x327)))
(assert (not (= 2039265891 (x281 36 32 x70 1356689113))))
(assert (x96 x80 x269 x174 x324))
(assert (x388 x253))
(assert (x96 x371 x223 x33 x325))
(assert (x388 x85))
(assert (x128 (- x371 x80)))
(assert (x96 x324 x174 x241 x288))
(assert (not (= (x281 36 32 x70 790236105) 3890975986)))
(assert (not (= (x281 36 32 x70 1356689113) 3943638230)))
(assert (x388 x425))
(assert (x388 x196))
(assert (x378 x33 x325))
(assert (x388 x89))
(assert (x378 x91 (- x454 x33)))
(assert (x96 x174 x324 x303 x288))
(assert (= x246 (=> (and (= x37 (= 0 x163)) (or (and (not x37) (and (= x84 (ite x71 1 0)) (= x71 (= x18 x97)) (= x97 (x333 1461501637330902918203684832716283019655932542975 x150)))) (and (and (= x104 (x305 (+ x129 32))) (= x264 (x220 x299)) (= x129 x1) (= x119 (ite x219 1 0)) (= x104 x107) (= (x305 (+ x401 32)) x289) (not (> 4 x73)) (= x401 x234) (= x11 (x220 x211)) (= (x350 x1) x211) (= 4 x73) (not (< x100 2863377861)) (= (x412 x107) x458) (= x100 2863377861) (> x264 0) (= x102 x73) (= 4 x102) (= 77196514420459877940035116867124998943289115686762304616657918434777787006976 x147) (not (= x180 0)) (not (= x11 0)) (= x212 (x305 (+ 32 x289))) (= x84 x458) (= (not x57) x219) (<= x211 1461501637330902918203684832716283019655932542975) (= (= 0 x458) x57) (= (x305 (+ x104 4)) x234) (< x100 3871629458) (= x180 (x220 x299)) (= x458 x119)) x37))) x192)))
(assert (not (= 3871629458 (x281 36 32 x70 3943638230))))
(assert (not (= 110688705405039355050572217931781119515373813223972846963051619115990310191104 (x281 36 32 x70 954831406))))
(assert (x378 x174 (- x324 x325)))
(assert (x378 x454 (- x91 x371)))
(assert (x388 x39))
(assert (x388 x153))
(assert (not (= (x281 36 32 x70 3943638230) 1738207182)))
(assert (x96 x91 x454 x33 x325))
(assert (x388 x441))
(assert (x388 x366))
(assert (x96 x288 x303 x80 x269))
(assert (x128 (- x33 x303)))
(assert (x388 x123))
(assert (not (= 910484757 (x281 36 32 x70 3943638230))))
(assert (x388 x78))
(assert (x378 x371 (- x223 x454)))
(assert (x128 (- x454 x88)))
(assert (not (= 3008386744 (x281 36 32 x70 3943638230))))
(assert (x378 x241 (- x288 x269)))
(assert (x388 x461))
(assert (not (= (x281 36 32 x70 790236105) (x281 36 32 x70 1356689113))))
(assert (not (= 4105672269 (x281 36 32 x70 954831406))))
(assert (not (= (x281 36 32 x70 3943638230) 3051865383)))
(assert (x378 x174 (- x324 x269)))
(assert (x378 x454 (- x91 x288)))
(assert (x28 x269 x80 x454 x91))
(assert (x28 x33 x325 x371 x223))
(assert (=> (<= x374 10000) (not (= x374 (x281 36 32 x70 790236105)))))
(assert (not (= (x281 36 32 x70 1356689113) 2064814097)))
(assert (not (= (x281 36 32 x70 954831406) 500647658)))
(assert (not (= (x281 36 32 x70 4105672269) 599290589)))
(assert (x388 x247))
(assert (x96 x303 x288 x88 x327))
(assert (x128 (- x288 x33)))
(assert (=> (<= x374 10000) (not (= (x281 36 32 x70 1356689113) x374))))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 106320276355336348263208190817157392285036095892762275362566149969828045127680)))
(assert (not (= (x281 36 32 x70 790236105) 2580288415)))
(assert (x96 x269 x80 x454 x91))
(assert (x388 x211))
(assert (x28 x324 x174 x80 x269))
(assert (not (= (x281 36 32 x70 4105672269) 1862597803)))
(assert (x388 x393))
(assert (x128 (- x88 x91)))
(assert (not (= 1816029635 (x281 36 32 x70 1356689113))))
(assert (x378 x288 (- x303 x174)))
(assert (x378 x269 (- x80 x303)))
(assert (not (= 1062488491900878629424266116482631147622884293147 (x281 36 32 x70 954831406))))
(assert (x388 x83))
(assert (x96 x223 x371 x241 x288))
(assert (not (= (x281 36 32 x70 954831406) 3249860859)))
(assert (x388 x137))
(assert (not (= 1062488491900878629424266116482631147622884293147 (x281 36 32 x70 4105672269))))
(assert (x128 (- x269 x288)))
(assert (not (= (x281 36 32 x70 3943638230) 1862597803)))
(assert (x388 x395))
(assert (x128 (- x324 x325)))
(assert (x128 (- x371 x269)))
(assert (x110 x38))
(assert (= x198 (and (not x221) x7)))
(assert (not (= (x281 36 32 x70 954831406) 36576266130383907740409294828766280552204369950469466485900666250106563985408)))
(assert (x96 x241 x288 x91 x454))
(assert (x388 x385))
(assert (not (= 14 (x281 36 32 x70 1356689113))))
(assert (x96 x223 x371 x288 x241))
(assert (not (= 36 (x281 36 32 x70 (x397 x311 224)))))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 770885568)))
(assert (x388 x177))
(assert (x388 x276))
(assert (x96 x269 x80 x324 x174))
(assert (x388 x231))
(assert (x388 x268))
(assert (not (= 770885568 (x281 36 32 x70 790236105))))
(assert (x128 (- x371 x325)))
(assert (x378 x327 (- x88 x454)))
(assert (x388 x101))
(assert (= x230 (and (not x116) x199)))
(assert (x378 x288 (- x241 x325)))
(assert (x28 x80 x269 x324 x174))
(assert (x169 1461501637330902918203684832716283019655932542975))
(assert (x388 x119))
(assert (not (= 519173431 (x281 36 32 x70 3943638230))))
(assert (= (or x49 x121 x440) x301))
(assert (x128 (- x241 x91)))
(assert (x378 x327 (- x88 x91)))
(assert (not (= 822145385 (x281 36 32 x70 (x397 x311 224)))))
(assert (not (= (x281 36 32 x70 1356689113) 1871194811)))
(assert (= (and x145 x357) x442))
(assert (x388 x63))
(assert (not (= (x281 36 32 x70 790236105) 106320276355336348263208190817157392285036095892762275362566149969828045127680)))
(assert (x378 x454 (- x91 x269)))
(assert (x388 x193))
(assert (x378 x288 (- x241 x371)))
(assert (x128 (- x174 x80)))
(assert (x378 x91 (- x454 x88)))
(assert (= x295 (and x267 x298)))
(assert (=> (<= x374 10000) (not (= (x281 36 32 x70 3943638230) x374))))
(assert (x388 x42))
(assert (x128 (- x241 x33)))
(assert (x96 x324 x174 x288 x241))
(assert (x388 x8))
(assert (not (= 32 (x281 36 32 x70 (x397 x311 224)))))
(assert (x110 x160))
(assert (=> (>= 10000 x299) (not (= (x281 36 32 x70 790236105) x299))))
(assert (x96 x223 x371 x288 x303))
(assert (x128 (- x223 x288)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 1738207182)))
(assert (not (= 3943638230 (x281 36 32 x70 3943638230))))
(assert (x378 x288 (- x303 x223)))
(assert (not (= 1439069736 (x281 36 32 x70 790236105))))
(assert (x96 x269 x80 x303 x288))
(assert (not (= (x281 36 32 x70 3943638230) 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= x245 (and (not x45) x198)))
(assert (not (= (x281 36 32 x70 954831406) 86400)))
(assert (not (= 110688705405039355050572217931781119515373813223972846963051619115990310191104 (x281 36 32 x70 (x397 x311 224)))))
(assert (not (= 1531409238 (x281 36 32 x70 1356689113))))
(assert (x378 x288 (- x241 x174)))
(assert (x96 x241 x288 x223 x371))
(assert (not (= 519173431 (x281 36 32 x70 (x397 x311 224)))))
(assert (x378 x223 (- x371 x91)))
(assert (x388 x462))
(assert (not (= (x281 36 32 x70 4105672269) 3943638230)))
(assert (x96 x88 x327 x325 x33))
(assert (x378 x33 (- x325 x174)))
(assert (not (= 2127478272 (x281 36 32 x70 (x397 x311 224)))))
(assert (x128 (- x88 x325)))
(assert (x28 x80 x269 x303 x288))
(assert (x28 x325 x33 x454 x91))
(assert (not (= (x281 36 32 x70 954831406) 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x128 (- x88 x33)))
(assert (x96 x371 x223 x91 x454))
(assert (not (= (x281 36 32 x70 790236105) 3506505391)))
(assert (not (= 3871629458 (x281 36 32 x70 790236105))))
(assert (x28 x223 x371 x454 x91))
(assert (x128 (- x288 x88)))
(assert (x378 x91 (- x454 x269)))
(assert (x96 x327 x88 x288 x303))
(assert (not (= (x281 36 32 x70 790236105) 503383097)))
(assert (x28 x288 x241 x454 x91))
(assert (x388 x409))
(assert (x96 x269 x80 x88 x327))
(assert (= x205 (or x230 x15)))
(assert (x96 x288 x303 x88 x327))
(assert (x128 (- x91 x223)))
(assert (x128 (- x288 x324)))
(assert (x378 x303 (- x288 x174)))
(assert (x378 x324 (- x174 x269)))
(assert (x388 x430))
(assert (x378 x371 (- x223 x80)))
(assert (x28 x371 x223 x241 x288))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 686821956)))
(assert (x96 x91 x454 x269 x80))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 743225245)))
(assert (x378 x241 (- x288 x174)))
(assert (not (= 1862597803 (x281 36 32 x70 954831406))))
(assert (not (= 4105672269 (x281 36 32 x70 3943638230))))
(assert (x388 x241))
(assert (x96 x327 x88 x288 x241))
(assert (not (= (x281 36 32 x70 954831406) 3506505391)))
(assert (x388 x125))
(assert (x96 x241 x288 x371 x223))
(assert (x128 x88))
(assert (= x166 (or x258 x140 x301)))
(assert (not (= (x281 36 32 x70 3943638230) 500647658)))
(assert (x96 x80 x269 x241 x288))
(assert (x388 x433))
(assert (x96 x88 x327 x324 x174))
(assert (=> (<= x211 10000) (not (= x211 (x281 36 32 x70 790236105)))))
(assert (not (= 3002540418 (x281 36 32 x70 4105672269))))
(assert (x28 x288 x303 x371 x223))
(assert (=> (= (x281 36 32 x70 (x397 x311 224)) (x281 36 32 x70 3943638230)) (= (x397 x311 224) 3943638230)))
(assert (not (= 16 (x281 36 32 x70 (x397 x311 224)))))
(assert (x388 x458))
(assert (not (= 822145385 (x281 36 32 x70 4105672269))))
(assert (x388 x14))
(assert (x28 x91 x454 x303 x288))
(assert (x96 x324 x174 x325 x33))
(assert (not (= 36576266130383907740409294828766280552204369950469466485900666250106563985408 (x281 36 32 x70 4105672269))))
(assert (not (= (x281 36 32 x70 954831406) 2876725745)))
(assert (x96 x241 x288 x269 x80))
(assert (x128 (- x88 x454)))
(assert (x388 x25))
(assert (not (= (x281 36 32 x70 954831406) 3224796394)))
(assert (x96 x223 x371 x91 x454))
(assert (x110 x161))
(assert (x128 (- x325 x327)))
(assert (not (= (x281 36 32 x70 1356689113) 500647658)))
(assert (not (= 1531409238 (x281 36 32 x70 4105672269))))
(assert (x388 x86))
(assert (x388 x227))
(assert (x378 x327 (- x88 x80)))
(assert (x388 x286))
(assert (=> (>= 10000 x346) (not (= (x281 36 32 x70 3943638230) x346))))
(assert (x378 x223 (- x371 x288)))
(assert (not (= (x281 36 32 x70 4105672269) 3890975986)))
(assert (x388 x438))
(assert (= x368 (or x362 x183)))
(assert (x96 x325 x33 x327 x88))
(assert (x128 (- x325 x288)))
(assert (x378 x33 (- x325 x324)))
(assert (x378 x288 (- x241 x33)))
(assert (x96 x269 x80 x223 x371))
(assert (x388 x189))
(assert (x378 x174 (- x324 x288)))
(assert (x96 x174 x324 x269 x80))
(assert (not (= (x281 36 32 x70 954831406) 3051865383)))
(assert (x28 x288 x303 x33 x325))
(assert (x128 (- x80 x303)))
(assert (x96 x80 x269 x288 x241))
(assert (x128 (- x327 x91)))
(assert (x388 x444))
(assert (not (= 36 (x281 36 32 x70 954831406))))
(assert (x389 x374))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249216 (x281 36 32 x70 790236105))))
(assert (x96 x223 x371 x33 x325))
(assert (x388 x363))
(assert (x28 x454 x91 x327 x88))
(assert (x388 x165))
(assert (x378 x303 (- x288 x91)))
(assert (not (= (x281 36 32 x70 954831406) 3008386744)))
(assert (x96 x327 x88 x324 x174))
(assert (not (= (x281 36 32 x70 954831406) 1871194811)))
(assert (x96 x454 x91 x303 x288))
(assert (x388 x408))
(assert (x388 x327))
(assert (x378 x371 (- x223 x241)))
(assert (not (= (x281 36 32 x70 954831406) 743225245)))
(assert (x378 x80 (- x269 x324)))
(assert (x388 x69))
(assert (x378 x88 (- x327 x324)))
(assert (x28 x269 x80 x371 x223))
(assert (x128 (- x324 x371)))
(assert (x128 (- x371 x33)))
(assert (x388 x279))
(assert (x378 x327 (- x88 x288)))
(assert (x96 x371 x223 x288 x241))
(assert (x128 (- x324 x269)))
(assert (not (= 106320276355336348263208190817157392285036095892762275362566149969828045127680 (x281 36 32 x70 954831406))))
(assert (not (= (x281 36 32 x70 1356689113) 77196514420459877940035116867124998943289115686762304616657918434777787006976)))
(assert (x128 (- x269 x241)))
(assert (x28 x324 x174 x33 x325))
(assert (x378 x80 (- x269 x91)))
(assert (x388 x56))
(assert (x388 x361))
(assert (x388 x217))
(assert (x378 x454 (- x91 x88)))
(assert (=> (= (x281 36 32 x70 (x397 x311 224)) (x281 36 32 x70 790236105)) (= (x397 x311 224) 790236105)))
(assert (= x60 true))
(assert (not (= 2863377861 (x281 36 32 x70 3943638230))))
(assert (x110 x311))
(assert (x96 x327 x88 x269 x80))
(assert (x378 x241 (- x288 x325)))
(assert (x28 x327 x88 x324 x174))
(assert (x128 (- x174 x223)))
(assert (not (= 826074471 (x281 36 32 x70 790236105))))
(assert (x128 (- x241 x269)))
(assert (x128 (- x303 x80)))
(assert (x96 x174 x324 x241 x288))
(assert (x28 x288 x303 x454 x91))
(assert (not (= (x281 36 32 x70 790236105) 686821956)))
(assert (x128 (- x33 x324)))
(assert (x378 x327 (- x88 x303)))
(assert (not (= (x281 36 32 x70 (x397 x311 224)) 4105672269)))
(assert (x96 x454 x91 x80 x269))
(assert (not (= (x281 36 32 x70 4105672269) 32)))
(assert (not (= (x281 36 32 x70 3943638230) 922701707)))
(assert (not (= (x281 36 32 x70 4105672269) 2039265891)))
(assert (x256 x150))
(assert (x128 (- x324 x80)))
(assert (x28 x88 x327 x80 x269))
(assert (not (= (x281 36 32 x70 3943638230) 15)))
(assert (x388 x249))
(assert (x388 x351))
(assert (x378 x174 (- x324 x303)))
(assert (x388 x191))
(assert (x128 (- x174 x269)))
(assert (x128 (- x325 x223)))
(assert (x378 x324 (- x174 x288)))
(assert (x96 x325 x33 x91 x454))
(assert (x96 x223 x371 x303 x288))
(assert (x96 x223 x371 x269 x80))
(assert (=> (<= x370 10000) (not (= x370 (x281 36 32 x70 4105672269)))))
(assert (x388 x309))
(assert (not (= 1816029635 (x281 36 32 x70 3943638230))))
(assert (x96 x371 x223 x303 x288))
(assert (not (= 826074471 (x281 36 32 x70 (x397 x311 224)))))
(assert (= 0 (x352 x1)))
(assert (= (and (not x464) x418) x362))
(assert (not (= (x281 36 32 x70 954831406) 686821956)))
(assert (x388 x30))
(assert (not (= 26959946667150639794667015087019630673637144422540572481103610249216 (x281 36 32 x70 (x397 x311 224)))))
(assert (x96 x80 x269 x327 x88))
(assert (x128 (- x241 x80)))
(assert (x28 x91 x454 x80 x269))
(assert (x128 (- x324 x223)))
(assert (x388 x82))
(assert (x378 x269 (- x80 x327)))
(assert (not (= (x281 36 32 x70 1356689113) 1356689113)))
(assert (x128 (- x371 x241)))
(assert (x128 x213))
(assert (not (= 599290589 (x281 36 32 x70 790236105))))
(assert (x128 (- x303 x91)))
(assert (x256 1461501637330902918203684832716283019655932542976))
(assert (x378 x288 (- x241 x223)))
(assert (x110 x439))
(assert (x128 (- x327 x80)))
(assert (x128 (- x303 x174)))
(assert (x378 x371 (- x223 x325)))
(assert (x96 x324 x174 x327 x88))
(assert (x388 x290))
(assert (x28 x241 x288 x80 x269))
(assert (x96 x174 x324 x288 x241))
(assert (x378 x303 (- x288 x371)))
(assert (not (= (x281 36 32 x70 4105672269) 14)))
(assert (x388 x16))
(assert (not (= 3567393941 (x281 36 32 x70 3943638230))))
(assert (not (= 1356689113 (x281 36 32 x70 954831406))))
(assert (x128 (- x223 x454)))
(assert (x96 x33 x325 x327 x88))
(assert (x378 x325 (- x33 x454)))
(assert (x388 x334))
(assert (x96 x371 x223 x325 x33))
(assert (not (= 14 (x281 36 32 x70 (x397 x311 224)))))
(assert (x28 x371 x223 x80 x269))
(assert (not (= 596258137 (x281 36 32 x70 1356689113))))
(assert (not (= (x281 36 32 x70 4105672269) 3567393941)))
(assert (= x27 (=> (and (and (and (= x48 5000) (not (= x162 500647658)) (> 2127478272 x162) (> 743225245 x162) (= (not x407) x64) (not (= 503383097 x162)) (= x239 x451) (< x162 954831406) (= x364 x394) (= x103 5000) (< x162 596258137) (not (> 500647658 x162)) (> x278 0) (= x162 519173431) x64 (= x407 x451) (= x233 x394) (= x239 (not (= x193 0))) (= (x220 x370) x278)) (and (= 0 x209) (= x360 x326) (< x213 822145385) (= x136 x99) (= x309 x93) (= 790236105 x213) (= (x333 1461501637330902918203684832716283019655932542975 x150) x261) x403 (<= 0 x224) (<= x263 1461501637330902918203684832716283019655932542975) (<= x224 1461501637330902918203684832716283019655932542975) (= x252 (x220 x370)) (= x375 x99) (= x398 5000) (= x209 x79) (= x444 x349) (> x252 0) (not (> 500647658 x213)) (= (not (= x261 1062488491900878629424266116482631147622884293147)) x357) (= x349 x224) (not (> 743225245 x213)) (= (x317 (* 26959946667150639794667015087019630673637144422540572481103610249216 x213)) x311) (> 954831406 x213) (>= x18 0) (= x403 (> 5000 x364)) (= x375 x187) (>= 1461501637330902918203684832716283019655932542975 x18) (= x391 x18) (= x55 x309) (< x213 2127478272) (not (= x213 743225245)) (>= x263 0) (= x55 x329) (= (x281 36 32 x70 (x397 x311 224)) x120) (not (= 770885568 x213)))) (and (= x233 (x175 128)) (= (x175 160) x193) (= x34 (not (= 0 x83))))) (and (=> (and x357 (and (= x393 110688705405039355050572217931781119515373813223972846963051619115990310191104) (= (x281 36 32 x70 4105672269) x417) (= x242 (= x120 x417)))) (and (=> (and (and (= x22 (ite x242 1 0)) (= 264 x173)) x242) x237) (=> (and (not x242) (and (= x291 (x281 36 32 x70 790236105)) (= x53 21304723245256853039595661774342629002073543191790936201937503064778531143680) (= (= x120 x291) x67))) (and (=> (and x67 (and (= 332 x240) (= x396 (ite x67 1 0)))) x322) (=> (and (and (= x447 (x281 36 32 x70 3943638230)) (= 106320276355336348263208190817157392285036095892762275362566149969828045127680 x8) (= x221 (= x447 x120))) (not x67)) (and (=> (and (and (= x396 (ite x221 1 0)) (= 400 x240)) x221) x322) (=> (and (and (or (and (and (= x75 468) (= x157 (ite x45 1 0))) x45) (and (and (and (= x416 (= x304 x120)) (= x63 36576266130383907740409294828766280552204369950469466485900666250106563985408) (= (x281 36 32 x70 1356689113) x304)) (or (and (and (= 536 x75) (= x157 0) (= 0 x165)) (not x416)) (and x416 (and (= (ite x416 1 0) x157) (= 536 x75))))) (not x45))) (and (= x45 (= x120 x274)) (= x286 25742203781880459408941457317362166305709681742799472914177068605934923677696) (= x274 (x281 36 32 x70 954831406)))) (not x221)) x243))))))) (=> (and (and (= (ite x357 1 0) x163) (= x129 196)) (not x357)) x246)))))
(assert (x388 x190))
(assert (x128 (- x371 x91)))
(assert (x388 x331))
(assert (not (= (x281 36 32 x70 790236105) 1356689113)))
(assert (not (= (x281 36 32 x70 954831406) 2863377861)))
(assert (x28 x454 x91 x371 x223))
(assert (x96 x303 x288 x327 x88))
(assert (x128 (- x327 x288)))
(assert (x388 x372))
(assert (x378 x241 (- x288 x80)))
(assert (x96 x327 x88 x303 x288))
(assert (= (or x356 x166) x448))
(assert (x128 (- x91 x371)))
(assert (x378 x371 (- x223 x303)))
(assert (x388 x364))
(assert (not (= 106320276355336348263208190817157392285036095892762275362566149969828045127680 (x281 36 32 x70 4105672269))))
(assert (x28 x241 x288 x371 x223))
(assert (not (= 599290589 (x281 36 32 x70 954831406))))
(assert (x388 x312))
(assert (x96 x327 x88 x325 x33))
(assert (not (= (x281 36 32 x70 954831406) 910484757)))
(assert (x110 x19))
(assert (x128 (- x80 x241)))
(assert (x388 x6))
(assert (x388 x122))
(assert (x378 x269 (- x80 x174)))
(assert (x96 x327 x88 x174 x324))
(assert (x96 x91 x454 x80 x269))
(assert (x388 x429))
(assert (x128 (- x288 x223)))
(assert (x388 x373))
(assert (not (= 3943638230 (x281 36 32 x70 (x397 x311 224)))))
(assert (x388 x22))
(assert (and (x271 86400 x241) (x428 86400 x241) (= (x181 86400 x241) (* 86400 x241)) (x3 86400 x241) (x293 86400 x241) (and (= (* 86400 (- x241 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x181 86400 (- x241 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x181 (- 115792089237316195423570985008687907853269984665640564039457584007913129553536) (- x241 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 86400 (- x241 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x241 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x181 (- 115792089237316195423570985008687907853269984665640564039457584007913129553536) x241) (- (* 86400 x241) (* x241 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x98 86400 x241)))
(assert (x389 x70))
(assert (x128 (- x303 x33)))
(assert (x110 x244))
(assert (x128 (- x33 x327)))
(assert (x128 (- x454 x288)))
(assert (x378 x324 (- x174 x33)))
(assert (x28 x269 x80 x324 x174))
(assert (x388 x329))
(assert (not (= (x281 36 32 x70 954831406) 3943638230)))
(assert (x388 x31))
(assert (x96 x91 x454 x303 x288))
(assert (not (= 100000 (x281 36 32 x70 (x397 x311 224)))))
(assert (x96 x288 x303 x325 x33))
(assert (not (= (x281 36 32 x70 3943638230) 1461501637330902918203684832716283019655932542975)))
(assert (x378 x33 (- x325 x241)))
(assert (x388 x103))
(assert (x128 (- x223 x303)))
(assert (not (= (x281 36 32 x70 3943638230) 25742203781880459408941457317362166305709681742799472914177068605934923677696)))
(assert (x388 x138))
(assert (not (= 2039265891 (x281 36 32 x70 3943638230))))
(assert (not (= 3008386744 (x281 36 32 x70 1356689113))))
(assert (not (= 16 (x281 36 32 x70 3943638230))))
(assert (not (= (x281 36 32 x70 1356689113) 2966737888)))
(assert (x128 (- x371 x288)))
(assert (x388 x413))
(assert (x28 x33 x325 x327 x88))
(assert (x28 x269 x80 x303 x288))
(assert (not (= (x281 36 32 x70 3943638230) (x281 36 32 x70 954831406))))
(assert (x388 x194))
(assert (x378 x325 (- x33 x303)))
(assert (x388 x265))
(assert (=> (>= 10000 x370) (not (= x370 (x281 36 32 x70 3943638230)))))
(assert (not (= 1356689113 (x281 36 32 x70 3943638230))))
(assert (x378 x174 (- x324 x327)))
(assert (x128 (- x241 x324)))
(assert (not (= (x281 36 32 x70 3943638230) 770885568)))
(assert (not (= 790236105 (x281 36 32 x70 954831406))))
(assert (not (= 954831406 (x281 36 32 x70 (x397 x311 224)))))
(assert (x96 x303 x288 x91 x454))
(assert (x128 (- x33 x241)))
(assert (not (= (x281 36 32 x70 3943638230) 3996650231)))
(assert (= (or x450 x280) x74))
(assert (x58 x330 x19))
(assert (x388 x159))
(assert (x388 x346))
(assert (x388 x180))
(assert (x96 x454 x91 x223 x371))
(assert (not (= 2039265891 (x281 36 32 x70 954831406))))
(assert (x378 x325 (- x33 x241)))
(assert (x378 x223 (- x371 x33)))
(assert (not (= 743225245 (x281 36 32 x70 3943638230))))
(assert (not (= (x281 36 32 x70 790236105) 1984976886)))
(assert (not (= 1439069736 (x281 36 32 x70 4105672269))))
(assert (x378 x288 (- x303 x269)))
(assert (x378 x33 (- x325 x288)))
(assert (x96 x223 x371 x454 x91))
(assert (=> (>= 10000 x70) (not (= x70 (x281 36 32 x70 790236105)))))
(assert (not (= 13 (x281 36 32 x70 3943638230))))
(assert (not (= (x281 36 32 x70 3943638230) 3224796394)))
(assert (x96 x303 x288 x454 x91))
(assert (x388 x197))
(assert (x128 (- x324 x288)))
(assert (x378 x288 (- x241 x269)))
(assert (x388 x449))
(assert (x128 (- x269 x454)))
(assert (not (= 2127478272 (x281 36 32 x70 1356689113))))
(assert (not (= 1984976886 (x281 36 32 x70 (x397 x311 224)))))
(assert (x28 x325 x33 x303 x288))
(assert (x388 x436))
(assert (x388 x406))
(assert (not (= 743225245 (x281 36 32 x70 1356689113))))
(assert (x388 x343))
(assert (= (and x45 x198) x440))
(assert (x28 x91 x454 x33 x325))
(assert (x28 x174 x324 x80 x269))
(assert (x388 x109))
(assert (not (= (x281 36 32 x70 954831406) 2127478272)))
(assert (x388 x287))
(assert (x96 x288 x303 x324 x174))
(assert (not (= (x281 36 32 x70 790236105) 3943638230)))
(assert (x378 x241 (- x288 x33)))
(assert (x96 x91 x454 x223 x371))
(assert (x96 x371 x223 x80 x269))
(assert (not (= (x281 36 32 x70 790236105) 2876725745)))
(assert (x388 x223))
(assert (not (= (x281 36 32 x70 3943638230) 686821956)))
(assert (x388 x375))
(assert (not (= (x281 36 32 x70 4105672269) 3812870723)))
(assert (x96 x174 x324 x33 x325))
(assert (x128 (- x325 x88)))
(assert (x128 (- x327 x303)))
(assert (x128 (- x454 x371)))
(assert (= (and x245 (not x416)) x49))
(assert (x388 x457))
(assert (x388 x300))
(assert (=> (>= 10000 x332) (not (= (x281 36 32 x70 3943638230) x332))))
(assert (x128 x91))
(assert (x96 x324 x174 x288 x303))
(assert (x128 (- x454 x269)))
(assert (x96 x174 x324 x223 x371))
(assert (x28 x325 x33 x371 x223))
(assert (x128 (- x371 x303)))
(assert (= x183 (and x464 x418)))
(assert (x128 (- x454 x33)))
(assert (x128 (- x88 x324)))
(assert (not (= 3567393941 (x281 36 32 x70 790236105))))
(assert (x388 x55))
(assert (x388 x459))
(assert (x110 x366))
(assert (not (= (x281 36 32 x70 4105672269) 3008386744)))
(assert (x388 x136))
(assert (x388 x233))
(assert (x378 x241 x288))
(assert (x28 x288 x303 x324 x174))
(check-sat)
(exit)