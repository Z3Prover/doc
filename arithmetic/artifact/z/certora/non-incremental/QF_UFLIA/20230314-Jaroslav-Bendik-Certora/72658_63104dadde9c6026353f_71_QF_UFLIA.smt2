(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x182 () Int)
(declare-fun x128 () Int)
(declare-fun x133 () Bool)
(declare-fun x136 () Int)
(declare-fun x15 () Int)
(declare-fun x27 () Int)
(declare-fun x53 () Bool)
(declare-fun x51 () Int)
(declare-fun x90 () Int)
(declare-fun x120 () Int)
(declare-fun x169 () Int)
(declare-fun x155 () Int)
(declare-fun x42 () Int)
(declare-fun x80 (Int Int) Int)
(declare-fun x126 () Bool)
(declare-fun x64 () Int)
(declare-fun x109 () Bool)
(declare-fun x11 () Int)
(declare-fun x159 () Bool)
(declare-fun x32 () Int)
(declare-fun x124 () Int)
(declare-fun x108 () Int)
(declare-fun x59 () Int)
(declare-fun x91 () Bool)
(declare-fun x92 () Bool)
(declare-fun x95 () Bool)
(declare-fun x170 () Bool)
(declare-fun x25 () Bool)
(declare-fun x106 () Bool)
(declare-fun x38 () Int)
(declare-fun x174 () Int)
(declare-fun x183 () Int)
(declare-fun x35 () Int)
(declare-fun x125 () Bool)
(declare-fun x14 () Int)
(declare-fun x110 () Int)
(declare-fun x81 () Int)
(declare-fun x16 () Int)
(declare-fun x8 () Bool)
(declare-fun x181 () Bool)
(declare-fun x100 () Bool)
(declare-fun x135 () Int)
(declare-fun x150 (Int) Int)
(declare-fun x57 () Int)
(declare-fun x2 (Int Int) Int)
(declare-fun x146 () Int)
(declare-fun x113 () Bool)
(declare-fun x19 () Int)
(declare-fun x148 () Int)
(declare-fun x54 () Int)
(declare-fun x143 () Int)
(declare-fun x20 () Bool)
(declare-fun x165 () Int)
(declare-fun x44 () Int)
(declare-fun x56 () Bool)
(declare-fun x84 () Int)
(declare-fun x6 () Int)
(declare-fun x152 () Int)
(declare-fun x39 (Int) Int)
(declare-fun x144 () Bool)
(declare-fun x119 () Int)
(declare-fun x67 () Int)
(declare-fun x68 () Bool)
(declare-fun x4 () Bool)
(declare-fun x186 () Int)
(declare-fun x131 () Int)
(declare-fun x127 () Int)
(declare-fun x157 () Int)
(declare-fun x10 (Int) Int)
(declare-fun x179 () Int)
(declare-fun x43 () Int)
(declare-fun x88 () Int)
(declare-fun x28 () Int)
(declare-fun x78 (Int Int) Int)
(declare-fun x141 () Bool)
(declare-fun x154 () Int)
(declare-fun x13 () Int)
(declare-fun x166 () Int)
(declare-fun x48 () Int)
(declare-fun x139 () Bool)
(declare-fun x175 () Int)
(declare-fun x102 () Int)
(declare-fun x99 (Int Int) Int)
(declare-fun x171 () Bool)
(declare-fun x107 () Bool)
(declare-fun x82 (Int Int) Int)
(declare-fun x26 () Int)
(declare-fun x122 () Int)
(declare-fun x149 () Bool)
(declare-fun x112 () Bool)
(declare-fun x63 () Bool)
(declare-fun x137 () Bool)
(declare-fun x24 () Bool)
(declare-fun x160 () Bool)
(declare-fun x40 () Int)
(declare-fun x104 () Bool)
(declare-fun x49 () Bool)
(declare-fun x172 () Int)
(declare-fun x65 () Int)
(declare-fun x151 (Int Int) Int)
(declare-fun x173 () Int)
(declare-fun x101 () Int)
(declare-fun x167 () Bool)
(declare-fun x31 () Int)
(declare-fun x156 () Bool)
(declare-fun x62 () Bool)
(declare-fun x147 () Int)
(declare-fun x7 (Int Int) Int)
(declare-fun x184 () Int)
(declare-fun x185 () Int)
(declare-fun x97 () Int)
(declare-fun x41 () Int)
(declare-fun x52 () Int)
(declare-fun x176 () Bool)
(declare-fun x34 () Bool)
(declare-fun x114 () Int)
(declare-fun x89 () Int)
(declare-fun x138 () Int)
(declare-fun x22 () Bool)
(declare-fun x71 () Int)
(declare-fun x1 () Bool)
(declare-fun x69 (Int) Int)
(declare-fun x86 () Bool)
(declare-fun x162 () Int)
(declare-fun x134 () Int)
(declare-fun x60 () Bool)
(declare-fun x140 () Bool)
(declare-fun x5 () Bool)
(declare-fun x115 () Int)
(define-fun x105 ((x116 Int)) Int (ite (and (>= x116 0) (< x116 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x116 (- x116 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x130 ((x116 Int)) Int (ite (and (< x116 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x116)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116) x116))
(define-fun x177 ((x116 Int)) Int (ite (and (< x116 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x116 0)) x116 (ite (and (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x116) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116)) (- x116 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x116 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x116)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116) (x82 x116 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x45 ((x98 Int)) Bool (and (>= x98 0) (< x98 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x70 ((x98 Int)) Bool (and (<= 0 x98) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x98)))
(define-fun x36 ((x98 Int) (x61 Int)) Bool (= (x151 x98 x61) (x151 x61 x98)))
(define-fun x85 ((x98 Int) (x61 Int)) Bool (and (=> (and (< 0 x61) (> x98 0)) (> (x151 x98 x61) 0)) (=> (and (< 0 x98) (< x61 0)) (< (x151 x98 x61) 0)) (=> (and (> 0 x61) (> 0 x98)) (< 0 (x151 x98 x61))) (=> (and (< 0 x61) (> 0 x98)) (> 0 (x151 x98 x61)))))
(define-fun x87 ((x98 Int) (x61 Int)) Bool (=> (and (< 0 x61) (> x98 0)) (= (= (x7 (x177 (x151 x98 x61)) x98) x61) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x151 x98 x61)))))
(define-fun x9 ((x98 Int) (x61 Int)) Bool (=> (and (not (= x98 0)) (not (= x61 0))) (and (= (x7 (x151 x98 x61) x61) x98) (= (x7 (x151 x98 x61) x98) x61))))
(define-fun x33 ((x98 Int) (x61 Int)) Bool (=> (and (< 0 x61) (> x98 0)) (= (> (x151 x98 x61) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x61 (x7 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98)))))
(define-fun x37 ((x98 Int) (x61 Int)) Bool (and (= (x177 (x151 x98 x61)) (x177 (x151 (- x98 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x61 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x177 (x151 x98 x61)) (x177 (x151 x98 (- x61 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x177 (x151 x98 x61)) (x177 (x151 (- x98 115792089237316195423570985008687907853269984665640564039457584007913129639936) x61)))))
(define-fun x50 ((x98 Int) (x61 Int)) Bool (and (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x98) (< 0 x98)) (and (<= x61 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x61 0))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x151 x98 x61)) (<= x98 (x7 57896044618658097711785492504343953926634992332820282019728792003956564819967 x61)))) (=> (and (and (> x61 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x61)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x98) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x151 (- x98 115792089237316195423570985008687907853269984665640564039457584007913129639936) x61)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x98) (x7 57896044618658097711785492504343953926634992332820282019728792003956564819968 x61)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x98)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x61) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x61))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x151 (- x98 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x61 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x7 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x61)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x98)))) (=> (and (and (> x61 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x61)) (and (< 0 x98) (<= x98 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x151 x98 (- x61 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x61) (x7 57896044618658097711785492504343953926634992332820282019728792003956564819968 x98))))))
(define-fun x161 ((x98 Int) (x61 Int)) Bool (and (x50 x98 x61) (x9 x98 x61) (x85 x98 x61) (x36 x98 x61) (x37 x98 x61) (x87 x98 x61) (x33 x98 x61)))
(define-fun x163 ((x98 Int)) Bool (and (= 0 (x151 x98 0)) (= 0 (x151 0 x98))))
(define-fun x12 ((x98 Int)) Bool (and (= x98 (x151 x98 1)) (= (x151 1 x98) x98)))
(define-fun x66 ((x98 Int)) Bool (and (x163 x98) (x12 x98)))
(define-fun x117 ((x98 Int) (x61 Int)) Bool (=> (and (< 0 x61) (> x98 0)) (and (>= x98 (x7 x98 x61)) (<= 0 (x7 x98 x61)))))
(define-fun x74 ((x98 Int) (x61 Int)) Bool (=> (and (and (<= 1 x61) (< x61 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x98) (<= 0 x98))) (and (< (x7 x98 x61) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 (x7 x98 x61)))))
(define-fun x55 ((x98 Int) (x61 Int)) Bool (=> (and (< 1 x61) (< x61 x98)) (< (x7 x98 x61) x98)))
(define-fun x178 ((x98 Int) (x61 Int)) Bool (=> (and (< 0 x61) (> x98 0)) (= (< x98 x61) (= (x7 x98 x61) 0))))
(define-fun x79 ((x98 Int) (x61 Int)) Bool (=> (and (< 0 x98) (< 0 x61)) (and (>= x98 (x151 (x7 x98 x61) x61)) (> (x151 (x7 x98 x61) x61) (- x98 x61)))))
(define-fun x29 ((x98 Int) (x61 Int)) Bool (and (x55 x98 x61) (x74 x98 x61) (x79 x98 x61) (x117 x98 x61) (x178 x98 x61)))
(define-fun x72 ((x98 Int)) Bool (= (x7 0 x98) 0))
(define-fun x180 ((x98 Int)) Bool (= (x7 x98 1) x98))
(define-fun x118 ((x98 Int)) Bool (=> (not (= 0 x98)) (= (x7 x98 x98) 1)))
(define-fun x23 ((x98 Int)) Bool (and (x180 x98) (x118 x98) (x72 x98)))
(define-fun x121 ((x98 Int)) Bool (and (= (x78 x98 115792089237316195423570985008687907853269984665640564039457584007913129639935) x98) (= (x78 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98) x98)))
(define-fun x75 ((x98 Int)) Bool (and (= (x78 0 x98) 0) (= 0 (x78 x98 0))))
(define-fun x18 ((x98 Int)) Bool (= (x78 x98 x98) x98))
(define-fun x164 ((x98 Int)) Bool (and (x75 x98) (x121 x98) (x18 x98)))
(define-fun x3 ((x98 Int) (x61 Int)) Bool (= (x78 x61 x98) (x78 x98 x61)))
(define-fun x83 ((x98 Int) (x61 Int)) Bool (and (=> (>= x98 0) (<= (x78 x98 x61) x98)) (=> (>= x61 0) (<= (x78 x98 x61) x61)) (>= (x78 x98 x61) 0)))
(define-fun x47 ((x98 Int) (x61 Int)) Bool (and (x3 x98 x61) (x83 x98 x61)))
(define-fun x73 ((x98 Int)) Bool (and (= (x80 x98 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98)) (= (x80 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98))))
(define-fun x158 ((x98 Int)) Bool (and (= (x80 x98 0) x98) (= x98 (x80 0 x98))))
(define-fun x17 ((x98 Int)) Bool (= 0 (x80 x98 x98)))
(define-fun x111 ((x98 Int)) Bool (and (x158 x98) (x73 x98) (x17 x98)))
(define-fun x168 ((x98 Int) (x61 Int)) Bool (= (x80 x61 x98) (x80 x98 x61)))
(define-fun x21 ((x98 Int) (x61 Int)) Bool (and (<= (x80 x98 x61) (+ x61 x98)) (<= 0 (x80 x98 x61))))
(define-fun x103 ((x98 Int) (x61 Int)) Bool (and (x168 x98 x61) (x21 x98 x61)))
(define-fun x132 ((x98 Int)) Bool (and (= (x2 x98 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2 115792089237316195423570985008687907853269984665640564039457584007913129639935 x98))))
(define-fun x30 ((x98 Int)) Bool (and (= x98 (x2 0 x98)) (= x98 (x2 x98 0))))
(define-fun x142 ((x98 Int)) Bool (= x98 (x2 x98 x98)))
(define-fun x93 ((x98 Int)) Bool (and (x132 x98) (x142 x98) (x30 x98)))
(define-fun x46 ((x98 Int) (x61 Int)) Bool (= (x2 x61 x98) (x2 x98 x61)))
(define-fun x129 ((x98 Int) (x61 Int)) Bool (and (=> (<= 0 x61) (<= x61 (x2 x98 x61))) (=> (>= x98 0) (>= (x2 x98 x61) x98)) (>= (+ x98 x61) (x2 x98 x61))))
(define-fun x94 ((x98 Int) (x61 Int)) Bool (and (x46 x98 x61) (x129 x98 x61)))
(define-fun x153 ((x98 Int) (x61 Int) (x58 Int) (x123 Int)) Bool (=> (and (>= x61 0) (>= x98 0) (>= x58 x98) (<= x61 x123)) (>= (x151 x58 x123) (x151 x98 x61))))
(define-fun x77 ((x98 Int) (x61 Int) (x58 Int) (x123 Int)) Bool (=> (= x98 x58) (= (x151 x98 (- x61 x123)) (- (x151 x98 x61) (x151 x58 x123)))))
(assert (x77 x174 x97 x6 x155))
(assert (x70 x186))
(assert (x77 x174 x97 x28 x114))
(assert (x153 x97 x174 x6 x13))
(assert (x153 x59 x6 x97 x174))
(assert (x161 x97 (- x174 x157)))
(assert (x153 x110 x6 x166 x138))
(assert (x66 (- x155 x174)))
(assert (x161 x155 (- x157 x138)))
(assert (x153 x13 x135 x166 x138))
(assert (x66 (- x59 x174)))
(assert (x70 x166))
(assert (x153 x174 x97 x6 x59))
(assert (x153 x174 x97 x127 x31))
(assert (x66 x135))
(assert (x66 (- x166 x135)))
(assert (x29 x40 x182))
(assert (x161 x166 (- x138 x155)))
(assert (x77 x155 x6 x97 x174))
(assert (x161 x138 (- x166 x157)))
(assert (x66 (- x27 x97)))
(assert (x66 (- x97 x157)))
(assert (x66 (- x48 x166)))
(assert (= x126 (=> (and (= x5 false) (= x57 x128)) x109)))
(assert (x70 x184))
(assert (x153 x88 x27 x97 x174))
(assert (x77 x166 x138 x6 x13))
(assert (x66 (- x174 x88)))
(assert (x153 x97 x174 x127 x31))
(assert (x77 x110 x90 x97 x174))
(assert (x66 (- (x2 x146 x35) x174)))
(assert (x161 x6 (- x127 x166)))
(assert (x77 x174 x97 x166 x138))
(assert (x66 (- x27 x166)))
(assert (x66 (- x19 x166)))
(assert (x153 x110 x90 x97 x174))
(assert (x77 x174 x97 x19 x59))
(assert (x77 x166 x138 x59 x19))
(assert (x77 x166 x138 x48 (x2 x146 x35)))
(assert (x77 x174 x97 x13 x6))
(assert (x70 x128))
(assert (x164 x102))
(assert (x66 (- x166 x127)))
(assert (x161 x97 (- x174 x27)))
(assert (x70 x146))
(assert (x153 x166 x138 x6 x59))
(assert (x70 x122))
(assert (x66 (- x166 x48)))
(assert (x77 x88 x27 x166 x138))
(assert (x77 x138 x166 x155 x157))
(assert (x161 x138 (- x166 x48)))
(assert (x161 x166 (- x138 x174)))
(assert (x70 x131))
(assert (x153 x90 x110 x97 x174))
(assert (= x139 (=> (= true x5) x109)))
(assert (x77 x166 x138 x135 x13))
(assert (x66 (- x97 (x2 x146 x35))))
(assert (x161 x157 (- x155 x174)))
(assert (x161 x13 (- x6 x97)))
(assert (x77 x19 x59 x138 x166))
(assert (x66 (- x31 x97)))
(assert (x66 (- x90 x138)))
(assert (x161 x174 (- x97 x127)))
(assert (x153 x174 x97 x166 x138))
(assert (x77 x174 x97 x27 x88))
(assert (x66 (- x97 x114)))
(assert (x161 x138 (- x166 x174)))
(assert (x66 (- x114 x138)))
(assert (x77 x114 x28 x97 x174))
(assert (x153 x174 x97 x27 x88))
(assert (x77 x13 x6 x166 x138))
(assert (x161 x155 x157))
(assert (x77 x59 x19 x97 x174))
(assert (x77 x138 x166 x27 x6))
(assert (x77 x166 x138 x27 x6))
(assert (x77 x28 x114 x174 x97))
(assert (x153 x97 x174 x6 x127))
(assert (x70 x48))
(assert (x153 x138 x166 x6 x110))
(assert (x66 (- x166 x114)))
(assert (x161 x110 (- x90 x166)))
(assert (= x107 (or x24 x56)))
(assert (x70 x147))
(assert (x77 x97 x174 x6 x59))
(assert (x153 x27 x6 x97 x174))
(assert (x70 x157))
(assert (x77 x138 x166 x6 x27))
(assert (x161 x48 (- (x2 x146 x35) x138)))
(assert (x77 x27 x88 x97 x174))
(assert (x153 x135 x13 x97 x174))
(assert (x77 x174 x97 x138 x166))
(assert (x77 x135 x13 x166 x138))
(assert (x70 x172))
(assert (x77 x166 x138 x31 x127))
(assert (x161 x166 (- x138 x27)))
(assert (not x22))
(assert (x66 (- x138 x155)))
(assert (x161 x59 (- x6 x138)))
(assert (= x144 (and x176 x91)))
(assert (x77 x166 x138 x127 x6))
(assert (x77 x19 x59 x166 x138))
(assert (x153 x97 x174 x6 x155))
(assert (x77 x166 x138 x155 x157))
(assert (x161 x127 x31))
(assert (x77 x166 x138 x59 x6))
(assert (x161 x127 (- x31 x174)))
(assert (x161 x27 (- x88 x166)))
(assert (and (= 81 (x151 9 9)) (= (x151 27 3) 81) (= 27 (x151 9 3)) (= (x151 3 3) 9)))
(assert (x77 x138 x166 x6 x110))
(assert (x77 x59 x6 x138 x166))
(assert (x161 x127 (- x6 x166)))
(assert (x70 x35))
(assert (x77 x138 x166 x59 x19))
(assert (x66 (- x110 x174)))
(assert (x161 x166 (- x138 x110)))
(assert (x70 x59))
(assert (x161 x59 (- x6 x174)))
(assert (x66 (- x135 x166)))
(assert (x66 (- x138 x157)))
(assert (x66 (- x127 x174)))
(assert (x153 x6 x27 x97 x174))
(assert (x153 x6 x59 x166 x138))
(assert (x77 x157 x155 x166 x138))
(assert (x153 x138 x166 (x2 x146 x35) x48))
(assert (x66 (- x138 x48)))
(assert (x161 x31 (- x127 x174)))
(assert (x77 x135 x13 x138 x166))
(assert (x70 x120))
(assert (x66 x157))
(assert (x77 x166 x138 x97 x174))
(assert (x77 x174 x97 x6 x59))
(assert (x161 x174 (- x97 x13)))
(assert (x161 x110 (- x6 x166)))
(assert (x77 x174 x97 x48 (x2 x146 x35)))
(assert (x153 x13 x6 x97 x174))
(assert (x77 x138 x166 x90 x110))
(assert (x77 x6 x13 x174 x97))
(assert (x77 x27 x88 x174 x97))
(assert (x161 x59 (- x19 x97)))
(assert (x70 x108))
(assert (x66 x27))
(assert (x66 (- x48 x138)))
(assert (x66 (- x97 x127)))
(assert (x66 (- x138 x59)))
(assert (x66 (- x157 x138)))
(assert (x66 (- x97 x28)))
(assert (x153 x138 x166 x155 x157))
(assert (x77 x13 x6 x174 x97))
(assert (x153 x127 x6 x97 x174))
(assert (x161 x27 (- x88 x174)))
(assert (x153 x97 x174 x13 x135))
(assert (x77 x6 x110 x138 x166))
(assert (x153 x48 (x2 x146 x35) x166 x138))
(assert (x153 x166 x138 x27 x88))
(assert (x77 x127 x6 x97 x174))
(assert (x70 x114))
(assert (x164 x182))
(assert (= (and x5 x133) x104))
(assert (x77 x13 x135 x166 x138))
(assert (x77 x157 x155 x97 x174))
(assert (x66 (- x138 x90)))
(assert (x161 x174 (- x97 x88)))
(assert (x153 x166 x138 x127 x31))
(assert (x70 x175))
(assert (x161 x138 (- x166 x110)))
(assert (x77 x6 x27 x97 x174))
(assert (x70 x26))
(assert (x77 x97 x174 x6 x110))
(assert (x153 (x2 x146 x35) x48 x97 x174))
(assert (x153 x48 (x2 x146 x35) x97 x174))
(assert (x77 x138 x166 x59 x6))
(assert (x66 (- x138 x127)))
(assert (x66 (- x166 (x2 x146 x35))))
(assert (x77 x114 x28 x138 x166))
(assert (x161 x90 (- x110 x138)))
(assert (x77 x6 x155 x97 x174))
(assert (x93 x146))
(assert (x66 (- x155 x97)))
(assert (x153 x174 x97 x6 x155))
(assert (x77 x6 x155 x138 x166))
(assert (x70 x110))
(assert (x153 x59 x19 x97 x174))
(assert (x161 x174 (- x97 x48)))
(assert (x66 (- x174 x6)))
(assert (x66 (- x6 x174)))
(assert (x77 x110 x6 x97 x174))
(assert (x70 x152))
(assert (x77 x155 x6 x166 x138))
(assert (x153 x28 x114 x97 x174))
(assert (x161 x28 (- x114 x166)))
(assert (x77 x166 x138 x13 x135))
(assert (x77 x19 x59 x174 x97))
(assert (x66 (- x27 x174)))
(assert (x66 (- x174 x127)))
(assert (x70 x51))
(assert (x70 x19))
(assert (x77 x155 x157 x166 x138))
(assert (x161 x166 (- x138 x135)))
(assert (x161 x138 (- x166 x155)))
(assert (x77 x166 x138 x6 x59))
(assert (x66 (- x157 x174)))
(assert (x77 x166 x138 x127 x31))
(assert (x94 x146 x35))
(assert (x161 x59 (- x19 x174)))
(assert (x161 x97 (- x174 x19)))
(assert (x161 x155 (- x6 x174)))
(assert (x66 (- x138 x88)))
(assert (x66 (- x138 x97)))
(assert (x77 x27 x6 x166 x138))
(assert (x77 x155 x157 x97 x174))
(assert (x70 x173))
(assert (x66 (- x97 x90)))
(assert (x77 x27 x6 x97 x174))
(assert (x77 x13 x135 x174 x97))
(assert (x70 x43))
(assert (x70 x154))
(assert (= x149 (and x133 (not x5))))
(assert (= x109 (=> (or (not x5) x5) x171)))
(assert (x161 x110 (- x6 x97)))
(assert (x70 x136))
(assert (x77 x97 x174 x27 x6))
(assert (x66 (- x155 x166)))
(assert (x161 x110 x90))
(assert (x23 x182))
(assert (= x53 true))
(assert (x77 x59 x19 x166 x138))
(assert (x66 (- x97 x166)))
(assert (x77 x174 x97 x6 x27))
(assert (x161 x88 (- x27 x138)))
(assert (x23 x40))
(assert (x161 x97 (- x174 x127)))
(assert (x153 x27 x88 x166 x138))
(assert (x153 x174 x97 x6 x13))
(assert (x66 x155))
(assert (x66 (- x97 x27)))
(assert (x161 x6 (- x155 x138)))
(assert (x161 x166 (- x138 x59)))
(assert (x161 x127 (- x6 x174)))
(assert (x66 (- x114 x166)))
(assert (x161 x135 (- x13 x166)))
(assert (= x92 (and x8 x1)))
(assert (x77 x6 x27 x174 x97))
(assert (x153 x138 x166 x27 x88))
(assert (x153 x174 x97 (x2 x146 x35) x48))
(assert (x161 x31 (- x127 x138)))
(assert (x161 x174 (- x97 x28)))
(assert (x66 (- x138 x13)))
(assert (x153 x110 x90 x166 x138))
(assert (x153 x174 x97 x155 x157))
(assert (x66 (- (x2 x146 x35) x138)))
(assert (x77 x48 (x2 x146 x35) x174 x97))
(assert (x153 x13 x6 x166 x138))
(assert (x153 x166 x138 x59 x19))
(assert (x70 x28))
(assert (x70 x42))
(assert (x66 (- x174 x59)))
(assert (x77 x97 x174 x166 x138))
(assert (x66 (- x90 x166)))
(assert (x161 x138 (- x166 x88)))
(assert (x77 x6 x59 x97 x174))
(assert (x153 x6 x155 x97 x174))
(assert (x66 (- x13 x97)))
(assert (x77 x155 x6 x138 x166))
(assert (x161 x174 (- x97 x31)))
(assert (x153 x174 x97 x6 x127))
(assert (x161 x166 (- x138 x97)))
(assert (x161 x31 (- x127 x166)))
(assert (x77 x174 x97 x6 x110))
(assert (x161 x27 x88))
(assert (x77 x97 x174 x6 x13))
(assert (x77 x110 x90 x138 x166))
(assert (x161 x166 (- x138 x31)))
(assert (x66 (- x97 x31)))
(assert (x153 x6 x13 x97 x174))
(assert (x77 x97 x174 x6 x127))
(assert (x77 x97 x174 x28 x114))
(assert (x161 x174 (- x97 x59)))
(assert (x161 x166 (- x138 x48)))
(assert (x161 x138 (- x166 x90)))
(assert (x161 (x2 x146 x35) x48))
(assert (x70 x101))
(assert (x153 x166 x138 x6 x13))
(assert (= (and x86 x170) x24))
(assert (x161 x6 x13))
(assert (x77 x97 x174 x135 x13))
(assert (x77 x138 x166 x6 x127))
(assert (x153 x138 x166 x28 x114))
(assert (x161 x138 (- x166 (x2 x146 x35))))
(assert (x161 x6 (- x127 x174)))
(assert (x77 x97 x174 x27 x88))
(assert (x77 x97 x174 x127 x31))
(assert (x77 x88 x27 x174 x97))
(assert (x153 x166 x138 x6 x110))
(assert (x77 x174 x97 (x2 x146 x35) x48))
(assert (x66 (x2 x146 x35)))
(assert (x77 x110 x6 x174 x97))
(assert (x66 (- x28 x138)))
(assert (x77 x174 x97 x90 x110))
(assert (x66 (- x97 x135)))
(assert (x161 x174 (- x97 x155)))
(assert (x161 x28 x114))
(assert (x77 x19 x59 x97 x174))
(assert (x77 x28 x114 x166 x138))
(assert (x77 x13 x135 x97 x174))
(assert (x66 (- x114 x174)))
(assert (x66 (- x166 x88)))
(assert (x77 x27 x88 x166 x138))
(assert (x153 x19 x59 x97 x174))
(assert (x77 x174 x97 x31 x127))
(assert (x66 (- x13 x174)))
(assert (x161 x127 (- x6 x138)))
(assert (x77 x166 x138 x6 x110))
(assert (x66 (- x13 x138)))
(assert (x161 x6 x155))
(assert (x66 (- x135 x138)))
(assert (x77 x127 x31 x97 x174))
(assert (x77 x166 x138 x6 x155))
(assert (x77 x6 x59 x174 x97))
(assert (x77 x13 x135 x138 x166))
(assert (x66 (- x127 x97)))
(assert (x66 (- x138 x19)))
(assert (x77 x97 x174 (x2 x146 x35) x48))
(assert (x66 x28))
(assert (x161 x6 (- x27 x174)))
(assert (x153 x13 x135 x97 x174))
(assert (x153 x97 x174 (x2 x146 x35) x48))
(assert (x66 (- x97 x138)))
(assert (x66 (- x59 x166)))
(assert (x153 x166 x138 x6 x27))
(assert (x161 x28 (- x114 x174)))
(assert (x161 (x2 x146 x35) (- x48 x166)))
(assert (x161 x6 x110))
(assert (x153 x114 x28 x166 x138))
(assert (x153 x155 x6 x166 x138))
(assert (x70 x40))
(assert (and (and (= (- (* 3 (- x6 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x6 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x151 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x6 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x6 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x151 3 (- x6 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x151 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x6) (- (* 3 x6) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6)))) (x33 3 x6) (x50 3 x6) (x87 3 x6) (x37 3 x6) (= (x151 3 x6) (* 3 x6)) (x9 3 x6)))
(assert (x77 x174 x97 x59 x19))
(assert (x66 (- x31 x166)))
(assert (x77 x27 x6 x174 x97))
(assert (x161 x127 (- x31 x166)))
(assert (x153 x166 x138 (x2 x146 x35) x48))
(assert (x161 x48 (- (x2 x146 x35) x97)))
(assert (x77 x6 x27 x138 x166))
(assert (x66 (- x138 (x2 x146 x35))))
(assert (x66 x59))
(assert (x161 x166 (- x138 x90)))
(assert (x77 x6 x127 x166 x138))
(assert (x23 x131))
(assert (x66 (- x110 x166)))
(assert (x66 (- x97 x88)))
(assert (x66 (- x174 x157)))
(assert (x77 x97 x174 x59 x19))
(assert (x161 x110 (- x90 x138)))
(assert (x77 x6 x13 x138 x166))
(assert (x66 (- x166 x28)))
(assert (x153 x166 x138 x97 x174))
(assert (x161 x97 (- x174 x114)))
(assert (x153 x110 x6 x97 x174))
(assert (x66 (- x166 x19)))
(assert (x161 x135 (- x13 x97)))
(assert (x161 x166 (- x138 x28)))
(assert (x77 x174 x97 x155 x6))
(assert (x153 x166 x138 x6 x155))
(assert (x161 x6 (- x127 x138)))
(assert (x153 x31 x127 x166 x138))
(assert (x77 x97 x174 x48 (x2 x146 x35)))
(assert (x161 x166 (- x138 x13)))
(assert (x161 x135 (- x13 x138)))
(assert (x70 x54))
(assert (x70 x11))
(assert (x161 x6 x127))
(assert (x153 x6 x110 x97 x174))
(assert (x161 x97 (- x174 x110)))
(assert (x66 (- x166 x97)))
(assert (x66 x174))
(assert (x161 x6 (- x27 x166)))
(assert (x66 x114))
(assert (x153 x166 x138 x110 x90))
(assert (x29 x84 x134))
(assert (x77 x13 x6 x138 x166))
(assert (x161 x174 (- x97 x110)))
(assert (x153 x97 x174 x28 x114))
(assert (x77 x97 x174 x6 x27))
(assert (x161 (x2 x146 x35) (- x48 x97)))
(assert (x77 x97 x174 x110 x6))
(assert (x77 x157 x155 x174 x97))
(assert (x66 (- x138 x174)))
(assert (x161 x174 (- x97 x27)))
(assert (x161 x138 (- x166 x135)))
(assert (x161 x138 (- x166 x27)))
(assert (x153 x27 x88 x97 x174))
(assert (x77 x6 x110 x97 x174))
(assert (x66 (- x166 x27)))
(assert (x66 (- x90 x97)))
(assert (x161 x157 (- x155 x166)))
(assert (x66 (- x28 x97)))
(assert (x153 x97 x174 x110 x90))
(assert (x70 x134))
(assert (x161 x174 (- x97 x166)))
(assert (x70 x102))
(assert (x70 x64))
(assert (x161 x155 (- x6 x166)))
(assert (x66 (- x174 x19)))
(assert (x77 x166 x138 x174 x97))
(assert (x161 x6 (- x59 x166)))
(assert (x70 x155))
(assert (x77 x138 x166 x127 x31))
(assert (x66 (- x166 x13)))
(assert (x66 (- x166 x90)))
(assert (x77 x6 x127 x138 x166))
(assert (x161 x174 (- x97 x90)))
(assert (x77 x97 x174 x110 x90))
(assert (x66 (- x27 x138)))
(assert (x77 x138 x166 x6 x155))
(assert (x70 x119))
(assert (x77 x48 (x2 x146 x35) x97 x174))
(assert (x161 x138 (- x166 x127)))
(assert (x66 (- x19 x174)))
(assert (x77 x97 x174 x13 x135))
(assert (x161 x97 (- x174 x6)))
(assert (x77 x138 x166 x155 x6))
(assert (x153 x138 x166 x59 x19))
(assert (x66 (- (x2 x146 x35) x166)))
(assert (= (and (not x1) x8) x125))
(assert (x161 x127 (- x31 x97)))
(assert (x77 x6 x127 x97 x174))
(assert (x70 x71))
(assert (x77 x6 x127 x174 x97))
(assert (x161 x157 (- x155 x138)))
(assert (x161 x138 (- x166 x13)))
(assert (x161 x6 (- x59 x174)))
(assert (x77 x157 x155 x138 x166))
(assert (x66 (- x138 x6)))
(assert (= x20 (or (and (not x91) x176) x125)))
(assert (x77 x138 x166 x6 x59))
(assert (x161 x6 (- x110 x166)))
(assert (x66 (- x127 x166)))
(assert (x77 x97 x174 x59 x6))
(assert (x161 x48 (- (x2 x146 x35) x174)))
(assert (x161 x13 (- x135 x138)))
(assert (x66 (- x59 x138)))
(assert (= (or x167 x20) x133))
(assert (x161 x114 (- x28 x138)))
(assert (x161 x90 (- x110 x97)))
(assert (x66 x19))
(assert (x66 (- x166 x174)))
(assert (x66 (- x166 x155)))
(assert (x66 (- x135 x97)))
(assert (x66 x166))
(assert (x66 (- x166 x59)))
(assert (x77 x138 x166 x114 x28))
(assert (x161 x13 (- x135 x166)))
(assert (x161 x13 (- x6 x138)))
(assert (x161 x157 (- x155 x97)))
(assert (x77 x174 x97 x27 x6))
(assert (x70 x143))
(assert (x161 x138 (- x166 x59)))
(assert (x66 (- x88 x166)))
(assert (x161 x88 (- x27 x174)))
(assert (x161 x174 (- x97 x135)))
(assert (x161 x6 (- x59 x97)))
(assert (x77 x166 x138 x90 x110))
(assert (x66 3))
(assert (x77 x166 x138 x155 x6))
(assert (x161 x138 (- x166 x19)))
(assert (x161 x19 (- x59 x166)))
(assert (x161 x6 x27))
(assert (x153 x155 x6 x97 x174))
(assert (x77 x166 x138 x88 x27))
(assert (x161 x174 (- x97 x114)))
(assert (x77 x174 x97 x155 x157))
(assert (x77 x166 x138 x19 x59))
(assert (x66 (- x174 x166)))
(assert (x66 (- x110 x97)))
(assert (x66 (- x174 x28)))
(assert (x161 x110 (- x90 x97)))
(assert (x66 x88))
(assert (x161 x155 (- x157 x166)))
(assert (= (or x104 x149) x86))
(assert (x161 x6 (- x110 x138)))
(assert (x153 x6 x59 x97 x174))
(assert (x66 (- x88 x97)))
(assert (x161 x135 (- x13 x174)))
(assert (x77 x135 x13 x174 x97))
(assert (x161 x28 (- x114 x138)))
(assert (x66 x6))
(assert (x66 (- x166 x110)))
(assert (x153 x138 x166 x6 x13))
(assert (x70 x127))
(assert (x161 x6 (- x127 x97)))
(assert (x66 (- x97 x13)))
(assert (x66 x138))
(assert (x77 x155 x157 x174 x97))
(assert (x77 x174 x97 x157 x155))
(assert (x153 x138 x166 x6 x59))
(assert (x153 x138 x166 x13 x135))
(assert (x70 x13))
(assert (x161 x97 (- x174 x138)))
(assert (x161 x97 (- x174 x166)))
(assert (x70 x32))
(assert (x153 x166 x138 x13 x135))
(assert (x153 x97 x174 x6 x27))
(assert (x70 x182))
(assert (x77 x174 x97 x6 x127))
(assert (x161 x13 (- x6 x174)))
(assert (x161 x6 (- x155 x174)))
(assert (x23 x15))
(assert (x66 (- x6 x138)))
(assert (x77 x174 x97 x114 x28))
(assert (x161 (x2 x146 x35) (- x48 x174)))
(assert (x29 x44 x15))
(assert (x70 x162))
(assert (x77 x27 x88 x138 x166))
(assert (x161 x13 (- x135 x97)))
(assert (x77 x97 x174 x31 x127))
(assert (x77 x97 x174 x88 x27))
(assert (x161 x6 (- x59 x138)))
(assert (x153 x19 x59 x166 x138))
(assert (x66 (- x155 x138)))
(assert (x77 x166 x138 x6 x27))
(assert (x66 (- x6 x97)))
(assert (x66 (- x138 x31)))
(assert (x161 x97 (- x174 x31)))
(assert (x66 (- x138 x27)))
(assert (= x176 (and x141 x53)))
(assert (x77 x138 x166 x97 x174))
(assert (x66 (- x174 x138)))
(assert (x161 x13 x135))
(assert (x161 x59 (- x19 x166)))
(assert (x77 x6 x59 x166 x138))
(assert (x161 x97 (- x174 x90)))
(assert (x153 x59 x6 x166 x138))
(assert (x77 x59 x19 x174 x97))
(assert (x77 x135 x13 x97 x174))
(assert (x66 (- x135 x174)))
(assert (x77 x59 x19 x138 x166))
(assert (x77 x127 x6 x174 x97))
(assert (x161 x6 (- x110 x97)))
(assert (x29 x131 x134))
(assert (x153 x138 x166 x6 x27))
(assert (x70 x115))
(assert (x77 x110 x90 x174 x97))
(assert (x77 x90 x110 x174 x97))
(assert (x77 x31 x127 x138 x166))
(assert (x66 (- x138 x114)))
(assert (= (=> (and (= x108 x166) (= (x69 x42) x119) (>= x67 0) (= x162 x182) x25 (<= x42 1461501637330902918203684832716283019655932542975) (= (x177 (x151 x166 x138)) x40) (= x172 x166) (= (= 0 x152) x141) (= x138 x124) (< 0 x42) (= x162 x147) (= x124 x14) (= x152 (x177 (- x173 (ite (< x43 x40) 1 0)))) (= x138 x101) (= x25 (> (x69 x42) 0)) (= (x10 x42) x67) (= (x130 (- x43 x40)) x173) (= x172 x16) (< 0 x119) (= x120 x182) (= x43 (x82 (x151 x166 x138) 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x154 1415856751)) (and (=> (and (= x1 (< x152 x182)) (not x141)) (and (=> (not x1) x139) (=> (and (and (= (x130 (- 2 x41)) x19) (= x71 (x82 (x151 x166 x138) x182)) (= (x177 (x151 x6 x13)) x143) (= (x7 x131 x134) x146) (= (x130 (- 2 x54)) x31) (= (x177 (x151 x6 x155)) x81) (= (x177 (x151 x127 x31)) x155) (= x175 x57) (= (x177 (x151 x27 x88)) x13) (= x89 (x7 x84 x134)) (= (x130 (- 2 x184)) x88) (= (x177 (- x152 (ite (< x40 x71) 1 0))) x28) (= x90 (x130 (- 2 x51))) (= (x130 (- 2 x81)) x157) (= x184 (x177 (x151 x6 x27))) (= x110 (x177 (x151 x13 x135))) (= x114 (x105 (+ x89 1))) (= x135 (x130 (- 2 x143))) (= (x105 (+ (x177 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x182)) 1)) x102) (= x35 (x177 (x151 x28 x114))) (= (x130 (- 0 x134)) x84) (= (x177 (x151 x155 x157)) x59) (= (x177 (* 3 x6)) x122) (= x41 (x177 (x151 x6 x59))) (= x134 (x78 x182 x102)) (= x27 (x80 2 x122)) (= x175 (x177 (x151 (x2 x146 x35) x48))) (= (x7 x182 x134) x6) (= (x177 (x151 x59 x19)) x48) (= (x177 (x151 x6 x127)) x54) (= x131 (x130 (- x40 x71))) (= (x177 (x151 x6 x110)) x51) (= (x177 (x151 x110 x90)) x127)) x1) x126))) (=> (and x141 (= (> x182 0) x91)) (and (=> (and (and (= (x7 x40 x182) x64) (= x57 x64)) x91) x126) (=> (not x91) x139))))) x22))
(assert (x161 x155 (- x6 x97)))
(assert (x77 x48 (x2 x146 x35) x138 x166))
(assert (x77 x174 x97 x88 x27))
(assert (x161 x31 (- x127 x97)))
(assert (x161 x174 (- x97 x138)))
(assert (x77 x88 x27 x138 x166))
(assert (x161 x27 (- x6 x174)))
(assert (x77 x6 x13 x166 x138))
(assert (x161 x88 (- x27 x97)))
(assert (x153 x138 x166 x6 x127))
(assert (x66 (- x31 x174)))
(assert (x161 x6 (- x13 x174)))
(assert (x66 (- x97 x155)))
(assert (x66 x48))
(assert (x77 x138 x166 x110 x6))
(assert (x66 (- x174 x31)))
(assert (x66 (- x110 x138)))
(assert (x111 2))
(assert (x66 (- x174 x90)))
(assert (x161 x59 (- x6 x166)))
(assert (x66 (- x166 x157)))
(assert (x77 x138 x166 x174 x97))
(assert (x161 x97 x174))
(assert (x161 x19 (- x59 x174)))
(assert (x70 x6))
(assert (x153 x174 x97 x13 x135))
(assert (x77 x88 x27 x97 x174))
(assert (x161 x110 (- x6 x174)))
(assert (x153 x28 x114 x166 x138))
(assert (x66 (- x28 x166)))
(assert (x77 x138 x166 x157 x155))
(assert (x77 x28 x114 x97 x174))
(assert (x161 x155 (- x157 x97)))
(assert (x77 x13 x6 x97 x174))
(assert (x77 x166 x138 x28 x114))
(assert (x153 x174 x97 x59 x19))
(assert (x153 x31 x127 x97 x174))
(assert (x153 x6 x155 x166 x138))
(assert (x153 x114 x28 x97 x174))
(assert (x161 x97 (- x174 x59)))
(assert (x77 x138 x166 x19 x59))
(assert (x70 x135))
(assert (x77 x114 x28 x174 x97))
(assert (x70 x124))
(assert (x77 x48 (x2 x146 x35) x166 x138))
(assert (x153 x138 x166 x97 x174))
(assert (x77 x138 x166 x110 x90))
(assert (x153 x135 x13 x166 x138))
(assert (x77 x174 x97 x6 x13))
(assert (x161 x110 (- x6 x138)))
(assert (x77 x97 x174 x6 x155))
(assert (x161 x138 (- x166 x28)))
(assert (x77 x155 x157 x138 x166))
(assert (x77 x59 x6 x166 x138))
(assert (x153 x166 x138 x155 x157))
(assert (x77 x155 x6 x174 x97))
(assert (x161 x6 x59))
(assert (x66 (- x174 x27)))
(assert (x77 x138 x166 x13 x6))
(assert (x77 x110 x6 x166 x138))
(assert (x66 (- x97 x6)))
(assert (x77 x166 x138 (x2 x146 x35) x48))
(assert (x153 x127 x31 x166 x138))
(assert (x161 x97 (- x174 x155)))
(assert (x161 x13 (- x6 x166)))
(assert (x77 x138 x166 x127 x6))
(assert (x153 x138 x166 x110 x90))
(assert (x66 (- x174 x110)))
(assert (x77 x31 x127 x174 x97))
(assert (x161 x138 (- x166 x114)))
(assert (= x56 (and (not x170) x86)))
(assert (x70 x14))
(assert (x77 x174 x97 x127 x6))
(assert (x161 x166 x138))
(assert (x161 x19 (- x59 x97)))
(assert (x70 x52))
(assert (x66 (- x174 x135)))
(assert (x66 (- x31 x138)))
(assert (x70 x89))
(assert (x153 x138 x166 x6 x155))
(assert (x153 x174 x97 x6 x110))
(assert (x161 x166 (- x138 (x2 x146 x35))))
(assert (x153 x174 x97 x6 x27))
(assert (x66 (- x13 x166)))
(assert (x70 x179))
(assert (x153 x127 x6 x166 x138))
(assert (x77 x110 x6 x138 x166))
(assert (x153 x6 x110 x166 x138))
(assert (x153 x6 x27 x166 x138))
(assert (x153 x127 x31 x97 x174))
(assert (x161 x97 (- x174 x135)))
(assert (x161 x90 (- x110 x174)))
(assert (x77 x166 x138 x27 x88))
(assert (x153 x6 x127 x97 x174))
(assert (x161 x138 (- x166 x6)))
(assert (x66 (- x114 x97)))
(assert (x70 x81))
(assert (x77 (x2 x146 x35) x48 x166 x138))
(assert (x66 (- x48 x174)))
(assert (x77 x138 x166 x6 x13))
(assert (x161 x174 (- x97 (x2 x146 x35))))
(assert (x153 x27 x6 x166 x138))
(assert (x77 x59 x6 x97 x174))
(assert (x70 x84))
(assert (x77 x97 x174 x19 x59))
(assert (x77 x90 x110 x138 x166))
(assert (x77 x174 x97 x135 x13))
(assert (x77 x138 x166 x31 x127))
(assert (x66 x110))
(assert (x66 x31))
(assert (x66 x97))
(assert (x77 x114 x28 x166 x138))
(assert (x77 x166 x138 x110 x6))
(assert (x77 x166 x138 x6 x127))
(assert (x93 x35))
(assert (x77 x97 x174 x114 x28))
(assert (x77 x138 x166 (x2 x146 x35) x48))
(assert (x161 x6 (- x13 x138)))
(assert (x161 x97 (- x174 x88)))
(assert (x153 (x2 x146 x35) x48 x166 x138))
(assert (x77 x97 x174 x127 x6))
(assert (x161 x97 (- x174 (x2 x146 x35))))
(assert (x77 x138 x166 x135 x13))
(assert (x66 (- x138 x135)))
(assert (x66 (- x174 x13)))
(assert (x161 x6 (- x13 x166)))
(assert (= (or x144 x92) x167))
(assert (x77 x6 x110 x174 x97))
(assert (x77 x174 x97 x127 x31))
(assert (x161 x174 (- x97 x19)))
(assert (x161 x174 (- x97 x6)))
(assert (x161 x174 (- x97 x157)))
(assert (x70 x67))
(assert (x66 (- x19 x97)))
(assert (x77 x138 x166 x48 (x2 x146 x35)))
(assert (x70 x138))
(assert (x66 (- x174 x114)))
(assert (x77 x97 x174 x155 x6))
(assert (x161 x59 (- x6 x97)))
(assert (x77 x6 x155 x174 x97))
(assert (x66 (- x19 x138)))
(assert (x77 x6 x13 x97 x174))
(assert (x66 (- x174 (x2 x146 x35))))
(assert (x77 x97 x174 x155 x157))
(assert (x161 x6 (- x155 x166)))
(assert (x77 x90 x110 x166 x138))
(assert (x161 x138 (- x166 x31)))
(assert (x66 (- x166 x6)))
(assert (x47 x182 x102))
(assert (= (=> (and (and (= x120 x186) (= x65 x169) (= x108 x26) (= x101 x52) (= x5 x34) (= x179 x186) (= x165 x174) (= x169 x26) (= x106 (= 0 x179)) (= x52 x115) (= (x151 x97 x174) x38) (= (not x160) x170) (= x32 0) (= x65 x97) (= x115 x165) (= x106 x160)) (or (and (not x170) (and (= x159 x181) x113 (= x140 x170) (= x181 false) (= (not x140) x113))) (and x170 (and (= x185 x136) (= x136 x186) (= x11 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x148 x183) (= x183 (x7 x44 x15)) (= x185 x15) (= x100 x159) (= (> x148 115792089237316195423570985008687907853269984665640564039457584007913129639935) x100) x62 (= x170 x62) (= x38 x44))))) x4) x171))
(assert (x77 x174 x97 x110 x90))
(assert (x153 x97 x174 x6 x59))
(assert (x70 x16))
(assert (x77 x166 x138 x110 x90))
(assert (x77 x166 x138 x13 x6))
(assert (x77 x6 x59 x138 x166))
(assert (x77 (x2 x146 x35) x48 x138 x166))
(assert (x153 x6 x127 x166 x138))
(assert (x70 x31))
(assert (x161 x97 (- x174 x48)))
(assert (x77 x90 x110 x97 x174))
(assert (x161 x166 (- x138 x157)))
(assert (x161 x27 (- x6 x166)))
(assert (x161 x48 (- (x2 x146 x35) x166)))
(assert (x70 x90))
(assert (x77 x174 x97 x13 x135))
(assert (x161 x127 (- x31 x138)))
(assert (x153 x174 x97 x28 x114))
(assert (x161 x27 (- x6 x138)))
(assert (x161 x27 (- x88 x97)))
(assert (x77 x127 x31 x138 x166))
(assert (x77 x138 x166 x13 x135))
(assert (x77 x59 x6 x174 x97))
(assert (x161 x6 (- x110 x174)))
(assert (x161 x88 (- x27 x166)))
(assert (x77 x97 x174 x157 x155))
(assert (x161 x59 x19))
(assert (x77 x166 x138 x157 x155))
(assert (x77 x138 x166 x88 x27))
(assert (x66 (- x88 x174)))
(assert (x161 x28 (- x114 x97)))
(assert (x77 x97 x174 x13 x6))
(assert (x153 x155 x157 x97 x174))
(assert (x66 (- x166 x31)))
(assert (x45 x42))
(assert (x66 (- x97 x59)))
(assert (x153 x97 x174 x59 x19))
(assert (x161 x166 (- x138 x6)))
(assert (x66 (- (x2 x146 x35) x97)))
(assert (x153 x157 x155 x166 x138))
(assert (x66 (- x138 x110)))
(assert (x77 x28 x114 x138 x166))
(assert (x77 x138 x166 x27 x88))
(assert (x77 x31 x127 x166 x138))
(assert (= x8 (and (not x141) x53)))
(assert (x77 x6 x155 x166 x138))
(assert (x153 x166 x138 x6 x127))
(assert (x66 x13))
(assert (x70 x169))
(assert (x77 x174 x97 x59 x6))
(assert (x66 (- x174 x155)))
(assert (x161 x166 (- x138 x114)))
(assert (x70 x41))
(assert (x153 x166 x138 x28 x114))
(assert (x153 x138 x166 x127 x31))
(assert (x153 x97 x174 x6 x110))
(assert (x29 x182 x134))
(assert (x66 (- x174 x48)))
(assert (x161 x19 (- x59 x138)))
(assert (x161 x138 (- x166 x97)))
(assert (x77 x97 x174 x90 x110))
(assert (x66 (- x97 x19)))
(assert (x161 x166 (- x138 x127)))
(assert (x103 x122 2))
(assert (x161 x6 (- x155 x97)))
(assert (x153 x157 x155 x97 x174))
(assert (x161 x155 (- x6 x138)))
(assert (x77 x166 x138 x114 x28))
(assert (x153 x155 x157 x166 x138))
(assert (x161 x27 (- x88 x138)))
(assert (x161 x166 (- x138 x88)))
(assert (x77 x127 x6 x166 x138))
(assert (x153 x97 x174 x166 x138))
(assert (x77 x110 x90 x166 x138))
(assert (x161 x155 (- x157 x174)))
(assert (= (=> (and (= x60 x95) (= x49 (or x63 x68)) (= x49 x95) (= (= x112 x137) x156) (= x34 x137) (= x60 x112) (= x68 x106) (= x159 x63)) x156) x4))
(assert (x66 (- x127 x138)))
(assert (x66 x90))
(assert (x77 x127 x31 x174 x97))
(assert (x77 x127 x6 x138 x166))
(assert (x161 (x2 x146 x35) (- x48 x138)))
(assert (x77 x97 x174 x138 x166))
(assert (x70 x57))
(assert (x70 x88))
(assert (x66 (- x157 x97)))
(assert (x70 x27))
(assert (x66 (- x28 x174)))
(assert (x23 x134))
(assert (x23 x44))
(assert (x66 (- x48 x97)))
(assert (x77 x31 x127 x97 x174))
(assert (x153 x59 x19 x166 x138))
(assert (x161 x6 (- x13 x97)))
(assert (x161 x110 (- x90 x174)))
(assert (x111 x122))
(assert (x77 x174 x97 x110 x6))
(assert (x161 x27 (- x6 x97)))
(assert (x153 x97 x174 x155 x157))
(assert (x161 x97 (- x174 x13)))
(assert (x153 x88 x27 x166 x138))
(assert (x66 (- x90 x174)))
(assert (x23 x84))
(assert (x161 x114 (- x28 x97)))
(assert (x161 x90 (- x110 x166)))
(assert (x153 x90 x110 x166 x138))
(assert (x77 x6 x110 x166 x138))
(assert (x77 (x2 x146 x35) x48 x174 x97))
(assert (x161 x114 (- x28 x166)))
(assert (x77 x138 x166 x28 x114))
(assert (x161 x6 (- x27 x138)))
(assert (x161 x114 (- x28 x174)))
(assert (x161 x166 (- x138 x19)))
(assert (x66 (- x6 x166)))
(assert (x161 x97 (- x174 x28)))
(assert (x66 (- x97 x48)))
(assert (x77 x27 x6 x138 x166))
(assert (x66 (- x97 x110)))
(assert (x77 (x2 x146 x35) x48 x97 x174))
(assert (x153 x6 x13 x166 x138))
(assert (x161 x127 (- x6 x97)))
(assert (x161 x59 (- x19 x138)))
(assert (x66 (- x138 x28)))
(assert (x66 (- x88 x138)))
(assert (x153 x97 x174 x27 x88))
(assert (x77 x6 x27 x166 x138))
(assert (x66 x127))
(assert (x66 (- x59 x97)))
(assert (x161 x13 (- x135 x174)))
(assert (x153 x174 x97 x110 x90))
(assert (x161 x6 (- x27 x97)))
(assert (x77 x127 x31 x166 x138))
(assert (x66 (- x157 x166)))
(check-sat)
(exit)
