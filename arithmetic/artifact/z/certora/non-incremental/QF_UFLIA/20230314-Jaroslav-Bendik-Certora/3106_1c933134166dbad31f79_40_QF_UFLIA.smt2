(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x93 () Int)
(declare-fun x55 () Bool)
(declare-fun x62 () Int)
(declare-fun x211 () Int)
(declare-fun x8 () Int)
(declare-fun x114 (Int Int Int Int) Int)
(declare-fun x123 () Bool)
(declare-fun x220 () Int)
(declare-fun x181 () Int)
(declare-fun x144 () Bool)
(declare-fun x128 (Int) Int)
(declare-fun x133 () Int)
(declare-fun x86 () Bool)
(declare-fun x102 () Int)
(declare-fun x248 () Int)
(declare-fun x135 () Bool)
(declare-fun x241 (Int) Int)
(declare-fun x63 () Bool)
(declare-fun x61 () Int)
(declare-fun x242 (Int Int Int Int Int Int) Int)
(declare-fun x199 () Int)
(declare-fun x200 (Int Int Int Int Int) Int)
(declare-fun x127 () Int)
(declare-fun x105 () Bool)
(declare-fun x207 () Int)
(declare-fun x85 () Bool)
(declare-fun x54 () Int)
(declare-fun x30 (Int) Int)
(declare-fun x139 () Bool)
(declare-fun x9 () Bool)
(declare-fun x98 () Bool)
(declare-fun x69 () Int)
(declare-fun x66 () Int)
(declare-fun x22 () Bool)
(declare-fun x172 (Int) Int)
(declare-fun x51 () Bool)
(declare-fun x167 () Int)
(declare-fun x192 (Int) Int)
(declare-fun x88 () Int)
(declare-fun x75 () Bool)
(declare-fun x151 (Int) Int)
(declare-fun x87 () Int)
(declare-fun x110 () Int)
(declare-fun x103 () Bool)
(declare-fun x217 () Int)
(declare-fun x206 () Bool)
(declare-fun x208 () Bool)
(declare-fun x196 () Int)
(declare-fun x67 () Bool)
(declare-fun x229 () Int)
(declare-fun x166 () Int)
(declare-fun x20 () Bool)
(declare-fun x245 () Bool)
(declare-fun x160 () Int)
(declare-fun x46 () Bool)
(declare-fun x35 () Int)
(declare-fun x23 () Int)
(declare-fun x27 () Int)
(declare-fun x5 () Int)
(declare-fun x44 () Int)
(declare-fun x234 () Int)
(declare-fun x107 () Int)
(declare-fun x187 () Int)
(declare-fun x73 () Int)
(declare-fun x227 () Int)
(declare-fun x28 () Bool)
(declare-fun x148 () Bool)
(declare-fun x168 () Int)
(declare-fun x143 () Int)
(declare-fun x129 () Int)
(declare-fun x47 () Int)
(declare-fun x33 () Bool)
(declare-fun x104 () Int)
(declare-fun x41 () Int)
(declare-fun x216 () Int)
(declare-fun x57 () Bool)
(declare-fun x142 () Bool)
(declare-fun x59 () Bool)
(declare-fun x71 () Int)
(declare-fun x223 () Bool)
(declare-fun x154 () Int)
(declare-fun x112 () Int)
(declare-fun x238 () Bool)
(declare-fun x155 () Int)
(declare-fun x185 () Int)
(declare-fun x29 (Int Int) Int)
(declare-fun x68 (Int Int Int Int Int Int Int) Int)
(declare-fun x21 () Int)
(declare-fun x157 () Bool)
(declare-fun x235 () Bool)
(declare-fun x26 () Int)
(declare-fun x101 () Int)
(declare-fun x13 () Bool)
(declare-fun x178 () Bool)
(declare-fun x159 () Int)
(declare-fun x117 () Bool)
(declare-fun x190 () Bool)
(declare-fun x186 () Int)
(declare-fun x203 () Int)
(declare-fun x202 () Int)
(declare-fun x150 () Int)
(declare-fun x213 () Int)
(declare-fun x236 () Int)
(declare-fun x233 () Bool)
(declare-fun x140 () Bool)
(declare-fun x40 () Int)
(declare-fun x53 (Int Int) Int)
(declare-fun x124 () Int)
(declare-fun x176 () Int)
(declare-fun x52 () Int)
(declare-fun x141 () Int)
(declare-fun x145 () Int)
(declare-fun x43 (Int) Int)
(declare-fun x244 (Int Int) Int)
(declare-fun x158 () Bool)
(declare-fun x163 () Bool)
(declare-fun x218 () Int)
(declare-fun x156 () Bool)
(declare-fun x179 () Bool)
(declare-fun x118 () Bool)
(declare-fun x121 () Int)
(declare-fun x96 (Int Int) Int)
(declare-fun x14 () Int)
(declare-fun x111 () Int)
(declare-fun x81 () Int)
(declare-fun x228 () Bool)
(declare-fun x122 () Int)
(declare-fun x237 () Bool)
(declare-fun x31 () Bool)
(declare-fun x94 () Int)
(declare-fun x188 (Int) Int)
(declare-fun x95 () Int)
(declare-fun x89 () Bool)
(declare-fun x162 () Int)
(declare-fun x212 () Int)
(declare-fun x34 () Int)
(declare-fun x171 () Bool)
(declare-fun x180 () Int)
(declare-fun x2 () Bool)
(declare-fun x65 () Int)
(declare-fun x225 () Bool)
(declare-fun x49 () Int)
(declare-fun x239 (Int Int) Int)
(declare-fun x32 (Int) Int)
(declare-fun x232 () Int)
(declare-fun x173 (Int Int Int) Int)
(declare-fun x201 () Int)
(declare-fun x11 () Int)
(declare-fun x74 () Bool)
(declare-fun x37 () Int)
(declare-fun x3 (Int) Int)
(declare-fun x230 () Int)
(declare-fun x84 () Int)
(declare-fun x80 () Int)
(declare-fun x169 () Int)
(declare-fun x132 (Int) Int)
(declare-fun x243 () Bool)
(declare-fun x78 () Int)
(declare-fun x17 () Bool)
(declare-fun x7 () Int)
(declare-fun x120 () Int)
(declare-fun x224 (Int Int) Int)
(declare-fun x10 () Int)
(declare-fun x193 () Int)
(declare-fun x221 () Bool)
(declare-fun x209 () Int)
(declare-fun x77 () Int)
(declare-fun x170 (Int Int) Int)
(declare-fun x18 () Int)
(declare-fun x153 () Bool)
(declare-fun x198 () Int)
(declare-fun x175 () Int)
(define-fun x15 ((x197 Int)) Int (ite (and (>= x197 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x197)) x197 (- x197 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x106 ((x197 Int)) Int (ite (and (> 0 x197) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x197)) (+ x197 115792089237316195423570985008687907853269984665640564039457584007913129639936) x197))
(define-fun x152 ((x197 Int)) Int (ite (and (< x197 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x197 0)) x197 (ite (and (< x197 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x197 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x197 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x197 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x197)) (+ x197 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x53 x197 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x99 ((x109 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x109) (<= 0 x109)))
(define-fun x138 ((x109 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x109) (>= x109 0)))
(define-fun x194 ((x109 Int) (x1 Int)) Bool (=> (and (< 0 x1) (< 0 x109)) (and (<= 0 (x239 x109 x1)) (>= x109 (x239 x109 x1)))))
(define-fun x113 ((x109 Int) (x1 Int)) Bool (=> (and (and (<= 0 x109) (< x109 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (>= x1 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1))) (and (>= (x239 x109 x1) 0) (< (x239 x109 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x82 ((x109 Int) (x1 Int)) Bool (=> (and (< x1 x109) (< 1 x1)) (> x109 (x239 x109 x1))))
(define-fun x39 ((x109 Int) (x1 Int)) Bool (=> (and (< 0 x1) (< 0 x109)) (= (= 0 (x239 x109 x1)) (> x1 x109))))
(define-fun x16 ((x109 Int)) Bool (= 0 (x239 0 x109)))
(define-fun x48 ((x109 Int)) Bool (= (x239 x109 1) x109))
(define-fun x183 ((x109 Int)) Bool (=> (not (= 0 x109)) (= (x239 x109 x109) 1)))
(define-fun x134 ((x109 Int)) Bool (and (x48 x109) (x16 x109) (x183 x109)))
(define-fun x12 ((x109 Int)) Bool (and (= x109 (x244 115792089237316195423570985008687907853269984665640564039457584007913129639935 x109)) (= x109 (x244 x109 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x72 ((x109 Int)) Bool (and (= (x244 x109 0) 0) (= (x244 0 x109) 0)))
(define-fun x38 ((x109 Int)) Bool (= x109 (x244 x109 x109)))
(define-fun x119 ((x109 Int)) Bool (and (x12 x109) (x72 x109) (x38 x109)))
(define-fun x215 ((x109 Int) (x1 Int)) Bool (= (x244 x109 x1) (x244 x1 x109)))
(define-fun x137 ((x109 Int) (x1 Int)) Bool (and (=> (>= x1 0) (>= x1 (x244 x109 x1))) (>= (x244 x109 x1) 0) (=> (>= x109 0) (>= x109 (x244 x109 x1)))))
(define-fun x92 ((x109 Int) (x1 Int)) Bool (and (x137 x109 x1) (x215 x109 x1)))
(define-fun x195 ((x109 Int)) Bool (= (x53 x109 262144) (+ (x244 x109 131072) (x53 x109 131072))))
(define-fun x42 ((x109 Int)) Bool (and (x195 x109) (x92 x109 131072)))
(define-fun x126 ((x109 Int) (x1 Int)) Bool (and (>= (x53 x109 x1) 0) (< (x53 x109 x1) x1)))
(define-fun x45 ((x109 Int) (x1 Int)) Bool (=> (and (>= x109 0) (> x1 0)) (= (= (x53 x109 x1) x109) (< x109 x1))))
(define-fun x226 ((x109 Int) (x1 Int)) Bool (=> (and (and (<= x1 x109) (> (+ x1 x1) x109)) (> x1 0)) (= (- x109 x1) (x53 x109 x1))))
(define-fun x36 ((x109 Int)) Bool (= 0 (x53 0 x109)))
(define-fun x4 ((x109 Int)) Bool (= (x53 x109 1) 0))
(define-fun x19 ((x109 Int)) Bool (= 0 (x53 x109 x109)))
(define-fun x222 ((x109 Int)) Bool (and (x19 x109) (x4 x109) (x36 x109)))
(define-fun x91 ((x109 Int)) Bool (= (x53 x109 2) (x244 x109 1)))
(define-fun x214 ((x109 Int)) Bool (and (x92 x109 1) (x91 x109)))
(define-fun x130 ((x109 Int)) Bool (= (x244 x109 127) (x53 x109 128)))
(define-fun x182 ((x109 Int)) Bool (and (x92 x109 127) (x130 x109)))
(define-fun x147 ((x109 Int) (x1 Int)) Bool (=> (and (< 0 x1) (> x109 0)) (= (= x1 (x239 (x152 (x224 x109 x1)) x109)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x224 x109 x1)))))
(define-fun x83 ((x109 Int) (x1 Int)) Bool (=> (and (not (= x1 0)) (not (= 0 x109))) (and (= x109 (x239 (x224 x109 x1) x1)) (= (x239 (x224 x109 x1) x109) x1))))
(define-fun x219 ((x109 Int) (x1 Int)) Bool (=> (and (< 0 x1) (< 0 x109)) (= (> (x224 x109 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (x239 115792089237316195423570985008687907853269984665640564039457584007913129639935 x109) x1))))
(define-fun x50 ((x109 Int) (x1 Int)) Bool (and (= (x152 (x224 x109 x1)) (x152 (x224 (- x109 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x152 (x224 (- x109 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1)) (x152 (x224 x109 x1))) (= (x152 (x224 x109 (- x1 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x152 (x224 x109 x1)))))
(define-fun x97 ((x109 Int) (x1 Int)) Bool (and (=> (and (and (<= x1 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1 0)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x109) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x109))) (= (>= (x224 (- x109 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= (x239 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x109)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x109) (> x109 0)) (and (<= x1 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1))) (= (>= (x239 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1) x109) (<= (x224 x109 x1) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1) (<= x1 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x109) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x109))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x109) (x239 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1))) (<= (x224 (- x109 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (> x1 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x109) (> x109 0))) (= (>= (x239 57896044618658097711785492504343953926634992332820282019728792003956564819968 x109) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x224 x109 (- x1 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x131 ((x109 Int)) Bool (and (= (x224 0 x109) 0) (= 0 (x224 x109 0))))
(define-fun x205 ((x109 Int)) Bool (and (= (x224 1 x109) x109) (= (x224 x109 1) x109)))
(define-fun x6 ((x109 Int)) Bool (and (x131 x109) (x205 x109)))
(define-fun x70 ((x109 Int)) Bool (= (x53 x109 131072) (+ (x244 x109 65536) (x53 x109 65536))))
(define-fun x210 ((x109 Int)) Bool (and (x70 x109) (x92 x109 65536)))
(define-fun x76 ((x109 Int)) Bool (= (x53 x109 1461501637330902918203684832716283019655932542976) (x244 x109 1461501637330902918203684832716283019655932542975)))
(define-fun x60 ((x109 Int)) Bool (and (x76 x109) (x92 x109 1461501637330902918203684832716283019655932542975)))
(define-fun x149 ((x109 Int)) Bool (= (x53 x109 4294967296) (x244 x109 4294967295)))
(define-fun x177 ((x109 Int)) Bool (and (x92 x109 4294967295) (x149 x109)))
(define-fun x56 ((x109 Int)) Bool (= (x152 x109) (+ (x53 x109 32) (x244 x109 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x161 ((x109 Int)) Bool (and (x56 x109) (x92 x109 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x136 ((x109 Int)) Bool (= (x244 x109 18446744073709551615) (x53 x109 18446744073709551616)))
(define-fun x146 ((x109 Int)) Bool (and (x92 x109 18446744073709551615) (x136 x109)))
(define-fun x246 ((x79 Int)) Int (ite (= x79 128) x73 (x32 x79)))
(define-fun x24 ((x79 Int)) Int (ite (= x79 160) x41 (x188 x79)))
(define-fun x184 ((x79 Int)) Int (ite (= x79 160) x34 (x188 x79)))
(define-fun x174 ((x79 Int)) Int (ite (= x79 x93) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x30 x79)))
(define-fun x116 ((x79 Int)) Int (ite (= x95 x79) x120 (x174 x79)))
(define-fun x231 ((x79 Int)) Int (ite (and (> (+ x93 32) x79) (>= x79 x93)) (x151 (+ 0 (- x79 x93))) (x116 x79)))
(define-fun x58 ((x79 Int)) Int (ite x156 (x231 x79) (x116 x79)))
(define-fun x125 ((x79 Int)) Int (ite x117 (x58 x79) (x30 x79)))
(define-fun x25 ((x79 Int)) Int (ite (= x79 x18) x201 (x125 x79)))
(define-fun x100 ((x79 Int)) Int (ite (= x79 x122) x169 (x25 x79)))
(define-fun x115 ((x79 Int)) Int (ite (= x79 x27) x162 (x100 x79)))
(define-fun x204 ((x79 Int)) Int (ite (= 192 x79) x102 (x24 x79)))
(define-fun x165 ((x79 Int)) Int (ite x31 (x188 x79) (ite x63 (ite x74 (x24 x79) (x204 x79)) (x184 x79))))
(assert (not (= (+ 1 x61) 1)))
(assert (x119 x180))
(assert (not (= 1666326814 (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x192 x81))))
(assert (=> (<= (x165 321) 10000) (not (= (x165 321) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289))))))
(assert (not (= 7776000 (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (=> (<= (x165 289) 10000) (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x165 289)))))
(assert (not (= (x96 x62 1) 0)))
(assert (= x163 (=> (and (= x93 x181) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x47 1))) (= x120 x209) (= 5 x160) (= x227 x65)) x148)))
(assert (x138 x141))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 24706623)))
(assert (not (= (x96 x62 5) 1)))
(assert (not (= (x96 x62 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x138 x193))
(assert (=> (<= (x165 225) 10000) (not (= (x165 225) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289))))))
(assert (x138 x66))
(assert (=> (<= x78 10000) (not (= x78 (x173 (x165 161) (x165 193) (x165 225))))))
(assert (=> (<= x104 10000) (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) x104))))
(assert (not (= (+ x61 1) (x192 x81))))
(assert (=> (>= 10000 x110) (not (= x110 (x96 x62 1)))))
(assert (not (= 1 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (=> (<= (x165 193) 10000) (not (= (x96 x62 1) (x165 193)))))
(assert (x222 18446744073709551616))
(assert (not (= 5 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (not (= 7776000 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x96 (x165 161) (x165 193)))))
(assert (=> (<= x104 10000) (not (= x104 (x96 x62 1)))))
(assert (x138 x155))
(assert (not (= (x96 x62 5) 97199519776808029778168953285215024309695167179541945341261303444449322336256)))
(assert (= (and x153 (not x235)) x158))
(assert (= (x188 321) 0))
(assert (x119 131072))
(assert (not (= (+ 1 x61) 24706623)))
(assert (not (= (x192 (x165 161)) 346787896)))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x173 (x165 161) (x165 193) (x165 225)))))
(assert (x134 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (=> (<= x62 10000) (not (= (x96 (x165 161) (x165 193)) x62))))
(assert (x138 x159))
(assert (x138 x101))
(assert (not (= 24706623 (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= 65536 (x96 (x165 161) (x165 193)))))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) 0)))
(assert (not (= 131072 (x96 (x165 161) (x165 193)))))
(assert (= 0 (x188 353)))
(assert (=> (>= 10000 x187) (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) x187))))
(assert (not (= (x192 x81) 65536)))
(assert (not (= 18446744073709551615 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (=> (>= 10000 x187) (not (= (x192 (x165 161)) x187))))
(assert (and (= 27 (x224 9 3)) (= (x224 9 9) 81) (= 9 (x224 3 3)) (= (x224 27 3) 81)))
(assert (x138 x186))
(assert (=> (<= x187 10000) (not (= x187 (+ 1 x61)))))
(assert (x134 x124))
(assert (x138 x95))
(assert (x138 x230))
(assert (not (= 16635278 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (x138 x162))
(assert (x119 x220))
(assert (= (and x178 x221) x171))
(assert (=> (<= x78 10000) (not (= x78 (x96 x62 5)))))
(assert (= x153 (and x208 (not x123))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 1 x61))))
(assert (=> (>= 10000 x78) (not (= x78 (+ 1 x61)))))
(assert (x119 65536))
(assert (=> (<= (x165 353) 10000) (not (= (x165 353) (x114 (x165 161) (x165 193) (x165 225) (x165 257))))))
(assert (= x74 (and (not x28) x243)))
(assert (not (= (x96 x62 5) 65536)))
(assert (not (= 131072 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (not (= (x192 (x165 161)) 97199519776808029778168953285215024309695167179541945341261303444449322336256)))
(assert (not (= 24706623 (x192 x81))))
(assert (x138 x87))
(assert (x138 x217))
(assert (x138 x129))
(assert (=> (>= 10000 (x165 161)) (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x165 161)))))
(assert (=> (>= 10000 (x165 353)) (not (= (x165 353) (x96 x62 1)))))
(assert (not (= 1 (x192 x81))))
(assert (= (not (and (= x35 (ite (= x199 0) x227 (ite (= 32 x199) x160 (ite (= 64 x199) x18 (x115 x199))))) (= x143 (x15 (+ x18 32))) (= (ite (= x212 0) x227 (ite (= x212 32) x160 (ite (= 64 x212) x18 (x115 x212)))) x217) (= x27 (x15 (+ x122 32))) (= x140 (= 96 x176)) (= x169 (x244 4294967295 x180)) (= x122 (x15 (+ 32 x18))) (= x176 96) (= x201 (x244 1461501637330902918203684832716283019655932542975 x133)) (= x199 (x15 (+ x18 64))) (= x212 x18) (= x129 (ite (= 0 x143) x227 (ite (= x143 32) x160 (ite (= 64 x143) x18 (x115 x143))))))) x179))
(assert (not (= 549686827 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (not (= 24706623 (x96 x62 1))))
(assert (= x46 (and x9 (not x86))))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x96 x62 1))))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x96 x62 5) 18446744073709551615)))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x96 x62 1))))
(assert (x134 x230))
(assert (=> (>= 10000 (x165 321)) (not (= (x96 x62 1) (x165 321)))))
(assert (not (= (x96 x62 5) (x96 x62 1))))
(assert (not (= (x96 x62 5) 5)))
(assert (x138 x203))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (x138 x8))
(assert (x138 x145))
(assert (x138 x112))
(assert (=> (<= x187 10000) (not (= (x192 x81) x187))))
(assert (not (= (x96 (x165 161) (x165 193)) 1)))
(assert (=> (>= 10000 (x165 289)) (not (= (x96 x62 1) (x165 289)))))
(assert (x222 4294967296))
(assert (not (= 4294967295 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (x138 x212))
(assert (=> (<= x110 10000) (not (= x110 (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289))))))
(assert (=> (<= (x165 289) 10000) (not (= (x173 (x165 161) (x165 193) (x165 225)) (x165 289)))))
(assert (=> (<= (x165 161) 10000) (not (= (x165 161) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289))))))
(assert (=> (<= (x165 161) 10000) (not (= (x192 (x165 161)) (x165 161)))))
(assert (= x31 (and x208 x123)))
(assert (not (= (+ x61 1) (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (x119 x133))
(assert (not (= (x96 x62 1) 65536)))
(assert (=> (<= (x165 289) 10000) (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x165 289)))))
(assert (not (= 4294967295 (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (not (= (x96 x62 1) 1666326814)))
(assert (= 0 (x188 289)))
(assert (x210 x101))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) 1)))
(assert (=> (>= 10000 (x165 257)) (not (= (x165 257) (x173 (x165 161) (x165 193) (x165 225))))))
(assert (= (and x9 x86) x59))
(assert (=> (<= (x165 193) 10000) (not (= (x165 193) (x96 (x165 161) (x165 193))))))
(assert (=> (>= 10000 x110) (not (= (+ 1 x61) x110))))
(assert (=> (>= 10000 x187) (not (= x187 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321))))))
(assert (=> (>= 10000 x104) (not (= x104 (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289))))))
(assert (not (= (x96 (x165 161) (x165 193)) 5)))
(assert (and (x226 x220 18446744073709551616) (x126 x220 18446744073709551616) (x45 x220 18446744073709551616) (=> (< 0 18446744073709551616) (= x220 (+ (* 18446744073709551616 (x239 x220 18446744073709551616)) (x53 x220 18446744073709551616))))))
(assert (not (= (x96 (x165 161) (x165 193)) 1666326814)))
(assert (not (= 7776000 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) 549686827)))
(assert (=> (>= 10000 (x165 289)) (not (= (x165 289) (x192 x81)))))
(assert (x138 x71))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x96 (x165 161) (x165 193)))))
(assert (=> (<= x104 10000) (not (= (x96 (x165 161) (x165 193)) x104))))
(assert (=> (>= 10000 (x165 257)) (not (= (x165 257) (x96 (x165 161) (x165 193))))))
(assert (and (x226 x101 65536) (x126 x101 65536) (x45 x101 65536) (=> (< 0 65536) (= x101 (+ (* 65536 (x239 x101 65536)) (x53 x101 65536))))))
(assert (not (= (x96 x62 1) (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x192 (x165 161)))))
(assert (=> (>= 10000 x104) (not (= (x96 x62 5) x104))))
(assert (not (= 4294967295 (x96 x62 1))))
(assert (=> (>= 10000 x78) (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) x78))))
(assert (=> (<= (x165 225) 10000) (not (= (x96 x62 1) (x165 225)))))
(assert (=> (>= 10000 (x165 225)) (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x165 225)))))
(assert (=> (>= 10000 (x165 193)) (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) (x165 193)))))
(assert (x138 x84))
(assert (not (= (x192 (x165 161)) 131072)))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) 1666326814)))
(assert (and (x226 x230 2) (x126 x230 2) (x45 x230 2) (=> (< 0 2) (= x230 (+ (* 2 (x239 x230 2)) (x53 x230 2))))))
(assert (=> (>= 10000 (x165 289)) (not (= (x192 (x165 161)) (x165 289)))))
(assert (not (= (x192 x81) 0)))
(assert (not (= (x96 (x165 161) (x165 193)) (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (=> (>= 10000 (x165 257)) (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x165 257)))))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) 1)))
(assert (not (= 549686827 (x96 (x165 161) (x165 193)))))
(assert (not (= 7776000 (x173 (x165 161) (x165 193) (x165 225)))))
(assert (x138 x160))
(assert (=> (>= 10000 x187) (not (= (x96 x62 5) x187))))
(assert (x138 x167))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (=> (<= x104 10000) (not (= (x173 (x165 161) (x165 193) (x165 225)) x104))))
(assert (x138 x54))
(assert (=> (<= (x165 353) 10000) (not (= (x96 x62 5) (x165 353)))))
(assert (=> (<= (x165 225) 10000) (not (= (x165 225) (+ 1 x61)))))
(assert (not (= (x192 (x165 161)) (x96 x62 5))))
(assert (x134 1461501637330902918203684832716283019655932542976))
(assert (=> (>= 10000 (x165 193)) (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x165 193)))))
(assert (=> (>= 10000 x110) (not (= x110 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321))))))
(assert (not (= 5 (x96 x62 1))))
(assert (=> (>= 10000 x110) (not (= x110 (x173 (x165 161) (x165 193) (x165 225))))))
(assert (not (= 549686827 (+ x61 1))))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 4294967296)))
(assert (= (and x221 (not x178)) x157))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) 97199519776808029778168953285215024309695167179541945341261303444449322336256)))
(assert (not (= 65536 (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x192 (x165 161)))))
(assert (=> (<= x110 10000) (not (= x110 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353))))))
(assert (= (=> (and (= x178 (> x47 0)) (> x7 0) (= x124 (x165 160)) (= x7 (x246 128)) (= (x170 x124 248) x47)) (and (=> x178 x142) (=> (and (not x178) (= 0 x209)) x163))) x118))
(assert (=> (<= x78 10000) (not (= (x96 (x165 161) (x165 193)) x78))))
(assert (=> (<= (x165 161) 10000) (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x165 161)))))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 16635278)))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x192 (x165 161)) 7776000)))
(assert (=> (<= (x165 321) 10000) (not (= (x192 (x165 161)) (x165 321)))))
(assert (not (= (x192 (x165 161)) 18446744073709551615)))
(assert (not (= 65536 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (=> (>= 10000 (x165 321)) (not (= (x96 (x165 161) (x165 193)) (x165 321)))))
(assert (x138 x201))
(assert (= x103 (or x46 x59)))
(assert (not (= (x96 (x165 161) (x165 193)) 18446744073709551615)))
(assert (not (= (x96 (x165 161) (x165 193)) 4294967296)))
(assert (not (= (x96 x62 5) 16635278)))
(assert (not (= (x192 x81) (x96 (x165 161) (x165 193)))))
(assert (=> (<= (x165 353) 10000) (not (= (+ 1 x61) (x165 353)))))
(assert (x119 x234))
(assert (=> (>= 10000 x78) (not (= (x192 x81) x78))))
(assert (and (x226 x234 32) (x126 x234 32) (x45 x234 32) (=> (< 0 32) (= x234 (+ (* 32 (x239 x234 32)) (x53 x234 32))))))
(assert (=> (>= 10000 x104) (not (= (x192 (x165 161)) x104))))
(assert (not (= 24706623 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (>= 10000 (x165 353)) (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x165 353)))))
(assert (x138 x122))
(assert (not (= (x96 x62 1) 16635278)))
(assert (and (x113 x232 256) (x82 x232 256) (=> (and (> x232 0) (> 256 0)) (and (> (* (x239 x232 256) 256) (- x232 256)) (>= x232 (* 256 (x239 x232 256))))) (x39 x232 256) (x194 x232 256) (= (- x232 (x244 255 x232)) (* 256 (x239 x232 256)))))
(assert (not (= 16635278 (x192 (x165 161)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 1 x61))))
(assert (not (= 24706623 (x96 x62 5))))
(assert (=> (<= x62 10000) (not (= x62 (x96 x62 5)))))
(assert (not (= 7776000 (x192 x81))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x96 x62 1))))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (+ x61 1))))
(assert (not (= 5 (x192 (x165 161)))))
(assert (x138 x11))
(assert (=> (>= 10000 (x165 289)) (not (= (x165 289) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289))))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x96 x62 1))))
(assert (=> (>= 10000 x110) (not (= (x96 (x165 161) (x165 193)) x110))))
(assert (x119 18446744073709551615))
(assert (not (= 97199519776808029778168953285215024309695167179541945341261303444449322336256 (+ 1 x61))))
(assert (x138 x78))
(assert (x146 x220))
(assert (not (= (x192 (x165 161)) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (=> (<= x110 10000) (not (= x110 (x192 x81)))))
(assert (=> (<= (x165 161) 10000) (not (= (x96 x62 1) (x165 161)))))
(assert (x138 x216))
(assert (x138 x41))
(assert (=> (<= x187 10000) (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) x187))))
(assert (= (x30 x143) 0))
(assert (=> (>= 10000 x62) (not (= (x173 (x165 161) (x165 193) (x165 225)) x62))))
(assert (and (x226 x234 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x126 x234 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x45 x234 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x234 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x239 x234 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x53 x234 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (not (= (x192 (x165 161)) (x173 (x165 161) (x165 193) (x165 225)))))
(assert (=> (>= 10000 (x165 193)) (not (= (x165 193) (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321))))))
(assert (not (= 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x192 x81))))
(assert (not (= 4294967296 (x96 x62 1))))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) 16635278)))
(assert (=> (>= 10000 x110) (not (= (x192 (x165 161)) x110))))
(assert (=> (>= 10000 (x165 257)) (not (= (x96 x62 5) (x165 257)))))
(assert (x138 x37))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) (x96 x62 5))))
(assert (=> (<= x78 10000) (not (= x78 (x96 x62 1)))))
(assert (x138 x187))
(assert (not (= (x96 x62 5) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) (x192 x81))))
(assert (not (= 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (not (= (x192 x81) 18446744073709551615)))
(assert (x6 x168))
(assert (x222 128))
(assert (=> (>= 10000 (x165 321)) (not (= (x165 321) (x114 (x165 161) (x165 193) (x165 225) (x165 257))))))
(assert (=> (>= 10000 (x165 289)) (not (= (x165 289) (+ x61 1)))))
(assert (x222 131072))
(assert (=> (<= (x165 225) 10000) (not (= (x165 225) (x192 (x165 161))))))
(assert (not (= 1666326814 (x96 x62 5))))
(assert (x119 x230))
(assert (not (= (x96 x62 5) 7776000)))
(assert (not (= 7776000 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (=> (<= x78 10000) (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) x78))))
(assert (and (x113 x230 2) (x82 x230 2) (=> (and (> x230 0) (> 2 0)) (and (> (* (x239 x230 2) 2) (- x230 2)) (>= x230 (* 2 (x239 x230 2))))) (x39 x230 2) (x194 x230 2) (= (- x230 (x244 1 x230)) (* 2 (x239 x230 2)))))
(assert (x99 x78))
(assert (not (= (+ 1 x61) (x96 x62 5))))
(assert (not (= 4294967296 (+ x61 1))))
(assert (not (= 131072 (x96 x62 5))))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) 0)))
(assert (not (= 24706623 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 0)))
(assert (not (= 4294967296 (x192 (x165 161)))))
(assert (x138 x94))
(assert (and (x226 x203 128) (x126 x203 128) (x45 x203 128) (=> (< 0 128) (= x203 (+ (* 128 (x239 x203 128)) (x53 x203 128))))))
(assert (not (= 4294967296 (x96 x62 5))))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) 346787896)))
(assert (=> (>= 10000 (x165 193)) (not (= (x165 193) (x96 x62 5)))))
(assert (not (= (x192 x81) 549686827)))
(assert (not (= 1 (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (x42 x101))
(assert (x138 x111))
(assert (not (= (x96 x62 1) 1)))
(assert (= (=> (and (not (> x121 x77)) (= x33 (>= 224 x47)) (= (x15 (+ x47 1)) x121) (= (x246 128) x77)) (and x33 (=> (= (ite (>= 32 x47) (x192 (x165 161)) (ite (>= 64 x47) (x96 (x165 161) (x165 193)) (ite (>= 96 x47) (x173 (x165 161) (x165 193) (x165 225)) (ite (<= x47 128) (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (ite (<= x47 160) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) (ite (>= 192 x47) (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (ite (>= 224 x47) (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) x110))))))) x209) x163))) x142))
(assert (not (= (x192 x81) (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) 1)))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) 97199519776808029778168953285215024309695167179541945341261303444449322336256)))
(assert (=> (<= (x165 289) 10000) (not (= (x165 289) (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353))))))
(assert (not (= 4294967296 (x192 x81))))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 549686827)))
(assert (=> (<= x110 10000) (not (= (x96 x62 5) x110))))
(assert (=> (= (x192 x81) (x192 (x165 161))) (= x81 (x165 161))))
(assert (x138 x102))
(assert (not (= (x192 x81) (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (x138 x23))
(assert (x222 x133))
(assert (not (= 16635278 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (x222 65536))
(assert (=> (>= 10000 (x165 321)) (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x165 321)))))
(assert (x138 x176))
(assert (x222 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= (x165 257) 10000) (not (= (x96 x62 1) (x165 257)))))
(assert (and (x226 x133 1461501637330902918203684832716283019655932542976) (x126 x133 1461501637330902918203684832716283019655932542976) (x45 x133 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x133 (+ (* 1461501637330902918203684832716283019655932542976 (x239 x133 1461501637330902918203684832716283019655932542976)) (x53 x133 1461501637330902918203684832716283019655932542976))))))
(assert (=> (>= 10000 (x165 225)) (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x165 225)))))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (= (x170 x213 160) (x239 x213 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x192 (x165 161)) (x96 x62 1))))
(assert (not (= 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (not (= (x192 (x165 161)) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x222 x234))
(assert (x138 x18))
(assert (x138 x229))
(assert (= x156 (and x238 x135)))
(assert (x177 x180))
(assert (=> (>= 10000 (x165 225)) (not (= (x96 (x165 161) (x165 193)) (x165 225)))))
(assert (x138 x88))
(assert (x138 x218))
(assert (not (= (x192 (x165 161)) 549686827)))
(assert (not (= (x192 (x165 161)) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x138 x35))
(assert (not (= 4294967295 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (= (and x245 x190) x139))
(assert (not (= (+ x61 1) 18446744073709551615)))
(assert (x138 x110))
(assert (x138 x199))
(assert (not (= 4294967295 (x192 x81))))
(assert (x222 x101))
(assert (=> (>= 10000 (x165 193)) (not (= (x165 193) (x192 (x165 161))))))
(assert (=> (>= 10000 x62) (not (= x62 (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289))))))
(assert (= 0 (x30 x212)))
(assert (not (= (x192 (x165 161)) (x96 (x165 161) (x165 193)))))
(assert (=> (>= 10000 (x165 353)) (not (= (x173 (x165 161) (x165 193) (x165 225)) (x165 353)))))
(assert (and (x113 x229 32) (x82 x229 32) (=> (and (> x229 0) (> 32 0)) (and (> (* (x239 x229 32) 32) (- x229 32)) (>= x229 (* 32 (x239 x229 32))))) (x39 x229 32) (x194 x229 32) (= (- x229 (x244 31 x229)) (* 32 (x239 x229 32)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 1 x61))))
(assert (= x67 (=> (= x81 x65) x118)))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x96 (x165 161) (x165 193)))))
(assert (=> (<= x62 10000) (not (= (x96 x62 1) x62))))
(assert (not (= (+ x61 1) 5)))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) 549686827)))
(assert (x138 x198))
(assert (and (x113 x213 6277101735386680763835789423207666416102355444464034512896) (x82 x213 6277101735386680763835789423207666416102355444464034512896) (=> (and (> x213 0) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (> (* (x239 x213 6277101735386680763835789423207666416102355444464034512896) 6277101735386680763835789423207666416102355444464034512896) (- x213 6277101735386680763835789423207666416102355444464034512896)) (>= x213 (* 6277101735386680763835789423207666416102355444464034512896 (x239 x213 6277101735386680763835789423207666416102355444464034512896))))) (x39 x213 6277101735386680763835789423207666416102355444464034512896) (x194 x213 6277101735386680763835789423207666416102355444464034512896) (= (- x213 (x244 6277101735386680763835789423207666416102355444464034512895 x213)) (* 6277101735386680763835789423207666416102355444464034512896 (x239 x213 6277101735386680763835789423207666416102355444464034512896)))))
(assert (=> (<= x104 10000) (not (= x104 (x114 (x165 161) (x165 193) (x165 225) (x165 257))))))
(assert (=> (>= 10000 (x165 321)) (not (= (x96 x62 5) (x165 321)))))
(assert (= (=> (and (or (and (and (= x133 x213) (= x101 x180)) (not x86)) (and x86 (and (= x2 (= x87 65536)) (= (x244 65536 x101) x87) (= x180 0) (= (ite x2 0 x213) x133)))) (= (< x162 x198) x86)) x179) x89))
(assert (not (= 131072 (x96 x62 1))))
(assert (=> (>= 10000 x62) (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) x62))))
(assert (= (x30 x199) 0))
(assert (x138 x143))
(assert (not (= (x96 x62 5) 4294967295)))
(assert (x99 x81))
(assert (x138 x104))
(assert (=> (<= x187 10000) (not (= (x96 x62 1) x187))))
(assert (x6 x175))
(assert (x161 x234))
(assert (x138 x49))
(assert (=> (>= 10000 (x165 353)) (not (= (x96 (x165 161) (x165 193)) (x165 353)))))
(assert (=> (<= (x165 257) 10000) (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) (x165 257)))))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) 1666326814)))
(assert (=> (<= x104 10000) (not (= (+ 1 x61) x104))))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) 5)))
(assert (not (= (x192 x81) 131072)))
(assert (not x55))
(assert (=> (>= 10000 x78) (not (= x78 (x192 (x165 161))))))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) 18446744073709551615)))
(assert (not (= 5 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (not (= 7776000 (x96 x62 1))))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x96 x62 5))))
(assert (x138 x169))
(assert (x138 x185))
(assert (not (= (+ 1 x61) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) (x96 x62 5))))
(assert (=> (>= 10000 (x165 353)) (not (= (x165 353) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289))))))
(assert (=> (>= 10000 (x165 353)) (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x165 353)))))
(assert (= x117 (or x85 x156)))
(assert (=> (<= (x165 257) 10000) (not (= (x192 x81) (x165 257)))))
(assert (x222 1461501637330902918203684832716283019655932542976))
(assert (= 0 (x188 193)))
(assert (x138 x52))
(assert (x138 x27))
(assert (=> (>= 10000 (x165 321)) (not (= (x173 (x165 161) (x165 193) (x165 225)) (x165 321)))))
(assert (x119 127))
(assert (x138 x5))
(assert (not (= (x192 (x165 161)) (+ 1 x61))))
(assert (=> (>= 10000 x104) (not (= x104 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321))))))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 97199519776808029778168953285215024309695167179541945341261303444449322336256)))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= (x96 x62 1) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (x138 x14))
(assert (=> (>= 10000 x187) (not (= (x173 (x165 161) (x165 193) (x165 225)) x187))))
(assert (x138 x180))
(assert (=> (>= 10000 x62) (not (= (x192 (x165 161)) x62))))
(assert (not (= 16635278 (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= (x96 x62 1) (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (x134 6277101735386680763835789423207666416102355444464034512896))
(assert (and (x97 32 x168) (and (= (* (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x224 32 (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x224 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x224 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x168) (- (* x168 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168)))) (= (* 32 x168) (x224 32 x168)) (x147 32 x168) (x219 32 x168) (x83 32 x168) (x50 32 x168)))
(assert (x222 262144))
(assert (x119 1461501637330902918203684832716283019655932542975))
(assert (not (= 24706623 (x192 (x165 161)))))
(assert (not (= 18446744073709551615 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (x138 x26))
(assert (=> (<= x104 10000) (not (= x104 (x192 x81)))))
(assert (not (= (+ 1 x61) 346787896)))
(assert (not (= (x96 (x165 161) (x165 193)) (x173 (x165 161) (x165 193) (x165 225)))))
(assert (=> (>= 10000 (x165 289)) (not (= (x96 x62 5) (x165 289)))))
(assert (not (= (+ 1 x61) 4294967295)))
(assert (= 0 (x188 161)))
(assert (=> (>= 10000 (x165 161)) (not (= (x96 x62 5) (x165 161)))))
(assert (= x105 (=> (and (= (x244 18446744073709551615 x220) x216) (= x18 x21) (= (x15 (+ 31 x8)) x234) (= (x244 115792089237316195423570985008687907853269984665640564039457584007913129639904 x234) x127) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8) (and (< x8 32) (= (<= x8 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x220 (x58 x93)) (= x21 (x15 (+ x127 x93))) (not (< 18446744073709551615 x52)) (not (= x145 0)) (= x162 x52) (= x52 (x15 (+ x216 7776000)))) x89)))
(assert (x222 32))
(assert (x222 x180))
(assert (x134 x213))
(assert (x6 256))
(assert (=> (<= (x165 193) 10000) (not (= (x165 193) (x173 (x165 161) (x165 193) (x165 225))))))
(assert (x138 x234))
(assert (not (= (x96 x62 1) 549686827)))
(assert (not (= 1666326814 (x192 x81))))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) 346787896)))
(assert (= (x170 x124 248) (x239 x124 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x222 x220))
(assert (and (x113 x213 1461501637330902918203684832716283019655932542976) (x82 x213 1461501637330902918203684832716283019655932542976) (=> (and (> x213 0) (> 1461501637330902918203684832716283019655932542976 0)) (and (> (* (x239 x213 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (- x213 1461501637330902918203684832716283019655932542976)) (>= x213 (* 1461501637330902918203684832716283019655932542976 (x239 x213 1461501637330902918203684832716283019655932542976))))) (x39 x213 1461501637330902918203684832716283019655932542976) (x194 x213 1461501637330902918203684832716283019655932542976) (= (- x213 (x244 1461501637330902918203684832716283019655932542975 x213)) (* 1461501637330902918203684832716283019655932542976 (x239 x213 1461501637330902918203684832716283019655932542976)))))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x192 (x165 161)))))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) 65536)))
(assert (not (= (x96 (x165 161) (x165 193)) 97199519776808029778168953285215024309695167179541945341261303444449322336256)))
(assert (not (= 4294967295 (x192 (x165 161)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x96 x62 5))))
(assert (x99 x110))
(assert (x182 x203))
(assert (and (x226 x180 4294967296) (x126 x180 4294967296) (x45 x180 4294967296) (=> (< 0 4294967296) (= x180 (+ (* 4294967296 (x239 x180 4294967296)) (x53 x180 4294967296))))))
(assert (not (= 4294967296 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (not (= (+ x61 1) (x96 (x165 161) (x165 193)))))
(assert (x119 x101))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 346787896)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x96 (x165 161) (x165 193)))))
(assert (and (x226 x101 262144) (x126 x101 262144) (x45 x101 262144) (=> (< 0 262144) (= x101 (+ (* 262144 (x239 x101 262144)) (x53 x101 262144))))))
(assert (not (= (x192 (x165 161)) 65536)))
(assert (not (= (+ 1 x61) 0)))
(assert (= x9 (or x139 x117)))
(assert (x138 x7))
(assert (not (= (x96 (x165 161) (x165 193)) 24706623)))
(assert (=> (>= 10000 (x165 289)) (not (= (x96 (x165 161) (x165 193)) (x165 289)))))
(assert (not (= (x192 (x165 161)) 1)))
(assert (x134 2))
(assert (=> (>= 10000 (x165 161)) (not (= (+ 1 x61) (x165 161)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (=> (>= 10000 (x165 193)) (not (= (x165 193) (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353))))))
(assert (= x55 (=> (and (<= 0 x185) (>= x218 0) (= x193 x141) (= x14 (x241 x78)) (= x94 24706623) (= true x144) (< x112 1666326814) (<= 0 x14) (<= x104 1461501637330902918203684832716283019655932542975) (= x51 (= x37 131072)) (not (= x78 x187)) (and (< 35 x111) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x111) true)) (>= x23 0) x98 (= x23 (x241 x187)) (>= 1461501637330902918203684832716283019655932542975 x187) (<= x66 1461501637330902918203684832716283019655932542975) (<= x213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x78 0) (= x54 (x172 x78)) (>= x248 0) (>= 1461501637330902918203684832716283019655932542975 x218) (not (= x78 x104)) (= x223 false) (< x112 549686827) (>= 1461501637330902918203684832716283019655932542975 x185) (> x54 0) (= x248 x150) (<= 0 x159) (<= x26 1461501637330902918203684832716283019655932542975) (= 1 x5) (= 0 x141) (<= 0 x213) (<= 0 x26) (= x228 false) (<= x69 1461501637330902918203684832716283019655932542975) (= (x106 (- x111 4)) x211) (= 24706623 x112) (= false x225) (>= 1461501637330902918203684832716283019655932542975 x78) (= x62 x40) (>= 1461501637330902918203684832716283019655932542975 x167) (= x88 x150) (= x202 x62) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x211) true) (> 32 x211)) (> x211 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= 0 x88) (= (x43 x107) x213) x57 (< 0 x104) (> 346787896 x112) (= x159 (x241 x104)) (< 0 x187) (>= 1461501637330902918203684832716283019655932542975 x248) (= x101 (x170 x213 160)) (= x11 x218) (<= 0 x66) (not (> 4 x111)) (>= 1461501637330902918203684832716283019655932542975 x88) (= x37 (x244 131072 x101)) (not (= x104 x187)) (= x98 (> (x172 x78) 0)) x17 (<= 0 x69) (= x66 x10) (<= 0 x167) (= (< 0 (x172 x187)) x57) (= x107 (x96 x62 1)) (= x49 x11) (not (= 16635278 x112)) (= x62 x166) (= (> (x172 x104) 0) x17)) (and (=> (and (and (= (= x73 0) x123) (= x84 (x15 (+ 32 x44))) (= (x15 (+ 128 x84)) x181) (= (x244 1 x230) x80) (= x44 (x152 (* x168 32))) (= x230 (x132 x81)) (= (> 32 x73) x237) (= (x239 x230 2) x203) (= (ite (< 0 x80) x203 (x244 127 x203)) x73) (= x229 (x15 (+ x73 31))) (> x196 0) (= (x152 (- x80 (ite x237 1 0))) x196) (= (x239 x229 32) x168) (= (x96 x62 5) x81)) x51) (and (=> (and (= x62 x65) x123) x118) (=> (and (not x123) (= x235 (< 31 x73))) (and (=> (and x235 (and (= (x3 x61) x41) (= (x192 x81) x61) (= x28 (< 192 x236)) (= x236 (x15 (+ 160 x73))) (= (+ x61 1) x207))) (and (=> (not x28) x67) (=> x28 x206))) (=> (and (not x235) (and (= x34 (x152 (* 256 x175))) (= (x239 x232 256) x175) (= x65 x62) (= (x132 x81) x232))) x118))))) (=> (and (and (= 1 x160) (= x227 x62) (= 0 x120) (= x93 128)) (not x51)) x148)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x192 x81))))
(assert (not (= 549686827 (x96 x62 5))))
(assert (x138 x73))
(assert (= (or x31 x63 x158) x221))
(assert (x214 x230))
(assert (x99 x187))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (<= (x165 225) 10000) (not (= (x173 (x165 161) (x165 193) (x165 225)) (x165 225)))))
(assert (=> (>= 10000 x187) (not (= x187 (x114 (x165 161) (x165 193) (x165 225) (x165 257))))))
(assert (= 0 (x188 257)))
(assert (= true x22))
(assert (x99 x62))
(assert (x138 x202))
(assert (x138 x211))
(assert (x138 x127))
(assert (not (= (x96 (x165 161) (x165 193)) 0)))
(assert (=> (>= 10000 (x165 321)) (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x165 321)))))
(assert (x134 32))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x96 (x165 161) (x165 193)))))
(assert (=> (<= (x165 257) 10000) (not (= (x165 257) (x192 (x165 161))))))
(assert (=> (>= 10000 x62) (not (= x62 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321))))))
(assert (x119 x203))
(assert (x138 x124))
(assert (not (= 0 (x192 (x165 161)))))
(assert (x138 x154))
(assert (x138 x69))
(assert (x138 x34))
(assert (=> (>= 10000 x78) (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) x78))))
(assert (not (= 4294967295 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (= (x188 160) 0))
(assert (=> (>= 10000 (x165 257)) (not (= (x165 257) (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321))))))
(assert (x134 256))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) 4294967295)))
(assert (x222 x203))
(assert (not (= 131072 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (=> (<= (x165 225) 10000) (not (= (x165 225) (x96 x62 5)))))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) 65536)))
(assert (not (= 4294967296 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (x138 x166))
(assert (x138 x80))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) 1461501637330902918203684832716283019655932542975)))
(assert (x138 x236))
(assert (not (= 131072 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (= x206 (=> (and (= x20 (not (> x236 224))) (= (x3 x207) x102)) (and x67 x20))))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) 5)))
(assert (=> (>= 10000 (x165 353)) (not (= (x192 (x165 161)) (x165 353)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (= x63 (or x74 x75)))
(assert (= x75 (and x28 x243)))
(assert (and (x226 x101 131072) (x126 x101 131072) (x45 x101 131072) (=> (< 0 131072) (= x101 (+ (* 131072 (x239 x101 131072)) (x53 x101 131072))))))
(assert (x119 1))
(assert (=> (<= (x165 161) 10000) (not (= (x165 161) (x173 (x165 161) (x165 193) (x165 225))))))
(assert (not (= 18446744073709551615 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (x138 x168))
(assert (x138 x175))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) 131072)))
(assert (not (= 346787896 (x192 x81))))
(assert (=> (>= 10000 x78) (not (= x78 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353))))))
(assert (not (= (x192 x81) 5)))
(assert (not (= (+ 1 x61) 7776000)))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (and (x97 256 x175) (and (= (* (- x175 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (x224 256 (- x175 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 256 (- x175 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x175 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x224 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x175 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x224 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x175) (- (* x175 256) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x175)))) (= (* 256 x175) (x224 256 x175)) (x147 256 x175) (x219 256 x175) (x83 256 x175) (x50 256 x175)))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (not (= 0 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (x134 x229))
(assert (x119 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (+ 1 x61))))
(assert (= (and x190 (not x245)) x238))
(assert (= (=> (= (= 0 x120) x245) (and (=> (and (and (= (x170 x213 192) x162) (= x18 x93)) x245) x89) (=> (and (not x245) (and (or (and (and (< x8 4294967296) (= x145 1)) x135) (and (= x154 x145) (not x135))) (and (= x135 (< 0 x154)) (= (x15 (+ 4 x93)) x95)))) x105))) x148))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= 16635278 (+ 1 x61))))
(assert (x138 x44))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (= x13 (and (not x51) x22)))
(assert (not (= 1666326814 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (not (= 18446744073709551615 (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (= (x188 225) 0))
(assert (=> (>= 10000 (x165 161)) (not (= (x165 161) (x96 (x165 161) (x165 193))))))
(assert (not (= 346787896 (x96 (x165 161) (x165 193)))))
(assert (not (= (x96 (x165 161) (x165 193)) (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (x99 x104))
(assert (not (= (x96 (x165 161) (x165 193)) 4294967295)))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (+ 1 x61) 65536)))
(assert (=> (<= (x165 161) 10000) (not (= (x165 161) (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321))))))
(assert (x138 x62))
(assert (not (= 346787896 (x96 x62 5))))
(assert (= (and x235 x153) x243))
(assert (=> (>= 10000 (x165 257)) (not (= (+ x61 1) (x165 257)))))
(assert (=> (>= 10000 x62) (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) x62))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x192 x81))))
(assert (= x233 (or x157 x171)))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 549686827 (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)))))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) 0)))
(assert (x222 x230))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 131072)))
(assert (not (= 346787896 (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x96 x62 1))))
(assert (=> (<= x62 10000) (not (= (+ 1 x61) x62))))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x138 x220))
(assert (x138 x121))
(assert (x138 x232))
(assert (not (= (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321)) (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (x138 x150))
(assert (x138 x248))
(assert (=> (>= 10000 (x165 193)) (not (= (x165 193) (+ 1 x61)))))
(assert (x138 x21))
(assert (=> (= (x96 (x165 161) (x165 193)) (x96 x62 5)) (and (= (x165 193) 5) (= x62 (x165 161)))))
(assert (x138 x213))
(assert (=> (>= 10000 (x165 225)) (not (= (x165 225) (x242 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321))))))
(assert (x134 x232))
(assert (= (x239 x213 6277101735386680763835789423207666416102355444464034512896) (x170 x213 192)))
(assert (=> (= (x96 (x165 161) (x165 193)) (x96 x62 1)) (and (= x62 (x165 161)) (= 1 (x165 193)))))
(assert (=> (<= (x165 321) 10000) (not (= (x165 321) (+ 1 x61)))))
(assert (x138 x10))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) 65536)))
(assert (x138 x181))
(assert (not (= (x173 (x165 161) (x165 193) (x165 225)) (+ 1 x61))))
(assert (x138 x47))
(assert (=> (>= 10000 x187) (not (= (x96 (x165 161) (x165 193)) x187))))
(assert (not (= 4294967296 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (not (= 1666326814 (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (not (= (x96 x62 5) (x192 x81))))
(assert (=> (>= 10000 (x165 225)) (not (= (x165 225) (x192 x81)))))
(assert (not (= (x192 (x165 161)) 1666326814)))
(assert (x138 x40))
(assert (not (= (x96 x62 1) 18446744073709551615)))
(assert (=> (>= 10000 x110) (not (= x110 (x114 (x165 161) (x165 193) (x165 225) (x165 257))))))
(assert (= x208 (and x51 x22)))
(assert (not (= (x96 (x165 161) (x165 193)) 16635278)))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x96 x62 5))))
(assert (= x190 (or x233 x13)))
(assert (not (= (x96 x62 1) 346787896)))
(assert (x138 x196))
(assert (not (= (x192 x81) (x96 x62 1))))
(assert (=> (<= x62 10000) (not (= (x192 x81) x62))))
(assert (=> (>= 10000 (x165 321)) (not (= (x192 x81) (x165 321)))))
(assert (x119 4294967295))
(assert (x222 2))
(assert (=> (>= 10000 (x165 193)) (not (= (x165 193) (x192 x81)))))
(assert (not (= (+ x61 1) 131072)))
(assert (x138 x133))
(assert (=> (>= 10000 (x165 257)) (not (= (x165 257) (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353))))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x192 x81))))
(assert (x60 x133))
(assert (x99 x61))
(assert (not (= (x192 x81) (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= (x96 (x165 161) (x165 193)) 7776000)))
(assert (x6 32))
(assert (not (= (x96 x62 5) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) (x192 (x165 161)))))
(assert (not (= 1666326814 (+ 1 x61))))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) (x96 x62 5))))
(assert (not (= 5 (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)))))
(assert (not (= (x96 x62 5) 0)))
(assert (and (x113 x124 452312848583266388373324160190187140051835877600158453279131187530910662656) (x82 x124 452312848583266388373324160190187140051835877600158453279131187530910662656) (=> (and (> x124 0) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (> (* (x239 x124 452312848583266388373324160190187140051835877600158453279131187530910662656) 452312848583266388373324160190187140051835877600158453279131187530910662656) (- x124 452312848583266388373324160190187140051835877600158453279131187530910662656)) (>= x124 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x239 x124 452312848583266388373324160190187140051835877600158453279131187530910662656))))) (x39 x124 452312848583266388373324160190187140051835877600158453279131187530910662656) (x194 x124 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (- x124 (x244 452312848583266388373324160190187140051835877600158453279131187530910662655 x124)) (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x239 x124 452312848583266388373324160190187140051835877600158453279131187530910662656)))))
(assert (x138 x77))
(assert (not (= (x114 (x165 161) (x165 193) (x165 225) (x165 257)) 346787896)))
(assert (= x85 (and (not x135) x238)))
(assert (not (= (x200 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289)) (x114 (x165 161) (x165 193) (x165 225) (x165 257)))))
(assert (not (= 4294967296 (x173 (x165 161) (x165 193) (x165 225)))))
(assert (not (= (x192 x81) 16635278)))
(assert (not (= (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)) 24706623)))
(assert (=> (<= (x165 161) 10000) (not (= (x165 161) (x192 x81)))))
(assert (x138 x93))
(assert (not (= (+ 1 x61) (x96 x62 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x68 (x165 161) (x165 193) (x165 225) (x165 257) (x165 289) (x165 321) (x165 353)))))
(assert (=> (<= (x165 353) 10000) (not (= (x192 x81) (x165 353)))))
(check-sat)
(exit)
