(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x120 () Int)
(declare-fun x327 () Int)
(declare-fun x168 (Int) Int)
(declare-fun x272 () Int)
(declare-fun x115 (Int) Int)
(declare-fun x290 () Int)
(declare-fun x96 () Int)
(declare-fun x184 () Int)
(declare-fun x50 () Bool)
(declare-fun x102 () Int)
(declare-fun x51 () Int)
(declare-fun x1 (Int Int) Int)
(declare-fun x22 () Int)
(declare-fun x58 () Bool)
(declare-fun x74 () Bool)
(declare-fun x221 () Int)
(declare-fun x276 () Bool)
(declare-fun x331 () Bool)
(declare-fun x105 () Int)
(declare-fun x76 () Int)
(declare-fun x238 () Int)
(declare-fun x62 () Int)
(declare-fun x159 () Int)
(declare-fun x334 (Int Int) Int)
(declare-fun x302 () Bool)
(declare-fun x37 () Int)
(declare-fun x28 () Int)
(declare-fun x93 () Bool)
(declare-fun x284 () Int)
(declare-fun x237 () Int)
(declare-fun x313 () Int)
(declare-fun x48 () Bool)
(declare-fun x278 () Int)
(declare-fun x267 () Bool)
(declare-fun x111 () Bool)
(declare-fun x126 () Int)
(declare-fun x160 () Bool)
(declare-fun x311 () Int)
(declare-fun x101 () Bool)
(declare-fun x344 () Bool)
(declare-fun x307 () Int)
(declare-fun x346 () Bool)
(declare-fun x208 () Int)
(declare-fun x262 () Int)
(declare-fun x193 () Int)
(declare-fun x45 () Int)
(declare-fun x333 () Int)
(declare-fun x285 () Bool)
(declare-fun x296 () Int)
(declare-fun x287 () Int)
(declare-fun x54 () Bool)
(declare-fun x197 () Bool)
(declare-fun x171 () Bool)
(declare-fun x254 () Bool)
(declare-fun x264 () Int)
(declare-fun x68 (Int Int) Int)
(declare-fun x328 () Int)
(declare-fun x320 () Bool)
(declare-fun x81 () Int)
(declare-fun x281 () Int)
(declare-fun x323 () Int)
(declare-fun x177 () Int)
(declare-fun x189 () Bool)
(declare-fun x122 () Int)
(declare-fun x228 () Int)
(declare-fun x279 () Bool)
(declare-fun x155 () Int)
(declare-fun x46 (Int) Int)
(declare-fun x108 () Bool)
(declare-fun x252 () Int)
(declare-fun x275 () Int)
(declare-fun x88 () Int)
(declare-fun x128 () Int)
(declare-fun x338 () Int)
(declare-fun x94 () Int)
(declare-fun x83 () Int)
(declare-fun x209 () Int)
(declare-fun x161 () Bool)
(declare-fun x176 () Bool)
(declare-fun x134 () Int)
(declare-fun x149 () Int)
(declare-fun x42 () Int)
(declare-fun x261 () Bool)
(declare-fun x165 () Bool)
(declare-fun x293 () Bool)
(declare-fun x241 (Int) Int)
(declare-fun x172 () Bool)
(declare-fun x98 () Bool)
(declare-fun x97 () Bool)
(declare-fun x339 () Bool)
(declare-fun x5 () Int)
(declare-fun x49 () Int)
(declare-fun x104 () Int)
(declare-fun x18 () Int)
(declare-fun x236 () Int)
(declare-fun x31 () Int)
(declare-fun x103 () Int)
(declare-fun x3 () Int)
(declare-fun x90 () Int)
(declare-fun x60 () Int)
(declare-fun x82 () Int)
(declare-fun x95 () Int)
(declare-fun x70 () Int)
(declare-fun x117 () Bool)
(declare-fun x295 () Int)
(declare-fun x6 () Bool)
(declare-fun x314 () Int)
(declare-fun x153 () Bool)
(declare-fun x282 () Int)
(declare-fun x255 () Int)
(declare-fun x180 () Int)
(declare-fun x280 () Int)
(declare-fun x194 () Bool)
(declare-fun x137 () Int)
(declare-fun x170 () Bool)
(declare-fun x213 () Int)
(declare-fun x4 () Bool)
(declare-fun x44 () Int)
(declare-fun x150 () Bool)
(declare-fun x138 () Int)
(declare-fun x124 () Int)
(declare-fun x304 () Int)
(declare-fun x47 () Int)
(declare-fun x86 () Bool)
(declare-fun x66 () Int)
(declare-fun x167 () Bool)
(declare-fun x186 () Bool)
(declare-fun x112 () Int)
(declare-fun x298 () Int)
(declare-fun x324 () Bool)
(declare-fun x257 () Int)
(declare-fun x291 () Int)
(declare-fun x91 () Bool)
(declare-fun x11 () Int)
(declare-fun x133 () Int)
(declare-fun x234 () Int)
(declare-fun x185 () Int)
(declare-fun x123 () Bool)
(declare-fun x72 () Int)
(declare-fun x100 () Bool)
(declare-fun x71 () Bool)
(declare-fun x143 () Int)
(declare-fun x73 () Int)
(declare-fun x336 (Int Int) Int)
(declare-fun x330 () Int)
(declare-fun x15 () Int)
(declare-fun x106 (Int Int) Int)
(declare-fun x33 () Bool)
(declare-fun x245 () Bool)
(declare-fun x230 () Int)
(declare-fun x204 () Bool)
(declare-fun x316 () Bool)
(declare-fun x163 () Bool)
(declare-fun x32 () Bool)
(declare-fun x157 () Bool)
(declare-fun x19 () Bool)
(declare-fun x36 () Int)
(declare-fun x326 () Int)
(declare-fun x256 () Int)
(declare-fun x55 () Int)
(declare-fun x121 () Int)
(declare-fun x132 () Bool)
(declare-fun x52 () Int)
(declare-fun x151 () Bool)
(declare-fun x269 () Int)
(declare-fun x190 () Bool)
(declare-fun x140 () Int)
(declare-fun x141 (Int) Int)
(declare-fun x7 () Int)
(declare-fun x89 () Bool)
(declare-fun x41 () Int)
(declare-fun x30 () Int)
(declare-fun x226 () Bool)
(declare-fun x203 () Int)
(declare-fun x292 () Bool)
(declare-fun x23 () Int)
(declare-fun x260 () Int)
(declare-fun x64 () Int)
(declare-fun x119 () Int)
(declare-fun x308 () Bool)
(declare-fun x43 () Int)
(declare-fun x59 () Bool)
(declare-fun x277 () Int)
(declare-fun x294 () Int)
(declare-fun x343 () Int)
(declare-fun x80 () Int)
(declare-fun x142 () Int)
(declare-fun x65 () Int)
(declare-fun x288 () Int)
(declare-fun x20 () Int)
(declare-fun x139 () Int)
(declare-fun x87 () Bool)
(declare-fun x211 () Int)
(declare-fun x85 () Int)
(declare-fun x114 () Int)
(declare-fun x329 () Bool)
(declare-fun x322 () Int)
(declare-fun x225 () Bool)
(declare-fun x219 () Int)
(declare-fun x25 () Int)
(declare-fun x129 () Int)
(declare-fun x229 () Int)
(declare-fun x169 () Int)
(declare-fun x130 () Bool)
(declare-fun x303 () Bool)
(declare-fun x319 () Int)
(declare-fun x2 (Int) Int)
(declare-fun x220 () Int)
(declare-fun x315 () Int)
(declare-fun x248 () Bool)
(declare-fun x341 () Bool)
(declare-fun x188 () Bool)
(declare-fun x198 () Bool)
(declare-fun x125 (Int) Int)
(declare-fun x235 () Bool)
(declare-fun x182 () Bool)
(declare-fun x107 () Int)
(declare-fun x286 () Bool)
(declare-fun x195 () Bool)
(declare-fun x205 () Int)
(declare-fun x135 () Bool)
(declare-fun x8 () Bool)
(declare-fun x332 () Bool)
(declare-fun x222 () Int)
(declare-fun x283 () Int)
(declare-fun x305 (Int Int) Int)
(declare-fun x147 () Bool)
(declare-fun x109 () Int)
(declare-fun x136 () Int)
(declare-fun x127 () Int)
(declare-fun x268 () Int)
(declare-fun x214 () Int)
(declare-fun x297 (Int) Int)
(declare-fun x10 () Int)
(declare-fun x183 () Bool)
(declare-fun x17 () Int)
(declare-fun x175 () Int)
(declare-fun x77 () Int)
(declare-fun x79 () Bool)
(declare-fun x345 () Int)
(declare-fun x342 () Int)
(declare-fun x24 () Bool)
(declare-fun x318 () Bool)
(declare-fun x191 () Int)
(declare-fun x40 (Int Int) Int)
(declare-fun x110 () Int)
(declare-fun x57 () Int)
(declare-fun x310 (Int) Int)
(declare-fun x162 () Int)
(declare-fun x250 () Bool)
(declare-fun x224 () Bool)
(declare-fun x274 () Int)
(declare-fun x299 () Int)
(declare-fun x216 () Int)
(declare-fun x215 () Bool)
(declare-fun x78 () Int)
(declare-fun x266 () Int)
(declare-fun x273 () Bool)
(declare-fun x61 () Bool)
(declare-fun x154 () Int)
(declare-fun x306 () Bool)
(declare-fun x251 () Int)
(declare-fun x12 () Int)
(declare-fun x145 () Int)
(declare-fun x166 () Int)
(declare-fun x309 () Int)
(declare-fun x258 () Int)
(define-fun x340 ((x16 Int)) Int (ite (and (>= x16 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x16)) x16 (- x16 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x249 ((x16 Int)) Int (ite (and (>= x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x16)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x16) x16))
(define-fun x212 ((x16 Int)) Int (ite (and (>= x16 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x16)) x16 (ite (and (< x16 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x16 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x16 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (> 0 x16) (>= x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x16 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x40 x16 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x196 ((x69 Int)) Bool (and (< x69 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x69 0)))
(define-fun x243 ((x69 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x69) (>= x69 0)))
(define-fun x210 ((x69 Int) (x181 Int)) Bool (= (x305 x181 x69) (x305 x69 x181)))
(define-fun x207 ((x69 Int) (x181 Int)) Bool (and (=> (and (> 0 x181) (> x69 0)) (> 0 (x305 x69 x181))) (=> (and (< 0 x69) (< 0 x181)) (< 0 (x305 x69 x181))) (=> (and (< x69 0) (> 0 x181)) (< 0 (x305 x69 x181))) (=> (and (> 0 x69) (> x181 0)) (> 0 (x305 x69 x181)))))
(define-fun x63 ((x69 Int) (x181 Int)) Bool (=> (and (> x181 0) (< 0 x69)) (= (= (x68 (x212 (x305 x69 x181)) x69) x181) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x305 x69 x181)))))
(define-fun x14 ((x69 Int) (x181 Int)) Bool (=> (and (not (= 0 x69)) (not (= 0 x181))) (and (= (x68 (x305 x69 x181) x69) x181) (= x69 (x68 (x305 x69 x181) x181)))))
(define-fun x67 ((x69 Int) (x181 Int)) Bool (=> (and (> x69 0) (< 0 x181)) (= (> (x305 x69 x181) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (x68 115792089237316195423570985008687907853269984665640564039457584007913129639935 x69) x181))))
(define-fun x99 ((x69 Int) (x181 Int)) Bool (and (= (x212 (x305 x69 x181)) (x212 (x305 (- x69 115792089237316195423570985008687907853269984665640564039457584007913129639936) x181))) (= (x212 (x305 (- x69 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x181 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x212 (x305 x69 x181))) (= (x212 (x305 x69 x181)) (x212 (x305 x69 (- x181 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x223 ((x69 Int) (x181 Int)) Bool (and (=> (and (and (> x181 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x181)) (and (<= x69 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x69 0))) (= (>= (x68 57896044618658097711785492504343953926634992332820282019728792003956564819968 x69) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x181)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x305 x69 (- x181 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x181) (<= x181 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (<= x69 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x69 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x69) (x68 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x181))) (<= (x305 (- x69 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x181 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 0 x181) (<= x181 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x69) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x69))) (= (>= (x305 (- x69 115792089237316195423570985008687907853269984665640564039457584007913129639936) x181) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x69) (x68 57896044618658097711785492504343953926634992332820282019728792003956564819968 x181)))) (=> (and (and (> x69 0) (<= x69 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x181) (> x181 0))) (= (<= (x305 x69 x181) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x68 57896044618658097711785492504343953926634992332820282019728792003956564819967 x181) x69)))))
(define-fun x263 ((x69 Int) (x181 Int)) Bool (and (x210 x69 x181) (x223 x69 x181) (x99 x69 x181) (x67 x69 x181) (x63 x69 x181) (x207 x69 x181) (x14 x69 x181)))
(define-fun x187 ((x69 Int)) Bool (and (= (x305 0 x69) 0) (= (x305 x69 0) 0)))
(define-fun x201 ((x69 Int)) Bool (and (= x69 (x305 1 x69)) (= (x305 x69 1) x69)))
(define-fun x259 ((x69 Int)) Bool (and (x187 x69) (x201 x69)))
(define-fun x21 ((x69 Int) (x181 Int)) Bool (=> (and (> x181 0) (< 0 x69)) (and (>= (x68 x69 x181) 0) (>= x69 (x68 x69 x181)))))
(define-fun x164 ((x69 Int) (x181 Int)) Bool (=> (and (and (<= 0 x69) (< x69 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x181 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x181))) (and (<= 0 (x68 x69 x181)) (< (x68 x69 x181) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x29 ((x69 Int) (x181 Int)) Bool (=> (and (< x181 x69) (> x181 1)) (> x69 (x68 x69 x181))))
(define-fun x118 ((x69 Int) (x181 Int)) Bool (=> (and (< 0 x69) (< 0 x181)) (= (< x69 x181) (= 0 (x68 x69 x181)))))
(define-fun x174 ((x69 Int) (x181 Int)) Bool (=> (and (> x181 0) (< 0 x69)) (and (>= x69 (x305 (x68 x69 x181) x181)) (< (- x69 x181) (x305 (x68 x69 x181) x181)))))
(define-fun x242 ((x69 Int) (x181 Int)) Bool (and (x118 x69 x181) (x164 x69 x181) (x21 x69 x181) (x29 x69 x181) (x174 x69 x181)))
(define-fun x202 ((x69 Int)) Bool (= 0 (x68 0 x69)))
(define-fun x325 ((x69 Int)) Bool (= x69 (x68 x69 1)))
(define-fun x27 ((x69 Int)) Bool (=> (not (= 0 x69)) (= 1 (x68 x69 x69))))
(define-fun x317 ((x69 Int)) Bool (and (x27 x69) (x325 x69) (x202 x69)))
(define-fun x146 ((x69 Int)) Bool (and (= (x106 x69 115792089237316195423570985008687907853269984665640564039457584007913129639935) x69) (= x69 (x106 115792089237316195423570985008687907853269984665640564039457584007913129639935 x69))))
(define-fun x84 ((x69 Int)) Bool (and (= 0 (x106 0 x69)) (= (x106 x69 0) 0)))
(define-fun x227 ((x69 Int)) Bool (= (x106 x69 x69) x69))
(define-fun x179 ((x69 Int)) Bool (and (x146 x69) (x84 x69) (x227 x69)))
(define-fun x218 ((x69 Int) (x181 Int)) Bool (= (x106 x69 x181) (x106 x181 x69)))
(define-fun x38 ((x69 Int) (x181 Int)) Bool (and (>= (x106 x69 x181) 0) (=> (<= 0 x69) (<= (x106 x69 x181) x69)) (=> (>= x181 0) (>= x181 (x106 x69 x181)))))
(define-fun x173 ((x69 Int) (x181 Int)) Bool (and (x38 x69 x181) (x218 x69 x181)))
(define-fun x35 ((x69 Int)) Bool (= (x106 x69 1461501637330902918203684832716283019655932542975) (x40 x69 1461501637330902918203684832716283019655932542976)))
(define-fun x265 ((x69 Int)) Bool (and (x173 x69 1461501637330902918203684832716283019655932542975) (x35 x69)))
(define-fun x131 ((x69 Int) (x181 Int)) Bool (and (> x181 (x40 x69 x181)) (<= 0 (x40 x69 x181))))
(define-fun x56 ((x69 Int) (x181 Int)) Bool (=> (and (< 0 x181) (>= x69 0)) (= (= x69 (x40 x69 x181)) (< x69 x181))))
(define-fun x26 ((x69 Int) (x181 Int)) Bool (=> (and (< 0 x181) (and (>= x69 x181) (< x69 (+ x181 x181)))) (= (- x69 x181) (x40 x69 x181))))
(define-fun x34 ((x69 Int)) Bool (= (x40 0 x69) 0))
(define-fun x9 ((x69 Int)) Bool (= (x40 x69 1) 0))
(define-fun x13 ((x69 Int)) Bool (= (x40 x69 x69) 0))
(define-fun x178 ((x69 Int)) Bool (and (x13 x69) (x9 x69) (x34 x69)))
(define-fun x240 ((x69 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1 x69 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1 115792089237316195423570985008687907853269984665640564039457584007913129639935 x69) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x244 ((x69 Int)) Bool (and (= (x1 x69 0) x69) (= x69 (x1 0 x69))))
(define-fun x233 ((x69 Int)) Bool (= (x1 x69 x69) x69))
(define-fun x217 ((x69 Int)) Bool (and (x240 x69) (x233 x69) (x244 x69)))
(define-fun x300 ((x69 Int) (x181 Int)) Bool (= (x1 x69 x181) (x1 x181 x69)))
(define-fun x301 ((x69 Int) (x181 Int)) Bool (and (<= (x1 x69 x181) (+ x69 x181)) (=> (>= x181 0) (<= x181 (x1 x69 x181))) (=> (<= 0 x69) (>= (x1 x69 x181) x69))))
(define-fun x158 ((x69 Int) (x181 Int)) Bool (and (x301 x69 x181) (x300 x69 x181)))
(define-fun x271 ((x247 Int)) Int (x46 x247))
(define-fun x152 ((x247 Int)) Int (ite (= x274 x247) x57 (x310 x247)))
(define-fun x246 ((x247 Int)) Int (ite (= x15 x247) x236 (x152 x247)))
(define-fun x253 ((x247 Int)) Int (ite x261 (x310 x247) (x246 x247)))
(define-fun x53 ((x247 Int)) Int (x141 x247))
(define-fun x116 ((x247 Int)) Int (ite (= x247 x208) x128 (x53 x247)))
(define-fun x232 ((x247 Int)) Int (ite (= x247 128) x323 (x125 x247)))
(define-fun x335 ((x247 Int)) Int (ite (= 128 x247) x109 (x232 x247)))
(define-fun x321 ((x247 Int)) Int (ite (= 160 x247) x323 (x335 x247)))
(define-fun x199 ((x247 Int)) Int (ite (= x247 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x321 x247)))
(define-fun x148 ((x247 Int)) Int (ite (= x247 132) x25 (x199 x247)))
(define-fun x239 ((x247 Int)) Int (ite (= x247 164) x109 (x148 x247)))
(define-fun x337 ((x247 Int)) Int (ite (= x105 x247) x258 (x253 x247)))
(define-fun x289 ((x247 Int)) Int (ite (= 128 x247) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x168 x247)))
(define-fun x206 ((x247 Int)) Int (ite (= 132 x247) x82 (x289 x247)))
(define-fun x200 ((x247 Int)) Int (ite (= 164 x247) x169 (x206 x247)))
(define-fun x312 ((x247 Int)) Int (ite (= x247 196) x256 (x200 x247)))
(define-fun x92 ((x69 Int) (x181 Int) (x39 Int) (x231 Int)) Bool (=> (and (<= 0 x181) (<= x69 x39) (>= x231 x181) (>= x69 0)) (>= (x305 x39 x231) (x305 x69 x181))))
(define-fun x270 ((x69 Int) (x181 Int) (x39 Int) (x231 Int)) Bool (=> (= x69 x39) (= (x305 x69 (- x181 x231)) (- (x305 x69 x181) (x305 x39 x231)))))
(assert (x243 x12))
(assert (x243 x62))
(assert (= (=> (and (= (= 0 x3) x58) (or (not x58) x58)) x4) x153))
(assert (not (= (x336 x154 3) (x336 x238 2))))
(assert (not (= (x336 x238 1) 117300739)))
(assert (x217 x64))
(assert (=> (>= 10000 x82) (not (= (x336 x238 1) x82))))
(assert (=> (>= 10000 x82) (not (= (x336 x96 3) x82))))
(assert (not (= (x336 x129 1) 117300739)))
(assert (x259 x323))
(assert (=> (= (x336 x82 x282) (x336 x238 2)) (and (= x82 x238) (= 2 x282))))
(assert (x243 x177))
(assert (not (= 3026235284 (x336 x169 x66))))
(assert (x179 x345))
(assert (not (= 157198259 (x336 x238 2))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x336 x82 x282))))
(assert (not (= 2 (x336 x154 3))))
(assert (x92 x323 x136 x256 x138))
(assert (x158 x81 x64))
(assert (=> (>= 10000 x154) (not (= (x336 x169 1) x154))))
(assert (x270 x138 x256 x323 x136))
(assert (x263 x323 (- x136 x138)))
(assert (x243 x205))
(assert (x243 x129))
(assert (x243 x277))
(assert (not (= (x336 x90 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 404098525 (x336 x129 1))))
(assert (x243 x112))
(assert (not (= 1889567281 (x336 x169 x66))))
(assert (x265 x31))
(assert (not (= (x336 x145 4) 2835717307)))
(assert (not (= (x336 x96 3) 1461501637330902918203684832716283019655932542975)))
(assert (not (= 3026235284 (x336 x169 1))))
(assert (= x19 (and (not x248) x331)))
(assert (x270 x138 x256 x136 x323))
(assert (and (x63 2 x229) (= (x305 2 x229) (* 2 x229)) (x223 2 x229) (x67 2 x229) (x14 2 x229) (and (= (* 2 (- x229 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x305 2 (- x229 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x305 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x229 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x229 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x229 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (- (* x229 2) (* x229 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x305 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x229))) (x99 2 x229)))
(assert (=> (<= x90 10000) (not (= x90 (x336 x82 x282)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x336 x90 1))))
(assert (x243 x169))
(assert (not (= 826074471 (x336 x145 4))))
(assert (not (= (x336 x169 x66) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (=> (>= 10000 x145) (not (= (x336 x129 1) x145))))
(assert (=> (= (x336 x90 1) (x336 x82 x282)) (and (= x282 1) (= x82 x90))))
(assert (not (= (x336 x90 1) (x336 x96 3))))
(assert (=> (<= x129 10000) (not (= x129 (x336 x82 x282)))))
(assert (=> (>= 10000 x169) (not (= x169 (x336 x90 1)))))
(assert (not (= 4 (x336 x169 1))))
(assert (not (= (x336 x129 1) 1851080549)))
(assert (not (= (x336 x238 1) 1289409798)))
(assert (=> (<= x90 10000) (not (= (x336 x145 4) x90))))
(assert (not (= (x336 x82 x282) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x173 x309 x18))
(assert (not (= (x336 x154 3) 2835717307)))
(assert (not (= (x336 x154 3) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= true x276))
(assert (=> (<= x90 10000) (not (= (x336 x238 1) x90))))
(assert (not (= (x336 x154 3) (x336 x238 1))))
(assert (x243 x72))
(assert (not (= 3017275065 (x336 x96 3))))
(assert (x243 x107))
(assert (=> (>= 10000 x129) (not (= (x336 x169 x66) x129))))
(assert (not (= (x336 x169 1) (x336 x154 3))))
(assert (not (= (x336 x90 1) 1889567281)))
(assert (not (= 2835717307 (x336 x129 1))))
(assert (x243 x298))
(assert (=> (>= 10000 x238) (not (= x238 (x336 x169 1)))))
(assert (x265 x20))
(assert (not (= 1 (x336 x129 1))))
(assert (=> (>= 10000 x82) (not (= x82 (x336 x169 x66)))))
(assert (=> (= (x336 x96 3) (x336 x154 3)) (= x154 x96)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x336 x238 1))))
(assert (not (= 1889567281 (x336 x169 1))))
(assert (not (= (x336 x154 3) 1)))
(assert (=> (>= 10000 x96) (not (= x96 (x336 x82 x282)))))
(assert (=> (= (x336 x129 1) (x336 x238 1)) (= x129 x238)))
(assert (x317 x283))
(assert (x179 x31))
(assert (x243 x22))
(assert (x243 x175))
(assert (= x279 (and x93 x108)))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x336 x238 2))))
(assert (x259 x136))
(assert (=> (<= x90 10000) (not (= x90 (x336 x90 1)))))
(assert (not (= (x336 x82 x282) 1289409798)))
(assert (x243 x338))
(assert (not (= 1 (x336 x96 3))))
(assert (not (= (x336 x169 1) 3337024914)))
(assert (not (= (x336 x90 1) 3026235284)))
(assert (x243 x44))
(assert (=> (<= x169 10000) (not (= x169 (x336 x169 x66)))))
(assert (=> (>= 10000 x154) (not (= x154 (x336 x238 2)))))
(assert (not (= (x336 x82 x282) 3)))
(assert (x243 x185))
(assert (= (=> (and (not (> 4 x260)) (= (x249 (- x260 4)) x290) (= x122 128) (not (= 157198259 x11)) (> x114 0) (not (= 404098525 x11)) (= x238 x83) (= x11 599290589) (> 826074471 x11) (= x260 100) (not (= 117300739 x11)) (= x114 (x115 x234)) (not (= x299 0)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x277) (= x120 x256) (= x194 (or (> x290 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x290 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x290))))) (= x90 x169)) (and (=> x194 x329) (=> (and (and (= x238 x272) (= x165 true)) (not x194)) (and (=> (not x165) x329) (=> (and (and (= x78 x90) (= x101 true)) x165) (and (=> (not x101) x329) (=> (and x101 (and (= x120 x311) (= x30 (x336 x238 1)) (= x235 (> x256 x333)) (<= 0 x333) (= (x310 x30) x333) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (= x248 (< x333 x120)) (not x235)) (and (=> x248 x329) (=> (and (and (= (x249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x120)) x193) (= (x249 (- x333 x120)) x57) (= x55 (x152 x73)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x55) (= x73 (x336 x90 1)) (<= 0 x55) (= x274 (x336 x238 1)) (= (> x55 x193) x150)) (not x248)) (and (=> x150 x329) (=> (and (not x150) (and (= x215 (> x55 x236)) (= x236 (x340 (+ x120 x55))))) (and (=> (and (not x215) (and (= (> x120 x343) x346) (>= x343 0) (<= x343 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x15 (x336 x90 1)) (= (x336 x238 2) x66) (= (x336 x169 x66) x28) (= (x2 x28) x343))) (and (=> (and (= x332 (> x120 x343)) (not x346)) (and (=> x332 x329) (=> (and (and (= 1 x18) (= x185 x44) (= x284 (x249 (- x343 x120))) (= x138 x230) (= 32 x264)) (not x332)) x267))) (=> x346 x329))) (=> x215 x329))))))) (=> x235 x329))))))))) x183))
(assert (not (= 330252341 (x336 x96 3))))
(assert (x243 x228))
(assert (not (= (x336 x82 x282) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x92 x138 x256 x323 x136))
(assert (= x4 (=> (and (and (= x5 (x106 x72 x107)) (= x184 (x1 x5 x219)) (= x330 x109) (= x107 (ite (< 31 x313) 1 0)) (= x72 (ite (= 1 x96) 1 0)) (= (ite (= x313 0) 1 0) x219) (< 0 x338) (= x338 (x106 x184 x3))) (and (= x330 x77) (= x255 (* x229 2)) (= x77 x229) (= x12 x60) (= 2 x23) (= x190 (<= x60 x255)))) (and x190 (=> (and (= x49 x77) (= x159 x12) (= x119 2) (= (>= x47 x49) x245) (= x47 (* x159 2))) x245)))))
(assert (x243 x343))
(assert (not (= 1851080549 (x336 x82 x282))))
(assert (=> (<= x82 10000) (not (= (x336 x90 1) x82))))
(assert (x243 x37))
(assert (x243 x268))
(assert (not (= (x336 x145 4) (x336 x238 2))))
(assert (x243 x139))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x336 x90 1))))
(assert (=> (>= 10000 x154) (not (= x154 (x336 x145 4)))))
(assert (=> (= (x336 x238 1) (x336 x169 x66)) (and (= x169 x238) (= x66 1))))
(assert (not (= 4 (x336 x238 2))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x336 x238 1))))
(assert (= (and x147 x276) x320))
(assert (=> (= (x336 x82 x282) (x336 x129 1)) (and (= x82 x129) (= 1 x282))))
(assert (and (= (x305 9 9) 81) (= (x305 3 3) 9) (= 81 (x305 27 3)) (= (x305 9 3) 27)))
(assert (= (or x32 x316) x188))
(assert (not (= 2376452955 (x336 x90 1))))
(assert (x243 x159))
(assert (not (= 3026235284 (x336 x238 2))))
(assert (not (= 2 (x336 x82 x282))))
(assert (x179 x3))
(assert (not (= (x336 x96 3) (x336 x238 1))))
(assert (=> (<= x234 10000) (not (= x234 (x336 x145 4)))))
(assert (not (= 3026235284 (x336 x96 3))))
(assert (not (= 2 (x336 x90 1))))
(assert (x217 x81))
(assert (x92 x136 x323 x256 x138))
(assert (x179 x45))
(assert (not (= 1889567281 (x336 x238 2))))
(assert (= (and (not x59) x318) x111))
(assert (x243 x42))
(assert (not (= (x336 x129 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 3 (x336 x169 1))))
(assert (not (= 3121116754 (x336 x238 2))))
(assert (x243 x238))
(assert (x270 x323 x136 x256 x138))
(assert (not (= 330252341 (x336 x238 1))))
(assert (x243 x25))
(assert (= (and (not x235) x89) x331))
(assert (not (= 3121116754 (x336 x169 1))))
(assert (not (= (x336 x154 3) 3017275065)))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x336 x145 4))))
(assert (not (= (x336 x238 1) 4)))
(assert (x243 x311))
(assert (x259 x138))
(assert (x242 x283 x256))
(assert (not (= (x336 x82 x282) 3017275065)))
(assert (x317 x191))
(assert (x243 x10))
(assert (= (and x19 x150) x98))
(assert (not (= (x336 x145 4) (x336 x90 1))))
(assert (not (= 404098525 (x336 x238 2))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x336 x145 4))))
(assert (not (= 3337024914 (x336 x238 2))))
(assert (not (= 157198259 (x336 x154 3))))
(assert (not (= 117300739 (x336 x154 3))))
(assert (not (= (x336 x145 4) 330252341)))
(assert (=> (>= 10000 x90) (not (= (x336 x169 x66) x90))))
(assert (not (= (x336 x90 1) 826074471)))
(assert (not (= 3337024914 (x336 x154 3))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x336 x129 1))))
(assert (not (= (x336 x238 2) (x336 x96 3))))
(assert (x243 x252))
(assert (x196 x282))
(assert (not (= 2 (x336 x169 1))))
(assert (=> (<= x129 10000) (not (= x129 (x336 x129 1)))))
(assert (x243 x83))
(assert (= (and x285 x61) x151))
(assert (not (= 330252341 (x336 x238 2))))
(assert (not (= (x336 x145 4) 1889567281)))
(assert (not (= 1289409798 (x336 x90 1))))
(assert (=> (<= x154 10000) (not (= (x336 x238 1) x154))))
(assert (x259 (- x256 x136)))
(assert (x243 x278))
(assert (not (= 1 (x336 x90 1))))
(assert (=> (<= x145 10000) (not (= x145 (x336 x145 4)))))
(assert (=> (>= 10000 x145) (not (= x145 (x336 x154 3)))))
(assert (=> (<= x90 10000) (not (= (x336 x238 2) x90))))
(assert (x173 x304 x251))
(assert (x243 x333))
(assert (x243 x258))
(assert (not (= (x336 x82 x282) 117300739)))
(assert (not (= 2 (x336 x145 4))))
(assert (not (= 330252341 (x336 x169 x66))))
(assert (x243 x94))
(assert (x263 x138 (- x256 x323)))
(assert (not (= 3026235284 (x336 x129 1))))
(assert (not (= (x336 x238 1) 3121116754)))
(assert (x270 x256 x138 x136 x323))
(assert (x263 x256 (- x138 x136)))
(assert (x243 x304))
(assert (not (= (x336 x238 1) 1)))
(assert (not (= (x336 x154 3) (x336 x129 1))))
(assert (x243 x124))
(assert (=> (<= x169 10000) (not (= (x336 x169 1) x169))))
(assert (x243 x269))
(assert (=> (= (x336 x96 3) (x336 x169 x66)) (and (= x96 x169) (= 3 x66))))
(assert (not (= 3 (x336 x154 3))))
(assert (and (x63 2 x159) (= (x305 2 x159) (* 2 x159)) (x223 2 x159) (x67 2 x159) (x14 2 x159) (and (= (* 2 (- x159 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x305 2 (- x159 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x305 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x159 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x159 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x159 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (- (* x159 2) (* x159 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x305 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x159))) (x99 2 x159)))
(assert (= x50 (and x130 (not x306))))
(assert (not (= 3337024914 (x336 x129 1))))
(assert (not (= 1889567281 (x336 x82 x282))))
(assert (x259 (- x136 x256)))
(assert (not (= (x336 x169 1) 157198259)))
(assert (=> (= (x336 x90 1) (x336 x169 1)) (= x90 x169)))
(assert (= (and (not x204) x176) x197))
(assert (not (= (x336 x82 x282) 826074471)))
(assert (=> (<= x234 10000) (not (= (x336 x238 1) x234))))
(assert (=> (<= x154 10000) (not (= x154 (x336 x82 x282)))))
(assert (not (= (x336 x90 1) 157198259)))
(assert (x178 x31))
(assert (not (= 2376452955 (x336 x145 4))))
(assert (x243 x319))
(assert (=> (<= x129 10000) (not (= x129 (x336 x238 1)))))
(assert (= x108 (or x226 x261)))
(assert (not (= 599290589 (x336 x145 4))))
(assert (not (= (x336 x82 x282) 157198259)))
(assert (and (x56 x20 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x20 (+ (* 1461501637330902918203684832716283019655932542976 (x68 x20 1461501637330902918203684832716283019655932542976)) (x40 x20 1461501637330902918203684832716283019655932542976)))) (x131 x20 1461501637330902918203684832716283019655932542976) (x26 x20 1461501637330902918203684832716283019655932542976)))
(assert (= x261 (or (and (not x101) x117) (and x273 (not x165)) x344 (and x235 x89) x341 x98 (and x6 x346) (and x215 x339) (and x194 x87))))
(assert (x243 x234))
(assert (= x97 (=> (and (not (< x294 4)) (= x110 128) (= x134 (x249 (- x136 x109))) (= x103 (x115 x234)) (= (x249 (- x294 4)) x70) (= 2835717307 x298) (not (= 2514000705 x298)) (= x303 (or (and (= (<= x70 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x70)) (> x70 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x177) (= x296 (x336 x96 3)) (not (< x136 x109)) (<= x155 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 0 x109)) (= x129 x25) (= x109 x315) (not (< x177 x323)) (= x65 (x249 (- x155 x323))) (not (= x298 1889567281)) (not (< x298 826074471)) (<= 0 x136) (= x328 (x249 (- x177 x323))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x139) (not (= x298 826074471)) (= x96 (x106 1461501637330902918203684832716283019655932542975 x20)) (= (x116 x296) x177) (<= 0 x155) (<= 0 x177) (= 68 x294) (< 0 x103) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x136)) (and (=> (and x303 (and (= x220 x313) (= 0 x3))) x153) (=> (and (and (= x204 (= x25 x129)) (= x137 x129)) (not x303)) (and (=> (and x204 (and (= x211 x315) (= x216 (x336 x169 1)) (= x285 (> x109 x94)) (= x94 (x253 x216)) (<= x94 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x94 0))) (and (=> (and (= x43 0) x285) x33) (=> (and (= x306 (< x94 x315)) (not x285)) (and (=> (and (= 0 x43) x306) x33) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x180) (= x258 (x249 (- x94 x315))) (= (x336 x129 1) x80) (= (x249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315)) x175) (= x180 (x337 x80)) (= (x336 x169 1) x105) (= (< x175 x180) x167) (<= 0 x180)) (not x306)) (and (=> (and (= x43 0) x167) x33) (=> (and (not x167) (and (= x59 (> x180 x213)) (= x213 (x340 (+ x315 x180))))) (and (=> (and x59 (= 0 x43)) x33) (=> (and (not x59) (and (= 1 x3) (= x313 32))) x153))))))))) (=> (and (= 0 x43) (not x204)) x33)))))))
(assert (=> (>= 10000 x238) (not (= (x336 x238 2) x238))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x336 x169 1))))
(assert (x243 x191))
(assert (=> (<= x154 10000) (not (= (x336 x129 1) x154))))
(assert (not (= (x336 x145 4) 157198259)))
(assert (not (= (x336 x238 1) 3)))
(assert (x243 x209))
(assert (=> (<= x145 10000) (not (= x145 (x336 x238 1)))))
(assert (x243 x121))
(assert (x243 x76))
(assert (x263 x256 (- x138 x323)))
(assert (x243 x323))
(assert (=> (>= 10000 x238) (not (= x238 (x336 x238 1)))))
(assert (x317 x256))
(assert (x243 x313))
(assert (x243 x345))
(assert (=> (= (x336 x169 1) (x336 x82 x282)) (and (= x82 x169) (= x282 1))))
(assert (not (= (x336 x169 x66) 157198259)))
(assert (x243 x127))
(assert (=> (= (x336 x82 x282) (x336 x154 3)) (and (= x82 x154) (= x282 3))))
(assert (not (= 3337024914 (x336 x238 1))))
(assert (not (= 599290589 (x336 x169 x66))))
(assert (not (= (x336 x154 3) 170435703)))
(assert (=> (<= x82 10000) (not (= x82 (x336 x169 1)))))
(assert (=> (>= 10000 x238) (not (= x238 (x336 x90 1)))))
(assert (=> (>= 10000 x234) (not (= x234 (x336 x96 3)))))
(assert (=> (= (x336 x145 4) (x336 x82 x282)) (and (= x282 4) (= x82 x145))))
(assert (x263 x323 (- x136 x256)))
(assert (not (= 1 (x336 x82 x282))))
(assert (x263 x323 x136))
(assert (=> (<= x90 10000) (not (= x90 (x336 x154 3)))))
(assert (not (= 404098525 (x336 x169 x66))))
(assert (not (= (x336 x90 1) 330252341)))
(assert (x243 x237))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x336 x169 1))))
(assert (= x273 (and (not x194) x87)))
(assert (x179 x107))
(assert (not (= 1851080549 (x336 x169 1))))
(assert (=> (>= 10000 x234) (not (= (x336 x154 3) x234))))
(assert (x179 x309))
(assert (= x6 (and (not x215) x339)))
(assert (=> (= (x336 x96 3) (x336 x82 x282)) (and (= x282 3) (= x96 x82))))
(assert (=> (= (x336 x169 1) (x336 x129 1)) (= x169 x129)))
(assert (x243 x315))
(assert (not (= (x336 x90 1) (x336 x238 2))))
(assert (not (= (x336 x129 1) (x336 x96 3))))
(assert (x270 x256 x138 x323 x136))
(assert (=> (= (x336 x169 x66) (x336 x238 2)) (and (= 2 x66) (= x238 x169))))
(assert (x243 x288))
(assert (not (= 3 (x336 x145 4))))
(assert (not (= (x336 x90 1) 3017275065)))
(assert (x196 x238))
(assert (x243 x70))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x336 x169 1))))
(assert (not (= 170435703 (x336 x169 x66))))
(assert (x243 x236))
(assert (=> (<= x154 10000) (not (= x154 (x336 x90 1)))))
(assert (x243 x134))
(assert (not (= (x336 x238 1) 826074471)))
(assert (= x186 (=> (and (and (= x169 x7) (>= x326 0) (= x319 x12) (<= x169 1461501637330902918203684832716283019655932542975) (= x326 (x297 x234)) (= 404098525 x52) (<= x234 1461501637330902918203684832716283019655932542975) x135 (= x123 (>= x319 1000)) (= x221 x82) (= x278 (x297 x169)) x8 (= x8 (not (= x7 x342))) x123 (<= x221 1461501637330902918203684832716283019655932542975) (> x234 0) (>= x138 0) (>= 1461501637330902918203684832716283019655932542975 x41) (= x342 x82) x198 (> 2376452955 x52) (< 0 x169) (= x166 x140) (> 826074471 x52) (>= x278 0) (= x138 x133) (<= x166 1461501637330902918203684832716283019655932542975) (= (< 0 (x115 x169)) x198) (<= x138 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> (x115 x234) 0) x135) (<= 0 x121) (= 1000 x62) (<= 0 x221) (>= x41 0) (not (< x52 170435703)) (not (= 170435703 x52)) (>= 1461501637330902918203684832716283019655932542975 x121) (> x252 0) (<= 0 x166) (<= 0 x322) (not (= 330252341 x52)) (= (x115 x169) x252) (<= x322 1461501637330902918203684832716283019655932542975) (not (= x169 x234))) (and (and (< x209 2376452955) (= x209 1851080549) (<= x51 1461501637330902918203684832716283019655932542975) (= x133 x269) (not (< x209 826074471)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x138) (<= x104 1461501637330902918203684832716283019655932542975) (not (> 1289409798 x209)) (> x307 0) (<= x83 1461501637330902918203684832716283019655932542975) (<= x31 1461501637330902918203684832716283019655932542975) (= x205 x112) (<= 0 x138) (= x142 0) (>= x104 0) (= (not (= 0 x269)) x250) (= x12 x256) (= x82 x83) (<= 0 x51) (= x143 x291) (>= x83 0) (not (= 1289409798 x209)) (= x41 x31) (= x307 (x115 x169)) (= 0 x112) (= x147 (= x138 0)) x250 (= x51 x291)) (or (and (= x299 x256) x147) (and (not x147) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x44) (= (ite (not x224) 1 0) x275) (= (= x138 x288) x189) (= x224 (= 0 x44)) (= (x106 x275 x281) x37) (= x283 (x212 (x305 x256 x138))) (= x288 (x68 x283 x256)) (= x79 (= x256 0)) (= x281 (ite (or x79 x189) 1 0)) (= (x68 x283 x44) x102) (< 0 x37) (= x299 x102) (<= 0 x44)))))) x183)))
(assert (=> (>= 10000 x129) (not (= (x336 x90 1) x129))))
(assert (=> (>= 10000 x82) (not (= x82 (x336 x145 4)))))
(assert (x179 x251))
(assert (=> (>= 10000 x129) (not (= x129 (x336 x238 2)))))
(assert (x243 x128))
(assert (x243 x230))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x336 x82 x282))))
(assert (x263 x138 (- x256 x136)))
(assert (x217 x219))
(assert (not (= 4 (x336 x90 1))))
(assert (=> (>= 10000 x129) (not (= x129 (x336 x154 3)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x336 x169 x66))))
(assert (x243 x272))
(assert (= (and x117 x101) x89))
(assert (not (= (x336 x169 x66) 2)))
(assert (=> (<= x234 10000) (not (= (x336 x82 x282) x234))))
(assert (not (= (x336 x96 3) (x336 x145 4))))
(assert (x259 (- x138 x323)))
(assert (not (= (x336 x145 4) 170435703)))
(assert (not (= (x336 x145 4) 1)))
(assert (x243 x57))
(assert (x243 x18))
(assert (=> (<= x96 10000) (not (= x96 (x336 x169 1)))))
(assert (=> (<= x169 10000) (not (= x169 (x336 x238 1)))))
(assert (x243 x251))
(assert (x243 x256))
(assert (=> (>= 10000 x96) (not (= x96 (x336 x238 1)))))
(assert (=> (<= x234 10000) (not (= x234 (x336 x169 x66)))))
(assert (not (= (x336 x169 x66) 3)))
(assert (x196 x66))
(assert (= x54 (and x167 x50)))
(assert (=> (= (x336 x169 1) (x336 x169 x66)) (= 1 x66)))
(assert (not (= (x336 x238 2) 170435703)))
(assert (x243 x103))
(assert (x242 x283 x44))
(assert (not (= (x336 x238 1) 2835717307)))
(assert (not (= (x336 x96 3) 2835717307)))
(assert (x196 x154))
(assert (=> (>= 10000 x234) (not (= x234 (x336 x169 1)))))
(assert (x263 x136 (- x323 x138)))
(assert (x173 x184 x3))
(assert (= x339 (and x19 (not x150))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x336 x154 3))))
(assert (not (= (x336 x238 1) (x336 x145 4))))
(assert (= (and x332 x292) x341))
(assert (not (= (x336 x169 1) 2376452955)))
(assert (= (or (and x324 (not x58)) x86) x91))
(assert (not (= 3026235284 (x336 x145 4))))
(assert (= (and (not x157) x24) x316))
(assert (x179 x20))
(assert (=> (>= 10000 x96) (not (= x96 (x336 x96 3)))))
(assert (x243 x211))
(assert (= (=> (and (and (<= x268 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x185 x256)) (= (x53 x208) x268) (= (x106 x309 x18) x17) (= x45 (ite (= 1 x149) 1 0)) (>= x185 0) (= (x336 x154 3) x208) (= (x1 x81 x64) x309) (= (ite (< 31 x264) 1 0) x345) (= x95 (+ x299 x230)) (= x36 (+ x256 x185)) (= x299 x126) (= x257 x95) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x299 x230)) (< 0 x17) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x185) (= x136 x36) (= x155 x95) (>= x268 0) (= x36 x287) (= (x106 1461501637330902918203684832716283019655932542975 x31) x154) (<= 0 x230) (= x64 (ite (= x264 0) 1 0)) (= x128 (x340 (+ x299 x268))) (= (x106 x45 x345) x81) (<= x230 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (not (= x42 3026235284)) (= x20 x203) (not (= 3017275065 x42)) (not (> 2376452955 x42)) (= x280 x205) (= x280 0) (>= 1461501637330902918203684832716283019655932542975 x237) (>= 1461501637330902918203684832716283019655932542975 x20) (= x228 x126) (= x237 x82) (= x20 x222) (> x214 0) (>= x88 0) (<= x25 1461501637330902918203684832716283019655932542975) (= x143 x85) (>= 1461501637330902918203684832716283019655932542975 x88) (<= 0 x237) (= x25 x41) (= (x115 x169) x214) (>= 1461501637330902918203684832716283019655932542975 x10) (> 3337024914 x42) (= x323 x228) (= x222 x322) (= (= x20 x82) x161) (not (< x42 3017275065)) (= x42 3121116754) (>= x10 0) (= x85 x10))) (and (=> x161 x74) (=> (and (not x161) (and (or (and (and (= x327 (x106 1461501637330902918203684832716283019655932542975 x20)) (not (< x124 x323)) (= (x249 (- x124 x323)) x295)) (not x302)) x302) (and (>= x124 0) (= x124 (x271 x262)) (= (x106 1461501637330902918203684832716283019655932542975 x20) x145) (= x282 (x336 x145 4)) (= (= x124 115792089237316195423570985008687907853269984665640564039457584007913129639935) x302) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x124) (= x262 (x336 x82 x282))))) x163))) x48))
(assert (not (= 404098525 (x336 x82 x282))))
(assert (not (= (x336 x238 2) 599290589)))
(assert (not (= (x336 x145 4) 117300739)))
(assert (= (and x331 x248) x344))
(assert (x243 x326))
(assert (not (= (x336 x82 x282) 599290589)))
(assert (= x32 (and x24 x157)))
(assert (= x318 (and (not x167) x50)))
(assert (x243 x78))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x336 x145 4))))
(assert (x243 x291))
(assert (not (= 170435703 (x336 x82 x282))))
(assert (not (= 404098525 (x336 x96 3))))
(assert (not (= 4 (x336 x82 x282))))
(assert (=> (>= 10000 x234) (not (= x234 (x336 x90 1)))))
(assert (not (= (x336 x169 1) 170435703)))
(assert (x259 x256))
(assert (not (= (x336 x169 1) 2514000705)))
(assert (not (= (x336 x145 4) 404098525)))
(assert (x243 x287))
(assert (not (= 826074471 (x336 x96 3))))
(assert (not (= (x336 x169 x66) 1)))
(assert (=> (>= 10000 x234) (not (= (x336 x129 1) x234))))
(assert (x243 x213))
(assert (x259 x229))
(assert (not (= 2376452955 (x336 x154 3))))
(assert (not (= 3 (x336 x129 1))))
(assert (x243 x143))
(assert (not (= 1851080549 (x336 x90 1))))
(assert (x243 x23))
(assert (not (= (x336 x145 4) 3337024914)))
(assert (not (= 826074471 (x336 x238 2))))
(assert (x243 x41))
(assert (not (= (x336 x154 3) 4)))
(assert (x179 x18))
(assert (x263 x136 (- x323 x256)))
(assert (x243 x102))
(assert (= (or x225 x172) x286))
(assert (=> (<= x129 10000) (not (= x129 (x336 x169 1)))))
(assert (x243 x88))
(assert (x243 x221))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x336 x238 1))))
(assert (x196 x90))
(assert (x243 x155))
(assert (not (= (x336 x169 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x336 x90 1) 3)))
(assert (not (= (x336 x154 3) 599290589)))
(assert (=> (= (x336 x154 3) (x336 x169 x66)) (and (= x66 3) (= x154 x169))))
(assert (= (or x195 x151 x170 x54 x197) x160))
(assert (=> (>= 10000 x154) (not (= (x336 x169 x66) x154))))
(assert (x243 x109))
(assert (not (= (x336 x169 x66) 1461501637330902918203684832716283019655932542975)))
(assert (=> (<= x96 10000) (not (= (x336 x154 3) x96))))
(assert (x243 x110))
(assert (x173 x45 x345))
(assert (not (= 404098525 (x336 x154 3))))
(assert (=> (>= 10000 x129) (not (= (x336 x145 4) x129))))
(assert (not (= (x336 x169 1) 404098525)))
(assert (x179 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x238) (not (= x238 (x336 x96 3)))))
(assert (x243 x284))
(assert (x243 x203))
(assert (x243 x281))
(assert (x243 x327))
(assert (not (= (x336 x145 4) (x336 x154 3))))
(assert (x243 x229))
(assert (x317 x155))
(assert (= x308 (and x100 (not x161))))
(assert (x317 x44))
(assert (not (= (x336 x238 1) 157198259)))
(assert (x243 x140))
(assert (= x225 (and x308 x302)))
(assert (not (= 2 (x336 x96 3))))
(assert (x243 x20))
(assert (not (= (x336 x238 2) 2835717307)))
(assert (not (= 4 (x336 x145 4))))
(assert (x243 x314))
(assert (x259 (- x323 x138)))
(assert (not (= (x336 x90 1) 404098525)))
(assert (x179 x275))
(assert (not (= 826074471 (x336 x169 x66))))
(assert (=> (= (x336 x129 1) (x336 x169 x66)) (and (= x129 x169) (= 1 x66))))
(assert (not (= (x336 x238 1) 170435703)))
(assert (not (= (x336 x169 x66) 117300739)))
(assert (x243 x126))
(assert (x259 2))
(assert (not (= 2514000705 (x336 x145 4))))
(assert (not (= 2835717307 (x336 x169 1))))
(assert (=> (<= x169 10000) (not (= (x336 x96 3) x169))))
(assert (x179 x72))
(assert (not (= 1289409798 (x336 x238 2))))
(assert (x243 x149))
(assert (x263 x256 x138))
(assert (x270 x136 x323 x138 x256))
(assert (=> (>= 10000 x238) (not (= x238 (x336 x82 x282)))))
(assert (x242 x191 x155))
(assert (not (= (x336 x238 2) 1851080549)))
(assert (not (= 330252341 (x336 x82 x282))))
(assert (not (= 1851080549 (x336 x169 x66))))
(assert (x270 x136 x323 x256 x138))
(assert (=> (= (x336 x238 1) (x336 x82 x282)) (and (= x82 x238) (= 1 x282))))
(assert (= x254 (and x188 x303)))
(assert (not (= 3337024914 (x336 x96 3))))
(assert (not (= 1 (x336 x169 1))))
(assert (=> (<= x238 10000) (not (= x238 (x336 x154 3)))))
(assert (x217 x5))
(assert (not (= 4 (x336 x169 x66))))
(assert (= (and (not x147) x276) x182))
(assert (= x74 x163))
(assert (x243 x137))
(assert (x243 x49))
(assert (x243 x260))
(assert (x243 x257))
(assert (not (= 3121116754 (x336 x145 4))))
(assert (x243 x114))
(assert (x243 x104))
(assert (= (and x292 (not x332)) x226))
(assert (not (= 404098525 (x336 x238 1))))
(assert (not (= 157198259 (x336 x96 3))))
(assert (x243 x7))
(assert (not (= (x336 x145 4) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (and x324 x58) x86))
(assert (=> (>= 10000 x96) (not (= (x336 x129 1) x96))))
(assert (x243 x307))
(assert (not (= 2514000705 (x336 x169 x66))))
(assert (not (= (x336 x129 1) 2)))
(assert (x243 x299))
(assert (x243 x77))
(assert (not (= 1851080549 (x336 x96 3))))
(assert (x196 x234))
(assert (x243 x220))
(assert (=> (>= 10000 x145) (not (= x145 (x336 x169 x66)))))
(assert (not (= (x336 x238 2) 3017275065)))
(assert (not (= (x336 x90 1) 170435703)))
(assert (=> (<= x154 10000) (not (= (x336 x96 3) x154))))
(assert (=> (>= 10000 x238) (not (= x238 (x336 x169 x66)))))
(assert (x243 x162))
(assert (not (= (x336 x129 1) 599290589)))
(assert (not (= 3121116754 (x336 x129 1))))
(assert (x243 x3))
(assert (not (= (x336 x96 3) 170435703)))
(assert (not (= (x336 x154 3) 826074471)))
(assert (not (= 117300739 (x336 x90 1))))
(assert (not (= (x336 x90 1) (x336 x154 3))))
(assert (not (= (x336 x129 1) 2514000705)))
(assert (not (= (x336 x154 3) 1889567281)))
(assert (x243 x120))
(assert (not (= 826074471 (x336 x129 1))))
(assert (x243 x222))
(assert (=> (>= 10000 x96) (not (= (x336 x169 x66) x96))))
(assert (not (= 4 (x336 x129 1))))
(assert (not (= (x336 x169 1) 599290589)))
(assert (=> (<= x145 10000) (not (= (x336 x90 1) x145))))
(assert (x158 x5 x219))
(assert (not (= 3017275065 (x336 x129 1))))
(assert (x259 (- x136 x138)))
(assert (x243 x60))
(assert (not (= (x336 x82 x282) 2376452955)))
(assert (x178 x20))
(assert (not (= (x336 x169 1) (x336 x238 2))))
(assert (x243 x330))
(assert (not (= (x336 x90 1) 2514000705)))
(assert (x173 x72 x107))
(assert (not (= 3121116754 (x336 x96 3))))
(assert (x243 x136))
(assert (x179 x184))
(assert (not (= (x336 x90 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x336 x129 1) (x336 x145 4))))
(assert (x259 x159))
(assert (x243 x11))
(assert (not (= 3017275065 (x336 x169 1))))
(assert (= (and x61 (not x285)) x130))
(assert (x196 x145))
(assert (not (= (x336 x169 x66) 2376452955)))
(assert (x243 x119))
(assert (not (= 3 (x336 x96 3))))
(assert (x243 x219))
(assert (not (= 1889567281 (x336 x129 1))))
(assert (= (or x286 x171) x24))
(assert (=> (= (x336 x238 1) (x336 x90 1)) (= x238 x90)))
(assert (x242 x191 x323))
(assert (x243 x193))
(assert (=> (>= 10000 x145) (not (= x145 (x336 x96 3)))))
(assert (x243 x328))
(assert (= x87 (or x182 x320)))
(assert (=> (>= 10000 x169) (not (= (x336 x154 3) x169))))
(assert (not (= (x336 x238 2) 2)))
(assert (x259 (- x256 x323)))
(assert (x243 x96))
(assert (x259 (- x323 x256)))
(assert (x243 x154))
(assert (= (or (and x108 (not x93)) x279) x100))
(assert (x243 x81))
(assert (not (= (x336 x96 3) (x336 x169 1))))
(assert (x243 x55))
(assert (not (= (x336 x82 x282) 3337024914)))
(assert (=> (= (x336 x169 1) (x336 x238 1)) (= x169 x238)))
(assert (=> (= (x336 x90 1) (x336 x129 1)) (= x90 x129)))
(assert (x92 x256 x138 x323 x136))
(assert (not (= (x336 x238 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x336 x238 1) 3017275065)))
(assert (x243 x64))
(assert (and (x56 x31 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x31 (+ (* 1461501637330902918203684832716283019655932542976 (x68 x31 1461501637330902918203684832716283019655932542976)) (x40 x31 1461501637330902918203684832716283019655932542976)))) (x131 x31 1461501637330902918203684832716283019655932542976) (x26 x31 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x336 x169 x66) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 1289409798 (x336 x145 4))))
(assert (=> (<= x234 10000) (not (= x234 (x336 x238 2)))))
(assert (not (= (x336 x96 3) 2514000705)))
(assert (=> (>= 10000 x96) (not (= (x336 x90 1) x96))))
(assert (=> (= (x336 x169 x66) (x336 x82 x282)) (and (= x66 x282) (= x82 x169))))
(assert (not (= (x336 x96 3) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= (x336 x238 1) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (not (= (x336 x154 3) 330252341)))
(assert (x196 x82))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x336 x129 1))))
(assert (x243 x85))
(assert (x243 x65))
(assert (=> (<= x82 10000) (not (= x82 (x336 x238 2)))))
(assert (=> (<= x90 10000) (not (= (x336 x169 1) x90))))
(assert (x243 x166))
(assert (x243 x342))
(assert (x270 x323 x136 x138 x256))
(assert (x243 x45))
(assert (x243 x280))
(assert (not (= 2376452955 (x336 x96 3))))
(assert (not (= (x336 x154 3) 1289409798)))
(assert (=> (<= x96 10000) (not (= x96 (x336 x145 4)))))
(assert (=> (>= 10000 x169) (not (= (x336 x145 4) x169))))
(assert (not (= (x336 x96 3) 599290589)))
(assert (not (= (x336 x96 3) 4)))
(assert (not x186))
(assert (x178 1461501637330902918203684832716283019655932542976))
(assert (not (= 2514000705 (x336 x238 1))))
(assert (x317 x323))
(assert (= (and x318 x59) x195))
(assert (x243 x290))
(assert (=> (>= 10000 x82) (not (= x82 (x336 x154 3)))))
(assert (=> (<= x82 10000) (not (= (x336 x129 1) x82))))
(assert (= x74 (=> (and (or (and (not x157) (and (= x109 x162) (= x127 (x68 x191 x323)) (<= x136 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x212 (x305 x323 x136)) x191) (= x251 (ite (or x132 x71) 1 0)) (= (x106 x304 x251) x76) (<= 0 x136) (= (= 0 x323) x71) (= x132 (= x127 x136)) (= (= 0 x155) x293) (= x162 (x68 x191 x155)) (> x76 0) (= x304 (ite (not x293) 1 0)))) (and x157 (= x323 x109))) (and (<= x155 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x155 0) (= x157 (= x155 0)))) x97)))
(assert (not (= 1851080549 (x336 x238 1))))
(assert (=> (>= 10000 x169) (not (= (x336 x82 x282) x169))))
(assert (not (= (x336 x129 1) 157198259)))
(assert (x243 x309))
(assert (not (= (x336 x90 1) 2835717307)))
(assert (not (= 1289409798 (x336 x96 3))))
(assert (= x117 (and x273 x165)))
(assert (not (= 2835717307 (x336 x82 x282))))
(assert (x243 x133))
(assert (= (and x176 x204) x61))
(assert (=> (>= 10000 x238) (not (= x238 (x336 x129 1)))))
(assert (not (= (x336 x238 1) 599290589)))
(assert (not (= (x336 x238 2) 117300739)))
(assert (not (= 3337024914 (x336 x90 1))))
(assert (x243 x31))
(assert (x243 x52))
(assert (not (= 117300739 (x336 x96 3))))
(assert (not (= 1851080549 (x336 x154 3))))
(assert (not (= (x336 x145 4) (x336 x169 1))))
(assert (=> (>= 10000 x145) (not (= x145 (x336 x238 2)))))
(assert (x243 x275))
(assert (not (= 3121116754 (x336 x154 3))))
(assert (= (or x254 x160 x111) x324))
(assert (=> (>= 10000 x129) (not (= x129 (x336 x96 3)))))
(assert (=> (<= x154 10000) (not (= (x336 x154 3) x154))))
(assert (x243 x184))
(assert (not (= (x336 x96 3) 1889567281)))
(assert (not (= 3337024914 (x336 x169 x66))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x336 x129 1))))
(assert (=> (= (x336 x169 x66) (x336 x145 4)) (and (= x145 x169) (= x66 4))))
(assert (not (= (x336 x169 1) 330252341)))
(assert (=> (>= 10000 x169) (not (= x169 (x336 x129 1)))))
(assert (not (= 1 (x336 x238 2))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x336 x154 3))))
(assert (x243 x5))
(assert (x196 x96))
(assert (= x267 (=> (and (= x93 (= 0 x18)) (or (not x93) x93)) x48)))
(assert (not (= 2835717307 (x336 x169 x66))))
(assert (=> (>= 10000 x145) (not (= (x336 x169 1) x145))))
(assert (not (= (x336 x154 3) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x243 x82))
(assert (x243 x142))
(assert (x243 x295))
(assert (not (= (x336 x96 3) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x179 x304))
(assert (=> (>= 10000 x145) (not (= (x336 x82 x282) x145))))
(assert (=> (= (x336 x90 1) (x336 x169 x66)) (and (= x66 1) (= x169 x90))))
(assert (x243 x122))
(assert (not (= 1289409798 (x336 x129 1))))
(assert (not (= (x336 x169 x66) 3017275065)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x336 x238 2))))
(assert (not (= 2514000705 (x336 x154 3))))
(assert (= x33 (=> (and (= x220 x313) (= x43 x3)) x153)))
(assert (= (and x130 x306) x170))
(assert (not (= 1851080549 (x336 x145 4))))
(assert (x243 x180))
(assert (not (= (x336 x169 x66) 1289409798)))
(assert (not (= (x336 x169 1) 117300739)))
(assert (not (= (x336 x238 2) (x336 x129 1))))
(assert (not (= 2376452955 (x336 x238 2))))
(assert (not (= 1889567281 (x336 x238 1))))
(assert (not (= 3017275065 (x336 x145 4))))
(assert (not (= (x336 x169 1) 826074471)))
(assert (x196 x129))
(assert (x243 x214))
(assert (x173 x275 x281))
(assert (x259 (- x138 x136)))
(assert (= (and x161 x100) x171))
(assert (= (=> (and (= x44 x185) (= 0 x18) (= x264 x314) (= x230 x138)) x267) x329))
(assert (= (and x6 (not x346)) x292))
(assert (x243 x266))
(assert (not (= (x336 x154 3) 3026235284)))
(assert (not (= (x336 x238 1) 3026235284)))
(assert (not (= (x336 x82 x282) 3121116754)))
(assert (not (= 2514000705 (x336 x82 x282))))
(assert (=> (>= 10000 x90) (not (= x90 (x336 x129 1)))))
(assert (x243 x283))
(assert (x243 x264))
(assert (not (= (x336 x96 3) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (not (= 2514000705 (x336 x238 2))))
(assert (= x176 (and (not x303) x188)))
(assert (not (= 3 (x336 x238 2))))
(assert (x179 x281))
(assert (not (= (x336 x129 1) 2376452955)))
(assert (x243 x17))
(assert (not (= (x336 x238 1) 2)))
(assert (x243 x138))
(assert (=> (>= 10000 x96) (not (= (x336 x238 2) x96))))
(assert (=> (<= x169 10000) (not (= x169 (x336 x238 2)))))
(assert (=> (<= x90 10000) (not (= (x336 x96 3) x90))))
(assert (not (= (x336 x82 x282) 3026235284)))
(assert (not (= 1289409798 (x336 x169 1))))
(assert (= x172 (and x308 (not x302))))
(assert (not (= (x336 x238 2) (x336 x238 1))))
(assert (x243 x43))
(assert (not (= 599290589 (x336 x90 1))))
(assert (=> (>= 10000 x82) (not (= x82 (x336 x82 x282)))))
(assert (x243 x90))
(assert (not (= 2376452955 (x336 x238 1))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x336 x238 2))))
(assert (not (= 3121116754 (x336 x90 1))))
(assert (x243 x145))
(assert (not (= (x336 x129 1) 170435703)))
(assert (x196 x169))
(assert (not (= 3121116754 (x336 x169 x66))))
(assert (x243 x294))
(assert (x243 x51))
(assert (=> (>= 10000 x238) (not (= x238 (x336 x145 4)))))
(assert (x243 x322))
(assert (not (= 330252341 (x336 x129 1))))
(check-sat)
(exit)
