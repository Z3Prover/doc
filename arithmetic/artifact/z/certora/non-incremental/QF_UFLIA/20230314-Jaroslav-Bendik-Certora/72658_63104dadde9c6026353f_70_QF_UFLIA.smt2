(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x123 () Int)
(declare-fun x35 () Int)
(declare-fun x48 () Int)
(declare-fun x37 () Int)
(declare-fun x92 () Int)
(declare-fun x84 () Int)
(declare-fun x86 () Int)
(declare-fun x15 () Int)
(declare-fun x146 () Int)
(declare-fun x147 () Bool)
(declare-fun x74 () Int)
(declare-fun x56 () Int)
(declare-fun x107 () Int)
(declare-fun x60 () Int)
(declare-fun x63 () Int)
(declare-fun x44 () Int)
(declare-fun x139 () Int)
(declare-fun x111 () Int)
(declare-fun x39 () Int)
(declare-fun x137 () Int)
(declare-fun x97 () Int)
(declare-fun x17 () Int)
(declare-fun x127 () Bool)
(declare-fun x101 () Int)
(declare-fun x11 () Int)
(declare-fun x140 () Int)
(declare-fun x133 () Int)
(declare-fun x29 () Bool)
(declare-fun x79 () Int)
(declare-fun x14 () Int)
(declare-fun x33 () Int)
(declare-fun x22 (Int Int) Int)
(declare-fun x8 (Int) Int)
(declare-fun x106 () Int)
(declare-fun x43 () Int)
(declare-fun x125 () Int)
(declare-fun x69 () Int)
(declare-fun x32 () Int)
(declare-fun x83 () Int)
(declare-fun x152 () Bool)
(declare-fun x153 () Int)
(declare-fun x57 () Int)
(declare-fun x80 () Int)
(declare-fun x3 () Int)
(declare-fun x59 () Int)
(declare-fun x24 () Int)
(declare-fun x2 () Int)
(declare-fun x76 () Int)
(declare-fun x34 () Int)
(declare-fun x12 () Int)
(declare-fun x131 () Int)
(declare-fun x64 () Int)
(declare-fun x126 () Int)
(declare-fun x66 (Int) Int)
(declare-fun x78 () Int)
(declare-fun x9 () Bool)
(declare-fun x13 () Bool)
(declare-fun x102 () Int)
(declare-fun x149 () Int)
(declare-fun x58 () Int)
(declare-fun x28 () Int)
(declare-fun x113 () Int)
(declare-fun x36 () Int)
(declare-fun x142 () Int)
(declare-fun x61 () Int)
(declare-fun x91 () Int)
(declare-fun x128 (Int Int) Int)
(declare-fun x67 (Int) Int)
(declare-fun x151 () Int)
(declare-fun x109 () Int)
(declare-fun x117 () Int)
(declare-fun x99 () Int)
(declare-fun x82 () Int)
(declare-fun x119 (Int Int) Int)
(declare-fun x141 () Int)
(declare-fun x16 () Int)
(declare-fun x136 () Int)
(declare-fun x62 (Int) Int)
(declare-fun x40 (Int Int) Int)
(declare-fun x4 () Bool)
(declare-fun x72 (Int Int) Int)
(declare-fun x90 () Int)
(declare-fun x93 () Int)
(declare-fun x55 () Int)
(declare-fun x95 () Bool)
(declare-fun x73 () Int)
(declare-fun x68 () Bool)
(declare-fun x124 () Int)
(declare-fun x1 () Int)
(declare-fun x10 () Int)
(declare-fun x87 () Int)
(declare-fun x96 (Int Int) Int)
(declare-fun x89 () Int)
(declare-fun x7 () Int)
(declare-fun x145 (Int Int) Int)
(declare-fun x26 () Int)
(define-fun x121 ((x103 Int)) Int (ite (and (>= x103 0) (< x103 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x103 (- x103 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x138 ((x103 Int)) Int (ite (and (< x103 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x103)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x103) x103))
(define-fun x45 ((x103 Int)) Int (ite (and (< x103 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x103 0)) x103 (ite (and (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x103) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x103)) (- x103 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x103 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x103)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x103) (x40 x103 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x38 ((x5 Int)) Bool (and (>= x5 0) (< x5 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x115 ((x5 Int)) Bool (and (<= 0 x5) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5)))
(define-fun x52 ((x5 Int) (x21 Int)) Bool (= (x96 x5 x21) (x96 x21 x5)))
(define-fun x47 ((x5 Int) (x21 Int)) Bool (and (=> (and (< 0 x21) (> x5 0)) (> (x96 x5 x21) 0)) (=> (and (< 0 x5) (< x21 0)) (< (x96 x5 x21) 0)) (=> (and (> 0 x21) (> 0 x5)) (< 0 (x96 x5 x21))) (=> (and (< 0 x21) (> 0 x5)) (> 0 (x96 x5 x21)))))
(define-fun x18 ((x5 Int) (x21 Int)) Bool (=> (and (< 0 x21) (> x5 0)) (= (= (x128 (x45 (x96 x5 x21)) x5) x21) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x96 x5 x21)))))
(define-fun x27 ((x5 Int) (x21 Int)) Bool (=> (and (not (= x5 0)) (not (= x21 0))) (and (= (x128 (x96 x5 x21) x21) x5) (= (x128 (x96 x5 x21) x5) x21))))
(define-fun x50 ((x5 Int) (x21 Int)) Bool (=> (and (< 0 x21) (> x5 0)) (= (> (x96 x5 x21) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x21 (x128 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5)))))
(define-fun x143 ((x5 Int) (x21 Int)) Bool (and (= (x45 (x96 x5 x21)) (x45 (x96 (- x5 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x21 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x45 (x96 x5 x21)) (x45 (x96 x5 (- x21 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x45 (x96 x5 x21)) (x45 (x96 (- x5 115792089237316195423570985008687907853269984665640564039457584007913129639936) x21)))))
(define-fun x53 ((x5 Int) (x21 Int)) Bool (and (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5) (< 0 x5)) (and (<= x21 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x21 0))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x96 x5 x21)) (<= x5 (x128 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21)))) (=> (and (and (> x21 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x96 (- x5 115792089237316195423570985008687907853269984665640564039457584007913129639936) x21)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5) (x128 57896044618658097711785492504343953926634992332820282019728792003956564819968 x21)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x21))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x96 (- x5 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x21 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x128 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x21)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5)))) (=> (and (and (> x21 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x21)) (and (< 0 x5) (<= x5 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x96 x5 (- x21 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x21) (x128 57896044618658097711785492504343953926634992332820282019728792003956564819968 x5))))))
(define-fun x98 ((x5 Int) (x21 Int)) Bool (and (x53 x5 x21) (x27 x5 x21) (x47 x5 x21) (x52 x5 x21) (x143 x5 x21) (x18 x5 x21) (x50 x5 x21)))
(define-fun x150 ((x5 Int)) Bool (and (= 0 (x96 x5 0)) (= 0 (x96 0 x5))))
(define-fun x132 ((x5 Int)) Bool (and (= x5 (x96 x5 1)) (= (x96 1 x5) x5)))
(define-fun x71 ((x5 Int)) Bool (and (x150 x5) (x132 x5)))
(define-fun x104 ((x5 Int) (x21 Int)) Bool (=> (and (< 0 x21) (> x5 0)) (and (>= x5 (x128 x5 x21)) (<= 0 (x128 x5 x21)))))
(define-fun x85 ((x5 Int) (x21 Int)) Bool (=> (and (and (<= 1 x21) (< x21 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5) (<= 0 x5))) (and (< (x128 x5 x21) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 (x128 x5 x21)))))
(define-fun x46 ((x5 Int) (x21 Int)) Bool (=> (and (< 1 x21) (< x21 x5)) (< (x128 x5 x21) x5)))
(define-fun x94 ((x5 Int) (x21 Int)) Bool (=> (and (< 0 x21) (> x5 0)) (= (< x5 x21) (= (x128 x5 x21) 0))))
(define-fun x19 ((x5 Int) (x21 Int)) Bool (=> (and (< 0 x5) (< 0 x21)) (and (>= x5 (x96 (x128 x5 x21) x21)) (> (x96 (x128 x5 x21) x21) (- x5 x21)))))
(define-fun x41 ((x5 Int) (x21 Int)) Bool (and (x46 x5 x21) (x85 x5 x21) (x19 x5 x21) (x104 x5 x21) (x94 x5 x21)))
(define-fun x65 ((x5 Int)) Bool (= (x128 0 x5) 0))
(define-fun x88 ((x5 Int)) Bool (= (x128 x5 1) x5))
(define-fun x130 ((x5 Int)) Bool (=> (not (= 0 x5)) (= (x128 x5 x5) 1)))
(define-fun x81 ((x5 Int)) Bool (and (x88 x5) (x130 x5) (x65 x5)))
(define-fun x75 ((x5 Int)) Bool (and (= (x22 x5 115792089237316195423570985008687907853269984665640564039457584007913129639935) x5) (= (x22 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5) x5)))
(define-fun x100 ((x5 Int)) Bool (and (= (x22 0 x5) 0) (= 0 (x22 x5 0))))
(define-fun x30 ((x5 Int)) Bool (= (x22 x5 x5) x5))
(define-fun x134 ((x5 Int)) Bool (and (x100 x5) (x75 x5) (x30 x5)))
(define-fun x144 ((x5 Int) (x21 Int)) Bool (= (x22 x21 x5) (x22 x5 x21)))
(define-fun x118 ((x5 Int) (x21 Int)) Bool (and (=> (>= x5 0) (<= (x22 x5 x21) x5)) (=> (>= x21 0) (<= (x22 x5 x21) x21)) (>= (x22 x5 x21) 0)))
(define-fun x112 ((x5 Int) (x21 Int)) Bool (and (x144 x5 x21) (x118 x5 x21)))
(define-fun x49 ((x5 Int)) Bool (and (= (x145 x5 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5)) (= (x145 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5))))
(define-fun x54 ((x5 Int)) Bool (and (= (x145 x5 0) x5) (= x5 (x145 0 x5))))
(define-fun x116 ((x5 Int)) Bool (= 0 (x145 x5 x5)))
(define-fun x6 ((x5 Int)) Bool (and (x54 x5) (x49 x5) (x116 x5)))
(define-fun x122 ((x5 Int) (x21 Int)) Bool (= (x145 x21 x5) (x145 x5 x21)))
(define-fun x23 ((x5 Int) (x21 Int)) Bool (and (<= (x145 x5 x21) (+ x21 x5)) (<= 0 (x145 x5 x21))))
(define-fun x31 ((x5 Int) (x21 Int)) Bool (and (x122 x5 x21) (x23 x5 x21)))
(define-fun x129 ((x5 Int)) Bool (and (= (x119 x5 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x119 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5))))
(define-fun x110 ((x5 Int)) Bool (and (= x5 (x119 0 x5)) (= x5 (x119 x5 0))))
(define-fun x42 ((x5 Int)) Bool (= x5 (x119 x5 x5)))
(define-fun x51 ((x5 Int)) Bool (and (x129 x5) (x42 x5) (x110 x5)))
(define-fun x77 ((x5 Int) (x21 Int)) Bool (= (x119 x21 x5) (x119 x5 x21)))
(define-fun x70 ((x5 Int) (x21 Int)) Bool (and (=> (<= 0 x21) (<= x21 (x119 x5 x21))) (=> (>= x5 0) (>= (x119 x5 x21) x5)) (>= (+ x5 x21) (x119 x5 x21))))
(define-fun x148 ((x5 Int) (x21 Int)) Bool (and (x77 x5 x21) (x70 x5 x21)))
(define-fun x20 ((x5 Int) (x21 Int) (x25 Int) (x120 Int)) Bool (=> (and (>= x21 0) (>= x5 0) (>= x25 x5) (<= x21 x120)) (>= (x96 x25 x120) (x96 x5 x21))))
(define-fun x114 ((x5 Int) (x21 Int) (x25 Int) (x120 Int)) Bool (=> (= x5 x25) (= (x96 x5 (- x21 x120)) (- (x96 x5 x21) (x96 x25 x120)))))
(assert (x98 x89 (- x76 x15)))
(assert (x114 x73 x15 x48 x60))
(assert (x71 (- x78 x92)))
(assert (x20 x111 x78 x124 x92))
(assert (x114 x48 x76 x92 x124))
(assert (x20 x16 x76 x124 x92))
(assert (x20 x92 x124 x89 x36))
(assert (x114 (x119 x91 x107) x14 x73 x15))
(assert (x20 x32 x64 x124 x92))
(assert (x115 x2))
(assert (x71 (- x16 x15)))
(assert (x115 x26))
(assert (x114 x15 x73 x111 x78))
(assert (x114 x64 x32 x92 x124))
(assert (x114 x92 x124 x63 x125))
(assert (x98 x92 (- x124 x111)))
(assert (x71 (- x15 x64)))
(assert (x114 x92 x124 x76 x63))
(assert (x98 x78 (- x111 x15)))
(assert (x115 x97))
(assert (x20 x124 x92 x63 x125))
(assert (x114 x48 x60 x15 x73))
(assert (x98 (x119 x91 x107) (- x14 x124)))
(assert (x114 x15 x73 (x119 x91 x107) x14))
(assert (x114 x76 x48 x124 x92))
(assert (x98 x92 (- x124 x36)))
(assert (x71 (- x15 x125)))
(assert (x71 (- x124 x63)))
(assert (x20 x73 x15 x76 x26))
(assert (x20 x124 x92 x76 x26))
(assert (x98 x14 (- (x119 x91 x107) x73)))
(assert (x114 x15 x73 x26 x76))
(assert (x98 (x119 x91 x107) x14))
(assert (x98 x73 (- x15 x64)))
(assert (x115 x102))
(assert (x20 x73 x15 x124 x92))
(assert (x114 x73 x15 x76 x48))
(assert (x114 x124 x92 x63 x125))
(assert (x98 x16 (- x76 x92)))
(assert (x114 x63 x125 x124 x92))
(assert (x114 x124 x92 x26 x140))
(assert (x20 x14 (x119 x91 x107) x73 x15))
(assert (x71 (- x92 x63)))
(assert (x114 x14 (x119 x91 x107) x124 x92))
(assert (x114 x124 x92 x125 x63))
(assert (x114 x124 x92 (x119 x91 x107) x14))
(assert (x71 (- x73 x26)))
(assert (x98 x15 (- x73 x124)))
(assert (x114 x92 x124 x36 x89))
(assert (x98 x73 x15))
(assert (x98 x76 (- x78 x92)))
(assert (x71 (- x124 x140)))
(assert (x114 x26 x140 x15 x73))
(assert (x71 (- x111 x92)))
(assert (x71 (- x73 x48)))
(assert (x71 (- x92 (x119 x91 x107))))
(assert (x98 x24 (- x16 x92)))
(assert (x115 x106))
(assert (x114 x73 x15 x78 x76))
(assert (x114 x16 x76 x15 x73))
(assert (x71 (- x140 x92)))
(assert (x114 x124 x92 x48 x60))
(assert (x114 x63 x76 x73 x15))
(assert (x20 x15 x73 x78 x111))
(assert (x98 x124 (- x92 x63)))
(assert (x115 x59))
(assert (x148 x91 x107))
(assert (x98 x15 (- x73 x92)))
(assert (x114 x78 x76 x92 x124))
(assert (x71 (- x124 x64)))
(assert (x98 x124 (- x92 x32)))
(assert (x71 (- x73 x63)))
(assert (x114 (x119 x91 x107) x14 x15 x73))
(assert (x20 x124 x92 x48 x60))
(assert (x20 x92 x124 x76 x63))
(assert (x71 (- x92 x36)))
(assert (x98 x16 (- x24 x92)))
(assert (x115 x1))
(assert (x71 (- x36 x15)))
(assert (x98 x73 (- x15 x124)))
(assert (x71 (- x24 x15)))
(assert (x115 x63))
(assert (x20 x73 x15 x48 x60))
(assert (x114 x124 x92 x78 x76))
(assert (x114 x14 (x119 x91 x107) x92 x124))
(assert (x71 (- x48 x92)))
(assert (x20 x92 x124 x76 x78))
(assert (x114 x16 x24 x124 x92))
(assert (x115 x140))
(assert (x71 (- x15 x14)))
(assert (x98 x111 (- x78 x124)))
(assert (x114 x76 x26 x73 x15))
(assert (x71 (- x92 x16)))
(assert (x115 x7))
(assert (x98 x48 x60))
(assert (x20 x15 x73 x76 x89))
(assert (x71 (- x63 x73)))
(assert (x98 x32 (- x64 x124)))
(assert (x114 x15 x73 x63 x125))
(assert (x98 x15 (- x73 x76)))
(assert (x114 x76 x16 x73 x15))
(assert (x98 x16 x24))
(assert (x114 x92 x124 x48 x76))
(assert (x98 x76 (- x26 x73)))
(assert (x98 x111 (- x78 x73)))
(assert (x114 x124 x92 x60 x48))
(assert (x98 x124 (- x92 x16)))
(assert (x98 x26 (- x76 x92)))
(assert (x114 x16 x24 x92 x124))
(assert (x20 x15 x73 x48 x60))
(assert (x20 x89 x76 x73 x15))
(assert (x98 (x119 x91 x107) (- x14 x92)))
(assert (x114 x111 x78 x92 x124))
(assert (x114 x24 x16 x124 x92))
(assert (x115 x14))
(assert (x98 x76 (- x48 x15)))
(assert (x81 x151))
(assert (x98 x89 (- x76 x124)))
(assert (x112 x133 x117))
(assert (x20 x60 x48 x124 x92))
(assert (x98 x26 (- x76 x73)))
(assert (x114 x48 x60 x124 x92))
(assert (x98 x48 (- x76 x92)))
(assert (x20 x15 x73 x26 x140))
(assert (x20 x73 x15 x76 x89))
(assert (x115 x93))
(assert (x98 x15 (- x73 x125)))
(assert (x20 x124 x92 x76 x63))
(assert (x114 x76 x89 x73 x15))
(assert (x20 x73 x15 x89 x36))
(assert (x98 x15 (- x73 x78)))
(assert (x98 x26 (- x76 x15)))
(assert (x114 x124 x92 x76 x16))
(assert (x114 x26 x76 x92 x124))
(assert (x6 2))
(assert (x114 x124 x92 x64 x32))
(assert (x115 x74))
(assert (x98 x76 (- x78 x73)))
(assert (x98 x48 (- x76 x15)))
(assert (x98 x76 (- x89 x73)))
(assert (x114 x76 x26 x124 x92))
(assert (not x4))
(assert (x98 x32 x64))
(assert (x98 x76 (- x16 x15)))
(assert (x115 x117))
(assert (x98 x89 x36))
(assert (x71 (- x76 x92)))
(assert (x71 (- x124 x60)))
(assert (x114 x76 x89 x15 x73))
(assert (x98 x63 x125))
(assert (x98 x78 (- x76 x124)))
(assert (x71 (- x73 x92)))
(assert (x114 x89 x76 x73 x15))
(assert (x71 x26))
(assert (x115 x111))
(assert (x114 x78 x76 x73 x15))
(assert (x71 x48))
(assert (x115 x151))
(assert (x71 (- (x119 x91 x107) x15)))
(assert (x114 x15 x73 x63 x76))
(assert (x114 x78 x76 x124 x92))
(assert (x114 x15 x73 x89 x76))
(assert (x114 x92 x124 x76 x89))
(assert (x20 x124 x92 x16 x24))
(assert (x98 x92 (- x124 x140)))
(assert (x114 x124 x92 x32 x64))
(assert (x98 x63 (- x125 x73)))
(assert (x114 x111 x78 x73 x15))
(assert (x98 x76 (- x78 x124)))
(assert (x114 x140 x26 x124 x92))
(assert (x98 x124 (- x92 x48)))
(assert (x115 x83))
(assert (x81 x133))
(assert (x71 (- x89 x73)))
(assert (x41 x126 x12))
(assert (x71 (- x124 x78)))
(assert (x114 x32 x64 x92 x124))
(assert (x115 x82))
(assert (x20 x15 x73 x76 x78))
(assert (x20 x76 x89 x124 x92))
(assert (x71 (- x15 x60)))
(assert (x98 x76 (- x78 x15)))
(assert (x98 x124 (- x92 (x119 x91 x107))))
(assert (x114 x36 x89 x124 x92))
(assert (x71 x89))
(assert (x20 x36 x89 x73 x15))
(assert (x114 x140 x26 x92 x124))
(assert (x20 x63 x125 x73 x15))
(assert (x114 x76 x78 x15 x73))
(assert (x98 x92 (- x124 x76)))
(assert (x98 x48 (- x60 x124)))
(assert (x98 x124 (- x92 x64)))
(assert (x114 x76 x16 x15 x73))
(assert (x71 (- x24 x92)))
(assert (x71 (- x92 x111)))
(assert (x98 x92 (- x124 x16)))
(assert (x114 x36 x89 x92 x124))
(assert (x114 x15 x73 x36 x89))
(assert (x98 x124 (- x92 x36)))
(assert (x81 x79))
(assert (x98 x26 (- x140 x73)))
(assert (x71 x64))
(assert (x114 x92 x124 x111 x78))
(assert (x71 (- x92 x26)))
(assert (x114 x89 x36 x15 x73))
(assert (x114 x15 x73 x76 x48))
(assert (x20 x73 x15 x16 x24))
(assert (x115 x131))
(assert (x20 x76 x26 x124 x92))
(assert (x115 x101))
(assert (x98 x89 (- x36 x124)))
(assert (x98 x63 (- x76 x92)))
(assert (x114 x92 x124 (x119 x91 x107) x14))
(assert (x98 x76 x78))
(assert (x98 x73 (- x15 x32)))
(assert (x81 x97))
(assert (x115 x55))
(assert (x20 x124 x92 x32 x64))
(assert (x98 x16 (- x76 x124)))
(assert (x71 (- x111 x124)))
(assert (x114 x78 x111 x73 x15))
(assert (x115 x90))
(assert (x114 x124 x92 x14 (x119 x91 x107)))
(assert (x98 x89 (- x76 x73)))
(assert (x134 x133))
(assert (x81 x57))
(assert (x98 x36 (- x89 x73)))
(assert (x20 x92 x124 x78 x111))
(assert (x20 x124 x92 x76 x89))
(assert (x20 x73 x15 x76 x48))
(assert (x20 x78 x111 x124 x92))
(assert (x114 x89 x76 x15 x73))
(assert (x114 x76 x89 x92 x124))
(assert (x98 x92 (- x124 (x119 x91 x107))))
(assert (x115 x76))
(assert (x20 x26 x76 x124 x92))
(assert (x98 x14 (- (x119 x91 x107) x15)))
(assert (x114 x76 x63 x15 x73))
(assert (x114 x26 x140 x124 x92))
(assert (x20 x60 x48 x73 x15))
(assert (x98 x48 (- x60 x92)))
(assert (x98 x89 (- x36 x92)))
(assert (x115 x79))
(assert (x114 x73 x15 x26 x140))
(assert (x114 x92 x124 x16 x24))
(assert (x98 x78 x111))
(assert (x20 x16 x24 x73 x15))
(assert (x98 x92 (- x124 x48)))
(assert (x114 x48 x76 x124 x92))
(assert (x114 x15 x73 x16 x76))
(assert (x71 (- x124 x15)))
(assert (x114 x76 x78 x124 x92))
(assert (x98 x63 (- x76 x124)))
(assert (x114 x15 x73 x48 x76))
(assert (x114 x89 x36 x92 x124))
(assert (x114 x92 x124 x76 x48))
(assert (x20 x73 x15 x76 x16))
(assert (x114 x63 x76 x92 x124))
(assert (x114 x36 x89 x73 x15))
(assert (x114 x124 x92 x76 x78))
(assert (x114 x64 x32 x15 x73))
(assert (x98 x76 (- x26 x15)))
(assert (x114 x73 x15 x60 x48))
(assert (x98 x48 (- x60 x73)))
(assert (x20 x76 x16 x124 x92))
(assert (x20 x76 x48 x73 x15))
(assert (x71 (- x63 x92)))
(assert (x114 x16 x76 x92 x124))
(assert (x114 x78 x111 x15 x73))
(assert (x114 (x119 x91 x107) x14 x124 x92))
(assert (x71 (- x14 x15)))
(assert (x71 x14))
(assert (x98 x92 (- x124 x15)))
(assert (x20 x32 x64 x73 x15))
(assert (x71 (- x92 x60)))
(assert (x20 x124 x92 x76 x48))
(assert (x114 x15 x73 x32 x64))
(assert (x114 x140 x26 x15 x73))
(assert (x98 x124 (- x92 x14)))
(assert (x20 x73 x15 x78 x111))
(assert (x115 x86))
(assert (x115 x39))
(assert (x71 (- x78 x73)))
(assert (x114 x16 x24 x15 x73))
(assert (x114 x92 x124 x24 x16))
(assert (x114 x48 x76 x15 x73))
(assert (x38 x102))
(assert (x20 x76 x89 x73 x15))
(assert (x71 (- x92 x125)))
(assert (x114 x73 x15 x64 x32))
(assert (x98 x76 (- x26 x92)))
(assert (x71 (- x124 x111)))
(assert (x114 x124 x92 x140 x26))
(assert (x115 x142))
(assert (x71 (- x124 x26)))
(assert (x98 x63 (- x76 x73)))
(assert (x114 x73 x15 x14 (x119 x91 x107)))
(assert (x71 (- x73 x60)))
(assert (x20 x63 x125 x124 x92))
(assert (x115 x109))
(assert (x20 x63 x76 x124 x92))
(assert (x114 x73 x15 x36 x89))
(assert (x71 (- x73 x76)))
(assert (x98 x111 (- x78 x15)))
(assert (x71 (- x140 x124)))
(assert (x98 x124 (- x92 x111)))
(assert (x6 x28))
(assert (x115 x34))
(assert (x98 x78 (- x76 x92)))
(assert (x115 x80))
(assert (x71 (- x124 x16)))
(assert (x98 x124 (- x92 x89)))
(assert (x20 x73 x15 x76 x63))
(assert (x114 x89 x36 x124 x92))
(assert (x98 x124 (- x92 x26)))
(assert (x20 x78 x76 x73 x15))
(assert (x71 (- x92 x32)))
(assert (x20 x15 x73 x16 x24))
(assert (x114 x76 x48 x73 x15))
(assert (x71 (- x15 x48)))
(assert (x71 x125))
(assert (x98 x15 (- x73 x111)))
(assert (x115 x107))
(assert (x71 (- x60 x73)))
(assert (x98 x124 (- x92 x15)))
(assert (x71 x111))
(assert (x98 x24 (- x16 x124)))
(assert (x114 x92 x124 x89 x36))
(assert (x98 x73 (- x15 x78)))
(assert (x98 x89 (- x36 x73)))
(assert (x114 x92 x124 x76 x78))
(assert (x71 (- x64 x124)))
(assert (x20 x124 x92 x26 x140))
(assert (x98 x16 (- x76 x15)))
(assert (x114 x24 x16 x15 x73))
(assert (x20 x92 x124 x73 x15))
(assert (x20 x78 x111 x73 x15))
(assert (x114 x63 x125 x73 x15))
(assert (x114 x15 x73 x16 x24))
(assert (x71 (- x48 x15)))
(assert (x98 x124 (- x92 x140)))
(assert (x114 x76 x16 x124 x92))
(assert (x98 x73 (- x15 x48)))
(assert (x98 x76 (- x48 x124)))
(assert (x71 (- x125 x73)))
(assert (x115 x37))
(assert (x98 x76 (- x63 x92)))
(assert (x20 x73 x15 x76 x78))
(assert (x98 (x119 x91 x107) (- x14 x73)))
(assert (x98 x73 (- x15 x89)))
(assert (x114 x125 x63 x15 x73))
(assert (x71 (- x73 x36)))
(assert (x98 x16 (- x24 x124)))
(assert (x115 x35))
(assert (x98 x36 (- x89 x92)))
(assert (x71 (- x15 x76)))
(assert (x71 (- x15 x111)))
(assert (x98 x16 (- x24 x73)))
(assert (x114 x26 x76 x73 x15))
(assert (x114 x73 x15 x92 x124))
(assert (x114 x111 x78 x15 x73))
(assert (x98 x124 (- x92 x60)))
(assert (x98 x26 (- x76 x124)))
(assert (x71 (- x36 x92)))
(assert (x71 (- x89 x15)))
(assert (x114 x15 x73 x78 x111))
(assert (x71 (- x92 x73)))
(assert (x20 x92 x124 x16 x24))
(assert (x114 x92 x124 x26 x76))
(assert (x71 (- x16 x73)))
(assert (x98 x92 (- x124 x64)))
(assert (x71 (- x73 (x119 x91 x107))))
(assert (x114 x73 x15 x76 x16))
(assert (x71 (- x125 x92)))
(assert (x114 x124 x92 x36 x89))
(assert (x20 x26 x76 x73 x15))
(assert (x71 (- x48 x73)))
(assert (x114 x60 x48 x15 x73))
(assert (x98 x48 (- x76 x73)))
(assert (x98 x73 (- x15 x26)))
(assert (x20 x15 x73 x124 x92))
(assert (x71 (- x125 x124)))
(assert (x98 x60 (- x48 x124)))
(assert (x114 x89 x76 x124 x92))
(assert (x114 x32 x64 x15 x73))
(assert (x98 x15 (- x73 x64)))
(assert (x114 x124 x92 x76 x63))
(assert (x71 (- x64 x15)))
(assert (x115 x139))
(assert (x115 x78))
(assert (x20 x140 x26 x124 x92))
(assert (x20 x124 x92 (x119 x91 x107) x14))
(assert (x71 (x119 x91 x107)))
(assert (x71 (- x73 x32)))
(assert (x71 (- x15 x24)))
(assert (x98 x26 (- x140 x124)))
(assert (x98 x36 (- x89 x15)))
(assert (x114 (x119 x91 x107) x14 x92 x124))
(assert (x114 x16 x76 x73 x15))
(assert (x114 x60 x48 x92 x124))
(assert (x114 x125 x63 x124 x92))
(assert (x71 (- x92 x64)))
(assert (and (= (x96 9 3) 27) (= 9 (x96 3 3)) (= (x96 27 3) 81) (= 81 (x96 9 9))))
(assert (x98 x63 (- x76 x15)))
(assert (x114 x92 x124 x76 x26))
(assert (x71 (- x73 x124)))
(assert (x71 x73))
(assert (x98 x32 (- x64 x15)))
(assert (x114 x15 x73 x76 x89))
(assert (x98 x78 (- x111 x92)))
(assert (x114 x15 x73 x78 x76))
(assert (x71 (- x15 x78)))
(assert (x98 x73 (- x15 x92)))
(assert (x71 x78))
(assert (x98 x76 (- x26 x124)))
(assert (x114 x63 x76 x15 x73))
(assert (x114 x92 x124 x32 x64))
(assert (x71 (- x63 x124)))
(assert (x98 x73 (- x15 x76)))
(assert (x71 (- x73 x24)))
(assert (x114 x26 x76 x15 x73))
(assert (x98 x124 (- x92 x73)))
(assert (x114 x73 x15 x89 x76))
(assert (x98 x78 (- x76 x15)))
(assert (x71 x24))
(assert (x98 x73 (- x15 x14)))
(assert (x98 x36 (- x89 x124)))
(assert (x71 (- x92 x78)))
(assert (= (and (not x68) x147) x9))
(assert (x98 x124 x92))
(assert (x71 (- x73 x140)))
(assert (x20 x125 x63 x124 x92))
(assert (x114 x73 x15 x111 x78))
(assert (x114 x48 x60 x92 x124))
(assert (x71 (- x32 x92)))
(assert (x114 x73 x15 (x119 x91 x107) x14))
(assert (x98 x32 (- x64 x92)))
(assert (x114 x15 x73 x76 x63))
(assert (x71 (- x73 x89)))
(assert (x114 x92 x124 x125 x63))
(assert (x71 x76))
(assert (x20 x89 x76 x124 x92))
(assert (x71 (- x24 x73)))
(assert (x98 x140 (- x26 x92)))
(assert (x20 x92 x124 x76 x26))
(assert (x98 x78 (- x76 x73)))
(assert (x98 x124 (- x92 x76)))
(assert (x98 x125 (- x63 x92)))
(assert (x71 (- x32 x73)))
(assert (x71 (- x111 x73)))
(assert (x71 (- x15 x124)))
(assert (x98 x92 (- x124 x24)))
(assert (x31 x28 2))
(assert (x71 (- x26 x92)))
(assert (x98 x15 (- x73 x16)))
(assert (x114 x89 x76 x92 x124))
(assert (x114 x89 x36 x73 x15))
(assert (x98 x60 (- x48 x92)))
(assert (x114 x15 x73 x89 x36))
(assert (x71 (- x14 x92)))
(assert (x114 x124 x92 x78 x111))
(assert (x114 x73 x15 x26 x76))
(assert (x71 (- x26 x15)))
(assert (x98 x73 (- x15 x63)))
(assert (x98 x76 (- x16 x124)))
(assert (x114 x92 x124 x15 x73))
(assert (x20 x89 x36 x73 x15))
(assert (x20 x76 x78 x124 x92))
(assert (x114 x92 x124 x89 x76))
(assert (x114 x73 x15 x76 x26))
(assert (x114 x92 x124 x14 (x119 x91 x107)))
(assert (x98 x76 (- x89 x15)))
(assert (x71 x60))
(assert (x71 (- x92 x89)))
(assert (x98 x16 (- x76 x73)))
(assert (x20 x73 x15 x26 x140))
(assert (x20 x124 x92 x78 x111))
(assert (x114 x15 x73 x26 x140))
(assert (x114 x60 x48 x124 x92))
(assert (x98 x92 (- x124 x63)))
(assert (x20 x26 x140 x73 x15))
(assert (x98 x24 (- x16 x73)))
(assert (x20 x124 x92 x89 x36))
(assert (x41 x133 x97))
(assert (x114 x24 x16 x73 x15))
(assert (x98 x111 (- x78 x92)))
(assert (x114 x15 x73 x140 x26))
(assert (x114 x64 x32 x124 x92))
(assert (x20 x92 x124 x76 x48))
(assert (x98 x60 (- x48 x15)))
(assert (x115 x89))
(assert (x114 x15 x73 x92 x124))
(assert (x114 x73 x15 x32 x64))
(assert (x115 x69))
(assert (x71 (- (x119 x91 x107) x92)))
(assert (x114 x76 x48 x15 x73))
(assert (x71 (- x15 x89)))
(assert (x114 x14 (x119 x91 x107) x15 x73))
(assert (x98 x64 (- x32 x15)))
(assert (x98 x92 (- x124 x89)))
(assert (x134 x117))
(assert (x98 x92 (- x124 x14)))
(assert (x114 x73 x15 x16 x24))
(assert (x20 x15 x73 (x119 x91 x107) x14))
(assert (x71 (- x73 x16)))
(assert (x71 (- x111 x15)))
(assert (x98 x92 (- x124 x32)))
(assert (x114 x140 x26 x73 x15))
(assert (x71 (- x60 x124)))
(assert (x98 x140 (- x26 x15)))
(assert (x98 x32 (- x64 x73)))
(assert (x114 x15 x73 x24 x16))
(assert (x98 x124 (- x92 x24)))
(assert (x71 (- x92 x48)))
(assert (= x147 true))
(assert (= (=> (and (and (= x86 x73) (= (x62 x102) x58) (>= x139 0) (= x17 x133) x29 (<= x102 1461501637330902918203684832716283019655932542975) (= (x45 (x96 x73 x15)) x79) (= x142 x73) (= (= 0 x141) x68) (= x15 x153) (< 0 x102) (= x17 x35) (= x153 x3) (= x141 (x45 (- x43 (ite (< x90 x79) 1 0)))) (= x15 x34) (= x29 (> (x62 x102) 0)) (= (x67 x102) x139) (= (x138 (- x90 x79)) x43) (= x142 x39) (< 0 x58) (= x137 x133) (= x90 (x40 (x96 x73 x15) 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x69 1415856751)) (or (and (not x68) (and (= x74 (x45 (x96 x76 x89))) (= (x45 (x96 x76 x78)) x61) (= (x45 (- x141 (ite (> x7 x79) 1 0))) x32) (= (x138 (- 0 x97)) x57) (= x125 (x138 (- 2 x80))) (= (x121 (+ (x45 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x17)) 1)) x117) (= x151 (x138 (- x79 x7))) (= x7 (x40 (x96 x73 x15) x133)) (= x14 (x45 (x96 x26 x140))) (= x136 x101) (= (x45 (x96 x78 x111)) x16) (= (x128 x133 x97) x76) (= x89 (x145 2 x28)) (= (x138 (- 2 x37)) x60) (< x141 x17) (= x37 (x45 (x96 x76 x48))) (= x48 (x45 (x96 x89 x36))) (= (x45 (x96 x16 x24)) x26) (= (x138 (- 2 x74)) x36) (= (x128 x151 x97) x91) (= (x45 (x96 x48 x60)) x63) (= (x138 (- 2 x82)) x24) (= (x45 (x96 (x119 x91 x107) x14)) x136) (= (x138 (- 2 x61)) x111) (= (x45 (x96 x76 x16)) x82) (= (x121 (+ x83 1)) x64) (= (x22 x133 x117) x97) (= (x45 (x96 x32 x64)) x107) (= (x138 (- 2 x11)) x140) (= (x128 x57 x97) x83) (= x80 (x45 (x96 x76 x63))) (= (x45 (* x76 3)) x28) (= x11 (x45 (x96 x76 x26))) (= x78 (x45 (x96 x63 x125))))) (and x68 (and (> x17 0) (= x55 (x128 x79 x133)) (= x101 x55))))) x95) x4))
(assert (x98 x15 (- x73 x26)))
(assert (x20 x89 x36 x124 x92))
(assert (x98 x92 (- x124 x60)))
(assert (x71 (- x48 x124)))
(assert (x114 x73 x15 x124 x92))
(assert (x115 x91))
(assert (x71 (- (x119 x91 x107) x73)))
(assert (x71 (- x36 x73)))
(assert (x71 (- x63 x15)))
(assert (x98 x76 (- x89 x124)))
(assert (x98 x15 (- x73 (x119 x91 x107))))
(assert (x114 x16 x24 x73 x15))
(assert (x114 x73 x15 x76 x89))
(assert (x114 x15 x73 x76 x26))
(assert (x114 x16 x76 x124 x92))
(assert (x71 x32))
(assert (x20 x15 x73 x63 x125))
(assert (x115 x141))
(assert (x114 x92 x124 x60 x48))
(assert (x114 x125 x63 x73 x15))
(assert (x71 (- x92 x76)))
(assert (x114 x73 x15 x78 x111))
(assert (x98 x26 (- x140 x92)))
(assert (x114 x78 x111 x124 x92))
(assert (x71 x63))
(assert (x114 x111 x78 x124 x92))
(assert (x114 x76 x78 x92 x124))
(assert (x115 x137))
(assert (x98 x76 x26))
(assert (x114 x76 x63 x73 x15))
(assert (x114 x73 x15 x63 x76))
(assert (x114 x92 x124 x76 x16))
(assert (x98 x76 x89))
(assert (x71 (- x140 x15)))
(assert (x98 x76 (- x48 x73)))
(assert (x98 x48 (- x76 x124)))
(assert (x114 x92 x124 x140 x26))
(assert (x114 x73 x15 x76 x63))
(assert (x98 x124 (- x92 x78)))
(assert (x20 x15 x73 x76 x26))
(assert (x20 x48 x76 x124 x92))
(assert (x114 x76 x16 x92 x124))
(assert (x20 x92 x124 x76 x16))
(assert (x71 (- x15 (x119 x91 x107))))
(assert (x114 x124 x92 x16 x76))
(assert (x98 x125 (- x63 x124)))
(assert (x114 x32 x64 x73 x15))
(assert (= (=> (and (= x106 x101) (and (= x33 x92) (= x86 x59) (= x34 x1) (= x131 x99) (= x126 x84) (= x56 x33) (= x93 x109) (= x56 x1) (= x87 x123) (= x99 x124) (= (x96 x124 x92) x84) (= x149 x146) (= x137 x2) (= x12 x113) (= (= x10 x87) x127) (= x146 x123) (= (x128 x126 x12) x149) (= x59 x131) (= x106 x109) (= x44 x113) (= x93 x10) (= x2 x44))) x127) x95))
(assert (x115 x64))
(assert (x20 x15 x73 x32 x64))
(assert (x114 x15 x73 x48 x60))
(assert (x114 x76 x26 x15 x73))
(assert (x114 x73 x15 x76 x78))
(assert (x114 x60 x48 x73 x15))
(assert (x98 x73 (- x15 x60)))
(assert (x71 x140))
(assert (x98 x15 (- x73 x36)))
(assert (x71 (- x26 x124)))
(assert (x71 (- x124 (x119 x91 x107))))
(assert (x115 x16))
(assert (x115 x57))
(assert (x71 (- x16 x92)))
(assert (x114 x48 x60 x73 x15))
(assert (x115 x136))
(assert (x71 (- x140 x73)))
(assert (x20 x15 x73 x89 x36))
(assert (x71 x92))
(assert (x98 (x119 x91 x107) (- x14 x15)))
(assert (x98 x73 (- x15 x16)))
(assert (x115 x15))
(assert (x71 (- x60 x92)))
(assert (x114 x124 x92 x24 x16))
(assert (x71 (- x92 x15)))
(assert (x20 x92 x124 x32 x64))
(assert (x20 x76 x78 x73 x15))
(assert (x98 x48 (- x60 x15)))
(assert (x71 (- x15 x140)))
(assert (x114 x73 x15 x24 x16))
(assert (x98 x14 (- (x119 x91 x107) x124)))
(assert (x71 (- x124 x36)))
(assert (x20 x124 x92 x76 x16))
(assert (x115 x48))
(assert (x71 (- x124 x14)))
(assert (x20 x73 x15 (x119 x91 x107) x14))
(assert (x114 x64 x32 x73 x15))
(assert (x98 x76 x16))
(assert (x98 x73 (- x15 x24)))
(assert (x71 (- x76 x73)))
(assert (x20 x92 x124 x26 x140))
(assert (x41 x151 x97))
(assert (x71 (- x124 x73)))
(assert (x98 x64 (- x32 x124)))
(assert (x71 (- x92 x14)))
(assert (x114 x76 x89 x124 x92))
(assert (x20 x36 x89 x124 x92))
(assert (x98 x92 (- x124 x73)))
(assert (x98 x76 (- x63 x15)))
(assert (x98 x15 (- x73 x89)))
(assert (x98 x92 (- x124 x26)))
(assert (x71 (- x78 x15)))
(assert (x71 (- x64 x92)))
(assert (x71 (- x16 x124)))
(assert (x114 x124 x92 x111 x78))
(assert (x20 x14 (x119 x91 x107) x124 x92))
(assert (x71 x15))
(assert (x114 x24 x16 x92 x124))
(assert (x114 x124 x92 x16 x24))
(assert (x114 x124 x92 x26 x76))
(assert (x114 x63 x125 x15 x73))
(assert (x114 x15 x73 x76 x78))
(assert (x71 3))
(assert (x98 x26 x140))
(assert (x115 x3))
(assert (x98 x63 (- x125 x15)))
(assert (x114 x92 x124 x73 x15))
(assert (x20 x92 x124 (x119 x91 x107) x14))
(assert (x114 x14 (x119 x91 x107) x73 x15))
(assert (x71 (- x124 x89)))
(assert (x98 x15 (- x73 x140)))
(assert (x114 x15 x73 x60 x48))
(assert (x71 (- x92 x24)))
(assert (x71 (- x14 x73)))
(assert (x98 x15 (- x73 x48)))
(assert (x114 x92 x124 x48 x60))
(assert (x20 x16 x76 x73 x15))
(assert (x98 x73 (- x15 x140)))
(assert (x98 x78 (- x111 x73)))
(assert (x98 x14 (- (x119 x91 x107) x92)))
(assert (x98 x76 (- x16 x92)))
(assert (x71 (- (x119 x91 x107) x124)))
(assert (x114 x76 x48 x92 x124))
(assert (x71 (- x76 x124)))
(assert (x114 x124 x92 x63 x76))
(assert (x115 x60))
(assert (x114 x15 x73 x14 (x119 x91 x107)))
(assert (x71 (- x15 x36)))
(assert (x41 x57 x97))
(assert (x20 x124 x92 x76 x78))
(assert (x98 x124 (- x92 x125)))
(assert (x20 x76 x48 x124 x92))
(assert (x98 x73 (- x15 x36)))
(assert (x98 x78 (- x111 x124)))
(assert (= x152 (and x147 x68)))
(assert (x71 x16))
(assert (x115 x73))
(assert (x114 x92 x124 x64 x32))
(assert (x98 x76 (- x63 x124)))
(assert (x114 x78 x111 x92 x124))
(assert (x114 x92 x124 x16 x76))
(assert (x71 (- x24 x124)))
(assert (x71 (- x92 x140)))
(assert (x71 (- x73 x111)))
(assert (and (and (= (- (* 3 (- x76 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x76 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x96 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x76 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x76 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (x96 3 (- x76 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x96 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x76) (- (* 3 x76) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x76)))) (x50 3 x76) (x53 3 x76) (x18 3 x76) (x143 3 x76) (= (x96 3 x76) (* 3 x76)) (x27 3 x76)))
(assert (x114 x48 x76 x73 x15))
(assert (x115 x43))
(assert (x114 x92 x124 x78 x76))
(assert (x71 (- x124 x32)))
(assert (x51 x107))
(assert (x98 x140 (- x26 x73)))
(assert (x115 x153))
(assert (x71 (- x15 x16)))
(assert (x98 x125 (- x63 x73)))
(assert (x115 x133))
(assert (x115 x28))
(assert (x71 (- x73 x14)))
(assert (x20 x48 x60 x124 x92))
(assert (x71 (- x32 x15)))
(assert (x115 x125))
(assert (x71 (- x124 x76)))
(assert (x114 x15 x73 x125 x63))
(assert (x114 x124 x92 x89 x76))
(assert (x81 x126))
(assert (x98 x73 (- x15 x125)))
(assert (x114 x92 x124 x78 x111))
(assert (x98 x140 (- x26 x124)))
(assert (x114 x73 x15 x48 x76))
(assert (x20 x73 x15 x63 x125))
(assert (x20 x64 x32 x124 x92))
(assert (x71 (- x15 x92)))
(assert (x20 x24 x16 x124 x92))
(assert (x114 x63 x76 x124 x92))
(assert (x114 x76 x63 x92 x124))
(assert (x98 x15 (- x73 x14)))
(assert (x98 x73 (- x15 x111)))
(assert (x115 x17))
(assert (x114 x124 x92 x76 x48))
(assert (x20 (x119 x91 x107) x14 x73 x15))
(assert (x114 x63 x125 x92 x124))
(assert (x114 x73 x15 x63 x125))
(assert (x114 x73 x15 x140 x26))
(assert (x71 (- x73 x64)))
(assert (x71 (- x124 x125)))
(assert (x71 (- x15 x26)))
(assert (x115 x32))
(assert (x98 x15 (- x73 x60)))
(assert (x98 x15 (- x73 x24)))
(assert (x98 x63 (- x125 x124)))
(assert (x114 x92 x124 x26 x140))
(assert (x81 x12))
(assert (x98 x92 (- x124 x125)))
(assert (x114 x124 x92 x73 x15))
(assert (x114 x73 x15 x125 x63))
(assert (x71 (- x26 x73)))
(assert (x20 x111 x78 x73 x15))
(assert (x20 x15 x73 x76 x63))
(assert (x114 x124 x92 x76 x26))
(assert (x114 x15 x73 x76 x16))
(assert (x114 x73 x15 x89 x36))
(assert (x20 x24 x16 x73 x15))
(assert (x114 x124 x92 x48 x76))
(assert (x71 (- x15 x32)))
(assert (x114 x26 x140 x92 x124))
(assert (x114 x124 x92 x89 x36))
(assert (x98 x26 (- x140 x15)))
(assert (x71 (- x76 x15)))
(assert (x71 (- x73 x78)))
(assert (x71 (- x89 x92)))
(assert (x71 (- x60 x15)))
(assert (x98 x89 (- x36 x15)))
(assert (x20 x16 x24 x124 x92))
(assert (x20 x76 x63 x124 x92))
(assert (x114 x76 x78 x73 x15))
(assert (x114 x78 x76 x15 x73))
(assert (x71 x36))
(assert (x114 x15 x73 x124 x92))
(assert (x115 x36))
(assert (x20 x76 x63 x73 x15))
(assert (x71 (- x32 x124)))
(assert (x71 (- x14 x124)))
(assert (x115 x44))
(assert (x71 (- x124 x24)))
(assert (x20 x78 x76 x124 x92))
(assert (x98 x16 (- x24 x15)))
(assert (x98 x15 (- x73 x63)))
(assert (x98 x92 (- x124 x78)))
(assert (x20 x48 x60 x73 x15))
(assert (x20 x26 x140 x124 x92))
(assert (x20 x92 x124 x48 x60))
(assert (x20 (x119 x91 x107) x14 x124 x92))
(assert (x71 (- x36 x124)))
(assert (x98 x76 (- x48 x92)))
(assert (x115 x61))
(assert (x20 x140 x26 x73 x15))
(assert (x98 x64 (- x32 x92)))
(assert (x98 x76 (- x63 x73)))
(assert (x115 x24))
(assert (x20 x73 x15 x32 x64))
(assert (x114 x76 x63 x124 x92))
(assert (x98 x15 (- x73 x32)))
(assert (x71 x124))
(assert (= (or x152 x9) x13))
(assert (x20 x63 x76 x73 x15))
(assert (x114 x32 x64 x124 x92))
(assert (x114 x76 x26 x92 x124))
(assert (x20 x124 x92 x73 x15))
(assert (x98 x60 (- x48 x73)))
(assert (x71 (- x15 x63)))
(assert (x71 (- x73 x125)))
(assert (x115 x11))
(assert (x114 x15 x73 x64 x32))
(assert (x114 x92 x124 x63 x76))
(assert (x115 x56))
(assert (x71 (- x125 x15)))
(assert (x115 x58))
(assert (x98 x76 x63))
(assert (x114 x26 x140 x73 x15))
(assert (x20 x92 x124 x76 x89))
(assert (x98 x63 (- x125 x92)))
(assert (x41 x79 x133))
(assert (x71 (- x124 x48)))
(assert (x51 x91))
(assert (x20 x125 x63 x73 x15))
(assert (x20 x15 x73 x76 x48))
(assert (x98 x24 (- x16 x15)))
(assert (x114 x124 x92 x15 x73))
(assert (x114 x26 x76 x124 x92))
(assert (x114 x125 x63 x92 x124))
(assert (x20 x64 x32 x73 x15))
(assert (x71 (- x89 x124)))
(assert (x71 (- x78 x124)))
(assert (x71 (- x64 x73)))
(assert (x98 x64 (- x32 x73)))
(assert (x98 x73 (- x15 (x119 x91 x107))))
(assert (x20 x76 x26 x73 x15))
(assert (x20 x48 x76 x73 x15))
(assert (x98 x76 x48))
(assert (x114 x124 x92 x76 x89))
(assert (x20 x92 x124 x63 x125))
(assert (x98 x76 (- x16 x73)))
(assert (x114 x73 x15 x16 x76))
(assert (x114 x36 x89 x15 x73))
(assert (x98 x89 (- x76 x92)))
(assert (x20 x15 x73 x76 x16))
(assert (x20 x76 x16 x73 x15))
(assert (x98 x76 (- x89 x92)))
(assert (x98 x125 (- x63 x15)))
(check-sat)
(exit)
