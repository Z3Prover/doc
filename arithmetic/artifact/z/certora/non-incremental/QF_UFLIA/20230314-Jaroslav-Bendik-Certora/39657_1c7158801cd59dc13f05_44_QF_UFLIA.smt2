(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x123 () Int)
(declare-fun x866 () Int)
(declare-fun x601 () Bool)
(declare-fun x598 () Bool)
(declare-fun x177 () Bool)
(declare-fun x188 () Int)
(declare-fun x99 () Bool)
(declare-fun x474 () Bool)
(declare-fun x914 () Int)
(declare-fun x274 () Int)
(declare-fun x399 () Bool)
(declare-fun x654 () Bool)
(declare-fun x977 () Bool)
(declare-fun x279 () Bool)
(declare-fun x713 () Int)
(declare-fun x575 () Bool)
(declare-fun x756 () Int)
(declare-fun x1075 () Int)
(declare-fun x646 () Int)
(declare-fun x252 () Bool)
(declare-fun x520 () Int)
(declare-fun x511 () Bool)
(declare-fun x867 () Int)
(declare-fun x331 () Int)
(declare-fun x35 (Int) Int)
(declare-fun x536 () Int)
(declare-fun x651 () Int)
(declare-fun x619 () Int)
(declare-fun x303 () Bool)
(declare-fun x877 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x206 () Bool)
(declare-fun x285 () Int)
(declare-fun x787 () Int)
(declare-fun x479 () Int)
(declare-fun x344 () Bool)
(declare-fun x997 () Int)
(declare-fun x1008 () Bool)
(declare-fun x98 () Int)
(declare-fun x1076 () Int)
(declare-fun x484 () Bool)
(declare-fun x916 () Bool)
(declare-fun x770 () Bool)
(declare-fun x251 () Int)
(declare-fun x287 () Bool)
(declare-fun x64 () Bool)
(declare-fun x902 () Bool)
(declare-fun x157 () Bool)
(declare-fun x345 () Int)
(declare-fun x182 () Int)
(declare-fun x424 () Int)
(declare-fun x52 () Bool)
(declare-fun x227 () Int)
(declare-fun x826 () Bool)
(declare-fun x859 () Int)
(declare-fun x786 () Int)
(declare-fun x720 () Bool)
(declare-fun x862 () Bool)
(declare-fun x947 () Bool)
(declare-fun x586 () Bool)
(declare-fun x291 () Int)
(declare-fun x72 () Int)
(declare-fun x741 () Bool)
(declare-fun x144 () Bool)
(declare-fun x348 () Int)
(declare-fun x40 () Int)
(declare-fun x991 () Bool)
(declare-fun x765 () Int)
(declare-fun x852 () Bool)
(declare-fun x779 () Bool)
(declare-fun x77 () Int)
(declare-fun x836 () Int)
(declare-fun x214 () Int)
(declare-fun x708 () Int)
(declare-fun x673 () Bool)
(declare-fun x248 () Int)
(declare-fun x169 () Int)
(declare-fun x173 () Int)
(declare-fun x897 () Int)
(declare-fun x525 () Bool)
(declare-fun x510 () Int)
(declare-fun x1045 () Bool)
(declare-fun x1079 () Int)
(declare-fun x145 () Bool)
(declare-fun x558 () Bool)
(declare-fun x129 () Int)
(declare-fun x335 () Int)
(declare-fun x318 () Int)
(declare-fun x811 () Int)
(declare-fun x719 () Bool)
(declare-fun x529 () Int)
(declare-fun x482 () Int)
(declare-fun x12 () Int)
(declare-fun x989 () Bool)
(declare-fun x20 () Bool)
(declare-fun x690 () Bool)
(declare-fun x561 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x509 () Bool)
(declare-fun x556 () Bool)
(declare-fun x46 () Bool)
(declare-fun x184 () Int)
(declare-fun x781 () Int)
(declare-fun x328 () Bool)
(declare-fun x495 () Int)
(declare-fun x642 () Int)
(declare-fun x503 () Int)
(declare-fun x792 () Int)
(declare-fun x284 () Int)
(declare-fun x920 () Bool)
(declare-fun x788 () Int)
(declare-fun x709 () Int)
(declare-fun x30 (Int) Int)
(declare-fun x846 () Int)
(declare-fun x183 () Bool)
(declare-fun x838 () Bool)
(declare-fun x313 () Bool)
(declare-fun x382 () Int)
(declare-fun x645 () Bool)
(declare-fun x570 () Int)
(declare-fun x913 () Bool)
(declare-fun x809 () Int)
(declare-fun x856 () Bool)
(declare-fun x745 () Bool)
(declare-fun x416 () Bool)
(declare-fun x475 () Int)
(declare-fun x873 () Int)
(declare-fun x487 () Bool)
(declare-fun x900 () Int)
(declare-fun x842 () Int)
(declare-fun x388 () Bool)
(declare-fun x534 () Bool)
(declare-fun x576 () Bool)
(declare-fun x305 () Bool)
(declare-fun x711 () Int)
(declare-fun x870 () Bool)
(declare-fun x864 () Bool)
(declare-fun x966 () Bool)
(declare-fun x102 () Bool)
(declare-fun x927 () Int)
(declare-fun x306 () Int)
(declare-fun x603 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x228 () Int)
(declare-fun x293 () Bool)
(declare-fun x863 () Int)
(declare-fun x33 () Int)
(declare-fun x5 () Bool)
(declare-fun x120 () Bool)
(declare-fun x117 () Bool)
(declare-fun x652 () Bool)
(declare-fun x360 (Int) Int)
(declare-fun x431 () Int)
(declare-fun x454 () Int)
(declare-fun x791 () Bool)
(declare-fun x267 () Int)
(declare-fun x143 () Bool)
(declare-fun x834 () Bool)
(declare-fun x563 () Int)
(declare-fun x322 () Bool)
(declare-fun x327 () Bool)
(declare-fun x594 () Bool)
(declare-fun x147 () Int)
(declare-fun x850 () Int)
(declare-fun x245 () Int)
(declare-fun x80 (Int) Int)
(declare-fun x578 () Int)
(declare-fun x8 () Int)
(declare-fun x321 () Bool)
(declare-fun x803 () Bool)
(declare-fun x680 () Int)
(declare-fun x142 () Bool)
(declare-fun x801 () Int)
(declare-fun x582 () Int)
(declare-fun x545 () Bool)
(declare-fun x660 () Int)
(declare-fun x521 () Bool)
(declare-fun x522 (Int) Int)
(declare-fun x124 () Bool)
(declare-fun x1060 () Int)
(declare-fun x780 () Bool)
(declare-fun x539 () Int)
(declare-fun x661 () Int)
(declare-fun x47 () Bool)
(declare-fun x174 (Int Int) Int)
(declare-fun x782 () Int)
(declare-fun x775 () Int)
(declare-fun x574 () Int)
(declare-fun x729 () Bool)
(declare-fun x958 () Bool)
(declare-fun x229 () Int)
(declare-fun x375 () Int)
(declare-fun x391 () Int)
(declare-fun x700 () Bool)
(declare-fun x568 () Int)
(declare-fun x644 () Bool)
(declare-fun x233 () Bool)
(declare-fun x810 () Int)
(declare-fun x457 () Int)
(declare-fun x100 () Int)
(declare-fun x301 () Bool)
(declare-fun x681 () Int)
(declare-fun x115 (Int) Int)
(declare-fun x1052 () Int)
(declare-fun x923 () Int)
(declare-fun x468 () Bool)
(declare-fun x757 () Bool)
(declare-fun x4 () Int)
(declare-fun x754 () Int)
(declare-fun x249 () Bool)
(declare-fun x150 () Int)
(declare-fun x760 () Int)
(declare-fun x259 () Bool)
(declare-fun x837 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1 () Int)
(declare-fun x583 () Int)
(declare-fun x136 () Bool)
(declare-fun x86 () Bool)
(declare-fun x909 () Bool)
(declare-fun x419 (Int) Int)
(declare-fun x1072 () Bool)
(declare-fun x1007 () Int)
(declare-fun x489 () Int)
(declare-fun x9 () Bool)
(declare-fun x225 () Bool)
(declare-fun x658 () Int)
(declare-fun x963 () Bool)
(declare-fun x715 () Bool)
(declare-fun x417 () Bool)
(declare-fun x298 () Int)
(declare-fun x389 () Bool)
(declare-fun x919 () Int)
(declare-fun x260 () Bool)
(declare-fun x361 () Bool)
(declare-fun x892 () Bool)
(declare-fun x202 () Int)
(declare-fun x148 () Int)
(declare-fun x326 () Int)
(declare-fun x127 () Int)
(declare-fun x380 () Int)
(declare-fun x356 () Int)
(declare-fun x888 () Int)
(declare-fun x191 () Bool)
(declare-fun x668 () Int)
(declare-fun x796 () Int)
(declare-fun x48 () Int)
(declare-fun x710 () Int)
(declare-fun x939 () Int)
(declare-fun x448 () Bool)
(declare-fun x874 () Int)
(declare-fun x351 () Int)
(declare-fun x442 () Int)
(declare-fun x175 () Int)
(declare-fun x541 () Int)
(declare-fun x773 () Bool)
(declare-fun x794 () Int)
(declare-fun x275 () Bool)
(declare-fun x498 () Int)
(declare-fun x425 () Int)
(declare-fun x119 () Bool)
(declare-fun x59 () Int)
(declare-fun x383 () Int)
(declare-fun x750 () Int)
(declare-fun x392 () Bool)
(declare-fun x906 () Bool)
(declare-fun x41 () Int)
(declare-fun x112 () Int)
(declare-fun x921 () Bool)
(declare-fun x753 () Int)
(declare-fun x27 () Bool)
(declare-fun x26 () Bool)
(declare-fun x426 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x683 () Bool)
(declare-fun x2 () Bool)
(declare-fun x647 () Int)
(declare-fun x656 () Int)
(declare-fun x984 (Int) Int)
(declare-fun x537 () Bool)
(declare-fun x407 () Bool)
(declare-fun x802 () Bool)
(declare-fun x192 () Bool)
(declare-fun x221 () Int)
(declare-fun x587 () Int)
(declare-fun x329 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x278 () Bool)
(declare-fun x223 () Int)
(declare-fun x501 () Int)
(declare-fun x712 () Bool)
(declare-fun x350 () Int)
(declare-fun x1004 () Bool)
(declare-fun x11 () Int)
(declare-fun x772 () Int)
(declare-fun x280 () Int)
(declare-fun x195 () Bool)
(declare-fun x1051 () Int)
(declare-fun x128 () Bool)
(declare-fun x1071 () Int)
(declare-fun x650 () Int)
(declare-fun x553 () Bool)
(declare-fun x155 () Int)
(declare-fun x309 () Int)
(declare-fun x548 () Int)
(declare-fun x243 () Int)
(declare-fun x627 () Bool)
(declare-fun x628 () Bool)
(declare-fun x324 () Bool)
(declare-fun x948 () Int)
(declare-fun x411 () Bool)
(declare-fun x207 () Bool)
(declare-fun x890 () Int)
(declare-fun x879 () Int)
(declare-fun x973 () Bool)
(declare-fun x970 () Int)
(declare-fun x759 () Int)
(declare-fun x63 () Int)
(declare-fun x604 () Int)
(declare-fun x907 () Bool)
(declare-fun x10 () Int)
(declare-fun x320 () Int)
(declare-fun x768 () Int)
(declare-fun x904 () Int)
(declare-fun x523 () Int)
(declare-fun x881 () Int)
(declare-fun x817 () Int)
(declare-fun x898 () Bool)
(declare-fun x135 () Int)
(declare-fun x53 () Bool)
(declare-fun x949 () Int)
(declare-fun x364 () Int)
(declare-fun x187 () Int)
(declare-fun x993 () Bool)
(declare-fun x171 () Bool)
(declare-fun x749 () Bool)
(declare-fun x964 () Int)
(declare-fun x941 () Bool)
(declare-fun x16 () Int)
(declare-fun x240 () Int)
(declare-fun x218 () Int)
(declare-fun x630 () Bool)
(declare-fun x429 () Bool)
(declare-fun x21 () Bool)
(declare-fun x408 () Int)
(declare-fun x1022 () Int)
(declare-fun x23 () Bool)
(declare-fun x785 () Bool)
(declare-fun x736 () Bool)
(declare-fun x369 () Bool)
(declare-fun x273 () Int)
(declare-fun x476 () Bool)
(declare-fun x358 () Bool)
(declare-fun x831 () Bool)
(declare-fun x595 (Int) Int)
(declare-fun x631 () Bool)
(declare-fun x190 () Bool)
(declare-fun x203 () Int)
(declare-fun x263 () Int)
(declare-fun x393 () Int)
(declare-fun x524 () Int)
(declare-fun x659 () Int)
(declare-fun x319 () Int)
(declare-fun x216 () Bool)
(declare-fun x261 () Bool)
(declare-fun x992 () Int)
(declare-fun x421 () Int)
(declare-fun x371 () Bool)
(declare-fun x196 () Bool)
(declare-fun x648 () Int)
(declare-fun x220 () Bool)
(declare-fun x908 () Bool)
(declare-fun x137 () Int)
(declare-fun x386 () Bool)
(declare-fun x154 () Int)
(declare-fun x758 () Bool)
(declare-fun x691 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x804 () Int)
(declare-fun x979 () Int)
(declare-fun x915 () Int)
(declare-fun x905 () Int)
(declare-fun x39 () Bool)
(declare-fun x258 () Int)
(declare-fun x74 () Int)
(declare-fun x455 () Bool)
(declare-fun x439 (Int Int) Int)
(declare-fun x950 () Bool)
(declare-fun x693 () Int)
(declare-fun x19 (Int) Int)
(declare-fun x994 () Bool)
(declare-fun x903 () Bool)
(declare-fun x571 () Int)
(declare-fun x436 () Int)
(declare-fun x58 () Int)
(declare-fun x738 () Int)
(declare-fun x237 () Int)
(declare-fun x1043 () Bool)
(declare-fun x735 () Int)
(declare-fun x342 () Int)
(declare-fun x528 () Bool)
(declare-fun x17 (Int) Int)
(declare-fun x987 () Int)
(declare-fun x889 () Int)
(declare-fun x502 () Bool)
(declare-fun x544 () Bool)
(declare-fun x37 () Int)
(declare-fun x269 () Int)
(declare-fun x247 () Bool)
(declare-fun x771 () Int)
(declare-fun x679 () Bool)
(declare-fun x160 () Int)
(declare-fun x960 () Int)
(declare-fun x848 () Int)
(declare-fun x1050 () Bool)
(declare-fun x224 () Bool)
(declare-fun x957 () Int)
(declare-fun x694 () Int)
(declare-fun x1021 () Int)
(declare-fun x1057 (Int) Int)
(declare-fun x156 () Bool)
(declare-fun x584 () Int)
(declare-fun x827 () Int)
(declare-fun x612 () Int)
(declare-fun x636 () Int)
(declare-fun x340 () Int)
(declare-fun x304 () Bool)
(declare-fun x763 () Int)
(declare-fun x14 () Int)
(declare-fun x663 () Int)
(declare-fun x1034 () Bool)
(declare-fun x422 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x256 () Bool)
(declare-fun x162 () Bool)
(declare-fun x186 () Int)
(declare-fun x49 () Int)
(declare-fun x134 () Bool)
(declare-fun x288 () Int)
(declare-fun x517 () Int)
(declare-fun x621 () Bool)
(declare-fun x244 (Int Int) Int)
(declare-fun x819 () Int)
(declare-fun x751 () Bool)
(declare-fun x554 () Int)
(declare-fun x929 () Int)
(declare-fun x349 () Int)
(declare-fun x300 () Int)
(declare-fun x596 () Int)
(declare-fun x519 () Int)
(declare-fun x672 () Bool)
(declare-fun x85 () Bool)
(declare-fun x670 () Bool)
(declare-fun x96 () Bool)
(declare-fun x610 () Bool)
(declare-fun x146 () Bool)
(declare-fun x486 () Bool)
(declare-fun x277 () Int)
(declare-fun x211 () Bool)
(declare-fun x755 () Bool)
(declare-fun x978 () Bool)
(declare-fun x761 () Int)
(declare-fun x982 () Bool)
(declare-fun x325 () Int)
(declare-fun x1017 () Int)
(declare-fun x967 () Int)
(declare-fun x606 () Bool)
(declare-fun x689 () Int)
(declare-fun x38 () Bool)
(declare-fun x643 () Bool)
(declare-fun x918 (Int Int) Int)
(declare-fun x732 () Int)
(declare-fun x515 () Int)
(declare-fun x1031 () Int)
(declare-fun x1040 () Bool)
(declare-fun x1020 () Int)
(declare-fun x1041 () Bool)
(declare-fun x404 () Int)
(declare-fun x887 () Bool)
(declare-fun x591 () Int)
(declare-fun x969 () Int)
(declare-fun x894 () Int)
(declare-fun x296 () Bool)
(declare-fun x669 () Int)
(declare-fun x1028 () Int)
(declare-fun x226 () Bool)
(declare-fun x937 () Int)
(declare-fun x151 () Int)
(declare-fun x581 () Bool)
(declare-fun x152 () Int)
(declare-fun x884 () Bool)
(declare-fun x696 () Int)
(declare-fun x438 () Bool)
(declare-fun x816 () Bool)
(declare-fun x111 () Bool)
(declare-fun x443 () Bool)
(declare-fun x89 () Int)
(declare-fun x588 () Int)
(declare-fun x1038 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x547 () Int)
(declare-fun x465 () Bool)
(declare-fun x312 () Int)
(declare-fun x271 () Int)
(declare-fun x367 () Bool)
(declare-fun x865 () Bool)
(declare-fun x743 () Int)
(declare-fun x677 () Int)
(declare-fun x1066 () Int)
(declare-fun x600 () Bool)
(declare-fun x79 () Int)
(declare-fun x493 () Bool)
(declare-fun x687 () Bool)
(declare-fun x814 () Int)
(declare-fun x108 () Bool)
(declare-fun x853 () Bool)
(declare-fun x164 () Bool)
(declare-fun x807 () Bool)
(declare-fun x640 () Int)
(declare-fun x618 () Int)
(declare-fun x292 () Bool)
(declare-fun x824 () Int)
(declare-fun x546 () Bool)
(declare-fun x813 () Bool)
(declare-fun x943 () Int)
(declare-fun x1047 () Int)
(declare-fun x87 () Int)
(declare-fun x593 () Int)
(declare-fun x294 () Bool)
(declare-fun x869 () Int)
(declare-fun x215 () Bool)
(declare-fun x995 () Int)
(declare-fun x60 () Int)
(declare-fun x488 () Bool)
(declare-fun x676 () Int)
(declare-fun x467 () Int)
(declare-fun x405 () Bool)
(declare-fun x121 () Bool)
(declare-fun x790 () Int)
(declare-fun x104 () Int)
(declare-fun x231 () Bool)
(declare-fun x860 () Int)
(declare-fun x1069 () Bool)
(declare-fun x727 () Bool)
(declare-fun x472 () Bool)
(declare-fun x555 () Int)
(declare-fun x634 () Bool)
(declare-fun x999 () Bool)
(declare-fun x84 () Bool)
(declare-fun x899 () Bool)
(declare-fun x390 () Int)
(declare-fun x739 () Bool)
(declare-fun x200 () Int)
(declare-fun x459 () Int)
(declare-fun x1074 () Int)
(declare-fun x504 () Bool)
(declare-fun x308 () Bool)
(declare-fun x496 () Bool)
(declare-fun x434 () Int)
(declare-fun x473 () Int)
(declare-fun x533 () Bool)
(declare-fun x762 () Bool)
(declare-fun x471 () Bool)
(declare-fun x339 () Bool)
(declare-fun x835 () Bool)
(declare-fun x535 () Int)
(declare-fun x126 () Int)
(declare-fun x81 () Int)
(declare-fun x880 () Bool)
(declare-fun x90 () Bool)
(declare-fun x565 () Int)
(declare-fun x185 () Int)
(declare-fun x478 () Bool)
(declare-fun x281 () Bool)
(declare-fun x385 () Int)
(declare-fun x667 () Int)
(declare-fun x401 () Bool)
(declare-fun x282 () Int)
(declare-fun x198 () Bool)
(declare-fun x379 () Int)
(declare-fun x932 () Int)
(declare-fun x953 () Int)
(declare-fun x235 () Int)
(declare-fun x901 () Int)
(declare-fun x268 () Int)
(declare-fun x632 () Bool)
(declare-fun x815 () Int)
(declare-fun x194 () Bool)
(declare-fun x702 () Int)
(declare-fun x722 () Bool)
(declare-fun x861 () Int)
(declare-fun x140 () Int)
(declare-fun x983 () Bool)
(declare-fun x307 () Int)
(declare-fun x95 () Int)
(declare-fun x414 () Bool)
(declare-fun x485 () Int)
(declare-fun x1065 (Int) Int)
(declare-fun x50 () Bool)
(declare-fun x208 () Bool)
(declare-fun x289 () Int)
(declare-fun x609 () Int)
(declare-fun x718 () Int)
(declare-fun x170 () Int)
(declare-fun x671 () Bool)
(declare-fun x347 () Int)
(declare-fun x799 () Int)
(declare-fun x954 () Int)
(declare-fun x139 () Bool)
(declare-fun x43 () Int)
(declare-fun x625 () Bool)
(declare-fun x638 () Int)
(declare-fun x18 () Int)
(declare-fun x592 () Int)
(declare-fun x315 () Int)
(declare-fun x532 () Bool)
(declare-fun x352 () Bool)
(declare-fun x336 () Bool)
(declare-fun x163 () Int)
(declare-fun x61 () Int)
(declare-fun x355 () Bool)
(declare-fun x934 () Int)
(declare-fun x912 () Int)
(declare-fun x955 () Int)
(declare-fun x580 () Int)
(declare-fun x617 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x234 () Bool)
(declare-fun x728 () Int)
(declare-fun x394 () Bool)
(declare-fun x109 () Int)
(declare-fun x990 () Int)
(declare-fun x685 (Int) Int)
(declare-fun x928 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x477 () Int)
(declare-fun x427 () Int)
(declare-fun x981 () Int)
(declare-fun x895 () Bool)
(declare-fun x965 () Bool)
(declare-fun x1005 () Int)
(declare-fun x254 () Bool)
(declare-fun x213 (Int) Int)
(declare-fun x378 () Int)
(declare-fun x138 () Int)
(declare-fun x270 () Int)
(declare-fun x199 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x167 () Bool)
(declare-fun x494 (Int Int) Int)
(declare-fun x428 () Bool)
(declare-fun x832 (Int) Int)
(declare-fun x885 () Bool)
(declare-fun x569 () Int)
(declare-fun x363 () Bool)
(declare-fun x551 () Int)
(declare-fun x447 () Bool)
(declare-fun x55 () Int)
(declare-fun x746 () Bool)
(declare-fun x1009 () Int)
(declare-fun x463 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1058 () Int)
(declare-fun x1046 () Bool)
(declare-fun x518 () Bool)
(declare-fun x400 () Bool)
(declare-fun x166 () Int)
(declare-fun x707 () Bool)
(declare-fun x71 () Bool)
(declare-fun x674 () Int)
(declare-fun x940 () Bool)
(declare-fun x481 () Bool)
(declare-fun x774 () Bool)
(declare-fun x917 () Bool)
(declare-fun x616 () Int)
(declare-fun x883 () Bool)
(declare-fun x161 () Int)
(declare-fun x911 () Int)
(declare-fun x639 () Bool)
(declare-fun x726 () Bool)
(declare-fun x1078 () Int)
(declare-fun x839 () Bool)
(declare-fun x858 () Int)
(declare-fun x97 () Int)
(declare-fun x1077 () Bool)
(declare-fun x776 () Int)
(declare-fun x453 (Int) Int)
(declare-fun x968 () Int)
(declare-fun x265 () Bool)
(declare-fun x886 () Bool)
(declare-fun x805 () Int)
(declare-fun x253 () Int)
(declare-fun x359 () Bool)
(declare-fun x688 () Int)
(declare-fun x550 () Bool)
(declare-fun x686 () Int)
(declare-fun x629 () Int)
(declare-fun x793 () Int)
(declare-fun x132 () Int)
(declare-fun x106 () Bool)
(declare-fun x843 () Int)
(declare-fun x377 () Int)
(declare-fun x384 () Int)
(declare-fun x697 () Int)
(declare-fun x410 () Int)
(declare-fun x310 (Int) Int)
(declare-fun x462 () Bool)
(declare-fun x3 () Int)
(declare-fun x201 () Int)
(declare-fun x748 () Int)
(declare-fun x1003 () Bool)
(declare-fun x178 () Int)
(declare-fun x337 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x996 () Bool)
(declare-fun x893 () Bool)
(declare-fun x323 () Int)
(declare-fun x624 () Int)
(declare-fun x365 () Bool)
(declare-fun x931 () Bool)
(declare-fun x149 () Int)
(declare-fun x871 () Int)
(declare-fun x608 () Int)
(declare-fun x549 () Bool)
(declare-fun x910 () Bool)
(declare-fun x103 () Int)
(declare-fun x664 () Int)
(declare-fun x988 () Int)
(declare-fun x798 () Bool)
(declare-fun x724 () Bool)
(declare-fun x922 () Int)
(declare-fun x526 () Int)
(declare-fun x531 () Int)
(declare-fun x942 () Int)
(declare-fun x1070 () Bool)
(declare-fun x75 () Bool)
(declare-fun x230 () Bool)
(declare-fun x1064 () Int)
(declare-fun x737 () Int)
(declare-fun x1032 () Int)
(declare-fun x232 () Int)
(declare-fun x343 () Bool)
(declare-fun x302 () Bool)
(declare-fun x512 () Bool)
(declare-fun x441 () Int)
(declare-fun x118 () Int)
(declare-fun x662 () Bool)
(declare-fun x165 () Bool)
(declare-fun x56 () Int)
(declare-fun x193 () Bool)
(declare-fun x34 () Int)
(declare-fun x615 () Int)
(declare-fun x808 () Int)
(declare-fun x579 () Int)
(declare-fun x976 () Int)
(declare-fun x649 () Bool)
(declare-fun x573 () Int)
(declare-fun x480 () Bool)
(declare-fun x332 () Bool)
(declare-fun x54 () Int)
(declare-fun x767 () Bool)
(declare-fun x716 () Int)
(declare-fun x926 (Int) Int)
(declare-fun x1056 () Int)
(declare-fun x666 () Int)
(declare-fun x24 () Bool)
(declare-fun x456 () Int)
(declare-fun x316 () Int)
(declare-fun x101 () Bool)
(declare-fun x433 () Bool)
(declare-fun x507 () Int)
(declare-fun x684 () Bool)
(declare-fun x412 () Int)
(declare-fun x158 () Int)
(declare-fun x933 () Int)
(declare-fun x76 () Bool)
(declare-fun x31 () Int)
(declare-fun x362 () Int)
(declare-fun x1010 () Int)
(declare-fun x92 () Int)
(declare-fun x599 () Int)
(declare-fun x461 () Bool)
(declare-fun x974 () Int)
(declare-fun x959 () Bool)
(declare-fun x723 () Int)
(declare-fun x246 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x980 () Bool)
(declare-fun x833 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x516 () Bool)
(declare-fun x68 () Bool)
(declare-fun x295 () Bool)
(declare-fun x22 () Bool)
(declare-fun x740 () Bool)
(declare-fun x830 () Int)
(declare-fun x855 () Bool)
(declare-fun x542 () Int)
(declare-fun x73 () Int)
(declare-fun x470 () Int)
(declare-fun x29 () Bool)
(declare-fun x45 () Int)
(declare-fun x821 () Int)
(declare-fun x1080 () Int)
(declare-fun x500 () Bool)
(declare-fun x413 () Bool)
(declare-fun x705 () Bool)
(declare-fun x557 () Int)
(declare-fun x1018 () Int)
(declare-fun x797 () Int)
(declare-fun x452 () Bool)
(declare-fun x698 () Int)
(declare-fun x665 () Bool)
(declare-fun x962 () Bool)
(declare-fun x153 () Bool)
(declare-fun x611 () Int)
(declare-fun x1011 () Int)
(declare-fun x241 () Bool)
(declare-fun x69 () Int)
(declare-fun x418 () Int)
(declare-fun x341 () Bool)
(declare-fun x635 () Bool)
(declare-fun x505 () Int)
(declare-fun x701 () Int)
(declare-fun x657 () Bool)
(declare-fun x731 () Bool)
(declare-fun x946 () Int)
(declare-fun x607 () Int)
(declare-fun x590 () Bool)
(declare-fun x733 () Bool)
(declare-fun x825 () Int)
(declare-fun x945 () Int)
(declare-fun x13 () Int)
(declare-fun x1048 () Int)
(declare-fun x264 () Int)
(declare-fun x432 () Int)
(declare-fun x114 () Int)
(declare-fun x437 () Bool)
(declare-fun x734 () Bool)
(declare-fun x971 () Int)
(declare-fun x1061 () Bool)
(declare-fun x730 () Bool)
(declare-fun x83 () Int)
(declare-fun x829 () Int)
(declare-fun x605 () Bool)
(declare-fun x181 () Int)
(declare-fun x266 () Bool)
(declare-fun x847 () Bool)
(declare-fun x944 () Bool)
(declare-fun x376 () Bool)
(declare-fun x272 () Int)
(declare-fun x402 () Bool)
(declare-fun x346 () Int)
(declare-fun x695 () Bool)
(declare-fun x552 () Bool)
(declare-fun x800 () Int)
(declare-fun x451 () Int)
(declare-fun x133 () Bool)
(declare-fun x936 () Int)
(declare-fun x1024 () Bool)
(declare-fun x721 () Int)
(declare-fun x823 (Int) Int)
(declare-fun x508 () Int)
(declare-fun x812 () Bool)
(declare-fun x51 () Int)
(declare-fun x849 () Bool)
(declare-fun x403 () Int)
(declare-fun x1026 () Int)
(declare-fun x840 () Int)
(declare-fun x822 () Bool)
(declare-fun x938 () Int)
(declare-fun x372 () Int)
(declare-fun x62 () Int)
(declare-fun x290 () Int)
(declare-fun x766 () Bool)
(declare-fun x706 () Bool)
(declare-fun x189 (Int Int) Int)
(declare-fun x577 () Bool)
(declare-fun x28 () Int)
(declare-fun x125 () Int)
(declare-fun x956 () Int)
(declare-fun x891 () Bool)
(declare-fun x420 () Bool)
(declare-fun x440 () Int)
(declare-fun x297 () Int)
(declare-fun x91 () Int)
(declare-fun x179 () Bool)
(declare-fun x1044 () Int)
(declare-fun x778 () Bool)
(declare-fun x491 () Int)
(declare-fun x209 () Int)
(declare-fun x446 () Int)
(declare-fun x110 () Int)
(declare-fun x560 () Bool)
(declare-fun x566 () Bool)
(declare-fun x961 () Bool)
(declare-fun x742 () Bool)
(declare-fun x851 () Bool)
(declare-fun x626 () Bool)
(declare-fun x406 () Bool)
(declare-fun x538 () Int)
(declare-fun x217 () Bool)
(declare-fun x330 () Int)
(declare-fun x397 () Bool)
(declare-fun x374 () Bool)
(declare-fun x113 () Bool)
(declare-fun x131 () Bool)
(declare-fun x622 () Int)
(define-fun x882 ((x952 Int)) Int (ite (and (< x952 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x952 0)) x952 (- x952 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x806 ((x952 Int)) Int (ite (and (>= x952 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x952)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x952) x952))
(define-fun x506 ((x952 Int)) Int (ite (and (<= 0 x952) (< x952 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x952 (ite (and (>= x952 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x952)) (- x952 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x952 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x952)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x952) (x244 x952 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x925 ((x878 Int)) Bool (and (<= 0 x878) (< x878 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x769 ((x878 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x878) (<= 0 x878)))
(define-fun x435 ((x878 Int)) Bool (and (= x878 (x174 115792089237316195423570985008687907853269984665640564039457584007913129639935 x878)) (= x878 (x174 x878 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x88 ((x878 Int)) Bool (and (= (x174 x878 0) 0) (= (x174 0 x878) 0)))
(define-fun x354 ((x878 Int)) Bool (= (x174 x878 x878) x878))
(define-fun x1002 ((x878 Int)) Bool (and (x435 x878) (x354 x878) (x88 x878)))
(define-fun x222 ((x878 Int) (x409 Int)) Bool (= (x174 x409 x878) (x174 x878 x409)))
(define-fun x1042 ((x878 Int) (x409 Int)) Bool (and (=> (<= 0 x878) (>= x878 (x174 x878 x409))) (<= 0 (x174 x878 x409)) (=> (<= 0 x409) (<= (x174 x878 x409) x409))))
(define-fun x924 ((x878 Int) (x409 Int)) Bool (and (x1042 x878 x409) (x222 x878 x409)))
(define-fun x828 ((x878 Int)) Bool (= (x506 x878) (+ (x174 x878 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x244 x878 32))))
(define-fun x585 ((x878 Int)) Bool (and (x924 x878 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x828 x878)))
(define-fun x172 ((x878 Int) (x409 Int)) Bool (and (<= 0 (x244 x878 x409)) (< (x244 x878 x409) x409)))
(define-fun x986 ((x878 Int) (x409 Int)) Bool (=> (and (>= x878 0) (< 0 x409)) (= (= x878 (x244 x878 x409)) (> x409 x878))))
(define-fun x141 ((x878 Int) (x409 Int)) Bool (=> (and (< 0 x409) (and (> (+ x409 x409) x878) (>= x878 x409))) (= (- x878 x409) (x244 x878 x409))))
(define-fun x703 ((x878 Int)) Bool (= (x244 0 x878) 0))
(define-fun x714 ((x878 Int)) Bool (= 0 (x244 x878 1)))
(define-fun x430 ((x878 Int)) Bool (= 0 (x244 x878 x878)))
(define-fun x93 ((x878 Int)) Bool (and (x703 x878) (x430 x878) (x714 x878)))
(define-fun x381 ((x878 Int) (x409 Int)) Bool (=> (and (< 0 x409) (< 0 x878)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x918 x878 x409)) (= x409 (x494 (x506 (x918 x878 x409)) x878)))))
(define-fun x783 ((x878 Int) (x409 Int)) Bool (=> (and (not (= 0 x878)) (not (= x409 0))) (and (= (x494 (x918 x878 x409) x878) x409) (= (x494 (x918 x878 x409) x409) x878))))
(define-fun x789 ((x878 Int) (x409 Int)) Bool (=> (and (< 0 x409) (> x878 0)) (= (< (x494 115792089237316195423570985008687907853269984665640564039457584007913129639935 x878) x409) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x918 x878 x409)))))
(define-fun x353 ((x878 Int) (x409 Int)) Bool (and (= (x506 (x918 x878 x409)) (x506 (x918 (- x878 115792089237316195423570985008687907853269984665640564039457584007913129639936) x409))) (= (x506 (x918 x878 x409)) (x506 (x918 (- x878 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x409 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x506 (x918 x878 x409)) (x506 (x918 x878 (- x409 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x795 ((x878 Int) (x409 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x878) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x878)) (and (<= x409 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x409 0))) (= (>= (x918 (- x878 115792089237316195423570985008687907853269984665640564039457584007913129639936) x409) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x878) (x494 57896044618658097711785492504343953926634992332820282019728792003956564819968 x409)))) (=> (and (and (<= x878 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x878)) (and (> x409 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x409))) (= (<= x878 (x494 57896044618658097711785492504343953926634992332820282019728792003956564819967 x409)) (<= (x918 x878 x409) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (> x409 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x409 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x878) (< 0 x878))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x918 x878 (- x409 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409) (x494 57896044618658097711785492504343953926634992332820282019728792003956564819968 x878)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x878) (<= x878 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x409) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x409))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x918 (- x878 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x409 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x878) (x494 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409)))))))
(define-fun x445 ((x878 Int)) Bool (and (= 0 (x918 0 x878)) (= (x918 x878 0) 0)))
(define-fun x784 ((x878 Int)) Bool (and (= x878 (x918 1 x878)) (= x878 (x918 x878 1))))
(define-fun x845 ((x878 Int)) Bool (and (x445 x878) (x784 x878)))
(define-fun x67 ((x878 Int)) Bool (= (x244 x878 1461501637330902918203684832716283019655932542976) (x174 x878 1461501637330902918203684832716283019655932542975)))
(define-fun x1067 ((x878 Int)) Bool (and (x924 x878 1461501637330902918203684832716283019655932542975) (x67 x878)))
(define-fun x935 ((x614 Int)) Int (ite (< x614 x227) (x984 x614) 0))
(define-fun x777 ((x614 Int)) Int (x35 x614))
(define-fun x130 ((x614 Int)) Int (ite (= x289 x614) x467 (x453 x614)))
(define-fun x460 ((x614 Int)) Int (ite (= x696 x614) x300 (x130 x614)))
(define-fun x238 ((x614 Int)) Int (ite (= 128 x614) x810 (x213 x614)))
(define-fun x725 ((x614 Int)) Int (ite (and (<= 160 x614) (< x614 (+ x810 160))) (x35 (+ x508 (- x614 160))) (x238 x614)))
(define-fun x57 ((x614 Int)) Int (ite (= x614 x542) 0 (x725 x614)))
(define-fun x78 ((x614 Int)) Int (ite (= x614 x796) x771 (x57 x614)))
(define-fun x415 ((x614 Int)) Int (ite (and (>= x614 x611) (< x614 (+ x611 x771))) (x35 (+ x554 (- x614 x611))) (x78 x614)))
(define-fun x450 ((x614 Int)) Int (ite (= x614 x291) 0 (x415 x614)))
(define-fun x1039 ((x614 Int)) Int (ite (= x792 x614) 54065695799311150304516525983669583430195215316752708547810291668471328538624 (x450 x614)))
(define-fun x896 ((x614 Int)) Int (ite (= x945 x614) 160 (x1039 x614)))
(define-fun x682 ((x614 Int)) Int (ite (= x761 x614) x713 (x896 x614)))
(define-fun x717 ((x614 Int)) Int (ite (= x1009 x614) x768 (x682 x614)))
(define-fun x868 ((x614 Int)) Int (ite (= x140 x614) x748 (x717 x614)))
(define-fun x168 ((x614 Int)) Int (ite (= x614 x356) x11 (x868 x614)))
(define-fun x699 ((x614 Int)) Int (ite (= x614 x482) x1064 (x168 x614)))
(define-fun x70 ((x614 Int)) Int (ite x363 (x168 x614) (ite x552 (x868 x614) (ite x978 (x717 x614) (ite x627 (x682 x614) (x699 x614))))))
(define-fun x875 ((x614 Int)) Int (ite (= x149 x614) 0 (x70 x614)))
(define-fun x366 ((x614 Int)) Int (ite x645 (x70 x614) (x875 x614)))
(define-fun x36 ((x614 Int)) Int (ite (= x614 x582) x263 (x366 x614)))
(define-fun x25 ((x614 Int)) Int (ite (= x34 x614) x160 (x36 x614)))
(define-fun x678 ((x614 Int)) Int (ite (= x434 x614) x273 (x25 x614)))
(define-fun x613 ((x614 Int)) Int (ite (= x536 x614) x431 (x678 x614)))
(define-fun x250 ((x614 Int)) Int (ite (= x614 x77) x169 (x613 x614)))
(define-fun x1019 ((x614 Int)) Int (ite (= x118 x614) x14 (x250 x614)))
(define-fun x764 ((x614 Int)) Int (ite x84 (x250 x614) (ite x252 (x613 x614) (ite x644 (x678 x614) (ite x371 (x25 x614) (x1019 x614))))))
(define-fun x744 ((x614 Int)) Int (ite (= x614 x538) 0 (x764 x614)))
(define-fun x116 ((x614 Int)) Int (ite x447 (x764 x614) (x744 x614)))
(define-fun x449 ((x614 Int)) Int (ite (= x614 x475) x1052 (x116 x614)))
(define-fun x641 ((x614 Int)) Int (ite (= x614 x674) x40 (x449 x614)))
(define-fun x820 ((x614 Int)) Int (ite (= x614 x412) x110 (x641 x614)))
(define-fun x66 ((x614 Int)) Int (ite (= x614 x732) x441 (x820 x614)))
(define-fun x559 ((x614 Int)) Int (ite (= x325 x614) x953 (x66 x614)))
(define-fun x1030 ((x614 Int)) Int (ite (= x614 x1071) x1074 (x559 x614)))
(define-fun x975 ((x614 Int)) Int (ite (= x240 x614) x881 (x1030 x614)))
(define-fun x1025 ((x614 Int)) Int (ite x136 (x1030 x614) (ite x528 (x559 x614) (ite x902 (x66 x614) (ite x731 (x820 x614) (x975 x614))))))
(define-fun x998 ((x614 Int)) Int (ite (= x781 x614) x203 (x1025 x614)))
(define-fun x15 ((x614 Int)) Int (ite (= x264 x614) x825 (x998 x614)))
(define-fun x219 ((x614 Int)) Int (ite (= x614 x936) x288 (x15 x614)))
(define-fun x32 ((x614 Int)) Int (ite (= x614 x599) x221 (x219 x614)))
(define-fun x65 ((x614 Int)) Int (ite (and (< x614 (+ x221 x1026)) (>= x614 x1026)) (x35 (+ (- x614 x1026) x914)) (x32 x614)))
(define-fun x623 ((x614 Int)) Int (ite (= x614 x650) 0 (x65 x614)))
(define-fun x513 ((x614 Int)) Int (ite x343 (x15 x614) (x623 x614)))
(define-fun x464 ((x614 Int)) Int (ite (= x792 x614) x298 (x513 x614)))
(define-fun x314 ((x614 Int)) Int (ite x220 (x513 x614) (x464 x614)))
(define-fun x562 ((x614 Int)) Int (ite (= x614 x245) 22445611572322667099362401052093617030957452505749565894135597532943828910080 (x314 x614)))
(define-fun x633 ((x614 Int)) Int (ite (and (< x614 (+ x245 32)) (<= x245 x614)) (x1065 (+ 0 (- x614 x245))) (x562 x614)))
(define-fun x159 ((x614 Int)) Int (ite (and (<= 196 x614) (> (+ 196 (x806 (- x737 196))) x614)) (x513 (+ (x882 (+ x792 196)) (- x614 196))) (x935 x614)))
(define-fun x286 ((x614 Int)) Int (ite (= x614 128) x223 (x80 x614)))
(define-fun x841 ((x614 Int)) Int (ite (and (>= x614 160) (< x614 (+ 160 x223))) (x159 (+ 196 (- x614 160))) (x286 x614)))
(define-fun x197 ((x614 Int)) Int (ite (= x614 x981) 0 (x841 x614)))
(define-fun x7 ((x614 Int)) Int (ite (= x614 x58) x18 (x197 x614)))
(define-fun x985 ((x614 Int)) Int (ite (and (<= x648 x614) (> (+ x648 x18) x614)) (x159 (+ x829 (- x614 x648))) (x7 x614)))
(define-fun x311 ((x614 Int)) Int (ite (= x990 x614) 0 (x985 x614)))
(define-fun x398 ((x614 Int)) Int (ite (= x614 x346) 64069044923792539370177021244577383457373632460708312080110356237917649633280 (x311 x614)))
(define-fun x299 ((x614 Int)) Int (ite (= x614 x346) x158 (x398 x614)))
(define-fun x276 ((x614 Int)) Int (ite (= x614 x696) x267 (x460 x614)))
(define-fun x210 ((x614 Int)) Int (ite (= x123 x614) x1028 (x276 x614)))
(define-fun x854 ((x614 Int)) Int (ite (and (> (+ 0 x894) x614) (>= x614 x894)) (x823 (+ 0 (- x614 x894))) (x299 x614)))
(define-fun x704 ((x614 Int)) Int (ite x193 (x299 x614) (ite x234 (x854 x614) (x299 x614))))
(define-fun x204 ((x614 Int)) Int (ite x193 (x30 x614) (x823 x614)))
(define-fun x844 ((x614 Int)) Int (ite (= x894 x614) x827 (x704 x614)))
(define-fun x540 ((x614 Int)) Int (ite (and (>= x614 x515) (< x614 (+ x827 x515))) (x204 (+ (- x614 x515) 0)) (x844 x614)))
(define-fun x107 ((x614 Int)) Int (ite x234 (x1057 x614) (x210 x614)))
(define-fun x1059 ((x614 Int)) Int (ite (= x614 x123) x48 (x107 x614)))
(define-fun x444 ((x614 Int)) Int (ite (= x696 x614) x1 (x1059 x614)))
(define-fun x564 ((x614 Int)) Int (ite x128 (x460 x614) (ite x193 (x460 x614) (ite x657 (x107 x614) (x444 x614)))))
(define-fun x572 ((x614 Int)) Int (ite x128 (x311 x614) (ite x321 (x704 x614) (x540 x614))))
(define-fun x1053 ((x614 Int)) Int (ite (= x614 x696) x526 (x564 x614)))
(define-fun x1033 ((x614 Int)) Int (ite (= x664 x614) x804 (x1053 x614)))
(define-fun x1062 ((x614 Int)) Int (ite (= x614 x664) x815 (x1033 x614)))
(define-fun x1023 ((x614 Int)) Int (ite (= x696 x614) x840 (x1062 x614)))
(define-fun x42 ((x614 Int)) Int (ite (= x614 x964) 4739670319144124481003130557741556594755290868171975227769803894069435301888 (x572 x614)))
(define-fun x262 ((x614 Int)) Int (ite (= x218 x614) 192 (x42 x614)))
(define-fun x239 ((x614 Int)) Int (ite (= x866 x614) x87 (x262 x614)))
(define-fun x602 ((x614 Int)) Int (ite (= x661 x614) x693 (x239 x614)))
(define-fun x370 ((x614 Int)) Int (ite (= x656 x614) x323 (x602 x614)))
(define-fun x1083 ((x614 Int)) Int (ite (= x614 x539) x743 (x370 x614)))
(define-fun x567 ((x614 Int)) Int (ite x64 (x17 x614) (x1023 x614)))
(define-fun x497 ((x614 Int)) Int (ite x117 (x567 x614) (ite x119 (x360 x614) (x567 x614))))
(define-fun x257 ((x614 Int)) Int (ite (= x49 x614) x811 (x1083 x614)))
(define-fun x6 ((x614 Int)) Int (ite x700 (x1083 x614) (ite x603 (x370 x614) (ite x327 (x602 x614) (ite x683 (x239 x614) (x257 x614))))))
(define-fun x333 ((x614 Int)) Int (ite (= x614 x129) 0 (x6 x614)))
(define-fun x423 ((x614 Int)) Int (ite x626 (x6 x614) (x333 x614)))
(define-fun x655 ((x614 Int)) Int (ite (= x801 x614) x723 (x423 x614)))
(define-fun x395 ((x614 Int)) Int (ite (= x33 x614) x457 (x655 x614)))
(define-fun x458 ((x614 Int)) Int (ite (= x614 x154) x421 (x395 x614)))
(define-fun x1081 ((x614 Int)) Int (ite (= x629 x614) x510 (x458 x614)))
(define-fun x483 ((x614 Int)) Int (ite (= x614 x557) x647 (x1081 x614)))
(define-fun x396 ((x614 Int)) Int (ite (= x228 x614) x709 (x483 x614)))
(define-fun x373 ((x614 Int)) Int (ite x712 (x483 x614) (ite x730 (x1081 x614) (ite x921 (x458 x614) (ite x553 (x395 x614) (x396 x614))))))
(define-fun x82 ((x614 Int)) Int (ite (= x614 x618) 0 (x373 x614)))
(define-fun x499 ((x614 Int)) Int (ite x838 (x373 x614) (x82 x614)))
(define-fun x469 ((x614 Int)) Int (ite (= x100 x614) x754 (x499 x614)))
(define-fun x334 ((x614 Int)) Int (ite (= x614 x701) x753 (x469 x614)))
(define-fun x872 ((x614 Int)) Int (ite (= x846 x614) x933 (x334 x614)))
(define-fun x205 ((x614 Int)) Int (ite (= x836 x614) x871 (x872 x614)))
(define-fun x236 ((x614 Int)) Int (ite (and (> (+ 0 x964) x614) (>= x614 x964)) (x310 (+ (- x614 x964) 0)) (x205 x614)))
(define-fun x357 ((x614 Int)) Int (ite x64 (x236 x614) (x205 x614)))
(define-fun x752 ((x614 Int)) Int (ite (= x243 x614) 102499615646744134772650717477688572466918151731817230690449879178893085114368 (x357 x614)))
(define-fun x653 ((x614 Int)) Int (ite (= x614 x73) x364 (x752 x614)))
(define-fun x1055 ((x614 Int)) Int (ite (= x614 x307) x270 (x653 x614)))
(define-fun x530 ((x614 Int)) Int (ite (= x51 x614) x345 (x1055 x614)))
(define-fun x242 ((x614 Int)) Int (ite (= x155 x614) x992 (x530 x614)))
(define-fun x675 ((x614 Int)) Int (ite x741 (x530 x614) (ite x279 (x1055 x614) (ite x740 (x653 x614) (ite x171 (x752 x614) (x242 x614))))))
(define-fun x514 ((x614 Int)) Int (ite (= x666 x614) 0 (x675 x614)))
(define-fun x951 ((x614 Int)) Int (ite x260 (x675 x614) (x514 x614)))
(define-fun x876 ((x614 Int)) Int (ite (= x964 x614) x258 (x951 x614)))
(define-fun x527 ((x614 Int)) Int (ite (= x547 x614) x588 (x876 x614)))
(define-fun x212 ((x614 Int)) Int (ite (= x614 x109) x91 (x527 x614)))
(define-fun x597 ((x614 Int)) Int (ite (= x614 x391) x1010 (x212 x614)))
(define-fun x492 ((x614 Int)) Int (ite (= x735 x614) x569 (x597 x614)))
(define-fun x490 ((x614 Int)) Int (ite (= x614 x616) x879 (x492 x614)))
(define-fun x44 ((x614 Int)) Int (ite (= x1011 x614) x432 (x490 x614)))
(define-fun x466 ((x614 Int)) Int (ite x324 (x490 x614) (ite x652 (x492 x614) (ite x537 (x597 x614) (ite x835 (x212 x614) (x44 x614))))))
(define-fun x747 ((x614 Int)) Int (ite (= x348 x614) 0 (x466 x614)))
(define-fun x94 ((x614 Int)) Int (ite x770 (x466 x614) (x747 x614)))
(define-fun x589 ((x614 Int)) Int (ite (= x125 x614) x229 (x94 x614)))
(define-fun x543 ((x614 Int)) Int (ite x989 (x633 x614) (x562 x614)))
(define-fun x317 ((x614 Int)) Int (ite (= x614 x830) 33582922474372145882413589741236248003507108108518759994751911431010219196416 (x543 x614)))
(define-fun x1029 ((x614 Int)) Int (ite (and (> (+ x830 32) x614) (>= x614 x830)) (x419 (+ (- x614 x830) 0)) (x317 x614)))
(define-fun x972 ((x614 Int)) Int (ite x575 (x1029 x614) (x317 x614)))
(define-fun x338 ((x614 Int)) Int (ite (= x614 x436) 113209349505197351213641468582317386984598294884268236158119619414039440916480 (x972 x614)))
(define-fun x255 ((x614 Int)) Int (ite (and (> (+ 32 x436) x614) (>= x614 x436)) (x685 (+ 0 (- x614 x436))) (x338 x614)))
(define-fun x930 ((x614 Int)) Int (ite x762 (x255 x614) (x338 x614)))
(define-fun x387 ((x614 Int)) Int (ite (= x614 x316) 62805084655870755976952745400290271510621614971557940054860603637793562820608 (x930 x614)))
(define-fun x283 ((x614 Int)) Int (ite (and (< x614 (+ 32 x316)) (<= x316 x614)) (x19 (+ (- x614 x316) 0)) (x387 x614)))
(define-fun x620 ((x614 Int)) Int (ite x241 (x283 x614) (x387 x614)))
(define-fun x637 ((x614 Int)) Int (ite (= x614 x794) 64069044923792539370177021244577383457373632460708312080110356237917649633280 (x620 x614)))
(define-fun x1006 ((x614 Int)) Int (ite (and (> (+ x794 32) x614) (>= x614 x794)) (x926 (+ (- x614 x794) 0)) (x637 x614)))
(define-fun x857 ((x614 Int)) Int (ite x1046 (x1006 x614) (x637 x614)))
(assert (= (and x847 x662) x1063))
(assert (x769 x274))
(assert (= (and x739 (not x673)) x293))
(assert (x769 x62))
(assert (= x462 (=> (and (= x630 (not (< 128 x457))) (= x228 (x882 (+ x948 96))) (= (x483 x686) x709) (= (x882 (+ 96 x648)) x686)) (and x630 (=> (= x54 128) x560)))))
(assert (x769 x318))
(assert (= (and x722 (not x586)) x1037))
(assert (= x1068 (or x413 x402)))
(assert (x769 x970))
(assert (x769 x8))
(assert (x1002 x934))
(assert (x769 x694))
(assert (x585 x320))
(assert (x925 x289))
(assert (x769 x184))
(assert (x769 x135))
(assert (x769 x681))
(assert (= x121 (and x305 (not x807))))
(assert (x769 x664))
(assert (x769 x636))
(assert (x769 x881))
(assert (x769 x34))
(assert (x769 x688))
(assert (x769 x519))
(assert (x769 x323))
(assert (x1002 x491))
(assert (x769 x842))
(assert (x769 x434))
(assert (x769 x73))
(assert (x769 x821))
(assert (x769 x754))
(assert (x769 x1071))
(assert (= (x30 (- 192 x515)) 0))
(assert (x769 x905))
(assert (x1067 x531))
(assert (x769 x410))
(assert (x769 x542))
(assert (x769 x382))
(assert (x769 x817))
(assert (x769 x624))
(assert (x769 x646))
(assert (= (and x1073 x287) x76))
(assert (x769 x83))
(assert (x769 x138))
(assert (= (=> (and (= x137 (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x507)) (= x475 (x882 (+ 32 x582))) (= (x882 (+ x137 x1078)) x412) (= (x882 (+ x160 31)) x507) (= x732 (x882 (+ x412 32))) (= x826 (> x110 0)) (= x674 (x882 (+ x475 32))) (= x40 (x806 (- x412 x945)))) (and (=> (and (not x826) (= x732 x264)) x920) (=> (and (and (= x325 (x882 (+ x732 32))) (= (< 1 x110) x400) (<= x441 1461501637330902918203684832716283019655932542975) (= (x882 (+ 32 x12)) x565) (= x441 (x35 x12))) x826) (and (=> (and x400 (and (= x1071 (x882 (+ x325 32))) (>= 1461501637330902918203684832716283019655932542975 x953) (= (< 2 x110) x1001) (= (x882 (+ x565 32)) x268) (= (x35 x565) x953))) (and (=> (and x1001 (and (= (< 3 x110) x296) (= (x882 (+ 32 x268)) x41) (= x240 (x882 (+ x1071 32))) (= x1074 (x35 x268)) (<= x1074 1461501637330902918203684832716283019655932542975))) (and (=> x296 x550) (=> (and (= x240 x264) (not x296)) x920))) (=> (and (not x1001) (= x264 x1071)) x920))) (=> (and (= x325 x264) (not x400)) x920))))) x281))
(assert (= (and x977 (not x1041)) x496))
(assert (x769 x325))
(assert (x769 x127))
(assert (= (or x730 x684 x921 x553 x712) x906))
(assert (x769 x797))
(assert (x93 x491))
(assert (x769 x315))
(assert (x93 x664))
(assert (x769 x320))
(assert (x769 x593))
(assert (= 0 (x30 (- 256 x515))))
(assert (x769 x291))
(assert (x1002 x320))
(assert (= (=> (and (= (x168 256) x1064) (= x482 (x882 (+ x166 96))) (= x99 (not (> x713 128)))) (and x99 (=> (= 128 x622) x480))) x940))
(assert (= x217 (=> (and (= x440 (x806 (- x547 x964))) (= (x882 (+ x182 x782)) x547) (= (< 0 x91) x671) (= x109 (x882 (+ 96 x547))) (= x588 96) (= x91 (x527 128)) (= x10 (x882 (+ 32 x109))) (= (x806 (- x440 32)) x258)) (and (=> (and (not x671) (= 0 x4)) x504) (=> (and x671 (and (= x1010 (x212 160)) (= (< 32 x91) x429) (= x10 x391))) (and (=> (and (not x429) (= x4 32)) x504) (=> (and (and (= x488 (< 64 x91)) (= (x597 192) x569) (= x735 (x882 (+ 32 x10)))) x429) (and (=> (and (not x488) (= 64 x4)) x504) (=> (and (and (= x616 (x882 (+ x10 64))) (= x879 (x492 224)) (= (< 96 x91) x903)) x488) (and (=> x903 x798) (=> (and (not x903) (= 96 x4)) x504)))))))))))
(assert (= x23 (and x947 x558)))
(assert (x769 x939))
(assert (x1002 1461501637330902918203684832716283019655932542975))
(assert (x769 x218))
(assert (x769 x974))
(assert (x585 x326))
(assert (x769 x756))
(assert (x769 x288))
(assert (= x465 (and x826 x715)))
(assert (x769 x956))
(assert (= x472 (and x388 (not x337))))
(assert (= x695 (and x265 x707)))
(assert (x93 x248))
(assert (x769 x582))
(assert (x769 x888))
(assert (x769 x393))
(assert (= x461 (=> (and (= (x882 (+ x611 96)) x573) (= x1040 (not (> x160 128))) (= (x882 (+ x1078 96)) x118) (= (x250 x573) x14)) (and x1040 (=> (= x1044 128) x862)))))
(assert (= (x213 (x882 (+ 196 x792))) 0))
(assert (= (x80 160) 0))
(assert (= 0 (x213 (+ (x882 (+ 196 x792)) (- x104 196)))))
(assert (x585 x170))
(assert (x769 x489))
(assert (= x371 (and (not x947) x558)))
(assert (x769 x1022))
(assert (x769 x995))
(assert (= (and x742 (not x959)) x730))
(assert (= (x30 (- 224 x515)) 0))
(assert (x769 x830))
(assert (= (x30 (- 128 x515)) 0))
(assert (= (=> (= (not (> x379 1)) x745) (and x883 x745)) x21))
(assert (x769 x967))
(assert (= (and x885 x105) x822))
(assert (= 0 (x213 (+ (x882 (+ 196 x792)) (- (+ (- x1031 160) 196) 196)))))
(assert (x769 x440))
(assert (x769 x900))
(assert (x769 x385))
(assert (= x146 (or x324 x835 x85 x652 x537)))
(assert (x769 x326))
(assert (= (and (not x422) x358) x1008))
(assert (x769 x531))
(assert (= (and x337 x388) x405))
(assert (x769 x713))
(assert (x769 x152))
(assert (x769 x1007))
(assert (= (and x734 (not x654)) x252))
(assert (x769 x161))
(assert (= x302 (=> (= x294 (= 0 x995)) (and (=> (and (not x294) (and (= x754 x442) (= x410 32) (= x640 1) (= x446 x933) (= x451 x871) (= x98 x753) (= x297 x765) (= x298 (x174 1461501637330902918203684832716283019655932542975 x664)))) x352) (=> x294 x999)))))
(assert (= x731 (and (not x826) x715)))
(assert (= (and x739 x673) x887))
(assert (= x1027 (and x617 x1012)))
(assert (x845 x379))
(assert (x769 x300))
(assert (= x401 (=> (and (= x254 (< x182 x201)) (or (and (= (x882 (+ x182 x782)) x666) x254) (not x254))) x217)))
(assert (x769 x946))
(assert (x769 x377))
(assert (x769 x1009))
(assert (= x341 (or x438 x989)))
(assert (= x733 (and x105 (not x885))))
(assert (x769 x3))
(assert (x769 x58))
(assert (x769 x846))
(assert (= 0 (x213 (+ (- (+ 196 (- x728 160)) 196) (x882 (+ 196 x792))))))
(assert (x769 x37))
(assert (x769 x824))
(assert (x769 x270))
(assert (x769 x223))
(assert (and (x172 x790 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x790 (+ (x244 x790 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x790 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x790 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x790 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x910 (or x142 x528 x902 x731 x136)))
(assert (x769 x186))
(assert (= (and x405 x1024) x20))
(assert (x769 x604))
(assert (= (=> (and (= (x530 x1031) x992) (= (not (> x182 128)) x478) (= (x882 (+ x782 96)) x155) (= (x882 (+ x648 96)) x1031)) (and (=> (= 128 x201) x401) x478)) x566))
(assert (= (=> (and (= x864 (< x457 x54)) (or (and x864 (= (x882 (+ x948 x457)) x618)) (not x864))) x369) x560))
(assert (= 0 (x213 (+ (- (+ (- x1056 x648) x829) 196) (x882 (+ 196 x792))))))
(assert (= (and x476 x207) x961))
(assert (= x634 (and x778 x1037)))
(assert (= x278 (and x837 x50)))
(assert (x769 x501))
(assert (x769 x1018))
(assert (= (x213 x342) 0))
(assert (x769 x425))
(assert (x769 x280))
(assert (= (x213 (+ (- (+ 196 (- x938 160)) 196) (x882 (+ 196 x792)))) 0))
(assert (x769 x187))
(assert (= (and x961 x386) x813))
(assert (x93 x175))
(assert (x769 x28))
(assert (x769 x629))
(assert (= (and x144 x355) x234))
(assert (x769 x1044))
(assert (x769 x391))
(assert (x1002 x859))
(assert (x769 x330))
(assert (= (and x139 x1077) x649))
(assert (= (and x773 x341) x575))
(assert (x769 x188))
(assert (x769 x538))
(assert (= (or x762 x1070) x774))
(assert (x769 x126))
(assert (= x999 (=> (and (= x410 x867) (= x98 x753) (= x933 x446) (= x297 x765) (= x451 x871) (= 0 x640) (= x442 x754)) x352)))
(assert (x769 x680))
(assert (= x996 (and x892 x958)))
(assert (x769 x607))
(assert (= (x213 256) 0))
(assert (x769 x1075))
(assert (x769 x1026))
(assert (x769 x307))
(assert (x769 x843))
(assert (x1002 x331))
(assert (x769 x56))
(assert (= (and x405 (not x1024)) x534))
(assert (x769 x529))
(assert (= x305 (and x662 (not x847))))
(assert (x769 x716))
(assert (= (x213 x56) 0))
(assert (x769 x748))
(assert (= x576 (and x1041 x977)))
(assert (x769 x69))
(assert (= x712 (and (not x852) x376)))
(assert (x769 x897))
(assert (= (=> (and (and (<= 0 x765) (= (x832 x696) x282) (< x905 1245659826) (< x905 2220280665) (>= 1461501637330902918203684832716283019655932542975 x765) (< 0 x282) (not x266) (not x1054) (= x470 x765) (> 1461501637330902918203684832716283019655932542976 x765) (= x905 75068239)) (and (and (= x843 x60) (= (= x843 x380) x965)) (and (<= x927 1461501637330902918203684832716283019655932542975) (>= x927 0) (= x927 x60) (> 2220280665 x680) (= x380 x470) (> x919 0) (= 75068239 x680) (= (x832 x696) x919) (< x680 1245659826) (< x927 1461501637330902918203684832716283019655932542976)))) (and (=> (and (and (and (= x315 x520) (= x524 x721) (= 832554005 x425) (>= 1461501637330902918203684832716283019655932542975 x721) (< x425 1245659826) (< x425 2220280665) (not (= x425 75068239)) (<= 0 x721) (= (x832 x696) x485) (not (= x425 818759841)) (< x721 1461501637330902918203684832716283019655932542976) (> x485 0)) (and (= x571 x524) (= (= x315 x571) x511))) (and (not (= 818759841 x676)) (< x676 1245659826) (not (= 75068239 x676)) (= x754 x520) (>= 1461501637330902918203684832716283019655932542975 x754) (= x676 832554005) (< 0 x814) (< x676 2220280665) (= x814 (x832 x696)) (>= x754 0) (> 1461501637330902918203684832716283019655932542976 x754))) (and x511 (=> (and (and (= (x832 x696) x967) (<= x753 1461501637330902918203684832716283019655932542975) (>= x753 0) (= 1245659826 x960) (not (< x960 1245659826)) (= x698 x753) (< 0 x967) (< x960 2220280665) (< x753 1461501637330902918203684832716283019655932542976)) (and (and (> 1461501637330902918203684832716283019655932542976 x619) (<= 0 x619) (= x688 (x832 x696)) (< 0 x688) (= 1245659826 x718) (= x619 x869) (= x698 x1079) (<= x619 1461501637330902918203684832716283019655932542975) (< x718 2220280665) (not (> 1245659826 x718))) (and (= x869 x16) (= x426 (= x16 x1079))))) (and x426 (=> (and (and (and (not (= 3084411429 x290)) (= x114 x574) (= x968 x583) (>= x114 0) (= (x832 x696) x62) (not (= x290 3705713892)) (= x290 4199168155) (not (< x290 2220280665)) (not (= x290 4076725131)) (< 0 x62) (<= x114 1461501637330902918203684832716283019655932542975) (not (> 3084411429 x290)) (< x114 1461501637330902918203684832716283019655932542976) (not (= x290 3572374928))) (and (= x944 (= x583 x702)) (= x574 x702))) (and (not (= x214 3084411429)) (not (> 3084411429 x214)) (= (x832 x696) x786) (<= 0 x933) (> 1461501637330902918203684832716283019655932542976 x933) (< 0 x786) (= 4199168155 x214) (not (= x214 3705713892)) (not (= 4076725131 x214)) (not (> 2220280665 x214)) (= x968 x933) (<= x933 1461501637330902918203684832716283019655932542975) (not (= x214 3572374928)))) (and (=> (and (and (and (= x86 (= x842 x612)) (= x842 x677)) (and (not (= x971 2249206060)) (= (x832 x696) x31) (= x971 2329570063) (>= x127 0) (>= 1461501637330902918203684832716283019655932542975 x127) (> 3084411429 x971) (< 0 x31) (not (= x971 2220280665)) (= x772 x612) (not (> 2220280665 x971)) (= x127 x677) (> 1461501637330902918203684832716283019655932542976 x127))) (and (not (= x489 2249206060)) (<= x871 1461501637330902918203684832716283019655932542975) (= (x832 x696) x8) (= x772 x871) (> 1461501637330902918203684832716283019655932542976 x871) (not (= 2220280665 x489)) (not (< x489 2220280665)) (> x8 0) (= x489 2329570063) (> 3084411429 x489) (>= x871 0))) x86) x944)))))) x965)) x983))
(assert (x769 x901))
(assert (x769 x1011))
(assert (x769 x79))
(assert (= x552 (and x38 (not x727))))
(assert (x93 x331))
(assert (x769 x801))
(assert (x769 x776))
(assert (x769 x10))
(assert (and (x172 x805 32) (=> (< 0 32) (= x805 (+ (x244 x805 32) (* 32 (x494 x805 32))))) (x141 x805 32) (x986 x805 32)))
(assert (x769 x570))
(assert (x769 x1028))
(assert (= (or x234 x928) x394))
(assert (= (x213 (+ (x882 (+ x792 196)) (- x1021 196))) 0))
(assert (and (x172 x507 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x507 (+ (x244 x507 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x507 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x507 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x507 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x769 x95))
(assert (= (and x546 x1001) x895))
(assert (x769 x349))
(assert (x769 x346))
(assert (x769 x609))
(assert (x769 x473))
(assert (x769 x761))
(assert (x585 x519))
(assert (= x292 (and x913 x803)))
(assert (x769 x63))
(assert (x769 x112))
(assert (= (and x757 x1035) x416))
(assert (= (or x729 x241) x780))
(assert (= (and x131 x76) x643))
(assert (= (or x428 (and (not x1036) x785)) x199))
(assert (x1067 x664))
(assert (= (and (not x455) x755) x295))
(assert (= x29 (and x887 x679)))
(assert (x769 x118))
(assert (and (= (x918 32 x110) (* 32 x110)) (x795 32 x110) (x353 32 x110) (and (= (x918 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x110) (- (* 32 x110) (* x110 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x918 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x110 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x110 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x110 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x918 32 (- x110 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x110 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x789 32 x110) (x381 32 x110) (x783 32 x110)))
(assert (x769 x309))
(assert (= (and x108 (not x433)) x388))
(assert (x769 x297))
(assert (x769 x77))
(assert (and (x172 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x331 (+ (x244 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x769 x599))
(assert (x769 x535))
(assert (x769 x498))
(assert (= (and x455 x755) x167))
(assert (x1002 x74))
(assert (x769 x356))
(assert (x769 x782))
(assert (and (x172 x326 32) (=> (< 0 32) (= x326 (+ (x244 x326 32) (* 32 (x494 x326 32))))) (x141 x326 32) (x986 x326 32)))
(assert (and (x172 x175 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x175 (+ (x244 x175 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x175 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x175 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x175 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x719 (and x194 x101)))
(assert (= (and x230 x484) x207))
(assert (= x516 (or x1046 x891)))
(assert (x769 x622))
(assert (= 0 (x213 (+ 96 (x882 (+ 196 x792))))))
(assert (x769 x619))
(assert (x769 x98))
(assert (= (and x895 (not x296)) x136))
(assert (x769 x942))
(assert (x769 x40))
(assert (x769 x1074))
(assert (= x628 (and x931 x856)))
(assert (= (x213 (+ (- (+ (- x284 x648) x829) 196) (x882 (+ x792 196)))) 0))
(assert (= (and x233 (not x1045)) x413))
(assert (and (x172 x790 32) (=> (< 0 32) (= x790 (+ (x244 x790 32) (* 32 (x494 x790 32))))) (x141 x790 32) (x986 x790 32)))
(assert (= (and x179 x719) x46))
(assert (x769 x997))
(assert (x769 x456))
(assert (x769 x536))
(assert (= x892 (and x224 x726)))
(assert (x769 x957))
(assert (= x855 (and x545 x1016)))
(assert (x769 x738))
(assert (x769 x163))
(assert (x769 x642))
(assert (= x261 (and x361 x177)))
(assert (x769 x551))
(assert (x769 x515))
(assert (= x156 (and x870 x577)))
(assert (x769 x132))
(assert (= x52 (and x206 x24)))
(assert (= x407 (or x700 x683 x603 x996 x327)))
(assert (x769 x89))
(assert (= (x80 x728) 0))
(assert (x769 x873))
(assert (= x931 (and x706 x973)))
(assert (x769 x264))
(assert (= (and (not x179) x719) x617))
(assert (= (x30 (- x58 x515)) 0))
(assert (= 0 (x30 (- x728 x515))))
(assert (and (x172 x997 32) (=> (< 0 32) (= x997 (+ (x244 x997 32) (* 32 (x494 x997 32))))) (x141 x997 32) (x986 x997 32)))
(assert (= (and x23 (not x751)) x644))
(assert (x769 x711))
(assert (x769 x505))
(assert (x93 1461501637330902918203684832716283019655932542976))
(assert (x769 x282))
(assert (x769 x825))
(assert (x93 x861))
(assert (= (and x294 x199) x581))
(assert (x769 x454))
(assert (x769 x587))
(assert (x769 x763))
(assert (= 0 (x30 (- x686 x515))))
(assert (x769 x510))
(assert (x1002 x507))
(assert (x845 x92))
(assert (x769 x4))
(assert (x585 x248))
(assert (and (x172 x934 32) (=> (< 0 32) (= x934 (+ (x244 x934 32) (* 32 (x494 x934 32))))) (x141 x934 32) (x986 x934 32)))
(assert (x93 x531))
(assert (x769 x285))
(assert (x769 x375))
(assert (= (or x740 x279 x741 x813 x171) x691))
(assert (= (and x52 x916) x39))
(assert (x769 x960))
(assert (= x785 (or x339 x47)))
(assert (x769 x927))
(assert (x925 x664))
(assert (= x978 (and (not x632) x746)))
(assert (x769 x507))
(assert (x769 x674))
(assert (= (and x422 x358) x417))
(assert (= x1004 (=> (and (<= x754 1461501637330902918203684832716283019655932542975) (= false x1050) (>= 1461501637330902918203684832716283019655932542975 x158) (<= 0 x694) (<= x738 1461501637330902918203684832716283019655932542975) (= (< 0 (x832 x13)) x791) (<= x237 1461501637330902918203684832716283019655932542975) (<= x888 255) (<= 0 x237) (<= x152 1461501637330902918203684832716283019655932542975) (>= x152 0) (>= 255 x138) (>= x681 0) (= x89 (x453 x13)) (<= x932 255) (>= 1461501637330902918203684832716283019655932542975 x800) (>= x933 0) (>= 1461501637330902918203684832716283019655932542975 x251) (= x209 (x453 x696)) (>= x900 0) (>= x738 0) (<= x681 255) (>= x251 0) (<= 0 x911) (<= x753 1461501637330902918203684832716283019655932542975) (>= x103 0) (>= x888 0) (= x340 1262878978) (>= x349 0) (>= x765 0) (= x309 x289) (>= x932 0) (<= 0 x285) (<= 0 x89) x791 (>= x800 0) (= (= x289 0) x1061) (< x289 1461501637330902918203684832716283019655932542976) (<= 0 x1018) (<= x45 1461501637330902918203684832716283019655932542975) (or x1061 x111) (= x216 (> (x832 x696) 0)) (= false x196) (<= x13 1461501637330902918203684832716283019655932542975) (<= x349 255) (>= x754 0) (<= x696 1461501637330902918203684832716283019655932542975) (<= 0 x904) (>= x1020 0) (= (< 0 x289) x111) (= x911 x424) (not (= x696 x13)) x216 (>= 1461501637330902918203684832716283019655932542975 x871) (<= x285 255) (<= x765 1461501637330902918203684832716283019655932542975) (<= x1018 1461501637330902918203684832716283019655932542975) (<= 0 x186) (>= 1461501637330902918203684832716283019655932542975 x1020) (<= 0 x209) (>= x753 0) (= x487 false) (<= 0 x871) (<= x309 1461501637330902918203684832716283019655932542975) (<= 0 x45) (>= x309 0) (= x265 (< x147 x956)) (<= 0 x97) (<= x694 1461501637330902918203684832716283019655932542975) (= (x453 x289) x147) (<= x103 79228162514264337593543950335) (= true x898) (<= x186 1461501637330902918203684832716283019655932542975) (<= 0 x138) (>= x957 0) (= x808 5) (>= 255 x957) (< 0 x696) (< 0 x13) (<= x933 1461501637330902918203684832716283019655932542975) (>= x158 0) (>= 255 x97) (<= x911 1461501637330902918203684832716283019655932542975) (<= x900 1461501637330902918203684832716283019655932542975) (<= x904 1461501637330902918203684832716283019655932542975)) (and (=> (and (and (= (or x5 x500) x853) (= x956 x1051) (or (and (= (<= x863 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x227)) (> x227 x863)) (and (> x863 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x227))) (and (> x227 163) (= (<= x227 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> 2220280665 x974) (= x697 x710) (not (> x810 18446744073709551615)) (= x1047 x289) (<= x517 1461501637330902918203684832716283019655932542975) (= x463 (x882 (+ 4 x710))) (not (= 1245659826 x974)) (= (x882 (+ x945 160)) x761) (< (+ x1051 x824) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x882 (+ 4 x787)) x280) (= (x882 (+ x636 32)) x646) (= x269 (ite x1069 1 0)) (= (x506 (* x825 32)) x253) (= x594 (< 0 x713)) (= (x882 (+ 31 x771)) x997) (= (x882 (+ x463 32)) x554) (= x383 (x882 (+ x253 x946))) (= (x882 (+ 31 x280)) x819) (= x810 (x35 x403)) (not (> x383 x227)) (not (> x825 18446744073709551615)) (= x403 (x882 (+ x797 4))) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x711) true) (< x711 160)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x711))) (>= x607 0) (= (< 18446744073709551615 x792) x500) (= (x896 128) x713) (= x877 x787) (or (and (<= x227 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x132)) (and (> x227 x132) (= (<= x227 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x132)))) (= x611 (x882 (+ 32 x796))) (= x793 x1052) (= (x506 (* 32 x110)) x912) (= x175 (x882 (+ 31 x3))) (= x378 (x882 (+ x642 4))) (= (x35 x378) x110) (not (> x771 18446744073709551615)) (= x542 (x882 (+ x810 160))) (= x12 (x882 (+ 32 x378))) (= x584 x563) (= x945 (x882 (+ 4 x792))) (= (x35 x463) x771) (not (< 18446744073709551615 x110)) (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x861) x81) (= (x130 x696) x824) (= (x453 x289) x874) (= x166 (x882 (+ 32 x761))) (= (x882 (+ x796 x976)) x792) (= (x882 (+ x824 x956)) x300) (= x456 (x882 (+ x912 x12))) (= x269 0) (= x651 x797) (= (- x874 x956) x467) (= (x882 (+ 31 x463)) x185) (< 0 x173) (or (and (<= x227 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x819)) (and (< x819 x227) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x227) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x819)))) (= x863 (x882 (+ 31 x403))) (= 1262878978 x974) (= x289 x607) (not (< 18446744073709551615 x651)) (not (> x95 x227)) (= x796 (x882 (+ x81 128))) (= x291 (x882 (+ x771 x611))) (= x1075 x1052) (= x102 (< x796 128)) (<= x607 1461501637330902918203684832716283019655932542975) (= 0 x473) (not (< x974 1245659826)) (not (< 18446744073709551615 x697)) (not (> x184 18446744073709551615)) (= (x882 (+ 32 x280)) x946) (not (> x456 x227)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x185) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x227)) (< x185 x227)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x227) (> x185 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x636 (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x805)) (= x1069 (or x275 x102)) (not (< x227 x1058)) (= x976 (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x175)) (not (< x227 4)) (>= x517 0) (= (x882 (+ x810 31)) x805) (= (x806 (- x227 4)) x711) (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x997) x969) (= x508 (x882 (+ x403 32))) (= (x882 (+ 32 x969)) x3) (= (x35 x280) x825) (= x173 (x832 x696)) (<= x187 1461501637330902918203684832716283019655932542975) (not (< 18446744073709551615 x877)) (= x642 x184) (= x861 (x882 (+ 31 x646))) (= x275 (> x796 18446744073709551615)) (= x473 (ite x853 1 0)) (= (x882 (+ x554 x771)) x1058) (= (x882 (+ 31 x378)) x132) (= (x882 (+ x508 x810)) x95) (<= 0 x187) (= x584 x517) (= x5 (< x792 x796))) (not x265)) (and (=> (and (= x622 0) (not x594)) x480) (=> (and (and (= x768 (x682 160)) (= (> x713 32) x632) (= x166 x1009)) x594) (and (=> (and (and (= (x882 (+ x166 32)) x140) (= x727 (< 64 x713)) (= (x717 192) x748)) x632) (and (=> (and (= 64 x622) (not x727)) x480) (=> (and x727 (and (= x11 (x868 224)) (= (x882 (+ x166 64)) x356) (= x1013 (< 96 x713)))) (and (=> (and (= x622 96) (not x1013)) x480) (=> x1013 x940))))) (=> (and (not x632) (= 32 x622)) x480))))) (=> (and x265 (and (= x753 x619) (= x1054 false) (= x871 x127) (= x114 x933) (= x927 x765) (= x754 x721) (= true x266))) x983)))))
(assert (x769 x272))
(assert (x585 x175))
(assert (x769 x792))
(assert (= x921 (and x301 (not x133))))
(assert (x769 x351))
(assert (x769 x759))
(assert (x93 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (= x1041 (> x568 0)) (and (=> (not x1041) x999) (=> (and (= x964 x750) x1041) x332))) x839))
(assert (= 0 (x213 (+ (- (+ x829 (- 256 x648)) 196) (x882 (+ 196 x792))))))
(assert (= (and x195 (not x908)) x950))
(assert (x769 x335))
(assert (= (and x803 (not x913)) x447))
(assert (x769 x524))
(assert (x925 x13))
(assert (x769 x72))
(assert (= x886 (=> (and (= x1036 (= 0 x995)) (or (not x1036) x1036)) x302)))
(assert (= (x80 x660) 0))
(assert (x769 x676))
(assert (= 0 (x213 (+ (x882 (+ 196 x792)) (- (+ (- 192 x648) x829) 196)))))
(assert (x769 x584))
(assert (x93 x519))
(assert (= x376 (and x959 x742)))
(assert (= x198 (=> (and (= (= x615 0) x1016) (or x1016 (not x1016))) x389)))
(assert (= (and x594 x329) x746))
(assert (x769 x1032))
(assert (x769 x565))
(assert (x769 x571))
(assert (= 0 (x213 (+ (x882 (+ x792 196)) (- (+ x829 (- x686 x648)) 196)))))
(assert (= x851 (=> (and (not (= x593 1553423035)) (= (= x713 (x935 164)) x443) (not (= 1845979623 x593)) (= x1077 (or (and (< x658 160) (= true (<= x658 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x658))) (= (x806 (- x319 4)) x658) (= 54065695799311150304516525983669583430195215316752708547810291668471328538624 x390) (= x40 x929) (not (< x593 1245659826)) (= 2005408114 x593) (not (< x319 4)) (> x151 0) (= x737 (x806 (- x43 x792))) (>= x319 292) (= x319 x737) x443 (not (= x593 1262878978)) (= x151 (x832 x696)) (not (= 1245659826 x593)) (= x897 x203) (= x689 x1075) (= x263 x72) (not (= 1901074598 x593)) (> 2220280665 x593)) (and (=> (and (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x319) true) (< 195 x319)) x870) (not x1077)) (and (=> (and x870 (and (= x966 (< 18446744073709551615 x223)) (= x223 (x159 164)))) (and (=> (and (and (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x580) x555) (= (or x145 x448) x518) (= (> x58 18446744073709551615) x448) (= x145 (> 128 x58)) (= (x882 (+ x555 128)) x58) (= (x882 (+ 32 x479)) x890) (= x479 (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x491)) (= (= 0 (ite x518 1 0)) x908) (= x580 (x882 (+ x890 31))) (= x491 (x882 (+ x223 31)))) (not x966)) (and (=> (and (and (= (x882 (+ 196 x223)) x937) (= x361 (> x937 x319))) x908) (and (=> (and (and (= (x882 (+ x223 160)) x981) (= (> x263 18446744073709551615) x433)) (not x361)) (and (=> (and (and (= x337 (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x604) (<= x319 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x319) (<= x604 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x319 x604)))) (= x604 (x882 (+ 31 x1021))) (= (x882 (+ 4 x72)) x1021)) (not x433)) (and (=> (not x337) x999) (=> (and (and (= (< 18446744073709551615 x18) x1024) (= x18 (x159 x1021)) (= (x882 (+ x1021 32)) x829)) x337) (and (=> x1024 x999) (=> (and (not x1024) (and (= (x882 (+ 31 x18)) x934) (= (x882 (+ 32 x69)) x523) (= (> x58 x346) x1072) (= x259 (or x1072 x359)) (= x377 (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x320)) (= x346 (x882 (+ x58 x377))) (= (= (ite x259 1 0) 0) x720) (= (x882 (+ 31 x523)) x320) (= x359 (< 18446744073709551615 x346)) (= x69 (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x934)))) (and (=> (not x720) x999) (=> (and (and (= (< x319 x61) x831) (= x61 (x882 (+ x18 x829))) (= (x882 (+ 32 x58)) x648)) x720) (and (=> x831 x999) (=> (and (and (= x990 (x882 (+ x648 x18))) (= x880 (> x40 18446744073709551615))) (not x831)) (and (=> x880 x999) (=> (and (and (= x548 (x882 (+ 31 x63))) (= x673 (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x548) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x319)) (and (= (<= x548 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x319)) (< x548 x319)))) (= x63 (x882 (+ x929 4)))) (not x880)) (and (=> (not x673) x999) (=> (and (and (= (x159 x63) x379) (= x679 (< 18446744073709551615 x379))) x673) (and (=> x679 x999) (=> (and (not x679) (and (= x1017 (x882 (+ x1080 x150))) (= x455 (> x1017 x319)) (= (x506 (* x379 32)) x150) (= x1080 (x882 (+ x63 32))))) (and (=> x455 x999) (=> (and (not x455) (= (> x203 18446744073709551615) x190)) (and (=> (and (not x190) (and (= (x882 (+ 31 x667)) x1048) (= (x882 (+ x897 4)) x667) (= x101 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x319) (> x1048 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x319 x1048) (= (<= x1048 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x319 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) (and (=> (and x101 (and (= (x159 x667) x92) (= (> x92 18446744073709551615) x179))) (and (=> x179 x999) (=> (and (and (= (< x319 x858) x1012) (= (x882 (+ 32 x667)) x954) (= x858 (x882 (+ x954 x608))) (= (x506 (* 32 x92)) x608)) (not x179)) (and (=> x1012 x999) (=> (and (and (< x138 256) (>= x138 0) (= x143 (= x138 0)) (>= 255 x138)) (not x1012)) (and (=> (and (and (>= x385 0) (= (> x385 0) x164) (<= x385 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x143) (and (=> (and x164 (and (= x672 (= 0 x385)) (>= x385 0) (<= x385 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (not x672) x999) (=> (and x672 (and (= 4 x1005) (not (= 2329570063 x663)) (= x1005 x382) (= x501 (x174 1461501637330902918203684832716283019655932542975 x74)) (> 3084411429 x663) (= x894 (x882 (+ x346 32))) (= x74 (x299 x346)) (>= x158 0) (<= x158 1461501637330902918203684832716283019655932542975) (not (= x663 2220280665)) (= (x832 x696) x393) (not (< x382 4)) (= x382 4) (= x663 2376452955) (not (< x663 2220280665)) (not (= 2249206060 x663)) (= x274 64069044923792539370177021244577383457373632460708312080110356237917649633280) (= x837 (= x74 x501)) (> 1461501637330902918203684832716283019655932542976 x158) (> x393 0))) (and (=> (and x837 (and (= x120 (and (<= 0 x659) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x668 x498)))) (= (x174 1461501637330902918203684832716283019655932542975 x74) x123) (= (x460 x696) x659) (= (x460 x123) x498) (= 0 x668))) (and (=> (and x120 (and (and (= (< 0 x161) x355) (= (x276 x123) x330) (= x330 x1028) (= (x460 x696) x979) (= x979 x267) (< (+ x330 x668) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (and (= (<= x427 (x1057 x696)) x512) (= (x210 x696) x427) (< x799 4294967296) x512 (= (= x939 (x1057 x123)) x1082) x1082 (= x939 (x210 x123))) x355) (not x355)))) x625) (=> (and (not x120) (and (= 0 x827) (= 0 x568))) x191))) (=> (not x837) x999))))) (=> (and (not x164) (= x346 x964)) x332))) (=> (not x143) x999))))))) (=> (not x101) x999))) (=> x190 x999))))))))))))))))))) (=> x433 x999))) (=> x361 x999))) (=> (not x908) x999))) (=> x966 x999))) (=> (not x870) x999))) (=> x1077 x999)))))
(assert (x769 x97))
(assert (x769 x441))
(assert (x769 x988))
(assert (= x989 (and x635 x884)))
(assert (= (and (not x411) x71) x645))
(assert (= (and x124 (not x1049)) x963))
(assert (and (= (x918 32 x379) (* 32 x379)) (x795 32 x379) (x353 32 x379) (and (= (x918 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x379) (- (* 32 x379) (* x379 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x918 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x379 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x379 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x379 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x918 32 (- x379 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x379 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x789 32 x379) (x381 32 x379) (x783 32 x379)))
(assert (x769 x721))
(assert (= (and (not x706) x973) x157))
(assert (x93 x859))
(assert (x585 x347))
(assert (x1002 x664))
(assert (x769 x245))
(assert (x769 x362))
(assert (x769 x185))
(assert (x769 x123))
(assert (and (x172 x320 32) (=> (< 0 32) (= x320 (+ (x244 x320 32) (* 32 (x494 x320 32))))) (x141 x320 32) (x986 x320 32)))
(assert (x585 x507))
(assert (x769 x541))
(assert (= (or x627 x552 x978 x605 x363) x71))
(assert (= x883 (=> (and (= x422 (= x384 0)) (= x384 (x832 x970)) (= x970 (x174 1461501637330902918203684832716283019655932542975 x664))) (and (=> (and (and (= (> x995 0) x802) (or (and (and x303 (= (x497 x696) x55) (= (= x578 (x115 x970)) x303) (= (<= x55 (x115 x696)) x962) (> 4294967296 x551) (= (x497 x970) x578) x962) x802) (not x802))) (not x422)) x886) (=> x422 x999)))))
(assert (x769 x768))
(assert (x769 x781))
(assert (x769 x1060))
(assert (= (=> (and (= (x655 x58) x457) (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x37) x579) (= (x882 (+ 31 x87)) x37) (= x556 (< 0 x457)) (= (x882 (+ 32 x218)) x801) (= x723 (x806 (- x33 x218))) (= (x882 (+ x579 x1032)) x33) (= x948 (x882 (+ 32 x33)))) (and (=> (and (and (= (> x457 32) x133) (= x648 x1056) (= x154 x948) (= (x395 x1056) x421)) x556) (and (=> (and (not x133) (= 32 x54)) x560) (=> (and (and (= x629 (x882 (+ 32 x948))) (= x959 (< 64 x457)) (= (x882 (+ x648 32)) x284) (= x510 (x458 x284))) x133) (and (=> (and (not x959) (= x54 64)) x560) (=> (and x959 (and (= x728 (x882 (+ 64 x648))) (= (< 96 x457) x852) (= (x1081 x728) x647) (= (x882 (+ x948 64)) x557))) (and (=> x852 x462) (=> (and (= 96 x54) (not x852)) x560))))))) (=> (and (= x54 0) (not x556)) x560))) x705))
(assert (= x724 (and (not x481) x1034)))
(assert (x769 x911))
(assert (x769 x867))
(assert (x585 x491))
(assert (= x117 (and x1073 (not x287))))
(assert (x769 x611))
(assert (x769 x364))
(assert (x769 x871))
(assert (x769 x92))
(assert (x769 x800))
(assert (x93 x790))
(assert (x585 x790))
(assert (x769 x728))
(assert (= x339 (and x1008 (not x802))))
(assert (x769 x228))
(assert (and (x172 x519 32) (=> (< 0 32) (= x519 (+ (x244 x519 32) (* 32 (x494 x519 32))))) (x141 x519 32) (x986 x519 32)))
(assert (x769 x693))
(assert (= (and (not x991) x643) x606))
(assert (and (x172 x347 32) (=> (< 0 32) (= x347 (+ (x244 x347 32) (* 32 (x494 x347 32))))) (x141 x347 32) (x986 x347 32)))
(assert (= (or x374 x645) x558))
(assert (x769 x578))
(assert (x769 x819))
(assert (= x437 (=> (and (= x160 (x36 x796)) (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x170) x949) (= (x882 (+ 31 x713)) x170) (= x263 (x806 (- x34 x945))) (= x582 (x882 (+ x945 32))) (= (> x160 0) x947) (= (x882 (+ 32 x34)) x1078) (= (x882 (+ x166 x949)) x34)) (and (=> (and (and (= (< 32 x160) x751) (= x1078 x434) (= x611 x848) (= x273 (x25 x848))) x947) (and (=> (and (= x1044 32) (not x751)) x862) (=> (and x751 (and (= (x882 (+ 32 x611)) x56) (= (> x160 64) x654) (= (x882 (+ x1078 32)) x536) (= x431 (x678 x56)))) (and (=> (and (not x654) (= 64 x1044)) x862) (=> (and (and (= (> x160 96) x1035) (= x342 (x882 (+ x611 64))) (= x169 (x613 x342)) (= (x882 (+ 64 x1078)) x77)) x654) (and (=> (and (not x1035) (= x1044 96)) x862) (=> x1035 x461))))))) (=> (and (= x1044 0) (not x947)) x862)))))
(assert (x769 x214))
(assert (x769 x890))
(assert (= (and x144 (not x355)) x928))
(assert (and (x172 x248 32) (=> (< 0 32) (= x248 (+ (x244 x248 32) (* 32 (x494 x248 32))))) (x141 x248 32) (x986 x248 32)))
(assert (x769 x563))
(assert (x769 x574))
(assert (x769 x794))
(assert (= (and x90 x502) x321))
(assert (x769 x289))
(assert (= 0 (x213 x848)))
(assert (= x106 (and (not x90) x502)))
(assert (x769 x87))
(assert (x769 x182))
(assert (x769 x793))
(assert (x769 x992))
(assert (= x803 (or x252 x371 x84 x416 x644)))
(assert (= (and x733 x246) x484))
(assert (x769 x14))
(assert (x769 x251))
(assert (x769 x16))
(assert (x769 x424))
(assert (x1002 x519))
(assert (x925 x587))
(assert (x769 x109))
(assert (x769 x790))
(assert (= 0 (x213 x573)))
(assert (x769 x284))
(assert (= (and x488 x153) x397))
(assert (x769 x442))
(assert (x769 x150))
(assert (= x734 (and x751 x23)))
(assert (x769 x201))
(assert (= 0 (x213 (+ 64 (x882 (+ 196 x792))))))
(assert (= x191 (=> (and (= x90 (= x827 0)) (or (and (and (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x859) x596) (= x570 (x882 (+ x596 x894))) (= x570 x750) (= x859 (x882 (+ 63 x827))) (= x515 (x882 (+ 32 x894)))) (not x90)) (and (= x894 x750) x90))) x839)))
(assert (x769 x616))
(assert (x769 x18))
(assert (x769 x482))
(assert (x769 x1079))
(assert (x769 x735))
(assert (= x610 (and (not x907) x963)))
(assert (= (and (not x249) x1038) x849))
(assert (= (and x146 x367) x211))
(assert (x769 x583))
(assert (= x742 (and x301 x133)))
(assert (= (and (not x870) x577) x231))
(assert (x769 x178))
(assert (= (and x156 (not x966)) x195))
(assert (x769 x596))
(assert (x769 x573))
(assert (x769 x91))
(assert (x769 x1))
(assert (x769 x647))
(assert (= x358 (or x899 x117)))
(assert (x769 x248))
(assert (= (and x556 x749) x301))
(assert (x1002 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x769 x955))
(assert (x769 x340))
(assert (x769 x667))
(assert (and (x172 x347 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x347 (+ (x244 x347 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x347 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x347 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x347 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x690 x774) x241))
(assert (x769 x650))
(assert (x769 x13))
(assert (x769 x708))
(assert (= (and x429 x225) x153))
(assert (x769 x829))
(assert (= x134 (and (not x1012) x617)))
(assert (= (=> (and (= x914 (x882 (+ x408 32))) (= x288 x459) (= x306 (x882 (+ x821 x1026))) (= x1026 (x882 (+ 32 x599))) (= x821 (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x347)) (= x221 (x35 x408)) (= x860 (x806 (- x227 x221))) (= x408 (x882 (+ x135 x946))) (= x1060 (x806 (- x227 x946))) (not (> x221 18446744073709551615)) (= (x806 (- x1060 31)) x272) (= x135 (x35 x946)) (or (and (= (<= x135 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x272)) (< x135 x272)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x135) (<= x272 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (or (and (> x914 x860) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x860) (<= x914 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x914) (> x860 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (not (> x825 1)) x474) (= (x882 (+ x221 31)) x347) (= x650 (x882 (+ x221 x1026)))) (and (=> (= x306 x43) x851) x474)) x399))
(assert (= (x213 (+ (x882 (+ 196 x792)) (- (+ x829 (- x660 x648)) 196))) 0))
(assert (x769 x858))
(assert (x769 x932))
(assert (= (=> (and (= (= x640 0) x226) (or (not x226) x226)) x392) x352))
(assert (x769 x55))
(assert (and (x172 x331 32) (=> (< 0 32) (= x331 (+ (x244 x331 32) (* 32 (x494 x331 32))))) (x141 x331 32) (x986 x331 32)))
(assert (x769 x59))
(assert (x769 x753))
(assert (x93 x74))
(assert (= x343 (and x910 (not x486))))
(assert (and (x172 x859 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x859 (+ (x244 x859 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x859 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x859 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x859 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x324 (and (not x903) x397)))
(assert (x769 x697))
(assert (x769 x436))
(assert (= (or x193 x657 x766) x502))
(assert (= x428 (and x1036 x785)))
(assert (x769 x698))
(assert (x769 x1017))
(assert (x769 x110))
(assert (x769 x836))
(assert (x769 x459))
(assert (x769 x431))
(assert (= (and x917 x308) x834))
(assert (x769 x669))
(assert (x769 x863))
(assert (x769 x181))
(assert (x769 x269))
(assert (= (and (not x230) x484) x740))
(assert (x769 x661))
(assert (= (x213 (+ (x882 (+ x792 196)) (- (+ x829 (- x1031 x648)) 196))) 0))
(assert (x769 x990))
(assert (= x9 (and (not x143) x134)))
(assert (x769 x889))
(assert (= (=> (and (and (<= x942 1461501637330902918203684832716283019655932542975) (= (x882 (+ x316 x592)) x794) (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x331) x592) (not (= 0 x809)) (= (x882 (+ x163 31)) x331) (= (> x817 0) x122) (not (or (> x163 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x163 32) (= (<= x163 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x942 (x620 x316))) (or (and x122 (and (> 4294967296 x955) (= x454 1))) (and (= x817 x454) (not x122)))) x183) x192))
(assert (x769 x229))
(assert (x769 x737))
(assert (and (x172 x609 32) (=> (< 0 32) (= x609 (+ (x244 x609 32) (* 32 (x494 x609 32))))) (x141 x609 32) (x986 x609 32)))
(assert (x1002 x861))
(assert (x769 x45))
(assert (= x420 (=> (= (< 0 x503) x344) (and (=> (not x344) x999) (=> x344 x21)))))
(assert (= (=> (and (= (x882 (+ x801 32)) x100) (= x701 (x882 (+ x100 32))) (= (x832 x587) x943) (= (= 0 x943) x847) (= (x882 (+ 32 x846)) x836) (= (x882 (+ x701 32)) x846)) (and (=> (and (and (or (and x807 (and x1000 x452 (= (x1023 x696) x28) (< x923 4294967296) (= x1000 (= x529 (x17 x587))) (= x529 (x1023 x587)) (= x452 (<= x28 (x17 x696))))) (not x807)) (= x807 (> x615 0))) (not x847)) x198) (=> x847 x999))) x369))
(assert (= x715 (or x447 x292)))
(assert (= x22 (and x758 (not x471))))
(assert (= (and (not x361) x177) x108))
(assert (x769 x1052))
(assert (x769 x475))
(assert (x769 x804))
(assert (x769 x591))
(assert (= x142 (and x296 x895)))
(assert (x769 x548))
(assert (= (x80 x284) 0))
(assert (x769 x384))
(assert (x769 x316))
(assert (x769 x608))
(assert (x769 x517))
(assert (and (x172 x37 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x37 (+ (x244 x37 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x37 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x37 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x37 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x769 x1020))
(assert (= (x213 (+ (x882 (+ x792 196)) (- x351 196))) 0))
(assert (= (and x411 x71) x374))
(assert (x769 x879))
(assert (= (and x397 x903) x85))
(assert (x585 x934))
(assert (x769 x418))
(assert (x769 x243))
(assert (= (x30 (- x660 x515)) 0))
(assert (x769 x799))
(assert (x769 x200))
(assert (x769 x491))
(assert (= 0 (x213 (+ (- x667 196) (x882 (+ x792 196))))))
(assert (= (and x295 x190) x336))
(assert (and (x172 x861 32) (=> (< 0 32) (= x861 (+ (x244 x861 32) (* 32 (x494 x861 32))))) (x141 x861 32) (x986 x861 32)))
(assert (x769 x723))
(assert (x769 x383))
(assert (x585 x805))
(assert (x925 x696))
(assert (x769 x503))
(assert (and (x172 x580 32) (=> (< 0 32) (= x580 (+ (x244 x580 32) (* 32 (x494 x580 32))))) (x141 x580 32) (x986 x580 32)))
(assert (= 0 (x30 (- x938 x515))))
(assert (x769 x579))
(assert (= x206 (and x1034 x481)))
(assert (x93 x320))
(assert (= (x30 (- x1031 x515)) 0))
(assert (x769 x718))
(assert (= x124 (and (not x916) x52)))
(assert (x769 x149))
(assert (x1067 x74))
(assert (= (or x321 x106) x977))
(assert (x769 x866))
(assert (x1002 x326))
(assert (= x549 (and (not x24) x206)))
(assert (x93 x805))
(assert (x769 x701))
(assert (x769 x656))
(assert (x769 x953))
(assert (x769 x457))
(assert (= (x80 x1031) 0))
(assert (x769 x648))
(assert (x769 x451))
(assert (x769 x137))
(assert (and (= (x918 9 9) 81) (= 27 (x918 9 3)) (= 9 (x918 3 3)) (= (x918 27 3) 81)))
(assert (= x635 (or x665 (and (not x226) x68))))
(assert (= (and x249 x1038) x509))
(assert (x769 x796))
(assert (x769 x954))
(assert (x769 x987))
(assert (= (or x833 x834) x1073))
(assert (= (and (not x1035) x757) x84))
(assert (x769 x408))
(assert (= x865 (and x1043 x880)))
(assert (x93 x507))
(assert (x769 x914))
(assert (x769 x677))
(assert (= (and (not x488) x153) x652))
(assert (= (and x707 (not x265)) x329))
(assert (x769 x861))
(assert (= (x213 (+ (x882 (+ 196 x792)) (- x63 196))) 0))
(assert (x769 x114))
(assert (and (= (x918 32 x92) (* 32 x92)) (x795 32 x92) (x353 32 x92) (and (= (x918 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x92) (- (* 32 x92) (* x92 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x918 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x918 32 (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x789 32 x92) (x381 32 x92) (x783 32 x92)))
(assert (x769 x129))
(assert (and (x172 x519 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x519 (+ (x244 x519 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x519 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x519 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x519 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (<= (x439 x696 x535) 340282366920938463463374607431768211455) (<= 10000 (x439 x696 x535))))
(assert (and (x172 x491 32) (=> (< 0 32) (= x491 (+ (x244 x491 32) (* 32 (x494 x491 32))))) (x141 x491 32) (x986 x491 32)))
(assert (= (and (not x122) x780) x891))
(assert (x93 x326))
(assert (= (and x802 x1008) x47))
(assert (x769 x298))
(assert (x769 x968))
(assert (and (x172 x37 32) (=> (< 0 32) (= x37 (+ (x244 x37 32) (* 32 (x494 x37 32))))) (x141 x37 32) (x986 x37 32)))
(assert (x769 x750))
(assert (= x621 (=> (and (= (= x503 0) x313) (or (not x313) x313)) x631)))
(assert (= x833 (and (not x917) x308)))
(assert (= (x213 (+ (- (+ x829 (- x938 x648)) 196) (x882 (+ 196 x792)))) 0))
(assert (x769 x658))
(assert (x769 x277))
(assert (x769 x1005))
(assert (= x177 (and x195 x908)))
(assert (= 0 (x80 256)))
(assert (not x1004))
(assert (x769 x859))
(assert (x769 x237))
(assert (and (x172 x664 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x664 (+ (x244 x664 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x494 x664 1461501637330902918203684832716283019655932542976))))) (x141 x664 1461501637330902918203684832716283019655932542976) (x986 x664 1461501637330902918203684832716283019655932542976)))
(assert (= x993 (and x407 x982)))
(assert (x769 x403))
(assert (= (and (not x856) x931) x215))
(assert (x769 x41))
(assert (x769 x663))
(assert (= (or x53 (and (not x313) x165)) x233))
(assert (= (or x770 x211) x973))
(assert (= (and x533 (not x164)) x128))
(assert (x769 x54))
(assert (= x590 (and (not x720) x534)))
(assert (x769 x390))
(assert (x769 x61))
(assert (x769 x380))
(assert (= x75 (and x1068 (not x344))))
(assert (x769 x547))
(assert (x769 x263))
(assert (x769 x555))
(assert (x769 x1048))
(assert (= (and x961 (not x386)) x741))
(assert (x93 x609))
(assert (x769 x923))
(assert (= (and (not x778) x1037) x683))
(assert (x769 x788))
(assert (= x729 (and x774 (not x690))))
(assert (x769 x840))
(assert (= 0 (x80 x686)))
(assert (x769 x696))
(assert (= 0 (x80 192)))
(assert (= (x80 224) 0))
(assert (x769 x350))
(assert (= x260 (and (not x254) x691)))
(assert (x769 x948))
(assert (x93 x347))
(assert (= (and x113 x394) x766))
(assert (= 0 (x213 (+ (x882 (+ 196 x792)) (- (+ (- x638 160) 196) 196)))))
(assert (x769 x175))
(assert (= (and x639 (not x672)) x256))
(assert (= 0 (x213 160)))
(assert (x769 x588))
(assert (= (=> (and (or (and (= x348 (x882 (+ x10 x91))) x367) (not x367)) (= (< x91 x4) x367)) x493) x504))
(assert (x769 x49))
(assert (x769 x640))
(assert (= (=> (= (= x615 0) x885) (and (=> (and (not x885) (and (= x782 (x882 (+ 3 x312))) (= x243 (x882 (+ 32 x964))) (= (x882 (+ 32 x964)) x312) (= x182 (x752 x58)) (= x246 (> x182 0)))) (and (=> (and x246 (and (= x230 (> x182 32)) (= (x752 x660) x364) (= x648 x660) (= x782 x73))) (and (=> (and (= x201 32) (not x230)) x401) (=> (and (and (= x307 (x882 (+ x782 32))) (= (< 64 x182) x476) (= x270 (x653 x938)) (= (x882 (+ x648 32)) x938)) x230) (and (=> (and (not x476) (= x201 64)) x401) (=> (and x476 (and (= (< 96 x182) x386) (= x638 (x882 (+ 64 x648))) (= x345 (x1055 x638)) (= (x882 (+ 64 x782)) x51))) (and (=> (and (= 96 x201) (not x386)) x401) (=> x386 x566))))))) (=> (and (not x246) (= x201 0)) x401))) (=> x885 x999))) x389))
(assert (x769 x379))
(assert (x769 x235))
(assert (x769 x1010))
(assert (x769 x775))
(assert (x585 x861))
(assert (x769 x154))
(assert (= (and (not x1077) x139) x577))
(assert (= (and (not x864) x906) x838))
(assert (= x537 (and x225 (not x429))))
(assert (= x1003 (=> (and (= (not (> x87 128)) x468) (= x811 (x1083 256)) (= x49 (x882 (+ 96 x1032)))) (and x468 (=> (= 128 x760) x27)))))
(assert (= (and x341 (not x773)) x670))
(assert (x769 x232))
(assert (x1002 x580))
(assert (x769 x479))
(assert (= (and x966 x156) x767))
(assert (x769 x969))
(assert (x769 x523))
(assert (x769 x787))
(assert (= x755 (and (not x679) x887)))
(assert (= 0 (x213 (+ (x882 (+ 196 x792)) (- (+ x829 (- 128 x648)) 196)))))
(assert (= (=> (and (or (not x411) (and (= x149 (x882 (+ x713 x166))) x411)) (= (< x713 x622) x411)) x437) x480))
(assert (= 0 (x213 (+ (x882 (+ x792 196)) (- (+ (- x686 160) 196) 196)))))
(assert (x769 x160))
(assert (= 0 (x80 x638)))
(assert (= (and x909 x941) x762))
(assert (x769 x319))
(assert (x585 x859))
(assert (= (and x586 x722) x208))
(assert (x769 x810))
(assert (x769 x463))
(assert (= (and x632 x746) x38))
(assert (= x546 (and x400 x465)))
(assert (x769 x100))
(assert (x93 x170))
(assert (x769 x848))
(assert (= x64 (and x807 x305)))
(assert (= x533 (and x134 x143)))
(assert (= (or x576 x128) x758))
(assert (x925 x123))
(assert (x1002 x997))
(assert (= (and x247 x831) x406))
(assert (and (x172 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x326 (+ (x244 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x171 (and (not x246) x733)))
(assert (x1002 x805))
(assert (= (and x780 x122) x1046))
(assert (x845 x825))
(assert (x769 x202))
(assert (= x603 (and (not x224) x726)))
(assert (x769 x808))
(assert (= x736 (=> (and (and (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x326) x235) (= x1022 (x543 x245)) (<= x1022 1461501637330902918203684832716283019655932542975) (not (= 0 x505)) (= x773 (> x271 0)) (= x830 (x882 (+ x245 x235))) (not (or (> x477 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x477) (= (<= x477 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x326 (x882 (+ x477 31)))) (or (and (= x776 x271) (not x773)) (and x773 (and (= 1 x776) (> 4294967296 x901))))) x544)))
(assert (x769 x689))
(assert (= (and (not x476) x207) x279))
(assert (x769 x981))
(assert (x769 x273))
(assert (x769 x760))
(assert (x93 x580))
(assert (x769 x1031))
(assert (x769 x638))
(assert (x769 x170))
(assert (x769 x470))
(assert (x769 x786))
(assert (x1002 x248))
(assert (x769 x979))
(assert (= x26 (and x194 (not x101))))
(assert (x585 x37))
(assert (= (or x838 x601) x662))
(assert (x769 x1080))
(assert (and (x172 x609 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x609 (+ (x244 x609 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x609 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x609 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x609 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x627 (and (not x594) x329)))
(assert (x769 x938))
(assert (= x739 (and x1043 (not x880))))
(assert (x769 x221))
(assert (x769 x539))
(assert (= x50 (and x672 x639)))
(assert (x769 x331))
(assert (x769 x104))
(assert (x769 x686))
(assert (= x165 (or x610 x119)))
(assert (x769 x404))
(assert (x769 x915))
(assert (= (=> (and (= x229 (x806 (- x716 x547))) (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x248) x112) (= x541 (x589 x964)) (= (> x541 0) x706) (= x248 (x882 (+ 31 x91))) (= (x882 (+ x112 x10)) x716) (= (x882 (+ 32 x547)) x125)) (and (=> (and (= 0 x318) (not x706)) x2) (=> (and (= x856 (> x541 32)) x706) (and (=> (and (not x856) (= 32 x318)) x2) (=> (and x856 (= (< 64 x541) x96)) (and (=> (and (= 64 x318) (not x96)) x2) (=> (and (= (< 96 x541) x249) x96) (and (=> (and (not x249) (= x318 96)) x2) (=> x249 x816))))))))) x493))
(assert (x769 x554))
(assert (= (and x533 x164) x639))
(assert (x769 x1051))
(assert (= x194 (and (not x190) x295)))
(assert (x769 x934))
(assert (and (x172 x507 32) (=> (< 0 32) (= x507 (+ (x244 x507 32) (* 32 (x494 x507 32))))) (x141 x507 32) (x986 x507 32)))
(assert (= (=> (and (and (= x266 false) (= x619 x98) (= x442 x721) (= x446 x114) (= x451 x127) (= x1054 false) (= x927 x297)) (and (not (= 0 x454)) (= x756 x759) (not (or (and (< x955 32) (= (<= x955 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x955 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x922 1461501637330902918203684832716283019655932542975) (= (x857 x794) x922))) x983) x183))
(assert (= (or x855 (and (not x1016) x545)) x105))
(assert (x769 x877))
(assert (x769 x421))
(assert (x1002 x790))
(assert (x769 x312))
(assert (x769 x508))
(assert (x769 x306))
(assert (= (and x1049 x124) x1014))
(assert (x769 x372))
(assert (x769 x949))
(assert (= (x213 (+ (- (+ (- x284 160) 196) 196) (x882 (+ x792 196)))) 0))
(assert (and (x172 x580 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x580 (+ (x244 x580 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x580 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x580 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x580 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x53 (and x313 x165)))
(assert (x769 x666))
(assert (x769 x1064))
(assert (x769 x1066))
(assert (= x893 (and x628 (not x96))))
(assert (= x532 (=> (and (or (and (not x690) (= x79 x809)) (and (and (> 4294967296 x163) (= x809 1)) x690)) (and (not (or (and (< x988 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x988))) (> x988 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x609) x277) (not (= x873 0)) (= x690 (< 0 x79)) (= (x930 x436) x83) (<= x83 1461501637330902918203684832716283019655932542975) (= x609 (x882 (+ x988 31))) (= x316 (x882 (+ x277 x436))))) x192)))
(assert (= (and x486 x910) x414))
(assert (x769 x569))
(assert (x769 x860))
(assert (x769 x618))
(assert (x769 x933))
(assert (= (=> (= (not (< 128 x541)) x521) (and (=> (= 128 x318) x2) x521)) x816))
(assert (x769 x936))
(assert (x769 x378))
(assert (x769 x874))
(assert (x769 x612))
(assert (x769 x31))
(assert (= (and x671 x525) x225))
(assert (= (=> (and (or (not x1045) x1045) (= (= x1007 0) x1045)) x420) x631))
(assert (x769 x345))
(assert (= x322 (and x254 x691)))
(assert (x925 x970))
(assert (= x402 (and x233 x1045)))
(assert (and (x172 x170 32) (=> (< 0 32) (= x170 (+ (x244 x170 32) (* 32 (x494 x170 32))))) (x141 x170 32) (x986 x170 32)))
(assert (= (=> (and (or x917 (not x917)) (= x917 (< x541 x318))) x598) x2))
(assert (x769 x580))
(assert (= x812 (or x516 x695)))
(assert (x769 x485))
(assert (and (x172 x74 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x74 (+ (x244 x74 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x494 x74 1461501637330902918203684832716283019655932542976))))) (x141 x74 1461501637330902918203684832716283019655932542976) (x986 x74 1461501637330902918203684832716283019655932542976)))
(assert (and (= (x918 32 x825) (* 32 x825)) (x795 32 x825) (x353 32 x825) (and (= (x918 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x825) (- (* 32 x825) (* x825 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x918 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x825 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x825 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x825 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x918 32 (- x825 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 32 (- x825 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x789 32 x825) (x381 32 x825) (x783 32 x825)))
(assert (x769 x765))
(assert (x769 x964))
(assert (x769 x12))
(assert (= x835 (and (not x671) x525)))
(assert (x769 x743))
(assert (= (=> (= x287 (< 0 x379)) (and (=> (and x287 (= (> x379 0) x131)) (and (=> (and (and (= x531 (x159 x104)) (= x991 (= x531 x987)) (= (x174 1461501637330902918203684832716283019655932542975 x531) x987) (= x1080 x104)) x131) (and (=> (not x991) x999) (=> (and (= (< 0 x92) x481) x991) (and (=> (and (and (= x954 x351) (= (x159 x351) x404) (= x418 (x806 (- x1076 31))) (= x1076 (x806 (- x319 x954))) (= x24 (or (and (> x418 x404) (= (<= x404 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x418))) (and (> x404 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x418 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) x481) (and (=> (not x24) x999) (=> (and x24 (and (= x335 (x159 x788)) (= (< 18446744073709551615 x335) x916) (= (x882 (+ x954 x404)) x788))) (and (=> x916 x999) (=> (and (and (= x1049 (or (and (<= x889 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x181 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x889 x181) (= (<= x889 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x181))))) (= x181 (x806 (- x319 x335))) (= x889 (x882 (+ x788 32)))) (not x916)) (and (=> (and (and (or (not x907) (and x907 (and (= (<= x202 (x360 x696)) x1015) x328 (= (x567 x531) x624) (< x1007 4294967296) (= (x567 x696) x202) (= x328 (= (x360 x531) x624)) x1015))) (= x907 (< 0 x503))) (not x1049)) x621) (=> x1049 x999))))))) (=> (not x481) x999))))) (=> (not x131) x999))) (=> (not x287) x883))) x598))
(assert (x769 x1078))
(assert (x769 x520))
(assert (= 0 (x80 x938)))
(assert (= x308 (or x849 x509 x157 x893 x215)))
(assert (x769 x1021))
(assert (x769 x557))
(assert (and (x172 x175 32) (=> (< 0 32) (= x175 (+ (x244 x175 32) (* 32 (x494 x175 32))))) (x141 x175 32) (x986 x175 32)))
(assert (x769 x125))
(assert (x769 x103))
(assert (and (x172 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x934 (+ (x244 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1002 x609))
(assert (= (x213 (+ (- (+ (- 160 x648) x829) 196) (x882 (+ 196 x792)))) 0))
(assert (x93 x997))
(assert (x769 x976))
(assert (and (x172 x859 32) (=> (< 0 32) (= x859 (+ (x244 x859 32) (* 32 (x494 x859 32))))) (x141 x859 32) (x986 x859 32)))
(assert (x93 32))
(assert (x769 x240))
(assert (x769 x1056))
(assert (= true x707))
(assert (x769 x702))
(assert (x1002 x175))
(assert (= (=> (and (and (= (x314 x792) x756) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x410) (and (= true (<= x410 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x410 32)))) (= x245 (x882 (+ x792 x126))) (= x519 (x882 (+ 31 x410))) (= (< 0 x200) x884) (not (= 0 x640)) (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x519) x126) (<= x756 1461501637330902918203684832716283019655932542975)) (or (and x884 (and (> 4294967296 x477) (= 1 x505))) (and (not x884) (= x505 x200)))) x736) x392))
(assert (x769 x651))
(assert (x769 x173))
(assert (x769 x33))
(assert (= (and (not x113) x394) x657))
(assert (x769 x169))
(assert (x769 x166))
(assert (x769 x709))
(assert (x769 x869))
(assert (x769 x147))
(assert (= x726 (and x779 x634)))
(assert (= 0 (x595 (x439 x696 x535))))
(assert (x769 x732))
(assert (x769 x894))
(assert (and (x172 x997 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x997 (+ (x244 x997 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x997 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x997 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x997 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x363 (and (not x1013) x162)))
(assert (x585 x331))
(assert (= 0 (x30 (- x638 x515))))
(assert (x93 x934))
(assert (x769 x140))
(assert (x769 x203))
(assert (x769 x710))
(assert (x769 x827))
(assert (= x304 (and (not x837) x50)))
(assert (x769 x945))
(assert (x769 x1058))
(assert (= (and x96 x628) x1038))
(assert (= x1070 (and (not x909) x941)))
(assert (x1002 x347))
(assert (x845 x110))
(assert (x769 x290))
(assert (= x1034 (and x643 x991)))
(assert (x769 x811))
(assert (and (x172 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x170 (+ (x244 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1002 x170))
(assert (x769 x258))
(assert (x769 x11))
(assert (x585 x609))
(assert (x769 x668))
(assert (and (x172 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x248 (+ (x244 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x769 x929))
(assert (x769 x446))
(assert (x769 x922))
(assert (= x770 (and x146 (not x367))))
(assert (= (x80 x1056) 0))
(assert (= x220 (or x1027 x561 x39 x208 x406 x46 x417 x75 x22 x20 x687 x167 x9 x767 x950 x496 x336 x822 x26 x304 x1014 x472 x231 x590 x581 x724 x29 x606 x293 x261 x256 x549 x649 x865 x1063)))
(assert (= (and x465 (not x400)) x902))
(assert (= 0 (x213 (+ (- (+ (- x1056 160) 196) 196) (x882 (+ 196 x792))))))
(assert (x769 x937))
(assert (x769 x271))
(assert (= x27 (=> (and (= (> x760 x87) x982) (or (and x982 (= (x882 (+ x1032 x87)) x129)) (not x982))) x705)))
(assert (x769 x81))
(assert (= (or x64 x121) x545))
(assert (= (or x322 x260) x525))
(assert (= 0 (x213 (+ (- (+ (- x660 160) 196) 196) (x882 (+ 196 x792))))))
(assert (= x722 (and x471 x758)))
(assert (= x139 (or x343 x414)))
(assert (= (and x108 x433) x561))
(assert (x769 x151))
(assert (x769 x268))
(assert (x1002 x531))
(assert (= (and x76 (not x131)) x687))
(assert (= (and x1013 x162) x605))
(assert (x769 x412))
(assert (x769 x1076))
(assert (= 0 (x213 (+ (x882 (+ 196 x792)) (- (+ (- x58 x648) x829) 196)))))
(assert (x585 x997))
(assert (x769 x342))
(assert (= x1043 (and x247 (not x831))))
(assert (and (x172 x805 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x805 (+ (x244 x805 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x805 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x805 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x805 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x769 x209))
(assert (x769 x805))
(assert (= (and (not x556) x749) x553))
(assert (= 0 (x213 192)))
(assert (= x332 (=> (and (>= x138 0) (= x471 (= x138 0)) (>= 255 x138) (> 256 x138)) (and (=> (and (and (= x178 x815) (< x765 1461501637330902918203684832716283019655932542976) (= (= x915 x708) x994) (<= 0 x765) (= (x564 x696) x591) (= (x522 x696) x535) (>= 1461501637330902918203684832716283019655932542975 x765) (< x804 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x664 (x439 x696 x535)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x232 x840)) x994 (= x1066 (x174 1461501637330902918203684832716283019655932542975 x664)) (= x591 x526) (= x586 (= x1066 0)) (= x804 (x1053 x664)) (= (x1033 x664) x178) (= x232 0) (= x664 x915) (= x372 x708) (= x840 (x1062 x696))) x471) (and (=> (and (and (= x87 (x262 128)) (>= 1461501637330902918203684832716283019655932542975 x933) (>= 1461501637330902918203684832716283019655932542975 x753) (>= 1461501637330902918203684832716283019655932542975 x871) (>= x933 0) (= (x174 1461501637330902918203684832716283019655932542975 x664) x587) (> 1461501637330902918203684832716283019655932542976 x933) (>= x871 0) (= x778 (> x87 0)) (= (x882 (+ x964 4)) x218) (= (x882 (+ x218 192)) x866) (<= x754 1461501637330902918203684832716283019655932542975) (>= x753 0) (= x1032 (x882 (+ x866 32))) (> 1461501637330902918203684832716283019655932542976 x754) (> 1461501637330902918203684832716283019655932542976 x753) (>= x754 0) (< x871 1461501637330902918203684832716283019655932542976)) (not x586)) (and (=> (and x778 (and (= (> x87 32) x779) (= x693 (x239 160)) (= x661 x1032))) (and (=> (and (and (= (x602 192) x323) (= (> x87 64) x224) (= x656 (x882 (+ x1032 32)))) x779) (and (=> (and (= x760 64) (not x224)) x27) (=> (and x224 (and (= (x370 224) x743) (= (x882 (+ x1032 64)) x539) (= x958 (< 96 x87)))) (and (=> (and (not x958) (= x760 96)) x27) (=> x958 x1003))))) (=> (and (= x760 32) (not x779)) x27))) (=> (and (= x760 0) (not x778)) x27))) (=> x586 x999))) (=> (not x471) x999)))))
(assert (x769 x43))
(assert (x769 x477))
(assert (= x600 (and x199 (not x294))))
(assert (x845 32))
(assert (x769 x568))
(assert (x769 x771))
(assert (= x193 (and x278 (not x120))))
(assert (x769 x772))
(assert (= x625 (=> (and (or (and x113 (and (= 0 x350) (= (x107 x123) x850) (= x568 x161) (= x375 (x1059 x696)) (= x850 x48) (= x827 x799) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x350 x375)) (= x1 x375))) (and (and (= x568 x161) (= x827 x799)) (not x113))) (= x113 (= x161 0))) x191)))
(assert (x769 x943))
(assert (= x162 (and x727 x38)))
(assert (= (and x852 x376) x684))
(assert (= x749 (or x993 x626)))
(assert (x769 x809))
(assert (= 0 (x213 (+ (x882 (+ 196 x792)) 32))))
(assert (x1002 x37))
(assert (= x438 (and (not x884) x635)))
(assert (= x327 (and (not x779) x634)))
(assert (x769 x60))
(assert (= (and x344 x1068) x899))
(assert (x769 x592))
(assert (= x550 (=> (and (>= 1461501637330902918203684832716283019655932542975 x881) (= (x882 (+ x240 32)) x362) (= x881 (x35 x41)) (= (not (> x110 4)) x980)) (and x980 (=> (= x362 x264) x920)))))
(assert (x769 x427))
(assert (x769 x904))
(assert (= x798 (=> (and (= x432 (x490 256)) (= (not (> x91 128)) x365) (= x1011 (x882 (+ 96 x10)))) (and (=> (= x4 128) x504) x365))))
(assert (= (x213 224) 0))
(assert (x769 x912))
(assert (x769 x850))
(assert (= (or x575 x670) x941))
(assert (= (or x220 x600) x68))
(assert (x585 x580))
(assert (= x119 (and x963 x907)))
(assert (x769 x158))
(assert (= x626 (and x407 (not x982))))
(assert (and (x172 x531 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x531 (+ (x244 x531 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x494 x531 1461501637330902918203684832716283019655932542976))))) (x141 x531 1461501637330902918203684832716283019655932542976) (x986 x531 1461501637330902918203684832716283019655932542976)))
(assert (and (x172 x861 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x861 (+ (x244 x861 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x861 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x861 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x861 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x226 x68) x665))
(assert (x769 x348))
(assert (x93 x37))
(assert (= 0 (x213 (+ (- (+ x829 (- 224 x648)) 196) (x882 (+ x792 196))))))
(assert (x769 x148))
(assert (x769 x971))
(assert (= (and x864 x906) x601))
(assert (x769 x347))
(assert (= (and x278 x120) x144))
(assert (= x528 (and x546 (not x1001))))
(assert (x769 x814))
(assert (x769 x1047))
(assert (= (x30 (- x284 x515)) 0))
(assert (and (x172 x320 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x320 (+ (x244 x320 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x320 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x320 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x320 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x30 (- x1056 x515)) 0))
(assert (x769 x659))
(assert (= x757 (and x734 x654)))
(assert (and (x172 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x491 (+ (x244 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x494 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (x141 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x986 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x769 x74))
(assert (= x920 (=> (and (= x486 (> x825 0)) (= (x882 (+ 32 x674)) x781) (= x203 (x806 (- x264 x945))) (= x599 (x882 (+ x459 x936))) (= x459 (x506 (* x825 32))) (= x936 (x882 (+ 32 x264)))) (and (=> x486 x399) (=> (and (not x486) (= x43 x599)) x851)))))
(assert (x769 x919))
(assert (= x544 (=> (and (and (= (> x188 0) x909) (not (or (> x901 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x901)) (> 32 x901)))) (= (x174 115792089237316195423570985008687907853269984665640564039457584007913129639904 x790) x775) (not (= x776 0)) (= x669 (x972 x830)) (= x436 (x882 (+ x775 x830))) (= x790 (x882 (+ 31 x901))) (>= 1461501637330902918203684832716283019655932542975 x669)) (or (and x909 (and (= 1 x873) (< x988 4294967296))) (and (not x909) (= x188 x873)))) x532)))
(assert (x769 x51))
(assert (x769 x253))
(assert (x769 x660))
(assert (x925 x531))
(assert (= x247 (and x720 x534)))
(assert (x769 x495))
(assert (x769 x615))
(assert (x769 x432))
(assert (= (x213 (+ (x882 (+ x792 196)) (- (+ (- x638 x648) x829) 196))) 0))
(assert (= (and (not x958) x892) x700))
(assert (= 0 (x213 (+ (- (+ x829 (- x728 x648)) 196) (x882 (+ x792 196))))))
(assert (x769 x227))
(assert (= 0 (x213 (+ (x882 (+ 196 x792)) (- x788 196)))))
(assert (= 0 (x30 (- 160 x515))))
(assert (= x862 (=> (and (= x913 (< x160 x1044)) (or (not x913) (and (= x538 (x882 (+ x1078 x160))) x913))) x281)))
(assert (x769 x155))
(check-sat)
(exit)
