(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x115 () Int)
(declare-fun x10 () Int)
(declare-fun x325 () Int)
(declare-fun x258 () Int)
(declare-fun x127 () Int)
(declare-fun x8 () Bool)
(declare-fun x237 () Int)
(declare-fun x150 () Int)
(declare-fun x163 () Bool)
(declare-fun x409 () Int)
(declare-fun x248 () Int)
(declare-fun x437 () Int)
(declare-fun x9 () Bool)
(declare-fun x304 () Bool)
(declare-fun x448 () Int)
(declare-fun x281 () Int)
(declare-fun x223 () Bool)
(declare-fun x326 () Int)
(declare-fun x164 () Int)
(declare-fun x246 () Int)
(declare-fun x7 () Bool)
(declare-fun x11 () Bool)
(declare-fun x135 (Int Int) Int)
(declare-fun x107 () Int)
(declare-fun x220 () Int)
(declare-fun x19 () Bool)
(declare-fun x436 () Int)
(declare-fun x337 () Int)
(declare-fun x84 () Bool)
(declare-fun x331 () Int)
(declare-fun x310 () Int)
(declare-fun x191 () Int)
(declare-fun x368 () Int)
(declare-fun x365 () Int)
(declare-fun x403 () Bool)
(declare-fun x118 () Bool)
(declare-fun x344 () Int)
(declare-fun x366 () Bool)
(declare-fun x410 () Bool)
(declare-fun x357 () Int)
(declare-fun x391 () Int)
(declare-fun x328 () Bool)
(declare-fun x208 () Int)
(declare-fun x327 (Int Int) Int)
(declare-fun x252 () Int)
(declare-fun x37 () Int)
(declare-fun x450 (Int) Int)
(declare-fun x96 () Bool)
(declare-fun x227 () Int)
(declare-fun x226 () Int)
(declare-fun x214 () Int)
(declare-fun x162 () Int)
(declare-fun x60 (Int) Int)
(declare-fun x256 () Int)
(declare-fun x168 () Int)
(declare-fun x465 () Int)
(declare-fun x116 () Int)
(declare-fun x263 () Int)
(declare-fun x218 () Int)
(declare-fun x324 () Int)
(declare-fun x105 () Int)
(declare-fun x457 () Int)
(declare-fun x211 () Int)
(declare-fun x70 () Bool)
(declare-fun x333 () Int)
(declare-fun x319 () Int)
(declare-fun x285 () Int)
(declare-fun x17 () Bool)
(declare-fun x169 () Int)
(declare-fun x243 () Bool)
(declare-fun x336 () Int)
(declare-fun x146 () Int)
(declare-fun x24 () Int)
(declare-fun x128 () Int)
(declare-fun x363 () Int)
(declare-fun x45 () Bool)
(declare-fun x228 () Int)
(declare-fun x396 () Int)
(declare-fun x458 () Bool)
(declare-fun x236 () Bool)
(declare-fun x394 () Bool)
(declare-fun x446 () Int)
(declare-fun x376 () Int)
(declare-fun x2 () Int)
(declare-fun x359 (Int) Int)
(declare-fun x390 () Int)
(declare-fun x330 () Int)
(declare-fun x119 () Int)
(declare-fun x15 () Int)
(declare-fun x444 () Bool)
(declare-fun x393 () Int)
(declare-fun x55 () Int)
(declare-fun x196 () Int)
(declare-fun x186 () Int)
(declare-fun x68 () Bool)
(declare-fun x371 () Int)
(declare-fun x153 () Int)
(declare-fun x428 () Int)
(declare-fun x358 () Int)
(declare-fun x289 () Bool)
(declare-fun x222 () Int)
(declare-fun x384 () Int)
(declare-fun x350 () Int)
(declare-fun x395 () Int)
(declare-fun x71 () Int)
(declare-fun x157 () Int)
(declare-fun x4 () Int)
(declare-fun x321 () Int)
(declare-fun x250 () Int)
(declare-fun x445 () Int)
(declare-fun x414 () Int)
(declare-fun x197 () Int)
(declare-fun x91 () Int)
(declare-fun x33 () Int)
(declare-fun x213 () Bool)
(declare-fun x288 () Bool)
(declare-fun x265 (Int) Int)
(declare-fun x113 () Int)
(declare-fun x232 () Int)
(declare-fun x463 () Int)
(declare-fun x301 (Int) Int)
(declare-fun x438 () Int)
(declare-fun x412 () Int)
(declare-fun x388 () Int)
(declare-fun x54 () Int)
(declare-fun x151 () Int)
(declare-fun x269 () Bool)
(declare-fun x122 () Int)
(declare-fun x121 () Bool)
(declare-fun x370 () Int)
(declare-fun x270 () Int)
(declare-fun x449 () Int)
(declare-fun x245 () Int)
(declare-fun x159 () Bool)
(declare-fun x307 () Bool)
(declare-fun x382 () Bool)
(declare-fun x100 () Int)
(declare-fun x76 () Bool)
(declare-fun x434 () Int)
(declare-fun x467 () Int)
(declare-fun x46 () Int)
(declare-fun x381 () Int)
(declare-fun x149 () Int)
(declare-fun x242 () Int)
(declare-fun x212 () Bool)
(declare-fun x277 () Bool)
(declare-fun x29 () Int)
(declare-fun x400 () Int)
(declare-fun x425 () Bool)
(declare-fun x451 () Int)
(declare-fun x167 () Int)
(declare-fun x139 () Bool)
(declare-fun x406 () Int)
(declare-fun x424 () Int)
(declare-fun x399 () Bool)
(declare-fun x268 () Int)
(declare-fun x292 () Int)
(declare-fun x297 () Int)
(declare-fun x140 () Bool)
(declare-fun x335 () Int)
(declare-fun x347 () Int)
(declare-fun x423 () Bool)
(declare-fun x343 () Int)
(declare-fun x455 () Int)
(declare-fun x283 () Int)
(declare-fun x433 () Int)
(declare-fun x18 () Int)
(declare-fun x389 () Int)
(declare-fun x187 () Bool)
(declare-fun x314 () Bool)
(declare-fun x355 () Bool)
(declare-fun x93 () Bool)
(declare-fun x241 () Int)
(declare-fun x274 () Int)
(declare-fun x173 () Int)
(declare-fun x334 () Int)
(declare-fun x452 () Int)
(declare-fun x131 () Int)
(declare-fun x215 () Int)
(declare-fun x133 () Int)
(declare-fun x205 () Int)
(declare-fun x79 (Int Int) Int)
(declare-fun x469 () Bool)
(declare-fun x364 () Bool)
(declare-fun x259 () Int)
(declare-fun x345 (Int) Int)
(declare-fun x461 () Int)
(declare-fun x353 () Int)
(declare-fun x110 () Int)
(declare-fun x332 () Int)
(declare-fun x338 () Int)
(declare-fun x439 () Int)
(declare-fun x284 (Int) Int)
(declare-fun x453 () Int)
(declare-fun x239 () Int)
(declare-fun x109 () Int)
(declare-fun x80 () Int)
(declare-fun x430 () Int)
(declare-fun x147 () Int)
(declare-fun x137 () Int)
(declare-fun x41 () Int)
(declare-fun x12 () Int)
(declare-fun x141 () Bool)
(declare-fun x408 () Int)
(declare-fun x86 () Int)
(declare-fun x255 () Int)
(declare-fun x144 () Bool)
(declare-fun x129 () Int)
(declare-fun x42 () Int)
(declare-fun x354 () Int)
(declare-fun x204 () Int)
(declare-fun x3 () Int)
(declare-fun x136 () Int)
(declare-fun x47 () Int)
(declare-fun x114 () Int)
(declare-fun x230 () Bool)
(declare-fun x73 () Int)
(declare-fun x52 () Int)
(declare-fun x44 () Bool)
(declare-fun x315 () Int)
(declare-fun x43 () Bool)
(declare-fun x53 () Int)
(declare-fun x74 () Int)
(declare-fun x66 () Int)
(declare-fun x429 () Int)
(declare-fun x247 () Int)
(declare-fun x456 () Bool)
(declare-fun x462 () Bool)
(declare-fun x235 () Bool)
(declare-fun x67 () Bool)
(declare-fun x286 () Int)
(declare-fun x30 () Int)
(declare-fun x69 () Bool)
(declare-fun x123 () Int)
(declare-fun x64 () Bool)
(declare-fun x28 () Int)
(declare-fun x306 () Bool)
(declare-fun x369 () Int)
(declare-fun x209 () Int)
(declare-fun x14 () Int)
(declare-fun x320 () Int)
(declare-fun x81 () Int)
(declare-fun x378 () Int)
(declare-fun x273 () Int)
(declare-fun x419 () Int)
(declare-fun x143 () Int)
(declare-fun x207 () Int)
(declare-fun x442 () Int)
(declare-fun x88 () Int)
(declare-fun x184 () Bool)
(declare-fun x198 () Int)
(declare-fun x276 () Int)
(declare-fun x16 () Int)
(declare-fun x56 () Int)
(declare-fun x460 () Bool)
(declare-fun x210 () Int)
(declare-fun x323 () Int)
(declare-fun x287 () Bool)
(declare-fun x299 () Int)
(declare-fun x27 () Int)
(declare-fun x278 () Int)
(declare-fun x61 () Bool)
(declare-fun x380 () Bool)
(declare-fun x155 () Bool)
(declare-fun x383 () Int)
(declare-fun x25 () Int)
(declare-fun x234 () Int)
(declare-fun x379 () Bool)
(declare-fun x302 () Int)
(declare-fun x216 () Int)
(declare-fun x161 () Int)
(declare-fun x51 () Bool)
(declare-fun x372 (Int Int) Int)
(declare-fun x111 () Int)
(declare-fun x145 () Int)
(declare-fun x165 (Int) Int)
(declare-fun x360 () Bool)
(declare-fun x427 () Int)
(declare-fun x180 () Int)
(declare-fun x178 () Int)
(declare-fun x179 () Int)
(declare-fun x62 () Bool)
(declare-fun x97 () Int)
(declare-fun x1 () Bool)
(declare-fun x361 () Int)
(declare-fun x402 () Bool)
(declare-fun x305 () Int)
(declare-fun x313 () Int)
(declare-fun x342 () Int)
(declare-fun x36 () Int)
(declare-fun x468 () Int)
(declare-fun x142 () Int)
(declare-fun x405 () Int)
(declare-fun x98 () Int)
(declare-fun x339 () Int)
(declare-fun x21 () Bool)
(declare-fun x309 () Int)
(declare-fun x125 () Int)
(declare-fun x82 () Int)
(declare-fun x249 () Int)
(declare-fun x50 () Int)
(declare-fun x293 () Int)
(declare-fun x260 () Bool)
(declare-fun x34 () Int)
(declare-fun x404 () Int)
(declare-fun x464 () Int)
(declare-fun x367 () Int)
(declare-fun x459 () Int)
(declare-fun x219 () Bool)
(declare-fun x407 () Int)
(declare-fun x99 () Int)
(declare-fun x416 () Bool)
(declare-fun x39 () Bool)
(declare-fun x282 () Bool)
(declare-fun x117 () Bool)
(declare-fun x185 () Int)
(declare-fun x351 () Int)
(declare-fun x83 (Int Int) Int)
(declare-fun x432 (Int Int) Int)
(declare-fun x264 () Int)
(declare-fun x40 () Int)
(declare-fun x174 () Int)
(declare-fun x134 () Int)
(declare-fun x188 () Int)
(declare-fun x447 () Int)
(declare-fun x92 () Bool)
(declare-fun x156 () Int)
(declare-fun x130 () Int)
(declare-fun x322 () Int)
(declare-fun x6 () Int)
(declare-fun x95 () Bool)
(declare-fun x192 () Int)
(declare-fun x279 () Bool)
(declare-fun x271 () Int)
(declare-fun x108 () Int)
(declare-fun x374 () Int)
(declare-fun x183 (Int) Int)
(declare-fun x190 () Int)
(declare-fun x261 () Int)
(declare-fun x411 () Bool)
(declare-fun x377 () Int)
(declare-fun x308 () Int)
(declare-fun x199 () Int)
(declare-fun x254 () Int)
(declare-fun x195 (Int) Int)
(declare-fun x311 () Int)
(declare-fun x231 () Int)
(declare-fun x49 () Int)
(declare-fun x176 () Int)
(declare-fun x177 (Int) Int)
(declare-fun x386 () Int)
(declare-fun x341 () Int)
(declare-fun x329 () Int)
(declare-fun x22 () Bool)
(declare-fun x189 () Int)
(declare-fun x170 () Int)
(declare-fun x38 (Int) Int)
(declare-fun x63 () Int)
(declare-fun x415 () Int)
(declare-fun x295 () Int)
(declare-fun x387 () Int)
(declare-fun x401 () Bool)
(declare-fun x385 () Int)
(declare-fun x280 () Int)
(declare-fun x229 () Int)
(define-fun x397 ((x346 Int)) Int (ite (and (< x346 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x346)) x346 (- x346 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x203 ((x346 Int)) Int (ite (and (< x346 0) (>= x346 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x346 115792089237316195423570985008687907853269984665640564039457584007913129639936) x346))
(define-fun x352 ((x346 Int)) Int (ite (and (>= x346 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346)) x346 (ite (and (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x346) (>= x346 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x346 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x346) (< x346 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346) (x83 x346 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x392 ((x317 Int)) Bool (and (<= 0 x317) (< x317 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x398 ((x317 Int)) Bool (and (>= x317 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x317)))
(define-fun x375 ((x317 Int) (x138 Int)) Bool (=> (and (> x138 0) (> x317 0)) (and (<= (x135 x317 x138) x317) (<= 0 (x135 x317 x138)))))
(define-fun x77 ((x317 Int) (x138 Int)) Bool (=> (and (and (< x138 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x138)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x317) (<= 0 x317))) (and (>= (x135 x317 x138) 0) (< (x135 x317 x138) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x420 ((x317 Int) (x138 Int)) Bool (=> (and (> x138 1) (> x317 x138)) (< (x135 x317 x138) x317)))
(define-fun x166 ((x317 Int) (x138 Int)) Bool (=> (and (< 0 x138) (> x317 0)) (= (> x138 x317) (= (x135 x317 x138) 0))))
(define-fun x275 ((x317 Int)) Bool (= 0 (x135 0 x317)))
(define-fun x267 ((x317 Int)) Bool (= x317 (x135 x317 1)))
(define-fun x120 ((x317 Int)) Bool (=> (not (= 0 x317)) (= 1 (x135 x317 x317))))
(define-fun x454 ((x317 Int)) Bool (and (x275 x317) (x120 x317) (x267 x317)))
(define-fun x182 ((x317 Int) (x138 Int)) Bool (=> (and (> x138 0) (> x317 0)) (and (> (x372 (x135 x317 x138) x138) (- x317 x138)) (>= x317 (x372 (x135 x317 x138) x138)))))
(define-fun x158 ((x317 Int) (x138 Int)) Bool (and (x77 x317 x138) (x375 x317 x138) (x166 x317 x138) (x420 x317 x138) (x182 x317 x138)))
(define-fun x340 ((x317 Int) (x138 Int)) Bool (= (x372 x138 x317) (x372 x317 x138)))
(define-fun x175 ((x317 Int) (x138 Int)) Bool (and (=> (and (> 0 x317) (> x138 0)) (< (x372 x317 x138) 0)) (=> (and (< x138 0) (< x317 0)) (> (x372 x317 x138) 0)) (=> (and (> x138 0) (> x317 0)) (< 0 (x372 x317 x138))) (=> (and (< x138 0) (> x317 0)) (> 0 (x372 x317 x138)))))
(define-fun x160 ((x317 Int) (x138 Int)) Bool (=> (and (> x317 0) (> x138 0)) (= (= (x135 (x352 (x372 x317 x138)) x317) x138) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x372 x317 x138)))))
(define-fun x152 ((x317 Int) (x138 Int)) Bool (=> (and (not (= x317 0)) (not (= 0 x138))) (and (= x138 (x135 (x372 x317 x138) x317)) (= x317 (x135 (x372 x317 x138) x138)))))
(define-fun x206 ((x317 Int) (x138 Int)) Bool (=> (and (> x317 0) (> x138 0)) (= (> (x372 x317 x138) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (x135 115792089237316195423570985008687907853269984665640564039457584007913129639935 x317) x138))))
(define-fun x244 ((x317 Int) (x138 Int)) Bool (and (= (x352 (x372 (- x317 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x138 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x352 (x372 x317 x138))) (= (x352 (x372 x317 (- x138 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x352 (x372 x317 x138))) (= (x352 (x372 x317 x138)) (x352 (x372 (- x317 115792089237316195423570985008687907853269984665640564039457584007913129639936) x138)))))
(define-fun x194 ((x317 Int) (x138 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x317) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x317)) (and (> x138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x138))) (= (<= (x372 (- x317 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x138 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x135 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x138)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x317)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x138) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x138)) (and (< 0 x317) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x317))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x372 x317 (- x138 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x138) (x135 57896044618658097711785492504343953926634992332820282019728792003956564819968 x317)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x138) (< 0 x138)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x317) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x317))) (= (>= (x135 57896044618658097711785492504343953926634992332820282019728792003956564819968 x138) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x317)) (>= (x372 (- x317 115792089237316195423570985008687907853269984665640564039457584007913129639936) x138) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (< 0 x138) (<= x138 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x317 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x317))) (= (>= (x135 57896044618658097711785492504343953926634992332820282019728792003956564819967 x138) x317) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x372 x317 x138))))))
(define-fun x87 ((x317 Int) (x138 Int)) Bool (and (x340 x317 x138) (x160 x317 x138) (x206 x317 x138) (x194 x317 x138) (x175 x317 x138) (x152 x317 x138) (x244 x317 x138)))
(define-fun x72 ((x317 Int)) Bool (and (= 0 (x372 0 x317)) (= 0 (x372 x317 0))))
(define-fun x171 ((x317 Int)) Bool (and (= x317 (x372 1 x317)) (= x317 (x372 x317 1))))
(define-fun x172 ((x317 Int)) Bool (and (x72 x317) (x171 x317)))
(define-fun x31 ((x317 Int)) Bool (and (= x317 (x79 115792089237316195423570985008687907853269984665640564039457584007913129639935 x317)) (= (x79 x317 115792089237316195423570985008687907853269984665640564039457584007913129639935) x317)))
(define-fun x20 ((x317 Int)) Bool (and (= 0 (x79 x317 0)) (= (x79 0 x317) 0)))
(define-fun x312 ((x317 Int)) Bool (= (x79 x317 x317) x317))
(define-fun x291 ((x317 Int)) Bool (and (x31 x317) (x20 x317) (x312 x317)))
(define-fun x193 ((x317 Int) (x138 Int)) Bool (= (x79 x317 x138) (x79 x138 x317)))
(define-fun x124 ((x317 Int) (x138 Int)) Bool (and (>= (x79 x317 x138) 0) (=> (>= x317 0) (>= x317 (x79 x317 x138))) (=> (<= 0 x138) (<= (x79 x317 x138) x138))))
(define-fun x58 ((x317 Int) (x138 Int)) Bool (and (x124 x317 x138) (x193 x317 x138)))
(define-fun x57 ((x317 Int)) Bool (= (x83 x317 1461501637330902918203684832716283019655932542976) (x79 x317 1461501637330902918203684832716283019655932542975)))
(define-fun x418 ((x317 Int)) Bool (and (x57 x317) (x58 x317 1461501637330902918203684832716283019655932542975)))
(define-fun x89 ((x317 Int) (x138 Int)) Bool (and (< (x83 x317 x138) x138) (<= 0 (x83 x317 x138))))
(define-fun x90 ((x317 Int) (x138 Int)) Bool (=> (and (>= x317 0) (< 0 x138)) (= (< x317 x138) (= x317 (x83 x317 x138)))))
(define-fun x102 ((x317 Int) (x138 Int)) Bool (=> (and (< 0 x138) (and (< x317 (+ x138 x138)) (>= x317 x138))) (= (- x317 x138) (x83 x317 x138))))
(define-fun x421 ((x317 Int)) Bool (= 0 (x83 0 x317)))
(define-fun x373 ((x317 Int)) Bool (= 0 (x83 x317 1)))
(define-fun x251 ((x317 Int)) Bool (= 0 (x83 x317 x317)))
(define-fun x200 ((x317 Int)) Bool (and (x373 x317) (x421 x317) (x251 x317)))
(define-fun x59 ((x443 Int)) Int (ite (= 128 x443) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x177 x443)))
(define-fun x296 ((x443 Int)) Int (ite (= x443 132) x400 (x59 x443)))
(define-fun x348 ((x443 Int)) Int (ite (= 128 x443) x338 (x296 x443)))
(define-fun x75 ((x443 Int)) Int (ite (= x443 128) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x183 x443)))
(define-fun x181 ((x443 Int)) Int (ite (= x443 132) x400 (x75 x443)))
(define-fun x202 ((x443 Int)) Int (ite (= x443 128) x338 (x181 x443)))
(define-fun x13 ((x443 Int)) Int (ite (= x443 x147) 1000000000000000000000000000 (x284 x443)))
(define-fun x94 ((x443 Int)) Int (ite (= x443 x370) x427 (x265 x443)))
(define-fun x316 ((x443 Int)) Int (ite (= x443 320) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x165 x443)))
(define-fun x290 ((x443 Int)) Int (ite (= x443 324) x176 (x316 x443)))
(define-fun x106 ((x443 Int)) Int (ite (= 356 x443) x173 (x290 x443)))
(define-fun x238 ((x443 Int)) Int (ite (= x443 388) x429 (x106 x443)))
(define-fun x303 ((x443 Int)) Int (ite x416 (x165 x443) (x238 x443)))
(define-fun x103 ((x443 Int)) Int (ite (= 320 x443) x309 (x303 x443)))
(define-fun x154 ((x443 Int)) Int (ite (= 320 x443) x309 (x103 x443)))
(define-fun x48 ((x443 Int)) Int (ite (= 352 x443) x335 (x154 x443)))
(define-fun x417 ((x443 Int)) Int (ite (= x443 384) 1000000000000000000000000000 (x48 x443)))
(define-fun x26 ((x443 Int)) Int (ite (= x443 320) (ite x141 1 0) (x417 x443)))
(define-fun x240 ((x443 Int)) Int (ite (= x336 x443) 1000000000000000000000000000 (x13 x443)))
(define-fun x112 ((x443 Int)) Int (ite (= x443 x162) x208 (x94 x443)))
(define-fun x5 ((x443 Int)) Int (ite (= 320 x443) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x38 x443)))
(define-fun x233 ((x443 Int)) Int (ite (= 324 x443) x274 (x5 x443)))
(define-fun x294 ((x443 Int)) Int (ite (= 356 x443) x25 (x233 x443)))
(define-fun x23 ((x443 Int)) Int (ite (= x443 388) x113 (x294 x443)))
(define-fun x262 ((x443 Int)) Int (ite x306 (x38 x443) (x23 x443)))
(define-fun x422 ((x443 Int)) Int (ite (= x443 320) x388 (x262 x443)))
(define-fun x132 ((x443 Int)) Int (ite (= x443 320) x388 (x422 x443)))
(define-fun x101 ((x443 Int)) Int (ite (= 352 x443) x129 (x132 x443)))
(define-fun x148 ((x443 Int)) Int (ite (= x443 384) 1000000000000000000000000000 (x101 x443)))
(define-fun x32 ((x443 Int)) Int (ite (= x443 320) (ite x380 1 0) (x148 x443)))
(define-fun x272 ((x443 Int)) Int (ite (= 128 x443) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x450 x443)))
(define-fun x253 ((x443 Int)) Int (ite (= 132 x443) x400 (x272 x443)))
(define-fun x441 ((x443 Int)) Int (ite (= x443 128) x338 (x253 x443)))
(define-fun x217 ((x443 Int)) Int (ite (= x109 x443) x255 (x112 x443)))
(define-fun x435 ((x443 Int)) Int (ite (= 320 x443) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x345 x443)))
(define-fun x104 ((x443 Int)) Int (ite (= x443 324) x220 (x435 x443)))
(define-fun x300 ((x443 Int)) Int (ite (= x443 356) x407 (x104 x443)))
(define-fun x349 ((x443 Int)) Int (ite (= 388 x443) x256 (x300 x443)))
(define-fun x266 ((x443 Int)) Int (ite x328 (x345 x443) (x349 x443)))
(define-fun x426 ((x443 Int)) Int (ite (= 320 x443) x16 (x266 x443)))
(define-fun x413 ((x443 Int)) Int (ite (= x443 320) x16 (x426 x443)))
(define-fun x126 ((x443 Int)) Int (ite (= x443 352) x222 (x413 x443)))
(define-fun x362 ((x443 Int)) Int (ite (= x443 384) 1000000000000000000000000000 (x126 x443)))
(define-fun x440 ((x443 Int)) Int (ite (= 320 x443) (ite x117 1 0) (x362 x443)))
(define-fun x257 ((x443 Int)) Int (ite (= 128 x443) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x301 x443)))
(define-fun x356 ((x443 Int)) Int (ite (= x443 132) x400 (x257 x443)))
(define-fun x221 ((x443 Int)) Int (ite (= x443 128) x338 (x356 x443)))
(define-fun x224 ((x317 Int) (x138 Int) (x225 Int) (x35 Int)) Bool (=> (and (>= x35 x138) (<= 0 x138) (>= x317 0) (>= x225 x317)) (<= (x372 x317 x138) (x372 x225 x35))))
(define-fun x431 ((x317 Int) (x138 Int) (x225 Int) (x35 Int)) Bool (=> (= x317 x225) (= (x372 x317 (- x138 x35)) (- (x372 x317 x138) (x372 x225 x35)))))
(assert (=> (>= 10000 x130) (not (= x130 (x432 x176 52)))))
(assert (x431 x231 x4 x142 x363))
(assert (=> (<= x107 10000) (not (= x107 (x432 x430 52)))))
(assert (not (= (x432 x107 52) 340282366920938463463374607431768211455)))
(assert (not (= (x432 x468 52) 3018967357)))
(assert (x398 x218))
(assert (x172 (- x134 x322)))
(assert (x87 x404 (- x322 x142)))
(assert (not (= 1889567281 (x432 x176 52))))
(assert (=> (>= 10000 x107) (not (= (x432 x176 52) x107))))
(assert (x431 x363 x142 x134 x405))
(assert (not (= 340282366920938463463374607431768211456 (x432 x220 52))))
(assert (and (and (= (- (* x168 1000000000000000000000000000) (* x168 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x168)) (= (x372 1000000000000000000000000000 (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000000000000 (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x168 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x152 1000000000000000000000000000 x168) (x244 1000000000000000000000000000 x168) (x160 1000000000000000000000000000 x168) (x206 1000000000000000000000000000 x168) (= (x372 1000000000000000000000000000 x168) (* x168 1000000000000000000000000000)) (x194 1000000000000000000000000000 x168)))
(assert (x172 (- x259 x50)))
(assert (x398 x216))
(assert (x398 x231))
(assert (x172 (- x142 x405)))
(assert (x431 x353 x168 x142 x363))
(assert (x224 x404 x322 x142 x363))
(assert (x224 x363 x142 x134 x405))
(assert (=> (= (x432 x176 52) (x432 x424 52)) (= x176 x424)))
(assert (not (= (x432 x424 52) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (x398 x156))
(assert (=> (= (x432 x468 52) (x432 x430 52)) (= x430 x468)))
(assert (x87 x321 (- x50 x259)))
(assert (not (= 500000000000000000000000000 (x432 x430 52))))
(assert (x398 x383))
(assert (x431 x405 x134 x322 x404))
(assert (=> (>= 10000 x107) (not (= x107 (x432 x468 52)))))
(assert (x224 x353 x168 x4 x231))
(assert (x431 x231 x4 x168 x353))
(assert (x172 (- x353 x4)))
(assert (x172 (- x321 x404)))
(assert (x224 x405 x134 x322 x404))
(assert (x431 x50 x321 x322 x404))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x432 x274 52))))
(assert (x398 x368))
(assert (x431 x259 x377 x4 x231))
(assert (x172 x353))
(assert (x398 x321))
(assert (not (= 500000000000000000000000000 (x432 x107 52))))
(assert (x398 x107))
(assert (x431 x134 x405 x322 x404))
(assert (x398 x167))
(assert (x87 x142 (- x363 x405)))
(assert (x87 x134 (- x405 x322)))
(assert (x224 x142 x363 x168 x353))
(assert (x87 x231 (- x4 x168)))
(assert (x87 x405 (- x134 x404)))
(assert (x87 x50 (- x321 x259)))
(assert (x398 x446))
(assert (and (and (= (- (* x455 3) (* x455 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x372 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x455)) (= (x372 3 (- x455 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x455 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x372 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x455 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x455 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x455 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x152 3 x455) (x244 3 x455) (x160 3 x455) (x206 3 x455) (= (x372 3 x455) (* x455 3)) (x194 3 x455)))
(assert (x398 x388))
(assert (x172 (- x168 x50)))
(assert (x172 (- x322 x231)))
(assert (x398 x295))
(assert (x224 x322 x404 x142 x363))
(assert (x172 (- x231 x142)))
(assert (not (= 826074471 (x432 x176 52))))
(assert (x398 x178))
(assert (x224 x142 x363 x322 x404))
(assert (x431 x405 x134 x168 x353))
(assert (x172 (- x363 x231)))
(assert (not (= (x432 x176 52) 115792089237316195423570985008687907853269984665640)))
(assert (x398 x113))
(assert (x431 x4 x231 x353 x168))
(assert (x87 x321 (- x50 x404)))
(assert (not (= (x432 x176 52) 340282366920938463463374607431768211455)))
(assert (not (= (x432 x468 52) 1461501637330902918203684832716283019655932542976)))
(assert (x398 x42))
(assert (= x139 (or x458 x306)))
(assert (x431 x4 x231 x404 x322))
(assert (x398 x376))
(assert (x431 x231 x4 x363 x142))
(assert (x431 x404 x322 x363 x142))
(assert (=> (= (x432 x468 52) (x432 x274 52)) (= x468 x274)))
(assert (x398 x82))
(assert (x431 x377 x259 x142 x363))
(assert (x172 (- x259 x142)))
(assert (x172 (- x404 x231)))
(assert (x431 x134 x405 x321 x50))
(assert (x431 x405 x134 x50 x321))
(assert (x224 x50 x321 x377 x259))
(assert (x398 x259))
(assert (x398 x241))
(assert (and (and (= (- (* x142 1000000000000000000000000000) (* x142 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x142)) (= (x372 1000000000000000000000000000 (- x142 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000000000000 (- x142 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x142 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x142 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x142 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x152 1000000000000000000000000000 x142) (x244 1000000000000000000000000000 x142) (x160 1000000000000000000000000000 x142) (x206 1000000000000000000000000000 x142) (= (x372 1000000000000000000000000000 x142) (* x142 1000000000000000000000000000)) (x194 1000000000000000000000000000 x142)))
(assert (x87 x404 (- x322 x405)))
(assert (=> (= (x432 x176 52) (x432 x107 52)) (= x107 x176)))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x268)) (and (<= (* 1000000000000000000000000000 (x135 x268 1000000000000000000000000000)) x268) (< (- x268 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x268 1000000000000000000000000000))))) (x77 x268 1000000000000000000000000000) (x420 x268 1000000000000000000000000000) (x166 x268 1000000000000000000000000000) (x375 x268 1000000000000000000000000000)))
(assert (not (= 500000000000000000000000000 (x432 x220 52))))
(assert (=> (= (x432 x107 52) (x432 x274 52)) (= x274 x107)))
(assert (x398 x278))
(assert (x431 x405 x134 x4 x231))
(assert (x172 x168))
(assert (x398 x24))
(assert (x224 x134 x405 x168 x353))
(assert (x398 x273))
(assert (x172 (- x405 x322)))
(assert (x87 x4 (- x231 x363)))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x432 x468 52))))
(assert (x398 x256))
(assert (x87 x134 (- x405 x168)))
(assert (x398 x387))
(assert (x87 x377 (- x259 x321)))
(assert (x87 x377 (- x259 x134)))
(assert (x398 x146))
(assert (x398 x174))
(assert (x392 x242))
(assert (x224 x321 x50 x142 x363))
(assert (x224 x404 x322 x4 x231))
(assert (x172 (- x50 x353)))
(assert (x398 x80))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x432 x424 52))))
(assert (x431 x322 x404 x231 x4))
(assert (x172 (- x134 x321)))
(assert (x87 x142 (- x363 x377)))
(assert (x87 x363 (- x142 x50)))
(assert (not (= (x432 x424 52) 3607235850)))
(assert (x431 x168 x353 x134 x405))
(assert (x224 x377 x259 x4 x231))
(assert (not (= (x432 x274 52) 3607235850)))
(assert (x87 x377 x259))
(assert (x172 (- x4 x259)))
(assert (x87 x363 (- x142 x259)))
(assert (x87 x363 (- x142 x322)))
(assert (x398 x143))
(assert (=> (<= x130 10000) (not (= x130 (x432 x274 52)))))
(assert (x87 x168 (- x353 x50)))
(assert (x398 x292))
(assert (x87 x134 (- x405 x321)))
(assert (x87 x363 (- x142 x353)))
(assert (x172 (- x168 x363)))
(assert (x87 x404 (- x322 x363)))
(assert (x398 x34))
(assert (not (= (x432 x176 52) 2113256763)))
(assert (x431 x322 x404 x4 x231))
(assert (x87 x353 (- x168 x363)))
(assert (x398 x74))
(assert (x431 x259 x377 x321 x50))
(assert (not (= (x432 x430 52) 1865579259)))
(assert (x87 x259 (- x377 x142)))
(assert (x172 (- x134 x353)))
(assert (x398 x439))
(assert (x398 x323))
(assert (x398 x424))
(assert (=> (>= 10000 x274) (not (= (x432 x107 52) x274))))
(assert (=> (>= 10000 x220) (not (= (x432 x468 52) x220))))
(assert (=> (= (x432 x468 52) (x432 x107 52)) (= x107 x468)))
(assert (x87 x142 (- x363 x168)))
(assert (x172 (- x168 x134)))
(assert (and (and (= (- (* x42 1000000000000000000000000000) (* x42 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x42)) (= (x372 1000000000000000000000000000 (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000000000000 (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x152 1000000000000000000000000000 x42) (x244 1000000000000000000000000000 x42) (x160 1000000000000000000000000000 x42) (x206 1000000000000000000000000000 x42) (= (x372 1000000000000000000000000000 x42) (* x42 1000000000000000000000000000)) (x194 1000000000000000000000000000 x42)))
(assert (x398 x299))
(assert (x87 x404 (- x322 x134)))
(assert (x431 x404 x322 x321 x50))
(assert (x200 1461501637330902918203684832716283019655932542976))
(assert (x87 x363 (- x142 x405)))
(assert (x398 x377))
(assert (x87 x405 (- x134 x322)))
(assert (x431 x142 x363 x134 x405))
(assert (x172 (- x142 x4)))
(assert (not (= (x432 x107 52) 1461501637330902918203684832716283019655932542976)))
(assert (x172 (- x231 x377)))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x446)) (and (<= (* 1000000000000000000000000000 (x135 x446 1000000000000000000000000000)) x446) (< (- x446 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x446 1000000000000000000000000000))))) (x77 x446 1000000000000000000000000000) (x420 x446 1000000000000000000000000000) (x166 x446 1000000000000000000000000000) (x375 x446 1000000000000000000000000000)))
(assert (x398 x53))
(assert (x172 (- x4 x405)))
(assert (not (= (x432 x220 52) 1461501637330902918203684832716283019655932542975)))
(assert (x224 x259 x377 x142 x363))
(assert (x172 (- x259 x363)))
(assert (x431 x50 x321 x405 x134))
(assert (x454 x446))
(assert (x224 x231 x4 x168 x353))
(assert (x172 x142))
(assert (x431 x322 x404 x321 x50))
(assert (x172 (- x231 x405)))
(assert (not (= (x432 x176 52) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (<= x242 10000) (not (= (x432 x468 52) x242))))
(assert (x224 x134 x405 x322 x404))
(assert (not (= 826074471 (x432 x220 52))))
(assert (x431 x404 x322 x4 x231))
(assert (not (= 52 (x432 x220 52))))
(assert (x87 x168 x353))
(assert (x398 x211))
(assert (x172 (- x377 x321)))
(assert (x172 (- x50 x322)))
(assert (not (= (x432 x107 52) 52)))
(assert (x431 x405 x134 x377 x259))
(assert (x224 x321 x50 x134 x405))
(assert (x431 x231 x4 x404 x322))
(assert (x398 x168))
(assert (and (and (= (- (* x153 1000000000000000000000000000) (* x153 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x153)) (= (x372 1000000000000000000000000000 (- x153 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000000000000 (- x153 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x153 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x153 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x153 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x152 1000000000000000000000000000 x153) (x244 1000000000000000000000000000 x153) (x160 1000000000000000000000000000 x153) (x206 1000000000000000000000000000 x153) (= (x372 1000000000000000000000000000 x153) (* x153 1000000000000000000000000000)) (x194 1000000000000000000000000000 x153)))
(assert (x87 x353 (- x168 x405)))
(assert (x87 x231 (- x4 x353)))
(assert (x398 x150))
(assert (not (= (x432 x220 52) 3018967357)))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x452)) (and (<= (* 1000000000000000000000000000 (x135 x452 1000000000000000000000000000)) x452) (< (- x452 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x452 1000000000000000000000000000))))) (x77 x452 1000000000000000000000000000) (x420 x452 1000000000000000000000000000) (x166 x452 1000000000000000000000000000) (x375 x452 1000000000000000000000000000)))
(assert (x172 (- x50 x377)))
(assert (x398 x427))
(assert (x398 x119))
(assert (x87 x231 (- x4 x363)))
(assert (x431 x322 x404 x405 x134))
(assert (=> (>= 10000 x430) (not (= (x432 x430 52) x430))))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x264)) (and (<= (* 1000000000000000000000000000 (x135 x264 1000000000000000000000000000)) x264) (< (- x264 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x264 1000000000000000000000000000))))) (x77 x264 1000000000000000000000000000) (x420 x264 1000000000000000000000000000) (x166 x264 1000000000000000000000000000) (x375 x264 1000000000000000000000000000)))
(assert (x398 x149))
(assert (not (= (x432 x176 52) 500000000000000000000000000)))
(assert (x398 x226))
(assert (=> (<= x424 10000) (not (= x424 (x432 x468 52)))))
(assert (x87 x4 (- x231 x322)))
(assert (x431 x321 x50 x134 x405))
(assert (not (= 52 (x432 x468 52))))
(assert (x224 x363 x142 x50 x321))
(assert (x87 x363 (- x142 x321)))
(assert (x431 x50 x321 x259 x377))
(assert (= x1 (=> (and (and (= x222 x28) (= x310 x178) (< (+ x178 x222) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (= 0 x4) x93) (= (x440 320) x295) (= (+ x28 x310) x16) (= x93 x117)) (and (and (= (<= x71 x180) x21) (= x455 x357) (= (and x43 x21) x144) (= x71 x97) (= x347 x97) (= (+ x241 x389) x180) (= x157 x97) (= x276 x357) (= x114 x285) (= x241 x114) (= (* 3 x276) x389) (= (<= x285 x358) x43) (= 3 x131) (= x383 3) (= (+ x227 x347) x358) (= (* 3 x455) x227)) (and (not (< x197 1865579259)) (= 1889567281 x197) (= x134 (x217 x386)) (= x311 (x352 (x372 x134 x405))) (= (> x134 x252) x462) (= (x397 (+ x311 500000000000000000000000000)) x34) (> 340282366920938463463374607431768211456 x134) (not (> 826074471 x197)) (= x412 (x195 x242)) (> 1461501637330902918203684832716283019655932542976 x400) (= x403 (or x9 x69)) (= x107 x123) (>= 340282366920938463463374607431768211455 x134) (= x442 (x135 x34 1000000000000000000000000000)) (= (not x462) x9) (>= x400 0) (< 0 x53) (= (ite x403 1 0) x53) (= (= x405 0) x69) (not (= x197 1865579259)) (= x386 (x432 x107 52)) (<= x107 1461501637330902918203684832716283019655932542975) (< 0 x412) (= x252 (x135 115792089237316195423570985008687907853269984665640064039457584007913129639935 x405)) (= x442 x157) (= (x221 128) x405) (<= x400 1461501637330902918203684832716283019655932542975) (>= x134 0) (> 2113256763 x197)))) x144)))
(assert (x87 x259 (- x377 x405)))
(assert (x454 x463))
(assert (x398 x125))
(assert (x224 x405 x134 x168 x353))
(assert (x398 x313))
(assert (= x338 1000000000000000000000000000))
(assert (x392 x107))
(assert (not (= (x432 x430 52) 2113256763)))
(assert (x172 (- x231 x404)))
(assert (x87 x50 (- x321 x142)))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x432 x274 52))))
(assert (= (or x68 x328) x425))
(assert (x224 x168 x353 x134 x405))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x432 x107 52))))
(assert (x172 x231))
(assert (x224 x322 x404 x50 x321))
(assert (x87 x231 (- x4 x259)))
(assert (x431 x168 x353 x231 x4))
(assert (x454 x231))
(assert (x87 x142 x363))
(assert (x431 x231 x4 x134 x405))
(assert (x398 x134))
(assert (x87 x231 (- x4 x142)))
(assert (x431 x321 x50 x363 x142))
(assert (x172 (- x4 x134)))
(assert (x87 x353 (- x168 x134)))
(assert (x431 x4 x231 x377 x259))
(assert (x454 1000000000000000000000000000))
(assert (x431 x142 x363 x259 x377))
(assert (x398 x324))
(assert (x398 x99))
(assert (x431 x363 x142 x231 x4))
(assert (not (= 1865579259 (x432 x274 52))))
(assert (x398 x153))
(assert (x224 x134 x405 x377 x259))
(assert (=> (<= x424 10000) (not (= x424 (x432 x107 52)))))
(assert (x172 (- x353 x134)))
(assert (x172 (- x4 x142)))
(assert (=> (= (x432 x176 52) (x432 x274 52)) (= x274 x176)))
(assert (x172 (- x321 x259)))
(assert (x398 x430))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x432 x424 52))))
(assert (x398 x136))
(assert (x224 x363 x142 x377 x259))
(assert (not (= 2113256763 (x432 x274 52))))
(assert (x172 (- x50 x363)))
(assert (x431 x321 x50 x353 x168))
(assert (x431 x321 x50 x259 x377))
(assert (x398 x322))
(assert (not (= (x432 x274 52) 52)))
(assert (x172 (- x363 x134)))
(assert (=> (>= 10000 x176) (not (= x176 (x432 x107 52)))))
(assert (x431 x405 x134 x142 x363))
(assert (x87 x321 (- x50 x353)))
(assert (x172 (- x353 x405)))
(assert (not (= 340282366920938463463374607431768211456 (x432 x424 52))))
(assert (x398 x415))
(assert (x172 (- x404 x4)))
(assert (x398 x36))
(assert (=> (= (x432 x424 52) (x432 x430 52)) (= x430 x424)))
(assert (not (= (x432 x176 52) 3607235850)))
(assert (x398 x110))
(assert (x172 (- x404 x321)))
(assert (x172 (- x321 x363)))
(assert (x87 x50 (- x321 x405)))
(assert (x398 x16))
(assert (=> (<= x424 10000) (not (= (x432 x220 52) x424))))
(assert (x87 x134 (- x405 x259)))
(assert (x398 x297))
(assert (x87 x4 (- x231 x404)))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x432 x107 52))))
(assert (=> (<= x430 10000) (not (= x430 (x432 x468 52)))))
(assert (x172 (- x142 x50)))
(assert (x224 x405 x134 x377 x259))
(assert (x172 x42))
(assert (x87 x231 (- x4 x377)))
(assert (x87 x321 (- x50 x322)))
(assert (x392 x130))
(assert (x431 x321 x50 x405 x134))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x432 x424 52))))
(assert (x454 x268))
(assert (x224 x377 x259 x134 x405))
(assert (x454 115792089237316195423570985008687907853269984665640064039457584007913129639935))
(assert (=> (>= 10000 x176) (not (= x176 (x432 x430 52)))))
(assert (x224 x377 x259 x50 x321))
(assert (=> (<= x468 10000) (not (= (x432 x430 52) x468))))
(assert (and (= (x372 27 3) 81) (= 27 (x372 9 3)) (= 81 (x372 9 9)) (= 9 (x372 3 3))))
(assert (x224 x259 x377 x4 x231))
(assert (x398 x98))
(assert (x398 x436))
(assert (x398 x114))
(assert (x87 x50 (- x321 x404)))
(assert (=> (>= 10000 x242) (not (= (x432 x107 52) x242))))
(assert (x172 (- x142 x377)))
(assert (not (= 1889567281 (x432 x468 52))))
(assert (=> (>= 10000 x125) (not (= x125 (x432 x107 52)))))
(assert (x224 x363 x142 x168 x353))
(assert (not (= 1865579259 (x432 x176 52))))
(assert (x431 x50 x321 x142 x363))
(assert (not (= (x432 x220 52) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x432 x220 52) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x172 x322))
(assert (not (= 826074471 (x432 x468 52))))
(assert (x87 x404 (- x322 x321)))
(assert (not (= (x432 x220 52) 1000000000000000000000000000)))
(assert (not (= (x432 x430 52) 3018967357)))
(assert (x87 x142 (- x363 x231)))
(assert (x172 x134))
(assert (x431 x405 x134 x363 x142))
(assert (x87 x321 (- x50 x377)))
(assert (x291 x292))
(assert (x172 (- x377 x363)))
(assert (not (= (x432 x468 52) 1461501637330902918203684832716283019655932542975)))
(assert (x172 (- x363 x321)))
(assert (x87 x405 (- x134 x259)))
(assert (=> (= (x432 x468 52) (x432 x176 52)) (= x468 x176)))
(assert (not (= (x432 x274 52) 3018967357)))
(assert (not (= (x432 x176 52) 3018967357)))
(assert (x398 x371))
(assert (x398 x196))
(assert (x398 x188))
(assert (not (= 500000000000000000000000000 (x432 x468 52))))
(assert (x87 x50 (- x321 x377)))
(assert (x158 115792089237316195423570985008687907853269984665640064039457584007913129639935 x363))
(assert (x87 x4 (- x231 x377)))
(assert (x398 x111))
(assert (x87 x404 (- x322 x231)))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x350)) (and (<= (* 1000000000000000000000000000 (x135 x350 1000000000000000000000000000)) x350) (< (- x350 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x350 1000000000000000000000000000))))) (x77 x350 1000000000000000000000000000) (x420 x350 1000000000000000000000000000) (x166 x350 1000000000000000000000000000) (x375 x350 1000000000000000000000000000)))
(assert (x172 x377))
(assert (x224 x142 x363 x4 x231))
(assert (x172 (- x405 x50)))
(assert (x172 (- x322 x142)))
(assert (x398 x220))
(assert (not (= 3018967357 (x432 x107 52))))
(assert (x431 x4 x231 x168 x353))
(assert (=> (<= x220 10000) (not (= x220 (x432 x274 52)))))
(assert (and (x89 x292 1461501637330902918203684832716283019655932542976) (x90 x292 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x292 (+ (x83 x292 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x135 x292 1461501637330902918203684832716283019655932542976))))) (x102 x292 1461501637330902918203684832716283019655932542976)))
(assert (=> (<= x220 10000) (not (= x220 (x432 x107 52)))))
(assert (x398 x293))
(assert (x398 x464))
(assert (x172 (- x405 x321)))
(assert (=> (= (x432 x430 52) (x432 x176 52)) (= x176 x430)))
(assert (x224 x50 x321 x168 x353))
(assert (=> (<= x424 10000) (not (= (x432 x424 52) x424))))
(assert (x398 x198))
(assert (x431 x404 x322 x231 x4))
(assert (x398 x281))
(assert (x87 x50 (- x321 x363)))
(assert (x172 (- x134 x142)))
(assert (x431 x405 x134 x321 x50))
(assert (=> (<= x274 10000) (not (= (x432 x274 52) x274))))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x463)) (and (<= (* 1000000000000000000000000000 (x135 x463 1000000000000000000000000000)) x463) (< (- x463 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x463 1000000000000000000000000000))))) (x77 x463 1000000000000000000000000000) (x420 x463 1000000000000000000000000000) (x166 x463 1000000000000000000000000000) (x375 x463 1000000000000000000000000000)))
(assert (x398 x169))
(assert (=> (>= 10000 x220) (not (= x220 (x432 x430 52)))))
(assert (x224 x142 x363 x377 x259))
(assert (=> (<= x125 10000) (not (= x125 (x432 x468 52)))))
(assert (=> (<= x107 10000) (not (= (x432 x220 52) x107))))
(assert (x172 x4))
(assert (x398 x52))
(assert (x431 x134 x405 x168 x353))
(assert (x172 (- x363 x353)))
(assert (x172 x321))
(assert (not (= (x432 x220 52) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (x398 x47))
(assert (x87 x50 (- x321 x134)))
(assert (x172 (- x134 x404)))
(assert (x87 x134 (- x405 x353)))
(assert (x398 x445))
(assert (=> (= (x432 x220 52) (x432 x107 52)) (= x107 x220)))
(assert (not (= (x432 x430 52) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x172 (- x259 x4)))
(assert (x87 x134 (- x405 x231)))
(assert (x431 x405 x134 x404 x322))
(assert (x398 x234))
(assert (x172 (- x4 x322)))
(assert (x172 (- x134 x4)))
(assert (x87 x404 (- x322 x4)))
(assert (x172 (- x142 x353)))
(assert (x398 x56))
(assert (x398 x400))
(assert (x398 x467))
(assert (x431 x4 x231 x134 x405))
(assert (x87 x50 (- x321 x168)))
(assert (x431 x142 x363 x322 x404))
(assert (x87 x4 x231))
(assert (x398 x208))
(assert (x431 x405 x134 x353 x168))
(assert (not (= 1889567281 (x432 x424 52))))
(assert (x431 x50 x321 x353 x168))
(assert (x87 x142 (- x363 x134)))
(assert (x431 x321 x50 x404 x322))
(assert (x87 x168 (- x353 x363)))
(assert (x398 x326))
(assert (=> (<= x242 10000) (not (= (x432 x176 52) x242))))
(assert (x172 (- x404 x405)))
(assert (x398 x409))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x432 x424 52))))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x263)) (and (<= (* 1000000000000000000000000000 (x135 x263 1000000000000000000000000000)) x263) (< (- x263 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x263 1000000000000000000000000000))))) (x77 x263 1000000000000000000000000000) (x420 x263 1000000000000000000000000000) (x166 x263 1000000000000000000000000000) (x375 x263 1000000000000000000000000000)))
(assert (x398 x419))
(assert (=> (= (x432 x430 52) (x432 x107 52)) (= x107 x430)))
(assert (x431 x353 x168 x405 x134))
(assert (not (= 826074471 (x432 x274 52))))
(assert (x172 (- x321 x405)))
(assert (x398 x468))
(assert (x398 x128))
(assert (=> (= (x432 x220 52) (x432 x176 52)) (= x176 x220)))
(assert (x431 x168 x353 x405 x134))
(assert (=> (>= 10000 x242) (not (= x242 (x432 x424 52)))))
(assert (x87 x353 (- x168 x50)))
(assert (=> (<= x220 10000) (not (= x220 (x432 x220 52)))))
(assert (x398 x332))
(assert (x454 x259))
(assert (x398 x27))
(assert (x87 x259 (- x377 x363)))
(assert (not (= (x432 x424 52) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x398 x264))
(assert (x431 x353 x168 x231 x4))
(assert (x398 x249))
(assert (=> (<= x220 10000) (not (= x220 (x432 x176 52)))))
(assert (x158 115792089237316195423570985008687907853269984665640064039457584007913129639935 x353))
(assert (and (and (= (- (* x4 1000000000000000000000000000) (* x4 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x4)) (= (x372 1000000000000000000000000000 (- x4 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000000000000 (- x4 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x4 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x4 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x4 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x152 1000000000000000000000000000 x4) (x244 1000000000000000000000000000 x4) (x160 1000000000000000000000000000 x4) (x206 1000000000000000000000000000 x4) (= (x372 1000000000000000000000000000 x4) (* x4 1000000000000000000000000000)) (x194 1000000000000000000000000000 x4)))
(assert (x431 x134 x405 x259 x377))
(assert (x398 x123))
(assert (x431 x168 x353 x50 x321))
(assert (x398 x447))
(assert (x172 (- x405 x377)))
(assert (x431 x405 x134 x259 x377))
(assert (=> (>= 10000 x430) (not (= (x432 x220 52) x430))))
(assert (x398 x463))
(assert (x224 x4 x231 x168 x353))
(assert (x87 x168 (- x353 x231)))
(assert (x398 x347))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x432 x220 52))))
(assert (x87 x363 (- x142 x404)))
(assert (x87 x405 (- x134 x231)))
(assert (x431 x142 x363 x321 x50))
(assert (= x17 (=> (and (and (and (and (= x438 (ite x184 1 0)) (= (x195 x242) x457) (= (x284 x37) x353) (= x299 x36) (= (ite x364 1 0) x41) (<= 0 x98) (= 0 x41) (= x18 (x352 (* x42 1000000000000000000000000000))) (> x414 0) (= x147 (x432 x176 52)) (> 340282366920938463463374607431768211456 x429) (<= 0 x353) (> 1461501637330902918203684832716283019655932542976 x130) (= (not x360) x212) (= x128 0) (= x264 (x397 (+ 500000000000000000000000000 x156))) (= (x265 x331) x168) (= x246 (+ x173 x190)) (= x427 (+ x33 x116)) (= x8 (not x212)) (= (x397 (+ 500000000000000000000000000 x18)) x452) (= x215 x374) (= x25 x246) (>= x150 0) (= (x432 x176 52) x331) (= (x352 (* 1000000000000000000000000000 x168)) x254) (= x429 x33) (= (x397 (+ x254 500000000000000000000000000)) x463) (= x385 3018967357) (< 0 x457) (= x39 (= x24 x451)) (< x168 340282366920938463463374607431768211456) (not (< 340282366920938463463374607431768211455 x190)) (= 1000000000000000000000000000 x63) (= x448 x344) (= x293 x378) (= (ite x67 1 0) x414) (= x156 (x352 (x372 x168 x353))) (> 340282366920938463463374607431768211456 x353) (< x385 3607235850) (= x6 1000000000000000000000000000) (>= x429 0) (= (x432 x176 52) x370) (>= 340282366920938463463374607431768211455 x429) (>= 340282366920938463463374607431768211455 x168) (not (> x3 x110)) (= x218 (x135 115792089237316195423570985008687907853269984665640064039457584007913129639935 x353)) (= x176 x36) (= (x79 1461501637330902918203684832716283019655932542975 x249) x293) (>= x234 0) (= (x135 x463 1000000000000000000000000000) x110) (= x273 (x79 1461501637330902918203684832716283019655932542975 x292)) (<= x173 115792089237316195423570985008687907853269984665640564039457584007913129639935) x159 (= (x203 (- x110 x3)) x335) (= x314 (not (= x299 x55))) (= x184 x62) (= x159 (and x314 x44)) (not (= 0 x190)) (= x128 x393) (= x167 x273) (= x37 (x432 x176 52)) (= x116 x190) (<= x130 1461501637330902918203684832716283019655932542975) (= x234 x249) (<= x234 1461501637330902918203684832716283019655932542975) (= x247 (x432 x176 52)) (= x289 (= x130 0)) (<= x248 1461501637330902918203684832716283019655932542975) (= x67 (or x355 x76)) (= x44 (= x49 x344)) (>= 1461501637330902918203684832716283019655932542975 x150) (= x360 (> x42 115792089237316195423570985008687907853269984665640)) (= x2 x391) (= x42 x174) (= (< 115792089237316195423570985008687907853269984665640 x168) x402) (= x248 x215) (>= 340282366920938463463374607431768211455 x427) (< (+ x190 x429) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (not x402) x62) (= x423 (> x168 x218)) (<= 0 x173) (not (< x385 2113256763)) (= (x265 x247) x429) (= (x265 x370) x98) (< 0 x438) (>= x248 0) (<= x98 340282366920938463463374607431768211455) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x190 x173)) (<= 0 x130) (not (< x385 3018967357)) (= (x79 1461501637330902918203684832716283019655932542975 x292) x378) (<= 0 x168) (= x246 x88) (= (not x423) x76) (= (= x353 0) x355) (>= 340282366920938463463374607431768211455 x353) (= (+ x278 x427) x453) (= (x135 x264 1000000000000000000000000000) x3) (<= x391 1461501637330902918203684832716283019655932542975) (= x123 x55) (= x205 x445) (= x190 (x135 x452 1000000000000000000000000000)) x39 (= x451 (- x453 x98)) (= x167 (x79 1461501637330902918203684832716283019655932542975 x249)) (<= x176 1461501637330902918203684832716283019655932542975) (= x364 x8)) (or (and (and (not (= 0 x396)) (= x396 (x195 x130))) (not x289)) x289)) (and (= (x265 x192) x322) (>= 340282366920938463463374607431768211455 x322) (= (= x404 0) x223) (>= x400 0) (= x127 (x135 x268 1000000000000000000000000000)) (= (x195 x242) x313) (<= 0 x322) (= x401 (< x164 x322)) (not (> 826074471 x339)) (= x447 (ite x51 1 0)) (> 2113256763 x339) (= (x352 (x372 x322 x404)) x395) (= x404 (x202 128)) (= x268 (x397 (+ 500000000000000000000000000 x395))) (= x164 (x135 115792089237316195423570985008687907853269984665640064039457584007913129639935 x404)) (= x51 (or x307 x223)) (<= x468 1461501637330902918203684832716283019655932542975) (> x447 0) (= (x432 x468 52) x192) (< x322 340282366920938463463374607431768211456) (= x468 x123) (not (= 1865579259 x339)) (< x400 1461501637330902918203684832716283019655932542976) (= x49 x281) (>= 1461501637330902918203684832716283019655932542975 x400) (= x448 x127) (< 0 x313) (= 1889567281 x339) (not (> 1865579259 x339)) (= (not x401) x307))) (and (>= 1461501637330902918203684832716283019655932542975 x242) (= x281 x270) x70 (>= 1461501637330902918203684832716283019655932542975 x36) (= x188 (x352 (x372 x377 x259))) (> 1461501637330902918203684832716283019655932542976 x400) (= (= x259 0) x45) (> x242 0) (>= x36 0) (= x357 (x135 x263 1000000000000000000000000000)) (>= 1461501637330902918203684832716283019655932542975 x400) (= x390 (x397 (+ x188 500000000000000000000000000))) (<= x125 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x302) (= (> (x195 x242) 0) x230) (<= x377 340282366920938463463374607431768211455) (<= 0 x130) (> x286 0) (= (x135 x390 1000000000000000000000000000) x270) (= x140 (or x366 x45)) (>= x2 0) (<= x146 255) (= (x265 x437) x377) (<= 0 x123) (= x430 x36) (= x338 x445) (= x263 x445) (>= 255 x323) (= x343 x302) (>= x326 0) (> x30 0) (not (> 826074471 x337)) (>= 1461501637330902918203684832716283019655932542975 x123) (= x437 (x432 x430 52)) (>= 1461501637330902918203684832716283019655932542975 x2) (<= x400 1461501637330902918203684832716283019655932542975) (= (x60 x125) x334) (= x376 x249) (<= 0 x400) (<= 0 x400) (= x30 (ite x140 1 0)) (not (< x337 1865579259)) x230 (= x70 (> (x195 x125) 0)) (>= x377 0) (>= x302 0) (>= x428 0) (= 1000000000000000000000000000 x15) (= (x348 128) x259) (<= x376 1461501637330902918203684832716283019655932542975) (= (not x121) x366) (< 0 x125) (= x337 1889567281) (<= x430 1461501637330902918203684832716283019655932542975) (>= x146 0) (<= x130 1461501637330902918203684832716283019655932542975) (not (= x125 x242)) (<= 0 x376) (> 2113256763 x337) (>= x334 0) (>= x323 0) (>= 1461501637330902918203684832716283019655932542975 x428) (= x121 (> x377 x211)) (= x211 (x135 115792089237316195423570985008687907853269984665640064039457584007913129639935 x259)) (not (= x337 1865579259)) (= (x195 x242) x286) (< x377 340282366920938463463374607431768211456) (= x400 x125) (= (x60 x242) x326))) x213)))
(assert (x431 x353 x168 x4 x231))
(assert (x172 (- x363 x259)))
(assert (x418 x292))
(assert (x224 x259 x377 x134 x405))
(assert (x398 x18))
(assert (not (= (x432 x107 52) 1865579259)))
(assert (x172 (- x231 x168)))
(assert (=> (>= 10000 x125) (not (= (x432 x274 52) x125))))
(assert (x431 x142 x363 x405 x134))
(assert (not (= 340282366920938463463374607431768211455 (x432 x424 52))))
(assert (x398 x161))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x432 x430 52))))
(assert (x87 x4 (- x231 x168)))
(assert (x431 x404 x322 x405 x134))
(assert (x158 115792089237316195423570985008687907853269984665640064039457584007913129639935 x231))
(assert (=> (>= 10000 x468) (not (= x468 (x432 x468 52)))))
(assert (x172 (- x231 x322)))
(assert (x431 x142 x363 x377 x259))
(assert (x398 x325))
(assert (x87 x168 (- x353 x405)))
(assert (x398 x15))
(assert (x431 x363 x142 x259 x377))
(assert (x392 x424))
(assert (x87 x377 (- x259 x231)))
(assert (x398 x434))
(assert (x87 x322 (- x404 x321)))
(assert (x87 x377 (- x259 x50)))
(assert (x224 x231 x4 x322 x404))
(assert (x158 115792089237316195423570985008687907853269984665640064039457584007913129639935 x259))
(assert (x224 x168 x353 x50 x321))
(assert (x398 x335))
(assert (x398 x91))
(assert (x398 x14))
(assert (x224 x168 x353 x142 x363))
(assert (not (= 2113256763 (x432 x107 52))))
(assert (x87 x377 (- x259 x4)))
(assert (x398 x339))
(assert (x398 x261))
(assert (=> (<= x130 10000) (not (= (x432 x424 52) x130))))
(assert (x398 x71))
(assert (x431 x353 x168 x134 x405))
(assert (x398 x214))
(assert (x87 x4 (- x231 x134)))
(assert (x431 x321 x50 x377 x259))
(assert (x87 x321 (- x50 x168)))
(assert (= x64 (and (not x289) x61)))
(assert (x158 115792089237316195423570985008687907853269984665640064039457584007913129639935 x404))
(assert (=> (<= x424 10000) (not (= (x432 x430 52) x424))))
(assert (=> (>= 10000 x424) (not (= (x432 x176 52) x424))))
(assert (x172 (- x377 x134)))
(assert (x87 x142 (- x363 x321)))
(assert (x172 (- x142 x134)))
(assert (=> (<= x130 10000) (not (= (x432 x430 52) x130))))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x27)) (and (<= (* 1000000000000000000000000000 (x135 x27 1000000000000000000000000000)) x27) (< (- x27 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x27 1000000000000000000000000000))))) (x77 x27 1000000000000000000000000000) (x420 x27 1000000000000000000000000000) (x166 x27 1000000000000000000000000000) (x375 x27 1000000000000000000000000000)))
(assert (x431 x363 x142 x168 x353))
(assert (=> (<= x274 10000) (not (= (x432 x468 52) x274))))
(assert (x398 x210))
(assert (x398 x263))
(assert (x224 x363 x142 x4 x231))
(assert (x398 x6))
(assert (x172 3))
(assert (x431 x259 x377 x134 x405))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x432 x430 52))))
(assert (x398 x391))
(assert (x172 (- x134 x377)))
(assert (x87 x353 (- x168 x321)))
(assert (=> (>= 10000 x125) (not (= (x432 x424 52) x125))))
(assert (and (and (= (- (* x178 1000000000000000000000000000) (* x178 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x178)) (= (x372 1000000000000000000000000000 (- x178 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000000000000 (- x178 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x372 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x178 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x178 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* (- x178 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x152 1000000000000000000000000000 x178) (x244 1000000000000000000000000000 x178) (x160 1000000000000000000000000000 x178) (x206 1000000000000000000000000000 x178) (= (x372 1000000000000000000000000000 x178) (* x178 1000000000000000000000000000)) (x194 1000000000000000000000000000 x178)))
(assert (x224 x231 x4 x142 x363))
(assert (x454 x263))
(assert (x172 (- x4 x168)))
(assert (x454 x34))
(assert (x87 x321 (- x50 x363)))
(assert (x172 (- x405 x353)))
(assert (x87 x142 (- x363 x322)))
(assert (not (= (x432 x468 52) 115792089237316195423570985008687907853269984665640)))
(assert (= (and x411 x118) x306))
(assert (x172 x50))
(assert (x398 x442))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x432 x176 52))))
(assert (x87 x50 x321))
(assert (x398 x320))
(assert (x172 (- x50 x405)))
(assert (x158 115792089237316195423570985008687907853269984665640064039457584007913129639935 x405))
(assert (x172 (- x134 x168)))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x34)) (and (<= (* 1000000000000000000000000000 (x135 x34 1000000000000000000000000000)) x34) (< (- x34 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x34 1000000000000000000000000000))))) (x77 x34 1000000000000000000000000000) (x420 x34 1000000000000000000000000000) (x166 x34 1000000000000000000000000000) (x375 x34 1000000000000000000000000000)))
(assert (x224 x134 x405 x4 x231))
(assert (x398 x133))
(assert (x172 (- x321 x142)))
(assert (x398 x395))
(assert (x224 x353 x168 x142 x363))
(assert (x431 x4 x231 x405 x134))
(assert (x172 (- x142 x404)))
(assert (x172 (- x322 x134)))
(assert (x172 (- x404 x50)))
(assert (x454 x321))
(assert (x172 (- x322 x405)))
(assert (x398 x268))
(assert (x431 x259 x377 x405 x134))
(assert (x87 x363 (- x142 x168)))
(assert (x87 x134 (- x405 x142)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x432 x176 52))))
(assert (x398 x215))
(assert (x172 (- x405 x4)))
(assert (x431 x363 x142 x4 x231))
(assert (not (= (x432 x430 52) 1889567281)))
(assert (x172 (- x322 x50)))
(assert (x224 x353 x168 x50 x321))
(assert (x431 x134 x405 x4 x231))
(assert (not (= 500000000000000000000000000 (x432 x274 52))))
(assert (=> (= (x432 x424 52) (x432 x274 52)) (= x424 x274)))
(assert (x87 x259 (- x377 x231)))
(assert (x172 (- x134 x259)))
(assert (x398 x191))
(assert (not (= (x432 x107 52) 826074471)))
(assert (x87 x321 (- x50 x405)))
(assert (x431 x377 x259 x4 x231))
(assert (x87 x321 (- x50 x134)))
(assert (not (= 340282366920938463463374607431768211456 (x432 x107 52))))
(assert (x172 x405))
(assert (not (= (x432 x107 52) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (x398 x374))
(assert (x172 (- x168 x405)))
(assert (x224 x231 x4 x134 x405))
(assert (not (= 1865579259 (x432 x220 52))))
(assert (x172 (- x404 x134)))
(assert (not (= (x432 x430 52) 3607235850)))
(assert (x224 x405 x134 x4 x231))
(assert (not (= (x432 x424 52) 52)))
(assert (x172 (- x353 x142)))
(assert (x172 x178))
(assert (x87 x231 (- x4 x322)))
(assert (x224 x231 x4 x377 x259))
(assert (x431 x168 x353 x142 x363))
(assert (=> (= (x432 x430 52) (x432 x274 52)) (= x430 x274)))
(assert (x431 x134 x405 x377 x259))
(assert (x224 x134 x405 x142 x363))
(assert (=> (>= 10000 x468) (not (= (x432 x220 52) x468))))
(assert (x172 (- x50 x168)))
(assert (x398 x384))
(assert (x87 x322 (- x404 x50)))
(assert (x224 x322 x404 x4 x231))
(assert (=> (<= x424 10000) (not (= x424 (x432 x274 52)))))
(assert (x431 x377 x259 x405 x134))
(assert (not (= 340282366920938463463374607431768211455 (x432 x468 52))))
(assert (x398 x164))
(assert (x398 x274))
(assert (x172 x363))
(assert (x87 x142 (- x363 x353)))
(assert (x172 (- x405 x142)))
(assert (x398 x408))
(assert (x87 x321 (- x50 x142)))
(assert (not (= 340282366920938463463374607431768211455 (x432 x220 52))))
(assert (x431 x377 x259 x321 x50))
(assert (x431 x142 x363 x168 x353))
(assert (x431 x259 x377 x231 x4))
(assert (x398 x390))
(assert (x454 x363))
(assert (x172 (- x259 x321)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x432 x274 52))))
(assert (x172 (- x321 x377)))
(assert (x398 x350))
(assert (x431 x50 x321 x363 x142))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x99)) (and (<= (* 1000000000000000000000000000 (x135 x99 1000000000000000000000000000)) x99) (< (- x99 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x99 1000000000000000000000000000))))) (x77 x99 1000000000000000000000000000) (x420 x99 1000000000000000000000000000) (x166 x99 1000000000000000000000000000) (x375 x99 1000000000000000000000000000)))
(assert (x431 x363 x142 x404 x322))
(assert (x454 x419))
(assert (=> (>= 10000 x107) (not (= x107 (x432 x107 52)))))
(assert (x398 x205))
(assert (x87 x134 (- x405 x377)))
(assert (x398 x344))
(assert (=> (>= 10000 x274) (not (= x274 (x432 x430 52)))))
(assert (not x17))
(assert (x398 x405))
(assert (not (= (x432 x424 52) 1865579259)))
(assert (not (= (x432 x424 52) 1461501637330902918203684832716283019655932542976)))
(assert (x172 (- x321 x134)))
(assert (x172 (- x50 x134)))
(assert (x172 x404))
(assert (x87 x4 (- x231 x405)))
(assert (x87 x363 (- x142 x377)))
(assert (=> (= (x432 x220 52) (x432 x430 52)) (= x430 x220)))
(assert (x224 x50 x321 x142 x363))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x432 x430 52))))
(assert (not (= 826074471 (x432 x424 52))))
(assert (x87 x377 (- x259 x405)))
(assert (not (= (x432 x176 52) 1461501637330902918203684832716283019655932542976)))
(assert (x398 x173))
(assert (=> (>= 10000 x430) (not (= (x432 x424 52) x430))))
(assert (x398 x315))
(assert (x431 x231 x4 x377 x259))
(assert (x87 x405 (- x134 x363)))
(assert (=> (<= x468 10000) (not (= x468 (x432 x274 52)))))
(assert (not (= (x432 x430 52) 1000000000000000000000000000)))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x419)) (and (<= (* 1000000000000000000000000000 (x135 x419 1000000000000000000000000000)) x419) (< (- x419 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x419 1000000000000000000000000000))))) (x77 x419 1000000000000000000000000000) (x420 x419 1000000000000000000000000000) (x166 x419 1000000000000000000000000000) (x375 x419 1000000000000000000000000000)))
(assert (x291 1461501637330902918203684832716283019655932542975))
(assert (x224 x4 x231 x142 x363))
(assert (x398 x333))
(assert (=> (<= x430 10000) (not (= x430 (x432 x176 52)))))
(assert (x454 x405))
(assert (x224 x377 x259 x142 x363))
(assert (=> (<= x130 10000) (not (= x130 (x432 x220 52)))))
(assert (x398 x378))
(assert (x398 x46))
(assert (x398 x248))
(assert (x87 x322 (- x404 x134)))
(assert (x398 x127))
(assert (not (= 1000000000000000000000000000 (x432 x468 52))))
(assert (=> (>= 10000 x125) (not (= (x432 x176 52) x125))))
(assert (x87 x168 (- x353 x321)))
(assert (x398 x367))
(assert (x398 x2))
(assert (x172 x259))
(assert (x172 (- x231 x363)))
(assert (x398 x131))
(assert (x224 x142 x363 x50 x321))
(assert (x398 x406))
(assert (=> (>= 10000 x176) (not (= (x432 x468 52) x176))))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x390)) (and (<= (* 1000000000000000000000000000 (x135 x390 1000000000000000000000000000)) x390) (< (- x390 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x390 1000000000000000000000000000))))) (x77 x390 1000000000000000000000000000) (x420 x390 1000000000000000000000000000) (x166 x390 1000000000000000000000000000) (x375 x390 1000000000000000000000000000)))
(assert (x87 x134 (- x405 x50)))
(assert (x224 x321 x50 x377 x259))
(assert (x454 x27))
(assert (x398 x40))
(assert (x454 x404))
(assert (x431 x321 x50 x322 x404))
(assert (= x68 (and (not x19) x139)))
(assert (x398 x55))
(assert (x172 (- x134 x50)))
(assert (x398 x286))
(assert (x398 x363))
(assert (x87 x405 (- x134 x168)))
(assert (not (= (x432 x430 52) 1461501637330902918203684832716283019655932542976)))
(assert (x398 x329))
(assert (x291 x249))
(assert (x398 x308))
(assert (x398 x137))
(assert (x398 x283))
(assert (=> (<= x242 10000) (not (= (x432 x220 52) x242))))
(assert (x431 x353 x168 x363 x142))
(assert (x172 (- x259 x231)))
(assert (=> (>= 10000 x125) (not (= (x432 x220 52) x125))))
(assert (x398 x448))
(assert (x431 x353 x168 x321 x50))
(assert (x224 x4 x231 x134 x405))
(assert (x431 x363 x142 x322 x404))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x432 x274 52))))
(assert (x87 x377 (- x259 x363)))
(assert (x431 x134 x405 x353 x168))
(assert (x172 (- x405 x231)))
(assert (x172 (- x353 x363)))
(assert (x87 x404 (- x322 x50)))
(assert (x398 x385))
(assert (x87 x405 (- x134 x377)))
(assert (x87 x322 x404))
(assert (= x92 (=> (and (and (and (not (> 1865579259 x100)) (= x436 (x352 (x372 x50 x321))) (= x229 x305) (<= x424 1461501637330902918203684832716283019655932542975) (< x400 1461501637330902918203684832716283019655932542976) (<= 0 x50) (< 0 x105) (= (x135 115792089237316195423570985008687907853269984665640064039457584007913129639935 x321) x10) (= x96 (not x155)) (= x155 (> x50 x10)) (= x100 1889567281) (not (< x100 826074471)) (<= x400 1461501637330902918203684832716283019655932542975) (= (x195 x242) x105) (= (x441 128) x321) (= x50 (x112 x280)) (< x100 2113256763) (>= x400 0) (> x185 0) (>= 340282366920938463463374607431768211455 x50) (= x424 x36) (= x229 (x135 x99 1000000000000000000000000000)) (= (x397 (+ x436 500000000000000000000000000)) x99) (= (or x279 x96) x282) (= x185 (ite x282 1 0)) (> 340282366920938463463374607431768211456 x50) (= (x432 x424 52) x280) (= x279 (= 0 x321)) (not (= 1865579259 x100))) (and (or x19 (and (not x19) (and (not (= 0 x261)) (= (x195 x130) x261)))) (and (= x114 x305) (= x304 (< x46 x4)) (= x115 (x79 1461501637330902918203684832716283019655932542975 x292)) (< x130 1461501637330902918203684832716283019655932542976) (= x222 (x203 (- x199 x333))) (= (x352 (* 1000000000000000000000000000 x178)) x342) (= x80 0) (= x415 x445) (= (x79 1461501637330902918203684832716283019655932542975 x292) x320) (= x367 (x135 x350 1000000000000000000000000000)) (>= x384 0) (= x199 (x135 x27 1000000000000000000000000000)) (= x374 x149) (<= x231 340282366920938463463374607431768211455) (= x81 x367) (= x394 (= x231 0)) (= x56 (x352 (* x4 1000000000000000000000000000))) (> 3607235850 x387) (< (+ x407 x367) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x459 1461501637330902918203684832716283019655932542975) (not (< x199 x333)) (= x178 (x397 (+ x216 x308))) (not (> 3018967357 x387)) (= x249 x40) (= (< 115792089237316195423570985008687907853269984665640 x4) x235) (= (x112 x228) x256) (>= 340282366920938463463374607431768211455 x256) (= x419 (x397 (+ 500000000000000000000000000 x161))) (= x19 (= x130 0)) (= x393 x80) (= x469 (not x304)) (= x170 x256) (= x74 x115) (= x367 x341) (= (or x469 x394) x84) (= x384 (x112 x109)) (<= 0 x256) (> x239 0) (= x449 1000000000000000000000000000) (= x456 (= x111 x122)) (= x198 (ite x399 1 0)) (= (x432 x220 52) x179) (<= 0 x40) (= (x135 115792089237316195423570985008687907853269984665640064039457584007913129639935 x231) x46) (not (> 2113256763 x387)) (< x231 340282366920938463463374607431768211456) (= x95 x277) (>= x467 0) (<= x220 1461501637330902918203684832716283019655932542975) (<= x255 340282366920938463463374607431768211455) (= x407 x151) (= x408 (x79 1461501637330902918203684832716283019655932542975 x249)) (= (ite x95 1 0) x239) (= (x195 x242) x406) (= x149 x467) (>= x459 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x407) (= x399 x287) (<= x467 1461501637330902918203684832716283019655932542975) (= x27 (x397 (+ 500000000000000000000000000 x56))) (= (x397 (+ 500000000000000000000000000 x342)) x350) (= x198 0) (= x333 (x135 x419 1000000000000000000000000000)) (not (= x367 0)) (= (x352 (x372 x4 x231)) x161) (< x4 340282366920938463463374607431768211456) (= x408 x320) (= x74 (x79 1461501637330902918203684832716283019655932542975 x249)) (< 0 x406) (> 340282366920938463463374607431768211456 x256) (>= 340282366920938463463374607431768211455 x4) (= x368 (+ x81 x151)) x456 (= (not x235) x277) (>= 1461501637330902918203684832716283019655932542975 x325) (<= 0 x4) (>= 340282366920938463463374607431768211455 x384) (= (+ x465 x255) x250) (= x4 (x112 x108)) (< 0 x361) (<= 0 x407) (= x174 x216) (= x231 (x240 x179)) (= x269 (not x288)) (<= 0 x130) (= (+ x170 x341) x255) (= x47 1000000000000000000000000000) (= x361 (ite x84 1 0)) (>= x231 0) (= x325 x2) (not (< 340282366920938463463374607431768211455 x367)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x256 x367)) (<= x40 1461501637330902918203684832716283019655932542975) (= x109 (x432 x220 52)) (<= x130 1461501637330902918203684832716283019655932542975) (= x387 3018967357) (= (- x250 x384) x122) (= x123 x220) (= x288 (> x178 115792089237316195423570985008687907853269984665640)) (= (x432 x220 52) x228) (= x108 (x432 x220 52)) (= x308 x54) (= x287 (not x269))))) (and (= x380 x410) (= (x32 320) x136) (= x153 x354) (= x129 x232) (< (+ x129 x153) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x354 x232) x388) (= (= x142 0) x410))) x1)))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x29)) (and (<= (* 1000000000000000000000000000 (x135 x29 1000000000000000000000000000)) x29) (< (- x29 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x29 1000000000000000000000000000))))) (x77 x29 1000000000000000000000000000) (x420 x29 1000000000000000000000000000) (x166 x29 1000000000000000000000000000) (x375 x29 1000000000000000000000000000)))
(assert (x87 x405 (- x134 x4)))
(assert (x431 x377 x259 x231 x4))
(assert (=> (>= 10000 x176) (not (= x176 (x432 x220 52)))))
(assert (x398 x311))
(assert (x87 x322 (- x404 x142)))
(assert (=> (>= 10000 x274) (not (= x274 (x432 x424 52)))))
(assert (x87 x322 (- x404 x4)))
(assert (x398 x285))
(assert (x87 x353 (- x168 x4)))
(assert (x398 x29))
(assert (x224 x405 x134 x142 x363))
(assert (x172 (- x168 x4)))
(assert (x224 x134 x405 x50 x321))
(assert (x454 x452))
(assert (x431 x134 x405 x50 x321))
(assert (not (= (x432 x430 52) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x87 x50 (- x321 x353)))
(assert (x431 x142 x363 x404 x322))
(assert (x172 (- x377 x142)))
(assert (=> (= (x432 x220 52) (x432 x274 52)) (= x220 x274)))
(assert (= true x61))
(assert (x431 x259 x377 x363 x142))
(assert (x398 x12))
(assert (x454 x353))
(assert (x398 x452))
(assert (x172 x455))
(assert (x172 (- x377 x231)))
(assert (x172 (- x353 x50)))
(assert (x224 x4 x231 x377 x259))
(assert (x87 x231 (- x4 x405)))
(assert (x398 x199))
(assert (x392 x430))
(assert (x398 x270))
(assert (not (= (x432 x274 52) 340282366920938463463374607431768211455)))
(assert (x392 x176))
(assert (x87 x4 (- x231 x142)))
(assert (x431 x50 x321 x134 x405))
(assert (x172 (- x405 x168)))
(assert (x87 x322 (- x404 x231)))
(assert (x224 x168 x353 x4 x231))
(assert (x172 (- x50 x404)))
(assert (x172 (- x353 x231)))
(assert (x392 x274))
(assert (x158 115792089237316195423570985008687907853269984665640064039457584007913129639935 x321))
(assert (x398 x50))
(assert (x172 (- x363 x322)))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x432 x468 52))))
(assert (x431 x134 x405 x363 x142))
(assert (x224 x404 x322 x50 x321))
(assert (x454 x29))
(assert (x431 x4 x231 x322 x404))
(assert (not (= (x432 x468 52) 3607235850)))
(assert (not (= 1889567281 (x432 x220 52))))
(assert (x398 x88))
(assert (= (and x61 x289) x416))
(assert (not (= (x432 x107 52) 1889567281)))
(assert (x431 x4 x231 x259 x377))
(assert (x398 x130))
(assert (x392 x468))
(assert (not (= 2113256763 (x432 x468 52))))
(assert (x398 x412))
(assert (x431 x50 x321 x404 x322))
(assert (x172 (- x322 x4)))
(assert (=> (>= 10000 x430) (not (= x430 (x432 x274 52)))))
(assert (x454 x264))
(assert (x398 x396))
(assert (x454 x350))
(assert (x172 (- x321 x353)))
(assert (x398 x239))
(assert (x87 x259 (- x377 x321)))
(assert (x398 x428))
(assert (not (= 3607235850 (x432 x220 52))))
(assert (x431 x231 x4 x405 x134))
(assert (x398 x449))
(assert (x172 (- x321 x168)))
(assert (x431 x168 x353 x363 x142))
(assert (x398 x204))
(assert (=> (= (x432 x424 52) (x432 x107 52)) (= x107 x424)))
(assert (x431 x134 x405 x231 x4))
(assert (x172 (- x363 x405)))
(assert (x398 x309))
(assert (=> (>= 10000 x468) (not (= (x432 x424 52) x468))))
(assert (x398 x353))
(assert (x431 x404 x322 x142 x363))
(assert (x398 x433))
(assert (x398 x73))
(assert (x87 x231 (- x4 x404)))
(assert (x172 (- x259 x405)))
(assert (x172 (- x405 x404)))
(assert (x172 (- x322 x321)))
(assert (x398 x302))
(assert (x87 x405 (- x134 x50)))
(assert (not (= 340282366920938463463374607431768211456 (x432 x468 52))))
(assert (x431 x363 x142 x353 x168))
(assert (x172 (- x50 x259)))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x432 x274 52))))
(assert (x398 x10))
(assert (=> (>= 10000 x107) (not (= (x432 x424 52) x107))))
(assert (x398 x338))
(assert (x172 (- x142 x168)))
(assert (not (= 1889567281 (x432 x274 52))))
(assert (not (= 1865579259 (x432 x468 52))))
(assert (x87 x322 (- x404 x363)))
(assert (=> (>= 10000 x242) (not (= x242 (x432 x430 52)))))
(assert (x398 x105))
(assert (not (= 52 (x432 x430 52))))
(assert (x454 x390))
(assert (and (and (= (- (* x276 3) (* x276 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x372 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x276)) (= (x372 3 (- x276 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x276 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x372 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x276 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x276 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* (- x276 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x152 3 x276) (x244 3 x276) (x160 3 x276) (x206 3 x276) (= (x372 3 x276) (* x276 3)) (x194 3 x276)))
(assert (x431 x231 x4 x353 x168))
(assert (x172 (- x405 x259)))
(assert (x398 x190))
(assert (x398 x54))
(assert (x87 x363 (- x142 x4)))
(assert (x172 (- x4 x404)))
(assert (x172 (- x142 x231)))
(assert (not (= 2113256763 (x432 x424 52))))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x432 x107 52))))
(assert (x224 x404 x322 x134 x405))
(assert (x172 (- x259 x134)))
(assert (x87 x405 (- x134 x321)))
(assert (x431 x50 x321 x377 x259))
(assert (x431 x322 x404 x363 x142))
(assert (x87 x4 (- x231 x259)))
(assert (x431 x4 x231 x142 x363))
(assert (x87 x168 (- x353 x134)))
(assert (= (or x64 x416) x411))
(assert (x398 x459))
(assert (x398 x207))
(assert (x398 x369))
(assert (x87 x322 (- x404 x405)))
(assert (not (= (x432 x107 52) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (=> (<= x430 10000) (not (= x430 (x432 x107 52)))))
(assert (x398 x176))
(assert (not (= (x432 x274 52) 1461501637330902918203684832716283019655932542976)))
(assert (x224 x4 x231 x322 x404))
(assert (x431 x404 x322 x50 x321))
(assert (x398 x254))
(assert (not (= 52 (x432 x176 52))))
(assert (x172 (- x134 x363)))
(assert (=> (<= x242 10000) (not (= (x432 x274 52) x242))))
(assert (x172 1000000000000000000000000000))
(assert (x398 x66))
(assert (x172 (- x353 x321)))
(assert (x87 x405 (- x134 x353)))
(assert (x172 (- x231 x259)))
(assert (x454 x99))
(assert (x87 x259 (- x377 x50)))
(assert (x172 (- x168 x142)))
(assert (x431 x231 x4 x259 x377))
(assert (x454 x283))
(assert (x172 (- x377 x4)))
(assert (x398 x393))
(assert (x392 x125))
(assert (x431 x377 x259 x50 x321))
(assert (not (= (x432 x176 52) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (x398 x407))
(assert (x398 x342))
(assert (x172 (- x363 x4)))
(assert (=> (>= 10000 x107) (not (= (x432 x274 52) x107))))
(assert (=> (<= x274 10000) (not (= (x432 x220 52) x274))))
(assert (x431 x321 x50 x142 x363))
(assert (x172 (- x363 x168)))
(assert (=> (<= x130 10000) (not (= (x432 x107 52) x130))))
(assert (=> (= (x432 x220 52) (x432 x424 52)) (= x424 x220)))
(assert (x172 (- x50 x142)))
(assert (x431 x377 x259 x134 x405))
(assert (x398 x343))
(assert (x172 (- x168 x231)))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x432 x176 52))))
(assert (x398 x129))
(assert (x172 x153))
(assert (x172 (- x363 x377)))
(assert (x87 x231 (- x4 x134)))
(assert (x87 x405 (- x134 x142)))
(assert (x398 x351))
(assert (x172 (- x142 x259)))
(assert (x398 x337))
(assert (x224 x50 x321 x134 x405))
(assert (x224 x50 x321 x322 x404))
(assert (x87 x50 (- x321 x322)))
(assert (x172 (- x231 x134)))
(assert (=> (>= 10000 x468) (not (= (x432 x107 52) x468))))
(assert (x431 x377 x259 x363 x142))
(assert (x431 x50 x321 x168 x353))
(assert (x172 (- x322 x363)))
(assert (x431 x363 x142 x377 x259))
(assert (x87 x363 (- x142 x231)))
(assert (x172 (- x377 x405)))
(assert (=> (<= x176 10000) (not (= x176 (x432 x176 52)))))
(assert (x172 (- x142 x322)))
(assert (x172 (- x4 x353)))
(assert (x172 (- x231 x353)))
(assert (x398 x229))
(assert (x392 x220))
(assert (x172 (- x405 x363)))
(assert (x87 x142 (- x363 x259)))
(assert (x87 x259 (- x377 x134)))
(assert (= x213 (=> (and (and (= x169 (x26 320)) (= x145 x42) (= x141 x7) (= x335 x209) (= x7 (= 0 x168)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x42 x335)) (= x309 (+ x145 x209))) (and (and (= (x432 x274 52) x162) (= (x352 (* 1000000000000000000000000000 x153)) x133) (= x351 x2) (< x433 3607235850) (= (+ x25 x196) x86) (= (x195 x242) x324) (= (= x245 x465) x260) (> 340282366920938463463374607431768211456 x363) (<= x142 340282366920938463463374607431768211455) (= x393 x237) (= x86 x407) (>= x113 0) (= (x432 x274 52) x336) (<= x113 340282366920938463463374607431768211455) (= (x432 x274 52) x330) (= (x94 x461) x142) x260 (= x22 (< x226 x142)) (= (x397 (+ 500000000000000000000000000 x137)) x283) (= (x397 (+ x329 500000000000000000000000000)) x29) (= x153 x54) (= (x397 (+ x133 500000000000000000000000000)) x446) (= x118 (= x130 0)) (> 1461501637330902918203684832716283019655932542976 x130) (= x143 (ite x382 1 0)) (= x409 (x79 1461501637330902918203684832716283019655932542975 x292)) (<= x191 340282366920938463463374607431768211455) (= x237 0) (= (= 0 x363) x187) (= x186 x196) (= x113 (x94 x319)) (= x332 x249) (= x274 x36) (>= 1461501637330902918203684832716283019655932542975 x351) (<= x274 1461501637330902918203684832716283019655932542975) (>= x204 0) (= (x79 1461501637330902918203684832716283019655932542975 x249) x381) (= x11 (or x379 x187)) (= x243 x382) (= 0 x73) (= (x352 (x372 x142 x363)) x329) (= (x13 x330) x363) (= x113 x258) (not (> 3018967357 x433)) (>= x191 0) (= 3018967357 x433) (>= 340282366920938463463374607431768211455 x208) (>= 1461501637330902918203684832716283019655932542975 x297) (= (ite x163 1 0) x73) (= (+ x208 x24) x189) (not (< x315 x214)) (= x86 x82) (= x214 (x135 x29 1000000000000000000000000000)) (= x91 1000000000000000000000000000) (>= 1461501637330902918203684832716283019655932542975 x204) (= x207 (x79 1461501637330902918203684832716283019655932542975 x249)) (= (x432 x274 52) x461) (= x374 x52) (= x369 x445) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25) (<= 0 x25) (not (= x196 0)) (< (+ x196 x113) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x129 (x203 (- x315 x214))) (= x219 (> x142 115792089237316195423570985008687907853269984665640)) (> 340282366920938463463374607431768211456 x142) (= (ite x11 1 0) x271) (= (x94 x162) x191) (<= x332 1461501637330902918203684832716283019655932542975) (<= 0 x332) (>= 340282366920938463463374607431768211455 x363) (= x66 1000000000000000000000000000) (= (not x236) x444) (= x379 (not x22)) (= x243 (not x219)) (= (x432 x274 52) x319) (= (x79 1461501637330902918203684832716283019655932542975 x292) x464) (= x460 (> x153 115792089237316195423570985008687907853269984665640)) (= x245 (- x189 x191)) (<= 0 x130) (= x52 x297) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x25 x196)) (= x163 x444) (< x113 340282366920938463463374607431768211456) (= x226 (x135 115792089237316195423570985008687907853269984665640064039457584007913129639935 x363)) (>= x363 0) (= x315 (x135 x283 1000000000000000000000000000)) (= x381 x409) (>= 1461501637330902918203684832716283019655932542975 x130) (= x196 (x135 x446 1000000000000000000000000000)) (= x236 (not x460)) (not (< 340282366920938463463374607431768211455 x196)) (not (< x433 2113256763)) (= x137 (x352 (* x142 1000000000000000000000000000))) (= x208 (+ x258 x186)) (>= x297 0) (> x271 0) (< 0 x143) (> x324 0) (= x464 x207) (>= x142 0)) (or (and (and (= (x195 x130) x434) (not (= x434 0))) (not x118)) x118))) x92)))
(assert (not (= (x432 x274 52) 1000000000000000000000000000)))
(assert (x398 x41))
(assert (=> (<= x274 10000) (not (= (x432 x176 52) x274))))
(assert (x87 x168 (- x353 x142)))
(assert (x431 x322 x404 x142 x363))
(assert (x398 x142))
(assert (x431 x142 x363 x50 x321))
(assert (x87 x134 (- x405 x404)))
(assert (x398 x4))
(assert (x224 x142 x363 x134 x405))
(assert (=> (<= x468 10000) (not (= (x432 x176 52) x468))))
(assert (x398 x365))
(assert (x431 x322 x404 x134 x405))
(assert (x431 x168 x353 x321 x50))
(assert (x431 x231 x4 x322 x404))
(assert (x87 x134 x405))
(assert (x87 x353 (- x168 x142)))
(assert (x431 x363 x142 x405 x134))
(assert (not (= 826074471 (x432 x430 52))))
(assert (x87 x134 (- x405 x363)))
(assert (x172 (- x134 x231)))
(assert (x398 x465))
(assert (x398 x97))
(assert (=> (>= 10000 x176) (not (= (x432 x274 52) x176))))
(assert (x87 x134 (- x405 x4)))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x432 x274 52))))
(assert (x398 x237))
(assert (x398 x255))
(assert (not (= 340282366920938463463374607431768211456 (x432 x274 52))))
(assert (x431 x322 x404 x50 x321))
(assert (not (= (x432 x176 52) 1000000000000000000000000000)))
(assert (x172 (- x321 x322)))
(assert (and (x89 x249 1461501637330902918203684832716283019655932542976) (x90 x249 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x249 (+ (x83 x249 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x135 x249 1461501637330902918203684832716283019655932542976))))) (x102 x249 1461501637330902918203684832716283019655932542976)))
(assert (x172 (- x168 x321)))
(assert (not (= 340282366920938463463374607431768211456 (x432 x430 52))))
(assert (not (= (x432 x220 52) 2113256763)))
(assert (x431 x363 x142 x321 x50))
(assert (x398 x222))
(assert (x431 x363 x142 x50 x321))
(assert (=> (<= x125 10000) (not (= (x432 x430 52) x125))))
(assert (not (= (x432 x107 52) 1461501637330902918203684832716283019655932542975)))
(assert (x398 x252))
(assert (x431 x142 x363 x353 x168))
(assert (x87 x142 (- x363 x404)))
(assert (x431 x134 x405 x142 x363))
(assert (x398 x414))
(assert (x200 x292))
(assert (x431 x142 x363 x4 x231))
(assert (x398 x63))
(assert (x431 x168 x353 x4 x231))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x432 x220 52))))
(assert (x172 (- x4 x377)))
(assert (not (= (x432 x424 52) 1000000000000000000000000000)))
(assert (x398 x361))
(assert (x224 x353 x168 x134 x405))
(assert (x398 x157))
(assert (not (= (x432 x430 52) 340282366920938463463374607431768211455)))
(assert (x398 x197))
(assert (= x458 (and x411 (not x118))))
(assert (x87 x142 (- x363 x50)))
(assert (x431 x404 x322 x134 x405))
(assert (x398 x334))
(assert (x87 x353 (- x168 x231)))
(assert (x431 x259 x377 x142 x363))
(assert (x398 x457))
(assert (=> (<= x130 10000) (not (= x130 (x432 x468 52)))))
(assert (not (= (x432 x176 52) 340282366920938463463374607431768211456)))
(assert (x172 (- x142 x321)))
(assert (x224 x321 x50 x322 x404))
(assert (=> (= (x432 x424 52) (x432 x468 52)) (= x468 x424)))
(assert (x431 x4 x231 x363 x142))
(assert (x172 (- x377 x50)))
(assert (x398 x242))
(assert (x172 (- x404 x142)))
(assert (x87 x142 (- x363 x4)))
(assert (not (= (x432 x107 52) 1000000000000000000000000000)))
(assert (x200 x249))
(assert (x398 x100))
(assert (x398 x438))
(assert (not (= (x432 x424 52) 500000000000000000000000000)))
(assert (=> (>= 10000 x176) (not (= x176 (x432 x424 52)))))
(assert (not (= 3018967357 (x432 x424 52))))
(assert (x87 x363 (- x142 x134)))
(assert (x87 x377 (- x259 x142)))
(assert (x398 x115))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x432 x430 52))))
(assert (x431 x142 x363 x231 x4))
(assert (x172 (- x363 x50)))
(assert (not (= (x432 x220 52) 115792089237316195423570985008687907853269984665640)))
(assert (not (= (x432 x468 52) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x398 x25))
(assert (x224 x322 x404 x134 x405))
(assert (x431 x405 x134 x231 x4))
(assert (x172 (- x404 x363)))
(assert (x398 x429))
(assert (x398 x404))
(assert (x431 x321 x50 x168 x353))
(assert (x398 x305))
(assert (x398 x3))
(assert (x87 x259 (- x377 x4)))
(assert (not (= (x432 x107 52) 3607235850)))
(assert (x398 x271))
(assert (x224 x363 x142 x322 x404))
(assert (x87 x4 (- x231 x353)))
(assert (x398 x381))
(assert (x172 x276))
(assert (x398 x30))
(assert (x87 x168 (- x353 x4)))
(assert (x398 x185))
(assert (x172 (- x4 x363)))
(assert (x431 x259 x377 x50 x321))
(assert (and (=> (and (< 0 1000000000000000000000000000) (< 0 x283)) (and (<= (* 1000000000000000000000000000 (x135 x283 1000000000000000000000000000)) x283) (< (- x283 1000000000000000000000000000) (* 1000000000000000000000000000 (x135 x283 1000000000000000000000000000))))) (x77 x283 1000000000000000000000000000) (x420 x283 1000000000000000000000000000) (x166 x283 1000000000000000000000000000) (x375 x283 1000000000000000000000000000)))
(assert (=> (<= x220 10000) (not (= x220 (x432 x424 52)))))
(assert (x431 x353 x168 x50 x321))
(assert (x431 x134 x405 x404 x322))
(assert (x224 x259 x377 x50 x321))
(assert (x418 x249))
(assert (x172 (- x363 x404)))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x432 x468 52))))
(assert (x398 x49))
(assert (=> (= (x432 x468 52) (x432 x220 52)) (= x220 x468)))
(assert (x224 x321 x50 x168 x353))
(assert (x224 x405 x134 x50 x321))
(assert (= x328 (and x19 x139)))
(check-sat)
(exit)
