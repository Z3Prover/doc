(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x99 () Int)
(declare-fun x104 () Int)
(declare-fun x303 () Int)
(declare-fun x427 () Bool)
(declare-fun x579 () Int)
(declare-fun x393 () Int)
(declare-fun x250 () Bool)
(declare-fun x169 () Bool)
(declare-fun x229 () Bool)
(declare-fun x164 () Int)
(declare-fun x219 () Int)
(declare-fun x211 () Bool)
(declare-fun x479 () Bool)
(declare-fun x344 () Bool)
(declare-fun x190 () Int)
(declare-fun x320 () Bool)
(declare-fun x91 () Bool)
(declare-fun x108 () Bool)
(declare-fun x469 () Bool)
(declare-fun x368 () Int)
(declare-fun x144 () Bool)
(declare-fun x538 () Bool)
(declare-fun x197 () Int)
(declare-fun x11 () Int)
(declare-fun x596 () Bool)
(declare-fun x129 () Int)
(declare-fun x567 () Int)
(declare-fun x593 () Bool)
(declare-fun x588 () Bool)
(declare-fun x260 () Bool)
(declare-fun x176 () Int)
(declare-fun x294 () Bool)
(declare-fun x140 () Bool)
(declare-fun x272 () Bool)
(declare-fun x522 () Int)
(declare-fun x44 () Int)
(declare-fun x12 () Int)
(declare-fun x550 () Int)
(declare-fun x271 () Bool)
(declare-fun x319 () Bool)
(declare-fun x242 () Bool)
(declare-fun x324 () Bool)
(declare-fun x420 () Int)
(declare-fun x203 () Int)
(declare-fun x125 () Bool)
(declare-fun x476 () Int)
(declare-fun x137 () Bool)
(declare-fun x70 () Int)
(declare-fun x75 () Bool)
(declare-fun x528 () Int)
(declare-fun x514 () Int)
(declare-fun x185 () Bool)
(declare-fun x398 () Bool)
(declare-fun x332 () Int)
(declare-fun x486 () Bool)
(declare-fun x38 () Bool)
(declare-fun x414 () Int)
(declare-fun x406 () Int)
(declare-fun x29 () Int)
(declare-fun x322 () Bool)
(declare-fun x431 () Bool)
(declare-fun x330 () Bool)
(declare-fun x551 () Bool)
(declare-fun x37 () Int)
(declare-fun x438 () Bool)
(declare-fun x132 () Int)
(declare-fun x110 (Int Int) Int)
(declare-fun x304 () Bool)
(declare-fun x151 () Bool)
(declare-fun x256 () Bool)
(declare-fun x535 () Bool)
(declare-fun x87 () Bool)
(declare-fun x444 () Bool)
(declare-fun x296 () Bool)
(declare-fun x275 () Bool)
(declare-fun x321 () Bool)
(declare-fun x366 () Int)
(declare-fun x20 () Int)
(declare-fun x345 () Int)
(declare-fun x27 () Int)
(declare-fun x33 () Bool)
(declare-fun x63 () Int)
(declare-fun x240 () Bool)
(declare-fun x384 () Bool)
(declare-fun x279 () Bool)
(declare-fun x473 () Int)
(declare-fun x258 () Int)
(declare-fun x147 () Bool)
(declare-fun x34 () Bool)
(declare-fun x23 () Bool)
(declare-fun x443 () Bool)
(declare-fun x135 () Bool)
(declare-fun x582 () Int)
(declare-fun x325 () Bool)
(declare-fun x573 () Bool)
(declare-fun x599 () Bool)
(declare-fun x506 () Int)
(declare-fun x223 () Bool)
(declare-fun x84 () Int)
(declare-fun x171 (Int) Int)
(declare-fun x36 () Bool)
(declare-fun x7 () Int)
(declare-fun x394 () Bool)
(declare-fun x382 () Bool)
(declare-fun x524 () Int)
(declare-fun x231 () Int)
(declare-fun x142 () Int)
(declare-fun x3 () Int)
(declare-fun x451 () Bool)
(declare-fun x511 () Int)
(declare-fun x499 () Int)
(declare-fun x167 () Bool)
(declare-fun x311 () Bool)
(declare-fun x218 () Bool)
(declare-fun x485 () Bool)
(declare-fun x446 () Bool)
(declare-fun x200 () Bool)
(declare-fun x307 () Bool)
(declare-fun x201 () Int)
(declare-fun x83 () Int)
(declare-fun x574 () Bool)
(declare-fun x159 () Bool)
(declare-fun x225 () Bool)
(declare-fun x610 () Int)
(declare-fun x5 () Bool)
(declare-fun x612 () Bool)
(declare-fun x152 () Int)
(declare-fun x15 () Int)
(declare-fun x94 () Bool)
(declare-fun x462 () Bool)
(declare-fun x608 () Bool)
(declare-fun x521 () Bool)
(declare-fun x1 () Bool)
(declare-fun x429 () Int)
(declare-fun x149 () Bool)
(declare-fun x430 () Bool)
(declare-fun x458 () Bool)
(declare-fun x47 () Int)
(declare-fun x396 () Int)
(declare-fun x138 () Bool)
(declare-fun x456 () Bool)
(declare-fun x118 () Int)
(declare-fun x583 () Int)
(declare-fun x560 () Bool)
(declare-fun x61 () Bool)
(declare-fun x259 () Bool)
(declare-fun x507 () Int)
(declare-fun x388 () Int)
(declare-fun x130 () Int)
(declare-fun x413 () Bool)
(declare-fun x220 () Bool)
(declare-fun x450 () Bool)
(declare-fun x545 () Bool)
(declare-fun x437 () Bool)
(declare-fun x397 () Bool)
(declare-fun x517 () Bool)
(declare-fun x116 () Int)
(declare-fun x295 () Bool)
(declare-fun x131 () Int)
(declare-fun x234 () Int)
(declare-fun x594 () Int)
(declare-fun x312 () Int)
(declare-fun x49 () Bool)
(declare-fun x267 () Bool)
(declare-fun x372 () Int)
(declare-fun x379 () Bool)
(declare-fun x492 () Bool)
(declare-fun x353 () Int)
(declare-fun x314 () Int)
(declare-fun x576 () Bool)
(declare-fun x178 () Int)
(declare-fun x418 () Bool)
(declare-fun x447 () Bool)
(declare-fun x457 () Int)
(declare-fun x163 () Bool)
(declare-fun x495 () Bool)
(declare-fun x217 () Bool)
(declare-fun x40 () Int)
(declare-fun x496 () Bool)
(declare-fun x79 () Bool)
(declare-fun x515 () Bool)
(declare-fun x500 () Int)
(declare-fun x389 () Bool)
(declare-fun x357 (Int Int) Int)
(declare-fun x598 () Bool)
(declare-fun x323 () Bool)
(declare-fun x370 () Int)
(declare-fun x516 () Int)
(declare-fun x497 () Bool)
(declare-fun x46 () Bool)
(declare-fun x590 () Int)
(declare-fun x206 () Int)
(declare-fun x531 () Bool)
(declare-fun x243 () Bool)
(declare-fun x16 () Bool)
(declare-fun x362 () Bool)
(declare-fun x254 () Int)
(declare-fun x308 () Int)
(declare-fun x209 () Bool)
(declare-fun x123 () Bool)
(declare-fun x78 () Bool)
(declare-fun x483 () Int)
(declare-fun x73 () Int)
(declare-fun x284 () Int)
(declare-fun x566 () Bool)
(declare-fun x204 () Bool)
(declare-fun x337 () Bool)
(declare-fun x351 () Bool)
(declare-fun x102 () Bool)
(declare-fun x361 () Int)
(declare-fun x282 () Int)
(declare-fun x24 () Int)
(declare-fun x189 () Bool)
(declare-fun x373 () Bool)
(declare-fun x569 () Bool)
(declare-fun x121 () Int)
(declare-fun x93 () Bool)
(declare-fun x59 () Int)
(declare-fun x98 () Bool)
(declare-fun x226 () Bool)
(declare-fun x86 () Bool)
(declare-fun x72 () Bool)
(declare-fun x417 () Bool)
(declare-fun x103 () Bool)
(declare-fun x41 () Int)
(declare-fun x416 () Bool)
(declare-fun x74 () Bool)
(declare-fun x595 () Bool)
(declare-fun x6 () Bool)
(declare-fun x154 () Bool)
(declare-fun x407 () Bool)
(declare-fun x440 () Bool)
(declare-fun x395 () Bool)
(declare-fun x257 () Int)
(declare-fun x448 (Int) Int)
(declare-fun x153 () Bool)
(declare-fun x609 () Bool)
(declare-fun x35 () Int)
(declare-fun x224 () Int)
(declare-fun x480 () Bool)
(declare-fun x297 () Bool)
(declare-fun x408 () Int)
(declare-fun x405 () Int)
(declare-fun x251 () Bool)
(declare-fun x107 (Int Int) Int)
(declare-fun x385 () Int)
(declare-fun x466 () Bool)
(declare-fun x290 () Int)
(declare-fun x563 () Bool)
(declare-fun x25 () Int)
(declare-fun x540 () Bool)
(declare-fun x92 () Bool)
(declare-fun x482 () Int)
(declare-fun x555 () Bool)
(declare-fun x441 () Bool)
(declare-fun x9 () Bool)
(declare-fun x184 () Bool)
(declare-fun x537 () Int)
(declare-fun x562 () Bool)
(declare-fun x552 () Int)
(declare-fun x432 () Bool)
(declare-fun x572 () Int)
(declare-fun x359 () Int)
(declare-fun x113 () Bool)
(declare-fun x247 () Bool)
(declare-fun x442 () Int)
(declare-fun x120 () Int)
(declare-fun x553 () Bool)
(declare-fun x109 () Bool)
(declare-fun x289 () Bool)
(declare-fun x371 () Bool)
(declare-fun x331 () Int)
(declare-fun x182 () Bool)
(declare-fun x82 () Bool)
(declare-fun x265 () Bool)
(declare-fun x533 () Bool)
(declare-fun x534 () Bool)
(declare-fun x134 () Bool)
(declare-fun x343 () Bool)
(declare-fun x302 () Int)
(declare-fun x465 () Bool)
(declare-fun x383 () Bool)
(declare-fun x317 () Int)
(declare-fun x501 () Bool)
(declare-fun x510 () Bool)
(declare-fun x578 () Int)
(declare-fun x286 () Bool)
(declare-fun x237 () Bool)
(declare-fun x614 () Bool)
(declare-fun x449 () Bool)
(declare-fun x186 () Bool)
(declare-fun x341 () Int)
(declare-fun x426 () Bool)
(declare-fun x581 () Bool)
(declare-fun x2 () Bool)
(declare-fun x150 () Bool)
(declare-fun x52 () Bool)
(declare-fun x30 () Bool)
(declare-fun x235 () Int)
(declare-fun x539 () Bool)
(declare-fun x183 () Bool)
(declare-fun x400 () Bool)
(declare-fun x181 () Bool)
(declare-fun x467 () Int)
(declare-fun x193 () Int)
(declare-fun x51 () Bool)
(declare-fun x310 () Bool)
(declare-fun x532 () Bool)
(declare-fun x208 () Bool)
(declare-fun x173 () Bool)
(declare-fun x613 () Bool)
(declare-fun x230 () Bool)
(declare-fun x238 () Int)
(declare-fun x587 () Bool)
(declare-fun x505 () Int)
(declare-fun x252 () Bool)
(declare-fun x266 () Bool)
(declare-fun x157 () Int)
(declare-fun x570 () Bool)
(declare-fun x490 () Bool)
(declare-fun x205 () Bool)
(declare-fun x329 () Int)
(declare-fun x347 () Int)
(declare-fun x292 () Bool)
(declare-fun x526 () Bool)
(declare-fun x263 () Bool)
(declare-fun x188 () Int)
(declare-fun x45 () Int)
(declare-fun x299 () Bool)
(declare-fun x241 () Int)
(declare-fun x196 () Int)
(declare-fun x548 () Bool)
(declare-fun x81 () Bool)
(declare-fun x187 () Bool)
(declare-fun x519 () Int)
(declare-fun x459 () Bool)
(declare-fun x18 () Bool)
(declare-fun x488 () Bool)
(declare-fun x68 () Int)
(declare-fun x487 () Bool)
(declare-fun x32 () Bool)
(declare-fun x399 () Bool)
(declare-fun x146 () Int)
(declare-fun x126 () Bool)
(declare-fun x392 () Int)
(declare-fun x445 () Bool)
(declare-fun x355 () Bool)
(declare-fun x348 () Int)
(declare-fun x136 () Bool)
(declare-fun x261 () Bool)
(declare-fun x111 () Bool)
(declare-fun x339 () Bool)
(declare-fun x315 () Int)
(declare-fun x89 () Int)
(declare-fun x179 () Bool)
(declare-fun x597 () Bool)
(declare-fun x604 () Bool)
(declare-fun x88 () Int)
(declare-fun x547 () Bool)
(declare-fun x601 () Bool)
(declare-fun x67 () Int)
(declare-fun x428 () Bool)
(declare-fun x80 () Bool)
(declare-fun x360 () Bool)
(declare-fun x454 () Bool)
(declare-fun x246 () Bool)
(declare-fun x221 () Bool)
(declare-fun x477 () Bool)
(declare-fun x127 () Bool)
(declare-fun x615 () Bool)
(declare-fun x424 () Bool)
(declare-fun x575 (Int Int) Int)
(declare-fun x216 () Bool)
(declare-fun x194 () Bool)
(declare-fun x313 () Int)
(declare-fun x390 () Int)
(declare-fun x50 () Int)
(declare-fun x523 () Int)
(declare-fun x542 () Int)
(declare-fun x338 () Bool)
(declare-fun x577 () Int)
(declare-fun x453 () Int)
(declare-fun x268 () Int)
(declare-fun x285 () Bool)
(declare-fun x434 () Bool)
(declare-fun x57 () Bool)
(declare-fun x210 () Int)
(declare-fun x19 () Bool)
(declare-fun x133 () Int)
(declare-fun x280 () Int)
(declare-fun x591 () Bool)
(declare-fun x340 () Bool)
(declare-fun x195 () Bool)
(declare-fun x191 () Bool)
(declare-fun x95 () Bool)
(declare-fun x565 () Bool)
(declare-fun x409 () Int)
(declare-fun x386 () Int)
(declare-fun x199 () Int)
(declare-fun x461 () Bool)
(declare-fun x376 () Int)
(declare-fun x198 () Bool)
(declare-fun x281 () Bool)
(declare-fun x425 () Int)
(declare-fun x494 () Bool)
(declare-fun x97 () Bool)
(declare-fun x115 () Bool)
(declare-fun x498 () Int)
(declare-fun x66 () Bool)
(declare-fun x114 () Bool)
(declare-fun x504 () Int)
(declare-fun x48 () Int)
(declare-fun x287 () Bool)
(declare-fun x380 () Bool)
(declare-fun x232 () Int)
(declare-fun x253 () Bool)
(declare-fun x174 () Bool)
(declare-fun x245 () Int)
(declare-fun x468 () Bool)
(declare-fun x172 () Int)
(declare-fun x422 () Int)
(declare-fun x105 () Bool)
(declare-fun x334 () Int)
(declare-fun x269 () Bool)
(declare-fun x233 () Bool)
(declare-fun x475 () Bool)
(declare-fun x474 () Int)
(declare-fun x436 () Int)
(declare-fun x530 () Int)
(declare-fun x606 () Int)
(declare-fun x602 () Int)
(declare-fun x143 () Int)
(declare-fun x326 () Int)
(declare-fun x584 () Int)
(declare-fun x571 () Bool)
(declare-fun x273 () Bool)
(declare-fun x274 () Bool)
(declare-fun x90 () Bool)
(declare-fun x165 () Int)
(declare-fun x369 () Bool)
(declare-fun x248 () Int)
(declare-fun x481 () Int)
(declare-fun x62 () Bool)
(declare-fun x236 () Int)
(declare-fun x301 () Bool)
(declare-fun x352 () Bool)
(declare-fun x177 () Bool)
(declare-fun x278 () Int)
(declare-fun x412 () Bool)
(declare-fun x58 () Int)
(declare-fun x215 () Bool)
(declare-fun x76 () Bool)
(declare-fun x554 () Bool)
(declare-fun x145 () Bool)
(declare-fun x170 () Bool)
(declare-fun x512 () Bool)
(declare-fun x14 () Bool)
(declare-fun x546 () Bool)
(declare-fun x364 () Bool)
(declare-fun x124 () Bool)
(declare-fun x356 () Int)
(declare-fun x529 () Bool)
(declare-fun x148 () Bool)
(declare-fun x175 () Bool)
(declare-fun x22 () Bool)
(declare-fun x10 () Int)
(declare-fun x404 () Bool)
(declare-fun x31 () Bool)
(declare-fun x53 () Bool)
(declare-fun x335 () Bool)
(declare-fun x43 () Bool)
(declare-fun x377 () Int)
(declare-fun x387 () Bool)
(declare-fun x463 () Bool)
(declare-fun x328 () Bool)
(declare-fun x166 () Int)
(declare-fun x616 () Bool)
(declare-fun x318 () Int)
(declare-fun x455 () Bool)
(declare-fun x112 () Bool)
(declare-fun x378 () Bool)
(declare-fun x363 () Int)
(declare-fun x558 () Bool)
(declare-fun x354 () Int)
(declare-fun x585 () Bool)
(declare-fun x316 () Bool)
(declare-fun x603 () Bool)
(declare-fun x71 (Int Int) Int)
(declare-fun x212 () Bool)
(declare-fun x586 () Bool)
(declare-fun x502 () Bool)
(declare-fun x471 () Bool)
(declare-fun x77 () Int)
(declare-fun x255 () Bool)
(declare-fun x561 () Bool)
(declare-fun x39 () Bool)
(declare-fun x580 () Int)
(declare-fun x589 () Int)
(declare-fun x28 () Int)
(declare-fun x493 () Int)
(declare-fun x559 () Bool)
(declare-fun x541 () Bool)
(declare-fun x214 () Bool)
(declare-fun x342 () Bool)
(declare-fun x391 () Bool)
(declare-fun x262 () Bool)
(declare-fun x605 () Int)
(declare-fun x489 () Bool)
(declare-fun x349 () Int)
(declare-fun x525 (Int) Int)
(declare-fun x556 () Bool)
(declare-fun x508 () Bool)
(declare-fun x333 () Bool)
(declare-fun x346 () Bool)
(declare-fun x207 () Bool)
(declare-fun x435 () Int)
(declare-fun x309 () Bool)
(declare-fun x8 () Int)
(declare-fun x222 () Bool)
(declare-fun x411 () Bool)
(declare-fun x270 () Bool)
(declare-fun x600 () Bool)
(declare-fun x119 () Bool)
(declare-fun x56 () Bool)
(declare-fun x549 () Bool)
(declare-fun x122 () Bool)
(declare-fun x277 () Bool)
(declare-fun x421 () Int)
(declare-fun x423 () Bool)
(declare-fun x117 () Int)
(declare-fun x536 () Bool)
(declare-fun x65 () Int)
(declare-fun x484 () Bool)
(declare-fun x611 () Bool)
(declare-fun x439 () Int)
(declare-fun x415 () Bool)
(declare-fun x239 () Bool)
(declare-fun x162 () Int)
(declare-fun x192 () Bool)
(declare-fun x410 () Int)
(declare-fun x161 () Int)
(declare-fun x291 () Int)
(declare-fun x160 () Int)
(declare-fun x367 () Bool)
(declare-fun x327 () Bool)
(declare-fun x96 () Bool)
(declare-fun x568 () Bool)
(declare-fun x513 () Int)
(declare-fun x402 () Bool)
(declare-fun x141 () Bool)
(declare-fun x527 () Int)
(declare-fun x54 () Bool)
(declare-fun x401 () Int)
(declare-fun x433 () Int)
(declare-fun x306 () Int)
(declare-fun x520 () Int)
(declare-fun x470 () Bool)
(declare-fun x509 () Bool)
(declare-fun x381 () Bool)
(declare-fun x69 () Bool)
(declare-fun x106 () Int)
(declare-fun x300 () Int)
(declare-fun x358 () Bool)
(declare-fun x478 () Int)
(declare-fun x156 () Bool)
(declare-fun x228 () Bool)
(declare-fun x460 () Bool)
(declare-fun x557 () Int)
(declare-fun x564 () Bool)
(declare-fun x276 () Bool)
(declare-fun x374 () Bool)
(declare-fun x101 () Bool)
(declare-fun x26 () Bool)
(declare-fun x100 () Bool)
(declare-fun x305 () Int)
(declare-fun x17 () Bool)
(declare-fun x288 () Bool)
(declare-fun x55 () Bool)
(define-fun x491 ((x543 Int)) Int (ite (and (<= 0 x543) (< x543 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x543 (- x543 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x249 ((x543 Int)) Int (ite (and (> 0 x543) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x543)) (+ x543 115792089237316195423570985008687907853269984665640564039457584007913129639936) x543))
(define-fun x139 ((x543 Int)) Int (ite (and (< x543 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x543)) x543 (ite (and (>= x543 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x543)) (- x543 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x543 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x543)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x543) (x575 x543 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x244 ((x158 Int)) Bool (and (>= x158 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x158)))
(define-fun x365 ((x158 Int)) Bool (and (< x158 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x158)))
(define-fun x264 ((x158 Int) (x21 Int)) Bool (= (x71 x158 x21) (x71 x21 x158)))
(define-fun x64 ((x158 Int) (x21 Int)) Bool (and (=> (and (< 0 x158) (< 0 x21)) (> (x71 x158 x21) 0)) (=> (and (> 0 x158) (< x21 0)) (> (x71 x158 x21) 0)) (=> (and (< 0 x21) (< x158 0)) (> 0 (x71 x158 x21))) (=> (and (< x21 0) (> x158 0)) (< (x71 x158 x21) 0))))
(define-fun x293 ((x158 Int) (x21 Int)) Bool (=> (and (< 0 x158) (> x21 0)) (= (= x21 (x110 (x139 (x71 x158 x21)) x158)) (< (x71 x158 x21) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x4 ((x158 Int) (x21 Int)) Bool (=> (and (not (= 0 x21)) (not (= 0 x158))) (and (= (x110 (x71 x158 x21) x21) x158) (= x21 (x110 (x71 x158 x21) x158)))))
(define-fun x155 ((x158 Int) (x21 Int)) Bool (=> (and (> x21 0) (< 0 x158)) (= (> (x71 x158 x21) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (x110 115792089237316195423570985008687907853269984665640564039457584007913129639935 x158) x21))))
(define-fun x298 ((x158 Int) (x21 Int)) Bool (and (= (x139 (x71 x158 x21)) (x139 (x71 (- x158 115792089237316195423570985008687907853269984665640564039457584007913129639936) x21))) (= (x139 (x71 x158 (- x21 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x139 (x71 x158 x21))) (= (x139 (x71 x158 x21)) (x139 (x71 (- x158 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x21 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x375 ((x158 Int) (x21 Int)) Bool (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x158) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x158)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21) (< 0 x21))) (= (>= (x71 (- x158 115792089237316195423570985008687907853269984665640564039457584007913129639936) x21) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x158) (x110 57896044618658097711785492504343953926634992332820282019728792003956564819968 x21)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x21) (> x21 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x158 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x158))) (= (>= (x110 57896044618658097711785492504343953926634992332820282019728792003956564819968 x158) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x21)) (>= (x71 x158 (- x21 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (<= x21 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x21 0)) (and (<= x158 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x158))) (= (<= (x71 x158 x21) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x110 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21) x158))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21) (<= x21 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (<= x158 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x158))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x71 (- x158 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x21 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x110 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x21)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x158))))))
(define-fun x350 ((x158 Int) (x21 Int)) Bool (and (x64 x158 x21) (x375 x158 x21) (x293 x158 x21) (x264 x158 x21) (x4 x158 x21) (x298 x158 x21) (x155 x158 x21)))
(define-fun x168 ((x158 Int)) Bool (and (= (x71 x158 0) 0) (= (x71 0 x158) 0)))
(define-fun x227 ((x158 Int)) Bool (and (= (x71 x158 1) x158) (= x158 (x71 1 x158))))
(define-fun x403 ((x158 Int)) Bool (and (x168 x158) (x227 x158)))
(define-fun x283 ((x158 Int) (x21 Int)) Bool (=> (and (< 0 x158) (> x21 0)) (and (<= (x110 x158 x21) x158) (<= 0 (x110 x158 x21)))))
(define-fun x60 ((x158 Int) (x21 Int)) Bool (=> (and (and (>= x21 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x21)) (and (< x158 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x158 0))) (and (>= (x110 x158 x21) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 x158 x21)))))
(define-fun x592 ((x158 Int) (x21 Int)) Bool (=> (and (> x158 x21) (> x21 1)) (> x158 (x110 x158 x21))))
(define-fun x544 ((x158 Int) (x21 Int)) Bool (=> (and (> x21 0) (< 0 x158)) (= (= (x110 x158 x21) 0) (> x21 x158))))
(define-fun x607 ((x158 Int)) Bool (= 0 (x110 0 x158)))
(define-fun x518 ((x158 Int)) Bool (= (x110 x158 1) x158))
(define-fun x419 ((x158 Int)) Bool (=> (not (= x158 0)) (= 1 (x110 x158 x158))))
(define-fun x85 ((x158 Int)) Bool (and (x419 x158) (x607 x158) (x518 x158)))
(define-fun x472 ((x158 Int) (x21 Int) (x503 Int) (x42 Int)) Bool (=> (and (>= x158 0) (>= x21 0) (<= x21 x42) (<= x158 x503)) (>= (x71 x503 x42) (x71 x158 x21))))
(define-fun x202 ((x158 Int) (x21 Int) (x503 Int) (x42 Int)) Bool (=> (= x503 x158) (= (- (x71 x158 x21) (x71 x503 x42)) (x71 x158 (- x21 x42)))))
(assert (x365 x302))
(assert (x365 x37))
(assert (= (and x397 (not x256)) x114))
(assert (x403 x8))
(assert (= x486 (and x230 x311)))
(assert (= (=> (and (and (= false x417) x320 (= x157 3)) (and (= x106 x396) (= x396 (x110 x528 3)) (= x531 x208))) x561) x581))
(assert (= (and x562 x52) x218))
(assert (x403 (- x506 x29)))
(assert (= (and (not x17) x156) x407))
(assert (= (and x536 (not x601)) x586))
(assert (x472 x8 x528 x372 x506))
(assert (= (and (not x229) x114) x31))
(assert (x350 x372 (- x506 x528)))
(assert (= x82 (and x215 x492)))
(assert (x365 x59))
(assert (x403 (- x29 x372)))
(assert (= (and x456 x86) x289))
(assert (and (x375 500 x500) (x4 500 x500) (x155 500 x500) (and (= (x71 500 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 500 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x500) (- (* 500 x500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 500 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 500 x500) (* x500 500)) (x298 500 x500) (x293 500 x500)))
(assert (x403 10))
(assert (x365 x372))
(assert (x403 x29))
(assert (and (x375 400 x8) (x4 400 x8) (x155 400 x8) (and (= (x71 400 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 400 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x8) (- (* 400 x8) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x8))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 400 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 400 x8) (* x8 400)) (x298 400 x8) (x293 400 x8)))
(assert (x403 (- x29 x528)))
(assert (and (x592 x392 3) (x60 x392 3) (x283 x392 3) (x544 x392 3) (=> (and (> 3 0) (< 0 x392)) (and (> (* (x110 x392 3) 3) (- x392 3)) (<= (* (x110 x392 3) 3) x392)))))
(assert (= x441 (and (not x26) x415)))
(assert (x365 x332))
(assert (and (x375 2 x372) (x4 2 x372) (x155 2 x372) (and (= (x71 2 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 2 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x372) (- (* 2 x372) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x372))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 2 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 2 x372) (* x372 2)) (x298 2 x372) (x293 2 x372)))
(assert (x85 500))
(assert (x403 (- x506 x528)))
(assert (= x66 (and x49 x342)))
(assert (x350 x372 x506))
(assert (and (x375 10 x372) (x4 10 x372) (x155 10 x372) (and (= (x71 10 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 10 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x372) (- (* 10 x372) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x372))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 10 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 10 x372) (* x372 10)) (x298 10 x372) (x293 10 x372)))
(assert (= (and x475 x362) x571))
(assert (= x573 (and x239 (not x547))))
(assert (x365 x567))
(assert (= x598 (and x310 x319)))
(assert (= (and (not x252) x260) x109))
(assert (x202 x528 x8 x506 x372))
(assert (x350 x506 (- x372 x29)))
(assert (= (=> (and (and (= x422 x482) (= x422 (x110 x392 2)) (= x274 x136)) (and (= x521 false) x229 (= x390 2))) x297) x446))
(assert (x365 x393))
(assert (= x6 (and x512 x517)))
(assert (and (x375 400 x392) (x4 400 x392) (x155 400 x392) (and (= (x71 400 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 400 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x392) (- (* 400 x392) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x392))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 400 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 400 x392) (* x392 400)) (x298 400 x392) (x293 400 x392)))
(assert (x202 x8 x528 x506 x372))
(assert (x365 x542))
(assert (x365 x235))
(assert (and (x375 3 x361) (x4 3 x361) (x155 3 x361) (and (= (x71 3 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x361) (- (* 3 x361) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x361))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 3 x361) (* x361 3)) (x298 3 x361) (x293 3 x361)))
(assert (and (x592 x8 400) (x60 x8 400) (x283 x8 400) (x544 x8 400) (=> (and (> 400 0) (< 0 x8)) (and (> (* (x110 x8 400) 400) (- x8 400)) (<= (* (x110 x8 400) 400) x8)))))
(assert (and (x375 500 x506) (x4 500 x506) (x155 500 x506) (and (= (x71 500 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 500 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x506) (- (* 500 x506) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x506))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 500 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 500 x506) (* x506 500)) (x298 500 x506) (x293 500 x506)))
(assert (and (x592 x8 3) (x60 x8 3) (x283 x8 3) (x544 x8 3) (=> (and (> 3 0) (< 0 x8)) (and (> (* (x110 x8 3) 3) (- x8 3)) (<= (* (x110 x8 3) 3) x8)))))
(assert (x365 x15))
(assert (and (x592 x29 10) (x60 x29 10) (x283 x29 10) (x544 x29 10) (=> (and (> 10 0) (< 0 x29)) (and (> (* (x110 x29 10) 10) (- x29 10)) (<= (* (x110 x29 10) 10) x29)))))
(assert (x350 x8 (- x528 x506)))
(assert (x403 (- x8 x372)))
(assert (= x247 (and x547 x239)))
(assert (x365 x577))
(assert (x202 x392 x29 x528 x8))
(assert (x365 x234))
(assert (x85 x392))
(assert (and (x592 x8 500) (x60 x8 500) (x283 x8 500) (x544 x8 500) (=> (and (> 500 0) (< 0 x8)) (and (> (* (x110 x8 500) 500) (- x8 500)) (<= (* (x110 x8 500) 500) x8)))))
(assert (= x358 (=> (and (and (= 400 x133) (= false x295) x144) (and (= (x110 x372 400) x280) (= x588 x591) (= x280 x347))) x533)))
(assert (x365 x377))
(assert (x365 x520))
(assert (x365 x282))
(assert (x365 x422))
(assert (= (=> (and (and (= 500 x130) (= false x54) x185) (and (= x106 x572) (= x531 x208) (= x572 (x110 x528 500)))) x561) x502))
(assert (and (x375 400 x334) (x4 400 x334) (x155 400 x334) (and (= (x71 400 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 400 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x334) (- (* 400 x334) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x334))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 400 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 400 x334) (* x334 400)) (x298 400 x334) (x293 400 x334)))
(assert (= x380 (=> (and (and (= x28 (x110 x392 10)) (= x136 x274) (= x482 x28)) (and (= 10 x476) (= x18 false) x80)) x297)))
(assert (x365 x482))
(assert (and (x375 3 x506) (x4 3 x506) (x155 3 x506) (and (= (x71 3 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x506) (- (* 3 x506) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x506))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 3 x506) (* x506 3)) (x298 3 x506) (x293 3 x506)))
(assert (x472 x506 x372 x392 x29))
(assert (x365 x583))
(assert (and (x375 10 x506) (x4 10 x506) (x155 10 x506) (and (= (x71 10 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 10 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x506) (- (* 10 x506) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x506))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 10 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 10 x506) (* x506 10)) (x298 10 x506) (x293 10 x506)))
(assert (= x91 (and x510 x443)))
(assert (x85 3))
(assert (x365 x308))
(assert (= x220 (and x468 x79)))
(assert (= (and x340 (not x174)) x449))
(assert (= x250 (and x174 x340)))
(assert (and (x592 x29 400) (x60 x29 400) (x283 x29 400) (x544 x29 400) (=> (and (> 400 0) (< 0 x29)) (and (> (* (x110 x29 400) 400) (- x29 400)) (<= (* (x110 x29 400) 400) x29)))))
(assert (x350 x372 (- x506 x29)))
(assert (x350 x8 (- x528 x372)))
(assert (x365 x359))
(assert (x365 x28))
(assert (= (and x294 (not x458)) x16))
(assert (x365 x421))
(assert (x403 (- x8 x506)))
(assert (x350 x528 (- x8 x392)))
(assert (= (and x604 x595) x145))
(assert (x365 x254))
(assert (= (and x426 (not x108)) x156))
(assert (x202 x372 x506 x29 x392))
(assert (x365 x361))
(assert (= (and x455 x240) x137))
(assert (x365 x433))
(assert (x365 x172))
(assert (= x539 (and x269 x546)))
(assert (= x182 (and x536 x601)))
(assert (= (=> (and (and (= x196 3) (= x398 false) x310) (and (= (x110 x372 3) x201) (= x591 x588) (= x201 x347))) x533) x613))
(assert (= (and x109 x344) x411))
(assert (x403 (- x8 x392)))
(assert (= x381 (=> (and (and (= 3 x542) (= x488 false) x230) (and (= x274 x136) (= x482 x386) (= (x110 x392 3) x386))) x297)))
(assert (and (x375 2 x361) (x4 2 x361) (x155 2 x361) (and (= (x71 2 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 2 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x361) (- (* 2 x361) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x361))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 2 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 2 x361) (* x361 2)) (x298 2 x361) (x293 2 x361)))
(assert (= (and x265 x565) x484))
(assert (x365 x305))
(assert (and (x375 2 x29) (x4 2 x29) (x155 2 x29) (and (= (x71 2 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 2 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x29) (- (* 2 x29) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x29))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 2 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 2 x29) (* x29 2)) (x298 2 x29) (x293 2 x29)))
(assert (x365 x104))
(assert (x350 x392 (- x29 x528)))
(assert (and (x592 x8 10) (x60 x8 10) (x283 x8 10) (x544 x8 10) (=> (and (> 10 0) (< 0 x8)) (and (> (* (x110 x8 10) 10) (- x8 10)) (<= (* (x110 x8 10) 10) x8)))))
(assert (x472 x506 x372 x528 x8))
(assert (x365 x132))
(assert (x365 x504))
(assert (= (and x138 (not x470)) x277))
(assert (x202 x29 x392 x506 x372))
(assert (x472 x372 x506 x528 x8))
(assert (= x389 (=> (and (= x178 (x491 (+ x117 x146))) (not (= x590 1245370514)) (not (= 149895259 x590)) (= (+ x567 x164) x345) x271 (= x567 x15) (= x271 (<= x345 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x413 (or x559 x124)) (= x117 x41) (>= 1461501637330902918203684832716283019655932542975 x329) (> x457 0) (= (x448 x329) x457) x343 (= x610 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x313 x77) (= x41 x392) (= x459 (<= x481 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x559 (= x392 0)) (= x274 (and x459 x43)) (= x164 x313) (= x433 (x525 x329)) (= (< 0 (x448 x329)) x343) (= x500 x67) (= x481 (x71 x392 x29)) (> x329 0) (= x29 x40) (= x43 (not (= 0 x500))) (>= x433 0) (= x41 x15) (= 2685885107 x590) (= x124 (= x29 0)) (= x77 x146)) (and (=> (and (and x373 (= x373 (not x413)) (= (= x500 x29) x86)) (not x413)) (and (=> (and (and (= x136 x274) x86 (= x482 x392)) x86) x297) (=> (and (and (= (= x392 x500) x466) x556 (= (not x86) x556)) (not x86)) (and (=> (and x466 (and x466 (= x29 x482) (= x274 x136))) x297) (=> (and (and (= x321 (= x29 x405)) x92 (= (* x500 2) x405) (= x92 (not x466))) (not x466)) (and (=> (and (and (= (not x321) x549) (= x256 (= x392 x385)) (= x385 (* x500 2)) x549) (not x321)) (and (=> (and (and (= (x139 (* 2 x29)) x498) (= x274 x136) (= x498 x482) x256) x256) x297) (=> (and (and (= (= x589 x500) x229) (= x599 (not x256)) (= x589 (* x29 2)) x599) (not x256)) (and (=> x229 x446) (=> (and (not x229) (and (= (= x129 x500) x608) (= x81 (not x229)) x81 (= x129 (* x392 2)))) (and (=> (and (not x608) (and x225 (= x65 (* x500 3)) (= x173 (= x29 x65)) (= x225 (not x608)))) (and (=> (and x173 (and (= x136 x274) (= x421 (x139 (* 3 x392))) (= x421 x482) x173)) x297) (=> (and (and (= (* 3 x500) x83) (= x296 (not x173)) (= (= x392 x83) x307) x296) (not x173)) (and (=> (and (and (= (* 3 x29) x197) (= x369 (not x307)) (= (= x500 x197) x230) x369) (not x307)) (and (=> (and (not x230) (and (= (= x500 x522) x275) (= (* x392 3) x522) x19 (= (not x230) x19))) (and (=> (and (not x275) (and (= (* 10 x500) x120) x183 (= (not x275) x183) (= x204 (= x120 x29)))) (and (=> (and (and x204 (= x274 x136) (= x84 x482) (= x84 (x139 (* x392 10)))) x204) x297) (=> (and (and x189 (= x192 (= x578 x392)) (= (* 10 x500) x578) (= (not x204) x189)) (not x204)) (and (=> (and (and (= x136 x274) (= x132 x482) (= (x139 (* x29 10)) x132) x192) x192) x297) (=> (and (and (= (* 10 x29) x429) (= x80 (= x500 x429)) x263 (= (not x192) x263)) (not x192)) (and (=> (and (and (= (not x80) x597) (= (* x392 10) x341) (= (= x500 x341) x122) x597) (not x80)) (and (=> (and (and (= (= x29 x118) x546) (= x118 (* x500 500)) (= (not x122) x115) x115) (not x122)) (and (=> (and x546 (and (= x274 x136) x546 (= x557 (x139 (* 500 x392))) (= x557 x482))) x297) (=> (and (and (= x465 (= x392 x580)) (= (not x546) x33) (= (* 500 x500) x580) x33) (not x546)) (and (=> (and (not x465) (and (= x211 (not x465)) (= (* x29 500) x435) x211 (= x362 (= x500 x435)))) (and (=> (and (and (= (= x500 x530) x233) x330 (= x330 (not x362)) (= (* 500 x392) x530)) (not x362)) (and (=> (and (and (= x121 (* 400 x500)) x270 (= (= x29 x121) x243) (= x270 (not x233))) (not x233)) (and (=> (and (and x243 (= x504 x482) (= x274 x136) (= (x139 (* x392 400)) x504)) x243) x297) (=> (and (and x74 (= x74 (not x243)) (= (* 400 x500) x453) (= (= x392 x453) x322)) (not x243)) (and (=> (and x322 (and (= (x139 (* 400 x29)) x537) x322 (= x136 x274) (= x482 x537))) x297) (=> (and (and (= (= x500 x73) x355) x585 (= x73 (* x29 400)) (= (not x322) x585)) (not x322)) (and (=> (and (not x355) (and (= x273 (not x355)) x273 (= (* x392 400) x190) (= x443 (= x500 x190)))) (and (=> (and (not x443) (and x150 (= x359 0) (= false x102) (= x136 x102) (= x359 x482) (= x150 (not x443)))) x297) (=> x443 x335))) (=> x355 x428))))))) (=> x233 x57))) (=> x362 x463))) (=> (and x465 (and (= x136 x274) (= x482 x376) x465 (= (x139 (* x29 500)) x376))) x297))))) (=> x122 x477))) (=> x80 x380))))))) (=> x275 x462))) (=> x230 x381))) (=> (and x307 (and (= (x139 (* 3 x29)) x268) x307 (= x274 x136) (= x268 x482))) x297))))) (=> x608 x566))))))) (=> (and x321 (and (= (x139 (* x392 2)) x231) (= x136 x274) x321 (= x482 x231))) x297))))))) (=> (and x413 (and (= x25 x482) (= x25 0) x413 (= x136 x274))) x297)))))
(assert (x403 (- x506 x8)))
(assert (and (x375 400 x361) (x4 400 x361) (x155 400 x361) (and (= (x71 400 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 400 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x361) (- (* 400 x361) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x361))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 400 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 400 x361) (* x361 400)) (x298 400 x361) (x293 400 x361)))
(assert (= (and x397 x256) x195))
(assert (x244 x329))
(assert (and (= (* 2 (x110 x29 2)) (- x29 (x107 1 x29))) (x544 x29 2) (=> (and (> 2 0) (< 0 x29)) (and (> (* (x110 x29 2) 2) (- x29 2)) (<= (* (x110 x29 2) 2) x29))) (x60 x29 2) (x283 x29 2) (x592 x29 2)))
(assert (= x576 (=> (and (and x468 (= false x451) (= 2 x520)) (and (= x106 x326) (= x531 x208) (= x326 (x110 x8 2)))) x561)))
(assert (x365 x165))
(assert (x202 x372 x506 x8 x528))
(assert (= (and x608 x31) x352))
(assert (x202 x372 x506 x392 x29))
(assert (= (and x252 x260) x191))
(assert (= (and x80 x123) x100))
(assert (= x346 (and x573 (not x144))))
(assert (= x555 (and x426 x108)))
(assert (and (= (* 2 (x110 x392 2)) (- x392 (x107 1 x392))) (x544 x392 2) (=> (and (> 2 0) (< 0 x392)) (and (> (* (x110 x392 2) 2) (- x392 2)) (<= (* (x110 x392 2) 2) x392))) (x60 x392 2) (x283 x392 2) (x592 x392 2)))
(assert (x85 x372))
(assert (= (=> (and (and (= 2 x236) (= x281 false) x438) (and (= x591 x588) (= x602 (x110 x372 2)) (= x347 x602))) x533) x454))
(assert (x365 x386))
(assert (= x198 (and x266 x185)))
(assert (x365 x366))
(assert (and (x592 x392 10) (x60 x392 10) (x283 x392 10) (x544 x392 10) (=> (and (> 10 0) (< 0 x392)) (and (> (* (x110 x392 10) 10) (- x392 10)) (<= (* (x110 x392 10) 10) x392)))))
(assert (= (and (not x265) x565) x553))
(assert (x350 x392 (- x29 x8)))
(assert (= x9 (=> (and (and x212 (= x98 false) (= x99 400)) (and (= x37 (x110 x506 400)) (= x37 x347) (= x588 x591))) x533)))
(assert (= (and (not x243) x214) x285))
(assert (x365 x396))
(assert (= x551 (and x568 (not x275))))
(assert (x365 x326))
(assert (= x237 (and x423 x479)))
(assert (x403 x372))
(assert (= x596 (and (not x322) x285)))
(assert (x403 x528))
(assert (x85 400))
(assert (x365 x40))
(assert (= x554 (and (not x466) x56)))
(assert (and (x375 10 x528) (x4 10 x528) (x155 10 x528) (and (= (x71 10 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 10 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x528) (- (* 10 x528) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x528))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 10 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 10 x528) (* x528 10)) (x298 10 x528) (x293 10 x528)))
(assert (x365 x606))
(assert (x365 x312))
(assert (x202 x392 x29 x506 x372))
(assert (x365 x258))
(assert (x365 x67))
(assert (= x568 (and (not x230) x311)))
(assert (= (and x34 (not x194)) x603))
(assert (x365 x408))
(assert (= (and (not x423) x479) x444))
(assert (x472 x392 x29 x528 x8))
(assert (= x287 (and x69 x593)))
(assert (= (=> (and (and x265 (= x332 3) (= x125 false)) (and (= x531 x208) (= x106 x579) (= (x110 x8 3) x579))) x561) x177))
(assert (x472 x29 x392 x372 x506))
(assert (x365 x331))
(assert (= x335 (=> (and (and (= x274 x136) (= x442 (x110 x29 400)) (= x482 x442)) (and (= x165 400) x443 (= x471 false))) x297)))
(assert (x365 x500))
(assert (and (x592 x372 3) (x60 x372 3) (x283 x372 3) (x544 x372 3) (=> (and (> 3 0) (< 0 x372)) (and (> (* (x110 x372 3) 3) (- x372 3)) (<= (* (x110 x372 3) 3) x372)))))
(assert (and (x375 10 x8) (x4 10 x8) (x155 10 x8) (and (= (x71 10 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 10 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x8) (- (* 10 x8) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x8))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 10 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 10 x8) (* x8 10)) (x298 10 x8) (x293 10 x8)))
(assert (and (x592 x372 400) (x60 x372 400) (x283 x372 400) (x544 x372 400) (=> (and (> 400 0) (< 0 x372)) (and (> (* (x110 x372 400) 400) (- x372 400)) (<= (* (x110 x372 400) 400) x372)))))
(assert (x365 x178))
(assert (x365 x557))
(assert (= (and x586 x126) x1))
(assert (x85 2))
(assert (x365 x238))
(assert (x403 (- x392 x8)))
(assert (and (x592 x528 500) (x60 x528 500) (x283 x528 500) (x544 x528 500) (=> (and (> 500 0) (< 0 x528)) (and (> (* (x110 x528 500) 500) (- x528 500)) (<= (* (x110 x528 500) 500) x528)))))
(assert (= (and x495 (not x494)) x455))
(assert (x403 (- x372 x29)))
(assert (x365 x349))
(assert (and (x592 x392 500) (x60 x392 500) (x283 x392 500) (x544 x392 500) (=> (and (> 500 0) (< 0 x392)) (and (> (* (x110 x392 500) 500) (- x392 500)) (<= (* (x110 x392 500) 500) x392)))))
(assert (x350 x372 (- x506 x8)))
(assert (= x574 (and x586 (not x126))))
(assert (= x535 (=> (and (and (= x363 x347) (= x588 x591) (= x363 (x110 x506 10))) (and (= 10 x388) (= x447 false) x292)) x533)))
(assert (x202 x29 x392 x372 x506))
(assert (= x23 (and x441 (not x205))))
(assert (and (x375 10 x500) (x4 10 x500) (x155 10 x500) (and (= (x71 10 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 10 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x500) (- (* 10 x500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 10 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 10 x500) (* x500 10)) (x298 10 x500) (x293 10 x500)))
(assert (= x475 (and (not x465) x616)))
(assert (x365 x146))
(assert (x403 x392))
(assert (x350 x8 (- x528 x29)))
(assert (and (x592 x372 500) (x60 x372 500) (x283 x372 500) (x544 x372 500) (=> (and (> 500 0) (< 0 x372)) (and (> (* (x110 x372 500) 500) (- x372 500)) (<= (* (x110 x372 500) 500) x372)))))
(assert (= x242 (and x538 x540)))
(assert (and (x375 2 x8) (x4 2 x8) (x155 2 x8) (and (= (x71 2 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 2 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x8) (- (* 2 x8) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x8))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 2 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 2 x8) (* x8 2)) (x298 2 x8) (x293 2 x8)))
(assert (x202 x528 x8 x29 x392))
(assert (and (x375 2 x500) (x4 2 x500) (x155 2 x500) (and (= (x71 2 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 2 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x500) (- (* 2 x500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 2 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 2 x500) (* x500 2)) (x298 2 x500) (x293 2 x500)))
(assert (= (and x49 (not x342)) x32))
(assert (x350 x528 (- x8 x29)))
(assert (= (and x212 x346) x560))
(assert (x365 x550))
(assert (= x304 (and x217 x53)))
(assert (= (and x276 x391) x135))
(assert (x350 x29 (- x392 x528)))
(assert (= x367 (and x574 x387)))
(assert (= x434 (and x438 x378)))
(assert (x365 x493))
(assert (= (=> (and (and (= (x110 x8 500) x254) (= x254 x106) (= x208 x531)) (and (= x159 false) (= x308 500) x423)) x561) x209))
(assert (= x469 (and (not x468) x79)))
(assert (and (x592 x506 400) (x60 x506 400) (x283 x506 400) (x544 x506 400) (=> (and (> 400 0) (< 0 x506)) (and (> (* (x110 x506 400) 400) (- x506 400)) (<= (* (x110 x506 400) 400) x506)))))
(assert (x365 x524))
(assert (= (and x444 (not x179)) x276))
(assert (= x76 (and x320 x333)))
(assert (x365 x106))
(assert (= x56 (and (not x86) x456)))
(assert (x403 (- x8 x29)))
(assert (and (x592 x29 500) (x60 x29 500) (x283 x29 500) (x544 x29 500) (=> (and (> 500 0) (< 0 x29)) (and (> (* (x110 x29 500) 500) (- x29 500)) (<= (* (x110 x29 500) 500) x29)))))
(assert (= (=> (and (and (= x290 x482) (= x274 x136) (= x290 (x110 x392 400))) (and (= x427 false) x355 (= 400 x88))) x297) x428))
(assert (= x207 (and x259 x413)))
(assert (= x351 (and x458 x294)))
(assert (= (and x333 (not x320)) x565))
(assert (= (and x399 x95) x141))
(assert (x365 x268))
(assert (x472 x528 x8 x372 x506))
(assert (and (x375 3 x334) (x4 3 x334) (x155 3 x334) (and (= (x71 3 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x334) (- (* 3 x334) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x334))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 3 x334) (* x334 3)) (x298 3 x334) (x293 3 x334)))
(assert (x365 x130))
(assert (x365 x368))
(assert (x365 x582))
(assert (= (and (not x185) x266) x479))
(assert (x365 x347))
(assert (x365 x161))
(assert (x85 x29))
(assert (x85 x506))
(assert (= x217 (and x276 (not x391))))
(assert (x202 x506 x372 x29 x392))
(assert (= (and x346 (not x212)) x78))
(assert (= (and (not x443) x510) x611))
(assert (x365 x3))
(assert (x202 x8 x528 x392 x29))
(assert (= (or x526 x97 x250 x247 x555 x509 x149 x182 x351 x431 x434 x90 x437 x367 x1 x339 x218 x598 x569 x78 x548 x151 x560 x287) x604))
(assert (= (and x292 x23) x431))
(assert (x202 x8 x528 x372 x506))
(assert (x365 x439))
(assert (x365 x414))
(assert (x365 x329))
(assert (= x616 (and (not x546) x269)))
(assert (= x119 (and x355 x596)))
(assert (and (x375 400 x372) (x4 400 x372) (x155 400 x372) (and (= (x71 400 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 400 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x372) (- (* 400 x372) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x372))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 400 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 400 x372) (* x372 400)) (x298 400 x372) (x293 400 x372)))
(assert (and (x375 3 x8) (x4 3 x8) (x155 3 x8) (and (= (x71 3 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x8) (- (* 3 x8) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x8))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 3 x8) (* x8 3)) (x298 3 x8) (x293 3 x8)))
(assert (x365 x99))
(assert (= x72 (and x204 x551)))
(assert (= x163 (and x553 x360)))
(assert (x202 x506 x372 x392 x29))
(assert (= (and x307 x338) x38))
(assert (= x239 (and x574 (not x387))))
(assert (x365 x219))
(assert (= (and x259 (not x413)) x456))
(assert (x365 x572))
(assert (= (and x299 x407) x97))
(assert (x202 x372 x506 x528 x8))
(assert (= (and x205 x441) x90))
(assert (x85 x528))
(assert (x350 x8 (- x528 x392)))
(assert (x365 x84))
(assert (= (and x322 x285) x570))
(assert (and (x375 10 x29) (x4 10 x29) (x155 10 x29) (and (= (x71 10 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 10 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x29) (- (* 10 x29) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x29))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 10 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 10 x29) (* x29 10)) (x298 10 x29) (x293 10 x29)))
(assert (x403 400))
(assert (= (and x603 (not x402)) x399))
(assert (x365 x88))
(assert (x365 x133))
(assert (= (and x75 (not x122)) x269))
(assert (= (and x122 x75) x508))
(assert (not x389))
(assert (and (x375 500 x334) (x4 500 x334) (x155 500 x334) (and (= (x71 500 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 500 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x334) (- (* 500 x334) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x334))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 500 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 500 x334) (* x334 500)) (x298 500 x334) (x293 500 x334)))
(assert (= (and x321 x554) x383))
(assert (x365 x278))
(assert (= x338 (and x440 (not x173))))
(assert (= (=> (and (and x233 (= 500 x414) (= false x46)) (and (= x482 x356) (= x274 x136) (= x356 (x110 x29 500)))) x297) x57))
(assert (and (x592 x528 10) (x60 x528 10) (x283 x528 10) (x544 x528 10) (=> (and (> 10 0) (< 0 x528)) (and (> (* (x110 x528 10) 10) (- x528 10)) (<= (* (x110 x528 10) 10) x528)))))
(assert (x202 x29 x392 x528 x8))
(assert (= x149 (and x382 x449)))
(assert (x365 x584))
(assert (and (x375 500 x392) (x4 500 x392) (x155 500 x392) (and (= (x71 500 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 500 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x392) (- (* 500 x392) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x392))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 500 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 500 x392) (* x392 500)) (x298 500 x392) (x293 500 x392)))
(assert (and (x592 x528 400) (x60 x528 400) (x283 x528 400) (x544 x528 400) (=> (and (> 400 0) (< 0 x528)) (and (> (* (x110 x528 400) 400) (- x528 400)) (<= (* (x110 x528 400) 400) x528)))))
(assert (x403 (- x392 x372)))
(assert (= (and (not x608) x31) x440))
(assert (x403 (- x528 x372)))
(assert (= x489 (or x32 x404 x163 x6 x167 x411 x220 x198 x145 x76 x379 x304 x141 x169 x242 x191 x216 x66 x237 x484 x135 x450 x82 x137)))
(assert (x365 x314))
(assert (and (x375 2 x528) (x4 2 x528) (x155 2 x528) (and (= (x71 2 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 2 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x528) (- (* 2 x528) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x528))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 2 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 2 x528) (* x528 2)) (x298 2 x528) (x293 2 x528)))
(assert (and (x592 x506 3) (x60 x506 3) (x283 x506 3) (x544 x506 3) (=> (and (> 3 0) (< 0 x506)) (and (> (* (x110 x506 3) 3) (- x506 3)) (<= (* (x110 x506 3) 3) x506)))))
(assert (= (and x568 x275) x487))
(assert (x202 x392 x29 x8 x528))
(assert (and (x375 400 x528) (x4 400 x528) (x155 400 x528) (and (= (x71 400 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 400 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x528) (- (* 400 x528) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x528))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 400 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 400 x528) (* x528 400)) (x298 400 x528) (x293 400 x528)))
(assert (and (= (* 2 (x110 x372 2)) (- x372 (x107 1 x372))) (x544 x372 2) (=> (and (> 2 0) (< 0 x372)) (and (> (* (x110 x372 2) 2) (- x372 2)) (<= (* (x110 x372 2) 2) x372))) (x60 x372 2) (x283 x372 2) (x592 x372 2)))
(assert (= x379 (and x34 x194)))
(assert (x365 x201))
(assert (and (x592 x29 3) (x60 x29 3) (x283 x29 3) (x544 x29 3) (=> (and (> 3 0) (< 0 x29)) (and (> (* (x110 x29 3) 3) (- x29 3)) (<= (* (x110 x29 3) 3) x29)))))
(assert (x202 x8 x528 x29 x392))
(assert (= (and (not x95) x399) x260))
(assert (= x216 (and x179 x444)))
(assert (and (= (x71 9 9) 81) (= (x71 27 3) 81) (= (x71 3 3) 9) (= (x71 9 3) 27)))
(assert (= (=> (and (and (= x531 x208) (= x235 (x110 x528 2)) (= x106 x235)) (and (= x545 false) x240 (= 2 x349))) x561) x497))
(assert (= (or x611 x289 x72 x486 x487 x91 x571 x228 x101 x383 x352 x508 x195 x539 x175 x222 x38 x570 x207 x36 x113 x100 x323 x119) x138))
(assert (= x279 (=> (and (and x458 (= x439 2) (= x558 false)) (and (= (x110 x506 2) x366) (= x588 x591) (= x366 x347))) x533)))
(assert (= (=> (and (and (= (or x532 x103) x595) (= x532 (= 0 x528)) (= x63 (x71 x528 x8)) (= x67 x334) (not (= 149895259 x354)) (> x59 0) (= (x448 x329) x59) (= x582 x368) (= x354 2685885107) (not (= x354 1245370514)) (= (= x8 0) x103) (= (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x63) x612) (= (not (= x334 0)) x432) (= x40 x8) (= x178 x528) (= (and x432 x612) x208)) (and (= x582 x347) x591)) (and (=> (and (not x595) (and (= x395 (not x595)) (= x492 (= x8 x334)) x395)) (and (=> (and (and (= x528 x106) x492 (= x531 x208)) x492) x561) (=> (and (and (= (= x528 x334) x512) (= (not x492) x87) x87) (not x492)) (and (=> (and (and x512 (= x8 x106) (= x208 x531)) x512) x561) (=> (and (and (= x461 (not x512)) x461 (= x473 (* 2 x334)) (= x327 (= x473 x8))) (not x512)) (and (=> (and x327 (and (= x550 (x139 (* 2 x528))) (= x550 x106) (= x531 x208) x327)) x561) (=> (and (and (= x467 (* 2 x334)) x371 (= (= x528 x467) x494) (= x371 (not x327))) (not x327)) (and (=> (and (not x494) (and (= (* 2 x8) x70) x563 (= x240 (= x70 x334)) (= x563 (not x494)))) (and (=> (and (and (= (not x240) x153) (= x468 (= x142 x334)) (= (* 2 x528) x142) x153) (not x240)) (and (=> (and (and (= (= x300 x8) x2) (= x300 (* x334 3)) x460 (= x460 (not x468))) (not x468)) (and (=> (and x2 (and (= x106 x206) (= x206 (x139 (* 3 x528))) x2 (= x531 x208))) x561) (=> (and (and (= (* x334 3) x162) (= x538 (= x162 x528)) x94 (= x94 (not x2))) (not x2)) (and (=> (and (and (= (not x538) x186) (= (= x10 x334) x320) (= x10 (* 3 x8)) x186) (not x538)) (and (=> x320 x581) (=> (and (not x320) (and (= x62 (not x320)) (= x188 (* 3 x528)) x62 (= (= x188 x334) x265))) (and (=> x265 x177) (=> (and (not x265) (and (= (not x265) x148) x148 (= x360 (= x8 x507)) (= x507 (* x334 10)))) (and (=> (and x360 (and (= x531 x208) (= (x139 (* x528 10)) x583) (= x583 x106) x360)) x561) (=> (and (not x360) (and (= (not x360) x490) (= x194 (= x528 x203)) x490 (= (* 10 x334) x203))) (and (=> (and (and (= x370 x106) (= (x139 (* 10 x8)) x370) x194 (= x531 x208)) x194) x561) (=> (and (not x194) (and x288 (= (= x318 x334) x402) (= (* x8 10) x318) (= x288 (not x194)))) (and (=> x402 x253) (=> (and (and (= x95 (= x334 x406)) (= (not x402) x111) x111 (= x406 (* 10 x528))) (not x402)) (and (=> x95 x609) (=> (and (not x95) (and (= x418 (not x95)) (= x252 (= x131 x8)) x418 (= (* 500 x334) x131))) (and (=> (and (and (= x208 x531) (= x106 x312) (= (x139 (* 500 x528)) x312) x252) x252) x561) (=> (and (not x252) (and (= x170 (not x252)) (= (= x528 x50) x344) (= (* x334 500) x50) x170)) (and (=> (and (not x344) (and (= (* 500 x8) x45) (= x5 (not x344)) x5 (= (= x45 x334) x185))) (and (=> (and (not x185) (and (= x423 (= x505 x334)) (= x505 (* x528 500)) (= (not x185) x112) x112)) (and (=> x423 x209) (=> (and (not x423) (and (= x605 (* x334 400)) (= x412 (not x423)) x412 (= x179 (= x8 x605)))) (and (=> (and (and x179 (= x531 x208) (= x106 x420) (= (x139 (* 400 x528)) x420)) x179) x561) (=> (and (and x541 (= (* x334 400) x116) (= x541 (not x179)) (= (= x116 x528) x391)) (not x179)) (and (=> (and (not x391) (and (= x261 (not x391)) (= (= x232 x334) x53) x261 (= x232 (* 400 x8)))) (and (=> (and (and (= (* 400 x528) x516) x324 (= (= x334 x516) x342) (= x324 (not x53))) (not x53)) (and (=> x342 x316) (=> (and (not x342) (and (= x7 x106) (= false x364) (= x364 x531) (= 0 x7) x134 (= x134 (not x342)))) x561))) (=> x53 x337))) (=> (and x391 (and (= x531 x208) x391 (= (x139 (* 400 x8)) x278) (= x106 x278))) x561))))))) (=> x185 x502))) (=> (and (and x344 (= x302 x106) (= x208 x531) (= (x139 (* x8 500)) x302)) x344) x561))))))))))))))))) (=> (and (and (= (x139 (* x8 3)) x315) (= x106 x315) x538 (= x208 x531)) x538) x561))))) (=> x468 x576))) (=> x240 x497))) (=> (and x494 (and (= x58 x106) x494 (= x208 x531) (= x58 (x139 (* 2 x8))))) x561))))))))) (=> (and (and (= x531 x208) (= x106 x161) x595 (= x161 0)) x595) x561))) x533))
(assert (= (and x144 x573) x339))
(assert (x202 x392 x29 x372 x506))
(assert (x472 x8 x528 x392 x29))
(assert (x365 x420))
(assert (x365 x280))
(assert (and (x375 400 x29) (x4 400 x29) (x155 400 x29) (and (= (x71 400 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 400 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x29) (- (* 400 x29) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x29))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 400 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 400 x29) (* x29 400)) (x298 400 x29) (x293 400 x29)))
(assert (= x113 (and x214 x243)))
(assert (= (and x407 (not x299)) x378))
(assert (= (and x616 x465) x222))
(assert (x350 x392 (- x29 x506)))
(assert (x365 x552))
(assert (= (and (not x512) x517) x600))
(assert (x365 x348))
(assert (and (x592 x372 10) (x60 x372 10) (x283 x372 10) (x544 x372 10) (=> (and (> 10 0) (< 0 x372)) (and (> (* (x110 x372 10) 10) (- x372 10)) (<= (* (x110 x372 10) 10) x372)))))
(assert (= x463 (=> (and (and (= x353 500) x362 (= false x184)) (and (= x401 (x110 x392 500)) (= x482 x401) (= x274 x136))) x297)))
(assert (= x337 (=> (and (and x53 (= x258 400) (= false x221)) (and (= x208 x531) (= x106 x408) (= (x110 x528 400) x408))) x561)))
(assert (x365 x236))
(assert (= x426 (and (not x147) x277)))
(assert (x403 (- x372 x528)))
(assert (= (and x138 x470) x526))
(assert (and (x375 400 x500) (x4 400 x500) (x155 400 x500) (and (= (x71 400 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 400 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x500) (- (* 400 x500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 400 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 400 x500) (* x500 400)) (x298 400 x500) (x293 400 x500)))
(assert (x365 x376))
(assert (= x394 (and (not x310) x319)))
(assert (= x49 (and x217 (not x53))))
(assert (and (x375 500 x528) (x4 500 x528) (x155 500 x528) (and (= (x71 500 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 500 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x528) (- (* 500 x528) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x528))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 500 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 500 x528) (* x528 500)) (x298 500 x528) (x293 500 x528)))
(assert (= (=> (and (and (= x106 x143) x531) (and (= x493 x368) (= (= x199 x48) x564) (= x524 x199) (= x48 (+ x11 x493)) (= x331 x11) (= x524 x143))) x564) x561))
(assert (x365 x231))
(assert (x202 x506 x372 x8 x528))
(assert (x365 x7))
(assert (= (and x400 (not x233)) x214))
(assert (x365 x579))
(assert (x350 x372 (- x506 x392)))
(assert (and (x375 500 x372) (x4 500 x372) (x155 500 x372) (and (= (x71 500 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 500 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x372) (- (* 500 x372) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x372))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 500 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 500 x372) (* x372 500)) (x298 500 x372) (x293 500 x372)))
(assert (= (and x56 x466) x323))
(assert (x365 x196))
(assert (x85 10))
(assert (x365 x334))
(assert (x202 x29 x392 x8 x528))
(assert (= (=> (and (and (= x430 false) x122 (= 10 x348)) (and (= x584 (x110 x29 10)) (= x482 x584) (= x136 x274))) x297) x477))
(assert (and (x375 2 x392) (x4 2 x392) (x155 2 x392) (and (= (x71 2 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 2 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x392) (- (* 2 x392) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x392))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 2 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 2 x392) (* x392 2)) (x298 2 x392) (x293 2 x392)))
(assert (= x404 (and x2 x469)))
(assert (x403 x361))
(assert (x365 x353))
(assert (= x167 (and x600 x327)))
(assert (= x297 (=> (and (and (= (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x478) x55) (= x425 2685885107) (= (= x506 0) x485) (< 0 x210) (= x506 x40) (= (or x424 x485) x470) (= x331 x410) (= x210 (x448 x329)) (= (= x372 0) x424) (= x77 x372) (not (= x425 149895259)) (= x67 x361) (= (and x55 x501) x588) (not (= x425 1245370514)) (= x478 (x71 x372 x506)) (= (not (= x361 0)) x501)) (and x136 (= x482 x410))) (and (=> (and (not x470) (and (= x147 (= x361 x506)) (= x181 (not x470)) x181)) (and (=> (and x147 (and (= x588 x591) (= x372 x347) x147)) x533) (=> (and (not x147) (and x267 (= (not x147) x267) (= (= x361 x372) x108))) (and (=> (and (and x223 (= x223 (not x108)) (= (= x506 x303) x17) (= (* 2 x361) x303)) (not x108)) (and (=> (and (and (= x588 x591) (= x257 x347) x17 (= (x139 (* x372 2)) x257)) x17) x533) (=> (and (and x301 (= (= x372 x291) x299) (= (not x17) x301) (= (* 2 x361) x291)) (not x17)) (and (=> (and (and (= x591 x588) x299 (= (x139 (* x506 2)) x306) (= x306 x347)) x299) x533) (=> (and (and (= x438 (= x160 x361)) (= (not x299) x51) x51 (= x160 (* 2 x506))) (not x299)) (and (=> (and (and (= (= x361 x594) x458) (= x594 (* x372 2)) (= (not x438) x496) x496) (not x438)) (and (=> x458 x279) (=> (and (and (= (* x361 3) x176) x615 (= (not x458) x615) (= x140 (= x506 x176))) (not x458)) (and (=> (and (and (= x562 (= x372 x436)) x14 (= x14 (not x140)) (= x436 (* x361 3))) (not x140)) (and (=> (and (not x562) (and (= (= x474 x361) x310) x251 (= x251 (not x562)) (= x474 (* 3 x506)))) (and (=> (and (not x310) (and (= x255 (= x224 x361)) (= x224 (* 3 x372)) (= (not x310) x587) x587)) (and (=> x255 x328) (=> (and (not x255) (and (= x511 (* 10 x361)) x534 (= x534 (not x255)) (= x69 (= x511 x506)))) (and (=> (and (and (= (not x69) x529) (= (* x361 10) x166) (= x26 (= x166 x372)) x529) (not x69)) (and (=> (and (not x26) (and (= (not x26) x187) x187 (= (= x361 x513) x205) (= x513 (* x506 10)))) (and (=> x205 x200) (=> (and (not x205) (and (= (* 10 x372) x12) x93 (= (not x205) x93) (= x292 (= x12 x361)))) (and (=> (and (not x292) (and (= (= x506 x527) x174) (= x527 (* 500 x361)) x272 (= x272 (not x292)))) (and (=> (and (and (= (* x361 500) x483) (= (not x174) x105) (= x382 (= x372 x483)) x105) (not x174)) (and (=> (and (and (= (= x361 x519) x601) (= (not x382) x154) x154 (= x519 (* 500 x506))) (not x382)) (and (=> x601 x614) (=> (and (and (= x126 (= x361 x248)) x39 (= x248 (* x372 500)) (= (not x601) x39)) (not x601)) (and (=> x126 x226) (=> (and (and (= x416 (not x126)) x416 (= x387 (= x506 x409)) (= (* x361 400) x409)) (not x126)) (and (=> (and (not x387) (and (= (* 400 x361) x523) (= (not x387) x30) (= (= x372 x523) x547) x30)) (and (=> (and (not x547) (and x384 (= (* 400 x506) x152) (= (not x547) x384) (= x144 (= x361 x152)))) (and (=> (and (not x144) (and (= x212 (= x24 x361)) (= (* 400 x372) x24) (= x480 (not x144)) x480)) (and (=> x212 x9) (=> (and (not x212) (and x286 (= x347 x606) (= x591 x246) (= x286 (not x212)) (= false x246) (= x606 0))) x533))) (=> x144 x358))) (=> (and (and (= x219 x347) (= x591 x588) x547 (= (x139 (* 400 x506)) x219)) x547) x533))) (=> (and x387 (and (= x284 (x139 (* 400 x372))) (= x284 x347) x387 (= x588 x591))) x533))))))) (=> (and x382 (and (= x20 (x139 (* x506 500))) (= x588 x591) x382 (= x20 x347))) x533))) (=> (and x174 (and (= x347 x317) x174 (= x588 x591) (= x317 (x139 (* x372 500))))) x533))) (=> x292 x535))))) (=> (and (and (= x499 x347) x26 (= x591 x588) (= x499 (x139 (* 10 x506)))) x26) x533))) (=> (and x69 (and (= (x139 (* 10 x372)) x245) (= x591 x588) (= x245 x347) x69)) x533))))) (=> x310 x613))) (=> (and x562 (and (= x347 x577) x562 (= x588 x591) (= x577 (x139 (* 3 x506))))) x533))) (=> (and (and (= x591 x588) x140 (= x234 (x139 (* 3 x372))) (= x347 x234)) x140) x533))))) (=> x438 x454))))))) (=> (and x108 (and x108 (= x506 x347) (= x588 x591))) x533))))) (=> (and x470 (and (= 0 x89) x470 (= x347 x89) (= x588 x591))) x533)))))
(assert (= x294 (and x378 (not x438))))
(assert (x365 x68))
(assert (= x123 (and (not x192) x445)))
(assert (= x400 (and (not x362) x475)))
(assert (= (=> (and (and x342 (= false x515) (= 400 x193)) (and (= x68 (x110 x8 400)) (= x531 x208) (= x68 x106))) x561) x316))
(assert (x365 x370))
(assert (x365 x157))
(assert (= x569 (and x255 x394)))
(assert (x403 (- x528 x392)))
(assert (= x517 (and (not x492) x215)))
(assert (x350 x506 (- x372 x8)))
(assert (and (x592 x506 500) (x60 x506 500) (x283 x506 500) (x544 x506 500) (=> (and (> 500 0) (< 0 x506)) (and (> (* (x110 x506 500) 500) (- x506 500)) (<= (* (x110 x506 500) 500) x506)))))
(assert (= (=> (and (and x608 (= false x96) (= 2 x3)) (and (= x282 x482) (= x282 (x110 x29 2)) (= x274 x136))) x297) x566))
(assert (x365 x528))
(assert (x365 x58))
(assert (x403 (- x392 x506)))
(assert (= x609 (=> (and (and x95 (= 10 x241) (= false x61)) (and (= x531 x208) (= (x110 x8 10) x172) (= x172 x106))) x561)))
(assert (x365 x206))
(assert (and (= (* 2 (x110 x528 2)) (- x528 (x107 1 x528))) (x544 x528 2) (=> (and (> 2 0) (< 0 x528)) (and (> (* (x110 x528 2) 2) (- x528 2)) (<= (* (x110 x528 2) 2) x528))) (x60 x528 2) (x283 x528 2) (x592 x528 2)))
(assert (x365 x164))
(assert (= x319 (and x52 (not x562))))
(assert (and (x375 2 x334) (x4 2 x334) (x155 2 x334) (and (= (x71 2 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 2 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x334) (- (* 2 x334) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x334))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 2 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 2 x334) (* x334 2)) (x298 2 x334) (x293 2 x334)))
(assert (and (x375 10 x392) (x4 10 x392) (x155 10 x392) (and (= (x71 10 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 10 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x392) (- (* 10 x392) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x392))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 10 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 10 x392) (* x392 10)) (x298 10 x392) (x293 10 x392)))
(assert (and (x375 10 x334) (x4 10 x334) (x155 10 x334) (and (= (x71 10 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 10 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x334) (- (* 10 x334) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x334))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 10 (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x334 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 10 x334) (* x334 10)) (x298 10 x334) (x293 10 x334)))
(assert (= x536 (and (not x382) x449)))
(assert (x403 (- x528 x506)))
(assert (x365 x245))
(assert (x403 (- x372 x8)))
(assert (x350 x528 x8))
(assert (and (x375 3 x528) (x4 3 x528) (x155 3 x528) (and (= (x71 3 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x528) (- (* 3 x528) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x528))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x528 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 3 x528) (* x528 3)) (x298 3 x528) (x293 3 x528)))
(assert (x472 x29 x392 x528 x8))
(assert (= (=> (and (and x275 (= x22 false) (= 3 x47)) (and (= x27 (x110 x29 3)) (= x136 x274) (= x482 x27))) x297) x462))
(assert (x365 x390))
(assert (and (x592 x528 3) (x60 x528 3) (x283 x528 3) (x544 x528 3) (=> (and (> 3 0) (< 0 x528)) (and (> (* (x110 x528 3) 3) (- x528 3)) (<= (* (x110 x528 3) 3) x528)))))
(assert (x365 x313))
(assert (= (and (not x255) x394) x593))
(assert (and (x375 400 x506) (x4 400 x506) (x155 400 x506) (and (= (x71 400 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 400 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x506) (- (* 400 x506) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x506))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 400 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 400 x506) (* x506 400)) (x298 400 x506) (x293 400 x506)))
(assert (= x397 (and x554 (not x321))))
(assert (x202 x528 x8 x372 x506))
(assert (x365 x44))
(assert (x365 x590))
(assert (x365 x425))
(assert (x350 x392 x29))
(assert (x472 x392 x29 x372 x506))
(assert (x403 500))
(assert (x403 (- x528 x29)))
(assert (x403 x334))
(assert (= x169 (and x495 x494)))
(assert (x365 x199))
(assert (x403 x506))
(assert (= x437 (and x277 x147)))
(assert (x365 x602))
(assert (x403 2))
(assert (= x540 (and (not x2) x469)))
(assert (x365 x356))
(assert (x365 x363))
(assert (x365 x354))
(assert (x350 x29 (- x392 x506)))
(assert (x365 x27))
(assert (x403 3))
(assert (x350 x506 (- x372 x392)))
(assert (x403 (- x29 x506)))
(assert (x365 x25))
(assert (= x75 (and x123 (not x80))))
(assert (x202 x506 x372 x528 x8))
(assert (= (and x455 (not x240)) x79))
(assert (= x52 (and x16 (not x140))))
(assert (= true x259))
(assert (= x200 (=> (and (and x205 (= x305 10) (= false x309)) (and (= (x110 x372 10) x35) (= x35 x347) (= x591 x588))) x533)))
(assert (and (x375 500 x29) (x4 500 x29) (x155 500 x29) (and (= (x71 500 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 500 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x29) (- (* 500 x29) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x29))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 500 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 500 x29) (* x29 500)) (x298 500 x29) (x293 500 x29)))
(assert (and (x375 500 x361) (x4 500 x361) (x155 500 x361) (and (= (x71 500 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 500 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x361) (- (* 500 x361) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x361))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 500 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 500 x361) (* x361 500)) (x298 500 x361) (x293 500 x361)))
(assert (= (=> (and (and (= x374 false) (= 3 x314) x255) (and (= x347 x514) (= (x110 x506 3) x514) (= x591 x588))) x533) x328))
(assert (x365 x257))
(assert (x365 x306))
(assert (x365 x514))
(assert (= (and x593 (not x69)) x415))
(assert (x350 x506 (- x372 x528)))
(assert (x365 x47))
(assert (= (and (not x360) x553) x34))
(assert (and (= (* 2 (x110 x8 2)) (- x8 (x107 1 x8))) (x544 x8 2) (=> (and (> 2 0) (< 0 x8)) (and (> (* (x110 x8 2) 2) (- x8 2)) (<= (* (x110 x8 2) 2) x8))) (x60 x8 2) (x283 x8 2) (x592 x8 2)))
(assert (= x445 (and (not x204) x551)))
(assert (and (x375 2 x506) (x4 2 x506) (x155 2 x506) (and (= (x71 2 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 2 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x506) (- (* 2 x506) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x506))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 2 (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x506 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 2 x506) (* x506 2)) (x298 2 x506) (x293 2 x506)))
(assert (x365 x610))
(assert (x403 (- x29 x8)))
(assert (x365 x11))
(assert (= (and x229 x114) x175))
(assert (x365 x442))
(assert (= x226 (=> (and (and (= x347 x44) (= x591 x588) (= x44 (x110 x506 500))) (and x126 (= x262 false) (= x238 500))) x533)))
(assert (and (x375 10 x361) (x4 10 x361) (x155 10 x361) (and (= (x71 10 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 10 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x361) (- (* 10 x361) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x361))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 10 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 10 x361) (* x361 10)) (x298 10 x361) (x293 10 x361)))
(assert (= (=> (and (and (= (x110 x372 500) x377) (= x347 x377) (= x588 x591)) (and (= x325 false) x601 (= x104 500))) x533) x614))
(assert (x365 x35))
(assert (and (x375 500 x8) (x4 500 x8) (x155 500 x8) (and (= (x71 500 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 500 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x8) (- (* 500 x8) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x8))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 500 (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x8 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 500 x8) (* x8 500)) (x298 500 x8) (x293 500 x8)))
(assert (x365 x210))
(assert (x365 x143))
(assert (= (and (not x327) x600) x495))
(assert (= (and x440 x173) x101))
(assert (x365 x392))
(assert (x472 x372 x506 x392 x29))
(assert (x365 x388))
(assert (= x215 (and x604 (not x595))))
(assert (x350 x29 (- x392 x372)))
(assert (x365 x241))
(assert (and (x592 x506 10) (x60 x506 10) (x283 x506 10) (x544 x506 10) (=> (and (> 10 0) (< 0 x506)) (and (> (* (x110 x506 10) 10) (- x506 10)) (<= (* (x110 x506 10) 10) x506)))))
(assert (x403 (- x392 x528)))
(assert (= x253 (=> (and (and x402 (= x393 10) (= false x127)) (and (= x106 x552) (= x552 (x110 x528 10)) (= x208 x531))) x561)))
(assert (= (and x156 x17) x151))
(assert (and (x375 3 x500) (x4 3 x500) (x155 3 x500) (and (= (x71 3 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x500) (- (* 3 x500) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x500))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x500 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 3 x500) (* x500 3)) (x298 3 x500) (x293 3 x500)))
(assert (x365 x506))
(assert (x350 x392 (- x29 x372)))
(assert (and (x375 3 x392) (x4 3 x392) (x155 3 x392) (and (= (x71 3 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x392) (- (* 3 x392) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x392))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 3 x392) (* x392 3)) (x298 3 x392) (x293 3 x392)))
(assert (= (and x415 x26) x509))
(assert (and (x375 3 x29) (x4 3 x29) (x155 3 x29) (and (= (x71 3 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x29) (- (* 3 x29) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x29))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x29 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 3 x29) (* x29 3)) (x298 3 x29) (x293 3 x29)))
(assert (x365 x499))
(assert (x403 (- x506 x392)))
(assert (x365 x193))
(assert (= (and (not x355) x596) x510))
(assert (x403 (- x372 x392)))
(assert (x350 x528 (- x8 x372)))
(assert (x365 x401))
(assert (x365 x290))
(assert (x365 x41))
(assert (x472 x528 x8 x392 x29))
(assert (x365 x457))
(assert (x365 x77))
(assert (x350 x528 (- x8 x506)))
(assert (x365 x498))
(assert (x365 x317))
(assert (x365 x284))
(assert (x365 x89))
(assert (= x266 (and x109 (not x344))))
(assert (= (and x400 x233) x36))
(assert (and (x592 x392 400) (x60 x392 400) (x283 x392 400) (x544 x392 400) (=> (and (> 400 0) (< 0 x392)) (and (> (* (x110 x392 400) 400) (- x392 400)) (<= (* (x110 x392 400) 400) x392)))))
(assert (= (and x603 x402) x450))
(assert (x85 x8))
(assert (x365 x410))
(assert (x202 x528 x8 x392 x29))
(assert (= (and x192 x445) x228))
(assert (= (and x23 (not x292)) x340))
(assert (and (= (* 2 (x110 x506 2)) (- x506 (x107 1 x506))) (x544 x506 2) (=> (and (> 2 0) (< 0 x506)) (and (> (* (x110 x506 2) 2) (- x506 2)) (<= (* (x110 x506 2) 2) x506))) (x60 x506 2) (x283 x506 2) (x592 x506 2)))
(assert (x365 x476))
(assert (= (and x140 x16) x548))
(assert (x365 x537))
(assert (x365 x29))
(assert (x403 x500))
(assert (and (x375 3 x372) (x4 3 x372) (x155 3 x372) (and (= (x71 3 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 3 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x372) (- (* 3 x372) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x372))) (= (x71 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x71 3 x372) (* x372 3)) (x298 3 x372) (x293 3 x372)))
(assert (= x333 (and x540 (not x538))))
(assert (= x311 (and x338 (not x307))))
(assert (x350 x29 (- x392 x8)))
(assert (x365 x315))
(assert (x365 x117))
(assert (x365 x8))
(assert (x365 x20))
(check-sat)
(exit)
