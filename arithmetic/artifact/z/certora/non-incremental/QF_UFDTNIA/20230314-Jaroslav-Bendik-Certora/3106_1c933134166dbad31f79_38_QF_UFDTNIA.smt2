(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x652 0)) (((x320 (x71 x652) (x1617 x652) (x2065 x652) (x988 x652) (x2186 Int)) (x1266 (x2410 x652) (x2454 x652) (x2302 x652) (x1383 x652) (x1969 x652) (x740 x652) (x1752 Int)) (x1546 (x975 x652) (x481 x652) (x413 x652) (x1992 Int)) (x984 (x925 Int)) (x802 (x2351 x652) (x1230 x652) (x914 Int)) (x1601 (x338 x652) (x1099 Int)) (x1619 (x1392 x652) (x1158 x652) (x1094 x652) (x1572 x652) (x1586 x652) (x1424 Int)) (x1412 (x466 x652) (x1768 x652) (x1758 x652) (x80 x652) (x1949 x652) (x1176 x652) (x1567 x652) (x1551 Int)))))
(declare-fun x2192 () Bool)
(declare-fun x825 () Int)
(declare-fun x838 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1378 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x876 () Bool)
(declare-fun x612 () Bool)
(declare-fun x1182 () Int)
(declare-fun x2072 () Int)
(declare-fun x1514 () Bool)
(declare-fun x1894 () x652)
(declare-fun x2082 () Int)
(declare-fun x2270 () Int)
(declare-fun x2400 () Bool)
(declare-fun x1484 () x652)
(declare-fun x2024 () Bool)
(declare-fun x2385 () Int)
(declare-fun x849 () Int)
(declare-fun x1163 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x250 () Bool)
(declare-fun x1931 () x652)
(declare-fun x1361 () Int)
(declare-fun x2173 () Bool)
(declare-fun x1799 () Int)
(declare-fun x1806 () Int)
(declare-fun x1390 () Bool)
(declare-fun x1582 () Int)
(declare-fun x2086 () x652)
(declare-fun x1238 () Bool)
(declare-fun x116 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x2032 () Int)
(declare-fun x2235 () Int)
(declare-fun x1067 () Int)
(declare-fun x1874 () Int)
(declare-fun x963 () Int)
(declare-fun x272 () Int)
(declare-fun x290 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x2363 () x652)
(declare-fun x2286 () Bool)
(declare-fun x2304 () Int)
(declare-fun x837 (Int) Int)
(declare-fun x2358 () Int)
(declare-fun x1909 () Int)
(declare-fun x209 () Int)
(declare-fun x526 () Int)
(declare-fun x1363 () Int)
(declare-fun x1863 () Bool)
(declare-fun x2040 () x652)
(declare-fun x140 () Bool)
(declare-fun x804 () Bool)
(declare-fun x23 () Int)
(declare-fun x703 () Int)
(declare-fun x1929 () x652)
(declare-fun x1205 () Bool)
(declare-fun x1855 () x652)
(declare-fun x1332 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x2133 () Int)
(declare-fun x1964 () Bool)
(declare-fun x2101 () Int)
(declare-fun x1689 () Int)
(declare-fun x880 () Int)
(declare-fun x2080 () Int)
(declare-fun x855 () Bool)
(declare-fun x803 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x738 () x652)
(declare-fun x132 () Bool)
(declare-fun x1097 () Int)
(declare-fun x712 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x2369 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x267 () Bool)
(declare-fun x1016 () Int)
(declare-fun x1223 () Bool)
(declare-fun x2230 () Int)
(declare-fun x2085 () Bool)
(declare-fun x147 () Int)
(declare-fun x1685 () Bool)
(declare-fun x1525 () Int)
(declare-fun x66 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x1329 () Int)
(declare-fun x435 () Int)
(declare-fun x2127 () Int)
(declare-fun x22 () Int)
(declare-fun x953 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x2216 () Int)
(declare-fun x1060 () Bool)
(declare-fun x2026 () Bool)
(declare-fun x682 () Int)
(declare-fun x2337 () Int)
(declare-fun x224 () Int)
(declare-fun x375 () Bool)
(declare-fun x93 () Bool)
(declare-fun x613 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x1195 () Int)
(declare-fun x2222 () Int)
(declare-fun x437 () Int)
(declare-fun x745 () Int)
(declare-fun x678 () Int)
(declare-fun x112 () Bool)
(declare-fun x595 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x471 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x2408 () Int)
(declare-fun x980 () Int)
(declare-fun x641 () Bool)
(declare-fun x1747 () Int)
(declare-fun x1765 () Bool)
(declare-fun x24 () Bool)
(declare-fun x770 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x1237 () Int)
(declare-fun x2289 () Int)
(declare-fun x1075 () Int)
(declare-fun x1760 () Bool)
(declare-fun x1751 () Int)
(declare-fun x2218 () Bool)
(declare-fun x2308 () Int)
(declare-fun x1312 () Int)
(declare-fun x2191 () Int)
(declare-fun x200 () Int)
(declare-fun x598 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x165 () Int)
(declare-fun x73 () Int)
(declare-fun x879 () Int)
(declare-fun x1214 () Bool)
(declare-fun x178 () Int)
(declare-fun x2138 () Bool)
(declare-fun x1733 () Int)
(declare-fun x464 () Int)
(declare-fun x1503 () Int)
(declare-fun x1764 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x2387 () Int)
(declare-fun x1837 () Bool)
(declare-fun x577 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x317 () Bool)
(declare-fun x1860 () x652)
(declare-fun x959 () x652)
(declare-fun x905 () Int)
(declare-fun x2403 () Bool)
(declare-fun x2233 () Int)
(declare-fun x382 () Int)
(declare-fun x106 () Bool)
(declare-fun x2376 () Int)
(declare-fun x307 () x652)
(declare-fun x21 () Bool)
(declare-fun x2295 () Bool)
(declare-fun x546 () Bool)
(declare-fun x257 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x1876 () x652)
(declare-fun x502 () Bool)
(declare-fun x431 () Int)
(declare-fun x1487 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x1562 () Int)
(declare-fun x1338 () Int)
(declare-fun x2345 () Bool)
(declare-fun x467 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x315 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1736 () Int)
(declare-fun x863 () Int)
(declare-fun x2313 () Bool)
(declare-fun x13 () Int)
(declare-fun x696 () Bool)
(declare-fun x659 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x635 () Bool)
(declare-fun x1043 () Int)
(declare-fun x974 () Int)
(declare-fun x456 () Int)
(declare-fun x152 () Int)
(declare-fun x2001 () Int)
(declare-fun x463 () Bool)
(declare-fun x1178 () Int)
(declare-fun x1241 () Bool)
(declare-fun x1452 () Int)
(declare-fun x1830 () Bool)
(declare-fun x432 () Int)
(declare-fun x350 () x652)
(declare-fun x1782 () Bool)
(declare-fun x248 () Bool)
(declare-fun x866 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x1509 () Int)
(declare-fun x415 () Int)
(declare-fun x1359 () x652)
(declare-fun x601 () Bool)
(declare-fun x252 () Bool)
(declare-fun x376 () Bool)
(declare-fun x479 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x685 () Bool)
(declare-fun x2200 () Int)
(declare-fun x1377 () Bool)
(declare-fun x1218 () Int)
(declare-fun x133 () x652)
(declare-fun x101 () Bool)
(declare-fun x160 () Int)
(declare-fun x2453 () Int)
(declare-fun x14 () Bool)
(declare-fun x653 () Int)
(declare-fun x220 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x707 () Int)
(declare-fun x1039 () Bool)
(declare-fun x86 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x2359 () Int)
(declare-fun x1640 () x652)
(declare-fun x2168 () Int)
(declare-fun x672 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x2245 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x295 () Int)
(declare-fun x1511 () Int)
(declare-fun x1357 () Bool)
(declare-fun x2277 () Bool)
(declare-fun x365 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x363 () Int)
(declare-fun x357 () Int)
(declare-fun x627 () Bool)
(declare-fun x2388 () Bool)
(declare-fun x377 () Int)
(declare-fun x2115 () Int)
(declare-fun x2198 () x652)
(declare-fun x602 () Int)
(declare-fun x1603 () Bool)
(declare-fun x1840 () Int)
(declare-fun x737 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x493 () x652)
(declare-fun x630 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x1132 () Int)
(declare-fun x1055 () Int)
(declare-fun x245 () Int)
(declare-fun x2229 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1125 () Int)
(declare-fun x594 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1776 () Int)
(declare-fun x1346 () Bool)
(declare-fun x939 () Int)
(declare-fun x1942 () Int)
(declare-fun x2436 (Int) Int)
(declare-fun x760 () Int)
(declare-fun x1917 () Int)
(declare-fun x1095 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x1998 () Int)
(declare-fun x956 () Int)
(declare-fun x348 () Int)
(declare-fun x2326 () Int)
(declare-fun x175 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x1422 () x652)
(declare-fun x2406 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1248 () Int)
(declare-fun x919 () Int)
(declare-fun x690 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x669 (x652) Int)
(declare-fun x2407 () Int)
(declare-fun x1829 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x191 () Bool)
(declare-fun x752 () Int)
(declare-fun x1071 () Bool)
(declare-fun x1480 () Int)
(declare-fun x2296 () Int)
(declare-fun x1350 () x652)
(declare-fun x871 (Int) Int)
(declare-fun x2372 () Int)
(declare-fun x721 () x652)
(declare-fun x1154 () Int)
(declare-fun x323 () Int)
(declare-fun x1608 () Int)
(declare-fun x477 () Int)
(declare-fun x1955 () Bool)
(declare-fun x708 () Int)
(declare-fun x593 () Int)
(declare-fun x1971 () Int)
(declare-fun x589 () x652)
(declare-fun x1555 () Bool)
(declare-fun x2122 () Int)
(declare-fun x891 () Bool)
(declare-fun x511 () Bool)
(declare-fun x1433 () Int)
(declare-fun x1505 () Bool)
(declare-fun x1446 () x652)
(declare-fun x2459 () Bool)
(declare-fun x1146 () x652)
(declare-fun x1666 () Bool)
(declare-fun x486 () Int)
(declare-fun x1031 () Int)
(declare-fun x2125 () Int)
(declare-fun x1210 () Bool)
(declare-fun x841 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x720 () Int)
(declare-fun x280 () Int)
(declare-fun x1233 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x1623 () Int)
(declare-fun x1922 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x794 () Int)
(declare-fun x1688 () Bool)
(declare-fun x2282 () Int)
(declare-fun x631 () Int)
(declare-fun x1595 () Int)
(declare-fun x1533 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x1960 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x503 () Int)
(declare-fun x683 () Int)
(declare-fun x1228 () Int)
(declare-fun x47 () x652)
(declare-fun x2004 () Int)
(declare-fun x1827 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x1114 () Int)
(declare-fun x284 () Bool)
(declare-fun x1945 () Bool)
(declare-fun x304 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x403 () Int)
(declare-fun x227 () Int)
(declare-fun x1333 () Bool)
(declare-fun x318 () Int)
(declare-fun x1274 () Bool)
(declare-fun x894 () x652)
(declare-fun x674 () Int)
(declare-fun x1818 () Bool)
(declare-fun x2013 () Int)
(declare-fun x2223 () Bool)
(declare-fun x1374 () Int)
(declare-fun x1866 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1124 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x781 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x305 () Bool)
(declare-fun x2348 () Bool)
(declare-fun x2461 () Int)
(declare-fun x890 () Bool)
(declare-fun x1515 () Int)
(declare-fun x797 () Bool)
(declare-fun x406 () Int)
(declare-fun x1756 () Int)
(declare-fun x510 (Int Int) Int)
(declare-fun x1212 () Bool)
(declare-fun x576 () Bool)
(declare-fun x2022 () x652)
(declare-fun x704 () Int)
(declare-fun x1715 () Int)
(declare-fun x867 () Bool)
(declare-fun x903 () Int)
(declare-fun x505 () Int)
(declare-fun x1181 () Int)
(declare-fun x688 () Int)
(declare-fun x2356 () Bool)
(declare-fun x229 () Int)
(declare-fun x1437 () Int)
(declare-fun x448 () Int)
(declare-fun x817 () Int)
(declare-fun x1300 () Bool)
(declare-fun x518 () Bool)
(declare-fun x2346 () Int)
(declare-fun x2147 () Bool)
(declare-fun x1795 () Int)
(declare-fun x1401 () Int)
(declare-fun x1121 () Bool)
(declare-fun x857 () Bool)
(declare-fun x658 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x1005 () Int)
(declare-fun x1560 () Int)
(declare-fun x167 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x1771 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x3 () Int)
(declare-fun x558 () Int)
(declare-fun x90 () Bool)
(declare-fun x667 () Int)
(declare-fun x88 () Int)
(declare-fun x1983 () Int)
(declare-fun x113 () Int)
(declare-fun x393 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1179 () Int)
(declare-fun x1305 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x931 () Bool)
(declare-fun x111 () Bool)
(declare-fun x1371 () Int)
(declare-fun x354 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x798 () Int)
(declare-fun x201 () Int)
(declare-fun x2405 () Bool)
(declare-fun x508 () Bool)
(declare-fun x16 () Int)
(declare-fun x666 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x2402 () x652)
(declare-fun x967 () Int)
(declare-fun x1477 () Int)
(declare-fun x210 () Bool)
(declare-fun x1921 () Int)
(declare-fun x573 () Int)
(declare-fun x952 () Bool)
(declare-fun x249 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x174 () Int)
(declare-fun x2435 () Int)
(declare-fun x153 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x542 () Int)
(declare-fun x955 () x652)
(declare-fun x345 () Int)
(declare-fun x2232 () Int)
(declare-fun x1631 () Int)
(declare-fun x1789 () Bool)
(declare-fun x1785 () Int)
(declare-fun x2031 () Int)
(declare-fun x1973 () Int)
(declare-fun x700 () Int)
(declare-fun x1391 () Bool)
(declare-fun x27 () Int)
(declare-fun x1142 () Bool)
(declare-fun x2417 () x652)
(declare-fun x1416 () Bool)
(declare-fun x2401 () Int)
(declare-fun x1489 () Bool)
(declare-fun x2108 () Int)
(declare-fun x121 () x652)
(declare-fun x1328 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x373 () Bool)
(declare-fun x1119 () Int)
(declare-fun x1082 () Bool)
(declare-fun x1905 () x652)
(declare-fun x2135 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x2164 () Int)
(declare-fun x2142 () Int)
(declare-fun x1814 (Int Int) Int)
(declare-fun x1056 () Int)
(declare-fun x564 () Bool)
(declare-fun x115 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x725 () Int)
(declare-fun x1593 () Int)
(declare-fun x506 () Int)
(declare-fun x1532 () Int)
(declare-fun x2428 () Int)
(declare-fun x2184 () Int)
(declare-fun x255 () Bool)
(declare-fun x1046 () Int)
(declare-fun x212 () Bool)
(declare-fun x1372 () Int)
(declare-fun x1774 () x652)
(declare-fun x1999 () Int)
(declare-fun x1757 () Int)
(declare-fun x1565 () Bool)
(declare-fun x423 () Int)
(declare-fun x723 () Bool)
(declare-fun x909 () Bool)
(declare-fun x409 () Int)
(declare-fun x1766 () Bool)
(declare-fun x853 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x1841 () x652)
(declare-fun x788 () Int)
(declare-fun x933 () Int)
(declare-fun x2047 () Int)
(declare-fun x2352 () Int)
(declare-fun x35 () Bool)
(declare-fun x1770 () Int)
(declare-fun x309 () Int)
(declare-fun x755 () Bool)
(declare-fun x897 () Int)
(declare-fun x783 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1626 () x652)
(declare-fun x394 () Int)
(declare-fun x1221 () Int)
(declare-fun x341 () Bool)
(declare-fun x960 () Bool)
(declare-fun x1645 () Int)
(declare-fun x208 () Bool)
(declare-fun x1630 () Int)
(declare-fun x97 () Bool)
(declare-fun x852 () Int)
(declare-fun x1636 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x2190 () Int)
(declare-fun x1027 () Int)
(declare-fun x1607 () Int)
(declare-fun x812 () Int)
(declare-fun x1615 () Int)
(declare-fun x2056 () Int)
(declare-fun x1395 () Int)
(declare-fun x2307 () Int)
(declare-fun x512 () Int)
(declare-fun x1451 () Int)
(declare-fun x1620 () Bool)
(declare-fun x1177 (x652) Int)
(declare-fun x2438 () Int)
(declare-fun x2432 () Bool)
(declare-fun x1805 () Int)
(declare-fun x1744 () Int)
(declare-fun x2448 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x726 () Int)
(declare-fun x1596 () Int)
(declare-fun x1343 () Int)
(declare-fun x2409 () Int)
(declare-fun x2423 () Bool)
(declare-fun x145 () Bool)
(declare-fun x1192 () Int)
(declare-fun x359 () Bool)
(declare-fun x1521 () Int)
(declare-fun x2225 () Bool)
(declare-fun x1677 () Int)
(declare-fun x120 () Bool)
(declare-fun x836 () Int)
(declare-fun x1673 () Int)
(declare-fun x2374 () Bool)
(declare-fun x1697 () Int)
(declare-fun x878 () Bool)
(declare-fun x268 () Bool)
(declare-fun x1155 () Int)
(declare-fun x945 () Int)
(declare-fun x2002 () Int)
(declare-fun x625 () Bool)
(declare-fun x1884 () Int)
(declare-fun x1700 () Bool)
(declare-fun x912 () Int)
(declare-fun x1429 () Bool)
(declare-fun x765 () Int)
(declare-fun x2161 () Bool)
(declare-fun x2195 () Int)
(declare-fun x1583 () Int)
(declare-fun x454 (Int Int) Int)
(declare-fun x2210 () Int)
(declare-fun x1968 () Bool)
(declare-fun x1042 () Int)
(declare-fun x907 () Bool)
(declare-fun x235 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x2215 () Int)
(declare-fun x1745 () Int)
(declare-fun x1599 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x20 () Bool)
(declare-fun x816 () Bool)
(declare-fun x2377 () Int)
(declare-fun x660 () Bool)
(declare-fun x869 () Int)
(declare-fun x84 () Bool)
(declare-fun x473 () Bool)
(declare-fun x958 () Bool)
(declare-fun x215 () Bool)
(declare-fun x689 () Int)
(declare-fun x1652 () Bool)
(declare-fun x344 () Int)
(declare-fun x1576 () Bool)
(declare-fun x2234 () Bool)
(declare-fun x555 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x1918 () Int)
(declare-fun x2034 () Int)
(declare-fun x940 () Bool)
(declare-fun x913 () Int)
(declare-fun x380 () Bool)
(declare-fun x944 () Bool)
(declare-fun x724 () Int)
(declare-fun x2199 () Int)
(declare-fun x1995 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x358 () Int)
(declare-fun x1712 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x216 () Int)
(declare-fun x1539 () Int)
(declare-fun x1059 () Bool)
(declare-fun x2159 () Bool)
(declare-fun x1537 () Int)
(declare-fun x2095 () Int)
(declare-fun x67 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1965 () x652)
(declare-fun x1461 () Int)
(declare-fun x1672 () Int)
(declare-fun x585 () Bool)
(declare-fun x2324 () Int)
(declare-fun x41 () Bool)
(declare-fun x228 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1045 () Bool)
(declare-fun x776 () Bool)
(declare-fun x886 () Bool)
(declare-fun x351 () Bool)
(declare-fun x139 () Int)
(declare-fun x1186 () Int)
(declare-fun x671 () Bool)
(declare-fun x664 () Bool)
(declare-fun x2116 () Int)
(declare-fun x1679 () Bool)
(declare-fun x70 () Bool)
(declare-fun x734 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x1196 () Int)
(declare-fun x1638 () Bool)
(declare-fun x370 () Int)
(declare-fun x424 () Bool)
(declare-fun x1466 () Int)
(declare-fun x488 () Bool)
(declare-fun x1959 () Int)
(declare-fun x2265 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x77 () x652)
(declare-fun x811 () Int)
(declare-fun x1577 () Int)
(declare-fun x2023 () Bool)
(declare-fun x1353 () Int)
(declare-fun x218 () x652)
(declare-fun x997 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x374 () Int)
(declare-fun x385 () Int)
(declare-fun x559 () Bool)
(declare-fun x319 () Int)
(declare-fun x1430 () Int)
(declare-fun x54 () Int)
(declare-fun x1275 () Int)
(declare-fun x2311 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x2036 () Int)
(declare-fun x131 () Bool)
(declare-fun x1000 (Int) Int)
(declare-fun x2288 () Bool)
(declare-fun x1904 () Int)
(declare-fun x647 () Bool)
(declare-fun x26 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x628 () Int)
(declare-fun x186 () Int)
(declare-fun x1793 () Int)
(declare-fun x1360 () Bool)
(declare-fun x482 () Int)
(declare-fun x225 () Int)
(declare-fun x1637 (Int) x652)
(declare-fun x2089 () Int)
(declare-fun x1291 () Bool)
(declare-fun x2441 () Int)
(declare-fun x1557 () Int)
(declare-fun x1664 () Int)
(declare-fun x1062 () Int)
(declare-fun x1857 () Int)
(declare-fun x18 () Int)
(declare-fun x1987 () Bool)
(declare-fun x2331 () Int)
(declare-fun x2327 () Int)
(declare-fun x2073 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1587 () Bool)
(declare-fun x1882 () Int)
(declare-fun x1307 () Int)
(declare-fun x722 () Bool)
(declare-fun x1207 () Int)
(declare-fun x2189 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x786 () Int)
(declare-fun x1173 () Int)
(declare-fun x906 () Bool)
(declare-fun x2146 () Int)
(declare-fun x840 () Bool)
(declare-fun x369 () Bool)
(declare-fun x1137 () Int)
(declare-fun x1150 () Bool)
(declare-fun x117 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x2293 () Int)
(declare-fun x1824 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x1209 () x652)
(declare-fun x847 (x652) Int)
(declare-fun x298 () Int)
(declare-fun x830 () Int)
(declare-fun x283 () Int)
(declare-fun x1157 () Bool)
(declare-fun x36 () Int)
(declare-fun x2452 () Int)
(declare-fun x507 () Bool)
(declare-fun x636 (x652) Int)
(declare-fun x1646 (x652) Int)
(declare-fun x1128 () Int)
(declare-fun x823 () Int)
(declare-fun x68 () Bool)
(declare-fun x1781 () Int)
(declare-fun x247 () Int)
(declare-fun x474 () Bool)
(declare-fun x846 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x1393 () Int)
(declare-fun x777 () Int)
(declare-fun x877 () Int)
(declare-fun x1229 () Int)
(declare-fun x1200 () Int)
(declare-fun x292 () Bool)
(declare-fun x680 () Bool)
(declare-fun x637 () Bool)
(declare-fun x801 () Int)
(declare-fun x1460 () Int)
(declare-fun x882 () Int)
(declare-fun x996 () Int)
(declare-fun x1932 () x652)
(declare-fun x695 () Bool)
(declare-fun x1103 () Int)
(declare-fun x910 () Bool)
(declare-fun x1545 () Int)
(declare-fun x698 () Int)
(declare-fun x164 () Int)
(declare-fun x144 () Int)
(declare-fun x1982 () Bool)
(declare-fun x142 () Int)
(declare-fun x2044 () Int)
(declare-fun x2062 () Bool)
(declare-fun x744 () Bool)
(declare-fun x1404 (x652) Int)
(declare-fun x1832 () Bool)
(declare-fun x2203 () Int)
(declare-fun x1260 () Int)
(declare-fun x364 () Bool)
(declare-fun x282 () Bool)
(declare-fun x756 () Int)
(declare-fun x150 () Int)
(declare-fun x634 () Int)
(declare-fun x1986 () Bool)
(declare-fun x1476 () Int)
(declare-fun x2130 () Int)
(declare-fun x2134 () Bool)
(declare-fun x130 () Int)
(declare-fun x1247 () Bool)
(declare-fun x1458 () Int)
(declare-fun x2416 () Int)
(declare-fun x2003 () Bool)
(declare-fun x1826 () Int)
(declare-fun x401 () Bool)
(declare-fun x196 () Bool)
(declare-fun x1520 () Int)
(declare-fun x472 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x934 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x946 (Int) Int)
(declare-fun x1130 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x491 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x2110 () Int)
(declare-fun x1111 () Int)
(declare-fun x2106 () Bool)
(declare-fun x1970 () Int)
(declare-fun x223 () Int)
(declare-fun x616 (Int) Int)
(declare-fun x1216 () Bool)
(declare-fun x1321 () Int)
(declare-fun x1629 () Bool)
(declare-fun x459 () Int)
(declare-fun x1720 () Bool)
(declare-fun x661 () Bool)
(declare-fun x556 () Int)
(declare-fun x1925 () Bool)
(declare-fun x572 () Int)
(declare-fun x1817 () x652)
(declare-fun x2272 () Bool)
(declare-fun x716 () Int)
(declare-fun x192 () Int)
(declare-fun x2340 () Bool)
(declare-fun x100 () Int)
(declare-fun x75 () x652)
(declare-fun x2287 () Bool)
(declare-fun x211 () Int)
(declare-fun x881 () Bool)
(declare-fun x1944 () Int)
(declare-fun x2433 () Bool)
(declare-fun x1861 () Int)
(declare-fun x1279 () Int)
(declare-fun x1337 () Int)
(declare-fun x746 () Int)
(declare-fun x1432 () Int)
(declare-fun x381 (x652) Int)
(declare-fun x971 () Bool)
(declare-fun x2266 () Int)
(declare-fun x2360 () Bool)
(declare-fun x334 () Bool)
(declare-fun x340 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x727 () x652)
(declare-fun x1450 () Bool)
(declare-fun x1242 () Int)
(declare-fun x992 () Bool)
(declare-fun x110 () Int)
(declare-fun x2071 () Int)
(declare-fun x2099 () Bool)
(declare-fun x1819 () Int)
(declare-fun x792 () Int)
(declare-fun x1977 () Int)
(declare-fun x2328 () Int)
(declare-fun x1271 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x1762 () Int)
(declare-fun x2006 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x1447 () Int)
(declare-fun x2132 () Int)
(declare-fun x1318 () Bool)
(declare-fun x45 () Int)
(declare-fun x425 () Int)
(declare-fun x2425 () Bool)
(declare-fun x1131 () x652)
(declare-fun x2254 () Bool)
(declare-fun x420 () Int)
(declare-fun x648 () Int)
(declare-fun x799 () Int)
(declare-fun x82 (Int Int) Int)
(declare-fun x1107 () Int)
(declare-fun x2253 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1739 () Int)
(declare-fun x246 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x587 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x2339 () x652)
(declare-fun x1985 () Bool)
(declare-fun x2335 () x652)
(declare-fun x901 () Int)
(declare-fun x1501 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x1831 () Bool)
(declare-fun x96 () Int)
(declare-fun x313 () Bool)
(declare-fun x534 () Bool)
(declare-fun x288 () Int)
(declare-fun x978 () x652)
(declare-fun x2078 () Int)
(declare-fun x1406 () Int)
(declare-fun x833 () Bool)
(declare-fun x2329 () Int)
(declare-fun x850 () Bool)
(declare-fun x2088 (Int) Int)
(declare-fun x2298 () Bool)
(declare-fun x2291 () Int)
(declare-fun x15 () Bool)
(declare-fun x754 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x536 () Bool)
(declare-fun x270 () Bool)
(declare-fun x46 () Bool)
(declare-fun x1299 () Int)
(declare-fun x1454 () Int)
(declare-fun x1106 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x1190 () x652)
(declare-fun x1485 () Bool)
(declare-fun x1041 () Int)
(declare-fun x1864 () Bool)
(declare-fun x476 () Bool)
(declare-fun x265 () Bool)
(declare-fun x2096 () Bool)
(declare-fun x1844 () Int)
(declare-fun x65 () Bool)
(declare-fun x2171 () Int)
(declare-fun x570 () Int)
(declare-fun x314 () Bool)
(declare-fun x1943 () Int)
(declare-fun x1396 () Bool)
(declare-fun x433 () Int)
(declare-fun x848 () Bool)
(declare-fun x717 () Bool)
(declare-fun x629 () Bool)
(declare-fun x63 () Int)
(declare-fun x2030 () Int)
(declare-fun x1070 () Bool)
(declare-fun x1009 () Int)
(declare-fun x1839 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x839 () Bool)
(declare-fun x239 () Int)
(declare-fun x2344 () x652)
(declare-fun x998 () Int)
(declare-fun x2312 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x1077 () Int)
(declare-fun x436 () Int)
(declare-fun x390 () Int)
(declare-fun x662 () x652)
(declare-fun x412 () Int)
(declare-fun x2294 () Bool)
(declare-fun x908 () Bool)
(declare-fun x2318 () Int)
(declare-fun x1669 () Int)
(declare-fun x932 () Bool)
(declare-fun x1174 () Int)
(declare-fun x2321 () Bool)
(declare-fun x349 () Int)
(declare-fun x1815 () Int)
(declare-fun x2176 () Int)
(declare-fun x790 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x2314 () x652)
(declare-fun x2169 () Int)
(declare-fun x834 () Bool)
(declare-fun x2016 () Int)
(declare-fun x1604 () Int)
(declare-fun x1309 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x793 () Bool)
(declare-fun x954 () Bool)
(declare-fun x687 () Int)
(declare-fun x1597 () Bool)
(declare-fun x873 () Int)
(declare-fun x1197 () Int)
(declare-fun x2309 () Int)
(declare-fun x205 () Int)
(declare-fun x2180 () Int)
(declare-fun x1355 () Int)
(declare-fun x1100 () Int)
(declare-fun x2248 () Bool)
(declare-fun x2154 () Int)
(declare-fun x1481 () Bool)
(declare-fun x1153 () Int)
(declare-fun x1434 () Int)
(declare-fun x701 () Int)
(declare-fun x826 () Int)
(declare-fun x607 () Bool)
(declare-fun x1188 () Int)
(declare-fun x1278 () Int)
(declare-fun x1402 () x652)
(declare-fun x2084 () Bool)
(declare-fun x1251 () Int)
(declare-fun x2341 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1019 () Int)
(declare-fun x2155 () Int)
(declare-fun x1026 () Int)
(declare-fun x2087 () Int)
(declare-fun x123 () Int)
(declare-fun x1426 () Bool)
(declare-fun x567 () Int)
(declare-fun x990 () Int)
(declare-fun x1655 () Int)
(declare-fun x1740 () Bool)
(declare-fun x122 () Int)
(declare-fun x513 () Bool)
(declare-fun x2066 () x652)
(declare-fun x104 () Int)
(declare-fun x789 () Bool)
(declare-fun x785 () Int)
(declare-fun x1418 () Bool)
(declare-fun x105 () Int)
(declare-fun x1459 () x652)
(declare-fun x1877 () Int)
(declare-fun x392 () Int)
(declare-fun x1211 () Int)
(declare-fun x638 () Int)
(declare-fun x895 () Int)
(declare-fun x554 () Int)
(declare-fun x844 () Int)
(declare-fun x1647 () Int)
(declare-fun x1 () Int)
(declare-fun x1919 () Bool)
(declare-fun x626 () Bool)
(declare-fun x2316 () Int)
(declare-fun x936 () Bool)
(declare-fun x989 () Int)
(declare-fun x107 (Int) Int)
(declare-fun x2083 () Bool)
(declare-fun x540 () Int)
(declare-fun x2354 () Bool)
(declare-fun x1589 () Int)
(declare-fun x109 () Bool)
(declare-fun x1590 (x652) Int)
(declare-fun x352 () Int)
(declare-fun x1397 () Bool)
(declare-fun x52 () Int)
(declare-fun x2217 () Int)
(declare-fun x702 () Int)
(declare-fun x343 () Bool)
(declare-fun x1809 (Int) Int)
(declare-fun x1258 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x388 () Int)
(declare-fun x278 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x417 () Int)
(declare-fun x1850 () Bool)
(declare-fun x736 () Int)
(declare-fun x609 () Bool)
(declare-fun x1282 () Int)
(declare-fun x1704 () Bool)
(declare-fun x787 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1166 () Int)
(declare-fun x527 () Int)
(declare-fun x489 () Bool)
(declare-fun x951 () Int)
(declare-fun x499 () Int)
(declare-fun x1185 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x157 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x1676 () Bool)
(declare-fun x1948 () Int)
(declare-fun x1473 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x30 () Int)
(declare-fun x761 () Bool)
(declare-fun x1538 () Int)
(declare-fun x620 () Bool)
(declare-fun x1168 () Int)
(declare-fun x275 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x2098 () Int)
(declare-fun x938 () Int)
(declare-fun x159 () Bool)
(declare-fun x1301 (x652) Int)
(declare-fun x1006 () Int)
(declare-fun x56 () Bool)
(declare-fun x2466 () Int)
(declare-fun x1787 () Bool)
(declare-fun x1496 () Int)
(declare-fun x986 () Bool)
(declare-fun x1867 () Int)
(declare-fun x1162 () x652)
(declare-fun x557 () x652)
(declare-fun x404 () Int)
(declare-fun x2070 () Int)
(declare-fun x1730 () Int)
(declare-fun x1649 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x970 () Int)
(declare-fun x1602 () Bool)
(declare-fun x547 () x652)
(declare-fun x2439 () Int)
(declare-fun x1066 () Int)
(declare-fun x1135 () Int)
(declare-fun x108 () Bool)
(declare-fun x677 (Int) Int)
(declare-fun x705 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x487 () Int)
(declare-fun x1083 () Int)
(declare-fun x198 () Int)
(declare-fun x1297 () Bool)
(declare-fun x171 () Int)
(declare-fun x999 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1011 () Int)
(declare-fun x2009 () Int)
(declare-fun x1198 () x652)
(declare-fun x11 () Int)
(declare-fun x1141 () Bool)
(declare-fun x337 () Int)
(declare-fun x2303 () Int)
(declare-fun x1846 () Int)
(declare-fun x500 () Bool)
(declare-fun x166 (Int) Int)
(declare-fun x643 () Int)
(declare-fun x911 () Int)
(declare-fun x1314 () Bool)
(declare-fun x2211 () Bool)
(declare-fun x531 () Bool)
(declare-fun x387 () Int)
(declare-fun x1994 (Int Int) Int)
(declare-fun x1435 () x652)
(declare-fun x1650 () Int)
(declare-fun x809 () Int)
(declare-fun x143 () Int)
(declare-fun x1531 () Int)
(declare-fun x72 () Bool)
(declare-fun x300 () Int)
(declare-fun x1727 () Bool)
(declare-fun x1463 () Int)
(declare-fun x732 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x397 () Bool)
(declare-fun x203 () Bool)
(declare-fun x619 () Bool)
(declare-fun x2434 () Int)
(declare-fun x1622 () Int)
(declare-fun x163 () Bool)
(declare-fun x2317 () Int)
(declare-fun x1792 () Int)
(declare-fun x190 () Bool)
(declare-fun x2283 () Int)
(declare-fun x2221 () Int)
(declare-fun x1462 () x652)
(declare-fun x263 () Int)
(declare-fun x583 () Bool)
(declare-fun x1881 () Int)
(declare-fun x2097 () Int)
(declare-fun x525 (Int) Int)
(declare-fun x1048 () Int)
(declare-fun x965 () Int)
(declare-fun x1486 () Int)
(declare-fun x1854 () Int)
(declare-fun x1081 () Int)
(declare-fun x214 () Bool)
(declare-fun x1648 () x652)
(declare-fun x1579 () Int)
(declare-fun x1668 () Int)
(declare-fun x1498 () Bool)
(declare-fun x1313 () Int)
(declare-fun x2128 () x652)
(declare-fun x1336 () Int)
(declare-fun x1885 () Int)
(declare-fun x519 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x2273 () Int)
(declare-fun x1717 () Int)
(declare-fun x2043 () Bool)
(declare-fun x1851 () Int)
(declare-fun x398 () Bool)
(declare-fun x2262 () Bool)
(declare-fun x308 () Int)
(declare-fun x639 () Bool)
(declare-fun x864 () Bool)
(declare-fun x2250 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x2449 () Int)
(declare-fun x1989 () Int)
(declare-fun x1193 () Int)
(declare-fun x1231 () Int)
(declare-fun x2263 () Int)
(declare-fun x2008 () Int)
(declare-fun x769 () Int)
(declare-fun x544 () Int)
(declare-fun x2451 () Bool)
(declare-fun x478 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x274 () Int)
(declare-fun x2240 () Int)
(declare-fun x2301 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x1506 () Int)
(declare-fun x1526 () Int)
(declare-fun x2259 () Int)
(declare-fun x563 () Bool)
(declare-fun x509 () Bool)
(declare-fun x1902 () Int)
(declare-fun x356 () Bool)
(declare-fun x1694 () Int)
(declare-fun x2412 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x1286 () Int)
(declare-fun x2397 () x652)
(declare-fun x1843 () Int)
(declare-fun x1939 () Bool)
(declare-fun x1292 () Int)
(declare-fun x253 () Int)
(declare-fun x1901 () Bool)
(declare-fun x1981 () Int)
(declare-fun x458 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x763 () Int)
(declare-fun x1358 () Int)
(declare-fun x1731 () Int)
(declare-fun x2193 () Bool)
(declare-fun x1110 () Int)
(declare-fun x1719 () Int)
(declare-fun x53 () Int)
(declare-fun x1276 () Bool)
(declare-fun x1671 () Int)
(declare-fun x2334 () Bool)
(declare-fun x2446 () Int)
(declare-fun x199 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x2455 () Int)
(declare-fun x1294 () Int)
(declare-fun x1556 () Int)
(declare-fun x1573 () Int)
(declare-fun x1144 () Bool)
(declare-fun x1910 () Int)
(declare-fun x1558 () Int)
(declare-fun x962 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x779 () Bool)
(declare-fun x530 () x652)
(declare-fun x597 () Int)
(declare-fun x1087 () Bool)
(declare-fun x1479 (x652) Int)
(declare-fun x2058 () Int)
(declare-fun x1875 () Bool)
(declare-fun x865 () Int)
(declare-fun x1474 () Bool)
(declare-fun x260 () Int)
(declare-fun x1490 () Int)
(declare-fun x1044 () Int)
(declare-fun x771 () Int)
(declare-fun x279 () Bool)
(declare-fun x232 () Bool)
(declare-fun x718 () x652)
(declare-fun x2038 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1962 () Int)
(declare-fun x766 () Bool)
(declare-fun x7 () Int)
(declare-fun x1085 () Bool)
(declare-fun x1028 () Int)
(declare-fun x1707 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x706 () Int)
(declare-fun x1663 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x1116 () Int)
(declare-fun x400 () Int)
(declare-fun x973 () Bool)
(declare-fun x330 () Int)
(declare-fun x1304 () Bool)
(declare-fun x780 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x427 () x652)
(declare-fun x1483 () Bool)
(declare-fun x1612 () Int)
(declare-fun x1243 () Bool)
(declare-fun x59 () Int)
(declare-fun x419 () Int)
(declare-fun x1913 () Bool)
(declare-fun x1692 () Int)
(declare-fun x1105 () Int)
(declare-fun x407 () Int)
(declare-fun x870 () Bool)
(declare-fun x1240 () Int)
(declare-fun x92 () Bool)
(declare-fun x5 () Int)
(declare-fun x596 () Int)
(declare-fun x819 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x733 () x652)
(declare-fun x1946 () Int)
(declare-fun x1334 () Bool)
(declare-fun x1184 () Int)
(declare-fun x902 () Int)
(declare-fun x1588 () Int)
(declare-fun x391 () Bool)
(declare-fun x1889 () Int)
(declare-fun x2241 () Int)
(declare-fun x742 () Bool)
(declare-fun x197 () Int)
(declare-fun x2114 () Int)
(declare-fun x1940 () Bool)
(declare-fun x1912 () Int)
(declare-fun x2267 () Int)
(declare-fun x37 () Int)
(declare-fun x2151 () Int)
(declare-fun x2162 () Int)
(declare-fun x2117 () Bool)
(declare-fun x2105 () Int)
(declare-fun x316 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x291 () Int)
(declare-fun x1403 () Int)
(declare-fun x923 () x652)
(declare-fun x137 () Int)
(declare-fun x83 () Int)
(declare-fun x2271 () Int)
(declare-fun x835 () Int)
(declare-fun x2174 () Int)
(declare-fun x1887 () Int)
(declare-fun x2315 () Int)
(declare-fun x1657 () Int)
(declare-fun x1578 () Int)
(declare-fun x2411 () Bool)
(declare-fun x360 () Int)
(declare-fun x10 () Bool)
(declare-fun x2444 () Bool)
(declare-fun x767 () Int)
(declare-fun x1091 () Bool)
(declare-fun x219 () Bool)
(declare-fun x443 () Int)
(declare-fun x815 () Int)
(declare-fun x2353 () Int)
(declare-fun x1769 () Int)
(declare-fun x2243 () Bool)
(declare-fun x642 () Int)
(declare-fun x362 () Bool)
(declare-fun x1096 () Int)
(declare-fun x1661 () Bool)
(declare-fun x1748 () Int)
(declare-fun x985 () Int)
(declare-fun x1399 () Int)
(declare-fun x566 () Int)
(declare-fun x460 () Int)
(declare-fun x1801 () Int)
(declare-fun x2049 () Bool)
(declare-fun x693 () Bool)
(declare-fun x2258 () Int)
(declare-fun x603 () Bool)
(declare-fun x2333 () Int)
(declare-fun x2201 () Int)
(declare-fun x633 () Bool)
(declare-fun x582 () Bool)
(declare-fun x2156 () Int)
(declare-fun x1272 () Int)
(declare-fun x739 () Int)
(declare-fun x2255 () x652)
(declare-fun x828 () Bool)
(declare-fun x1518 () x652)
(declare-fun x743 () Bool)
(declare-fun x2367 () Int)
(declare-fun x1653 () Int)
(declare-fun x1456 () Int)
(declare-fun x1187 () Bool)
(declare-fun x296 () Int)
(declare-fun x193 () Bool)
(declare-fun x1471 () x652)
(declare-fun x277 () Int)
(declare-fun x1813 () Bool)
(declare-fun x1117 () Int)
(declare-fun x650 () x652)
(declare-fun x44 () x652)
(declare-fun x2015 () Bool)
(declare-fun x306 () Int)
(declare-fun x1199 () x652)
(declare-fun x1598 () Int)
(declare-fun x1695 () Int)
(declare-fun x2430 () x652)
(declare-fun x858 () Bool)
(declare-fun x60 () Int)
(declare-fun x1890 () Int)
(declare-fun x1472 () Int)
(declare-fun x1613 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x1139 () Int)
(declare-fun x1570 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x347 () Int)
(declare-fun x180 () x652)
(declare-fun x1706 () Bool)
(declare-fun x447 () Bool)
(declare-fun x1084 () Int)
(declare-fun x784 () x652)
(declare-fun x1783 () Bool)
(declare-fun x782 () Int)
(declare-fun x179 () Int)
(declare-fun x2150 () Int)
(declare-fun x2445 () Int)
(declare-fun x1542 () Bool)
(declare-fun x1090 () Int)
(declare-fun x286 () Int)
(declare-fun x1967 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x89 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x276 () Int)
(declare-fun x1296 () Int)
(declare-fun x1836 () Int)
(declare-fun x1991 () Bool)
(declare-fun x1439 () Int)
(declare-fun x151 (Int) Int)
(declare-fun x2052 () x652)
(declare-fun x439 () Int)
(declare-fun x810 () Bool)
(declare-fun x2109 () Int)
(declare-fun x1079 () Int)
(declare-fun x1123 () Int)
(declare-fun x1387 () Int)
(declare-fun x1310 () Int)
(declare-fun x1089 () Int)
(declare-fun x94 () Int)
(declare-fun x818 () Int)
(declare-fun x1690 () Bool)
(declare-fun x673 () Int)
(declare-fun x1078 () Bool)
(declare-fun x1284 () Int)
(declare-fun x226 () Int)
(declare-fun x1160 () Int)
(declare-fun x1440 () Bool)
(declare-fun x773 () Bool)
(declare-fun x445 () x652)
(declare-fun x935 () Bool)
(declare-fun x2368 () Int)
(declare-fun x759 () Int)
(declare-fun x2209 () Bool)
(declare-fun x807 () x652)
(declare-fun x758 () Bool)
(declare-fun x1993 () Int)
(declare-fun x1924 () Int)
(declare-fun x605 () Bool)
(declare-fun x2140 () Bool)
(declare-fun x2090 () Int)
(declare-fun x176 () Int)
(declare-fun x1879 () Int)
(declare-fun x195 () Bool)
(declare-fun x81 () Int)
(declare-fun x2264 () Int)
(declare-fun x2179 () Bool)
(declare-fun x258 () Int)
(declare-fun x2427 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x2456 () Bool)
(declare-fun x796 () Int)
(declare-fun x994 () Bool)
(declare-fun x251 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x2238 () Int)
(declare-fun x532 () Bool)
(declare-fun x1080 () Int)
(declare-fun x916 () Int)
(declare-fun x1419 () Int)
(declare-fun x924 () Bool)
(declare-fun x1848 () Int)
(declare-fun x331 () Int)
(declare-fun x266 () x652)
(declare-fun x2373 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x888 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x1825 () Int)
(declare-fun x1724 () x652)
(declare-fun x492 () Int)
(declare-fun x1507 () Bool)
(declare-fun x2061 () Bool)
(declare-fun x1018 () Int)
(declare-fun x38 () Bool)
(declare-fun x2395 () x652)
(declare-fun x202 () Bool)
(declare-fun x335 () Int)
(declare-fun x972 () Int)
(declare-fun x621 () Int)
(declare-fun x2204 () Int)
(declare-fun x1264 () Bool)
(declare-fun x644 () Int)
(declare-fun x1979 () Int)
(declare-fun x2219 () x652)
(declare-fun x310 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x33 () Int)
(declare-fun x325 () Bool)
(declare-fun x444 () Bool)
(declare-fun x2005 () Int)
(declare-fun x856 () Int)
(declare-fun x1073 () Int)
(declare-fun x549 () Int)
(declare-fun x1504 () Int)
(declare-fun x281 () Int)
(declare-fun x2165 () Int)
(declare-fun x1311 () Int)
(declare-fun x1420 () Int)
(declare-fun x806 () Int)
(declare-fun x2197 () Int)
(declare-fun x134 () Int)
(declare-fun x182 () Bool)
(declare-fun x679 () Int)
(declare-fun x204 () Int)
(declare-fun x501 () Bool)
(declare-fun x329 () Int)
(declare-fun x665 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x2379 () Int)
(declare-fun x39 () Int)
(declare-fun x762 () Int)
(declare-fun x1262 () Int)
(declare-fun x1063 () Bool)
(declare-fun x604 () Int)
(declare-fun x414 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x2257 () Int)
(declare-fun x1129 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x1878 () Int)
(declare-fun x79 () Int)
(declare-fun x1050 () Bool)
(declare-fun x1356 () Int)
(declare-fun x2119 () Int)
(declare-fun x2137 () Int)
(declare-fun x1547 () Int)
(declare-fun x1911 () Int)
(declare-fun x1414 () Int)
(declare-fun x2067 () Int)
(declare-fun x2226 () Bool)
(declare-fun x1580 () Int)
(declare-fun x442 () Int)
(declare-fun x55 () x652)
(declare-fun x824 () Bool)
(declare-fun x1024 () Int)
(declare-fun x2214 () Int)
(declare-fun x1658 () Int)
(declare-fun x655 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x800 () Int)
(declare-fun x714 () Bool)
(declare-fun x575 () Int)
(declare-fun x1268 () Int)
(declare-fun x1549 () Int)
(declare-fun x411 () Int)
(declare-fun x884 () Bool)
(declare-fun x1340 () Int)
(declare-fun x2458 () Int)
(declare-fun x1290 () Bool)
(declare-fun x885 () Int)
(declare-fun x1627 () Int)
(declare-fun x2035 () Bool)
(declare-fun x1202 () Int)
(declare-fun x751 () Bool)
(declare-fun x188 () x652)
(declare-fun x1470 () Int)
(declare-fun x921 () Bool)
(declare-fun x2224 () Int)
(declare-fun x686 () Int)
(declare-fun x1541 () Bool)
(declare-fun x126 (x652) Int)
(declare-fun x1734 () Bool)
(declare-fun x611 () Bool)
(declare-fun x457 () Bool)
(declare-fun x1467 () x652)
(declare-fun x691 () Int)
(declare-fun x1835 () Int)
(declare-fun x670 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x649 () Int)
(declare-fun x632 () Int)
(declare-fun x498 () Bool)
(declare-fun x1798 () x652)
(declare-fun x2269 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x48 () Int)
(declare-fun x2228 () Int)
(declare-fun x2196 () Int)
(declare-fun x172 () Bool)
(declare-fun x98 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x336 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x43 () Bool)
(declare-fun x2194 (Int) Int)
(declare-fun x2375 () Bool)
(declare-fun x920 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x2447 () Int)
(declare-fun x1853 () Bool)
(declare-fun x663 () Bool)
(declare-fun x588 () Int)
(declare-fun x1354 (Int Int) Int)
(declare-fun x261 () Int)
(declare-fun x61 () Int)
(declare-fun x342 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x1249 () Int)
(declare-fun x2330 () Int)
(declare-fun x1732 () Int)
(declare-fun x1047 () Int)
(declare-fun x1122 () Int)
(declare-fun x1772 () Int)
(declare-fun x1400 () Int)
(declare-fun x99 () Bool)
(declare-fun x1883 () Int)
(declare-fun x446 () Bool)
(declare-fun x426 () Bool)
(declare-fun x389 () Int)
(declare-fun x2202 () Bool)
(declare-fun x396 () Bool)
(declare-fun x496 () Int)
(declare-fun x1382 () Bool)
(declare-fun x231 () Int)
(declare-fun x2007 () Int)
(declare-fun x2025 () Bool)
(declare-fun x2450 () Int)
(declare-fun x565 () Int)
(declare-fun x181 () Bool)
(declare-fun x236 () Int)
(declare-fun x461 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x2075 () Int)
(declare-fun x242 () Bool)
(declare-fun x468 () Int)
(declare-fun x1938 () Bool)
(declare-fun x418 () Bool)
(declare-fun x1691 () Int)
(declare-fun x264 () Int)
(declare-fun x2139 () Int)
(declare-fun x569 () Bool)
(declare-fun x429 () x652)
(declare-fun x124 () Int)
(declare-fun x715 () Int)
(declare-fun x361 () Bool)
(declare-fun x1410 () x652)
(declare-fun x1443 () Int)
(declare-fun x851 (x652) Int)
(declare-fun x941 () Int)
(declare-fun x1326 () Int)
(declare-fun x1702 () x652)
(declare-fun x2136 () Int)
(declare-fun x1384 () x652)
(declare-fun x657 () Int)
(declare-fun x2336 () Int)
(declare-fun x1838 () Int)
(declare-fun x899 () Int)
(declare-fun x480 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x1362 () Int)
(declare-fun x2208 () Int)
(declare-fun x1270 () Bool)
(declare-fun x2431 () Int)
(declare-fun x710 () Int)
(declare-fun x614 () Int)
(declare-fun x2365 () Int)
(declare-fun x2429 () Int)
(declare-fun x917 () Bool)
(declare-fun x1482 () Int)
(declare-fun x1794 () Bool)
(declare-fun x568 () Int)
(declare-fun x1660 () Int)
(declare-fun x1025 () Int)
(declare-fun x440 () Int)
(declare-fun x1802 () Int)
(declare-fun x1915 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x1442 () Int)
(declare-fun x2074 () Bool)
(declare-fun x1584 () Int)
(declare-fun x1409 () Int)
(declare-fun x1988 () Int)
(declare-fun x843 () Bool)
(declare-fun x395 () Int)
(declare-fun x987 () Int)
(declare-fun x138 () Int)
(declare-fun x1682 () Bool)
(declare-fun x574 () Bool)
(declare-fun x2041 () Int)
(declare-fun x892 () Bool)
(declare-fun x615 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x1820 () Int)
(declare-fun x2424 () Bool)
(declare-fun x896 () Bool)
(declare-fun x1170 () Int)
(declare-fun x2338 () Bool)
(declare-fun x2391 () Int)
(declare-fun x1665 () Bool)
(declare-fun x2167 () Int)
(declare-fun x379 () Bool)
(declare-fun x516 () Int)
(declare-fun x1916 () Int)
(declare-fun x1581 () Int)
(declare-fun x1828 () Int)
(declare-fun x1628 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x1935 () Int)
(declare-fun x2278 () Bool)
(declare-fun x1797 () Int)
(declare-fun x1317 () Int)
(declare-fun x1899 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x135 () x652)
(declare-fun x1469 () Bool)
(declare-fun x29 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x1319 () Int)
(declare-fun x2292 () Int)
(declare-fun x1759 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x441 () Bool)
(declare-fun x51 (Int) Int)
(declare-fun x136 () Bool)
(declare-fun x515 () Int)
(declare-fun x1659 () Int)
(declare-fun x2460 () Int)
(declare-fun x822 () Int)
(declare-fun x524 () Int)
(declare-fun x623 () Int)
(declare-fun x1625 () Int)
(declare-fun x1289 () Bool)
(declare-fun x434 () Int)
(declare-fun x1191 () Int)
(declare-fun x262 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x521 () Bool)
(declare-fun x1823 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x775 () Int)
(declare-fun x729 () Bool)
(declare-fun x1502 () Int)
(declare-fun x1641 () Bool)
(declare-fun x1413 () Int)
(declare-fun x640 () Bool)
(declare-fun x592 () Int)
(declare-fun x2418 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x1051 () Int)
(declare-fun x311 () Bool)
(declare-fun x299 () Int)
(declare-fun x185 () Int)
(declare-fun x2470 () Bool)
(declare-fun x371 () Bool)
(declare-fun x2177 () Int)
(declare-fun x1280 () Int)
(declare-fun x1369 () Bool)
(declare-fun x2068 () Int)
(declare-fun x154 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x1892 () Int)
(declare-fun x2182 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x372 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x533 () Int)
(declare-fun x2462 () Int)
(declare-fun x1010 () Int)
(declare-fun x757 () Int)
(declare-fun x887 () Bool)
(declare-fun x1954 () Int)
(declare-fun x285 () Bool)
(declare-fun x2305 (Int) Int)
(declare-fun x1245 () Int)
(declare-fun x1903 () Int)
(declare-fun x950 () Bool)
(declare-fun x40 () Int)
(declare-fun x1499 () Int)
(declare-fun x233 () Int)
(declare-fun x1040 () x652)
(declare-fun x560 () x652)
(declare-fun x1763 () Int)
(declare-fun x681 () Int)
(declare-fun x129 () Int)
(declare-fun x2012 () Int)
(declare-fun x2443 () Int)
(declare-fun x504 () Bool)
(declare-fun x1134 () Int)
(declare-fun x1535 () Int)
(declare-fun x399 () Bool)
(declare-fun x1952 () Int)
(declare-fun x1807 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x1049 () Int)
(declare-fun x102 () Int)
(declare-fun x2018 () Int)
(declare-fun x2205 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x915 () Int)
(declare-fun x845 () Bool)
(declare-fun x795 () Bool)
(declare-fun x2284 () Int)
(declare-fun x32 () x652)
(declare-fun x1001 () Int)
(declare-fun x2094 () x652)
(declare-fun x238 () Bool)
(declare-fun x378 () Int)
(declare-fun x2380 () Int)
(declare-fun x34 () Int)
(declare-fun x1891 () Bool)
(declare-fun x1559 () Int)
(declare-fun x451 () Bool)
(declare-fun x453 () Int)
(declare-fun x125 (Int) Int)
(declare-fun x1398 () x652)
(declare-fun x1529 () x652)
(declare-fun x735 () Bool)
(declare-fun x949 () Bool)
(declare-fun x222 () Bool)
(declare-fun x2422 () Int)
(declare-fun x1634 () Int)
(declare-fun x1654 () Int)
(declare-fun x872 () Int)
(declare-fun x1703 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x31 () Bool)
(declare-fun x1020 () Int)
(declare-fun x1076 () Int)
(declare-fun x608 () Bool)
(declare-fun x1870 () Int)
(declare-fun x1701 () Bool)
(declare-fun x2029 () x652)
(declare-fun x2268 () Int)
(declare-fun x2113 () Int)
(declare-fun x528 () Bool)
(declare-fun x484 () Int)
(declare-fun x774 () Int)
(declare-fun x321 () Bool)
(declare-fun x1896 (Int) Int)
(declare-fun x1021 () Int)
(declare-fun x1591 () Bool)
(declare-fun x146 () Bool)
(declare-fun x961 () Int)
(declare-fun x2045 () Int)
(declare-fun x221 () Int)
(declare-fun x2382 () Bool)
(declare-fun x62 () Bool)
(declare-fun x969 () Int)
(declare-fun x449 () Bool)
(declare-fun x430 () Bool)
(declare-fun x968 () Int)
(declare-fun x1852 () Bool)
(declare-fun x868 () Int)
(declare-fun x1007 () Bool)
(declare-fun x942 () Int)
(declare-fun x538 () Int)
(declare-fun x983 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x366 () Int)
(declare-fun x646 () Int)
(declare-fun x450 () Int)
(declare-fun x1339 () x652)
(declare-fun x410 () x652)
(declare-fun x753 () Bool)
(declare-fun x1468 () Int)
(declare-fun x155 () Int)
(declare-fun x127 () Int)
(declare-fun x470 () Int)
(declare-fun x293 () Int)
(declare-fun x741 () Bool)
(declare-fun x2280 () x652)
(declare-fun x2144 () Int)
(declare-fun x2206 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x170 () Int)
(declare-fun x600 () Bool)
(declare-fun x355 () Bool)
(declare-fun x1966 () Int)
(declare-fun x1324 () Int)
(declare-fun x297 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x173 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x2163 () Int)
(declare-fun x2437 () Int)
(declare-fun x2247 () Int)
(declare-fun x578 () Int)
(declare-fun x141 () x652)
(declare-fun x1385 () Int)
(declare-fun x2414 (Int) Int)
(declare-fun x1670 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x893 () Bool)
(declare-fun x1686 () Int)
(declare-fun x2014 () Bool)
(declare-fun x2464 () Bool)
(declare-fun x254 () Int)
(declare-fun x1298 () x652)
(declare-fun x1726 () Bool)
(declare-fun x119 () Int)
(declare-fun x2181 () Int)
(declare-fun x1693 () Int)
(declare-fun x535 () Bool)
(declare-fun x545 () Int)
(declare-fun x900 () Int)
(declare-fun x1145 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x2157 () Int)
(declare-fun x580 () Bool)
(declare-fun x1611 () Int)
(declare-fun x1330 () Int)
(declare-fun x1606 (Int) Int)
(declare-fun x1775 () Bool)
(declare-fun x539 () Int)
(declare-fun x1068 () Int)
(declare-fun x1674 () Bool)
(declare-fun x684 () Int)
(declare-fun x1811 () Int)
(declare-fun x749 () Int)
(declare-fun x1127 () Bool)
(declare-fun x386 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x571 () Bool)
(declare-fun x1914 () Int)
(declare-fun x1796 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x561 () Bool)
(declare-fun x1941 () Int)
(declare-fun x421 () Int)
(declare-fun x1030 () Int)
(declare-fun x243 () Bool)
(declare-fun x1708 () Int)
(declare-fun x1054 () Int)
(declare-fun x2256 () x652)
(declare-fun x118 () Int)
(declare-fun x889 () Int)
(declare-fun x2017 () Bool)
(declare-fun x2361 () Int)
(declare-fun x1530 () Bool)
(declare-fun x617 () Int)
(declare-fun x57 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x1492 () Int)
(declare-fun x1585 () Bool)
(declare-fun x995 () Bool)
(declare-fun x728 () Int)
(declare-fun x1906 () Bool)
(declare-fun x2237 () Int)
(declare-fun x217 (Int) Int)
(declare-fun x2148 () Int)
(declare-fun x17 () Bool)
(declare-fun x584 () Int)
(declare-fun x2249 () Int)
(declare-fun x1219 () Bool)
(declare-fun x1888 () Int)
(declare-fun x1718 () Bool)
(declare-fun x2172 () Int)
(declare-fun x1522 () Int)
(declare-fun x2212 () Bool)
(declare-fun x367 (Int) Int)
(declare-fun x322 () Int)
(declare-fun x1058 () Bool)
(declare-fun x1754 () x652)
(declare-fun x1563 () x652)
(declare-fun x2274 () Int)
(declare-fun x675 () Int)
(declare-fun x1224 () Bool)
(declare-fun x6 () Int)
(declare-fun x162 () x652)
(declare-fun x2170 () Bool)
(declare-fun x1803 () Int)
(declare-fun x2386 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x541 () Int)
(declare-fun x1544 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1293 () Int)
(declare-fun x1038 () Int)
(declare-fun x19 () Bool)
(declare-fun x2276 () Int)
(declare-fun x213 () x652)
(declare-fun x2371 () x652)
(declare-fun x168 () Int)
(declare-fun x1800 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x1069 () Int)
(declare-fun x332 () Int)
(declare-fun x1849 () Bool)
(declare-fun x4 () Bool)
(declare-fun x2051 () Int)
(declare-fun x2281 () Int)
(declare-fun x1834 () Int)
(declare-fun x651 () Int)
(declare-fun x537 () Int)
(declare-fun x1252 () Int)
(declare-fun x1633 () Int)
(declare-fun x1306 () Bool)
(declare-fun x1365 () Int)
(declare-fun x230 () Int)
(declare-fun x2239 () Bool)
(declare-fun x1029 () Int)
(declare-fun x821 () Int)
(declare-fun x87 () Int)
(declare-fun x692 () Bool)
(declare-fun x462 () x652)
(declare-fun x860 () Bool)
(declare-fun x1880 () Int)
(declare-fun x1167 () x652)
(declare-fun x2057 () Int)
(declare-fun x2396 () Bool)
(declare-fun x452 () Bool)
(declare-fun x552 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x2220 () x652)
(declare-fun x8 () Bool)
(declare-fun x2355 () Int)
(declare-fun x1714 () Int)
(declare-fun x189 () Bool)
(declare-fun x1605 () Int)
(declare-fun x1265 () Bool)
(declare-fun x2465 () Int)
(declare-fun x2252 () Int)
(declare-fun x1325 () Bool)
(declare-fun x1523 () Int)
(declare-fun x1749 () Int)
(declare-fun x1115 () Bool)
(declare-fun x269 () Int)
(declare-fun x1335 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x1728 () Int)
(declare-fun x562 () Bool)
(declare-fun x1816 () Int)
(declare-fun x2467 () Int)
(declare-fun x1315 () Bool)
(declare-fun x2419 () Bool)
(declare-fun x2153 () Int)
(declare-fun x2027 () Int)
(declare-fun x494 () Int)
(declare-fun x1151 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x1133 () Int)
(declare-fun x148 () Int)
(declare-fun x1508 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x2069 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x42 () Bool)
(declare-fun x1997 () Bool)
(declare-fun x495 () Int)
(declare-fun x1963 () Int)
(declare-fun x1729 () Int)
(declare-fun x2463 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x422 () Bool)
(define-fun x1285 ((x652 x652) (x1678 Int)) x652 (ite ((_ is x1412) x652) (x1412 (x466 x652) (x1768 x652) (x1758 x652) (x80 x652) (x1949 x652) (x1176 x652) (x1567 x652) (+ (x1551 x652) x1678)) (ite ((_ is x1266) x652) (x1266 (x2410 x652) (x2454 x652) (x2302 x652) (x1383 x652) (x1969 x652) (x740 x652) (+ (x1752 x652) x1678)) (ite ((_ is x1619) x652) (x1619 (x1392 x652) (x1158 x652) (x1094 x652) (x1572 x652) (x1586 x652) (+ (x1424 x652) x1678)) (ite ((_ is x320) x652) (x320 (x71 x652) (x1617 x652) (x2065 x652) (x988 x652) (+ (x2186 x652) x1678)) (ite ((_ is x1546) x652) (x1546 (x975 x652) (x481 x652) (x413 x652) (+ (x1992 x652) x1678)) (ite ((_ is x1601) x652) (x1601 (x338 x652) (+ (x1099 x652) x1678)) (ite ((_ is x802) x652) (x802 (x2351 x652) (x1230 x652) (+ x1678 (x914 x652))) (x984 (+ x1678 (x925 x652)))))))))))
(define-fun x875 ((x1053 Int)) Int (ite (and (< x1053 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1053 0)) x1053 (- x1053 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2107 ((x1053 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1053) (< x1053 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1053) x1053))
(define-fun x1208 ((x862 Int)) Bool (and (< x862 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x862)))
(define-fun x327 ((x862 Int)) Bool (and (= (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639935 x862) x862) (= (x1354 x862 115792089237316195423570985008687907853269984665640564039457584007913129639935) x862)))
(define-fun x402 ((x862 Int)) Bool (and (= (x1354 x862 0) 0) (= 0 (x1354 0 x862))))
(define-fun x937 ((x862 Int)) Bool (= x862 (x1354 x862 x862)))
(define-fun x384 ((x862 Int)) Bool (and (x402 x862) (x937 x862) (x327 x862)))
(define-fun x2332 ((x862 Int) (x408 Int)) Bool (= (x1354 x862 x408) (x1354 x408 x862)))
(define-fun x74 ((x862 Int) (x408 Int)) Bool (and (=> (<= 0 x408) (>= x408 (x1354 x862 x408))) (<= 0 (x1354 x862 x408)) (=> (<= 0 x862) (<= (x1354 x862 x408) x862))))
(define-fun x1976 ((x862 Int) (x408 Int)) Bool (and (x2332 x862 x408) (x74 x862 x408)))
(define-fun x861 ((x862 Int)) Bool (= (+ (mod x862 32) (x1354 x862 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x862 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1431 ((x862 Int)) Bool (and (x861 x862) (x1976 x862 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x548 ((x862 Int)) Bool (= (+ (mod x862 131072) (x1354 x862 131072)) (mod x862 262144)))
(define-fun x287 ((x862 Int)) Bool (and (x1976 x862 131072) (x548 x862)))
(define-fun x1990 ((x862 Int)) Bool (= (mod x862 2) (x1354 x862 1)))
(define-fun x1972 ((x862 Int)) Bool (and (x1976 x862 1) (x1990 x862)))
(define-fun x438 ((x862 Int)) Bool (= (x1354 x862 127) (mod x862 128)))
(define-fun x156 ((x862 Int)) Bool (and (x438 x862) (x1976 x862 127)))
(define-fun x2020 ((x862 Int)) Bool (= (+ (x1354 x862 65536) (mod x862 65536)) (mod x862 131072)))
(define-fun x1750 ((x862 Int)) Bool (and (x1976 x862 65536) (x2020 x862)))
(define-fun x2261 ((x862 Int)) Bool (= (+ (x1354 x862 4294901760) (mod x862 65536)) (mod x862 4294967296)))
(define-fun x1037 ((x862 Int)) Bool (and (x2261 x862) (x1976 x862 4294901760)))
(define-fun x64 ((x862 Int)) Bool (= (mod x862 64) (+ (mod x862 32) (x1354 x862 32))))
(define-fun x2126 ((x862 Int)) Bool (and (x1976 x862 32) (x64 x862)))
(define-fun x1651 ((x862 Int)) Bool (= (x1354 x862 18446744073709551615) (mod x862 18446744073709551616)))
(define-fun x2187 ((x862 Int)) Bool (and (x1976 x862 18446744073709551615) (x1651 x862)))
(define-fun x1709 ((x862 Int)) Bool (and (= (x82 115792089237316195423570985008687907853269984665640564039457584007913129639935 x862) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x82 x862 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x820 ((x862 Int)) Bool (and (= (x82 x862 0) x862) (= (x82 0 x862) x862)))
(define-fun x2362 ((x862 Int)) Bool (= x862 (x82 x862 x862)))
(define-fun x206 ((x862 Int)) Bool (and (x1709 x862) (x2362 x862) (x820 x862)))
(define-fun x158 ((x862 Int) (x408 Int)) Bool (= (x82 x862 x408) (x82 x408 x862)))
(define-fun x2442 ((x862 Int) (x408 Int)) Bool (and (>= (+ x408 x862) (x82 x862 x408)) (=> (<= 0 x408) (>= (x82 x862 x408) x408)) (=> (<= 0 x862) (<= x862 (x82 x862 x408)))))
(define-fun x948 ((x862 Int) (x408 Int)) Bool (and (x158 x862 x408) (x2442 x862 x408)))
(define-fun x1373 ((x862 Int)) Bool (= (x1354 x862 1461501637330902918203684832716283019655932542975) (mod x862 1461501637330902918203684832716283019655932542976)))
(define-fun x207 ((x862 Int)) Bool (and (x1976 x862 1461501637330902918203684832716283019655932542975) (x1373 x862)))
(define-fun x2349 ((x862 Int)) Bool (= (mod x862 4294967296) (x1354 x862 4294967295)))
(define-fun x1273 ((x862 Int)) Bool (and (x1976 x862 4294967295) (x2349 x862)))
(define-fun x831 ((x862 Int)) Bool (=> (and (>= x862 0) (> 131072 x862)) (= 4294836223 (x82 4294836223 x862))))
(define-fun x1236 ((x862 Int)) Bool (and (x948 x862 4294836223) (x831 x862)))
(define-fun x943 ((x862 Int)) Bool (= (mod x862 256) (x1354 x862 255)))
(define-fun x294 ((x862 Int)) Bool (and (x943 x862) (x1976 x862 255)))
(define-fun x50 ((x862 Int)) Bool (= (x1354 x862 115792089237316195423570985008687907853269984665640564039457584007908834738175) (- x862 (x1354 x862 4294901760))))
(define-fun x2468 ((x862 Int)) Bool (and (x50 x862) (x1976 x862 115792089237316195423570985008687907853269984665640564039457584007908834738175)))
(define-fun x2149 ((x862 Int)) Bool (= (mod x862 65536) (x1354 x862 65535)))
(define-fun x1341 ((x862 Int)) Bool (and (x1976 x862 65535) (x2149 x862)))
(define-fun x169 ((x862 Int)) Bool (=> (and (<= 0 x862) (> 2 x862)) (= (x1354 65537 x862) x862)))
(define-fun x982 ((x862 Int)) Bool (and (x1976 x862 65537) (x169 x862)))
(define-fun x624 ((x862 Int)) Bool (= (mod x862 8) (+ (mod x862 4) (x1354 x862 4))))
(define-fun x1856 ((x862 Int)) Bool (and (x1976 x862 4) (x624 x862)))
(define-fun x2227 ((x862 Int)) Bool (= (mod x862 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x862 26959946667150639794667015087019630673637144422540572481103610249216) (x1354 x862 115792089210356248756420345214020892766250353992003419616917011526809519390720))))
(define-fun x346 ((x862 Int)) Bool (and (x1976 x862 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x2227 x862)))
(define-fun x241 ((x862 Int)) Bool (= (mod x862 32) (x1354 x862 31)))
(define-fun x1667 ((x862 Int)) Bool (and (x241 x862) (x1976 x862 31)))
(define-fun x2050 ((x2384 Int)) Int (x525 x2384))
(define-fun x1566 ((x2384 Int)) Int (ite (= 128 x2384) x1324 (x1606 x2384)))
(define-fun x1022 ((x2384 Int)) Int (ite (and (< x2384 (+ x1324 160)) (<= 160 x2384)) (x525 (+ x1451 (- x2384 160))) (x1566 x2384)))
(define-fun x405 ((x2384 Int)) Int (ite (= x2384 x879) 0 (x1022 x2384)))
(define-fun x699 ((x2384 Int)) Int (ite (= x87 x2384) x2119 (x405 x2384)))
(define-fun x1656 ((x2384 Int)) Int (ite (= x1547 x2384) x494 (x699 x2384)))
(define-fun x1886 ((x2384 Int)) Int (ite (= x1547 x2384) x1867 (x699 x2384)))
(define-fun x28 ((x2384 Int)) Int (ite (= x2384 x1211) x702 (x1656 x2384)))
(define-fun x514 ((x2384 Int)) Int (ite x2244 (x699 x2384) (ite x146 (ite x878 (x1656 x2384) (x28 x2384)) (x1886 x2384))))
(define-fun x1927 ((x2384 Int)) Int (ite x896 (x405 x2384) (x514 x2384)))
(define-fun x2323 ((x2384 Int)) Int (ite (= x1532 x2384) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1927 x2384)))
(define-fun x475 ((x2384 Int)) Int (ite (= x1047 x2384) (x1404 x55) (x2323 x2384)))
(define-fun x271 ((x2384 Int)) Int (ite (and (< x2384 (+ x1532 32)) (<= x1532 x2384)) (x2194 (+ 0 (- x2384 x1532))) (x475 x2384)))
(define-fun x9 ((x2384 Int)) Int (ite x729 (x271 x2384) (x475 x2384)))
(define-fun x1958 ((x2384 Int)) Int (ite x208 (x9 x2384) (x1927 x2384)))
(define-fun x2091 ((x2384 Int)) Int (ite (= x2384 x570) x2380 (x1958 x2384)))
(define-fun x383 ((x2384 Int)) Int (ite (= x2384 x1028) (x1404 x1339) (x2091 x2384)))
(define-fun x1779 ((x2384 Int)) Int (ite (= x1374 x2384) x985 (x383 x2384)))
(define-fun x1464 ((x2384 Int)) Int (ite (= x2384 x1362) 1058533858861509001837889330765714424124041949802528273061784713247848398848 (x1779 x2384)))
(define-fun x517 ((x2384 Int)) Int (ite (= x2384 x533) (x1404 x650) (x1464 x2384)))
(define-fun x1366 ((x2384 Int)) Int (ite (and (>= x2384 x1362) (< x2384 (+ x1362 32))) (x2436 (+ 0 (- x2384 x1362))) (x517 x2384)))
(define-fun x1675 ((x2384 Int)) Int (ite x2226 (x1366 x2384) (x517 x2384)))
(define-fun x993 ((x2384 Int)) Int (ite (= x2384 x1589) x332 (x1675 x2384)))
(define-fun x103 ((x2384 Int)) Int (ite (= x1051 x2384) x1983 (x993 x2384)))
(define-fun x1180 ((x2384 Int)) Int (ite (= x388 x2384) x432 (x103 x2384)))
(define-fun x581 ((x2384 Int)) Int (ite (= x2384 x1051) x2045 (x993 x2384)))
(define-fun x76 ((x2384 Int)) Int (ite x2427 (x993 x2384) (ite x1787 (ite x1663 (x103 x2384) (x1180 x2384)) (x581 x2384))))
(define-fun x1263 ((x2384 Int)) Int (ite x1305 (x76 x2384) (x1675 x2384)))
(define-fun x1220 ((x2384 Int)) Int (ite (= x2384 x2038) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1263 x2384)))
(define-fun x1984 ((x2384 Int)) Int (ite (= x1634 x2384) (x1404 x1462) (x1220 x2384)))
(define-fun x1171 ((x2384 Int)) Int (ite (and (< x2384 (+ 32 x2038)) (>= x2384 x2038)) (x367 (+ 0 (- x2384 x2038))) (x1984 x2384)))
(define-fun x1568 ((x2384 Int)) Int (ite x630 (x1171 x2384) (x1984 x2384)))
(define-fun x91 ((x2384 Int)) Int (ite (= x2384 x1589) x2329 (x1675 x2384)))
(define-fun x1405 ((x2384 Int)) Int (ite (= x1430 x2384) x835 (x91 x2384)))
(define-fun x244 ((x2384 Int)) Int (ite (= x2384 x1002) x526 (x1405 x2384)))
(define-fun x1784 ((x2384 Int)) Int (ite (= x2384 x1430) x2365 (x91 x2384)))
(define-fun x529 ((x2384 Int)) Int (ite x1418 (x91 x2384) (ite x2246 (ite x1390 (x1405 x2384) (x244 x2384)) (x1784 x2384))))
(define-fun x1102 ((x2384 Int)) Int (ite x1960 (x529 x2384) (x1675 x2384)))
(define-fun x1722 ((x2384 Int)) Int (ite (= x2018 x2384) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1102 x2384)))
(define-fun x1553 ((x2384 Int)) Int (ite (= x1605 x2384) (x1404 x721) (x1722 x2384)))
(define-fun x586 ((x2384 Int)) Int (ite (and (> (+ 32 x2018) x2384) (<= x2018 x2384)) (x1896 (+ 0 (- x2384 x2018))) (x1553 x2384)))
(define-fun x2426 ((x2384 Int)) Int (ite x2179 (x586 x2384) (x1553 x2384)))
(define-fun x522 ((x2384 Int)) Int (ite x612 (ite x1679 (x1568 x2384) (x1263 x2384)) (ite x676 (x2426 x2384) (x1102 x2384))))
(define-fun x1696 ((x2384 Int)) Int (ite (= x2384 x2070) x2380 (x522 x2384)))
(define-fun x25 ((x2384 Int)) Int (ite (= x1186 x2384) (x1404 x1162) (x1696 x2384)))
(define-fun x1956 ((x2384 Int)) Int (ite (= x2384 x3) x436 (x25 x2384)))
(define-fun x1862 ((x2384 Int)) Int (ite (= x1539 x2384) x1476 (x1956 x2384)))
(define-fun x928 ((x2384 Int)) Int (ite (= x2384 x2447) x170 (x1862 x2384)))
(define-fun x2299 ((x2384 Int)) Int (ite (= x869 x2384) x448 (x928 x2384)))
(define-fun x2306 ((x2384 Int)) Int (ite (= x2384 x2447) x358 (x1862 x2384)))
(define-fun x1425 ((x2384 Int)) Int (ite x2000 (x1862 x2384) (ite x940 (ite x8 (x928 x2384) (x2299 x2384)) (x2306 x2384))))
(define-fun x656 ((x2384 Int)) Int (ite (= x2384 x2274) x812 (x1425 x2384)))
(define-fun x543 ((x2384 Int)) Int (ite (= x2384 x2441) x1018 (x656 x2384)))
(define-fun x1014 ((x2384 Int)) Int (ite (= x318 x2384) x2075 (x543 x2384)))
(define-fun x1093 ((x2384 Int)) Int (ite (= x230 x2384) x1268 (x1014 x2384)))
(define-fun x991 ((x2384 Int)) Int (ite (= x980 x2384) x1889 (x1093 x2384)))
(define-fun x2054 ((x2384 Int)) Int (ite x1106 (x1093 x2384) (ite x2254 (x1014 x2384) (ite x843 (x543 x2384) (ite x1309 (x656 x2384) (x991 x2384))))))
(define-fun x483 ((x2384 Int)) Int (ite (= x2384 x1655) 0 (x2054 x2384)))
(define-fun x1534 ((x2384 Int)) Int (ite (= x2384 x1361) x2228 (x483 x2384)))
(define-fun x2440 ((x2384 Int)) Int (ite (= x2142 x2384) x1502 (x1534 x2384)))
(define-fun x2279 ((x2384 Int)) Int (ite (= x2379 x2384) x1433 (x2440 x2384)))
(define-fun x523 ((x2384 Int)) Int (ite (= x2384 x2139) x2108 (x2279 x2384)))
(define-fun x2389 ((x2384 Int)) Int (ite x1444 (x2279 x2384) (ite x214 (x2440 x2384) (ite x24 (x1534 x2384) (ite x428 (x483 x2384) (x523 x2384))))))
(define-fun x2141 ((x2384 Int)) Int (ite (= x1816 x2384) 0 (x2389 x2384)))
(define-fun x455 ((x2384 Int)) Int (ite (= x2384 x2012) x974 (x2141 x2384)))
(define-fun x1721 ((x2384 Int)) Int (ite (= x1816 x2384) x2031 (x455 x2384)))
(define-fun x2342 ((x2384 Int)) Int (ite (= x1184 x2384) x541 (x1721 x2384)))
(define-fun x1737 ((x2384 Int)) Int (ite (= x1279 x2384) x276 (x2342 x2384)))
(define-fun x1491 ((x2384 Int)) Int (ite (= x1184 x2384) x2110 (x1721 x2384)))
(define-fun x1928 ((x2384 Int)) Int (ite x511 (x1721 x2384) (ite x1426 (ite x1964 (x2342 x2384) (x1737 x2384)) (x1491 x2384))))
(define-fun x1308 ((x2384 Int)) Int (ite x2360 (x455 x2384) (x1928 x2384)))
(define-fun x551 ((x2384 Int)) Int (ite (= x124 x2384) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1308 x2384)))
(define-fun x2121 ((x2384 Int)) Int (ite (= x757 x2384) (x1404 x547) (x551 x2384)))
(define-fun x1494 ((x2384 Int)) Int (ite (and (<= x124 x2384) (> (+ 32 x124) x2384)) (x1000 (+ (- x2384 x124) 0)) (x2121 x2384)))
(define-fun x2421 ((x2384 Int)) Int (ite x491 (x1494 x2384) (x2121 x2384)))
(define-fun x883 ((x2384 Int)) Int (ite x1156 (x2421 x2384) (x1308 x2384)))
(define-fun x1495 ((x2384 Int)) Int (ite (= x73 x2384) x632 (x883 x2384)))
(define-fun x966 ((x2384 Int)) Int (ite (= x2384 x1799) x2184 (x1495 x2384)))
(define-fun x161 ((x2384 Int)) Int (ite (= x1884 x2384) x2240 (x966 x2384)))
(define-fun x1194 ((x2384 Int)) Int (ite (= x1799 x2384) x752 (x1495 x2384)))
(define-fun x1716 ((x2384 Int)) Int (ite x1201 (x1495 x2384) (ite x1388 (ite x534 (x966 x2384) (x161 x2384)) (x1194 x2384))))
(define-fun x654 ((x2384 Int)) Int (ite x2294 (x1716 x2384) (x883 x2384)))
(define-fun x1448 ((x2384 Int)) Int (ite (= x2384 x573) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x654 x2384)))
(define-fun x1937 ((x2384 Int)) Int (ite (= x2384 x2058) (x1404 x1190) (x1448 x2384)))
(define-fun x713 ((x2384 Int)) Int (ite (and (<= x573 x2384) (> (+ 32 x573) x2384)) (x217 (+ 0 (- x2384 x573))) (x1937 x2384)))
(define-fun x1804 ((x2384 Int)) Int (ite x1513 (x713 x2384) (x1937 x2384)))
(define-fun x1375 ((x2384 Int)) Int (ite x190 (x1804 x2384) (x654 x2384)))
(define-fun x2457 ((x2384 Int)) Int (ite (= x2384 x437) x2154 (x1375 x2384)))
(define-fun x240 ((x2384 Int)) Int (ite (= x1909 x2384) x1580 (x2457 x2384)))
(define-fun x1379 ((x2384 Int)) Int (ite (= x2384 x1228) x2137 (x240 x2384)))
(define-fun x1571 ((x2384 Int)) Int (ite (= x2384 x1909) x2238 (x2457 x2384)))
(define-fun x859 ((x2384 Int)) Int (ite x1796 (x2457 x2384) (ite x1533 (ite x1548 (x240 x2384) (x1379 x2384)) (x1571 x2384))))
(define-fun x1267 ((x2384 Int)) Int (ite x1950 (x859 x2384) (x1375 x2384)))
(define-fun x1316 ((x2384 Int)) Int (ite (= x1067 x2384) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1267 x2384)))
(define-fun x95 ((x2384 Int)) Int (ite (= x2384 x348) (x1404 x1435) (x1316 x2384)))
(define-fun x2 ((x2384 Int)) Int (ite (and (>= x2384 x1067) (< x2384 (+ x1067 32))) (x837 (+ 0 (- x2384 x1067))) (x95 x2384)))
(define-fun x610 ((x2384 Int)) Int (ite x2297 (x2 x2384) (x95 x2384)))
(define-fun x827 ((x2384 Int)) Int (ite x1845 (x610 x2384) (x1267 x2384)))
(define-fun x2275 ((x2384 Int)) Int (ite (= x2384 x545) 42946364674413620953198879289557591458479223041058917712765633135805412147200 (x827 x2384)))
(define-fun x183 ((x2384 Int)) Int (ite (= x2384 x2264) x2380 (x2275 x2384)))
(define-fun x128 ((x2384 Int)) Int (ite (= x2384 x1496) (x1404 x1162) (x183 x2384)))
(define-fun x1147 ((x2384 Int)) Int (ite (= x2428 x2384) x2208 (x128 x2384)))
(define-fun x1681 ((x2384 Int)) Int (ite (= x2384 x638) x2215 (x1147 x2384)))
(define-fun x1777 ((x2384 Int)) Int (ite (= x2384 x1840) x1885 (x1681 x2384)))
(define-fun x1088 ((x2384 Int)) Int (ite (and (> (+ 0 x545) x2384) (>= x2384 x545)) (x1809 (+ 0 (- x2384 x545))) (x1777 x2384)))
(define-fun x1519 ((x2384 Int)) Int (ite x2192 (x1088 x2384) (x1777 x2384)))
(define-fun x1246 ((x2384 Int)) Int (ite (= x2384 x545) x322 (x1519 x2384)))
(define-fun x2231 ((x2384 Int)) Int (ite (= x300 x2384) x1979 (x1246 x2384)))
(define-fun x1465 ((x2384 Int)) Int (ite (= x464 x2384) x2273 (x2231 x2384)))
(define-fun x1449 ((x2384 Int)) Int (ite (= x300 x2384) x628 (x1246 x2384)))
(define-fun x1767 ((x2384 Int)) Int (ite x1688 (x1246 x2384) (ite x598 (ite x393 (x2231 x2384) (x1465 x2384)) (x1449 x2384))))
(define-fun x465 ((x2384 Int)) Int (ite (= x2384 x1797) x1027 (x1767 x2384)))
(define-fun x1235 ((x2384 Int)) Int (ite (= x2384 x1653) x1499 (x465 x2384)))
(define-fun x234 ((x2384 Int)) Int (ite (= x794 x2384) x1009 (x1235 x2384)))
(define-fun x302 ((x2384 Int)) Int (ite (= x2369 x2384) x809 (x234 x2384)))
(define-fun x1687 ((x2384 Int)) Int (ite (= x549 x2384) x2435 (x302 x2384)))
(define-fun x976 ((x2384 Int)) Int (ite x255 (x302 x2384) (ite x1086 (x234 x2384) (ite x1508 (x1235 x2384) (ite x41 (x465 x2384) (x1687 x2384))))))
(define-fun x1169 ((x2384 Int)) Int (ite (= x2384 x2163) 0 (x976 x2384)))
(define-fun x842 ((x2384 Int)) Int (ite (= x2051 x2384) x1042 (x1169 x2384)))
(define-fun x2048 ((x2384 Int)) Int (ite (= x431 x2384) x165 (x842 x2384)))
(define-fun x590 ((x2384 Int)) Int (ite (= x1515 x2384) x724 (x2048 x2384)))
(define-fun x772 ((x2384 Int)) Int (ite (= x1714 x2384) x602 (x590 x2384)))
(define-fun x645 ((x2384 Int)) Int (ite x1023 (x590 x2384) (ite x1507 (x2048 x2384) (ite x1145 (x842 x2384) (ite x758 (x1169 x2384) (x772 x2384))))))
(define-fun x324 ((x2384 Int)) Int (ite (= x1627 x2384) 0 (x645 x2384)))
(define-fun x1415 ((x2384 Int)) Int (ite (= x1356 x2384) x1854 (x324 x2384)))
(define-fun x768 ((x2384 Int)) Int (ite (= x1627 x2384) x406 (x1415 x2384)))
(define-fun x748 ((x2384 Int)) Int (ite (= x2384 x1460) x1612 (x768 x2384)))
(define-fun x2053 ((x2384 Int)) Int (ite (= x2384 x1583) x382 (x748 x2384)))
(define-fun x1331 ((x2384 Int)) Int (ite (= x1460 x2384) x122 (x768 x2384)))
(define-fun x1386 ((x2384 Int)) Int (ite x1445 (x768 x2384) (ite x446 (ite x1575 (x748 x2384) (x2053 x2384)) (x1331 x2384))))
(define-fun x1923 ((x2384 Int)) Int (ite x1807 (x1415 x2384) (x1386 x2384)))
(define-fun x237 ((x2384 Int)) Int (ite (= x2384 x1781) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1923 x2384)))
(define-fun x805 ((x2384 Int)) Int (ite (= x2200 x2384) (x1404 x2335) (x237 x2384)))
(define-fun x1234 ((x2384 Int)) Int (ite (and (<= x1781 x2384) (< x2384 (+ 32 x1781))) (x2414 (+ 0 (- x2384 x1781))) (x805 x2384)))
(define-fun x832 ((x2384 Int)) Int (ite x2322 (x1234 x2384) (x805 x2384)))
(define-fun x1008 ((x2384 Int)) Int (ite x212 (x832 x2384) (x1923 x2384)))
(define-fun x2124 ((x2384 Int)) Int (ite (= x390 x2384) x1732 (x1008 x2384)))
(define-fun x731 ((x2384 Int)) Int (ite (= x443 x2384) x687 (x2124 x2384)))
(define-fun x256 ((x2384 Int)) Int (ite (= x2304 x2384) x539 (x731 x2384)))
(define-fun x1594 ((x2384 Int)) Int (ite (= x2384 x443) x45 (x2124 x2384)))
(define-fun x187 ((x2384 Int)) Int (ite x1666 (x2124 x2384) (ite x910 (ite x279 (x731 x2384) (x256 x2384)) (x1594 x2384))))
(define-fun x2118 ((x2384 Int)) Int (ite x854 (x1008 x2384) (x187 x2384)))
(define-fun x1017 ((x2384 Int)) Int (ite (= x2384 x1134) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x2118 x2384)))
(define-fun x1723 ((x2384 Int)) Int (ite (= x2384 x211) (x1404 x2417) (x1017 x2384)))
(define-fun x1624 ((x2384 Int)) Int (ite (and (>= x2384 x1134) (< x2384 (+ 32 x1134))) (x2305 (+ (- x2384 x1134) 0)) (x1723 x2384)))
(define-fun x1478 ((x2384 Int)) Int (ite x2025 (x1624 x2384) (x1723 x2384)))
(define-fun x606 ((x2384 Int)) Int (ite x1863 (x1478 x2384) (x2118 x2384)))
(define-fun x69 ((x2384 Int)) Int (ite (= x2384 x1055) (x1404 x807) (x606 x2384)))
(define-fun x2213 ((x2384 Int)) Int (ite (= x2318 x2384) 1 (x69 x2384)))
(define-fun x2112 ((x2384 Int)) Int (ite (= x2384 x1055) 0 (x2213 x2384)))
(define-fun x416 ((x2384 Int)) Int (ite x1766 (x1008 x2384) (x2112 x2384)))
(define-fun x622 ((x2384 Int)) Int (ite (= x2384 x968) x806 (x416 x2384)))
(define-fun x1232 ((x2384 Int)) Int (ite (= x2434 x2384) x1420 (x622 x2384)))
(define-fun x194 ((x2384 Int)) Int (ite (= x726 x2384) x229 (x1232 x2384)))
(define-fun x764 ((x2384 Int)) Int (ite (= x2434 x2384) x1049 (x622 x2384)))
(define-fun x2357 ((x2384 Int)) Int (ite x958 (x622 x2384) (ite x391 (ite x1864 (x1232 x2384) (x194 x2384)) (x764 x2384))))
(define-fun x2143 ((x2384 Int)) Int (ite x2425 (x416 x2384) (x2357 x2384)))
(define-fun x78 ((x2384 Int)) Int (ite (= x2384 x691) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x2143 x2384)))
(define-fun x550 ((x2384 Int)) Int (ite (= x2384 x1312) (x1404 x213) (x78 x2384)))
(define-fun x49 ((x2384 Int)) Int (ite (and (> (+ 32 x691) x2384) (<= x691 x2384)) (x51 (+ 0 (- x2384 x691))) (x550 x2384)))
(define-fun x553 ((x2384 Int)) Int (ite x259 (x49 x2384) (x550 x2384)))
(define-fun x2260 ((x2384 Int)) Int (ite x232 (x553 x2384) (x2143 x2384)))
(define-fun x904 ((x2384 Int)) Int (ite (= x2384 x545) 42946364674413620953198879289557591458479223041058917712765633135805412147200 (x827 x2384)))
(define-fun x1227 ((x2384 Int)) Int (ite (= x2384 x2132) x2380 (x904 x2384)))
(define-fun x497 ((x2384 Int)) Int (ite (= x139 x2384) (x1404 x1162) (x1227 x2384)))
(define-fun x1871 ((x2384 Int)) Int (ite (= x1321 x2384) x2208 (x497 x2384)))
(define-fun x1015 ((x2384 Int)) Int (ite (= x2230 x2384) x1221 (x1871 x2384)))
(define-fun x2347 ((x2384 Int)) Int (ite (= x1916 x2384) x899 (x1015 x2384)))
(define-fun x2393 ((x2384 Int)) Int (ite (and (>= x2384 x545) (< x2384 (+ 0 x545))) (x871 (+ (- x2384 x545) 0)) (x2347 x2384)))
(define-fun x927 ((x2384 Int)) Int (ite x478 (x2393 x2384) (x2347 x2384)))
(define-fun x1351 ((x2384 Int)) Int (ite (= x545 x2384) x227 (x927 x2384)))
(define-fun x930 ((x2384 Int)) Int (ite (= x2384 x345) x689 (x1351 x2384)))
(define-fun x947 ((x2384 Int)) Int (ite (= x2384 x1365) x2237 (x930 x2384)))
(define-fun x1978 ((x2384 Int)) Int (ite (= x2384 x345) x11 (x1351 x2384)))
(define-fun x2236 ((x2384 Int)) Int (ite x1469 (x1351 x2384) (ite x1380 (ite x1368 (x930 x2384) (x947 x2384)) (x1978 x2384))))
(define-fun x1226 ((x2384 Int)) Int (ite x571 (x2236 x2384) (x927 x2384)))
(define-fun x1953 ((x2384 Int)) Int (ite (= x2384 x2153) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1226 x2384)))
(define-fun x922 ((x2384 Int)) Int (ite (= x1719 x2384) (x1404 x218) (x1953 x2384)))
(define-fun x964 ((x2384 Int)) Int (ite (and (<= x2153 x2384) (< x2384 (+ 32 x2153))) (x946 (+ 0 (- x2384 x2153))) (x922 x2384)))
(define-fun x813 ((x2384 Int)) Int (ite x2406 (x964 x2384) (x922 x2384)))
(define-fun x1738 ((x2384 Int)) Int (ite x931 (x813 x2384) (x1226 x2384)))
(define-fun x711 ((x2384 Int)) Int (ite (= x2384 x686) x1579 (x1738 x2384)))
(define-fun x1394 ((x2384 Int)) Int (ite (= x1981 x2384) x2308 (x711 x2384)))
(define-fun x898 ((x2384 Int)) Int (ite (= x2384 x1411) x2221 (x1394 x2384)))
(define-fun x1791 ((x2384 Int)) Int (ite (= x1981 x2384) x205 (x711 x2384)))
(define-fun x1493 ((x2384 Int)) Int (ite x722 (x711 x2384) (ite x546 (ite x2253 (x1394 x2384) (x898 x2384)) (x1791 x2384))))
(define-fun x2398 ((x2384 Int)) Int (ite (= x1772 x2384) x392 (x1493 x2384)))
(define-fun x1552 ((x2384 Int)) Int (ite (= x2384 x2291) x1848 (x2398 x2384)))
(define-fun x957 ((x2384 Int)) Int (ite (= x2384 x435) x678 (x1552 x2384)))
(define-fun x1370 ((x2384 Int)) Int (ite (= x1803 x2384) x965 (x957 x2384)))
(define-fun x1833 ((x2384 Int)) Int (ite (= x2384 x1806) x1549 (x1370 x2384)))
(define-fun x1773 ((x2384 Int)) Int (ite x351 (x1370 x2384) (ite x1540 (x957 x2384) (ite x1899 (x1552 x2384) (ite x1417 (x2398 x2384) (x1833 x2384))))))
(define-fun x2366 ((x2384 Int)) Int (ite (= x2384 x2358) 0 (x1773 x2384)))
(define-fun x2079 ((x2384 Int)) Int (ite (= x1 x2384) x617 (x2366 x2384)))
(define-fun x1713 ((x2384 Int)) Int (ite (= x2384 x1558) x1100 (x2079 x2384)))
(define-fun x1821 ((x2384 Int)) Int (ite (= x274 x2384) x385 (x1713 x2384)))
(define-fun x1283 ((x2384 Int)) Int (ite (= x2384 x357) x204 (x1821 x2384)))
(define-fun x1961 ((x2384 Int)) Int (ite x2158 (x1821 x2384) (ite x2444 (x1713 x2384) (ite x1907 (x2079 x2384) (ite x1565 (x2366 x2384) (x1283 x2384))))))
(define-fun x926 ((x2384 Int)) Int (ite (= x2384 x1409) 0 (x1961 x2384)))
(define-fun x1143 ((x2384 Int)) Int (ite (= x1242 x2384) x572 (x926 x2384)))
(define-fun x791 ((x2384 Int)) Int (ite (= x1409 x2384) x1179 (x1143 x2384)))
(define-fun x778 ((x2384 Int)) Int (ite (= x1193 x2384) x1399 (x791 x2384)))
(define-fun x339 ((x2384 Int)) Int (ite (= x675 x2384) x1048 (x778 x2384)))
(define-fun x1755 ((x2384 Int)) Int (ite (= x2303 x2384) x2326 (x339 x2384)))
(define-fun x2102 ((x2384 Int)) Int (ite (= x2384 x777) x2162 (x1755 x2384)))
(define-fun x929 ((x2384 Int)) Int (ite (= x2303 x2384) x1296 (x339 x2384)))
(define-fun x1092 ((x2384 Int)) Int (ite x1613 (x339 x2384) (ite x314 (ite x2134 (x1755 x2384) (x2102 x2384)) (x929 x2384))))
(define-fun x1225 ((x2384 Int)) Int (ite x1726 (x1092 x2384) (x778 x2384)))
(define-fun x1858 ((x2384 Int)) Int (ite (= x2384 x1020) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1225 x2384)))
(define-fun x1975 ((x2384 Int)) Int (ite (= x634 x2384) (x1404 x1384) (x1858 x2384)))
(define-fun x1113 ((x2384 Int)) Int (ite (and (>= x2384 x1020) (< x2384 (+ x1020 32))) (x677 (+ (- x2384 x1020) 0)) (x1975 x2384)))
(define-fun x368 ((x2384 Int)) Int (ite x892 (x1113 x2384) (x1975 x2384)))
(define-fun x579 ((x2384 Int)) Int (ite x2386 (x368 x2384) (x1225 x2384)))
(define-fun x273 ((x2384 Int)) Int (ite (= x2384 x1409) x1717 (x778 x2384)))
(define-fun x301 ((x2384 Int)) Int (ite (= x882 x2384) x220 (x273 x2384)))
(define-fun x2092 ((x2384 Int)) Int (ite (= x739 x2384) x1317 (x301 x2384)))
(define-fun x1164 ((x2384 Int)) Int (ite (= x882 x2384) x1358 (x273 x2384)))
(define-fun x114 ((x2384 Int)) Int (ite x1318 (x273 x2384) (ite x1039 (ite x426 (x301 x2384) (x2092 x2384)) (x1164 x2384))))
(define-fun x2129 ((x2384 Int)) Int (ite x670 (x114 x2384) (x778 x2384)))
(define-fun x2413 ((x2384 Int)) Int (ite (= x1887 x2384) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x2129 x2384)))
(define-fun x2037 ((x2384 Int)) Int (ite (= x1918 x2384) (x1404 x135) (x2413 x2384)))
(define-fun x719 ((x2384 Int)) Int (ite (and (<= x1887 x2384) (> (+ 32 x1887) x2384)) (x2088 (+ (- x2384 x1887) 0)) (x2037 x2384)))
(define-fun x1742 ((x2384 Int)) Int (ite x1082 (x719 x2384) (x2037 x2384)))
(define-fun x694 ((x2384 Int)) Int (ite x1071 (x1742 x2384) (x2129 x2384)))
(define-fun x618 ((x2384 x652)) Int (ite (= x2384 x1702) x1463 (x381 x2384)))
(define-fun x918 ((x2384 x652)) Int (ite (= x978 x2384) x596 (x1646 x2384)))
(define-fun x591 ((x2384 x652)) Int (ite (= x2384 x978) x1443 (x1646 x2384)))
(define-fun x1524 ((x2384 x652)) Int (ite x84 (x918 x2384) (x591 x2384)))
(define-fun x599 ((x2384 x652)) Int (ite (= x2384 x2344) x2460 (x1524 x2384)))
(define-fun x1808 ((x2384 x652)) Int (ite (= x2384 x2344) x614 (x1524 x2384)))
(define-fun x2046 ((x2384 x652)) Int (ite x1587 (x1524 x2384) (ite x2448 (x599 x2384) (x1808 x2384))))
(define-fun x1065 ((x2384 Int)) Int (ite (= x1311 x2384) x1673 (x694 x2384)))
(define-fun x668 ((x2384 x652)) Int (ite (= x180 x2384) 0 (x1590 x2384)))
(define-fun x12 ((x2384 x652)) Int (ite x284 (x1590 x2384) (ite x693 (x1590 x2384) (x668 x2384))))
(define-fun x1788 ((x2384 x652)) Int (ite (= x2384 x266) x1025 (x12 x2384)))
(define-fun x730 ((x2384 x652)) Int (ite x860 (x12 x2384) (x1788 x2384)))
(define-fun x747 ((x2384 x652)) Int (ite (= x1484 x2384) x1828 (x730 x2384)))
(define-fun x2242 ((x2384 x652)) Int (ite x84 (ite x787 (x730 x2384) (x747 x2384)) (x12 x2384)))
(define-fun x1516 ((x2384 x652)) Int (ite (= x2384 x718) 0 (x2242 x2384)))
(define-fun x1908 ((x2384 x652)) Int (ite x292 (x2242 x2384) (ite x1497 (x2242 x2384) (x1516 x2384))))
(define-fun x1930 ((x2384 x652)) Int (ite (= x445 x2384) x423 (x1908 x2384)))
(define-fun x1320 ((x2384 x652)) Int (ite x934 (x1908 x2384) (x1930 x2384)))
(define-fun x2104 ((x2384 x652)) Int (ite (= x733 x2384) x905 (x1320 x2384)))
(define-fun x1710 ((x2384 x652)) Int (ite x935 (x1320 x2384) (x2104 x2384)))
(define-fun x808 ((x2384 x652)) Int (ite x1587 (x2242 x2384) (ite x2448 (x1710 x2384) (x1908 x2384))))
(define-fun x1183 ((x2384 Int)) Int (ite (= x2384 x1631) x2165 (x1065 x2384)))
(define-fun x1120 ((x2384 Int)) Int (ite (= x2384 x1631) x1633 (x1065 x2384)))
(define-fun x353 ((x2384 Int)) Int (ite (= x1278 x2384) (x1404 x807) (x2260 x2384)))
(define-fun x1980 ((x2384 Int)) Int (ite (= x2384 x1083) 1 (x353 x2384)))
(define-fun x149 ((x2384 Int)) Int (ite (= x2384 x1237) 109562948294120585953088955926913691080166221410047079322077399086870164406272 (x1980 x2384)))
(define-fun x58 ((x2384 Int)) Int (ite (= x2384 x34) x1492 (x149 x2384)))
(define-fun x2300 ((x2384 Int)) Int (ite (= x2041 x2384) 0 (x58 x2384)))
(define-fun x1253 ((x2384 Int)) Int (ite (= x745 x2384) (x1404 x807) (x2300 x2384)))
(define-fun x697 ((x2384 Int)) Int (ite (= x347 x2384) 1 (x1253 x2384)))
(define-fun x1644 ((x2384 Int)) Int (ite (= x2384 x1730) 160 (x697 x2384)))
(define-fun x1352 ((x2384 Int)) Int (ite (= x2408 x2384) 0 (x1644 x2384)))
(define-fun x1621 ((x2384 Int)) Int (ite (= x2384 x1077) 0 (x1352 x2384)))
(define-fun x1367 ((x2384 Int)) Int (ite (and (< x2384 (+ x1237 32)) (<= x1237 x2384)) (x125 (+ (- x2384 x1237) 0)) (x1621 x2384)))
(define-fun x979 ((x2384 x652)) Int (ite x2192 (x847 x2384) (x636 x2384)))
(define-fun x1822 ((x2384 x652)) Int (ite (= x2384 x1298) x2232 (x381 x2384)))
(define-fun x469 ((x2384 x652)) Int (ite x478 (x851 x2384) (x636 x2384)))
(define-fun x485 ((x2384 x652)) Int (ite x1766 (x381 x2384) (x1822 x2384)))
(define-fun x1873 ((x2384 Int)) Int (ite (= x2384 x226) x1105 (x1183 x2384)))
(define-fun x750 ((x2384 Int)) Int (ite x1592 (x1065 x2384) (ite x986 (ite x1150 (x1183 x2384) (x1873 x2384)) (x1120 x2384))))
(define-fun x520 ((x2384 Int)) Int (ite x304 (x750 x2384) (x694 x2384)))
(define-fun x977 ((x2384 Int)) Int (ite (= x459 x2384) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x520 x2384)))
(define-fun x814 ((x2384 Int)) Int (ite (= x512 x2384) (x1404 x1446) (x977 x2384)))
(define-fun x1323 ((x2384 Int)) Int (ite (and (<= x459 x2384) (< x2384 (+ 32 x459))) (x616 (+ (- x2384 x459) 0)) (x814 x2384)))
(define-fun x709 ((x2384 Int)) Int (ite (= x2384 x411) (x1404 x807) (x579 x2384)))
(define-fun x2471 ((x2384 Int)) Int (ite (= x2384 x1458) 1 (x709 x2384)))
(define-fun x326 ((x2384 Int)) Int (ite (= x2384 x411) 109562948294120585953088955926913691080166221410047079322077399086870164406272 (x2471 x2384)))
(define-fun x184 ((x2384 Int)) Int (ite (= x1993 x2384) x1492 (x326 x2384)))
(define-fun x1098 ((x2384 Int)) Int (ite (= x2384 x1657) x1535 (x184 x2384)))
(define-fun x1897 ((x2384 Int)) Int (ite (= x2384 x1892) (x1404 x807) (x1098 x2384)))
(define-fun x2093 ((x2384 Int)) Int (ite (= x123 x2384) 1 (x1897 x2384)))
(define-fun x328 ((x2384 Int)) Int (ite (= x2384 x2429) 160 (x2093 x2384)))
(define-fun x333 ((x2384 Int)) Int (ite (= x1168 x2384) 0 (x328 x2384)))
(define-fun x2378 ((x2384 Int)) Int (ite (= x2156 x2384) 0 (x333 x2384)))
(define-fun x1632 ((x2384 Int)) Int (ite (and (<= x411 x2384) (> (+ x411 32) x2384)) (x166 (+ (- x2384 x411) 0)) (x2378 x2384)))
(define-fun x2166 ((x2384 Int)) Int (ite x502 (x1367 x2384) (x1621 x2384)))
(define-fun x1204 ((x2384 Int)) Int (ite x1827 (x1632 x2384) (x2378 x2384)))
(define-fun x490 ((x2384 Int)) Int (ite x2039 (x1980 x2384) (x2166 x2384)))
(define-fun x2152 ((x2384 Int)) Int (ite (= x2384 x811) x54 (x490 x2384)))
(define-fun x1868 ((x2384 Int)) Int (ite x1033 (x1323 x2384) (x814 x2384)))
(define-fun x981 ((x862 Int)) Bool (=> (and (not (= 4294967296 x862)) (not (= x862 115792089237316195423570985008687907853269984665640564039457584007908834738175)) (not (= x862 131072)) (not (= 65536 x862)) (not (= 4294901760 x862)) (not (= 65537 x862)) (not (= 65535 x862)) (not (= 1058533858861509001837889330765714424124041949802528273061784713247848398848 x862)) (not (= x862 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 18446744073709551615 x862)) (not (= 97199519776808029778168953285215024309695167179541945341261303444449322336256 x862)) (not (= x862 4294967295)) (not (= 549686827 x862)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x862)) (not (= x862 1461501637330902918203684832716283019655932542975)) (not (= x862 4294836223)) (not (= x862 1058358655)) (not (= 1666326814 x862)) (not (= 109562948294120585953088955926913691080166221410047079322077399086870164406272 x862)) (not (= 7776000 x862)) (< 10000 x862) (not (= x862 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (not (= 42946364674413620953198879289557591458479223041058917712765633135805412147200 x862)) (not (= 616673092 x862))) (not ((_ is x984) (x1637 x862)))))
(assert (x1208 x673))
(assert (x1208 x1835))
(assert (= (x1404 (x1637 (x1386 (x875 (+ 32 x315))))) (x1386 (x875 (+ 32 x315)))))
(assert (x384 x1815))
(assert (= x741 (and x312 x569)))
(assert (x1208 x963))
(assert (= x340 (or x2192 x1893)))
(assert (x1208 x1097))
(assert (= (and x157 x1087) x744))
(assert (x1208 x1664))
(assert (= (x1404 (x1285 x2040 1)) (+ (x1404 x2040) 1)))
(assert (x981 (x114 (x875 (+ x1192 160)))))
(assert (x1208 x1828))
(assert (= (x1606 256) 0))
(assert (x1208 x1511))
(assert (x1972 x61))
(assert (= x2381 x2042))
(assert (=> (>= 10000 (x114 (x875 (+ 160 x1192)))) (= (x1637 (x114 (x875 (+ 160 x1192)))) (x984 (x114 (x875 (+ 160 x1192)))))))
(assert (= (x1606 x1191) 0))
(assert (= (=> (and (= (mod (* 2 x1578) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x420) (= (x875 (+ x420 1)) x596)) x891) x1527))
(assert (x1208 x1697))
(assert (x1208 x1080))
(assert (x1208 x2233))
(assert (x156 x1119))
(assert (= (=> (and (= x2399 (= 1 (ite x2135 1 0))) (= x2135 (< 31 x2027))) (and (=> (and x2399 (and (= x2067 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2027)) (= (x1601 x2344 0) x445) (= (> x2067 0) x341))) (and (=> (and (not x341) (and (= x445 x733) (= x143 32))) x1376) (=> x341 x1703))) (=> (and (not x2399) (and (= (x1143 x2082) x2263) (= x1693 (mod (* 2 x2027) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x614 (ite (<= x1251 1) x880 (ite x1620 x1111 x1756))) (= x1620 (>= 1 x1251)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x510 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1089)) x102) (= x1111 (x875 (+ x1251 x1693))) (= (mod (* x2027 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1089) (= x880 (x875 (+ x1251 x1693))) (= (x875 (+ x1242 32)) x2082) (= x1251 (x1354 x2263 x102)) (= x1756 (x82 x1251 x1693)))) x773))) x2160))
(assert (x1208 x2150))
(assert (= x1541 (=> (and (not (< x2450 x556)) (= x118 (x875 (+ x1051 1))) (= x888 (>= 224 x1914)) (= (x875 (+ x1914 1)) x556) (= (x76 x1589) x2450)) (and (=> (= x2094 (ite (<= x1914 32) (x1601 (x1637 (x76 x118)) 0) (ite (<= x1914 64) (x802 (x1637 (x76 x118)) (x1637 (x76 (x875 (+ 32 x118)))) 0) (ite (<= x1914 96) (x1546 (x1637 (x76 x118)) (x1637 (x76 (x875 (+ x118 32)))) (x1637 (x76 (x875 (+ x118 64)))) 0) (ite (>= 128 x1914) (x320 (x1637 (x76 x118)) (x1637 (x76 (x875 (+ x118 32)))) (x1637 (x76 (x875 (+ 64 x118)))) (x1637 (x76 (x875 (+ x118 96)))) 0) (ite (<= x1914 160) (x1619 (x1637 (x76 x118)) (x1637 (x76 (x875 (+ x118 32)))) (x1637 (x76 (x875 (+ x118 64)))) (x1637 (x76 (x875 (+ 96 x118)))) (x1637 (x76 (x875 (+ x118 128)))) 0) (ite (<= x1914 192) (x1266 (x1637 (x76 x118)) (x1637 (x76 (x875 (+ 32 x118)))) (x1637 (x76 (x875 (+ 64 x118)))) (x1637 (x76 (x875 (+ 96 x118)))) (x1637 (x76 (x875 (+ 128 x118)))) (x1637 (x76 (x875 (+ 160 x118)))) 0) (ite (<= x1914 224) (x1412 (x1637 (x76 x118)) (x1637 (x76 (x875 (+ x118 32)))) (x1637 (x76 (x875 (+ 64 x118)))) (x1637 (x76 (x875 (+ 96 x118)))) (x1637 (x76 (x875 (+ 128 x118)))) (x1637 (x76 (x875 (+ 160 x118)))) (x1637 (x76 (x875 (+ 192 x118)))) 0) (x1637 x2214))))))))) x2096) x888))))
(assert (= (x1404 (x984 115792089210356248756420345214020892766250353992003419616917011526809519390720)) 115792089210356248756420345214020892766250353992003419616917011526809519390720))
(assert (x1208 x319))
(assert (x1208 x2097))
(assert (x1208 x2139))
(assert (x1208 x1545))
(assert (= (x1404 (x1637 (x522 256))) (x522 256)))
(assert (= x2288 x705))
(assert (x1208 x1881))
(assert (x1208 x1573))
(assert (= (x529 x1715) (x1404 (x1637 (x529 x1715)))))
(assert (x384 115792089237316195423570985008687907853269984665640564039457584007908834738175))
(assert (x1208 x1461))
(assert (=> (>= 10000 x2268) (= (x984 x2268) (x1637 x2268))))
(assert (= (x1606 x736) 0))
(assert (=> (>= 10000 x2009) (= (x984 x2009) (x1637 x2009))))
(assert (x384 65537))
(assert (x1208 x752))
(assert (x1208 x2274))
(assert (= (or x446 x1489 x1445) x569))
(assert (x1208 x549))
(assert (= (x1404 (x1637 (x1092 (x875 (+ x192 192))))) (x1092 (x875 (+ 192 x192)))))
(assert (= x180 (x1637 (x1404 x180))))
(assert (x1208 x879))
(assert (= (=> (and (= (= x2270 0) x154) (or x154 (not x154))) x2073) x1915))
(assert (= (=> (and (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1914 1))) (= x2094 x1462) (= x2038 x889)) x1142) x2096))
(assert (= x870 (and (not x1109) x1555)))
(assert (= x19 x2277))
(assert (x384 x309))
(assert (= x2254 (and x1429 (not x65))))
(assert (=> (<= (x187 (x875 (+ x1482 64))) 10000) (= (x984 (x187 (x875 (+ 64 x1482)))) (x1637 (x187 (x875 (+ x1482 64)))))))
(assert (x384 x900))
(assert (= (and (not x1512) x2062) x471))
(assert (= (or x1951 x829) x2185))
(assert (x981 x88))
(assert (= (or x1156 x2420) x2404))
(assert (= x973 (=> (and (= (x875 (+ 1 x1117)) x306) (= x1068 (x875 (+ x2434 1))) (= x1136 (<= x1117 224)) (= (x2357 x968) x1504) (not (< x1504 x306))) (and x1136 (=> (= x2371 (ite (<= x1117 32) (x1601 (x1637 (x2357 x1068)) 0) (ite (>= 64 x1117) (x802 (x1637 (x2357 x1068)) (x1637 (x2357 (x875 (+ 32 x1068)))) 0) (ite (<= x1117 96) (x1546 (x1637 (x2357 x1068)) (x1637 (x2357 (x875 (+ x1068 32)))) (x1637 (x2357 (x875 (+ x1068 64)))) 0) (ite (<= x1117 128) (x320 (x1637 (x2357 x1068)) (x1637 (x2357 (x875 (+ x1068 32)))) (x1637 (x2357 (x875 (+ x1068 64)))) (x1637 (x2357 (x875 (+ x1068 96)))) 0) (ite (<= x1117 160) (x1619 (x1637 (x2357 x1068)) (x1637 (x2357 (x875 (+ x1068 32)))) (x1637 (x2357 (x875 (+ x1068 64)))) (x1637 (x2357 (x875 (+ 96 x1068)))) (x1637 (x2357 (x875 (+ x1068 128)))) 0) (ite (>= 192 x1117) (x1266 (x1637 (x2357 x1068)) (x1637 (x2357 (x875 (+ x1068 32)))) (x1637 (x2357 (x875 (+ x1068 64)))) (x1637 (x2357 (x875 (+ x1068 96)))) (x1637 (x2357 (x875 (+ 128 x1068)))) (x1637 (x2357 (x875 (+ 160 x1068)))) 0) (ite (>= 224 x1117) (x1412 (x1637 (x2357 x1068)) (x1637 (x2357 (x875 (+ x1068 32)))) (x1637 (x2357 (x875 (+ 64 x1068)))) (x1637 (x2357 (x875 (+ 96 x1068)))) (x1637 (x2357 (x875 (+ x1068 128)))) (x1637 (x2357 (x875 (+ x1068 160)))) (x1637 (x2357 (x875 (+ 192 x1068)))) 0) (x1637 x1538))))))))) x1063)))))
(assert (x1208 x2304))
(assert (x1208 x1363))
(assert (x384 x1838))
(assert (x1750 x1355))
(assert (= x921 (and x1676 x1614)))
(assert (= (x1404 (x1637 (x1386 x315))) (x1386 x315)))
(assert (= (x984 65536) (x1637 65536)))
(assert (x384 x956))
(assert (x156 x1838))
(assert (= (and x1706 x858) x2014))
(assert (= (x1637 549686827) (x984 549686827)))
(assert (x1208 x2329))
(assert (= (and (not x1891) x1564) x1628))
(assert (= x1501 (=> (and (or (and (and (= x1475 (= x688 65536)) (= x688 (x1354 65536 x1299)) (= x1202 (ite x1475 0 x1625))) x1052) (and (= x1625 x1202) (not x1052))) (= (< x1403 x2293) x1052)) x1649)))
(assert (= 0 (x1606 x419)))
(assert (x1208 x1820))
(assert (= (and x609 x1407) x1408))
(assert (x981 (x1092 (x875 (+ x192 32)))))
(assert (x1208 x1338))
(assert (= (x1606 x1282) 0))
(assert (x1208 x1902))
(assert (= (x2357 (x875 (+ x1068 32))) (x1404 (x1637 (x2357 (x875 (+ x1068 32)))))))
(assert (= (x1404 (x1285 x1855 1)) (+ (x1404 x1855) 1)))
(assert (= x203 (and x559 (not x2286))))
(assert (x981 (x2236 (x875 (+ 32 x1820)))))
(assert (= (or x1498 x2297) x1845))
(assert (x1208 x1083))
(assert (x207 x468))
(assert (x1208 x2216))
(assert (x981 (x1386 x315)))
(assert (x1208 x956))
(assert (x1208 x822))
(assert (= x1142 (=> (= x846 (= x1462 (x984 0))) (and (=> (and (and (or (and x2463 (and (< x2466 4294967296) (= x164 1))) (and (= x1593 x164) (not x2463))) (and (= (> x1593 0) x2463) (= x1634 (x875 (+ 4 x2038))))) (not x846)) x1997) (=> (and (and (= x1904 (x510 x2462 192)) (= x1480 x2038)) x846) x2140)))))
(assert (x1208 x1589))
(assert (= x255 (and (not x907) x215)))
(assert (x1208 x1105))
(assert (= (x1404 (x1637 (x1716 x16))) (x1716 x16)))
(assert (= (x1606 (x875 (+ 160 x1715))) 0))
(assert (= x1778 (=> (and (not (< x765 x2127)) (= x2127 (x875 (+ x319 1))) (= x765 (x1928 x1816)) (= x2212 (<= x319 224)) (= (x875 (+ 1 x1184)) x2172)) (and x2212 (=> (= x1798 (ite (<= x319 32) (x1601 (x1637 (x1928 x2172)) 0) (ite (>= 64 x319) (x802 (x1637 (x1928 x2172)) (x1637 (x1928 (x875 (+ x2172 32)))) 0) (ite (>= 96 x319) (x1546 (x1637 (x1928 x2172)) (x1637 (x1928 (x875 (+ x2172 32)))) (x1637 (x1928 (x875 (+ x2172 64)))) 0) (ite (>= 128 x319) (x320 (x1637 (x1928 x2172)) (x1637 (x1928 (x875 (+ x2172 32)))) (x1637 (x1928 (x875 (+ x2172 64)))) (x1637 (x1928 (x875 (+ 96 x2172)))) 0) (ite (<= x319 160) (x1619 (x1637 (x1928 x2172)) (x1637 (x1928 (x875 (+ x2172 32)))) (x1637 (x1928 (x875 (+ x2172 64)))) (x1637 (x1928 (x875 (+ x2172 96)))) (x1637 (x1928 (x875 (+ 128 x2172)))) 0) (ite (<= x319 192) (x1266 (x1637 (x1928 x2172)) (x1637 (x1928 (x875 (+ 32 x2172)))) (x1637 (x1928 (x875 (+ x2172 64)))) (x1637 (x1928 (x875 (+ x2172 96)))) (x1637 (x1928 (x875 (+ x2172 128)))) (x1637 (x1928 (x875 (+ x2172 160)))) 0) (ite (>= 224 x319) (x1412 (x1637 (x1928 x2172)) (x1637 (x1928 (x875 (+ x2172 32)))) (x1637 (x1928 (x875 (+ 64 x2172)))) (x1637 (x1928 (x875 (+ x2172 96)))) (x1637 (x1928 (x875 (+ x2172 128)))) (x1637 (x1928 (x875 (+ 160 x2172)))) (x1637 (x1928 (x875 (+ x2172 192)))) 0) (x1637 x1962))))))))) x561)))))
(assert (=> (>= 10000 x996) (= (x984 x996) (x1637 x996))))
(assert (x1208 x1452))
(assert (x1208 x985))
(assert (= x2354 (=> (and (= (= x2336 0) x2320) (= (mod (- x1770 (ite x1638 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x774) (= (x1354 1 x231) x1770) (= x727 (x802 x807 (x984 5) 0)) (= x572 (x2107 (- x36 32))) (< 0 x774) (= (x875 (+ x2358 x1942)) x1409) (= x2171 (div x231 2)) (= (x2107 (- x1409 x1242)) x36) (= x2336 (ite (> x1770 0) x2171 (x1354 127 x2171))) (= (< x2336 32) x1638) (= x231 (x1524 x727))) (and (=> (not x2320) x1138) (=> (and x2320 (and (= (mod (- x1692 (ite x1059 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x400) (not (< 18446744073709551615 x2027)) (= x679 (ite (< 0 x1692) x1838 (x1354 127 x1838))) (= x2027 (x1143 x1242)) (= (> 32 x679) x1059) (= (> x679 31) x607) (= x1692 (x1354 1 x442)) (= x2344 (x802 x807 (x984 5) 0)) (< 0 x400) (= x1838 (div x442 2)) (= (x1524 x2344) x442))) (and (=> (not x607) x2160) (=> (and (and (= (ite (> 32 x2027) x1929 x1359) x718) (= (x875 (+ x2027 31)) x60) (= x1467 (x1285 x1929 x759)) (= x1977 (x875 (+ 31 x679))) (= (> (x1404 x1467) (x1404 x718)) x376) (= x2409 (div x60 32)) (= x759 (div x1977 32)) (= x1929 (x1601 x2344 0)) (= x1359 (x1285 x1929 x2409))) x607) (and (=> x376 x257) (=> (not x376) x635)))))))))
(assert (= x949 (=> (and (= x609 (= 0 x1021)) (= x1021 (x1354 1461501637330902918203684832716283019655932542975 x2122))) (and (=> (and x609 (and (and (= x2264 (x875 (+ x545 4))) (= (x1354 1461501637330902918203684832716283019655932542975 x374) x2215) (= (x1354 1461501637330902918203684832716283019655932542975 x329) x1432) (= (< 0 x698) x116) (= x1496 (x875 (+ 32 x2264))) (= (x875 (+ 32 x2428)) x638) (= x1885 (x1354 18446744073709551615 x900)) (= x1840 (x875 (+ x638 32))) (= x2284 (x126 (x1637 x1432))) (= x2428 (x875 (+ 32 x1496))) (not (= 0 x2284))) (or (not x116) (and (and (= x1963 (x636 (x1637 x1432))) (= (= x1963 (x847 (x1637 x1432))) x57) x172 x57 (> 4294967296 x1694) (= x110 (x636 (x1637 x2208))) (= x172 (>= (x847 (x1637 x2208)) x110))) x116)))) x797) (=> (and (not x609) (and (or (and x29 (and (= x566 (x636 (x1637 x1757))) (> 4294967296 x682) (= x782 (x636 (x1637 x2208))) x595 (= x1300 (<= x782 (x851 (x1637 x2208)))) x1300 (= (= x566 (x851 (x1637 x1757))) x595))) (not x29)) (and (= x1521 (x126 (x1637 x1757))) (= x1757 (x1354 1461501637330902918203684832716283019655932542975 x329)) (= x1321 (x875 (+ x139 32))) (= (x1354 1461501637330902918203684832716283019655932542975 x374) x1221) (= (x875 (+ 32 x2132)) x139) (not (= x1521 0)) (= (x875 (+ 32 x2230)) x1916) (= (x875 (+ 32 x1321)) x2230) (= (x1354 18446744073709551615 x900) x899) (= x29 (< 0 x370)) (= (x875 (+ x545 4)) x2132)))) x867)))))
(assert (= (x1606 (x875 (+ 128 x1482))) 0))
(assert (x1208 x1874))
(assert (= (x1606 320) 0))
(assert (=> (<= x1623 10000) (= (x984 x1623) (x1637 x1623))))
(assert (x384 x59))
(assert (= 0 (x1606 (x875 (+ 192 x118)))))
(assert (= (x984 1461501637330902918203684832716283019655932542975) (x1637 1461501637330902918203684832716283019655932542975)))
(assert (= x2218 (and x1314 x1269)))
(assert (x1208 x73))
(assert (= x1445 (and x1991 x1898)))
(assert (x1208 x1509))
(assert (x1208 x2324))
(assert (= (x1606 224) 0))
(assert (x1431 x150))
(assert (x1208 x1733))
(assert (x1208 x1081))
(assert (x1208 x1292))
(assert (= (and x132 x1035) x892))
(assert (x1208 x1403))
(assert (x1208 x1179))
(assert (= x1543 (and x1765 x864)))
(assert (x1208 x1294))
(assert (x1856 x1645))
(assert (x1208 x512))
(assert (x1208 x1317))
(assert (= x1417 (and x1141 (not x2083))))
(assert (x1208 x1506))
(assert (x384 x329))
(assert (x1208 x1168))
(assert (= 0 (x1606 x1631)))
(assert (= (or x1161 x426) x1039))
(assert (= x428 (and x1933 (not x994))))
(assert (x1208 x2407))
(assert (x1208 x2044))
(assert (x982 x1745))
(assert (x1208 x280))
(assert (x1972 x1941))
(assert (x1431 x2027))
(assert (x1208 x2296))
(assert (= (x1404 (x1285 x2339 1)) (+ (x1404 x2339) 1)))
(assert (= (x1606 (x875 (+ x1820 192))) 0))
(assert (= (div x1254 452312848583266388373324160190187140051835877600158453279131187530910662656) (x510 x1254 248)))
(assert (=> (<= (x514 (x875 (+ 64 x1075))) 10000) (= (x984 (x514 (x875 (+ x1075 64)))) (x1637 (x514 (x875 (+ 64 x1075)))))))
(assert (x1208 x1942))
(assert (= x117 x1007))
(assert (= (and x1441 x2063) x1790))
(assert (x1208 x1653))
(assert (x384 x2034))
(assert (x1208 x573))
(assert (=> (<= (x1386 x315) 10000) (= (x984 (x1386 x315)) (x1637 (x1386 x315)))))
(assert (x981 (x187 x1482)))
(assert (x384 x1363))
(assert (= (=> (and (= (x2242 x410) x2237) (= (x875 (+ 32 x1365)) x1584) (= (not (> x970 x1584)) x2064)) (and x2064 x1901)) x1839))
(assert (x1208 x293))
(assert (x294 x1815))
(assert (x1208 x2177))
(assert (= 0 (x1606 (x875 (+ x1715 96)))))
(assert (= x761 (and x177 x20)))
(assert (= (and x2348 x845) x2406))
(assert (= x2400 (=> (and (and (= (> x2270 0) x86) (= (mod (+ (x1814 x1260 192) (x1814 x1776 160)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x247) (= x269 (x126 (x1637 x453))) (not (= 0 x269)) (= (x1354 1461501637330902918203684832716283019655932542975 x329) x453) (= x1776 (x1354 4294967295 x1401))) (or (and x86 (and (= x1995 (<= x421 (x1479 (x1637 x2208)))) (= x1938 (= (x1479 (x1637 x453)) x1835)) (< x258 4294967296) (= x1835 (x469 (x1637 x453))) (= x421 (x469 (x1637 x2208))) x1995 x1938)) (not x86))) x1915)))
(assert (x1208 x749))
(assert (= (and (not x195) x1830) x2035))
(assert (= (=> (and (= x1532 x81) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x767 1))) (= x1905 x55)) x210) x14))
(assert (= x1150 (and x1780 (not x278))))
(assert (x1208 x1691))
(assert (= (mod (* 6277101735386680763835789423207666416102355444464034512896 x1293) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1814 x1293 192)))
(assert (x1208 x1442))
(assert (= 0 (x1606 (x875 (+ 96 x16)))))
(assert (x1208 x1460))
(assert (x981 (x187 (x875 (+ x1482 64)))))
(assert (x384 x2445))
(assert (= (=> (= x1813 (= x1520 0)) (and (=> (and (= x1526 x1520) x1813) x1346) (=> (and (and (and (= (x1354 131072 x1447) x1437) (= x2251 (= x1437 0))) (or (and (= x1056 (ite x2251 1 0)) x2251) (and (not x2251) (and (not (> x1971 18446744073709551615)) (= x10 (< x1971 x434)) (= (ite x282 1 0) x1056) (= x282 (not x10)) (= (x2107 (- x1275 7776000)) x1971))))) (not x1813)) x783))) x1101))
(assert (= x2459 (or x1508 x255 x70 x41 x1086)))
(assert (= (and x2131 x1481) x467))
(assert (x1208 x1400))
(assert (x1208 x2068))
(assert (x1208 x277))
(assert (= x1866 (=> (and (= (x875 (+ 1 x345)) x1820) (= (x2236 x545) x168) (= x2315 (x875 (+ 1 x1400))) (= x1327 (>= 224 x1400)) (not (< x168 x2315))) (and x1327 (=> (= x2430 (ite (<= x1400 32) (x1601 (x1637 (x2236 x1820)) 0) (ite (>= 64 x1400) (x802 (x1637 (x2236 x1820)) (x1637 (x2236 (x875 (+ x1820 32)))) 0) (ite (<= x1400 96) (x1546 (x1637 (x2236 x1820)) (x1637 (x2236 (x875 (+ x1820 32)))) (x1637 (x2236 (x875 (+ 64 x1820)))) 0) (ite (>= 128 x1400) (x320 (x1637 (x2236 x1820)) (x1637 (x2236 (x875 (+ x1820 32)))) (x1637 (x2236 (x875 (+ 64 x1820)))) (x1637 (x2236 (x875 (+ 96 x1820)))) 0) (ite (>= 160 x1400) (x1619 (x1637 (x2236 x1820)) (x1637 (x2236 (x875 (+ 32 x1820)))) (x1637 (x2236 (x875 (+ x1820 64)))) (x1637 (x2236 (x875 (+ 96 x1820)))) (x1637 (x2236 (x875 (+ x1820 128)))) 0) (ite (<= x1400 192) (x1266 (x1637 (x2236 x1820)) (x1637 (x2236 (x875 (+ 32 x1820)))) (x1637 (x2236 (x875 (+ x1820 64)))) (x1637 (x2236 (x875 (+ x1820 96)))) (x1637 (x2236 (x875 (+ 128 x1820)))) (x1637 (x2236 (x875 (+ x1820 160)))) 0) (ite (>= 224 x1400) (x1412 (x1637 (x2236 x1820)) (x1637 (x2236 (x875 (+ x1820 32)))) (x1637 (x2236 (x875 (+ x1820 64)))) (x1637 (x2236 (x875 (+ x1820 96)))) (x1637 (x2236 (x875 (+ 128 x1820)))) (x1637 (x2236 (x875 (+ x1820 160)))) (x1637 (x2236 (x875 (+ 192 x1820)))) 0) (x1637 x649))))))))) x1440)))))
(assert (x1208 x897))
(assert (= (x1386 (x875 (+ 192 x315))) (x1404 (x1637 (x1386 (x875 (+ 192 x315)))))))
(assert (x1208 x2110))
(assert (= x1269 (and x2060 (not x424))))
(assert (x1208 x1197))
(assert (= x1129 (=> (and (= x1284 (x1386 x1460)) (= (x510 x1284 248) x1454) (= x1744 (x1386 x1627)) (> x1744 0) (= (> x1454 0) x312)) (and (=> x312 x1222) (=> (and (not x312) (= (x984 0) x1471)) x1259)))))
(assert (=> (<= (x187 (x875 (+ x1482 128))) 10000) (= (x984 (x187 (x875 (+ 128 x1482)))) (x1637 (x187 (x875 (+ x1482 128)))))))
(assert (= x476 (and (not x1782) x779)))
(assert (= (or x214 x1444 x428 x24 x1270) x647))
(assert (x1208 x584))
(assert (x156 x1006))
(assert (= x262 (and x2424 x1536)))
(assert (= (x1606 (x875 (+ 32 x1820))) 0))
(assert (= x1440 (=> (and (= x2153 x1413) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1400 1))) (= x2430 x218)) x1216)))
(assert (= x1847 (and x744 x1423)))
(assert (x1208 x1959))
(assert (= (x76 (x875 (+ x118 96))) (x1404 (x1637 (x76 (x875 (+ 96 x118)))))))
(assert (= x2425 (and (not x671) x1224)))
(assert (= x2042 x810))
(assert (x1208 x2428))
(assert (= (and x1629 x2205) x1270))
(assert (= 0 (x1606 (x875 (+ 64 x1068)))))
(assert (x1208 x653))
(assert (x1208 x1559))
(assert (= x1213 (and (not x86) x2111)))
(assert (x1208 x539))
(assert (x1431 x657))
(assert (= 0 (x1606 x1192)))
(assert (x1208 x344))
(assert (x1208 x863))
(assert (x384 x939))
(assert (x1208 x464))
(assert (x1208 x2435))
(assert (= (x1637 (x1404 x1384)) x1384))
(assert (= x1145 (and (not x1421) x2170)))
(assert (x207 x374))
(assert (= (and x85 x341) x317))
(assert (= (=> (and (= (x875 (+ x1826 x1362)) x1589) (= x1122 (x875 (+ x1054 31))) (= x1826 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1122)) (not (or (and (< x1054 32) (= true (<= x1054 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1054))) (not (= 0 x1910)) (= (= 0 x1970) x1243) (= x1970 (x1675 x1362)) (<= x1970 1461501637330902918203684832716283019655932542975)) (and (=> (and (and (= x1559 (x1354 131072 x2461)) (= (x510 x2462 160) x2461) (<= 0 x2462) (= x359 (= x1559 131072)) (= (x802 (x1637 x2380) (x984 1) 0) x121) (<= x2462 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2462 (x381 x121))) x1243) (and (=> (and x359 (and (= x889 (x875 (+ x683 x1589))) (= x1069 (x1354 1 x1073)) (= (x802 (x1637 x2380) (x984 5) 0) x1648) (< 0 x1523) (= (ite (< 0 x1069) x1363 (x1354 127 x1363)) x332) (= x1363 (div x1073 2)) (= x1523 (mod (- x1069 (ite x457 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x875 (+ 32 x1589)) x1051) (= x482 (x875 (+ 31 x332))) (= (div x482 32) x540) (= x552 (= 0 x332)) (= x1016 (mod (* x540 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x457 (< x332 32)) (= x683 (x875 (+ x1016 32))) (= (x1646 x1648) x1073))) (and (=> x552 x2373) (=> (and (not x552) (= x1865 (> x332 31))) (and (=> (and x1865 (and (= x1983 (x1590 x955)) (= (> x817 x388) x1641) (= x388 (x875 (+ x1051 32))) (= x2256 (x1285 x955 1)) (= (x1601 x1648 0) x955) (= (x875 (+ x332 x1051)) x817))) (and (=> x1641 x1397) (=> (not x1641) x1869))) (=> (and (and (= x565 (x1646 x1648)) (= x2045 (mod (* 256 x39) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x39 (div x565 256))) (not x1865)) x2373))))) (=> (and (and (= x2038 x1589) (= (x984 0) x1462)) (not x359)) x1142))) (=> (and (and (= (x802 x650 (x984 1) 0) x1410) (= (x510 x1372 160) x1371) (= x1045 (= x225 131072)) (= x225 (x1354 131072 x1371)) (>= x1372 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1372) (= (x381 x1410) x1372)) (not x1243)) (and (=> (and (and (= (x984 0) x721) (= x2018 x1589)) (not x1045)) x776) (=> (and (and (= x1119 (div x61 2)) (= x77 (x802 x650 (x984 5) 0)) (= x712 (x875 (+ x2324 x1589))) (= (> 32 x2329) x1328) (= x2317 (mod (* 32 x895) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1354 1 x61) x2407) (= (mod (- x2407 (ite x1328 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x245) (= x1430 (x875 (+ 32 x1589))) (< 0 x245) (= x61 (x1646 x77)) (= x1596 (x875 (+ x2329 31))) (= x249 (= x2329 0)) (= (div x1596 32) x895) (= x2329 (ite (< 0 x2407) x1119 (x1354 127 x1119))) (= (x875 (+ x2317 32)) x2324)) x1045) (and (=> x249 x1597) (=> (and (not x249) (= (< 31 x2329) x2103)) (and (=> (and (and (= x501 (< x1002 x2167)) (= (x875 (+ x1430 32)) x1002) (= x2167 (x875 (+ x1430 x2329))) (= (x1590 x2029) x835) (= (x1285 x2029 1) x560) (= x2029 (x1601 x77 0))) x2103) (and (=> (not x501) x1189) (=> x501 x1643))) (=> (and (not x2103) (and (= x2195 (div x152 256)) (= x152 (x1646 x77)) (= x2365 (mod (* x2195 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x1597))))))))) x1670))
(assert (x1208 x205))
(assert (= x931 (or x1718 x2406)))
(assert (= (or x1417 x1540 x2159 x351 x1899) x2418))
(assert (= (x1404 (x1637 x2330)) x2330))
(assert (= x605 (and x685 x2076)))
(assert (x1208 x1254))
(assert (= (and (not x1616) x1711) x214))
(assert (= x1156 (or x619 x491)))
(assert (x981 (x1386 (x875 (+ 160 x315)))))
(assert (x1208 x1715))
(assert (x1208 x701))
(assert (x1208 x987))
(assert (= (x529 (x875 (+ x1715 192))) (x1404 (x1637 (x529 (x875 (+ 192 x1715)))))))
(assert (x1208 x1365))
(assert (x981 (x1928 (x875 (+ x2172 192)))))
(assert (x384 x800))
(assert (=> (<= x2330 10000) (= (x1637 x2330) (x984 x2330))))
(assert (x1208 x2217))
(assert (= x1783 (and (not x1243) x1550)))
(assert (x384 x2296))
(assert (x1208 x1042))
(assert (x1208 x2361))
(assert (x2187 x1044))
(assert (x981 (x859 (x875 (+ 64 x736)))))
(assert (x1208 x1278))
(assert (x948 x516 x104))
(assert (= (x1404 (x1637 (x859 x736))) (x859 x736)))
(assert (= x479 (and x1064 x1172)))
(assert (x1208 x331))
(assert (x1208 x1903))
(assert (x1208 x1319))
(assert (x1208 x412))
(assert (=> (<= (x114 (x875 (+ x1192 32))) 10000) (= (x984 (x114 (x875 (+ 32 x1192)))) (x1637 (x114 (x875 (+ 32 x1192)))))))
(assert (= x2170 (and x2459 x1683)))
(assert (= x1290 (and x1369 (not x46))))
(assert (x1208 x728))
(assert (= (and x1610 x962) x1175))
(assert (x384 x1119))
(assert (x1208 x1134))
(assert (x981 (x1092 (x875 (+ 96 x192)))))
(assert (x1972 x231))
(assert (x1208 x708))
(assert (= x2382 (and x518 (not x508))))
(assert (x1208 x1806))
(assert (= x577 (and (not x532) x473)))
(assert (x1208 x806))
(assert (x1208 x231))
(assert (x2126 x487))
(assert (= (x1637 (x1404 x959)) x959))
(assert (x1208 x2032))
(assert (x1208 x1030))
(assert (x1208 x1962))
(assert (= x2140 (=> (and (= (x1354 32 x487) x1470) (= x1470 0) (= x3 x1480) (= x487 (ite (< x1904 x434) 0 x2461))) x2403)))
(assert (x1208 x1447))
(assert (= (div x5 1461501637330902918203684832716283019655932542976) (x510 x5 160)))
(assert (= (x1404 (x1637 (x1958 224))) (x1958 224)))
(assert (x1208 x2467))
(assert (= x729 (and x532 x473)))
(assert (x1208 x1829))
(assert (x1208 x119))
(assert (x1972 x1486))
(assert (x384 x352))
(assert (=> (<= (x514 x1075) 10000) (= (x984 (x514 x1075)) (x1637 (x514 x1075)))))
(assert (= (x1606 (x875 (+ 64 x1192))) 0))
(assert (x1208 x443))
(assert (x1208 x456))
(assert (x1208 x61))
(assert (=> (<= (x522 192) 10000) (= (x984 (x522 192)) (x1637 (x522 192)))))
(assert (x1208 x1577))
(assert (x1972 x144))
(assert (=> (<= (x1928 (x875 (+ 160 x2172))) 10000) (= (x984 (x1928 (x875 (+ x2172 160)))) (x1637 (x1928 (x875 (+ 160 x2172)))))))
(assert (x1208 x2437))
(assert (x1208 x800))
(assert (=> (<= (x529 x1715) 10000) (= (x1637 (x529 x1715)) (x984 (x529 x1715)))))
(assert (= (x750 (x875 (+ 128 x1668))) (x1404 (x1637 (x750 (x875 (+ x1668 128)))))))
(assert (x1208 x2144))
(assert (= 0 (x1606 (x875 (+ 32 x192)))))
(assert (= x1498 (and x1342 (not x334))))
(assert (x156 x1363))
(assert (x1208 x1051))
(assert (x384 115792089210356248756420345214020892766250353992003419616917011526809519390720))
(assert (x1208 x1229))
(assert (x1208 x323))
(assert (x1208 x961))
(assert (= (+ (x1404 x75) 1) (x1404 (x1285 x75 1))))
(assert (x1208 x113))
(assert (= (and (not x2175) x647) x284))
(assert (= x2207 (and x2185 (not x1517))))
(assert (= (or x2262 x2134) x314))
(assert (x1208 x1757))
(assert (= x1564 (and x1306 x1060)))
(assert (= (or x934 x317) x2131))
(assert (x1208 x1200))
(assert (x287 x1846))
(assert (x1208 x1785))
(assert (x384 x137))
(assert (= x1554 (=> (and (or (and x1124 (and (= 0 x440) (= x1364 (x1354 65536 x2327)) (= x468 (ite x1212 0 x5)) (= x1212 (= x1364 65536)))) (and (and (= x2327 x440) (= x5 x468)) (not x1124))) (= x1124 (> x2293 x105))) x1561)))
(assert (= (and (not x1683) x2459) x758))
(assert (x384 x2412))
(assert (x1208 x575))
(assert (= (div x2005 6277101735386680763835789423207666416102355444464034512896) (x510 x2005 192)))
(assert (= x944 (or x676 x1505)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007908834738175 (x1404 (x984 115792089237316195423570985008687907853269984665640564039457584007908834738175))))
(assert (x346 x1560))
(assert (x1208 x2142))
(assert (= x1701 (=> (and (or (and x1832 (= 0 x1401)) (and (= x1401 x515) (not x1832))) (= (> x2293 x1260) x1832)) x2400)))
(assert (= (x1606 x315) 0))
(assert (= (x1404 (x1637 (x750 (x875 (+ x1668 192))))) (x750 (x875 (+ x1668 192)))))
(assert (= x1085 (and x2320 x1140)))
(assert (= (and x2106 (not x249)) x658))
(assert (= (or x2444 x1565 x1907 x38 x2158) x1140))
(assert (x1208 x682))
(assert (= x2310 (and x1734 (not x932))))
(assert (= (+ 1 (x1404 x266)) (x1404 (x1285 x266 1))))
(assert (x156 x786))
(assert (x1208 x974))
(assert (= 1058533858861509001837889330765714424124041949802528273061784713247848398848 (x1404 (x984 1058533858861509001837889330765714424124041949802528273061784713247848398848))))
(assert (= (+ 1 (x1404 x2029)) (x1404 (x1285 x2029 1))))
(assert (= (mod (* 6277101735386680763835789423207666416102355444464034512896 x856) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1814 x856 192)))
(assert (x1208 x1615))
(assert (x1208 x1006))
(assert (x2187 x1650))
(assert (=> (>= 10000 (x1958 224)) (= (x984 (x1958 224)) (x1637 (x1958 224)))))
(assert (x1208 x2156))
(assert (= x1264 (and x362 x1052)))
(assert (= x2147 (and (not x449) x1126)))
(assert (= x268 (and x1967 x2343)))
(assert (= (x984 4294967295) (x1637 4294967295)))
(assert (= (x1637 131072) (x984 131072)))
(assert (x384 x61))
(assert (= 4294967296 (x1404 (x984 4294967296))))
(assert (x1208 x1499))
(assert (= (x514 (x875 (+ x1075 160))) (x1404 (x1637 (x514 (x875 (+ 160 x1075)))))))
(assert (x1208 x13))
(assert (x384 65536))
(assert (= x1950 (or x1585 x56)))
(assert (= (x1404 (x1637 (x114 (x875 (+ 64 x1192))))) (x114 (x875 (+ 64 x1192)))))
(assert (x1208 x835))
(assert (x1208 x1490))
(assert (= x585 (=> (and (= x2401 (x875 (+ x2282 1))) (= x1041 (x1716 x73)) (= x16 (x875 (+ x1799 1))) (= x881 (>= 224 x2282)) (not (< x1041 x2401))) (and x881 (=> (= x2128 (ite (>= 32 x2282) (x1601 (x1637 (x1716 x16)) 0) (ite (>= 64 x2282) (x802 (x1637 (x1716 x16)) (x1637 (x1716 (x875 (+ x16 32)))) 0) (ite (>= 96 x2282) (x1546 (x1637 (x1716 x16)) (x1637 (x1716 (x875 (+ 32 x16)))) (x1637 (x1716 (x875 (+ 64 x16)))) 0) (ite (>= 128 x2282) (x320 (x1637 (x1716 x16)) (x1637 (x1716 (x875 (+ 32 x16)))) (x1637 (x1716 (x875 (+ x16 64)))) (x1637 (x1716 (x875 (+ 96 x16)))) 0) (ite (<= x2282 160) (x1619 (x1637 (x1716 x16)) (x1637 (x1716 (x875 (+ x16 32)))) (x1637 (x1716 (x875 (+ 64 x16)))) (x1637 (x1716 (x875 (+ 96 x16)))) (x1637 (x1716 (x875 (+ x16 128)))) 0) (ite (>= 192 x2282) (x1266 (x1637 (x1716 x16)) (x1637 (x1716 (x875 (+ 32 x16)))) (x1637 (x1716 (x875 (+ 64 x16)))) (x1637 (x1716 (x875 (+ x16 96)))) (x1637 (x1716 (x875 (+ 128 x16)))) (x1637 (x1716 (x875 (+ 160 x16)))) 0) (ite (>= 224 x2282) (x1412 (x1637 (x1716 x16)) (x1637 (x1716 (x875 (+ x16 32)))) (x1637 (x1716 (x875 (+ x16 64)))) (x1637 (x1716 (x875 (+ x16 96)))) (x1637 (x1716 (x875 (+ 128 x16)))) (x1637 (x1716 (x875 (+ x16 160)))) (x1637 (x1716 (x875 (+ 192 x16)))) 0) (x1637 x2283))))))))) x886)))))
(assert (= 0 (x1606 (x875 (+ x16 128)))))
(assert (x384 x527))
(assert (= x1082 (and x1510 x2464)))
(assert (= x2209 (=> (and (and (= x800 (ite (< x1043 x434) 0 x823)) (= x1669 (x1354 1 x800)) (= x804 (= x1669 0)) (= (not (= x933 0)) x625) (= (x1354 4294901760 x142) x933)) (or (and (not x625) (not x625)) (and x625 (not x804)))) x1058)))
(assert (= x952 (and x1734 x932)))
(assert (x1208 x6))
(assert (= (x1606 x363) 0))
(assert (x1208 x1028))
(assert (x384 x2027))
(assert (=> (>= 10000 (x1092 x192)) (= (x984 (x1092 x192)) (x1637 (x1092 x192)))))
(assert (= x858 (or x108 x1787 x2427)))
(assert (= 0 (x1606 (x875 (+ 64 x315)))))
(assert (= (x1928 (x875 (+ 64 x2172))) (x1404 (x1637 (x1928 (x875 (+ 64 x2172)))))))
(assert (x1208 x1103))
(assert (= x1291 (and x1991 (not x1898))))
(assert (x1208 x1659))
(assert (x1208 x2376))
(assert (= x2464 (and (not x2138) x626)))
(assert (= x1091 (or x876 x2294)))
(assert (= (x1606 x1319) 0))
(assert (x1208 x2330))
(assert (=> (>= 10000 (x1958 320)) (= (x1637 (x1958 320)) (x984 (x1958 320)))))
(assert (x1208 x801))
(assert (x1208 x1846))
(assert (x1208 x2072))
(assert (= x1542 (and x242 (not x846))))
(assert (= (or x316 x2226) x1550))
(assert (x1208 x869))
(assert (x1208 x1531))
(assert (= x999 (and x248 x1906)))
(assert (= x2158 (and x2010 (not x1600))))
(assert (x1208 x1154))
(assert (x981 (x1716 (x875 (+ x16 32)))))
(assert (= (=> (and (= x1190 x2128) (= x1195 x573) (not (>= (+ x2282 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2423) x886))
(assert (x1208 x1769))
(assert (= (x1606 (x875 (+ 64 x192))) 0))
(assert (x1208 x2291))
(assert (x1208 x792))
(assert (x156 x763))
(assert (= x1538 (x1404 (x1637 x1538))))
(assert (x1208 x1313))
(assert (= (=> (and (<= 0 x1090) (= (x802 x807 (x984 1) 0) x1931) (= (ite (> x720 x1043) x1043 x939) x174) (= x720 (x1354 18446744073709551615 x939)) (= (x1354 131072 x1355) x403) (= x848 (= 131072 x403)) (= (x381 x1931) x1090) (= x1170 (x1354 18446744073709551615 x174)) (= (x510 x1090 160) x1355) (= (ite (> x2359 x1170) x2359 x174) x2412) (<= x1090 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (and (= x1435 (x984 0)) (= x437 x1067)) (not x848)) x2388) (=> (and x848 (and (= x1698 (> 32 x2154)) (> x2266 0) (= (mod (* x1695 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x542) (= x417 (x875 (+ 32 x542))) (= (x1524 x1724) x144) (= x877 (x875 (+ x437 x417))) (= x972 (x875 (+ x2154 31))) (= (div x972 32) x1695) (= (mod (- x643 (ite x1698 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2266) (= x643 (x1354 1 x144)) (= x1690 (= x2154 0)) (= (x802 x807 (x984 5) 0) x1724) (= x2154 (ite (< 0 x643) x1245 (x1354 127 x1245))) (= (div x144 2) x1245) (= (x875 (+ 32 x437)) x1909))) (and (=> x1690 x664) (=> (and (not x1690) (= (> x2154 31) x1974)) (and (=> (and (and (= (x875 (+ x1909 x2154)) x1844) (= x2314 (x1285 x738 1)) (= x1580 (x2242 x738)) (= (< x1228 x1844) x1765) (= x1228 (x875 (+ x1909 32))) (= (x1601 x1724 0) x738)) x1974) (and (=> (not x1765) x1261) (=> x1765 x397))) (=> (and (and (= x2089 (div x667 256)) (= x667 (x1524 x1724)) (= (mod (* x2089 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2238)) (not x1974)) x664))))))) x1058))
(assert (x1972 x597))
(assert (x981 (x1386 (x875 (+ 64 x315)))))
(assert (= x816 (=> (and (not (> x792 x1326)) (= (<= x503 224) x1685) (= (x875 (+ 1 x503)) x792) (= x1715 (x875 (+ x1430 1))) (= x1326 (x529 x1589))) (and x1685 (=> (= (ite (<= x503 32) (x1601 (x1637 (x529 x1715)) 0) (ite (>= 64 x503) (x802 (x1637 (x529 x1715)) (x1637 (x529 (x875 (+ 32 x1715)))) 0) (ite (<= x503 96) (x1546 (x1637 (x529 x1715)) (x1637 (x529 (x875 (+ x1715 32)))) (x1637 (x529 (x875 (+ 64 x1715)))) 0) (ite (<= x503 128) (x320 (x1637 (x529 x1715)) (x1637 (x529 (x875 (+ 32 x1715)))) (x1637 (x529 (x875 (+ x1715 64)))) (x1637 (x529 (x875 (+ x1715 96)))) 0) (ite (<= x503 160) (x1619 (x1637 (x529 x1715)) (x1637 (x529 (x875 (+ x1715 32)))) (x1637 (x529 (x875 (+ x1715 64)))) (x1637 (x529 (x875 (+ x1715 96)))) (x1637 (x529 (x875 (+ 128 x1715)))) 0) (ite (>= 192 x503) (x1266 (x1637 (x529 x1715)) (x1637 (x529 (x875 (+ 32 x1715)))) (x1637 (x529 (x875 (+ 64 x1715)))) (x1637 (x529 (x875 (+ 96 x1715)))) (x1637 (x529 (x875 (+ x1715 128)))) (x1637 (x529 (x875 (+ x1715 160)))) 0) (ite (<= x503 224) (x1412 (x1637 (x529 x1715)) (x1637 (x529 (x875 (+ 32 x1715)))) (x1637 (x529 (x875 (+ x1715 64)))) (x1637 (x529 (x875 (+ x1715 96)))) (x1637 (x529 (x875 (+ 128 x1715)))) (x1637 (x529 (x875 (+ 160 x1715)))) (x1637 (x529 (x875 (+ 192 x1715)))) 0) (x1637 x2098)))))))) x188) x1743)))))
(assert (x1208 x1892))
(assert (= 0 (x1606 (x875 (+ 64 x118)))))
(assert (x1431 x228))
(assert (x1208 x147))
(assert (= (x1404 (x1637 (x1928 (x875 (+ 128 x2172))))) (x1928 (x875 (+ 128 x2172)))))
(assert (x1208 x614))
(assert (= (x1606 (x875 (+ 32 x1482))) 0))
(assert (=> (>= 10000 (x1958 256)) (= (x984 (x1958 256)) (x1637 (x1958 256)))))
(assert (=> (>= 10000 (x76 (x875 (+ 160 x118)))) (= (x984 (x76 (x875 (+ x118 160)))) (x1637 (x76 (x875 (+ x118 160)))))))
(assert (= x2098 (x1404 (x1637 x2098))))
(assert (x1750 x1299))
(assert (=> (>= 10000 x2283) (= (x984 x2283) (x1637 x2283))))
(assert (= x511 (and x513 x605)))
(assert (x981 x1492))
(assert (= (x529 (x875 (+ x1715 160))) (x1404 (x1637 (x529 (x875 (+ x1715 160)))))))
(assert (= x461 (and x1291 x582)))
(assert (= x480 (and x850 (not x625))))
(assert (x1208 x2447))
(assert (= (or x173 x1587) x157))
(assert (x1208 x300))
(assert (= x1952 (x1404 (x1637 x1952))))
(assert (x1208 x990))
(assert (x1208 x1395))
(assert (= x93 (and x35 x536)))
(assert (x1208 x811))
(assert (= (x1637 4294901760) (x984 4294901760)))
(assert (x1208 x165))
(assert (x1208 x684))
(assert (x384 x280))
(assert (= x2448 (or x467 x935)))
(assert (= x2123 (and x840 x2251)))
(assert (= x219 (and x1187 x2404)))
(assert (= (and x605 (not x513)) x1172))
(assert (= x2017 (=> (= (= (x984 0) x2335) x422) (and (=> (and (and (and (= x449 (< 0 x2136)) (= (x875 (+ x1781 4)) x2200)) (or (and (not x449) (= x2136 x1116)) (and x449 (and (< x2438 4294967296) (= x1116 1))))) (not x422)) x690) (=> (and x422 (and (= x1781 x390) (= (x510 x945 192) x1630))) x1302)))))
(assert (= (and x2060 x424) x1469))
(assert (x384 x2068))
(assert (x1972 x2057))
(assert (= (x1404 (x1637 (x1958 160))) (x1958 160)))
(assert (x1208 x915))
(assert (x981 (x1386 (x875 (+ x315 96)))))
(assert (= (and (not x1591) x267) x56))
(assert (x1208 x247))
(assert (x1208 x2057))
(assert (= x2319 (=> (and (= x459 x716) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ 1 x998))) (= x2397 x1446)) x265)))
(assert (x1208 x1075))
(assert (x1208 x1049))
(assert (= (ite (< x1249 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1994 2 x1249)) 0) (x510 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1249)))
(assert (x1208 x27))
(assert (x1208 x2461))
(assert (x1208 x1307))
(assert (x1208 x1747))
(assert (= (x1637 65535) (x984 65535)))
(assert (= x1487 (or (and x340 (not x600)) x1396)))
(assert (x384 x865))
(assert (= (=> (and (= (x522 128) x901) (= x2432 (>= 224 x901))) (and (=> (and (= (div x941 32) x1588) (= x1539 (x875 (+ 32 x1186))) (= (mod (* 32 x1588) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x119) (= (x802 (x1637 x2380) (x984 5) 0) x1167) (= (x875 (+ 32 x1539)) x2447) (= x775 (x1354 1 x2068)) (= (mod (- x775 (ite x250 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x674) (= (x875 (+ x1476 31)) x941) (= x1186 (x875 (+ x2070 32))) (= x1162 (ite (>= 32 x901) (x1601 (x1637 (x522 160)) 0) (ite (>= 64 x901) (x802 (x1637 (x522 160)) (x1637 (x522 192)) 0) (ite (>= 96 x901) (x1546 (x1637 (x522 160)) (x1637 (x522 192)) (x1637 (x522 224)) 0) (ite (>= 128 x901) (x320 (x1637 (x522 160)) (x1637 (x522 192)) (x1637 (x522 224)) (x1637 (x522 256)) 0) (ite (>= 160 x901) (x1619 (x1637 (x522 160)) (x1637 (x522 192)) (x1637 (x522 224)) (x1637 (x522 256)) (x1637 (x522 288)) 0) (ite (>= 192 x901) (x1266 (x1637 (x522 160)) (x1637 (x522 192)) (x1637 (x522 224)) (x1637 (x522 256)) (x1637 (x522 288)) (x1637 (x522 320)) 0) (ite (>= 224 x901) (x1412 (x1637 (x522 160)) (x1637 (x522 192)) (x1637 (x522 224)) (x1637 (x522 256)) (x1637 (x522 288)) (x1637 (x522 320)) (x1637 (x522 352)) 0) (x1637 x2268))))))))) (= x221 (x82 4294836223 x142)) (= x2012 (x875 (+ x1539 x2309))) (= 4294836223 x505) (= x2070 (x875 (+ 32 x3))) (= x436 (x2107 (- x6 32))) (= x756 (div x2068 2)) (= (ite (> x775 0) x756 (x1354 127 x756)) x1476) (= x250 (> 32 x1476)) (= (x1354 4294967295 x221) x505) (= x202 (= x1476 0)) (= x2309 (x875 (+ 32 x119))) (= x6 (x2107 (- x1539 x3))) (= (x1646 x1167) x2068) (= x807 (x802 (x1637 x2380) x1162 0)) (< 0 x674)) (and (=> x202 x222) (=> (and (= x46 (< 31 x1476)) (not x202)) (and (=> (and (and (= x358 (mod (* x2247 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x298 (x1646 x1167)) (= (div x298 256) x2247)) (not x46)) x222) (=> (and x46 (and (= x869 (x875 (+ 32 x2447))) (= (x1590 x1040) x170) (= (x875 (+ x2447 x1476)) x1029) (= x32 (x1285 x1040 1)) (= (x1601 x1167 0) x1040) (= (< x869 x1029) x2061))) (and (=> (not x2061) x1050) (=> x2061 x2350))))))) x2432)) x2403))
(assert (= (and x1085 x607) x680))
(assert (x1208 x1689))
(assert (x1208 x1802))
(assert (x384 x2057))
(assert (= x292 (and (not x607) x1085)))
(assert (x981 x299))
(assert (x1208 x2283))
(assert (= x1688 (and x1487 x2356)))
(assert (x981 (x1716 (x875 (+ 96 x16)))))
(assert (x1208 x812))
(assert (x1208 x710))
(assert (= (x510 x2462 160) (div x2462 1461501637330902918203684832716283019655932542976)))
(assert (= 0 (x1606 x1547)))
(assert (= (or x458 x2448) x173))
(assert (= x1899 (and x962 (not x1610))))
(assert (x981 (x1386 (x875 (+ 128 x315)))))
(assert (x1208 x1731))
(assert (x287 x1299))
(assert (=> (<= (x750 (x875 (+ x1668 192))) 10000) (= (x1637 (x750 (x875 (+ x1668 192)))) (x984 (x750 (x875 (+ x1668 192)))))))
(assert (=> (>= 10000 (x114 (x875 (+ x1192 192)))) (= (x984 (x114 (x875 (+ 192 x1192)))) (x1637 (x114 (x875 (+ 192 x1192)))))))
(assert (x1208 x1311))
(assert (= (x1404 (x984 18446744073709551615)) 18446744073709551615))
(assert (= x1629 (and x1711 x1616)))
(assert (=> (<= (x76 x118) 10000) (= (x1637 (x76 x118)) (x984 (x76 x118)))))
(assert (x948 x1251 x1693))
(assert (= x507 (or x758 x1023 x262 x1145 x1507)))
(assert (x1208 x1879))
(assert (= (=> (= x1357 (= x218 (x984 0))) (and (=> (and (not x1357) (and (and (= (x875 (+ x2153 4)) x1719) (= x845 (> x872 0))) (or (and (not x845) (= x872 x296)) (and x845 (and (< x1280 4294967296) (= x296 1)))))) x1789) (=> (and (and (= x2153 x686) (= x1403 (x510 x1625 192))) x1357) x1501))) x1216))
(assert (= x2019 (=> (and (= x276 (x2242 x1774)) (= (not (< x2235 x496)) x414) (= x2235 (x875 (+ x1279 32)))) (and x414 x528))))
(assert (= x1013 (or x1500 x1800)))
(assert (= (and x2245 x1057) x1513))
(assert (x1208 x2273))
(assert (=> (>= 10000 x1952) (= (x1637 x1952) (x984 x1952))))
(assert (x384 x53))
(assert (x1208 x105))
(assert (x384 x1044))
(assert (= x587 (or x1790 (and x1441 (not x2063)))))
(assert (x1208 x420))
(assert (x981 (x1092 (x875 (+ x192 192)))))
(assert (= (x114 (x875 (+ x1192 160))) (x1404 (x1637 (x114 (x875 (+ x1192 160)))))))
(assert (= (mod (* 1461501637330902918203684832716283019655932542976 x1466) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1814 x1466 160)))
(assert (= (and x1149 x1832) x2015))
(assert (= (x1404 (x1637 (x514 (x875 (+ x1075 128))))) (x514 (x875 (+ 128 x1075)))))
(assert (= x1960 (or x1823 x562)))
(assert (=> (<= (x2236 (x875 (+ x1820 192))) 10000) (= (x1637 (x2236 (x875 (+ 192 x1820)))) (x984 (x2236 (x875 (+ x1820 192)))))))
(assert (= (x529 (x875 (+ 128 x1715))) (x1404 (x1637 (x529 (x875 (+ 128 x1715)))))))
(assert (= (x1404 (x984 4294967295)) 4294967295))
(assert (x1208 x1361))
(assert (x1208 x127))
(assert (x1208 x2214))
(assert (x1208 x1324))
(assert (x1208 x1520))
(assert (= (or x8 x399) x940))
(assert (x1208 x1673))
(assert (x1208 x1248))
(assert (x1208 x186))
(assert (x1208 x570))
(assert (x1208 x2368))
(assert (= (div x760 1461501637330902918203684832716283019655932542976) (x510 x760 160)))
(assert (x1208 x786))
(assert (x1208 x2191))
(assert (= 0 (x1606 x1200)))
(assert (= (div x1943 1461501637330902918203684832716283019655932542976) (x510 x1943 160)))
(assert (=> (>= 10000 (x2236 (x875 (+ 32 x1820)))) (= (x1637 (x2236 (x875 (+ 32 x1820)))) (x984 (x2236 (x875 (+ x1820 32)))))))
(assert (x1208 x433))
(assert (x981 x2380))
(assert (x1208 x1521))
(assert (x1208 x823))
(assert (x1208 x556))
(assert (x1208 x796))
(assert (= x1743 (=> (and (= x712 x2018) (= x188 x721) (not (>= (+ 1 x503) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x776)))
(assert (x1208 x1834))
(assert (=> (<= (x114 (x875 (+ x1192 96))) 10000) (= (x1637 (x114 (x875 (+ x1192 96)))) (x984 (x114 (x875 (+ 96 x1192)))))))
(assert (x1208 x903))
(assert (= x212 (or x2147 x2322)))
(assert (= 0 (x1606 x1909)))
(assert (= (x984 1058358655) (x1637 1058358655)))
(assert (x1208 x1694))
(assert (x1208 x2005))
(assert (x1208 x1284))
(assert (x1208 x1001))
(assert (x1431 x1122))
(assert (x1208 x2238))
(assert (x1208 x2326))
(assert (= (x1814 x1883 248) (mod (* x1883 452312848583266388373324160190187140051835877600158453279131187530910662656) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1208 x1605))
(assert (= (or x2386 x1003) x1967))
(assert (x1208 x417))
(assert (= 0 (x1606 (x875 (+ 160 x192)))))
(assert (x1208 x1970))
(assert (x1208 x540))
(assert (x1208 x736))
(assert (x384 x538))
(assert (x1208 x1242))
(assert (x1208 x281))
(assert (x1208 x1207))
(assert (x384 x1030))
(assert (x1208 x2369))
(assert (x981 (x1928 (x875 (+ 64 x2172)))))
(assert (x1208 x2174))
(assert (= (=> (and (= (x875 (+ 7776000 x506)) x2452) (= x592 (x875 (+ 31 x588))) (not (> x2452 18446744073709551615)) (= (x1354 18446744073709551615 x1010) x506) (not (= x554 0)) (= x704 x1055) (= (x875 (+ x2001 x1134)) x704) (= (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x592) x2001) (= (x1478 x1134) x1010) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x588) (and (< x588 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x588))))) (= x2452 x856)) x2234) x191))
(assert (x981 (x514 (x875 (+ x1075 96)))))
(assert (x384 x763))
(assert (x1208 x496))
(assert (x1208 x830))
(assert (x1208 x1272))
(assert (= (and (not x1335) x611) x1775))
(assert (= (and x1115 x1705) x98))
(assert (x1208 x253))
(assert (= (+ 1 (x1404 x445)) (x1404 (x1285 x445 1))))
(assert (x981 (x1928 (x875 (+ x2172 128)))))
(assert (x981 (x1716 (x875 (+ 64 x16)))))
(assert (x1208 x1252))
(assert (= x1800 (and x369 x1124)))
(assert (= (x1404 (x1637 x2208)) x2208))
(assert (x384 32))
(assert (= 0 (x1606 (x875 (+ x2172 160)))))
(assert (= x1850 (or x2123 x1635)))
(assert (x1208 x1026))
(assert (x1208 x1870))
(assert (x1208 x1454))
(assert (x2187 x1010))
(assert (x156 x756))
(assert (= (and (not x1078) x1700) x1951))
(assert (x1208 x516))
(assert (=> (<= (x114 (x875 (+ x1192 128))) 10000) (= (x984 (x114 (x875 (+ x1192 128)))) (x1637 (x114 (x875 (+ x1192 128)))))))
(assert (= (and x559 x2286) x1214))
(assert (= (x1404 (x1637 (x114 (x875 (+ 128 x1192))))) (x114 (x875 (+ x1192 128)))))
(assert (x1208 x1374))
(assert (x1273 x221))
(assert (= x819 (or x1127 x480)))
(assert (x1208 x1372))
(assert (x2187 x134))
(assert (x384 x756))
(assert (x1208 x81))
(assert (x1208 x602))
(assert (x1208 x261))
(assert (x1972 x216))
(assert (= (x1606 x443) 0))
(assert (= x1023 (and (not x2424) x1536)))
(assert (= (and x1720 (not x853)) x843))
(assert (x981 x2208))
(assert (x1208 x404))
(assert (= x1416 (and x2026 x154)))
(assert (x1208 x1137))
(assert (x1208 x1178))
(assert (x1208 x623))
(assert (x1208 x1771))
(assert (= (or x2269 x670) x626))
(assert (= (or x1950 x342) x112))
(assert (x384 x1137))
(assert (x1208 x1111))
(assert (=> (<= x2380 10000) (= (x984 x2380) (x1637 x2380))))
(assert (= x1757 (x1404 (x1637 x1757))))
(assert (= (x510 x2241 192) (div x2241 6277101735386680763835789423207666416102355444464034512896)))
(assert (= x1428 (=> (and (= x1078 (< x1275 x2293)) (or (and (and (= x2210 x2125) (= x1447 x1577)) (not x1078)) (and (and (= x1733 (x1354 65536 x1577)) (= (ite x452 0 x2125) x2210) (= (= 65536 x1733) x452) (= x1447 0)) x1078))) x1652)))
(assert (x1208 x431))
(assert (x1208 x1781))
(assert (= x354 (=> (and (= x1115 (> x2293 x323)) (or (and (= x1090 x2122) (not x1115)) (and (and (= (ite x770 0 x1090) x2122) (= x2087 (x1354 65536 x1355)) (= x770 (= x2087 65536))) x1115))) x949)))
(assert (x981 (x76 (x875 (+ x118 160)))))
(assert (x1208 x1622))
(assert (= x795 (or x1740 x2295)))
(assert (x1208 x1195))
(assert (= (x1606 x1430) 0))
(assert (= x627 (=> (and (= x100 (x1354 65536 x1528)) (= x100 0) (= x3 x788) (= (ite (> x434 x1622) 0 x1371) x1528)) x2403)))
(assert (= (x1386 (x875 (+ 96 x315))) (x1404 (x1637 (x1386 (x875 (+ 96 x315)))))))
(assert (= (and x1342 x334) x2297))
(assert (x1208 x895))
(assert (= x473 (and (not x181) x2069)))
(assert (= (x2357 (x875 (+ 160 x1068))) (x1404 (x1637 (x2357 (x875 (+ 160 x1068)))))))
(assert (x1208 x739))
(assert (x1208 x1048))
(assert (= (and x42 x140) x1148))
(assert (= x2469 (=> (and (= x1319 (x875 (+ x2012 32))) (= (not (< 32 x1785)) x2313) (= x1025 (x455 x1319)) (= (x1285 x266 1) x2395)) (and x2313 (=> (and (= x1484 x2395) (= 64 x1917)) x1256)))))
(assert (= x1129 x196))
(assert (= (x1637 (x1404 x2417)) x2417))
(assert (= (x2357 (x875 (+ 192 x1068))) (x1404 (x1637 (x2357 (x875 (+ x1068 192)))))))
(assert (x1208 x1686))
(assert (x156 x796))
(assert (= (and x692 x1974) x864))
(assert (= x2456 (and x884 (not x136))))
(assert (=> (<= x197 10000) (= (x1637 x197) (x984 x197))))
(assert (= (x1606 (x875 (+ x736 160))) 0))
(assert (x1208 x2379))
(assert (= x2042 (not (= x2198 x807))))
(assert (x1208 x1170))
(assert (= (and x365 (not x1450)) x1297))
(assert (x384 x231))
(assert (x1208 x495))
(assert (= (x1606 x1668) 0))
(assert (x1208 x2157))
(assert (x1208 x1946))
(assert (x1208 x374))
(assert (x384 x186))
(assert (x1208 x168))
(assert (x1208 x349))
(assert (x1208 x1983))
(assert (x384 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x1161 (and x1032 x714)))
(assert (x1208 x2204))
(assert (x156 x2036))
(assert (= (and x1335 x611) x722))
(assert (= (x1606 x83) 0))
(assert (x1208 x459))
(assert (x1208 x2002))
(assert (= (or x1034 x379) x571))
(assert (= (x1606 (x875 (+ x1075 160))) 0))
(assert (x384 x2171))
(assert (x1208 x2034))
(assert (= (and x819 (not x848)) x342))
(assert (x1208 x110))
(assert (x1208 x567))
(assert (= (=> (and (= (x875 (+ 32 x1002)) x2328) (= (not (< x2328 x2167)) x189) (= x526 (x1590 x560))) (and x189 x1189)) x1643))
(assert (x1208 x2438))
(assert (= (x1404 (x984 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x1071 (or x563 x1082)))
(assert (= x1223 (=> (and (= (x875 (+ x1242 32)) x1772) (= (x2398 128) x1522) (= (x1354 255 x524) x2150) (= (x1493 128) x524) (= x1252 (x875 (+ x1772 1))) (= (x1814 x2150 248) x392) (= x2083 (< 0 x1522))) (and (=> (and (and (= x1848 (x2398 160)) (= (< 32 x1522) x1610) (= x1252 x2291)) x2083) (and (=> (and (and (= x1276 (> x1522 64)) (= (x875 (+ x1252 32)) x435) (= x678 (x1552 192))) x1610) (and (=> (not x1276) x1453) (=> (and x1276 (and (= x2189 (> x1522 96)) (= (x875 (+ 64 x1252)) x1803) (= (x957 224) x965))) (and (=> x2189 x950) (=> (not x2189) x1453))))) (=> (not x1610) x1453))) (=> (not x2083) x1453)))))
(assert (x1208 x919))
(assert (= x364 (and x1794 x997)))
(assert (x1208 x411))
(assert (=> (<= (x859 (x875 (+ 128 x736))) 10000) (= (x1637 (x859 (x875 (+ x736 128)))) (x984 (x859 (x875 (+ 128 x736)))))))
(assert (= (x1606 (x875 (+ x1068 128))) 0))
(assert (x1208 x409))
(assert (x1431 x1874))
(assert (x384 x2176))
(assert (= x2025 (and x2085 x1987)))
(assert (= (div x945 6277101735386680763835789423207666416102355444464034512896) (x510 x945 192)))
(assert (x1208 x882))
(assert (x1208 x1110))
(assert (= (x1606 (x875 (+ x736 192))) 0))
(assert (= x890 (or x1863 x2278)))
(assert (= (=> (and (= (x2242 x557) x2240) (= (not (> x2181 x2352)) x601) (= (x875 (+ x1884 32)) x2352)) (and x705 x601)) x839))
(assert (x1208 x754))
(assert (= x564 (and x2185 x1517)))
(assert (= 549686827 (x1404 (x984 549686827))))
(assert (x1208 x1580))
(assert (= (and x1450 x365) x259))
(assert (x1208 x390))
(assert (x1208 x1019))
(assert (=> (>= 10000 (x522 288)) (= (x984 (x522 288)) (x1637 (x522 288)))))
(assert (x1208 x1732))
(assert (x1208 x1286))
(assert (=> (<= (x2357 x1068) 10000) (= (x1637 (x2357 x1068)) (x984 (x2357 x1068)))))
(assert (x1208 x632))
(assert (= (div x1525 1461501637330902918203684832716283019655932542976) (x510 x1525 160)))
(assert (= 0 (x1606 (x875 (+ x1715 32)))))
(assert (x1208 x720))
(assert (= (x1404 (x984 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x1208 x1744))
(assert (x1208 x1608))
(assert (=> (<= (x1928 (x875 (+ 128 x2172))) 10000) (= (x984 (x1928 (x875 (+ x2172 128)))) (x1637 (x1928 (x875 (+ x2172 128)))))))
(assert (x1208 x295))
(assert (= x265 (=> (= x781 (= x1446 (x984 0))) (and (=> (and (= x1260 (x510 x760 192)) x781) x1701) (=> (and (not x781) (and (or (and (and (= x1262 1) (< x830 4294967296)) x2006) (and (not x2006) (= x1999 x1262))) (and (= (x875 (+ x459 4)) x512) (= (< 0 x1999) x2006)))) x1665)))))
(assert (= (div x176 452312848583266388373324160190187140051835877600158453279131187530910662656) (x510 x176 248)))
(assert (= (and x1233 (not x2399)) x458))
(assert (= x2348 (and (not x1357) x2394)))
(assert (x1208 x18))
(assert (x1208 x1999))
(assert (x206 4294836223))
(assert (x1208 x1420))
(assert (= x488 true))
(assert (= (x1637 65537) (x984 65537)))
(assert (= (x187 (x875 (+ x1482 96))) (x1404 (x1637 (x187 (x875 (+ x1482 96)))))))
(assert (x1972 x1011))
(assert (= (x522 224) (x1404 (x1637 (x522 224)))))
(assert (x981 (x1716 (x875 (+ 128 x16)))))
(assert (x1208 x566))
(assert (x1208 x703))
(assert (x1208 x2337))
(assert (=> (>= 10000 (x750 (x875 (+ 64 x1668)))) (= (x984 (x750 (x875 (+ x1668 64)))) (x1637 (x750 (x875 (+ x1668 64)))))))
(assert (x1208 x938))
(assert (x1208 x1018))
(assert (= x773 x1138))
(assert (x1208 x1998))
(assert (= x690 (=> (and (not (or (and (< x2438 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2438) true)) (> x2438 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x818 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x150)) (not (> x264 18446744073709551615)) (= (x832 x1781) x2071) (= x390 x1207) (= x1630 x264) (= (x875 (+ x2438 31)) x150) (= x264 (x875 (+ x2004 7776000))) (= (x875 (+ x1781 x818)) x1207) (= x2004 (x1354 18446744073709551615 x2071)) (not (= 0 x1116))) x1302)))
(assert (=> (<= (x514 (x875 (+ 32 x1075))) 10000) (= (x984 (x514 (x875 (+ x1075 32)))) (x1637 (x514 (x875 (+ x1075 32)))))))
(assert (x384 x1819))
(assert (= x1305 (or x2014 x1004)))
(assert (x384 x442))
(assert (= (x1606 x1715) 0))
(assert (=> (>= 10000 (x529 (x875 (+ 160 x1715)))) (= (x1637 (x529 (x875 (+ x1715 160)))) (x984 (x529 (x875 (+ x1715 160)))))))
(assert (=> (<= (x750 (x875 (+ x1668 32))) 10000) (= (x1637 (x750 (x875 (+ x1668 32)))) (x984 (x750 (x875 (+ 32 x1668)))))))
(assert (= x838 (and (not x1152) x952)))
(assert (x1208 x104))
(assert (x1208 x1251))
(assert (= (x1958 192) (x1404 (x1637 (x1958 192)))))
(assert (x1431 x2176))
(assert (= x252 (and (not x2006) x159)))
(assert (x1208 x657))
(assert (x384 x1578))
(assert (= x365 (and (not x1457) x235)))
(assert (= (and (not x1832) x1149) x1759))
(assert (= (x1404 (x1637 (x1092 x192))) (x1092 x192)))
(assert (x1208 x2292))
(assert (= (x1404 (x1637 (x1716 (x875 (+ x16 192))))) (x1716 (x875 (+ 192 x16)))))
(assert (x1208 x998))
(assert (= x995 (and x1849 x1258)))
(assert (= 0 (x1606 x1482)))
(assert (x1208 x1358))
(assert (x1208 x617))
(assert (= (x1404 (x1637 (x1716 (x875 (+ x16 128))))) (x1716 (x875 (+ 128 x16)))))
(assert (= (=> (and (= x1192 (x875 (+ x882 1))) (= (x114 x1409) x1660) (not (< x1660 x594)) (= (>= 224 x1001) x1151) (= (x875 (+ 1 x1001)) x594)) (and x1151 (=> (= x162 (ite (<= x1001 32) (x1601 (x1637 (x114 x1192)) 0) (ite (<= x1001 64) (x802 (x1637 (x114 x1192)) (x1637 (x114 (x875 (+ x1192 32)))) 0) (ite (<= x1001 96) (x1546 (x1637 (x114 x1192)) (x1637 (x114 (x875 (+ x1192 32)))) (x1637 (x114 (x875 (+ 64 x1192)))) 0) (ite (<= x1001 128) (x320 (x1637 (x114 x1192)) (x1637 (x114 (x875 (+ x1192 32)))) (x1637 (x114 (x875 (+ 64 x1192)))) (x1637 (x114 (x875 (+ x1192 96)))) 0) (ite (<= x1001 160) (x1619 (x1637 (x114 x1192)) (x1637 (x114 (x875 (+ x1192 32)))) (x1637 (x114 (x875 (+ x1192 64)))) (x1637 (x114 (x875 (+ 96 x1192)))) (x1637 (x114 (x875 (+ 128 x1192)))) 0) (ite (>= 192 x1001) (x1266 (x1637 (x114 x1192)) (x1637 (x114 (x875 (+ x1192 32)))) (x1637 (x114 (x875 (+ x1192 64)))) (x1637 (x114 (x875 (+ 96 x1192)))) (x1637 (x114 (x875 (+ 128 x1192)))) (x1637 (x114 (x875 (+ x1192 160)))) 0) (ite (>= 224 x1001) (x1412 (x1637 (x114 x1192)) (x1637 (x114 (x875 (+ 32 x1192)))) (x1637 (x114 (x875 (+ x1192 64)))) (x1637 (x114 (x875 (+ x1192 96)))) (x1637 (x114 (x875 (+ 128 x1192)))) (x1637 (x114 (x875 (+ x1192 160)))) (x1637 (x114 (x875 (+ x1192 192)))) 0) (x1637 x88))))))))) x372))) x1095))
(assert (x384 x374))
(assert (x384 x102))
(assert (= (+ (x1404 x1929) x2409) (x1404 (x1285 x1929 x2409))))
(assert (x1208 x1578))
(assert (x2187 x200))
(assert (= x190 (or x106 x1513)))
(assert (x1208 x902))
(assert (x1208 x1280))
(assert (x1976 x280 x989))
(assert (x1208 x1387))
(assert (x1208 x1595))
(assert (= x664 x1261))
(assert (x981 x1952))
(assert (x384 x134))
(assert (= x1603 (and (not x17) x1322)))
(assert (x1208 x1249))
(assert (= x289 (=> (and (= x671 (= x1836 131072)) (= (x1354 131072 x2327) x1836) (= x2327 (x510 x5 160)) (= (x485 x589) x5) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5) (>= x5 0) (= (x802 x807 (x984 1) 0) x589)) (and (=> (and (and (= x968 x691) (= x213 (x984 0))) (not x671)) x917) (=> (and (and (= x2072 (div x1870 32)) (= (ite (< 0 x1026) x1562 (x1354 127 x1562)) x806) (> x919 0) (= (x875 (+ 31 x806)) x1870) (= x906 (= 0 x806)) (= (mod (* 32 x2072) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2453) (= (x1524 x530) x1011) (= (x802 x807 (x984 5) 0) x530) (= (x875 (+ x968 x13)) x1490) (= x919 (mod (- x1026 (ite x1968 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1968 (> 32 x806)) (= x13 (x875 (+ 32 x2453))) (= (x1354 1 x1011) x1026) (= (div x1011 2) x1562) (= x2434 (x875 (+ x968 32)))) x671) (and (=> x906 x19) (=> (and (not x906) (= x2286 (> x806 31))) (and (=> (and (and (= x2449 (div x2080 256)) (= x2080 (x1524 x530)) (= (mod (* 256 x2449) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1049)) (not x2286)) x19) (=> (and (and (= (x2242 x1398) x1420) (= x1398 (x1601 x530 0)) (= x1209 (x1285 x1398 1)) (= x1948 (x875 (+ x806 x2434))) (= (x875 (+ 32 x2434)) x726) (= x2077 (< x726 x1948))) x2286) (and (=> x2077 x1185) (=> (not x2077) x2277)))))))))))
(assert (= (and x2010 x1600) x38))
(assert (=> (>= 10000 (x859 (x875 (+ 96 x736)))) (= (x984 (x859 (x875 (+ 96 x736)))) (x1637 (x859 (x875 (+ x736 96)))))))
(assert (= (x510 x1090 192) (div x1090 6277101735386680763835789423207666416102355444464034512896)))
(assert (x1208 x178))
(assert (x1208 x211))
(assert (x1208 x689))
(assert (x1208 x700))
(assert (x1208 x2136))
(assert (x1208 x1763))
(assert (x1208 x360))
(assert (x981 (x2357 (x875 (+ 64 x1068)))))
(assert (x1208 x225))
(assert (= x2380 (x1404 (x1637 x2380))))
(assert (x384 x822))
(assert (= (x1404 (x1285 x1398 1)) (+ 1 (x1404 x1398))))
(assert (x981 (x514 (x875 (+ x1075 32)))))
(assert (= x2373 (=> (and (= (x510 x2387 248) x1914) (= (x76 x1589) x2216) (= (x76 x1051) x2387) (= (> x1914 0) x1706) (< 0 x2216)) (and (=> (and (= (x984 0) x2094) (not x1706)) x2096) (=> x1706 x1541)))))
(assert (x981 (x2357 x1068)))
(assert (x1208 x23))
(assert (x1208 x2284))
(assert (= x934 (and (not x341) x85)))
(assert (= (and x2311 x2375) x1544))
(assert (= (and x1276 x1175) x1144))
(assert (x1208 x1844))
(assert (= 0 (x1606 x345)))
(assert (= (x1606 (x875 (+ x736 64))) 0))
(assert (= x500 (and x1206 (not x2265))))
(assert (=> (>= 10000 (x1958 352)) (= (x1637 (x1958 352)) (x984 (x1958 352)))))
(assert (x1208 x1043))
(assert (x384 x524))
(assert (= x1219 (=> (and (= (x802 x807 (x984 1) 0) x1298) (= x1055 x968) (= (mod (+ (x1814 x1466 160) (x1814 x856 192)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2232) (= x1466 (x1354 4294967295 x2445)) (= (x875 (+ 32 x1055)) x2318)) x289)))
(assert (= (=> (and (= x380 false) (> x272 0) (= (x510 x2125 160) x1577) (not (> x1890 18446744073709551615)) (< x1829 1058358655) (= x2380 x201) (= x1019 (x636 (x1637 x728))) (not (> x96 x260)) (= x1324 (x525 x1174)) (not (= x728 x2208)) (= false x735) (>= x308 0) (= (> 128 x87) x1707) (= x43 false) (not (> 549686827 x1829)) (= (ite x2287 1 0) x1439) (<= x2208 1461501637330902918203684832716283019655932542975) (= x644 616673092) (= (x636 (x1637 x996)) x2372) (= x1231 x2443) (= x239 0) (= (> (x126 (x1637 x2208)) 0) x1940) (<= 0 x2125) (<= x1231 1461501637330902918203684832716283019655932542975) (<= 0 x337) (>= 1461501637330902918203684832716283019655932542975 x1793) (= x1107 (x636 (x1637 x2208))) (= x1005 (x875 (+ 31 x1324))) (= (x875 (+ 160 x1324)) x879) (= x142 x1745) (<= 0 x1677) (>= 18446744073709551615 x900) (<= x2199 1461501637330902918203684832716283019655932542975) (not (< 18446744073709551615 x1324)) (<= x2125 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1451 (x875 (+ 32 x1174))) (<= 0 x903) (= x1563 (x802 (x1637 x2380) (x984 1) 0)) (= x239 x1110) (>= 1461501637330902918203684832716283019655932542975 x903) (= x1439 0) (= (> (x126 (x1637 x996)) 0) x734) (<= 0 x1851) (= (x381 x1563) x2125) (= (x875 (+ 128 x684)) x87) (>= 18446744073709551615 x939) (>= 1461501637330902918203684832716283019655932542975 x1851) (>= x2372 0) (= x2380 x344) x1157 (= x1174 (x875 (+ x1598 4))) (<= x1677 1461501637330902918203684832716283019655932542975) (= x1492 x337) (not (= x728 x996)) (= x1890 x1598) (= x148 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1005)) (= x1132 x374) (= (x875 (+ 31 x1174)) x178) (> x2208 0) (= x1805 (x875 (+ x148 32))) (<= 0 x1659) (= (= 131072 x593) x2396) (>= 1461501637330902918203684832716283019655932542975 x728) (<= x142 4294967295) (= x434 x2293) x734 (= x983 (< 18446744073709551615 x87)) (>= x1019 0) (> x728 0) (= x900 x2113) (= 7 x1611) (= x1880 x939) (< 0 x996) (= (> (x126 (x1637 x728)) 0) x1157) (>= 1461501637330902918203684832716283019655932542975 x1659) (= x2380 x1877) (>= 1461501637330902918203684832716283019655932542975 x308) (not (= x1829 549686827)) x1940 (= x27 x308) (= x1218 x142) (= x558 x2199) (= x684 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x538)) (= 616673092 x1829) (not (< x260 4)) (= x1492 x1677) (= (x126 (x1637 x2208)) x272) (<= x996 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x337) (>= x1107 0) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1419)) (< x1419 224)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1419))) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x178) (<= x260 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x260 x178) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x260) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x178)))) (= (x875 (+ x1451 x1324)) x96) (and (= (<= x260 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x260 227)) (= false x15) (<= 0 x2199) (<= 0 x1793) (= x2380 x412) (= (or x983 x1707) x2287) (<= x374 1461501637330902918203684832716283019655932542975) (< x1829 1666326814) (not (= x2208 x996)) (= x538 (x875 (+ x1805 31))) (= (x2107 (- x260 4)) x1419) (= x2169 x27) (= (x1354 131072 x1577) x593)) (and (=> (and (and (= (x802 (x1637 x2380) (x984 5) 0) x1876) (= x81 (x875 (+ x631 x87))) (= (= 0 x2119) x1332) (< 0 x1691) (= (x875 (+ x1509 32)) x631) (= x1197 (x1354 1 x53)) (= (> 32 x2119) x1163) (= (div x53 2) x796) (= (mod (* 32 x450) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1509) (= (x875 (+ 32 x87)) x1547) (= x2119 (ite (> x1197 0) x796 (x1354 127 x796))) (= x885 (x875 (+ 31 x2119))) (= x53 (x1646 x1876)) (= x450 (div x885 32)) (= (mod (- x1197 (ite x1163 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1691)) x2396) (and (=> x1332 x1674) (=> (and (= x1109 (> x2119 31)) (not x1332)) (and (=> (and (not x1109) (and (= (div x708 256) x1604) (= x708 (x1646 x1876)) (= (mod (* x1604 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1867))) x1674) (=> (and x1109 (and (= x1211 (x875 (+ 32 x1547))) (= (x1601 x1876 0) x462) (= (x1285 x462 1) x2255) (= x1258 (< x1211 x130)) (= (x875 (+ x1547 x2119)) x130) (= x494 (x1590 x462)))) (and (=> x1258 x1636) (=> (not x1258) x1455))))))) (=> (and (not x2396) (and (= x55 (x984 0)) (= x87 x1532))) x210))) x1761))
(assert (x1208 x2318))
(assert (x1208 x1196))
(assert (x981 (x859 (x875 (+ x736 160)))))
(assert (x384 x1645))
(assert (= (x1404 (x1637 (x76 (x875 (+ 32 x118))))) (x76 (x875 (+ x118 32)))))
(assert (=> (>= 10000 x1757) (= (x984 x1757) (x1637 x1757))))
(assert (x1208 x1944))
(assert (x1208 x2268))
(assert (x1208 x1139))
(assert (= (=> (and (= (not (> x2281 128)) x732) (= (x2279 x2190) x2108) (= (x875 (+ x1655 96)) x2139) (= x2190 (x875 (+ 96 x2447)))) (and x732 x1920)) x1382))
(assert (x1208 x54))
(assert (= (and x920 x310) x1766))
(assert (= (=> (and (= x1260 x938) (= x2437 (x1354 18446744073709551615 x52)) (= x938 (x875 (+ 7776000 x2437))) (= (x1868 x459) x52) (not (> x938 18446744073709551615)) (not (= x1262 0)) (not (or (and (> 32 x830) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x830))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x830)))) x1701) x1665))
(assert (x1208 x759))
(assert (=> (>= 10000 x155) (= (x1637 x155) (x984 x155))))
(assert (x1208 x1793))
(assert (x384 x216))
(assert (= (or x1592 x986 x2382) x1676))
(assert (= x751 x2381))
(assert (= (x510 x1372 160) (div x1372 1461501637330902918203684832716283019655932542976)))
(assert (= (x1606 (x875 (+ 128 x736))) 0))
(assert (x2187 x939))
(assert (x1208 x2408))
(assert (= 0 (x1606 x2434)))
(assert (x1208 x239))
(assert (=> (>= 10000 (x76 (x875 (+ 64 x118)))) (= (x984 (x76 (x875 (+ 64 x118)))) (x1637 (x76 (x875 (+ x118 64)))))))
(assert (x1208 x745))
(assert (= x1390 (and (not x501) x441)))
(assert (=> (<= (x529 (x875 (+ x1715 64))) 10000) (= (x1637 (x529 (x875 (+ 64 x1715)))) (x984 (x529 (x875 (+ 64 x1715)))))))
(assert (x1208 x1854))
(assert (x1208 x2004))
(assert (= (and x535 x1690) x1796))
(assert (x1208 x1612))
(assert (= (x1928 (x875 (+ x2172 32))) (x1404 (x1637 (x1928 (x875 (+ x2172 32)))))))
(assert (x1273 x142))
(assert (x1208 x137))
(assert (x1208 x2208))
(assert (= x833 (and (not x908) x1831)))
(assert (x384 x2210))
(assert (= (=> (= x2470 (= (x984 0) x547)) (and (=> (and x2470 (and (= x124 x73) (= (x510 x1943 192) x2359))) x1112) (=> (and (not x2470) (and (or (and x275 (and (< x707 4294967296) (= 1 x295))) (and (= x295 x1461) (not x275))) (and (= (> x1461 0) x275) (= x757 (x875 (+ 4 x124)))))) x97))) x2451))
(assert (x1208 x421))
(assert (x1208 x849))
(assert (= (and (not x90) x1130) x1907))
(assert (= (x1404 (x1637 (x1716 (x875 (+ x16 32))))) (x1716 (x875 (+ x16 32)))))
(assert (x384 x1006))
(assert (x1208 x2113))
(assert (x1208 x263))
(assert (x1208 x179))
(assert (x1208 x221))
(assert (= 0 (x1606 (x875 (+ x315 160)))))
(assert (x981 x2002))
(assert (= (x1404 (x1637 (x1958 288))) (x1958 288)))
(assert (x346 x1139))
(assert (x1208 x2252))
(assert (x1208 x2385))
(assert (= x210 (=> (= x181 (= x55 (x984 0))) (and (=> (and (and (= x1275 (x510 x2125 192)) (= x1374 x1532)) x181) x1428) (=> (and (and (and (= (< 0 x1545) x532) (= (x875 (+ 4 x1532)) x1047)) (or (and (and (= x2341 1) (< x254 4294967296)) x532) (and (not x532) (= x1545 x2341)))) (not x181)) x4)))))
(assert (= x2225 (and x2218 x89)))
(assert (= (x1606 (x875 (+ x1820 128))) 0))
(assert (=> (<= (x859 (x875 (+ x736 64))) 10000) (= (x984 (x859 (x875 (+ 64 x736)))) (x1637 (x859 (x875 (+ x736 64)))))))
(assert (= x824 (and x2145 x422)))
(assert (= x2269 (and (not x1423) x744)))
(assert (x1208 x2132))
(assert (= x563 (and (not x1510) x2464)))
(assert (x1431 x137))
(assert (= (or x2253 x163) x546))
(assert (= (and x608 x2188) x215))
(assert (x1208 x1477))
(assert (x1208 x1557))
(assert (x1208 x1119))
(assert (x1208 x385))
(assert (= (x510 x1442 248) (div x1442 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x287 x515))
(assert (x1208 x760))
(assert (x1972 x2068))
(assert (x981 x197))
(assert (= (x1814 x1776 160) (mod (* x1776 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x981 (x529 (x875 (+ 32 x1715)))))
(assert (x1208 x1456))
(assert (= 65535 (x1404 (x984 65535))))
(assert (x1208 x1123))
(assert (x981 (x750 (x875 (+ 192 x1668)))))
(assert (x1208 x1515))
(assert (x1208 x1672))
(assert (x1208 x400))
(assert (x981 (x1092 (x875 (+ 64 x192)))))
(assert (= (x1606 x1799) 0))
(assert (x1208 x176))
(assert (=> (<= x2002 10000) (= (x984 x2002) (x1637 x2002))))
(assert (x1431 x1578))
(assert (x1208 x1010))
(assert (x981 (x859 (x875 (+ 192 x736)))))
(assert (x1208 x2434))
(assert (x1208 x130))
(assert (x981 x453))
(assert (= (x510 x1792 248) (div x1792 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x1208 x2247))
(assert (=> (>= 10000 (x750 (x875 (+ x1668 160)))) (= (x1637 (x750 (x875 (+ 160 x1668)))) (x984 (x750 (x875 (+ x1668 160)))))))
(assert (= (=> (= (= x213 (x984 0)) x1457) (and (=> (and x1457 (and (= (x510 x5 192) x105) (= x1278 x691))) x1554) (=> (and (and (and (= x1450 (> x2391 0)) (= x1312 (x875 (+ 4 x691)))) (or (and (and (< x1434 4294967296) (= 1 x2431)) x1450) (and (= x2431 x2391) (not x1450)))) (not x1457)) x1250))) x917))
(assert (= (x510 x2005 160) (div x2005 1461501637330902918203684832716283019655932542976)))
(assert (x1208 x2070))
(assert (= (x1404 (x1285 x955 1)) (+ (x1404 x955) 1)))
(assert (= (x984 7776000) (x1637 7776000)))
(assert (x2187 x865))
(assert (x1208 x1321))
(assert (= (x1814 x1336 192) (mod (* x1336 6277101735386680763835789423207666416102355444464034512896) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x1404 (x1637 (x1386 (x875 (+ 160 x315))))) (x1386 (x875 (+ x315 160)))))
(assert (= (and x907 x215) x70))
(assert (x1208 x1728))
(assert (=> (>= 10000 (x1716 (x875 (+ x16 192)))) (= (x1637 (x1716 (x875 (+ x16 192)))) (x984 (x1716 (x875 (+ 192 x16)))))))
(assert (x1208 x1977))
(assert (= x737 (or x1380 x343 x1469)))
(assert (x1208 x1604))
(assert (x384 131072))
(assert (= x1256 (=> (and (or (and x1699 (and (= x1828 (x1354 x2307 x283)) (= (x455 x1902) x2307) (= (mod (* 8 x1125) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1472) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x510 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1472)) x283) (= x1902 (x875 (+ x1917 x2012))) (= (x1354 31 x1578) x1125))) (not x1699)) (= (< x1785 x1578) x1699)) x1527)))
(assert (x981 (x514 (x875 (+ 160 x1075)))))
(assert (x981 (x750 (x875 (+ 128 x1668)))))
(assert (= x1679 (or x1925 x630)))
(assert (= x1982 (and x2161 x1852)))
(assert (x384 x852))
(assert (x1208 x836))
(assert (x1208 x224))
(assert (= x2229 (=> (= (= (x984 0) x135) x2138) (and (=> (and x2138 (and (= x1311 x1887) (= (x510 x1903 192) x2097))) x1712) (=> (and (and (and (= x1510 (< 0 x2271)) (= (x875 (+ x1887 4)) x1918)) (or (and x1510 (and (= x537 1) (> 4294967296 x389))) (and (not x1510) (= x537 x2271)))) (not x2138)) x1108)))))
(assert (x1208 x229))
(assert (= (and x2006 x159) x1033))
(assert (x384 x1650))
(assert (x1208 x1406))
(assert (x1208 x2431))
(assert (= (or x1303 x279) x910))
(assert (x1208 x777))
(assert (x1208 x2105))
(assert (x1208 x2180))
(assert (x981 (x1716 x16)))
(assert (=> (<= (x514 (x875 (+ 160 x1075))) 10000) (= (x984 (x514 (x875 (+ 160 x1075)))) (x1637 (x514 (x875 (+ 160 x1075)))))))
(assert (= (x1606 (x875 (+ 192 x16))) 0))
(assert (x1208 x2041))
(assert (x1208 x885))
(assert (= (+ 1 (x1404 x923)) (x1404 (x1285 x923 1))))
(assert (x1208 x1067))
(assert (= (and x1360 (not x2182)) x2134))
(assert (= x2009 (x1404 (x1637 x2009))))
(assert (= x238 (and x1550 x1243)))
(assert (x1972 x442))
(assert (x1208 x53))
(assert (= (x510 x1292 248) (div x1292 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x1208 x1221))
(assert (x384 1461501637330902918203684832716283019655932542975))
(assert (x1208 x1009))
(assert (=> (<= (x2236 (x875 (+ x1820 128))) 10000) (= (x984 (x2236 (x875 (+ x1820 128)))) (x1637 (x2236 (x875 (+ 128 x1820)))))))
(assert (= (x1606 (x875 (+ x16 160))) 0))
(assert (x1208 x1020))
(assert (= (and x112 (not x2392)) x1342))
(assert (= (=> (and (or (and (not x1517) (and (<= x911 255) (= x493 (x802 (x1637 x1492) x2086 0)) (= x911 x1520) (= x911 (x1177 x493)) (= (x1354 1461501637330902918203684832716283019655932542975 x2210) x2330) (= x2086 (x802 (x1637 x2330) (x984 2) 0)) (<= 0 x911) (< x911 256))) (and (= x1520 (ite x1517 1 0)) x1517)) (and (= (x1354 1461501637330902918203684832716283019655932542975 x2210) x1477) (= (= x1477 x1492) x1517))) x1101) x1652))
(assert (= (x114 (x875 (+ x1192 96))) (x1404 (x1637 (x114 (x875 (+ x1192 96)))))))
(assert (x1208 x1921))
(assert (x1208 x1463))
(assert (x981 x1538))
(assert (x1208 x1582))
(assert (x981 (x2357 (x875 (+ 96 x1068)))))
(assert (= 0 (x1606 160)))
(assert (x981 (x1092 (x875 (+ 128 x192)))))
(assert (=> (<= (x1716 (x875 (+ 64 x16))) 10000) (= (x984 (x1716 (x875 (+ x16 64)))) (x1637 (x1716 (x875 (+ x16 64)))))))
(assert (x981 (x2357 (x875 (+ 128 x1068)))))
(assert (x1208 x970))
(assert (x981 (x114 (x875 (+ x1192 32)))))
(assert (= x1497 (and (not x376) x680)))
(assert (x981 x387))
(assert (x207 x1231))
(assert (x1208 x678))
(assert (= (x1606 x2289) 0))
(assert (= 0 (x1606 x882)))
(assert (= (and x1852 (not x2161)) x1106))
(assert (x384 x1307))
(assert (x384 x1825))
(assert (= (or x742 x640) x670))
(assert (= (x1404 (x1637 (x750 (x875 (+ x1668 32))))) (x750 (x875 (+ 32 x1668)))))
(assert (x1208 x2316))
(assert (= (x1637 1666326814) (x984 1666326814)))
(assert (x981 (x76 (x875 (+ 32 x118)))))
(assert (= x1764 (and x576 x92)))
(assert (= (=> (and (= x1173 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x228)) (not (= 0 x1128)) (= (x875 (+ x33 7776000)) x2146) (not (or (> x460 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x460) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x460))))) (= (x610 x1067) x2157) (= x228 (x875 (+ x460 31))) (= x33 (x1354 18446744073709551615 x2157)) (= x545 x799) (= x2146 x323) (not (< 18446744073709551615 x2146)) (= x799 (x875 (+ x1173 x1067)))) x354) x451))
(assert (x1208 x2116))
(assert (x1208 x394))
(assert (= x1901 x1895))
(assert (= (=> (and (and (= x2292 (x1354 131072 x1645)) (= (= 131072 x2292) x92)) (or (and (= x1336 x2191) (not x92)) (and (and (= x2191 x288) (not (> x288 18446744073709551615)) (= x288 (x2107 (- x1336 7776000)))) x92))) x661) x2193))
(assert (= x766 (=> (and (= (x875 (+ x1888 x2458)) x2163) (= (> x2222 0) x1683) (= x2222 (x1169 x545))) (and (=> (not x1683) x1347) (=> (and x1683 (and (= x1421 (< 32 x2222)) (= (x1169 x1911) x1042) (= x2163 x2051) (= x1911 x300))) (and (=> (and (and (= (x842 x363) x165) (= x431 (x875 (+ x2163 32))) (= x363 (x875 (+ x300 32))) (= (< 64 x2222) x2074)) x1421) (and (=> (and (and (= x2424 (< 96 x2222)) (= x724 (x2048 x1200)) (= x1200 (x875 (+ 64 x300))) (= (x875 (+ x2163 64)) x1515)) x2074) (and (=> x2424 x793) (=> (not x2424) x1347))) (=> (not x2074) x1347))) (=> (not x1421) x1347)))))))
(assert (x1208 x868))
(assert (=> (<= (x750 x1668) 10000) (= (x1637 (x750 x1668)) (x984 (x750 x1668)))))
(assert (x1208 x2359))
(assert (= (x510 x1903 160) (div x1903 1461501637330902918203684832716283019655932542976)))
(assert (x1208 x877))
(assert (x1208 x2154))
(assert (x384 x951))
(assert (= (and (not x1052) x362) x672))
(assert (x1208 x872))
(assert (x1208 x83))
(assert (=> (<= (x529 (x875 (+ x1715 96))) 10000) (= (x1637 (x529 (x875 (+ x1715 96)))) (x984 (x529 (x875 (+ x1715 96)))))))
(assert (= x663 (and (not x2325) x1036)))
(assert (x1208 x2422))
(assert (= (=> (and (= (x1386 x1627) x1801) (= (<= x1454 224) x753) (= (x875 (+ 1 x1454)) x2144) (not (> x2144 x1801)) (= x315 (x875 (+ x1460 1)))) (and x753 (=> (= (ite (>= 32 x1454) (x1601 (x1637 (x1386 x315)) 0) (ite (>= 64 x1454) (x802 (x1637 (x1386 x315)) (x1637 (x1386 (x875 (+ 32 x315)))) 0) (ite (<= x1454 96) (x1546 (x1637 (x1386 x315)) (x1637 (x1386 (x875 (+ 32 x315)))) (x1637 (x1386 (x875 (+ x315 64)))) 0) (ite (<= x1454 128) (x320 (x1637 (x1386 x315)) (x1637 (x1386 (x875 (+ 32 x315)))) (x1637 (x1386 (x875 (+ x315 64)))) (x1637 (x1386 (x875 (+ 96 x315)))) 0) (ite (>= 160 x1454) (x1619 (x1637 (x1386 x315)) (x1637 (x1386 (x875 (+ x315 32)))) (x1637 (x1386 (x875 (+ 64 x315)))) (x1637 (x1386 (x875 (+ x315 96)))) (x1637 (x1386 (x875 (+ x315 128)))) 0) (ite (<= x1454 192) (x1266 (x1637 (x1386 x315)) (x1637 (x1386 (x875 (+ x315 32)))) (x1637 (x1386 (x875 (+ x315 64)))) (x1637 (x1386 (x875 (+ 96 x315)))) (x1637 (x1386 (x875 (+ x315 128)))) (x1637 (x1386 (x875 (+ 160 x315)))) 0) (ite (<= x1454 224) (x1412 (x1637 (x1386 x315)) (x1637 (x1386 (x875 (+ x315 32)))) (x1637 (x1386 (x875 (+ 64 x315)))) (x1637 (x1386 (x875 (+ x315 96)))) (x1637 (x1386 (x875 (+ x315 128)))) (x1637 (x1386 (x875 (+ x315 160)))) (x1637 (x1386 (x875 (+ 192 x315)))) 0) (x1637 x1879)))))))) x1471) x1259))) x1222))
(assert (= x1257 (and x1865 x1072)))
(assert (x1208 x2328))
(assert (= (or x587 (and (not x498) x167) (and (not x2370) x755)) x695))
(assert (x384 x1736))
(assert (x1208 x1054))
(assert (= (or x1726 x833) x472))
(assert (= (x1716 (x875 (+ x16 64))) (x1404 (x1637 (x1716 (x875 (+ x16 64)))))))
(assert (= (x1404 (x1637 (x2357 (x875 (+ 96 x1068))))) (x2357 (x875 (+ 96 x1068)))))
(assert (x1208 x1011))
(assert (= (x984 97199519776808029778168953285215024309695167179541945341261303444449322336256) (x1637 97199519776808029778168953285215024309695167179541945341261303444449322336256)))
(assert (x1208 x298))
(assert (x156 x1562))
(assert (x2187 x495))
(assert (x981 (x529 (x875 (+ x1715 96)))))
(assert (x1208 x30))
(assert (x1208 x1466))
(assert (= (=> (and (= x1435 x1459) (= x1067 x877) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1861 1)))) x2388) x992))
(assert (= x807 (x1637 (x1404 x807))))
(assert (= 0 (x1606 (x875 (+ x1482 64)))))
(assert (= (or x474 x1964) x1426))
(assert (x981 (x114 x1192)))
(assert (= (x1606 (x875 (+ x16 32))) 0))
(assert (x1208 x392))
(assert (x1431 x822))
(assert (x1208 x220))
(assert (= x1108 (=> (and (not (or (and (= true (<= x389 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x389)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x389))) (not (= 0 x537)) (not (> x2008 18446744073709551615)) (= (x875 (+ x389 31)) x1671) (= x621 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1671)) (= x2008 (x875 (+ 7776000 x277))) (= x277 (x1354 18446744073709551615 x527)) (= x527 (x1742 x1887)) (= x291 x1311) (= x291 (x875 (+ x1887 x621))) (= x2097 x2008)) x1712)))
(assert (x1208 x200))
(assert (x1208 x2352))
(assert (x1208 x470))
(assert (x1208 x2030))
(assert (= (x1404 (x984 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (or x1570 x931) x362))
(assert (x1208 x123))
(assert (= (x1637 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x984 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1972 x1137))
(assert (x1208 x2038))
(assert (x1208 x939))
(assert (= (=> (and (= x646 (x875 (+ x1608 x1020))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2095) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2095) true) (< x2095 32)))) (= (x875 (+ 7776000 x2174)) x1728) (= x646 x411) (= (x875 (+ 31 x2095)) x951) (= x2174 (x1354 18446744073709551615 x1650)) (= (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x951) x1608) (= (x368 x1020) x1650) (not (= x2446 0)) (not (< 18446744073709551615 x1728)) (= x1336 x1728)) x2340) x1265))
(assert (= (x510 x1284 248) (div x1284 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= (or x1148 x580) x936))
(assert (x384 255))
(assert (=> (>= 10000 x1538) (= (x1637 x1538) (x984 x1538))))
(assert (x1208 x593))
(assert (x1208 x318))
(assert (x981 (x1958 192)))
(assert (= x534 (and x2375 (not x2311))))
(assert (x384 x1729))
(assert (x1208 x1434))
(assert (= (and (not x67) x2285) x1823))
(assert (= x1662 (and x1842 x2035)))
(assert (x1208 x628))
(assert (= 0 (x1606 (x875 (+ x2172 32)))))
(assert (x1208 x1069))
(assert (= (and x2334 (not x2470)) x2301))
(assert (=> (<= (x1092 (x875 (+ 96 x192))) 10000) (= (x1637 (x1092 (x875 (+ 96 x192)))) (x984 (x1092 (x875 (+ x192 96)))))))
(assert (= x1505 (and x743 x1786)))
(assert (x287 x823))
(assert (= (x2236 (x875 (+ 96 x1820))) (x1404 (x1637 (x2236 (x875 (+ x1820 96)))))))
(assert (x1208 x757))
(assert (x1208 x48))
(assert (x981 x649))
(assert (= (x1404 (x984 97199519776808029778168953285215024309695167179541945341261303444449322336256)) 97199519776808029778168953285215024309695167179541945341261303444449322336256))
(assert (x1208 x916))
(assert (= (x1404 (x1637 (x1928 (x875 (+ 160 x2172))))) (x1928 (x875 (+ x2172 160)))))
(assert (x1750 x309))
(assert (x207 x329))
(assert (= x2420 (and x2334 x2470)))
(assert (x1208 x2009))
(assert (x1208 x594))
(assert (x981 (x2357 (x875 (+ 160 x1068)))))
(assert (=> (>= 10000 (x750 (x875 (+ 128 x1668)))) (= (x984 (x750 (x875 (+ 128 x1668)))) (x1637 (x750 (x875 (+ x1668 128)))))))
(assert (= (x984 4294836223) (x1637 4294836223)))
(assert (x384 x1882))
(assert (x384 x2367))
(assert (x1236 x142))
(assert (= (or x1418 x175 x2246) x2285))
(assert (= (x514 (x875 (+ x1075 192))) (x1404 (x1637 (x514 (x875 (+ x1075 192)))))))
(assert (= (x1404 (x1637 (x750 (x875 (+ x1668 64))))) (x750 (x875 (+ 64 x1668)))))
(assert (= x1238 (or x944 x612)))
(assert (x1208 x1260))
(assert (x1273 x1401))
(assert (= (=> (and (= (x1524 x2220) x1486) (= (x875 (+ x1579 31)) x578) (= (x875 (+ x686 x2267)) x1242) (= x763 (div x1486 2)) (= x2220 (x802 (x1637 x2380) (x984 5) 0)) (= x1393 (mod (- x897 (ite x1344 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x836 (div x578 32)) (= (mod (* x836 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x129) (= x897 (x1354 1 x1486)) (= x1335 (= 0 x1579)) (= x1981 (x875 (+ 32 x686))) (= (x875 (+ 32 x129)) x2267) (= x1579 (ite (> x897 0) x763 (x1354 127 x763))) (= x1344 (> 32 x1579)) (< 0 x1393)) (and (=> x1335 x1223) (=> (and (= x1530 (> x1579 31)) (not x1335)) (and (=> (and (not x1530) (and (= x825 (div x2224 256)) (= (mod (* x825 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x205) (= (x1524 x2220) x2224))) x1223) (=> (and (and (= x841 (< x1411 x2047)) (= x2308 (x2242 x2066)) (= x2066 (x1601 x2220 0)) (= (x1285 x2066 1) x141) (= x1411 (x875 (+ x1981 32))) (= (x875 (+ x1981 x1579)) x2047)) x1530) (and (=> x841 x2099) (=> (not x841) x285))))))) x1649))
(assert (x981 (x1928 (x875 (+ 96 x2172)))))
(assert (x1208 x2164))
(assert (x1208 x439))
(assert (x1208 x901))
(assert (= (x1404 (x1637 (x522 320))) (x522 320)))
(assert (= (=> (and (= x1097 x113) (= (x1354 1461501637330902918203684832716283019655932542975 x1202) x113) (= (< 0 x281) x2370) (= (x1354 1461501637330902918203684832716283019655932542975 x1825) x2361) (= x2467 (x1354 1461501637330902918203684832716283019655932542975 x1231)) (= (x1354 1461501637330902918203684832716283019655932542975 x1825) x1097) (= (x2107 (- x2361 x2467)) x281)) (and (=> (not x2370) x751) (=> (and (and (= (x1354 1461501637330902918203684832716283019655932542975 x1231) x915) (= (< 0 x198) x498) (= x299 (x1354 1461501637330902918203684832716283019655932542975 x1231)) (= (x875 (+ x2217 (mod (x1814 x1336 192) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x754) (= x2217 (x875 (+ x915 (mod (x1814 x821 160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x875 (+ x411 32)) x1458) (= x821 (x1354 4294967295 x1645)) (= x198 (x126 (x1637 x299)))) x2370) (and (=> (and x498 (and (and (= (x875 (+ 32 x123)) x2429) (= (x1354 1461501637330902918203684832716283019655932542975 x1231) x197) (= (x875 (+ x1657 32)) x1892) (= x1657 (x875 (+ 32 x1993))) (= (x1354 1461501637330902918203684832716283019655932542975 x1202) x1535) (= x1168 (x875 (+ 160 x1993))) (= x2156 (x875 (+ x1168 32))) (= x1993 (x875 (+ x411 4))) (= x123 (x875 (+ 32 x1892))) (= x2325 (< 0 x912))) (or (and (and (= (x469 (x1637 x197)) x1229) (= x111 (= x1229 (x1301 (x1637 x197)))) x1244 (< x1468 4294967296) (= (<= x1537 (x1301 (x1637 x2208))) x1244) x111 (= (x469 (x1637 x2208)) x1537)) x2325) (not x2325)))) x1957) (=> (not x498) x751))))) x243))
(assert (= x1807 (and x507 (not x2100))))
(assert (x1208 x604))
(assert (=> (<= (x529 (x875 (+ 32 x1715))) 10000) (= (x1637 (x529 (x875 (+ 32 x1715)))) (x984 (x529 (x875 (+ x1715 32)))))))
(assert (x1208 x152))
(assert (= x299 (x1404 (x1637 x299))))
(assert (x384 x786))
(assert (= x1753 (and (not x92) x576)))
(assert (x1208 x1480))
(assert (= x453 (x1404 (x1637 x453))))
(assert (= x248 (or x1666 x1661 x910)))
(assert (= x1922 (and x463 x1936)))
(assert (x1208 x1825))
(assert (= x659 (and x908 x1831)))
(assert (x1208 x329))
(assert (= x2223 (and x1224 x671)))
(assert (x981 (x522 192)))
(assert (= (x1814 x821 160) (mod (* x821 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (=> (<= (x522 352) 10000) (= (x1637 (x522 352)) (x984 (x522 352)))))
(assert (=> (<= (x187 x1482) 10000) (= (x984 (x187 x1482)) (x1637 (x187 x1482)))))
(assert (= (and (not x202) x1238) x1369))
(assert (x384 x568))
(assert (x1208 x765))
(assert (x287 x309))
(assert (x1208 x1799))
(assert (= x1060 (or x1061 x2039)))
(assert (= (and x2396 x488) x655))
(assert (x1208 x230))
(assert (x1208 x2203))
(assert (= (x1404 (x1637 (x76 x118))) (x76 x118)))
(assert (x384 x1139))
(assert (x1208 x2001))
(assert (= (and x2035 (not x1842)) x1661))
(assert (x1208 x1623))
(assert (=> (<= (x514 (x875 (+ x1075 96))) 10000) (= (x1637 (x514 (x875 (+ x1075 96)))) (x984 (x514 (x875 (+ 96 x1075)))))))
(assert (x1208 x315))
(assert (x1208 x1714))
(assert (x384 x2263))
(assert (x1208 x762))
(assert (=> (>= 10000 (x2357 (x875 (+ x1068 64)))) (= (x1637 (x2357 (x875 (+ x1068 64)))) (x984 (x2357 (x875 (+ 64 x1068)))))))
(assert (x1208 x2462))
(assert (x206 x104))
(assert (= (mod (* 6277101735386680763835789423207666416102355444464034512896 x1260) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1814 x1260 192)))
(assert (= x1514 (or x430 x1071)))
(assert (= 0 (x1606 (x875 (+ x1192 32)))))
(assert (= x666 (and x35 (not x536))))
(assert (x1208 x2237))
(assert (x1208 x2095))
(assert (= (and x1205 (not x373)) x742))
(assert (x1208 x36))
(assert (= 0 (x1606 (x875 (+ x1668 96)))))
(assert (x384 x495))
(assert (x1208 x1693))
(assert (= x574 (=> (and (or (not x1735) x1735) (= (= x2007 0) x1735)) x2120)))
(assert (=> (<= (x1386 (x875 (+ x315 160))) 10000) (= (x1637 (x1386 (x875 (+ 160 x315)))) (x984 (x1386 (x875 (+ 160 x315)))))))
(assert (x1208 x1650))
(assert (= (or x598 x1325 x1688) x2178))
(assert (x1208 x171))
(assert (x1208 x1526))
(assert (= (x1606 (x875 (+ x1668 64))) 0))
(assert (x1208 x980))
(assert (x384 x1401))
(assert (x1208 x646))
(assert (x1208 x798))
(assert (= (=> (and (= (= 131072 x1556) x2076) (<= 0 x1943) (= (x381 x1860) x1943) (= (x510 x1943 160) x1846) (= x1556 (x1354 131072 x1846)) (<= x1943 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x802 x807 (x984 1) 0) x1860)) (and (=> (and x2076 (and (= x1184 (x875 (+ x1816 32))) (= (= 0 x2031) x513) (= x2057 (x1524 x784)) (= x1334 (> 32 x2031)) (< 0 x409) (= (x802 x807 (x984 5) 0) x784) (= x1749 (div x1802 32)) (= x23 (x875 (+ x703 x1816))) (= x703 (x875 (+ 32 x1330))) (= (x1354 1 x2057) x394) (= x409 (mod (- x394 (ite x1334 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x875 (+ x2031 31)) x1802) (= (div x2057 2) x1006) (= x2031 (ite (< 0 x394) x1006 (x1354 127 x1006))) (= x1330 (mod (* x1749 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> (and (= (> x2031 31) x1064) (not x513)) (and (=> (and x1064 (and (= x633 (> x496 x1279)) (= x541 (x2242 x923)) (= x1279 (x875 (+ 32 x1184))) (= (x875 (+ x2031 x1184)) x496) (= (x1601 x784 0) x923) (= (x1285 x923 1) x1774))) (and (=> (not x633) x528) (=> x633 x2019))) (=> (and (not x1064) (and (= x2090 (x1524 x784)) (= x2148 (div x2090 256)) (= (mod (* 256 x2148) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2110))) x2033))) (=> x513 x2033))) (=> (and (and (= x124 x1816) (= (x984 0) x547)) (not x2076)) x2451))) x891))
(assert (= (x510 x1625 160) (div x1625 1461501637330902918203684832716283019655932542976)))
(assert (= x1533 (or x1543 x1548)))
(assert (= (x1404 (x984 4294836223)) 4294836223))
(assert (x1208 x254))
(assert (x384 x1560))
(assert (x1208 x1482))
(assert (x1208 x1468))
(assert (= (and x325 x1609) x2290))
(assert (= x4 (=> (and (not (< 18446744073709551615 x2044)) (= x1275 x2044) (= (x875 (+ 31 x254)) x822) (= (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x822) x902) (= (x875 (+ x902 x1532)) x185) (= (x875 (+ x1834 7776000)) x2044) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x254)) (> 32 x254)) (> x254 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1354 18446744073709551615 x186) x1834) (= x185 x1374) (= (x9 x1532) x186) (not (= x2341 0))) x1428)))
(assert (x1208 x1355))
(assert (x1208 x691))
(assert (= x1592 (and x1391 x1074)))
(assert (x384 x1011))
(assert (= (x1606 (x875 (+ 192 x1482))) 0))
(assert (=> (<= (x76 (x875 (+ x118 32))) 10000) (= (x1637 (x76 (x875 (+ 32 x118)))) (x984 (x76 (x875 (+ 32 x118)))))))
(assert (x1208 x1503))
(assert (x1208 x1076))
(assert (= 0 (x1606 x1902)))
(assert (=> (>= 10000 (x750 (x875 (+ x1668 96)))) (= (x1637 (x750 (x875 (+ x1668 96)))) (x984 (x750 (x875 (+ x1668 96)))))))
(assert (x384 x1486))
(assert (x2187 x52))
(assert (=> (>= 10000 x1432) (= (x984 x1432) (x1637 x1432))))
(assert (= (and x639 x1934) x2188))
(assert (x287 x1030))
(assert (x1431 x592))
(assert (x1208 x389))
(assert (x1208 x347))
(assert (= x2294 (or x620 x355)))
(assert (x1208 x2380))
(assert (= (x2357 (x875 (+ x1068 128))) (x1404 (x1637 (x2357 (x875 (+ x1068 128)))))))
(assert (= x1255 (and x834 (not x1381))))
(assert (x1208 x1719))
(assert (= (or x2312 x1922) x920))
(assert (= (x1606 (x875 (+ 32 x736))) 0))
(assert (= 0 (x1606 (x875 (+ x1820 64)))))
(assert (= (mod (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x2150) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1814 x2150 248)))
(assert (x1208 x799))
(assert (x1208 x236))
(assert (x1208 x1128))
(assert (= (x1606 (x875 (+ x1668 160))) 0))
(assert (x1208 x209))
(assert (x1208 x309))
(assert (x1208 x683))
(assert (x1208 x260))
(assert (= x1561 (=> (and (= x1811 (x126 (x1637 x567))) (= x1924 (x1354 18446744073709551615 x495)) (= (x1354 4294901760 x440) x2376) (not (= x378 0)) (= x2056 0) (= (x875 (+ 32 x1278)) x1237) (= (x1354 1461501637330902918203684832716283019655932542975 x1231) x567) (< 0 x1066) (= x1272 (x1354 1461501637330902918203684832716283019655932542975 x1231)) (= (x875 (+ x1278 32)) x1083) (= x1878 (x875 (+ x2258 (mod (x1814 x1155 160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x378 (x1354 1461501637330902918203684832716283019655932542975 x1231)) (= (x1354 1461501637330902918203684832716283019655932542975 x468) x2056) (= x1155 (x1354 4294967295 x1338)) (= x1338 (ite (> x434 x105) x142 (ite (<= x142 65535) (x875 (+ x142 x2376)) (x82 x142 x2376)))) (= x803 (> x1811 0)) (= x2258 (x1354 1461501637330902918203684832716283019655932542975 x1231)) (= (x2107 (- x1272 x2208)) x1066) (= x495 (ite (< x1062 x105) x105 x2412)) (= (x875 (+ x1878 (mod (x1814 x1924 192) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1196) (= (x1354 18446744073709551615 x2412) x1062)) (and (=> (and (= x811 x1237) (not x803)) x1247) (=> (and x803 (and (or (not x62) (and (and (= (x979 (x1637 x1623)) x1998) (= x356 (= (x669 (x1637 x1623)) x1998)) (= (>= (x669 (x1637 x2208)) x470) x1741) x356 (> 4294967296 x913) (= x470 (x979 (x1637 x2208))) x1741) x62)) (and (= x1623 (x1354 1461501637330902918203684832716283019655932542975 x1231)) (= (x875 (+ 32 x2041)) x745) (= x2041 (x875 (+ 32 x34))) (= x34 (x875 (+ 4 x1237))) (= x62 (> x2007 0)) (= x1730 (x875 (+ 32 x347))) (= (x875 (+ x2408 32)) x1077) (= (x875 (+ x34 160)) x2408) (= x347 (x875 (+ x745 32)))))) x574)))))
(assert (x1208 x395))
(assert (= (=> (and (= (x1354 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1560) x2385) (not (or (and (= true (<= x1468 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1468)) (> x1468 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1560 x2385) (not (= x912 0)) (= (x1204 x411) x1560) (= 109562948294120585953088955926913691080166221410047079322077399086870164406272 x1560)) x751) x519))
(assert (= (x1637 (x1404 x662)) x662))
(assert (x1208 x1914))
(assert (= (x1404 (x1637 (x76 (x875 (+ x118 64))))) (x76 (x875 (+ x118 64)))))
(assert (x1208 x1401))
(assert (x1208 x245))
(assert (x1208 x686))
(assert (x981 (x514 (x875 (+ 128 x1075)))))
(assert (= (x1606 288) 0))
(assert (= (and x521 x828) x1642))
(assert (x1208 x39))
(assert (= x2272 (and x242 x846)))
(assert (x1431 x538))
(assert (x1208 x332))
(assert (= 0 (x1606 (x875 (+ x315 128)))))
(assert (x1208 x1166))
(assert (= x2023 (and x1514 (not x1618))))
(assert (x1208 x1202))
(assert (x1208 x59))
(assert (x384 4))
(assert (x1208 x122))
(assert (= x1964 (and (not x633) x479)))
(assert (x1208 x1751))
(assert (x1208 x60))
(assert (x1208 x1237))
(assert (x1208 x150))
(assert (= (and x2374 x1813) x1315))
(assert (=> (<= (x2357 (x875 (+ 160 x1068))) 10000) (= (x1637 (x2357 (x875 (+ x1068 160)))) (x984 (x2357 (x875 (+ 160 x1068)))))))
(assert (= x1919 (=> (and (= (x875 (+ x224 x1294)) x1655) (= (> x2281 0) x994) (= (x483 x1539) x2281)) (and (=> (and (and (= x2447 x492) (= x1655 x1361) (= (x483 x492) x2228) (= (< 32 x2281) x2321)) x994) (and (=> (and (and (= x360 (x875 (+ 32 x2447))) (= x1616 (> x2281 64)) (= (x1534 x360) x1502) (= x2142 (x875 (+ 32 x1655)))) x2321) (and (=> (and x1616 (and (= x2379 (x875 (+ x1655 64))) (= (> x2281 96) x2205) (= x1433 (x2440 x2105)) (= (x875 (+ 64 x2447)) x2105))) (and (=> x2205 x1382) (=> (not x2205) x1920))) (=> (not x1616) x1920))) (=> (not x2321) x1920))) (=> (not x994) x1920)))))
(assert (x384 1))
(assert (= x2415 (=> (and (= x662 (x1285 x180 1)) (= (not (> (x1404 x2402) (x1404 x662))) x2173)) (and x2173 x1684))))
(assert (x1208 x2165))
(assert (x1208 x1838))
(assert (= x1926 (and x1786 (not x743))))
(assert (x384 x1299))
(assert (= (or x2179 x665) x676))
(assert (x384 x706))
(assert (=> (>= 10000 (x2236 x1820)) (= (x1637 (x2236 x1820)) (x984 (x2236 x1820)))))
(assert (= (div x945 1461501637330902918203684832716283019655932542976) (x510 x945 160)))
(assert (x1208 x160))
(assert (x1208 x1770))
(assert (x1208 x2045))
(assert (x1208 x1275))
(assert (=> (>= 10000 x88) (= (x1637 x88) (x984 x88))))
(assert (= (and x1676 (not x1614)) x2081))
(assert (= (x2357 (x875 (+ x1068 64))) (x1404 (x1637 (x2357 (x875 (+ 64 x1068)))))))
(assert (x1208 x538))
(assert (x1208 x572))
(assert (=> (>= 10000 (x522 160)) (= (x1637 (x522 160)) (x984 (x522 160)))))
(assert (=> (<= (x2357 (x875 (+ x1068 32))) 10000) (= (x1637 (x2357 (x875 (+ 32 x1068)))) (x984 (x2357 (x875 (+ x1068 32)))))))
(assert (= (and x1214 x2077) x603))
(assert (x1208 x674))
(assert (= (=> (and (= x1241 (not (< x2252 x1844))) (= x2137 (x2242 x2314)) (= (x875 (+ 32 x1228)) x2252)) (and x1261 x1241)) x397))
(assert (x1208 x809))
(assert (=> (>= 10000 (x529 (x875 (+ x1715 128)))) (= (x984 (x529 (x875 (+ 128 x1715)))) (x1637 (x529 (x875 (+ 128 x1715)))))))
(assert (x981 x567))
(assert (x1208 x2439))
(assert (x287 x1882))
(assert (= x598 (or x393 x2243)))
(assert (= (or x66 x2425) x235))
(assert (= 0 (x1606 (x875 (+ 96 x1482)))))
(assert (= x1936 (or x212 x824)))
(assert (x981 (x76 x118)))
(assert (= (x1814 x1924 192) (mod (* x1924 6277101735386680763835789423207666416102355444464034512896) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x384 x487))
(assert (x384 127))
(assert (x1208 x170))
(assert (x1208 x2167))
(assert (= (and x2175 x647) x68))
(assert (x1208 x2450))
(assert (x1208 x197))
(assert (= (=> (and (= (x1354 131072 x515) x331) (= x515 (x510 x760 160)) (= x350 (x802 x807 (x984 1) 0)) (= (x1354 1 x2034) x1340) (= (x618 x350) x760) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x760) (= x1618 (= 131072 x331)) (not (= x1340 1)) (<= 0 x760) (= (ite (< x2097 x434) 0 x604) x2034)) (and (=> (and x1618 (and (= x575 (x1354 1 x1137)) (= x1531 (mod (- x575 (ite x1599 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x875 (+ x1311 32)) x1631) (= (x875 (+ 32 x22)) x1973) (= x2036 (div x1137 2)) (= x22 (mod (* 32 x801) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2046 x1198) x1137) (= x716 (x875 (+ x1311 x1973))) (= x1198 (x802 x807 (x984 5) 0)) (= (> 32 x1673) x1599) (= x801 (div x849 32)) (< 0 x1531) (= (x875 (+ 31 x1673)) x849) (= (ite (> x575 0) x2036 (x1354 127 x2036)) x1673) (= x1391 (= 0 x1673)))) (and (=> x1391 x1985) (=> (and (= x508 (< 31 x1673)) (not x1391)) (and (=> (and (and (= x226 (x875 (+ x1631 32))) (= (x808 x429) x2165) (= (x875 (+ x1673 x1631)) x209) (= x429 (x1601 x1198 0)) (= (> x209 x226) x278) (= x307 (x1285 x429 1))) x508) (and (=> (not x278) x270) (=> x278 x641))) (=> (and (not x508) (and (= x1081 (x2046 x1198)) (= (mod (* 256 x762) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1633) (= (div x1081 256) x762))) x1985))))) (=> (and (and (= x459 x1311) (= (x984 0) x1446)) (not x1618)) x265))) x1712))
(assert (=> (<= (x514 (x875 (+ 192 x1075))) 10000) (= (x1637 (x514 (x875 (+ x1075 192)))) (x984 (x514 (x875 (+ 192 x1075)))))))
(assert (x384 31))
(assert (=> (<= x18 10000) (= (x984 x18) (x1637 x18))))
(assert (= (or x2298 x1807) x2145))
(assert (= (x1606 (x875 (+ 96 x315))) 0))
(assert (= (x1606 (x875 (+ 192 x315))) 0))
(assert (=> (<= (x1958 288) 10000) (= (x984 (x1958 288)) (x1637 (x1958 288)))))
(assert (= x1435 (x1637 (x1404 x1435))))
(assert (x1208 x1027))
(assert (= x867 (=> (and (or (not x521) x521) (= x521 (= 0 x370))) x1682)))
(assert (x1208 x2109))
(assert (= (and x1045 x1783) x2106))
(assert (x1208 x264))
(assert (x384 x174))
(assert (x1208 x129))
(assert (= (or x695 x1875) x1740))
(assert (= (x1404 (x1285 x180 1)) (+ 1 (x1404 x180))))
(assert (x1208 x2303))
(assert (= (=> (and (= (x808 x2280) x2162) (= x798 (x875 (+ 32 x777))) (= x131 (not (< x798 x1672)))) (and x131 x72)) x555))
(assert (= x208 (or x729 x577)))
(assert (= (or x471 x1945) x660))
(assert (= x718 (x1637 (x1404 x718))))
(assert (x384 x515))
(assert (x981 (x187 (x875 (+ x1482 96)))))
(assert (x1208 x1857))
(assert (x287 x1577))
(assert (= (and x600 x340) x1396))
(assert (x1208 x1539))
(assert (x981 (x187 (x875 (+ x1482 192)))))
(assert (x1208 x1443))
(assert (= (=> (and (= x253 (x2236 x545)) (= (< 0 x1400) x1483) (> x253 0) (= x1400 (x510 x1313 248)) (= (x2236 x345) x1313)) (and (=> (and (= (x984 0) x2430) (not x1483)) x1440) (=> x1483 x1866))) x1895))
(assert (= (and x1746 (not x2383)) x854))
(assert (=> (<= (x1928 (x875 (+ x2172 64))) 10000) (= (x984 (x1928 (x875 (+ x2172 64)))) (x1637 (x1928 (x875 (+ 64 x2172)))))))
(assert (x1208 x2358))
(assert (= (=> (and (= x2204 (x1354 18446744073709551615 x2296)) (= (x875 (+ x2466 31)) x137) (not (> x1096 18446744073709551615)) (= x1096 x1904) (= x1480 x746) (not (= 0 x164)) (= (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x137) x2337) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2466) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2466) true) (< x2466 32)))) (= x2296 (x1568 x2038)) (= (x875 (+ x2337 x2038)) x746) (= (x875 (+ 7776000 x2204)) x1096)) x2140) x1997))
(assert (x1208 x1336))
(assert (x1208 x2453))
(assert (x1208 x477))
(assert (= x829 (and x1700 x1078)))
(assert (x2187 x527))
(assert (= x1787 (or x1663 x954)))
(assert (= (=> (and (= x1549 (x1370 256)) (= (not (< 128 x1522)) x1438) (= (x875 (+ 96 x1252)) x1806)) (and x1453 x1438)) x950))
(assert (= (x1606 x2172) 0))
(assert (= (x1606 x1414) 0))
(assert (= x1302 (=> (and (or (and (not x463) (= x1181 x945)) (and (and (= (= x1954 65536) x2239) (= (x1354 65536 x1882) x1954) (= x1181 (ite x2239 0 x945))) x463)) (= (< x1630 x2293) x463)) x396)))
(assert (x1208 x1231))
(assert (x1208 x782))
(assert (=> (>= 10000 x299) (= (x984 x299) (x1637 x299))))
(assert (x1208 x2241))
(assert (= x619 (and (not x275) x2301)))
(assert (= (x1404 (x1637 x197)) x197))
(assert (x1208 x1262))
(assert (x1208 x1909))
(assert (= (=> (and (= (x875 (+ 1 x1881)) x2460) (= (mod (* 2 x2027) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1881)) x773) x866))
(assert (= (=> (and (= (not (> (x1404 x1467) (x1404 x959))) x1939) (= x959 (x1285 x718 1))) (and x635 x1939)) x257))
(assert (x1208 x681))
(assert (x1208 x1458))
(assert (x1208 x1240))
(assert (= (or x476 x84) x685))
(assert (x384 x1073))
(assert (= x1061 (or (and (not x1735) x145) x874)))
(assert (= x1500 (and x369 (not x1124))))
(assert (x1208 x492))
(assert (x1208 x1973))
(assert (x1208 x2336))
(assert (= (and x1035 (not x132)) x1203))
(assert (= x1492 (x1404 (x1637 x1492))))
(assert (=> (<= (x859 (x875 (+ 192 x736))) 10000) (= (x1637 (x859 (x875 (+ x736 192)))) (x984 (x859 (x875 (+ 192 x736)))))))
(assert (= x1126 (and x2145 (not x422))))
(assert (x1208 x2071))
(assert (x1208 x1362))
(assert (x1208 x597))
(assert (= (+ 1 (x1404 x429)) (x1404 (x1285 x429 1))))
(assert (x1208 x2346))
(assert (= 0 (x1606 x1911)))
(assert (x1208 x1340))
(assert (x1208 x1364))
(assert (x1208 x2146))
(assert (= (or x2023 x304) x1947))
(assert (=> (<= x2214 10000) (= (x984 x2214) (x1637 x2214))))
(assert (= (x1404 (x1637 x649)) x649))
(assert (= x2084 (and x1473 x68)))
(assert (= (x510 x1625 192) (div x1625 6277101735386680763835789423207666416102355444464034512896)))
(assert (x1208 x1748))
(assert (x1208 x2249))
(assert (x1208 x100))
(assert (= (=> (and (= (< 0 x1942) x1288) (= x2358 (x875 (+ x1252 x1522))) (= (x2366 x686) x1942)) (and (=> (and (and (= x2358 x1) (= (x2366 x1282) x617) (= (< 32 x1942) x90) (= x1282 x1981)) x1288) (and (=> (and x90 (and (= x1558 (x875 (+ 32 x2358))) (= x1100 (x2079 x2289)) (= (< 64 x1942) x199) (= (x875 (+ x1981 32)) x2289))) (and (=> (not x199) x2354) (=> (and (and (= x83 (x875 (+ 64 x1981))) (= x274 (x875 (+ 64 x2358))) (= x385 (x1713 x83)) (= (< 96 x1942) x1600)) x199) (and (=> (not x1600) x2354) (=> x1600 x311))))) (=> (not x90) x2354))) (=> (not x1288) x2354))) x1453))
(assert (= x1489 (and x1291 (not x582))))
(assert (= x1072 (and (not x552) x2338)))
(assert (= x2248 x1684))
(assert (x384 x228))
(assert (= x159 (and (not x781) x1947)))
(assert (x1208 x226))
(assert (= (or x502 x1281) x145))
(assert (= x1540 (and x1175 (not x1276))))
(assert (= (and x1487 (not x2356)) x313))
(assert (x1208 x865))
(assert (x1208 x1523))
(assert (= (x1606 (x875 (+ x192 192))) 0))
(assert (x1208 x1772))
(assert (x1208 x1538))
(assert (x384 x1240))
(assert (= 0 (x1606 (x875 (+ 32 x315)))))
(assert (= (x1637 (x1404 x721)) x721))
(assert (x981 (x76 (x875 (+ x118 96)))))
(assert (x981 (x1716 (x875 (+ 192 x16)))))
(assert (x384 x283))
(assert (= (x1606 x16) 0))
(assert (= (div x1178 452312848583266388373324160190187140051835877600158453279131187530910662656) (x510 x1178 248)))
(assert (x1208 x227))
(assert (x384 x1528))
(assert (x1208 x1861))
(assert (= (and x2370 x755) x167))
(assert (x1208 x716))
(assert (x1208 x2341))
(assert (x981 (x529 x1715)))
(assert (x1208 x704))
(assert (= (x1606 (x875 (+ 192 x1075))) 0))
(assert (= 0 (x1606 (x875 (+ x1668 128)))))
(assert (x1208 x2090))
(assert (= x1879 (x1404 (x1637 x1879))))
(assert (x1208 x794))
(assert (= (and x906 x2223) x958))
(assert (= x2202 (=> (and (= x1188 (x875 (+ x739 32))) (= (not (> x1387 x1188)) x398) (= (x808 x2219) x1317)) (and x117 x398))))
(assert (x981 (x522 320)))
(assert (x1208 x1581))
(assert (= (x510 x1372 192) (div x1372 6277101735386680763835789423207666416102355444464034512896)))
(assert (= 0 (x1606 x2303)))
(assert (= (and (not x1332) x655) x1555))
(assert (= (=> (and (= x2063 (= x912 0)) (or x2063 (not x2063))) x519) x1957))
(assert (x1208 x1730))
(assert (= 0 (x1606 x2190)))
(assert (= 0 (x1606 x192)))
(assert (= (x1404 (x1637 x728)) x728))
(assert (and (= (x1994 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= 2199023255552 (x1994 2 41)) (= 633825300114114700748351602688 (x1994 2 99)) (= (x1994 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= (x1994 2 83) 9671406556917033397649408) (= (x1994 2 6) 64) (= (x1994 2 236) 110427941548649020598956093796432407239217743554726184882600387580788736) (= (x1994 2 57) 144115188075855872) (= 18014398509481984 (x1994 2 54)) (= (x1994 2 231) 3450873173395281893717377931138512726225554486085193277581262111899648) (= (x1994 2 210) 1645504557321206042154969182557350504982735865633579863348609024) (= (x1994 2 251) 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (x1994 2 81) 2417851639229258349412352) (= (x1994 2 205) 51422017416287688817342786954917203280710495801049370729644032) (= (x1994 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= 19807040628566084398385987584 (x1994 2 94)) (= (x1994 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x1994 2 90) 1237940039285380274899124224) (= (x1994 2 178) 383123885216472214589586756787577295904684780545900544) (= 37778931862957161709568 (x1994 2 75)) (= (x1994 2 141) 2787593149816327892691964784081045188247552) (= (x1994 2 161) 2923003274661805836407369665432566039311865085952) (= (x1994 2 22) 4194304) (= (x1994 2 199) 803469022129495137770981046170581301261101496891396417650688) (= (x1994 2 31) 2147483648) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x1994 2 252)) (= 174224571863520493293247799005065324265472 (x1994 2 137)) (= 162259276829213363391578010288128 (x1994 2 107)) (= 9223372036854775808 (x1994 2 63)) (= 8 (x1994 2 3)) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x1994 2 228)) (= (x1994 2 245) 56539106072908298546665520023773392506479484700019806659891398441363832832) (= (x1994 2 134) 21778071482940061661655974875633165533184) (= (x1994 2 157) 182687704666362864775460604089535377456991567872) (= 2993155353253689176481146537402947624255349848014848 (x1994 2 171)) (= (x1994 2 138) 348449143727040986586495598010130648530944) (= 79228162514264337593543950336 (x1994 2 96)) (= (x1994 2 246) 113078212145816597093331040047546785012958969400039613319782796882727665664) (= (x1994 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= (x1994 2 146) 89202980794122492566142873090593446023921664) (= 14134776518227074636666380005943348126619871175004951664972849610340958208 (x1994 2 243)) (= (x1994 2 125) 42535295865117307932921825928971026432) (= (x1994 2 7) 128) (= (x1994 2 104) 20282409603651670423947251286016) (= 4096 (x1994 2 12)) (= 5708990770823839524233143877797980545530986496 (x1994 2 152)) (= 1298074214633706907132624082305024 (x1994 2 110)) (= 70368744177664 (x1994 2 46)) (= 374144419156711147060143317175368453031918731001856 (x1994 2 168)) (= 151115727451828646838272 (x1994 2 77)) (= 618970019642690137449562112 (x1994 2 89)) (= 4503599627370496 (x1994 2 52)) (= (x1994 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= (x1994 2 120) 1329227995784915872903807060280344576) (= (x1994 2 88) 309485009821345068724781056) (= (x1994 2 51) 2251799813685248) (= 392318858461667547739736838950479151006397215279002157056 (x1994 2 188)) (= 324518553658426726783156020576256 (x1994 2 108)) (= (x1994 2 214) 26328072917139296674479506920917608079723773850137277813577744384) (= (x1994 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= (x1994 2 158) 365375409332725729550921208179070754913983135744) (= (x1994 2 44) 17592186044416) (= 1393796574908163946345982392040522594123776 (x1994 2 140)) (= (x1994 2 184) 24519928653854221733733552434404946937899825954937634816) (= (x1994 2 68) 295147905179352825856) (= 5444517870735015415413993718908291383296 (x1994 2 132)) (= (x1994 2 194) 25108406941546723055343157692830665664409421777856138051584) (= (x1994 2 215) 52656145834278593348959013841835216159447547700274555627155488768) (= 6129982163463555433433388108601236734474956488734408704 (x1994 2 182)) (= (x1994 2 195) 50216813883093446110686315385661331328818843555712276103168) (= (x1994 2 5) 32) (= (x1994 2 11) 2048) (= 8796093022208 (x1994 2 43)) (= 862718293348820473429344482784628181556388621521298319395315527974912 (x1994 2 229)) (= (x1994 2 69) 590295810358705651712) (= 1496577676626844588240573268701473812127674924007424 (x1994 2 170)) (= (x1994 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= 2097152 (x1994 2 21)) (= (x1994 2 164) 23384026197294446691258957323460528314494920687616) (= (x1994 2 247) 226156424291633194186662080095093570025917938800079226639565593765455331328) (= (x1994 2 165) 46768052394588893382517914646921056628989841375232) (= (x1994 2 113) 10384593717069655257060992658440192) (= 17179869184 (x1994 2 34)) (= 2305843009213693952 (x1994 2 61)) (= (x1994 2 67) 147573952589676412928) (= (x1994 2 186) 98079714615416886934934209737619787751599303819750539264) (= (x1994 2 4) 16) (= 401734511064747568885490523085290650630550748445698208825344 (x1994 2 198)) (= 4722366482869645213696 (x1994 2 72)) (= (x1994 2 95) 39614081257132168796771975168) (= (x1994 2 149) 713623846352979940529142984724747568191373312) (= 1427247692705959881058285969449495136382746624 (x1994 2 150)) (= 524288 (x1994 2 19)) (= (x1994 2 179) 766247770432944429179173513575154591809369561091801088) (= 332306998946228968225951765070086144 (x1994 2 118)) (= 1532495540865888858358347027150309183618739122183602176 (x1994 2 180)) (= (x1994 2 18) 262144) (= 302231454903657293676544 (x1994 2 78)) (= 45671926166590716193865151022383844364247891968 (x1994 2 155)) (= 38685626227668133590597632 (x1994 2 85)) (= (x1994 2 190) 1569275433846670190958947355801916604025588861116008628224) (= 5192296858534827628530496329220096 (x1994 2 112)) (= (x1994 2 53) 9007199254740992) (= (x1994 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= 5070602400912917605986812821504 (x1994 2 102)) (= (x1994 2 55) 36028797018963968) (= (x1994 2 35) 34359738368) (= 256 (x1994 2 8)) (= 44601490397061246283071436545296723011960832 (x1994 2 145)) (= 137438953472 (x1994 2 37)) (= (x1994 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= (x1994 2 197) 200867255532373784442745261542645325315275374222849104412672) (= (x1994 2 28) 268435456) (= (x1994 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1994 2 240)) (= (x1994 2 181) 3064991081731777716716694054300618367237478244367204352) (= (x1994 2 123) 10633823966279326983230456482242756608) (= 67108864 (x1994 2 26)) (= 87112285931760246646623899502532662132736 (x1994 2 136)) (= (x1994 2 183) 12259964326927110866866776217202473468949912977468817408) (= 1073741824 (x1994 2 30)) (= (x1994 2 174) 23945242826029513411849172299223580994042798784118784) (= 36893488147419103232 (x1994 2 65)) (= (x1994 2 48) 281474976710656) (= (x1994 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= (x1994 2 143) 11150372599265311570767859136324180752990208) (= 65536 (x1994 2 16)) (= (x1994 2 175) 47890485652059026823698344598447161988085597568237568) (= (x1994 2 56) 72057594037927936) (= 5846006549323611672814739330865132078623730171904 (x1994 2 162)) (= (x1994 2 217) 210624583337114373395836055367340864637790190801098222508621955072) (= 10141204801825835211973625643008 (x1994 2 103)) (= (x1994 2 70) 1180591620717411303424) (= (x1994 2 36) 68719476736) (= (x1994 2 15) 32768) (= (x1994 2 225) 53919893334301279589334030174039261347274288845081144962207220498432) (= 9903520314283042199192993792 (x1994 2 93)) (= (x1994 2 20) 1048576) (= 16384 (x1994 2 14)) (= 2475880078570760549798248448 (x1994 2 91)) (= (x1994 2 62) 4611686018427387904) (= 28948022309329048855892746252171976963317496166410141009864396001978282409984 (x1994 2 254)) (= (x1994 2 122) 5316911983139663491615228241121378304) (= 18446744073709551616 (x1994 2 64)) (= 10889035741470030830827987437816582766592 (x1994 2 133)) (= 22300745198530623141535718272648361505980416 (x1994 2 144)) (= (x1994 2 79) 604462909807314587353088) (= (x1994 2 80) 1208925819614629174706176) (= 4398046511104 (x1994 2 42)) (= 11692013098647223345629478661730264157247460343808 (x1994 2 163)) (= (x1994 2 0) 1) (= (x1994 2 74) 18889465931478580854784) (= 2535301200456458802993406410752 (x1994 2 101)) (= 12554203470773361527671578846415332832204710888928069025792 (x1994 2 193)) (= 11972621413014756705924586149611790497021399392059392 (x1994 2 173)) (= (x1994 2 24) 16777216) (= 2596148429267413814265248164610048 (x1994 2 111)) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x1994 2 232)) (= (x1994 2 151) 2854495385411919762116571938898990272765493248) (= (x1994 2 135) 43556142965880123323311949751266331066368) (= (x1994 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= (x1994 2 114) 20769187434139310514121985316880384) (= (x1994 2 130) 1361129467683753853853498429727072845824) (= (x1994 2 222) 6739986666787659948666753771754907668409286105635143120275902562304) (= 12855504354071922204335696738729300820177623950262342682411008 (x1994 2 203)) (= 73786976294838206464 (x1994 2 66)) (= (x1994 2 167) 187072209578355573530071658587684226515959365500928) (= 664613997892457936451903530140172288 (x1994 2 119)) (= (x1994 2 153) 11417981541647679048466287755595961091061972992) (= 105312291668557186697918027683670432318895095400549111254310977536 (x1994 2 216)) (= 822752278660603021077484591278675252491367932816789931674304512 (x1994 2 209)) (= 40564819207303340847894502572032 (x1994 2 105)) (= 4 (x1994 2 2)) (= (x1994 2 49) 562949953421312) (= (x1994 2 40) 1099511627776) (= 75557863725914323419136 (x1994 2 76)) (= (x1994 2 244) 28269553036454149273332760011886696253239742350009903329945699220681916416) (= (x1994 2 220) 1684996666696914987166688442938726917102321526408785780068975640576) (= (x1994 2 13) 8192) (= (x1994 2 106) 81129638414606681695789005144064) (= (x1994 2 156) 91343852333181432387730302044767688728495783936) (= (x1994 2 27) 134217728) (= (x1994 2 71) 2361183241434822606848) (= 93536104789177786765035829293842113257979682750464 (x1994 2 166)) (= (x1994 2 117) 166153499473114484112975882535043072) (= (x1994 2 139) 696898287454081973172991196020261297061888) (= (x1994 2 176) 95780971304118053647396689196894323976171195136475136) (= (x1994 2 127) 170141183460469231731687303715884105728) (= 41538374868278621028243970633760768 (x1994 2 115)) (= (x1994 2 32) 4294967296) (= 3138550867693340381917894711603833208051177722232017256448 (x1994 2 191)) (= (x1994 2 121) 2658455991569831745807614120560689152) (= (x1994 2 237) 220855883097298041197912187592864814478435487109452369765200775161577472) (= 549755813888 (x1994 2 39)) (= 8589934592 (x1994 2 33)) (= 1125899906842624 (x1994 2 50)) (= (x1994 2 185) 49039857307708443467467104868809893875799651909875269632) (= 1606938044258990275541962092341162602522202993782792835301376 (x1994 2 200)) (= (x1994 2 109) 649037107316853453566312041152512) (= (x1994 2 172) 5986310706507378352962293074805895248510699696029696) (= 178405961588244985132285746181186892047843328 (x1994 2 147)) (= (x1994 2 73) 9444732965739290427392) (= 784637716923335095479473677900958302012794430558004314112 (x1994 2 189)) (= (x1994 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= (x1994 2 9) 512) (= (x1994 2 213) 13164036458569648337239753460458804039861886925068638906788872192) (= 35184372088832 (x1994 2 45)) (= (x1994 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= (x1994 2 128) 340282366920938463463374607431768211456) (= (x1994 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x1994 2 223)) (= (x1994 2 235) 55213970774324510299478046898216203619608871777363092441300193790394368) (= 536870912 (x1994 2 29)) (= 1267650600228229401496703205376 (x1994 2 100)) (= (x1994 2 84) 19342813113834066795298816) (= 196159429230833773869868419475239575503198607639501078528 (x1994 2 187)) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x1994 2 242)) (= (x1994 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= (x1994 2 23) 8388608) (= 77371252455336267181195264 (x1994 2 86)) (= (x1994 2 124) 21267647932558653966460912964485513216) (= (x1994 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= (x1994 2 177) 191561942608236107294793378393788647952342390272950272) (= (x1994 2 58) 288230376151711744) (= 22835963083295358096932575511191922182123945984 (x1994 2 154)) (= (x1994 2 38) 274877906944) (= 1024 (x1994 2 10)) (= 441711766194596082395824375185729628956870974218904739530401550323154944 (x1994 2 238)) (= (x1994 2 82) 4835703278458516698824704) (= 842498333348457493583344221469363458551160763204392890034487820288 (x1994 2 219)) (= (x1994 2 142) 5575186299632655785383929568162090376495104) (= 140737488355328 (x1994 2 47)) (= (x1994 2 17) 131072) (= 2722258935367507707706996859454145691648 (x1994 2 131)) (= 27606985387162255149739023449108101809804435888681546220650096895197184 (x1994 2 234)) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1994 2 255)) (= 100433627766186892221372630771322662657637687111424552206336 (x1994 2 196)) (= 6277101735386680763835789423207666416102355444464034512896 (x1994 2 192)) (= 316912650057057350374175801344 (x1994 2 98)) (= (x1994 2 116) 83076749736557242056487941267521536) (= 576460752303423488 (x1994 2 59)) (= 85070591730234615865843651857942052864 (x1994 2 126)) (= 102844034832575377634685573909834406561420991602098741459288064 (x1994 2 206)) (= 1461501637330902918203684832716283019655932542976 (x1994 2 160)) (= 33554432 (x1994 2 25)) (= (x1994 2 92) 4951760157141521099596496896) (= 158456325028528675187087900672 (x1994 2 97)) (= 2 (x1994 2 1)) (= 730750818665451459101842416358141509827966271488 (x1994 2 159)) (= 356811923176489970264571492362373784095686656 (x1994 2 148)) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x1994 2 233)) (= 680564733841876926926749214863536422912 (x1994 2 129)) (= (x1994 2 60) 1152921504606846976) (= 154742504910672534362390528 (x1994 2 87)) (= (x1994 2 169) 748288838313422294120286634350736906063837462003712) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x1994 2 226))))
(assert (= (=> (and (= x642 (ite (> x2177 0) x956 (x1354 127 x956))) (= (x875 (+ x2281 x1655)) x1816) (= (x2107 (- x1944 32)) x974) (= (x1354 1 x216) x2177) (= x1664 (mod (- x2177 (ite x1818 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x216 (x1646 x978)) (= x956 (div x216 2)) (= x978 (x802 x807 (x984 5) 0)) (not (> x1578 18446744073709551615)) (= (< x642 32) x1818) (> x1664 0) (= (x2107 (- x1816 x2012)) x1944) (= x2175 (< 31 x642)) (= (x455 x2012) x1578)) (and (=> (not x2175) x2248) (=> (and (and (= (x1285 x427 x330) x1350) (= (x875 (+ x1578 31)) x2368) (= (ite (< x1578 32) x427 x1350) x180) (= (x1601 x978 0) x427) (= x2402 (x1285 x427 x1329)) (= (x875 (+ x642 31)) x2257) (= (< (x1404 x180) (x1404 x2402)) x1473) (= (div x2368 32) x330) (= (div x2257 32) x1329)) x2175) (and (=> x1473 x2415) (=> (not x1473) x1684))))) x1920))
(assert (= x561 (=> (and (= x124 x23) (not (>= (+ 1 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x547 x1798)) x2451)))
(assert (= x1602 (or x1850 x1315)))
(assert (x1208 x436))
(assert (x1208 x2195))
(assert (x1208 x442))
(assert (= x639 (and x1704 x2178)))
(assert (= x1035 (and (not x893) x472)))
(assert (x1208 x1068))
(assert (x1208 x527))
(assert (= (and x2182 x1360) x2262))
(assert (= (x1637 (x1404 x1467)) x1467))
(assert (= (x750 (x875 (+ 96 x1668))) (x1404 (x1637 (x750 (x875 (+ 96 x1668)))))))
(assert (x1208 x1188))
(assert (= (x1606 (x875 (+ x2172 128))) 0))
(assert (x1208 x192))
(assert (x1208 x1100))
(assert (= (or x546 x2028 x722) x1141))
(assert (x1208 x2401))
(assert (= (or x896 x660) x2069))
(assert (x1208 x856))
(assert (x384 18446744073709551615))
(assert (= (or x1680 x1845) x1705))
(assert (= (x187 (x875 (+ 160 x1482))) (x1404 (x1637 (x187 (x875 (+ x1482 160)))))))
(assert (=> (<= (x1092 (x875 (+ 128 x192))) 10000) (= (x984 (x1092 (x875 (+ x192 128)))) (x1637 (x1092 (x875 (+ 128 x192)))))))
(assert (x384 x597))
(assert (=> (<= (x1716 (x875 (+ x16 32))) 10000) (= (x1637 (x1716 (x875 (+ x16 32)))) (x984 (x1716 (x875 (+ x16 32)))))))
(assert (= 65536 (x1404 (x984 65536))))
(assert (x1208 x651))
(assert (=> (>= 10000 x453) (= (x984 x453) (x1637 x453))))
(assert (x1208 x1116))
(assert (x384 x1231))
(assert (x1208 x873))
(assert (x981 (x859 (x875 (+ 96 x736)))))
(assert (x1208 x726))
(assert (x1208 x715))
(assert (= (=> (and (> x1038 0) (= (x187 x390) x1038) (= x2013 (x510 x1160 248)) (= x1160 (x187 x443)) (= x1906 (< 0 x2013))) (and (=> (and (not x1906) (= (x984 0) x1529)) x1289) (=> x1906 x1824))) x1348))
(assert (x1208 x2082))
(assert (= (+ x1329 (x1404 x427)) (x1404 (x1285 x427 x1329))))
(assert (=> (<= (x76 (x875 (+ 128 x118))) 10000) (= (x1637 (x76 (x875 (+ x118 128)))) (x984 (x76 (x875 (+ x118 128)))))))
(assert (= x2073 (=> (not (= 0 x2270)) x2381)))
(assert (= (x1404 (x1637 (x529 (x875 (+ 32 x1715))))) (x529 (x875 (+ x1715 32)))))
(assert (= (x1637 1058533858861509001837889330765714424124041949802528273061784713247848398848) (x984 1058533858861509001837889330765714424124041949802528273061784713247848398848)))
(assert (= (x1958 320) (x1404 (x1637 (x1958 320)))))
(assert (x1208 x756))
(assert (x1208 x2355))
(assert (= (or x489 x854) x1569))
(assert (= (and x685 (not x2076)) x2360))
(assert (x1208 x487))
(assert (= x1507 (and (not x2074) x1217)))
(assert (= x1118 (=> (and (= (x381 x1841) x1525) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1525) (= x997 (= x1921 131072)) (= x1921 (x1354 131072 x823)) (>= x1525 0) (= (x510 x1525 160) x823) (= (x802 (x1637 x2380) (x984 1) 0) x1841)) (and (=> (and (and (= (x875 (+ x2355 x73)) x1195) (= x1799 (x875 (+ 32 x73))) (= x584 (div x852 2)) (= x1748 (x1354 1 x852)) (= (div x1795 32) x1084) (= (x802 (x1637 x2380) (x984 5) 0) x1131) (= (x875 (+ 31 x632)) x1795) (= (mod (- x1748 (ite x120 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1654) (= x909 (= x632 0)) (= (> 32 x632) x120) (> x1654 0) (= x852 (x1524 x1131)) (= x632 (ite (< 0 x1748) x584 (x1354 127 x584))) (= (x875 (+ 32 x769)) x2355) (= (mod (* x1084 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x769)) x997) (and (=> x909 x2288) (=> (and (= (< 31 x632) x1381) (not x909)) (and (=> (and (not x1381) (and (= x484 (x1524 x1131)) (= x2155 (div x484 256)) (= (mod (* 256 x2155) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x752))) x2288) (=> (and x1381 (and (= x2040 (x1601 x1131 0)) (= x557 (x1285 x2040 1)) (= (> x2181 x1884) x2311) (= (x875 (+ x1799 x632)) x2181) (= x1884 (x875 (+ x1799 32))) (= (x2242 x2040) x2184))) (and (=> x2311 x839) (=> (not x2311) x705))))))) (=> (and (and (= x73 x573) (= x1190 (x984 0))) (not x997)) x2423)))))
(assert (x1208 x1191))
(assert (x1208 x2416))
(assert (= (x187 x1482) (x1404 (x1637 (x187 x1482)))))
(assert (x1208 x1941))
(assert (x1208 x407))
(assert (= (x1404 (x1637 (x2236 (x875 (+ 128 x1820))))) (x2236 (x875 (+ x1820 128)))))
(assert (= x1575 (and x461 (not x101))))
(assert (=> (<= (x187 (x875 (+ 192 x1482))) 10000) (= (x1637 (x187 (x875 (+ x1482 192)))) (x984 (x187 (x875 (+ x1482 192)))))))
(assert (= 0 (x1606 (x875 (+ 64 x16)))))
(assert (x1208 x258))
(assert (= (and x1830 x195) x1666))
(assert (x1976 x2307 x283))
(assert (x384 x1005))
(assert (x1750 x1882))
(assert (x1208 x1326))
(assert (x981 x996))
(assert (x1341 x1729))
(assert (= x1955 (and x248 (not x1906))))
(assert (= (x510 x2241 160) (div x2241 1461501637330902918203684832716283019655932542976)))
(assert (x1273 x1338))
(assert (x1208 x2190))
(assert (x1208 x299))
(assert (= (and x364 x909) x1201))
(assert (= (and x488 (not x2396)) x896))
(assert (= (x1606 x1460) 0))
(assert (x1208 x675))
(assert (= 0 (x1606 x2082)))
(assert (x1208 x941))
(assert (= (and x1345 x890) x386))
(assert (x1208 x2196))
(assert (= (x1606 (x875 (+ 128 x192))) 0))
(assert (x1208 x216))
(assert (x981 (x522 224)))
(assert (= (x1606 x1051) 0))
(assert (x1208 x2125))
(assert (x1208 x330))
(assert (= x528 x2033))
(assert (= x372 (=> (and (= x135 x162) (= x2130 x1887) (not (>= (+ x1001 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2229)))
(assert (x1208 x1337))
(assert (= (x514 (x875 (+ 64 x1075))) (x1404 (x1637 (x514 (x875 (+ x1075 64)))))))
(assert (x1208 x388))
(assert (=> (<= (x2357 (x875 (+ 192 x1068))) 10000) (= (x984 (x2357 (x875 (+ 192 x1068)))) (x1637 (x2357 (x875 (+ x1068 192)))))))
(assert (= (and (not x1934) x639) x1508))
(assert (= (and x1012 (not x841)) x2253))
(assert (= (or x1613 x2456 x314) x1609))
(assert (= (x1928 x2172) (x1404 (x1637 (x1928 x2172)))))
(assert (= (or x1544 x534) x1388))
(assert (= x790 (or x1388 x1201 x1255)))
(assert (x1208 x648))
(assert (= x1859 (and x313 x31)))
(assert (x1208 x951))
(assert (x1208 x2008))
(assert (= x35 (or x1753 x1764)))
(assert (= (or x259 x1297) x232))
(assert (x1208 x1851))
(assert (x1208 x1660))
(assert (x1208 x2449))
(assert (= (x1092 (x875 (+ 128 x192))) (x1404 (x1637 (x1092 (x875 (+ 128 x192)))))))
(assert (= x1597 (=> (and (= x1456 (x529 x1589)) (= x503 (x510 x653 248)) (= (x529 x1430) x653) (= (< 0 x503) x67) (> x1456 0)) (and (=> (and (= (x984 0) x188) (not x67)) x1743) (=> x67 x816)))))
(assert (x1208 x174))
(assert (x1972 x53))
(assert (x1431 x1005))
(assert (x1208 x1433))
(assert (= x88 (x1404 (x1637 x88))))
(assert (= (x1404 (x1637 (x522 288))) (x522 288)))
(assert (= (x114 (x875 (+ x1192 32))) (x1404 (x1637 (x114 (x875 (+ x1192 32)))))))
(assert (x981 x2268))
(assert (= x369 (or x232 x2433)))
(assert (x384 x1751))
(assert (=> (<= (x187 (x875 (+ x1482 96))) 10000) (= (x984 (x187 (x875 (+ 96 x1482)))) (x1637 (x187 (x875 (+ x1482 96)))))))
(assert (= (x114 x1192) (x1404 (x1637 (x114 x1192)))))
(assert (= (x1404 (x1637 (x1386 (x875 (+ x315 128))))) (x1386 (x875 (+ x315 128)))))
(assert (= (+ (x1404 x894) 1) (x1404 (x1285 x894 1))))
(assert (= (=> (and (= x1529 x2417) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2013 1))) (= x425 x1134)) x447) x1289))
(assert (= (and (not x1288) x2418) x1565))
(assert (= (x859 (x875 (+ 192 x736))) (x1404 (x1637 (x859 (x875 (+ 192 x736)))))))
(assert (x207 x1181))
(assert (= (ite (> 256 x1089) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1994 2 x1089)) 0) (x510 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1089)))
(assert (x1273 x1645))
(assert (x384 x468))
(assert (x1208 x1658))
(assert (x1208 x377))
(assert (= x1945 (and x1512 x2062)))
(assert (= x1474 (and x46 x1369)))
(assert (= x2322 (and x1126 x449)))
(assert (x1972 x800))
(assert (= (+ x759 (x1404 x1929)) (x1404 (x1285 x1929 x759))))
(assert (x1208 x2266))
(assert (= (x1404 (x1637 (x522 192))) (x522 192)))
(assert (= 0 (x1606 (x875 (+ 128 x118)))))
(assert (= (x1404 (x1637 (x1716 (x875 (+ x16 160))))) (x1716 (x875 (+ x16 160)))))
(assert (x1208 x1299))
(assert (x156 x1076))
(assert (x384 x200))
(assert (x981 (x529 (x875 (+ x1715 128)))))
(assert (x1208 x1296))
(assert (x156 x1736))
(assert (= x629 (=> (and (= x1024 (mod (- x2249 (ite x2043 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2276 (x875 (+ 31 x322))) (= (x875 (+ 32 x1310)) x2133) (= x1310 (mod (* 32 x1658) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2249 (x1354 1 x1240)) (= (div x1240 2) x352) (= x2043 (< x322 32)) (= x133 (x802 (x1637 x2380) (x984 5) 0)) (< 0 x1024) (= x300 (x875 (+ 32 x545))) (= x1240 (x1524 x133)) (not (= x698 0)) (= (= x322 0) x2356) (= x1658 (div x2276 32)) (= (x875 (+ x2133 x545)) x1356) (= (ite (> x2249 0) x352 (x1354 127 x352)) x322)) (and (=> (and (= x31 (> x322 31)) (not x2356)) (and (=> (and (and (= x138 (x875 (+ x300 x322))) (= (x1601 x133 0) x47) (= x464 (x875 (+ x300 32))) (= x1979 (x2242 x47)) (= (> x138 x464) x109) (= (x1285 x47 1) x1932)) x31) (and (=> (not x109) x2206) (=> x109 x1574))) (=> (and (and (= (mod (* x2196 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x628) (= (div x868 256) x2196) (= x868 (x1524 x133))) (not x31)) x887))) (=> x2356 x887)))))
(assert (= x953 (=> (and (= x263 (x514 x87)) (= x261 (x875 (+ 1 x767))) (= (x875 (+ 1 x1547)) x1075) (not (< x263 x261)) (= (>= 224 x767) x1295)) (and (=> (= (ite (>= 32 x767) (x1601 (x1637 (x514 x1075)) 0) (ite (<= x767 64) (x802 (x1637 (x514 x1075)) (x1637 (x514 (x875 (+ 32 x1075)))) 0) (ite (>= 96 x767) (x1546 (x1637 (x514 x1075)) (x1637 (x514 (x875 (+ 32 x1075)))) (x1637 (x514 (x875 (+ x1075 64)))) 0) (ite (<= x767 128) (x320 (x1637 (x514 x1075)) (x1637 (x514 (x875 (+ 32 x1075)))) (x1637 (x514 (x875 (+ 64 x1075)))) (x1637 (x514 (x875 (+ x1075 96)))) 0) (ite (<= x767 160) (x1619 (x1637 (x514 x1075)) (x1637 (x514 (x875 (+ x1075 32)))) (x1637 (x514 (x875 (+ 64 x1075)))) (x1637 (x514 (x875 (+ 96 x1075)))) (x1637 (x514 (x875 (+ x1075 128)))) 0) (ite (>= 192 x767) (x1266 (x1637 (x514 x1075)) (x1637 (x514 (x875 (+ 32 x1075)))) (x1637 (x514 (x875 (+ 64 x1075)))) (x1637 (x514 (x875 (+ 96 x1075)))) (x1637 (x514 (x875 (+ x1075 128)))) (x1637 (x514 (x875 (+ 160 x1075)))) 0) (ite (<= x767 224) (x1412 (x1637 (x514 x1075)) (x1637 (x514 (x875 (+ 32 x1075)))) (x1637 (x514 (x875 (+ x1075 64)))) (x1637 (x514 (x875 (+ 96 x1075)))) (x1637 (x514 (x875 (+ x1075 128)))) (x1637 (x514 (x875 (+ x1075 160)))) (x1637 (x514 (x875 (+ 192 x1075)))) 0) (x1637 x18)))))))) x1905) x14) x1295))))
(assert (= (x1606 x1166) 0))
(assert (= (or x672 x1264) x611))
(assert (x1208 x2047))
(assert (x1208 x2445))
(assert (x1208 x2333))
(assert (x287 x1355))
(assert (x1208 x568))
(assert (x1208 x1125))
(assert (= x1446 (x1637 (x1404 x1446))))
(assert (x1208 x2162))
(assert (x1208 x821))
(assert (x1208 x767))
(assert (x1208 x2221))
(assert (= (and (not x325) x1609) x509))
(assert (x384 x1503))
(assert (x1208 x2367))
(assert (x1208 x1634))
(assert (= (x984 4294967296) (x1637 4294967296)))
(assert (x1208 x308))
(assert (x1208 x542))
(assert (x1208 x769))
(assert (= x2192 (and x1408 x116)))
(assert (x981 (x1958 320)))
(assert (x1208 x1409))
(assert (= x1190 (x1637 (x1404 x1190))))
(assert (x1208 x1414))
(assert (x981 (x2236 (x875 (+ x1820 160)))))
(assert (x1208 x2377))
(assert (x1431 x1819))
(assert (= (div x1946 452312848583266388373324160190187140051835877600158453279131187530910662656) (x510 x1946 248)))
(assert (x1208 x1153))
(assert (x384 x1355))
(assert (x1208 x702))
(assert (x1208 x288))
(assert (=> (<= (x1928 (x875 (+ 96 x2172))) 10000) (= (x984 (x1928 (x875 (+ 96 x2172)))) (x1637 (x1928 (x875 (+ 96 x2172)))))))
(assert (x1208 x1055))
(assert (= (x1404 (x1637 (x529 (x875 (+ x1715 64))))) (x529 (x875 (+ 64 x1715)))))
(assert (= x2340 (=> (and (= x2343 (< x1336 x2293)) (or (and (and (= x2005 x1825) (= x309 x1645)) (not x2343)) (and (and (= 0 x1645) (= x1825 (ite x960 0 x2005)) (= x960 (= 65536 x286)) (= (x1354 65536 x309) x286)) x2343))) x2193)))
(assert (x1208 x423))
(assert (= (or x208 x1436) x1700))
(assert (= x1830 (and x2383 x1746)))
(assert (= x1130 (and x2418 x1288)))
(assert (x1208 x1633))
(assert (x1431 x1671))
(assert (x1431 x59))
(assert (x1750 x2327))
(assert (= x2099 (=> (and (= x486 (x875 (+ x1411 32))) (= (not (> x2047 x486)) x26) (= (x2242 x141) x2221)) (and x26 x285))))
(assert (= (div x1903 6277101735386680763835789423207666416102355444464034512896) (x510 x1903 192)))
(assert (x1208 x37))
(assert (= x1159 (and (not x1974) x692)))
(assert (x981 (x514 (x875 (+ 192 x1075)))))
(assert (x1208 x621))
(assert (x1208 x450))
(assert (= (=> (and (or (not x1187) x1187) (= (> x2293 x2359) x1187)) x1118) x1112))
(assert (x1208 x2133))
(assert (= 0 (x1606 (x875 (+ 96 x2172)))))
(assert (=> (>= 10000 (x522 320)) (= (x984 (x522 320)) (x1637 (x522 320)))))
(assert (x1208 x1451))
(assert (= (x1606 352) 0))
(assert (= x1347 (=> (and (= x1248 (x1354 65535 x1729)) (>= x945 0) (= x1965 (x802 x807 (x984 1) 0)) (= x1854 (x2107 (- x2353 32))) (= (not x780) x1760) (= x1729 (x1354 115792089237316195423570985008687907853269984665640564039457584007908834738175 x142)) (= x2353 (x2107 (- x1627 x1356))) (= x1286 (x1354 131072 x1882)) (= x1882 (x510 x945 160)) (= x780 (= 0 x1248)) (= x1627 (x875 (+ x2163 x2222))) (not (ite x1760 (not (= 65537 (x1354 65537 x1745))) x1760)) (= x945 (x381 x1965)) (<= x945 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x1286 131072) x2100)) (and (=> (and (and (= (x984 0) x2335) (= x1781 x1627)) (not x2100)) x2017) (=> (and x2100 (and (= (= x406 0) x1898) (= x1460 (x875 (+ x1627 32))) (= (x1524 x1518) x2367) (= (x802 x807 (x984 5) 0) x1518) (= x1406 (mod (- x1595 (ite x303 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1595 (x1354 1 x2367)) (= (div x2367 2) x1076) (= (x875 (+ x725 x1627)) x48) (= x303 (> 32 x406)) (= x2101 (mod (* 32 x1395) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2180 (x875 (+ 31 x406))) (= (x875 (+ 32 x2101)) x725) (= x406 (ite (> x1595 0) x1076 (x1354 127 x1076))) (= x1395 (div x2180 32)) (> x1406 0))) (and (=> (and (not x1898) (= x582 (< 31 x406))) (and (=> (and (and (= (x1524 x1518) x2439) (= (mod (* x1557 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x122) (= x1557 (div x2439 256))) (not x582)) x1129) (=> (and x582 (and (= x101 (< x1583 x1581)) (= x1612 (x2242 x2339)) (= x1199 (x1285 x2339 1)) (= x1583 (x875 (+ 32 x1460))) (= (x1601 x1518 0) x2339) (= (x875 (+ x1460 x406)) x1581))) (and (=> (not x101) x196) (=> x101 x336))))) (=> x1898 x1129)))))))
(assert (= x1223 x285))
(assert (= x1205 (or x1603 x1039 x1318)))
(assert (x1208 x533))
(assert (x384 4294901760))
(assert (x1208 x322))
(assert (x1208 x967))
(assert (= (x1814 x233 160) (mod (* 1461501637330902918203684832716283019655932542976 x233) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1208 x1419))
(assert (x1208 x337))
(assert (x1208 x2016))
(assert (= (x1092 (x875 (+ 96 x192))) (x1404 (x1637 (x1092 (x875 (+ x192 96)))))))
(assert (x1750 x1577))
(assert (x1208 x1184))
(assert (x981 (x1386 (x875 (+ x315 32)))))
(assert (x1208 x852))
(assert (x1208 x3))
(assert (x981 (x1386 (x875 (+ x315 192)))))
(assert (= (and x626 x2138) x430))
(assert (= (and x2021 x1602) x2226))
(assert (=> (<= x649 10000) (= (x1637 x649) (x984 x649))))
(assert (x384 x142))
(assert (x1208 x448))
(assert (x384 x2307))
(assert (=> (>= 10000 (x1386 (x875 (+ 128 x315)))) (= (x1637 (x1386 (x875 (+ 128 x315)))) (x984 (x1386 (x875 (+ x315 128)))))))
(assert (= x270 x1985))
(assert (x981 x1623))
(assert (= x1875 (or x1416 (and (not x154) x2026))))
(assert (=> (<= (x187 (x875 (+ x1482 32))) 10000) (= (x984 (x187 (x875 (+ x1482 32)))) (x1637 (x187 (x875 (+ x1482 32)))))))
(assert (x1208 x544))
(assert (= (and (not x1853) x1996) x1309))
(assert (=> (<= (x114 (x875 (+ x1192 64))) 10000) (= (x1637 (x114 (x875 (+ 64 x1192)))) (x984 (x114 (x875 (+ 64 x1192)))))))
(assert (x981 (x1092 (x875 (+ x192 160)))))
(assert (x156 x568))
(assert (x981 (x529 (x875 (+ x1715 192)))))
(assert (= (x1958 256) (x1404 (x1637 (x1958 256)))))
(assert (x1208 x1671))
(assert (x1208 x1056))
(assert (x1208 x486))
(assert (= x693 (and (not x1473) x68)))
(assert (x1208 x2163))
(assert (x981 x155))
(assert (x1208 x34))
(assert (= x2060 (and x2265 x1206)))
(assert (=> (<= (x1958 160) 10000) (= (x1637 (x1958 160)) (x984 (x1958 160)))))
(assert (= (and (not x359) x238) x1239))
(assert (x1208 x2067))
(assert (x1208 x139))
(assert (= (x984 115792089237316195423570985008687907853269984665640564039457584007908834738175) (x1637 115792089237316195423570985008687907853269984665640564039457584007908834738175)))
(assert (=> (<= x1492 10000) (= (x1637 x1492) (x984 x1492))))
(assert (x1208 x348))
(assert (x1208 x2172))
(assert (= (x1637 (x1404 x218)) x218))
(assert (=> (>= 10000 (x1716 (x875 (+ x16 128)))) (= (x984 (x1716 (x875 (+ 128 x16)))) (x1637 (x1716 (x875 (+ x16 128)))))))
(assert (x1208 x1413))
(assert (= x2298 (or x741 x857)))
(assert (x384 x2032))
(assert (= (and x1699 x2390) x182))
(assert (= x1121 (and (not x1987) x2085)))
(assert (= (and x1332 x655) x2244))
(assert (= x850 (or x190 x290)))
(assert (=> (>= 10000 x2208) (= (x1637 x2208) (x984 x2208))))
(assert (= x2026 (or x1165 x1213)))
(assert (x1208 x771))
(assert (x981 x2009))
(assert (x1208 x296))
(assert (= (x1404 (x1637 (x1928 (x875 (+ 192 x2172))))) (x1928 (x875 (+ 192 x2172)))))
(assert (= (x1404 (x1285 x2066 1)) (+ 1 (x1404 x2066))))
(assert (= (or x1121 x2025) x1863))
(assert (= (x1092 (x875 (+ x192 64))) (x1404 (x1637 (x1092 (x875 (+ x192 64)))))))
(assert (= (and x1947 x781) x251))
(assert (= x1893 (and x1408 (not x116))))
(assert (x384 x2071))
(assert (x1208 x144))
(assert (= (x510 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2078) (ite (< x2078 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1994 2 x2078)) 0)))
(assert (x1667 x2027))
(assert (= 616673092 (x1404 (x984 616673092))))
(assert (x1208 x2387))
(assert (= 4294901760 (x1404 (x984 4294901760))))
(assert (x1208 x352))
(assert (x981 (x2236 (x875 (+ x1820 192)))))
(assert (x981 (x750 (x875 (+ x1668 32)))))
(assert (x1208 x2281))
(assert (x1208 x1952))
(assert (= x135 (x1637 (x1404 x135))))
(assert (x156 x2346))
(assert (x384 x1745))
(assert (x1208 x2058))
(assert (= (mod (* 1461501637330902918203684832716283019655932542976 x1155) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1814 x1155 160)))
(assert (= x2062 (or x870 x146 x2244)))
(assert (x287 x1447))
(assert (x1208 x1132))
(assert (x207 x1825))
(assert (x1208 x2098))
(assert (x1208 x1816))
(assert (= (x1404 (x1637 x18)) x18))
(assert (x1208 x2230))
(assert (x1208 x2151))
(assert (= x401 (=> (and (> x1079 0) (= (x1092 x2303) x1292) (= x325 (< 0 x785)) (= x1079 (x1092 x675)) (= (x510 x1292 248) x785)) (and (=> x325 x717) (=> (and (not x325) (= (x984 0) x1640)) x924)))))
(assert (x1208 x2257))
(assert (x1208 x1627))
(assert (= (and (not x1258) x1849) x878))
(assert (x384 4294967295))
(assert (x1208 x2455))
(assert (x1208 x2282))
(assert (x1208 x1155))
(assert (= (x984 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x1637 115792089210356248756420345214020892766250353992003419616917011526809519390720)))
(assert (x1431 x951))
(assert (x1208 x2458))
(assert (= (and x1891 x1564) x1734))
(assert (x1208 x506))
(assert (x1208 x1883))
(assert (x1208 x1815))
(assert (x1208 x403))
(assert (x1208 x1749))
(assert (x1208 x1981))
(assert (x1208 x2181))
(assert (x1208 x638))
(assert (x2187 x2412))
(assert (x1208 x1399))
(assert (= (and x790 x305) x620))
(assert (= x19 (=> (and (> x1031 0) (= (x2357 x968) x1031) (= (x2357 x2434) x1442) (= (x510 x1442 248) x1117) (= (< 0 x1117) x2250)) (and (=> x2250 x973) (=> (and (not x2250) (= (x984 0) x2371)) x1063)))))
(assert (= (and x971 (not x62)) x1281))
(assert (x1208 x1826))
(assert (=> (<= (x522 224) 10000) (= (x1637 (x522 224)) (x984 (x522 224)))))
(assert (= x1852 (and x1429 x65)))
(assert (= x1004 (and (not x1706) x858)))
(assert (x1208 x1593))
(assert (= (and (not x1314) x1269) x343))
(assert (x1208 x1611))
(assert (= x1429 (and x853 x1720)))
(assert (x1208 x775))
(assert (x1208 x1228))
(assert (x1208 x706))
(assert (x981 (x529 (x875 (+ x1715 64)))))
(assert (x1208 x1625))
(assert (x1208 x1181))
(assert (= x1780 (and x518 x508)))
(assert (= x1725 (or x693 x2084)))
(assert (x1208 x460))
(assert (x156 x352))
(assert (x1208 x201))
(assert (x1208 x1954))
(assert (= x1869 x2373))
(assert (x1208 x45))
(assert (x1208 x578))
(assert (x384 65535))
(assert (= x55 (x1637 (x1404 x55))))
(assert (= (=> (and (= x127 (x859 x437)) (= x736 (x875 (+ 1 x1909))) (not (> x439 x127)) (= x439 (x875 (+ 1 x1861))) (= x321 (<= x1861 224))) (and (=> (= (ite (<= x1861 32) (x1601 (x1637 (x859 x736)) 0) (ite (<= x1861 64) (x802 (x1637 (x859 x736)) (x1637 (x859 (x875 (+ 32 x736)))) 0) (ite (>= 96 x1861) (x1546 (x1637 (x859 x736)) (x1637 (x859 (x875 (+ 32 x736)))) (x1637 (x859 (x875 (+ x736 64)))) 0) (ite (<= x1861 128) (x320 (x1637 (x859 x736)) (x1637 (x859 (x875 (+ 32 x736)))) (x1637 (x859 (x875 (+ 64 x736)))) (x1637 (x859 (x875 (+ x736 96)))) 0) (ite (<= x1861 160) (x1619 (x1637 (x859 x736)) (x1637 (x859 (x875 (+ x736 32)))) (x1637 (x859 (x875 (+ 64 x736)))) (x1637 (x859 (x875 (+ x736 96)))) (x1637 (x859 (x875 (+ 128 x736)))) 0) (ite (<= x1861 192) (x1266 (x1637 (x859 x736)) (x1637 (x859 (x875 (+ x736 32)))) (x1637 (x859 (x875 (+ x736 64)))) (x1637 (x859 (x875 (+ x736 96)))) (x1637 (x859 (x875 (+ 128 x736)))) (x1637 (x859 (x875 (+ 160 x736)))) 0) (ite (>= 224 x1861) (x1412 (x1637 (x859 x736)) (x1637 (x859 (x875 (+ x736 32)))) (x1637 (x859 (x875 (+ 64 x736)))) (x1637 (x859 (x875 (+ x736 96)))) (x1637 (x859 (x875 (+ 128 x736)))) (x1637 (x859 (x875 (+ 160 x736)))) (x1637 (x859 (x875 (+ 192 x736)))) 0) (x1637 x155)))))))) x1459) x992) x321)) x1900))
(assert (x1208 x2466))
(assert (x1208 x484))
(assert (x1208 x588))
(assert (x1208 x1836))
(assert (x1208 x524))
(assert (= x1233 (or x1389 x292)))
(assert (x1208 x228))
(assert (x1976 x2263 x102))
(assert (= x1864 (and x1214 (not x2077))))
(assert (x1208 x1692))
(assert (= x1349 (and x376 x680)))
(assert (= (x187 (x875 (+ x1482 64))) (x1404 (x1637 (x187 (x875 (+ 64 x1482)))))))
(assert (x1208 x1877))
(assert (x1208 x1943))
(assert (= (x1606 x118) 0))
(assert (x1208 x1654))
(assert (= x1036 (and x498 x167)))
(assert (x1208 x1114))
(assert (x384 x657))
(assert (x1208 x94))
(assert (= (and x659 x375) x1613))
(assert (x384 x796))
(assert (x1208 x22))
(assert (= (x859 (x875 (+ 96 x736))) (x1404 (x1637 (x859 (x875 (+ x736 96)))))))
(assert (x1208 x2240))
(assert (x1208 x558))
(assert (x1208 x1762))
(assert (x1208 x996))
(assert (= 0 (x1606 (x875 (+ x118 96)))))
(assert (x1972 x852))
(assert (=> (>= 10000 (x1092 (x875 (+ 160 x192)))) (= (x984 (x1092 (x875 (+ x192 160)))) (x1637 (x1092 (x875 (+ 160 x192)))))))
(assert (x981 (x522 160)))
(assert (x1208 x1917))
(assert (x1208 x2276))
(assert (x1208 x1502))
(assert (x1208 x565))
(assert (= (ite (< x1472 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1994 2 x1472)) 0) (x510 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1472)))
(assert (= (x984 42946364674413620953198879289557591458479223041058917712765633135805412147200) (x1637 42946364674413620953198879289557591458479223041058917712765633135805412147200)))
(assert (=> (>= 10000 (x1928 (x875 (+ 32 x2172)))) (= (x1637 (x1928 (x875 (+ x2172 32)))) (x984 (x1928 (x875 (+ 32 x2172)))))))
(assert (x981 (x522 288)))
(assert (x1208 x233))
(assert (= (x1404 (x1637 (x1092 (x875 (+ x192 32))))) (x1092 (x875 (+ 32 x192)))))
(assert (=> (<= (x859 (x875 (+ x736 32))) 10000) (= (x984 (x859 (x875 (+ x736 32)))) (x1637 (x859 (x875 (+ x736 32)))))))
(assert (x1208 x1549))
(assert (= x1259 (=> (and (= x48 x1781) (= x2335 x1471) (not (>= (+ x1454 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2017)))
(assert (x206 x1693))
(assert (x1208 x899))
(assert (x384 x2157))
(assert (= (=> (and (= x1191 (x875 (+ x1242 32))) (= (not (> x2067 32)) x1377) (= (x1285 x445 1) x1754) (= (x1143 x1191) x423)) (and (=> (and (= x143 64) (= x733 x1754)) x1376) x1377)) x1703))
(assert (= (and x2188 (not x608)) x1086))
(assert (x1208 x1182))
(assert (x1208 x468))
(assert (= (x1404 (x984 109562948294120585953088955926913691080166221410047079322077399086870164406272)) 109562948294120585953088955926913691080166221410047079322077399086870164406272))
(assert (x1208 x87))
(assert (= (x1637 (x1404 x1162)) x1162))
(assert (= (=> (and (= (not (< x377 x2016)) x444) (= x377 (x875 (+ x2304 32))) (= x539 (x2242 x2022))) (and x297 x444)) x1070))
(assert (x981 (x2357 (x875 (+ x1068 32)))))
(assert (x1972 x2367))
(assert (=> (>= 10000 (x2236 (x875 (+ 160 x1820)))) (= (x984 (x2236 (x875 (+ 160 x1820)))) (x1637 (x2236 (x875 (+ 160 x1820)))))))
(assert (= x336 (=> (and (= x193 (not (< x2115 x1581))) (= (x2242 x1199) x382) (= x2115 (x875 (+ x1583 32)))) (and x193 x196))))
(assert (= x1189 x1597))
(assert (=> (>= 10000 x1879) (= (x1637 x1879) (x984 x1879))))
(assert (x1208 x1046))
(assert (= (x76 (x875 (+ 160 x118))) (x1404 (x1637 (x76 (x875 (+ x118 160)))))))
(assert (= (x1404 (x1637 (x76 (x875 (+ 192 x118))))) (x76 (x875 (+ 192 x118)))))
(assert (x1208 x505))
(assert (x287 x1371))
(assert (= x857 (and x569 (not x312))))
(assert (x1208 x1492))
(assert (x1208 x2199))
(assert (x1208 x33))
(assert (= (and x1130 x90) x2364))
(assert (= (x1637 616673092) (x984 616673092)))
(assert (x1208 x1122))
(assert (x1208 x2007))
(assert (= (or x787 x182) x84))
(assert (= (x510 x1160 248) (div x1160 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= (x1606 (x875 (+ x2172 192))) 0))
(assert (= (=> (and (= (x2242 x1209) x229) (= x1271 (not (< x681 x1948))) (= (x875 (+ x726 32)) x681)) (and x1271 x2277)) x1185))
(assert (= (x1637 (x1404 x2402)) x2402))
(assert (= x446 (or x1727 x1575)))
(assert (x1208 x440))
(assert (= (and (not x1378) x1569) x2085))
(assert (x1208 x204))
(assert (x1208 x989))
(assert (x1208 x1645))
(assert (= (and x1629 (not x2205)) x1444))
(assert (= (and x67 x2285) x562))
(assert (x1208 x2012))
(assert (x1208 x972))
(assert (= x661 (=> (and (or (and (not x536) (and (= (x1354 4 x1645) x1337) (= x1337 0))) (and x536 (and (= 0 x715) (= x715 (x1354 65536 x1645))))) (= x536 (< x2191 x2293))) x243)))
(assert (x1208 x2465))
(assert (x1208 x1432))
(assert (= x379 (and x737 (not x1483))))
(assert (x1208 x2307))
(assert (x1208 x2317))
(assert (x1208 x1848))
(assert (= (x1404 (x1637 x1962)) x1962))
(assert (x156 x1245))
(assert (= x2338 (and x238 x359)))
(assert (= x2033 (=> (and (= (x510 x1792 248) x319) (= (x1928 x1184) x1792) (= (> x319 0) x140) (> x1747 0) (= (x1928 x1816) x1747)) (and (=> (and (not x140) (= x1798 (x984 0))) x561) (=> x140 x1778)))))
(assert (x1208 x1528))
(assert (= (and (not x1057) x2245) x106))
(assert (x287 x2461))
(assert (x2187 x174))
(assert (=> (>= 10000 (x2236 (x875 (+ 96 x1820)))) (= (x1637 (x2236 (x875 (+ 96 x1820)))) (x984 (x2236 (x875 (+ x1820 96)))))))
(assert (x1208 x1486))
(assert (= (x1606 (x875 (+ x1820 96))) 0))
(assert (= x1397 (=> (and (= x115 (not (> x817 x366))) (= (x875 (+ x388 32)) x366) (= x432 (x1590 x2256))) (and x115 x1869))))
(assert (x981 (x750 (x875 (+ x1668 160)))))
(assert (= (x1606 (x875 (+ 192 x1068))) 0))
(assert (= x297 x1348))
(assert (x384 x1988))
(assert (= x2183 (and x501 x441)))
(assert (x981 (x187 (x875 (+ 160 x1482)))))
(assert (= (x1404 (x1637 (x2357 x1068))) (x2357 x1068)))
(assert (= x580 (and (not x140) x42)))
(assert (x1208 x16))
(assert (= x447 (=> (= x1378 (= x2417 (x984 0))) (and (=> (and (and (and (= x1987 (< 0 x79)) (= (x875 (+ x1134 4)) x211)) (or (and x1987 (and (< x588 4294967296) (= x554 1))) (and (= x554 x79) (not x1987)))) (not x1378)) x191) (=> (and (and (= (x510 x2241 192) x856) (= x1134 x1055)) x1378) x2234)))))
(assert (x1208 x1867))
(assert (x1208 x712))
(assert (x1208 x134))
(assert (x384 x1562))
(assert (x1208 x2289))
(assert (= (div x760 6277101735386680763835789423207666416102355444464034512896) (x510 x760 192)))
(assert (=> (<= (x1958 192) 10000) (= (x984 (x1958 192)) (x1637 (x1958 192)))))
(assert (x1208 x124))
(assert (= (and x2069 x181) x1436))
(assert (x1208 x2122))
(assert (x1208 x2087))
(assert (=> (>= 10000 (x514 (x875 (+ x1075 128)))) (= (x984 (x514 (x875 (+ 128 x1075)))) (x1637 (x514 (x875 (+ 128 x1075)))))))
(assert (x1208 x1537))
(assert (= x1849 (and x1555 x1109)))
(assert (x1208 x437))
(assert (x1972 x2233))
(assert (x1208 x2331))
(assert (=> (<= (x1928 x2172) 10000) (= (x984 (x1928 x2172)) (x1637 (x1928 x2172)))))
(assert (x1208 x2309))
(assert (= (=> (= x1056 x1526) x1346) x783))
(assert (= (or x1290 x2000 x940) x1996))
(assert (x1208 x1708))
(assert (x1208 x515))
(assert (x1208 x2443))
(assert (x1208 x2153))
(assert (= (or x2183 x1390) x2246))
(assert (x1208 x2168))
(assert (= x630 (and x1542 x2463)))
(assert (= (and x1144 x2189) x2159))
(assert (= (x1404 (x1637 x2283)) x2283))
(assert (x1208 x2271))
(assert (= (x510 x1313 248) (div x1313 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= x242 (or x1305 x1239)))
(assert (= 0 (x1606 (x875 (+ x1715 128)))))
(assert (x1208 x2267))
(assert (= (x1404 (x1637 (x187 (x875 (+ 192 x1482))))) (x187 (x875 (+ x1482 192)))))
(assert (x1208 x643))
(assert (x1208 x283))
(assert (=> (<= (x1092 (x875 (+ 64 x192))) 10000) (= (x984 (x1092 (x875 (+ x192 64)))) (x1637 (x1092 (x875 (+ x192 64)))))))
(assert (x2468 x142))
(assert (x1208 x1655))
(assert (=> (<= (x1092 (x875 (+ 32 x192))) 10000) (= (x1637 (x1092 (x875 (+ 32 x192)))) (x984 (x1092 (x875 (+ 32 x192)))))))
(assert (x1208 x378))
(assert (= (x1404 (x1637 x1623)) x1623))
(assert (x1208 x537))
(assert (= (and (not x1345) x890) x1576))
(assert (x1208 x1677))
(assert (= (=> (and (= x1488 (<= x998 224)) (not (> x2201 x963)) (= (x875 (+ 1 x998)) x2201) (= (x875 (+ 1 x1631)) x1668) (= x963 (x750 x1311))) (and x1488 (=> (= x2397 (ite (>= 32 x998) (x1601 (x1637 (x750 x1668)) 0) (ite (<= x998 64) (x802 (x1637 (x750 x1668)) (x1637 (x750 (x875 (+ 32 x1668)))) 0) (ite (<= x998 96) (x1546 (x1637 (x750 x1668)) (x1637 (x750 (x875 (+ 32 x1668)))) (x1637 (x750 (x875 (+ 64 x1668)))) 0) (ite (<= x998 128) (x320 (x1637 (x750 x1668)) (x1637 (x750 (x875 (+ x1668 32)))) (x1637 (x750 (x875 (+ x1668 64)))) (x1637 (x750 (x875 (+ 96 x1668)))) 0) (ite (<= x998 160) (x1619 (x1637 (x750 x1668)) (x1637 (x750 (x875 (+ 32 x1668)))) (x1637 (x750 (x875 (+ x1668 64)))) (x1637 (x750 (x875 (+ 96 x1668)))) (x1637 (x750 (x875 (+ x1668 128)))) 0) (ite (>= 192 x998) (x1266 (x1637 (x750 x1668)) (x1637 (x750 (x875 (+ 32 x1668)))) (x1637 (x750 (x875 (+ x1668 64)))) (x1637 (x750 (x875 (+ 96 x1668)))) (x1637 (x750 (x875 (+ 128 x1668)))) (x1637 (x750 (x875 (+ 160 x1668)))) 0) (ite (>= 224 x998) (x1412 (x1637 (x750 x1668)) (x1637 (x750 (x875 (+ 32 x1668)))) (x1637 (x750 (x875 (+ 64 x1668)))) (x1637 (x750 (x875 (+ x1668 96)))) (x1637 (x750 (x875 (+ 128 x1668)))) (x1637 (x750 (x875 (+ x1668 160)))) (x1637 (x750 (x875 (+ x1668 192)))) 0) (x1637 x2009))))))))) x2319))) x1277))
(assert (= x1718 (and x2348 (not x845))))
(assert (= 7776000 (x1404 (x984 7776000))))
(assert (x1976 x706 x1307))
(assert (x2187 x395))
(assert (= (x1404 (x1637 (x859 (x875 (+ 64 x736))))) (x859 (x875 (+ x736 64)))))
(assert (= (x1404 (x1285 x427 x330)) (+ (x1404 x427) x330)))
(assert (x1208 x1979))
(assert (= x1746 (and (not x310) x920)))
(assert (= x954 (and x1641 x1257)))
(assert (x1208 x11))
(assert (x981 (x114 (x875 (+ x1192 192)))))
(assert (= (and x2364 x199) x2010))
(assert (= (x1716 (x875 (+ x16 96))) (x1404 (x1637 (x1716 (x875 (+ x16 96)))))))
(assert (= (x529 (x875 (+ x1715 96))) (x1404 (x1637 (x529 (x875 (+ 96 x1715)))))))
(assert (x1208 x52))
(assert (x1208 x1073))
(assert (= (=> (and (= x602 (x590 x2203)) (= (not (> x2222 128)) x2011) (= x1714 (x875 (+ x2163 96))) (= (x875 (+ 96 x300)) x2203)) (and x2011 x1347)) x793))
(assert (x1208 x142))
(assert (=> (<= (x1386 (x875 (+ x315 192))) 10000) (= (x984 (x1386 (x875 (+ x315 192)))) (x1637 (x1386 (x875 (+ 192 x315)))))))
(assert (x1208 x2119))
(assert (=> (>= 10000 (x529 (x875 (+ x1715 192)))) (= (x984 (x529 (x875 (+ 192 x1715)))) (x1637 (x529 (x875 (+ x1715 192)))))))
(assert (= x986 (or x1150 x1210)))
(assert (x1208 x1084))
(assert (= (=> (and (= (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1874) x147) (not (or (and (< x771 32) (= true (<= x771 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771))) (= (x875 (+ 7776000 x1731)) x236) (not (= x407 0)) (= (x1354 18446744073709551615 x395) x1731) (= x1874 (x875 (+ 31 x771))) (not (> x236 18446744073709551615)) (= x395 (x2426 x2018)) (= x236 x1622) (= x415 x788) (= (x875 (+ x2018 x147)) x415)) x627) x99))
(assert (x1208 x1556))
(assert (x1208 x1560))
(assert (= x2111 (or x1759 x2015)))
(assert (x1208 x1811))
(assert (x1208 x1840))
(assert (= (x1606 x1820) 0))
(assert (x1208 x2176))
(assert (x1208 x2228))
(assert (= 0 (x1606 x1184)))
(assert (= x971 (and x803 x1013)))
(assert (x1208 x2201))
(assert (x981 (x1092 x192)))
(assert (x1208 x1470))
(assert (= x2390 (or x761 x860)))
(assert (x981 (x2236 (x875 (+ 64 x1820)))))
(assert (x1208 x1047))
(assert (= x85 (and x1233 x2399)))
(assert (= (and x2178 (not x1704)) x41))
(assert (x1208 x1562))
(assert (x981 (x1928 (x875 (+ 32 x2172)))))
(assert (x1208 x968))
(assert (x1208 x1353))
(assert (x207 x2210))
(assert (= x2388 (=> (= x2392 (= (x984 0) x1435)) (and (=> (and (not x2392) (and (or (and (and (= x1128 1) (< x460 4294967296)) x334) (and (= x942 x1128) (not x334))) (and (= (< 0 x942) x334) (= (x875 (+ x1067 4)) x348)))) x451) (=> (and x2392 (and (= x545 x1067) (= (x510 x1090 192) x323))) x354)))))
(assert (= x1206 (or (and (not x521) x828) x1642)))
(assert (= x1674 x1455))
(assert (= (x1092 (x875 (+ x192 160))) (x1404 (x1637 (x1092 (x875 (+ 160 x192)))))))
(assert (x1208 x1880))
(assert (x1208 x2114))
(assert (x1208 x1966))
(assert (x981 (x2357 (x875 (+ x1068 192)))))
(assert (x1208 x1935))
(assert (x1208 x969))
(assert (x1208 x2365))
(assert (= (x1606 (x875 (+ x1068 160))) 0))
(assert (x206 x1251))
(assert (x1208 x2013))
(assert (= x1485 (=> (= (= (x984 0) x1384) x893) (and (=> (and x893 (and (= x1020 x411) (= (x510 x2005 192) x1336))) x2340) (=> (and (not x893) (and (and (= (x875 (+ x1020 4)) x634) (= x132 (< 0 x1686))) (or (and (and (= x2446 1) (> 4294967296 x2095)) x132) (and (not x132) (= x2446 x1686))))) x1265)))))
(assert (= (x1637 109562948294120585953088955926913691080166221410047079322077399086870164406272) (x984 109562948294120585953088955926913691080166221410047079322077399086870164406272)))
(assert (x1208 x1016))
(assert (x1208 x503))
(assert (x1208 x1031))
(assert (= x401 x72))
(assert (x206 x142))
(assert (x1208 x2200))
(assert (= (and x790 (not x305)) x355))
(assert (x1208 x1330))
(assert (= (=> (and (not (= 0 x2007)) (= x844 x811) (not (or (and (= (<= x913 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x913 32)) (> x913 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1354 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1139) x433) (= (x875 (+ x2151 x1237)) x844) (= (x875 (+ 31 x913)) x59) (= x433 x1139) (= x1139 (x2166 x1237)) (= x2151 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x59)) (= 109562948294120585953088955926913691080166221410047079322077399086870164406272 x1139)) x1247) x2120))
(assert (x1208 x1776))
(assert (x384 x1076))
(assert (x1208 x2446))
(assert (= (or x603 x1864) x391))
(assert (x1208 x1356))
(assert (x384 x1371))
(assert (x1208 x1911))
(assert (= (and x659 (not x375)) x884))
(assert (=> (<= (x187 (x875 (+ 160 x1482))) 10000) (= (x1637 (x187 (x875 (+ x1482 160)))) (x984 (x187 (x875 (+ 160 x1482)))))))
(assert (x1750 x1528))
(assert (= (x510 x873 248) (div x873 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x1208 x1989))
(assert (x1208 x2264))
(assert (x384 x1846))
(assert (x1208 x2197))
(assert (x1208 x1343))
(assert (x981 (x750 (x875 (+ x1668 64)))))
(assert (= (x1606 (x875 (+ x118 160))) 0))
(assert (= (x187 (x875 (+ x1482 128))) (x1404 (x1637 (x187 (x875 (+ 128 x1482)))))))
(assert (x1208 x1596))
(assert (x1208 x1805))
(assert (x1208 x826))
(assert (x1208 x1393))
(assert (= 0 (x1606 (x875 (+ x1075 32)))))
(assert (x1208 x7))
(assert (x948 x142 x2376))
(assert (= 0 (x1606 (x875 (+ x118 32)))))
(assert (x1208 x406))
(assert (= (and x994 x1933) x615))
(assert (= (and x2024 x2250) x246))
(assert (x1208 x1029))
(assert (x1208 x2452))
(assert (= (and x2103 x658) x441))
(assert (= x535 (and x819 x848)))
(assert (= (or x1766 x613) x1224))
(assert (x1208 x1192))
(assert (= (div x653 452312848583266388373324160190187140051835877600158453279131187530910662656) (x510 x653 248)))
(assert (x1208 x2327))
(assert (= x717 (=> (and (= (x875 (+ 1 x785)) x1080) (= x192 (x875 (+ 1 x2303))) (not (> x1080 x623)) (= (x1092 x675) x623) (= (<= x785 224) x1215)) (and x1215 (=> (= x1640 (ite (>= 32 x785) (x1601 (x1637 (x1092 x192)) 0) (ite (<= x785 64) (x802 (x1637 (x1092 x192)) (x1637 (x1092 (x875 (+ 32 x192)))) 0) (ite (>= 96 x785) (x1546 (x1637 (x1092 x192)) (x1637 (x1092 (x875 (+ 32 x192)))) (x1637 (x1092 (x875 (+ x192 64)))) 0) (ite (<= x785 128) (x320 (x1637 (x1092 x192)) (x1637 (x1092 (x875 (+ x192 32)))) (x1637 (x1092 (x875 (+ x192 64)))) (x1637 (x1092 (x875 (+ 96 x192)))) 0) (ite (>= 160 x785) (x1619 (x1637 (x1092 x192)) (x1637 (x1092 (x875 (+ 32 x192)))) (x1637 (x1092 (x875 (+ x192 64)))) (x1637 (x1092 (x875 (+ 96 x192)))) (x1637 (x1092 (x875 (+ x192 128)))) 0) (ite (>= 192 x785) (x1266 (x1637 (x1092 x192)) (x1637 (x1092 (x875 (+ 32 x192)))) (x1637 (x1092 (x875 (+ 64 x192)))) (x1637 (x1092 (x875 (+ 96 x192)))) (x1637 (x1092 (x875 (+ 128 x192)))) (x1637 (x1092 (x875 (+ 160 x192)))) 0) (ite (<= x785 224) (x1412 (x1637 (x1092 x192)) (x1637 (x1092 (x875 (+ 32 x192)))) (x1637 (x1092 (x875 (+ 64 x192)))) (x1637 (x1092 (x875 (+ 96 x192)))) (x1637 (x1092 (x875 (+ 128 x192)))) (x1637 (x1092 (x875 (+ 160 x192)))) (x1637 (x1092 (x875 (+ 192 x192)))) 0) (x1637 x1952))))))))) x924)))))
(assert (x384 x2036))
(assert (x1208 x1792))
(assert (= (or x1955 x999) x489))
(assert (x1208 x1411))
(assert (= (or x1497 x1349) x1389))
(assert (x981 (x2236 x1820)))
(assert (x1208 x363))
(assert (x1208 x274))
(assert (= (and x1514 x1618) x1074))
(assert (= 0 (x1606 (x875 (+ 96 x1068)))))
(assert (x1208 x1218))
(assert (x1208 x1279))
(assert (= (x859 (x875 (+ 128 x736))) (x1404 (x1637 (x859 (x875 (+ 128 x736)))))))
(assert (= (x859 (x875 (+ 32 x736))) (x1404 (x1637 (x859 (x875 (+ x736 32)))))))
(assert (= (x1606 192) 0))
(assert (x1208 x1293))
(assert (x1208 x88))
(assert (x1208 x1532))
(assert (= (x1404 (x1637 (x750 (x875 (+ x1668 160))))) (x750 (x875 (+ 160 x1668)))))
(assert (x1208 x1884))
(assert (x981 (x750 x1668)))
(assert (x1208 x688))
(assert (x1208 x1079))
(assert (x1208 x724))
(assert (x1208 x2169))
(assert (x1208 x102))
(assert (x981 (x1958 352)))
(assert (=> (>= 10000 x2098) (= (x984 x2098) (x1637 x2098))))
(assert (x981 (x859 x736)))
(assert (= (x1606 (x875 (+ x1820 160))) 0))
(assert (= x2179 (and x1926 x1304)))
(assert (= (and x177 (not x20)) x860))
(assert (x1341 x1988))
(assert (= x2234 (=> (and (= (< x856 x2293) x1345) (or (and x1345 (= x2445 0)) (and (not x1345) (= x1030 x2445)))) x1219)))
(assert (x1208 x965))
(assert (x1208 x2258))
(assert (x1208 x79))
(assert (x1208 x2441))
(assert (= (+ 1 (x1404 x1040)) (x1404 (x1285 x1040 1))))
(assert (x981 (x1958 288)))
(assert (x981 (x114 (x875 (+ 64 x1192)))))
(assert (x1208 x818))
(assert (x1208 x1310))
(assert (= x42 (or x511 x2405 x1426)))
(assert (= x1986 (and x1060 (not x1306))))
(assert (x1208 x2078))
(assert (x1208 x817))
(assert (x1208 x667))
(assert (= (and (not x1865) x1072) x108))
(assert (= (or x921 x2081) x304))
(assert (x1208 x2108))
(assert (x156 x2171))
(assert (= (and (not x2320) x1140) x1587))
(assert (= (=> (= x2419 (= x1190 (x984 0))) (and (=> (and (and (or (and (and (= x477 1) (< x1511 4294967296)) x1057) (and (= x2030 x477) (not x1057))) (and (= x1057 (< 0 x2030)) (= x2058 (x875 (+ 4 x573))))) (not x2419)) x2003) (=> (and (and (= x573 x437) (= x1043 (x510 x1525 192))) x2419) x2209))) x2423))
(assert (x1208 x1630))
(assert (= x714 (and x17 x1322)))
(assert (= x279 (and x1662 (not x1810))))
(assert (= x504 (and x952 x1152)))
(assert (= (x1404 (x1637 (x2236 (x875 (+ x1820 32))))) (x2236 (x875 (+ x1820 32)))))
(assert (x1208 x2353))
(assert (= (and x2131 (not x1481)) x935))
(assert (x384 x440))
(assert (x1972 x1751))
(assert (x1208 x1174))
(assert (= (x1606 (x875 (+ x1715 192))) 0))
(assert (= x1063 (=> (and (not (>= (+ 1 x1117) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x213 x2371) (= x691 x1490)) x917)))
(assert (x1208 x1963))
(assert (x1208 x164))
(assert (= (+ (x1404 x738) 1) (x1404 (x1285 x738 1))))
(assert (x1208 x1160))
(assert (x981 x2330))
(assert (= (or x252 x1033) x723))
(assert (=> (>= 10000 (x1386 (x875 (+ 96 x315)))) (= (x984 (x1386 (x875 (+ 96 x315)))) (x1637 (x1386 (x875 (+ 96 x315)))))))
(assert (=> (>= 10000 (x76 (x875 (+ 96 x118)))) (= (x984 (x76 (x875 (+ x118 96)))) (x1637 (x76 (x875 (+ 96 x118)))))))
(assert (= (x1606 (x875 (+ x1192 96))) 0))
(assert (x1208 x2137))
(assert (= 65537 (x1404 (x984 65537))))
(assert (x1208 x642))
(assert (x981 (x1928 (x875 (+ 160 x2172)))))
(assert (= (x522 352) (x1404 (x1637 (x522 352)))))
(assert (= (and (not x906) x2223) x559))
(assert (x384 x395))
(assert (x1208 x432))
(assert (= x290 (and x1091 x2419)))
(assert (x384 x1202))
(assert (= x2288 (=> (and (= (x510 x1254 248) x2282) (> x1506 0) (= x305 (< 0 x2282)) (= x1506 (x1716 x73)) (= (x1716 x1799) x1254)) (and (=> x305 x585) (=> (and (not x305) (= (x984 0) x2128)) x886)))))
(assert (x1208 x1801))
(assert (x1208 x2075))
(assert (x981 (x2236 (x875 (+ x1820 128)))))
(assert (x1208 x1889))
(assert (= x2312 (and x1936 (not x463))))
(assert (= (=> (= (= x721 (x984 0)) x743) (and (=> (and (and (= x1622 (x510 x1372 192)) (= x788 x2018)) x743) x627) (=> (and (not x743) (and (or (and (= x2377 x407) (not x1304)) (and (and (< x771 4294967296) (= x407 1)) x1304)) (and (= (x875 (+ x2018 4)) x1605) (= (> x2377 0) x1304)))) x99))) x776))
(assert (x1208 x269))
(assert (= x887 (=> (and (= (x1814 x1883 248) x1027) (= (x1767 128) x1815) (= x1797 (x875 (+ 32 x1356))) (= x1704 (> x2458 0)) (= (x465 128) x2458) (= x1883 (x1354 255 x1815)) (= x1888 (x875 (+ 1 x1797)))) (and (=> (and x1704 (and (= x1653 x1888) (= x1499 (x465 160)) (= (< 32 x2458) x1934))) (and (=> (and (and (= (x1235 192) x1009) (= (x875 (+ x1888 32)) x794) (= (< 64 x2458) x608)) x1934) (and (=> (not x608) x766) (=> (and (and (= (x234 224) x809) (= x2369 (x875 (+ x1888 64))) (= (> x2458 96) x907)) x608) (and (=> (not x907) x766) (=> x907 x1913))))) (=> (not x1934) x766))) (=> (not x1704) x766)))))
(assert (x1208 x707))
(assert (= (=> (and (= (x875 (+ x464 32)) x1966) (= (x2242 x1932) x2273) (= (not (> x138 x1966)) x855)) (and x2206 x855)) x1574))
(assert (x1208 x2031))
(assert (x1208 x2222))
(assert (= (or x2225 x1368) x1380))
(assert (x1208 x2130))
(assert (x1208 x1021))
(assert (= (x1404 (x1637 x1432)) x1432))
(assert (x981 x2283))
(assert (x1208 x1888))
(assert (= x1003 (and x893 x472)))
(assert (= x840 (and (not x1813) x2374)))
(assert (x981 (x76 (x875 (+ 128 x118)))))
(assert (= (x1958 352) (x1404 (x1637 (x1958 352)))))
(assert (= (x514 (x875 (+ 32 x1075))) (x1404 (x1637 (x514 (x875 (+ x1075 32)))))))
(assert (x1208 x1005))
(assert (x1208 x2036))
(assert (= (and x275 x2301) x491))
(assert (x1208 x40))
(assert (x1208 x419))
(assert (x1208 x2460))
(assert (x1208 x774))
(assert (= (div x5 6277101735386680763835789423207666416102355444464034512896) (x510 x5 192)))
(assert (= x1789 (=> (and (= x1607 x686) (= (x875 (+ 7776000 x1133)) x749) (not (or (> x1280 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1280) true) (> 32 x1280)))) (= x749 x1403) (= x1503 (x875 (+ x1280 31))) (= (x813 x2153) x200) (not (= x296 0)) (= x1607 (x875 (+ x1912 x2153))) (= x1912 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1503)) (= (x1354 18446744073709551615 x200) x1133) (not (< 18446744073709551615 x749))) x1501)))
(assert (x1273 x2445))
(assert (=> (<= (x2357 (x875 (+ x1068 96))) 10000) (= (x984 (x2357 (x875 (+ 96 x1068)))) (x1637 (x2357 (x875 (+ 96 x1068)))))))
(assert (= x2427 (and x552 x2338)))
(assert (= x1318 (and x1847 x361)))
(assert (= (and x157 (not x1087)) x1831))
(assert (x981 x728))
(assert (= x393 (and (not x109) x1859)))
(assert (x1208 x2259))
(assert (= x1303 (and x1810 x1662)))
(assert (x384 x1671))
(assert (= (or x1576 x386) x613))
(assert (= (=> (and (= x1104 (not (< x967 x130))) (= x702 (x1590 x2255)) (= (x875 (+ x1211 32)) x967)) (and x1455 x1104)) x1636))
(assert (=> (<= (x1092 (x875 (+ x192 192))) 10000) (= (x1637 (x1092 (x875 (+ 192 x192)))) (x984 (x1092 (x875 (+ x192 192)))))))
(assert (x1208 x1))
(assert (x384 x1874))
(assert (x1208 x644))
(assert (x1208 x276))
(assert (x1208 x1371))
(assert (= x797 (=> (and (= (= x698 0) x600) (or (not x600) x600)) x629)))
(assert (x1208 x198))
(assert (= (x1404 (x1637 (x2236 (x875 (+ 192 x1820))))) (x2236 (x875 (+ 192 x1820)))))
(assert (x1750 x1645))
(assert (x1208 x913))
(assert (x1208 x1904))
(assert (x1208 x889))
(assert (x384 x1941))
(assert (=> (<= (x859 x736) 10000) (= (x1637 (x859 x736)) (x984 (x859 x736)))))
(assert (x1208 x1948))
(assert (x1972 x1073))
(assert (= (x1404 (x1285 x47 1)) (+ (x1404 x47) 1)))
(assert (x1208 x435))
(assert (= x97 (=> (and (= x499 (x875 (+ x179 x124))) (not (or (and (= (<= x707 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x707)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x707))) (not (= x295 0)) (not (> x1843 18446744073709551615)) (= x179 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2176)) (= x2359 x1843) (= x987 (x1354 18446744073709551615 x134)) (= (x2421 x124) x134) (= (x875 (+ x987 7776000)) x1843) (= x499 x73) (= x2176 (x875 (+ 31 x707)))) x1112)))
(assert (= x1786 (or x1960 x2411)))
(assert (= x1376 (=> (and (= (< x2067 x2027) x1481) (or (not x1481) (and x1481 (and (= (x1354 x280 x989) x905) (= (x1143 x1166) x280) (= x989 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x510 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2078))) (= x2116 (x1354 31 x2027)) (= (mod (* 8 x2116) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2078) (= x1166 (x875 (+ x1242 x143))))))) x866)))
(assert (= (x1606 x2105) 0))
(assert (=> (>= 10000 (x1716 (x875 (+ x16 160)))) (= (x1637 (x1716 (x875 (+ x16 160)))) (x984 (x1716 (x875 (+ x16 160)))))))
(assert (x1208 x482))
(assert (x1208 x1025))
(assert (= x267 (or x1796 x1533 x1159)))
(assert (x1208 x698))
(assert (x981 (x514 (x875 (+ 64 x1075)))))
(assert (x981 (x1958 256)))
(assert (x1208 x1117))
(assert (x1208 x306))
(assert (= x1418 (and x249 x2106)))
(assert (x384 x2327))
(assert (x1208 x118))
(assert (= x1346 (=> (and (= (x1958 128) x1615) (< 0 x1526) (= x531 (<= x1615 224))) (and (=> (and (and (= x985 (x2107 (- x1353 32))) (= x650 (x802 (x1637 x2380) x1339 0)) (= x1028 (x875 (+ x570 32))) (= x2021 (> x2109 0)) (= x570 (x875 (+ 32 x1374))) (= x1339 (ite (<= x1615 32) (x1601 (x1637 (x1958 160)) 0) (ite (>= 64 x1615) (x802 (x1637 (x1958 160)) (x1637 (x1958 192)) 0) (ite (<= x1615 96) (x1546 (x1637 (x1958 160)) (x1637 (x1958 192)) (x1637 (x1958 224)) 0) (ite (<= x1615 128) (x320 (x1637 (x1958 160)) (x1637 (x1958 192)) (x1637 (x1958 224)) (x1637 (x1958 256)) 0) (ite (<= x1615 160) (x1619 (x1637 (x1958 160)) (x1637 (x1958 192)) (x1637 (x1958 224)) (x1637 (x1958 256)) (x1637 (x1958 288)) 0) (ite (>= 192 x1615) (x1266 (x1637 (x1958 160)) (x1637 (x1958 192)) (x1637 (x1958 224)) (x1637 (x1958 256)) (x1637 (x1958 288)) (x1637 (x1958 320)) 0) (ite (<= x1615 224) (x1412 (x1637 (x1958 160)) (x1637 (x1958 192)) (x1637 (x1958 224)) (x1637 (x1958 256)) (x1637 (x1958 288)) (x1637 (x1958 320)) (x1637 (x1958 352)) 0) (x1637 x387))))))))) (= (x875 (+ 4 x1362)) x533) (= x1353 (x2107 (- x1362 x1374))) (= (x875 (+ x1028 32)) x1362)) (or (and (not x2021) (= x1910 x2109)) (and x2021 (and (> 4294967296 x1054) (= 1 x1910))))) x1670) x531))))
(assert (= x1536 (and x1217 x2074)))
(assert (x1208 x945))
(assert (x1208 x1002))
(assert (= (and x1926 (not x1304)) x665))
(assert (x1208 x1583))
(assert (= x779 (or x1725 x284)))
(assert (x1208 x911))
(assert (x1208 x2412))
(assert (x1667 x1578))
(assert (= (x1404 (x1285 x2363 1)) (+ 1 (x1404 x2363))))
(assert (x1208 x2215))
(assert (= (x1404 (x1637 (x1928 (x875 (+ 96 x2172))))) (x1928 (x875 (+ 96 x2172)))))
(assert (= (div x1525 6277101735386680763835789423207666416102355444464034512896) (x510 x1525 192)))
(assert (x1208 x5))
(assert (= (x1404 (x1637 (x1386 (x875 (+ x315 64))))) (x1386 (x875 (+ 64 x315)))))
(assert (x1208 x1739))
(assert (x1208 x933))
(assert (x1208 x905))
(assert (= 0 (x1606 x492)))
(assert (x1208 x387))
(assert (x1208 x1657))
(assert (x1208 x1107))
(assert (= x478 (and x29 x2059)))
(assert (x1208 x631))
(assert (x1208 x2115))
(assert (= (and x278 x1780) x1210))
(assert (= 0 (x1606 (x875 (+ x1075 64)))))
(assert (x1208 x746))
(assert (x1208 x1910))
(assert (x1208 x2372))
(assert (= (x1606 (x875 (+ x1192 192))) 0))
(assert (=> (<= (x2357 (x875 (+ x1068 128))) 10000) (= (x984 (x2357 (x875 (+ 128 x1068)))) (x1637 (x2357 (x875 (+ x1068 128)))))))
(assert (= x2000 (and x202 x1238)))
(assert (x287 x2327))
(assert (x981 x1757))
(assert (= 0 (x1606 (x875 (+ 128 x1075)))))
(assert (x1208 x1193))
(assert (x1208 x900))
(assert (x384 x1122))
(assert (= x1548 (and x864 (not x1765))))
(assert (x1208 x1135))
(assert (x384 x2461))
(assert (x1208 x2056))
(assert (= (x1404 (x1637 (x2236 (x875 (+ x1820 64))))) (x2236 (x875 (+ 64 x1820)))))
(assert (x981 (x187 (x875 (+ x1482 128)))))
(assert (x1208 x2210))
(assert (x1208 x1631))
(assert (= x399 (and x1474 x2061)))
(assert (x1208 x1522))
(assert (= x576 (or x637 x268)))
(assert (= (x187 (x875 (+ x1482 32))) (x1404 (x1637 (x187 (x875 (+ 32 x1482)))))))
(assert (= x1050 x222))
(assert (= x213 (x1637 (x1404 x213))))
(assert (= (=> (and (= 128 x54) (= x1306 (> x969 0)) (= x969 (x2152 x1356))) (and (=> (not x1306) x810) (=> (and (= x1891 (< 32 x969)) x1306) (and (=> (and x1891 (= (< 64 x969) x932)) (and (=> (not x932) x810) (=> (and x932 (= (< 96 x969) x1152)) (and (=> (not x1152) x810) (=> x1152 x1639))))) (=> (not x1891) x810))))) x1247))
(assert (x2187 x900))
(assert (= 0 (x1606 (x875 (+ x192 96)))))
(assert (= (and x625 x850) x1127))
(assert (x981 (x114 (x875 (+ 96 x1192)))))
(assert (= x1726 (or x509 x2290)))
(assert (= x664 (=> (and (= x1591 (> x1861 0)) (= x1861 (x510 x873 248)) (= (x859 x1909) x873) (= x1135 (x859 x437)) (< 0 x1135)) (and (=> x1591 x1900) (=> (and (= (x984 0) x1459) (not x1591)) x992)))))
(assert (x981 (x750 (x875 (+ x1668 96)))))
(assert (x1208 x96))
(assert (x1208 x345))
(assert (=> (<= (x1928 (x875 (+ x2172 192))) 10000) (= (x984 (x1928 (x875 (+ 192 x2172)))) (x1637 (x1928 (x875 (+ x2172 192)))))))
(assert (x1208 x1186))
(assert (x1208 x1912))
(assert (x384 x2122))
(assert (x1208 x725))
(assert (=> (>= 10000 (x1716 (x875 (+ x16 96)))) (= (x984 (x1716 (x875 (+ 96 x16)))) (x1637 (x1716 (x875 (+ x16 96)))))))
(assert (x207 x2122))
(assert (= x2059 (and (not x609) x1407)))
(assert (= 0 (x1606 x2203)))
(assert (x206 x516))
(assert (x1208 x2127))
(assert (= x222 (=> (and (= x224 (x875 (+ x2274 1))) (= (x1354 255 x2032) x1857) (= x1294 (x656 128)) (not (< x2331 1)) (not (< 255 x335)) (= (< 0 x1294) x1853) (= x812 (x1814 x1857 248)) (= x2274 (x875 (+ 32 x2012))) (= x2331 (x1425 128)) (= x2032 (x1425 128)) (= x335 (x1425 128))) (and (=> (not x1853) x1919) (=> (and (and (= (< 32 x1294) x853) (= x1018 (x656 160)) (= x2441 x224)) x1853) (and (=> (not x853) x1919) (=> (and x853 (and (= x65 (> x1294 64)) (= (x543 192) x2075) (= x318 (x875 (+ 32 x224))))) (and (=> (not x65) x1919) (=> (and (and (= (x1014 224) x1268) (= x230 (x875 (+ 64 x224))) (= (< 96 x1294) x2161)) x65) (and (=> x2161 x418) (=> (not x2161) x1919)))))))))))
(assert (= (x510 x1090 160) (div x1090 1461501637330902918203684832716283019655932542976)))
(assert (= (x750 x1668) (x1404 (x1637 (x750 x1668)))))
(assert (= (and x615 (not x2321)) x24))
(assert (x1208 x415))
(assert (x1208 x494))
(assert (= x1165 (and x86 x2111)))
(assert (x1431 x1503))
(assert (x981 (x1958 224)))
(assert (= x2295 (or x838 x1628 x2310 x1986 x504)))
(assert (x1208 x1803))
(assert (= (and x1847 (not x361)) x1322))
(assert (x1208 x1077))
(assert (x1208 x541))
(assert (= x351 (and x1144 (not x2189))))
(assert (= x175 (and (not x2103) x658)))
(assert (x206 x2376))
(assert (= x1913 (=> (and (= (x302 256) x2435) (= (not (> x2458 128)) x789) (= (x875 (+ 96 x1888)) x549)) (and x766 x789))))
(assert (= (=> (and (= x1274 (not (> x1294 128))) (= x980 (x875 (+ 96 x224))) (= (x1093 256) x1889)) (and x1274 x1919)) x418))
(assert (x1208 x1133))
(assert (= (and x840 (not x2251)) x1635))
(assert (x384 x2233))
(assert (x384 x1338))
(assert (x2187 x2071))
(assert (x1208 x335))
(assert (x1208 x1268))
(assert (=> (>= 10000 x387) (= (x984 x387) (x1637 x387))))
(assert (x1208 x679))
(assert (not x1761))
(assert (x1208 x138))
(assert (x1208 x1089))
(assert (= x8 (and x1474 (not x2061))))
(assert (= (x1404 (x1637 x155)) x155))
(assert (x1208 x1647))
(assert (= (or x878 x995) x146))
(assert (= (div x2462 6277101735386680763835789423207666416102355444464034512896) (x510 x2462 192)))
(assert (= (and (not x89) x2218) x1368))
(assert (= (or x1827 x663) x1441))
(assert (x1208 x1044))
(assert (x1208 x1558))
(assert (x1208 x1736))
(assert (x1208 x1918))
(assert (x1208 x2293))
(assert (x1208 x366))
(assert (x1208 x2080))
(assert (= 0 (x1606 (x875 (+ 64 x2172)))))
(assert (x1208 x1430))
(assert (x1208 x1924))
(assert (x1208 x634))
(assert (x981 (x76 (x875 (+ 192 x118)))))
(assert (= (x1637 18446744073709551615) (x984 18446744073709551615)))
(assert (=> (>= 10000 x567) (= (x1637 x567) (x984 x567))))
(assert (x981 (x859 (x875 (+ 128 x736)))))
(assert (= x1012 (and x1530 x1775)))
(assert (= (x1606 x1075) 0))
(assert (x1208 x545))
(assert (x1208 x1669))
(assert (= x2335 (x1637 (x1404 x2335))))
(assert (x384 x1447))
(assert (x1037 x142))
(assert (= x2248 (=> (and (= (> x1578 31) x1427) (= (= 1 (ite x1427 1 0)) x1782)) (and (=> (and (and (= (mod (* 2 x1578) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x104) (= x706 (x455 x419)) (= (x875 (+ x2012 32)) x419) (= (x875 (+ x104 x516)) x1103) (= (ite (>= 1 x516) x1103 (ite x1333 x2164 x293)) x1443) (= x516 (x1354 x706 x1307)) (= x2164 (x875 (+ x104 x516))) (= (>= 1 x516) x1333) (= x1307 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x510 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1249))) (= (x82 x516 x104) x293) (= (mod (* 8 x1578) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1249)) (not x1782)) x891) (=> (and x1782 (and (= (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1578) x1785) (= (< 0 x1785) x20) (= (x1601 x978 0) x266))) (and (=> x20 x2469) (=> (and (and (= 32 x1917) (= x266 x1484)) (not x20)) x1256)))))))
(assert (=> (<= (x859 (x875 (+ x736 160))) 10000) (= (x1637 (x859 (x875 (+ 160 x736)))) (x984 (x859 (x875 (+ x736 160)))))))
(assert (x384 x1181))
(assert (x1208 x1525))
(assert (x1208 x2089))
(assert (x1208 x785))
(assert (= (x1606 (x875 (+ 160 x1482))) 0))
(assert (= x755 (or x93 x666)))
(assert (= x1674 (=> (and (= x767 (x510 x176 248)) (= x176 (x514 x1547)) (= (> x767 0) x1512) (= (x514 x87) x1452) (< 0 x1452)) (and (=> (and (not x1512) (= (x984 0) x1905)) x14) (=> x1512 x953)))))
(assert (= x2206 x887))
(assert (= x163 (and x1012 x841)))
(assert (= x1407 (or x98 x2117)))
(assert (= (and x109 x1859) x2243))
(assert (x1208 x2315))
(assert (x1208 x2155))
(assert (x1208 x1598))
(assert (x1208 x1795))
(assert (= x1991 (and x2100 x507)))
(assert (= (+ (x1404 x718) 1) (x1404 (x1285 x718 1))))
(assert (x1208 x357))
(assert (x287 x604))
(assert (x1208 x1038))
(assert (x1972 x2034))
(assert (x1037 x440))
(assert (x1208 x2429))
(assert (= (or x500 x571) x2394))
(assert (= (x114 (x875 (+ x1192 192))) (x1404 (x1637 (x114 (x875 (+ x1192 192)))))))
(assert (x1208 x1090))
(assert (x1208 x1024))
(assert (x1208 x425))
(assert (= (and x136 x884) x1360))
(assert (x1208 x1885))
(assert (= x640 (and x1205 x373)))
(assert (= (div x2125 6277101735386680763835789423207666416102355444464034512896) (x510 x2125 192)))
(assert (x1208 x2027))
(assert (= x426 (and (not x1032) x714)))
(assert (x1208 x185))
(assert (=> (<= (x2236 (x875 (+ x1820 64))) 10000) (= (x1637 (x2236 (x875 (+ x1820 64)))) (x984 (x2236 (x875 (+ 64 x1820)))))))
(assert (x981 x18))
(assert (= x612 (or x2272 x1679)))
(assert (= (x1606 (x875 (+ 64 x1715))) 0))
(assert (x1208 x63))
(assert (= 0 (x1606 (x875 (+ x1192 160)))))
(assert (x1208 x788))
(assert (= (=> (and (= x648 (x114 x1409)) (= x1946 (x114 x882)) (= (> x1001 0) x373) (= (x510 x1946 248) x1001) (< 0 x648)) (and (=> (and (not x373) (= x162 (x984 0))) x372) (=> x373 x1095))) x1007))
(assert (x294 x524))
(assert (= (and x1378 x1569) x2278))
(assert (= (=> (= (not (> x969 128)) x371) (and x810 x371)) x1639))
(assert (x1208 x592))
(assert (= (or x2360 x936) x2334))
(assert (= x2003 (=> (and (not (= 0 x477)) (not (or (and (> 32 x1511) (= (<= x1511 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1511))) (= (x875 (+ 31 x1511)) x1819) (= x1762 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1819)) (= x1043 x1959) (= (x875 (+ x573 x1762)) x1763) (= x437 x1763) (= (x875 (+ 7776000 x1697)) x1959) (not (< 18446744073709551615 x1959)) (= x1697 (x1354 18446744073709551615 x1044)) (= x1044 (x1804 x573))) x2209)))
(assert (x1208 x291))
(assert (x156 x956))
(assert (x981 (x76 (x875 (+ x118 64)))))
(assert (x287 x1645))
(assert (= x1711 (and x2321 x615)))
(assert (x1208 x1329))
(assert (x2187 x186))
(assert (x1208 x1843))
(assert (= (x859 (x875 (+ 160 x736))) (x1404 (x1637 (x859 (x875 (+ 160 x736)))))))
(assert (x1208 x1472))
(assert (=> (<= x728 10000) (= (x1637 x728) (x984 x728))))
(assert (= x1682 (=> (and (not (= 0 x370)) (= (x1354 131072 x1299) x2114) (= (x802 x807 (x984 1) 0) x1146) (>= x1625 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1625) (= (x381 x1146) x1625) (= (x510 x1625 160) x1299) (= (= 131072 x2114) x2265)) (and (=> (and (not x2265) (and (= x218 (x984 0)) (= x2153 x545))) x1216) (=> (and x2265 (and (= x1941 (x1524 x1894)) (= (x875 (+ x227 31)) x1708) (= x227 (ite (< 0 x404) x568 (x1354 127 x568))) (= (x802 x807 (x984 5) 0) x1894) (= (div x1941 2) x568) (= (x875 (+ x545 x223)) x1413) (= x404 (x1354 1 x1941)) (= x1812 (< x227 32)) (= (mod (* x456 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2333) (= x424 (= 0 x227)) (= (x875 (+ 32 x2333)) x223) (= (x875 (+ x545 32)) x345) (< 0 x1582) (= x1582 (mod (- x404 (ite x1812 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x1708 32) x456))) (and (=> x424 x1895) (=> (and (not x424) (= (< 31 x227) x1314)) (and (=> (and x1314 (and (= (< x1365 x970) x89) (= x1855 (x1601 x1894 0)) (= x970 (x875 (+ x345 x227))) (= (x2242 x1855) x689) (= x1365 (x875 (+ 32 x345))) (= x410 (x1285 x1855 1)))) (and (=> x89 x1839) (=> (not x89) x1901))) (=> (and (and (= (div x40 256) x1154) (= x40 (x1524 x1894)) (= (mod (* x1154 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x11)) (not x1314)) x1895)))))))))
(assert (x384 x221))
(assert (= x2117 (and x1705 (not x1115))))
(assert (= (and x1967 (not x2343)) x637))
(assert (x1208 x155))
(assert (=> (<= x1962 10000) (= (x1637 x1962) (x984 x1962))))
(assert (= x1824 (=> (and (= (x875 (+ x443 1)) x1482) (= (x187 x390) x1114) (= (>= 224 x2013) x583) (not (> x544 x1114)) (= x544 (x875 (+ x2013 1)))) (and x583 (=> (= x1529 (ite (>= 32 x2013) (x1601 (x1637 (x187 x1482)) 0) (ite (<= x2013 64) (x802 (x1637 (x187 x1482)) (x1637 (x187 (x875 (+ x1482 32)))) 0) (ite (>= 96 x2013) (x1546 (x1637 (x187 x1482)) (x1637 (x187 (x875 (+ x1482 32)))) (x1637 (x187 (x875 (+ 64 x1482)))) 0) (ite (>= 128 x2013) (x320 (x1637 (x187 x1482)) (x1637 (x187 (x875 (+ 32 x1482)))) (x1637 (x187 (x875 (+ 64 x1482)))) (x1637 (x187 (x875 (+ x1482 96)))) 0) (ite (<= x2013 160) (x1619 (x1637 (x187 x1482)) (x1637 (x187 (x875 (+ 32 x1482)))) (x1637 (x187 (x875 (+ 64 x1482)))) (x1637 (x187 (x875 (+ x1482 96)))) (x1637 (x187 (x875 (+ x1482 128)))) 0) (ite (<= x2013 192) (x1266 (x1637 (x187 x1482)) (x1637 (x187 (x875 (+ 32 x1482)))) (x1637 (x187 (x875 (+ 64 x1482)))) (x1637 (x187 (x875 (+ 96 x1482)))) (x1637 (x187 (x875 (+ 128 x1482)))) (x1637 (x187 (x875 (+ 160 x1482)))) 0) (ite (<= x2013 224) (x1412 (x1637 (x187 x1482)) (x1637 (x187 (x875 (+ x1482 32)))) (x1637 (x187 (x875 (+ x1482 64)))) (x1637 (x187 (x875 (+ x1482 96)))) (x1637 (x187 (x875 (+ x1482 128)))) (x1637 (x187 (x875 (+ x1482 160)))) (x1637 (x187 (x875 (+ x1482 192)))) 0) (x1637 x2002))))))))) x1289)))))
(assert (= 0 (x1606 (x875 (+ 96 x736)))))
(assert (= (x2236 x1820) (x1404 (x1637 (x2236 x1820)))))
(assert (x1208 x1607))
(assert (= (x522 160) (x1404 (x1637 (x522 160)))))
(assert (= x2028 (and x1775 (not x1530))))
(assert (x1208 x2232))
(assert (x1208 x2235))
(assert (x1208 x912))
(assert (= (x1637 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x984 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x1404 (x1637 (x514 x1075))) (x514 x1075)))
(assert (= x828 (or x2345 x478)))
(assert (x384 x823))
(assert (x1208 x1588))
(assert (= x1138 (=> (and (= x1399 (x1354 18446744073709551615 x2412)) (= x696 (not x21)) (= (x1354 65535 x1988) x700) (= x233 (x1354 4294967295 x142)) (= x1988 (x1354 115792089237316195423570985008687907853269984665640564039457584007908834738175 x142)) (= x1463 (x875 (+ x94 (mod (x1814 x1293 192) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1179 (x1354 4294967295 x142)) (= x1702 (x802 x807 (x984 1) 0)) (= (x1354 18446744073709551615 x2412) x1293) (= (x1354 1461501637330902918203684832716283019655932542975 x1231) x651) (not (ite x696 (not (= 65537 (x1354 65537 x1745))) x696)) (= x1193 (x875 (+ 32 x1409))) (= (= x651 0) x1087) (= x21 (= x700 0)) (= x94 (x875 (+ x1343 (mod (x1814 x233 160) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1343 (x1354 1461501637330902918203684832716283019655932542975 x1202))) (and (=> (and (and (<= 0 x1903) (<= x1903 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1903 (x618 x44)) (= (= x863 131072) x1423) (= (x802 x807 (x984 1) 0) x44) (= (x510 x1903 160) x604) (= (x1354 131072 x604) x863)) x1087) (and (=> (and (not x1423) (and (= x1887 x1409) (= (x984 0) x135))) x2229) (=> (and x1423 (and (= (x875 (+ x1409 x1771)) x2130) (= x1771 (x875 (+ x815 32))) (= (x875 (+ 31 x1717)) x990) (= x2259 (x1354 1 x2233)) (= (< x1717 32) x1287) (= (div x2233 2) x2346) (= x1717 (ite (> x2259 0) x2346 (x1354 127 x2346))) (= x2052 (x802 x807 (x984 5) 0)) (= (x2046 x2052) x2233) (= (mod (- x2259 (ite x1287 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2316) (= (= 0 x1717) x361) (= (div x990 32) x2416) (= (x875 (+ 32 x1409)) x882) (= (mod (* 32 x2416) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x815) (< 0 x2316))) (and (=> x361 x1007) (=> (and (= x17 (< 31 x1717)) (not x361)) (and (=> (and (not x17) (and (= x1935 (div x710 256)) (= (x2046 x2052) x710) (= x1358 (mod (* 256 x1935) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x1007) (=> (and (and (= (x808 x75) x220) (= (< x739 x1387) x1032) (= x75 (x1601 x2052 0)) (= x1387 (x875 (+ x1717 x882))) (= x2219 (x1285 x75 1)) (= x739 (x875 (+ x882 32)))) x17) (and (=> (not x1032) x117) (=> x1032 x2202))))))))) (=> (and (not x1087) (and (= x309 (x510 x2005 160)) (>= x2005 0) (= (x618 x1402) x2005) (= x1402 (x802 x807 (x984 1) 0)) (= x908 (= x1182 131072)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2005) (= (x875 (+ 32 x1409)) x675) (= x1182 (x1354 131072 x309)))) (and (=> (and (and (= (x984 0) x1384) (= x1020 x675)) (not x908)) x1485) (=> (and (and (= x1048 (ite (< 0 x7) x786 (x1354 127 x786))) (= (x875 (+ 32 x675)) x2303) (= (div x1989 32) x1739) (= x916 (mod (- x7 (ite x2049 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x375 (= 0 x1048)) (= x2049 (< x1048 32)) (= (div x597 2) x786) (= (x802 x807 (x984 5) 0) x1626) (= x1647 (x875 (+ x1046 x675))) (= (x1354 1 x597) x7) (= x37 (mod (* 32 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x597 (x2046 x1626)) (> x916 0) (= x1046 (x875 (+ x37 32))) (= x1989 (x875 (+ x1048 31)))) x908) (and (=> (and (not x375) (= (> x1048 31) x136)) (and (=> (and (and (= x2182 (< x777 x1672)) (= (x875 (+ x2303 32)) x777) (= (x875 (+ x1048 x2303)) x1672) (= (x1285 x894 1) x2280) (= (x808 x894) x2326) (= (x1601 x1626 0) x894)) x136) (and (=> x2182 x555) (=> (not x2182) x72))) (=> (and (and (= (x2046 x1626) x349) (= x1296 (mod (* 256 x1689) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x349 256) x1689)) (not x136)) x401))) (=> x375 x401)))))))))
(assert (=> (>= 10000 (x1386 (x875 (+ x315 32)))) (= (x984 (x1386 (x875 (+ 32 x315)))) (x1637 (x1386 (x875 (+ 32 x315)))))))
(assert (x1972 x1240))
(assert (= x1325 (and x313 (not x31))))
(assert (x1208 x382))
(assert (x207 x1202))
(assert (x1208 x1890))
(assert (x1208 x1476))
(assert (x156 x584))
(assert (x384 x150))
(assert (= x1727 (and x461 x101)))
(assert (x384 x52))
(assert (x1208 x1579))
(assert (= (and x1602 (not x2021)) x316))
(assert (= x2411 (and (not x1045) x1783)))
(assert (x1208 x1173))
(assert (= x1217 (and x2170 x1421)))
(assert (= (x1606 x1068) 0))
(assert (x1208 x148))
(assert (x294 x2032))
(assert (x1208 x2018))
(assert (= (x514 (x875 (+ x1075 96))) (x1404 (x1637 (x514 (x875 (+ x1075 96)))))))
(assert (= x518 (and x1074 (not x1391))))
(assert (x384 x1010))
(assert (x2187 x2157))
(assert (x1208 x1882))
(assert (=> (<= (x114 x1192) 10000) (= (x984 (x114 x1192)) (x1637 (x114 x1192)))))
(assert (x1208 x825))
(assert (= 131072 (x1404 (x984 131072))))
(assert (= (and x1091 (not x2419)) x2245))
(assert (x1208 x286))
(assert (x1208 x1504))
(assert (x1208 x1496))
(assert (= (=> (and (> x63 0) (= (< 0 x998) x1614) (= x1178 (x750 x1631)) (= (x750 x1311) x63) (= (x510 x1178 248) x998)) (and (=> x1614 x1277) (=> (and (= x2397 (x984 0)) (not x1614)) x2319))) x1985))
(assert (x1208 x1211))
(assert (= (x1404 (x984 1058358655)) 1058358655))
(assert (= x2160 x635))
(assert (x1208 x1993))
(assert (= x874 (and x145 x1735)))
(assert (= x876 (and x1794 (not x997))))
(assert (x1208 x1282))
(assert (x1208 x763))
(assert (x384 x584))
(assert (x1208 x2263))
(assert (= (=> (and (= x1385 (x875 (+ 32 x869))) (= x1872 (not (< x1385 x1029))) (= (x1590 x32) x448)) (and x1872 x1050)) x2350))
(assert (x981 x1879))
(assert (= (x1606 (x875 (+ x1668 192))) 0))
(assert (= x2002 (x1404 (x1637 x2002))))
(assert (x1208 x1437))
(assert (= (and (not x909) x364) x834))
(assert (x1208 x1096))
(assert (= x1570 (and x2394 x1357)))
(assert (x1208 x2184))
(assert (x1208 x1819))
(assert (x1208 x1887))
(assert (x981 (x1716 (x875 (+ x16 160)))))
(assert (x981 (x514 x1075)))
(assert (= x1933 (or x1982 x1106 x1309 x2254 x843)))
(assert (x1208 x2409))
(assert (= (x1404 (x1637 x387)) x387))
(assert (x981 x2214))
(assert (= (x1637 (x1404 x1462)) x1462))
(assert (x1208 x2101))
(assert (x1208 x880))
(assert (= (x1637 (x1404 x650)) x650))
(assert (= (or x391 x958 x203) x2024))
(assert (x1208 x434))
(assert (x384 x2346))
(assert (x1208 x1916))
(assert (x981 x1432))
(assert (= 0 (x1606 (x875 (+ 128 x1192)))))
(assert (= (x1404 (x984 42946364674413620953198879289557591458479223041058917712765633135805412147200)) 42946364674413620953198879289557591458479223041058917712765633135805412147200))
(assert (x981 (x1958 160)))
(assert (= x1720 (and x1996 x1853)))
(assert (= 0 (x1606 (x875 (+ 96 x1075)))))
(assert (= (or x723 x251) x1149))
(assert (= (=> (and (not (>= (+ 1 x785) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1647 x1020) (= x1384 x1640)) x1485) x924))
(assert (= x1680 (and x2392 x112)))
(assert (= x787 (and (not x1699) x2390)))
(assert (x1208 x1062))
(assert (x981 (x859 (x875 (+ x736 32)))))
(assert (= x692 (and (not x1690) x535)))
(assert (= (or (and x2404 (not x1187)) x219) x1794))
(assert (= (and (not x1064) x1172) x2405))
(assert (x1208 x1878))
(assert (x1208 x1312))
(assert (= (and x235 x1457) x2433))
(assert (= x2039 (and (not x803) x1013)))
(assert (x1208 x815))
(assert (x1208 x1717))
(assert (= (=> (and (= (x875 (+ x226 32)) x1769) (= (not (< x1769 x209)) x2211) (= x1105 (x808 x307))) (and x2211 x270)) x641))
(assert (= (div x2125 1461501637330902918203684832716283019655932542976) (x510 x2125 160)))
(assert (= (and x479 x633) x474))
(assert (x1208 x1695))
(assert (x1208 x554))
(assert (= (x1404 (x1637 (x2236 (x875 (+ x1820 160))))) (x2236 (x875 (+ 160 x1820)))))
(assert (x1208 x1245))
(assert (= (x1404 (x1637 x2268)) x2268))
(assert (x1208 x687))
(assert (x1208 x1535))
(assert (= x396 (=> (and (= (x1354 1461501637330902918203684832716283019655932542975 x1181) x2197) (= x310 (= x2197 0))) (and (=> (and x310 (= x390 x968)) x289) (=> (and (and (= x2241 (x381 x1422)) (<= x2241 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1422 (x802 x807 (x984 1) 0)) (<= 0 x2241) (= (x510 x2241 160) x1030) (= (x1354 131072 x1030) x1573) (= x2383 (= x1573 131072))) (not x310)) (and (=> (and (and (= x1134 x390) (= (x984 0) x2417)) (not x2383)) x447) (=> (and x2383 (and (= (x1524 x1817) x1751) (= x153 (> 32 x1732)) (= (x875 (+ x390 x826)) x425) (= (div x1153 32) x701) (= (ite (< 0 x2168) x1736 (x1354 127 x1736)) x1732) (= x2168 (x1354 1 x1751)) (= (x875 (+ 32 x1123)) x826) (= (x875 (+ 32 x390)) x443) (= x1736 (div x1751 2)) (= (mod (- x2168 (ite x153 1 0)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x30) (= (x802 x807 (x984 5) 0) x1817) (= (= 0 x1732) x195) (< 0 x30) (= (x875 (+ x1732 31)) x1153) (= x1123 (mod (* 32 x701) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> x195 x1348) (=> (and (= (> x1732 31) x1842) (not x195)) (and (=> (and (and (= (< x2304 x2016) x1810) (= (x1601 x1817 0) x2363) (= (x875 (+ x443 x1732)) x2016) (= x2022 (x1285 x2363 1)) (= (x875 (+ 32 x443)) x2304) (= (x2242 x2363) x687)) x1842) (and (=> x1810 x1070) (=> (not x1810) x297))) (=> (and (not x1842) (and (= x2465 (x1524 x1817)) (= (div x2465 256) x961) (= x45 (mod (* x961 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x1348)))))))))))
(assert (= 1666326814 (x1404 (x984 1666326814))))
(assert (= (x1404 (x1637 x2214)) x2214))
(assert (x1208 x596))
(assert (x2187 x2296))
(assert (= x1663 (and (not x1641) x1257)))
(assert (x1208 x1584))
(assert (x384 x592))
(assert (=> (>= 10000 (x76 (x875 (+ 192 x118)))) (= (x1637 (x76 (x875 (+ x118 192)))) (x984 (x76 (x875 (+ x118 192)))))))
(assert (x1208 x2051))
(assert (=> (>= 10000 (x522 256)) (= (x1637 (x522 256)) (x984 (x522 256)))))
(assert (x384 x144))
(assert (= (x510 x1943 192) (div x1943 6277101735386680763835789423207666416102355444464034512896)))
(assert (x384 x1577))
(assert (x981 (x529 (x875 (+ x1715 160)))))
(assert (=> (>= 10000 (x1716 x16)) (= (x1637 (x1716 x16)) (x984 (x1716 x16)))))
(assert (x981 (x522 352)))
(assert (x1208 x844))
(assert (= (mod (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x1857) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1814 x1857 248)))
(assert (= (x1637 (x1404 x1339)) x1339))
(assert (= (x1404 (x1637 x996)) x996))
(assert (x981 (x114 (x875 (+ 128 x1192)))))
(assert (x1208 x1668))
(assert (x1208 x1066))
(assert (x1208 x272))
(assert (= x1250 (=> (and (= (x1354 18446744073709551615 x865) x673) (= x657 (x875 (+ 31 x1434))) (= x171 x105) (not (= x2431 0)) (not (or (and (< x1434 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1434) true)) (> x1434 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x875 (+ 7776000 x673)) x171) (= x865 (x553 x691)) (= (x875 (+ x2422 x691)) x2455) (not (< 18446744073709551615 x171)) (= x2422 (x1354 115792089237316195423570985008687907853269984665640564039457584007913129639904 x657)) (= x2455 x1278)) x1554)))
(assert (x1208 x1041))
(assert (x1208 x2270))
(assert (= x502 (and x62 x971)))
(assert (x1208 x942))
(assert (x1208 x2391))
(assert (x981 (x1928 x2172)))
(assert (x1208 x2224))
(assert (= (or x246 x1837) x66))
(assert (=> (<= (x1386 (x875 (+ 64 x315))) 10000) (= (x1637 (x1386 (x875 (+ 64 x315)))) (x984 (x1386 (x875 (+ x315 64)))))))
(assert (x1208 x499))
(assert (x1208 x1797))
(assert (x1208 x1971))
(assert (x1208 x370))
(assert (x384 x1245))
(assert (x1208 x453))
(assert (= (and (not x2463) x1542) x1925))
(assert (x981 x1962))
(assert (x1208 x223))
(assert (= (x1606 (x875 (+ x1668 32))) 0))
(assert (x1208 x2148))
(assert (= x1837 (and x2024 (not x2250))))
(assert (x1208 x1547))
(assert (x1208 x2308))
(assert (x981 (x522 256)))
(assert (= (+ 1 (x1404 x462)) (x1404 (x1285 x462 1))))
(assert (= (and (not x199) x2364) x2444))
(assert (= (=> (and (= x204 (x1821 x1414)) (= x1414 (x875 (+ x1981 96))) (= (not (< 128 x1942)) x2055) (= x357 (x875 (+ 96 x2358)))) (and x2055 x2354)) x311))
(assert (x1208 x649))
(assert (= x177 (and x1782 x779)))
(assert (= (and x2059 (not x29)) x2345))
(assert (= (or x2207 x564) x2374))
(assert (= (x1637 (x1404 x547)) x547))
(assert (= (x510 x2387 248) (div x2387 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= 0 (x1606 (x875 (+ 32 x1068)))))
(assert (x1208 x1439))
(assert (= (x1404 (x1637 x567)) x567))
(assert (x1208 x358))
(assert (= (and x834 x1381) x2375))
(assert (= (or x1203 x892) x2386))
(assert (= x962 (and x2083 x1141)))
(assert (x384 x989))
(assert (x1208 x1745))
(assert (= (and x1591 x267) x1585))
(assert (x1208 x1988))
(assert (x1208 x1729))
(assert (x1208 x1385))
(assert (x1208 x2171))
(assert (= (x76 (x875 (+ 128 x118))) (x1404 (x1637 (x76 (x875 (+ x118 128)))))))
(assert (x1208 x143))
(assert (x384 x604))
(assert (x981 (x2236 (x875 (+ x1820 96)))))
(assert (x1208 x1756))
(assert (= (and x1036 x2325) x1827))
(assert (= (and x737 x1483) x1034))
(assert (x981 x2098))
(assert (x1208 x526))
(assert (= (x1606 x360) 0))
(assert (x981 (x187 (x875 (+ x1482 32)))))
(check-sat)
(exit)