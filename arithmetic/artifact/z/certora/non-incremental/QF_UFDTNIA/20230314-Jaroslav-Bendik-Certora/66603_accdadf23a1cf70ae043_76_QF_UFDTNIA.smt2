(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x112 0)) (((x5783 (x3840 x112) (x8673 x112) (x8281 Int)) (x7717 (x8979 x112) (x1496 Int)) (x6664 (x4398 Int)))))
(declare-fun x7503 () Int)
(declare-fun x5419 () Int)
(declare-fun x1410 () Bool)
(declare-fun x5072 () Int)
(declare-fun x1824 () Int)
(declare-fun x2956 () Int)
(declare-fun x8081 () Bool)
(declare-fun x1223 () Int)
(declare-fun x4329 () Int)
(declare-fun x1122 () Bool)
(declare-fun x6111 () Bool)
(declare-fun x8911 () Bool)
(declare-fun x4926 () Bool)
(declare-fun x3963 () x112)
(declare-fun x3881 () Int)
(declare-fun x5133 () x112)
(declare-fun x2455 () Bool)
(declare-fun x3828 () x112)
(declare-fun x7747 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x6839 () Bool)
(declare-fun x6298 () Int)
(declare-fun x5493 () Bool)
(declare-fun x671 () Bool)
(declare-fun x4241 () Int)
(declare-fun x2083 () Int)
(declare-fun x7428 () Bool)
(declare-fun x8385 () Bool)
(declare-fun x6341 () Bool)
(declare-fun x8118 () Bool)
(declare-fun x8689 () Int)
(declare-fun x6676 () x112)
(declare-fun x3191 () Bool)
(declare-fun x1473 () Int)
(declare-fun x6372 () Bool)
(declare-fun x5401 () Bool)
(declare-fun x3307 () Bool)
(declare-fun x6486 () Bool)
(declare-fun x1376 () Int)
(declare-fun x6159 () Bool)
(declare-fun x2688 () Bool)
(declare-fun x5295 () Int)
(declare-fun x862 () Bool)
(declare-fun x6497 () Int)
(declare-fun x259 () Bool)
(declare-fun x1171 () x112)
(declare-fun x3668 () Int)
(declare-fun x341 () Bool)
(declare-fun x7622 () Bool)
(declare-fun x3456 () Int)
(declare-fun x7833 () Bool)
(declare-fun x1536 () Int)
(declare-fun x2460 () Int)
(declare-fun x7127 () x112)
(declare-fun x1793 () x112)
(declare-fun x8926 () Int)
(declare-fun x9129 () Int)
(declare-fun x752 () x112)
(declare-fun x619 () Int)
(declare-fun x6618 () Int)
(declare-fun x5882 () x112)
(declare-fun x1426 () Bool)
(declare-fun x9018 () Int)
(declare-fun x7979 () Int)
(declare-fun x8968 () x112)
(declare-fun x8332 () Int)
(declare-fun x7074 () Int)
(declare-fun x638 () Int)
(declare-fun x8225 () Bool)
(declare-fun x811 (x112) Int)
(declare-fun x7427 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x3446 () Int)
(declare-fun x781 () Bool)
(declare-fun x7733 () x112)
(declare-fun x5521 () x112)
(declare-fun x469 () x112)
(declare-fun x9077 () Int)
(declare-fun x2873 () Bool)
(declare-fun x914 () Bool)
(declare-fun x4517 () Bool)
(declare-fun x721 () Int)
(declare-fun x8876 () Int)
(declare-fun x96 () Bool)
(declare-fun x3122 () Int)
(declare-fun x2699 () Int)
(declare-fun x3279 () Bool)
(declare-fun x6101 () Bool)
(declare-fun x8440 () Int)
(declare-fun x8360 () Int)
(declare-fun x3699 () Bool)
(declare-fun x6876 () Bool)
(declare-fun x6124 () x112)
(declare-fun x9006 () Bool)
(declare-fun x8567 (Int) Int)
(declare-fun x6873 () Int)
(declare-fun x8747 () Bool)
(declare-fun x2186 () Int)
(declare-fun x8742 () Bool)
(declare-fun x564 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x2179 () Int)
(declare-fun x5563 () Bool)
(declare-fun x69 () Bool)
(declare-fun x8905 () Int)
(declare-fun x2632 () Bool)
(declare-fun x6764 () Int)
(declare-fun x5420 () Bool)
(declare-fun x192 () Bool)
(declare-fun x3313 () Bool)
(declare-fun x1206 () x112)
(declare-fun x8803 () Int)
(declare-fun x5192 () Bool)
(declare-fun x3419 () Int)
(declare-fun x1077 () Int)
(declare-fun x519 () Int)
(declare-fun x2425 () Int)
(declare-fun x8756 () Bool)
(declare-fun x6939 () Int)
(declare-fun x1833 () Int)
(declare-fun x2936 () Bool)
(declare-fun x6431 () Bool)
(declare-fun x4377 () Bool)
(declare-fun x5634 () Int)
(declare-fun x55 () Bool)
(declare-fun x5875 () Int)
(declare-fun x4767 () Bool)
(declare-fun x6607 () x112)
(declare-fun x5503 () x112)
(declare-fun x6396 () Int)
(declare-fun x5772 () Bool)
(declare-fun x5261 () Bool)
(declare-fun x3709 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x9206 () Int)
(declare-fun x331 () Bool)
(declare-fun x6475 () Int)
(declare-fun x5033 () Bool)
(declare-fun x7738 () Int)
(declare-fun x6306 () Int)
(declare-fun x5257 () Bool)
(declare-fun x5973 () Int)
(declare-fun x9146 () Bool)
(declare-fun x4515 () Bool)
(declare-fun x4725 () Int)
(declare-fun x5834 () Int)
(declare-fun x319 () Int)
(declare-fun x8566 () Bool)
(declare-fun x4381 () Bool)
(declare-fun x225 () x112)
(declare-fun x7276 () Bool)
(declare-fun x1567 () Int)
(declare-fun x7354 () Bool)
(declare-fun x2170 () Int)
(declare-fun x5944 () Bool)
(declare-fun x7430 () Bool)
(declare-fun x4237 () Int)
(declare-fun x2152 () Bool)
(declare-fun x1648 () x112)
(declare-fun x2064 () Int)
(declare-fun x2210 () Bool)
(declare-fun x3964 () x112)
(declare-fun x1179 () Bool)
(declare-fun x3887 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x9132 () Bool)
(declare-fun x8038 () Bool)
(declare-fun x6191 () Bool)
(declare-fun x1702 () x112)
(declare-fun x75 () Bool)
(declare-fun x2613 () Bool)
(declare-fun x6199 () Bool)
(declare-fun x174 () Bool)
(declare-fun x8070 () Int)
(declare-fun x8419 () Bool)
(declare-fun x1358 () Int)
(declare-fun x5178 () Bool)
(declare-fun x3758 () Int)
(declare-fun x3575 () Bool)
(declare-fun x7825 () x112)
(declare-fun x8996 () Bool)
(declare-fun x7118 () x112)
(declare-fun x1341 () Int)
(declare-fun x3238 () Int)
(declare-fun x6385 () Int)
(declare-fun x2057 () Bool)
(declare-fun x476 () Bool)
(declare-fun x8394 () Bool)
(declare-fun x4590 () Bool)
(declare-fun x6816 () Bool)
(declare-fun x442 () Int)
(declare-fun x2736 () Bool)
(declare-fun x6520 () Bool)
(declare-fun x7017 () Int)
(declare-fun x4126 () Bool)
(declare-fun x5438 () x112)
(declare-fun x5417 () Int)
(declare-fun x8832 (Int) Int)
(declare-fun x7372 () Bool)
(declare-fun x3182 () Bool)
(declare-fun x5913 () Bool)
(declare-fun x4051 () Int)
(declare-fun x983 () Int)
(declare-fun x7582 () Bool)
(declare-fun x8779 () x112)
(declare-fun x1455 () Bool)
(declare-fun x3271 () Bool)
(declare-fun x7908 () Int)
(declare-fun x6268 () Int)
(declare-fun x4393 () Bool)
(declare-fun x8003 () x112)
(declare-fun x8578 () Bool)
(declare-fun x8625 () Bool)
(declare-fun x3568 () x112)
(declare-fun x6005 () Int)
(declare-fun x3731 () Bool)
(declare-fun x3239 () Int)
(declare-fun x2961 () Bool)
(declare-fun x7206 () Int)
(declare-fun x1448 () Int)
(declare-fun x860 () Bool)
(declare-fun x2978 () Bool)
(declare-fun x1631 () Int)
(declare-fun x4796 () Int)
(declare-fun x2551 () Bool)
(declare-fun x5865 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x4024 () Int)
(declare-fun x3179 () Int)
(declare-fun x945 () Bool)
(declare-fun x8529 () x112)
(declare-fun x3707 () Bool)
(declare-fun x4038 () x112)
(declare-fun x7422 () Int)
(declare-fun x9184 () Int)
(declare-fun x4465 () Int)
(declare-fun x5454 () Bool)
(declare-fun x5272 () Int)
(declare-fun x1423 () Bool)
(declare-fun x5779 () Bool)
(declare-fun x1849 () Int)
(declare-fun x3068 () Bool)
(declare-fun x7776 () Int)
(declare-fun x5591 () Bool)
(declare-fun x5082 () Bool)
(declare-fun x5523 () Bool)
(declare-fun x6307 () Int)
(declare-fun x3657 () Bool)
(declare-fun x8755 () Bool)
(declare-fun x2937 () Int)
(declare-fun x7873 () Bool)
(declare-fun x3510 () Bool)
(declare-fun x6717 () Int)
(declare-fun x7180 () Int)
(declare-fun x7740 () Int)
(declare-fun x4775 () x112)
(declare-fun x5000 () Bool)
(declare-fun x5495 () Bool)
(declare-fun x8433 () Int)
(declare-fun x7350 () x112)
(declare-fun x7347 () Int)
(declare-fun x8724 () Int)
(declare-fun x1646 () Int)
(declare-fun x7616 () Bool)
(declare-fun x7709 () Int)
(declare-fun x2495 () Bool)
(declare-fun x6319 () Int)
(declare-fun x5864 () Int)
(declare-fun x3050 () Bool)
(declare-fun x7421 () x112)
(declare-fun x6787 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x2292 () Bool)
(declare-fun x292 () Int)
(declare-fun x4225 () Bool)
(declare-fun x9128 () x112)
(declare-fun x6735 () Bool)
(declare-fun x3485 () x112)
(declare-fun x7012 () Bool)
(declare-fun x5566 () x112)
(declare-fun x1791 () Bool)
(declare-fun x6994 () Bool)
(declare-fun x8981 () Int)
(declare-fun x7237 () Bool)
(declare-fun x6210 () Bool)
(declare-fun x474 () Bool)
(declare-fun x2336 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x2732 () Int)
(declare-fun x5431 () Bool)
(declare-fun x5347 () Bool)
(declare-fun x5548 () Bool)
(declare-fun x8668 () Int)
(declare-fun x4471 () Bool)
(declare-fun x435 () Int)
(declare-fun x3430 () Bool)
(declare-fun x2275 () Int)
(declare-fun x6783 () Bool)
(declare-fun x2741 () Int)
(declare-fun x1640 () x112)
(declare-fun x4257 () Bool)
(declare-fun x3914 () Bool)
(declare-fun x803 () x112)
(declare-fun x1622 () Int)
(declare-fun x7644 () Bool)
(declare-fun x6054 () Bool)
(declare-fun x6970 () Bool)
(declare-fun x4177 () Bool)
(declare-fun x7133 () Bool)
(declare-fun x699 () Int)
(declare-fun x2044 () Int)
(declare-fun x8841 () Bool)
(declare-fun x8354 () x112)
(declare-fun x7021 () x112)
(declare-fun x719 () x112)
(declare-fun x2024 () Bool)
(declare-fun x8719 () x112)
(declare-fun x4745 () Bool)
(declare-fun x630 () Bool)
(declare-fun x1850 () Int)
(declare-fun x2449 () x112)
(declare-fun x6020 () Bool)
(declare-fun x4355 () Int)
(declare-fun x448 () Bool)
(declare-fun x4303 () Bool)
(declare-fun x7797 () Bool)
(declare-fun x85 () Int)
(declare-fun x1412 () Bool)
(declare-fun x2245 () Int)
(declare-fun x735 () Int)
(declare-fun x2610 () Int)
(declare-fun x8280 () Bool)
(declare-fun x2591 () Bool)
(declare-fun x2938 () Bool)
(declare-fun x8985 () x112)
(declare-fun x5570 () Int)
(declare-fun x2055 () x112)
(declare-fun x2205 () Bool)
(declare-fun x7504 () Int)
(declare-fun x8588 () Int)
(declare-fun x3750 () Bool)
(declare-fun x4856 () Int)
(declare-fun x5723 () x112)
(declare-fun x808 () Int)
(declare-fun x9131 () Bool)
(declare-fun x6978 () Bool)
(declare-fun x7548 () Int)
(declare-fun x8296 () Bool)
(declare-fun x2019 () Int)
(declare-fun x3002 () Bool)
(declare-fun x3656 () Bool)
(declare-fun x4592 () Bool)
(declare-fun x4302 () Int)
(declare-fun x8520 () Int)
(declare-fun x8006 () Int)
(declare-fun x1794 () Bool)
(declare-fun x2932 () Int)
(declare-fun x8655 () x112)
(declare-fun x3251 () Bool)
(declare-fun x7588 () Int)
(declare-fun x3283 () Int)
(declare-fun x7560 () Bool)
(declare-fun x7130 () x112)
(declare-fun x3460 () Int)
(declare-fun x8895 () Int)
(declare-fun x2599 () x112)
(declare-fun x5830 () x112)
(declare-fun x5351 () Bool)
(declare-fun x1429 () Int)
(declare-fun x4925 () x112)
(declare-fun x1526 () Bool)
(declare-fun x1396 () Int)
(declare-fun x2363 () Bool)
(declare-fun x8121 () Bool)
(declare-fun x7574 () x112)
(declare-fun x8135 () Int)
(declare-fun x2609 () Bool)
(declare-fun x5090 () Int)
(declare-fun x5487 () Int)
(declare-fun x7288 () Int)
(declare-fun x4050 () Int)
(declare-fun x729 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x3719 () Int)
(declare-fun x4212 (x112) Int)
(declare-fun x3298 () Int)
(declare-fun x8514 () x112)
(declare-fun x6202 () Bool)
(declare-fun x5279 () Bool)
(declare-fun x1062 () Int)
(declare-fun x1254 () Bool)
(declare-fun x8899 () Bool)
(declare-fun x9031 () x112)
(declare-fun x200 () Bool)
(declare-fun x502 () Int)
(declare-fun x3936 () Bool)
(declare-fun x4222 () Int)
(declare-fun x6524 () Bool)
(declare-fun x4188 () Int)
(declare-fun x1652 () x112)
(declare-fun x5119 () Int)
(declare-fun x7227 () Int)
(declare-fun x927 () Int)
(declare-fun x2662 () Bool)
(declare-fun x7708 () Bool)
(declare-fun x2271 (Int) Int)
(declare-fun x4011 () Bool)
(declare-fun x6314 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x5101 () Bool)
(declare-fun x3383 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x245 () Bool)
(declare-fun x1391 () Int)
(declare-fun x2004 () Bool)
(declare-fun x4091 () Int)
(declare-fun x8453 () Bool)
(declare-fun x3267 () x112)
(declare-fun x8852 () Bool)
(declare-fun x6303 () Bool)
(declare-fun x8545 () Bool)
(declare-fun x2505 () x112)
(declare-fun x2903 () Int)
(declare-fun x5117 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x6066 () Bool)
(declare-fun x3250 () x112)
(declare-fun x7113 () Bool)
(declare-fun x8616 () Bool)
(declare-fun x416 () Int)
(declare-fun x6700 () Int)
(declare-fun x597 () Int)
(declare-fun x3347 () Bool)
(declare-fun x3479 () Int)
(declare-fun x3604 () Bool)
(declare-fun x6348 () Bool)
(declare-fun x5355 () Int)
(declare-fun x7770 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x3718 () Int)
(declare-fun x4446 () Bool)
(declare-fun x5086 () x112)
(declare-fun x8692 () Int)
(declare-fun x5132 () Int)
(declare-fun x426 () Int)
(declare-fun x7546 () Int)
(declare-fun x6547 () Bool)
(declare-fun x50 () Int)
(declare-fun x6857 () Bool)
(declare-fun x8198 () Bool)
(declare-fun x7841 () Bool)
(declare-fun x3912 (x112) Int)
(declare-fun x2705 () Bool)
(declare-fun x3143 () Int)
(declare-fun x6799 () Bool)
(declare-fun x494 () Int)
(declare-fun x4897 () Int)
(declare-fun x119 () Int)
(declare-fun x5594 () Bool)
(declare-fun x3314 () x112)
(declare-fun x3764 () Bool)
(declare-fun x393 () Int)
(declare-fun x4581 () Bool)
(declare-fun x7885 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x8718 () Bool)
(declare-fun x137 () Int)
(declare-fun x6724 () Bool)
(declare-fun x8468 () Bool)
(declare-fun x8373 () Int)
(declare-fun x4020 () Bool)
(declare-fun x357 (Int) Int)
(declare-fun x706 () Int)
(declare-fun x1946 () Bool)
(declare-fun x7557 () Bool)
(declare-fun x8147 () Bool)
(declare-fun x4890 () Int)
(declare-fun x8108 () Int)
(declare-fun x1189 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x6744 () Bool)
(declare-fun x8861 () Bool)
(declare-fun x521 () Bool)
(declare-fun x3583 () Bool)
(declare-fun x7957 () Bool)
(declare-fun x5180 () Bool)
(declare-fun x6709 () Bool)
(declare-fun x6395 () Bool)
(declare-fun x4978 () Bool)
(declare-fun x8028 () Bool)
(declare-fun x2695 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x2831 () Int)
(declare-fun x5381 () Int)
(declare-fun x5337 () Int)
(declare-fun x4806 () Bool)
(declare-fun x9087 () Bool)
(declare-fun x4109 () Bool)
(declare-fun x3926 () Bool)
(declare-fun x1063 (Int) Int)
(declare-fun x4185 () Bool)
(declare-fun x7283 () Int)
(declare-fun x7462 () x112)
(declare-fun x5577 () Int)
(declare-fun x6971 () Bool)
(declare-fun x3139 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x7657 () x112)
(declare-fun x5139 () Int)
(declare-fun x8591 () Int)
(declare-fun x8458 () x112)
(declare-fun x941 () x112)
(declare-fun x953 () Bool)
(declare-fun x6731 () Bool)
(declare-fun x2950 () Int)
(declare-fun x8260 () x112)
(declare-fun x1242 () Bool)
(declare-fun x8704 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x5163 () Bool)
(declare-fun x2911 () Int)
(declare-fun x6837 () Int)
(declare-fun x4853 () Bool)
(declare-fun x8217 () Bool)
(declare-fun x8647 () Int)
(declare-fun x8843 () Bool)
(declare-fun x7376 () Bool)
(declare-fun x3241 (Int) Int)
(declare-fun x5255 () Int)
(declare-fun x6682 () Bool)
(declare-fun x6227 () Int)
(declare-fun x3705 () Int)
(declare-fun x714 () Bool)
(declare-fun x8301 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x2080 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x5088 () Int)
(declare-fun x2776 () Int)
(declare-fun x8676 () Int)
(declare-fun x6233 () Int)
(declare-fun x3767 () Bool)
(declare-fun x3336 () Int)
(declare-fun x5108 () Int)
(declare-fun x6342 () Int)
(declare-fun x3737 () Int)
(declare-fun x8355 () Bool)
(declare-fun x3603 () Bool)
(declare-fun x3655 () Int)
(declare-fun x2627 () Int)
(declare-fun x939 () Int)
(declare-fun x7805 () Bool)
(declare-fun x1165 () Int)
(declare-fun x2417 () Bool)
(declare-fun x2000 (Int) Int)
(declare-fun x1114 () Bool)
(declare-fun x3264 () Int)
(declare-fun x4076 () Int)
(declare-fun x6875 () Bool)
(declare-fun x1658 () Int)
(declare-fun x9022 () Bool)
(declare-fun x562 () x112)
(declare-fun x2209 () Bool)
(declare-fun x1600 () Int)
(declare-fun x232 () x112)
(declare-fun x1690 () Bool)
(declare-fun x1871 () Int)
(declare-fun x6007 () x112)
(declare-fun x3623 () Bool)
(declare-fun x2492 () Bool)
(declare-fun x6117 () Bool)
(declare-fun x326 () Bool)
(declare-fun x813 () Bool)
(declare-fun x2764 () Bool)
(declare-fun x8080 () Bool)
(declare-fun x406 () Bool)
(declare-fun x3117 () Bool)
(declare-fun x4271 () Bool)
(declare-fun x4223 () Int)
(declare-fun x2264 (Int) x112)
(declare-fun x3502 () Bool)
(declare-fun x2228 () Int)
(declare-fun x2650 () x112)
(declare-fun x2659 () Bool)
(declare-fun x5573 () x112)
(declare-fun x8415 () Bool)
(declare-fun x2906 () x112)
(declare-fun x4347 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x5602 () Int)
(declare-fun x344 () Bool)
(declare-fun x4669 () Bool)
(declare-fun x3331 () Bool)
(declare-fun x6847 () Int)
(declare-fun x6532 () Int)
(declare-fun x2788 () Int)
(declare-fun x5498 () x112)
(declare-fun x8474 () Bool)
(declare-fun x1488 () Int)
(declare-fun x4563 () x112)
(declare-fun x8632 () Bool)
(declare-fun x4734 () Int)
(declare-fun x7364 () Int)
(declare-fun x5276 () Bool)
(declare-fun x1453 () Int)
(declare-fun x7317 () Bool)
(declare-fun x1852 (x112) Int)
(declare-fun x2567 () Bool)
(declare-fun x6850 () Bool)
(declare-fun x6832 () Int)
(declare-fun x2935 () x112)
(declare-fun x8478 () Bool)
(declare-fun x3599 () Int)
(declare-fun x7953 () Bool)
(declare-fun x6340 () Bool)
(declare-fun x3204 () x112)
(declare-fun x8549 () Bool)
(declare-fun x7814 () Int)
(declare-fun x5519 () Bool)
(declare-fun x3311 () Bool)
(declare-fun x2309 () Int)
(declare-fun x5611 () x112)
(declare-fun x3638 () Bool)
(declare-fun x8962 () Bool)
(declare-fun x4235 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x5794 () Bool)
(declare-fun x9054 () Bool)
(declare-fun x2191 () Int)
(declare-fun x6454 () Bool)
(declare-fun x8073 () Bool)
(declare-fun x6952 () Int)
(declare-fun x1568 () Int)
(declare-fun x886 () Bool)
(declare-fun x4424 () Bool)
(declare-fun x375 () Bool)
(declare-fun x493 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x8936 () Bool)
(declare-fun x3747 () Int)
(declare-fun x5092 () Int)
(declare-fun x5766 (x112) Int)
(declare-fun x2276 () x112)
(declare-fun x2011 () Int)
(declare-fun x8534 () Int)
(declare-fun x3826 () Bool)
(declare-fun x5940 () Int)
(declare-fun x8085 () Int)
(declare-fun x1912 () Bool)
(declare-fun x8382 () Bool)
(declare-fun x7319 () x112)
(declare-fun x1612 () Int)
(declare-fun x6634 () Int)
(declare-fun x9063 () Int)
(declare-fun x5446 () Int)
(declare-fun x6844 (x112) Int)
(declare-fun x7476 () Bool)
(declare-fun x106 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x3106 () Bool)
(declare-fun x7057 () Int)
(declare-fun x9229 () Int)
(declare-fun x8289 () Bool)
(declare-fun x5259 () Int)
(declare-fun x1710 () Bool)
(declare-fun x4403 () x112)
(declare-fun x4560 () Bool)
(declare-fun x7486 () Bool)
(declare-fun x8746 () Int)
(declare-fun x4564 () Bool)
(declare-fun x3685 () Int)
(declare-fun x6600 () Bool)
(declare-fun x3605 () Int)
(declare-fun x4702 () Bool)
(declare-fun x4118 () Bool)
(declare-fun x6406 () Bool)
(declare-fun x5900 () Int)
(declare-fun x5491 () Bool)
(declare-fun x7927 () Bool)
(declare-fun x8170 () x112)
(declare-fun x2660 () Int)
(declare-fun x2845 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x3753 () x112)
(declare-fun x1721 () Bool)
(declare-fun x8908 () Bool)
(declare-fun x359 () Bool)
(declare-fun x291 () Bool)
(declare-fun x8364 () Bool)
(declare-fun x86 () Int)
(declare-fun x7046 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x6781 () Int)
(declare-fun x8523 () x112)
(declare-fun x2326 () Int)
(declare-fun x8450 () Int)
(declare-fun x5187 () Int)
(declare-fun x8467 (Int) Int)
(declare-fun x7905 () Bool)
(declare-fun x6637 () Bool)
(declare-fun x4580 () x112)
(declare-fun x5876 () x112)
(declare-fun x3309 () Bool)
(declare-fun x7314 () Int)
(declare-fun x3606 () x112)
(declare-fun x4986 () Int)
(declare-fun x1048 () x112)
(declare-fun x4151 () Bool)
(declare-fun x4650 () Bool)
(declare-fun x4848 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x6275 () Bool)
(declare-fun x4880 () Bool)
(declare-fun x5927 () Bool)
(declare-fun x3014 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x5638 () Int)
(declare-fun x7296 (Int) Int)
(declare-fun x754 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x3900 () x112)
(declare-fun x988 () x112)
(declare-fun x2028 () Bool)
(declare-fun x4491 () Bool)
(declare-fun x5936 () Int)
(declare-fun x5730 () Int)
(declare-fun x623 () Bool)
(declare-fun x1524 () Int)
(declare-fun x5169 () Bool)
(declare-fun x3352 () Int)
(declare-fun x8392 () Bool)
(declare-fun x2888 () Bool)
(declare-fun x7138 () Int)
(declare-fun x5147 () Int)
(declare-fun x4756 () Bool)
(declare-fun x8722 () x112)
(declare-fun x5628 () Bool)
(declare-fun x5908 () Bool)
(declare-fun x2430 () x112)
(declare-fun x5923 () Int)
(declare-fun x3669 () Int)
(declare-fun x5576 () Int)
(declare-fun x183 () Int)
(declare-fun x5644 () Int)
(declare-fun x5880 () Bool)
(declare-fun x1684 () Int)
(declare-fun x7976 () Int)
(declare-fun x948 () Int)
(declare-fun x2358 () Int)
(declare-fun x2730 () x112)
(declare-fun x718 () Bool)
(declare-fun x7939 () Int)
(declare-fun x2616 (x112) Int)
(declare-fun x280 () Bool)
(declare-fun x6504 () Bool)
(declare-fun x7209 () Bool)
(declare-fun x2290 () Int)
(declare-fun x6416 () Bool)
(declare-fun x7820 () Int)
(declare-fun x7712 () Int)
(declare-fun x5078 () Bool)
(declare-fun x4948 () Bool)
(declare-fun x531 () Bool)
(declare-fun x7420 () Bool)
(declare-fun x7256 (Int) Int)
(declare-fun x9176 () Int)
(declare-fun x22 () Int)
(declare-fun x7442 () Int)
(declare-fun x8131 () Int)
(declare-fun x6092 () Int)
(declare-fun x490 () x112)
(declare-fun x7608 () Bool)
(declare-fun x6991 () Bool)
(declare-fun x1572 () x112)
(declare-fun x4636 () x112)
(declare-fun x6557 () Bool)
(declare-fun x4962 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x1835 () Bool)
(declare-fun x4550 () Int)
(declare-fun x9171 () Int)
(declare-fun x6865 () Int)
(declare-fun x8211 () Bool)
(declare-fun x7594 () Bool)
(declare-fun x152 () Int)
(declare-fun x4259 () Int)
(declare-fun x2330 () Int)
(declare-fun x526 () Int)
(declare-fun x4182 () Int)
(declare-fun x2602 () Bool)
(declare-fun x7771 () Int)
(declare-fun x7954 () Bool)
(declare-fun x1481 () Int)
(declare-fun x1845 () Bool)
(declare-fun x337 () Int)
(declare-fun x7136 () Bool)
(declare-fun x1086 () Int)
(declare-fun x9091 () Int)
(declare-fun x6267 () Int)
(declare-fun x59 () Bool)
(declare-fun x8703 () Bool)
(declare-fun x2397 () Int)
(declare-fun x6259 () Bool)
(declare-fun x824 () Bool)
(declare-fun x8831 () Bool)
(declare-fun x1028 () x112)
(declare-fun x4167 () Bool)
(declare-fun x4041 () Int)
(declare-fun x6368 () Bool)
(declare-fun x4482 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x1151 () Int)
(declare-fun x3744 () Bool)
(declare-fun x5822 () Int)
(declare-fun x8261 () Bool)
(declare-fun x362 () Bool)
(declare-fun x6558 () Bool)
(declare-fun x7947 () Bool)
(declare-fun x4674 () Bool)
(declare-fun x2110 () x112)
(declare-fun x3978 () Bool)
(declare-fun x7991 () Bool)
(declare-fun x7119 () Bool)
(declare-fun x3173 () Int)
(declare-fun x7599 () Int)
(declare-fun x8682 () x112)
(declare-fun x217 () Int)
(declare-fun x4812 () Int)
(declare-fun x4844 () Int)
(declare-fun x3809 () x112)
(declare-fun x5600 () Bool)
(declare-fun x868 () Int)
(declare-fun x7449 () Bool)
(declare-fun x6156 () Bool)
(declare-fun x8752 () Int)
(declare-fun x2493 () Bool)
(declare-fun x6216 () x112)
(declare-fun x3065 () Int)
(declare-fun x8536 () Int)
(declare-fun x4119 () Int)
(declare-fun x6379 () Int)
(declare-fun x8421 () Bool)
(declare-fun x384 () Int)
(declare-fun x3023 () Bool)
(declare-fun x6467 () Int)
(declare-fun x4693 () x112)
(declare-fun x7992 () Bool)
(declare-fun x9170 () Int)
(declare-fun x747 () Bool)
(declare-fun x7625 () Bool)
(declare-fun x4163 () x112)
(declare-fun x5404 () Bool)
(declare-fun x4360 () Int)
(declare-fun x5646 () Int)
(declare-fun x7535 () Bool)
(declare-fun x6160 () Int)
(declare-fun x7370 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x6223 () Bool)
(declare-fun x4507 () Bool)
(declare-fun x8920 () Bool)
(declare-fun x588 () Int)
(declare-fun x8635 () Int)
(declare-fun x457 () Int)
(declare-fun x383 () Int)
(declare-fun x3779 () Bool)
(declare-fun x4769 () Int)
(declare-fun x737 () Bool)
(declare-fun x2534 () Bool)
(declare-fun x5094 () Bool)
(declare-fun x7087 () Int)
(declare-fun x5761 () Int)
(declare-fun x2027 () Bool)
(declare-fun x5403 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x7398 () Bool)
(declare-fun x4626 () Int)
(declare-fun x2364 () Int)
(declare-fun x2112 () x112)
(declare-fun x2092 () x112)
(declare-fun x99 () Bool)
(declare-fun x4450 () Bool)
(declare-fun x4813 () Bool)
(declare-fun x8327 () Int)
(declare-fun x4345 () Bool)
(declare-fun x8822 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x9201 () Bool)
(declare-fun x6002 () Int)
(declare-fun x7365 () Int)
(declare-fun x2921 () Int)
(declare-fun x5317 () Bool)
(declare-fun x6017 () Bool)
(declare-fun x836 () Bool)
(declare-fun x2401 (Int) Int)
(declare-fun x4463 (x112) Int)
(declare-fun x9219 () Int)
(declare-fun x8278 () Bool)
(declare-fun x6322 () Int)
(declare-fun x8370 () Bool)
(declare-fun x465 () Bool)
(declare-fun x5760 () Bool)
(declare-fun x8129 () Bool)
(declare-fun x5345 () Bool)
(declare-fun x168 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x2249 () Int)
(declare-fun x698 () Int)
(declare-fun x1857 () Int)
(declare-fun x3413 () Int)
(declare-fun x2637 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x4179 () Int)
(declare-fun x1235 () Bool)
(declare-fun x65 () Bool)
(declare-fun x3796 () Bool)
(declare-fun x167 () Int)
(declare-fun x3852 () Bool)
(declare-fun x7096 () Int)
(declare-fun x8357 () Bool)
(declare-fun x7894 () Int)
(declare-fun x8728 () Bool)
(declare-fun x4783 () Bool)
(declare-fun x627 () Bool)
(declare-fun x492 () x112)
(declare-fun x17 () Int)
(declare-fun x2773 () Bool)
(declare-fun x3545 () Bool)
(declare-fun x5203 () Int)
(declare-fun x5790 () x112)
(declare-fun x2780 () x112)
(declare-fun x6491 () Bool)
(declare-fun x2265 () Int)
(declare-fun x2144 () Bool)
(declare-fun x8000 () x112)
(declare-fun x5874 () Int)
(declare-fun x8245 (x112) Int)
(declare-fun x2066 () Int)
(declare-fun x5980 () Bool)
(declare-fun x4228 () Int)
(declare-fun x8087 () Int)
(declare-fun x2238 () Int)
(declare-fun x6790 () Int)
(declare-fun x3236 () x112)
(declare-fun x8184 () x112)
(declare-fun x5823 () Bool)
(declare-fun x604 () Int)
(declare-fun x275 () Bool)
(declare-fun x4826 () Bool)
(declare-fun x6848 () Bool)
(declare-fun x5489 () Bool)
(declare-fun x2054 () Int)
(declare-fun x5656 () x112)
(declare-fun x5268 () Bool)
(declare-fun x774 () Int)
(declare-fun x5311 () Int)
(declare-fun x6044 () Bool)
(declare-fun x899 () Int)
(declare-fun x1497 () Bool)
(declare-fun x2966 () Int)
(declare-fun x6203 () Bool)
(declare-fun x2528 () Bool)
(declare-fun x1942 () x112)
(declare-fun x592 () Int)
(declare-fun x3414 () x112)
(declare-fun x6530 () Int)
(declare-fun x7212 () Int)
(declare-fun x2568 () Bool)
(declare-fun x5684 () Bool)
(declare-fun x6549 () Bool)
(declare-fun x8459 () Int)
(declare-fun x2979 () Bool)
(declare-fun x4903 () Bool)
(declare-fun x8555 () Int)
(declare-fun x7772 () Bool)
(declare-fun x5589 () Bool)
(declare-fun x879 () Int)
(declare-fun x4622 () Int)
(declare-fun x6453 () Bool)
(declare-fun x6922 () Bool)
(declare-fun x8766 () Bool)
(declare-fun x2530 () x112)
(declare-fun x1131 () Bool)
(declare-fun x4049 () Int)
(declare-fun x4680 () Bool)
(declare-fun x5673 () Bool)
(declare-fun x5472 () Int)
(declare-fun x2861 () Bool)
(declare-fun x161 () Int)
(declare-fun x2321 () Int)
(declare-fun x2403 () x112)
(declare-fun x713 () Int)
(declare-fun x8231 () Bool)
(declare-fun x1157 () Int)
(declare-fun x2526 () Int)
(declare-fun x403 () Int)
(declare-fun x822 () Int)
(declare-fun x833 () Int)
(declare-fun x8015 () Int)
(declare-fun x4548 () Bool)
(declare-fun x1584 () Int)
(declare-fun x3943 () Bool)
(declare-fun x2581 () Int)
(declare-fun x3733 () Int)
(declare-fun x1301 () Bool)
(declare-fun x4764 () Int)
(declare-fun x9232 () Int)
(declare-fun x4496 () Bool)
(declare-fun x4193 () Bool)
(declare-fun x8687 () Int)
(declare-fun x6749 () Bool)
(declare-fun x4015 () Bool)
(declare-fun x2624 () Bool)
(declare-fun x3417 () Int)
(declare-fun x1001 () Bool)
(declare-fun x830 () Bool)
(declare-fun x7242 () Bool)
(declare-fun x5981 () Bool)
(declare-fun x7483 () Int)
(declare-fun x6051 () Bool)
(declare-fun x5968 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x3457 () Bool)
(declare-fun x8725 () Bool)
(declare-fun x768 () Bool)
(declare-fun x1695 () x112)
(declare-fun x2106 () Int)
(declare-fun x66 () x112)
(declare-fun x7406 () x112)
(declare-fun x3658 () Int)
(declare-fun x6511 () Int)
(declare-fun x6217 () x112)
(declare-fun x6957 () Int)
(declare-fun x8029 () Bool)
(declare-fun x377 () Bool)
(declare-fun x539 () Bool)
(declare-fun x1297 () x112)
(declare-fun x315 () Bool)
(declare-fun x4244 () Bool)
(declare-fun x3421 () Bool)
(declare-fun x1655 () x112)
(declare-fun x1199 () x112)
(declare-fun x1390 () Int)
(declare-fun x1832 () Int)
(declare-fun x9003 () Bool)
(declare-fun x9081 () Bool)
(declare-fun x2909 () x112)
(declare-fun x8648 () x112)
(declare-fun x3481 () Int)
(declare-fun x1212 () x112)
(declare-fun x4665 () Bool)
(declare-fun x3176 () Int)
(declare-fun x6481 () Bool)
(declare-fun x3000 () Bool)
(declare-fun x1748 () Int)
(declare-fun x3884 () Int)
(declare-fun x8335 () x112)
(declare-fun x4175 () Bool)
(declare-fun x2155 () Int)
(declare-fun x7832 () Bool)
(declare-fun x113 () Int)
(declare-fun x8782 () Bool)
(declare-fun x7609 () Int)
(declare-fun x7817 () x112)
(declare-fun x6493 () Int)
(declare-fun x4850 () Bool)
(declare-fun x4625 () Bool)
(declare-fun x228 () Bool)
(declare-fun x7968 () Int)
(declare-fun x73 () Int)
(declare-fun x8737 () Int)
(declare-fun x3761 () Bool)
(declare-fun x6254 () Int)
(declare-fun x7121 () Bool)
(declare-fun x608 () Bool)
(declare-fun x3295 () Int)
(declare-fun x8971 () Bool)
(declare-fun x1192 () x112)
(declare-fun x4116 () Bool)
(declare-fun x6180 () Int)
(declare-fun x5362 () Int)
(declare-fun x4438 () Bool)
(declare-fun x6328 () Bool)
(declare-fun x5476 () Bool)
(declare-fun x6919 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x9213 () Bool)
(declare-fun x4449 () Bool)
(declare-fun x5198 () Int)
(declare-fun x2697 () Int)
(declare-fun x5866 () Bool)
(declare-fun x4672 () Int)
(declare-fun x345 () Int)
(declare-fun x7801 () Int)
(declare-fun x6059 () Int)
(declare-fun x3857 () Int)
(declare-fun x4080 () Int)
(declare-fun x7160 () Bool)
(declare-fun x3892 () Bool)
(declare-fun x1259 () Int)
(declare-fun x4784 () Bool)
(declare-fun x1027 () x112)
(declare-fun x7578 () Int)
(declare-fun x5445 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x3615 () x112)
(declare-fun x4524 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x6392 () Bool)
(declare-fun x6468 () Int)
(declare-fun x3782 () Int)
(declare-fun x901 () Bool)
(declare-fun x2257 () Int)
(declare-fun x5114 () Bool)
(declare-fun x8560 () Bool)
(declare-fun x2353 () Bool)
(declare-fun x5274 () Int)
(declare-fun x7306 () Bool)
(declare-fun x4247 () Int)
(declare-fun x5443 () x112)
(declare-fun x7756 () Int)
(declare-fun x74 () Int)
(declare-fun x6988 () Bool)
(declare-fun x7304 () Bool)
(declare-fun x8267 () Bool)
(declare-fun x5102 () Bool)
(declare-fun x3674 () Bool)
(declare-fun x8507 () Bool)
(declare-fun x8179 () Bool)
(declare-fun x3228 () Bool)
(declare-fun x1539 () Int)
(declare-fun x8526 () Bool)
(declare-fun x8739 () Bool)
(declare-fun x5264 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x5390 () Bool)
(declare-fun x3063 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x6928 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x8166 () Int)
(declare-fun x4846 () Bool)
(declare-fun x4414 () Bool)
(declare-fun x947 () x112)
(declare-fun x138 () Bool)
(declare-fun x5429 () x112)
(declare-fun x2604 () Int)
(declare-fun x8313 () Bool)
(declare-fun x8326 () Int)
(declare-fun x4620 () Int)
(declare-fun x6779 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x4082 () Bool)
(declare-fun x4448 () x112)
(declare-fun x4199 () Bool)
(declare-fun x3762 () x112)
(declare-fun x2696 () Int)
(declare-fun x2162 () Bool)
(declare-fun x2038 () Bool)
(declare-fun x7134 () x112)
(declare-fun x4628 () Bool)
(declare-fun x9203 () x112)
(declare-fun x918 () Int)
(declare-fun x6065 () Bool)
(declare-fun x6955 () x112)
(declare-fun x4910 () Bool)
(declare-fun x7613 () Int)
(declare-fun x4324 () Bool)
(declare-fun x6608 () Int)
(declare-fun x1900 () Bool)
(declare-fun x6164 () Int)
(declare-fun x6829 () Int)
(declare-fun x6434 () Int)
(declare-fun x4407 () Bool)
(declare-fun x6012 () Int)
(declare-fun x2104 () Bool)
(declare-fun x853 () Bool)
(declare-fun x3148 () Int)
(declare-fun x3101 () Int)
(declare-fun x5400 () x112)
(declare-fun x3310 () Bool)
(declare-fun x4327 () Bool)
(declare-fun x9198 () x112)
(declare-fun x1 () Int)
(declare-fun x3053 () Bool)
(declare-fun x4030 () Int)
(declare-fun x77 () Bool)
(declare-fun x6387 () Int)
(declare-fun x832 () Int)
(declare-fun x928 () Int)
(declare-fun x4611 () Int)
(declare-fun x5195 () x112)
(declare-fun x2093 () Bool)
(declare-fun x3315 () Bool)
(declare-fun x4760 () Bool)
(declare-fun x2800 () Int)
(declare-fun x1843 () Bool)
(declare-fun x8927 () Bool)
(declare-fun x820 () Int)
(declare-fun x9102 () Bool)
(declare-fun x7477 () Bool)
(declare-fun x6363 () Bool)
(declare-fun x8457 () Bool)
(declare-fun x8034 () Int)
(declare-fun x5694 () Int)
(declare-fun x7837 () Bool)
(declare-fun x835 () Bool)
(declare-fun x8605 () Int)
(declare-fun x2318 () Bool)
(declare-fun x3869 () Int)
(declare-fun x2986 () Int)
(declare-fun x3012 () Int)
(declare-fun x1657 () Int)
(declare-fun x6580 () Int)
(declare-fun x4323 () Bool)
(declare-fun x4723 () Bool)
(declare-fun x5291 () Int)
(declare-fun x2041 () Bool)
(declare-fun x5920 () x112)
(declare-fun x4586 () Bool)
(declare-fun x6070 () Bool)
(declare-fun x7194 () Bool)
(declare-fun x8424 () Bool)
(declare-fun x68 () x112)
(declare-fun x1080 () Bool)
(declare-fun x5312 () Bool)
(declare-fun x1739 (Int) Int)
(declare-fun x5942 () Bool)
(declare-fun x4166 () Bool)
(declare-fun x1435 () x112)
(declare-fun x950 () Int)
(declare-fun x2216 () Bool)
(declare-fun x7106 () Int)
(declare-fun x3538 () Bool)
(declare-fun x9147 () Int)
(declare-fun x5768 () Int)
(declare-fun x2048 () Int)
(declare-fun x7850 () Int)
(declare-fun x8134 () Int)
(declare-fun x5612 () Bool)
(declare-fun x6765 () x112)
(declare-fun x9226 () Int)
(declare-fun x4476 () Bool)
(declare-fun x753 () Int)
(declare-fun x3076 () Bool)
(declare-fun x1485 () Int)
(declare-fun x6061 () Bool)
(declare-fun x4264 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x2359 () Bool)
(declare-fun x7166 () Bool)
(declare-fun x9222 () Int)
(declare-fun x5785 () Bool)
(declare-fun x7874 () Int)
(declare-fun x8857 () x112)
(declare-fun x2926 () Int)
(declare-fun x6519 () Int)
(declare-fun x1504 () Bool)
(declare-fun x3074 () Bool)
(declare-fun x7933 () Int)
(declare-fun x463 () Int)
(declare-fun x1445 () Int)
(declare-fun x8877 () x112)
(declare-fun x1671 () Bool)
(declare-fun x9008 () Bool)
(declare-fun x6692 () Bool)
(declare-fun x5915 () Bool)
(declare-fun x5905 () Bool)
(declare-fun x6693 () Bool)
(declare-fun x4063 () Bool)
(declare-fun x264 () Bool)
(declare-fun x7996 () x112)
(declare-fun x4958 () x112)
(declare-fun x2212 () Int)
(declare-fun x513 () Bool)
(declare-fun x3928 () Int)
(declare-fun x2218 () Bool)
(declare-fun x9175 () Int)
(declare-fun x3229 () Bool)
(declare-fun x2867 () Bool)
(declare-fun x355 () Int)
(declare-fun x2307 () Int)
(declare-fun x9113 () Bool)
(declare-fun x6022 () Int)
(declare-fun x7755 () Bool)
(declare-fun x971 () Bool)
(declare-fun x1128 () Int)
(declare-fun x8512 () Bool)
(declare-fun x6414 () Int)
(declare-fun x3774 () Int)
(declare-fun x89 () Bool)
(declare-fun x1724 () Int)
(declare-fun x617 (Int) Int)
(declare-fun x5113 () Bool)
(declare-fun x1094 () Int)
(declare-fun x3727 () Int)
(declare-fun x1863 () Bool)
(declare-fun x102 () Bool)
(declare-fun x5016 () Int)
(declare-fun x5176 () Int)
(declare-fun x4797 () Int)
(declare-fun x2799 (Int) Int)
(declare-fun x7009 () Int)
(declare-fun x5369 () Int)
(declare-fun x1654 () Bool)
(declare-fun x3020 () Int)
(declare-fun x1408 () Bool)
(declare-fun x8886 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x2910 () Int)
(declare-fun x8674 () Int)
(declare-fun x5137 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x5004 () Int)
(declare-fun x1703 () Bool)
(declare-fun x9152 () Bool)
(declare-fun x7590 () Bool)
(declare-fun x5617 () x112)
(declare-fun x771 () Bool)
(declare-fun x7444 () Bool)
(declare-fun x4593 () Int)
(declare-fun x5289 () Int)
(declare-fun x3081 () Bool)
(declare-fun x2817 () Bool)
(declare-fun x3904 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x3416 () Bool)
(declare-fun x8932 () Int)
(declare-fun x9068 () Int)
(declare-fun x3205 () Bool)
(declare-fun x837 () Bool)
(declare-fun x5514 () Bool)
(declare-fun x6577 () Bool)
(declare-fun x7960 () Bool)
(declare-fun x3516 (x112) Int)
(declare-fun x5535 () Bool)
(declare-fun x4630 () Bool)
(declare-fun x717 () Bool)
(declare-fun x676 () Bool)
(declare-fun x2992 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x4335 () Bool)
(declare-fun x884 () Int)
(declare-fun x1535 () Int)
(declare-fun x177 () x112)
(declare-fun x7146 () Bool)
(declare-fun x1551 () Int)
(declare-fun x7044 () Bool)
(declare-fun x5008 () Bool)
(declare-fun x1347 () Int)
(declare-fun x5780 () Bool)
(declare-fun x2698 () Bool)
(declare-fun x8436 () Int)
(declare-fun x926 () Int)
(declare-fun x2510 () Int)
(declare-fun x4341 () Bool)
(declare-fun x1313 () Int)
(declare-fun x4511 () Bool)
(declare-fun x5709 () Bool)
(declare-fun x8573 () Bool)
(declare-fun x188 () Int)
(declare-fun x1899 () Int)
(declare-fun x3650 () Int)
(declare-fun x8866 () Bool)
(declare-fun x7218 () Bool)
(declare-fun x8146 () Bool)
(declare-fun x7677 () Bool)
(declare-fun x4606 () Int)
(declare-fun x1777 () Bool)
(declare-fun x786 () Int)
(declare-fun x6130 () Bool)
(declare-fun x705 () Bool)
(declare-fun x2576 () Bool)
(declare-fun x9163 () Bool)
(declare-fun x9144 () Bool)
(declare-fun x4993 () Int)
(declare-fun x7345 () Int)
(declare-fun x6128 () Bool)
(declare-fun x7286 () Int)
(declare-fun x4728 () Int)
(declare-fun x25 () Bool)
(declare-fun x900 () Bool)
(declare-fun x5897 () x112)
(declare-fun x3199 () Int)
(declare-fun x2677 () Bool)
(declare-fun x1691 () Int)
(declare-fun x49 () x112)
(declare-fun x4337 () Bool)
(declare-fun x314 () Int)
(declare-fun x2161 () Bool)
(declare-fun x5896 () Int)
(declare-fun x3677 () x112)
(declare-fun x2005 () x112)
(declare-fun x8796 () Int)
(declare-fun x8883 () Int)
(declare-fun x1711 () Bool)
(declare-fun x4913 () Int)
(declare-fun x7816 () Int)
(declare-fun x1032 () Bool)
(declare-fun x2036 () Int)
(declare-fun x2101 () Int)
(declare-fun x6283 () Bool)
(declare-fun x7229 () Int)
(declare-fun x1172 () Bool)
(declare-fun x6316 () Int)
(declare-fun x21 () Bool)
(declare-fun x8888 () Int)
(declare-fun x880 () Int)
(declare-fun x5063 () Int)
(declare-fun x8516 () Bool)
(declare-fun x925 () Bool)
(declare-fun x757 () Bool)
(declare-fun x8193 () Int)
(declare-fun x2077 () Int)
(declare-fun x3115 () x112)
(declare-fun x8010 () Bool)
(declare-fun x2544 () Bool)
(declare-fun x8783 () Bool)
(declare-fun x3640 () Int)
(declare-fun x3273 () Bool)
(declare-fun x5581 () Bool)
(declare-fun x4280 () Bool)
(declare-fun x5633 () Bool)
(declare-fun x4889 () Bool)
(declare-fun x5352 () Bool)
(declare-fun x4859 () Int)
(declare-fun x8190 () Bool)
(declare-fun x551 () Bool)
(declare-fun x8031 () Int)
(declare-fun x8494 () Bool)
(declare-fun x2952 () Bool)
(declare-fun x3643 () Bool)
(declare-fun x3596 () Int)
(declare-fun x7601 () Bool)
(declare-fun x8844 () Bool)
(declare-fun x3806 () Bool)
(declare-fun x8060 () Bool)
(declare-fun x692 () Bool)
(declare-fun x2875 () Bool)
(declare-fun x6174 () Bool)
(declare-fun x7458 () Int)
(declare-fun x977 () Bool)
(declare-fun x6714 () Bool)
(declare-fun x6782 () Bool)
(declare-fun x3908 () Int)
(declare-fun x8918 () Bool)
(declare-fun x3801 () Bool)
(declare-fun x8867 () Bool)
(declare-fun x5817 () Bool)
(declare-fun x7660 () Bool)
(declare-fun x4039 () Int)
(declare-fun x2865 () Bool)
(declare-fun x7956 () Bool)
(declare-fun x3810 () Bool)
(declare-fun x9108 () Int)
(declare-fun x1633 () Bool)
(declare-fun x2357 () Int)
(declare-fun x7104 () Bool)
(declare-fun x6158 () Int)
(declare-fun x5805 () Bool)
(declare-fun x5605 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x5315 () Bool)
(declare-fun x4997 () Bool)
(declare-fun x3661 () Bool)
(declare-fun x2443 () Int)
(declare-fun x3145 () Int)
(declare-fun x769 (x112) Int)
(declare-fun x5434 () Int)
(declare-fun x8461 () Bool)
(declare-fun x5825 () Int)
(declare-fun x2437 () Int)
(declare-fun x8328 () Bool)
(declare-fun x955 () Bool)
(declare-fun x5332 () Int)
(declare-fun x2971 () Int)
(declare-fun x3584 () Int)
(declare-fun x6142 () Bool)
(declare-fun x8154 () Bool)
(declare-fun x4809 () Int)
(declare-fun x450 () Bool)
(declare-fun x1493 () Int)
(declare-fun x2419 () x112)
(declare-fun x8827 () Bool)
(declare-fun x2207 () Int)
(declare-fun x6843 () Bool)
(declare-fun x9228 () Bool)
(declare-fun x5367 () Int)
(declare-fun x5084 () Int)
(declare-fun x2254 () Int)
(declare-fun x1417 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x4410 () Bool)
(declare-fun x8331 () Bool)
(declare-fun x187 () Int)
(declare-fun x628 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x5451 () Bool)
(declare-fun x7695 () Bool)
(declare-fun x103 () Bool)
(declare-fun x6296 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x7167 () Int)
(declare-fun x8497 () Bool)
(declare-fun x2797 () Bool)
(declare-fun x5423 () x112)
(declare-fun x5330 () Bool)
(declare-fun x1555 () Int)
(declare-fun x1865 () Bool)
(declare-fun x4543 () Bool)
(declare-fun x6165 () Int)
(declare-fun x7154 () Bool)
(declare-fun x7564 () Int)
(declare-fun x6324 () Int)
(declare-fun x9140 () Int)
(declare-fun x4356 () Int)
(declare-fun x6361 () x112)
(declare-fun x221 () Int)
(declare-fun x5849 () Bool)
(declare-fun x1893 () x112)
(declare-fun x7270 () Bool)
(declare-fun x4973 () Bool)
(declare-fun x3156 () x112)
(declare-fun x4261 () Bool)
(declare-fun x9043 () Bool)
(declare-fun x4678 () x112)
(declare-fun x1110 () Int)
(declare-fun x2071 () Int)
(declare-fun x5513 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x7221 () Int)
(declare-fun x7424 () Int)
(declare-fun x655 () Int)
(declare-fun x509 () Bool)
(declare-fun x1620 () Int)
(declare-fun x7393 () Int)
(declare-fun x7903 () Bool)
(declare-fun x8761 () Int)
(declare-fun x2270 () Int)
(declare-fun x3799 () x112)
(declare-fun x7492 () Bool)
(declare-fun x968 () Bool)
(declare-fun x4805 () Int)
(declare-fun x6352 () Int)
(declare-fun x5490 () Bool)
(declare-fun x5543 () Bool)
(declare-fun x7854 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x5104 () Int)
(declare-fun x329 () x112)
(declare-fun x1595 () Int)
(declare-fun x3501 () Bool)
(declare-fun x6713 () Bool)
(declare-fun x5273 () Int)
(declare-fun x6685 () Bool)
(declare-fun x3057 () Bool)
(declare-fun x648 () Int)
(declare-fun x5225 () Int)
(declare-fun x4755 () Bool)
(declare-fun x8740 () Int)
(declare-fun x8978 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x5998 () x112)
(declare-fun x647 () Int)
(declare-fun x2984 () Bool)
(declare-fun x8582 () x112)
(declare-fun x4158 () Bool)
(declare-fun x1321 () Int)
(declare-fun x815 () Bool)
(declare-fun x4671 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x1920 () Int)
(declare-fun x5845 () Bool)
(declare-fun x6842 () Bool)
(declare-fun x3855 () Bool)
(declare-fun x3408 () Int)
(declare-fun x613 () Int)
(declare-fun x4176 () x112)
(declare-fun x2355 () Bool)
(declare-fun x5643 () x112)
(declare-fun x2195 () x112)
(declare-fun x7198 () Bool)
(declare-fun x6433 () Int)
(declare-fun x95 () Bool)
(declare-fun x6245 () x112)
(declare-fun x1947 () Int)
(declare-fun x8251 () Int)
(declare-fun x8581 () Int)
(declare-fun x1665 () Bool)
(declare-fun x5647 () Int)
(declare-fun x8303 () Bool)
(declare-fun x7895 () x112)
(declare-fun x5732 () Bool)
(declare-fun x5028 () Int)
(declare-fun x4467 () Bool)
(declare-fun x3445 () Int)
(declare-fun x7961 () Int)
(declare-fun x7684 () Bool)
(declare-fun x6925 () Bool)
(declare-fun x4138 () Bool)
(declare-fun x3540 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x7646 () Int)
(declare-fun x7514 () Int)
(declare-fun x1781 () Bool)
(declare-fun x412 () Bool)
(declare-fun x8901 () x112)
(declare-fun x6663 () Bool)
(declare-fun x2 () Int)
(declare-fun x4574 () Int)
(declare-fun x5093 () Bool)
(declare-fun x6575 () Bool)
(declare-fun x6075 () Int)
(declare-fun x2090 () Int)
(declare-fun x505 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x9029 () x112)
(declare-fun x635 () Bool)
(declare-fun x5237 () Int)
(declare-fun x599 () Bool)
(declare-fun x3729 () x112)
(declare-fun x3040 () Bool)
(declare-fun x8812 () Int)
(declare-fun x2494 () Int)
(declare-fun x4968 () x112)
(declare-fun x9014 () Bool)
(declare-fun x5655 () Bool)
(declare-fun x8277 () Bool)
(declare-fun x5501 () x112)
(declare-fun x3996 () Bool)
(declare-fun x6586 () Int)
(declare-fun x1589 () Int)
(declare-fun x8104 () Bool)
(declare-fun x7352 () Int)
(declare-fun x1454 () Int)
(declare-fun x4794 () Int)
(declare-fun x1463 () Int)
(declare-fun x876 () Bool)
(declare-fun x4216 () Int)
(declare-fun x2319 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x5686 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x5546 () Int)
(declare-fun x5127 () Bool)
(declare-fun x4621 () Bool)
(declare-fun x3649 () Int)
(declare-fun x3838 () Bool)
(declare-fun x7714 () Bool)
(declare-fun x3947 () x112)
(declare-fun x3850 () Int)
(declare-fun x8817 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x7271 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x8334 () Bool)
(declare-fun x7310 () Bool)
(declare-fun x6899 () Bool)
(declare-fun x6661 () Bool)
(declare-fun x196 () Bool)
(declare-fun x6926 () Int)
(declare-fun x1662 () x112)
(declare-fun x2481 () Bool)
(declare-fun x9021 () Int)
(declare-fun x5593 () x112)
(declare-fun x542 () Int)
(declare-fun x935 () Bool)
(declare-fun x8197 () Bool)
(declare-fun x1814 () Int)
(declare-fun x7580 () Int)
(declare-fun x8594 () Bool)
(declare-fun x1805 () Int)
(declare-fun x5344 () Int)
(declare-fun x7598 () Int)
(declare-fun x7060 () Int)
(declare-fun x5365 () Bool)
(declare-fun x7375 () Int)
(declare-fun x7774 () x112)
(declare-fun x2196 () Bool)
(declare-fun x3150 () Bool)
(declare-fun x1078 () x112)
(declare-fun x507 () Int)
(declare-fun x5285 () Bool)
(declare-fun x7826 () Int)
(declare-fun x6318 () Int)
(declare-fun x2578 () Bool)
(declare-fun x5708 () Bool)
(declare-fun x7478 () Bool)
(declare-fun x8659 () x112)
(declare-fun x1993 () Int)
(declare-fun x3856 () Bool)
(declare-fun x5479 () x112)
(declare-fun x4192 () Int)
(declare-fun x4934 () Bool)
(declare-fun x5957 () Bool)
(declare-fun x3388 () Bool)
(declare-fun x7692 () Bool)
(declare-fun x4687 () Bool)
(declare-fun x1796 () Bool)
(declare-fun x7103 () Int)
(declare-fun x4992 () x112)
(declare-fun x2160 () Bool)
(declare-fun x843 () Bool)
(declare-fun x7245 () Int)
(declare-fun x5806 () Bool)
(declare-fun x7151 () Bool)
(declare-fun x5298 () Bool)
(declare-fun x7831 () Int)
(declare-fun x6026 () Bool)
(declare-fun x4044 () Int)
(declare-fun x429 () x112)
(declare-fun x2587 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x6096 () Int)
(declare-fun x1205 () Bool)
(declare-fun x5287 () Bool)
(declare-fun x1384 () Int)
(declare-fun x8800 () Int)
(declare-fun x1722 () Bool)
(declare-fun x567 () x112)
(declare-fun x6334 () Int)
(declare-fun x1686 () Int)
(declare-fun x534 () Bool)
(declare-fun x8471 () Int)
(declare-fun x7178 () Int)
(declare-fun x8336 () Int)
(declare-fun x4455 () Int)
(declare-fun x4245 () x112)
(declare-fun x7144 () Bool)
(declare-fun x4819 () x112)
(declare-fun x639 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x5759 () Bool)
(declare-fun x1723 () Int)
(declare-fun x678 () Int)
(declare-fun x485 () Int)
(declare-fun x6789 () Int)
(declare-fun x2262 () Bool)
(declare-fun x5891 () Int)
(declare-fun x5450 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x3989 () Int)
(declare-fun x4582 () Int)
(declare-fun x6011 () x112)
(declare-fun x3424 () x112)
(declare-fun x5364 () Bool)
(declare-fun x5442 () Bool)
(declare-fun x2393 () Bool)
(declare-fun x8379 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x7102 () x112)
(declare-fun x6109 () Bool)
(declare-fun x5598 () Bool)
(declare-fun x6705 () Int)
(declare-fun x3934 () Bool)
(declare-fun x6621 () Int)
(declare-fun x5464 () Int)
(declare-fun x9149 () Int)
(declare-fun x1177 () x112)
(declare-fun x8125 () Int)
(declare-fun x6089 () x112)
(declare-fun x6562 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x5217 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x1705 () Int)
(declare-fun x2972 () Bool)
(declare-fun x1591 () x112)
(declare-fun x7451 () Bool)
(declare-fun x4695 () Bool)
(declare-fun x5256 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x5164 () Int)
(declare-fun x2899 () Bool)
(declare-fun x6897 () Int)
(declare-fun x1788 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x4283 () Bool)
(declare-fun x4058 () Bool)
(declare-fun x7652 () Int)
(declare-fun x4739 () Int)
(declare-fun x6916 () Bool)
(declare-fun x7651 () Bool)
(declare-fun x8935 () Bool)
(declare-fun x7544 () Int)
(declare-fun x1700 () Bool)
(declare-fun x3214 () Int)
(declare-fun x8391 () Int)
(declare-fun x5921 () Int)
(declare-fun x5201 () Int)
(declare-fun x4977 () Bool)
(declare-fun x2864 () x112)
(declare-fun x6636 () Bool)
(declare-fun x5835 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x1324 () x112)
(declare-fun x1307 (Int) Int)
(declare-fun x5861 () Int)
(declare-fun x1926 () Bool)
(declare-fun x4029 () x112)
(declare-fun x2127 () Bool)
(declare-fun x1877 () Bool)
(declare-fun x8884 () Int)
(declare-fun x3406 () Bool)
(declare-fun x723 () Bool)
(declare-fun x425 () Bool)
(declare-fun x8533 () Bool)
(declare-fun x5111 () x112)
(declare-fun x6236 () Bool)
(declare-fun x7603 () Bool)
(declare-fun x6771 () Bool)
(declare-fun x8707 () x112)
(declare-fun x2571 () Bool)
(declare-fun x5079 () Bool)
(declare-fun x8731 () Int)
(declare-fun x7098 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x4536 () x112)
(declare-fun x2758 () x112)
(declare-fun x2960 () Bool)
(declare-fun x6561 () x112)
(declare-fun x1082 () Bool)
(declare-fun x5632 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x3308 (x112) Int)
(declare-fun x6081 () Int)
(declare-fun x2334 () Bool)
(declare-fun x308 () Int)
(declare-fun x6883 () Int)
(declare-fun x1911 () x112)
(declare-fun x6923 () Int)
(declare-fun x4459 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x3151 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x5085 () Bool)
(declare-fun x7426 () Bool)
(declare-fun x7094 () Int)
(declare-fun x6877 () Bool)
(declare-fun x3247 () x112)
(declare-fun x1949 () Int)
(declare-fun x2717 () Bool)
(declare-fun x8285 () Bool)
(declare-fun x2368 () Int)
(declare-fun x3544 () Bool)
(declare-fun x4110 () Bool)
(declare-fun x3898 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x5459 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x2067 () Int)
(declare-fun x5209 () Int)
(declare-fun x1983 () Bool)
(declare-fun x8963 () Bool)
(declare-fun x3653 () Bool)
(declare-fun x3231 () Int)
(declare-fun x23 () Int)
(declare-fun x7197 () Bool)
(declare-fun x3175 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x8589 () Bool)
(declare-fun x3765 () Bool)
(declare-fun x7251 () Int)
(declare-fun x5966 () Int)
(declare-fun x7027 () Int)
(declare-fun x363 () Int)
(declare-fun x5432 () x112)
(declare-fun x294 () Int)
(declare-fun x6238 () Bool)
(declare-fun x7224 () Int)
(declare-fun x8325 () Bool)
(declare-fun x1922 () Int)
(declare-fun x8315 () Bool)
(declare-fun x8943 () x112)
(declare-fun x5020 () Bool)
(declare-fun x5052 () Bool)
(declare-fun x6004 () Bool)
(declare-fun x852 () Int)
(declare-fun x4001 () x112)
(declare-fun x7573 () Bool)
(declare-fun x3475 () Int)
(declare-fun x7511 () Bool)
(declare-fun x3304 () Int)
(declare-fun x1768 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x1966 () Int)
(declare-fun x7669 () Bool)
(declare-fun x7710 () Int)
(declare-fun x3119 () x112)
(declare-fun x5931 () Int)
(declare-fun x4499 () Bool)
(declare-fun x2126 () Int)
(declare-fun x8343 () Int)
(declare-fun x2562 () Int)
(declare-fun x6614 () Int)
(declare-fun x1588 () Bool)
(declare-fun x6501 () Int)
(declare-fun x1418 () Int)
(declare-fun x6445 () Bool)
(declare-fun x772 () Bool)
(declare-fun x8680 () Int)
(declare-fun x7249 () Int)
(declare-fun x6332 () Int)
(declare-fun x2603 () Bool)
(declare-fun x929 () Bool)
(declare-fun x5844 () Bool)
(declare-fun x1734 () x112)
(declare-fun x1815 () Bool)
(declare-fun x3181 () Bool)
(declare-fun x5562 () Bool)
(declare-fun x8455 () Bool)
(declare-fun x5889 () Bool)
(declare-fun x8350 () Bool)
(declare-fun x1660 () x112)
(declare-fun x2767 () Int)
(declare-fun x4950 () Bool)
(declare-fun x8882 () Bool)
(declare-fun x7900 () Bool)
(declare-fun x8223 () Bool)
(declare-fun x8444 () Bool)
(declare-fun x72 () Bool)
(declare-fun x266 () Bool)
(declare-fun x6548 () Bool)
(declare-fun x1985 () x112)
(declare-fun x2710 () Int)
(declare-fun x4495 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x7050 () Bool)
(declare-fun x2120 () Int)
(declare-fun x9065 () x112)
(declare-fun x1864 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x1340 () Int)
(declare-fun x1730 () Bool)
(declare-fun x5987 () Bool)
(declare-fun x7140 () x112)
(declare-fun x1957 () Int)
(declare-fun x2252 () Bool)
(declare-fun x6896 () Bool)
(declare-fun x3166 () Bool)
(declare-fun x1838 () Int)
(declare-fun x2538 () Int)
(declare-fun x5678 () Bool)
(declare-fun x279 () x112)
(declare-fun x6587 () Int)
(declare-fun x6969 () Bool)
(declare-fun x2611 () Int)
(declare-fun x5935 () Bool)
(declare-fun x3961 () Bool)
(declare-fun x537 () Bool)
(declare-fun x6730 () Int)
(declare-fun x8579 () Bool)
(declare-fun x4032 () Int)
(declare-fun x6030 () Int)
(declare-fun x3565 () Int)
(declare-fun x946 () x112)
(declare-fun x8158 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x6646 () Bool)
(declare-fun x2286 () Int)
(declare-fun x354 () Int)
(declare-fun x8907 () Bool)
(declare-fun x7694 () Bool)
(declare-fun x3931 () Bool)
(declare-fun x5197 () Bool)
(declare-fun x7783 () Bool)
(declare-fun x8763 () Bool)
(declare-fun x1015 (Int) Int)
(declare-fun x6868 () Bool)
(declare-fun x664 () Int)
(declare-fun x7865 () Int)
(declare-fun x5712 () Bool)
(declare-fun x8378 () Int)
(declare-fun x2497 () x112)
(declare-fun x5152 () Bool)
(declare-fun x2281 () Bool)
(declare-fun x2322 () Int)
(declare-fun x6294 () Int)
(declare-fun x8148 () Int)
(declare-fun x7821 () Bool)
(declare-fun x590 () Bool)
(declare-fun x5983 () Int)
(declare-fun x5885 () Int)
(declare-fun x8576 () Bool)
(declare-fun x1039 () Int)
(declare-fun x5054 () Bool)
(declare-fun x8153 () Int)
(declare-fun x3675 () Bool)
(declare-fun x8751 () x112)
(declare-fun x770 () Int)
(declare-fun x48 () x112)
(declare-fun x1105 () Bool)
(declare-fun x6979 () Bool)
(declare-fun x460 () Bool)
(declare-fun x43 () Bool)
(declare-fun x5 () Int)
(declare-fun x41 () Bool)
(declare-fun x6246 () Int)
(declare-fun x4526 () Int)
(declare-fun x8865 () Bool)
(declare-fun x3222 () x112)
(declare-fun x8157 () Bool)
(declare-fun x7325 () Bool)
(declare-fun x7959 () Bool)
(declare-fun x1602 () Int)
(declare-fun x657 () Int)
(declare-fun x8088 () Bool)
(declare-fun x3797 () Bool)
(declare-fun x443 (x112) Int)
(declare-fun x3921 () Int)
(declare-fun x1808 () Int)
(declare-fun x756 () x112)
(declare-fun x6814 () Bool)
(declare-fun x8443 () Bool)
(declare-fun x6015 () Int)
(declare-fun x282 () Int)
(declare-fun x2549 () Bool)
(declare-fun x4141 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x4924 () Int)
(declare-fun x2995 () Bool)
(declare-fun x1888 () Int)
(declare-fun x6668 () Bool)
(declare-fun x6872 () Int)
(declare-fun x2021 () x112)
(declare-fun x8788 () Int)
(declare-fun x9050 () Bool)
(declare-fun x4875 () Bool)
(declare-fun x6698 () Bool)
(declare-fun x3956 () Int)
(declare-fun x4130 () Bool)
(declare-fun x4532 () Bool)
(declare-fun x92 () Int)
(declare-fun x8600 () Bool)
(declare-fun x5545 () Bool)
(declare-fun x8320 () Int)
(declare-fun x1937 () Int)
(declare-fun x5377 () Int)
(declare-fun x4697 () Bool)
(declare-fun x9133 () Int)
(declare-fun x906 () Bool)
(declare-fun x3343 () Bool)
(declare-fun x7551 () Bool)
(declare-fun x452 () Bool)
(declare-fun x324 () Bool)
(declare-fun x3223 () Int)
(declare-fun x6141 () Int)
(declare-fun x7361 () Bool)
(declare-fun x722 () Bool)
(declare-fun x8253 () Int)
(declare-fun x8904 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x3302 () Int)
(declare-fun x2675 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x365 () Bool)
(declare-fun x5857 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x5481 () Bool)
(declare-fun x5375 () Int)
(declare-fun x1688 () Bool)
(declare-fun x15 () Bool)
(declare-fun x3039 () Int)
(declare-fun x1887 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x300 () Bool)
(declare-fun x7672 () x112)
(declare-fun x5583 () Int)
(declare-fun x8675 () Bool)
(declare-fun x5232 () x112)
(declare-fun x532 () Bool)
(declare-fun x7169 () Bool)
(declare-fun x4454 () x112)
(declare-fun x2547 () Bool)
(declare-fun x8669 () Int)
(declare-fun x5888 () Int)
(declare-fun x8917 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x8155 () Bool)
(declare-fun x1468 () Int)
(declare-fun x7470 () Bool)
(declare-fun x7481 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x9030 () Bool)
(declare-fun x6918 () Bool)
(declare-fun x4984 () x112)
(declare-fun x4213 () Bool)
(declare-fun x8934 () Int)
(declare-fun x5343 () Bool)
(declare-fun x4911 () x112)
(declare-fun x3617 () Int)
(declare-fun x4153 () Int)
(declare-fun x6042 () Bool)
(declare-fun x7327 () Int)
(declare-fun x6333 () Int)
(declare-fun x7964 () Int)
(declare-fun x4743 () Bool)
(declare-fun x920 () Int)
(declare-fun x1322 () Int)
(declare-fun x2973 () Bool)
(declare-fun x7925 () Bool)
(declare-fun x7097 () Bool)
(declare-fun x7400 () Bool)
(declare-fun x4832 () Bool)
(declare-fun x1861 () Int)
(declare-fun x1425 () Bool)
(declare-fun x4641 () Bool)
(declare-fun x6849 () Int)
(declare-fun x4053 () x112)
(declare-fun x8510 () Int)
(declare-fun x3895 () Bool)
(declare-fun x3888 () Bool)
(declare-fun x7958 () Int)
(declare-fun x4658 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x7815 () Int)
(declare-fun x6870 () Bool)
(declare-fun x3629 () Int)
(declare-fun x8020 (x112) Int)
(declare-fun x4711 () Bool)
(declare-fun x563 (x112) Int)
(declare-fun x2548 () Int)
(declare-fun x250 () Bool)
(declare-fun x7583 () Bool)
(declare-fun x3634 () Int)
(declare-fun x8721 () Bool)
(declare-fun x5265 () Bool)
(declare-fun x8442 () Bool)
(declare-fun x3556 () Int)
(declare-fun x8548 () Int)
(declare-fun x1908 () Int)
(declare-fun x9042 () Int)
(declare-fun x5439 () Int)
(declare-fun x6482 () Int)
(declare-fun x1007 () Bool)
(declare-fun x5149 () Int)
(declare-fun x5816 () Int)
(declare-fun x5399 () Bool)
(declare-fun x9210 () Bool)
(declare-fun x2034 () Int)
(declare-fun x936 () x112)
(declare-fun x3755 () Bool)
(declare-fun x8693 () Bool)
(declare-fun x7922 () Int)
(declare-fun x4411 () Int)
(declare-fun x6151 () Bool)
(declare-fun x3610 () Bool)
(declare-fun x2930 () Bool)
(declare-fun x1153 () Int)
(declare-fun x497 () Int)
(declare-fun x6930 () Bool)
(declare-fun x6805 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x8690 () Int)
(declare-fun x3468 () Int)
(declare-fun x1855 () x112)
(declare-fun x8324 () Bool)
(declare-fun x6992 () Bool)
(declare-fun x5658 () Bool)
(declare-fun x5183 () Bool)
(declare-fun x6084 () Bool)
(declare-fun x4251 () Int)
(declare-fun x7834 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1764 () Int)
(declare-fun x5744 () Bool)
(declare-fun x5863 () x112)
(declare-fun x1930 () Int)
(declare-fun x4501 () Int)
(declare-fun x6737 () Bool)
(declare-fun x4970 () Bool)
(declare-fun x473 () Bool)
(declare-fun x2421 () Bool)
(declare-fun x2559 () Int)
(declare-fun x5338 () Int)
(declare-fun x434 () Int)
(declare-fun x8833 () Bool)
(declare-fun x2035 () Int)
(declare-fun x6170 () Bool)
(declare-fun x6090 () x112)
(declare-fun x4096 () x112)
(declare-fun x6603 () Bool)
(declare-fun x7810 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x3365 () Bool)
(declare-fun x5959 () Bool)
(declare-fun x9086 () Int)
(declare-fun x8192 () Bool)
(declare-fun x9004 () Int)
(declare-fun x1298 () Bool)
(declare-fun x7696 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x3319 () Bool)
(declare-fun x8161 (Int) Int)
(declare-fun x1585 () Bool)
(declare-fun x7781 () Bool)
(declare-fun x7187 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x7649 () Int)
(declare-fun x3713 () Int)
(declare-fun x2545 () Bool)
(declare-fun x751 () Int)
(declare-fun x199 () Int)
(declare-fun x1357 () Bool)
(declare-fun x512 () Int)
(declare-fun x8505 () Int)
(declare-fun x1725 () Bool)
(declare-fun x5129 () Bool)
(declare-fun x4802 () Int)
(declare-fun x5018 () x112)
(declare-fun x6116 () Int)
(declare-fun x9059 () Bool)
(declare-fun x8879 () Bool)
(declare-fun x4354 () x112)
(declare-fun x6591 () Int)
(declare-fun x8143 () Bool)
(declare-fun x6845 () Bool)
(declare-fun x4972 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x4864 () x112)
(declare-fun x7418 () Bool)
(declare-fun x8570 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x5433 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x6077 () Int)
(declare-fun x5290 () Int)
(declare-fun x5286 () Bool)
(declare-fun x8272 (Int) Int)
(declare-fun x6270 () Bool)
(declare-fun x9092 () Bool)
(declare-fun x5601 () Bool)
(declare-fun x5916 () Int)
(declare-fun x2108 () Bool)
(declare-fun x5334 () Int)
(declare-fun x3351 () Int)
(declare-fun x6964 () Bool)
(declare-fun x3013 () Bool)
(declare-fun x4383 () Bool)
(declare-fun x5461 () x112)
(declare-fun x1159 () Int)
(declare-fun x2923 () Bool)
(declare-fun x4468 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x1404 () x112)
(declare-fun x7480 () Int)
(declare-fun x7273 () Bool)
(declare-fun x156 () Int)
(declare-fun x4349 () Bool)
(declare-fun x2470 () x112)
(declare-fun x1670 () Int)
(declare-fun x5436 () Int)
(declare-fun x3269 () Int)
(declare-fun x8559 () Bool)
(declare-fun x557 () Bool)
(declare-fun x8698 () Bool)
(declare-fun x1486 () Int)
(declare-fun x4379 () Int)
(declare-fun x5841 () Bool)
(declare-fun x6573 () Bool)
(declare-fun x3708 () Int)
(declare-fun x8745 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x6657 () Bool)
(declare-fun x727 () Int)
(declare-fun x3411 () Bool)
(declare-fun x8562 () Bool)
(declare-fun x4677 () Bool)
(declare-fun x4129 () Int)
(declare-fun x7930 () Int)
(declare-fun x7869 () Bool)
(declare-fun x607 () Bool)
(declare-fun x1368 () Int)
(declare-fun x2518 () Int)
(declare-fun x3354 () Bool)
(declare-fun x7120 () x112)
(declare-fun x3031 () Bool)
(declare-fun x7848 () Bool)
(declare-fun x7793 () Bool)
(declare-fun x1467 () Int)
(declare-fun x3103 () Int)
(declare-fun x6273 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x2356 () Bool)
(declare-fun x7955 () x112)
(declare-fun x4437 () Bool)
(declare-fun x522 () Bool)
(declare-fun x5281 () x112)
(declare-fun x514 () Int)
(declare-fun x605 () Bool)
(declare-fun x2967 () Bool)
(declare-fun x3444 () Int)
(declare-fun x56 () Int)
(declare-fun x5588 () Bool)
(declare-fun x6129 () Int)
(declare-fun x37 () Bool)
(declare-fun x36 () Bool)
(declare-fun x420 () Int)
(declare-fun x5982 () Bool)
(declare-fun x5743 () Int)
(declare-fun x4509 () Int)
(declare-fun x1609 () Int)
(declare-fun x6597 () Bool)
(declare-fun x6867 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x6447 () Bool)
(declare-fun x5323 () Bool)
(declare-fun x7083 () Int)
(declare-fun x439 () Int)
(declare-fun x5892 () x112)
(declare-fun x863 () Int)
(declare-fun x9168 () Bool)
(declare-fun x5204 () Bool)
(declare-fun x2294 () Int)
(declare-fun x641 () Bool)
(declare-fun x6913 () Int)
(declare-fun x4115 () Bool)
(declare-fun x3216 () x112)
(declare-fun x5858 () Bool)
(declare-fun x1987 () x112)
(declare-fun x624 () Bool)
(declare-fun x2635 () Int)
(declare-fun x6177 () Bool)
(declare-fun x572 () Bool)
(declare-fun x8439 () Bool)
(declare-fun x6277 () Bool)
(declare-fun x6802 () Bool)
(declare-fun x6780 () Bool)
(declare-fun x5207 () Int)
(declare-fun x5561 () x112)
(declare-fun x3696 () Int)
(declare-fun x2827 () Bool)
(declare-fun x9127 () Int)
(declare-fun x1613 () Bool)
(declare-fun x5878 () Bool)
(declare-fun x2194 () Int)
(declare-fun x289 () Bool)
(declare-fun x35 () Bool)
(declare-fun x8406 () Bool)
(declare-fun x4009 () Bool)
(declare-fun x8246 () x112)
(declare-fun x6139 () Bool)
(declare-fun x2561 () Int)
(declare-fun x3372 () Bool)
(declare-fun x5829 () Bool)
(declare-fun x8495 () Bool)
(declare-fun x7745 () x112)
(declare-fun x6073 () x112)
(declare-fun x3846 () Int)
(declare-fun x4989 () Bool)
(declare-fun x637 () Int)
(declare-fun x5368 () Bool)
(declare-fun x4186 () Int)
(declare-fun x1795 () Int)
(declare-fun x3496 () x112)
(declare-fun x8393 () Int)
(declare-fun x2819 () Int)
(declare-fun x812 () Int)
(declare-fun x2504 (Int) Int)
(declare-fun x1787 () Int)
(declare-fun x6950 () Bool)
(declare-fun x4127 () Int)
(declare-fun x2446 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x2317 () Bool)
(declare-fun x7836 () Bool)
(declare-fun x8101 () Bool)
(declare-fun x8780 () Bool)
(declare-fun x3248 () Bool)
(declare-fun x8358 () Bool)
(declare-fun x8948 () Int)
(declare-fun x7734 (Int) Int)
(declare-fun x3698 () x112)
(declare-fun x533 () Bool)
(declare-fun x3338 () Bool)
(declare-fun x5786 () Bool)
(declare-fun x2782 () Bool)
(declare-fun x3630 () Int)
(declare-fun x895 () Bool)
(declare-fun x8123 () Bool)
(declare-fun x2989 () Bool)
(declare-fun x7324 () Bool)
(declare-fun x2159 () x112)
(declare-fun x6112 () Bool)
(declare-fun x1312 () Int)
(declare-fun x898 () x112)
(declare-fun x3162 () Int)
(declare-fun x6941 () Int)
(declare-fun x343 () Bool)
(declare-fun x5397 () Int)
(declare-fun x2540 () Int)
(declare-fun x8098 () Bool)
(declare-fun x295 () Int)
(declare-fun x5340 () Int)
(declare-fun x269 () Bool)
(declare-fun x3256 () Bool)
(declare-fun x2102 () x112)
(declare-fun x3899 () x112)
(declare-fun x6746 () Int)
(declare-fun x4688 () Bool)
(declare-fun x2136 () Bool)
(declare-fun x6689 () Bool)
(declare-fun x3805 () x112)
(declare-fun x7563 () Bool)
(declare-fun x6469 () Int)
(declare-fun x5735 () Int)
(declare-fun x5911 () Bool)
(declare-fun x701 () Bool)
(declare-fun x7567 () Int)
(declare-fun x4822 () Bool)
(declare-fun x1371 () Int)
(declare-fun x7408 () Bool)
(declare-fun x4149 () Int)
(declare-fun x247 () Bool)
(declare-fun x8046 () Int)
(declare-fun x367 () Int)
(declare-fun x5253 () Int)
(declare-fun x1281 () Bool)
(declare-fun x2683 () Bool)
(declare-fun x3078 () Int)
(declare-fun x4276 () Int)
(declare-fun x4392 () Bool)
(declare-fun x67 () Bool)
(declare-fun x1472 () Int)
(declare-fun x2350 () Bool)
(declare-fun x7023 () x112)
(declare-fun x9212 () x112)
(declare-fun x583 () x112)
(declare-fun x9002 () Bool)
(declare-fun x8955 () Bool)
(declare-fun x2402 () Int)
(declare-fun x3866 () Bool)
(declare-fun x2503 () x112)
(declare-fun x2582 () Bool)
(declare-fun x3787 () Int)
(declare-fun x7122 () Bool)
(declare-fun x8509 () x112)
(declare-fun x7380 () Bool)
(declare-fun x6639 () Int)
(declare-fun x4600 () Int)
(declare-fun x5275 () Bool)
(declare-fun x3397 () Bool)
(declare-fun x4469 () Int)
(declare-fun x3476 () Bool)
(declare-fun x4043 () Bool)
(declare-fun x8791 () Bool)
(declare-fun x4539 () Int)
(declare-fun x1119 () Bool)
(declare-fun x5424 () x112)
(declare-fun x6766 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x6113 () Bool)
(declare-fun x8156 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x8561 () Int)
(declare-fun x6126 () x112)
(declare-fun x4191 () Bool)
(declare-fun x5215 () Int)
(declare-fun x1395 () Int)
(declare-fun x4270 () Bool)
(declare-fun x4605 () Bool)
(declare-fun x2371 () Bool)
(declare-fun x3637 () Int)
(declare-fun x5596 () Bool)
(declare-fun x7092 () x112)
(declare-fun x7148 () Int)
(declare-fun x3007 () Int)
(declare-fun x4937 () Bool)
(declare-fun x2772 () Int)
(declare-fun x1676 () Int)
(declare-fun x1610 () Bool)
(declare-fun x3725 () Int)
(declare-fun x7913 () x112)
(declare-fun x6344 () Int)
(declare-fun x3517 () Bool)
(declare-fun x5677 () Int)
(declare-fun x5208 () Int)
(declare-fun x5855 () Int)
(declare-fun x9020 () Int)
(declare-fun x7686 () Bool)
(declare-fun x5592 () Bool)
(declare-fun x311 () x112)
(declare-fun x387 () Int)
(declare-fun x9155 () Int)
(declare-fun x51 () Int)
(declare-fun x2478 () Bool)
(declare-fun x4388 () Bool)
(declare-fun x7033 () Bool)
(declare-fun x6010 () Int)
(declare-fun x8885 () Bool)
(declare-fun x3085 () Bool)
(declare-fun x3759 () Int)
(declare-fun x888 () Int)
(declare-fun x13 () Bool)
(declare-fun x2727 () Bool)
(declare-fun x255 () Bool)
(declare-fun x3567 () Bool)
(declare-fun x7727 (x112) Int)
(declare-fun x149 () Bool)
(declare-fun x477 () Int)
(declare-fun x6107 () Bool)
(declare-fun x1689 () Int)
(declare-fun x356 () Bool)
(declare-fun x6380 () Bool)
(declare-fun x877 () Int)
(declare-fun x7670 () Bool)
(declare-fun x2202 () Int)
(declare-fun x5526 () Int)
(declare-fun x3092 () Bool)
(declare-fun x4751 () Bool)
(declare-fun x8622 () Int)
(declare-fun x889 () Int)
(declare-fun x9085 () Bool)
(declare-fun x5096 () Bool)
(declare-fun x3197 () Int)
(declare-fun x2894 () Int)
(declare-fun x3827 () x112)
(declare-fun x176 () Bool)
(declare-fun x1971 () x112)
(declare-fun x5776 () Bool)
(declare-fun x8999 () Int)
(declare-fun x7811 () Bool)
(declare-fun x6890 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x7498 () Bool)
(declare-fun x4666 () Bool)
(declare-fun x7804 () x112)
(declare-fun x5406 () Bool)
(declare-fun x6673 () Int)
(declare-fun x506 () x112)
(declare-fun x8611 () Bool)
(declare-fun x4612 () Int)
(declare-fun x2072 () Bool)
(declare-fun x2554 () Int)
(declare-fun x6175 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x2606 () Int)
(declare-fun x1964 () Int)
(declare-fun x5667 () Bool)
(declare-fun x8553 () Bool)
(declare-fun x6815 () Bool)
(declare-fun x3929 () Bool)
(declare-fun x5756 () Bool)
(declare-fun x4780 () Int)
(declare-fun x2325 () Int)
(declare-fun x2284 () x112)
(declare-fun x3036 () Bool)
(declare-fun x1982 () Int)
(declare-fun x5922 () Bool)
(declare-fun x4060 () Int)
(declare-fun x153 () Bool)
(declare-fun x2231 () Int)
(declare-fun x2816 () Bool)
(declare-fun x5534 () Bool)
(declare-fun x5695 () Int)
(declare-fun x9120 () x112)
(declare-fun x8167 () Bool)
(declare-fun x8628 () Int)
(declare-fun x8222 () Bool)
(declare-fun x6386 () Bool)
(declare-fun x5300 () Bool)
(declare-fun x120 () Bool)
(declare-fun x600 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x4700 () Int)
(declare-fun x6747 () Bool)
(declare-fun x322 () Bool)
(declare-fun x136 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x8921 () x112)
(declare-fun x2058 () Bool)
(declare-fun x7918 () Bool)
(declare-fun x5038 () Bool)
(declare-fun x5771 () Int)
(declare-fun x5997 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x7150 () Bool)
(declare-fun x2795 () Int)
(declare-fun x3373 (x112) Int)
(declare-fun x2709 () Bool)
(declare-fun x7232 () Bool)
(declare-fun x7336 () Bool)
(declare-fun x7619 () Bool)
(declare-fun x5736 () Bool)
(declare-fun x6517 () x112)
(declare-fun x1305 () Bool)
(declare-fun x4877 () Bool)
(declare-fun x7604 () Int)
(declare-fun x5193 () Int)
(declare-fun x7305 (Int) Int)
(declare-fun x2810 () x112)
(declare-fun x1353 () Int)
(declare-fun x9106 () Bool)
(declare-fun x3645 () Bool)
(declare-fun x7683 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x8652 () Int)
(declare-fun x8964 () Bool)
(declare-fun x3679 () Bool)
(declare-fun x7070 () Int)
(declare-fun x5671 () Int)
(declare-fun x1598 () x112)
(declare-fun x3189 () Int)
(declare-fun x2418 () Bool)
(declare-fun x8823 () Bool)
(declare-fun x3436 () Int)
(declare-fun x529 () Int)
(declare-fun x82 () Bool)
(declare-fun x530 () Bool)
(declare-fun x423 () Int)
(declare-fun x8426 () Int)
(declare-fun x1825 () Bool)
(declare-fun x1543 () Int)
(declare-fun x748 () Bool)
(declare-fun x5314 () Int)
(declare-fun x4640 () Bool)
(declare-fun x8569 () Int)
(declare-fun x3477 () Int)
(declare-fun x3710 () Bool)
(declare-fun x508 () Bool)
(declare-fun x2777 () Int)
(declare-fun x6353 () Bool)
(declare-fun x178 () Bool)
(declare-fun x7838 () Int)
(declare-fun x7041 () Bool)
(declare-fun x2945 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x974 () Int)
(declare-fun x2700 () Int)
(declare-fun x7540 () Bool)
(declare-fun x8922 () Int)
(declare-fun x4190 () Bool)
(declare-fun x8216 (x112) Int)
(declare-fun x9191 () Int)
(declare-fun x2643 () Bool)
(declare-fun x5741 () Bool)
(declare-fun x4296 () Int)
(declare-fun x4316 () Int)
(declare-fun x4718 () x112)
(declare-fun x374 () Bool)
(declare-fun x1961 () Int)
(declare-fun x7201 () Int)
(declare-fun x8723 () Bool)
(declare-fun x7527 () Bool)
(declare-fun x3042 () Bool)
(declare-fun x726 () Bool)
(declare-fun x76 () Int)
(declare-fun x7703 () x112)
(declare-fun x4638 () Bool)
(declare-fun x7506 () Bool)
(declare-fun x5970 () Int)
(declare-fun x2976 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x7632 () Bool)
(declare-fun x4427 () Int)
(declare-fun x6295 () Int)
(declare-fun x5812 () Bool)
(declare-fun x5456 () Int)
(declare-fun x4417 () Int)
(declare-fun x3320 () Bool)
(declare-fun x5430 () Bool)
(declare-fun x7753 () x112)
(declare-fun x8540 () Int)
(declare-fun x7718 () Bool)
(declare-fun x555 () Bool)
(declare-fun x6831 () Bool)
(declare-fun x7892 () Bool)
(declare-fun x4872 () Bool)
(declare-fun x4198 () Bool)
(declare-fun x7299 () Bool)
(declare-fun x7638 () Bool)
(declare-fun x495 () Int)
(declare-fun x7735 () Bool)
(declare-fun x7006 () Int)
(declare-fun x111 () x112)
(declare-fun x8898 () Int)
(declare-fun x6209 () Bool)
(declare-fun x8151 () Bool)
(declare-fun x6389 () x112)
(declare-fun x7258 () Bool)
(declare-fun x2751 () Int)
(declare-fun x5087 () Bool)
(declare-fun x1360 () Int)
(declare-fun x6083 () x112)
(declare-fun x3299 () Int)
(declare-fun x7281 () x112)
(declare-fun x8383 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x3124 () Bool)
(declare-fun x7301 () Bool)
(declare-fun x4321 () Int)
(declare-fun x5887 () Int)
(declare-fun x1698 () Bool)
(declare-fun x578 () Int)
(declare-fun x3412 () x112)
(declare-fun x4307 () Bool)
(declare-fun x7030 () Int)
(declare-fun x9000 () Bool)
(declare-fun x8387 () Bool)
(declare-fun x7989 () Bool)
(declare-fun x5402 () Bool)
(declare-fun x1333 () Int)
(declare-fun x6611 () Bool)
(declare-fun x5753 () Bool)
(declare-fun x4201 () Int)
(declare-fun x3915 () Int)
(declare-fun x8259 () Bool)
(declare-fun x5066 () Int)
(declare-fun x6204 () x112)
(declare-fun x3048 () Int)
(declare-fun x3091 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x6095 () Bool)
(declare-fun x6578 () Bool)
(declare-fun x1024 () Int)
(declare-fun x4369 () Bool)
(declare-fun x7403 () Int)
(declare-fun x4967 () Bool)
(declare-fun x5967 () x112)
(declare-fun x2564 () Bool)
(declare-fun x4921 (Int) Int)
(declare-fun x4430 () Int)
(declare-fun x5559 () Int)
(declare-fun x4842 () Bool)
(declare-fun x5073 () Int)
(declare-fun x5023 () Bool)
(declare-fun x3988 () Int)
(declare-fun x3333 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x5873 () Int)
(declare-fun x8609 () x112)
(declare-fun x4181 () Bool)
(declare-fun x614 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x1744 () Int)
(declare-fun x1088 () Int)
(declare-fun x129 () Int)
(declare-fun x1431 () x112)
(declare-fun x5318 () Bool)
(declare-fun x5651 () Bool)
(declare-fun x7951 () Bool)
(declare-fun x5025 () Bool)
(declare-fun x8441 () x112)
(declare-fun x7474 () x112)
(declare-fun x4639 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x3059 () x112)
(declare-fun x8138 () Int)
(declare-fun x5642 () x112)
(declare-fun x8744 () x112)
(declare-fun x5714 () x112)
(declare-fun x7654 () Bool)
(declare-fun x3795 () Bool)
(declare-fun x9112 () Bool)
(declare-fun x5925 () Bool)
(declare-fun x5626 () Int)
(declare-fun x1556 () Int)
(declare-fun x5483 () Bool)
(declare-fun x8977 () Int)
(declare-fun x6729 () Bool)
(declare-fun x990 () Int)
(declare-fun x7230 () Int)
(declare-fun x7552 () x112)
(declare-fun x4726 (Int) Int)
(declare-fun x3376 () Bool)
(declare-fun x3635 () Bool)
(declare-fun x4505 () Bool)
(declare-fun x4644 () Int)
(declare-fun x1606 () Int)
(declare-fun x316 () Int)
(declare-fun x58 () Bool)
(declare-fun x681 () Bool)
(declare-fun x5672 () Int)
(declare-fun x4131 () Bool)
(declare-fun x6993 () Int)
(declare-fun x5881 () Bool)
(declare-fun x9165 () Bool)
(declare-fun x5530 () Bool)
(declare-fun x2585 () Int)
(declare-fun x3277 (Int) Int)
(declare-fun x5421 () Bool)
(declare-fun x8310 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x8093 () x112)
(declare-fun x5782 () Bool)
(declare-fun x6505 () Int)
(declare-fun x3942 () Bool)
(declare-fun x7591 () Bool)
(declare-fun x7728 () Int)
(declare-fun x4642 () Bool)
(declare-fun x511 () x112)
(declare-fun x1233 () Bool)
(declare-fun x3185 () x112)
(declare-fun x9009 () Bool)
(declare-fun x8881 () Bool)
(declare-fun x3249 () Int)
(declare-fun x6365 () Int)
(declare-fun x2423 () Bool)
(declare-fun x5991 () x112)
(declare-fun x6420 () Int)
(declare-fun x986 () Int)
(declare-fun x8229 () Int)
(declare-fun x1474 () Int)
(declare-fun x5118 () Bool)
(declare-fun x8279 () Bool)
(declare-fun x842 () Bool)
(declare-fun x5725 () Int)
(declare-fun x8339 () Bool)
(declare-fun x6359 () Bool)
(declare-fun x4900 () Bool)
(declare-fun x4659 () Bool)
(declare-fun x4556 () Int)
(declare-fun x4373 () Bool)
(declare-fun x223 () Int)
(declare-fun x7536 () Bool)
(declare-fun x5089 () Int)
(declare-fun x1521 () x112)
(declare-fun x3370 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x8715 () Int)
(declare-fun x1641 () Bool)
(declare-fun x1311 () Int)
(declare-fun x4545 () Bool)
(declare-fun x7374 () Int)
(declare-fun x4046 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x1251 () Int)
(declare-fun x8047 () Int)
(declare-fun x8781 () Int)
(declare-fun x1060 () Bool)
(declare-fun x7532 () Bool)
(declare-fun x3044 () Int)
(declare-fun x6741 () Bool)
(declare-fun x4633 () Bool)
(declare-fun x5685 () Bool)
(declare-fun x7024 () Bool)
(declare-fun x8584 () Int)
(declare-fun x527 () Int)
(declare-fun x7631 () Int)
(declare-fun x5929 () Int)
(declare-fun x2383 () Bool)
(declare-fun x8714 () Bool)
(declare-fun x3098 () Int)
(declare-fun x3527 () Bool)
(declare-fun x7334 () Int)
(declare-fun x5299 () Int)
(declare-fun x4776 () Int)
(declare-fun x3442 () Bool)
(declare-fun x861 () Int)
(declare-fun x3999 () x112)
(declare-fun x7729 () Bool)
(declare-fun x7559 () Bool)
(declare-fun x4956 () Bool)
(declare-fun x1914 () Int)
(declare-fun x2472 () Int)
(declare-fun x632 () Int)
(declare-fun x510 () Int)
(declare-fun x6027 () Int)
(declare-fun x6072 () Int)
(declare-fun x3215 () Bool)
(declare-fun x1452 () Int)
(declare-fun x6220 () Int)
(declare-fun x5485 () Bool)
(declare-fun x4729 () Bool)
(declare-fun x2918 () Int)
(declare-fun x7054 () Int)
(declare-fun x369 () Int)
(declare-fun x4387 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x7066 (Int) Int)
(declare-fun x6278 () Int)
(declare-fun x2456 () Bool)
(declare-fun x691 () Int)
(declare-fun x7732 () x112)
(declare-fun x1677 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x7322 () x112)
(declare-fun x5609 () Int)
(declare-fun x5497 () Bool)
(declare-fun x7440 () x112)
(declare-fun x1487 () Bool)
(declare-fun x6110 () x112)
(declare-fun x5378 () Bool)
(declare-fun x5372 () Int)
(declare-fun x4155 () Bool)
(declare-fun x4055 () Int)
(declare-fun x4194 (Int) Int)
(declare-fun x7531 () Int)
(declare-fun x7624 () Int)
(declare-fun x5177 () Bool)
(declare-fun x3659 () Int)
(declare-fun x2087 () Int)
(declare-fun x5962 () Bool)
(declare-fun x857 () x112)
(declare-fun x3673 () Bool)
(declare-fun x4470 () Int)
(declare-fun x903 () Int)
(declare-fun x8890 () Bool)
(declare-fun x1004 () Int)
(declare-fun x6619 () Int)
(declare-fun x8017 () x112)
(declare-fun x743 () x112)
(declare-fun x4146 () Int)
(declare-fun x1803 () x112)
(declare-fun x6656 () Int)
(declare-fun x6748 (Int Int) Int)
(declare-fun x9151 () Int)
(declare-fun x6193 () Bool)
(declare-fun x6584 () Int)
(declare-fun x7269 () Int)
(declare-fun x6055 () Bool)
(declare-fun x1869 () Int)
(declare-fun x8539 () Bool)
(declare-fun x8264 () Int)
(declare-fun x7080 () Bool)
(declare-fun x7072 () Int)
(declare-fun x9172 () Bool)
(declare-fun x2485 () Int)
(declare-fun x2740 () Int)
(declare-fun x372 () Int)
(declare-fun x6138 () Int)
(declare-fun x7533 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x3845 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x2941 () Int)
(declare-fun x1303 () Int)
(declare-fun x6225 () Bool)
(declare-fun x5206 () Int)
(declare-fun x4124 () Bool)
(declare-fun x6168 (x112) Int)
(declare-fun x1420 () Int)
(declare-fun x8456 () Int)
(declare-fun x5702 () Bool)
(declare-fun x4800 () Bool)
(declare-fun x6312 () x112)
(declare-fun x4375 () Bool)
(declare-fun x4154 () x112)
(declare-fun x2457 () Bool)
(declare-fun x5683 () Int)
(declare-fun x878 () Int)
(declare-fun x3009 () Int)
(declare-fun x402 () Bool)
(declare-fun x4112 () x112)
(declare-fun x3174 () Bool)
(declare-fun x8270 () Bool)
(declare-fun x3877 () x112)
(declare-fun x7203 () Bool)
(declare-fun x2785 () Bool)
(declare-fun x4 () Bool)
(declare-fun x263 () Bool)
(declare-fun x5278 () Bool)
(declare-fun x2842 () Bool)
(declare-fun x5071 () Bool)
(declare-fun x4721 () Int)
(declare-fun x2925 () Bool)
(declare-fun x5752 () Bool)
(declare-fun x6660 () Bool)
(declare-fun x484 () Bool)
(declare-fun x761 () Int)
(declare-fun x5144 () Int)
(declare-fun x3572 () Int)
(declare-fun x7172 () Bool)
(declare-fun x4423 () x112)
(declare-fun x5961 () Bool)
(declare-fun x7173 () Bool)
(declare-fun x4513 () Bool)
(declare-fun x3830 () Bool)
(declare-fun x615 () Bool)
(declare-fun x5818 () Int)
(declare-fun x1019 () Int)
(declare-fun x7333 () Bool)
(declare-fun x6286 () Int)
(declare-fun x2848 () Bool)
(declare-fun x7016 () Bool)
(declare-fun x3001 () Bool)
(declare-fun x2722 () Int)
(declare-fun x3508 () Bool)
(declare-fun x2068 () Int)
(declare-fun x875 () Bool)
(declare-fun x8182 () x112)
(declare-fun x3472 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x6551 () Bool)
(declare-fun x4412 () Int)
(declare-fun x4238 () Int)
(declare-fun x5059 () Bool)
(declare-fun x7571 () Int)
(declare-fun x6622 () Int)
(declare-fun x5068 () Bool)
(declare-fun x6293 () Int)
(declare-fun x7311 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x645 () Int)
(declare-fun x3717 () Int)
(declare-fun x1570 () Int)
(declare-fun x6048 () Int)
(declare-fun x1903 () Int)
(declare-fun x7788 () x112)
(declare-fun x8679 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x2942 () Bool)
(declare-fun x2985 () Bool)
(declare-fun x6855 () Bool)
(declare-fun x911 () Int)
(declare-fun x8480 () Bool)
(declare-fun x2473 () Int)
(declare-fun x5185 () Bool)
(declare-fun x2163 () Int)
(declare-fun x9199 () Int)
(declare-fun x5977 () x112)
(declare-fun x8483 () Int)
(declare-fun x2849 () Int)
(declare-fun x1097 () x112)
(declare-fun x6695 () Int)
(declare-fun x9136 () Int)
(declare-fun x1822 () Bool)
(declare-fun x4045 () Bool)
(declare-fun x7707 (x112) Int)
(declare-fun x4061 () Bool)
(declare-fun x79 () Bool)
(declare-fun x1277 () Int)
(declare-fun x8140 () Bool)
(declare-fun x8592 () Int)
(declare-fun x9196 () Bool)
(declare-fun x7001 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x7949 () Bool)
(declare-fun x182 () Int)
(declare-fun x6214 () Int)
(declare-fun x284 () Int)
(declare-fun x1325 () Bool)
(declare-fun x8368 () Int)
(declare-fun x4477 () Int)
(declare-fun x3990 () Int)
(declare-fun x6106 () Bool)
(declare-fun x6565 () Int)
(declare-fun x6053 () Bool)
(declare-fun x4065 () Bool)
(declare-fun x6378 () Bool)
(declare-fun x871 () x112)
(declare-fun x1952 () Int)
(declare-fun x3966 () Bool)
(declare-fun x3366 () Int)
(declare-fun x1270 () Int)
(declare-fun x5360 () Int)
(declare-fun x306 () x112)
(declare-fun x8411 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x5827 () Int)
(declare-fun x5413 () Int)
(declare-fun x395 () Int)
(declare-fun x8810 () Bool)
(declare-fun x4378 () Int)
(declare-fun x6228 () Bool)
(declare-fun x481 () x112)
(declare-fun x4960 () Bool)
(declare-fun x4746 () Bool)
(declare-fun x5409 () Bool)
(declare-fun x5524 () Bool)
(declare-fun x6830 () Int)
(declare-fun x2955 () Bool)
(declare-fun x8215 () Int)
(declare-fun x8923 () Bool)
(declare-fun x3791 () Int)
(declare-fun x1696 () Int)
(declare-fun x1126 () Int)
(declare-fun x9179 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x5122 (Int) Int)
(declare-fun x6176 () Bool)
(declare-fun x504 () Int)
(declare-fun x1293 () Bool)
(declare-fun x587 () Bool)
(declare-fun x3622 () Bool)
(declare-fun x62 () Int)
(declare-fun x3618 () Bool)
(declare-fun x8042 () Bool)
(declare-fun x6701 () Bool)
(declare-fun x370 () Bool)
(declare-fun x5112 () Bool)
(declare-fun x5447 () Bool)
(declare-fun x2742 () Bool)
(declare-fun x8032 () Bool)
(declare-fun x4003 () x112)
(declare-fun x5851 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x7219 () Int)
(declare-fun x5986 () Int)
(declare-fun x2951 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x4497 () Bool)
(declare-fun x8288 () x112)
(declare-fun x2752 () Int)
(declare-fun x2439 () Int)
(declare-fun x5371 () Int)
(declare-fun x4831 () x112)
(declare-fun x3066 () Bool)
(declare-fun x7208 () Bool)
(declare-fun x7260 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x5200 () Int)
(declare-fun x5906 () Bool)
(declare-fun x3005 () Int)
(declare-fun x5811 () Bool)
(declare-fun x7648 () x112)
(declare-fun x2312 () Int)
(declare-fun x4778 () Bool)
(declare-fun x8002 () Int)
(declare-fun x3735 () Bool)
(declare-fun x4133 () Bool)
(declare-fun x8033 () Int)
(declare-fun x3734 () Int)
(declare-fun x2703 () Int)
(declare-fun x5166 () Int)
(declare-fun x8900 () Int)
(declare-fun x4389 () Bool)
(declare-fun x6252 () Bool)
(declare-fun x5041 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x5130 () Bool)
(declare-fun x6602 () Bool)
(declare-fun x9066 () Bool)
(declare-fun x776 () Int)
(declare-fun x6338 () Bool)
(declare-fun x5308 () Int)
(declare-fun x1112 () Int)
(declare-fun x454 () Int)
(declare-fun x6108 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x4788 () Bool)
(declare-fun x4707 () Bool)
(declare-fun x8248 () Bool)
(declare-fun x4635 () Bool)
(declare-fun x3970 () Int)
(declare-fun x1480 () Bool)
(declare-fun x3563 () Int)
(declare-fun x6256 () Bool)
(declare-fun x3704 () Int)
(declare-fun x3948 () Int)
(declare-fun x8297 () Int)
(declare-fun x5554 () Bool)
(declare-fun x7183 () x112)
(declare-fun x3716 () Bool)
(declare-fun x61 () Int)
(declare-fun x353 () Int)
(declare-fun x7530 () Bool)
(declare-fun x5021 () Bool)
(declare-fun x276 () Bool)
(declare-fun x4648 () Int)
(declare-fun x687 () Bool)
(declare-fun x7572 () x112)
(declare-fun x4838 () Bool)
(declare-fun x3785 () Bool)
(declare-fun x7639 () Int)
(declare-fun x9202 () Int)
(declare-fun x6391 () Int)
(declare-fun x216 () Bool)
(declare-fun x8124 () Bool)
(declare-fun x4346 () x112)
(declare-fun x8563 () Int)
(declare-fun x7216 () Bool)
(declare-fun x8706 () x112)
(declare-fun x7664 () Bool)
(declare-fun x3303 () x112)
(declare-fun x6274 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x3375 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x4279 () Int)
(declare-fun x5992 () Int)
(declare-fun x6702 () Int)
(declare-fun x5080 () Bool)
(declare-fun x5999 () Int)
(declare-fun x2887 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x6982 () Int)
(declare-fun x4458 () Int)
(declare-fun x2731 () Int)
(declare-fun x8538 () Bool)
(declare-fun x8710 () Bool)
(declare-fun x7754 () Bool)
(declare-fun x3986 () Bool)
(declare-fun x6535 () Int)
(declare-fun x7916 () Int)
(declare-fun x116 () Int)
(declare-fun x1577 () Bool)
(declare-fun x684 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x7401 () Bool)
(declare-fun x5901 () Bool)
(declare-fun x838 () Bool)
(declare-fun x8826 () x112)
(declare-fun x7366 () x112)
(declare-fun x9208 () Bool)
(declare-fun x7343 () x112)
(declare-fun x7274 () Int)
(declare-fun x7915 () Bool)
(declare-fun x2078 () x112)
(declare-fun x2812 (Int Int) Int)
(declare-fun x3532 () Int)
(declare-fun x3140 () Bool)
(declare-fun x2739 () Int)
(declare-fun x2959 () Bool)
(declare-fun x3243 () Bool)
(declare-fun x3702 () Int)
(declare-fun x1499 () Int)
(declare-fun x305 () Int)
(declare-fun x2043 () Bool)
(declare-fun x9089 () Bool)
(declare-fun x2167 () x112)
(declare-fun x6550 (x112) Int)
(declare-fun x8293 (Int) Int)
(declare-fun x528 () Int)
(declare-fun x1085 () Int)
(declare-fun x7828 () Bool)
(declare-fun x5754 () Bool)
(declare-fun x6402 () Int)
(declare-fun x3681 () Bool)
(declare-fun x8265 () Int)
(declare-fun x1934 () Bool)
(declare-fun x8427 () Int)
(declare-fun x545 () Int)
(declare-fun x4588 () Int)
(declare-fun x4929 () Bool)
(declare-fun x6147 () x112)
(declare-fun x4757 () Bool)
(declare-fun x5036 () Int)
(declare-fun x7671 () Bool)
(declare-fun x1072 () Int)
(declare-fun x6962 () Bool)
(declare-fun x3379 () Int)
(declare-fun x8402 () Int)
(declare-fun x3407 () Bool)
(declare-fun x8546 () Bool)
(declare-fun x4895 () x112)
(declare-fun x4886 () Bool)
(declare-fun x5042 () Bool)
(declare-fun x702 () Bool)
(declare-fun x8853 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x2633 () Int)
(declare-fun x8397 () Int)
(declare-fun x2117 () Bool)
(declare-fun x4867 () x112)
(declare-fun x19 () Int)
(declare-fun x3745 () x112)
(declare-fun x2833 () Bool)
(declare-fun x6999 () Int)
(declare-fun x7658 () Bool)
(declare-fun x7847 () Bool)
(declare-fun x3212 () Bool)
(declare-fun x346 () Bool)
(declare-fun x2149 () Bool)
(declare-fun x7164 () Int)
(declare-fun x3525 () Bool)
(declare-fun x7045 () Bool)
(declare-fun x145 () x112)
(declare-fun x6088 () Int)
(declare-fun x873 () Int)
(declare-fun x7448 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x731 () Int)
(declare-fun x6753 () Bool)
(declare-fun x1960 () Int)
(declare-fun x3843 () Bool)
(declare-fun x5994 () Bool)
(declare-fun x7469 () x112)
(declare-fun x8894 () Int)
(declare-fun x586 () Int)
(declare-fun x3120 () Bool)
(declare-fun x4602 () Int)
(declare-fun x4094 () Bool)
(declare-fun x787 () Bool)
(declare-fun x7668 () Int)
(declare-fun x7243 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x4684 () Int)
(declare-fun x8487 (Int) Int)
(declare-fun x5019 () Bool)
(declare-fun x8863 () Int)
(declare-fun x7051 () Bool)
(declare-fun x783 () x112)
(declare-fun x9094 () Int)
(declare-fun x7162 () Bool)
(declare-fun x6301 () Int)
(declare-fun x3807 () Int)
(declare-fun x794 () Bool)
(declare-fun x6490 (Int Int) Int)
(declare-fun x475 () Bool)
(declare-fun x7377 () Int)
(declare-fun x6908 () Bool)
(declare-fun x6659 () Bool)
(declare-fun x8195 () x112)
(declare-fun x4793 (Int) Int)
(declare-fun x6650 (Int) Int)
(declare-fun x3244 () Bool)
(declare-fun x3526 () Bool)
(declare-fun x3789 () Bool)
(declare-fun x8713 () Int)
(declare-fun x1813 () Bool)
(declare-fun x207 () Bool)
(declare-fun x6285 () Bool)
(declare-fun x7789 () Int)
(declare-fun x3134 () Bool)
(declare-fun x5064 () x112)
(declare-fun x7786 () Bool)
(declare-fun x2320 () Int)
(declare-fun x1941 (Int) Int)
(declare-fun x6733 () Bool)
(declare-fun x2094 () Int)
(declare-fun x3511 () x112)
(declare-fun x2724 () Bool)
(declare-fun x6161 () Int)
(declare-fun x3894 () Int)
(declare-fun x1608 () Int)
(declare-fun x8734 () Bool)
(declare-fun x3272 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x2268 () Bool)
(declare-fun x7417 () Bool)
(declare-fun x2001 () Int)
(declare-fun x2789 () Bool)
(declare-fun x285 () Int)
(declare-fun x5167 () Bool)
(declare-fun x7443 () Bool)
(declare-fun x4660 () Int)
(declare-fun x242 () Bool)
(declare-fun x6892 () Bool)
(declare-fun x5787 () Bool)
(declare-fun x1503 () Int)
(declare-fun x8437 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x8966 () Int)
(declare-fun x327 () Bool)
(declare-fun x9046 () Int)
(declare-fun x7562 () Int)
(declare-fun x9186 () Bool)
(declare-fun x7088 () x112)
(declare-fun x8127 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x3588 () Bool)
(declare-fun x7363 () x112)
(declare-fun x8801 () Bool)
(declare-fun x7628 () Bool)
(declare-fun x2855 () x112)
(declare-fun x2647 () Bool)
(declare-fun x7152 () Bool)
(declare-fun x7079 () x112)
(declare-fun x6624 () Int)
(declare-fun x6405 () x112)
(declare-fun x3982 () Bool)
(declare-fun x6289 () Int)
(declare-fun x602 () x112)
(declare-fun x1685 () x112)
(declare-fun x5719 () x112)
(declare-fun x1264 () x112)
(declare-fun x4963 () Int)
(declare-fun x6461 () Int)
(declare-fun x874 () Bool)
(declare-fun x4210 () x112)
(declare-fun x8164 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x716 () Bool)
(declare-fun x3997 () Bool)
(declare-fun x6571 () x112)
(declare-fun x7052 () Int)
(declare-fun x3594 () Int)
(declare-fun x5035 () Int)
(declare-fun x6981 () Bool)
(declare-fun x7666 () Int)
(declare-fun x1679 () Int)
(declare-fun x5120 () x112)
(declare-fun x6221 () Int)
(declare-fun x3585 () Bool)
(declare-fun x1653 () x112)
(declare-fun x312 () Int)
(declare-fun x3861 () Bool)
(declare-fun x4851 () Int)
(declare-fun x7593 () Bool)
(declare-fun x7977 () x112)
(declare-fun x8564 () Int)
(declare-fun x172 () Int)
(declare-fun x8925 () Int)
(declare-fun x7284 () Int)
(declare-fun x3024 () x112)
(declare-fun x8837 () Bool)
(declare-fun x2997 () Int)
(declare-fun x5182 () Bool)
(declare-fun x2897 () Int)
(declare-fun x4085 () Bool)
(declare-fun x7849 () x112)
(declare-fun x5860 () Bool)
(declare-fun x83 () Bool)
(declare-fun x203 () Int)
(declare-fun x498 () x112)
(declare-fun x3723 () Int)
(declare-fun x6423 () Bool)
(declare-fun x6377 () x112)
(declare-fun x5711 () Int)
(declare-fun x1443 () Int)
(declare-fun x6253 () Int)
(declare-fun x5720 () Int)
(declare-fun x8359 () Bool)
(declare-fun x4231 () Bool)
(declare-fun x6825 () Int)
(declare-fun x2051 () Bool)
(declare-fun x1895 () Int)
(declare-fun x5492 () Bool)
(declare-fun x3631 () Int)
(declare-fun x7115 () Bool)
(declare-fun x6496 () Bool)
(declare-fun x4102 () Int)
(declare-fun x40 () Int)
(declare-fun x9190 () x112)
(declare-fun x2746 () Int)
(declare-fun x7412 () Bool)
(declare-fun x7758 () Int)
(declare-fun x7411 () Int)
(declare-fun x3196 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x8274 () Bool)
(declare-fun x6986 () Bool)
(declare-fun x8811 () Int)
(declare-fun x3255 () Bool)
(declare-fun x5007 () Bool)
(declare-fun x64 () Bool)
(declare-fun x7461 () Int)
(declare-fun x4139 () Bool)
(declare-fun x5789 () Bool)
(declare-fun x4952 () Int)
(declare-fun x4207 () Bool)
(declare-fun x5813 () Bool)
(declare-fun x9083 () Int)
(declare-fun x4490 () Int)
(declare-fun x4990 () Int)
(declare-fun x5292 () x112)
(declare-fun x2340 () Int)
(declare-fun x2230 () Int)
(declare-fun x2224 () Bool)
(declare-fun x9164 () Bool)
(declare-fun x6518 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x6098 () Int)
(declare-fun x5202 () Bool)
(declare-fun x688 () Int)
(declare-fun x1379 () Bool)
(declare-fun x2400 () x112)
(declare-fun x1372 () Bool)
(declare-fun x3834 () Int)
(declare-fun x5810 () Bool)
(declare-fun x7185 () Int)
(declare-fun x5751 () Bool)
(declare-fun x7523 () Bool)
(declare-fun x2744 () Bool)
(declare-fun x7453 () Bool)
(declare-fun x8942 () Bool)
(declare-fun x7778 () Int)
(declare-fun x8008 () Bool)
(declare-fun x3812 () Bool)
(declare-fun x595 () Bool)
(declare-fun x7676 () Bool)
(declare-fun x436 () Int)
(declare-fun x4601 () Bool)
(declare-fun x2289 () Int)
(declare-fun x241 () x112)
(declare-fun x364 () Int)
(declare-fun x1310 () Int)
(declare-fun x834 () Bool)
(declare-fun x2850 () Int)
(declare-fun x7371 () Int)
(declare-fun x4071 () Bool)
(declare-fun x5216 () Bool)
(declare-fun x404 () Bool)
(declare-fun x7970 () Bool)
(declare-fun x6589 () x112)
(declare-fun x3369 () Int)
(declare-fun x4113 () Bool)
(declare-fun x8990 () Int)
(declare-fun x2147 () Bool)
(declare-fun x7359 () Int)
(declare-fun x4453 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x1053 () Int)
(declare-fun x1458 () x112)
(declare-fun x1380 () Bool)
(declare-fun x8271 () Int)
(declare-fun x643 () Int)
(declare-fun x6190 () Int)
(declare-fun x6463 () Int)
(declare-fun x4328 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x6297 () Int)
(declare-fun x2450 () Bool)
(declare-fun x9098 () Bool)
(declare-fun x5569 () Bool)
(declare-fun x4215 () Bool)
(declare-fun x7813 () Bool)
(declare-fun x6330 () Bool)
(declare-fun x6309 () x112)
(declare-fun x4569 () Bool)
(declare-fun x1801 () Bool)
(declare-fun x9093 () Bool)
(declare-fun x919 () Bool)
(declare-fun x4368 () Bool)
(declare-fun x4828 () Bool)
(declare-fun x5484 () Bool)
(declare-fun x799 () Int)
(declare-fun x5070 () Int)
(declare-fun x4348 () Int)
(declare-fun x2745 () Int)
(declare-fun x3972 () Int)
(declare-fun x2915 () Bool)
(declare-fun x5001 () x112)
(declare-fun x1810 () Int)
(declare-fun x2870 () Int)
(declare-fun x3141 () Int)
(declare-fun x937 () Bool)
(declare-fun x3362 () x112)
(declare-fun x5026 () Bool)
(declare-fun x3811 () Bool)
(declare-fun x2328 () Bool)
(declare-fun x4048 () x112)
(declare-fun x2301 () Bool)
(declare-fun x3268 () Bool)
(declare-fun x7344 () Int)
(declare-fun x4676 () Bool)
(declare-fun x7667 () Bool)
(declare-fun x5388 () Bool)
(declare-fun x8282 () Int)
(declare-fun x8654 () Int)
(declare-fun x2192 () Bool)
(declare-fun x3401 () Bool)
(declare-fun x2988 () Bool)
(declare-fun x3918 () x112)
(declare-fun x7935 () Int)
(declare-fun x5032 () Int)
(declare-fun x8067 () Bool)
(declare-fun x8915 () Bool)
(declare-fun x7723 () Bool)
(declare-fun x2965 () Int)
(declare-fun x3037 () Bool)
(declare-fun x549 () Int)
(declare-fun x6479 () Bool)
(declare-fun x5128 () Bool)
(declare-fun x8094 () Bool)
(declare-fun x6649 () Bool)
(declare-fun x6515 () Int)
(declare-fun x6085 () Bool)
(declare-fun x2811 () Bool)
(declare-fun x6529 () Int)
(declare-fun x579 () Int)
(declare-fun x6921 () Int)
(declare-fun x7384 () Bool)
(declare-fun x1853 () Int)
(declare-fun x8065 () Int)
(declare-fun x6694 () x112)
(declare-fun x1460 () Int)
(declare-fun x2689 () Bool)
(declare-fun x6019 () Bool)
(declare-fun x1761 () Int)
(declare-fun x2706 () Bool)
(declare-fun x2917 () Bool)
(declare-fun x8367 () Bool)
(declare-fun x6711 () Bool)
(declare-fun x3367 () Int)
(declare-fun x4827 () Int)
(declare-fun x8815 () Int)
(declare-fun x7744 () Bool)
(declare-fun x350 () Bool)
(declare-fun x7413 () Bool)
(declare-fun x6023 () Bool)
(declare-fun x4647 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x9104 () Int)
(declare-fun x4137 () Int)
(declare-fun x1178 () Bool)
(declare-fun x1837 () Bool)
(declare-fun x462 () Bool)
(declare-fun x6758 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x4510 () Bool)
(declare-fun x313 () x112)
(declare-fun x8631 () Int)
(declare-fun x8418 () Bool)
(declare-fun x6456 () x112)
(declare-fun x4460 () Bool)
(declare-fun x4906 () Bool)
(declare-fun x8872 () Bool)
(declare-fun x7566 () Bool)
(declare-fun x6740 () Int)
(declare-fun x2438 () Bool)
(declare-fun x7980 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x6198 () Bool)
(declare-fun x3259 () Bool)
(declare-fun x3327 () Int)
(declare-fun x3524 () Int)
(declare-fun x2620 () Bool)
(declare-fun x5769 () Int)
(declare-fun x441 () Bool)
(declare-fun x5165 () Bool)
(declare-fun x2757 () x112)
(declare-fun x4023 () Int)
(declare-fun x6150 () Bool)
(declare-fun x2300 () Bool)
(declare-fun x8262 () Bool)
(declare-fun x3055 () Bool)
(declare-fun x606 () Int)
(declare-fun x8462 () Bool)
(declare-fun x2912 () x112)
(declare-fun x227 () Bool)
(declare-fun x872 () Int)
(declare-fun x6462 () x112)
(declare-fun x7213 () Bool)
(declare-fun x8593 () Int)
(declare-fun x1249 () Bool)
(declare-fun x309 () Int)
(declare-fun x2885 () Bool)
(declare-fun x6063 () Int)
(declare-fun x2962 () Int)
(declare-fun x1451 () Int)
(declare-fun x7950 () Bool)
(declare-fun x4518 () Bool)
(declare-fun x6807 () Int)
(declare-fun x2593 () Bool)
(declare-fun x3297 () Int)
(declare-fun x2173 () Bool)
(declare-fun x8813 () Bool)
(declare-fun x8416 () Bool)
(declare-fun x180 () Bool)
(declare-fun x9214 () Bool)
(declare-fun x1415 () Bool)
(declare-fun x1720 () x112)
(declare-fun x2834 () x112)
(declare-fun x1300 () Int)
(declare-fun x2681 () Int)
(declare-fun x6596 () Int)
(declare-fun x1104 () x112)
(declare-fun x3178 () Int)
(declare-fun x7751 () Int)
(declare-fun x5614 () Bool)
(declare-fun x6119 () Bool)
(declare-fun x6544 () Bool)
(declare-fun x8804 () Bool)
(declare-fun x1510 () Int)
(declare-fun x8770 () Bool)
(declare-fun x8388 () Int)
(declare-fun x5941 () Bool)
(declare-fun x496 () Int)
(declare-fun x401 () Bool)
(declare-fun x9223 () Int)
(declare-fun x2206 () Int)
(declare-fun x1544 () Int)
(declare-fun x388 () Bool)
(declare-fun x7494 () Int)
(declare-fun x8408 () Bool)
(declare-fun x6144 () Bool)
(declare-fun x7487 () Bool)
(declare-fun x2931 () Bool)
(declare-fun x8575 () Int)
(declare-fun x2614 () Int)
(declare-fun x3945 () Int)
(declare-fun x4313 () Bool)
(declare-fun x7550 () Int)
(declare-fun x4905 () Int)
(declare-fun x665 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x2655 () Int)
(declare-fun x6882 () Bool)
(declare-fun x5603 () Int)
(declare-fun x7479 () Int)
(declare-fun x1214 () Int)
(declare-fun x7586 () x112)
(declare-fun x1682 (x112) Int)
(declare-fun x9038 () Bool)
(declare-fun x6480 (Int) Int)
(declare-fun x3276 () Bool)
(declare-fun x7036 () Int)
(declare-fun x3561 () Bool)
(declare-fun x3784 () Bool)
(declare-fun x6451 () Bool)
(declare-fun x6751 () Bool)
(declare-fun x6579 () x112)
(declare-fun x7995 () Bool)
(declare-fun x2267 () Int)
(declare-fun x5664 () Int)
(declare-fun x7929 () Bool)
(declare-fun x6808 () Bool)
(declare-fun x5696 () Bool)
(declare-fun x4714 () Int)
(declare-fun x7105 () Bool)
(declare-fun x979 () Bool)
(declare-fun x8504 () Bool)
(declare-fun x4987 () Bool)
(declare-fun x7297 () Bool)
(declare-fun x7688 () Int)
(declare-fun x1020 () Int)
(declare-fun x4246 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x7056 () Int)
(declare-fun x2109 (x112) Int)
(declare-fun x4183 () Bool)
(declare-fun x2766 () x112)
(declare-fun x7575 () Bool)
(declare-fun x5536 () Int)
(declare-fun x6422 () Bool)
(declare-fun x517 () Int)
(declare-fun x2022 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x6033 () Bool)
(declare-fun x4165 () Bool)
(declare-fun x6121 () Int)
(declare-fun x1783 () Bool)
(declare-fun x8829 () Int)
(declare-fun x2715 () Bool)
(declare-fun x7268 () Bool)
(declare-fun x5691 () Int)
(declare-fun x1257 () Bool)
(declare-fun x2176 () Int)
(declare-fun x8113 () Bool)
(declare-fun x1279 () Int)
(declare-fun x4713 () Int)
(declare-fun x7901 () Bool)
(declare-fun x4617 () x112)
(declare-fun x4286 () Bool)
(declare-fun x1334 () Int)
(declare-fun x5435 () Int)
(declare-fun x4771 () Int)
(declare-fun x1797 () Bool)
(declare-fun x2199 () x112)
(declare-fun x9090 () Bool)
(declare-fun x9005 () Bool)
(declare-fun x8366 () Int)
(declare-fun x9040 () Int)
(declare-fun x277 () Bool)
(declare-fun x4768 () Int)
(declare-fun x8022 () Bool)
(declare-fun x7997 () Int)
(declare-fun x9145 () Int)
(declare-fun x6500 () Bool)
(declare-fun x3969 () Int)
(declare-fun x1102 () Bool)
(declare-fun x6195 () Int)
(declare-fun x8992 () Bool)
(declare-fun x890 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x8356 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1010 () Int)
(declare-fun x7040 () Bool)
(declare-fun x2063 () Int)
(declare-fun x4995 () Bool)
(declare-fun x7967 () Bool)
(declare-fun x1728 () Int)
(declare-fun x1651 () x112)
(declare-fun x8041 () Bool)
(declare-fun x2994 () Int)
(declare-fun x1116 () Int)
(declare-fun x1345 () Int)
(declare-fun x777 () Bool)
(declare-fun x6653 () x112)
(declare-fun x2588 () Bool)
(declare-fun x5262 () Bool)
(declare-fun x7587 () Bool)
(declare-fun x7720 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x3084 () x112)
(declare-fun x2420 () Int)
(declare-fun x1478 () Bool)
(declare-fun x3322 () Int)
(declare-fun x7553 () Bool)
(declare-fun x5058 () Bool)
(declare-fun x3385 () x112)
(declare-fun x7368 () Int)
(declare-fun x5722 () Bool)
(declare-fun x8851 () Int)
(declare-fun x2053 () Int)
(declare-fun x3006 () Int)
(declare-fun x6804 () Int)
(declare-fun x1304 () Bool)
(declare-fun x408 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x3547 () Int)
(declare-fun x4777 () Int)
(declare-fun x7397 () Int)
(declare-fun x8501 () Bool)
(declare-fun x8587 () Bool)
(declare-fun x8344 () Int)
(declare-fun x2569 () x112)
(declare-fun x6722 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x2774 () x112)
(declare-fun x3077 () Int)
(declare-fun x3118 () Bool)
(declare-fun x1562 () Int)
(declare-fun x7161 () Int)
(declare-fun x2105 () Bool)
(declare-fun x3300 () Bool)
(declare-fun x6564 () Int)
(declare-fun x3697 () x112)
(declare-fun x5775 () Bool)
(declare-fun x2542 () Int)
(declare-fun x3454 () Bool)
(declare-fun x3384 () Bool)
(declare-fun x9044 () Int)
(declare-fun x7757 () Int)
(declare-fun x2242 () Int)
(declare-fun x3405 () Bool)
(declare-fun x8531 () Bool)
(declare-fun x6458 () Bool)
(declare-fun x575 () Int)
(declare-fun x8187 () Bool)
(declare-fun x7128 () Int)
(declare-fun x8924 () Int)
(declare-fun x4727 () Int)
(declare-fun x3418 () Bool)
(declare-fun x5121 () Bool)
(declare-fun x5648 () Bool)
(declare-fun x2889 () Bool)
(declare-fun x4157 () Bool)
(declare-fun x8099 () Bool)
(declare-fun x6003 () Bool)
(declare-fun x2592 () x112)
(declare-fun x6768 () Bool)
(declare-fun x5383 () Bool)
(declare-fun x807 () Int)
(declare-fun x9097 () x112)
(declare-fun x3778 () Int)
(declare-fun x2244 () Int)
(declare-fun x9150 () Bool)
(declare-fun x6179 () Bool)
(declare-fun x7647 () Bool)
(declare-fun x5565 () x112)
(declare-fun x6786 () Int)
(declare-fun x9045 () Bool)
(declare-fun x736 () Bool)
(declare-fun x489 () Int)
(declare-fun x3549 () Bool)
(declare-fun x967 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x1326 () Int)
(declare-fun x3919 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x7845 () Bool)
(declare-fun x4914 () Int)
(declare-fun x7893 () Bool)
(declare-fun x5361 () Bool)
(declare-fun x8337 () Int)
(declare-fun x6851 () Int)
(declare-fun x7011 () Bool)
(declare-fun x3518 () Int)
(declare-fun x6716 () Int)
(declare-fun x4016 () Int)
(declare-fun x5263 () x112)
(declare-fun x3730 () Int)
(declare-fun x3147 () Int)
(declare-fun x3427 () Bool)
(declare-fun x3396 () Bool)
(declare-fun x6510 () Bool)
(declare-fun x5405 () Int)
(declare-fun x3187 () Bool)
(declare-fun x8896 () Int)
(declare-fun x4557 () Int)
(declare-fun x8777 () Int)
(declare-fun x4479 () Int)
(declare-fun x5804 () Bool)
(declare-fun x3577 () Bool)
(declare-fun x4663 () Bool)
(declare-fun x5637 () Bool)
(declare-fun x3161 () Bool)
(declare-fun x6968 (x112) Int)
(declare-fun x8322 () Int)
(declare-fun x8414 () Int)
(declare-fun x7889 () Bool)
(declare-fun x740 () Bool)
(declare-fun x8286 (Int) Int)
(declare-fun x5793 () Bool)
(declare-fun x2046 () Int)
(declare-fun x6100 () Int)
(declare-fun x1625 () Bool)
(declare-fun x26 () Bool)
(declare-fun x2991 () Int)
(declare-fun x1984 () Int)
(declare-fun x8500 () Bool)
(declare-fun x6798 () Int)
(declare-fun x5227 () x112)
(declare-fun x8090 () Bool)
(declare-fun x5859 () Int)
(declare-fun x4498 () Bool)
(declare-fun x3907 () Bool)
(declare-fun x6528 () Int)
(declare-fun x5716 () Bool)
(declare-fun x6371 () Int)
(declare-fun x2634 () Bool)
(declare-fun x9235 () Bool)
(declare-fun x8634 () x112)
(declare-fun x4860 () Bool)
(declare-fun x4123 () Bool)
(declare-fun x804 () Bool)
(declare-fun x8341 () Int)
(declare-fun x760 () Bool)
(declare-fun x6093 () Int)
(declare-fun x1441 () Bool)
(declare-fun x2040 () Int)
(declare-fun x4927 () Bool)
(declare-fun x4204 () x112)
(declare-fun x5239 () Bool)
(declare-fun x8880 () Bool)
(declare-fun x5156 () Bool)
(declare-fun x6031 () Bool)
(declare-fun x7459 () Int)
(declare-fun x7627 () Int)
(declare-fun x5136 () Bool)
(declare-fun x2964 () Int)
(declare-fun x826 () Int)
(declare-fun x9015 () Int)
(declare-fun x6946 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x4429 () Bool)
(declare-fun x6120 () Int)
(declare-fun x1802 () Bool)
(declare-fun x7472 () Bool)
(declare-fun x4364 () x112)
(declare-fun x6973 () Bool)
(declare-fun x3230 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x661 () Bool)
(declare-fun x2515 () Int)
(declare-fun x2775 () Int)
(declare-fun x7073 () Int)
(declare-fun x8662 () Int)
(declare-fun x3654 () Int)
(declare-fun x6149 () Int)
(declare-fun x2404 () x112)
(declare-fun x6944 () Int)
(declare-fun x5349 () Bool)
(declare-fun x1332 () Int)
(declare-fun x4814 () Bool)
(declare-fun x5890 () Int)
(declare-fun x6219 () Bool)
(declare-fun x6888 () Bool)
(declare-fun x3770 () Bool)
(declare-fun x8470 () Int)
(declare-fun x2543 () Int)
(declare-fun x3080 () Int)
(declare-fun x3847 () Bool)
(declare-fun x4959 () Int)
(declare-fun x2673 () x112)
(declare-fun x780 () Int)
(declare-fun x1294 () Bool)
(declare-fun x8057 () Bool)
(declare-fun x4944 () Bool)
(declare-fun x8975 () Int)
(declare-fun x1278 () x112)
(declare-fun x2531 () Bool)
(declare-fun x4253 () Bool)
(declare-fun x7238 () Bool)
(declare-fun x3114 () Int)
(declare-fun x6235 () Bool)
(declare-fun x4236 () Bool)
(declare-fun x9026 () x112)
(declare-fun x1784 () Int)
(declare-fun x7101 () Int)
(declare-fun x5174 () Bool)
(declare-fun x7653 () Bool)
(declare-fun x2018 () Bool)
(declare-fun x430 () Int)
(declare-fun x1516 () Int)
(declare-fun x6047 () Int)
(declare-fun x9067 () Bool)
(declare-fun x6795 () Int)
(declare-fun x2653 () Int)
(declare-fun x2509 () Bool)
(declare-fun x4878 () Bool)
(declare-fun x4169 () Int)
(declare-fun x5668 () Int)
(declare-fun x674 () Int)
(declare-fun x700 () Int)
(declare-fun x3632 () Bool)
(declare-fun x8048 () Int)
(declare-fun x3932 () Bool)
(declare-fun x7318 () Bool)
(declare-fun x7330 () Int)
(declare-fun x5249 () Bool)
(declare-fun x4964 () Bool)
(declare-fun x5928 (Int) Int)
(declare-fun x5528 () Int)
(declare-fun x4904 () Bool)
(declare-fun x5100 () Bool)
(declare-fun x6370 () Int)
(declare-fun x5326 () x112)
(declare-fun x3816 () Bool)
(declare-fun x5410 () Int)
(declare-fun x8194 () x112)
(declare-fun x4916 () Bool)
(declare-fun x5615 () Bool)
(declare-fun x7389 () Bool)
(declare-fun x4421 () Bool)
(declare-fun x2140 () Int)
(declare-fun x2119 () Int)
(declare-fun x5346 () x112)
(declare-fun x4896 () Bool)
(declare-fun x8089 () Bool)
(declare-fun x29 () x112)
(declare-fun x3946 () Int)
(declare-fun x2879 () Bool)
(declare-fun x8451 () Bool)
(declare-fun x4901 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x3825 () x112)
(declare-fun x2189 () Int)
(declare-fun x5077 () x112)
(declare-fun x6499 () Bool)
(declare-fun x4942 () Bool)
(declare-fun x1578 () Int)
(declare-fun x8830 () Int)
(declare-fun x4442 () Int)
(declare-fun x8381 () Bool)
(declare-fun x2536 () Bool)
(declare-fun x2197 () Int)
(declare-fun x798 () Int)
(declare-fun x5645 () Int)
(declare-fun x8709 () x112)
(declare-fun x621 () Bool)
(declare-fun x6188 () Bool)
(declare-fun x6201 () Bool)
(declare-fun x6251 () Int)
(declare-fun x1035 () Int)
(declare-fun x7061 () Bool)
(declare-fun x5918 () Int)
(declare-fun x1029 () Bool)
(declare-fun x5705 () Bool)
(declare-fun x4019 () Bool)
(declare-fun x7145 () Bool)
(declare-fun x1511 () Int)
(declare-fun x3498 () Int)
(declare-fun x6800 () Bool)
(declare-fun x5715 () Bool)
(declare-fun x7018 () Int)
(declare-fun x1187 () Bool)
(declare-fun x581 () Bool)
(declare-fun x6767 () Bool)
(declare-fun x2345 () Int)
(declare-fun x4835 () Bool)
(declare-fun x117 () Bool)
(declare-fun x3582 () Bool)
(declare-fun x1977 () Bool)
(declare-fun x100 () Bool)
(declare-fun x2644 () Int)
(declare-fun x2076 () Int)
(declare-fun x8681 () Bool)
(declare-fun x9123 () Int)
(declare-fun x2236 () x112)
(declare-fun x6975 () Int)
(declare-fun x5750 () Bool)
(declare-fun x8670 () x112)
(declare-fun x2198 () Bool)
(declare-fun x963 () Int)
(declare-fun x8316 () Bool)
(declare-fun x8019 () Bool)
(declare-fun x5649 () Bool)
(declare-fun x8460 () Int)
(declare-fun x2408 () Bool)
(declare-fun x596 () Int)
(declare-fun x3868 () Int)
(declare-fun x317 () Bool)
(declare-fun x7878 () Bool)
(declare-fun x5465 () Int)
(declare-fun x5097 () Bool)
(declare-fun x4406 () Int)
(declare-fun x5441 () Int)
(declare-fun x7618 () Bool)
(declare-fun x4269 () Bool)
(declare-fun x7645 () Int)
(declare-fun x4240 () Int)
(declare-fun x9100 () Bool)
(declare-fun x3399 () Bool)
(declare-fun x6014 () Bool)
(declare-fun x6598 () Int)
(declare-fun x7217 () Bool)
(declare-fun x4419 () Int)
(declare-fun x9204 () Bool)
(declare-fun x6932 () Bool)
(declare-fun x7235 () Int)
(declare-fun x419 () x112)
(declare-fun x2617 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x214 () Bool)
(declare-fun x5248 () Int)
(declare-fun x3121 () Bool)
(declare-fun x4546 () Bool)
(declare-fun x1726 () Bool)
(declare-fun x829 () Int)
(declare-fun x7435 () Int)
(declare-fun x3470 () Bool)
(declare-fun x2779 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x1147 () Int)
(declare-fun x3116 () Bool)
(declare-fun x8488 () Int)
(declare-fun x7100 () x112)
(declare-fun x8768 () Bool)
(declare-fun x817 () Int)
(declare-fun x7763 () x112)
(declare-fun x5727 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x7945 () Bool)
(declare-fun x8018 () Bool)
(declare-fun x5989 () Bool)
(declare-fun x1385 () Int)
(declare-fun x8919 () Bool)
(declare-fun x3441 () Int)
(declare-fun x6788 () Bool)
(declare-fun x1818 () Bool)
(declare-fun x2953 () Bool)
(declare-fun x4954 () Bool)
(declare-fun x1317 () Int)
(declare-fun x4752 () Int)
(declare-fun x8227 () Bool)
(declare-fun x7437 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x5246 () Bool)
(declare-fun x653 () Bool)
(declare-fun x2878 () Int)
(declare-fun x4634 () Bool)
(declare-fun x6186 () Bool)
(declare-fun x6933 () Bool)
(declare-fun x3965 () x112)
(declare-fun x6963 () Int)
(declare-fun x5175 () x112)
(declare-fun x2532 () Bool)
(declare-fun x3514 () Int)
(declare-fun x6080 () Int)
(declare-fun x5427 () x112)
(declare-fun x8053 () x112)
(declare-fun x2273 () Int)
(declare-fun x6347 () Bool)
(declare-fun x224 () Bool)
(declare-fun x5737 () Int)
(declare-fun x2314 () Bool)
(declare-fun x5309 () Int)
(declare-fun x7228 () x112)
(declare-fun x2577 () Int)
(declare-fun x858 () Int)
(declare-fun x4673 () Bool)
(declare-fun x6983 () Int)
(declare-fun x1672 () Int)
(declare-fun x3195 () x112)
(declare-fun x8291 () x112)
(declare-fun x9156 () x112)
(declare-fun x8574 () Int)
(declare-fun x4708 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x5233 () Bool)
(declare-fun x5155 () Int)
(declare-fun x8661 () Bool)
(declare-fun x270 () Int)
(declare-fun x8403 () Bool)
(declare-fun x7360 () Int)
(declare-fun x1716 () Int)
(declare-fun x4232 () Bool)
(declare-fun x3159 () Int)
(declare-fun x1308 () Int)
(declare-fun x8784 () Int)
(declare-fun x5189 () x112)
(declare-fun x399 () x112)
(declare-fun x7247 () Int)
(declare-fun x6415 () Bool)
(declare-fun x126 () Bool)
(declare-fun x3070 () Int)
(declare-fun x6838 () Int)
(declare-fun x5109 () Int)
(declare-fun x5511 () Int)
(declare-fun x4705 () Int)
(declare-fun x672 () Bool)
(declare-fun x6792 () Bool)
(declare-fun x2871 () Int)
(declare-fun x3390 () x112)
(declare-fun x1207 () Bool)
(declare-fun x8525 () Bool)
(declare-fun x620 () Int)
(declare-fun x4288 () Bool)
(declare-fun x2837 () Int)
(declare-fun x2648 () Int)
(declare-fun x3192 () Int)
(declare-fun x1830 () Bool)
(declare-fun x802 () Bool)
(declare-fun x8404 () Bool)
(declare-fun x9096 () x112)
(declare-fun x1581 () Bool)
(declare-fun x4256 () Bool)
(declare-fun x7309 () Bool)
(declare-fun x3648 () Bool)
(declare-fun x7158 () Bool)
(declare-fun x7190 () Bool)
(declare-fun x6536 () Int)
(declare-fun x5853 () Bool)
(declare-fun x3647 () Int)
(declare-fun x8767 () x112)
(declare-fun x3642 () Int)
(declare-fun x1569 () Bool)
(declare-fun x2084 () Int)
(declare-fun x825 () Int)
(declare-fun x7246 () Bool)
(declare-fun x6069 () Bool)
(declare-fun x8858 () Bool)
(declare-fun x4117 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x7512 () x112)
(declare-fun x1227 () Bool)
(declare-fun x5288 () Bool)
(declare-fun x7589 () Int)
(declare-fun x2103 () Int)
(declare-fun x6987 () Int)
(declare-fun x649 () Bool)
(declare-fun x60 () Bool)
(declare-fun x3484 () Bool)
(declare-fun x4007 () Bool)
(declare-fun x1935 () Int)
(declare-fun x6721 () Bool)
(declare-fun x8400 () Int)
(declare-fun x4464 () Bool)
(declare-fun x6759 () Int)
(declare-fun x7405 () Bool)
(declare-fun x2313 () Int)
(declare-fun x3170 () Int)
(declare-fun x5665 () Int)
(declare-fun x6071 () Int)
(declare-fun x4224 () Bool)
(declare-fun x6651 () Bool)
(declare-fun x3507 () Int)
(declare-fun x6056 () Int)
(declare-fun x4730 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x1263 () Int)
(declare-fun x4732 () Bool)
(declare-fun x8695 () Bool)
(declare-fun x6302 () Bool)
(declare-fun x5560 () Bool)
(declare-fun x683 () x112)
(declare-fun x6036 () Bool)
(declare-fun x5103 () x112)
(declare-fun x42 () Int)
(declare-fun x3870 () x112)
(declare-fun x4981 () Bool)
(declare-fun x7650 () Bool)
(declare-fun x7662 () Int)
(declare-fun x3935 () Bool)
(declare-fun x4619 () Bool)
(declare-fun x2033 () Int)
(declare-fun x5017 () Bool)
(declare-fun x6240 () Int)
(declare-fun x4005 () x112)
(declare-fun x433 () Bool)
(declare-fun x9122 (Int) Int)
(declare-fun x6940 () Bool)
(declare-fun x5031 () Bool)
(declare-fun x1540 () x112)
(declare-fun x7633 () Bool)
(declare-fun x8078 () Bool)
(declare-fun x7800 () Int)
(declare-fun x4537 () Bool)
(declare-fun x7513 () x112)
(declare-fun x1932 () Int)
(declare-fun x8132 () Bool)
(declare-fun x1483 () Int)
(declare-fun x1553 () Bool)
(declare-fun x8312 () Bool)
(declare-fun x6094 () Bool)
(declare-fun x2045 () Int)
(declare-fun x6082 () Int)
(declare-fun x3435 () Bool)
(declare-fun x2337 () Int)
(declare-fun x4824 () Bool)
(declare-fun x391 () Int)
(declare-fun x2723 () x112)
(declare-fun x3863 () Int)
(declare-fun x6125 () Int)
(declare-fun x7215 () Bool)
(declare-fun x8490 () Bool)
(declare-fun x2255 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x4637 () Bool)
(declare-fun x4830 () x112)
(declare-fun x3597 () Bool)
(declare-fun x3979 () Int)
(declare-fun x3909 () x112)
(declare-fun x5850 () Bool)
(declare-fun x3574 () Bool)
(declare-fun x2520 () Bool)
(declare-fun x3872 () Int)
(declare-fun x3154 () Int)
(declare-fun x4565 () x112)
(declare-fun x8986 () Bool)
(declare-fun x7675 () Int)
(declare-fun x7220 () Bool)
(declare-fun x6998 () x112)
(declare-fun x4108 () Int)
(declare-fun x8994 () Bool)
(declare-fun x8638 () Int)
(declare-fun x5676 () Bool)
(declare-fun x2734 () Int)
(declare-fun x4598 () Bool)
(declare-fun x9114 () Bool)
(declare-fun x90 () Bool)
(declare-fun x8207 () Int)
(declare-fun x1406 () Bool)
(declare-fun x7131 () Bool)
(declare-fun x3803 (Int) Int)
(declare-fun x6163 () Bool)
(declare-fun x3924 () Int)
(declare-fun x4263 () Int)
(declare-fun x5713 () Int)
(declare-fun x7085 () Int)
(declare-fun x6171 () x112)
(declare-fun x5329 () Int)
(declare-fun x7510 () Bool)
(declare-fun x3841 () Bool)
(declare-fun x6167 () Int)
(declare-fun x839 () Int)
(declare-fun x7214 () Bool)
(declare-fun x2565 () Int)
(declare-fun x626 () x112)
(declare-fun x7496 () Int)
(declare-fun x2863 () Bool)
(declare-fun x2533 () x112)
(declare-fun x6009 () Int)
(declare-fun x8892 () Int)
(declare-fun x6426 () Bool)
(declare-fun x2947 () Int)
(declare-fun x4171 () Int)
(declare-fun x2575 () Int)
(declare-fun x4829 () Int)
(declare-fun x2483 () Bool)
(declare-fun x4226 () x112)
(declare-fun x1907 () Bool)
(declare-fun x4187 () Int)
(declare-fun x9224 () Bool)
(declare-fun x4033 () Int)
(declare-fun x8049 () Bool)
(declare-fun x3046 () Int)
(declare-fun x4529 () Int)
(declare-fun x8069 () Int)
(declare-fun x9188 () Bool)
(declare-fun x4786 () Bool)
(declare-fun x6585 () x112)
(declare-fun x6032 () Int)
(declare-fun x8178 () Int)
(declare-fun x3473 () Bool)
(declare-fun x4136 () Bool)
(declare-fun x3227 () Bool)
(declare-fun x3832 () Bool)
(declare-fun x3790 () Int)
(declare-fun x4004 () Bool)
(declare-fun x8413 () x112)
(declare-fun x4098 () Bool)
(declare-fun x2759 () Bool)
(declare-fun x4436 () Bool)
(declare-fun x5504 () Bool)
(declare-fun x9057 () Int)
(declare-fun x2487 () Bool)
(declare-fun x3447 () Bool)
(declare-fun x5838 () x112)
(declare-fun x1129 () Bool)
(declare-fun x5670 () Int)
(declare-fun x2768 () Int)
(declare-fun x3045 () Bool)
(declare-fun x3188 () Int)
(declare-fun x6224 () Bool)
(declare-fun x8352 () Int)
(declare-fun x3448 () Int)
(declare-fun x1052 () Bool)
(declare-fun x146 () Int)
(declare-fun x4953 () Bool)
(declare-fun x47 () Bool)
(declare-fun x3028 () Int)
(declare-fun x4893 () Int)
(declare-fun x1161 () Bool)
(declare-fun x6947 () Bool)
(declare-fun x5964 () Bool)
(declare-fun x347 () Bool)
(declare-fun x8162 () x112)
(declare-fun x2409 () Int)
(declare-fun x186 () Bool)
(declare-fun x7416 () Bool)
(declare-fun x4086 () Int)
(declare-fun x3684 () Int)
(declare-fun x4311 () Bool)
(declare-fun x4457 (x112) Int)
(declare-fun x915 () Bool)
(declare-fun x6574 () Int)
(declare-fun x3916 (Int) Int)
(declare-fun x1747 () Bool)
(declare-fun x9153 () Bool)
(declare-fun x7886 () Int)
(declare-fun x491 () Int)
(declare-fun x8551 () Bool)
(declare-fun x3817 () Int)
(declare-fun x304 () Int)
(declare-fun x5742 () Int)
(declare-fun x3714 () Int)
(declare-fun x6856 () Bool)
(declare-fun x5701 () Bool)
(declare-fun x7042 () Bool)
(declare-fun x785 () Int)
(declare-fun x4623 () Int)
(declare-fun x5230 () Bool)
(declare-fun x1678 () Int)
(declare-fun x1754 () x112)
(declare-fun x897 () x112)
(declare-fun x9025 () Bool)
(declare-fun x5065 () Bool)
(declare-fun x4483 () Int)
(declare-fun x1925 () Int)
(declare-fun x3094 () Int)
(declare-fun x445 () Bool)
(declare-fun x7663 () Bool)
(declare-fun x8024 () Bool)
(declare-fun x3691 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x7174 () Int)
(declare-fun x244 () Int)
(declare-fun x4262 () Bool)
(declare-fun x3358 () Int)
(declare-fun x6880 () Bool)
(declare-fun x6522 () Bool)
(declare-fun x5607 () Int)
(declare-fun x3423 () Bool)
(declare-fun x8095 () Int)
(declare-fun x6667 () Int)
(declare-fun x5221 () Bool)
(declare-fun x1344 () x112)
(declare-fun x1438 () Bool)
(declare-fun x4801 () Bool)
(declare-fun x8122 () Int)
(declare-fun x150 () Int)
(declare-fun x2881 () Int)
(declare-fun x4691 () Bool)
(declare-fun x993 () Int)
(declare-fun x342 () Bool)
(declare-fun x6949 () Int)
(declare-fun x8449 () x112)
(declare-fun x2665 () Int)
(declare-fun x2798 () Bool)
(declare-fun x2621 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x6560 () Int)
(declare-fun x566 () Int)
(declare-fun x7373 () Bool)
(declare-fun x3993 () Int)
(declare-fun x8684 () x112)
(declare-fun x2638 () Bool)
(declare-fun x6989 () Int)
(declare-fun x1154 () x112)
(declare-fun x6258 () Bool)
(declare-fun x6498 () Bool)
(declare-fun x4267 () Bool)
(declare-fun x6383 () Bool)
(declare-fun x7741 () Bool)
(declare-fun x8736 () Int)
(declare-fun x6321 () Int)
(declare-fun x2266 () Int)
(declare-fun x2679 () Bool)
(declare-fun x8785 () x112)
(declare-fun x6006 () Bool)
(declare-fun x5833 () Int)
(declare-fun x646 () Int)
(declare-fun x943 () Bool)
(declare-fun x1745 () Int)
(declare-fun x2640 () Bool)
(declare-fun x6542 () Int)
(declare-fun x2464 () Int)
(declare-fun x6207 () Bool)
(declare-fun x4554 () Bool)
(declare-fun x7248 () Bool)
(declare-fun x7490 () Int)
(declare-fun x6043 () Bool)
(declare-fun x7014 () Int)
(declare-fun x6658 (x112) Int)
(declare-fun x3360 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x8790 () Bool)
(declare-fun x3232 () Int)
(declare-fun x4075 () Int)
(declare-fun x4128 () Int)
(declare-fun x7640 () Bool)
(declare-fun x9109 () Bool)
(declare-fun x7438 () Int)
(declare-fun x3808 () Bool)
(declare-fun x3463 () Bool)
(declare-fun x4966 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x7433 () Bool)
(declare-fun x3260 () x112)
(declare-fun x3628 () x112)
(declare-fun x8407 () Int)
(declare-fun x8141 () Bool)
(declare-fun x4888 () Bool)
(declare-fun x7488 () Bool)
(declare-fun x3425 (x112) Int)
(declare-fun x1712 () Int)
(declare-fun x4863 () Int)
(declare-fun x9209 () x112)
(declare-fun x6593 () Int)
(declare-fun x2382 () Bool)
(declare-fun x7107 () Bool)
(declare-fun x8643 () Int)
(declare-fun x2454 () Bool)
(declare-fun x3132 () x112)
(declare-fun x3839 () Bool)
(declare-fun x6697 () Int)
(declare-fun x4220 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x302 () Bool)
(declare-fun x6874 () Int)
(declare-fun x6686 () Bool)
(declare-fun x321 () Bool)
(declare-fun x7673 () Int)
(declare-fun x4018 () Int)
(declare-fun x5516 () Int)
(declare-fun x5496 () Bool)
(declare-fun x1167 () x112)
(declare-fun x5146 () Int)
(declare-fun x4285 () x112)
(declare-fun x5428 () x112)
(declare-fun x5800 () Int)
(declare-fun x5250 () Int)
(declare-fun x5307 () Int)
(declare-fun x4519 () Int)
(declare-fun x1502 () Int)
(declare-fun x3886 () Bool)
(declare-fun x992 () x112)
(declare-fun x1751 () Int)
(declare-fun x2373 () Int)
(declare-fun x685 () Bool)
(declare-fun x2451 () Int)
(declare-fun x3738 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x5955 () Bool)
(declare-fun x1166 () Int)
(declare-fun x3043 () Bool)
(declare-fun x1736 () Bool)
(declare-fun x6337 () Int)
(declare-fun x7863 () Bool)
(declare-fun x3018 () Bool)
(declare-fun x8688 () Bool)
(declare-fun x5466 () Bool)
(declare-fun x8445 () Int)
(declare-fun x618 () Bool)
(declare-fun x8720 () Bool)
(declare-fun x7597 () Bool)
(declare-fun x6861 () Bool)
(declare-fun x4748 () Int)
(declare-fun x5954 () Bool)
(declare-fun x4525 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x2987 () Int)
(declare-fun x2304 () Int)
(declare-fun x7348 () Bool)
(declare-fun x501 () Int)
(declare-fun x2303 () Int)
(declare-fun x6846 () Bool)
(declare-fun x4717 () Int)
(declare-fun x8610 () x112)
(declare-fun x4738 () Int)
(declare-fun x1707 () Bool)
(declare-fun x5110 () Int)
(declare-fun x3087 () x112)
(declare-fun x3593 () Bool)
(declare-fun x407 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x7436 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x6670 () Bool)
(declare-fun x7378 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x2234 () Int)
(declare-fun x7231 () Bool)
(declare-fun x4947 () Bool)
(declare-fun x6772 () Bool)
(declare-fun x7861 () Bool)
(declare-fun x4915 () Bool)
(declare-fun x5846 () Int)
(declare-fun x5391 () Bool)
(declare-fun x7966 () Bool)
(declare-fun x8160 () Int)
(declare-fun x887 (Int) Int)
(declare-fun x9119 () Int)
(declare-fun x6331 () Bool)
(declare-fun x765 () x112)
(declare-fun x9124 () Int)
(declare-fun x5755 () Bool)
(declare-fun x5870 () Bool)
(declare-fun x6425 () Int)
(declare-fun x1284 () Bool)
(declare-fun x1058 () x112)
(declare-fun x1337 () Int)
(declare-fun x755 () Int)
(declare-fun x4542 () Int)
(declare-fun x7026 () Bool)
(declare-fun x6820 () Bool)
(declare-fun x2042 () Int)
(declare-fun x3337 () x112)
(declare-fun x5048 (Int) Int)
(declare-fun x8412 () x112)
(declare-fun x1692 () Bool)
(declare-fun x4275 () Int)
(declare-fun x891 () Int)
(declare-fun x3019 () Bool)
(declare-fun x7202 () Bool)
(declare-fun x810 () Bool)
(declare-fun x6181 () Bool)
(declare-fun x7068 () Int)
(declare-fun x634 () Bool)
(declare-fun x114 () Int)
(declare-fun x5582 () Bool)
(declare-fun x2682 () Bool)
(declare-fun x5869 () Int)
(declare-fun x7910 () Bool)
(declare-fun x3275 () Int)
(declare-fun x4736 () x112)
(declare-fun x5271 () Bool)
(declare-fun x3939 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x4031 () Bool)
(declare-fun x2619 () Bool)
(declare-fun x2452 () Bool)
(declare-fun x3030 () Bool)
(declare-fun x4173 () Bool)
(declare-fun x8508 () Int)
(declare-fun x3138 () Int)
(declare-fun x2482 () Bool)
(declare-fun x8656 () Bool)
(declare-fun x5310 () Bool)
(declare-fun x5621 (x112) Int)
(declare-fun x892 () Bool)
(declare-fun x7656 () Int)
(declare-fun x5567 () Bool)
(declare-fun x7176 () Bool)
(declare-fun x2716 () Int)
(declare-fun x4301 () Bool)
(declare-fun x2295 () Int)
(declare-fun x7904 () Int)
(declare-fun x5123 () Int)
(declare-fun x6329 () Bool)
(declare-fun x8650 () Bool)
(declare-fun x3137 () Bool)
(declare-fun x3780 () Int)
(declare-fun x3586 () Int)
(declare-fun x5792 () Bool)
(declare-fun x1659 () Int)
(declare-fun x8177 () Bool)
(declare-fun x6911 () Int)
(declare-fun x6483 () Int)
(declare-fun x3976 () Bool)
(declare-fun x3034 () Bool)
(declare-fun x3233 () Bool)
(declare-fun x8760 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x7004 () Bool)
(declare-fun x5542 () Bool)
(declare-fun x7994 () Bool)
(declare-fun x7475 () Bool)
(declare-fun x4919 () Bool)
(declare-fun x554 () Int)
(declare-fun x246 () Bool)
(declare-fun x8842 () Int)
(declare-fun x8568 () Int)
(declare-fun x8910 () Int)
(declare-fun x1225 () Bool)
(declare-fun x3724 () Bool)
(declare-fun x7508 () Bool)
(declare-fun x5222 () Bool)
(declare-fun x453 () Bool)
(declare-fun x6154 () Int)
(declare-fun x1742 () Int)
(declare-fun x2138 () Int)
(declare-fun x1674 () Bool)
(declare-fun x8597 () Bool)
(declare-fun x6826 () Int)
(declare-fun x3252 () Int)
(declare-fun x4107 () Int)
(declare-fun x6442 () Bool)
(declare-fun x4047 () Bool)
(declare-fun x8764 () Bool)
(declare-fun x4314 () Int)
(declare-fun x987 () Int)
(declare-fun x2586 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x5749 () Bool)
(declare-fun x6985 () Int)
(declare-fun x8463 () Bool)
(declare-fun x1973 () Int)
(declare-fun x696 () Int)
(declare-fun x6687 () Int)
(declare-fun x4607 () Bool)
(declare-fun x5948 () Int)
(declare-fun x1286 () Bool)
(declare-fun x8498 () Int)
(declare-fun x4221 () Bool)
(declare-fun x5939 () Int)
(declare-fun x6794 () Int)
(declare-fun x4873 () Int)
(declare-fun x3403 () Bool)
(declare-fun x4909 () Int)
(declare-fun x2233 () x112)
(declare-fun x4242 () Bool)
(declare-fun x7086 () Int)
(declare-fun x5872 () Int)
(declare-fun x5478 () Bool)
(declare-fun x8365 () x112)
(declare-fun x7743 () Bool)
(declare-fun x1772 () Int)
(declare-fun x8839 () Int)
(declare-fun x4299 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x8482 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x5374 () Int)
(declare-fun x7193 () Int)
(declare-fun x854 () Bool)
(declare-fun x4892 () Bool)
(declare-fun x4342 () Bool)
(declare-fun x3692 () Bool)
(declare-fun x994 () Bool)
(declare-fun x999 () x112)
(declare-fun x2115 () Int)
(declare-fun x1316 () Bool)
(declare-fun x1464 () x112)
(declare-fun x3394 () Int)
(declare-fun x4862 () Int)
(declare-fun x7404 () Bool)
(declare-fun x4243 () Int)
(declare-fun x2339 () Bool)
(declare-fun x4298 () Bool)
(declare-fun x4589 () Bool)
(declare-fun x3951 () Int)
(declare-fun x8518 () Bool)
(declare-fun x9200 () Bool)
(declare-fun x7175 () Bool)
(declare-fun x3072 () Bool)
(declare-fun x831 () Int)
(declare-fun x3474 () Bool)
(declare-fun x7497 () x112)
(declare-fun x841 () Int)
(declare-fun x1701 () Int)
(declare-fun x7439 () Int)
(declare-fun x210 () Int)
(declare-fun x8778 () Int)
(declare-fun x2107 () Int)
(declare-fun x7749 () Int)
(declare-fun x7147 () Bool)
(declare-fun x8472 () Bool)
(declare-fun x3058 () Int)
(declare-fun x3953 () Bool)
(declare-fun x5234 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x5996 () Bool)
(declare-fun x5283 () Bool)
(declare-fun x8218 () x112)
(declare-fun x7689 () Bool)
(declare-fun x3184 () x112)
(declare-fun x8951 () Bool)
(declare-fun x170 () Bool)
(declare-fun x2459 () Int)
(declare-fun x3180 () Int)
(declare-fun x8596 () Bool)
(declare-fun x8916 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x4452 () Bool)
(declare-fun x8860 () Int)
(declare-fun x1314 () Int)
(declare-fun x1534 () Int)
(declare-fun x3706 () Bool)
(declare-fun x6444 () Bool)
(declare-fun x105 () Bool)
(declare-fun x6192 () Int)
(declare-fun x1732 () Int)
(declare-fun x4054 () Bool)
(declare-fun x6523 () Int)
(declare-fun x5134 () x112)
(declare-fun x6924 () Bool)
(declare-fun x3591 () Int)
(declare-fun x5056 () Int)
(declare-fun x7602 () Int)
(declare-fun x4527 () Bool)
(declare-fun x3136 () x112)
(declare-fun x612 () Bool)
(declare-fun x3067 () Bool)
(declare-fun x5540 () Bool)
(declare-fun x4577 () Int)
(declare-fun x4132 () Bool)
(declare-fun x7126 () Int)
(declare-fun x3867 () Bool)
(declare-fun x7059 () Int)
(declare-fun x2844 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x4618 () Int)
(declare-fun x7291 () Int)
(declare-fun x1550 () Bool)
(declare-fun x3344 () Bool)
(declare-fun x3520 () Int)
(declare-fun x4749 () Bool)
(declare-fun x5148 () Int)
(declare-fun x2130 () x112)
(declare-fun x8618 () Bool)
(declare-fun x7606 () Int)
(declare-fun x3208 () Bool)
(declare-fun x8329 () Bool)
(declare-fun x143 () Bool)
(declare-fun x3760 () Int)
(declare-fun x8021 () Bool)
(declare-fun x7236 () Bool)
(declare-fun x6809 () x112)
(declare-fun x6889 () Int)
(declare-fun x7576 () x112)
(declare-fun x4002 () Int)
(declare-fun x3395 () Bool)
(declare-fun x8145 () Bool)
(declare-fun x2002 () Int)
(declare-fun x4418 () Int)
(declare-fun x411 () Bool)
(declare-fun x793 () Int)
(declare-fun x5348 () Bool)
(declare-fun x6327 () Bool)
(declare-fun x4434 () Bool)
(declare-fun x6411 () Bool)
(declare-fun x5235 () x112)
(declare-fun x3105 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x349 () Bool)
(declare-fun x3015 () Bool)
(declare-fun x6822 () Bool)
(declare-fun x7015 () Bool)
(declare-fun x7379 () Bool)
(declare-fun x4675 () Bool)
(declare-fun x8640 () Bool)
(declare-fun x4504 () Bool)
(declare-fun x2608 () Int)
(declare-fun x1786 () Int)
(declare-fun x6152 () Int)
(declare-fun x7111 () Int)
(declare-fun x173 () Bool)
(declare-fun x303 () Bool)
(declare-fun x7170 () Bool)
(declare-fun x7636 () Int)
(declare-fun x1424 () Int)
(declare-fun x9012 () Bool)
(declare-fun x6473 () Int)
(declare-fun x790 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x5395 () Bool)
(declare-fun x6135 () Int)
(declare-fun x1587 () Int)
(declare-fun x3873 () Int)
(declare-fun x8627 () Int)
(declare-fun x708 () Int)
(declare-fun x2135 () Int)
(declare-fun x8052 () Bool)
(declare-fun x7759 () Bool)
(declare-fun x4380 () Bool)
(declare-fun x4820 () Bool)
(declare-fun x6643 () Int)
(declare-fun x8712 () Bool)
(declare-fun x6965 () Int)
(declare-fun x7726 () Int)
(declare-fun x7034 () Bool)
(declare-fun x6810 () Bool)
(declare-fun x4025 () Bool)
(declare-fun x2708 () Bool)
(declare-fun x7390 () Int)
(declare-fun x4724 () Int)
(declare-fun x7312 () Bool)
(declare-fun x3209 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x4932 () Int)
(declare-fun x6576 () Bool)
(declare-fun x8071 () x112)
(declare-fun x7721 () Bool)
(declare-fun x5022 () Bool)
(declare-fun x5186 () Int)
(declare-fun x668 () Bool)
(declare-fun x6706 () Bool)
(declare-fun x7320 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x7610 () Int)
(declare-fun x5909 () Int)
(declare-fun x1616 () Bool)
(declare-fun x3201 () Bool)
(declare-fun x6853 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x9205 () Int)
(declare-fun x7862 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x88 () x112)
(declare-fun x3941 () Int)
(declare-fun x3163 () Bool)
(declare-fun x7181 () Bool)
(declare-fun x5553 () Int)
(declare-fun x7719 () Int)
(declare-fun x5663 () Bool)
(declare-fun x3051 () Int)
(declare-fun x4416 () Int)
(declare-fun x7592 () Int)
(declare-fun x1442 () Int)
(declare-fun x2783 () Bool)
(declare-fun x4103 () Bool)
(declare-fun x80 () Bool)
(declare-fun x468 () Bool)
(declare-fun x84 () Int)
(declare-fun x4297 () Bool)
(declare-fun x3387 () Int)
(declare-fun x8106 () Int)
(declare-fun x8972 () Int)
(declare-fun x7067 () Bool)
(declare-fun x3984 () Int)
(declare-fun x2379 () Int)
(declare-fun x5460 () Bool)
(declare-fun x8228 () Int)
(declare-fun x8980 () x112)
(declare-fun x4816 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x6647 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x3569 () Bool)
(declare-fun x7938 () Bool)
(declare-fun x7600 () Bool)
(declare-fun x394 () Bool)
(declare-fun x4252 () Bool)
(declare-fun x8369 () Int)
(declare-fun x7924 () Int)
(declare-fun x1775 () Int)
(declare-fun x6866 () Int)
(declare-fun x7467 () Bool)
(declare-fun x7556 () x112)
(declare-fun x1068 () Int)
(declare-fun x3075 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x980 () Int)
(declare-fun x6878 () Bool)
(declare-fun x5218 () Int)
(declare-fun x5238 () Bool)
(declare-fun x8201 () Int)
(declare-fun x6169 () Bool)
(declare-fun x6271 () Bool)
(declare-fun x3032 () Bool)
(declare-fun x4099 () Bool)
(declare-fun x4520 () Int)
(declare-fun x8314 () Bool)
(declare-fun x7972 () Int)
(declare-fun x8619 () Int)
(declare-fun x1247 () Bool)
(declare-fun x4396 () Int)
(declare-fun x9148 () Bool)
(declare-fun x6531 () Bool)
(declare-fun x7818 () Bool)
(declare-fun x4074 () Int)
(declare-fun x5044 () Bool)
(declare-fun x7468 () Bool)
(declare-fun x784 () Int)
(declare-fun x2905 () Bool)
(declare-fun x6025 () Bool)
(declare-fun x4488 () Bool)
(declare-fun x2550 () Int)
(declare-fun x1988 () Int)
(declare-fun x3382 () Bool)
(declare-fun x3626 () Bool)
(declare-fun x6441 () Bool)
(declare-fun x9180 () x112)
(declare-fun x1471 () Int)
(declare-fun x2132 () Int)
(declare-fun x1038 () x112)
(declare-fun x2943 (Int) Int)
(declare-fun x5762 () Int)
(declare-fun x8287 () Int)
(declare-fun x995 () Int)
(declare-fun x9105 () Bool)
(declare-fun x6470 () Int)
(declare-fun x7518 (Int) Int)
(declare-fun x9195 () Bool)
(declare-fun x8834 () Int)
(declare-fun x7812 () Int)
(declare-fun x7028 () Bool)
(declare-fun x5619 () x112)
(declare-fun x2963 (Int) Int)
(declare-fun x5356 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x2302 () Int)
(declare-fun x2824 () Bool)
(declare-fun x3513 () Int)
(declare-fun x5951 (Int) Int)
(declare-fun x3291 () Bool)
(declare-fun x3906 () Bool)
(declare-fun x6533 () Int)
(declare-fun x5473 () Bool)
(declare-fun x3875 () Bool)
(declare-fun x9037 () Int)
(declare-fun x2826 () Bool)
(declare-fun x6527 () Bool)
(declare-fun x7830 () Int)
(declare-fun x5376 () Int)
(declare-fun x5547 () x112)
(declare-fun x5952 () Bool)
(declare-fun x8103 () x112)
(declare-fun x4790 () Bool)
(declare-fun x5247 () Int)
(declare-fun x4811 () Int)
(declare-fun x8914 () x112)
(declare-fun x7519 () Int)
(declare-fun x2442 () Bool)
(declare-fun x8254 () Int)
(declare-fun x6627 () Int)
(declare-fun x1266 () x112)
(declare-fun x4957 () Bool)
(declare-fun x3207 () Bool)
(declare-fun x934 () Int)
(declare-fun x6131 () x112)
(declare-fun x1459 () x112)
(declare-fun x4531 () Int)
(declare-fun x3910 () Int)
(declare-fun x7936 () Bool)
(declare-fun x8774 () Bool)
(declare-fun x5958 () Int)
(declare-fun x2658 () x112)
(declare-fun x4576 () Int)
(declare-fun x5458 () Bool)
(declare-fun x6440 () Int)
(declare-fun x8268 () Bool)
(declare-fun x8660 (Int) Int)
(declare-fun x4869 () x112)
(declare-fun x2370 () Bool)
(declare-fun x5584 () Bool)
(declare-fun x6369 () x112)
(declare-fun x7388 () Bool)
(declare-fun x7037 () Bool)
(declare-fun x4484 () Bool)
(declare-fun x4716 () Bool)
(declare-fun x3558 () Bool)
(declare-fun x7415 () Bool)
(declare-fun x8454 () Bool)
(declare-fun x5188 () Int)
(declare-fun x8602 () Int)
(declare-fun x6812 () Bool)
(declare-fun x3917 () Bool)
(declare-fun x2896 (Int) Int)
(declare-fun x4361 () Bool)
(declare-fun x7340 () Bool)
(declare-fun x3165 () Bool)
(declare-fun x8353 () Bool)
(declare-fun x2524 () Int)
(declare-fun x1959 () x112)
(declare-fun x5003 () x112)
(declare-fun x2258 () Bool)
(declare-fun x6041 () Bool)
(declare-fun x6189 () Int)
(declare-fun x4365 () Bool)
(declare-fun x2535 () Int)
(declare-fun x8732 (x112) Int)
(declare-fun x6626 () Bool)
(declare-fun x5224 () Bool)
(declare-fun x201 () Int)
(declare-fun x191 () Bool)
(declare-fun x1643 () Int)
(declare-fun x1582 () Int)
(declare-fun x2880 () Int)
(declare-fun x670 () Bool)
(declare-fun x966 (Int) Int)
(declare-fun x1573 () Bool)
(declare-fun x788 () Int)
(declare-fun x5899 () Bool)
(declare-fun x2146 () Int)
(declare-fun x8601 () Bool)
(declare-fun x4401 () Int)
(declare-fun x7796 () Bool)
(declare-fun x296 () x112)
(declare-fun x5379 () x112)
(declare-fun x5950 () Bool)
(declare-fun x8030 () Int)
(declare-fun x1388 () Int)
(declare-fun x2148 () Bool)
(declare-fun x8063 () Int)
(declare-fun x1047 () Bool)
(declare-fun x7864 () Bool)
(declare-fun x7069 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x7750 () Bool)
(declare-fun x5191 () Bool)
(declare-fun x6545 () Bool)
(declare-fun x8887 () Bool)
(declare-fun x9142 () Bool)
(declare-fun x4114 () x112)
(declare-fun x5801 () Int)
(declare-fun x4839 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x7225 () Bool)
(declare-fun x3246 () Int)
(declare-fun x6448 () Int)
(declare-fun x2440 () Int)
(declare-fun x8447 () Int)
(declare-fun x7082 () Int)
(declare-fun x4338 () Bool)
(declare-fun x3420 () Bool)
(declare-fun x5517 () Int)
(declare-fun x2214 () Bool)
(declare-fun x2349 () Int)
(declare-fun x2248 () x112)
(declare-fun x8208 () x112)
(declare-fun x3144 () Int)
(declare-fun x2513 () Bool)
(declare-fun x7445 () Bool)
(declare-fun x4087 () Int)
(declare-fun x8299 () Bool)
(declare-fun x4097 () Int)
(declare-fun x8787 () x112)
(declare-fun x7303 () Bool)
(declare-fun x923 () Bool)
(declare-fun x482 () Int)
(declare-fun x5296 () Bool)
(declare-fun x325 () Bool)
(declare-fun x4068 () Bool)
(declare-fun x5690 () Bool)
(declare-fun x6122 () Bool)
(declare-fun x6776 () Bool)
(declare-fun x2769 () Bool)
(declare-fun x2868 () Int)
(declare-fun x8629 () Int)
(declare-fun x8808 () Int)
(declare-fun x8856 () Bool)
(declare-fun x8902 () Bool)
(declare-fun x5341 () Int)
(declare-fun x3422 () Int)
(declare-fun x924 () Bool)
(declare-fun x7329 () Bool)
(declare-fun x98 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x4692 () Int)
(declare-fun x8347 () Bool)
(declare-fun x4552 () Bool)
(declare-fun x268 () Int)
(declare-fun x5160 () Bool)
(declare-fun x4390 () Bool)
(declare-fun x6631 () x112)
(declare-fun x2299 () x112)
(declare-fun x2895 () Bool)
(declare-fun x1466 () Int)
(declare-fun x4274 () x112)
(declare-fun x4798 () Int)
(declare-fun x4500 () Int)
(declare-fun x789 () Bool)
(declare-fun x7612 () Bool)
(declare-fun x703 () Int)
(declare-fun x7381 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x3542 () Int)
(declare-fun x6185 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x7879 () Bool)
(declare-fun x7917 () Int)
(declare-fun x9141 () Int)
(declare-fun x6419 (Int) Int)
(declare-fun x4056 () Bool)
(declare-fun x1411 () Int)
(declare-fun x4567 () Bool)
(declare-fun x7463 () Int)
(declare-fun x7262 () Bool)
(declare-fun x5630 () x112)
(declare-fun x1260 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x7294 () Int)
(declare-fun x2129 () Bool)
(declare-fun x4604 () Bool)
(declare-fun x3312 () Int)
(declare-fun x140 () x112)
(declare-fun x2047 () Bool)
(declare-fun x6901 () Int)
(declare-fun x7265 () Int)
(declare-fun x7701 () Int)
(declare-fun x6412 () x112)
(declare-fun x6279 () x112)
(declare-fun x5613 () Int)
(declare-fun x30 () Bool)
(declare-fun x7626 () x112)
(declare-fun x8027 () Bool)
(declare-fun x7210 () Int)
(declare-fun x3153 () Bool)
(declare-fun x2523 () Int)
(declare-fun x1359 () Bool)
(declare-fun x7199 () Bool)
(declare-fun x6136 () Bool)
(declare-fun x5580 () Int)
(declare-fun x6777 () x112)
(declare-fun x3726 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x8666 () x112)
(declare-fun x3822 () Bool)
(declare-fun x4876 () Int)
(declare-fun x4366 () Int)
(declare-fun x515 () Bool)
(declare-fun x1965 () Int)
(declare-fun x5803 () x112)
(declare-fun x8181 () x112)
(declare-fun x6801 () Bool)
(declare-fun x8794 () Int)
(declare-fun x6145 () Int)
(declare-fun x9174 () Bool)
(declare-fun x9158 () Int)
(declare-fun x1972 () Bool)
(declare-fun x7973 () Int)
(declare-fun x2663 () Bool)
(declare-fun x20 () Bool)
(declare-fun x3889 () Bool)
(declare-fun x2448 () Bool)
(declare-fun x7456 () Bool)
(declare-fun x3410 () Int)
(declare-fun x6638 () Bool)
(declare-fun x4084 () Bool)
(declare-fun x7829 () Bool)
(declare-fun x8998 () Bool)
(declare-fun x6241 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x3499 () Int)
(declare-fun x2805 () Int)
(declare-fun x1450 () Bool)
(declare-fun x8005 () x112)
(declare-fun x197 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x1244 () x112)
(declare-fun x569 () Bool)
(declare-fun x488 () Bool)
(declare-fun x5745 () Int)
(declare-fun x669 () Int)
(declare-fun x8517 () Bool)
(declare-fun x4681 () Bool)
(declare-fun x5828 () Bool)
(declare-fun x2324 () Int)
(declare-fun x8665 () Bool)
(declare-fun x6858 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x7446 () Bool)
(declare-fun x538 () Bool)
(declare-fun x8708 () Bool)
(declare-fun x4955 () Bool)
(declare-fun x9135 () Bool)
(declare-fun x7617 () Bool)
(declare-fun x6373 () Int)
(declare-fun x3701 () Bool)
(declare-fun x7155 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x9 () Int)
(declare-fun x1191 () Int)
(declare-fun x2521 () Bool)
(declare-fun x7338 () Int)
(declare-fun x107 () Bool)
(declare-fun x2762 () Int)
(declare-fun x4579 () Bool)
(declare-fun x2017 (x112) Int)
(declare-fun x3553 () x112)
(declare-fun x8175 () Bool)
(declare-fun x5229 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x5522 () x112)
(declare-fun x7387 () Bool)
(declare-fun x7859 () Int)
(declare-fun x3771 () Bool)
(declare-fun x7538 () x112)
(declare-fun x4040 () Bool)
(declare-fun x4480 () Int)
(declare-fun x6068 () Bool)
(declare-fun x3539 () Int)
(declare-fun x2474 () x112)
(declare-fun x2139 () Int)
(declare-fun x1213 () Bool)
(declare-fun x7934 () Bool)
(declare-fun x6 () Int)
(declare-fun x5074 () Bool)
(declare-fun x8318 () Bool)
(declare-fun x5903 () Int)
(declare-fun x4227 () Bool)
(declare-fun x3290 () Bool)
(declare-fun x8874 () Bool)
(declare-fun x3985 () Int)
(declare-fun x3443 () Int)
(declare-fun x2968 () x112)
(declare-fun x4594 () Int)
(declare-fun x4134 () Int)
(declare-fun x5416 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x2924 () Int)
(declare-fun x3505 () Bool)
(declare-fun x3374 () x112)
(declare-fun x3380 () Bool)
(declare-fun x8835 (x112) Int)
(declare-fun x6242 () Bool)
(declare-fun x4852 () Int)
(declare-fun x732 () x112)
(declare-fun x7292 () Int)
(declare-fun x7091 () Int)
(declare-fun x574 () Int)
(declare-fun x4370 () Int)
(declare-fun x461 () Bool)
(declare-fun x6323 () Int)
(declare-fun x5610 () Int)
(declare-fun x3149 () Int)
(declare-fun x3766 () Int)
(declare-fun x16 () Int)
(declare-fun x2843 () Int)
(declare-fun x1617 () Bool)
(declare-fun x610 () Int)
(declare-fun x5006 () Int)
(declare-fun x3329 () x112)
(declare-fun x4042 () Bool)
(declare-fun x8464 () Bool)
(declare-fun x243 () Bool)
(declare-fun x7307 () Int)
(declare-fun x5153 () Bool)
(declare-fun x7906 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x2671 () Int)
(declare-fun x3129 () Int)
(declare-fun x1945 () Int)
(declare-fun x97 () Bool)
(declare-fun x5623 () Int)
(declare-fun x5689 () Bool)
(declare-fun x9193 () Bool)
(declare-fun x7584 () Bool)
(declare-fun x8375 () Bool)
(declare-fun x6757 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x2754 () Bool)
(declare-fun x629 () Int)
(declare-fun x8621 () x112)
(declare-fun x1338 () Int)
(declare-fun x933 () Int)
(declare-fun x6172 () Int)
(declare-fun x930 () Int)
(declare-fun x6834 () Int)
(declare-fun x3326 () Bool)
(declare-fun x7962 () x112)
(declare-fun x7507 () Int)
(declare-fun x3746 () Bool)
(declare-fun x5143 () Bool)
(declare-fun x6891 () Bool)
(declare-fun x4685 () Bool)
(declare-fun x577 () Int)
(declare-fun x1203 (x112) Int)
(declare-fun x6260 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x7257 () Bool)
(declare-fun x6514 () Int)
(declare-fun x5979 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x8727 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x5840 () Bool)
(declare-fun x8913 () Int)
(declare-fun x1501 () Int)
(declare-fun x8112 () Bool)
(declare-fun x6264 () Bool)
(declare-fun x8376 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x2738 () Int)
(declare-fun x1409 () Int)
(declare-fun x6521 () Bool)
(declare-fun x7414 () Int)
(declare-fun x7367 () Int)
(declare-fun x2514 () x112)
(declare-fun x5358 () Int)
(declare-fun x9160 () Bool)
(declare-fun x155 () x112)
(declare-fun x6464 () Bool)
(declare-fun x869 () Bool)
(declare-fun x3818 () Int)
(declare-fun x206 () Int)
(declare-fun x2037 () Bool)
(declare-fun x7410 () Int)
(declare-fun x6904 () Bool)
(declare-fun x9216 () Bool)
(declare-fun x7466 () Int)
(declare-fun x4803 () Bool)
(declare-fun x8174 () Int)
(declare-fun x267 () Int)
(declare-fun x9182 () Bool)
(declare-fun x3402 () x112)
(declare-fun x6299 () Bool)
(declare-fun x9169 () Int)
(declare-fun x589 () Int)
(declare-fun x3286 () x112)
(declare-fun x5564 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1136 () Int)
(declare-fun x1923 () Bool)
(declare-fun x7681 () Int)
(declare-fun x1267 () Bool)
(declare-fun x8694 () Int)
(declare-fun x7724 () x112)
(declare-fun x8738 () x112)
(declare-fun x5142 () Int)
(declare-fun x7125 () Int)
(declare-fun x3560 () Bool)
(declare-fun x503 () Int)
(declare-fun x2311 () Bool)
(declare-fun x6045 () Bool)
(declare-fun x682 () x112)
(declare-fun x487 () Bool)
(declare-fun x3611 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x6134 () Bool)
(declare-fun x5831 () Bool)
(declare-fun x6239 () Int)
(declare-fun x667 () Bool)
(declare-fun x4189 () Bool)
(declare-fun x8532 () Int)
(declare-fun x234 () Int)
(declare-fun x5579 () Int)
(declare-fun x2770 () Bool)
(declare-fun x7188 () x112)
(declare-fun x2287 () Bool)
(declare-fun x4281 () Int)
(declare-fun x3346 () Int)
(declare-fun x909 () Bool)
(declare-fun x8793 () Int)
(declare-fun x6612 () Int)
(declare-fun x3135 () x112)
(declare-fun x4205 () Bool)
(declare-fun x8818 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x5171 () Int)
(declare-fun x2278 () Bool)
(declare-fun x1071 () Int)
(declare-fun x1234 () Bool)
(declare-fun x5173 () x112)
(declare-fun x4766 () Int)
(declare-fun x5763 () Int)
(declare-fun x5924 () Int)
(declare-fun x2184 () Int)
(declare-fun x6050 () Bool)
(declare-fun x4982 () Int)
(declare-fun x8292 () Int)
(declare-fun x7077 () Bool)
(declare-fun x28 () x112)
(declare-fun x1070 () Bool)
(declare-fun x5687 () Bool)
(declare-fun x6996 () Int)
(declare-fun x576 () Int)
(declare-fun x4946 () Bool)
(declare-fun x1224 () x112)
(declare-fun x8011 () Int)
(declare-fun x3342 () Bool)
(declare-fun x6720 () Bool)
(declare-fun x8380 () Bool)
(declare-fun x7211 () Bool)
(declare-fun x4021 () Bool)
(declare-fun x4332 () Bool)
(declare-fun x8405 () Int)
(declare-fun x998 () Bool)
(declare-fun x8142 () Bool)
(declare-fun x5808 () Int)
(declare-fun x2367 () Int)
(declare-fun x3896 () Int)
(declare-fun x2793 () Bool)
(declare-fun x301 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x4804 () Int)
(declare-fun x239 () Int)
(declare-fun x5595 () Int)
(declare-fun x8295 () Int)
(declare-fun x7541 () Int)
(declare-fun x543 () Int)
(declare-fun x6229 () Int)
(declare-fun x2475 () Int)
(declare-fun x8492 () Bool)
(declare-fun x4325 () Int)
(declare-fun x147 () x112)
(declare-fun x2188 () Int)
(declare-fun x8307 () Int)
(declare-fun x848 () Int)
(declare-fun x7881 () Bool)
(declare-fun x4787 () Int)
(declare-fun x4744 () Bool)
(declare-fun x6900 () Bool)
(declare-fun x2480 () Bool)
(declare-fun x6182 () Bool)
(declare-fun x4855 () Bool)
(declare-fun x6615 () Bool)
(declare-fun x7665 () Bool)
(declare-fun x6934 () Int)
(declare-fun x6105 () Bool)
(declare-fun x730 () Int)
(declare-fun x8845 () Bool)
(declare-fun x5721 () Int)
(declare-fun x3736 () Int)
(declare-fun x1962 () Bool)
(declare-fun x4907 () x112)
(declare-fun x7713 () Bool)
(declare-fun x6034 () Int)
(declare-fun x8795 () Int)
(declare-fun x6035 () Int)
(declare-fun x954 () Bool)
(declare-fun x7043 () Int)
(declare-fun x2628 () Bool)
(declare-fun x3600 () Int)
(declare-fun x1127 () Int)
(declare-fun x3666 () Int)
(declare-fun x7223 () Bool)
(declare-fun x7117 () Int)
(declare-fun x8203 () Int)
(declare-fun x5917 () Bool)
(declare-fun x8585 () x112)
(declare-fun x2556 () Bool)
(declare-fun x6255 () Bool)
(declare-fun x4823 () Int)
(declare-fun x8429 () Bool)
(declare-fun x8189 () Int)
(declare-fun x5985 () Int)
(declare-fun x5500 () Bool)
(declare-fun x2413 () Int)
(declare-fun x960 () Bool)
(declare-fun x7285 () x112)
(declare-fun x44 () x112)
(declare-fun x8956 () Bool)
(declare-fun x8317 () Bool)
(declare-fun x2914 () Int)
(declare-fun x142 () Int)
(declare-fun x7711 () Bool)
(declare-fun x5353 () Int)
(declare-fun x2835 () Bool)
(declare-fun x5597 () Bool)
(declare-fun x2702 () Int)
(declare-fun x6162 () Int)
(declare-fun x8542 () Bool)
(declare-fun x2070 () Bool)
(declare-fun x5150 () Bool)
(declare-fun x7071 () Int)
(declare-fun x8062 () Int)
(declare-fun x397 () Int)
(declare-fun x6477 () Bool)
(declare-fun x7877 () x112)
(declare-fun x5126 () x112)
(declare-fun x5486 () Bool)
(declare-fun x6485 () Bool)
(declare-fun x8423 () Int)
(declare-fun x4069 () Bool)
(declare-fun x1196 () x112)
(declare-fun x230 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x6178 () Bool)
(declare-fun x6707 () Bool)
(declare-fun x5469 () Bool)
(declare-fun x4922 () Bool)
(declare-fun x7295 (x112) Int)
(declare-fun x1892 () Bool)
(declare-fun x4551 () Bool)
(declare-fun x6681 () Bool)
(declare-fun x8473 () Bool)
(declare-fun x4653 () Bool)
(declare-fun x205 () x112)
(declare-fun x2601 () Bool)
(declare-fun x865 () Int)
(declare-fun x8431 () Bool)
(declare-fun x913 () Bool)
(declare-fun x6313 () Bool)
(declare-fun x8771 () Bool)
(declare-fun x7716 () x112)
(declare-fun x2529 () Bool)
(declare-fun x7699 (x112) Int)
(declare-fun x7937 () Bool)
(declare-fun x5575 () Bool)
(declare-fun x1377 () Int)
(declare-fun x7035 () Bool)
(declare-fun x3820 () Int)
(declare-fun x1596 () Bool)
(declare-fun x1401 () x112)
(declare-fun x2649 () Int)
(declare-fun x171 () Bool)
(declare-fun x7123 () Bool)
(declare-fun x3739 () Int)
(declare-fun x5140 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x704 () Bool)
(declare-fun x6665 () Bool)
(declare-fun x4443 () Bool)
(declare-fun x8572 () Bool)
(declare-fun x2332 () Int)
(declare-fun x8946 () x112)
(declare-fun x4079 () Bool)
(declare-fun x2441 () Int)
(declare-fun x1336 () x112)
(declare-fun x3079 () x112)
(declare-fun x366 () Bool)
(declare-fun x144 () Int)
(declare-fun x458 () Int)
(declare-fun x447 () Bool)
(declare-fun x8503 () Int)
(declare-fun x7779 () Bool)
(declare-fun x6349 () x112)
(declare-fun x7761 () Int)
(declare-fun x693 () Int)
(declare-fun x5969 () Bool)
(declare-fun x3663 () Bool)
(declare-fun x738 () Bool)
(declare-fun x3639 () x112)
(declare-fun x1013 () x112)
(declare-fun x3340 () Bool)
(declare-fun x3478 () Bool)
(declare-fun x2247 () Bool)
(declare-fun x5688 () x112)
(declare-fun x6552 () Bool)
(declare-fun x7143 () Int)
(declare-fun x3772 () Bool)
(declare-fun x622 () Bool)
(declare-fun x3590 () Bool)
(declare-fun x7447 () Int)
(declare-fun x1258 () Int)
(declare-fun x4571 () Bool)
(declare-fun x6300 () Int)
(declare-fun x6062 () Bool)
(declare-fun x4255 () Bool)
(declare-fun x8149 () Bool)
(declare-fun x2841 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x8864 () Bool)
(declare-fun x8452 () Int)
(declare-fun x8345 () x112)
(declare-fun x7471 () Bool)
(declare-fun x4461 () Bool)
(declare-fun x5682 () x112)
(declare-fun x7926 () Bool)
(declare-fun x4089 () Int)
(declare-fun x6699 () Bool)
(declare-fun x2859 () Int)
(declare-fun x2977 () Bool)
(declare-fun x7394 () Int)
(declare-fun x7200 () Bool)
(declare-fun x3069 () Bool)
(declare-fun x996 () Bool)
(declare-fun x9034 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x584 () Bool)
(declare-fun x3254 () Int)
(declare-fun x3587 () Int)
(declare-fun x1045 () Int)
(declare-fun x5506 () Bool)
(declare-fun x6037 () Bool)
(declare-fun x6269 () Int)
(declare-fun x734 () Bool)
(declare-fun x4440 () Bool)
(declare-fun x8696 () Bool)
(declare-fun x1880 () Int)
(declare-fun x931 () Int)
(declare-fun x4561 () Bool)
(declare-fun x5396 () Bool)
(declare-fun x6013 () Bool)
(declare-fun x110 () Bool)
(declare-fun x4052 () Bool)
(declare-fun x5034 () Bool)
(declare-fun x5706 () Bool)
(declare-fun x9157 () Bool)
(declare-fun x2366 () Bool)
(declare-fun x486 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x9027 () Bool)
(declare-fun x3289 () Bool)
(declare-fun x3905 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x7112 () Bool)
(declare-fun x1215 () Int)
(declare-fun x1916 () Bool)
(declare-fun x4334 () Int)
(declare-fun x1193 () Int)
(declare-fun x7940 () Bool)
(declare-fun x1489 () Int)
(declare-fun x5636 () x112)
(declare-fun x6232 () Bool)
(declare-fun x8862 () Bool)
(declare-fun x952 () Bool)
(declare-fun x5280 () Int)
(declare-fun x7157 () Bool)
(declare-fun x5370 () Int)
(declare-fun x2484 () x112)
(declare-fun x7282 () Bool)
(declare-fun x6773 () x112)
(declare-fun x5836 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x6465 () Int)
(declare-fun x2374 () x112)
(declare-fun x7543 () Bool)
(declare-fun x4742 () Int)
(declare-fun x4722 () Int)
(declare-fun x1757 () Bool)
(declare-fun x4374 () Int)
(declare-fun x6938 () Bool)
(declare-fun x8040 () x112)
(declare-fun x3100 () Bool)
(declare-fun x3392 () Int)
(declare-fun x8686 () Bool)
(declare-fun x130 () Bool)
(declare-fun x213 () Bool)
(declare-fun x6471 () Int)
(declare-fun x7752 () Bool)
(declare-fun x9130 () x112)
(declare-fun x151 () Bool)
(declare-fun x1571 () Int)
(declare-fun x6052 () x112)
(declare-fun x361 () Int)
(declare-fun x11 () Bool)
(declare-fun x5190 () Bool)
(declare-fun x5773 () Int)
(declare-fun x3235 () Bool)
(declare-fun x8377 () Int)
(declare-fun x4359 () Bool)
(declare-fun x4344 () Int)
(declare-fun x4980 () Int)
(declare-fun x4941 () Bool)
(declare-fun x985 () Int)
(declare-fun x6153 () x112)
(declare-fun x252 () Bool)
(declare-fun x5366 () Bool)
(declare-fun x7802 () Bool)
(declare-fun x2729 () Bool)
(declare-fun x7264 () Bool)
(declare-fun x323 () Int)
(declare-fun x5305 () Bool)
(declare-fun x2574 () Bool)
(declare-fun x4391 () Int)
(declare-fun x1101 () Bool)
(declare-fun x801 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x2369 () x112)
(declare-fun x4013 () Bool)
(declare-fun x2272 () Bool)
(declare-fun x859 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x8114 () Int)
(declare-fun x2597 () Bool)
(declare-fun x2728 () x112)
(declare-fun x840 () Bool)
(declare-fun x7888 () Bool)
(declare-fun x8185 () Bool)
(declare-fun x8646 () x112)
(declare-fun x8233 () Int)
(declare-fun x1564 () Bool)
(declare-fun x5141 () x112)
(declare-fun x2872 (Int) Int)
(declare-fun x9051 () Bool)
(declare-fun x4885 () Bool)
(declare-fun x4974 () Bool)
(declare-fun x5549 () Bool)
(declare-fun x5862 () Int)
(declare-fun x3829 () Bool)
(declare-fun x1765 () Int)
(declare-fun x1137 () Int)
(declare-fun x1067 () Bool)
(declare-fun x8430 () Int)
(declare-fun x1037 () Bool)
(declare-fun x4522 () Bool)
(declare-fun x4772 () Bool)
(declare-fun x4654 () Int)
(declare-fun x2468 () Int)
(declare-fun x3225 () Int)
(declare-fun x546 () Bool)
(declare-fun x3131 () Int)
(declare-fun x689 () Bool)
(declare-fun x8961 () x112)
(declare-fun x1022 () Bool)
(declare-fun x6288 () Bool)
(declare-fun x2680 () Int)
(declare-fun x881 () Int)
(declare-fun x87 () Bool)
(declare-fun x8544 () Bool)
(declare-fun x4815 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x7521 () Bool)
(declare-fun x6954 () Int)
(declare-fun x972 () Int)
(declare-fun x3398 () x112)
(declare-fun x5635 () Bool)
(declare-fun x3437 () Int)
(declare-fun x6418 () x112)
(declare-fun x7569 () Int)
(declare-fun x2329 () x112)
(declare-fun x2657 () Int)
(declare-fun x746 () Bool)
(declare-fun x6355 () Bool)
(declare-fun x6594 () Bool)
(declare-fun x4451 () Bool)
(declare-fun x4066 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x5990 () Int)
(declare-fun x535 () Bool)
(declare-fun x7110 () Int)
(declare-fun x991 () Bool)
(declare-fun x3613 () Bool)
(declare-fun x9084 (x112) Int)
(declare-fun x6244 () Bool)
(declare-fun x3821 () Int)
(declare-fun x1828 () Bool)
(declare-fun x1246 () x112)
(declare-fun x1954 () Bool)
(declare-fun x1729 () Bool)
(declare-fun x7495 () x112)
(declare-fun x8077 () Bool)
(declare-fun x2467 () Int)
(declare-fun x5847 (x112) Int)
(declare-fun x7911 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x6394 () Bool)
(declare-fun x1750 () Int)
(declare-fun x5574 () Bool)
(declare-fun x8384 () Int)
(declare-fun x4322 () Int)
(declare-fun x8726 () Bool)
(declare-fun x2580 () Bool)
(declare-fun x5731 () Bool)
(declare-fun x4741 () Int)
(declare-fun x1943 () Bool)
(declare-fun x882 () Int)
(declare-fun x5650 () Bool)
(declare-fun x3285 () Int)
(declare-fun x2458 () Int)
(declare-fun x8765 () Bool)
(declare-fun x8636 () Int)
(declare-fun x6489 () Int)
(declare-fun x5620 () x112)
(declare-fun x5098 () Int)
(declare-fun x7928 () Int)
(declare-fun x14 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x2668 () Int)
(declare-fun x7357 () Bool)
(declare-fun x7760 () x112)
(declare-fun x5802 () Bool)
(declare-fun x3573 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x8025 () x112)
(declare-fun x4059 () Int)
(declare-fun x8389 () Int)
(declare-fun x9019 () Bool)
(declare-fun x8772 () Bool)
(declare-fun x4632 () Int)
(declare-fun x7846 () Bool)
(declare-fun x464 () x112)
(declare-fun x1243 () Int)
(declare-fun x1255 () Bool)
(declare-fun x5159 () x112)
(declare-fun x7764 () Int)
(declare-fun x2388 () x112)
(declare-fun x4854 () Bool)
(declare-fun x3521 () x112)
(declare-fun x548 () Bool)
(declare-fun x2999 () Int)
(declare-fun x2557 () Int)
(declare-fun x6407 () Bool)
(declare-fun x8056 () Int)
(declare-fun x3552 () Int)
(declare-fun x6984 () Bool)
(declare-fun x6028 () Bool)
(declare-fun x455 () Bool)
(declare-fun x3741 () Int)
(declare-fun x1036 () Bool)
(declare-fun x1580 () x112)
(declare-fun x4976 () Int)
(declare-fun x3381 () x112)
(declare-fun x5815 () Int)
(declare-fun x4918 () Bool)
(declare-fun x9218 () Int)
(declare-fun x6734 () Bool)
(declare-fun x1299 () x112)
(declare-fun x1938 () Bool)
(declare-fun x8758 () Int)
(declare-fun x4521 () x112)
(declare-fun x2433 () Bool)
(declare-fun x4759 () Int)
(declare-fun x298 () x112)
(declare-fun x181 () Bool)
(declare-fun x7013 () Bool)
(declare-fun x6879 () Bool)
(declare-fun x2853 () Bool)
(declare-fun x2091 () Int)
(declare-fun x118 () Bool)
(declare-fun x8807 () Bool)
(declare-fun x2784 () Bool)
(declare-fun x5770 () Bool)
(declare-fun x4884 () Int)
(declare-fun x18 (x112) Int)
(declare-fun x339 () Int)
(declare-fun x6222 () Bool)
(declare-fun x1197 () x112)
(declare-fun x3339 () Int)
(declare-fun x8550 () Bool)
(declare-fun x432 () x112)
(declare-fun x6835 () Int)
(declare-fun x6029 () Bool)
(declare-fun x3415 () x112)
(declare-fun x8757 () Bool)
(declare-fun x8476 () Int)
(declare-fun x819 () Bool)
(declare-fun x6745 () Int)
(declare-fun x6262 () Bool)
(declare-fun x6424 () Bool)
(declare-fun x81 () Int)
(declare-fun x5135 () Bool)
(declare-fun x6390 () Bool)
(declare-fun x4908 () Bool)
(declare-fun x956 () Bool)
(declare-fun x4961 () Bool)
(declare-fun x7824 () x112)
(declare-fun x3864 () Bool)
(declare-fun x5796 () Bool)
(declare-fun x3711 () Bool)
(declare-fun x8809 () Bool)
(declare-fun x7383 () Bool)
(declare-fun x5231 () Bool)
(declare-fun x288 () x112)
(declare-fun x7545 () Int)
(declare-fun x7342 () Int)
(declare-fun x5550 () Bool)
(declare-fun x766 () Bool)
(declare-fun x4229 () Int)
(declare-fun x3823 () Int)
(declare-fun x4868 () Bool)
(declare-fun x2380 () Bool)
(declare-fun x9079 () Bool)
(declare-fun x467 () x112)
(declare-fun x3317 () Bool)
(declare-fun x333 () Int)
(declare-fun x6625 () Bool)
(declare-fun x8556 () Bool)
(declare-fun x7554 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x5210 () Int)
(declare-fun x2305 () Int)
(declare-fun x8773 () Int)
(declare-fun x1422 () Bool)
(declare-fun x6197 () Bool)
(declare-fun x4945 () Bool)
(declare-fun x3775 () Bool)
(declare-fun x7607 () Int)
(declare-fun x1084 () Bool)
(declare-fun x3202 () Bool)
(declare-fun x8117 () Bool)
(declare-fun x5010 () Bool)
(declare-fun x541 () Bool)
(declare-fun x3975 () Bool)
(declare-fun x6339 () Int)
(declare-fun x8486 () Bool)
(declare-fun x5953 () Int)
(declare-fun x1461 () Bool)
(declare-fun x5076 () Int)
(declare-fun x6997 () x112)
(declare-fun x2907 () Int)
(declare-fun x2790 () x112)
(declare-fun x6852 () Bool)
(declare-fun x8196 () x112)
(declare-fun x3093 () Bool)
(declare-fun x5219 () Bool)
(declare-fun x6205 () Bool)
(declare-fun x8521 () Int)
(declare-fun x6287 () Bool)
(declare-fun x8991 () Bool)
(declare-fun x8039 () Bool)
(declare-fun x8284 () Int)
(declare-fun x2229 () x112)
(declare-fun x2821 () Int)
(declare-fun x7883 () Bool)
(declare-fun x2928 () Bool)
(declare-fun x2491 () Int)
(declare-fun x2501 () Bool)
(declare-fun x7395 () Int)
(declare-fun x767 () Int)
(declare-fun x3980 () Bool)
(declare-fun x3844 () Int)
(declare-fun x7809 () x112)
(declare-fun x864 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x8348 () Bool)
(declare-fun x3363 () Bool)
(declare-fun x1093 () Int)
(declare-fun x7840 () Int)
(declare-fun x7165 () Int)
(declare-fun x1816 () Bool)
(declare-fun x6563 () Bool)
(declare-fun x5571 () Bool)
(declare-fun x5425 () Int)
(declare-fun x1282 () Int)
(declare-fun x845 () x112)
(declare-fun x5837 () Int)
(declare-fun x4125 () Int)
(declare-fun x1514 () Int)
(declare-fun x6931 () x112)
(declare-fun x414 () Bool)
(declare-fun x3389 () Int)
(declare-fun x4428 () Bool)
(declare-fun x3038 () Int)
(declare-fun x8524 () x112)
(declare-fun x1919 () x112)
(declare-fun x7434 () Bool)
(declare-fun x7047 () Int)
(declare-fun x2743 () Bool)
(declare-fun x7362 () Bool)
(declare-fun x190 () Bool)
(declare-fun x2128 () x112)
(declare-fun x1434 () Int)
(declare-fun x1594 () Int)
(declare-fun x1762 () Bool)
(declare-fun x5894 () x112)
(declare-fun x3897 () Int)
(declare-fun x2239 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x2168 () Int)
(declare-fun x5502 () Int)
(declare-fun x115 () Int)
(declare-fun x1142 () Bool)
(declare-fun x2854 () x112)
(declare-fun x7998 () Bool)
(declare-fun x4073 () Bool)
(declare-fun x5956 () Bool)
(declare-fun x8859 () Bool)
(declare-fun x1896 () Bool)
(declare-fun x8623 () Bool)
(declare-fun x1241 () Int)
(declare-fun x4415 () Bool)
(declare-fun x2338 () Bool)
(declare-fun x640 () Int)
(declare-fun x7280 () Bool)
(declare-fun x5457 (x112) Int)
(declare-fun x8410 () Int)
(declare-fun x9049 () Int)
(declare-fun x1144 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x5254 () x112)
(declare-fun x7482 () Int)
(declare-fun x1447 () Bool)
(declare-fun x4300 () Bool)
(declare-fun x4272 () Bool)
(declare-fun x3206 () Bool)
(declare-fun x3008 () Bool)
(declare-fun x8653 () Int)
(declare-fun x5777 () Bool)
(declare-fun x2432 () x112)
(declare-fun x398 () Bool)
(declare-fun x6725 () x112)
(declare-fun x8988 () x112)
(declare-fun x6417 () Int)
(declare-fun x5797 () x112)
(declare-fun x5533 () Bool)
(declare-fun x4881 () Bool)
(declare-fun x5336 () Bool)
(declare-fun x8797 () Bool)
(declare-fun x5653 () Bool)
(declare-fun x4538 () Bool)
(declare-fun x7880 () Int)
(declare-fun x3003 () Bool)
(declare-fun x8873 () Bool)
(declare-fun x4670 () Bool)
(declare-fun x8491 () Bool)
(declare-fun x7186 () Bool)
(declare-fun x8305 () Bool)
(declare-fun x9041 () Bool)
(declare-fun x6539 () Int)
(declare-fun x211 () x112)
(declare-fun x662 () Bool)
(declare-fun x125 () Int)
(declare-fun x238 () Bool)
(declare-fun x3245 () Int)
(declare-fun x8750 () Bool)
(declare-fun x6541 () Bool)
(declare-fun x4754 () Int)
(declare-fun x9036 () x112)
(declare-fun x1697 () Bool)
(declare-fun x5856 () Bool)
(declare-fun x7773 () Int)
(declare-fun x2794 () x112)
(declare-fun x6243 () Bool)
(declare-fun x8912 () x112)
(declare-fun x5692 () Bool)
(declare-fun x5426 () Bool)
(declare-fun x6472 () Bool)
(declare-fun x7655 () Bool)
(declare-fun x5145 () Bool)
(declare-fun x8250 () Bool)
(declare-fun x7965 () Int)
(declare-fun x2612 () Int)
(declare-fun x2840 () Bool)
(declare-fun x4661 () Int)
(declare-fun x6346 () Int)
(declare-fun x2876 () Bool)
(declare-fun x7509 () Bool)
(declare-fun x3500 () Bool)
(declare-fun x5455 () Int)
(declare-fun x4690 () Int)
(declare-fun x1275 () Bool)
(declare-fun x6276 () Bool)
(declare-fun x1800 () Int)
(declare-fun x4319 () Bool)
(declare-fun x1836 () Int)
(declare-fun x7920 () Bool)
(declare-fun x5842 () x112)
(declare-fun x6554 () Bool)
(declare-fun x3200 () Bool)
(declare-fun x5354 () Int)
(declare-fun x7851 () Bool)
(declare-fun x598 () Bool)
(declare-fun x3859 () x112)
(declare-fun x6320 () Bool)
(declare-fun x7425 () Bool)
(declare-fun x5625 () Int)
(declare-fun x9070 () x112)
(declare-fun x6588 () Bool)
(declare-fun x4254 () Bool)
(declare-fun x3968 () Int)
(declare-fun x9183 () Bool)
(declare-fun x7785 () Int)
(declare-fun x1200 () Bool)
(declare-fun x6688 () Bool)
(declare-fun x6432 () Int)
(declare-fun x5321 () Bool)
(declare-fun x7099 () Int)
(declare-fun x1237 () Bool)
(declare-fun x7682 () Int)
(declare-fun x540 () Int)
(declare-fun x1645 (x112) Int)
(declare-fun x1827 () Bool)
(declare-fun x5184 () Bool)
(declare-fun x9062 () Int)
(declare-fun x6118 () Bool)
(declare-fun x2814 () Int)
(declare-fun x4026 () Bool)
(declare-fun x2183 () Int)
(declare-fun x483 () Bool)
(declare-fun x6534 () Bool)
(declare-fun x6058 () Bool)
(declare-fun x193 () Int)
(declare-fun x8850 () Bool)
(declare-fun x8448 () Int)
(declare-fun x7139 () x112)
(declare-fun x7289 () Int)
(declare-fun x6555 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x4474 () Int)
(declare-fun x2008 () Bool)
(declare-fun x8878 () Bool)
(declare-fun x4836 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x4879 () x112)
(declare-fun x1146 () Int)
(declare-fun x1546 () Bool)
(declare-fun x3874 () Int)
(declare-fun x4265 () Int)
(declare-fun x7674 () Int)
(declare-fun x1366 () Int)
(declare-fun x1527 () Int)
(declare-fun x2306 () Bool)
(declare-fun x6672 () Bool)
(declare-fun x2227 () Int)
(declare-fun x2171 () Int)
(declare-fun x2240 () Int)
(declare-fun x1753 () Int)
(declare-fun x5832 () Int)
(declare-fun x3933 () Bool)
(declare-fun x5342 () Bool)
(declare-fun x7762 () Bool)
(declare-fun x7581 () Bool)
(declare-fun x4799 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x9227 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x6833 () Bool)
(declare-fun x4174 () Bool)
(declare-fun x763 () Int)
(declare-fun x6785 () Bool)
(declare-fun x773 () Int)
(declare-fun x2316 () Int)
(declare-fun x2711 () Int)
(declare-fun x1537 () Bool)
(declare-fun x257 () Int)
(declare-fun x1143 () Int)
(declare-fun x5551 () Bool)
(declare-fun x7090 () x112)
(declare-fun x2749 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x1323 () x112)
(declare-fun x261 () Bool)
(declare-fun x9159 () Int)
(declare-fun x9024 () x112)
(declare-fun x8115 () x112)
(declare-fun x7577 () Int)
(declare-fun x8210 () Int)
(declare-fun x1785 () Bool)
(declare-fun x2778 () Bool)
(declare-fun x7142 () Bool)
(declare-fun x6087 () Bool)
(declare-fun x2156 () Int)
(declare-fun x1885 () Int)
(declare-fun x5294 () Bool)
(declare-fun x1318 () Int)
(declare-fun x2444 () Int)
(declare-fun x3265 () Int)
(declare-fun x2013 () Int)
(declare-fun x3592 () Bool)
(declare-fun x8840 () Int)
(declare-fun x1362 () Bool)
(declare-fun x3495 () Int)
(declare-fun x1986 () x112)
(declare-fun x4735 () Int)
(declare-fun x6915 () Bool)
(declare-fun x6628 () Int)
(declare-fun x3550 () Bool)
(declare-fun x2522 () x112)
(declare-fun x1639 () Bool)
(declare-fun x7032 () x112)
(declare-fun x4587 () x112)
(declare-fun x2488 () Bool)
(declare-fun x902 () Int)
(declare-fun x896 () Int)
(declare-fun x4142 () Bool)
(declare-fun x157 () Bool)
(declare-fun x3794 () Int)
(declare-fun x3609 () Bool)
(declare-fun x5726 () Bool)
(declare-fun x336 () Bool)
(declare-fun x3177 () Int)
(declare-fun x3431 () Bool)
(declare-fun x932 () Bool)
(declare-fun x6630 () Int)
(declare-fun x8102 () Int)
(declare-fun x8200 () Bool)
(declare-fun x5700 () Bool)
(declare-fun x7931 () Int)
(declare-fun x4541 () Bool)
(declare-fun x8697 () x112)
(declare-fun x4935 () Int)
(declare-fun x1851 () Bool)
(declare-fun x7621 () Int)
(declare-fun x3595 () Int)
(declare-fun x7049 () x112)
(declare-fun x1619 () Int)
(declare-fun x4821 () Bool)
(declare-fun x3602 () Int)
(declare-fun x6208 () Int)
(declare-fun x7932 () Int)
(declare-fun x7595 () x112)
(declare-fun x7002 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x7226 () Bool)
(declare-fun x3676 () Int)
(declare-fun x652 () Bool)
(declare-fun x4402 () Int)
(declare-fun x7643 () Bool)
(declare-fun x4304 () Bool)
(declare-fun x440 () Int)
(declare-fun x2691 () Int)
(declare-fun x3858 () Int)
(declare-fun x4219 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x4351 () Bool)
(declare-fun x5883 () Int)
(declare-fun x4508 () Bool)
(declare-fun x7081 () Bool)
(declare-fun x6104 () Bool)
(declare-fun x3531 () Bool)
(declare-fun x4845 () Bool)
(declare-fun x5468 () Bool)
(declare-fun x7192 () Int)
(declare-fun x3016 () Bool)
(declare-fun x5654 () x112)
(declare-fun x8165 () Int)
(declare-fun x3284 () Int)
(declare-fun x6046 () Bool)
(declare-fun x3660 () Bool)
(declare-fun x5657 () Bool)
(declare-fun x7240 () Bool)
(declare-fun x8749 () Bool)
(declare-fun x7579 () Int)
(declare-fun x8363 () Bool)
(declare-fun x7328 () Int)
(declare-fun x3198 () Bool)
(declare-fun x6127 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x4865 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x134 () Int)
(declare-fun x792 () Int)
(declare-fun x5988 () Int)
(declare-fun x5199 () Bool)
(declare-fun x3217 () Int)
(declare-fun x2412 () Bool)
(declare-fun x1881 () Int)
(declare-fun x7402 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x4386 () x112)
(declare-fun x7391 () Int)
(declare-fun x7114 () Int)
(declare-fun x5444 () Int)
(declare-fun x7253 () Bool)
(declare-fun x4006 () Bool)
(declare-fun x9035 () Bool)
(declare-fun x3974 () Bool)
(declare-fun x3523 () Int)
(declare-fun x7135 () Bool)
(declare-fun x57 () Bool)
(declare-fun x6249 () Bool)
(declare-fun x7748 () Int)
(declare-fun x4698 () Int)
(declare-fun x5463 () Int)
(declare-fun x7029 () Int)
(declare-fun x2466 () Bool)
(declare-fun x5480 () Int)
(declare-fun x1668 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x1902 () Bool)
(declare-fun x2232 () Int)
(declare-fun x8428 () Bool)
(declare-fun x2869 () Bool)
(declare-fun x8349 () Bool)
(declare-fun x8107 () Bool)
(declare-fun x5040 () Bool)
(declare-fun x8204 () Bool)
(declare-fun x6738 () Bool)
(declare-fun x5116 () Bool)
(declare-fun x9047 () Int)
(declare-fun x2748 () Bool)
(declare-fun x2026 () Int)
(declare-fun x9220 () Int)
(declare-fun x3494 () Bool)
(declare-fun x6374 () Int)
(declare-fun x690 () Bool)
(declare-fun x4596 () Int)
(declare-fun x8513 () Int)
(declare-fun x4095 () Int)
(declare-fun x1342 () Bool)
(declare-fun x5666 () Int)
(declare-fun x8519 () Int)
(declare-fun x573 () Int)
(declare-fun x3467 () Bool)
(declare-fun x7351 () Int)
(declare-fun x2929 () Int)
(declare-fun x2516 () Bool)
(declare-fun x4715 () x112)
(declare-fun x1910 () Bool)
(declare-fun x9134 () Int)
(declare-fun x2725 () Bool)
(declare-fun x5679 () Bool)
(declare-fun x1428 () Int)
(declare-fun x3152 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x8346 () Int)
(declare-fun x3865 () Bool)
(declare-fun x4293 () Bool)
(declare-fun x6907 () Bool)
(declare-fun x6605 () x112)
(declare-fun x9162 () Int)
(declare-fun x1520 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x449 () Bool)
(declare-fun x4701 () x112)
(declare-fun x7300 () Bool)
(declare-fun x3893 () Bool)
(declare-fun x7244 () Bool)
(declare-fun x6640 () Bool)
(declare-fun x4834 () x112)
(declare-fun x8875 () Bool)
(declare-fun x5373 () Int)
(declare-fun x3570 () Bool)
(declare-fun x694 () Bool)
(declare-fun x6466 () x112)
(declare-fun x4573 () Bool)
(declare-fun x5005 () Bool)
(declare-fun x1909 () Bool)
(declare-fun x38 () Bool)
(declare-fun x3164 () Bool)
(declare-fun x8969 () Bool)
(declare-fun x8700 () x112)
(declare-fun x633 () Bool)
(declare-fun x2187 () Int)
(declare-fun x744 () Int)
(declare-fun x7568 () Bool)
(declare-fun x7298 () Int)
(declare-fun x4492 (x112) Int)
(declare-fun x3049 () Int)
(declare-fun x6248 () Int)
(declare-fun x8970 () Bool)
(declare-fun x4150 () Bool)
(declare-fun x5975 () Bool)
(declare-fun x2085 () Int)
(declare-fun x8976 () x112)
(declare-fun x6739 () Bool)
(declare-fun x1758 () Int)
(declare-fun x4664 () Bool)
(declare-fun x2061 () Int)
(declare-fun x5331 () Bool)
(declare-fun x3219 () x112)
(declare-fun x1841 () Int)
(declare-fun x3883 () Bool)
(declare-fun x8199 () Bool)
(declare-fun x6540 () Int)
(declare-fun x6356 () Bool)
(declare-fun x6115 () Bool)
(declare-fun x5359 () Bool)
(declare-fun x7392 () Bool)
(declare-fun x3334 () Bool)
(declare-fun x8084 () Bool)
(declare-fun x2476 () Int)
(declare-fun x8351 () Bool)
(declare-fun x3509 () Bool)
(declare-fun x2056 () Int)
(declare-fun x7722 () Bool)
(declare-fun x6763 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x299 () Bool)
(declare-fun x5868 () Int)
(declare-fun x2124 () x112)
(declare-fun x8136 () Int)
(declare-fun x1528 () Int)
(declare-fun x8276 () Int)
(declare-fun x4643 () Int)
(declare-fun x3819 () Bool)
(declare-fun x3158 () Bool)
(declare-fun x2347 () Bool)
(declare-fun x2172 () Int)
(declare-fun x3350 () Int)
(declare-fun x6247 () Bool)
(declare-fun x8016 () Bool)
(declare-fun x3959 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x166 () Bool)
(declare-fun x5739 () Bool)
(declare-fun x4282 () Bool)
(declare-fun x8958 () x112)
(declare-fun x8475 () Bool)
(declare-fun x4949 () x112)
(declare-fun x4706 () Bool)
(declare-fun x499 () Bool)
(declare-fun x6854 () Bool)
(declare-fun x4566 () Int)
(declare-fun x6398 () Bool)
(declare-fun x5557 () Bool)
(declare-fun x456 () Bool)
(declare-fun x8269 () Int)
(declare-fun x7287 () Bool)
(declare-fun x9032 () Bool)
(declare-fun x1164 () Int)
(declare-fun x8989 () Bool)
(declare-fun x1141 () Int)
(declare-fun x568 () Int)
(declare-fun x6211 () Bool)
(declare-fun x3281 () Bool)
(declare-fun x1913 () Int)
(declare-fun x3940 () Bool)
(declare-fun x6265 () Int)
(declare-fun x6311 () Bool)
(declare-fun x3253 () Int)
(declare-fun x5764 () Bool)
(declare-fun x4753 () x112)
(declare-fun x8838 () Int)
(declare-fun x4655 () Bool)
(declare-fun x8554 () Int)
(declare-fun x3439 () Int)
(declare-fun x3992 () Bool)
(declare-fun x5069 () Int)
(declare-fun x9078 () Bool)
(declare-fun x8868 () Bool)
(declare-fun x4382 () Bool)
(declare-fun x3754 () Bool)
(declare-fun x466 () Bool)
(declare-fun x5242 () Int)
(declare-fun x9073 () Bool)
(declare-fun x9052 () x112)
(declare-fun x7547 () Bool)
(declare-fun x3096 () Int)
(declare-fun x5327 () Bool)
(declare-fun x4376 () Int)
(declare-fun x2605 () Bool)
(declare-fun x733 () Int)
(declare-fun x3451 () Bool)
(declare-fun x5386 () Bool)
(declare-fun x4310 () Bool)
(declare-fun x7891 () Int)
(declare-fun x3528 () Int)
(declare-fun x3566 () Bool)
(declare-fun x3842 () Bool)
(declare-fun x6704 () Int)
(declare-fun x3349 () x112)
(declare-fun x8939 () Int)
(declare-fun x8820 () Int)
(declare-fun x1759 () Bool)
(declare-fun x8219 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x2335 () Int)
(declare-fun x7868 () Bool)
(declare-fun x4433 () Int)
(declare-fun x5505 () Int)
(declare-fun x5904 () Int)
(declare-fun x8802 () x112)
(declare-fun x4544 () Bool)
(declare-fun x2416 () Int)
(declare-fun x3815 () Bool)
(declare-fun x3519 () Int)
(declare-fun x821 () Int)
(declare-fun x3952 () Bool)
(declare-fun x3548 () Bool)
(declare-fun x7835 () Int)
(declare-fun x7822 () Int)
(declare-fun x7025 () Int)
(declare-fun x1152 () Bool)
(declare-fun x7730 () Bool)
(declare-fun x4782 () x112)
(declare-fun x2719 () Int)
(declare-fun x1967 () x112)
(declare-fun x3455 () Int)
(declare-fun x5799 () Int)
(declare-fun x4689 () Bool)
(declare-fun x1876 () Int)
(declare-fun x6862 () x112)
(declare-fun x1778 () Int)
(declare-fun x6958 () Int)
(declare-fun x6457 () Int)
(declare-fun x53 () Int)
(declare-fun x164 () Bool)
(declare-fun x2361 () Bool)
(declare-fun x1405 () Int)
(declare-fun x1842 () Bool)
(declare-fun x9167 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x3487 () x112)
(declare-fun x3318 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x7520 () Int)
(declare-fun x1339 () Bool)
(declare-fun x6966 () x112)
(declare-fun x2630 () Bool)
(declare-fun x4172 () Int)
(declare-fun x5704 () Bool)
(declare-fun x8399 () Int)
(declare-fun x5471 () Bool)
(declare-fun x8973 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x4105 () Bool)
(declare-fun x340 () x112)
(declare-fun x3878 () Int)
(declare-fun x2003 () Bool)
(declare-fun x6863 () Int)
(declare-fun x1669 () Int)
(declare-fun x5061 () x112)
(declare-fun x8633 () Bool)
(declare-fun x2712 () Bool)
(declare-fun x5871 () Int)
(declare-fun x3687 () Bool)
(declare-fun x8535 () Bool)
(declare-fun x6421 () Bool)
(declare-fun x6976 () Int)
(declare-fun x389 () Int)
(declare-fun x677 () Bool)
(declare-fun x1287 () Int)
(declare-fun x7267 () Bool)
(declare-fun x5781 () Bool)
(declare-fun x378 () Bool)
(declare-fun x2327 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x4121 () Int)
(declare-fun x922 () Int)
(declare-fun x5734 () Int)
(declare-fun x2250 () Bool)
(declare-fun x3994 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x380 () Int)
(declare-fun x6097 () Int)
(declare-fun x5301 () Int)
(declare-fun x7795 () Bool)
(declare-fun x6438 () Bool)
(declare-fun x2676 () Int)
(declare-fun x3110 () Int)
(declare-fun x1963 () Bool)
(declare-fun x2395 () Int)
(declare-fun x3391 () Bool)
(declare-fun x7093 () Int)
(declare-fun x1628 () Bool)
(declare-fun x6960 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x3667 () Bool)
(declare-fun x8105 () Bool)
(declare-fun x6718 () Int)
(declare-fun x2365 () Bool)
(declare-fun x4883 () Bool)
(declare-fun x3580 () Bool)
(declare-fun x5912 () Bool)
(declare-fun x3930 () Int)
(declare-fun x961 () Bool)
(declare-fun x5814 () Int)
(declare-fun x2277 () x112)
(declare-fun x7907 () Int)
(declare-fun x6148 () Bool)
(declare-fun x3695 () Bool)
(declare-fun x4289 () x112)
(declare-fun x7983 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x4350 () Bool)
(declare-fun x791 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x4248 () Bool)
(declare-fun x3011 () Bool)
(declare-fun x5303 () Bool)
(declare-fun x3800 () Int)
(declare-fun x8775 () Int)
(declare-fun x4933 () Int)
(declare-fun x8256 () Int)
(declare-fun x883 () Int)
(declare-fun x5012 () Int)
(declare-fun x4487 () Bool)
(declare-fun x4719 () Bool)
(declare-fun x8241 () Int)
(declare-fun x71 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x2940 () Bool)
(declare-fun x5937 () Bool)
(declare-fun x3625 () Bool)
(declare-fun x5452 () Int)
(declare-fun x5325 () Int)
(declare-fun x3213 () Int)
(declare-fun x8792 () Bool)
(declare-fun x4928 () Bool)
(declare-fun x7515 () Bool)
(declare-fun x2204 () x112)
(declare-fun x8937 () Int)
(declare-fun x3490 () Bool)
(declare-fun x2566 () x112)
(declare-fun x7871 () Bool)
(declare-fun x8043 () Bool)
(declare-fun x6206 () Int)
(declare-fun x2884 () Int)
(declare-fun x3221 () Int)
(declare-fun x6215 () Bool)
(declare-fun x2517 (Int) Int)
(declare-fun x8422 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x7234 () Bool)
(declare-fun x2555 () Int)
(declare-fun x8557 () Int)
(declare-fun x334 () Bool)
(declare-fun x4306 () Int)
(declare-fun x7687 () Int)
(declare-fun x1491 () x112)
(declare-fun x4294 () Int)
(declare-fun x169 () Bool)
(declare-fun x2285 () Int)
(declare-fun x3341 () Bool)
(declare-fun x6726 () Bool)
(declare-fun x2499 () Int)
(declare-fun x7767 () x112)
(declare-fun x6675 () Bool)
(declare-fun x7275 () Bool)
(declare-fun x8239 () Bool)
(declare-fun x8302 () Bool)
(declare-fun x2714 () Bool)
(declare-fun x8735 () Int)
(declare-fun x3694 () Int)
(declare-fun x6401 () Bool)
(declare-fun x3107 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x4330 () Bool)
(declare-fun x6388 () Int)
(declare-fun x1369 () Int)
(declare-fun x8933 () Int)
(declare-fun x8 () Bool)
(declare-fun x8558 () Bool)
(declare-fun x7386 () Int)
(declare-fun x6280 () Int)
(declare-fun x5974 () Bool)
(declare-fun x6755 () Int)
(declare-fun x3555 () Bool)
(declare-fun x4017 () Int)
(declare-fun x472 () Bool)
(declare-fun x8667 () Int)
(declare-fun x5729 () Int)
(declare-fun x6452 () Bool)
(declare-fun x7867 () Bool)
(declare-fun x8506 () Bool)
(declare-fun x4493 () Bool)
(declare-fun x1381 () Int)
(declare-fun x8036 () Int)
(declare-fun x5586 () Bool)
(declare-fun x2049 () x112)
(declare-fun x6666 () Bool)
(declare-fun x5717 () Int)
(declare-fun x3280 () Bool)
(declare-fun x7369 () Bool)
(declare-fun x9231 () x112)
(declare-fun x3871 () Bool)
(declare-fun x5639 () Int)
(declare-fun x3169 () Bool)
(declare-fun x6942 () Bool)
(declare-fun x6384 () Bool)
(declare-fun x5091 () Int)
(declare-fun x158 () Bool)
(declare-fun x4699 () Int)
(declare-fun x6492 () Int)
(declare-fun x290 () Int)
(declare-fun x6887 () Bool)
(declare-fun x1647 () Int)
(declare-fun x6064 () Bool)
(declare-fun x4818 () Bool)
(declare-fun x1507 () Int)
(declare-fun x6906 () Int)
(declare-fun x6641 () Int)
(declare-fun x2692 () Bool)
(declare-fun x5821 () Int)
(declare-fun x7537 () Int)
(declare-fun x3522 () Bool)
(declare-fun x6674 () Int)
(declare-fun x818 () Bool)
(declare-fun x7565 () Bool)
(declare-fun x427 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x7736 () Int)
(declare-fun x2672 () Bool)
(declare-fun x7003 () Bool)
(declare-fun x544 () Bool)
(declare-fun x6645 () Bool)
(declare-fun x3652 () x112)
(declare-fun x6381 () Bool)
(declare-fun x7739 () Int)
(declare-fun x4733 () Bool)
(declare-fun x3831 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x8386 () x112)
(declare-fun x1924 () Bool)
(declare-fun x7205 () Int)
(declare-fun x2791 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x417 () Int)
(declare-fun x601 () Bool)
(declare-fun x4747 () Bool)
(declare-fun x5266 () Bool)
(declare-fun x8051 () Int)
(declare-fun x7529 () Bool)
(declare-fun x9069 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x262 () Bool)
(declare-fun x3960 () x112)
(declare-fun x7124 () Bool)
(declare-fun x226 () Bool)
(declare-fun x2747 () Int)
(declare-fun x3130 () Bool)
(declare-fun x3458 () Bool)
(declare-fun x1958 () Bool)
(declare-fun x4943 () Int)
(declare-fun x8947 () Bool)
(declare-fun x3641 () Int)
(declare-fun x571 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x4979 () Int)
(declare-fun x3768 () Bool)
(declare-fun x616 () Int)
(declare-fun x3240 () Int)
(declare-fun x8097 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x4162 () Int)
(declare-fun x782 () x112)
(declare-fun x1272 () Bool)
(declare-fun x4795 () Bool)
(declare-fun x8150 () Bool)
(declare-fun x976 () Bool)
(declare-fun x720 () Int)
(declare-fun x8221 () Int)
(declare-fun x1043 () Int)
(declare-fun x8716 () Int)
(declare-fun x4750 () Int)
(declare-fun x6525 () Bool)
(declare-fun x6629 () Int)
(declare-fun x4882 () Bool)
(declare-fun x856 () Bool)
(declare-fun x4773 () Int)
(declare-fun x905 () x112)
(declare-fun x663 () x112)
(declare-fun x6091 () Bool)
(declare-fun x4399 () Int)
(declare-fun x2829 () Int)
(declare-fun x1558 () x112)
(declare-fun x3786 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x4135 () Bool)
(declare-fun x4340 () x112)
(declare-fun x5043 () Bool)
(declare-fun x8928 () Int)
(declare-fun x2399 () Int)
(declare-fun x8848 (Int) Int)
(declare-fun x1370 () Bool)
(declare-fun x2178 () Int)
(declare-fun x390 (x112) Int)
(declare-fun x256 () Bool)
(declare-fun x2283 () x112)
(declare-fun x1204 () x112)
(declare-fun x1840 () Bool)
(declare-fun x9194 () Int)
(declare-fun x4008 () Int)
(declare-fun x7799 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x8014 () Int)
(declare-fun x3792 () Int)
(declare-fun x7409 () Int)
(declare-fun x9215 () Bool)
(declare-fun x7250 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x654 () Bool)
(declare-fun x4372 () Int)
(declare-fun x7944 () Bool)
(declare-fun x231 () Bool)
(declare-fun x938 () x112)
(declare-fun x6450 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x5660 (x112) Int)
(declare-fun x6272 () Bool)
(declare-fun x6914 () Bool)
(declare-fun x2237 () x112)
(declare-fun x3294 () x112)
(declare-fun x1274 () Bool)
(declare-fun x5788 () x112)
(declare-fun x5698 () Int)
(declare-fun x7493 () Int)
(declare-fun x5938 () Int)
(declare-fun x6484 () Int)
(declare-fun x1566 () Bool)
(declare-fun x5774 () Int)
(declare-fun x7429 () Int)
(declare-fun x2007 () x112)
(declare-fun x8037 () Int)
(declare-fun x1252 () Bool)
(declare-fun x3670 () Int)
(declare-fun x5267 () Bool)
(declare-fun x7827 () Bool)
(declare-fun x709 () Int)
(declare-fun x3102 () Int)
(declare-fun x2009 () Bool)
(declare-fun x867 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x636 () Int)
(declare-fun x5228 () Int)
(declare-fun x4614 () Int)
(declare-fun x7697 () Int)
(declare-fun x3957 () Bool)
(declare-fun x711 () Bool)
(declare-fun x3434 (x112) Int)
(declare-fun x4874 () Int)
(declare-fun x6884 () x112)
(declare-fun x7731 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x2809 () Int)
(declare-fun x7522 () Int)
(declare-fun x2175 () Bool)
(declare-fun x8645 () Bool)
(declare-fun x5659 () Bool)
(declare-fun x8717 () Int)
(declare-fun x4912 () Int)
(declare-fun x5622 () Bool)
(declare-fun x4170 () Int)
(declare-fun x5740 () Int)
(declare-fun x5158 () Int)
(declare-fun x1821 () Int)
(declare-fun x2618 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x2486 () Int)
(declare-fun x4506 () Bool)
(declare-fun x8152 () Bool)
(declare-fun x3186 () Int)
(declare-fun x8530 () x112)
(declare-fun x7923 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x585 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x6677 () Int)
(declare-fun x520 () x112)
(declare-fun x739 () Int)
(declare-fun x8595 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x6263 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x3601 () Int)
(declare-fun x7704 () Bool)
(declare-fun x1436 () Int)
(declare-fun x3950 () Bool)
(declare-fun x8903 () Bool)
(declare-fun x917 () x112)
(declare-fun x6354 () Bool)
(declare-fun x5422 () Bool)
(declare-fun x3564 () Int)
(declare-fun x4871 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x5707 () Int)
(declare-fun x3190 () Bool)
(declare-fun x1525 () Int)
(declare-fun x8465 () x112)
(declare-fun x8306 () Bool)
(declare-fun x1075 () x112)
(declare-fun x5544 () Int)
(declare-fun x418 () Bool)
(declare-fun x7064 () x112)
(declare-fun x1350 () Bool)
(declare-fun x3920 () Int)
(declare-fun x8139 () Bool)
(declare-fun x3433 () Bool)
(declare-fun x1714 () x112)
(declare-fun x2089 () Int)
(declare-fun x1741 () Int)
(declare-fun x27 () Int)
(declare-fun x2832 () Bool)
(declare-fun x421 () Bool)
(declare-fun x8361 () Int)
(declare-fun x4010 () Int)
(declare-fun x6413 () Int)
(declare-fun x9221 () Int)
(declare-fun x4336 () Bool)
(declare-fun x5587 () Bool)
(declare-fun x8938 () x112)
(declare-fun x2796 () Bool)
(declare-fun x2893 () Int)
(declare-fun x5669 () Bool)
(declare-fun x6234 () Int)
(declare-fun x8009 () Int)
(declare-fun x6886 () Bool)
(declare-fun x2737 () Bool)
(declare-fun x7856 () Int)
(declare-fun x7048 () Bool)
(declare-fun x4988 () Bool)
(declare-fun x5047 () Int)
(declare-fun x3113 () Int)
(declare-fun x673 () Int)
(declare-fun x7642 () Bool)
(declare-fun x650 (x112) Int)
(declare-fun x5886 () Bool)
(declare-fun x254 () Bool)
(declare-fun x2701 () Int)
(declare-fun x1929 () Bool)
(declare-fun x6516 () x112)
(declare-fun x70 () x112)
(declare-fun x6553 () x112)
(declare-fun x5244 (x112) Int)
(declare-fun x4940 () Int)
(declare-fun x5482 () Int)
(declare-fun x2143 () Bool)
(declare-fun x5302 () x112)
(declare-fun x4540 () x112)
(declare-fun x6140 () Int)
(declare-fun x6894 () Int)
(declare-fun x3234 () Bool)
(declare-fun x940 () Int)
(declare-fun x2763 () Int)
(declare-fun x6404 () Int)
(declare-fun x7787 () Int)
(declare-fun x4093 () Int)
(declare-fun x8930 () Bool)
(declare-fun x5226 () Int)
(declare-fun x410 (x112) Int)
(declare-fun x2471 () Bool)
(declare-fun x2954 () Bool)
(declare-fun x4422 () x112)
(declare-fun x5879 () x112)
(declare-fun x775 () Bool)
(declare-fun x8983 () Int)
(declare-fun x1100 () Bool)
(declare-fun x8649 () Int)
(declare-fun x1975 () Int)
(declare-fun x5245 () Int)
(declare-fun x2235 () Bool)
(declare-fun x4420 () Bool)
(declare-fun x4514 () Bool)
(declare-fun x5024 () x112)
(declare-fun x8076 () Bool)
(declare-fun x335 () Bool)
(declare-fun x3598 () x112)
(declare-fun x248 () x112)
(declare-fun x742 () Int)
(declare-fun x5293 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x8603 () Bool)
(declare-fun x7261 () Bool)
(declare-fun x4339 () Bool)
(declare-fun x6399 () x112)
(declare-fun x9074 () Bool)
(declare-fun x2756 () Int)
(declare-fun x593 () Bool)
(declare-fun x5932 () x112)
(declare-fun x5537 () Int)
(declare-fun x550 () x112)
(declare-fun x273 () x112)
(declare-fun x424 () Int)
(declare-fun x6317 () Bool)
(declare-fun x6818 () x112)
(declare-fun x4352 () Bool)
(declare-fun x5652 () Int)
(declare-fun x5240 () Bool)
(declare-fun x4062 () x112)
(declare-fun x2180 () Bool)
(declare-fun x7700 () Bool)
(declare-fun x7875 () Int)
(declare-fun x3890 () Int)
(declare-fun x8247 () Int)
(declare-fun x9189 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x7765 () Int)
(declare-fun x4367 () Int)
(declare-fun x272 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x3703 () Int)
(declare-fun x2765 () Bool)
(declare-fun x659 () Int)
(declare-fun x7502 () Bool)
(declare-fun x3853 () Int)
(declare-fun x6016 (x112) Int)
(declare-fun x1446 () Bool)
(declare-fun x7919 () Int)
(declare-fun x4250 () Int)
(declare-fun x1044 () Bool)
(declare-fun x6382 () Bool)
(declare-fun x5884 () Bool)
(declare-fun x8821 () x112)
(declare-fun x3082 () Bool)
(declare-fun x6671 () Bool)
(declare-fun x8432 () x112)
(declare-fun x1174 () Bool)
(declare-fun x3958 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x480 () x112)
(declare-fun x4211 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x7803 () Bool)
(declare-fun x7076 () Bool)
(declare-fun x6796 () Int)
(declare-fun x1667 () Bool)
(declare-fun x4923 () Bool)
(declare-fun x2065 () Int)
(declare-fun x1231 () Int)
(declare-fun x9139 () Bool)
(declare-fun x8493 () Bool)
(declare-fun x7358 () Int)
(declare-fun x5392 () Bool)
(declare-fun x5531 () Bool)
(declare-fun x1113 () Int)
(declare-fun x5819 () Int)
(declare-fun x6680 () Int)
(declare-fun x3506 () Bool)
(declare-fun x4268 (Int) Int)
(declare-fun x6803 () Bool)
(declare-fun x1083 () Int)
(declare-fun x1500 () x112)
(declare-fun x3171 () Int)
(declare-fun x1859 () x112)
(declare-fun x5382 () Int)
(declare-fun x4291 () x112)
(declare-fun x7984 () Bool)
(declare-fun x3712 () Int)
(declare-fun x7346 () Int)
(declare-fun x2031 () Bool)
(declare-fun x2804 () Int)
(declare-fun x2818 () Int)
(declare-fun x6610 () Bool)
(declare-fun x4035 () Bool)
(declare-fun x8372 () x112)
(declare-fun x5585 () Int)
(declare-fun x5693 () Int)
(declare-fun x2755 () Int)
(declare-fun x8849 () Bool)
(declare-fun x6103 () Int)
(declare-fun x580 () Int)
(declare-fun x351 () Bool)
(declare-fun x4902 () Int)
(declare-fun x7637 () Int)
(declare-fun x8615 () Int)
(declare-fun x3686 () Bool)
(declare-fun x6213 () Bool)
(declare-fun x3612 () Bool)
(declare-fun x5798 () Int)
(declare-fun x283 () Int)
(declare-fun x6774 () Int)
(declare-fun x5930 () x112)
(declare-fun x6543 () Int)
(declare-fun x8082 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x6507 () Int)
(declare-fun x4720 () Int)
(declare-fun x6727 () Bool)
(declare-fun x7768 () Bool)
(declare-fun x8590 () Int)
(declare-fun x8173 () Int)
(declare-fun x1773 () Int)
(declare-fun x3428 () Int)
(declare-fun x6760 () Int)
(declare-fun x5437 () Bool)
(declare-fun x1103 () Int)
(declare-fun x195 () x112)
(declare-fun x1397 () Bool)
(declare-fun x6284 () Bool)
(declare-fun x127 () Int)
(declare-fun x6000 () Bool)
(declare-fun x1138 () x112)
(declare-fun x6526 () Bool)
(declare-fun x4197 () Bool)
(declare-fun x6728 () Int)
(declare-fun x8075 () x112)
(declare-fun x3324 () x112)
(declare-fun x2975 () Int)
(declare-fun x8133 () Int)
(declare-fun x5013 () Int)
(declare-fun x3971 () Int)
(declare-fun x7321 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x631 () Bool)
(declare-fun x7525 () Bool)
(declare-fun x5055 () Bool)
(declare-fun x5258 () Int)
(declare-fun x844 () Int)
(declare-fun x1006 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x3962 () Int)
(declare-fun x4920 () Int)
(declare-fun x1432 () Int)
(declare-fun x4143 () Bool)
(declare-fun x8390 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x6408 () x112)
(declare-fun x1831 () Int)
(declare-fun x1936 () Int)
(declare-fun x5778 () Bool)
(declare-fun x4615 () Bool)
(declare-fun x8944 () Bool)
(declare-fun x4679 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x558 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x2652 () Int)
(declare-fun x6632 () Bool)
(declare-fun x4898 () Bool)
(declare-fun x7528 () Int)
(declare-fun x5027 () x112)
(declare-fun x2500 () Bool)
(declare-fun x5009 () Int)
(declare-fun x7570 () Bool)
(declare-fun x6364 () Int)
(declare-fun x666 () x112)
(declare-fun x7278 () Int)
(declare-fun x2134 () Bool)
(declare-fun x2735 () Int)
(declare-fun x3409 () Int)
(declare-fun x4100 () Int)
(declare-fun x2200 () Bool)
(declare-fun x6166 () Bool)
(declare-fun x5499 () Bool)
(declare-fun x5824 () Int)
(declare-fun x6806 () Int)
(declare-fun x2434 () Int)
(declare-fun x2807 () Int)
(declare-fun x1440 () Bool)
(declare-fun x240 () Bool)
(declare-fun x7339 () x112)
(declare-fun x8743 () x112)
(declare-fun x5515 () Bool)
(declare-fun x4290 () Int)
(declare-fun x8273 () Bool)
(declare-fun x6194 () Int)
(declare-fun x4779 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x6633 () Int)
(declare-fun x942 () x112)
(declare-fun x8759 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x728 () Bool)
(declare-fun x8954 () Int)
(declare-fun x1042 () Bool)
(declare-fun x7690 () Int)
(declare-fun x3619 () Bool)
(declare-fun x7331 () Bool)
(declare-fun x9192 () x112)
(declare-fun x6250 () Int)
(declare-fun x2922 () Bool)
(declare-fun x724 () x112)
(declare-fun x1637 () Bool)
(declare-fun x5748 () Bool)
(declare-fun x6237 () Bool)
(declare-fun x2352 () Int)
(declare-fun x175 () Bool)
(declare-fun x78 () Int)
(declare-fun x2082 (x112) Int)
(declare-fun x9039 () Int)
(declare-fun x759 () Int)
(declare-fun x1220 () Bool)
(declare-fun x5115 () Bool)
(declare-fun x7473 () Bool)
(declare-fun x8733 () Bool)
(declare-fun x6828 () Int)
(declare-fun x5214 () Int)
(declare-fun x5945 () Bool)
(declare-fun x6592 () Bool)
(declare-fun x2392 () Int)
(declare-fun x3849 () Int)
(declare-fun x7993 () Bool)
(declare-fun x7084 () Bool)
(declare-fun x4159 () Int)
(declare-fun x8869 () Bool)
(declare-fun x3644 () Int)
(declare-fun x6881 () x112)
(declare-fun x2558 () Int)
(declare-fun x2398 () Int)
(declare-fun x4833 () Bool)
(declare-fun x7010 () Int)
(declare-fun x7263 () Int)
(declare-fun x3937 () Int)
(declare-fun x1737 (Int) Int)
(declare-fun x3393 () Bool)
(declare-fun x6703 () Bool)
(declare-fun x9075 () Bool)
(declare-fun x4485 () Bool)
(declare-fun x6437 () Int)
(declare-fun x7108 () Bool)
(declare-fun x710 () Bool)
(declare-fun x4057 () Bool)
(declare-fun x6308 () Bool)
(declare-fun x1124 (x112) Int)
(declare-fun x4558 () Bool)
(declare-fun x219 () Bool)
(declare-fun x8620 () Int)
(declare-fun x8243 () Bool)
(declare-fun x5252 () Int)
(declare-fun x5520 () Bool)
(declare-fun x3793 () x112)
(declare-fun x8748 () x112)
(declare-fun x7860 () Bool)
(declare-fun x1565 () Int)
(declare-fun x7419 () Int)
(declare-fun x3061 () Bool)
(declare-fun x6936 () Bool)
(declare-fun x2133 () Int)
(declare-fun x3325 () Int)
(declare-fun x6920 () Int)
(declare-fun x4843 () Int)
(declare-fun x1533 () x112)
(declare-fun x894 () x112)
(declare-fun x2125 () Bool)
(declare-fun x3466 () Bool)
(declare-fun x2651 () Bool)
(declare-fun x3274 () Bool)
(declare-fun x2982 () Int)
(declare-fun x8814 () Bool)
(declare-fun x8109 () Int)
(declare-fun x3902 () x112)
(declare-fun x795 () Int)
(declare-fun x2546 () Bool)
(declare-fun x4808 () x112)
(declare-fun x611 () Int)
(declare-fun x805 () Bool)
(declare-fun x5898 () x112)
(declare-fun x3400 () Int)
(declare-fun x6683 () Bool)
(declare-fun x9080 () Bool)
(declare-fun x6817 () Bool)
(declare-fun x8945 () Int)
(declare-fun x1630 () Bool)
(declare-fun x2753 () Bool)
(declare-fun x5014 () Int)
(declare-fun x141 () Int)
(declare-fun x7661 () Bool)
(declare-fun x6439 () Bool)
(declare-fun x422 () Bool)
(declare-fun x6291 () Int)
(declare-fun x2519 () Bool)
(declare-fun x7534 () Int)
(declare-fun x5053 () Int)
(declare-fun x3773 () Int)
(declare-fun x4308 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x6967 () Bool)
(declare-fun x2990 () Bool)
(declare-fun x6943 () Bool)
(declare-fun x9211 () Bool)
(declare-fun x6074 () Int)
(declare-fun x9225 () Int)
(declare-fun x6449 () Int)
(declare-fun x715 () Int)
(declare-fun x7887 () Int)
(declare-fun x4260 () Int)
(declare-fun x7432 () Int)
(declare-fun x4792 () Int)
(declare-fun x8753 () Int)
(declare-fun x9099 () x112)
(declare-fun x2323 () Int)
(declare-fun x4930 () Int)
(declare-fun x471 () Int)
(declare-fun x4287 () Bool)
(declare-fun x4394 () Bool)
(declare-fun x4147 () Bool)
(declare-fun x827 () Int)
(declare-fun x8023 () Bool)
(declare-fun x31 () Int)
(declare-fun x1939 () Int)
(declare-fun x7163 () Int)
(declare-fun x8967 () Int)
(declare-fun x3671 () Bool)
(declare-fun x9060 () Bool)
(declare-fun x3305 () Int)
(declare-fun x1393 () Bool)
(declare-fun x8226 () Int)
(declare-fun x1069 () Int)
(declare-fun x6358 () x112)
(declare-fun x8515 () Bool)
(declare-fun x348 () Int)
(declare-fun x7974 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x3813 () Bool)
(declare-fun x8045 () Int)
(declare-fun x1262 () Bool)
(declare-fun x5854 () Bool)
(declare-fun x1065 () Int)
(declare-fun x358 () Int)
(declare-fun x8658 () Int)
(declare-fun x6903 () Bool)
(declare-fun x2792 () Int)
(declare-fun x135 () Int)
(declare-fun x5015 () x112)
(declare-fun x7191 () Bool)
(declare-fun x4384 () Int)
(declare-fun x2750 () Int)
(declare-fun x2882 () Bool)
(declare-fun x6572 () Bool)
(declare-fun x2891 () Int)
(declare-fun x8255 () Bool)
(declare-fun x6582 () Bool)
(declare-fun x3493 () Int)
(declare-fun x4486 () Int)
(declare-fun x7485 () Bool)
(declare-fun x5604 () x112)
(declare-fun x6784 () x112)
(declare-fun x3497 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x2866 () Int)
(declare-fun x7349 () Int)
(declare-fun x2032 () Bool)
(declare-fun x8110 () Int)
(declare-fun x957 () Int)
(declare-fun x6538 () Bool)
(declare-fun x5791 () Bool)
(declare-fun x8502 () Int)
(declare-fun x1624 () Bool)
(declare-fun x556 () x112)
(declare-fun x9126 () x112)
(declare-fun x4591 () Int)
(declare-fun x3282 () Int)
(declare-fun x310 () Int)
(declare-fun x8304 () Int)
(declare-fun x570 () Int)
(declare-fun x5631 () Bool)
(declare-fun x4353 () Int)
(declare-fun x758 () Int)
(declare-fun x7396 () Int)
(declare-fun x7259 () Int)
(declare-fun x1687 () Int)
(declare-fun x1061 () Int)
(declare-fun x9028 () Int)
(declare-fun x8952 () Int)
(declare-fun x6506 () Int)
(declare-fun x271 () Bool)
(declare-fun x6427 () x112)
(declare-fun x8004 () Bool)
(declare-fun x8846 () x112)
(declare-fun x7078 () Bool)
(declare-fun x2145 () Int)
(declare-fun x3060 () Int)
(declare-fun x5039 () Int)
(declare-fun x5972 () Int)
(declare-fun x2901 () Int)
(declare-fun x2801 () Int)
(declare-fun x4985 () Bool)
(declare-fun x4646 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x5697 () Int)
(declare-fun x8275 () Bool)
(declare-fun x3193 () Int)
(declare-fun x1649 () x112)
(declare-fun x2670 () Bool)
(declare-fun x5532 () Bool)
(declare-fun x2121 () Int)
(declare-fun x2590 () Int)
(declare-fun x4761 () x112)
(declare-fun x7782 () Bool)
(declare-fun x360 () Int)
(declare-fun x1763 () Bool)
(declare-fun x2351 () Int)
(declare-fun x951 () Int)
(declare-fun x5618 () Int)
(declare-fun x4583 () Bool)
(declare-fun x7491 () x112)
(declare-fun x8729 () Bool)
(declare-fun x6590 () Bool)
(declare-fun x5462 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x2096 () Int)
(declare-fun x3607 () Bool)
(declare-fun x4404 () Bool)
(declare-fun x8209 () Bool)
(declare-fun x969 () x112)
(declare-fun x1706 () Int)
(declare-fun x6791 () Int)
(declare-fun x4447 () Bool)
(declare-fun x4195 () Int)
(declare-fun x2030 () Bool)
(declare-fun x4144 () Int)
(declare-fun x6840 () Bool)
(declare-fun x2726 () Bool)
(declare-fun x6581 () Bool)
(declare-fun x5046 () Bool)
(declare-fun x3693 () Int)
(declare-fun x2114 () Bool)
(declare-fun x121 () Bool)
(declare-fun x5099 () x112)
(declare-fun x9178 () Int)
(declare-fun x1383 () Bool)
(declare-fun x6715 () x112)
(declare-fun x2761 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x7182 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x5507 () Bool)
(declare-fun x3860 () Bool)
(declare-fun x6569 () Bool)
(declare-fun x2625 () x112)
(declare-fun x1098 () x112)
(declare-fun x8982 () Bool)
(declare-fun x1236 () x112)
(declare-fun x5624 () Bool)
(declare-fun x4841 () Bool)
(declare-fun x9230 () Bool)
(declare-fun x3465 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2838 () Bool)
(declare-fun x8055 () Int)
(declare-fun x5260 () Int)
(declare-fun x1629 () x112)
(declare-fun x7465 () Bool)
(declare-fun x3464 () Bool)
(declare-fun x7423 () Bool)
(declare-fun x7555 () Bool)
(declare-fun x7852 () Bool)
(declare-fun x4575 (x112) Int)
(declare-fun x2898 () Int)
(declare-fun x8580 () Bool)
(declare-fun x2639 () Int)
(declare-fun x154 () Bool)
(declare-fun x7116 () Bool)
(declare-fun x371 () Int)
(declare-fun x2193 () Int)
(declare-fun x8321 () Int)
(declare-fun x4489 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x959 () Bool)
(declare-fun x409 () Int)
(declare-fun x4562 () Bool)
(declare-fun x8657 () Int)
(declare-fun x4645 () Int)
(declare-fun x6266 () Int)
(declare-fun x7872 () Bool)
(declare-fun x4202 () Bool)
(declare-fun x6393 () Int)
(declare-fun x8825 () Bool)
(declare-fun x4610 () Bool)
(declare-fun x9053 () x112)
(declare-fun x34 () Int)
(declare-fun x560 () Int)
(declare-fun x7454 () Int)
(declare-fun x525 () x112)
(declare-fun x2823 () Bool)
(declare-fun x1552 () x112)
(declare-fun x4203 () Bool)
(declare-fun x3172 () Bool)
(declare-fun x4214 () Int)
(declare-fun x594 () Int)
(declare-fun x1829 () Bool)
(declare-fun x7484 () Bool)
(declare-fun x2856 () x112)
(declare-fun x1253 () Int)
(declare-fun x7332 () Int)
(declare-fun x4709 () Bool)
(declare-fun x6305 () Int)
(declare-fun x3183 () x112)
(declare-fun x4810 () Int)
(declare-fun x3160 () Bool)
(declare-fun x8786 () Int)
(declare-fun x4533 () Int)
(declare-fun x12 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x4817 () Int)
(declare-fun x1031 () Bool)
(declare-fun x3880 () Bool)
(declare-fun x5393 () Bool)
(declare-fun x3378 () Bool)
(declare-fun x4703 () x112)
(declare-fun x984 () Bool)
(declare-fun x7499 () Bool)
(declare-fun x989 () Bool)
(declare-fun x7902 () Bool)
(declare-fun x964 () x112)
(declare-fun x4609 () Int)
(declare-fun x258 () x112)
(declare-fun x4200 () Int)
(declare-fun x4629 () Bool)
(declare-fun x4559 () Bool)
(declare-fun x7855 () Bool)
(declare-fun x4081 () Int)
(declare-fun x1211 () Int)
(declare-fun x8499 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x4277 () Int)
(declare-fun x4180 () x112)
(declare-fun x6102 () Bool)
(declare-fun x2626 () Bool)
(declare-fun x32 () Bool)
(declare-fun x8798 () Bool)
(declare-fun x91 () x112)
(declare-fun x7204 (Int) Int)
(declare-fun x2069 () x112)
(declare-fun x7505 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x1749 () Int)
(declare-fun x4585 () Bool)
(declare-fun x6972 () Int)
(declare-fun x7020 () Bool)
(declare-fun x5746 () Int)
(declare-fun x2678 () Int)
(declare-fun x3535 () x112)
(declare-fun x1968 () Bool)
(declare-fun x8893 () Bool)
(declare-fun x8072 () Bool)
(declare-fun x6512 () Bool)
(declare-fun x1522 () Int)
(declare-fun x1969 () Bool)
(declare-fun x7526 () Int)
(declare-fun x7341 () Bool)
(declare-fun x5320 () Int)
(declare-fun x8232 () Bool)
(declare-fun x2883 () Bool)
(declare-fun x3123 () Bool)
(declare-fun x4762 () Bool)
(declare-fun x7725 () Int)
(declare-fun x978 () Bool)
(declare-fun x237 () Bool)
(declare-fun x5453 () Bool)
(declare-fun x3967 () Int)
(declare-fun x7501 () Int)
(declare-fun x1343 () Bool)
(declare-fun x396 () Bool)
(declare-fun x6132 () x112)
(declare-fun x4405 () x112)
(declare-fun x7952 () x112)
(declare-fun x128 () Bool)
(declare-fun x9023 () Bool)
(declare-fun x7019 () Bool)
(declare-fun x9217 () Int)
(declare-fun x1603 () Bool)
(declare-fun x3777 () Int)
(declare-fun x4535 () Int)
(declare-fun x2813 () Bool)
(declare-fun x5448 () Int)
(declare-fun x2674 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x39 () Int)
(declare-fun x5910 () x112)
(declare-fun x3722 () Int)
(declare-fun x9103 () Int)
(declare-fun x3033 () Int)
(declare-fun x707 () Bool)
(declare-fun x5394 () Int)
(declare-fun x5510 () Bool)
(declare-fun x46 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x2594 () Int)
(declare-fun x4249 () x112)
(declare-fun x3262 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x6977 () Bool)
(declare-fun x478 () Bool)
(declare-fun x7431 () x112)
(declare-fun x2527 () Bool)
(declare-fun x7063 () Bool)
(declare-fun x4894 () Bool)
(declare-fun x6476 () Bool)
(declare-fun x209 () x112)
(declare-fun x8064 () Bool)
(declare-fun x4320 () Bool)
(declare-fun x4578 () Bool)
(declare-fun x958 (x112) Int)
(declare-fun x944 () Int)
(declare-fun x7053 () Bool)
(declare-fun x3306 () Int)
(declare-fun x975 () Bool)
(declare-fun x6049 () Int)
(declare-fun x2713 () Bool)
(declare-fun x8206 () Int)
(declare-fun x6644 () Bool)
(declare-fun x8058 () Int)
(declare-fun x6474 () Bool)
(declare-fun x1809 () x112)
(declare-fun x5411 () Bool)
(declare-fun x4917 () Int)
(declare-fun x4494 () Int)
(declare-fun x6616 () Bool)
(declare-fun x5335 () Int)
(declare-fun x4067 () Int)
(declare-fun x1583 () Bool)
(declare-fun x1256 () x112)
(declare-fun x1979 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x2376 () Int)
(declare-fun x2718 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x6679 () Int)
(declare-fun x7985 () Bool)
(declare-fun x9013 () Bool)
(declare-fun x4432 () Int)
(declare-fun x8678 () Bool)
(declare-fun x3287 () Int)
(declare-fun x582 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x3983 () x112)
(declare-fun x6623 () Bool)
(declare-fun x3954 () Bool)
(declare-fun x5449 () x112)
(declare-fun x7254 () x112)
(declare-fun x7450 () Int)
(declare-fun x3155 () x112)
(declare-fun x3614 () Bool)
(declare-fun x4456 () Int)
(declare-fun x9101 () Bool)
(declare-fun x6864 () x112)
(declare-fun x2646 () Bool)
(declare-fun x5843 () Bool)
(declare-fun x2015 () Int)
(declare-fun x9111 () Bool)
(declare-fun x1158 () x112)
(declare-fun x2226 () Int)
(declare-fun x9107 () Int)
(declare-fun x1194 () Int)
(declare-fun x184 () Int)
(declare-fun x8762 () Bool)
(declare-fun x7241 () Bool)
(declare-fun x9088 () Bool)
(declare-fun x236 () Bool)
(declare-fun x4312 () Int)
(declare-fun x4012 () Bool)
(declare-fun x8119 () Int)
(declare-fun x3292 () Int)
(declare-fun x1163 () Bool)
(declare-fun x8577 () Bool)
(declare-fun x9118 () Bool)
(declare-fun x4631 () Int)
(declare-fun x2346 () Int)
(declare-fun x8741 () Int)
(declare-fun x1618 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x6282 () Int)
(declare-fun x2391 () x112)
(declare-fun x797 () Bool)
(declare-fun x7585 () Int)
(declare-fun x849 () Bool)
(declare-fun x1878 () Int)
(declare-fun x5319 () Bool)
(declare-fun x8586 () x112)
(declare-fun x7971 () Bool)
(declare-fun x809 () x112)
(declare-fun x7975 () Int)
(declare-fun x3944 () x112)
(declare-fun x7452 () Int)
(declare-fun x3237 () Bool)
(declare-fun x1156 (Int) Int)
(declare-fun x1806 () Int)
(declare-fun x6376 () Bool)
(declare-fun x5057 () Int)
(declare-fun x3486 () x112)
(declare-fun x281 (Int) Int)
(declare-fun x4983 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x6902 () Bool)
(declare-fun x204 () Bool)
(declare-fun x133 () Int)
(declare-fun x3911 () Bool)
(declare-fun x5758 () Int)
(declare-fun x1239 () Int)
(declare-fun x8238 () Int)
(declare-fun x2014 () Bool)
(declare-fun x6362 () Int)
(declare-fun x8244 () Int)
(declare-fun x8711 () Bool)
(declare-fun x3543 () Int)
(declare-fun x2386 () Int)
(declare-fun x6409 () Bool)
(declare-fun x162 () Bool)
(declare-fun x7058 () x112)
(declare-fun x2463 () x112)
(declare-fun x1901 (Int) Int)
(declare-fun x5946 () Bool)
(declare-fun x2920 () Bool)
(declare-fun x8333 () Bool)
(declare-fun x8283 () x112)
(declare-fun x7129 () Bool)
(declare-fun x1109 () Int)
(declare-fun x6123 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x3651 () Int)
(declare-fun x1091 () Bool)
(declare-fun x8425 () Bool)
(declare-fun x5236 () Bool)
(declare-fun x233 () x112)
(declare-fun x4309 () Bool)
(declare-fun x4217 () Bool)
(declare-fun x3261 () Bool)
(declare-fun x4568 () Bool)
(declare-fun x8180 () Int)
(declare-fun x6736 () Int)
(declare-fun x8672 () Bool)
(declare-fun x7308 () Int)
(declare-fun x4975 () Int)
(declare-fun x904 () Bool)
(declare-fun x63 () Bool)
(declare-fun x1623 () Int)
(declare-fun x4516 () Int)
(declare-fun x2669 () Bool)
(declare-fun x1547 () Int)
(declare-fun x1915 () Int)
(declare-fun x1023 () Bool)
(declare-fun x3742 () x112)
(declare-fun x982 () Bool)
(declare-fun x7823 () x112)
(declare-fun x8644 () Int)
(declare-fun x6155 () Int)
(declare-fun x8931 () Int)
(declare-fun x8319 () Int)
(declare-fun x3804 () Bool)
(declare-fun x3321 () Bool)
(declare-fun x1125 () x112)
(declare-fun x7031 () Int)
(declare-fun x8701 () Bool)
(declare-fun x4849 () Int)
(declare-fun x3355 () x112)
(declare-fun x5385 () Bool)
(declare-fun x7882 () Int)
(declare-fun x1549 () Bool)
(declare-fun x4426 () Int)
(declare-fun x5539 () Int)
(declare-fun x1955 () x112)
(declare-fun x5062 () Bool)
(declare-fun x5509 () Bool)
(declare-fun x559 () Bool)
(declare-fun x2636 () Int)
(declare-fun x4737 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x5895 () Int)
(declare-fun x1991 () Int)
(declare-fun x7620 () Bool)
(declare-fun x5440 () Bool)
(declare-fun x1292 () Int)
(declare-fun x6742 () Bool)
(declare-fun x5051 () Bool)
(declare-fun x6067 () Bool)
(declare-fun x6446 () x112)
(declare-fun x7790 () Bool)
(declare-fun x7679 () Int)
(declare-fun x5555 () Int)
(declare-fun x7323 () Bool)
(declare-fun x4475 () Bool)
(declare-fun x3133 () Int)
(declare-fun x4371 () x112)
(declare-fun x5002 () Bool)
(declare-fun x7742 () Bool)
(declare-fun x4657 () Int)
(declare-fun x1302 () x112)
(declare-fun x8941 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x5984 () Bool)
(declare-fun x5412 () Bool)
(declare-fun x642 () Bool)
(declare-fun x3492 () Bool)
(declare-fun x4857 () x112)
(declare-fun x5662 () Bool)
(declare-fun x8663 () Int)
(declare-fun x1414 () Int)
(declare-fun x2974 () Int)
(declare-fun x8172 () Bool)
(declare-fun x2694 () Int)
(declare-fun x3636 () Int)
(declare-fun x415 () Bool)
(declare-fun x4649 () Int)
(declare-fun x4710 () Int)
(declare-fun x3108 () Int)
(declare-fun x8702 () Bool)
(declare-fun x8420 () Int)
(declare-fun x2385 () Bool)
(declare-fun x3364 () Bool)
(declare-fun x165 () x112)
(declare-fun x5902 (Int) Int)
(declare-fun x7 () Bool)
(declare-fun x1733 () Int)
(declare-fun x2629 () Bool)
(declare-fun x1921 () Int)
(declare-fun x4278 () Int)
(declare-fun x644 () Bool)
(declare-fun x8446 () Int)
(declare-fun x338 () Int)
(declare-fun x2261 () Int)
(declare-fun x5848 () Bool)
(declare-fun x2970 () x112)
(declare-fun x6086 () Bool)
(declare-fun x3571 () Int)
(declare-fun x1365 () Bool)
(declare-fun x6400 () x112)
(declare-fun x6039 () x112)
(declare-fun x6606 () Int)
(declare-fun x1470 () Int)
(declare-fun x1349 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x4652 () Bool)
(declare-fun x8769 () Bool)
(declare-fun x385 () Int)
(declare-fun x4156 () Bool)
(declare-fun x2006 () x112)
(declare-fun x2405 () Bool)
(declare-fun x1738 (Int) Int)
(declare-fun x104 () x112)
(declare-fun x3345 () Int)
(declare-fun x5067 () Bool)
(declare-fun x8249 () Int)
(declare-fun x3330 () Int)
(declare-fun x10 () Int)
(declare-fun x3168 () Bool)
(declare-fun x1115 () Int)
(declare-fun x5518 () Int)
(declare-fun x5168 () Int)
(declare-fun x3142 () Int)
(declare-fun x3021 () Int)
(declare-fun x6959 () x112)
(declare-fun x381 (Int) Int)
(declare-fun x4939 () Int)
(declare-fun x5718 () Bool)
(declare-fun x749 () x112)
(declare-fun x1512 () Bool)
(declare-fun x8130 () Bool)
(declare-fun x6460 () Int)
(declare-fun x8608 () Int)
(declare-fun x4512 () Bool)
(declare-fun x4534 () Bool)
(declare-fun x6678 () Bool)
(declare-fun x6200 () Bool)
(declare-fun x916 () Int)
(declare-fun x695 () Int)
(declare-fun x1398 () Int)
(declare-fun x8091 (x112) Int)
(declare-fun x5839 () Int)
(declare-fun x3678 () Bool)
(declare-fun x2839 () Int)
(declare-fun x1812 () Bool)
(declare-fun x7382 () Bool)
(declare-fun x3386 () Int)
(declare-fun x122 () Int)
(declare-fun x4971 () Int)
(declare-fun x6708 () Int)
(declare-fun x4196 () Int)
(declare-fun x2344 () Bool)
(declare-fun x6133 () x112)
(declare-fun x6655 () Int)
(declare-fun x1998 () Int)
(declare-fun x7890 () x112)
(declare-fun x1346 () x112)
(declare-fun x8434 () Bool)
(declare-fun x2025 () Int)
(declare-fun x6556 () x112)
(declare-fun x1145 () Int)
(declare-fun x1034 () Int)
(declare-fun x8598 () Int)
(declare-fun x139 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x7807 () Bool)
(declare-fun x8496 () x112)
(declare-fun x5529 () Int)
(declare-fun x6642 () Bool)
(declare-fun x4305 () Bool)
(declare-fun x5512 () Int)
(declare-fun x4184 () Bool)
(declare-fun x9197 () Bool)
(declare-fun x921 () Int)
(declare-fun x9116 () x112)
(declare-fun x3301 () x112)
(declare-fun x3157 () Bool)
(declare-fun x5568 () Int)
(declare-fun x8240 () Int)
(declare-fun x4595 () Bool)
(declare-fun x2269 () Int)
(declare-fun x6157 () Bool)
(declare-fun x1858 () Int)
(declare-fun x3903 () Bool)
(declare-fun x5045 () Bool)
(declare-fun x1839 () x112)
(declare-fun x7946 () Bool)
(declare-fun x7539 () Bool)
(declare-fun x6257 () Bool)
(declare-fun x2654 () Int)
(declare-fun x8819 () Int)
(declare-fun x7870 () x112)
(declare-fun x1057 () x112)
(declare-fun x5661 () Int)
(declare-fun x5194 () Bool)
(declare-fun x8891 () Int)
(declare-fun x7153 () Int)
(declare-fun x4466 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x7196 () Bool)
(declare-fun x52 () Bool)
(declare-fun x3882 (x112) Int)
(declare-fun x4209 () Int)
(declare-fun x6775 () Bool)
(declare-fun x2378 () Bool)
(declare-fun x5963 () Int)
(declare-fun x7808 () Int)
(declare-fun x8171 () x112)
(declare-fun x4122 () Int)
(declare-fun x6343 () Int)
(declare-fun x470 () x112)
(declare-fun x7315 () Bool)
(declare-fun x1779 () Int)
(declare-fun x4870 () Int)
(declare-fun x6762 () Bool)
(declare-fun x6620 () Int)
(declare-fun x6691 () Bool)
(declare-fun x3453 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x7999 () Int)
(declare-fun x7705 () Bool)
(declare-fun x3763 () Bool)
(declare-fun x8824 () Int)
(declare-fun x9138 () x112)
(declare-fun x1974 () Bool)
(declare-fun x7698 () Int)
(declare-fun x6261 () Int)
(declare-fun x1735 () Int)
(declare-fun x45 () Int)
(declare-fun x4502 () Bool)
(declare-fun x444 () Int)
(declare-fun x8489 () Int)
(declare-fun x8897 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x8235 () Bool)
(declare-fun x7842 () Int)
(declare-fun x4758 () Bool)
(declare-fun x4613 () Bool)
(declare-fun x3664 () Bool)
(declare-fun x5324 () Bool)
(declare-fun x561 () x112)
(declare-fun x8266 () Int)
(declare-fun x8205 () Bool)
(declare-fun x5083 () Int)
(declare-fun x3257 () Bool)
(declare-fun x1976 () Int)
(declare-fun x1018 () Int)
(declare-fun x5919 () Bool)
(declare-fun x5993 () Bool)
(declare-fun x451 () Int)
(declare-fun x7775 () Bool)
(declare-fun x215 () Bool)
(declare-fun x4284 () Bool)
(declare-fun x4092 () Bool)
(declare-fun x8607 () Int)
(declare-fun x7839 () Bool)
(declare-fun x3452 () Bool)
(declare-fun x4991 () Bool)
(declare-fun x3922 () Int)
(declare-fun x7941 () Bool)
(declare-fun x5738 () Int)
(declare-fun x7326 () Int)
(declare-fun x2862 () Int)
(declare-fun x1890 () Bool)
(declare-fun x7987 () x112)
(declare-fun x6459 () Bool)
(declare-fun x675 () Bool)
(declare-fun x8396 () Bool)
(declare-fun x4866 () Bool)
(declare-fun x6487 () Int)
(declare-fun x8953 () Bool)
(declare-fun x9185 () Bool)
(declare-fun x6893 () Bool)
(declare-fun x8543 () Int)
(declare-fun x4597 () x112)
(declare-fun x5306 () Bool)
(declare-fun x9072 () Int)
(declare-fun x3504 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x2496 () Int)
(declare-fun x680 () Bool)
(declare-fun x8613 () Bool)
(declare-fun x3851 () Int)
(declare-fun x2431 () Int)
(declare-fun x7171 () x112)
(declare-fun x3616 () x112)
(declare-fun x8054 () Bool)
(declare-fun x7065 () Int)
(declare-fun x6662 () Int)
(declare-fun x2803 () Int)
(declare-fun x446 () Bool)
(declare-fun x828 () Bool)
(declare-fun x2039 () Int)
(declare-fun x5767 () x112)
(declare-fun x8191 () Int)
(declare-fun x6114 () x112)
(declare-fun x5795 () Int)
(declare-fun x9115 () Bool)
(declare-fun x7685 () Bool)
(declare-fun x4462 () Int)
(declare-fun x6292 () Bool)
(declare-fun x741 () Bool)
(declare-fun x5060 () Int)
(declare-fun x8159 (x112) Int)
(declare-fun x1392 () Bool)
(declare-fun x8401 () Int)
(declare-fun x1079 () Bool)
(declare-fun x1348 () Int)
(declare-fun x8477 () Int)
(declare-fun x2453 () Int)
(declare-fun x8929 () Int)
(declare-fun x4668 () Int)
(declare-fun x6696 () Int)
(declare-fun x8309 () x112)
(declare-fun x2847 () Bool)
(declare-fun x4331 () x112)
(declare-fun x5556 () Int)
(declare-fun x4891 () Bool)
(declare-fun x6325 () Int)
(declare-fun x7524 () Int)
(declare-fun x2904 (Int) Int)
(declare-fun x4444 () Bool)
(declare-fun x7141 () x112)
(declare-fun x6502 () Int)
(declare-fun x3848 () Bool)
(declare-fun x5852 () Bool)
(declare-fun x2256 () Int)
(declare-fun x6953 () Bool)
(declare-fun x8220 () Bool)
(declare-fun x1465 () Int)
(declare-fun x1218 () Bool)
(declare-fun x6860 () Int)
(declare-fun x7791 () Bool)
(declare-fun x3824 () Bool)
(declare-fun x8671 () Bool)
(declare-fun x2123 () Int)
(declare-fun x7407 () x112)
(declare-fun x6912 () Bool)
(declare-fun x656 () Bool)
(declare-fun x4164 () Bool)
(declare-fun x5578 () Int)
(declare-fun x4439 () x112)
(declare-fun x6410 () Int)
(declare-fun x5820 () Bool)
(declare-fun x5606 () Bool)
(declare-fun x3488 () Bool)
(declare-fun x5408 () Bool)
(declare-fun x8035 () x112)
(declare-fun x8466 () Bool)
(declare-fun x6559 () x112)
(define-fun x4000 ((x112 x112) (x3086 Int)) x112 (ite ((_ is x7717) x112) (x7717 (x8979 x112) (+ (x1496 x112) x3086)) (ite ((_ is x5783) x112) (x5783 (x3840 x112) (x8673 x112) (+ x3086 (x8281 x112))) (x6664 (+ (x4398 x112) x3086)))))
(define-fun x910 ((x1475 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1475) (>= x1475 0)) x1475 (- x1475 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2563 ((x1475 Int)) Int (ite (and (< x1475 0) (>= x1475 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1475 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1475))
(define-fun x9173 ((x3112 Int)) Bool (and (<= 0 x3112) (< x3112 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x5552 ((x3112 Int)) Bool (and (= (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3112) x3112) (= x3112 (x6748 x3112 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x3480 ((x3112 Int)) Bool (and (= (x6748 0 x3112) 0) (= (x6748 x3112 0) 0)))
(define-fun x2394 ((x3112 Int)) Bool (= (x6748 x3112 x3112) x3112))
(define-fun x2631 ((x3112 Int)) Bool (and (x2394 x3112) (x5552 x3112) (x3480 x3112)))
(define-fun x6503 ((x3112 Int) (x6948 Int)) Bool (= (x6748 x6948 x3112) (x6748 x3112 x6948)))
(define-fun x9064 ((x3112 Int) (x6948 Int)) Bool (and (>= (x6748 x3112 x6948) 0) (=> (>= x6948 0) (<= (x6748 x3112 x6948) x6948)) (=> (<= 0 x3112) (<= (x6748 x3112 x6948) x3112))))
(define-fun x5699 ((x3112 Int) (x6948 Int)) Bool (and (x9064 x3112 x6948) (x6503 x3112 x6948)))
(define-fun x762 ((x3112 Int)) Bool (= (x6748 x3112 1461501637330902918203684832716283019655932542975) (mod x3112 1461501637330902918203684832716283019655932542976)))
(define-fun x8537 ((x3112 Int)) Bool (and (x762 x3112) (x5699 x3112 1461501637330902918203684832716283019655932542975)))
(define-fun x1329 ((x3112 Int)) Bool (= (x6748 x3112 26959946667150639794667015087019630673637144422540572481103610249215) (mod x3112 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x159 ((x3112 Int)) Bool (and (x1329 x3112) (x5699 x3112 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x3073 ((x3112 Int)) Bool (and (= (x2812 x3112 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2812 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3112) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x379 ((x3112 Int)) Bool (and (= (x2812 x3112 0) x3112) (= (x2812 0 x3112) x3112)))
(define-fun x7457 ((x3112 Int)) Bool (= x3112 (x2812 x3112 x3112)))
(define-fun x8398 ((x3112 Int)) Bool (and (x7457 x3112) (x3073 x3112) (x379 x3112)))
(define-fun x7252 ((x3112 Int) (x6948 Int)) Bool (= (x2812 x3112 x6948) (x2812 x6948 x3112)))
(define-fun x8026 ((x3112 Int) (x6948 Int)) Bool (and (=> (>= x6948 0) (>= (x2812 x3112 x6948) x6948)) (<= (x2812 x3112 x6948) (+ x6948 x3112)) (=> (>= x3112 0) (>= (x2812 x3112 x6948) x3112))))
(define-fun x1593 ((x3112 Int) (x6948 Int)) Bool (and (x8026 x3112 x6948) (x7252 x3112 x6948)))
(define-fun x6719 ((x3112 Int)) Bool (= (+ (x6748 x3112 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x3112 32)) (mod x3112 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x4899 ((x3112 Int)) Bool (and (x5699 x3112 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x6719 x3112)))
(define-fun x6443 ((x1872 Int)) Int (ite (= x1872 128) (ite x2534 1 0) (x3916 x1872)))
(define-fun x1169 ((x1872 Int)) Int (ite (= x1872 160) (ite x4007 1 0) (x6443 x1872)))
(define-fun x5339 ((x1872 Int)) Int (ite (= 192 x1872) (ite x1392 1 0) (x1169 x1872)))
(define-fun x4317 ((x1872 Int)) Int (ite (= 224 x1872) (ite x5261 1 0) (x5339 x1872)))
(define-fun x3579 ((x1872 Int)) Int (ite (= 256 x1872) (ite x5606 1 0) (x4317 x1872)))
(define-fun x3125 ((x1872 Int)) Int (ite (= 288 x1872) (ite x7387 1 0) (x3579 x1872)))
(define-fun x8484 ((x1872 Int)) Int (ite (= 320 x1872) (ite x8004 1 0) (x3125 x1872)))
(define-fun x4070 ((x1872 Int)) Int (ite (= x1872 352) (ite x977 1 0) (x8484 x1872)))
(define-fun x4847 ((x1872 Int)) Int (ite (= 128 x1872) (ite x2281 1 0) (x1738 x1872)))
(define-fun x5724 ((x1872 Int)) Int (ite (= 160 x1872) (ite x6053 1 0) (x4847 x1872)))
(define-fun x4022 ((x1872 Int)) Int (ite (= 192 x1872) (ite x4886 1 0) (x5724 x1872)))
(define-fun x7896 ((x1872 Int)) Int (ite (= 224 x1872) (ite x1519 1 0) (x4022 x1872)))
(define-fun x1033 ((x1872 Int)) Int (ite (= x1872 256) (ite x3182 1 0) (x7896 x1872)))
(define-fun x2980 ((x1872 Int)) Int (ite (= x1872 288) (ite x3743 1 0) (x1033 x1872)))
(define-fun x2157 ((x1872 Int)) Int (ite (= x1872 320) (ite x622 1 0) (x2980 x1872)))
(define-fun x6778 ((x1872 Int)) Int (ite (= x1872 352) (ite x8570 1 0) (x2157 x1872)))
(define-fun x2600 ((x1872 Int)) Int (ite (= x1872 420) x3881 (x6778 x1872)))
(define-fun x8855 ((x1872 Int)) Int (ite (= x1872 384) 36 (x2600 x1872)))
(define-fun x5608 ((x1872 Int)) Int (ite (= 416 x1872) x8322 (x8855 x1872)))
(define-fun x5162 ((x1872 Int)) Int (ite (= x1872 516) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x5608 x1872)))
(define-fun x3266 ((x1872 Int)) Int (ite (= x1872 0) x2207 (x2904 x1872)))
(define-fun x7792 ((x1872 Int)) Int (ite (= 516 x1872) x2207 (x5162 x1872)))
(define-fun x970 ((x1872 Int)) Int (ite (= x1872 0) x8295 (x2904 x1872)))
(define-fun x4528 ((x1872 Int)) Int (ite (= 516 x1872) x8295 (x5162 x1872)))
(define-fun x6712 ((x1872 Int)) Int (ite (= x1872 0) x8388 (x2904 x1872)))
(define-fun x3469 ((x1872 Int)) Int (ite (= x1872 516) x8388 (x5162 x1872)))
(define-fun x7179 ((x1872 x112)) Int (ite (= x1872 x8980) x1525 (x2109 x1872)))
(define-fun x6797 ((x1872 x112)) Int (ite (= x1872 x429) x3800 (x2109 x1872)))
(define-fun x8959 ((x1872 x112)) Int (ite x2201 (x7179 x1872) (x6797 x1872)))
(define-fun x4101 ((x1872 x112)) Int (ite x7984 (x2109 x1872) (x8959 x1872)))
(define-fun x5277 ((x1872 x112)) Int (ite (= x1872 x3745) x482 (x4101 x1872)))
(define-fun x6583 ((x1872 Int)) Int (ite x6395 (x7792 x1872) (ite x4707 (x4528 x1872) (x3469 x1872))))
(define-fun x5328 ((x1872 Int)) Int (ite (= x7442 x1872) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x6583 x1872)))
(define-fun x2141 ((x1872 Int)) Int (ite (= x7442 x1872) x1116 (x5328 x1872)))
(define-fun x4789 ((x1872 Int)) Int (ite (= x1872 x7442) x1750 (x5328 x1872)))
(define-fun x3862 ((x1872 Int)) Int (ite (= x1872 x7442) x3252 (x5328 x1872)))
(define-fun x2360 ((x1872 Int)) Int (ite x8099 (x2141 x1872) (ite x8296 (x4789 x1872) (x3862 x1872))))
(define-fun x7335 ((x1872 Int)) Int (ite x3538 (x2360 x1872) (x6583 x1872)))
(define-fun x459 ((x1872 Int)) Int (ite (= x1872 x7435) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x7335 x1872)))
(define-fun x1269 ((x1872 Int)) Int (ite (= x3306 x1872) x5405 (x459 x1872)))
(define-fun x5407 ((x1872 Int)) Int (ite (= x8607 x1872) x7036 (x1269 x1872)))
(define-fun x3721 ((x1872 Int)) Int (ite (= x1872 x5821) x4044 (x5407 x1872)))
(define-fun x8169 ((x1872 Int)) Int (ite (= x1872 0) 1 (x3721 x1872)))
(define-fun x1108 ((x1872 Int)) Int (ite (= x1872 0) 1 (x3721 x1872)))
(define-fun x6951 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x3721 x1872)))
(define-fun x4683 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x3721 x1872)))
(define-fun x603 ((x1872 Int)) Int (ite x8204 (ite x1523 (x3721 x1872) (x8169 x1872)) (ite x2355 (ite x8729 (x3721 x1872) (x1108 x1872)) (ite x2618 (ite x7889 (x3721 x1872) (x6951 x1872)) (ite x2288 (x3721 x1872) (x4683 x1872))))))
(define-fun x1790 ((x1872 Int)) Int (ite (= x1872 x5743) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x603 x1872)))
(define-fun x5590 ((x1872 Int)) Int (ite (= x5743 x1872) x2207 (x1790 x1872)))
(define-fun x1931 ((x1872 Int)) Int (ite (= x5743 x1872) x8295 (x1790 x1872)))
(define-fun x8323 ((x1872 Int)) Int (ite (= x1872 x5743) x8388 (x1790 x1872)))
(define-fun x2282 ((x1872 Int)) Int (ite x5708 (x5590 x1872) (ite x4205 (x1931 x1872) (x8323 x1872))))
(define-fun x7615 ((x1872 Int)) Int (ite (= x9202 x1872) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x2282 x1872)))
(define-fun x3056 ((x1872 Int)) Int (ite (= x1872 x477) x560 (x7615 x1872)))
(define-fun x7943 ((x1872 Int)) Int (ite (= x3352 x1872) x3881 (x3056 x1872)))
(define-fun x7177 ((x1872 Int)) Int (ite (= x1872 x2849) x2575 (x7943 x1872)))
(define-fun x3837 ((x1872 Int)) Int (ite (and (> (+ x9202 0) x1872) (<= x9202 x1872)) (x1941 (+ (- x1872 x9202) 0)) (x7177 x1872)))
(define-fun x382 ((x1872 Int)) Int (ite x680 (x2282 x1872) (x3837 x1872)))
(define-fun x5680 ((x1872 Int)) Int (ite (= x9202 x1872) x2295 (x382 x1872)))
(define-fun x6076 ((x1872 Int)) Int (ite (= x9202 x1872) x4809 (x5680 x1872)))
(define-fun x2396 ((x1872 Int)) Int (ite (= x1872 x45) x5721 (x6076 x1872)))
(define-fun x8816 ((x1872 Int)) Int (ite x7984 (x382 x1872) (x2396 x1872)))
(define-fun x8086 ((x1872 Int)) Int (ite (= x9202 x1872) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x8816 x1872)))
(define-fun x3700 ((x1872 Int)) Int (ite (= x1872 x9202) 1 (x8086 x1872)))
(define-fun x1495 ((x1872 Int)) Int (ite (= x1872 x9202) 1 (x8086 x1872)))
(define-fun x6990 ((x1872 Int)) Int (ite (= x9202 x1872) 1 (x8086 x1872)))
(define-fun x7715 ((x1872 Int)) Int (ite x3772 (x3700 x1872) (ite x3557 (x1495 x1872) (x6990 x1872))))
(define-fun x4731 ((x1872 Int)) Int (ite (= x1872 x8393) x8575 (x7715 x1872)))
(define-fun x8050 ((x1872 Int)) Int (ite (= x6606 x1872) x2680 (x4731 x1872)))
(define-fun x1399 ((x1872 x112)) Int (ite (= x1872 x2566) x1085 (x18 x1872)))
(define-fun x4358 ((x1872 x112)) Int (ite (= x5547 x1872) x1436 (x1399 x1872)))
(define-fun x8511 ((x1872 x112)) Int (ite (= x1323 x1872) x5774 (x8159 x1872)))
(define-fun x6756 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x1901 x1872)))
(define-fun x6827 ((x1872 x112)) Int (ite (= x4565 x1872) x3734 (x769 x1872)))
(define-fun x8974 ((x1872 x112)) Int (ite (= x1872 x5617) x1606 (x6827 x1872)))
(define-fun x1361 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x1901 x1872)))
(define-fun x7189 ((x1872 x112)) Int (ite (= x1872 x1244) x7522 (x7707 x1872)))
(define-fun x4326 ((x1872 x112)) Int (ite (= x1872 x8751) x6135 (x7189 x1872)))
(define-fun x1367 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x1901 x1872)))
(define-fun x1232 ((x1872 x112)) Int (ite (= x2854 x1872) x3192 (x563 x1872)))
(define-fun x3088 ((x1872 x112)) Int (ite (= x1872 x4563) x7880 (x1232 x1872)))
(define-fun x9076 ((x1872 Int)) Int (ite (= x1872 0) 1 (x1901 x1872)))
(define-fun x4763 ((x1872 Int)) Int (ite x4026 (x966 x1872) (x7066 x1872)))
(define-fun x4969 ((x1872 Int)) Int (ite x7324 (x8816 x1872) (ite x1972 (x7715 x1872) (x8050 x1872))))
(define-fun x1811 ((x1872 Int)) Int (ite (= x8939 x1872) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x4969 x1872)))
(define-fun x907 ((x1872 Int)) Int (ite (= x1872 x8939) x2207 (x1811 x1872)))
(define-fun x2771 ((x1872 Int)) Int (ite (= x1872 x8939) x8295 (x1811 x1872)))
(define-fun x4078 ((x1872 Int)) Int (ite (= x8939 x1872) x8388 (x1811 x1872)))
(define-fun x2596 ((x1872 Int)) Int (ite x7653 (x907 x1872) (ite x7076 (x2771 x1872) (x4078 x1872))))
(define-fun x3316 ((x1872 Int)) Int (ite (= x9171 x1872) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x2596 x1872)))
(define-fun x5710 ((x1872 Int)) Int (ite (= x8543 x1872) x730 (x3316 x1872)))
(define-fun x3977 ((x1872 Int)) Int (ite (= x1872 x4727) x3881 (x5710 x1872)))
(define-fun x8395 ((x1872 Int)) Int (ite (= x501 x1872) x2746 (x3977 x1872)))
(define-fun x7963 ((x1872 Int)) Int (ite (and (>= x1872 x9171) (< x1872 (+ 0 x9171))) (x3803 (+ (- x1872 x9171) 0)) (x8395 x1872)))
(define-fun x8754 ((x1872 Int)) Int (ite x1272 (x2596 x1872) (x7963 x1872)))
(define-fun x8541 ((x1872 Int)) Int (ite (= x1872 x9171) x7979 (x8754 x1872)))
(define-fun x5541 ((x1872 Int)) Int (ite (= x1872 x6032) x7736 (x8541 x1872)))
(define-fun x1168 ((x1872 Int)) Int (ite x324 (x5541 x1872) (x2596 x1872)))
(define-fun x2211 ((x1872 Int)) Int (ite x143 (x4969 x1872) (ite x6908 (x1168 x1872) (x4969 x1872))))
(define-fun x5313 ((x1872 Int)) Int (ite (= x53 x1872) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x2211 x1872)))
(define-fun x9011 ((x1872 Int)) Int (ite (= x1872 x3727) x7036 (x5313 x1872)))
(define-fun x6508 ((x1872 Int)) Int (ite (= x53 x1872) x5814 (x9011 x1872)))
(define-fun x3440 ((x1872 Int)) Int (ite (= x53 x1872) x3818 (x9011 x1872)))
(define-fun x6038 ((x1872 Int)) Int (ite (= x1872 x53) x3302 (x9011 x1872)))
(define-fun x9207 ((x1872 Int)) Int (ite x5492 (ite x5023 (x9011 x1872) (x6508 x1872)) (ite x7131 (ite x6061 (x9011 x1872) (x3440 x1872)) (ite x3681 (x9011 x1872) (x6038 x1872)))))
(define-fun x5914 ((x1872 Int)) Int (ite (= x267 x1872) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x9207 x1872)))
(define-fun x5282 ((x1872 Int)) Int (ite (= x1872 x931) x3881 (x5914 x1872)))
(define-fun x5467 ((x1872 Int)) Int (ite (= x6502 x1872) x2734 (x5282 x1872)))
(define-fun x9137 ((x1872 Int)) Int (ite (= x1872 0) 1 (x5467 x1872)))
(define-fun x5475 ((x1872 Int)) Int (ite x2690 (x5467 x1872) (x9137 x1872)))
(define-fun x8651 ((x1872 Int)) Int (ite (= x1872 x267) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x5475 x1872)))
(define-fun x4770 ((x1872 Int)) Int (ite (= x2751 x1872) x2734 (x8651 x1872)))
(define-fun x7876 ((x1872 Int)) Int (ite (= x267 x1872) 0 (x4770 x1872)))
(define-fun x5050 ((x1872 Int)) Int (ite (= x267 x1872) 0 (x4770 x1872)))
(define-fun x6937 ((x1872 Int)) Int (ite (= x267 x1872) 0 (x4770 x1872)))
(define-fun x5599 ((x1872 Int)) Int (ite x1394 (ite x2363 (x4770 x1872) (x7876 x1872)) (ite x4926 (ite x8444 (x4770 x1872) (x5050 x1872)) (ite x9030 (x4770 x1872) (x6937 x1872)))))
(define-fun x6478 ((x1872 Int)) Int (ite (= x267 x1872) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x9207 x1872)))
(define-fun x6403 ((x1872 Int)) Int (ite (= x1872 x3499) x2734 (x6478 x1872)))
(define-fun x5947 ((x1872 Int)) Int (ite (and (> (+ 0 x267) x1872) (<= x267 x1872)) (x7305 (+ (- x1872 x267) 0)) (x6403 x1872)))
(define-fun x6218 ((x1872 Int)) Int (ite (= x267 x1872) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x5947 x1872)))
(define-fun x1484 ((x1872 Int)) Int (ite (= x267 x1872) x369 (x6218 x1872)))
(define-fun x6811 ((x1872 Int)) Int (ite x1393 (x6218 x1872) (x1484 x1872)))
(define-fun x373 ((x1872 Int)) Int (ite (= x1872 x267) x1429 (x6218 x1872)))
(define-fun x2291 ((x1872 Int)) Int (ite x768 (x6218 x1872) (x373 x1872)))
(define-fun x8213 ((x1872 Int)) Int (ite (= x1872 x267) x3199 (x6218 x1872)))
(define-fun x6335 ((x1872 Int)) Int (ite x4004 (x6218 x1872) (x8213 x1872)))
(define-fun x7678 ((x1872 Int)) Int (ite x5167 (x6811 x1872) (ite x4755 (x2291 x1872) (x6335 x1872))))
(define-fun x6513 ((x1872 Int)) Int (ite x8052 (x7678 x1872) (ite x3505 (x6218 x1872) (x7678 x1872))))
(define-fun x1180 ((x1872 Int)) Int (ite x2593 (x9207 x1872) (ite x402 (x5599 x1872) (x6513 x1872))))
(define-fun x6350 ((x1872 Int)) Int (ite (= x1872 x7579) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x1180 x1872)))
(define-fun x2348 ((x1872 Int)) Int (ite (= x1872 x7579) 1 (x6350 x1872)))
(define-fun x3529 ((x1872 Int)) Int (ite (= x7579 x1872) 1 (x6350 x1872)))
(define-fun x5251 ((x1872 Int)) Int (ite (= x7579 x1872) 1 (x6350 x1872)))
(define-fun x4400 ((x1872 Int)) Int (ite x7287 (x2348 x1872) (ite x6918 (x3529 x1872) (x5251 x1872))))
(define-fun x6652 ((x1872 Int)) Int (ite (= x7212 x1872) 44970383829727661923261016617897238973146650624978361361029103362720544063488 (x4400 x1872)))
(define-fun x6871 ((x1872 Int)) Int (ite (= x5208 x1872) x4396 (x6652 x1872)))
(define-fun x2415 ((x1872 Int)) Int (ite (= x3246 x1872) x3881 (x6871 x1872)))
(define-fun x2877 ((x1872 Int)) Int (ite (= x6965 x1872) x7787 (x2415 x1872)))
(define-fun x2020 ((x1872 Int)) Int (ite (and (<= x7212 x1872) (> (+ x7212 0) x1872)) (x2504 (+ 0 (- x1872 x7212))) (x2877 x1872)))
(define-fun x4938 ((x1872 Int)) Int (ite x2220 (x4400 x1872) (x2020 x1872)))
(define-fun x5877 ((x1872 Int)) Int (ite (= x1872 x7212) x1861 (x4938 x1872)))
(define-fun x6212 ((x1872 Int)) Int (ite (= x1872 x4902) x5016 (x5877 x1872)))
(define-fun x2983 ((x1872 Int)) Int (ite x3950 (ite x5458 (x6212 x1872) (x4400 x1872)) (x1180 x1872)))
(define-fun x1444 ((x1872 Int)) Int (ite (= x6009 x1872) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x2983 x1872)))
(define-fun x6821 ((x1872 Int)) Int (ite (= x6009 x1872) 1 (x1444 x1872)))
(define-fun x6669 ((x1872 Int)) Int (ite (= x1872 x6009) 1 (x1444 x1872)))
(define-fun x5826 ((x1872 Int)) Int (ite (= x1872 x6009) 1 (x1444 x1872)))
(define-fun x24 ((x1872 Int)) Int (ite x1813 (x6821 x1872) (ite x3076 (x6669 x1872) (x5826 x1872))))
(define-fun x7355 ((x1872 Int)) Int (ite (= x2232 x1872) x5570 (x24 x1872)))
(define-fun x5212 ((x1872 Int)) Int (ite x4941 (x2983 x1872) (x7355 x1872)))
(define-fun x6310 ((x1872 Int)) Int (ite (= x1930 x1872) x8178 (x5212 x1872)))
(define-fun x6945 ((x1872 Int)) Int (ite (= x1810 x1872) x3733 (x6310 x1872)))
(define-fun x8683 ((x1872 Int)) Int (ite (= x1872 x1930) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x6945 x1872)))
(define-fun x3689 ((x1872 Int)) Int (ite (= x1872 x3186) x3881 (x8683 x1872)))
(define-fun x3211 ((x1872 Int)) Int (ite (= x8051 x1872) x393 (x3689 x1872)))
(define-fun x3377 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x3211 x1872)))
(define-fun x3624 ((x1872 Int)) Int (ite x2609 (x3211 x1872) (x3377 x1872)))
(define-fun x4077 ((x1872 Int)) Int (ite (= x1872 x1930) 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x3624 x1872)))
(define-fun x4036 ((x1872 Int)) Int (ite (= x2202 x1872) x393 (x4077 x1872)))
(define-fun x5728 ((x1872 Int)) Int (ite (= x1872 x1930) 0 (x4036 x1872)))
(define-fun x3027 ((x1872 Int)) Int (ite (= x1872 x1930) 0 (x4036 x1872)))
(define-fun x2424 ((x1872 Int)) Int (ite (= x1930 x1872) 0 (x4036 x1872)))
(define-fun x7222 ((x1872 Int)) Int (ite x1456 (ite x3416 (x4036 x1872) (x5728 x1872)) (ite x230 (ite x5364 (x4036 x1872) (x3027 x1872)) (ite x3813 (x4036 x1872) (x2424 x1872)))))
(define-fun x5172 ((x1872 x112)) Int (ite (= x1872 x5175) 0 (x5847 x1872)))
(define-fun x3998 ((x1872 x112)) Int (ite x1948 (x5847 x1872) (x5172 x1872)))
(define-fun x2422 ((x1872 x112)) Int (ite (= x6456 x1872) x358 (x6168 x1872)))
(define-fun x725 ((x1872 x112)) Int (ite (= x1872 x2195) 0 (x3998 x1872)))
(define-fun x4570 ((x1872 x112)) Int (ite (= x5522 x1872) x2346 (x443 x1872)))
(define-fun x8116 ((x1872 x112)) Int (ite (= x5522 x1872) 0 (x443 x1872)))
(define-fun x1133 ((x1872 x112)) Int (ite x2201 (x8116 x1872) (x4570 x1872)))
(define-fun x5933 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x2271 x1872)))
(define-fun x2059 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x2271 x1872)))
(define-fun x6654 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x2271 x1872)))
(define-fun x4481 ((x1872 x112)) Int (ite x7324 (x4101 x1872) (ite x1972 (x4101 x1872) (x5277 x1872))))
(define-fun x855 ((x1872 x112)) Int (ite (= x7870 x1872) x1908 (x958 x1872)))
(define-fun x5640 ((x1872 x112)) Int (ite x2769 (x958 x1872) (ite x2954 (x855 x1872) (x958 x1872))))
(define-fun x3054 ((x1872 x112)) Int (ite (= x1872 x992) x560 (x5640 x1872)))
(define-fun x7277 ((x1872 x112)) Int (ite (= x1872 x992) x560 (x5640 x1872)))
(define-fun x8949 ((x1872 x112)) Int (ite x5489 (x5640 x1872) (ite x6037 (x3054 x1872) (ite x595 (x5640 x1872) (x7277 x1872)))))
(define-fun x212 ((x1872 x112)) Int (ite x8887 (x958 x1872) (ite x6006 (x5640 x1872) (x8949 x1872))))
(define-fun x2684 ((x1872 Int)) Int (ite (= x1872 0) x2207 (x2000 x1872)))
(define-fun x7784 ((x1872 Int)) Int (ite (= x1872 0) x8295 (x2000 x1872)))
(define-fun x1774 ((x1872 Int)) Int (ite (= 0 x1872) x8388 (x2000 x1872)))
(define-fun x4682 ((x1872 x112)) Int (ite x2899 (x725 x1872) (x3998 x1872)))
(define-fun x6750 ((x1872 x112)) Int (ite (= x782 x1872) x7979 (x4682 x1872)))
(define-fun x8294 ((x1872 x112)) Int (ite (= x4580 x1872) 0 (x6750 x1872)))
(define-fun x4409 ((x1872 x112)) Int (ite x8041 (x8294 x1872) (x6750 x1872)))
(define-fun x2052 ((x1872 x112)) Int (ite x324 (x4409 x1872) (x4682 x1872)))
(define-fun x3769 ((x1872 x112)) Int (ite x143 (x4682 x1872) (ite x6908 (x2052 x1872) (x4682 x1872))))
(define-fun x2815 ((x1872 x112)) Int (ite (= x6389 x1872) 0 (x2422 x1872)))
(define-fun x1884 ((x1872 x112)) Int (ite x4468 (x2815 x1872) (x2422 x1872)))
(define-fun x1883 ((x1872 x112)) Int (ite (= x1872 x7495) x7736 (x1884 x1872)))
(define-fun x2259 ((x1872 x112)) Int (ite (= x1872 x3902) 0 (x1883 x1872)))
(define-fun x8212 ((x1872 x112)) Int (ite x5268 (x2259 x1872) (x1883 x1872)))
(define-fun x3938 ((x1872 x112)) Int (ite x324 (x8212 x1872) (x1884 x1872)))
(define-fun x6537 ((x1872 x112)) Int (ite x143 (x1884 x1872) (ite x6908 (x3938 x1872) (x1884 x1872))))
(define-fun x4994 ((x1872 Int)) Int (ite (= x1872 0) x5814 (x4194 x1872)))
(define-fun x8202 ((x1872 Int)) Int (ite (= x1872 0) x3818 (x4194 x1872)))
(define-fun x5322 ((x1872 Int)) Int (ite (= x1872 0) x3302 (x4194 x1872)))
(define-fun x1673 ((x1872 x112)) Int (ite (= x1872 x8025) x8753 (x3912 x1872)))
(define-fun x8479 ((x1872 x112)) Int (ite (= x1872 x9120) x4412 (x4481 x1872)))
(define-fun x4936 ((x1872 x112)) Int (ite x8204 (ite x1523 (x8159 x1872) (x8511 x1872)) (x8159 x1872)))
(define-fun x2508 ((x1872 x112)) Int (ite (= x1872 x8988) x7375 (x4936 x1872)))
(define-fun x2927 ((x1872 x112)) Int (ite x2690 (x4936 x1872) (x2508 x1872)))
(define-fun x1780 ((x1872 x112)) Int (ite (= x5427 x1872) x6362 (x2927 x1872)))
(define-fun x5747 ((x1872 x112)) Int (ite x2442 (ite x7244 (x2927 x1872) (x1780 x1872)) (x2927 x1872)))
(define-fun x8007 ((x1872 x112)) Int (ite x2318 (x5747 x1872) (ite x5178 (x2927 x1872) (ite x5659 (x2927 x1872) (ite x8996 (x2927 x1872) (ite x3205 (x5747 x1872) (x2927 x1872)))))))
(define-fun x6885 ((x1872 x112)) Int (ite x2363 (x8007 x1872) (x5747 x1872)))
(define-fun x8630 ((x1872 x112)) Int (ite (= x7064 x1872) x2168 (x2927 x1872)))
(define-fun x5297 ((x1872 x112)) Int (ite x8357 (ite x7845 (x2927 x1872) (x8630 x1872)) (x2927 x1872)))
(define-fun x6495 ((x1872 x112)) Int (ite x6004 (x5297 x1872) (ite x1037 (x2927 x1872) (ite x8558 (x2927 x1872) (ite x2009 (x2927 x1872) (ite x8124 (x5297 x1872) (x2927 x1872)))))))
(define-fun x438 ((x1872 x112)) Int (ite x8444 (x6495 x1872) (x5297 x1872)))
(define-fun x2426 ((x1872 x112)) Int (ite (= x1872 x1803) x5014 (x2927 x1872)))
(define-fun x253 ((x1872 x112)) Int (ite x2567 (ite x5870 (x2927 x1872) (x2426 x1872)) (x2927 x1872)))
(define-fun x1905 ((x1872 x112)) Int (ite x1237 (x253 x1872) (ite x5395 (x2927 x1872) (ite x1597 (x2927 x1872) (ite x8749 (x2927 x1872) (ite x7729 (x253 x1872) (x2927 x1872)))))))
(define-fun x6428 ((x1872 x112)) Int (ite x9030 (x1905 x1872) (x253 x1872)))
(define-fun x7948 ((x1872 x112)) Int (ite x1394 (x6885 x1872) (ite x4926 (x438 x1872) (x6428 x1872))))
(define-fun x8409 ((x1872 x112)) Int (ite (= x1872 x5863) x4631 (x4936 x1872)))
(define-fun x4168 ((x1872 x112)) Int (ite x572 (ite x8989 (x4936 x1872) (x8409 x1872)) (x4936 x1872)))
(define-fun x307 ((x1872 x112)) Int (ite x2967 (x4168 x1872) (ite x1135 (x4936 x1872) (ite x5312 (x4936 x1872) (ite x4203 (x4168 x1872) (x4936 x1872))))))
(define-fun x7207 ((x1872 x112)) Int (ite x1393 (x307 x1872) (x4168 x1872)))
(define-fun x6648 ((x1872 x112)) Int (ite (= x1872 x4340) x6934 (x4936 x1872)))
(define-fun x7039 ((x1872 x112)) Int (ite x1370 (ite x8451 (x4936 x1872) (x6648 x1872)) (x4936 x1872)))
(define-fun x3621 ((x1872 x112)) Int (ite x7868 (x7039 x1872) (ite x6438 (x4936 x1872) (ite x1380 (x4936 x1872) (ite x3212 (x7039 x1872) (x4936 x1872))))))
(define-fun x376 ((x1872 x112)) Int (ite x768 (x3621 x1872) (x7039 x1872)))
(define-fun x7857 ((x1872 x112)) Int (ite (= x1872 x8707) x3009 (x4936 x1872)))
(define-fun x6761 ((x1872 x112)) Int (ite x5922 (ite x5510 (x4936 x1872) (x7857 x1872)) (x4936 x1872)))
(define-fun x4572 ((x1872 x112)) Int (ite x2832 (x6761 x1872) (ite x4522 (x4936 x1872) (ite x4256 (x4936 x1872) (ite x4822 (x6761 x1872) (x4936 x1872))))))
(define-fun x6345 ((x1872 x112)) Int (ite x4004 (x4572 x1872) (x6761 x1872)))
(define-fun x2296 ((x1872 x112)) Int (ite x5167 (x7207 x1872) (ite x4755 (x376 x1872) (x6345 x1872))))
(define-fun x5350 ((x1872 x112)) Int (ite x8052 (x2296 x1872) (ite x3505 (x4936 x1872) (x2296 x1872))))
(define-fun x823 ((x1872 x112)) Int (ite x2593 (x4936 x1872) (ite x402 (x7948 x1872) (x5350 x1872))))
(define-fun x778 ((x1872 x112)) Int (ite (= x1685 x1872) x1701 (x823 x1872)))
(define-fun x8871 ((x1872 Int)) Int (ite (= x1872 0) 1 (x1015 x1872)))
(define-fun x7702 ((x1872 x112)) Int (ite (= (x2264 x7036) x1872) x9141 (x3516 x1872)))
(define-fun x3041 ((x1872 x112)) Int (ite (= x1872 (x2264 x3881)) x877 (x7702 x1872)))
(define-fun x4230 ((x1872 x112)) Int (ite (= x1872 (x2264 x3881)) x5373 (x3041 x1872)))
(define-fun x5675 ((x1872 x112)) Int (ite (= (x2264 x7036) x1872) x8063 (x4230 x1872)))
(define-fun x8984 ((x1872 x112)) Int (ite x8052 (x3041 x1872) (ite x3505 (x3516 x1872) (x5675 x1872))))
(define-fun x885 ((x1872 x112)) Int (ite x2593 (x3516 x1872) (ite x402 (x3516 x1872) (x8984 x1872))))
(define-fun x8641 ((x1872 x112)) Int (ite (= x1872 (x2264 x7036)) x2135 (x885 x1872)))
(define-fun x6001 ((x1872 x112)) Int (ite (= x1872 x4346) x1861 (x1124 x1872)))
(define-fun x2572 ((x1872 x112)) Int (ite (= x1872 x1236) 0 (x6001 x1872)))
(define-fun x2733 ((x1872 x112)) Int (ite x710 (x2572 x1872) (x6001 x1872)))
(define-fun x3690 ((x1872 x112)) Int (ite x5458 (x2733 x1872) (x1124 x1872)))
(define-fun x8236 ((x1872 x112)) Int (ite x6275 (x1124 x1872) (ite x3950 (x3690 x1872) (x1124 x1872))))
(define-fun x3901 ((x1872 x112)) Int (ite (= x1872 x2935) x5016 (x2017 x1872)))
(define-fun x745 ((x1872 x112)) Int (ite (= x104 x1872) 0 (x3901 x1872)))
(define-fun x3278 ((x1872 x112)) Int (ite x8725 (x745 x1872) (x3901 x1872)))
(define-fun x658 ((x1872 x112)) Int (ite x5458 (x3278 x1872) (x2017 x1872)))
(define-fun x8257 ((x1872 x112)) Int (ite x6275 (x2017 x1872) (ite x3950 (x658 x1872) (x2017 x1872))))
(define-fun x686 ((x1872 Int)) Int (ite (= 0 x1872) x2207 (x281 x1872)))
(define-fun x7806 ((x1872 Int)) Int (ite (= 0 x1872) x8295 (x281 x1872)))
(define-fun x7884 ((x1872 Int)) Int (ite (= x1872 0) x8388 (x281 x1872)))
(define-fun x5161 ((x1872 x112)) Int (ite (= x233 x1872) x865 (x4409 x1872)))
(define-fun x4553 ((x1872 x112)) Int (ite (= x68 x1872) x5301 (x8212 x1872)))
(define-fun x2341 ((x1872 x112)) Int (ite (= x1872 x7134) 0 (x6968 x1872)))
(define-fun x5995 ((x1872 x112)) Int (ite x2769 (x6968 x1872) (x2341 x1872)))
(define-fun x6351 ((x1872 x112)) Int (ite (= x6361 x1872) x7886 (x5995 x1872)))
(define-fun x7766 ((x1872 x112)) Int (ite (= x1872 x6959) x7886 (x5995 x1872)))
(define-fun x5105 ((x1872 x112)) Int (ite (= x1872 x7079) x7886 (x5995 x1872)))
(define-fun x965 ((x1872 x112)) Int (ite (= x9212 x1872) x7886 (x5995 x1872)))
(define-fun x2822 ((x1872 x112)) Int (ite x5489 (x6351 x1872) (ite x6037 (x7766 x1872) (ite x595 (x5105 x1872) (x965 x1872)))))
(define-fun x1059 ((x1872 x112)) Int (ite x8887 (x6968 x1872) (ite x6006 (x5995 x1872) (x2822 x1872))))
(define-fun x7691 ((x1872 x112)) Int (ite (= x1872 x7823) 0 (x1059 x1872)))
(define-fun x392 ((x1872 x112)) Int (ite x9092 (x1059 x1872) (x7691 x1872)))
(define-fun x6609 ((x1872 x112)) Int (ite (= x1872 x4895) x1191 (x392 x1872)))
(define-fun x8290 ((x1872 x112)) Int (ite (= x1872 x7088) x1191 (x392 x1872)))
(define-fun x2553 ((x1872 x112)) Int (ite (= x1872 x3965) x1191 (x392 x1872)))
(define-fun x2858 ((x1872 x112)) Int (ite (= x5449 x1872) x1191 (x392 x1872)))
(define-fun x9058 ((x1872 x112)) Int (ite x2765 (x6609 x1872) (ite x4414 (x8290 x1872) (ite x3550 (x2553 x1872) (x2858 x1872)))))
(define-fun x1309 ((x1872 x112)) Int (ite x789 (x1059 x1872) (ite x9185 (x392 x1872) (x9058 x1872))))
(define-fun x3578 ((x1872 x112)) Int (ite (= x8666 x1872) 0 (x3434 x1872)))
(define-fun x997 ((x1872 x112)) Int (ite x4635 (x3434 x1872) (x3578 x1872)))
(define-fun x5037 ((x1872 x112)) Int (ite (= x1872 x3184) x3231 (x997 x1872)))
(define-fun x7942 ((x1872 x112)) Int (ite (= x1872 x481) x3231 (x997 x1872)))
(define-fun x2389 ((x1872 x112)) Int (ite (= x3963 x1872) x3231 (x997 x1872)))
(define-fun x4740 ((x1872 x112)) Int (ite (= x1872 x3216) x3231 (x997 x1872)))
(define-fun x7780 ((x1872 x112)) Int (ite x1801 (x5037 x1872) (ite x6726 (x7942 x1872) (ite x5065 (x2389 x1872) (x4740 x1872)))))
(define-fun x202 ((x1872 x112)) Int (ite x2724 (x3434 x1872) (ite x448 (x997 x1872) (x7780 x1872))))
(define-fun x6057 ((x1872 x112)) Int (ite (= x1872 x683) 0 (x202 x1872)))
(define-fun x1951 ((x1872 x112)) Int (ite x8964 (x202 x1872) (x6057 x1872)))
(define-fun x5284 ((x1872 x112)) Int (ite (= x1872 x2484) x7074 (x1951 x1872)))
(define-fun x1245 ((x1872 x112)) Int (ite (= x756 x1872) x7074 (x1951 x1872)))
(define-fun x7385 ((x1872 x112)) Int (ite (= x3606 x1872) x7074 (x1951 x1872)))
(define-fun x2506 ((x1872 x112)) Int (ite (= x1872 x5432) x7074 (x1951 x1872)))
(define-fun x5270 ((x1872 x112)) Int (ite x7413 (x5284 x1872) (ite x2833 (x1245 x1872) (ite x7173 (x7385 x1872) (x2506 x1872)))))
(define-fun x4584 ((x1872 x112)) Int (ite x6882 (x202 x1872) (ite x8726 (x1951 x1872) (x5270 x1872))))
(define-fun x8940 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x2401 x1872)))
(define-fun x2939 ((x1872 Int)) Int (ite (= 128 x1872) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x8660 x1872)))
(define-fun x8677 ((x1872 Int)) Int (ite (= 132 x1872) x7036 (x2939 x1872)))
(define-fun x5926 ((x1872 Int)) Int (ite (= 164 x1872) x5148 (x8677 x1872)))
(define-fun x2933 ((x1872 Int)) Int (ite (= 196 x1872) x2064 (x5926 x1872)))
(define-fun x8993 ((x1872 x112)) Int (ite x726 (x4358 x1872) (ite x6597 (x1399 x1872) (ite x4836 (x18 x1872) (ite x2888 (x18 x1872) (ite x668 (x18 x1872) (ite x6625 (x18 x1872) (ite x3653 (x1399 x1872) (ite x5229 (x4358 x1872) (x18 x1872))))))))))
(define-fun x6570 ((x1872 x112)) Int (ite x8204 (ite x1523 (x8993 x1872) (x4358 x1872)) (x18 x1872)))
(define-fun x4825 ((x1872 x112)) Int (ite (= x1097 x1872) x8397 (x6570 x1872)))
(define-fun x2095 ((x1872 x112)) Int (ite (= x1872 x464) x7338 (x4825 x1872)))
(define-fun x6079 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x5951 x1872)))
(define-fun x6895 ((x1872 x112)) Int (ite x6127 (x769 x1872) (ite x1001 (x769 x1872) (ite x6709 (x769 x1872) (ite x7704 (x769 x1872) (ite x4747 (x6827 x1872) (x769 x1872)))))))
(define-fun x6566 ((x1872 x112)) Int (ite x8204 (x769 x1872) (ite x2355 (ite x8729 (x6895 x1872) (x8974 x1872)) (x769 x1872))))
(define-fun x7038 ((x1872 x112)) Int (ite (= x1872 x663) x5647 (x6566 x1872)))
(define-fun x7737 ((x1872 x112)) Int (ite (= x5991 x1872) x1567 (x7038 x1872)))
(define-fun x5220 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x5951 x1872)))
(define-fun x7659 ((x1872 x112)) Int (ite x4677 (x7707 x1872) (ite x5031 (x7707 x1872) (ite x7214 (x7707 x1872) (ite x7191 (x7707 x1872) (ite x3604 (x7189 x1872) (x7707 x1872)))))))
(define-fun x3633 ((x1872 x112)) Int (ite x8204 (x7707 x1872) (ite x2355 (x7707 x1872) (ite x2618 (ite x7889 (x7659 x1872) (x4326 x1872)) (x7707 x1872)))))
(define-fun x2279 ((x1872 x112)) Int (ite (= x8610 x1872) x2681 (x3633 x1872)))
(define-fun x3788 ((x1872 x112)) Int (ite (= x5429 x1872) x2803 (x2279 x1872)))
(define-fun x6436 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x5951 x1872)))
(define-fun x6008 ((x1872 x112)) Int (ite x473 (x563 x1872) (ite x3432 (x563 x1872) (ite x4803 (x563 x1872) (ite x8859 (x563 x1872) (ite x6285 (x1232 x1872) (x563 x1872)))))))
(define-fun x108 ((x1872 x112)) Int (ite x8204 (x563 x1872) (ite x2355 (x563 x1872) (ite x2618 (x563 x1872) (ite x2288 (x6008 x1872) (x3088 x1872))))))
(define-fun x1717 ((x1872 x112)) Int (ite (= x3805 x1872) x8829 (x108 x1872)))
(define-fun x1469 ((x1872 x112)) Int (ite (= x8093 x1872) x4263 (x1717 x1872)))
(define-fun x8214 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x5951 x1872)))
(define-fun x4408 ((x1872 Int)) Int (ite (= 128 x1872) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3277 x1872)))
(define-fun x4266 ((x1872 Int)) Int (ite (= x1872 132) x7036 (x4408 x1872)))
(define-fun x2615 ((x1872 Int)) Int (ite (= x1872 164) x3605 (x4266 x1872)))
(define-fun x1457 ((x1872 Int)) Int (ite (= x1872 196) x3787 (x2615 x1872)))
(define-fun x7441 ((x1872 x112)) Int (ite (= x2968 x1872) x3180 (x6570 x1872)))
(define-fun x2664 ((x1872 x112)) Int (ite (= x1872 x511) x5742 (x7441 x1872)))
(define-fun x5333 ((x1872 Int)) Int (ite (= x1872 0) 1 (x7204 x1872)))
(define-fun x5474 ((x1872 x112)) Int (ite (= x5189 x1872) x436 (x6566 x1872)))
(define-fun x6927 ((x1872 x112)) Int (ite (= x8648 x1872) x4159 (x5474 x1872)))
(define-fun x523 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x7204 x1872)))
(define-fun x7184 ((x1872 x112)) Int (ite (= x3301 x1872) x3565 (x3633 x1872)))
(define-fun x1766 ((x1872 x112)) Int (ite (= x1872 x5894) x8536 (x7184 x1872)))
(define-fun x5380 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x7204 x1872)))
(define-fun x352 ((x1872 x112)) Int (ite (= x1872 x8335) x8251 (x108 x1872)))
(define-fun x4295 ((x1872 x112)) Int (ite (= x3385 x1872) x2762 (x352 x1872)))
(define-fun x2223 ((x1872 Int)) Int (ite (= x1872 0) 1 (x7204 x1872)))
(define-fun x2595 ((x1872 Int)) Int (ite (= x1872 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1737 x1872)))
(define-fun x386 ((x1872 Int)) Int (ite (= 132 x1872) x7036 (x2595 x1872)))
(define-fun x1699 ((x1872 Int)) Int (ite (= x1872 164) x1326 (x386 x1872)))
(define-fun x1799 ((x1872 Int)) Int (ite (= 196 x1872) x7047 (x1699 x1872)))
(define-fun x4712 ((x1872 x112)) Int (ite (= x666 x1872) x5966 (x6570 x1872)))
(define-fun x5316 ((x1872 x112)) Int (ite (= x602 x1872) x4417 (x4712 x1872)))
(define-fun x9161 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x6650 x1872)))
(define-fun x1538 ((x1872 x112)) Int (ite (= x9209 x1872) x3993 (x6566 x1872)))
(define-fun x4549 ((x1872 x112)) Int (ite (= x1872 x7462) x5502 (x1538 x1872)))
(define-fun x4333 ((x1872 Int)) Int (ite (= x1872 0) 1 (x6650 x1872)))
(define-fun x6929 ((x1872 x112)) Int (ite (= x7849 x1872) x2691 (x3633 x1872)))
(define-fun x6143 ((x1872 x112)) Int (ite (= x1872 x2794) x951 (x6929 x1872)))
(define-fun x2280 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x6650 x1872)))
(define-fun x8438 ((x1872 x112)) Int (ite (= x1872 x8196) x5762 (x108 x1872)))
(define-fun x4140 ((x1872 x112)) Int (ite (= x1872 x7090) x6138 (x8438 x1872)))
(define-fun x1718 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x6650 x1872)))
(define-fun x949 ((x1872 Int)) Int (ite (= x1071 x1872) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x2282 x1872)))
(define-fun x1352 ((x1872 Int)) Int (ite (= x1872 x6586) x560 (x949 x1872)))
(define-fun x7866 ((x1872 Int)) Int (ite (= x4325 x1872) x3881 (x1352 x1872)))
(define-fun x5674 ((x1872 Int)) Int (ite (= x5576 x1872) x1166 (x7866 x1872)))
(define-fun x1860 ((x1872 Int)) Int (ite (and (< x1872 (+ x1071 0)) (>= x1872 x1071)) (x8567 (+ (- x1872 x1071) 0)) (x5674 x1872)))
(define-fun x3270 ((x1872 Int)) Int (ite x2328 (x2282 x1872) (x1860 x1872)))
(define-fun x6187 ((x1872 Int)) Int (ite (= x1872 x1071) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x3270 x1872)))
(define-fun x1226 ((x1872 Int)) Int (ite (= x76 x1872) x7036 (x6187 x1872)))
(define-fun x5525 ((x1872 Int)) Int (ite (= x1872 x1071) x6098 (x1226 x1872)))
(define-fun x5213 ((x1872 Int)) Int (ite (= x1872 x1071) x5936 (x1226 x1872)))
(define-fun x6898 ((x1872 Int)) Int (ite (= x1872 x1071) x385 (x1226 x1872)))
(define-fun x5170 ((x1872 Int)) Int (ite x3152 (ite x7722 (x1226 x1872) (x5525 x1872)) (ite x7934 (ite x6382 (x1226 x1872) (x5213 x1872)) (ite x7506 (x1226 x1872) (x6898 x1872)))))
(define-fun x5616 ((x1872 Int)) Int (ite (= x1872 x8590) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x5170 x1872)))
(define-fun x6326 ((x1872 Int)) Int (ite (= x5861 x1872) x3881 (x5616 x1872)))
(define-fun x609 ((x1872 Int)) Int (ite (= x744 x1872) x3990 (x6326 x1872)))
(define-fun x7611 ((x1872 x112)) Int (ite (= x1872 x1158) x2320 (x4936 x1872)))
(define-fun x5081 ((x1872 Int)) Int (ite (= x1872 0) 1 (x1063 x1872)))
(define-fun x5269 ((x1872 Int)) Int (ite (= x1872 0) 1 (x609 x1872)))
(define-fun x3089 ((x1872 Int)) Int (ite (= x8590 x1872) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x5170 x1872)))
(define-fun x1477 ((x1872 Int)) Int (ite (= x1872 x785) x3990 (x3089 x1872)))
(define-fun x218 ((x1872 Int)) Int (ite (and (> (+ x8590 0) x1872) (<= x8590 x1872)) (x357 (+ 0 (- x1872 x8590))) (x1477 x1872)))
(define-fun x9010 ((x1872 Int)) Int (ite (= x8590 x1872) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x218 x1872)))
(define-fun x1356 ((x1872 x112)) Int (ite (= (x2264 x7036) x1872) x5332 (x3516 x1872)))
(define-fun x1656 ((x1872 x112)) Int (ite (= (x2264 x3881) x1872) x4250 (x1356 x1872)))
(define-fun x109 ((x1872 Int)) Int (ite (= 128 x1872) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x8487 x1872)))
(define-fun x9154 ((x1872 Int)) Int (ite (= x1872 132) x7036 (x109 x1872)))
(define-fun x851 ((x1872 Int)) Int (ite (= x1872 164) x5148 (x9154 x1872)))
(define-fun x278 ((x1872 Int)) Int (ite (= x1872 196) x1712 (x851 x1872)))
(define-fun x5205 ((x1872 x112)) Int (ite (= x1872 x7363) x3736 (x6570 x1872)))
(define-fun x651 ((x1872 Int)) Int (ite (= x1872 0) 1 (x1739 x1872)))
(define-fun x4887 ((x1872 x112)) Int (ite (= x1872 x7049) x4182 (x6566 x1872)))
(define-fun x9181 ((x1872 Int)) Int (ite (= x1872 0) 1 (x1739 x1872)))
(define-fun x4258 ((x1872 x112)) Int (ite (= x1872 x2864) x4645 (x3633 x1872)))
(define-fun x1621 ((x1872 Int)) Int (ite (= x1872 0) 1 (x1739 x1872)))
(define-fun x7055 ((x1872 x112)) Int (ite (= x7092 x1872) x7454 (x108 x1872)))
(define-fun x1917 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x1739 x1872)))
(define-fun x4837 ((x1872 Int)) Int (ite (= x1872 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4726 x1872)))
(define-fun x3751 ((x1872 Int)) Int (ite (= x1872 132) x7036 (x4837 x1872)))
(define-fun x9233 ((x1872 Int)) Int (ite (= 164 x1872) x3605 (x3751 x1872)))
(define-fun x1328 ((x1872 Int)) Int (ite (= 196 x1872) x1377 (x9233 x1872)))
(define-fun x2375 ((x1872 x112)) Int (ite (= x809 x1872) x7125 (x6570 x1872)))
(define-fun x5867 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x4268 x1872)))
(define-fun x7168 ((x1872 x112)) Int (ite (= x1872 x1027) x8652 (x6566 x1872)))
(define-fun x4651 ((x1872 Int)) Int (ite (= x1872 0) 1 (x4268 x1872)))
(define-fun x8083 ((x1872 x112)) Int (ite (= x1872 x3222) x9140 (x3633 x1872)))
(define-fun x5681 ((x1872 Int)) Int (ite (= x1872 0) 1 (x4268 x1872)))
(define-fun x131 ((x1872 x112)) Int (ite (= x1872 x3999) x3962 (x108 x1872)))
(define-fun x3802 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x4268 x1872)))
(define-fun x3220 ((x1872 Int)) Int (ite (= x1872 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x7296 x1872)))
(define-fun x3559 ((x1872 Int)) Int (ite (= x1872 132) x7036 (x3220 x1872)))
(define-fun x6230 ((x1872 Int)) Int (ite (= x1872 164) x1326 (x3559 x1872)))
(define-fun x3353 ((x1872 Int)) Int (ite (= 196 x1872) x5544 (x6230 x1872)))
(define-fun x1120 ((x1872 x112)) Int (ite (= x5254 x1872) x23 (x6570 x1872)))
(define-fun x981 ((x1872 Int)) Int (ite (= x1872 0) 1 (x887 x1872)))
(define-fun x4178 ((x1872 x112)) Int (ite (= x1872 x5790) x430 (x6566 x1872)))
(define-fun x1611 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x887 x1872)))
(define-fun x6397 ((x1872 x112)) Int (ite (= x248 x1872) x1338 (x3633 x1872)))
(define-fun x3017 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x887 x1872)))
(define-fun x1505 ((x1872 x112)) Int (ite (= x1660 x1872) x7537 (x108 x1872)))
(define-fun x1046 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x887 x1872)))
(define-fun x4931 ((x1872 x112)) Int (ite x7970 (x6566 x1872) (ite x7559 (x6566 x1872) (ite x9098 (x6566 x1872) (ite x5156 (x6566 x1872) (ite x3744 (x7038 x1872) (x6566 x1872)))))))
(define-fun x4037 ((x1872 x112)) Int (ite x572 (x6566 x1872) (ite x3207 (ite x2173 (x4931 x1872) (x7737 x1872)) (x6566 x1872))))
(define-fun x1208 ((x1872 x112)) Int (ite x2967 (x4037 x1872) (ite x1135 (x6566 x1872) (ite x5312 (x6566 x1872) (ite x4203 (x4037 x1872) (x6566 x1872))))))
(define-fun x565 ((x1872 x112)) Int (ite x1393 (x1208 x1872) (x4037 x1872)))
(define-fun x1040 ((x1872 x112)) Int (ite x8094 (x6566 x1872) (ite x5348 (x6566 x1872) (ite x1989 (x6566 x1872) (ite x5944 (x6566 x1872) (ite x6749 (x5474 x1872) (x6566 x1872)))))))
(define-fun x8571 ((x1872 x112)) Int (ite x1370 (x6566 x1872) (ite x2725 (ite x7226 (x1040 x1872) (x6927 x1872)) (x6566 x1872))))
(define-fun x1590 ((x1872 x112)) Int (ite x7868 (x8571 x1872) (ite x6438 (x6566 x1872) (ite x1380 (x6566 x1872) (ite x3212 (x8571 x1872) (x6566 x1872))))))
(define-fun x7489 ((x1872 x112)) Int (ite x768 (x1590 x1872) (x8571 x1872)))
(define-fun x4028 ((x1872 x112)) Int (ite x5582 (x6566 x1872) (ite x7759 (x6566 x1872) (ite x6013 (x6566 x1872) (ite x3401 (x6566 x1872) (ite x5383 (x1538 x1872) (x6566 x1872)))))))
(define-fun x6494 ((x1872 x112)) Int (ite x5922 (x6566 x1872) (ite x2853 (ite x4123 (x4028 x1872) (x4549 x1872)) (x6566 x1872))))
(define-fun x8120 ((x1872 x112)) Int (ite x2832 (x6494 x1872) (ite x4522 (x6566 x1872) (ite x4256 (x6566 x1872) (ite x4822 (x6494 x1872) (x6566 x1872))))))
(define-fun x5095 ((x1872 x112)) Int (ite x4004 (x8120 x1872) (x6494 x1872)))
(define-fun x1374 ((x1872 x112)) Int (ite x5167 (x565 x1872) (ite x4755 (x7489 x1872) (x5095 x1872))))
(define-fun x6635 ((x1872 x112)) Int (ite x8052 (x1374 x1872) (ite x3505 (x6566 x1872) (x1374 x1872))))
(define-fun x4413 ((x1872 x112)) Int (ite x2613 (x3633 x1872) (ite x151 (x3633 x1872) (ite x2865 (x3633 x1872) (ite x8911 (x3633 x1872) (ite x9022 (x2279 x1872) (x3633 x1872)))))))
(define-fun x2760 ((x1872 x112)) Int (ite x572 (x3633 x1872) (ite x3207 (x3633 x1872) (ite x166 (ite x3861 (x4413 x1872) (x3788 x1872)) (x3633 x1872)))))
(define-fun x2111 ((x1872 x112)) Int (ite x2967 (x2760 x1872) (ite x1135 (x3633 x1872) (ite x5312 (x3633 x1872) (ite x4203 (x2760 x1872) (x3633 x1872))))))
(define-fun x8637 ((x1872 x112)) Int (ite x1393 (x2111 x1872) (x2760 x1872)))
(define-fun x7239 ((x1872 x112)) Int (ite x231 (x3633 x1872) (ite x5183 (x3633 x1872) (ite x6210 (x3633 x1872) (ite x1354 (x3633 x1872) (ite x7584 (x7184 x1872) (x3633 x1872)))))))
(define-fun x194 ((x1872 x112)) Int (ite x1370 (x3633 x1872) (ite x2725 (x3633 x1872) (ite x8822 (ite x5650 (x7239 x1872) (x1766 x1872)) (x3633 x1872)))))
(define-fun x6183 ((x1872 x112)) Int (ite x7868 (x194 x1872) (ite x6438 (x3633 x1872) (ite x1380 (x3633 x1872) (ite x3212 (x194 x1872) (x3633 x1872))))))
(define-fun x198 ((x1872 x112)) Int (ite x768 (x6183 x1872) (x194 x1872)))
(define-fun x870 ((x1872 x112)) Int (ite x9075 (x3633 x1872) (ite x82 (x3633 x1872) (ite x1845 (x3633 x1872) (ite x3157 (x3633 x1872) (ite x7521 (x6929 x1872) (x3633 x1872)))))))
(define-fun x5179 ((x1872 x112)) Int (ite x5922 (x3633 x1872) (ite x2853 (x3633 x1872) (ite x4972 (ite x3569 (x870 x1872) (x6143 x1872)) (x3633 x1872)))))
(define-fun x7542 ((x1872 x112)) Int (ite x2832 (x5179 x1872) (ite x4522 (x3633 x1872) (ite x4256 (x3633 x1872) (ite x4822 (x5179 x1872) (x3633 x1872))))))
(define-fun x8126 ((x1872 x112)) Int (ite x4004 (x7542 x1872) (x5179 x1872)))
(define-fun x5907 ((x1872 x112)) Int (ite x5167 (x8637 x1872) (ite x4755 (x198 x1872) (x8126 x1872))))
(define-fun x1121 ((x1872 x112)) Int (ite x8052 (x5907 x1872) (ite x3505 (x3633 x1872) (x5907 x1872))))
(define-fun x5398 ((x1872 x112)) Int (ite x1379 (x108 x1872) (ite x4638 (x108 x1872) (ite x41 (x108 x1872) (ite x6156 (x108 x1872) (ite x1131 (x1717 x1872) (x108 x1872)))))))
(define-fun x8258 ((x1872 x112)) Int (ite x572 (x108 x1872) (ite x3207 (x108 x1872) (ite x166 (x108 x1872) (ite x334 (x5398 x1872) (x1469 x1872))))))
(define-fun x6078 ((x1872 x112)) Int (ite x2967 (x8258 x1872) (ite x1135 (x108 x1872) (ite x5312 (x108 x1872) (ite x4203 (x8258 x1872) (x108 x1872))))))
(define-fun x6813 ((x1872 x112)) Int (ite x1393 (x6078 x1872) (x8258 x1872)))
(define-fun x1817 ((x1872 x112)) Int (ite x4663 (x108 x1872) (ite x8549 (x108 x1872) (ite x3808 (x108 x1872) (ite x4786 (x108 x1872) (ite x677 (x352 x1872) (x108 x1872)))))))
(define-fun x4362 ((x1872 x112)) Int (ite x1370 (x108 x1872) (ite x2725 (x108 x1872) (ite x8822 (x108 x1872) (ite x3421 (x1817 x1872) (x4295 x1872))))))
(define-fun x7981 ((x1872 x112)) Int (ite x7868 (x4362 x1872) (ite x6438 (x108 x1872) (ite x1380 (x108 x1872) (ite x3212 (x4362 x1872) (x108 x1872))))))
(define-fun x1106 ((x1872 x112)) Int (ite x768 (x7981 x1872) (x4362 x1872)))
(define-fun x101 ((x1872 x112)) Int (ite x6320 (x108 x1872) (ite x6178 (x108 x1872) (ite x3715 (x108 x1872) (ite x4824 (x108 x1872) (ite x1504 (x8438 x1872) (x108 x1872)))))))
(define-fun x4090 ((x1872 x112)) Int (ite x5922 (x108 x1872) (ite x2853 (x108 x1872) (ite x4972 (x108 x1872) (ite x5067 (x101 x1872) (x4140 x1872))))))
(define-fun x3720 ((x1872 x112)) Int (ite x2832 (x4090 x1872) (ite x4522 (x108 x1872) (ite x4256 (x108 x1872) (ite x4822 (x4090 x1872) (x108 x1872))))))
(define-fun x2781 ((x1872 x112)) Int (ite x4004 (x3720 x1872) (x4090 x1872)))
(define-fun x4791 ((x1872 x112)) Int (ite x5167 (x6813 x1872) (ite x4755 (x1106 x1872) (x2781 x1872))))
(define-fun x1708 ((x1872 x112)) Int (ite x8052 (x4791 x1872) (ite x3505 (x108 x1872) (x4791 x1872))))
(define-fun x8599 ((x1872 Int)) Int (ite (= 0 x1872) 0 (x2963 x1872)))
(define-fun x4357 ((x1872 Int)) Int (ite x1393 (x2963 x1872) (x8599 x1872)))
(define-fun x431 ((x1872 Int)) Int (ite (= 0 x1872) 0 (x2963 x1872)))
(define-fun x4034 ((x1872 Int)) Int (ite x768 (x2963 x1872) (x431 x1872)))
(define-fun x5389 ((x1872 Int)) Int (ite (= x1872 0) 0 (x2963 x1872)))
(define-fun x2462 ((x1872 Int)) Int (ite x4004 (x2963 x1872) (x5389 x1872)))
(define-fun x7921 ((x1872 Int)) Int (ite x5167 (x4357 x1872) (ite x4755 (x4034 x1872) (x2462 x1872))))
(define-fun x1940 ((x1872 Int)) Int (ite x8052 (x7921 x1872) (ite x3505 (x7518 x1872) (x7921 x1872))))
(define-fun x8624 ((x1872 x112)) Int (ite x5548 (x2095 x1872) (ite x7664 (x4825 x1872) (ite x6019 (x6570 x1872) (ite x8495 (x6570 x1872) (ite x1837 (x6570 x1872) (ite x3855 (x6570 x1872) (ite x3943 (x4825 x1872) (ite x8930 (x2095 x1872) (x6570 x1872))))))))))
(define-fun x796 ((x1872 x112)) Int (ite x572 (ite x8989 (x8624 x1872) (x2095 x1872)) (x6570 x1872)))
(define-fun x5494 ((x1872 x112)) Int (ite x2967 (x796 x1872) (ite x1135 (x6570 x1872) (ite x5312 (x6570 x1872) (ite x4203 (x796 x1872) (x6570 x1872))))))
(define-fun x7844 ((x1872 x112)) Int (ite x1393 (x5494 x1872) (x796 x1872)))
(define-fun x297 ((x1872 x112)) Int (ite x8790 (x2664 x1872) (ite x6686 (x7441 x1872) (ite x4165 (x6570 x1872) (ite x5632 (x6570 x1872) (ite x6843 (x6570 x1872) (ite x4167 (x6570 x1872) (ite x8544 (x7441 x1872) (ite x5045 (x2664 x1872) (x6570 x1872))))))))))
(define-fun x7500 ((x1872 x112)) Int (ite x1370 (ite x8451 (x297 x1872) (x2664 x1872)) (x6570 x1872)))
(define-fun x93 ((x1872 x112)) Int (ite x7868 (x7500 x1872) (ite x6438 (x6570 x1872) (ite x1380 (x6570 x1872) (ite x3212 (x7500 x1872) (x6570 x1872))))))
(define-fun x2384 ((x1872 x112)) Int (ite x768 (x93 x1872) (x7500 x1872)))
(define-fun x3923 ((x1872 x112)) Int (ite x955 (x5316 x1872) (ite x5633 (x4712 x1872) (ite x2162 (x6570 x1872) (ite x601 (x6570 x1872) (ite x4242 (x6570 x1872) (ite x4880 (x6570 x1872) (ite x3045 (x4712 x1872) (ite x3191 (x5316 x1872) (x6570 x1872))))))))))
(define-fun x7132 ((x1872 x112)) Int (ite x5922 (ite x5510 (x3923 x1872) (x5316 x1872)) (x6570 x1872)))
(define-fun x3429 ((x1872 x112)) Int (ite x2832 (x7132 x1872) (ite x4522 (x6570 x1872) (ite x4256 (x6570 x1872) (ite x4822 (x7132 x1872) (x6570 x1872))))))
(define-fun x2687 ((x1872 x112)) Int (ite x4004 (x3429 x1872) (x7132 x1872)))
(define-fun x208 ((x1872 x112)) Int (ite x5167 (x7844 x1872) (ite x4755 (x2384 x1872) (x2687 x1872))))
(define-fun x160 ((x1872 x112)) Int (ite x8052 (x208 x1872) (ite x3505 (x6570 x1872) (x208 x1872))))
(define-fun x7898 ((x1872 Int)) Int (ite (= x1872 0) 0 (x2517 x1872)))
(define-fun x8606 ((x1872 Int)) Int (ite x717 (x2517 x1872) (x7898 x1872)))
(define-fun x1054 ((x1872 Int)) Int (ite (= x1872 0) 0 (x2517 x1872)))
(define-fun x7629 ((x1872 Int)) Int (ite x6960 (x2517 x1872) (x1054 x1872)))
(define-fun x1683 ((x1872 Int)) Int (ite (= x1872 0) 0 (x2517 x1872)))
(define-fun x1364 ((x1872 Int)) Int (ite x828 (x2517 x1872) (x1683 x1872)))
(define-fun x4435 ((x1872 Int)) Int (ite x6447 (x8606 x1872) (ite x551 (x7629 x1872) (x1364 x1872))))
(define-fun x500 ((x1872 Int)) Int (ite x9115 (x4435 x1872) (ite x2343 (x7256 x1872) (x4435 x1872))))
(define-fun x3026 ((x1872 Int)) Int (ite x1330 (x609 x1872) (x5269 x1872)))
(define-fun x5477 ((x1872 Int)) Int (ite (= x8590 x1872) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x3026 x1872)))
(define-fun x5154 ((x1872 Int)) Int (ite (= x1872 x1432) x3990 (x5477 x1872)))
(define-fun x7858 ((x1872 Int)) Int (ite (= x8590 x1872) 0 (x5154 x1872)))
(define-fun x2806 ((x1872 Int)) Int (ite (= x1872 x8590) 0 (x5154 x1872)))
(define-fun x3533 ((x1872 Int)) Int (ite (= x1872 x8590) 0 (x5154 x1872)))
(define-fun x8001 ((x1872 Int)) Int (ite x6415 (ite x1497 (x5154 x1872) (x7858 x1872)) (ite x9131 (ite x7303 (x5154 x1872) (x2806 x1872)) (ite x7069 (x5154 x1872) (x3533 x1872)))))
(define-fun x6752 ((x1872 x112)) Int (ite (= x1872 x241) x1735 (x3633 x1872)))
(define-fun x185 ((x1872 x112)) Int (ite x7902 (x3633 x1872) (ite x2038 (x3633 x1872) (ite x7547 (x3633 x1872) (ite x2704 (x3633 x1872) (ite x5726 (x6752 x1872) (x3633 x1872)))))))
(define-fun x5387 ((x1872 x112)) Int (ite (= x1872 x111) x4724 (x6752 x1872)))
(define-fun x1248 ((x1872 x112)) Int (ite x2442 (x3633 x1872) (ite x5601 (x3633 x1872) (ite x869 (ite x1119 (x185 x1872) (x5387 x1872)) (x3633 x1872)))))
(define-fun x4445 ((x1872 x112)) Int (ite x2318 (x1248 x1872) (ite x5178 (x3633 x1872) (ite x5659 (x3633 x1872) (ite x8996 (x3633 x1872) (ite x3205 (x1248 x1872) (x3633 x1872)))))))
(define-fun x2642 ((x1872 x112)) Int (ite x2363 (x4445 x1872) (x1248 x1872)))
(define-fun x8469 ((x1872 x112)) Int (ite (= x9026 x1872) x5970 (x3633 x1872)))
(define-fun x2836 ((x1872 x112)) Int (ite x3257 (x3633 x1872) (ite x2693 (x3633 x1872) (ite x8032 (x3633 x1872) (ite x4760 (x3633 x1872) (ite x3500 (x8469 x1872) (x3633 x1872)))))))
(define-fun x7693 ((x1872 x112)) Int (ite (= x2159 x1872) x3941 (x8469 x1872)))
(define-fun x6770 ((x1872 x112)) Int (ite x8357 (x3633 x1872) (ite x6739 (x3633 x1872) (ite x7612 (ite x2041 (x2836 x1872) (x7693 x1872)) (x3633 x1872)))))
(define-fun x94 ((x1872 x112)) Int (ite x6004 (x6770 x1872) (ite x1037 (x3633 x1872) (ite x8558 (x3633 x1872) (ite x2009 (x3633 x1872) (ite x8124 (x6770 x1872) (x3633 x1872)))))))
(define-fun x3503 ((x1872 x112)) Int (ite x8444 (x94 x1872) (x6770 x1872)))
(define-fun x437 ((x1872 x112)) Int (ite (= x1212 x1872) x8109 (x3633 x1872)))
(define-fun x3740 ((x1872 x112)) Int (ite x4434 (x3633 x1872) (ite x7743 (x3633 x1872) (ite x835 (x3633 x1872) (ite x4846 (x3633 x1872) (ite x6924 (x437 x1872) (x3633 x1872)))))))
(define-fun x7706 ((x1872 x112)) Int (ite (= x6676 x1872) x7751 (x437 x1872)))
(define-fun x1319 ((x1872 x112)) Int (ite x2567 (x3633 x1872) (ite x7721 (x3633 x1872) (ite x3573 (ite x5756 (x3740 x1872) (x7706 x1872)) (x3633 x1872)))))
(define-fun x6435 ((x1872 x112)) Int (ite x1237 (x1319 x1872) (ite x5395 (x3633 x1872) (ite x1597 (x3633 x1872) (ite x8749 (x3633 x1872) (ite x7729 (x1319 x1872) (x3633 x1872)))))))
(define-fun x1382 ((x1872 x112)) Int (ite x9030 (x6435 x1872) (x1319 x1872)))
(define-fun x1190 ((x1872 x112)) Int (ite x1394 (x2642 x1872) (ite x4926 (x3503 x1872) (x1382 x1872))))
(define-fun x5971 ((x1872 x112)) Int (ite x2593 (x3633 x1872) (ite x402 (x1190 x1872) (x1121 x1872))))
(define-fun x8960 ((x1872 x112)) Int (ite (= x5521 x1872) x3445 (x108 x1872)))
(define-fun x5807 ((x1872 x112)) Int (ite x6486 (x108 x1872) (ite x7041 (x108 x1872) (ite x157 (x108 x1872) (ite x3435 (x108 x1872) (ite x1827 (x8960 x1872) (x108 x1872)))))))
(define-fun x479 ((x1872 x112)) Int (ite (= x3155 x1872) x545 (x8960 x1872)))
(define-fun x8417 ((x1872 x112)) Int (ite x2442 (x108 x1872) (ite x5601 (x108 x1872) (ite x869 (x108 x1872) (ite x8167 (x5807 x1872) (x479 x1872))))))
(define-fun x1997 ((x1872 x112)) Int (ite x2318 (x8417 x1872) (ite x5178 (x108 x1872) (ite x5659 (x108 x1872) (ite x8996 (x108 x1872) (ite x3205 (x8417 x1872) (x108 x1872)))))))
(define-fun x1183 ((x1872 x112)) Int (ite x2363 (x1997 x1872) (x8417 x1872)))
(define-fun x132 ((x1872 x112)) Int (ite (= x6607 x1872) x1949 (x108 x1872)))
(define-fun x9001 ((x1872 x112)) Int (ite x6287 (x108 x1872) (ite x8442 (x108 x1872) (ite x2030 (x108 x1872) (ite x6602 (x108 x1872) (ite x3544 (x132 x1872) (x108 x1872)))))))
(define-fun x8338 ((x1872 x112)) Int (ite (= x8184 x1872) x889 (x132 x1872)))
(define-fun x6375 ((x1872 x112)) Int (ite x8357 (x108 x1872) (ite x6739 (x108 x1872) (ite x7612 (x108 x1872) (ite x6283 (x9001 x1872) (x8338 x1872))))))
(define-fun x2851 ((x1872 x112)) Int (ite x6004 (x6375 x1872) (ite x1037 (x108 x1872) (ite x8558 (x108 x1872) (ite x2009 (x108 x1872) (ite x8124 (x6375 x1872) (x108 x1872)))))))
(define-fun x8168 ((x1872 x112)) Int (ite x8444 (x2851 x1872) (x6375 x1872)))
(define-fun x4627 ((x1872 x112)) Int (ite (= x6245 x1872) x7326 (x108 x1872)))
(define-fun x1601 ((x1872 x112)) Int (ite x4124 (x108 x1872) (ite x7262 (x108 x1872) (ite x2946 (x108 x1872) (ite x4767 (x108 x1872) (ite x1449 (x4627 x1872) (x108 x1872)))))))
(define-fun x4555 ((x1872 x112)) Int (ite (= x1872 x1558) x3758 (x4627 x1872)))
(define-fun x4694 ((x1872 x112)) Int (ite x2567 (x108 x1872) (ite x7721 (x108 x1872) (ite x3573 (x108 x1872) (ite x3903 (x1601 x1872) (x4555 x1872))))))
(define-fun x7399 ((x1872 x112)) Int (ite x1237 (x4694 x1872) (ite x5395 (x108 x1872) (ite x1597 (x108 x1872) (ite x8749 (x108 x1872) (ite x7729 (x4694 x1872) (x108 x1872)))))))
(define-fun x287 ((x1872 x112)) Int (ite x9030 (x7399 x1872) (x4694 x1872)))
(define-fun x6231 ((x1872 x112)) Int (ite x1394 (x1183 x1872) (ite x4926 (x8168 x1872) (x287 x1872))))
(define-fun x1604 ((x1872 x112)) Int (ite x2593 (x108 x1872) (ite x402 (x6231 x1872) (x1708 x1872))))
(define-fun x2315 ((x1872 x112)) Int (ite (= x2780 x1872) x7017 (x6570 x1872)))
(define-fun x4206 ((x1872 x112)) Int (ite (= x1872 x7407) x5056 (x2315 x1872)))
(define-fun x1437 ((x1872 x112)) Int (ite x3504 (x4206 x1872) (ite x9157 (x2315 x1872) (ite x6512 (x6570 x1872) (ite x4166 (x6570 x1872) (ite x2913 (x6570 x1872) (ite x3886 (x6570 x1872) (ite x1526 (x2315 x1872) (ite x1422 (x4206 x1872) (x6570 x1872))))))))))
(define-fun x179 ((x1872 x112)) Int (ite x2442 (ite x7244 (x1437 x1872) (x4206 x1872)) (x6570 x1872)))
(define-fun x4608 ((x1872 x112)) Int (ite x2318 (x179 x1872) (ite x5178 (x6570 x1872) (ite x5659 (x6570 x1872) (ite x8996 (x6570 x1872) (ite x3205 (x179 x1872) (x6570 x1872)))))))
(define-fun x6455 ((x1872 x112)) Int (ite x2363 (x4608 x1872) (x179 x1872)))
(define-fun x3512 ((x1872 x112)) Int (ite (= x1872 x2790) x2897 (x6570 x1872)))
(define-fun x8012 ((x1872 x112)) Int (ite (= x5882 x1872) x1263 (x3512 x1872)))
(define-fun x3097 ((x1872 x112)) Int (ite x6139 (x8012 x1872) (ite x8721 (x3512 x1872) (ite x7105 (x6570 x1872) (ite x6109 (x6570 x1872) (ite x6067 (x6570 x1872) (ite x8466 (x6570 x1872) (ite x5404 (x3512 x1872) (ite x4482 (x8012 x1872) (x6570 x1872))))))))))
(define-fun x4083 ((x1872 x112)) Int (ite x8357 (ite x7845 (x3097 x1872) (x8012 x1872)) (x6570 x1872)))
(define-fun x2583 ((x1872 x112)) Int (ite x6004 (x4083 x1872) (ite x1037 (x6570 x1872) (ite x8558 (x6570 x1872) (ite x2009 (x6570 x1872) (ite x8124 (x4083 x1872) (x6570 x1872)))))))
(define-fun x3242 ((x1872 x112)) Int (ite x8444 (x2583 x1872) (x4083 x1872)))
(define-fun x6841 ((x1872 x112)) Int (ite (= x1872 x8449) x5435 (x6570 x1872)))
(define-fun x6690 ((x1872 x112)) Int (ite (= x3303 x1872) x6639 (x6841 x1872)))
(define-fun x328 ((x1872 x112)) Int (ite x2210 (x6690 x1872) (ite x1007 (x6841 x1872) (ite x277 (x6570 x1872) (ite x6273 (x6570 x1872) (ite x6846 (x6570 x1872) (ite x4262 (x6570 x1872) (ite x5440 (x6841 x1872) (ite x5524 (x6690 x1872) (x6570 x1872))))))))))
(define-fun x8776 ((x1872 x112)) Int (ite x2567 (ite x5870 (x328 x1872) (x6690 x1872)) (x6570 x1872)))
(define-fun x8096 ((x1872 x112)) Int (ite x1237 (x8776 x1872) (ite x5395 (x6570 x1872) (ite x1597 (x6570 x1872) (ite x8749 (x6570 x1872) (ite x7729 (x8776 x1872) (x6570 x1872)))))))
(define-fun x6567 ((x1872 x112)) Int (ite x9030 (x8096 x1872) (x8776 x1872)))
(define-fun x229 ((x1872 x112)) Int (ite x1394 (x6455 x1872) (ite x4926 (x3242 x1872) (x6567 x1872))))
(define-fun x1148 ((x1872 x112)) Int (ite x2593 (x6570 x1872) (ite x402 (x229 x1872) (x160 x1872))))
(define-fun x2667 ((x1872 x112)) Int (ite (= x1872 x8182) x4081 (x6566 x1872)))
(define-fun x814 ((x1872 x112)) Int (ite x7590 (x6566 x1872) (ite x6107 (x6566 x1872) (ite x1462 (x6566 x1872) (ite x6313 (x6566 x1872) (ite x4300 (x2667 x1872) (x6566 x1872)))))))
(define-fun x6137 ((x1872 x112)) Int (ite (= x7977 x1872) x5482 (x2667 x1872)))
(define-fun x4704 ((x1872 x112)) Int (ite x2442 (x6566 x1872) (ite x5601 (ite x302 (x814 x1872) (x6137 x1872)) (x6566 x1872))))
(define-fun x8111 ((x1872 x112)) Int (ite x2318 (x4704 x1872) (ite x5178 (x6566 x1872) (ite x5659 (x6566 x1872) (ite x8996 (x6566 x1872) (ite x3205 (x4704 x1872) (x6566 x1872)))))))
(define-fun x3296 ((x1872 x112)) Int (ite x2363 (x8111 x1872) (x4704 x1872)))
(define-fun x7605 ((x1872 x112)) Int (ite (= x1872 x9126) x7251 (x6566 x1872)))
(define-fun x7634 ((x1872 x112)) Int (ite x4393 (x6566 x1872) (ite x8261 (x6566 x1872) (ite x4261 (x6566 x1872) (ite x6855 (x6566 x1872) (ite x3158 (x7605 x1872) (x6566 x1872)))))))
(define-fun x4425 ((x1872 x112)) Int (ite (= x1872 x5998) x1093 (x7605 x1872)))
(define-fun x8617 ((x1872 x112)) Int (ite x8357 (x6566 x1872) (ite x6739 (ite x781 (x7634 x1872) (x4425 x1872)) (x6566 x1872))))
(define-fun x4120 ((x1872 x112)) Int (ite x6004 (x8617 x1872) (ite x1037 (x6566 x1872) (ite x8558 (x6566 x1872) (ite x2009 (x6566 x1872) (ite x8124 (x8617 x1872) (x6566 x1872)))))))
(define-fun x1576 ((x1872 x112)) Int (ite x8444 (x4120 x1872) (x8617 x1872)))
(define-fun x7255 ((x1872 x112)) Int (ite (= x5159 x1872) x3005 (x6566 x1872)))
(define-fun x6905 ((x1872 x112)) Int (ite x3174 (x6566 x1872) (ite x856 (x6566 x1872) (ite x6738 (x6566 x1872) (ite x4878 (x6566 x1872) (ite x3955 (x7255 x1872) (x6566 x1872)))))))
(define-fun x54 ((x1872 x112)) Int (ite (= x1872 x3324) x7327 (x7255 x1872)))
(define-fun x3071 ((x1872 x112)) Int (ite x2567 (x6566 x1872) (ite x7721 (ite x2922 (x6905 x1872) (x54 x1872)) (x6566 x1872))))
(define-fun x5124 ((x1872 x112)) Int (ite x1237 (x3071 x1872) (ite x5395 (x6566 x1872) (ite x1597 (x6566 x1872) (ite x8749 (x6566 x1872) (ite x7729 (x3071 x1872) (x6566 x1872)))))))
(define-fun x6793 ((x1872 x112)) Int (ite x9030 (x5124 x1872) (x3071 x1872)))
(define-fun x8100 ((x1872 x112)) Int (ite x1394 (x3296 x1872) (ite x4926 (x1576 x1872) (x6793 x1872))))
(define-fun x6021 ((x1872 x112)) Int (ite x2593 (x6566 x1872) (ite x402 (x8100 x1872) (x6635 x1872))))
(define-fun x3682 ((x1872 Int)) Int (ite (= x1872 0) 1 (x8832 x1872)))
(define-fun x7302 ((x1872 Int)) Int (ite (= x1872 0) 1 (x8832 x1872)))
(define-fun x846 ((x1872 Int)) Int (ite (= x1872 0) 1 (x8832 x1872)))
(define-fun x7195 ((x1872 x112)) Int (ite (= x4869 x1872) x8266 (x8835 x1872)))
(define-fun x4152 ((x1872 x112)) Int (ite x7384 (x8835 x1872) (x7195 x1872)))
(define-fun x3335 ((x1872 x112)) Int (ite (= x1872 x1154) 0 (x4152 x1872)))
(define-fun x3426 ((x1872 x112)) Int (ite x4324 (x8835 x1872) (x3335 x1872)))
(define-fun x3546 ((x1872 x112)) Int (ite (= x988 x1872) x2397 (x3426 x1872)))
(define-fun x816 ((x1872 x112)) Int (ite (= x3859 x1872) 0 (x3426 x1872)))
(define-fun x8137 ((x1872 x112)) Int (ite (= x8291 x1872) x4200 (x3426 x1872)))
(define-fun x3064 ((x1872 x112)) Int (ite (= x1872 x5501) x4396 (x8137 x1872)))
(define-fun x5125 ((x1872 x112)) Int (ite (= x1872 x5103) 0 (x3426 x1872)))
(define-fun x5629 ((x1872 x112)) Int (ite (= x3729 x1872) x4396 (x5125 x1872)))
(define-fun x8987 ((x1872 x112)) Int (ite x4989 (x3546 x1872) (ite x4231 (x816 x1872) (ite x2882 (x3064 x1872) (x5629 x1872)))))
(define-fun x4998 ((x1872 x112)) Int (ite x7019 (x8835 x1872) (ite x681 (x3426 x1872) (x8987 x1872))))
(define-fun x2539 ((x1872 x112)) Int (ite (= x1872 x5195) x2921 (x5766 x1872)))
(define-fun x660 ((x1872 x112)) Int (ite x3826 (x5766 x1872) (x2539 x1872)))
(define-fun x5075 ((x1872 x112)) Int (ite (= x9192 x1872) 0 (x660 x1872)))
(define-fun x6595 ((x1872 x112)) Int (ite x4324 (x5766 x1872) (x5075 x1872)))
(define-fun x7007 ((x1872 x112)) Int (ite (= x724 x1872) 0 (x6595 x1872)))
(define-fun x4441 ((x1872 x112)) Int (ite (= x2463 x1872) x4396 (x7007 x1872)))
(define-fun x6429 ((x1872 x112)) Int (ite (= x2505 x1872) 0 (x6595 x1872)))
(define-fun x7517 ((x1872 x112)) Int (ite (= x8103 x1872) x2083 (x6595 x1872)))
(define-fun x4111 ((x1872 x112)) Int (ite (= x1872 x583) x4396 (x7517 x1872)))
(define-fun x7853 ((x1872 x112)) Int (ite (= x520 x1872) x2083 (x6595 x1872)))
(define-fun x8685 ((x1872 x112)) Int (ite x4989 (x4441 x1872) (ite x4231 (x6429 x1872) (ite x2882 (x4111 x1872) (x7853 x1872)))))
(define-fun x697 ((x1872 x112)) Int (ite x7019 (x5766 x1872) (ite x681 (x6595 x1872) (x8685 x1872))))
(define-fun x5107 ((x1872 x112)) Int (ite (= x3742 x1872) 0 (x8732 x1872)))
(define-fun x1807 ((x1872 x112)) Int (ite x4324 (x8732 x1872) (x5107 x1872)))
(define-fun x4951 ((x1872 x112)) Int (ite (= x1872 x7648) x19 (x1807 x1872)))
(define-fun x9082 ((x1872 x112)) Int (ite (= x7576 x1872) x19 (x1807 x1872)))
(define-fun x6613 ((x1872 x112)) Int (ite (= x6585 x1872) x19 (x1807 x1872)))
(define-fun x1826 ((x1872 x112)) Int (ite (= x8802 x1872) x19 (x1807 x1872)))
(define-fun x3913 ((x1872 x112)) Int (ite x4989 (x4951 x1872) (ite x4231 (x9082 x1872) (ite x2882 (x6613 x1872) (x1826 x1872)))))
(define-fun x3835 ((x1872 x112)) Int (ite x7019 (x8732 x1872) (ite x681 (x1807 x1872) (x3913 x1872))))
(define-fun x6196 ((x1872 x112)) Int (ite (= x1872 x5027) x2921 (x3308 x1872)))
(define-fun x1268 ((x1872 x112)) Int (ite x4324 (x3308 x1872) (ite x3826 (x6196 x1872) (x3308 x1872))))
(define-fun x2541 ((x1872 x112)) Int (ite (= x1872 x2112) x4396 (x1268 x1872)))
(define-fun x3461 ((x1872 x112)) Int (ite (= x2112 x1872) x4396 (x1268 x1872)))
(define-fun x6710 ((x1872 x112)) Int (ite x4989 (x1268 x1872) (ite x4231 (x2541 x1872) (ite x2882 (x1268 x1872) (x3461 x1872)))))
(define-fun x148 ((x1872 x112)) Int (ite x7019 (x3308 x1872) (ite x681 (x1268 x1872) (x6710 x1872))))
(define-fun x4104 ((x1872 x112)) Int (ite (= x6571 x1872) x589 (x148 x1872)))
(define-fun x2685 ((x1872 x112)) Int (ite (= x8958 x1872) x589 (x697 x1872)))
(define-fun x4503 ((x1872 x112)) Int (ite (= x8509 x1872) x8266 (x4492 x1872)))
(define-fun x8836 ((x1872 x112)) Int (ite x4324 (x4492 x1872) (ite x7384 (x4503 x1872) (x4492 x1872))))
(define-fun x9061 ((x1872 x112)) Int (ite (= x1872 x5788) x4396 (x8836 x1872)))
(define-fun x8252 ((x1872 x112)) Int (ite (= x1872 x5656) x4396 (x8836 x1872)))
(define-fun x6024 ((x1872 x112)) Int (ite x4989 (x9061 x1872) (ite x4231 (x8252 x1872) (x8836 x1872))))
(define-fun x4234 ((x1872 x112)) Int (ite x7019 (x4492 x1872) (ite x681 (x8836 x1872) (x6024 x1872))))
(define-fun x5223 ((x1872 x112)) Int (ite (= x7952 x1872) x7607 (x4234 x1872)))
(define-fun x1894 ((x1872 x112)) Int (ite x5515 (x4234 x1872) (ite x6763 (x5223 x1872) (x4234 x1872))))
(define-fun x4315 ((x1872 x112)) Int (ite x5515 (x148 x1872) (ite x6518 (x4104 x1872) (x148 x1872))))
(define-fun x1844 ((x1872 x112)) Int (ite x6518 (x697 x1872) (x2685 x1872)))
(define-fun x1216 ((x1872 x112)) Int (ite (= x5620 x1872) 0 (x1844 x1872)))
(define-fun x274 ((x1872 x112)) Int (ite x5515 (x697 x1872) (x1216 x1872)))
(define-fun x3471 ((x1872 x112)) Int (ite (= x1872 x7512) 0 (x3835 x1872)))
(define-fun x3879 ((x1872 x112)) Int (ite x5515 (x3835 x1872) (x3471 x1872)))
(define-fun x1176 ((x1872 x112)) Int (ite (= x1872 x3374) x7607 (x4998 x1872)))
(define-fun x5965 ((x1872 x112)) Int (ite x6763 (x4998 x1872) (x1176 x1872)))
(define-fun x1118 ((x1872 x112)) Int (ite (= x1872 x311) 0 (x5965 x1872)))
(define-fun x6869 ((x1872 x112)) Int (ite x5515 (x4998 x1872) (x1118 x1872)))
(define-fun x2116 ((x1872 x112)) Int (ite (= x1872 x8921) x4483 (x4463 x1872)))
(define-fun x2297 ((x1872 x112)) Int (ite x3577 (x4463 x1872) (x2116 x1872)))
(define-fun x6357 ((x1872 x112)) Int (ite (= x6955 x1872) 0 (x2297 x1872)))
(define-fun x8547 ((x1872 x112)) Int (ite x1305 (x4463 x1872) (x6357 x1872)))
(define-fun x3328 ((x1872 x112)) Int (ite (= x7760 x1872) x2189 (x8547 x1872)))
(define-fun x8234 ((x1872 x112)) Int (ite (= x6997 x1872) 0 (x8547 x1872)))
(define-fun x8242 ((x1872 x112)) Int (ite (= x1872 x8354) x3725 (x8547 x1872)))
(define-fun x235 ((x1872 x112)) Int (ite (= x8218 x1872) x4396 (x8242 x1872)))
(define-fun x4667 ((x1872 x112)) Int (ite (= x3132 x1872) 0 (x8547 x1872)))
(define-fun x8342 ((x1872 x112)) Int (ite (= x1872 x1297) x4396 (x4667 x1872)))
(define-fun x3589 ((x1872 x112)) Int (ite x2465 (x3328 x1872) (ite x139 (x8234 x1872) (ite x8865 (x235 x1872) (x8342 x1872)))))
(define-fun x8079 ((x1872 x112)) Int (ite x535 (x4463 x1872) (ite x3632 (x8547 x1872) (x3589 x1872))))
(define-fun x6599 ((x1872 x112)) Int (ite (= x8432 x1872) x1758 (x8245 x1872)))
(define-fun x6060 ((x1872 x112)) Int (ite x1187 (x8245 x1872) (x6599 x1872)))
(define-fun x3949 ((x1872 x112)) Int (ite (= x5630 x1872) 0 (x6060 x1872)))
(define-fun x3489 ((x1872 x112)) Int (ite x1305 (x8245 x1872) (x3949 x1872)))
(define-fun x3357 ((x1872 x112)) Int (ite (= x6358 x1872) 0 (x3489 x1872)))
(define-fun x2251 ((x1872 x112)) Int (ite (= x1872 x7877) x4396 (x3357 x1872)))
(define-fun x1375 ((x1872 x112)) Int (ite (= x1872 x2006) 0 (x3489 x1872)))
(define-fun x6509 ((x1872 x112)) Int (ite (= x1872 x3390) x6449 (x3489 x1872)))
(define-fun x189 ((x1872 x112)) Int (ite (= x1872 x4911) x4396 (x6509 x1872)))
(define-fun x6961 ((x1872 x112)) Int (ite (= x1872 x5932) x6449 (x3489 x1872)))
(define-fun x7909 ((x1872 x112)) Int (ite x2465 (x2251 x1872) (ite x139 (x1375 x1872) (ite x8865 (x189 x1872) (x6961 x1872)))))
(define-fun x8435 ((x1872 x112)) Int (ite x535 (x8245 x1872) (ite x3632 (x3489 x1872) (x7909 x1872))))
(define-fun x9033 ((x1872 x112)) Int (ite (= x8609 x1872) 0 (x9084 x1872)))
(define-fun x4363 ((x1872 x112)) Int (ite x1305 (x9084 x1872) (x9033 x1872)))
(define-fun x4273 ((x1872 x112)) Int (ite (= x1872 x1662) x786 (x4363 x1872)))
(define-fun x1162 ((x1872 x112)) Int (ite (= x5498 x1872) x786 (x4363 x1872)))
(define-fun x293 ((x1872 x112)) Int (ite (= x1872 x1652) x786 (x4363 x1872)))
(define-fun x5627 ((x1872 x112)) Int (ite (= x1872 x3944) x786 (x4363 x1872)))
(define-fun x1327 ((x1872 x112)) Int (ite x2465 (x4273 x1872) (ite x139 (x1162 x1872) (ite x8865 (x293 x1872) (x5627 x1872)))))
(define-fun x6732 ((x1872 x112)) Int (ite x535 (x9084 x1872) (ite x3632 (x4363 x1872) (x1327 x1872))))
(define-fun x7316 ((x1872 x112)) Int (ite (= x1872 x5126) x1758 (x7295 x1872)))
(define-fun x5131 ((x1872 x112)) Int (ite x1305 (x7295 x1872) (ite x1187 (x7316 x1872) (x7295 x1872))))
(define-fun x2902 ((x1872 x112)) Int (ite (= x7733 x1872) x4396 (x5131 x1872)))
(define-fun x6040 ((x1872 x112)) Int (ite (= x7733 x1872) x4396 (x5131 x1872)))
(define-fun x9016 ((x1872 x112)) Int (ite x2465 (x5131 x1872) (ite x139 (x2902 x1872) (ite x8865 (x5131 x1872) (x6040 x1872)))))
(define-fun x7075 ((x1872 x112)) Int (ite x535 (x7295 x1872) (ite x3632 (x5131 x1872) (x9016 x1872))))
(define-fun x33 ((x1872 x112)) Int (ite (= x4062 x1872) x7056 (x7075 x1872)))
(define-fun x1273 ((x1872 x112)) Int (ite (= x1872 x6773) x7056 (x8435 x1872)))
(define-fun x712 ((x1872 x112)) Int (ite (= x1872 x140) 0 (x6732 x1872)))
(define-fun x2686 ((x1872 x112)) Int (ite x335 (x6732 x1872) (x712 x1872)))
(define-fun x1492 ((x1872 x112)) Int (ite (= x1872 x6126) x7919 (x8079 x1872)))
(define-fun x249 ((x1872 x112)) Int (ite x2405 (x8079 x1872) (x1492 x1872)))
(define-fun x1261 ((x1872 x112)) Int (ite (= x1872 x6400) 0 (x249 x1872)))
(define-fun x679 ((x1872 x112)) Int (ite x335 (x8079 x1872) (x1261 x1872)))
(define-fun x5784 ((x1872 x112)) Int (ite x5300 (x8435 x1872) (x1273 x1872)))
(define-fun x5470 ((x1872 x112)) Int (ite (= x803 x1872) 0 (x5784 x1872)))
(define-fun x7005 ((x1872 x112)) Int (ite x335 (x8435 x1872) (x5470 x1872)))
(define-fun x8705 ((x1872 x112)) Int (ite (= x329 x1872) x4483 (x1682 x1872)))
(define-fun x6226 ((x1872 x112)) Int (ite x1305 (x1682 x1872) (ite x3577 (x8705 x1872) (x1682 x1872))))
(define-fun x6488 ((x1872 x112)) Int (ite (= x5024 x1872) x4396 (x6226 x1872)))
(define-fun x3749 ((x1872 x112)) Int (ite (= x1872 x7322) x4396 (x6226 x1872)))
(define-fun x3885 ((x1872 x112)) Int (ite x2465 (x6488 x1872) (ite x139 (x3749 x1872) (x6226 x1872))))
(define-fun x9177 ((x1872 x112)) Int (ite x535 (x1682 x1872) (ite x3632 (x6226 x1872) (x3885 x1872))))
(define-fun x1283 ((x1872 x112)) Int (ite (= x1872 x8785) x7919 (x9177 x1872)))
(define-fun x3167 ((x1872 x112)) Int (ite x335 (x9177 x1872) (ite x2405 (x1283 x1872) (x9177 x1872))))
(define-fun x8805 ((x1872 x112)) Int (ite x335 (x7075 x1872) (ite x5300 (x33 x1872) (x7075 x1872))))
(define-fun x8183 ((x1872 x112)) Int (ite (= x1872 x5682) x2699 (x8091 x1872)))
(define-fun x8957 ((x1872 x112)) Int (ite x9193 (x8091 x1872) (x8183 x1872)))
(define-fun x9143 ((x1872 x112)) Int (ite (= x6309 x1872) 0 (x8957 x1872)))
(define-fun x7614 ((x1872 x112)) Int (ite x2769 (x8091 x1872) (x9143 x1872)))
(define-fun x4473 ((x1872 x112)) Int (ite (= x1256 x1872) x2962 (x7614 x1872)))
(define-fun x1727 ((x1872 x112)) Int (ite (= x5977 x1872) 0 (x7614 x1872)))
(define-fun x3047 ((x1872 x112)) Int (ite (= x1872 x5099) x2543 (x7614 x1872)))
(define-fun x4603 ((x1872 x112)) Int (ite (= x1872 x9156) x560 (x3047 x1872)))
(define-fun x3627 ((x1872 x112)) Int (ite (= x5876 x1872) 0 (x7614 x1872)))
(define-fun x4840 ((x1872 x112)) Int (ite (= x1872 x2167) x560 (x3627 x1872)))
(define-fun x265 ((x1872 x112)) Int (ite x5489 (x4473 x1872) (ite x6037 (x1727 x1872) (ite x595 (x4603 x1872) (x4840 x1872)))))
(define-fun x2215 ((x1872 x112)) Int (ite x8887 (x8091 x1872) (ite x6006 (x7614 x1872) (x265 x1872))))
(define-fun x5943 ((x1872 x112)) Int (ite (= x1872 x4001) x22 (x2215 x1872)))
(define-fun x124 ((x1872 x112)) Int (ite x8500 (x2215 x1872) (x5943 x1872)))
(define-fun x8237 ((x1872 x112)) Int (ite (= x1872 x7406) 0 (x124 x1872)))
(define-fun x779 ((x1872 x112)) Int (ite x9092 (x2215 x1872) (x8237 x1872)))
(define-fun x220 ((x1872 x112)) Int (ite (= x2533 x1872) x6164 (x779 x1872)))
(define-fun x6956 ((x1872 x112)) Int (ite (= x1839 x1872) 0 (x779 x1872)))
(define-fun x3836 ((x1872 x112)) Int (ite (= x7824 x1872) x4427 (x779 x1872)))
(define-fun x7899 ((x1872 x112)) Int (ite (= x4249 x1872) x730 (x3836 x1872)))
(define-fun x8828 ((x1872 x112)) Int (ite (= x8003 x1872) 0 (x779 x1872)))
(define-fun x3218 ((x1872 x112)) Int (ite (= x936 x1872) x730 (x8828 x1872)))
(define-fun x3551 ((x1872 x112)) Int (ite x2765 (x220 x1872) (ite x4414 (x6956 x1872) (ite x3550 (x7899 x1872) (x3218 x1872)))))
(define-fun x9117 ((x1872 x112)) Int (ite x789 (x2215 x1872) (ite x9185 (x779 x1872) (x3551 x1872))))
(define-fun x5151 ((x1872 x112)) Int (ite (= x7171 x1872) x1908 (x6658 x1872)))
(define-fun x4072 ((x1872 x112)) Int (ite x2954 (x6658 x1872) (x5151 x1872)))
(define-fun x4064 ((x1872 x112)) Int (ite (= x2299 x1872) 0 (x4072 x1872)))
(define-fun x6018 ((x1872 x112)) Int (ite x2769 (x6658 x1872) (x4064 x1872)))
(define-fun x9187 ((x1872 x112)) Int (ite (= x942 x1872) 0 (x6018 x1872)))
(define-fun x3090 ((x1872 x112)) Int (ite (= x1872 x8722) x560 (x9187 x1872)))
(define-fun x1693 ((x1872 x112)) Int (ite (= x7513 x1872) 0 (x6018 x1872)))
(define-fun x3462 ((x1872 x112)) Int (ite (= x1809 x1872) x833 (x6018 x1872)))
(define-fun x8806 ((x1872 x112)) Int (ite (= x1655 x1872) x560 (x3462 x1872)))
(define-fun x591 ((x1872 x112)) Int (ite (= x1401 x1872) x833 (x6018 x1872)))
(define-fun x2892 ((x1872 x112)) Int (ite x5489 (x3090 x1872) (ite x6037 (x1693 x1872) (ite x595 (x8806 x1872) (x591 x1872)))))
(define-fun x7978 ((x1872 x112)) Int (ite x8887 (x6658 x1872) (ite x6006 (x6018 x1872) (x2892 x1872))))
(define-fun x4662 ((x1872 x112)) Int (ite (= x8976 x1872) x3641 (x7978 x1872)))
(define-fun x1944 ((x1872 x112)) Int (ite x4892 (x7978 x1872) (x4662 x1872)))
(define-fun x1870 ((x1872 x112)) Int (ite (= x1872 x2970) 0 (x1944 x1872)))
(define-fun x6823 ((x1872 x112)) Int (ite x9092 (x7978 x1872) (x1870 x1872)))
(define-fun x2131 ((x1872 x112)) Int (ite (= x7491 x1872) 0 (x6823 x1872)))
(define-fun x6684 ((x1872 x112)) Int (ite (= x8682 x1872) x730 (x2131 x1872)))
(define-fun x2589 ((x1872 x112)) Int (ite (= x1872 x1206) 0 (x6823 x1872)))
(define-fun x8642 ((x1872 x112)) Int (ite (= x1872 x288) x8932 (x6823 x1872)))
(define-fun x7794 ((x1872 x112)) Int (ite (= x1872 x871) x730 (x8642 x1872)))
(define-fun x1515 ((x1872 x112)) Int (ite (= x498 x1872) x8932 (x6823 x1872)))
(define-fun x8789 ((x1872 x112)) Int (ite x2765 (x6684 x1872) (ite x4414 (x2589 x1872) (ite x3550 (x7794 x1872) (x1515 x1872)))))
(define-fun x4861 ((x1872 x112)) Int (ite x789 (x7978 x1872) (ite x9185 (x6823 x1872) (x8789 x1872))))
(define-fun x3128 ((x1872 x112)) Int (ite (= x8743 x1872) x3641 (x212 x1872)))
(define-fun x1005 ((x1872 x112)) Int (ite x9092 (x212 x1872) (ite x4892 (x3128 x1872) (x212 x1872))))
(define-fun x3688 ((x1872 x112)) Int (ite (= x2419 x1872) x730 (x1005 x1872)))
(define-fun x2957 ((x1872 x112)) Int (ite (= x1872 x2419) x730 (x1005 x1872)))
(define-fun x1823 ((x1872 x112)) Int (ite x2765 (x1005 x1872) (ite x4414 (x3688 x1872) (ite x3550 (x1005 x1872) (x2957 x1872)))))
(define-fun x3854 ((x1872 x112)) Int (ite x789 (x212 x1872) (ite x9185 (x1005 x1872) (x1823 x1872))))
(define-fun x320 ((x1872 x112)) Int (ite (= x1872 x3628) x8741 (x3854 x1872)))
(define-fun x222 ((x1872 x112)) Int (ite (= x7118 x1872) x8741 (x4861 x1872)))
(define-fun x6568 ((x1872 x112)) Int (ite (= x5175 x1872) x5425 (x5847 x1872)))
(define-fun x8565 ((x1872 x112)) Int (ite (= x6171 x1872) 0 (x6568 x1872)))
(define-fun x1222 ((x1872 x112)) Int (ite x996 (x8565 x1872) (x6568 x1872)))
(define-fun x6366 ((x1872 x112)) Int (ite (= x1872 x7804) x1595 (x958 x1872)))
(define-fun x1250 ((x1872 x112)) Int (ite (= x5424 x1872) x1595 (x6658 x1872)))
(define-fun x2490 ((x1872 x112)) Int (ite x2640 (x3854 x1872) (ite x5835 (x320 x1872) (x3854 x1872))))
(define-fun x7746 ((x1872 x112)) Int (ite (= x7586 x1872) x3532 (x9117 x1872)))
(define-fun x5757 ((x1872 x112)) Int (ite x2429 (x9117 x1872) (x7746 x1872)))
(define-fun x4965 ((x1872 x112)) Int (ite (= x1872 x3793) 0 (x5757 x1872)))
(define-fun x1320 ((x1872 x112)) Int (ite x2640 (x9117 x1872) (x4965 x1872)))
(define-fun x8374 ((x1872 x112)) Int (ite (= x1872 x1104) 0 (x1309 x1872)))
(define-fun x4807 ((x1872 x112)) Int (ite x2640 (x1309 x1872) (x8374 x1872)))
(define-fun x4472 ((x1872 x112)) Int (ite x5835 (x4861 x1872) (x222 x1872)))
(define-fun x8308 ((x1872 x112)) Int (ite (= x1038 x1872) 0 (x4472 x1872)))
(define-fun x1891 ((x1872 x112)) Int (ite x2640 (x4861 x1872) (x8308 x1872)))
(define-fun x3194 ((x1872 x112)) Int (ite (= x1872 x4834) x2699 (x3882 x1872)))
(define-fun x6546 ((x1872 x112)) Int (ite x2769 (x3882 x1872) (ite x9193 (x3194 x1872) (x3882 x1872))))
(define-fun x7089 ((x1872 x112)) Int (ite (= x7127 x1872) x560 (x6546 x1872)))
(define-fun x8950 ((x1872 x112)) Int (ite (= x5803 x1872) x560 (x6546 x1872)))
(define-fun x9007 ((x1872 x112)) Int (ite x5489 (x7089 x1872) (ite x6037 (x8950 x1872) (x6546 x1872))))
(define-fun x6819 ((x1872 x112)) Int (ite x8887 (x3882 x1872) (ite x6006 (x6546 x1872) (x9007 x1872))))
(define-fun x3083 ((x1872 x112)) Int (ite (= x7895 x1872) x22 (x6819 x1872)))
(define-fun x3263 ((x1872 x112)) Int (ite x9092 (x6819 x1872) (ite x8500 (x3083 x1872) (x6819 x1872))))
(define-fun x9055 ((x1872 x112)) Int (ite (= x1872 x2810) x730 (x3263 x1872)))
(define-fun x7149 ((x1872 x112)) Int (ite (= x1872 x682) x730 (x3263 x1872)))
(define-fun x7819 ((x1872 x112)) Int (ite x2765 (x9055 x1872) (ite x4414 (x7149 x1872) (x3263 x1872))))
(define-fun x8847 ((x1872 x112)) Int (ite x789 (x6819 x1872) (ite x9185 (x3263 x1872) (x7819 x1872))))
(define-fun x1407 ((x1872 x112)) Int (ite (= x4204 x1872) x3532 (x8847 x1872)))
(define-fun x8909 ((x1872 x112)) Int (ite x2640 (x8847 x1872) (ite x2429 (x1407 x1872) (x8847 x1872))))
(define-fun x8371 ((x1872 x112)) Int (ite (= x1872 x2404) x8153 (x3882 x1872)))
(define-fun x1373 ((x1872 x112)) Int (ite x8640 (x3882 x1872) (ite x1909 (x8371 x1872) (x3882 x1872))))
(define-fun x9234 ((x1872 x112)) Int (ite x8640 (x958 x1872) (ite x8129 (x6366 x1872) (x958 x1872))))
(define-fun x7266 ((x1872 x112)) Int (ite (= x1872 x9031) x8153 (x8091 x1872)))
(define-fun x7516 ((x1872 x112)) Int (ite x1909 (x8091 x1872) (x7266 x1872)))
(define-fun x2137 ((x1872 x112)) Int (ite (= x4761 x1872) 0 (x7516 x1872)))
(define-fun x8340 ((x1872 x112)) Int (ite x8640 (x8091 x1872) (x2137 x1872)))
(define-fun x4145 ((x1872 x112)) Int (ite x8129 (x6658 x1872) (x1250 x1872)))
(define-fun x4996 ((x1872 x112)) Int (ite (= x1872 x4454) 0 (x4145 x1872)))
(define-fun x1897 ((x1872 x112)) Int (ite x8640 (x6658 x1872) (x4996 x1872)))
(define-fun x9048 ((x1872 x112)) Int (ite (= x1872 x306) 0 (x6968 x1872)))
(define-fun x3757 ((x1872 x112)) Int (ite x8640 (x6968 x1872) (x9048 x1872)))
(define-fun x163 ((x1872 x112)) Int (ite (= x1872 x8779) 0 (x6168 x1872)))
(define-fun x4599 ((x1872 x112)) Int (ite (= x743 x1872) x6306 (x410 x1872)))
(define-fun x3483 ((x1872 x112)) Int (ite x3384 (x410 x1872) (x4599 x1872)))
(define-fun x4218 ((x1872 x112)) Int (ite (= x1872 x8968) 0 (x3483 x1872)))
(define-fun x286 ((x1872 x112)) Int (ite x4635 (x410 x1872) (x4218 x1872)))
(define-fun x7912 ((x1872 x112)) Int (ite (= x1872 x3337) x4519 (x286 x1872)))
(define-fun x2825 ((x1872 x112)) Int (ite (= x1872 x9065) 0 (x286 x1872)))
(define-fun x7843 ((x1872 x112)) Int (ite (= x3136 x1872) x1398 (x286 x1872)))
(define-fun x847 ((x1872 x112)) Int (ite (= x1872 x4864) x560 (x7843 x1872)))
(define-fun x5138 ((x1872 x112)) Int (ite (= x1754 x1872) 0 (x286 x1872)))
(define-fun x3672 ((x1872 x112)) Int (ite (= x4617 x1872) x560 (x5138 x1872)))
(define-fun x4547 ((x1872 x112)) Int (ite x1801 (x7912 x1872) (ite x6726 (x2825 x1872) (ite x5065 (x847 x1872) (x3672 x1872)))))
(define-fun x5949 ((x1872 x112)) Int (ite x2724 (x410 x1872) (ite x448 (x286 x1872) (x4547 x1872))))
(define-fun x3450 ((x1872 x112)) Int (ite (= x4405 x1872) x4494 (x5949 x1872)))
(define-fun x5558 ((x1872 x112)) Int (ite x6668 (x5949 x1872) (x3450 x1872)))
(define-fun x6173 ((x1872 x112)) Int (ite (= x1872 x4422) 0 (x5558 x1872)))
(define-fun x9166 ((x1872 x112)) Int (ite x8964 (x5949 x1872) (x6173 x1872)))
(define-fun x8604 ((x1872 x112)) Int (ite (= x1872 x209) x290 (x9166 x1872)))
(define-fun x7356 ((x1872 x112)) Int (ite (= x1872 x7788) 0 (x9166 x1872)))
(define-fun x7022 ((x1872 x112)) Int (ite (= x999 x1872) x888 (x9166 x1872)))
(define-fun x2666 ((x1872 x112)) Int (ite (= x1872 x8283) x730 (x7022 x1872)))
(define-fun x8298 ((x1872 x112)) Int (ite (= x1872 x8709) 0 (x9166 x1872)))
(define-fun x2100 ((x1872 x112)) Int (ite (= x469 x1872) x730 (x8298 x1872)))
(define-fun x1756 ((x1872 x112)) Int (ite x7413 (x8604 x1872) (ite x2833 (x7356 x1872) (ite x7173 (x2666 x1872) (x2100 x1872)))))
(define-fun x4292 ((x1872 x112)) Int (ite x6882 (x5949 x1872) (ite x8726 (x9166 x1872) (x1756 x1872))))
(define-fun x2981 ((x1872 x112)) Int (ite (= x1872 x4949) x1018 (x8020 x1872)))
(define-fun x4148 ((x1872 x112)) Int (ite x2547 (x8020 x1872) (x2981 x1872)))
(define-fun x1867 ((x1872 x112)) Int (ite (= x1872 x8582) 0 (x4148 x1872)))
(define-fun x524 ((x1872 x112)) Int (ite x4635 (x8020 x1872) (x1867 x1872)))
(define-fun x8995 ((x1872 x112)) Int (ite (= x1872 x1266) 0 (x524 x1872)))
(define-fun x3680 ((x1872 x112)) Int (ite (= x1872 x8115) x560 (x8995 x1872)))
(define-fun x2802 ((x1872 x112)) Int (ite (= x1872 x7100) 0 (x524 x1872)))
(define-fun x553 ((x1872 x112)) Int (ite (= x1872 x6131) x2163 (x524 x1872)))
(define-fun x1746 ((x1872 x112)) Int (ite (= x1872 x1264) x560 (x553 x1872)))
(define-fun x8163 ((x1872 x112)) Int (ite (= x1872 x1985) x2163 (x524 x1872)))
(define-fun x8730 ((x1872 x112)) Int (ite x1801 (x3680 x1872) (ite x6726 (x2802 x1872) (ite x5065 (x1746 x1872) (x8163 x1872)))))
(define-fun x8074 ((x1872 x112)) Int (ite x2724 (x8020 x1872) (ite x448 (x524 x1872) (x8730 x1872))))
(define-fun x6909 ((x1872 x112)) Int (ite (= x1872 x2497) x9232 (x8074 x1872)))
(define-fun x5960 ((x1872 x112)) Int (ite x7828 (x8074 x1872) (x6909 x1872)))
(define-fun x8061 ((x1872 x112)) Int (ite (= x8684 x1872) 0 (x5960 x1872)))
(define-fun x5978 ((x1872 x112)) Int (ite x8964 (x8074 x1872) (x8061 x1872)))
(define-fun x9121 ((x1872 x112)) Int (ite (= x1246 x1872) 0 (x5978 x1872)))
(define-fun x552 ((x1872 x112)) Int (ite (= x1872 x5643) x730 (x9121 x1872)))
(define-fun x7630 ((x1872 x112)) Int (ite (= x7319 x1872) 0 (x5978 x1872)))
(define-fun x7137 ((x1872 x112)) Int (ite (= x1872 x3486) x6343 (x5978 x1872)))
(define-fun x5304 ((x1872 x112)) Int (ite (= x6408 x1872) x730 (x7137 x1872)))
(define-fun x2944 ((x1872 x112)) Int (ite (= x8288 x1872) x6343 (x5978 x1872)))
(define-fun x3541 ((x1872 x112)) Int (ite x7413 (x552 x1872) (ite x2833 (x7630 x1872) (ite x7173 (x5304 x1872) (x2944 x1872)))))
(define-fun x8870 ((x1872 x112)) Int (ite x6882 (x8074 x1872) (ite x8726 (x5978 x1872) (x3541 x1872))))
(define-fun x7988 ((x1872 x112)) Int (ite (= x6312 x1872) x1018 (x6550 x1872)))
(define-fun x7279 ((x1872 x112)) Int (ite x4635 (x6550 x1872) (ite x2547 (x7988 x1872) (x6550 x1872))))
(define-fun x8144 ((x1872 x112)) Int (ite (= x5326 x1872) x560 (x7279 x1872)))
(define-fun x5157 ((x1872 x112)) Int (ite (= x5326 x1872) x560 (x7279 x1872)))
(define-fun x3348 ((x1872 x112)) Int (ite x1801 (x7279 x1872) (ite x6726 (x8144 x1872) (ite x5065 (x7279 x1872) (x5157 x1872)))))
(define-fun x4999 ((x1872 x112)) Int (ite x2724 (x6550 x1872) (ite x448 (x7279 x1872) (x3348 x1872))))
(define-fun x3981 ((x1872 x112)) Int (ite (= x1336 x1872) x9232 (x4999 x1872)))
(define-fun x8854 ((x1872 x112)) Int (ite x8964 (x4999 x1872) (ite x7828 (x3981 x1872) (x4999 x1872))))
(define-fun x6980 ((x1872 x112)) Int (ite (= x1872 x3521) x730 (x8854 x1872)))
(define-fun x6743 ((x1872 x112)) Int (ite (= x1872 x3521) x730 (x8854 x1872)))
(define-fun x6910 ((x1872 x112)) Int (ite x7413 (x8854 x1872) (ite x2833 (x6980 x1872) (ite x7173 (x8854 x1872) (x6743 x1872)))))
(define-fun x9095 ((x1872 x112)) Int (ite x6882 (x4999 x1872) (ite x8726 (x8854 x1872) (x6910 x1872))))
(define-fun x6304 ((x1872 x112)) Int (ite (= x1872 x1893) x2335 (x9095 x1872)))
(define-fun x7464 ((x1872 x112)) Int (ite (= x8496 x1872) x2335 (x8870 x1872)))
(define-fun x8092 ((x1872 x112)) Int (ite x5491 (x163 x1872) (x6168 x1872)))
(define-fun x7769 ((x1872 x112)) Int (ite (= x941 x1872) x5931 (x6550 x1872)))
(define-fun x8639 ((x1872 x112)) Int (ite (= x1872 x7595) x5931 (x8020 x1872)))
(define-fun x1548 ((x1872 x112)) Int (ite (= x1872 x5003) x6306 (x1852 x1872)))
(define-fun x6315 ((x1872 x112)) Int (ite x4635 (x1852 x1872) (ite x3384 (x1548 x1872) (x1852 x1872))))
(define-fun x5243 ((x1872 x112)) Int (ite (= x3024 x1872) x560 (x6315 x1872)))
(define-fun x8230 ((x1872 x112)) Int (ite (= x6039 x1872) x560 (x6315 x1872)))
(define-fun x2177 ((x1872 x112)) Int (ite x1801 (x5243 x1872) (ite x6726 (x8230 x1872) (x6315 x1872))))
(define-fun x4397 ((x1872 x112)) Int (ite x2724 (x1852 x1872) (ite x448 (x6315 x1872) (x2177 x1872))))
(define-fun x912 ((x1872 x112)) Int (ite (= x1872 x567) x4494 (x4397 x1872)))
(define-fun x3927 ((x1872 x112)) Int (ite x8964 (x4397 x1872) (ite x6668 (x912 x1872) (x4397 x1872))))
(define-fun x7982 ((x1872 x112)) Int (ite (= x1872 x7431) x730 (x3927 x1872)))
(define-fun x7455 ((x1872 x112)) Int (ite (= x6399 x1872) x730 (x3927 x1872)))
(define-fun x8128 ((x1872 x112)) Int (ite x7413 (x7982 x1872) (ite x2833 (x7455 x1872) (x3927 x1872))))
(define-fun x516 ((x1872 x112)) Int (ite x6882 (x4397 x1872) (ite x8726 (x3927 x1872) (x8128 x1872))))
(define-fun x6723 ((x1872 x112)) Int (ite (= x752 x1872) x6993 (x516 x1872)))
(define-fun x2808 ((x1872 x112)) Int (ite x5739 (x516 x1872) (ite x7150 (x6723 x1872) (x516 x1872))))
(define-fun x8066 ((x1872 x112)) Int (ite (= x1986 x1872) x6993 (x4292 x1872)))
(define-fun x3833 ((x1872 x112)) Int (ite x7150 (x4292 x1872) (x8066 x1872)))
(define-fun x1173 ((x1872 x112)) Int (ite (= x1872 x6556) 0 (x3833 x1872)))
(define-fun x1155 ((x1872 x112)) Int (ite x5739 (x4292 x1872) (x1173 x1872)))
(define-fun x6617 ((x1872 x112)) Int (ite x5739 (x9095 x1872) (ite x2951 (x6304 x1872) (x9095 x1872))))
(define-fun x5363 ((x1872 x112)) Int (ite (= x8441 x1872) 0 (x4584 x1872)))
(define-fun x8481 ((x1872 x112)) Int (ite x5739 (x4584 x1872) (x5363 x1872)))
(define-fun x8552 ((x1872 x112)) Int (ite x2951 (x8870 x1872) (x7464 x1872)))
(define-fun x3925 ((x1872 x112)) Int (ite (= x1872 x8208) 0 (x8552 x1872)))
(define-fun x8906 ((x1872 x112)) Int (ite x5739 (x8870 x1872) (x3925 x1872)))
(define-fun x7897 ((x1872 x112)) Int (ite (= x7120 x1872) x2668 (x1852 x1872)))
(define-fun x2908 ((x1872 x112)) Int (ite x7323 (x1852 x1872) (ite x1819 (x7897 x1872) (x1852 x1872))))
(define-fun x123 ((x1872 x112)) Int (ite (= x1872 x4005) 0 (x3434 x1872)))
(define-fun x3620 ((x1872 x112)) Int (ite x7323 (x3434 x1872) (x123 x1872)))
(define-fun x3537 ((x1872 x112)) Int (ite x5246 (x8020 x1872) (x8639 x1872)))
(define-fun x7293 ((x1872 x112)) Int (ite (= x1872 x1491) 0 (x3537 x1872)))
(define-fun x4385 ((x1872 x112)) Int (ite x7323 (x8020 x1872) (x7293 x1872)))
(define-fun x4343 ((x1872 x112)) Int (ite x7323 (x6550 x1872) (ite x5246 (x7769 x1872) (x6550 x1872))))
(define-fun x3404 ((x1872 x112)) Int (ite (= x506 x1872) x2668 (x410 x1872)))
(define-fun x7290 ((x1872 x112)) Int (ite x1819 (x410 x1872) (x3404 x1872)))
(define-fun x4106 ((x1872 x112)) Int (ite (= x1872 x8053) 0 (x7290 x1872)))
(define-fun x9017 ((x1872 x112)) Int (ite x7323 (x410 x1872) (x4106 x1872)))
(define-fun x8263 ((x1872 Int)) Int (ite (= 0 x1872) x6098 (x9122 x1872)))
(define-fun x2584 ((x1872 Int)) Int (ite (= 0 x1872) x5936 (x9122 x1872)))
(define-fun x1021 ((x1872 Int)) Int (ite (= x1872 0) x385 (x9122 x1872)))
(define-fun x4530 ((x1872 Int)) Int (ite (= x1872 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x5048 x1872)))
(define-fun x5527 ((x1872 Int)) Int (ite (= x1872 132) x7036 (x4530 x1872)))
(define-fun x6836 ((x1872 Int)) Int (ite (= 164 x1872) x5148 (x5527 x1872)))
(define-fun x2260 ((x1872 Int)) Int (ite (= 196 x1872) x393 (x6836 x1872)))
(define-fun x251 ((x1872 x112)) Int (ite (= x5892 x1872) x4566 (x1148 x1872)))
(define-fun x2820 ((x1872 x112)) Int (ite x2609 (x823 x1872) (x778 x1872)))
(define-fun x5196 ((x1872 Int)) Int (ite (= x1872 0) 1 (x8272 x1872)))
(define-fun x1184 ((x1872 x112)) Int (ite (= x1872 x1955) x8581 (x6021 x1872)))
(define-fun x3371 ((x1872 x112)) Int (ite (= x7141 x1872) x6560 (x1184 x1872)))
(define-fun x7008 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x8272 x1872)))
(define-fun x1296 ((x1872 x112)) Int (ite (= x1872 x626) x4649 (x5971 x1872)))
(define-fun x5733 ((x1872 Int)) Int (ite (= x1872 0) 1 (x8272 x1872)))
(define-fun x5181 ((x1872 x112)) Int (ite (= x2530 x1872) x7569 (x1604 x1872)))
(define-fun x7109 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x8272 x1872)))
(define-fun x7159 ((x1872 Int)) Int (ite (= x1872 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x5902 x1872)))
(define-fun x4686 ((x1872 Int)) Int (ite (= 132 x1872) x7036 (x7159 x1872)))
(define-fun x8997 ((x1872 Int)) Int (ite (= x1872 164) x3605 (x4686 x1872)))
(define-fun x1490 ((x1872 Int)) Int (ite (= 196 x1872) x393 (x8997 x1872)))
(define-fun x4781 ((x1872 x112)) Int (ite (= x1872 x1911) x8692 (x1148 x1872)))
(define-fun x2293 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x4921 x1872)))
(define-fun x3814 ((x1872 x112)) Int (ite (= x6132 x1872) x1503 (x6021 x1872)))
(define-fun x9110 ((x1872 Int)) Int (ite (= x1872 0) 1 (x4921 x1872)))
(define-fun x3146 ((x1872 x112)) Int (ite (= x1872 x3084) x7192 (x5971 x1872)))
(define-fun x9125 ((x1872 x112)) Int (ite (= x1872 x2673) x5555 (x3146 x1872)))
(define-fun x8013 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x4921 x1872)))
(define-fun x5241 ((x1872 x112)) Int (ite (= x1872 x4053) x6417 (x1604 x1872)))
(define-fun x4088 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x4921 x1872)))
(define-fun x7000 ((x1872 Int)) Int (ite (= 128 x1872) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x8161 x1872)))
(define-fun x4027 ((x1872 Int)) Int (ite (= 132 x1872) x7036 (x7000 x1872)))
(define-fun x1886 ((x1872 Int)) Int (ite (= x1872 164) x1326 (x4027 x1872)))
(define-fun x2185 ((x1872 Int)) Int (ite (= x1872 196) x393 (x1886 x1872)))
(define-fun x7635 ((x1872 x112)) Int (ite (= x8857 x1872) x4620 (x1148 x1872)))
(define-fun x5384 ((x1872 Int)) Int (ite (= x1872 0) 1 (x6419 x1872)))
(define-fun x764 ((x1872 x112)) Int (ite (= x1872 x5619) x5394 (x6021 x1872)))
(define-fun x3482 ((x1872 Int)) Int (ite (= x1872 0) 1 (x6419 x1872)))
(define-fun x7337 ((x1872 x112)) Int (ite (= x1872 x6153) x3477 (x5971 x1872)))
(define-fun x6367 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x6419 x1872)))
(define-fun x2225 ((x1872 x112)) Int (ite (= x8985 x1872) x6158 (x1604 x1872)))
(define-fun x1532 ((x1872 x112)) Int (ite (= x8309 x1872) x7637 (x2225 x1872)))
(define-fun x2656 ((x1872 Int)) Int (ite (= x1872 0) 1 (x6419 x1872)))
(define-fun x7623 ((x1872 Int)) Int (ite (= 128 x1872) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x7734 x1872)))
(define-fun x7549 ((x1872 Int)) Int (ite (= x1872 132) x7036 (x7623 x1872)))
(define-fun x8626 ((x1872 Int)) Int (ite (= 164 x1872) x5148 (x7549 x1872)))
(define-fun x750 ((x1872 Int)) Int (ite (= x1872 196) x6736 (x8626 x1872)))
(define-fun x5415 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x8293 x1872)))
(define-fun x536 ((x1872 Int)) Int (ite (= x1872 0) 1 (x8293 x1872)))
(define-fun x4785 ((x1872 Int)) Int (ite (= x1872 0) 1 (x8293 x1872)))
(define-fun x8300 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x8293 x1872)))
(define-fun x1025 ((x1872 Int)) Int (ite (= x1872 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x5928 x1872)))
(define-fun x1956 ((x1872 Int)) Int (ite (= x1872 132) x7036 (x1025 x1872)))
(define-fun x3783 ((x1872 Int)) Int (ite (= 164 x1872) x3605 (x1956 x1872)))
(define-fun x3 ((x1872 Int)) Int (ite (= 196 x1872) x713 (x3783 x1872)))
(define-fun x8528 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x1156 x1872)))
(define-fun x7156 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x1156 x1872)))
(define-fun x4160 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x1156 x1872)))
(define-fun x1130 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x1156 x1872)))
(define-fun x5030 ((x1872 Int)) Int (ite (= 128 x1872) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3241 x1872)))
(define-fun x908 ((x1872 Int)) Int (ite (= 132 x1872) x7036 (x5030 x1872)))
(define-fun x8965 ((x1872 Int)) Int (ite (= x1872 164) x1326 (x908 x1872)))
(define-fun x7062 ((x1872 Int)) Int (ite (= x1872 196) x5623 (x8965 x1872)))
(define-fun x6824 ((x1872 Int)) Int (ite (= x1872 0) 1 (x1307 x1872)))
(define-fun x7460 ((x1872 Int)) Int (ite (= x1872 0) 1 (x1307 x1872)))
(define-fun x6917 ((x1872 Int)) Int (ite (= x1872 0) 1 (x1307 x1872)))
(define-fun x866 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x1307 x1872)))
(define-fun x1992 ((x1872 Int)) Int (ite (= x1872 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x381 x1872)))
(define-fun x5211 ((x1872 Int)) Int (ite (= x1872 132) x7036 (x1992 x1872)))
(define-fun x2846 ((x1872 Int)) Int (ite (= 164 x1872) x5148 (x5211 x1872)))
(define-fun x8522 ((x1872 Int)) Int (ite (= x1872 196) x8922 (x2846 x1872)))
(define-fun x8485 ((x1872 x112)) Int (ite (= x1872 x2766) x3693 (x6570 x1872)))
(define-fun x6859 ((x1872 x112)) Int (ite x1330 (x4936 x1872) (x7611 x1872)))
(define-fun x405 ((x1872 Int)) Int (ite (= x1872 0) 1 (x4793 x1872)))
(define-fun x6754 ((x1872 x112)) Int (ite (= x1872 x8171) x2657 (x6566 x1872)))
(define-fun x1221 ((x1872 Int)) Int (ite (= x1872 0) 1 (x4793 x1872)))
(define-fun x3891 ((x1872 x112)) Int (ite (= x1872 x6765) x6425 (x3633 x1872)))
(define-fun x3530 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x4793 x1872)))
(define-fun x3224 ((x1872 x112)) Int (ite (= x8458 x1872) x2067 (x108 x1872)))
(define-fun x7353 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x4793 x1872)))
(define-fun x8527 ((x1872 Int)) Int (ite (= 128 x1872) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x6480 x1872)))
(define-fun x6360 ((x1872 Int)) Int (ite (= 132 x1872) x7036 (x8527 x1872)))
(define-fun x9056 ((x1872 Int)) Int (ite (= x1872 164) x3605 (x6360 x1872)))
(define-fun x368 ((x1872 Int)) Int (ite (= 196 x1872) x7459 (x9056 x1872)))
(define-fun x1635 ((x1872 x112)) Int (ite (= x1653 x1872) x2001 (x6570 x1872)))
(define-fun x4696 ((x1872 Int)) Int (ite (= x1872 0) 1 (x8848 x1872)))
(define-fun x1927 ((x1872 x112)) Int (ite (= x2723 x1872) x4933 (x6566 x1872)))
(define-fun x5029 ((x1872 Int)) Int (ite (= x1872 0) 1 (x8848 x1872)))
(define-fun x1933 ((x1872 x112)) Int (ite (= x3639 x1872) x3367 (x3633 x1872)))
(define-fun x8799 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x8848 x1872)))
(define-fun x8614 ((x1872 x112)) Int (ite (= x1872 x7913) x6999 (x108 x1872)))
(define-fun x3127 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x8848 x1872)))
(define-fun x6935 ((x1872 Int)) Int (ite (= 128 x1872) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2799 x1872)))
(define-fun x5414 ((x1872 Int)) Int (ite (= 132 x1872) x7036 (x6935 x1872)))
(define-fun x2498 ((x1872 Int)) Int (ite (= 164 x1872) x1326 (x5414 x1872)))
(define-fun x2993 ((x1872 Int)) Int (ite (= x1872 196) x2518 (x2498 x1872)))
(define-fun x3332 ((x1872 x112)) Int (ite (= x1872 x6884) x1795 (x6570 x1872)))
(define-fun x2150 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x2896 x1872)))
(define-fun x2406 ((x1872 x112)) Int (ite (= x7745 x1872) x3141 (x6566 x1872)))
(define-fun x1229 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x2896 x1872)))
(define-fun x330 ((x1872 x112)) Int (ite (= x1872 x905) x4229 (x3633 x1872)))
(define-fun x800 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x2896 x1872)))
(define-fun x4765 ((x1872 x112)) Int (ite (= x8943 x1872) x1258 (x108 x1872)))
(define-fun x893 ((x1872 Int)) Int (ite (= x1872 0) 1 (x2896 x1872)))
(define-fun x547 ((x1872 x112)) Int (ite (= x1872 x3115) x3284 (x2733 x1872)))
(define-fun x5641 ((x1872 x112)) Int (ite (= x1872 x3362) x2230 (x3278 x1872)))
(define-fun x4616 ((x1872 Int)) Int (ite (= x1872 0) 1 (x2943 x1872)))
(define-fun x518 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x2943 x1872)))
(define-fun x2874 ((x1872 Int)) Int (ite (= 0 x1872) 1 (x2943 x1872)))
(define-fun x2502 ((x1872 x112)) Int (ite x3168 (x1891 x1872) (x6823 x1872)))
(define-fun x7095 ((x1872 x112)) Int (ite x2857 (x8906 x1872) (x5978 x1872)))
(define-fun x6184 ((x1872 x112)) Int (ite x7218 (x274 x1872) (x6595 x1872)))
(define-fun x3226 ((x1872 x112)) Int (ite x6707 (x7005 x1872) (x3489 x1872)))
(define-fun x2489 ((x1872 Int)) Int (ite x5023 (x4194 x1872) (x4994 x1872)))
(define-fun x413 ((x1872 Int)) Int (ite x6061 (x4194 x1872) (x8202 x1872)))
(define-fun x973 ((x1872 Int)) Int (ite x3681 (x4194 x1872) (x5322 x1872)))
(define-fun x3536 ((x1872 Int)) Int (ite x5492 (x2489 x1872) (ite x7131 (x413 x1872) (x973 x1872))))
(define-fun x7561 ((x1872 x112)) Int (ite (= x1872 (x2264 x3881)) x5028 (x1656 x1872)))
(define-fun x8068 ((x1872 Int)) Int (ite x7722 (x9122 x1872) (x8263 x1872)))
(define-fun x3987 ((x1872 Int)) Int (ite x6382 (x9122 x1872) (x2584 x1872)))
(define-fun x8176 ((x1872 Int)) Int (ite x7506 (x9122 x1872) (x1021 x1872)))
(define-fun x7272 ((x1872 Int)) Int (ite x3152 (x8068 x1872) (ite x7934 (x3987 x1872) (x8176 x1872))))
(define-fun x8362 ((x1872 Int)) Int (ite (= x1872 0) 0 (x8286 x1872)))
(define-fun x5488 ((x1872 Int)) Int (ite x3416 (x8286 x1872) (x8362 x1872)))
(define-fun x3534 ((x1872 Int)) Int (ite (= 0 x1872) 0 (x8286 x1872)))
(define-fun x2552 ((x1872 Int)) Int (ite x5364 (x8286 x1872) (x3534 x1872)))
(define-fun x4208 ((x1872 Int)) Int (ite (= 0 x1872) 0 (x8286 x1872)))
(define-fun x8691 ((x1872 Int)) Int (ite x3813 (x8286 x1872) (x4208 x1872)))
(define-fun x2414 ((x1872 Int)) Int (ite x1456 (x5488 x1872) (ite x230 (x2552 x1872) (x8691 x1872))))
(define-fun x6099 ((x1872 Int)) Int (ite (= 0 x1872) 0 (x8467 x1872)))
(define-fun x8224 ((x1872 Int)) Int (ite x2363 (x8467 x1872) (x6099 x1872)))
(define-fun x3683 ((x1872 Int)) Int (ite (= 0 x1872) 0 (x8467 x1872)))
(define-fun x3293 ((x1872 Int)) Int (ite x8444 (x8467 x1872) (x3683 x1872)))
(define-fun x8699 ((x1872 Int)) Int (ite (= 0 x1872) 0 (x8467 x1872)))
(define-fun x8612 ((x1872 Int)) Int (ite x9030 (x8467 x1872) (x8699 x1872)))
(define-fun x2169 ((x1872 Int)) Int (ite x1394 (x8224 x1872) (ite x4926 (x3293 x1872) (x8612 x1872))))
(define-fun x1498 ((x1872 Int)) Int (ite (= 0 x1872) 0 (x2872 x1872)))
(define-fun x8059 ((x1872 Int)) Int (ite x1497 (x2872 x1872) (x1498 x1872)))
(define-fun x5106 ((x1872 Int)) Int (ite (= 0 x1872) 0 (x2872 x1872)))
(define-fun x6336 ((x1872 Int)) Int (ite x7303 (x2872 x1872) (x5106 x1872)))
(define-fun x2164 ((x1872 Int)) Int (ite (= x1872 0) 0 (x2872 x1872)))
(define-fun x8889 ((x1872 Int)) Int (ite x7069 (x2872 x1872) (x2164 x1872)))
(define-fun x7986 ((x1872 Int)) Int (ite x6415 (x8059 x1872) (ite x9131 (x6336 x1872) (x8889 x1872))))
(define-fun x962 ((x1872 x112)) Int (ite x6575 (x1604 x1872) (ite x3004 (x1604 x1872) (ite x2617 (x1604 x1872) (ite x6572 (x1604 x1872) (ite x1769 (x2225 x1872) (x1604 x1872)))))))
(define-fun x7641 ((x1872 x112)) Int (ite x3746 (x1604 x1872) (ite x3124 (x1604 x1872) (ite x6925 (x1604 x1872) (ite x1588 (x962 x1872) (x1532 x1872))))))
(define-fun x2427 ((x1872 x112)) Int (ite x3728 (x5971 x1872) (ite x4564 (x5971 x1872) (ite x6524 (x5971 x1872) (ite x7362 (x5971 x1872) (ite x2992 (x3146 x1872) (x5971 x1872)))))))
(define-fun x318 ((x1872 x112)) Int (ite x1181 (x5971 x1872) (ite x7040 (x5971 x1872) (ite x6780 (ite x4183 (x2427 x1872) (x9125 x1872)) (x5971 x1872)))))
(define-fun x5809 ((x1872 x112)) Int (ite x8105 (x6021 x1872) (ite x7793 (x6021 x1872) (ite x7046 (x6021 x1872) (ite x6912 (x6021 x1872) (ite x266 (x1184 x1872) (x6021 x1872)))))))
(define-fun x3029 ((x1872 x112)) Int (ite x4047 (x6021 x1872) (ite x2521 (ite x1690 (x5809 x1872) (x3371 x1872)) (x6021 x1872))))
(define-fun x3876 ((x1872 Int)) Int (ite x5510 (x6650 x1872) (x9161 x1872)))
(define-fun x850 ((x1872 Int)) Int (ite x4123 (x6650 x1872) (x4333 x1872)))
(define-fun x3052 ((x1872 Int)) Int (ite x3569 (x6650 x1872) (x2280 x1872)))
(define-fun x3995 ((x1872 Int)) Int (ite x5067 (x6650 x1872) (x1718 x1872)))
(define-fun x4858 ((x1872 Int)) Int (ite x5922 (x3876 x1872) (ite x2853 (x850 x1872) (ite x4972 (x3052 x1872) (x3995 x1872)))))
(define-fun x1419 ((x1872 Int)) Int (ite x8451 (x7204 x1872) (x5333 x1872)))
(define-fun x1202 ((x1872 Int)) Int (ite x7226 (x7204 x1872) (x523 x1872)))
(define-fun x2622 ((x1872 Int)) Int (ite x5650 (x7204 x1872) (x5380 x1872)))
(define-fun x6974 ((x1872 Int)) Int (ite x3421 (x7204 x1872) (x2223 x1872)))
(define-fun x4431 ((x1872 Int)) Int (ite x1370 (x1419 x1872) (ite x2725 (x1202 x1872) (ite x8822 (x2622 x1872) (x6974 x1872)))))
(define-fun x4395 ((x1872 Int)) Int (ite x8989 (x5951 x1872) (x6079 x1872)))
(define-fun x3258 ((x1872 Int)) Int (ite x2173 (x5951 x1872) (x5220 x1872)))
(define-fun x6601 ((x1872 Int)) Int (ite x3861 (x5951 x1872) (x6436 x1872)))
(define-fun x7558 ((x1872 Int)) Int (ite x334 (x5951 x1872) (x8214 x1872)))
(define-fun x7990 ((x1872 Int)) Int (ite x572 (x4395 x1872) (ite x3207 (x3258 x1872) (ite x166 (x6601 x1872) (x7558 x1872)))))
(define-fun x4523 ((x1872 Int)) Int (ite x5019 (x887 x1872) (x981 x1872)))
(define-fun x2828 ((x1872 Int)) Int (ite x3958 (x887 x1872) (x1611 x1872)))
(define-fun x6995 ((x1872 Int)) Int (ite x3043 (x887 x1872) (x3017 x1872)))
(define-fun x7969 ((x1872 Int)) Int (ite x4835 (x887 x1872) (x1046 x1872)))
(define-fun x3581 ((x1872 Int)) Int (ite x3798 (x4523 x1872) (ite x5276 (x2828 x1872) (ite x12 (x6995 x1872) (x7969 x1872)))))
(define-fun x6281 ((x1872 Int)) Int (ite x2117 (x4268 x1872) (x5867 x1872)))
(define-fun x5418 ((x1872 Int)) Int (ite x4272 (x4268 x1872) (x4651 x1872)))
(define-fun x8044 ((x1872 Int)) Int (ite x1890 (x4268 x1872) (x5681 x1872)))
(define-fun x6604 ((x1872 Int)) Int (ite x2727 (x4268 x1872) (x3802 x1872)))
(define-fun x3323 ((x1872 Int)) Int (ite x5471 (x6281 x1872) (ite x5865 (x5418 x1872) (ite x7382 (x8044 x1872) (x6604 x1872)))))
(define-fun x3973 ((x1872 Int)) Int (ite x60 (x1739 x1872) (x651 x1872)))
(define-fun x8664 ((x1872 Int)) Int (ite x7445 (x1739 x1872) (x9181 x1872)))
(define-fun x1081 ((x1872 Int)) Int (ite x2412 (x1739 x1872) (x1621 x1872)))
(define-fun x7914 ((x1872 Int)) Int (ite x3161 (x1739 x1872) (x1917 x1872)))
(define-fun x8311 ((x1872 Int)) Int (ite x653 (x3973 x1872) (ite x418 (x8664 x1872) (ite x5020 (x1081 x1872) (x7914 x1872)))))
(define-fun x8330 ((x1872 Int)) Int (ite x5870 (x1307 x1872) (x6824 x1872)))
(define-fun x8186 ((x1872 Int)) Int (ite x2922 (x1307 x1872) (x7460 x1872)))
(define-fun x4624 ((x1872 Int)) Int (ite x5756 (x1307 x1872) (x6917 x1872)))
(define-fun x2886 ((x1872 Int)) Int (ite x3903 (x1307 x1872) (x866 x1872)))
(define-fun x260 ((x1872 Int)) Int (ite x2567 (x8330 x1872) (ite x7721 (x8186 x1872) (ite x3573 (x4624 x1872) (x2886 x1872)))))
(define-fun x7233 ((x1872 Int)) Int (ite x7845 (x1156 x1872) (x8528 x1872)))
(define-fun x4318 ((x1872 Int)) Int (ite x781 (x1156 x1872) (x7156 x1872)))
(define-fun x5703 ((x1872 Int)) Int (ite x2041 (x1156 x1872) (x4160 x1872)))
(define-fun x3126 ((x1872 Int)) Int (ite x6283 (x1156 x1872) (x1130 x1872)))
(define-fun x6290 ((x1872 Int)) Int (ite x8357 (x7233 x1872) (ite x6739 (x4318 x1872) (ite x7612 (x5703 x1872) (x3126 x1872)))))
(define-fun x5538 ((x1872 Int)) Int (ite x7244 (x8293 x1872) (x5415 x1872)))
(define-fun x7777 ((x1872 Int)) Int (ite x302 (x8293 x1872) (x536 x1872)))
(define-fun x2435 ((x1872 Int)) Int (ite x1119 (x8293 x1872) (x4785 x1872)))
(define-fun x7313 ((x1872 Int)) Int (ite x8167 (x8293 x1872) (x8300 x1872)))
(define-fun x2342 ((x1872 Int)) Int (ite x2442 (x5538 x1872) (ite x5601 (x7777 x1872) (ite x869 (x2435 x1872) (x7313 x1872)))))
(define-fun x1041 ((x1872 Int)) Int (ite x3618 (x2896 x1872) (x2150 x1872)))
(define-fun x6769 ((x1872 Int)) Int (ite x8325 (x2896 x1872) (x1229 x1872)))
(define-fun x6430 ((x1872 Int)) Int (ite x8765 (x2896 x1872) (x800 x1872)))
(define-fun x4478 ((x1872 Int)) Int (ite x2469 (x2896 x1872) (x893 x1872)))
(define-fun x5893 ((x1872 Int)) Int (ite x8526 (x1041 x1872) (ite x7718 (x6769 x1872) (ite x2988 (x6430 x1872) (x4478 x1872)))))
(define-fun x6146 ((x1872 Int)) Int (ite x3585 (x8848 x1872) (x4696 x1872)))
(define-fun x400 ((x1872 Int)) Int (ite x6626 (x8848 x1872) (x5029 x1872)))
(define-fun x625 ((x1872 Int)) Int (ite x8219 (x8848 x1872) (x8799 x1872)))
(define-fun x8583 ((x1872 Int)) Int (ite x6531 (x8848 x1872) (x3127 x1872)))
(define-fun x5976 ((x1872 Int)) Int (ite x8359 (x6146 x1872) (ite x5791 (x400 x1872) (ite x6782 (x625 x1872) (x8583 x1872)))))
(define-fun x7798 ((x1872 Int)) Int (ite x2736 (x4793 x1872) (x405 x1872)))
(define-fun x5357 ((x1872 Int)) Int (ite x4758 (x4793 x1872) (x1221 x1872)))
(define-fun x5011 ((x1872 Int)) Int (ite x8394 (x4793 x1872) (x3530 x1872)))
(define-fun x3361 ((x1872 Int)) Int (ite x6302 (x4793 x1872) (x7353 x1872)))
(define-fun x8188 ((x1872 Int)) Int (ite x6940 (x7798 x1872) (ite x6386 (x5357 x1872) (ite x7591 (x5011 x1872) (x3361 x1872)))))
(define-fun x806 ((x1872 Int)) Int (ite x6395 (x3266 x1872) (ite x4707 (x970 x1872) (x6712 x1872))))
(define-fun x5934 ((x1872 Int)) Int (ite (= 0 x1872) x1116 (x617 x1872)))
(define-fun x9071 ((x1872 Int)) Int (ite (= 0 x1872) x1750 (x617 x1872)))
(define-fun x3111 ((x1872 Int)) Int (ite (= x1872 0) x3252 (x617 x1872)))
(define-fun x5508 ((x1872 Int)) Int (ite x8099 (x5934 x1872) (ite x8296 (x9071 x1872) (x3111 x1872))))
(define-fun x2158 ((x1872 Int)) Int (ite x1813 (x4616 x1872) (ite x3076 (x518 x1872) (x2874 x1872))))
(define-fun x7596 ((x1872 x112)) Int (ite (= x66 x1872) x6514 (x3425 x1872)))
(define-fun x7680 ((x1872 Int)) Int (ite x5708 (x686 x1872) (ite x4205 (x7806 x1872) (x7884 x1872))))
(define-fun x332 ((x1872 Int)) Int (ite x7653 (x2684 x1872) (ite x7076 (x7784 x1872) (x1774 x1872))))
(define-fun x3459 ((x1872 Int)) Int (ite x7287 (x3682 x1872) (ite x6918 (x7302 x1872) (x846 x1872))))
(define-fun x5572 ((x1872 Int)) Int (ite x3772 (x5933 x1872) (ite x3557 (x2059 x1872) (x6654 x1872))))
(define-fun x5765 ((x3112 Int)) Bool (=> (and (not (= 157198259 x3112)) (not (= x3112 75483562)) (not (= 1901074598 x3112)) (not (= x3112 2858086653)) (not (= 2929553584 x3112)) (not (= 1608758631 x3112)) (not (= 1779720228 x3112)) (not (= x3112 988262939)) (not (= x3112 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 2678788150 x3112)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3112)) (not (= 18446744073709551615 x3112)) (not (= 24044834009420335638544845215851342251227478490780828673611325350056707489792 x3112)) (not (= x3112 77053863734975077137548456399560439977311721439096602559221323163398253314048)) (< 10000 x3112) (not (= 1523576871 x3112)) (not (= x3112 1313710058)) (not (= 547091486 x3112)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3112)) (not (= x3112 2023533118)) (not (= x3112 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 2796547477 x3112)) (not (= x3112 1857877511)) (not (= x3112 117300739)) (not (= x3112 1466279372)) (not (= 1000000000000000000 x3112)) (not (= 405663989 x3112)) (not (= x3112 242558722)) (not (= x3112 44970383829727661923261016617897238973146650624978361361029103362720544063488)) (not (= x3112 2835717307)) (not (= x3112 3069361948)) (not (= x3112 10742207464693106059581744854972325794081737850190833080250671788038469713920)) (not (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x3112)) (not (= x3112 398450620)) (not (= x3112 1865448899)) (not (= 1461501637330902918203684832716283019655932542976 x3112)) (not (= 3047081080 x3112)) (not (= x3112 115792089237316195423570985008687907853269984665640564039457)) (not (= 3842108676 x3112)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x3112)) (not (= 989455977 x3112)) (not (= x3112 6539370208772218570076773595062200405109424842860869254164860851635934461952)) (not (= x3112 1461501637330902918203684832716283019655932542975)) (not (= x3112 178855970)) (not (= x3112 4294967296)) (not (= 3583811254 x3112)) (not (= 2217467699 x3112)) (not (= 1856199391 x3112)) (not (= 3266287495 x3112)) (not (= x3112 2991318663)) (not (= x3112 599290589)) (not (= x3112 35417553099779373699389112480655434059402432070290151981503827724506945814528)) (not (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x3112)) (not (= 1038142104 x3112)) (not (= x3112 50292402827334880472107169365697159231523039388532301717704428044325102813184)) (not (= 2691771752 x3112)) (not (= x3112 10936679508223583803006762266923565500374401145016910147028117655998246682624)) (not (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 x3112)) (not (= x3112 1913449218))) (not ((_ is x6664) (x2264 x3112)))))
(assert (= x6877 (and x8782 x628)))
(assert (=> (>= 10000 x8784) (= (x2264 x8784) (x6664 x8784))))
(assert (= (x3373 (x6664 10742207464693106059581744854972325794081737850190833080250671788038469713920)) 10742207464693106059581744854972325794081737850190833080250671788038469713920))
(assert (= x904 (and x2408 (not x599))))
(assert (= x8315 (=> (and (= x3982 (= x7850 0)) (or (not x3982) x3982)) x7775)))
(assert (=> (<= x8483 10000) (= (x2264 x8483) (x6664 x8483))))
(assert (= (+ 1 (x3373 x1942)) (x3373 (x4000 x1942 1))))
(assert (= x8734 (and x6888 x7906)))
(assert (= x4476 (and x2086 x5851)))
(assert (= (x6664 115792089237316195423570985008687907853269984665640564039457) (x2264 115792089237316195423570985008687907853269984665640564039457)))
(assert (x5765 x4107))
(assert (= x5331 (and x1688 x1280)))
(assert (= (and x1847 x7361) x2220))
(assert (x9173 x3481))
(assert (= (and x5678 x7492) x1526))
(assert (x9173 x4294))
(assert (= (x2264 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x6664 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (= (+ 2 (x3373 x3381)) (x3373 (x4000 x3381 2))))
(assert (= (and x3673 x740) x2578))
(assert (x9173 x7690))
(assert (x9173 x3513))
(assert (= (and (not x6182) x6831) x5632))
(assert (x5765 x6266))
(assert (x9173 x3524))
(assert (x9173 x3039))
(assert (x9173 x6316))
(assert (x9173 x4932))
(assert (x9173 x3539))
(assert (x9173 x8460))
(assert (= (x3373 (x2264 x8265)) x8265))
(assert (= x1008 (or x8726 x8380)))
(assert (x9173 x4720))
(assert (x9173 x9136))
(assert (= x6964 (and (not x8350) x375)))
(assert (= x1890 (or x3795 (and x5386 x7888) x4099 (and (not x6260) x546) (and (not x6504) x862) (and x7587 x8955))))
(assert (= x2674 (=> (and (= x2941 x4162) (= 0 x4596)) x6051)))
(assert (x9173 x4817))
(assert (= (or (and x2568 (not x456)) x4891) x5180))
(assert (x9173 x6716))
(assert (x9173 x1442))
(assert (x9173 x8191))
(assert (= x5615 (and x6270 (not x3234))))
(assert (x9173 x963))
(assert (= (and x2529 x162) x7151))
(assert (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x3373 (x6664 72570022874062638528011751457397263716769196454539065078543251854057308946432))))
(assert (= (and x1934 (not x5426)) x5082))
(assert (= (and x1101 x8742) x6037))
(assert (= x3929 (and (=> (and (not x8951) (= x8951 x6174)) x401) (=> (and (= (< x2240 x1103) x7310) x8951) (and (=> (and (not x7310) (and (= (< x2002 x5652) x6174) (= (x2563 (- x2240 x1103)) x2002))) x401) (=> x7310 x6801))))))
(assert (= x5886 (or x3797 x3384)))
(assert (x9173 x7526))
(assert (x9173 x6010))
(assert (= x6668 (and x4437 x8506)))
(assert (= (and (not x4900) x4449) x1114))
(assert (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x3373 (x6664 4238056678808933066457772256406219440718756300954938350892797929791311314944))))
(assert (= x3174 (and x5143 x5102)))
(assert (x9173 x7698))
(assert (= (=> (and (= x9118 (= x5931 0)) (or (and (= x7120 (x4000 x2128 2)) x9118) (and (not x9118) (= x506 (x5783 (x2264 x5931) x2128 0))))) x1289) x8403))
(assert (= (x3373 (x2264 x5176)) x5176))
(assert (= x4841 (and x5127 (not x2973))))
(assert (= (x6664 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x2264 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (= (or x943 x7655) x975))
(assert (= (and x2143 x584) x3002))
(assert (x9173 x1908))
(assert (x9173 x7652))
(assert (x9173 x4810))
(assert (= (x3373 (x2264 x5355)) x5355))
(assert (= x1763 (=> (and (= x8643 x3890) (= x5410 x8287)) x1415)))
(assert (x9173 x620))
(assert (= x8729 (or x7704 x3706 x4747 x1001 x6127 x6709)))
(assert (= x5271 (and (not x5451) x1694)))
(assert (x9173 x3078))
(assert (x9173 x4276))
(assert (= (and x4313 x1262) x250))
(assert (x9173 x6489))
(assert (x9173 x3180))
(assert (x9173 x3254))
(assert (= (or x1697 x1642) x7683))
(assert (x5765 x6598))
(assert (x9173 x4353))
(assert (x5765 x5711))
(assert (= (and (not x6311) x6671) x5038))
(assert (x9173 x4661))
(assert (x9173 x4600))
(assert (= x2717 x3931))
(assert (= (and (not x2428) x8613) x7323))
(assert (= (+ (x3373 x498) 1) (x3373 (x4000 x498 1))))
(assert (x9173 x4263))
(assert (x9173 x5208))
(assert (x9173 x6697))
(assert (= x5786 (and (not x6119) x5751)))
(assert (x9173 x304))
(assert (= (and (=> (and (not x4514) (and (= x2083 x739) (= x3080 0))) x5906) (=> (and (and (or (and x1912 (and (= (x5783 (x2264 x1308) x1404 0) x9116) (<= 0 x7351) (= (x1807 x1125) x7351) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7351) (= (x4000 x9116 2) x1125) (= (> x19 x7351) x6645) (= (not x6645) x8878))) (and (not x1912) (= x8878 x1912))) (and (< x1308 1461501637330902918203684832716283019655932542976) (<= 0 x1308) (= x1912 (ite (< 1 x1) (not (= x1308 0)) (< 1 x1))) (= x91 (x5783 (x2264 x739) x1404 0)) (= (x4000 x91 1) x561) (= (x6595 x561) x1308) (>= 1461501637330902918203684832716283019655932542975 x1308))) x4514) x5686)) x1771))
(assert (= (and x4839 x3427) x7218))
(assert (= x3201 (and x1032 x5033)))
(assert (= (or x8231 x1969) x8756))
(assert (= (or x5500 (and x3420 (not x276))) x5396))
(assert (= (x3373 (x4000 x6216 2)) (+ (x3373 x6216) 2)))
(assert (x9173 x8189))
(assert (= (and (not x2166) x2990) x2143))
(assert (= (x3373 (x2264 x1486)) x1486))
(assert (= x3281 (and x3321 (not x4558))))
(assert (= x4657 (x3373 (x2264 x4657))))
(assert (x9173 x5186))
(assert (= x2875 (and x5478 (not x8141))))
(assert (x9173 x2064))
(assert (x9173 x3060))
(assert (= (=> (= x13 (< 0 x5824)) (and (=> (and (and (= x3058 x1609) (= x2039 x878)) (not x13)) x8556) (=> (and (and (= x8057 (= x560 0)) (<= 0 x1) (<= x1 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x13) (and (=> (and (and (= x5428 (x4000 x4245 2)) (= x4245 (x5783 (x2264 x560) x2128 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7085) (= x7085 (x3620 x5428)) (>= x7085 0) (= x254 (= 0 x7085))) (not x8057)) (and (=> (not x254) x8633) (=> (and (and (or (and x6919 (and (= (x4000 x7996 2) x1098) (<= x1878 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (not x7003) x5952) (= (> x5824 x1878) x7003) (<= 0 x1878) (= x7996 (x5783 (x2264 x8503) x2128 0)) (= (x3620 x1098) x1878))) (and (not x6919) (= x5952 x6919))) (and (<= x8503 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x8503) (= (x4343 x6864) x8503) (<= 0 x8503) (= (x4000 x2128 1) x6864) (= x6919 (ite (< 0 x1) (not (= x8503 0)) (< 0 x1))))) x254) x5062))) (=> x8057 x8633))))) x2317))
(assert (=> (<= x8521 10000) (= (x2264 x8521) (x6664 x8521))))
(assert (= (and (not x4779) x4502) x2181))
(assert (x9173 x424))
(assert (=> (<= x5 10000) (= (x2264 x5) (x6664 x5))))
(assert (= (x3373 (x4000 x311 1)) (+ (x3373 x311) 1)))
(assert (= (and x8728 (not x4224)) x4092))
(assert (=> (>= 10000 x2639) (= (x6664 x2639) (x2264 x2639))))
(assert (= (and x394 x5813) x5478))
(assert (= (and x2213 x8849) x7019))
(assert (= x5148 (x3373 (x2264 x5148))))
(assert (= x6688 (and (not x7878) x4706)))
(assert (= (and x4267 (not x5190)) x710))
(assert (= x5094 (and x6193 (not x1830))))
(assert (x5765 x8254))
(assert (= x4098 (and x7953 x838)))
(assert (= (or x3903 x7911) x1848))
(assert (x9173 x2325))
(assert (x9173 x1165))
(assert (= (and x2488 x6224) x1783))
(assert (= (x3373 (x4000 x1695 2)) (+ (x3373 x1695) 2)))
(assert (x9173 x3173))
(assert (= (and x5789 (not x5535)) x1928))
(assert (= x186 (and (not x1938) x924)))
(assert (=> (<= x5375 10000) (= (x6664 x5375) (x2264 x5375))))
(assert (x5765 x444))
(assert (= (and (not x8841) x994) x8681))
(assert (= x8899 (or x8770 x7150)))
(assert (= (or x262 x3577) x9012))
(assert (= (x3373 (x2264 x6696)) x6696))
(assert (x9173 x5237))
(assert (=> (>= 10000 x6634) (= (x2264 x6634) (x6664 x6634))))
(assert (= x4213 (=> (= x2713 (< 0 x5009)) (and (=> (and x2713 (and (= x3105 (= x2254 0)) (<= 0 x1) (<= x1 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x3105) (and (= (= 0 x3586) x102) (= (x4000 x7538 2) x5573) (= (x8481 x5573) x3586) (<= x3586 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x2254) x1078 0) x7538) (<= 0 x3586))) (and (=> (and x102 (and (or (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5578) (= x6147 (x4000 x1855 2)) (<= 0 x5578) (= x2252 (> x5009 x5578)) (= x5578 (x8481 x6147)) (= x1855 (x5783 (x2264 x5833) x1078 0)) (= x9204 (not x2252))) x1271) (and (not x1271) (= x1271 x9204))) (and (= (x4000 x1078 1) x298) (= x5833 (x6617 x298)) (>= 1461501637330902918203684832716283019655932542975 x5833) (= (ite (< 0 x1) (not (= 0 x5833)) (> x1 0)) x1271) (< x5833 1461501637330902918203684832716283019655932542976) (>= x5833 0)))) x5589) (=> (not x102) x7505))) (=> x3105 x984))) (=> (not x2713) x2452)))))
(assert (x9173 x700))
(assert (x5765 x6804))
(assert (= (x6664 35417553099779373699389112480655434059402432070290151981503827724506945814528) (x2264 35417553099779373699389112480655434059402432070290151981503827724506945814528)))
(assert (x9173 x9046))
(assert (= (and (not x5150) x5388) x515))
(assert (= (and (not x8915) x4948) x810))
(assert (x9173 x7973))
(assert (= x8827 (and x3575 (not x9069))))
(assert (x9173 x3493))
(assert (x5699 x5334 x1646))
(assert (x5699 x6687 x4773))
(assert (= x5017 (and x5753 (not x2672))))
(assert (= x8741 (x3373 (x2264 x8741))))
(assert (x9173 x7286))
(assert (x9173 x7887))
(assert (x9173 x1004))
(assert (= (=> (and (= x1915 0) (= x8876 x507)) x5560) x6978))
(assert (x9173 x4574))
(assert (= (and x3609 x2875) x4046))
(assert (x9173 x267))
(assert (= (and x1759 (not x4345)) x2483))
(assert (x9173 x7534))
(assert (= (=> (and (= x6825 x8990) (= x8452 x7687)) x7658) x6241))
(assert (x9173 x7052))
(assert (= x5827 (x3373 (x2264 x5827))))
(assert (x9173 x6502))
(assert (x9173 x1670))
(assert (x5765 x2694))
(assert (x9173 x144))
(assert (x9173 x9040))
(assert (x9173 x1686))
(assert (= (+ (x3373 x1013) 1) (x3373 (x4000 x1013 1))))
(assert (x9173 x3188))
(assert (x9173 x8934))
(assert (x9173 x4797))
(assert (x9173 x134))
(assert (= (x3373 (x2264 x3605)) x3605))
(assert (= x8150 (or x771 x505)))
(assert (x9173 x2606))
(assert (= x5937 (and x994 x8841)))
(assert (= x4157 (and x4094 x8147)))
(assert (= x2500 (and (not x7617) x5396)))
(assert (= (and x7306 (not x1592)) x5002))
(assert (x9173 x4914))
(assert (= (and x5744 (not x7310)) x269))
(assert (x9173 x3110))
(assert (x9173 x1880))
(assert (= (=> (and (= (x4000 x8053 1) x1491) (= (x4000 x1491 1) x4005) (= x560 x3058) (= x119 x878) (= (x5783 (x2264 x560) x2128 0) x8053)) x2317) x1289))
(assert (= (and (=> (and (and (= x2399 x8114) (= x1580 x5879) (= x2321 x3881)) x7661) x3709) (=> (and (not x7661) (and (= x2399 x2694) (= 1 x3723))) x4559)) x3031))
(assert (= x6887 (and (not x4918) x1056)))
(assert (x9173 x234))
(assert (= x4300 (and x8539 x3856)))
(assert (x9173 x4623))
(assert (= (or x7855 x5287) x4297))
(assert (= x2418 (and x6055 x9146)))
(assert (= (x3373 (x6664 405663989)) 405663989))
(assert (= x7535 (or x775 x2749)))
(assert (= (+ 1 (x3373 x8684)) (x3373 (x4000 x8684 1))))
(assert (x9173 x4016))
(assert (x9173 x825))
(assert (x9173 x6214))
(assert (x8537 x17))
(assert (= (or x1306 (and x4126 x7417) (and (not x7456) x7872) (and x5462 (not x747)) x4063 (and x685 x6735)) x1476))
(assert (= (or x8089 x1014) x5840))
(assert (x9173 x4577))
(assert (= (and x3470 (not x7449)) x2362))
(assert (x9173 x5936))
(assert (= (and x1624 x6887) x790))
(assert (= (x3373 (x4000 x1206 1)) (+ (x3373 x1206) 1)))
(assert (x9173 x8477))
(assert (= (and x777 x4850) x266))
(assert (x9173 x7972))
(assert (x9173 x6138))
(assert (= x925 x6409))
(assert (= x1379 (and x460 x8473)))
(assert (= x4956 x3931))
(assert (x9173 x2119))
(assert (= x5345 (and x7616 x4929)))
(assert (=> (<= x5833 10000) (= (x6664 x5833) (x2264 x5833))))
(assert (x9173 x3676))
(assert (= x5684 (and x176 x7378)))
(assert (= (and x6555 x2979) x7369))
(assert (= (=> (and (or (and (= (x5783 (x2264 x1018) x2069 0) x743) (not x593)) (and (= x5003 (x4000 x2069 2)) x593)) (= (= 0 x1018) x593)) x4175) x110))
(assert (= x5004 (x3373 (x2264 x5004))))
(assert (x2631 x1915))
(assert (= (x3373 (x6664 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x9173 x3012))
(assert (x9173 x827))
(assert (x9173 x540))
(assert (= x3966 (and (not x8566) x8411)))
(assert (= (or x1351 x6554) x5402))
(assert (= (+ 2 (x3373 x1855)) (x3373 (x4000 x1855 2))))
(assert (= x3244 (or x7937 x8299)))
(assert (x9173 x6468))
(assert (x9173 x5735))
(assert (x9173 x2884))
(assert (x9173 x1468))
(assert (= (and x2418 (not x4392)) x1074))
(assert (x9173 x2425))
(assert (= x5994 (and x4605 x272)))
(assert (= (and x746 x4161) x539))
(assert (= x8089 (and x3121 (not x3190))))
(assert (= x1291 (and x4443 (not x8807))))
(assert (x9173 x7579))
(assert (= x5101 (or x3538 x6689)))
(assert (= x1713 (and (not x1051) x1990)))
(assert (x9173 x81))
(assert (= x3801 (and (not x2817) x5058)))
(assert (x9173 x8361))
(assert (x9173 x7621))
(assert (x9173 x8735))
(assert (= (and x3548 x2688) x6058))
(assert (x9173 x1501))
(assert (= (or x5491 x4350) x1144))
(assert (= x4494 (x3373 (x2264 x4494))))
(assert (= x3588 (and x8259 (not x4138))))
(assert (x9173 x4668))
(assert (= (=> (and (= x7859 x1282) (= x7842 x4890)) x7671) x3785))
(assert (= (x3373 (x6664 18446744073709551615)) 18446744073709551615))
(assert (= (=> (and (= (= x2335 0) x5411) (or (and (= x1986 (x5783 (x2264 x2335) x1078 0)) (not x5411)) (and (= (x4000 x1078 2) x752) x5411))) x7472) x5551))
(assert (x9173 x4780))
(assert (= (and x1480 (not x7708)) x5860))
(assert (x9173 x2775))
(assert (x5765 x1908))
(assert (= (and x2454 x3075) x8728))
(assert (x9173 x1088))
(assert (= x9211 (or x3681 x7901)))
(assert (= (x3373 (x4000 x3414 1)) (+ 1 (x3373 x3414))))
(assert (x9173 x6957))
(assert (x9173 x844))
(assert (x9173 x294))
(assert (= (and (not x3347) x4691) x3004))
(assert (= (and (not x7527) x5114) x5031))
(assert (x2631 x2011))
(assert (= x8235 (=> (and (= x134 x674) (= x6849 x7728)) x1060)))
(assert (= x3544 (and x1549 x4485)))
(assert (= x7721 (or x1026 x2922)))
(assert (= x4551 x7565))
(assert (= (and x5359 x5278) x1777))
(assert (= (and x3237 x544) x6572))
(assert (= (=> (= x590 (= x1282 0)) (and (=> (and (not x590) (= (or (and (< x4890 32) (= true (<= x4890 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4890 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2852)) (and (=> (and (and (= x606 32) (= x4690 1) (= x3924 x613)) (not x2852)) x6525) (=> (and (= x613 x640) x2852) x5236))) (=> (and x590 (= x613 x640)) x5236))) x6962))
(assert (= (or x6626 x4232) x5791))
(assert (= (or x1757 x3040) x952))
(assert (x9173 x7269))
(assert (x9173 x5544))
(assert (x9173 x3937))
(assert (= (=> (and (= (= x7056 0) x8956) (or (and (not x8956) (= x6126 (x5783 (x2264 x7056) x9128 0))) (and x8956 (= x8785 (x4000 x9128 2))))) x9041) x6496))
(assert (x9173 x5299))
(assert (= x1898 (and x1218 x213)))
(assert (x9173 x4399))
(assert (x9173 x2950))
(assert (= (and (not x7051) x7730) x4860))
(assert (= x1760 (or x8500 x6711)))
(assert (= x8394 (or (and x4461 (not x3560)) x8008 x2996 (and (not x7028) x3072) (and x5841 x3522) (and x6651 x5445))))
(assert (x9173 x3101))
(assert (x9173 x8193))
(assert (= (x3373 (x4000 x3119 1)) (+ (x3373 x3119) 1)))
(assert (x9173 x7904))
(assert (= x138 (or x7331 x1257)))
(assert (x9173 x8063))
(assert (x9173 x1976))
(assert (x9173 x2145))
(assert (x9173 x927))
(assert (= x4466 (and (not x2713) x6444)))
(assert (= x9075 (and x979 x4359)))
(assert (x9173 x8174))
(assert (= x7413 (and (not x7115) x118)))
(assert (= (or x1879 x6810) x7040))
(assert (x9173 x8498))
(assert (x9173 x333))
(assert (= (and x4756 x5637) x2421))
(assert (x9173 x3285))
(assert (= x3931 x8973))
(assert (= x4613 (and x3662 (not x840))))
(assert (x5765 x6634))
(assert (= (=> (= (= x5824 x7403) x8553) (and (=> (and (not x8553) (= (< 0 x7403) x2428)) (and (=> (and x2428 (and (> 1461501637330902918203684832716283019655932542976 x5931) (= x326 (= 0 x6420)) (= x5931 (x8020 x1013)) (= x1702 (x5783 (x2264 x560) x2128 0)) (<= x2668 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6420) (<= 0 x2668) (<= 0 x6420) (= x2668 (x410 x1702)) (= x119 (x910 (+ 96 x5142))) (= x5910 (x4000 x1013 1)) (>= x5931 0) (= (x4000 x1702 1) x1013) (<= x5931 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2668) (= (x3434 x5910) x6420))) (and (=> (and (not x326) (and (or (and (and (= (x5783 (x2264 x2668) x2128 0) x3247) (= (x4000 x3247 1) x7595)) (not x6938)) (and x6938 (= x941 (x4000 x2128 1)))) (= (= 0 x2668) x6938))) x8403) (=> x326 x8633))) (=> (and (and (= x695 x3058) (= x878 x5142)) (not x2428)) x2317))) (=> (and x8553 (and (= x6944 x695) (= x5142 x1071))) x8618))) x3251))
(assert (= (and x6642 x6979) x8865))
(assert (= x5197 (and x1633 (not x75))))
(assert (=> (<= x2056 10000) (= (x6664 x2056) (x2264 x2056))))
(assert (= (and x5557 x7741) x275))
(assert (= x3931 x1408))
(assert (= x4183 (or x7362 x3501 x4564 x2992 x3728 x6524)))
(assert (= (or x2570 x7869) x895))
(assert (=> (<= x1353 10000) (= (x6664 x1353) (x2264 x1353))))
(assert (= x978 (=> (and (= x6656 0) (= x8658 x7645)) x3380)))
(assert (x9173 x3571))
(assert (x9173 x7739))
(assert (x9173 x2399))
(assert (x5765 x2015))
(assert (= x9089 (and x1170 x2022)))
(assert (= x935 (and (not x1070) x1031)))
(assert (= x8833 (and (not x7885) x7015)))
(assert (x9173 x3009))
(assert (= x5751 (and x4497 x971)))
(assert (= (and x5751 x6119) x4880))
(assert (x9173 x3972))
(assert (= x2004 (or x4877 (and x2525 (not x4784)))))
(assert (= (and (not x6026) x1994) x2591))
(assert (x9173 x4462))
(assert (= (+ 1 (x3373 x3349)) (x3373 (x4000 x3349 1))))
(assert (x9173 x5698))
(assert (x9173 x5602))
(assert (= (or x1910 x7487) x2278))
(assert (= (and (not x3830) x5935) x5279))
(assert (x9173 x7935))
(assert (= (and x4997 x6820) x6136))
(assert (= (and x3832 x7539) x5917))
(assert (= (x6664 3047081080) (x2264 3047081080)))
(assert (= (or x5739 x8899) x6444))
(assert (x9173 x8972))
(assert (= x6044 (and x4709 x819)))
(assert (x9173 x3428))
(assert (x5765 x8266))
(assert (= (and x3190 x3121) x6118))
(assert (= x2390 (and x4489 x7619)))
(assert (= (or x1439 x6006) x3356))
(assert (= (and (not x4730) x4888) x14))
(assert (x9173 x1984))
(assert (x9173 x5200))
(assert (= x5388 (and (not x3515) x8422)))
(assert (x9173 x3873))
(assert (x9173 x5730))
(assert (= x5019 (or x4665 (and x3438 x7250) (and (not x1736) x6069) (and x8494 x5051) x8151 (and x4215 x772) (and x6666 (not x8774)) (and x6359 x3208) x6259)))
(assert (= x7283 (x3373 (x2264 x7283))))
(assert (x9173 x7072))
(assert (= (or x998 x1916) x2097))
(assert (= (and x493 (not x1912)) x5759))
(assert (x9173 x1542))
(assert (=> (>= 10000 x8631) (= (x6664 x8631) (x2264 x8631))))
(assert (x9173 x1525))
(assert (x9173 x3659))
(assert (= (and x7053 x1238) x7384))
(assert (= (and (=> (and (not x8351) (and (= x5341 x8254) (= 1 x8282))) x4173) (=> x8351 x5342)) x7276))
(assert (= x1412 (=> (= (= 0 x1728) x6930) (and (=> (and (not x6930) (and (= (x910 (+ x758 31)) x3444) (= x8928 (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3444)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x758) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x758) true) (< x758 32))) x455) (= (x910 (+ x8928 516)) x7442))) (and (=> (and (= x6661 true) x455) x6209) (=> (and (not x455) (and (= x4108 (x6748 x9226 x6874)) (= (ite (> x4500 x1542) 1 0) x6874) (= x1542 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6764)) (= x9226 (ite (not x4045) 1 0)) (= (= x4108 0) x4156) (= (= 0 x6764) x4045) (= (x6583 516) x4500))) (and (=> (and x4156 (and (= (div x8663 1000000000000000000) x7840) (>= x7367 0) (= (= 0 x8900) x3848) (= x8663 (mod (* x4500 x6764) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x7367 (x7727 x48)) (= x6048 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8900)) (= x8420 (x6748 x1510 x7761)) (= (ite (not x3848) 1 0) x1510) (= (ite (< x6048 x7367) 1 0) x7761) (= (= x8420 0) x1938) (= x48 (x5783 (x2264 x3881) (x6664 165) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7367))) (and (=> (not x1938) x3931) (=> (and (and (= (div x5603 1000000000000000000) x543) (= x1065 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7840))) (= x5603 (mod (* x8900 x7367) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x6971 (> x543 x1065))) x1938) (and (=> x6971 x3931) (=> (and (not x6971) (and (= x1311 (x910 (+ x7840 x543))) (= x8524 (x5783 (x2264 x560) (x6664 178) 0)) (= (ite (< x1311 x1687) x1311 x9072) x4044) (>= x201 0) (= (< 0 x7289) x5135) (= (x5660 x8524) x201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x201) (= (x2563 (- x201 x5887)) x7289))) (and (=> (not x5135) x8633) (=> (and (and (= x1968 (> x426 0)) (<= 0 x1322) (= x426 (x2563 (- x3881 x1322))) (>= 1461501637330902918203684832716283019655932542975 x1322) (< x1322 1461501637330902918203684832716283019655932542976)) x5135) (and (=> (and (and (= x5084 x2639) (<= 0 x2639) (= x7435 x7442) (>= 1461501637330902918203684832716283019655932542975 x2639) (> 1461501637330902918203684832716283019655932542976 x2639)) (not x1968)) x5845) (=> (and (and (or (and (and (or (and x5256 (and (= x5225 x2437) (not (< x6717 988262939)) (not (< x2437 4)) (= x3495 50292402827334880472107169365697159231523039388532301717704428044325102813184) (< x1750 1461501637330902918203684832716283019655932542976) (= x3304 32) (= 1865448899 x6717) (> x5895 0) (= 4 x2437) (not (= 1857877511 x6717)) (>= x1750 0) (<= x1750 1461501637330902918203684832716283019655932542975) (< x6717 2217467699) (= x3386 1) (= (x6844 (x2264 x3605)) x5895) (not (= x6717 1856199391)) (not (< x6717 1856199391)))) (and (and (= x3234 (= x3881 x1326)) (and (and (>= x3252 0) (= x5225 x8819) (= x3386 1) (< x3252 1461501637330902918203684832716283019655932542976) (not (= 1856199391 x6092)) (not (> 4 x8819)) (not (< x6092 988262939)) (not (= x6092 1857877511)) (< x6092 2217467699) (= x8819 4) (= 32 x3304) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x3232) (not (< x6092 1856199391)) (= 1865448899 x6092) (>= 1461501637330902918203684832716283019655932542975 x3252) (= (x6844 (x2264 x1326)) x4102) (< 0 x4102)) x3234)) (not x5256))) (= (= x3881 x3605) x5256)) (not x247)) (and (and (= x3304 32) (not (> 4 x7072)) (<= x1116 1461501637330902918203684832716283019655932542975) (= x5734 (x6844 (x2264 x5148))) (= 1 x3386) (not (> 988262939 x2768)) (<= 0 x1116) (< 0 x5734) (= 1865448899 x2768) (> 2217467699 x2768) (not (> 1856199391 x2768)) (> 1461501637330902918203684832716283019655932542976 x1116) (= x5225 x7072) (not (= 1856199391 x2768)) (= x3409 50292402827334880472107169365697159231523039388532301717704428044325102813184) (not (= x2768 1857877511)) (= 4 x7072)) x247)) (and (= (= x5148 x3881) x247) (= 4 x5225))) x1968) x8262))))))))) (=> (not x4156) x3931))))) (=> x6930 x8633)))))
(assert (= (or x4020 x6017) x6244))
(assert (x9173 x1966))
(assert (x9173 x8452))
(assert (= (and x1301 (not x6867)) x4020))
(assert (= x4369 (or x1370 x7663 x2725 x8822)))
(assert (= x6554 (and (not x5219) x3166)))
(assert (= (and x1440 x4158) x5143))
(assert (x5765 x5341))
(assert (x9173 x2332))
(assert (x9173 x3727))
(assert (x9173 x7452))
(assert (= x8955 (and x4590 x7705)))
(assert (= (and x1531 x3867) x8763))
(assert (=> (<= x560 10000) (= (x6664 x560) (x2264 x560))))
(assert (= x8633 x1022))
(assert (x9173 x4416))
(assert (= x4468 (and (not x7270) x259)))
(assert (x9173 x5108))
(assert (= x7382 (or x1561 x1890)))
(assert (x9173 x8226))
(assert (= (and x3679 x6203) x8491))
(assert (= (and x2574 x2370) x9013))
(assert (x9173 x1369))
(assert (=> (<= x4107 10000) (= (x6664 x4107) (x2264 x4107))))
(assert (= x5097 (and x1378 x7104)))
(assert (x9173 x4432))
(assert (x9173 x972))
(assert (=> (>= 10000 x6121) (= (x2264 x6121) (x6664 x6121))))
(assert (x9173 x7138))
(assert (= x8823 (and (not x6407) x4871)))
(assert (= (x3373 (x2264 x6622)) x6622))
(assert (=> (>= 10000 x3543) (= (x6664 x3543) (x2264 x3543))))
(assert (= x4595 (and x8490 x5954)))
(assert (x9173 x6708))
(assert (= (and (not x1882) x6163) x2692))
(assert (x9173 x2701))
(assert (= (=> (and (= x2880 x7447) (= x7006 x4172)) x8903) x5112))
(assert (x9173 x636))
(assert (= (and x2783 (not x4065)) x7836))
(assert (= x5520 (and x4498 (not x7640))))
(assert (x5765 x8932))
(assert (x9173 x7466))
(assert (x9173 x2107))
(assert (= (x3373 (x2264 x7358)) x7358))
(assert (x5765 x5176))
(assert (x9173 x5745))
(assert (= x6967 (and x7708 x1480)))
(assert (= x5915 (and (not x8073) x5509)))
(assert (= (=> (= (= 0 x674) x7617) (and (=> x7617 x2250) (=> (and (= x6406 (or (> x7728 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x7728) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7728) true)))) (not x7617)) (and (=> (and (and (<= 0 x4008) (= x4742 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4196))) (= (< x4742 x4008) x3515) (<= x4008 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x6406)) (and (=> (and (and (= x5150 (< x4742 x5846)) (<= x5846 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3029 x6405) x5846) (= (x5783 (x2264 x7036) (x6664 5) 0) x6405) (<= 0 x5846) (= (x910 (+ x4196 x4008)) x5834)) (not x3515)) (and (=> x5150 x2250) (=> (and (and (= x1764 32) (= x720 1) (= (x910 (+ x4196 x5846)) x706)) (not x5150)) x6522))) (=> x3515 x2250))) (=> x6406 x2250))))) x5705))
(assert (= (x3373 (x4000 x992 1)) (+ (x3373 x992) 1)))
(assert (= (=> (and (= x5661 x4798) (= x4940 x8400)) x8097) x8239))
(assert (x9173 x5091))
(assert (= (or x277 x6846 x4262 x2210 x5524 x6273 x4142 x5440 x1007) x5870))
(assert (x9173 x1565))
(assert (= x8132 (and x5403 x5430)))
(assert (x5699 x6894 x6921))
(assert (= x1628 (and x1804 x7486)))
(assert (x9173 x730))
(assert (= (x3373 (x6664 1038142104)) 1038142104))
(assert (= (and x9105 x3526) x6805))
(assert (x9173 x6154))
(assert (x9173 x7490))
(assert (x9173 x6318))
(assert (= (and x427 x754) x4772))
(assert (= (and x4885 x4512) x7380))
(assert (= x2363 (or x3205 x5178 x8996 x2318 x5659 x8121)))
(assert (= (=> (and (= x829 0) (= x7018 x7479)) x5709) x5911))
(assert (= (and (not x2787) x1977) x2192))
(assert (= (and (not x7169) x608) x5496))
(assert (x9173 x7390))
(assert (x9173 x6612))
(assert (x9173 x6301))
(assert (= (and (not x1906) x7854) x4806))
(assert (x9173 x4980))
(assert (x9173 x545))
(assert (x9173 x1061))
(assert (x9173 x1539))
(assert (= (and x3234 x6270) x5507))
(assert (= x5589 (and (=> (and (not x9204) (and (= 0 x4209) (= x5833 x5939))) x7625) (=> (and (and (or (and (= x6499 x5776) (not x5776)) (and (and (= x354 (x8481 x3983)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x354) (= (x5783 (x2264 x6804) x1078 0) x7774) (>= x354 0) (= x7077 (< x354 x5009)) (= x3983 (x4000 x7774 2)) (= (not x7077) x6499)) x5776)) (and (= (x4000 x4636 1) x3964) (<= x6804 1461501637330902918203684832716283019655932542975) (= x4636 (x5783 (x2264 x5833) x1078 0)) (= x6804 (x8906 x3964)) (= (ite (< 1 x1) (not (= x6804 0)) (< 1 x1)) x5776) (>= x6804 0) (> 1461501637330902918203684832716283019655932542976 x6804))) x9204) x2235))))
(assert (x5765 x8114))
(assert (x9173 x7514))
(assert (x5699 x1024 x7360))
(assert (x9173 x364))
(assert (= (and x3656 x6459) x2748))
(assert (= x6422 (and x6044 (not x136))))
(assert (=> (>= 10000 x9151) (= (x2264 x9151) (x6664 x9151))))
(assert (x9173 x8207))
(assert (x9173 x1310))
(assert (= x1441 (and (=> (and (not x3427) (and (= 1 x2901) (= x8265 x4134))) x6775) (=> (and (and (= x8265 x3325) (= x1695 x6784) (= x3881 x1259)) x3427) x5631))))
(assert (x9173 x568))
(assert (x9173 x2340))
(assert (x5765 x8796))
(assert (= x2984 (or x2429 x2362)))
(assert (= (and x3592 x7273) x4414))
(assert (x9173 x3708))
(assert (x9173 x4516))
(assert (= x8633 x1421))
(assert (x9173 x2635))
(assert (x9173 x7006))
(assert (x9173 x8109))
(assert (x9173 x4752))
(assert (x9173 x586))
(assert (= x34 (x3373 (x2264 x34))))
(assert (= (and x7947 x6722) x4687))
(assert (x9173 x507))
(assert (x9173 x1024))
(assert (= x7949 (or x6262 x1574)))
(assert (x9173 x1543))
(assert (x9173 x5537))
(assert (= x1654 (and x4139 x3566)))
(assert (= x8199 (and x8463 x6683)))
(assert (= (=> (= x6661 true) x6209) x1963))
(assert (= (x3373 (x2264 x6352)) x6352))
(assert (x9173 x4279))
(assert (x9173 x7924))
(assert (= (and (not x8482) x791) x2570))
(assert (x9173 x2295))
(assert (= x8982 (=> (= x6755 x6624) x6023)))
(assert (x9173 x6789))
(assert (= (x2264 3842108676) (x6664 3842108676)))
(assert (= (and x250 x4025) x7400))
(assert (x9173 x7820))
(assert (x9173 x3330))
(assert (x5765 x9147))
(assert (x9173 x1988))
(assert (= (=> (and (= 0 x9149) (= x4041 x6254) (= x1973 x3650)) x8908) x716))
(assert (x9173 x203))
(assert (x9173 x6482))
(assert (x9173 x5089))
(assert (x9173 x7249))
(assert (= (and x3407 x3710) x6744))
(assert (= (and x1207 x7416) x4057))
(assert (x9173 x5875))
(assert (x9173 x1083))
(assert (= x4303 (and (not x7116) x4217)))
(assert (x9173 x7414))
(assert (x9173 x7673))
(assert (= x6041 (=> (and (or (and (not x4578) (= x2352 0)) (and (= x2352 x8228) x4578)) (and (= x3115 (x4000 x3362 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7114) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6920) (= (x4000 x8646 2) x1196) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6370) (= x8228 (x547 x3828)) (= x6216 (x5783 (x2264 x1499) x9128 0)) (= (x5783 (x2264 x3881) (x6664 158) 0) x9096) (= (x3835 x1196) x3572) (<= 0 x6370) (= (x4000 x550 1) x3828) (>= x3572 0) (>= x6920 0) (= x8646 (x5783 (x2264 x1499) x1695 0)) (<= x8228 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x9128 (x5783 (x2264 x3881) (x6664 154) 0)) (= x550 (x5783 (x2264 x1499) x9096 0)) (= (x4000 x6216 2) x6462) (= x1695 (x5783 (x2264 x3881) (x6664 155) 0)) (<= x3572 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7114 (x6732 x6462)) (>= x8228 0) (= x6370 (x5641 x550)) (= (< x6920 x8228) x4578) (>= x7114 0))) x4301)))
(assert (= (and (not x7048) x3388) x5794))
(assert (= x2149 (and x607 (not x4573))))
(assert (=> (<= x1493 10000) (= (x6664 x1493) (x2264 x1493))))
(assert (= (and x6274 (not x1875)) x2255))
(assert (x9173 x7894))
(assert (x9173 x2722))
(assert (x9173 x1684))
(assert (x2631 x7761))
(assert (= (and x2239 x6930) x5298))
(assert (x5765 x2194))
(assert (= x6276 (and x5082 (not x2161))))
(assert (= (and (not x4630) x8720) x8152))
(assert (= (and x3707 x6476) x9100))
(assert (x9173 x5419))
(assert (x9173 x1998))
(assert (= x6672 (and x3187 x8493)))
(assert (= x8782 (and (not x487) x3405)))
(assert (x9173 x1391))
(assert (= (or x2640 x2984) x224))
(assert (= (and x8453 x915) x5633))
(assert (= (x3373 (x4000 x9128 1)) (+ 1 (x3373 x9128))))
(assert (=> (>= 10000 x4356) (= (x6664 x4356) (x2264 x4356))))
(assert (= (and x2940 x1644) x2784))
(assert (x9173 x2034))
(assert (x9173 x3468))
(assert (x9173 x4802))
(assert (=> (>= 10000 x5480) (= (x6664 x5480) (x2264 x5480))))
(assert (x9173 x323))
(assert (= (and x4267 x5190) x4319))
(assert (x5765 x833))
(assert (x2631 x2966))
(assert (= (and x5401 x5993) x4878))
(assert (= x8762 (=> (and (= x7850 x3149) (= x5683 x3774)) x8315)))
(assert (= x192 (and x5648 x7427)))
(assert (x9173 x8125))
(assert (x9173 x4417))
(assert (x9173 x8304))
(assert (x9173 x5193))
(assert (= x7160 (or x2099 x2632)))
(assert (= (and x3982 x5128) x90))
(assert (x9173 x8954))
(assert (= x8594 (and x6946 x6950)))
(assert (= x9092 (and (not x3449) x1316)))
(assert (x9173 x573))
(assert (= (=> (= x8759 (= x6941 0)) (and (=> (and (not x8759) (= (or (and (> 32 x629) (= true (<= x629 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x629)) x2662)) (and (=> x2662 x8825) (=> (and (not x2662) (= 1 x6755)) x8982))) (=> x8759 x8825))) x8578))
(assert (= (and x3061 x5732) x6699))
(assert (= x4839 (or x900 x7543)))
(assert (x9173 x1474))
(assert (= x4896 (and x4497 (not x971))))
(assert (x9173 x3851))
(assert (x5765 x3177))
(assert (= x3011 (and x7597 x4744)))
(assert (= x2885 (and (not x7248) x1680)))
(assert (x9173 x5868))
(assert (x9173 x5666))
(assert (= (and x5097 (not x4)) x2308))
(assert (x9173 x7569))
(assert (= x7451 (and x6331 x8797)))
(assert (x9173 x3143))
(assert (x9173 x8922))
(assert (x9173 x7358))
(assert (x9173 x4566))
(assert (x9173 x2788))
(assert (= x6170 (and (not x2793) x8809)))
(assert (x9173 x1486))
(assert (x5765 x2921))
(assert (= (and (not x3109) x7554) x3526))
(assert (x2631 x471))
(assert (= (and x7202 x1478) x5486))
(assert (= (and x3442 x7196) x1275))
(assert (= x781 (or x4261 x6855 x8261 x3158 x3765 x4393)))
(assert (= x4529 (x3373 (x2264 x4529))))
(assert (= (and x6182 x6831) x3575))
(assert (x9173 x2132))
(assert (= (x3373 (x4000 x6556 1)) (+ 1 (x3373 x6556))))
(assert (x9173 x8796))
(assert (= (+ 2 (x3373 x5227)) (x3373 (x4000 x5227 2))))
(assert (x5765 x2937))
(assert (= (and x4630 x8720) x1726))
(assert (= x5944 (and x7402 x484)))
(assert (x9173 x708))
(assert (= (and x6123 x6558) x1047))
(assert (x9173 x8608))
(assert (= x6623 (and x8461 x4875)))
(assert (x9173 x5585))
(assert (= x1372 (and x250 (not x4025))))
(assert (= (x3373 (x6664 1857877511)) 1857877511))
(assert (x9173 x337))
(assert (= x2867 (and (not x2241) x8818)))
(assert (= x6544 (and x7050 (not x4052))))
(assert (= x2144 (and x1355 (not x411))))
(assert (x9173 x7719))
(assert (= x4815 (or x3013 x5343)))
(assert (=> (<= x8781 10000) (= (x2264 x8781) (x6664 x8781))))
(assert (= (and (not x5352) x1201) x5804))
(assert (x9173 x5464))
(assert (x9173 x4196))
(assert (x9173 x8166))
(assert (= x6388 (x3373 (x2264 x6388))))
(assert (= (and x6117 (not x4947)) x5230))
(assert (= (and x5679 x4040) x4677))
(assert (=> (>= 10000 x5358) (= (x2264 x5358) (x6664 x5358))))
(assert (x9173 x891))
(assert (= x6134 (=> (and (= x1966 x3794) (= x1975 0)) x5964)))
(assert (= x8784 (x3373 (x2264 x8784))))
(assert (= 2796547477 (x3373 (x6664 2796547477))))
(assert (= x2083 (x3373 (x2264 x2083))))
(assert (x5765 x5200))
(assert (x9173 x3787))
(assert (= (and x6538 x1044) x1122))
(assert (= (or x2714 x4561) x3974))
(assert (x9173 x6286))
(assert (x9173 x9176))
(assert (x9173 x1570))
(assert (= x2200 (and (not x4058) x618)))
(assert (= x5795 (x3373 (x2264 x5795))))
(assert (x9173 x9158))
(assert (= (or x9227 x35 (and x8601 x5306) (and x7147 (not x7700)) (and x2306 x5612) (and x4320 (not x3120))) x3172))
(assert (=> (>= 10000 x9147) (= (x6664 x9147) (x2264 x9147))))
(assert (= x8486 (and x245 x4199)))
(assert (= x4801 (and x4061 x1011)))
(assert (x9173 x8343))
(assert (= (and x4937 x5008) x4579))
(assert (x9173 x5036))
(assert (x5699 x403 x5039))
(assert (=> (<= x4427 10000) (= (x6664 x4427) (x2264 x4427))))
(assert (x9173 x4360))
(assert (= x6094 (and (not x6308) x5545)))
(assert (x9173 x5734))
(assert (= x8797 (and (not x52) x5041)))
(assert (x9173 x76))
(assert (x5765 x5377))
(assert (x5765 x3543))
(assert (x9173 x2611))
(assert (= (and x8566 x8411) x6575))
(assert (x5765 x940))
(assert (= (x6664 18446744073709551615) (x2264 18446744073709551615)))
(assert (= x1339 (and x5484 x6953)))
(assert (x9173 x2926))
(assert (x9173 x7531))
(assert (= (and x43 (not x3661)) x3206))
(assert (x9173 x2077))
(assert (x9173 x369))
(assert (= (and x1003 x4495) x3619))
(assert (= x1796 (=> (and (= (= x2966 0) x6363) (or x6363 (not x6363))) x4953)))
(assert (= x6070 (or x9182 x2938)))
(assert (x9173 x688))
(assert (= (and x5806 (not x2153)) x46))
(assert (= x5591 (and x5041 x52)))
(assert (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x3373 (x6664 50292402827334880472107169365697159231523039388532301717704428044325102813184))))
(assert (= (and x9019 x3458) x5347))
(assert (x9173 x8136))
(assert (x9173 x4804))
(assert (= (and (not x4828) x7813) x228))
(assert (= (=> (and (= x1528 x7965) (= x6129 0)) x3123) x4491))
(assert (x9173 x9037))
(assert (= x6657 (or x8678 x4659)))
(assert (x9173 x5818))
(assert (= (x3373 (x2264 x7544)) x7544))
(assert (x9173 x8884))
(assert (x9173 x1411))
(assert (x9173 x6972))
(assert (x9173 x4902))
(assert (x5765 x5362))
(assert (= (or x7175 (and x5727 x1654) (and x1107 (not x2175)) (and x6042 x1055) (and x6424 (not x4444)) x3695) x3958))
(assert (= x2448 (and x736 (not x8064))))
(assert (x9173 x6825))
(assert (x9173 x8929))
(assert (x9173 x2076))
(assert (x9173 x6849))
(assert (x9173 x184))
(assert (= (x3373 (x2264 x2964)) x2964))
(assert (x9173 x360))
(assert (x9173 x6365))
(assert (x2631 x6614))
(assert (x9173 x8680))
(assert (x4899 x2776))
(assert (= x5276 (or x6852 x3958)))
(assert (= (and (not x4818) x3752) x8589))
(assert (= (or x3421 x6330) x7663))
(assert (x9173 x2194))
(assert (= x998 (and (not x2742) x6205)))
(assert (x9173 x4622))
(assert (= (and x901 x2456) x8711))
(assert (= x7242 (and (not x5901) x3397)))
(assert (x9173 x5861))
(assert (x9173 x7548))
(assert (x9173 x6989))
(assert (= x9150 (and x4235 x2136)))
(assert (x9173 x9057))
(assert (= x1854 (or x4352 x2407)))
(assert (x9173 x3239))
(assert (x9173 x19))
(assert (= x2163 (x3373 (x2264 x2163))))
(assert (= (and x7135 x2531) x7238))
(assert (= x8764 (and (not x8810) x890)))
(assert (= (and x488 x2651) x8310))
(assert (x9173 x6294))
(assert (= x9088 (and x5185 x5017)))
(assert (x9173 x9094))
(assert (x9173 x5887))
(assert (= (x3373 (x2264 x4943)) x4943))
(assert (= (or (and x3030 (not x6464)) (and x4524 x149)) x5023))
(assert (= x3333 (and x7275 x7282)))
(assert (= (+ 2 (x3373 x3960)) (x3373 (x4000 x3960 2))))
(assert (= (=> (= (= x1765 0) x2037) (and (=> x2037 x8633) (=> (and (and (= (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3872) x3524) (= x8393 (x910 (+ x3524 x9202))) (= x2995 (or (> x4612 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x4612 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x4612)))) (= (x910 (+ x4612 31)) x3872)) (not x2037)) (and (=> (and x2995 (= x6661 true)) x6209) (=> (and (not x2995) (and (= x257 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8011)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8011) (= x8011 (x3425 x66)) (<= 0 x8011) (= (ite (< x257 x841) 1 0) x5465) (= (x6748 x4367 x5465) x6293) (= (ite (not x5562) 1 0) x4367) (= (x7715 x9202) x841) (= x5562 (= 0 x8011)) (= (= x6293 0) x4630))) (and (=> (and (and (= (mod (* x8011 x841) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x882) (= (x3912 x1048) x995) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x995) (= (ite (> x2155 x5335) 1 0) x2635) (<= 0 x995) (= (ite (not x5844) 1 0) x3969) (= (div x882 1000000000000000000) x3778) (= x2590 (x6748 x3969 x2635)) (= x2743 (= 0 x2590)) (= x5335 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x995)) (= (x4000 x66 2) x1048) (= (= 0 x995) x5844)) x4630) (and (=> (not x2743) x3931) (=> (and x2743 (and (= x3292 (div x3988 1000000000000000000)) (= x3988 (mod (* x2155 x995) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x3778 x3292) x4382))) (and (=> (and (= (> x3778 x3292) x7832) (not x4382)) (and (=> x7832 x3931) (=> (and (and (= x5228 (x2563 (- x3292 x3778))) (= x5228 x5546)) (not x7832)) x8702))) (=> (and x4382 (= 0 x5546)) x8702))))) (=> (not x4630) x3931))))))) x6547))
(assert (x9173 x1259))
(assert (= x8174 (x3373 (x2264 x8174))))
(assert (= (and (not x3675) x8464) x1383))
(assert (x9173 x1751))
(assert (= (and (not x4719) x7236) x4471))
(assert (x9173 x1773))
(assert (x9173 x1547))
(assert (= (+ (x3373 x6553) 2) (x3373 (x4000 x6553 2))))
(assert (=> (>= 10000 x519) (= (x2264 x519) (x6664 x519))))
(assert (x5765 x9178))
(assert (= x1200 (or x6327 x4628 x1117 x4338)))
(assert (= (and (not x8679) x4845) x2433))
(assert (= (=> (= x8054 (< x8399 x5546)) (and (=> (and (= 0 x7765) x8054) x280) (=> (and (= (> x5546 x8399) x4373) (not x8054)) (and (=> x4373 x3931) (=> (and (and (= x1034 x7765) (= x1034 (x2563 (- x8399 x5546)))) (not x4373)) x280))))) x8702))
(assert (= x2272 (=> (and (= (x4000 x6309 1) x2299) (= x6975 x2608) (= (x5783 (x2264 x560) x3119 0) x6309) (= (x4000 x2299 1) x7134) (= x560 x3874)) x3202)))
(assert (= x2546 (and (not x8080) x4945)))
(assert (x5765 x6449))
(assert (= x5533 (and (=> (and x9146 (and (and (= x2633 (x3489 x147)) (< x2633 1461501637330902918203684832716283019655932542976) (= x4392 (ite (< 1 x1) (not (= x2633 0)) (< 1 x1))) (= x3398 (x5783 (x2264 x6696) x4176 0)) (<= x2633 1461501637330902918203684832716283019655932542975) (>= x2633 0) (= x147 (x4000 x3398 1))) (or (and (not x4392) (= x4392 x7660)) (and x4392 (and (= (not x7670) x7660) (= (x4000 x3900 2) x7763) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1643) (= x3900 (x5783 (x2264 x2633) x4176 0)) (= x1643 (x4363 x7763)) (>= x1643 0) (= x7670 (> x786 x1643))))))) x6177) (=> (and (and (= x8373 0) (= x6696 x6449)) (not x9146)) x3926))))
(assert (x9173 x8037))
(assert (= x4901 (and (not x4493) x4970)))
(assert (= (or x5492 x9211 x7131) x5128))
(assert (= (=> (= (= x2807 0) x2683) (and (=> x2683 x8633) (=> (and (and (= x267 x2562) (= x7466 x5918) (= x294 x6523) (= x3552 x7709)) (not x2683)) x2976))) x8279))
(assert (x9173 x39))
(assert (= (and x1372 (not x6277)) x6820))
(assert (= (and (not x2925) x932) x3280))
(assert (= x3892 (or x5687 x8579 x9088 x5653)))
(assert (x9173 x4976))
(assert (x9173 x1623))
(assert (= (and (not x394) x5813) x2593))
(assert (= (and x3986 x1851) x6186))
(assert (=> (<= x7036 10000) (= (x6664 x7036) (x2264 x7036))))
(assert (x9173 x3800))
(assert (= x5358 (x3373 (x2264 x5358))))
(assert (x9173 x2067))
(assert (= x7539 (and (not x2029) x2461)))
(assert (=> (<= x2063 10000) (= (x2264 x2063) (x6664 x2063))))
(assert (= (and (not x2359) x537) x652))
(assert (x9173 x4030))
(assert (x9173 x6467))
(assert (x5765 x4602))
(assert (= (x3373 (x2264 x3539)) x3539))
(assert (x9173 x1945))
(assert (= x8772 (and x6087 x3262)))
(assert (= x1438 (and x349 x2634)))
(assert (= x3207 (or x2173 x3463)))
(assert (x9173 x7814))
(assert (= (and x4476 (not x3626)) x9210))
(assert (x9173 x8548))
(assert (= (and x1218 (not x213)) x6758))
(assert (x9173 x8266))
(assert (= (=> (and (= x7781 (ite (> x1 x295) (not (= 0 x1483)) (< x295 x1))) (or (and (and (or (and (and (<= 0 x8206) (<= x8206 1461501637330902918203684832716283019655932542975) (= x7503 x8206) (= (x1373 x7281) x8206) (= x7281 (x4000 x2855 1)) (> 1461501637330902918203684832716283019655932542976 x8206) (= x7973 x3460) (= (x910 (+ x8207 96)) x3460)) (not x8807)) (and x8807 (and (= x7973 x2843) (= x560 x7503) (= (x910 (+ x8207 96)) x2843)))) (and (>= 1461501637330902918203684832716283019655932542975 x848) (= x8807 (= 0 x848)) (< x848 1461501637330902918203684832716283019655932542976) (= (x9234 x2855) x848) (<= 0 x848))) (not x7781)) (and (and (and (>= x1385 0) (= x7708 (< 0 x8189)) (= (x2563 (- x1483 x1385)) x8189) (>= 1461501637330902918203684832716283019655932542975 x1385) (> 1461501637330902918203684832716283019655932542976 x1385) (= (x9234 x2855) x1385)) (or (and (not x7708) (and (= x7503 x1483) (= x7973 x3849) (= x3849 (x910 (+ x8207 96))))) (and x7708 (and (= x7785 x7973) (= (x8340 x7955) x4556) (= (x910 (+ 96 x8207)) x7785) (<= 0 x4556) (= (x5783 (x2264 x1483) x1299 0) x7955) (<= x4556 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x4556) (= x1483 x7503))))) x7781))) x600) x5152))
(assert (x9173 x8781))
(assert (= x2920 (and x1707 (not x729))))
(assert (x9173 x4108))
(assert (= (or x828 x7846) x6857))
(assert (= (and (not x3291) x635) x4853))
(assert (= x4559 (=> (and (or (and (and (and (< x5737 1461501637330902918203684832716283019655932542976) (= x5737 (x2490 x5235)) (<= x5737 1461501637330902918203684832716283019655932542975) (<= 0 x5737) (= (= x5737 0) x4934)) (or x4934 (and (not x4934) (and (= x8036 (x8909 x8961)) (>= x8036 0) (< x8036 1461501637330902918203684832716283019655932542976) (= (x4000 x5235 1) x8961) (>= 1461501637330902918203684832716283019655932542975 x8036))))) (not x65)) (and x65 (and (or (not x1132) (and (and (>= x7749 0) (= (x5783 (x2264 x2694) x1580 0) x5897) (> 1461501637330902918203684832716283019655932542976 x7749) (= (x1320 x5897) x7749) (>= 1461501637330902918203684832716283019655932542975 x7749)) x1132)) (and (= x1132 (> x7224 0)) (= x7224 (x2563 (- x2694 x4804))) (>= x4804 0) (> 1461501637330902918203684832716283019655932542976 x4804) (<= x4804 1461501637330902918203684832716283019655932542975) (= (x2490 x5235) x4804))))) (= x65 (ite (< x3723 x1) (not (= 0 x2694)) (< x3723 x1)))) x7398)))
(assert (= (and x2578 x6563) x99))
(assert (x9173 x6251))
(assert (x9173 x4170))
(assert (x9173 x1377))
(assert (= x7468 (and x1802 x5817)))
(assert (= (and x3210 x4174) x7231))
(assert (= (or x5315 (and (not x4280) x2551)) x3451))
(assert (x2631 x2792))
(assert (= (and x3307 (not x9195)) x737))
(assert (=> (<= x8932 10000) (= (x6664 x8932) (x2264 x8932))))
(assert (x9173 x820))
(assert (= 3842108676 (x3373 (x6664 3842108676))))
(assert (= (and x8791 x7182) x3501))
(assert (=> (<= x5931 10000) (= (x6664 x5931) (x2264 x5931))))
(assert (= x4207 (and x3754 x961)))
(assert (x9173 x7773))
(assert (= (=> (and (= x2123 x7965) (= 0 x6608)) x5234) x408))
(assert (x9173 x4594))
(assert (= x2347 (and x4910 (not x7309))))
(assert (=> (<= x1850 10000) (= (x6664 x1850) (x2264 x1850))))
(assert (x9173 x3921))
(assert (x2631 x5909))
(assert (= (and (not x8868) x3338) x3673))
(assert (= (and x7837 x6394) x5849))
(assert (= (or (and x227 x6840) (and x1089 x7329) x557 (and x3665 x1615) (and x1479 (not x6341)) (and x541 x8331) x5319 (and x3023 (not x8220)) x4621) x5854))
(assert (x9173 x5695))
(assert (= (x2264 3069361948) (x6664 3069361948)))
(assert (= x1479 (and x8220 x3023)))
(assert (= x4708 (or x7956 x8572 x2423 x913 x4687 x1740 x4282 x3255 x3540 x1276 x8150 x7097 x2972 x4664 x4115 x7677 x641 x55 x8152 x6545 x7084 x4014 x2682 x8209 x1160 x5094 x5530 x7341 x6699 x7400 x7026 x4619 x5994 x3701 x2043 x8823 x186 x7420 x6758 x5523 x5450 x3674 x9163 x7779 x2985 x5917 x4788 x4517 x6657 x6814 x5840 x1009 x6442 x8623 x5597 x5690 x6144 x238 x2527 x6947 x6879 x4513 x4960 x2905 x4368 x6660 x2051 x8424 x1227 x2841 x532 x7234 x1294 x5884 x7892)))
(assert (= (x3373 (x2264 x6449)) x6449))
(assert (= (and (=> (and x1082 (and (= (x5783 (x2264 x3881) (x6664 158) 0) x1987) (= (= x8344 0) x7529) (= x3362 (x5783 (x2264 x1499) x1987 0)) (= (= x8002 0) x8923) (= x7739 (ite (< x3178 x7726) 1 0)) (= x930 (ite (not x7529) 1 0)) (= x8002 (x6748 x930 x7739)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8344) (<= 0 x8344) (= x8344 (x3278 x3362)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8344) x3178))) (and (=> (and x8923 (and (= (mod (* x8344 x7726) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5164) (= x2979 (< x2893 x1194)) (= x1194 (div x5164 1000000000000000000)))) (and (=> (and x2979 (and (= (> x2893 115792089237316195423570985008687907853269984665640564039457) x914) (= (= 0 (ite x914 1 0)) x1092))) (and (=> (and (and (= x5638 (ite (< x8110 1000000000000000000) 1 0)) (= (= 0 x1775) x8760) (= x5069 (x6748 x4975 x5638)) (= (mod (* 1000000000000000000 x2893) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1775) (= x8110 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1775)) (= x5956 (= x5069 0)) (= (ite (not x8760) 1 0) x4975)) x1092) (and (=> (not x5956) x8973) (=> (and (and (= (< 0 x899) x6876) (= x7933 (mod (* x1775 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5956) (and (=> (not x6876) x4646) (=> (and x6876 (and (= (x4000 x3362 1) x2391) (= (< x6229 x8368) x8873) (= x7930 (div x6596 1000000000000000000)) (<= 0 x8368) (= x8368 (x2733 x2391)) (<= x8368 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div x7933 x899) x6596) (= x6229 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7930))))) (and (=> (and (and (= x7033 (> x2893 115792089237316195423570985008687907853269984665640564039457)) (= x6248 (x910 (+ x8368 x7930))) (= (= (ite x7033 1 0) 0) x8723)) (not x8873)) (and (=> (and (and (= (ite (not x7864) 1 0) x471) (= x7275 (= 0 x1472)) (= x1472 (x6748 x471 x8564)) (= (ite (< x4609 1000000000000000000) 1 0) x8564) (= x8945 (mod (* x2893 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x7864 (= 0 x8945)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8945) x4609)) x8723) (and (=> (not x7275) x5238) (=> (and x7275 (and (= (> x7726 0) x72) (= (mod (* x8945 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3676))) (and (=> (and x72 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8447) (= x8447 (x3278 x3362)) (= x6087 (< x8447 x4223)) (>= x8447 0) (= (div x3676 x7726) x9159) (= (div x9159 1000000000000000000) x4223))) (and (=> x6087 x3376) (=> (and (and (= x3284 x6248) (= (x2563 (- x8447 x4223)) x8972) (= x2230 x8972)) (not x6087)) x6041))) (=> (not x72) x7158))))) (=> (not x8723) x1752))) (=> x8873 x6721))))))) (=> (not x1092) x4349))) (=> (and (not x2979) (and (= (> x1194 115792089237316195423570985008687907853269984665640564039457) x4832) (= x8084 (= (ite x4832 1 0) 0)))) (and (=> (and x8084 (and (= x6923 (mod (* 1000000000000000000 x1194) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x339 (x6748 x5909 x2918)) (= (= x6923 0) x3796) (= (ite (> 1000000000000000000 x5938) 1 0) x2918) (= x8443 (= 0 x339)) (= x5909 (ite (not x3796) 1 0)) (= x5938 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6923)))) (and (=> (not x8443) x1386) (=> (and x8443 (and (= (> x899 0) x4641) (= x5568 (mod (* 1000000000000000000 x6923) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> (and x4641 (and (= (x4000 x3362 1) x4354) (= x574 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1053))) (= x1053 (div x1779 1000000000000000000)) (= (x2733 x4354) x4321) (= x1779 (div x5568 x899)) (= (> x4321 x574) x8768) (<= x4321 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4321))) (and (=> x8768 x6197) (=> (and (not x8768) (and (= x2273 (x910 (+ x4321 x1053))) (= x4495 (< x2893 x1194)))) (and (=> x4495 x261) (=> (and (and (= x2273 x3284) (= x2230 0)) (not x4495)) x6041))))) (=> (not x4641) x7565))))) (=> (not x8084) x4956))))) (=> (not x8923) x6737))) (=> (and (not x1082) (and (= x454 x6798) (= x7212 x2357) (= x2893 x282))) x252)) x5749))
(assert (x2631 x5638))
(assert (x9173 x2146))
(assert (=> (<= x5168 10000) (= (x6664 x5168) (x2264 x5168))))
(assert (x9173 x3446))
(assert (=> (<= x8254 10000) (= (x6664 x8254) (x2264 x8254))))
(assert (= x3554 (=> (and (= 0 x4811) (= x4606 x5289)) x3169)))
(assert (= x2990 (and x1637 (not x4113))))
(assert (x9173 x9015))
(assert (x9173 x3410))
(assert (=> (>= 10000 x4080) (= (x2264 x4080) (x6664 x4080))))
(assert (x9173 x5255))
(assert (= x5912 (=> (and (= 0 x7110) (= x3297 x5123)) x4889)))
(assert (= x5318 (and x6714 (not x7370))))
(assert (x4899 x7585))
(assert (= (and x6915 (not x6854)) x6329))
(assert (x9173 x944))
(assert (x5765 x8781))
(assert (x9173 x40))
(assert (x9173 x3629))
(assert (x9173 x8513))
(assert (=> (<= x4442 10000) (= (x6664 x4442) (x2264 x4442))))
(assert (x9173 x5452))
(assert (x9173 x8047))
(assert (x9173 x3282))
(assert (x9173 x1279))
(assert (x9173 x5092))
(assert (= x238 (or x3433 x2433)))
(assert (= (or x5889 x7509) x8227))
(assert (= x3376 x3931))
(assert (x9173 x1712))
(assert (x9173 x420))
(assert (= (x3373 (x2264 x3498)) x3498))
(assert (x9173 x3874))
(assert (= (or x2919 x7759 x6013 x5383 x3401 x5582) x4123))
(assert (x9173 x7397))
(assert (x5765 x7036))
(assert (= (x3373 (x6664 77053863734975077137548456399560439977311721439096602559221323163398253314048)) 77053863734975077137548456399560439977311721439096602559221323163398253314048))
(assert (= (and x4942 x2782) x557))
(assert (x9173 x5248))
(assert (x9173 x8165))
(assert (x9173 x3108))
(assert (= (and x1722 (not x1968)) x6689))
(assert (x5699 x4776 x42))
(assert (= 3266287495 (x3373 (x6664 3266287495))))
(assert (=> (<= x1908 10000) (= (x2264 x1908) (x6664 x1908))))
(assert (= x2511 (or x2196 x3724)))
(assert (x9173 x899))
(assert (= (and x5143 (not x5102)) x6888))
(assert (x9173 x3252))
(assert (x9173 x616))
(assert (= (or x5601 x571 x2442 x869) x3403))
(assert (x9173 x9149))
(assert (x9173 x8933))
(assert (= x1978 (and x1818 x1023)))
(assert (= x3880 (and x634 x2127)))
(assert (= (and x810 x4198) x5395))
(assert (= (+ 1 (x3373 x8053)) (x3373 (x4000 x8053 1))))
(assert (= (and x4525 x522) x4561))
(assert (x9173 x7364))
(assert (x9173 x2550))
(assert (x9173 x354))
(assert (x9173 x7507))
(assert (x9173 x1153))
(assert (= x6799 (or x1047 x7157)))
(assert (x2631 x2472))
(assert (x9173 x5992))
(assert (= (and x4733 x5780) x5440))
(assert (= (and x6055 (not x9146)) x8708))
(assert (x5765 x4093))
(assert (x9173 x5940))
(assert (= (+ (x3373 x942) 1) (x3373 (x4000 x942 1))))
(assert (= x6779 (or x5347 x6046)))
(assert (= x1637 (or x6557 x7653 x7076)))
(assert (= x979 (and x5775 x1667)))
(assert (= (and (not x3623) x760) x2726))
(assert (= x4324 (and x7515 (not x6441))))
(assert (x9173 x5226))
(assert (x9173 x2120))
(assert (= (and x7755 (not x4615)) x7420))
(assert (x9173 x1861))
(assert (x9173 x1903))
(assert (x9173 x6325))
(assert (= (and x8334 (not x3786)) x6003))
(assert (x9173 x2285))
(assert (x9173 x5291))
(assert (x9173 x2226))
(assert (x9173 x8777))
(assert (x5699 x2777 x4074))
(assert (= x7436 (or x7967 x5130)))
(assert (= x6803 (and (not x8347) x5473)))
(assert (x9173 x6460))
(assert (x9173 x4734))
(assert (= x3931 x9200))
(assert (x9173 x6465))
(assert (x9173 x4314))
(assert (x9173 x957))
(assert (= x3320 (and x5294 (not x5919))))
(assert (=> (<= x3221 10000) (= (x2264 x3221) (x6664 x3221))))
(assert (x9173 x1223))
(assert (x9173 x503))
(assert (x9173 x4060))
(assert (= (x6664 1608758631) (x2264 1608758631)))
(assert (= (and x1978 x8019) x2917))
(assert (x9173 x727))
(assert (x9173 x3021))
(assert (x9173 x1742))
(assert (= (+ (x3373 x7996) 2) (x3373 (x4000 x7996 2))))
(assert (= x3397 (or x8312 x8310)))
(assert (x9173 x5329))
(assert (= x3931 x4415))
(assert (x9173 x7111))
(assert (= x4381 (or x1494 x7069)))
(assert (x9173 x9229))
(assert (x9173 x3844))
(assert (x9173 x4794))
(assert (x9173 x1488))
(assert (= (and x5433 x1904) x7381))
(assert (x9173 x2275))
(assert (= (x2264 1313710058) (x6664 1313710058)))
(assert (= x5021 (and x2466 x3954)))
(assert (x9173 x8322))
(assert (= x2263 (and x1450 x6243)))
(assert (= (or x7200 x4941) x5368))
(assert (x9173 x3669))
(assert (= x5383 (and x2645 x5495)))
(assert (= (and x4853 x5810) x2547))
(assert (x9173 x2700))
(assert (x9173 x5529))
(assert (x9173 x6116))
(assert (x9173 x4470))
(assert (x9173 x3542))
(assert (x9173 x2364))
(assert (=> (<= x2138 10000) (= (x2264 x2138) (x6664 x2138))))
(assert (= (x3373 (x2264 x5711)) x5711))
(assert (x9173 x6807))
(assert (= (and x5794 (not x5239)) x4585))
(assert (=> (>= 10000 x22) (= (x6664 x22) (x2264 x22))))
(assert (x9173 x2994))
(assert (= x7920 (and x4910 x7309)))
(assert (= x6252 (and x810 (not x4198))))
(assert (= x8765 (or (and (not x9153) x6672) (and x7012 x8890) x7643 (and (not x8493) x3187) (and x9142 x7918) x5331)))
(assert (x9173 x8215))
(assert (x9173 x7165))
(assert (= (or x4381 x6415 x9131) x5327))
(assert (x9173 x4325))
(assert (x9173 x6976))
(assert (x5699 x6911 x4611))
(assert (= x4955 (and x4548 x3824)))
(assert (= x2899 (and (not x1188) x7318)))
(assert (=> (<= x5983 10000) (= (x6664 x5983) (x2264 x5983))))
(assert (= (and x6555 (not x2979)) x6202))
(assert (= x4638 (and (not x1616) x3847)))
(assert (x9173 x8420))
(assert (x9173 x5738))
(assert (x9173 x1723))
(assert (= x8439 (and x3290 (not x2339))))
(assert (x9173 x1622))
(assert (x9173 x788))
(assert (= x3463 (and (not x8766) x5540)))
(assert (x5765 x2756))
(assert (= x6108 (and x2973 x5127)))
(assert (x9173 x6533))
(assert (= x2761 (=> (= (= 0 x6414) x7782) (and (=> (and (not x7782) (and (= x6203 (or (and (= (<= x6286 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x6286 32)) (> x6286 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x910 (+ 31 x6286)) x1088) (= (x910 (+ x645 x1071)) x8590) (= x645 (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1088)))) (and (=> (and (not x6203) (and (= (ite (< x4044 x5171) x4044 x5171) x3990) (= x7423 (> x3990 0)) (= x5171 (x5170 x1071)))) (and (=> (not x7423) x9043) (=> (and x7423 (and (= x7309 (> x5837 0)) (>= x1322 0) (= x5837 (x2563 (- x3881 x1322))) (< x1322 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1322))) (and (=> (and x7309 (and (and (= x744 (x910 (+ 32 x5861))) (= x5861 (x910 (+ x8590 4))) (= x2393 (= x5084 x4668))) (and x2393 (and (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x4294) (> 1466279372 x3937) (= x3051 x6832) (not (= 117300739 x3937)) (not (< x3012 4)) (= (x6844 (x2264 x4668)) x9221) (> x9221 0) (< x3937 599290589) (= x3990 x2320) (= x3937 157198259) (= x3012 68) (= x6591 (x2563 (- x3012 4))) (= (or (and (= true (<= x6591 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x6591 64)) (> x6591 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x8104))))) (and (=> (and (not x8104) (and (= x5823 (= x6832 x3051)) (= x2809 x3051))) (and (=> (not x5823) x6978) (=> (and x5823 (and (= (x5783 (x2264 x7036) (x6664 2) 0) x5111) (= x8876 32) (= x2320 x2565) (= x1158 (x5783 (x2264 x3051) x5111 0)) (= 1 x1915))) x5560))) (=> x8104 x6978))) (=> (and (and (< x2639 1461501637330902918203684832716283019655932542976) (= x504 (x6844 (x2264 x2639))) (>= 1461501637330902918203684832716283019655932542975 x2639) (= x5812 (= x504 0)) (>= x2639 0) (= (x910 (+ x8590 4)) x785)) (not x7309)) (and (=> (and (and (= 4 x8737) (= (x6844 (x2264 x3881)) x2903) (< x3708 4294967296) (= x3940 (= x2903 0))) (not x5812)) (and (=> (and x3940 (= x6661 true)) x6209) (=> (and (not x3940) (and (= x6662 (x3516 (x2264 x3881))) (= x8508 (x3516 (x2264 x7036))) (= (and (>= x8508 x3990) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3990 x6662))) x164))) (and (=> (and x164 (and (= (= x3881 x5148) x7312) (= (- x6393 x3990) x5332) (< (+ x3990 x5953) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x3516 (x2264 x7036)) x6393) (= (x910 (+ x3990 x5953)) x4250) (= (x1356 (x2264 x3881)) x5953))) (and (=> (and x7312 (and (= x1536 (x6844 (x2264 x5148))) (= x8737 x2868) (= x1808 35417553099779373699389112480655434059402432070290151981503827724506945814528) (= x2868 4) (> x1536 0) (= x3852 (= 0 x3990)))) (and (=> (not x3852) x8825) (=> (and x3852 (and (not (< x3730 988262939)) (<= x1712 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x3730 988262939)) (not (= x3730 989455977)) (not (= x3730 1038142104)) (<= 0 x1712) (<= x4643 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4643) (= x3730 1313710058) (> 1856199391 x3730) (= (x5783 (x2264 x7036) (x6664 6) 0) x7574) (= (x1203 x6931) x4643) (< x3730 2217467699) (= x6931 (x5783 (x2264 x7036) (x6664 6) 0)) (= (< x4643 x1712) x2574) (not (> 4 x2868)) (= (x1203 x7574) x1712))) (and (=> (and (not x2574) (and (<= 0 x1068) (= (x2563 (- x4643 x1712)) x6497) (= x3691 (> x1068 x8657)) (<= x1068 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8657 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1712))))) (and (=> x3691 x8825) (=> (and (and (>= x1116 0) (= (x910 (+ x1068 x1712)) x5201) (>= 1461501637330902918203684832716283019655932542975 x1116) (< x1116 1461501637330902918203684832716283019655932542976) (= x4216 128) (= (= x1116 x4668) x509)) (not x3691)) (and (=> (and (and (= 599290589 x6208) (< 0 x3600) (= x3600 (x6844 (x2264 x4668))) (= x7078 (or (> x6493 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x6493) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6493) true)))) (= x7036 x8423) (= x6493 (x2563 (- x6145 4))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x85) (not (< x6208 599290589)) (= x6145 100) (= x6145 100) (= x4329 x5148) (not (> 4 x6145)) (< x6208 1466279372) (= x6620 x1712)) x509) (and (=> x7078 x5704) (=> (and (and (= x8423 x6989) (= x8918 (= x7036 x8423))) (not x7078)) (and (=> (and x8918 (and (= x4329 x6796) (= x7927 (= x5148 x4329)))) (and (=> (and x7927 (and (= (> x1712 x4692) x7811) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4692) (<= 0 x4692) (= x8700 (x5783 (x2264 x8423) (x6664 1) 0)) (= (x6570 x8700) x4692) (= x3189 x6620))) (and (=> (and (not x7811) (= (< x4692 x6620) x2560)) (and (=> (and (not x2560) (and (= x1555 (x5205 x1540)) (= (x2563 (- x4692 x6620)) x3736) (= x7363 (x5783 (x2264 x8423) (x6664 1) 0)) (= x1540 (x5783 (x2264 x4329) (x6664 1) 0)) (<= x1555 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1555 0) (= (> x1555 x6233) x4730) (= x6233 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6620))))) (and (=> (and (and (= x7225 (> x1555 x183)) (= x183 (x910 (+ x6620 x1555)))) (not x4730)) (and (=> x7225 x5704) (=> (and (and (= (x4936 x2237) x3253) (<= x3253 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4544 (> x6620 x3253)) (>= x3253 0) (= (x5783 (x2264 x5148) x9138 0) x2237) (= x9138 (x5783 (x2264 x8423) (x6664 2) 0))) (not x7225)) (and (=> x4544 x5704) (=> (and (= (< x3253 x6620) x8597) (not x4544)) (and (=> (and (and (= 32 x2775) (= 1 x1578) (= x2188 (x2563 (- x3253 x6620)))) (not x8597)) x7194) (=> x8597 x5704))))))) (=> x4730 x5704))) (=> x2560 x5704))) (=> x7811 x5704))) (=> (not x7927) x5704))) (=> (not x8918) x5704))))) (=> (and (not x509) (= x729 (= x1116 x5148))) (and (=> (and (not x729) (= x1142 (= x3605 x1116))) (and (=> (and (not x1142) (and (= x748 (= x1116 x1326)) (and (and (= x6015 x5148) (= (x2563 (- x7065 4)) x5691) (= (or (and (= true (<= x5691 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x5691 96)) (> x5691 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x6084) (= (x6844 (x2264 x1326)) x1126) (not (= x4862 405663989)) (< x4862 988262939) (< 0 x1126) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x8148) (not (< x7065 4)) (not (= 547091486 x4862)) (= x7036 x3817) (= x4862 599290589) (not (< x4862 405663989)) (< x4862 2217467699) (= x1712 x4622) (= 100 x7065) (= x7065 100)) x748))) (and (=> x6084 x6701) (=> (and (and (= x3829 (= x7036 x3817)) (= x699 x3817)) (not x6084)) (and (=> (and x3829 (and (= x3215 (= x6015 x5148)) (= x2226 x6015))) (and (=> (not x3215) x6701) (=> (and (and (= (x5783 (x2264 x3817) (x6664 5) 0) x1714) (= x4856 (x108 x1714)) (<= x4856 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4856) (= x37 (> x1712 x4856)) (= x7221 x4622)) x3215) (and (=> x37 x6701) (=> (and (not x37) (and (>= x2290 0) (= (< x2290 x4622) x4335) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2290) (= x7092 (x5783 (x2264 x3817) (x6664 5) 0)) (= x2290 (x108 x7092)))) (and (=> (and (not x4335) (and (= x5797 (x5783 (x2264 x6015) (x6664 5) 0)) (= (> x4817 x6206) x8064) (= (x7055 x5797) x4817) (>= x4817 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4817) (= x7454 (x2563 (- x2290 x4622))) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4622)) x6206))) (and (=> (and (and (= x9222 (x910 (+ x4622 x4817))) (= 1 x3147) (= x4406 1) (= 32 x1077)) (not x8064)) x642) (=> x8064 x6701))) (=> x4335 x6701))))))) (=> (not x3829) x6701))))) (=> (and (and (= x4095 100) (= x439 (x2563 (- x4095 4))) (= (or (and (= (<= x439 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x439)) (> x439 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1900) (= x5148 x7328) (< x8009 988262939) (not (< x4095 4)) (= x8009 599290589) (= x7036 x7283) (not (= 405663989 x8009)) (not (= 547091486 x8009)) (< 0 x5832) (not (> 405663989 x8009)) (= x4095 100) (= (x6844 (x2264 x3605)) x5832) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3327) (< x8009 2217467699) (= x1712 x5207)) x1142) (and (=> x1900 x7651) (=> (and (not x1900) (and (= x4094 (= x7036 x7283)) (= x2767 x7283))) (and (=> (and (and (= x7945 (= x7328 x5148)) (= x3028 x7328)) x4094) (and (=> (not x7945) x7651) (=> (and x7945 (and (= (x5783 (x2264 x7283) (x6664 5) 0) x8365) (<= x3312 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3633 x8365) x3312) (= x5207 x1112) (>= x3312 0) (= x6788 (< x3312 x1712)))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2829) (= (x3633 x2864) x2829) (<= 0 x2829) (= (x5783 (x2264 x7283) (x6664 5) 0) x2864) (= x5403 (> x5207 x2829))) (not x6788)) (and (=> x5403 x7651) (=> (and (not x5403) (and (= x6519 (x4258 x6589)) (= x6029 (> x6519 x3979)) (= x4645 (x2563 (- x2829 x5207))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6519) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5207)) x3979) (<= 0 x6519) (= x6589 (x5783 (x2264 x7328) (x6664 5) 0)))) (and (=> (and (and (= x5104 32) (= (x910 (+ x6519 x5207)) x2486) (= x6897 1) (= x7907 1)) (not x6029)) x2887) (=> x6029 x7651))))) (=> x6788 x7651))))) (=> (not x4094) x7651))))))) (=> (and (and (= x5057 x5148) (= (x6844 (x2264 x5148)) x6889) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5242) (and (> 96 x5242) (= (<= x5242 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x6573) (< 0 x6889) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x7814) (= x1696 100) (= x5242 (x2563 (- x1696 4))) (= x5888 x7036) (= x1712 x4794) (> 988262939 x6621) (not (> 4 x1696)) (> 2217467699 x6621) (not (= x6621 547091486)) (not (< x6621 405663989)) (= x1696 100) (not (= 405663989 x6621)) (= 599290589 x6621)) x729) (and (=> (and (and (= x7439 x5888) (= x5288 (= x7036 x5888))) (not x6573)) (and (=> (and (and (= (= x5057 x5148) x3365) (= x5280 x5057)) x5288) (and (=> (not x3365) x867) (=> (and x3365 (and (= (< x4591 x1712) x6102) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4591) (= x4794 x3282) (= (x5783 (x2264 x5888) (x6664 5) 0) x2229) (<= 0 x4591) (= x4591 (x6566 x2229)))) (and (=> (and (not x6102) (and (= x206 (x6566 x7049)) (<= 0 x206) (= x7049 (x5783 (x2264 x5888) (x6664 5) 0)) (= x4043 (< x206 x4794)) (<= x206 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x4043) (and (<= x7043 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4887 x5086) x7043) (= (x5783 (x2264 x5057) (x6664 5) 0) x5086) (= x2582 (< x9047 x7043)) (= x9047 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4794))) (= (x2563 (- x206 x4794)) x4182) (>= x7043 0))) (and (=> x2582 x867) (=> (and (and (= 1 x319) (= 1 x5215) (= (x910 (+ x4794 x7043)) x3173) (= 32 x3239)) (not x2582)) x4508))) (=> x4043 x867))) (=> x6102 x867))))) (=> (not x5288) x867))) (=> x6573 x867))))))))) (=> x2574 x8825))))) (=> (and (not x7312) (= (= x3881 x3605) x6808)) (and (=> (and x6808 (and (= x3197 4) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x7286) (> x4051 0) (= x3197 x8737) (= x4051 (x6844 (x2264 x3605))) (= (= x3990 0) x5293))) (and (=> (not x5293) x3066) (=> (and x5293 (and (= x1377 (x5457 x7672)) (= (x5457 x2403) x6214) (= 1313710058 x9021) (<= 0 x1377) (not (= 988262939 x9021)) (<= 0 x6214) (= x2403 (x5783 (x2264 x7036) (x6664 6) 0)) (not (> 988262939 x9021)) (<= x6214 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1038142104 x9021)) (not (> 4 x3197)) (= (x5783 (x2264 x7036) (x6664 6) 0) x7672) (< x9021 2217467699) (<= x1377 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1377 x6214) x9059) (not (= x9021 989455977)) (> 1856199391 x9021))) (and (=> x9059 x3066) (=> (and (not x9059) (and (= x2267 (x2563 (- x6214 x1377))) (= x2034 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1377))) (= x3288 (< x2034 x770)) (>= x770 0) (<= x770 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x3288 x3066) (=> (and (not x3288) (and (> 1461501637330902918203684832716283019655932542976 x1750) (= x117 (= x4668 x1750)) (= 128 x2061) (>= x1750 0) (>= 1461501637330902918203684832716283019655932542975 x1750) (= x7975 (x910 (+ x770 x1377))))) (and (=> (and x117 (and (= x1396 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x5047 0) (> 1466279372 x1786) (= x3850 x7036) (= 599290589 x1786) (= 100 x2548) (= x7371 (x2563 (- x2548 4))) (not (< x1786 599290589)) (= x1377 x5973) (not (> 4 x2548)) (= x2548 100) (= x3605 x1215) (= x1295 (or (and (> 96 x7371) (= (<= x7371 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7371))) (= (x6844 (x2264 x4668)) x5047))) (and (=> (and (and (= (= x7036 x3850) x8814) (= x4030 x3850)) (not x1295)) (and (=> (not x8814) x96) (=> (and (and (= x3613 (= x1215 x3605)) (= x1215 x416)) x8814) (and (=> (and x3613 (and (= (x5783 (x2264 x3850) (x6664 1) 0) x5281) (= x4766 x5973) (<= x8925 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8925 (x6570 x5281)) (<= 0 x8925) (= (< x8925 x1377) x1281))) (and (=> x1281 x96) (=> (and (= x21 (> x5973 x8925)) (not x1281)) (and (=> (and (and (= x809 (x5783 (x2264 x3850) (x6664 1) 0)) (= x3719 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5973))) (>= x880 0) (= (x5783 (x2264 x1215) (x6664 1) 0) x2592) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x880) (= (< x3719 x880) x1882) (= x880 (x2375 x2592)) (= x7125 (x2563 (- x8925 x5973)))) (not x21)) (and (=> x1882 x96) (=> (and (not x1882) (and (= x4269 (> x880 x2286)) (= (x910 (+ x5973 x880)) x2286))) (and (=> x4269 x96) (=> (and (not x4269) (and (= (x4936 x1199) x6489) (= (x5783 (x2264 x3850) (x6664 2) 0) x3827) (= x1235 (> x5973 x6489)) (<= x6489 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x6489 0) (= (x5783 (x2264 x3605) x3827 0) x1199))) (and (=> (and (not x1235) (= (> x5973 x6489) x1051)) (and (=> (and (not x1051) (and (= x9219 (x2563 (- x6489 x5973))) (= x798 32) (= 1 x6172))) x2477) (=> x1051 x96))) (=> x1235 x96))))))) (=> x21 x96))))) (=> (not x3613) x96))))) (=> x1295 x96))) (=> (and (not x117) (= x4774 (= x5148 x1750))) (and (=> (and x4774 (and (< x5625 988262939) (not (= x5625 547091486)) (> x3915 0) (= 599290589 x5625) (= x7865 100) (= x3221 x3605) (not (< x5625 405663989)) (not (> 4 x7865)) (= x4947 (or (> x7083 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7083) true) (< x7083 96)))) (< x5625 2217467699) (= x7036 x2368) (= x1377 x3884) (= 100 x7865) (= (x6844 (x2264 x5148)) x3915) (= (x2563 (- x7865 4)) x7083) (not (= x5625 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6704))) (and (=> (and (and (= (= x7036 x2368) x3341) (= x2322 x2368)) (not x4947)) (and (=> (not x3341) x2674) (=> (and (and (= x3221 x6261) (= (= x3605 x3221) x2314)) x3341) (and (=> (not x2314) x2674) (=> (and (and (= x4897 (x6566 x5714)) (= x3884 x7740) (<= 0 x4897) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4897) (= x5714 (x5783 (x2264 x2368) (x6664 5) 0)) (= (< x4897 x1377) x2165)) x2314) (and (=> x2165 x2674) (=> (and (not x2165) (and (<= 0 x6267) (= (x5783 (x2264 x2368) (x6664 5) 0) x1027) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6267) (= (x6566 x1027) x6267) (= x508 (< x6267 x3884)))) (and (=> (and (not x508) (and (= (x2563 (- x6267 x3884)) x8652) (= (< x4033 x9176) x2142) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9176) (= (x7168 x5842) x9176) (= x4033 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3884))) (= (x5783 (x2264 x3221) (x6664 5) 0) x5842) (<= 0 x9176))) (and (=> (and (not x2142) (and (= 1 x4596) (= (x910 (+ x9176 x3884)) x5903) (= 1 x1153) (= x2941 32))) x6051) (=> x2142 x2674))) (=> x508 x2674))))))))) (=> x4947 x2674))) (=> (and (not x4774) (= x4590 (= x1750 x3605))) (and (=> (and (and (> 988262939 x5972) (> x4018 0) (not (= 547091486 x5972)) (not (> 405663989 x5972)) (= x1377 x6240) (= x1312 100) (not (= 405663989 x5972)) (= x8048 x7036) (not (< x1312 4)) (= x3605 x632) (= x8015 (x2563 (- x1312 4))) (= 599290589 x5972) (= x4018 (x6844 (x2264 x3605))) (= x1312 100) (= x1600 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x7587 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8015) (and (< x8015 96) (= true (<= x8015 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (< x5972 2217467699)) x4590) (and (=> (and (and (= (= x8048 x7036) x6260) (= x8336 x8048)) (not x7587)) (and (=> (not x6260) x6603) (=> (and (and (= (= x3605 x632) x6504) (= x632 x2244)) x6260) (and (=> (not x6504) x6603) (=> (and x6504 (and (<= x526 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x526 (x3633 x6377)) (= (x5783 (x2264 x8048) (x6664 5) 0) x6377) (>= x526 0) (= x5066 x6240) (= (> x1377 x526) x5386))) (and (=> (and (and (= (x3633 x3222) x646) (<= 0 x646) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x646) (= x9035 (< x646 x6240)) (= (x5783 (x2264 x8048) (x6664 5) 0) x3222)) (not x5386)) (and (=> (and (not x9035) (and (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6240)) x5963) (= x9140 (x2563 (- x646 x6240))) (= x1143 (x8083 x232)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1143) (<= 0 x1143) (= x8858 (< x5963 x1143)) (= x232 (x5783 (x2264 x632) (x6664 5) 0)))) (and (=> (and (and (= (x910 (+ x1143 x6240)) x1086) (= x993 32) (= x4144 1) (= 1 x735)) (not x8858)) x80) (=> x8858 x6603))) (=> x9035 x6603))) (=> x5386 x6603))))))) (=> x7587 x6603))) (=> (and (not x4590) (and (and x836 (and (not (< x1814 405663989)) (< x1814 988262939) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x934) (> x588 0) (not (= x1814 405663989)) (= (x2563 (- x3094 4)) x8840) (= x7036 x6297) (= x588 (x6844 (x2264 x1326))) (not (> 4 x3094)) (= (or (> x8840 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x8840 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8840)))) x1220) (= x3605 x8631) (> 2217467699 x1814) (= x1814 599290589) (= x4228 x1377) (= 100 x3094) (= 100 x3094) (not (= x1814 547091486)))) (= x836 (= x1326 x1750)))) (and (=> x1220 x8718) (=> (and (and (= x1802 (= x6297 x7036)) (= x5985 x6297)) (not x1220)) (and (=> (not x1802) x8718) (=> (and x1802 (and (= x8631 x4214) (= (= x8631 x3605) x4854))) (and (=> (and (and (= (< x2106 x1377) x6850) (= (x5783 (x2264 x6297) (x6664 5) 0) x1435) (= x7548 x4228) (= (x108 x1435) x2106) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2106) (>= x2106 0)) x4854) (and (=> x6850 x8718) (=> (and (not x6850) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2473) (= x7260 (> x4228 x2473)) (= x3999 (x5783 (x2264 x6297) (x6664 5) 0)) (= (x108 x3999) x2473) (<= 0 x2473))) (and (=> (and (not x7260) (and (= x3962 (x2563 (- x2473 x4228))) (= x6559 (x5783 (x2264 x8631) (x6664 5) 0)) (= (> x6265 x1004) x5007) (<= x6265 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1004 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4228))) (= x6265 (x131 x6559)) (<= 0 x6265))) (and (=> (and (not x5007) (and (= x5869 1) (= x5818 1) (= (x910 (+ x4228 x6265)) x6251) (= x3985 32))) x8875) (=> x5007 x8718))) (=> x7260 x8718))))) (=> (not x4854) x8718))))))))))))))))))) (=> (and (not x6808) (and (= (= x1326 x3881) x2641) (and (and (= (= 0 x3990) x3996) (= x8065 (x6844 (x2264 x1326))) (= x8737 x5707) (= x5707 4) (= x1824 35417553099779373699389112480655434059402432070290151981503827724506945814528) (> x8065 0)) x2641))) (and (=> (not x3996) x6785) (=> (and x3996 (and (= x6529 1313710058) (= (< x146 x5544) x1213) (= (x5783 (x2264 x7036) (x6664 6) 0) x5561) (> 2217467699 x6529) (not (= 1038142104 x6529)) (not (= x6529 988262939)) (not (< x6529 988262939)) (>= x5544 0) (= x4386 (x5783 (x2264 x7036) (x6664 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x146) (not (> 4 x5707)) (<= 0 x146) (not (= x6529 989455977)) (= (x4457 x5561) x5544) (= x146 (x4457 x4386)) (<= x5544 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1856199391 x6529))) (and (=> x1213 x6785) (=> (and (not x1213) (and (<= 0 x5367) (= x5666 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5544))) (= (x2563 (- x146 x5544)) x611) (<= x5367 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4946 (> x5367 x5666)))) (and (=> (and (and (= x2337 128) (= x4670 (= x3252 x4668)) (<= 0 x3252) (= x9225 (x910 (+ x5544 x5367))) (>= 1461501637330902918203684832716283019655932542975 x3252) (< x3252 1461501637330902918203684832716283019655932542976)) (not x4946)) (and (=> (and (not x4670) (= x4139 (= x3252 x5148))) (and (=> (and (= (= x3252 x3605) x6219) (not x4139)) (and (=> (and x6219 (and (= (x2563 (- x2485 4)) x6619) (= x2398 x7036) (= 100 x2485) (< 0 x9223) (= x2485 100) (not (= 405663989 x9199)) (= x1326 x6121) (> 988262939 x9199) (not (> 405663989 x9199)) (= x3044 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x9199 2217467699) (not (> 4 x2485)) (= x9199 599290589) (= x5544 x4963) (not (= 547091486 x9199)) (= x4610 (or (and (= true (<= x6619 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x6619 96)) (> x6619 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x6844 (x2264 x3605)) x9223))) (and (=> x4610 x3140) (=> (and (and (= x2398 x6828) (= (= x2398 x7036) x7953)) (not x4610)) (and (=> (and x7953 (and (= x175 (= x1326 x6121)) (= x6121 x5314))) (and (=> (not x175) x3140) (=> (and x175 (and (= x4881 (> x5544 x7773)) (<= 0 x7773) (= (x3633 x2625) x7773) (= (x5783 (x2264 x2398) (x6664 5) 0) x2625) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7773) (= x6533 x4963))) (and (=> x4881 x3140) (=> (and (and (= (x5783 (x2264 x2398) (x6664 5) 0) x248) (>= x3823 0) (= (> x4963 x3823) x7742) (= x3823 (x3633 x248)) (<= x3823 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4881)) (and (=> x7742 x3140) (=> (and (and (= (< x7308 x8031) x690) (<= 0 x8031) (= x1338 (x2563 (- x3823 x4963))) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4963)) x7308) (= x8031 (x6397 x4753)) (= (x5783 (x2264 x6121) (x6664 5) 0) x4753) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8031)) (not x7742)) (and (=> x690 x3140) (=> (and (and (= x5369 1) (= x9220 (x910 (+ x8031 x4963))) (= 1 x3948) (= 32 x2265)) (not x690)) x3107))))))))) (=> (not x7953) x3140))))) (=> (and (and (and x819 (and (= x1326 x2929) (= x817 599290589) (> 2217467699 x817) (= x1239 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 547091486 x817)) (= (x6844 (x2264 x1326)) x7480) (< x817 988262939) (< 0 x7480) (= (x2563 (- x8488 4)) x7712) (not (= 405663989 x817)) (not (< x817 405663989)) (not (< x8488 4)) (= x8488 100) (= x6542 x5544) (= x136 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7712) true) (< x7712 96)) (> x7712 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x7036 x7916) (= 100 x8488))) (= (= x1326 x3252) x819)) (not x6219)) (and (=> x136 x3452) (=> (and (not x136) (and (= x7916 x8191) (= x2292 (= x7036 x7916)))) (and (=> (not x2292) x3452) (=> (and x2292 (and (= (= x1326 x2929) x6678) (= x2929 x8557))) (and (=> (and x6678 (and (= (x5783 (x2264 x7916) (x6664 5) 0) x1572) (= x6641 (x108 x1572)) (= x6542 x763) (<= x6641 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x6641) (= x614 (> x5544 x6641)))) (and (=> x614 x3452) (=> (and (and (= x5542 (< x2950 x6542)) (>= x2950 0) (= x2950 (x108 x1660)) (= x1660 (x5783 (x2264 x7916) (x6664 5) 0)) (<= x2950 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x614)) (and (=> x5542 x3452) (=> (and (not x5542) (and (= x279 (x5783 (x2264 x2929) (x6664 5) 0)) (>= x3820 0) (= (< x4479 x3820) x4328) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3820) (= x3820 (x1505 x279)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6542)) x4479) (= x7537 (x2563 (- x2950 x6542))))) (and (=> x4328 x3452) (=> (and (not x4328) (and (= 32 x7390) (= x2612 1) (= x8561 (x910 (+ x3820 x6542))) (= 1 x8851))) x2759))))))) (=> (not x6678) x3452))))))))) (=> (and (and (= x7278 (x6844 (x2264 x5148))) (= 599290589 x361) (= x2194 x7036) (not (> 405663989 x361)) (not (= x361 547091486)) (= x4710 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4982 100) (= x6700 (x2563 (- x4982 4))) (not (= x361 405663989)) (< x361 988262939) (= x5072 x1326) (= x540 x5544) (= x5727 (or (> x6700 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6700)) (< x6700 96)))) (not (< x4982 4)) (> 2217467699 x361) (< 0 x7278) (= 100 x4982)) x4139) (and (=> x5727 x2928) (=> (and (not x5727) (and (= x3853 x2194) (= x2175 (= x7036 x2194)))) (and (=> (not x2175) x2928) (=> (and x2175 (and (= x4444 (= x1326 x5072)) (= x6072 x5072))) (and (=> (not x4444) x2928) (=> (and x4444 (and (= (x6566 x7716) x1369) (<= x1369 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1369) (= x540 x2464) (= x7716 (x5783 (x2264 x2194) (x6664 5) 0)) (= x1055 (> x5544 x1369)))) (and (=> x1055 x2928) (=> (and (and (= (x5783 (x2264 x2194) (x6664 5) 0) x5790) (<= x3894 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3894) (= x4900 (> x540 x3894)) (= x3894 (x6566 x5790))) (not x1055)) (and (=> x4900 x2928) (=> (and (not x4900) (and (= (x5783 (x2264 x5072) (x6664 5) 0) x1591) (= (> x2538 x4279) x662) (<= x2538 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2538) (= x4279 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540))) (= (x4178 x1591) x2538) (= x430 (x2563 (- x3894 x540))))) (and (=> x662 x2928) (=> (and (not x662) (and (= x1488 1) (= (x910 (+ x540 x2538)) x6593) (= 1 x1428) (= x4777 32))) x2931))))))))))))))) (=> (and (and (> 1466279372 x5456) (not (> 4 x6851)) (= x135 x1326) (= 100 x6851) (= 599290589 x5456) (not (> 599290589 x5456)) (= x4602 x7036) (= x5544 x7368) (= x8135 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x6851) (= x9094 (x6844 (x2264 x4668))) (= x8494 (or (and (> 96 x4247) (= true (<= x4247 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4247 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 0 x9094) (= (x2563 (- x6851 4)) x4247)) x4670) (and (=> x8494 x2628) (=> (and (not x8494) (and (= x6141 x4602) (= (= x4602 x7036) x8774))) (and (=> (not x8774) x2628) (=> (and (and (= x135 x8954) (= x1736 (= x135 x1326))) x8774) (and (=> (not x1736) x2628) (=> (and x1736 (and (<= x1706 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1706) (= (< x1706 x5544) x6359) (= x1706 (x6570 x4867)) (= x4867 (x5783 (x2264 x4602) (x6664 1) 0)) (= x7368 x2926))) (and (=> x6359 x2628) (=> (and (not x6359) (= (> x7368 x1706) x2208)) (and (=> (and (and (= x23 (x2563 (- x1706 x7368))) (<= 0 x7928) (= x171 (> x7928 x5948)) (<= x7928 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x135) (x6664 1) 0) x7890) (= (x5783 (x2264 x4602) (x6664 1) 0) x5254) (= (x1120 x7890) x7928) (= x5948 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7368)))) (not x2208)) (and (=> (and (and (= x7414 (x910 (+ x7928 x7368))) (= (< x7414 x7928) x3438)) (not x171)) (and (=> (and (not x3438) (and (= (x5783 (x2264 x4602) (x6664 2) 0) x1500) (>= x2242 0) (= (x5783 (x2264 x1326) x1500 0) x3909) (= (> x7368 x2242) x772) (= (x4936 x3909) x2242) (<= x2242 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x772) (= x3786 (< x2242 x7368))) (and (=> x3786 x2628) (=> (and (not x3786) (and (= 32 x9004) (= 1 x3821) (= (x2563 (- x2242 x7368)) x3145))) x5224))) (=> x772 x2628))) (=> x3438 x2628))) (=> x171 x2628))) (=> x2208 x2628))))))))))))) (=> x4946 x6785))))))))))) (=> (and (not x164) (= 0 x7701)) x2637))))) (=> (and (= true x6661) x5812) x6209))))))) (=> (and (= true x6661) x6203) x6209))) (=> x7782 x8633)))))
(assert (= x4440 (and x7903 (not x1076))))
(assert (= (=> (and (= 0 x3147) (= x1077 x9184)) x642) x6701))
(assert (x9173 x395))
(assert (x9173 x4200))
(assert (x9173 x2762))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x3373 (x6664 115792089237316195423570985008687907853269984665640564039457))))
(assert (= (and x3307 x9195) x6557))
(assert (x9173 x2101))
(assert (x9173 x1338))
(assert (= (x3373 (x4000 x2112 1)) (+ 1 (x3373 x2112))))
(assert (=> (<= x2397 10000) (= (x6664 x2397) (x2264 x2397))))
(assert (= (x3373 (x6664 2929553584)) 2929553584))
(assert (x9173 x8341))
(assert (=> (>= 10000 x5057) (= (x2264 x5057) (x6664 x5057))))
(assert (x9173 x1876))
(assert (= 2023533118 (x3373 (x6664 2023533118))))
(assert (x9173 x2648))
(assert (x9173 x6195))
(assert (= (and x7408 x2274) x3289))
(assert (=> (>= 10000 x5148) (= (x6664 x5148) (x2264 x5148))))
(assert (x5765 x7328))
(assert (x9173 x34))
(assert (x9173 x3528))
(assert (= x2652 (x3373 (x2264 x2652))))
(assert (x9173 x8122))
(assert (x9173 x496))
(assert (= (and x5563 x3764) x4948))
(assert (x9173 x9049))
(assert (= (or x4181 x8989) x572))
(assert (= (or x5045 x7340 x4165 x6686 x6843 x8544 x4167 x8790 x5632) x8451))
(assert (= (or x2784 x4522 x2832 x4256 x4822) x4004))
(assert (x9173 x5273))
(assert (= (and x967 (not x9230)) x5199))
(assert (x9173 x1937))
(assert (x5765 x5253))
(assert (x9173 x1093))
(assert (x9173 x3897))
(assert (x9173 x1587))
(assert (x9173 x3552))
(assert (x9173 x868))
(assert (= (and x6235 x2873) x687))
(assert (= (+ (x3373 x2021) 1) (x3373 (x4000 x2021 1))))
(assert (x9173 x2453))
(assert (x9173 x5742))
(assert (x9173 x7043))
(assert (= x9168 (and x6380 (not x5782))))
(assert (= x6144 (and x2331 x3580)))
(assert (= (and (not x2372) x3779) x2972))
(assert (x9173 x7997))
(assert (x9173 x3409))
(assert (x9173 x6457))
(assert (= (=> (and (= (x5783 (x2264 x560) x1299 0) x4761) (= (x4000 x4761 1) x4454) (= x2091 x8207) (= x7332 x560) (= x306 (x4000 x4454 1))) x1073) x3399))
(assert (= x1603 (and x1122 x4337)))
(assert (x9173 x1071))
(assert (= x6741 (and x6176 (not x4554))))
(assert (= (x3373 (x2264 x3221)) x3221))
(assert (=> (>= 10000 x1595) (= (x2264 x1595) (x6664 x1595))))
(assert (x9173 x8045))
(assert (x9173 x2893))
(assert (=> (>= 10000 x6388) (= (x2264 x6388) (x6664 x6388))))
(assert (= (and x4506 x8324) x8255))
(assert (= x3701 (or x6439 x3619)))
(assert (x9173 x2273))
(assert (x9173 x2230))
(assert (=> (<= x2194 10000) (= (x6664 x2194) (x2264 x2194))))
(assert (= x4929 (and x7264 (not x7603))))
(assert (x9173 x2894))
(assert (= x4602 (x3373 (x2264 x4602))))
(assert (x9173 x1858))
(assert (= (and (not x4337) x1122) x356))
(assert (= 2691771752 (x3373 (x6664 2691771752))))
(assert (= (+ (x3373 x8787) 2) (x3373 (x4000 x8787 2))))
(assert (x9173 x5032))
(assert (x2631 x1991))
(assert (x9173 x4542))
(assert (= x9178 (x3373 (x2264 x9178))))
(assert (x9173 x637))
(assert (x9173 x7161))
(assert (x9173 x3475))
(assert (x9173 x6535))
(assert (x9173 x6740))
(assert (= x1345 (x3373 (x2264 x1345))))
(assert (x9173 x4870))
(assert (= x6993 (x3373 (x2264 x6993))))
(assert (x9173 x1270))
(assert (x5765 x6015))
(assert (= (x3373 (x2264 x5931)) x5931))
(assert (= x5495 (and x4103 (not x7470))))
(assert (x9173 x2818))
(assert (= (or x996 x8157) x4502))
(assert (= x465 (and (not x8759) x3488)))
(assert (= x1398 (x3373 (x2264 x1398))))
(assert (= x1614 (=> (and (= x2231 0) (= x6580 x1939)) x8289)))
(assert (x9173 x7025))
(assert (= (+ 1 (x3373 x2449)) (x3373 (x4000 x2449 1))))
(assert (x9173 x9021))
(assert (x2631 x873))
(assert (= x3744 (and x5540 x8766)))
(assert (x5765 x4080))
(assert (x9173 x9091))
(assert (= (x3373 (x2264 x3455)) x3455))
(assert (= x4628 (and (not x7216) x46)))
(assert (= x8971 (and x5789 x5535)))
(assert (x5765 x5931))
(assert (= (and (not x7078) x6691) x4011))
(assert (x9173 x2053))
(assert (= (and (not x1929) x4795) x4546))
(assert (= (and (not x455) x3822) x4019))
(assert (x9173 x8800))
(assert (x9173 x2044))
(assert (=> (>= 10000 x6) (= (x6664 x6) (x2264 x6))))
(assert (x9173 x5559))
(assert (x9173 x6342))
(assert (x9173 x8046))
(assert (x9173 x6999))
(assert (x9173 x5900))
(assert (x9173 x7598))
(assert (x5765 x6622))
(assert (x9173 x1214))
(assert (= (=> (and (= x5104 x9184) (= 0 x7907)) x2887) x7651))
(assert (= x7175 (and x4449 x4900)))
(assert (= (and x8915 x4948) x1597))
(assert (= (or x8394 x4915) x7591))
(assert (= (=> (and (= x5613 x4713) (= x8540 x570)) x5968) x1234))
(assert (x9173 x3790))
(assert (x9173 x8446))
(assert (= x4427 (x3373 (x2264 x4427))))
(assert (= (x3373 (x2264 x2335)) x2335))
(assert (= (and x6163 x1882) x8016))
(assert (= x960 (=> (and (= x3542 x3254) (= x1646 x1965)) x3865)))
(assert (= x246 (or (and (not x2258) x5655) x734)))
(assert (x9173 x877))
(assert (= (=> (and (= 0 x8400) (= x1303 x4798)) x8239) x5078))
(assert (=> (>= 10000 x6804) (= (x2264 x6804) (x6664 x6804))))
(assert (= (and x9228 (not x4826)) x2783))
(assert (x9173 x2746))
(assert (= (x3373 (x2264 x1903)) x1903))
(assert (= (=> (and (= x2696 x577) (= x2349 x4470)) x1829) x406))
(assert (= x8633 x6392))
(assert (x9173 x9218))
(assert (= (and x7807 (not x2960)) x2890))
(assert (=> (<= x6972 10000) (= (x2264 x6972) (x6664 x6972))))
(assert (= x1989 (and (not x4885) x4512)))
(assert (=> (>= 10000 x8741) (= (x2264 x8741) (x6664 x8741))))
(assert (= (and (=> (and (and (= x2357 x1420) (= x8669 x6798) (= x393 x282)) (not x4944)) x252) (=> (and (and (= (x5783 (x2264 x3881) (x6664 158) 0) x5064) (= (x6748 x6614 x2402) x7812) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2467) (= (= 0 x2467) x7533) (= (x2017 x2935) x2467) (= x6614 (ite (not x7533) 1 0)) (= x8498 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2467)) (= x2935 (x5783 (x2264 x4396) x5064 0)) (= (= 0 x7812) x5550) (= (ite (< x8498 x7726) 1 0) x2402) (<= 0 x2467)) x4944) (and (=> (not x5550) x6737) (=> (and x5550 (and (= (mod (* x7726 x2467) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x7567) (= x1569 (< x393 x8445)) (= x8445 (div x7567 1000000000000000000)))) (and (=> (and (and (= x8117 (= (ite x4985 1 0) 0)) (= (< 115792089237316195423570985008687907853269984665640564039457 x8445) x4985)) (not x1569)) (and (=> (not x8117) x4956) (=> (and x8117 (and (= (x6748 x6894 x6921) x7524) (= (mod (* 1000000000000000000 x8445) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4859) (= x3305 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4859)) (= (= 0 x7524) x1331) (= (ite (not x6600) 1 0) x6894) (= (ite (> 1000000000000000000 x3305) 1 0) x6921) (= x6600 (= x4859 0)))) (and (=> (not x1331) x1386) (=> (and x1331 (and (= (< 0 x899) x956) (= (mod (* x4859 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x8786))) (and (=> (not x956) x7565) (=> (and (and (= x9107 (x1124 x6011)) (= x9169 (div x8426 1000000000000000000)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9169)) x2994) (= x8426 (div x8786 x899)) (>= x9107 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9107) (= x6011 (x4000 x2935 1)) (= (< x2994 x9107) x2923)) x956) (and (=> x2923 x6197) (=> (and (and (= (x910 (+ x9169 x9107)) x780) (= (> x8445 x393) x8350)) (not x2923)) (and (=> (and (and (= x5016 0) (= x2040 (x2563 (- x393 x8445))) (= x2893 x2040) (= x780 x1861)) (not x8350)) x8267) (=> x8350 x261))))))))))) (=> (and (and (= x9216 (= (ite x1052 1 0) 0)) (= (> x393 115792089237316195423570985008687907853269984665640564039457) x1052)) x1569) (and (=> (not x9216) x4349) (=> (and (and (= (= x8898 0) x2151) (= (ite (not x2151) 1 0) x4776) (= (= 0 x5374) x2024) (= (x6748 x4776 x42) x5374) (= x4121 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8898)) (= (ite (< x4121 1000000000000000000) 1 0) x42) (= x8898 (mod (* 1000000000000000000 x393) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x9216) (and (=> (not x2024) x8973) (=> (and x2024 (and (= x8130 (< 0 x899)) (= x9037 (mod (* x8898 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> (and x8130 (and (= x4347 (< x6434 x4805)) (= x8670 (x4000 x2935 1)) (>= x4805 0) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4276)) x6434) (= x4805 (x1124 x8670)) (= x4276 (div x491 1000000000000000000)) (<= x4805 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div x9037 x899) x491))) (and (=> (and (and (= x2076 (x910 (+ x4276 x4805))) (= x8270 (= 0 (ite x3622 1 0))) (= (< 115792089237316195423570985008687907853269984665640564039457 x393) x3622)) (not x4347)) (and (=> (and x8270 (and (= x6880 (= 0 x2121)) (= x7989 (= x8635 0)) (= x142 (ite (< x517 1000000000000000000) 1 0)) (= x8635 (x6748 x6457 x142)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2121) x517) (= x6457 (ite (not x6880) 1 0)) (= (mod (* x393 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2121))) (and (=> (and (and (= x8164 (> x7726 0)) (= (mod (* 1000000000000000000 x2121) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x355)) x7989) (and (=> (not x8164) x7158) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5158) (= x2561 (div x3766 1000000000000000000)) (= (x2017 x2935) x5158) (= (< x5158 x2561) x441) (= (div x355 x7726) x3766) (<= 0 x5158)) x8164) (and (=> (and (and (= x5016 x2326) (= 0 x2893) (= x2076 x1861) (= (x2563 (- x5158 x2561)) x2326)) (not x441)) x8267) (=> x441 x3376))))) (=> (not x7989) x5238))) (=> (not x8270) x1752))) (=> x4347 x6721))) (=> (not x8130) x4646)))))))))))) x3368))
(assert (x9173 x8952))
(assert (= (x3373 (x6664 3047081080)) 3047081080))
(assert (x9173 x5762))
(assert (x9173 x2543))
(assert (x9173 x6674))
(assert (x9173 x491))
(assert (x9173 x7738))
(assert (x9173 x8399))
(assert (= (x3373 (x2264 x632)) x632))
(assert (= x8145 (=> (and (or (and x7270 (= x8574 x3231)) (and (= x3231 0) (not x7270))) (and (<= 0 x6920) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6920) (= (< x6920 x8574) x7270))) x5137)))
(assert (= (and x6932 x5796) x7983))
(assert (= 1523576871 (x3373 (x6664 1523576871))))
(assert (= x5531 (and x4450 x4369)))
(assert (= (and x5231 (not x6971)) x8801))
(assert (x9173 x2910))
(assert (x9173 x6934))
(assert (x9173 x4322))
(assert (x9173 x3993))
(assert (= (x3373 (x4000 x3598 1)) (+ (x3373 x3598) 1)))
(assert (x9173 x6074))
(assert (=> (>= 10000 x8321) (= (x6664 x8321) (x2264 x8321))))
(assert (x9173 x4238))
(assert (= (or x3416 x515) x1456))
(assert (x9173 x5335))
(assert (= x4824 (and x875 x3201)))
(assert (= (and x5702 x2010) x402))
(assert (x9173 x5258))
(assert (x9173 x3523))
(assert (x9173 x8773))
(assert (= (and x228 x1583) x2492))
(assert (x9173 x8834))
(assert (= (and x6663 x3464) x718))
(assert (= x1819 (and x236 x9118)))
(assert (= x6749 (and x9189 x7190)))
(assert (= x6095 (and (not x8873) x5600)))
(assert (=> (<= x7345 10000) (= (x2264 x7345) (x6664 x7345))))
(assert (= x1864 (and x3474 x956)))
(assert (x9173 x7712))
(assert (x9173 x339))
(assert (x9173 x5090))
(assert (= (+ 1 (x3373 x6715)) (x3373 (x4000 x6715 1))))
(assert (= (or x3157 x82 x7521 x9075 x4407 x1845) x3569))
(assert (x9173 x1340))
(assert (=> (<= x6164 10000) (= (x2264 x6164) (x6664 x6164))))
(assert (x2631 x2451))
(assert (=> (>= 10000 x3051) (= (x6664 x3051) (x2264 x3051))))
(assert (x9173 x517))
(assert (x9173 x1544))
(assert (x9173 x4125))
(assert (= x4109 (or x4383 x377)))
(assert (= (and x2058 x2181) x26))
(assert (= x692 (and x3407 (not x3710))))
(assert (x9173 x4909))
(assert (= (x3373 (x4000 x7495 1)) (+ 1 (x3373 x7495))))
(assert (x9173 x423))
(assert (x9173 x9068))
(assert (x9173 x4612))
(assert (x9173 x1728))
(assert (= (and x8525 (not x3472)) x8964))
(assert (= (and (not x4505) x3431) x7694))
(assert (= x7795 (and x2958 (not x2647))))
(assert (= x6724 (and x5554 x1546)))
(assert (= x1677 (=> (and (= x2441 x1805) (= x5149 x384)) x4420)))
(assert (= (and (not x7601) x5368) x2043))
(assert (x9173 x8894))
(assert (x5765 x1483))
(assert (= (=> (and (= x6926 x4086) (= x7649 0)) x6581) x3735))
(assert (x9173 x2193))
(assert (= x5731 (=> (and (= x8343 0) (= x3794 x4314)) x2661)))
(assert (= x5275 (=> (= x6026 (= 0 x920)) (and (=> (and (= x5748 (or (> x6629 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x6629 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x6629 32)))) (not x6026)) (and (=> (and (not x5748) (and (= x3668 1) (= x4076 32))) x2675) (=> x5748 x7642))) (=> x6026 x7642)))))
(assert (x5765 x2397))
(assert (x9173 x2))
(assert (x9173 x1619))
(assert (= x2224 (and x6858 x8971)))
(assert (= x7376 (and x404 x378)))
(assert (x9173 x2494))
(assert (= (x6664 3266287495) (x2264 3266287495)))
(assert (= x5744 (and x8951 x6527)))
(assert (= x5908 (and (not x6065) x5519)))
(assert (= (x3373 (x2264 x8266)) x8266))
(assert (= (and x5321 x9101) x4338))
(assert (= x5891 (x3373 (x2264 x5891))))
(assert (= (or x4546 x8416) x3509))
(assert (= x3401 (and x5701 x8028)))
(assert (x9173 x6829))
(assert (x9173 x7479))
(assert (x9173 x5539))
(assert (= x3810 (or x4066 x4468)))
(assert (= (x3373 (x2264 x730)) x730))
(assert (= x6731 (and x3359 x5043)))
(assert (= (or x475 x7523) x3053))
(assert (=> (<= x3641 10000) (= (x6664 x3641) (x2264 x3641))))
(assert (x9173 x881))
(assert (x9173 x640))
(assert (= (x3373 (x2264 x7958)) x7958))
(assert (x9173 x1691))
(assert (x9173 x2322))
(assert (= (and (not x2205) x1254) x3235))
(assert (= x2718 x3931))
(assert (= x3256 (=> (= x2827 (= x7114 x78)) (and (=> x2827 x6185) (=> (and (not x2827) (= x3611 (< 0 x7114))) (and (=> (and (and (<= x7919 1461501637330902918203684832716283019655932542975) (= (x4000 x8697 1) x3697) (>= x7919 0) (= x8738 (x5783 (x2264 x1499) x9128 0)) (>= x4119 0) (= (x6732 x3697) x4119) (= x3315 (= 0 x4119)) (>= x7056 0) (= (x4000 x8738 1) x8697) (= x7056 (x8435 x8697)) (> 1461501637330902918203684832716283019655932542976 x7919) (<= x4119 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x7056 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x7056) (= x7919 (x8079 x8738))) x3611) (and (=> x3315 x4298) (=> (and (not x3315) (and (= (= 0 x7919) x315) (or (and (and (= x6773 (x4000 x9203 1)) (= (x5783 (x2264 x7919) x9128 0) x9203)) (not x315)) (and x315 (= (x4000 x9128 1) x4062))))) x6496))) (=> (not x3611) x7622)))))))
(assert (= (+ (x3373 x2299) 1) (x3373 (x4000 x2299 1))))
(assert (x9173 x5338))
(assert (= x346 (=> (and (= x4890 x5929) (= x987 x1282)) x7671)))
(assert (= x2056 (x3373 (x2264 x2056))))
(assert (= (+ (x3373 x4819) 1) (x3373 (x4000 x4819 1))))
(assert (x9173 x9107))
(assert (x9173 x4501))
(assert (x9173 x3630))
(assert (= x7644 (or (and (not x4190) x8390) x3959)))
(assert (= (and x6354 x3273) x4132))
(assert (= (x3373 (x6664 2217467699)) 2217467699))
(assert (x2631 x3872))
(assert (= x2889 (and x3940 x8021)))
(assert (= (and x8227 (not x8351)) x671))
(assert (= x5194 (and x9188 (not x3062))))
(assert (=> (<= x3817 10000) (= (x6664 x3817) (x2264 x3817))))
(assert (= (and x7525 x8867) x955))
(assert (x9173 x3366))
(assert (=> (>= 10000 x7056) (= (x2264 x7056) (x6664 x7056))))
(assert (= (x2264 405663989) (x6664 405663989)))
(assert (= x6972 (x3373 (x2264 x6972))))
(assert (x9173 x2312))
(assert (= x2857 (and x3244 x6499)))
(assert (= (and x8270 x1665) x7485))
(assert (= x837 (and x952 x7215)))
(assert (= (and (not x6562) x3917) x5637))
(assert (= x7084 (or x9027 x3317)))
(assert (x9173 x7519))
(assert (x9173 x4216))
(assert (x9173 x8736))
(assert (=> (>= 10000 x4195) (= (x2264 x4195) (x6664 x4195))))
(assert (=> (<= x1535 10000) (= (x2264 x1535) (x6664 x1535))))
(assert (= (and x757 x7783) x4009))
(assert (x9173 x549))
(assert (= (and (=> (and (and (= x4465 x6097) (= x3110 x688)) (not x3992)) x1036) (=> (and (and (= (ite (not x344) 1 0) x7424) (= (ite (< x184 x1253) 1 0) x7054) (= x5924 (x6748 x7424 x7054)) (= (= x56 0) x344) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x56) (= (= x5924 0) x1830) (= x5522 (x4000 x66 1)) (= x56 (x443 x5522)) (<= 0 x56) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x56) x184)) x3992) (and (=> (not x1830) x3931) (=> (and (and (= x4322 (mod (* x1253 x56) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< x4465 x8391) x2973) (= (div x4322 1000000000000000000) x8391)) x1830) (and (=> (and x2973 (and (= x71 (> x4465 115792089237316195423570985008687907853269984665640564039457)) (= x1096 (= (ite x71 1 0) 0)))) (and (=> (not x1096) x3931) (=> (and x1096 (and (= x2011 (ite (< x9145 1000000000000000000) 1 0)) (= (ite (not x6054) 1 0) x2665) (= x7511 (= x3436 0)) (= (x6748 x2665 x2011) x3436) (= (mod (* x4465 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5436) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5436) x9145) (= (= 0 x5436) x6054))) (and (=> (and x7511 (and (= x98 (> x1253 0)) (= (mod (* x5436 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3718))) (and (=> (not x98) x4551) (=> (and (and (<= 0 x2358) (= x1815 (< x2358 x6239)) (= (x443 x5522) x2358) (= (div x1127 1000000000000000000) x6239) (<= x2358 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div x3718 x1253) x1127)) x98) (and (=> (and (and (= (= 0 (ite x2221 1 0)) x1641) (= (< 115792089237316195423570985008687907853269984665640564039457 x4465) x2221) (= (x2563 (- x2358 x6239)) x2346)) (not x1815)) (and (=> (not x1641) x3931) (=> (and (and (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2550) x5859) (= x4725 (ite (> 1000000000000000000 x5859) 1 0)) (= x5370 (x6748 x2184 x4725)) (= x2184 (ite (not x341) 1 0)) (= (mod (* 1000000000000000000 x4465) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2550) (= x341 (= x2550 0)) (= x6328 (= 0 x5370))) x1641) (and (=> (and (and (= x4487 (> x7528 0)) (= (mod (* x2550 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x6162)) x6328) (and (=> (not x4487) x4551) (=> (and x4487 (and (= (x2109 x429) x1470) (<= x1470 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div x6162 x7528) x6234) (= x5093 (> x1705 x1470)) (= x429 (x4000 x66 3)) (= (div x6234 1000000000000000000) x1705) (<= 0 x1470))) (and (=> (and (not x5093) (and (= x1035 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4465))) (= x3800 (x2563 (- x1470 x1705))) (= (< x1035 x688) x6984))) (and (=> x6984 x3931) (=> (and (and (= x8788 (x910 (+ x4465 x688))) (= x8788 x2702) (= 0 x3389)) (not x6984)) x7428))) (=> x5093 x3931))))) (=> (not x6328) x3931))))) (=> x1815 x3931))))) (=> (not x7511) x3931))))) (=> (and (and (= (< 115792089237316195423570985008687907853269984665640564039457 x8391) x2074) (= (= (ite x2074 1 0) 0) x7508)) (not x2973)) (and (=> (not x7508) x3931) (=> (and (and (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7330) x8134) (= (= x7330 0) x3032) (= x8264 (ite (< x8134 1000000000000000000) 1 0)) (= (x6748 x4539 x8264) x1920) (= (mod (* 1000000000000000000 x8391) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x7330) (= x2372 (= x1920 0)) (= x4539 (ite (not x3032) 1 0))) x7508) (and (=> (and (and (= (< 0 x7528) x6474) (= (mod (* x7330 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x409)) x2372) (and (=> (and x6474 (and (<= x5763 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7396 (div x409 x7528)) (= (> x6189 x5763) x7686) (= x5763 (x2109 x8980)) (= (div x7396 1000000000000000000) x6189) (<= 0 x5763) (= x8980 (x4000 x66 3)))) (and (=> (and (not x7686) (and (= (x2563 (- x5763 x6189)) x1525) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8391)) x7165) (= x3580 (> x688 x7165)))) (and (=> (and (and (= x2602 (< x4465 x8391)) (= (x910 (+ x688 x8391)) x6012)) (not x3580)) (and (=> (and (not x2602) (and (= x2702 x6012) (= x62 (x2563 (- x4465 x8391))) (= x62 x3389))) x7428) (=> x2602 x3931))) (=> x3580 x3931))) (=> x7686 x3931))) (=> (not x6474) x4551))) (=> (not x2372) x3931)))))))))) x2811))
(assert (= x6759 (x3373 (x2264 x6759))))
(assert (x9173 x8295))
(assert (x9173 x576))
(assert (= x6714 (and x4545 x7650)))
(assert (= (x3373 (x2264 x8932)) x8932))
(assert (x9173 x3477))
(assert (x9173 x879))
(assert (x9173 x8737))
(assert (= x3191 (and x8383 x4185)))
(assert (= x8225 (and (not x5810) x4853)))
(assert (x9173 x217))
(assert (x9173 x1528))
(assert (x9173 x739))
(assert (= x2050 (and x1357 x4130)))
(assert (=> (>= 10000 x2694) (= (x6664 x2694) (x2264 x2694))))
(assert (=> (<= x2633 10000) (= (x2264 x2633) (x6664 x2633))))
(assert (= x3166 (or x9115 x2343 x7304)))
(assert (x2631 x5434))
(assert (= (and x1688 (not x1280)) x1743))
(assert (= (and (not x1815) x8038) x1674))
(assert (x9173 x4107))
(assert (x9173 x8320))
(assert (x9173 x7787))
(assert (x9173 x852))
(assert (x9173 x2168))
(assert (x9173 x8674))
(assert (x9173 x759))
(assert (= x3765 (and x8313 x2072)))
(assert (= x519 (x3373 (x2264 x519))))
(assert (= x6178 (and (not x7741) x5557)))
(assert (= x3681 (or (and (not x9003) x8198) (and x237 x621))))
(assert (x9173 x3869))
(assert (x5765 x135))
(assert (= x1847 (or x2147 x535)))
(assert (= (and x1639 x246) x4568))
(assert (x8537 x5618))
(assert (x2631 x7360))
(assert (= x5080 (and (not x1002) x8314)))
(assert (= x8970 (and (not x2093) x3334)))
(assert (= x2070 (=> (and (= x4059 x2711) (= x8952 x8724)) x3991)))
(assert (= x6626 (or (and x5787 x6817) (and (not x8461) x4875) (and x1335 (not x3907)) x7121 x3804 (and x6623 x6916))))
(assert (= x7467 (or x2857 x5706)))
(assert (x5765 x8502))
(assert (x9173 x1821))
(assert (= x835 (and (not x7320) x2216)))
(assert (= (or x335 x8285) x404))
(assert (= x6382 (or (and (not x4084) x6692) (and x2579 x5136))))
(assert (= x5319 (and x9164 x5802)))
(assert (= x6525 (=> (and (= x606 x1157) (= x6316 x770) (= x5367 x1612) (= x3924 x7219) (= x4690 x4912)) x1080)))
(assert (x9173 x6387))
(assert (x9173 x3269))
(assert (x9173 x4576))
(assert (= (and x8845 x4865) x6287))
(assert (= (or x5140 x120) x2536))
(assert (= x1064 (and (not x3610) x8499)))
(assert (x9173 x2133))
(assert (= (and x3638 x4711) x7860))
(assert (x9173 x1765))
(assert (x9173 x4074))
(assert (x9173 x8297))
(assert (= x3454 (or x5957 x5624)))
(assert (x5765 x6343))
(assert (x9173 x5325))
(assert (= (+ (x3373 x3486) 1) (x3373 (x4000 x3486 1))))
(assert (= (+ (x3373 x7285) 1) (x3373 (x4000 x7285 1))))
(assert (x9173 x2094))
(assert (x9173 x7761))
(assert (= (or x665 x5300) x7113))
(assert (= x4215 (and x7250 (not x3438))))
(assert (x9173 x9226))
(assert (x9173 x1282))
(assert (= x4916 x5658))
(assert (x9173 x6253))
(assert (x9173 x7082))
(assert (= (and x935 (not x3771)) x7046))
(assert (= x3850 (x3373 (x2264 x3850))))
(assert (x9173 x5016))
(assert (x9173 x4890))
(assert (= (=> (and (= x3102 x798) (= x6172 x2330)) x2481) x2477))
(assert (= (and (not x8324) x4506) x1575))
(assert (x5765 x1486))
(assert (= (+ 2 (x3373 x6809)) (x3373 (x4000 x6809 2))))
(assert (x9173 x7613))
(assert (= x4380 (and x6820 (not x4997))))
(assert (= x2180 (and x8060 x3100)))
(assert (= x8466 (and x4197 x2643)))
(assert (= (and x4287 (not x2621)) x1286))
(assert (x9173 x1420))
(assert (= x3130 (=> (and (= x6414 x5799) (= x6286 x1010)) x7257)))
(assert (= (=> (and (= x1185 (= x5375 0)) (<= x5375 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x5375) (<= 0 x5375)) (and (=> (and (and (< x5375 1461501637330902918203684832716283019655932542976) (= x6742 (= 0 x129)) (<= x5375 1461501637330902918203684832716283019655932542975) (= x129 (x6844 (x2264 x5375))) (<= 0 x5375)) (not x1185)) (and (=> (and (> 4294967296 x3039) (not x6742)) x7851) (=> x6742 x8941))) (=> x1185 x7851))) x6185))
(assert (= (and (not x6693) x7974) x4233))
(assert (= x3274 (and x2900 x130)))
(assert (= (and (not x1242) x7446) x5473))
(assert (= (and (=> x612 x2883) (=> (and (not x612) (and (= x5253 x1483) (= x295 1))) x5152)) x6900))
(assert (= x9124 (x3373 (x2264 x9124))))
(assert (=> (<= x5200 10000) (= (x2264 x5200) (x6664 x5200))))
(assert (= x4942 (and x1089 (not x7329))))
(assert (= (or x1873 x6912 x266 x7046 x7793 x8105) x1690))
(assert (= (and x2712 x3648) x4199))
(assert (x9173 x5626))
(assert (= (x2264 1461501637330902918203684832716283019655932542975) (x6664 1461501637330902918203684832716283019655932542975)))
(assert (x5699 x926 x1733))
(assert (x9173 x3507))
(assert (= (+ (x3373 x2128) 1) (x3373 (x4000 x2128 1))))
(assert (= x8209 (and x8418 x7832)))
(assert (x9173 x4750))
(assert (= x2456 (and (not x7915) x5021)))
(assert (= x2210 (and x1675 x4327)))
(assert (x5699 x4539 x8264))
(assert (= (and (not x3582) x1111) x8902))
(assert (x9173 x2636))
(assert (= (=> (and (= x7601 (= 0 (ite x2129 1 0))) (= (> x308 115792089237316195423570985008687907853269984665640564039457) x2129)) (and (=> (and x7601 (and (= x6687 (ite (not x1403) 1 0)) (= (x6748 x6687 x4773) x7697) (= x6733 (= 0 x7697)) (= (ite (> 1000000000000000000 x4721) 1 0) x4773) (= (mod (* x308 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2655) (= x4721 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2655)) (= x1403 (= x2655 0)))) (and (=> (not x6733) x3931) (=> (and (and (= x8895 (mod (* x2655 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x582 (> x2155 0))) x6733) (and (=> (not x582) x4551) (=> (and x582 (and (= (x3912 x8025) x2494) (<= x2494 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x7230 x2494) x6734) (= x8025 (x4000 x66 2)) (= (div x8895 x2155) x6702) (<= 0 x2494) (= (div x6702 1000000000000000000) x7230))) (and (=> x6734 x3931) (=> (and (not x6734) (and (= (< 115792089237316195423570985008687907853269984665640564039457 x393) x7861) (= x8753 (x2563 (- x2494 x7230))) (= x213 (= (ite x7861 1 0) 0)))) (and (=> (and x213 (and (= x2446 (= x6468 0)) (= x7263 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6468)) (= (= x7904 0) x6199) (= x7904 (x6748 x1024 x7360)) (= (ite (not x2446) 1 0) x1024) (= x6468 (mod (* 1000000000000000000 x393) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x7360 (ite (< x7263 1000000000000000000) 1 0)))) (and (=> (and x6199 (and (= (> x7528 0) x2093) (= (mod (* 1000000000000000000 x6468) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4376))) (and (=> (and (and (= (div x4376 x7528) x141) (= (x4481 x9120) x167) (= x7997 (div x141 1000000000000000000)) (= x9120 (x4000 x8025 1)) (<= 0 x167) (= x7947 (< x167 x7997)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x167)) x2093) (and (=> (and (and (= x8178 (x1673 x8025)) (<= 0 x3733) (= x8831 (> x4480 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3733) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8178) (>= 1461501637330902918203684832716283019655932542975 x1322) (= x4480 (x2563 (- x3881 x1322))) (<= 0 x1322) (= x1810 (x910 (+ x1930 32))) (= x3733 (x8479 x9120)) (> 1461501637330902918203684832716283019655932542976 x1322) (= x4412 (x2563 (- x167 x7997))) (<= 0 x8178)) (not x7947)) (and (=> (and x8831 (and (and (and (= x5147 (x6844 (x2264 x4668))) (= x1701 x393) (= x7057 157198259) (= x6835 4238056678808933066457772256406219440718756300954938350892797929791311314944) (not (= 117300739 x7057)) (= x6832 x519) (= x804 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5073) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5073) true) (> 64 x5073)))) (= x776 68) (= (x2563 (- x776 4)) x5073) (not (< x776 4)) (< x7057 1466279372) (> x5147 0) (> 599290589 x7057)) x8396) (and (= x3186 (x910 (+ 4 x1930))) (= (x910 (+ x3186 32)) x8051) (= (= x4668 x5084) x8396)))) (and (=> (and (not x804) (and (= (= x6832 x519) x4161) (= x519 x659))) (and (=> (not x4161) x701) (=> (and x4161 (and (= x1701 x2862) (= 1 x2966) (= x1685 (x5783 (x2264 x519) x9097 0)) (= 32 x2197) (= (x5783 (x2264 x7036) (x6664 2) 0) x9097))) x1796))) (=> x804 x701))) (=> (and (and (< x2639 1461501637330902918203684832716283019655932542976) (= x1849 (x6844 (x2264 x2639))) (<= x2639 1461501637330902918203684832716283019655932542975) (>= x2639 0) (= x2136 (= x1849 0))) (not x8831)) (and (=> (and (= x6661 true) x2136) x6209) (=> (and (not x2136) (and (= x5777 (= x5720 0)) (< x3654 4294967296) (= (x6844 (x2264 x3881)) x5720))) (and (=> (and (and (or (and (and (= 1 x5083) (= (x910 (+ x393 x4870)) x5645) (< x1670 4294967296) (= (x8641 (x2264 x3881)) x4870) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x393 x4870)) (= x3006 (x885 (x2264 x7036))) (= x2135 (- x3006 x393))) x1357) (and (not x1357) (= 0 x5083))) (and (= x1357 (and (<= x393 x3351) (< (+ x393 x4039) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x3351 (x885 (x2264 x7036))) (= x4039 (x885 (x2264 x3881))))) (not x5777)) x5497) (=> (and (= x6661 true) x5777) x6209))))))) (=> x7947 x3931))) (=> (not x2093) x4551))) (=> (not x6199) x3931))) (=> (not x213) x3931))))))))) (=> (not x7601) x3931))) x5490))
(assert (= (x3373 (x2264 x2543)) x2543))
(assert (x9173 x257))
(assert (x9173 x482))
(assert (= x8099 (and x247 x8232)))
(assert (x9173 x1039))
(assert (= (and x4308 x3506) x4063))
(assert (x9173 x889))
(assert (= x4461 (and x7028 x3072)))
(assert (= (and (not x8878) x9051) x8231))
(assert (x9173 x5672))
(assert (=> (<= x8114 10000) (= (x6664 x8114) (x2264 x8114))))
(assert (x9173 x921))
(assert (= (x3373 (x4000 x44 1)) (+ 1 (x3373 x44))))
(assert (= x3382 (and x7923 (not x5361))))
(assert (= (and x692 (not x8317)) x8))
(assert (x9173 x6082))
(assert (= (and (not x6930) x2239) x3822))
(assert (= (and x5776 x5468) x7937))
(assert (x9173 x221))
(assert (= x1694 (and (not x5191) x2366)))
(assert (x9173 x5207))
(assert (= x4892 (and x3801 x3200)))
(assert (= (and x4674 x1240) x1816))
(assert (x9173 x6704))
(assert (= x6259 (and x2208 x824)))
(assert (= x6198 (or x4484 x6544)))
(assert (x9173 x7074))
(assert (= x55 (or x2253 x8611)))
(assert (x9173 x8344))
(assert (x9173 x3264))
(assert (x9173 x8588))
(assert (x9173 x1))
(assert (= (x3373 (x6664 398450620)) 398450620))
(assert (= (and x4504 x8057) x4695))
(assert (= (or x2448 x3161) x9060))
(assert (x9173 x6680))
(assert (x9173 x933))
(assert (= x5329 (x3373 (x2264 x5329))))
(assert (x9173 x8055))
(assert (= (and x1275 (not x7568)) x6936))
(assert (= (and x1715 (not x804)) x746))
(assert (= (and x7700 x7147) x5306))
(assert (x5765 x1850))
(assert (x9173 x6221))
(assert (x9173 x1157))
(assert (= x2841 (or x3280 x1999)))
(assert (= (or x1129 x4253) x2378))
(assert (= x3808 (and (not x2952) x2308)))
(assert (= (and x5184 (not x7321)) x3776))
(assert (x9173 x1582))
(assert (= x5530 (and (not x6338) x834)))
(assert (= (x3373 (x4000 x5522 1)) (+ (x3373 x5522) 1)))
(assert (= (or x5857 x7172) x5969))
(assert (x9173 x6764))
(assert (x9173 x1838))
(assert (= x7244 (or x2913 x1422 x3504 x1189 x6512 x3886 x1526 x4166 x9157)))
(assert (x9173 x8824))
(assert (= x5168 (x3373 (x2264 x5168))))
(assert (= (and (not x8140) x1285) x8499))
(assert (x9173 x8543))
(assert (x9173 x501))
(assert (x5765 x2163))
(assert (x5765 x7056))
(assert (x9173 x4692))
(assert (= (and x3515 x8422) x4424))
(assert (= (and (not x6102) x6431) x2327))
(assert (= x6109 (and (not x5722) x2081)))
(assert (= (and x4499 (not x8077)) x1946))
(assert (= x8944 (and x6500 x3494)))
(assert (= (=> (and (or (not x4280) x4280) (= (= 0 x5986) x4280)) x8049) x1577))
(assert (x9173 x8410))
(assert (= (=> (and (and (= x4284 (= 0 x8629)) (= (ite (> x1511 0) 1 0) x8629)) (or (and (not x4284) (and (= x3881 x389) (= (ite x2450 1 0) x1062) (= (= 0 x891) x2450) (> 256 x891) (= x894 (x5783 (x2264 x3881) (x6664 163) 0)) (<= 0 x891) (<= x891 255) (= x891 (x390 x894)))) (and (and (= x1062 x8629) (= x389 x7059)) x4284))) x4988) x2720))
(assert (= x5458 (and (not x1082) x7160)))
(assert (x5699 x1991 x4542))
(assert (= (x3373 (x2264 x1659)) x1659))
(assert (= (x6664 242558722) (x2264 242558722)))
(assert (= (and x6043 x7803) x1187))
(assert (x9173 x2330))
(assert (= x6753 (and x6464 x3030)))
(assert (= (+ 1 (x3373 x4029)) (x3373 (x4000 x4029 1))))
(assert (x9173 x8794))
(assert (x9173 x678))
(assert (x9173 x2665))
(assert (=> (>= 10000 x4494) (= (x2264 x4494) (x6664 x4494))))
(assert (= (=> (and (and (>= x2036 0) (>= x2746 0) (= (x4000 x7032 2) x3415) (= x8238 (x6750 x4580)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2746) (<= x6920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7032 (x5783 (x2264 x730) x1942 0)) (<= x2036 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2119 0) (= (x4000 x3381 2) x8744) (= (x5783 (x2264 x3881) (x6664 159) 0) x6516) (= (x5783 (x2264 x730) x6516 0) x3902) (= x4580 (x4000 x3902 1)) (<= 0 x6920) (= x3381 (x5783 (x2264 x730) x783 0)) (= (x1059 x3415) x2746) (<= 0 x8238) (= x2036 (x202 x8744)) (<= x8238 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2119 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x3881) (x6664 157) 0) x1942) (= x5433 (> x8238 x6920)) (= (x5783 (x2264 x3881) (x6664 156) 0) x783) (= (x1883 x3902) x2119)) (or (and (= x1191 x8238) x5433) (and (= 0 x1191) (not x5433)))) x3889) x4560))
(assert (= (x3373 (x4000 x8103 1)) (+ 1 (x3373 x8103))))
(assert (= (and x3906 (not x3300)) x6452))
(assert (= x3317 (and x3034 (not x5956))))
(assert (= (x3373 (x4000 x8738 1)) (+ 1 (x3373 x8738))))
(assert (= x3959 (and x4190 x8390)))
(assert (= x7883 (and x8874 x531)))
(assert (= (and (not x6064) x2383) x7484))
(assert (x9173 x6539))
(assert (= x7199 (=> (and (= 0 x3704) (= x2747 x284)) x1509)))
(assert (= x7013 (and x7405 x7752)))
(assert (x9173 x1418))
(assert (x9173 x397))
(assert (= x96 (=> (and (= x6172 0) (= x798 x4162)) x2477)))
(assert (= x1710 (=> (and (= x6286 x3394) (= x6414 x4844)) x7257)))
(assert (x9173 x5576))
(assert (x9173 x6135))
(assert (x5699 x2665 x2011))
(assert (= x2454 (and x5478 x8141)))
(assert (= (and x5271 (not x8978)) x859))
(assert (x9173 x1947))
(assert (x5765 x234))
(assert (x5699 x1619 x2966))
(assert (=> (<= x5381 10000) (= (x6664 x5381) (x2264 x5381))))
(assert (x9173 x7504))
(assert (x9173 x1366))
(assert (x9173 x5862))
(assert (x9173 x8786))
(assert (= (x3373 (x2264 x1018)) x1018))
(assert (x9173 x2694))
(assert (x9173 x2265))
(assert (x9173 x1164))
(assert (x9173 x385))
(assert (x9173 x1428))
(assert (= (or x2773 x347) x1518))
(assert (x9173 x5761))
(assert (= (=> (and (= x920 x6465) (= x6629 x3514)) x5567) x4903))
(assert (= (x3373 (x4000 x2233 1)) (+ 1 (x3373 x2233))))
(assert (x9173 x8555))
(assert (x9173 x4933))
(assert (= (and (=> (and (and (= x2193 0) (= x8249 x8628)) (not x1630)) x3612) (=> (and x1630 (and (or (and (= x6867 x2333) (not x6867)) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5579) (= x2333 (not x2588)) (>= x5579 0) (= x3553 (x5783 (x2264 x3133) x9128 0)) (= x5579 (x2686 x7343)) (= x2588 (> x78 x5579)) (= x7343 (x4000 x3553 2))) x6867)) (and (= x1204 (x5783 (x2264 x8628) x9128 0)) (>= x3133 0) (= (x7005 x2199) x3133) (<= x3133 1461501637330902918203684832716283019655932542975) (= x2199 (x4000 x1204 1)) (> 1461501637330902918203684832716283019655932542976 x3133) (= (ite (> x1 1) (not (= 0 x3133)) (< 1 x1)) x6867)))) x1747)) x4783))
(assert (= (and x9014 x2560) x5115))
(assert (= x2913 (and (not x4756) x5637)))
(assert (= (=> (and (= x629 x1077) (= x3147 x6941)) x7731) x642))
(assert (x9173 x5713))
(assert (= (+ 1 (x3373 x7491)) (x3373 (x4000 x7491 1))))
(assert (x9173 x4008))
(assert (= x2778 (or x1187 x5805)))
(assert (= x4305 x4551))
(assert (= x6302 (or x8750 (and x9025 x2708) x1016 (and (not x1343) x8866) (and x6272 x407) (and (not x7929) x8098))))
(assert (x9173 x4862))
(assert (x9173 x720))
(assert (= (or x7388 x2977 (and (not x6563) x2578) (and x8868 x3338) (and x3673 (not x740)) (and x99 x4310)) x8325))
(assert (x9173 x2376))
(assert (x9173 x3253))
(assert (=> (>= 10000 x7958) (= (x6664 x7958) (x2264 x7958))))
(assert (x9173 x1612))
(assert (x9173 x1109))
(assert (x9173 x4356))
(assert (= (and (not x2844) x4585) x3407))
(assert (= x5628 (and x8594 (not x3272))))
(assert (x9173 x5693))
(assert (x9173 x1452))
(assert (x9173 x2558))
(assert (x5765 x7919))
(assert (= x8881 (and (not x4946) x7453)))
(assert (= x4368 (and x8671 x3898)))
(assert (x9173 x2671))
(assert (x9173 x9103))
(assert (x9173 x6944))
(assert (= x8463 (and (not x2528) x7271)))
(assert (= x1397 (and (not x2529) x162)))
(assert (= x8927 (and x6213 (not x7871))))
(assert (=> (>= 10000 x5891) (= (x6664 x5891) (x2264 x5891))))
(assert (= x8411 (and x3347 x4691)))
(assert (x9173 x5147))
(assert (= x3716 (=> (and (= x2441 x6926) (= 0 x5149)) x1677)))
(assert (= (x3373 (x2264 x6164)) x6164))
(assert (x9173 x4849))
(assert (x9173 x4086))
(assert (x9173 x6012))
(assert (x4899 x7386))
(assert (= x4246 (and x7871 x6213)))
(assert (x9173 x6307))
(assert (= (and x2205 x1254) x3550))
(assert (= (or x5684 x6986) x641))
(assert (x9173 x3962))
(assert (= x2010 (and x107 (not x6521))))
(assert (= (and x5473 x8347) x6139))
(assert (x9173 x4049))
(assert (= x8725 (and x3010 (not x9201))))
(assert (= x3889 (=> (= x8329 (= x1191 x2746)) (and (=> (and (not x8329) (= x3449 (< 0 x2746))) (and (=> (and (and (= x3615 (x4000 x6007 1)) (= (x5783 (x2264 x730) x1942 0) x6114) (< x22 1461501637330902918203684832716283019655932542976) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1833) (= (= x1833 0) x2817) (= x3641 (x7978 x6007)) (>= 1461501637330902918203684832716283019655932542975 x22) (= x6007 (x4000 x6114 1)) (= x4509 (x910 (+ 96 x7429))) (<= 0 x3641) (= (x1059 x3615) x1833) (>= 1461501637330902918203684832716283019655932542975 x3641) (= x22 (x2215 x6114)) (>= x22 0) (<= 0 x1833) (> 1461501637330902918203684832716283019655932542976 x3641)) x3449) (and (=> x2817 x8986) (=> (and (and (= (= x22 0) x3200) (or (and (and (= x9231 (x5783 (x2264 x22) x1942 0)) (= x8976 (x4000 x9231 1))) (not x3200)) (and x3200 (= x8743 (x4000 x1942 1))))) (not x2817)) x4073))) (=> (and (not x3449) (and (= x2739 x7429) (= x2884 x730))) x5310))) (=> (and x8329 (and (= x2332 x730) (= x7429 x1020))) x3165)))))
(assert (x9173 x8256))
(assert (= (+ (x3373 x91) 1) (x3373 (x4000 x91 1))))
(assert (x9173 x8615))
(assert (= (+ 1 (x3373 x1459)) (x3373 (x4000 x1459 1))))
(assert (x9173 x4913))
(assert (x9173 x2138))
(assert (= x6541 (and x1559 (not x3447))))
(assert (x5765 x1753))
(assert (= (and x7357 (not x4842)) x2709))
(assert (= (+ (x3373 x9024) 1) (x3373 (x4000 x9024 1))))
(assert (= x8473 (and x3847 x1616)))
(assert (= (and x4615 x7755) x6615))
(assert (x9173 x4856))
(assert (= (and x1812 x4365) x6986))
(assert (= x6538 (or x5886 x4635)))
(assert (= x2148 (and x63 x4347)))
(assert (= x2567 (or x5870 x476)))
(assert (= x7020 (or x6518 x8113)))
(assert (x9173 x8414))
(assert (= (or x8897 x1438) x32))
(assert (= x4646 x4551))
(assert (= x6912 (and x1031 x1070)))
(assert (= x8714 (=> (and (= x5274 x6471) (= x2987 x2750)) x585)))
(assert (= (and x4507 x58) x890))
(assert (= (and x7872 x7456) x5462))
(assert (= (and x433 (not x5366)) x1026))
(assert (= (and (not x1698) x8927) x8625))
(assert (x5765 x1353))
(assert (= (x3373 (x4000 x3568 2)) (+ (x3373 x3568) 2)))
(assert (= x4541 (and x2314 x5349)))
(assert (= x8822 (or x8454 x5650)))
(assert (= x3905 (=> (and (= (< 0 x1069) x5008) (= x2234 (x6748 x926 x1733)) (= x8591 (ite (= 0 x5258) 1 0)) (= x1733 (ite (> x5258 31) 1 0)) (= (x2812 x2234 x8591) x2777) (= x926 (ite (= x364 1) 1 0)) (= x1069 (x6748 x2777 x4074))) (and (=> (and x5008 (and (= x2751 (x910 (+ x267 4))) (= (x910 (+ 32 x2751)) x5272) (= (x2563 (- x5272 x267)) x6730) (= x8149 (= x5148 x3881)))) (and (=> (and x8149 (and (not (= x2644 75483562)) (not (< x5577 4)) (= x2644 242558722) (< x2644 988262939) (= x3473 (or (and (< x2364 32) (= true (<= x2364 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2364))) (= (x2563 (- x5577 4)) x2364) (< x2644 2217467699) (= x6736 x2734) (= x5577 36) (> 405663989 x2644) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x8402) (not (= x2644 178855970)) (= x4588 (x6844 (x2264 x5148))) (< 0 x4588) (= x5577 x6730))) (and (=> (and x3473 (= x640 x1068)) x5236) (=> (and (not x3473) (and (<= x10 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x10 (x1203 x7626)) (<= 0 x10) (= x7626 (x5783 (x2264 x7036) (x6664 6) 0)) (= x5698 x6736) (= (< x10 x2734) x1134))) (and (=> (and x1134 (= x640 x1068)) x5236) (=> (and (and (= (x1203 x6217) x5108) (<= 0 x5108) (<= x5108 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x7036) (x6664 6) 0) x6217) (= x7944 (> x6736 x5108))) (not x1134)) (and (=> (and (and (<= 0 x1068) (= x268 (x2563 (- x5108 x6736))) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6736)) x7917) (= (< x7917 x1068) x7620) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1068)) (not x7944)) (and (=> (and (not x7620) (and (= x7434 (= x4668 x1116)) (> 1461501637330902918203684832716283019655932542976 x1116) (<= x1116 1461501637330902918203684832716283019655932542975) (= x613 (x910 (+ x6736 x1068))) (= x8647 (x910 (+ x6736 x1068))) (= 128 x6677) (<= 0 x1116))) (and (=> (and (= x7248 (= x1116 x5148)) (not x7434)) (and (=> (and x7248 (and (not (= x3269 547091486)) (= x5517 (x2563 (- x1414 4))) (> 2217467699 x3269) (= 100 x1414) (= x5698 x4430) (= x1465 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 988262939 x3269) (= x2956 x5148) (= x2120 (x6844 (x2264 x5148))) (= x1414 100) (not (< x3269 405663989)) (< 0 x2120) (not (= 405663989 x3269)) (= x7036 x444) (= x3318 (or (and (< x5517 96) (= true (<= x5517 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x5517 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 599290589 x3269) (not (< x1414 4)))) (and (=> (and (and (= x444 x8716) (= x1079 (= x444 x7036))) (not x3318)) (and (=> (and (and (= (= x5148 x2956) x8177) (= x2956 x3437)) x1079) (and (=> (not x8177) x2512) (=> (and x8177 (and (>= x6838 0) (= (> x5698 x6838) x7510) (= x6838 (x6566 x1959)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6838) (= (x5783 (x2264 x444) (x6664 5) 0) x1959) (= x7976 x4430))) (and (=> (and (not x7510) (and (<= 0 x5730) (<= x5730 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x6566 x8182) x5730) (= x8182 (x5783 (x2264 x444) (x6664 5) 0)) (= (> x4430 x5730) x77))) (and (=> (and (and (= (x2667 x7977) x1984) (= (x2563 (- x5730 x4430)) x4081) (= (x5783 (x2264 x2956) (x6664 5) 0) x7977) (>= x1984 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1984) (= x2910 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4430))) (= (< x2910 x1984) x8539)) (not x77)) (and (=> (and (not x8539) (and (= x5482 (x910 (+ x4430 x1984))) (= x4533 1) (= x7842 32) (= 1 x7859))) x3785) (=> x8539 x2512))) (=> x77 x2512))) (=> x7510 x2512))))) (=> (not x1079) x2512))) (=> x3318 x2512))) (=> (and (not x7248) (= (= x1116 x3605) x4923)) (and (=> (and (and (< x6155 988262939) (not (= 547091486 x6155)) (= (x6844 (x2264 x3605)) x1556) (not (> 4 x1146)) (= x5677 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3967 (x2563 (- x1146 4))) (= x5148 x423) (not (= x6155 405663989)) (= x5200 x7036) (not (< x6155 405663989)) (= x5698 x7668) (> 2217467699 x6155) (> x1556 0) (= x1066 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3967) (and (< x3967 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3967) true)))) (= x1146 100) (= 100 x1146) (= x6155 599290589)) x4923) (and (=> (and (and (= (= x7036 x5200) x7936) (= x5200 x2275)) (not x1066)) (and (=> (not x7936) x8701) (=> (and (and (= (= x5148 x423) x4688) (= x3287 x423)) x7936) (and (=> (not x4688) x8701) (=> (and x4688 (and (= x7094 x7668) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2459) (= (> x5698 x2459) x7834) (= x296 (x5783 (x2264 x5200) (x6664 5) 0)) (<= 0 x2459) (= (x3633 x296) x2459))) (and (=> (and (and (= x3283 (x3633 x241)) (= x241 (x5783 (x2264 x5200) (x6664 5) 0)) (>= x3283 0) (= (> x7668 x3283) x4922) (<= x3283 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x7834)) (and (=> x4922 x8701) (=> (and (not x4922) (and (<= 0 x6667) (= (x6752 x111) x6667) (<= x6667 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8696 (< x3908 x6667)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7668)) x3908) (= (x5783 (x2264 x423) (x6664 5) 0) x111) (= (x2563 (- x3283 x7668)) x1735))) (and (=> x8696 x8701) (=> (and (and (= x4296 1) (= x7690 32) (= (x910 (+ x7668 x6667)) x4724) (= 1 x5186)) (not x8696)) x336))))) (=> x7834 x8701))))))) (=> x1066 x8701))) (=> (and (not x4923) (and (= x3841 (= x1326 x1116)) (and (and (> 2217467699 x5295) (> x5299 0) (= 100 x122) (= x5698 x691) (= x5148 x7550) (> 988262939 x5295) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7698) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7698)) (< x7698 96))) x6706) (= x5299 (x6844 (x2264 x1326))) (= 599290589 x5295) (not (= x5295 405663989)) (= (x2563 (- x122 4)) x7698) (= x7036 x6634) (not (< x5295 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4169) (not (> 4 x122)) (not (= x5295 547091486)) (= 100 x122)) x3841))) (and (=> (and (and (= x6634 x6100) (= (= x7036 x6634) x4264)) (not x6706)) (and (=> (and x4264 (and (= x2499 x7550) (= (= x7550 x5148) x4221))) (and (=> (and x4221 (and (= (x108 x211) x2701) (>= x2701 0) (= x211 (x5783 (x2264 x6634) (x6664 5) 0)) (= x1350 (< x2701 x5698)) (= x691 x1347) (<= x2701 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (>= x1547 0) (<= x1547 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5521 (x5783 (x2264 x6634) (x6664 5) 0)) (= x1547 (x108 x5521)) (= (< x1547 x691) x5359)) (not x1350)) (and (=> x5359 x8535) (=> (and (not x5359) (and (= (x2563 (- x1547 x691)) x3445) (<= 0 x8269) (= x3155 (x5783 (x2264 x7550) (x6664 5) 0)) (= x8269 (x8960 x3155)) (= x3228 (> x8269 x3170)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x691)) x3170) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8269))) (and (=> (and (and (= x8649 1) (= 1 x2932) (= x6319 32) (= x545 (x910 (+ x691 x8269)))) (not x3228)) x7475) (=> x3228 x8535))))) (=> x1350 x8535))) (=> (not x4221) x8535))) (=> (not x4264) x8535))) (=> x6706 x8535))))))) (=> (and x7434 (and (< x4932 1466279372) (= x4932 599290589) (= (x2563 (- x7757 4)) x5308) (= x3921 x5698) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6342) (= x7036 x4107) (= x1376 (x6844 (x2264 x4668))) (= x5148 x3498) (< 0 x1376) (= x6562 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5308)) (< x5308 96)) (> x5308 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x7757 100) (not (< x7757 4)) (not (> 599290589 x4932)) (= 100 x7757))) (and (=> (and (and (= x6873 x4107) (= x4756 (= x7036 x4107))) (not x6562)) (and (=> (and (and (= (= x5148 x3498) x9172) (= x3498 x8520)) x4756) (and (=> (not x9172) x2729) (=> (and x9172 (and (>= x6539 0) (= (x5783 (x2264 x4107) (x6664 1) 0) x898) (= x3921 x6628) (= x6539 (x6570 x898)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6539) (= (< x6539 x5698) x4451))) (and (=> (and (not x4451) (= x1389 (< x6539 x3921))) (and (=> x1389 x2729) (=> (and (not x1389) (and (= x2909 (x5783 (x2264 x3498) (x6664 1) 0)) (= x5678 (> x7096 x594)) (= (x5783 (x2264 x4107) (x6664 1) 0) x2780) (<= x7096 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7017 (x2563 (- x6539 x3921))) (>= x7096 0) (= x594 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3921))) (= x7096 (x2315 x2909)))) (and (=> x5678 x2729) (=> (and (and (= (> x7096 x5056) x684) (= (x910 (+ x3921 x7096)) x5056)) (not x5678)) (and (=> (and (and (= x5642 (x5783 (x2264 x4107) (x6664 2) 0)) (= (< x9063 x3921) x4219) (>= x9063 0) (= x7407 (x5783 (x2264 x3498) (x6664 1) 0)) (= (x2927 x3698) x9063) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9063) (= (x5783 (x2264 x5148) x5642 0) x3698)) (not x684)) (and (=> (and (not x4219) (= (> x3921 x9063) x6421)) (and (=> x6421 x2729) (=> (and (and (= x5929 32) (= 1 x987) (= x5427 (x5783 (x2264 x5148) x7140 0)) (= x6362 (x2563 (- x9063 x3921))) (= (x5783 (x2264 x4107) (x6664 2) 0) x7140)) (not x6421)) x346))) (=> x4219 x2729))) (=> x684 x2729))))))) (=> x4451 x2729))))) (=> (not x4756) x2729))) (=> x6562 x2729))))) (=> (and (= x640 x1068) x7620) x5236))) (=> (and (= x640 x1068) x7944) x5236))))))) (=> (and (= x5026 (= x3881 x3605)) (not x8149)) (and (=> (and (and (= (= x1326 x3881) x3764) (and x3764 (and (< x6027 405663989) (= (x6844 (x2264 x1326)) x827) (= x2238 (x2563 (- x1072 4))) (> 988262939 x6027) (not (= 178855970 x6027)) (< x6027 2217467699) (= x7210 6539370208772218570076773595062200405109424842860869254164860851635934461952) (not (= x6027 75483562)) (= (or (> x2238 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2238 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2238 32))) x8915) (not (> 4 x1072)) (= x6730 x1072) (= 36 x1072) (< 0 x827) (= x2734 x5623) (= x6027 242558722)))) (not x5026)) (and (=> (and (and (<= x7939 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4457 x4114) x7939) (<= 0 x7939) (= x5623 x5210) (= (< x7939 x2734) x4198) (= x4114 (x5783 (x2264 x7036) (x6664 6) 0))) (not x8915)) (and (=> (and (and (<= 0 x709) (<= x709 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x7036) (x6664 6) 0) x1967) (= (x4457 x1967) x709) (= x8935 (> x5623 x709))) (not x4198)) (and (=> (and x8935 (= x5367 x6254)) x716) (=> (and (not x8935) (and (= (x2563 (- x709 x5623)) x8247) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5623)) x3179) (<= x5367 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4828 (> x5367 x3179)) (>= x5367 0))) (and (=> (and (not x4828) (and (= (= x4668 x3252) x1583) (= x2140 128) (= x5260 (x910 (+ x5367 x5623))) (< x3252 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x3252) (<= 0 x3252) (= (x910 (+ x5623 x5367)) x974))) (and (=> (and x1583 (and (not (< x9042 599290589)) (= 100 x8892) (> 1466279372 x9042) (= 100 x8892) (= 599290589 x9042) (= x7578 (x6844 (x2264 x4668))) (not (> 4 x8892)) (= x4401 (x2563 (- x8892 4))) (= x636 x5210) (> x7578 0) (= x6059 x1326) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4401) (and (< x4401 96) (= true (<= x4401 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x8879) (= x7682 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x7036 x2540))) (and (=> x8879 x6134) (=> (and (not x8879) (and (= x1566 (= x7036 x2540)) (= x2540 x6192))) (and (=> (not x1566) x6134) (=> (and x1566 (and (= (= x6059 x1326) x587) (= x133 x6059))) (and (=> (not x587) x6134) (=> (and x587 (and (= x636 x5144) (= x3911 (< x1384 x5210)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1384) (<= 0 x1384) (= x1384 (x6570 x6412)) (= x6412 (x5783 (x2264 x2540) (x6664 1) 0)))) (and (=> (and (not x3911) (= x9008 (< x1384 x636))) (and (=> (and (and (= x3507 (x6841 x1197)) (<= x3507 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4733 (> x3507 x3154)) (= (x2563 (- x1384 x636)) x5435) (= (x5783 (x2264 x6059) (x6664 1) 0) x1197) (= x8449 (x5783 (x2264 x2540) (x6664 1) 0)) (= x3154 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x636))) (>= x3507 0)) (not x9008)) (and (=> x4733 x6134) (=> (and (and (= (x910 (+ x3507 x636)) x6639) (= (> x3507 x6639) x1892)) (not x4733)) (and (=> x1892 x6134) (=> (and (and (= (< x3873 x636) x4327) (= x3873 (x2927 x8386)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3873) (= x7987 (x5783 (x2264 x2540) (x6664 2) 0)) (<= 0 x3873) (= x3303 (x5783 (x2264 x6059) (x6664 1) 0)) (= (x5783 (x2264 x1326) x7987 0) x8386)) (not x1892)) (and (=> x4327 x6134) (=> (and (not x4327) (= (> x636 x3873) x2945)) (and (=> (and (and (= x1966 32) (= x5014 (x2563 (- x3873 x636))) (= x145 (x5783 (x2264 x2540) (x6664 2) 0)) (= x1803 (x5783 (x2264 x1326) x145 0)) (= 1 x1975)) (not x2945)) x5964) (=> x2945 x6134))))))))) (=> x9008 x6134))) (=> x3911 x6134))))))))) (=> (and (not x1583) (= x4068 (= x3252 x5148))) (and (=> (and (= (= x3605 x3252) x4177) (not x4068)) (and (=> (and (and (not (= 405663989 x2850)) (< 0 x8636) (= 599290589 x2850) (> 2217467699 x2850) (> 988262939 x2850) (= x8999 x5210) (= x5381 x1326) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5539) (= x1486 x7036) (= x9039 (x2563 (- x172 4))) (= x172 100) (= x172 100) (= x8636 (x6844 (x2264 x3605))) (not (> 4 x172)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9039) true) (< x9039 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9039)) x4389) (not (< x2850 405663989)) (not (= 547091486 x2850))) x4177) (and (=> x4389 x242) (=> (and (and (= x7320 (= x1486 x7036)) (= x1486 x5758)) (not x4389)) (and (=> (not x7320) x242) (=> (and (and (= x5381 x8087) (= x5941 (= x5381 x1326))) x7320) (and (=> (and (and (= (x3633 x1651) x494) (= (> x5210 x494) x3667) (= (x5783 (x2264 x1486) (x6664 5) 0) x1651) (<= 0 x494) (= x7178 x8999) (<= x494 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x5941) (and (=> (and (and (= x6224 (< x3213 x8999)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3213) (= (x5783 (x2264 x1486) (x6664 5) 0) x1212) (>= x3213 0) (= x3213 (x3633 x1212))) (not x3667)) (and (=> (and (not x6224) (and (= (< x8203 x6165) x7790) (= x6676 (x5783 (x2264 x5381) (x6664 5) 0)) (<= x6165 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2563 (- x3213 x8999)) x8109) (>= x6165 0) (= (x437 x6676) x6165) (= x8203 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8999))))) (and (=> x7790 x242) (=> (and (not x7790) (and (= 1 x1388) (= x7751 (x910 (+ x6165 x8999))) (= 32 x6470) (= x6448 1))) x8024))) (=> x6224 x242))) (=> x3667 x242))) (=> (not x5941) x242))))))) (=> (and (not x4177) (and (= (= x3252 x1326) x342) (and x342 (and (= x972 (x6844 (x2264 x1326))) (not (> 405663989 x2367)) (> 2217467699 x2367) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1159) (= 100 x903) (= (x2563 (- x903 4)) x3922) (> x972 0) (not (= 405663989 x2367)) (not (> 4 x903)) (= x5210 x693) (= 100 x903) (= x1493 x1326) (= x7206 x7036) (= x2367 599290589) (not (= x2367 547091486)) (< x2367 988262939) (= x5352 (or (and (< x3922 96) (= true (<= x3922 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3922))))))) (and (=> x5352 x9214) (=> (and (not x5352) (and (= x7073 x7206) (= (= x7036 x7206) x1163))) (and (=> (not x1163) x9214) (=> (and (and (= x8830 x1493) (= (= x1493 x1326) x7980)) x1163) (and (=> (and x7980 (and (<= 0 x7816) (<= x7816 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x5210 x7816) x7713) (= (x108 x3799) x7816) (= (x5783 (x2264 x7206) (x6664 5) 0) x3799) (= x4378 x693))) (and (=> (and (and (= (> x693 x4281) x4790) (<= 0 x4281) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4281) (= x6245 (x5783 (x2264 x7206) (x6664 5) 0)) (= x4281 (x108 x6245))) (not x7713)) (and (=> (and (and (= (x4627 x1558) x5904) (= (x2563 (- x4281 x693)) x7326) (= (x5783 (x2264 x1493) (x6664 5) 0) x1558) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x693)) x6830) (<= 0 x5904) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5904) (= (< x6830 x5904) x2152)) (not x4790)) (and (=> (and (and (= 1 x620) (= (x910 (+ x693 x5904)) x3758) (= x1657 32) (= x6957 1)) (not x2152)) x452) (=> x2152 x9214))) (=> x4790 x9214))) (=> x7713 x9214))) (=> (not x7980) x9214))))))))) (=> (and (and (= x1326 x1885) (not (> 405663989 x5291)) (= x3369 x5210) (< x5291 2217467699) (< 0 x4874) (not (= 405663989 x5291)) (= (or (and (< x788 96) (= (<= x788 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x788)) x5401) (< x5291 988262939) (= 100 x2975) (= x6996 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x2975 4)) (= (x6844 (x2264 x5148)) x4874) (not (= x5291 547091486)) (= (x2563 (- x2975 4)) x788) (= 100 x2975) (= x7036 x2056) (= x5291 599290589)) x4068) (and (=> x5401 x5731) (=> (and (and (= x3731 (= x7036 x2056)) (= x2056 x708)) (not x5401)) (and (=> (and x3731 (and (= x1885 x6460) (= (= x1326 x1885) x4158))) (and (=> (not x4158) x5731) (=> (and (and (= x3219 (x5783 (x2264 x2056) (x6664 5) 0)) (= (> x5210 x7541) x5102) (= x7541 (x6566 x3219)) (= x7161 x3369) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7541) (>= x7541 0)) x4158) (and (=> (and (and (= (< x6643 x3369) x7906) (= (x6566 x5159) x6643) (<= x6643 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5159 (x5783 (x2264 x2056) (x6664 5) 0)) (>= x6643 0)) (not x5102)) (and (=> (and (not x7906) (and (= x5366 (> x3345 x9108)) (= x3324 (x5783 (x2264 x1885) (x6664 5) 0)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3369)) x9108) (<= 0 x3345) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3345) (= (x2563 (- x6643 x3369)) x3005) (= x3345 (x7255 x3324)))) (and (=> (and (not x5366) (and (= x4314 32) (= x4660 1) (= x8343 1) (= x7327 (x910 (+ x3369 x3345))))) x2661) (=> x5366 x5731))) (=> x7906 x5731))) (=> x5102 x5731))))) (=> (not x3731) x5731))))))))) (=> (and x4828 (= x6254 x5367)) x716))))) (=> (and (= x5367 x6254) x4198) x716))) (=> (and (= x6254 x5367) x8915) x716))) (=> (and (and (= (x2563 (- x3422 4)) x6847) (= x3623 (or (and (> 32 x6847) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6847))) (> x6847 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 0 x8138) (> 405663989 x3065) (not (> 4 x3422)) (> 2217467699 x3065) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x8981) (< x3065 988262939) (not (= 75483562 x3065)) (= x3065 242558722) (= x8138 (x6844 (x2264 x3605))) (= x3422 36) (= x3422 x6730) (= x2734 x713) (not (= x3065 178855970))) x5026) (and (=> (and x3623 (= x770 x5309)) x3952) (=> (and (not x3623) (and (>= x9205 0) (= x713 x7496) (= x3809 (x5783 (x2264 x7036) (x6664 6) 0)) (= x9205 (x5457 x3809)) (<= x9205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x178 (< x9205 x2734)))) (and (=> (and (not x178) (and (>= x5512 0) (= x8075 (x5783 (x2264 x7036) (x6664 6) 0)) (= (< x5512 x713) x7425) (= x5512 (x5457 x8075)) (<= x5512 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x770) (>= x770 0) (= x9132 (> x770 x4849)) (= x4849 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x713))) (= x3897 (x2563 (- x5512 x713)))) (not x7425)) (and (=> (and (not x9132) (and (= 128 x338) (<= x1750 1461501637330902918203684832716283019655932542975) (= x1507 (x910 (+ x713 x770))) (= (x910 (+ x713 x770)) x4187) (= (= x4668 x1750) x6225) (<= 0 x1750) (> 1461501637330902918203684832716283019655932542976 x1750))) (and (=> (and x6225 (and (= x3651 100) (= x3007 (x2563 (- x3651 4))) (not (> 4 x3651)) (not (< x4979 599290589)) (= (x6844 (x2264 x4668)) x3760) (> x3760 0) (= x6437 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3605 x2652) (= x4979 599290589) (= 100 x3651) (= x9151 x7036) (< x4979 1466279372) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3007) (and (> 96 x3007) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3007) true))) x4197) (= x5206 x7496))) (and (=> (and (and (= x3042 (= x9151 x7036)) (= x4516 x9151)) (not x4197)) (and (=> (not x3042) x3871) (=> (and (and (= (= x2652 x3605) x5722) (= x2652 x8931)) x3042) (and (=> (and (and (= x749 (x5783 (x2264 x9151) (x6664 1) 0)) (= (< x7227 x7496) x4202) (>= x7227 0) (= x7758 x5206) (= x7227 (x6570 x749)) (<= x7227 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x5722) (and (=> (and (not x4202) (= x2520 (< x7227 x5206))) (and (=> (and (not x2520) (and (= (x5783 (x2264 x9151) (x6664 1) 0) x2790) (= (x2563 (- x7227 x5206)) x2897) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5206)) x309) (= (x3512 x6881) x7831) (= x6881 (x5783 (x2264 x2652) (x6664 1) 0)) (<= x7831 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x7831 0) (= (> x7831 x309) x1517))) (and (=> x1517 x3871) (=> (and (not x1517) (and (= x1242 (< x1263 x7831)) (= x1263 (x910 (+ x7831 x5206))))) (and (=> x1242 x3871) (=> (and (and (= x5133 (x5783 (x2264 x3605) x556 0)) (= x5882 (x5783 (x2264 x2652) (x6664 1) 0)) (= (> x5206 x285) x8347) (= (x2927 x5133) x285) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x285) (= x556 (x5783 (x2264 x9151) (x6664 2) 0)) (>= x285 0)) (not x1242)) (and (=> (and (= (< x285 x5206) x6822) (not x8347)) (and (=> (and (not x6822) (and (= x2891 1) (= (x2563 (- x285 x5206)) x2168) (= (x5783 (x2264 x3605) x2728 0) x7064) (= (x5783 (x2264 x9151) (x6664 2) 0) x2728) (= x4360 32))) x8992) (=> x6822 x3871))) (=> x8347 x3871))))))) (=> x2520 x3871))) (=> x4202 x3871))) (=> (not x5722) x3871))))) (=> x4197 x3871))) (=> (and (not x6225) (= x7261 (= x5148 x1750))) (and (=> (and (and (= x3049 100) (> x2323 0) (not (< x4418 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6475) (= x2323 (x6844 (x2264 x5148))) (= x3049 100) (< x4418 2217467699) (= (or (> x604 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x604)) (> 96 x604))) x3567) (= x4529 x3605) (not (= x4418 405663989)) (not (> 4 x3049)) (= x5738 x7496) (= 599290589 x4418) (not (= x4418 547091486)) (= x7036 x7461) (= x604 (x2563 (- x3049 4))) (< x4418 988262939)) x7261) (and (=> x3567 x4220) (=> (and (not x3567) (and (= (= x7036 x7461) x8688) (= x7461 x2997))) (and (=> (not x8688) x4220) (=> (and (and (= x8349 (= x4529 x3605)) (= x4529 x6565)) x8688) (and (=> (and (and (= x5379 (x5783 (x2264 x7461) (x6664 5) 0)) (= (x6566 x5379) x6125) (<= 0 x6125) (= x5738 x7068) (= (< x6125 x7496) x4950) (<= x6125 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x8349) (and (=> x4950 x4220) (=> (and (not x4950) (and (= (> x5738 x8440) x8313) (>= x8440 0) (= (x5783 (x2264 x7461) (x6664 5) 0) x9126) (= (x6566 x9126) x8440) (<= x8440 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x8313) (and (= x5998 (x5783 (x2264 x4529) (x6664 5) 0)) (<= x1947 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7082 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5738))) (= (x2563 (- x8440 x5738)) x7251) (= x1947 (x7605 x5998)) (= (> x1947 x7082) x9160) (>= x1947 0))) (and (=> x9160 x4220) (=> (and (and (= 1 x6860) (= 1 x1094) (= 32 x2373) (= x1093 (x910 (+ x5738 x1947)))) (not x9160)) x864))) (=> x8313 x4220))))) (=> (not x8349) x4220))))))) (=> (and (not x7261) (= x3248 (= x3605 x1750))) (and (=> (and (and (= x9086 599290589) (= x4930 100) (= x5355 x7036) (= x1623 (x2563 (- x4930 4))) (not (= x9086 547091486)) (= (or (and (= (<= x1623 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x1623)) (> x1623 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x6308) (not (> 405663989 x9086)) (< x9086 988262939) (not (> 4 x4930)) (< 0 x1445) (= x8784 x3605) (= x7496 x7395) (= (x6844 (x2264 x3605)) x1445) (not (= 405663989 x9086)) (= x3636 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 2217467699 x9086) (= 100 x4930)) x3248) (and (=> (and (and (= x6789 x5355) (= x486 (= x5355 x7036))) (not x6308)) (and (=> (and (and (= x3642 x8784) (= (= x8784 x3605) x8862)) x486) (and (=> (not x8862) x1781) (=> (and x8862 (and (= x1417 (< x3330 x7496)) (= x7395 x9175) (>= x3330 0) (<= x3330 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3633 x3314) x3330) (= (x5783 (x2264 x5355) (x6664 5) 0) x3314))) (and (=> (and (not x1417) (and (= x3951 (x3633 x9026)) (>= x3951 0) (= (> x7395 x3951) x7791) (= (x5783 (x2264 x5355) (x6664 5) 0) x9026) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3951))) (and (=> (and (and (= (x2563 (- x3951 x7395)) x5970) (= (x8469 x2159) x4661) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4661) (= (x5783 (x2264 x8784) (x6664 5) 0) x2159) (= x4419 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7395))) (= (< x4419 x4661) x5192) (<= 0 x4661)) (not x7791)) (and (=> (and (not x5192) (and (= 1 x7174) (= (x910 (+ x7395 x4661)) x3941) (= 32 x5916) (= 1 x7710))) x5046) (=> x5192 x1781))) (=> x7791 x1781))) (=> x1417 x1781))))) (=> (not x486) x1781))) (=> x6308 x1781))) (=> (and (not x3248) (and (= (= x1750 x1326) x2793) (and x2793 (and (= 100 x7029) (= x2974 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x3285 405663989)) (= x3605 x457) (< 0 x4353) (> 2217467699 x3285) (not (= x3285 547091486)) (< x3285 988262939) (= 100 x7029) (= (x2563 (- x7029 4)) x3387) (not (< x7029 4)) (= x4353 (x6844 (x2264 x1326))) (= x7496 x4188) (= x7036 x6) (= x3285 599290589) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3387) (and (= (<= x3387 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x3387))) x105) (not (< x3285 405663989)))))) (and (=> (and (not x105) (and (= x6 x648) (= (= x6 x7036) x2022))) (and (=> (not x2022) x7471) (=> (and (and (= x4594 x457) (= x9197 (= x457 x3605))) x2022) (and (=> (and x9197 (and (= (x5783 (x2264 x6) (x6664 5) 0) x3195) (= x4865 (> x7496 x1348)) (<= x1348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x108 x3195) x1348) (= x4188 x4520) (<= 0 x1348))) (and (=> x4865 x7471) (=> (and (and (= (< x3556 x4188) x5982) (= x6607 (x5783 (x2264 x6) (x6664 5) 0)) (<= x3556 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3556 0) (= (x108 x6607) x3556)) (not x4865)) (and (=> x5982 x7471) (=> (and (and (= x8184 (x5783 (x2264 x457) (x6664 5) 0)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4188)) x4535) (= (x2563 (- x3556 x4188)) x1949) (= x1549 (< x4535 x1568)) (= x1568 (x132 x8184)) (<= x1568 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1568)) (not x5982)) (and (=> x1549 x7471) (=> (and (not x1549) (and (= x8627 1) (= x6096 32) (= x889 (x910 (+ x1568 x4188))) (= x2468 1))) x7268))))))) (=> (not x9197) x7471))))) (=> x105 x7471))))))))) (=> (and (= x770 x5309) x9132) x3952))) (=> (and x7425 (= x770 x5309)) x3952))) (=> (and (= x5309 x770) x178) x3952))))))))) (=> (not x5008) x8633)))))
(assert (x9173 x8657))
(assert (= (x3373 (x4000 x4274 1)) (+ 1 (x3373 x4274))))
(assert (x9173 x7682))
(assert (= (or x7299 x8533) x256))
(assert (x9173 x3304))
(assert (= (and x7380 x6416) x4751))
(assert (= (and (not x3074) x4650) x3359))
(assert (x2631 x4725))
(assert (= (and x6479 x7267) x6004))
(assert (= x462 (and x1575 (not x5408))))
(assert (=> (>= 10000 x2921) (= (x2264 x2921) (x6664 x2921))))
(assert (= (and (not x8383) x4185) x8501))
(assert (= x4967 (and x2327 (not x4043))))
(assert (= x3975 (and x4642 (not x67))))
(assert (x9173 x588))
(assert (x9173 x926))
(assert (= x2946 (and x5804 (not x1163))))
(assert (=> (<= x8503 10000) (= (x6664 x8503) (x2264 x8503))))
(assert (= x4181 (and (not x4749) x7786)))
(assert (x9173 x3637))
(assert (x9173 x7880))
(assert (= (x6664 547091486) (x2264 547091486)))
(assert (x9173 x1424))
(assert (x9173 x2801))
(assert (= (or x6031 x8625) x3815))
(assert (x9173 x8247))
(assert (x9173 x5763))
(assert (= x1700 (and (not x2371) x1618)))
(assert (x9173 x8229))
(assert (= x5317 (and (not x8172) x5961)))
(assert (= (and x3661 x43) x7664))
(assert (= x4927 (and (=> (and x4545 (= (< x985 x5036) x7370)) (and (=> (and (and (= x4944 (< x4851 x3741)) (= x4851 (x2563 (- x985 x5036)))) (not x7370)) x3368) (=> x7370 x2717))) (=> (and (not x4545) (= x4944 x4545)) x3368))))
(assert (x8398 x8591))
(assert (x9173 x6433))
(assert (= (or x3153 x5493) x4538))
(assert (x9173 x7627))
(assert (= (x3373 (x2264 x7138)) x7138))
(assert (= (and x5925 x4658) x7521))
(assert (x9173 x2696))
(assert (=> (<= x135 10000) (= (x6664 x135) (x2264 x135))))
(assert (= x3914 (and x3810 (not x3768))))
(assert (= (or x1354 x6210 x231 x5183 x7584 x7860) x5650))
(assert (= (and x7267 (not x6479)) x4571))
(assert (x9173 x3794))
(assert (x9173 x5638))
(assert (x9173 x2554))
(assert (= x4434 (and x7852 x3667)))
(assert (x9173 x1914))
(assert (x5765 x5320))
(assert (= x797 (and x6714 x7370)))
(assert (= x8032 (and (not x486) x6094)))
(assert (x5765 x1993))
(assert (= x2628 (=> (and (= x3821 0) (= x9004 x3298)) x5224)))
(assert (x9173 x2523))
(assert (= x300 (or x3406 x6296)))
(assert (x9173 x9159))
(assert (= x502 (x3373 (x2264 x502))))
(assert (= (and (not x6576) x4057) x3583))
(assert (= (+ (x3373 x5346) 1) (x3373 (x4000 x5346 1))))
(assert (= (=> (and (= 0 x8592) (= x1516 x7571)) x5264) x121))
(assert (x9173 x7831))
(assert (= (=> (and (= x5646 x4940) (= x5661 x1751)) x8097) x2670))
(assert (= (or x8339 x1972) x5955))
(assert (= x4286 (and x6105 (not x7770))))
(assert (x9173 x7606))
(assert (= x6445 (and x1213 x7946)))
(assert (= (and (not x7594) x1554) x7097))
(assert (x9173 x4222))
(assert (= (+ 1 (x3373 x1404)) (x3373 (x4000 x1404 1))))
(assert (= x589 (x3373 (x2264 x589))))
(assert (= (and x1134 x1446) x5178))
(assert (= (and (not x2501) x2032) x8726))
(assert (= x476 (and x6207 (not x2945))))
(assert (x9173 x2699))
(assert (= x2521 (or x1690 x5676)))
(assert (x9173 x5436))
(assert (x2631 x861))
(assert (x5765 x22))
(assert (x9173 x7411))
(assert (x9173 x7291))
(assert (x9173 x8476))
(assert (x9173 x1706))
(assert (=> (<= x3605 10000) (= (x6664 x3605) (x2264 x3605))))
(assert (x9173 x863))
(assert (= x7851 false))
(assert (x9173 x5314))
(assert (x5765 x8321))
(assert (x5699 x930 x7739))
(assert (= (and x1479 x6341) x1615))
(assert (= (x3373 (x2264 x5375)) x5375))
(assert (x9173 x8568))
(assert (x9173 x4654))
(assert (x9173 x7174))
(assert (x9173 x1814))
(assert (= x3812 (=> (and (>= x5375 0) (> 1461501637330902918203684832716283019655932542976 x5375) (= x7926 (= 0 x5375)) (>= 1461501637330902918203684832716283019655932542975 x5375)) (and (=> x7926 x1704) (=> (and (not x7926) (and (= x5455 (x6844 (x2264 x5375))) (> 1461501637330902918203684832716283019655932542976 x5375) (<= 0 x5375) (= x3763 (= x5455 0)) (<= x5375 1461501637330902918203684832716283019655932542975))) (and (=> (and (< x5607 4294967296) (not x3763)) x1704) (=> x3763 x8941)))))))
(assert (= x6870 (and x8376 (not x9111))))
(assert (x9173 x826))
(assert (= (and x1722 x1968) x8232))
(assert (x9173 x6088))
(assert (x9173 x2924))
(assert (x9173 x6501))
(assert (= x4723 (and x5396 x7617)))
(assert (x2631 x7739))
(assert (= (and (=> (and (not x2333) (and (= 1 x2193) (= x8249 x3133))) x3612) (=> (and x2333 (and (= x3539 x3133) (= x7292 x3881) (= x6517 x9128))) x4987)) x1747))
(assert (x9173 x6030))
(assert (x2631 x1024))
(assert (= (x3373 (x2264 x4501)) x4501))
(assert (x9173 x2089))
(assert (= (or x8451 x2353) x1370))
(assert (x9173 x5072))
(assert (x9173 x4370))
(assert (x9173 x2654))
(assert (= (and x6258 x813) x3893))
(assert (x9173 x2510))
(assert (x9173 x5039))
(assert (= x2789 (and (not x2605) x26)))
(assert (= x6176 (and x4820 (not x3418))))
(assert (x9173 x2303))
(assert (x9173 x995))
(assert (= (=> (and (= x7588 x7645) (= 0 x4531)) x365) x6637))
(assert (= (and x6549 (not x7510)) x3233))
(assert (= x802 (and x8782 (not x628))))
(assert (= (and x3566 (not x4139)) x7155))
(assert (x9173 x3792))
(assert (=> (>= 10000 x2543) (= (x2264 x2543) (x6664 x2543))))
(assert (= x6150 (and x2012 x7162)))
(assert (x9173 x848))
(assert (x9173 x2066))
(assert (x9173 x5066))
(assert (= x8506 (or x7828 x8833)))
(assert (= (and x4283 x7836) x6223))
(assert (x9173 x494))
(assert (= x4459 (=> (= (= x3696 x397) x661) (and (=> x661 x8893) (=> (and (not x661) (= x2948 (< 0 x397))) (and (=> (not x2948) x2953) (=> (and x2948 (and (> 1461501637330902918203684832716283019655932542976 x8741) (= (x1309 x7572) x5290) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5290) (<= x8741 1461501637330902918203684832716283019655932542975) (>= x3532 0) (>= x8741 0) (= x9024 (x5783 (x2264 x2254) x1580 0)) (<= 0 x5290) (< x3532 1461501637330902918203684832716283019655932542976) (= x8741 (x4861 x2102)) (= x7572 (x4000 x2102 1)) (<= x3532 1461501637330902918203684832716283019655932542975) (= x6943 (= 0 x5290)) (= x2102 (x4000 x9024 1)) (= x3532 (x9117 x9024)))) (and (=> (and (and (= x8560 (= x3532 0)) (or (and (not x8560) (and (= (x5783 (x2264 x3532) x1580 0) x4819) (= x7118 (x4000 x4819 1)))) (and (= x3628 (x4000 x1580 1)) x8560))) (not x6943)) x6347) (=> x6943 x8986)))))))))
(assert (= x815 (and (not x1862) x2104)))
(assert (x9173 x5110))
(assert (x5765 x4329))
(assert (= x5806 (or x3789 x671)))
(assert (= (x3373 (x2264 x6266)) x6266))
(assert (= (and x6384 (not x7536)) x1531))
(assert (= x8859 (and x3994 x9085)))
(assert (=> (>= 10000 x632) (= (x2264 x632) (x6664 x632))))
(assert (= (x3373 (x4000 x2419 1)) (+ 1 (x3373 x2419))))
(assert (x5765 x1345))
(assert (x9173 x6))
(assert (= x633 (=> (and (= x6291 x7482) (= x6505 x9104) (= x1068 x2176) (= x1584 x770)) x8428)))
(assert (x5765 x1499))
(assert (= x5857 (and x722 (not x630))))
(assert (x9173 x309))
(assert (= x5779 (and x8274 x4790)))
(assert (x5765 x8521))
(assert (=> (>= 10000 x290) (= (x2264 x290) (x6664 x290))))
(assert (= (and x3752 x4818) x474))
(assert (= (and x1274 x815) x1016))
(assert (x9173 x1991))
(assert (= (x3373 (x4000 x2522 1)) (+ (x3373 x2522) 1)))
(assert (x9173 x5729))
(assert (=> (>= 10000 x6786) (= (x2264 x6786) (x6664 x6786))))
(assert (= x4691 (and x581 x3750)))
(assert (x9173 x5808))
(assert (x9173 x6584))
(assert (=> (>= 10000 x3408) (= (x6664 x3408) (x2264 x3408))))
(assert (x9173 x6125))
(assert (x9173 x4010))
(assert (= (and x7535 (not x11)) x9090))
(assert (x9173 x4095))
(assert (= (and (not x4524) x149) x3030))
(assert (= (or x4974 x2412) x5020))
(assert (= x7807 (or x6299 x7242)))
(assert (x5765 x4374))
(assert (x9173 x4672))
(assert (x9173 x6774))
(assert (= (+ (x3373 x4958) 1) (x3373 (x4000 x4958 1))))
(assert (x9173 x1895))
(assert (x9173 x2040))
(assert (= (and x5351 x1050) x428))
(assert (x5765 x7358))
(assert (x9173 x6574))
(assert (x9173 x5953))
(assert (x9173 x142))
(assert (= (and x4009 x8027) x8804))
(assert (= (and (not x2058) x2181) x8640))
(assert (= (and x8818 x2241) x5581))
(assert (= x864 (=> (and (= x2373 x3249) (= x6860 x5986)) x1577)))
(assert (= (and x3068 x860) x4966))
(assert (= (x3373 (x4000 x3355 2)) (+ (x3373 x3355) 2)))
(assert (x9173 x5771))
(assert (= x7383 (=> (and (= 0 x2711) (= x8952 x7070)) x2070)))
(assert (x9173 x6633))
(assert (= (and (not x3527) x3104) x8060))
(assert (= x1237 (and x2217 x7418)))
(assert (x9173 x5455))
(assert (= (or x448 x1342) x5240))
(assert (= x4767 (and x5352 x1201)))
(assert (= (and x8463 (not x6683)) x2769))
(assert (x9173 x3312))
(assert (= x6988 (and x6733 x830)))
(assert (x9173 x2557))
(assert (= x5046 (=> (and (= x5916 x3249) (= x5986 x7174)) x1577)))
(assert (= x7378 (and x8804 x7415)))
(assert (x9173 x8620))
(assert (x9173 x6795))
(assert (=> (>= 10000 x5371) (= (x2264 x5371) (x6664 x5371))))
(assert (= x7236 (and x3137 (not x7847))))
(assert (x9173 x1920))
(assert (= (and x3738 x4464) x7584))
(assert (x9173 x8607))
(assert (= (and x8956 x7113) x2405))
(assert (x9173 x3734))
(assert (= (+ 1 (x3373 x1028)) (x3373 (x4000 x1028 1))))
(assert (x9173 x5903))
(assert (= x466 (and x2127 (not x634))))
(assert (= (and x5391 (not x5850)) x4244))
(assert (x9173 x152))
(assert (= (and x748 x2479) x219))
(assert (= (and x8810 x890) x6127))
(assert (x9173 x597))
(assert (= x2412 (or x8132 (and (not x4094) x8147) (and x1900 x8353) (and x4157 (not x7945)) x226 (and x6788 x5466))))
(assert (=> (>= 10000 x3177) (= (x6664 x3177) (x2264 x3177))))
(assert (= (and x4233 (not x3001)) x6649))
(assert (x9173 x7344))
(assert (= x4040 (and x5114 x7527)))
(assert (x9173 x1332))
(assert (= (x3373 (x4000 x1401 1)) (+ 1 (x3373 x1401))))
(assert (= x5865 (or x4272 x3933)))
(assert (= x6691 (and x1557 x509)))
(assert (= x7241 (and x840 x3662)))
(assert (= (x3373 (x2264 x5833)) x5833))
(assert (x9173 x3518))
(assert (x9173 x3441))
(assert (x9173 x5070))
(assert (= x799 (x3373 (x2264 x799))))
(assert (x9173 x9004))
(assert (x9173 x3098))
(assert (= x6485 (=> (and (= (ite (< x8346 x1) (not (= 0 x833)) (< x8346 x1)) x5974) (or (and (not x5974) (and (or (and (not x1101) (and (= x6740 (x910 (+ 96 x6975))) (= x8722 (x4000 x28 1)) (= x2962 x7447) (= (x4000 x1256 1) x942) (= x28 (x5783 (x2264 x2962) x3119 0)) (= x2962 (x6546 x7127)) (< x2962 1461501637330902918203684832716283019655932542976) (= (x5783 (x2264 x560) x3119 0) x1256) (= x6740 x7006) (<= 0 x2962) (= (x4000 x942 1) x6361) (= x7127 (x4000 x992 1)) (<= x2962 1461501637330902918203684832716283019655932542975))) (and (and (= (x5783 (x2264 x560) x3119 0) x5977) (= (x4000 x7513 1) x6959) (= x7513 (x4000 x5977 1)) (= x2555 x7006) (= x7447 x560) (= x5803 (x4000 x992 1)) (= x2555 (x910 (+ 96 x6975)))) x1101)) (and (<= 0 x1787) (> 1461501637330902918203684832716283019655932542976 x1787) (= x1101 (= x1787 0)) (= x1787 (x5640 x992)) (<= x1787 1461501637330902918203684832716283019655932542975)))) (and x5974 (and (and (= x678 (x2563 (- x833 x2745))) (= (x5640 x992) x2745) (>= 1461501637330902918203684832716283019655932542975 x2745) (> 1461501637330902918203684832716283019655932542976 x2745) (= x4035 (> x678 0)) (>= x2745 0)) (or (and x4035 (and (= x5099 (x5783 (x2264 x560) x3119 0)) (= (x5783 (x2264 x2543) x3119 0) x177) (= x7079 (x4000 x1809 1)) (>= x2543 0) (= x2543 (x7614 x938)) (= x1655 (x4000 x177 1)) (<= x2543 1461501637330902918203684832716283019655932542975) (= (x5783 (x2264 x833) x3119 0) x938) (= x833 x7447) (= x7006 x5768) (= (x5783 (x2264 x833) x3119 0) x9156) (= x1809 (x4000 x5099 1)) (< x2543 1461501637330902918203684832716283019655932542976) (= (x910 (+ x6975 96)) x5768))) (and (not x4035) (and (= (x4000 x1401 1) x9212) (= x7447 x833) (= (x4000 x5876 1) x1401) (= x5876 (x5783 (x2264 x560) x3119 0)) (= x1741 (x910 (+ 96 x6975))) (= x2167 (x5783 (x2264 x833) x3119 0)) (= x1741 x7006)))))))) x5112)))
(assert (x9173 x1263))
(assert (x9173 x7180))
(assert (= x3457 (and x9051 x8878)))
(assert (= (and (not x4923) x2885) x2695))
(assert (x9173 x5518))
(assert (x5765 x8784))
(assert (x9173 x3103))
(assert (= (and x790 x1840) x6640))
(assert (x9173 x1850))
(assert (x9173 x7206))
(assert (x9173 x2035))
(assert (x9173 x6306))
(assert (= (x2264 6539370208772218570076773595062200405109424842860869254164860851635934461952) (x6664 6539370208772218570076773595062200405109424842860869254164860851635934461952)))
(assert (= (=> (and (= (x6748 x8740 x873) x199) (= x1689 (ite (= 0 x8876) 1 0)) (= x4818 (< 0 x7501)) (= (ite (< 31 x8876) 1 0) x873) (= x7501 (x6748 x5671 x1915)) (= (x2812 x199 x1689) x5671) (= x8740 (ite (= x6944 1) 1 0))) (and (=> (and x4818 (and (= (= x3881 x5148) x8190) (= x8820 (x910 (+ x1432 32))) (= (x2563 (- x8820 x8590)) x4302) (= x1432 (x910 (+ 4 x8590))))) (and (=> (and (and (= x1945 36) (< 0 x5203) (> 2217467699 x5740) (= (x2563 (- x1945 4)) x4632) (= x5740 242558722) (not (= 178855970 x5740)) (< x5740 405663989) (not (> 4 x1945)) (= x3343 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4632) (and (> 32 x4632) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4632) true)))) (> 988262939 x5740) (= x4302 x1945) (= x8922 x3990) (= (x6844 (x2264 x5148)) x5203) (not (= 75483562 x5740)) (= x8815 6539370208772218570076773595062200405109424842860869254164860851635934461952)) x8190) (and (=> x3343 x7642) (=> (and (not x3343) (and (<= x8095 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1057 (x5783 (x2264 x7036) (x6664 6) 0)) (= x8095 (x1203 x1057)) (= x8922 x5376) (<= 0 x8095) (= (> x3990 x8095) x1000))) (and (=> x1000 x7642) (=> (and (and (= (< x463 x8922) x3548) (= (x1203 x6083) x463) (<= 0 x463) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x463) (= (x5783 (x2264 x7036) (x6664 6) 0) x6083)) (not x1000)) (and (=> x3548 x7642) (=> (and (and (= x3109 (< x9091 x1068)) (>= x1068 0) (= x3791 (x2563 (- x463 x8922))) (<= x1068 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x9091 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8922)))) (not x3548)) (and (=> (and (not x3109) (and (> 1461501637330902918203684832716283019655932542976 x1116) (>= 1461501637330902918203684832716283019655932542975 x1116) (= (= x1116 x4668) x9105) (= x2585 128) (>= x1116 0) (= x1424 (x910 (+ x8922 x1068))))) (and (=> (and (and (not (< x820 599290589)) (< x820 1466279372) (= x6063 x5376) (= x5819 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x6844 (x2264 x4668)) x5958) (= x820 599290589) (not (> 4 x3020)) (= x6759 x7036) (< 0 x5958) (= x3020 100) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4171) (and (> 96 x4171) (= true (<= x4171 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x2638) (= x5148 x1753) (= 100 x3020) (= x4171 (x2563 (- x3020 4)))) x9105) (and (=> (and (not x2638) (and (= x1866 (= x7036 x6759)) (= x6759 x6949))) (and (=> (not x1866) x7176) (=> (and x1866 (and (= x7507 x1753) (= (= x1753 x5148) x4961))) (and (=> (and x4961 (and (= (x6570 x897) x2171) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2171) (= x3492 (< x2171 x5376)) (= x897 (x5783 (x2264 x6759) (x6664 1) 0)) (= x2911 x6063) (>= x2171 0))) (and (=> x3492 x7176) (=> (and (not x3492) (= (> x6063 x2171) x3099)) (and (=> (and (not x3099) (and (= (x5783 (x2264 x6759) (x6664 1) 0) x2766) (= x3693 (x2563 (- x2171 x6063))) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6063)) x7679) (<= 0 x1772) (= x1346 (x5783 (x2264 x1753) (x6664 1) 0)) (= (x8485 x1346) x1772) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1772) (= (> x1772 x7679) x3664))) (and (=> x3664 x7176) (=> (and (not x3664) (and (= x3379 (x910 (+ x1772 x6063))) (= x3590 (< x3379 x1772)))) (and (=> (and (and (<= x1922 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x6063 x1922) x6548) (<= 0 x1922) (= x1629 (x5783 (x2264 x5148) x5077 0)) (= x5077 (x5783 (x2264 x6759) (x6664 2) 0)) (= x1922 (x6859 x1629))) (not x3590)) (and (=> (and (= x6028 (< x1922 x6063)) (not x6548)) (and (=> (and (and (= x495 32) (= x5664 1) (= x5214 (x2563 (- x1922 x6063)))) (not x6028)) x4669) (=> x6028 x7176))) (=> x6548 x7176))) (=> x3590 x7176))))) (=> x3099 x7176))))) (=> (not x4961) x7176))))) (=> x2638 x7176))) (=> (and (= x840 (= x1116 x5148)) (not x9105)) (and (=> (and (not x840) (= (= x3605 x1116) x8650)) (and (=> (and x8650 (and (= 100 x8407) (= x5004 x5148) (< 0 x2270) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x395) (and (= (<= x395 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x395 96))) x5841) (= x1903 x7036) (not (> 4 x8407)) (not (= x8477 405663989)) (= 599290589 x8477) (= x2703 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1952 x5376) (not (= x8477 547091486)) (= (x2563 (- x8407 4)) x395) (> 988262939 x8477) (= x8407 100) (> 2217467699 x8477) (not (< x8477 405663989)) (= x2270 (x6844 (x2264 x3605))))) (and (=> (and (not x5841) (and (= x7028 (= x7036 x1903)) (= x1903 x826))) (and (=> (and (and (= x3560 (= x5148 x5004)) (= x7410 x5004)) x7028) (and (=> (not x3560) x3554) (=> (and (and (= (x3633 x4403) x4913) (= (> x5376 x4913) x5445) (<= x4913 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4913 0) (= x643 x1952) (= x4403 (x5783 (x2264 x1903) (x6664 5) 0))) x3560) (and (=> x5445 x3554) (=> (and (not x5445) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4917) (= (x3633 x6765) x4917) (= x6765 (x5783 (x2264 x1903) (x6664 5) 0)) (= x4345 (> x1952 x4917)) (>= x4917 0))) (and (=> (and (and (= x6425 (x2563 (- x4917 x1952))) (= x7817 (x5783 (x2264 x5004) (x6664 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6322) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1952)) x8047) (= x4467 (< x8047 x6322)) (= x6322 (x3891 x7817)) (<= 0 x6322)) (not x4345)) (and (=> x4467 x3554) (=> (and (and (= x4606 32) (= 1 x4811) (= x5526 1) (= x1460 (x910 (+ x1952 x6322)))) (not x4467)) x3169))) (=> x4345 x3554))))))) (=> (not x7028) x3554))) (=> x5841 x3554))) (=> (and (not x8650) (and (= x2268 (= x1326 x1116)) (and x2268 (and (= x5376 x152) (= x9028 (x2563 (- x4416 4))) (= 100 x4416) (= 599290589 x1672) (= x839 (x6844 (x2264 x1326))) (not (> 405663989 x1672)) (< 0 x839) (not (= x1672 405663989)) (= 100 x4416) (> 988262939 x1672) (= x8884 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 547091486 x1672)) (< x1672 2217467699) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9028) (and (= true (<= x9028 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x9028 96))) x6272) (= x940 x5148) (= x7036 x8796) (not (< x4416 4)))))) (and (=> (and (not x6272) (and (= (= x7036 x8796) x1343) (= x8796 x6482))) (and (=> (and x1343 (and (= x8366 x940) (= x7929 (= x5148 x940)))) (and (=> (and (and (= x5873 x152) (>= x5166 0) (= (x5783 (x2264 x8796) (x6664 5) 0) x1464) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5166) (= x5166 (x108 x1464)) (= (> x5376 x5166) x2708)) x7929) (and (=> x2708 x8139) (=> (and (and (= x1862 (< x1761 x152)) (<= x1761 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8458 (x5783 (x2264 x8796) (x6664 5) 0)) (= (x108 x8458) x1761) (>= x1761 0)) (not x2708)) (and (=> x1862 x8139) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2212) (= x2212 (x3224 x258)) (<= 0 x2212) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x152)) x5472) (= (x5783 (x2264 x940) (x6664 5) 0) x258) (= x1274 (< x5472 x2212)) (= x2067 (x2563 (- x1761 x152)))) (not x1862)) (and (=> x1274 x8139) (=> (and (not x1274) (and (= 32 x3514) (= 1 x9123) (= (x910 (+ x2212 x152)) x3571) (= x6465 1))) x4903))))))) (=> (not x7929) x8139))) (=> (not x1343) x8139))) (=> x6272 x8139))))) (=> (and (and (= x5148 x31) (= x7148 100) (= x1926 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5441) (and (> 96 x5441) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5441) true)))) (= x568 (x6844 (x2264 x5148))) (> 2217467699 x1434) (= x5800 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x7148)) (= x1434 599290589) (not (> 405663989 x1434)) (not (= 547091486 x1434)) (= (x2563 (- x7148 4)) x5441) (= 100 x7148) (< 0 x568) (= x2138 x7036) (= x5556 x5376) (not (= 405663989 x1434)) (< x1434 988262939)) x840) (and (=> x1926 x3663) (=> (and (not x1926) (and (= x8468 (= x7036 x2138)) (= x7771 x2138))) (and (=> (and (and (= x31 x4986) (= (= x31 x5148) x1513)) x8468) (and (=> (and (and (>= x3630 0) (= (x6566 x8846) x3630) (= x8846 (x5783 (x2264 x2138) (x6664 5) 0)) (= x1141 x5556) (= (< x3630 x5376) x487) (<= x3630 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1513) (and (=> x487 x3663) (=> (and (and (= x628 (< x7093 x5556)) (<= 0 x7093) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7093) (= x7093 (x6566 x8171)) (= x8171 (x5783 (x2264 x2138) (x6664 5) 0))) (not x487)) (and (=> x628 x3663) (=> (and (not x628) (and (= x1029 (< x3048 x5155)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5155) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5556)) x3048) (= (x6754 x9070) x5155) (= x2657 (x2563 (- x7093 x5556))) (>= x5155 0) (= x9070 (x5783 (x2264 x31) (x6664 5) 0)))) (and (=> x1029 x3663) (=> (and (not x1029) (and (= x1368 32) (= 1 x4260) (= x4873 1) (= x9044 (x910 (+ x5556 x5155))))) x6994))))))) (=> (not x1513) x3663))) (=> (not x8468) x3663))))))))) (=> x3109 x7642))))))))) (=> (and (not x8190) (= x1413 (= x3605 x3881))) (and (=> (and x1413 (and (< x4684 988262939) (= x4980 (x6844 (x2264 x3605))) (= x3990 x7459) (= x7185 36) (< x4684 405663989) (not (= 178855970 x4684)) (= (x2563 (- x7185 4)) x4764) (= x5587 (or (> x4764 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4764 32) (= true (<= x4764 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (< 0 x4980) (= 242558722 x4684) (not (= 75483562 x4684)) (= x6806 6539370208772218570076773595062200405109424842860869254164860851635934461952) (= x4302 x7185) (> 2217467699 x4684) (not (> 4 x7185)))) (and (=> x5587 x126) (=> (and (and (= x8746 (x5457 x2284)) (= x3279 (> x3990 x8746)) (= (x5783 (x2264 x7036) (x6664 6) 0) x2284) (>= x8746 0) (= x7592 x7459) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8746)) (not x5587)) (and (=> (and (and (<= 0 x1914) (= (x5783 (x2264 x7036) (x6664 6) 0) x5232) (= (x5457 x5232) x1914) (= x6856 (< x1914 x7459)) (<= x1914 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3279)) (and (=> (and (and (<= 0 x770) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x770) (= x3148 (x2563 (- x1914 x7459))) (= (> x770 x5871) x8324) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7459)) x5871)) (not x6856)) (and (=> (and (and (= (x910 (+ x770 x7459)) x3176) (<= x1750 1461501637330902918203684832716283019655932542975) (= (= x4668 x1750) x5408) (< x1750 1461501637330902918203684832716283019655932542976) (= 128 x2115) (<= 0 x1750)) (not x8324)) (and (=> (and (and (= x7603 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x896) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x896) true) (> 96 x896)))) (= x2107 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x5464) (not (< x1405 4)) (= x7592 x1151) (= 100 x1405) (= x3410 (x6844 (x2264 x4668))) (= x7036 x7291) (= 100 x1405) (> x3410 0) (< x5464 1466279372) (= x3605 x4356) (not (< x5464 599290589)) (= (x2563 (- x1405 4)) x896)) x5408) (and (=> (and (and (= x7291 x822) (= x7616 (= x7291 x7036))) (not x7603)) (and (=> (and x7616 (and (= (= x3605 x4356) x2587) (= x4356 x3193))) (and (=> (and x2587 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1745) (= x6124 (x5783 (x2264 x7291) (x6664 1) 0)) (<= 0 x1745) (= (x6570 x6124) x1745) (= x5760 (< x1745 x7592)) (= x1151 x7235))) (and (=> (and (not x5760) (= x1585 (> x1151 x1745))) (and (=> (and (not x1585) (and (= (x5783 (x2264 x7291) (x6664 1) 0) x1653) (= (x2563 (- x1745 x1151)) x2001) (<= 0 x5883) (= (x5783 (x2264 x4356) (x6664 1) 0) x4775) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1151)) x61) (= x3754 (> x5883 x61)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5883) (= (x1635 x4775) x5883))) (and (=> (and (not x3754) (and (= x411 (> x5883 x115)) (= (x910 (+ x1151 x5883)) x115))) (and (=> x411 x408) (=> (and (not x411) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2409) (= x1537 (> x1151 x2409)) (>= x2409 0) (= (x6859 x4831) x2409) (= x969 (x5783 (x2264 x7291) (x6664 2) 0)) (= x4831 (x5783 (x2264 x3605) x969 0)))) (and (=> x1537 x408) (=> (and (not x1537) (= x6258 (< x2409 x1151))) (and (=> x6258 x408) (=> (and (not x6258) (and (= 32 x2123) (= 1 x6608) (= x597 (x2563 (- x2409 x1151))))) x5234))))))) (=> x3754 x408))) (=> x1585 x408))) (=> x5760 x408))) (=> (not x2587) x408))) (=> (not x7616) x408))) (=> x7603 x408))) (=> (and (= (= x5148 x1750) x6896) (not x5408)) (and (=> (and (= x6727 (= x3605 x1750)) (not x6896)) (and (=> (and (not x6727) (and (and x8205 (and (= x7592 x1448) (> 2217467699 x2788) (not (< x8069 4)) (= x7036 x2937) (= x2261 (x6844 (x2264 x1326))) (= (x2563 (- x8069 4)) x2) (< 0 x2261) (= x8069 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x8519) (not (= 547091486 x2788)) (= x2788 599290589) (= x7136 (or (> x2 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2)) (< x2 96)))) (not (< x2788 405663989)) (= x4374 x3605) (not (= 405663989 x2788)) (= 100 x8069) (> 988262939 x2788))) (= (= x1750 x1326) x8205))) (and (=> (and (and (= x8076 (= x2937 x7036)) (= x2937 x8983)) (not x7136)) (and (=> (and (and (= x4374 x6958) (= (= x4374 x3605) x929)) x8076) (and (=> (and x929 (and (<= 0 x6318) (<= x6318 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1431 (x5783 (x2264 x2937) (x6664 5) 0)) (= (< x6318 x7592) x128) (= x6318 (x108 x1431)) (= x6373 x1448))) (and (=> (and (and (= (> x1448 x6574) x5782) (= (x108 x7913) x6574) (<= 0 x6574) (= x7913 (x5783 (x2264 x2937) (x6664 5) 0)) (<= x6574 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x128)) (and (=> x5782 x1767) (=> (and (not x5782) (and (<= 0 x1888) (= x2204 (x5783 (x2264 x4374) (x6664 5) 0)) (= x7004 (> x1888 x6088)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1448)) x6088) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1888) (= x1888 (x8614 x2204)) (= x6999 (x2563 (- x6574 x1448))))) (and (=> x7004 x1767) (=> (and (and (= 1 x383) (= 32 x3038) (= (x910 (+ x1448 x1888)) x7932) (= 1 x8694)) (not x7004)) x1249))))) (=> x128 x1767))) (=> (not x929) x1767))) (=> (not x8076) x1767))) (=> x7136 x1767))) (=> (and (and (= x5595 599290589) (< x5595 2217467699) (not (= 405663989 x5595)) (> x6337 0) (= (or (and (= (<= x5226 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x5226)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5226)) x7232) (= x1659 x3605) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x8448) (= (x6844 (x2264 x3605)) x6337) (= x5226 (x2563 (- x1145 4))) (= x1145 100) (not (< x5595 405663989)) (= x6388 x7036) (= x1442 x7592) (not (= x5595 547091486)) (= 100 x1145) (not (> 4 x1145)) (> 988262939 x5595)) x6727) (and (=> x7232 x2382) (=> (and (and (= (= x6388 x7036) x5785) (= x6388 x1341)) (not x7232)) (and (=> (and (and (= x1659 x3910) (= x8434 (= x1659 x3605))) x5785) (and (=> (and x8434 (and (= (x3633 x562) x9018) (= x562 (x5783 (x2264 x6388) (x6664 5) 0)) (>= x9018 0) (= x2334 (> x7592 x9018)) (<= x9018 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1442 x1562))) (and (=> x2334 x2382) (=> (and (and (= x3074 (> x1442 x1137)) (= x1137 (x3633 x3639)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1137) (>= x1137 0) (= x3639 (x5783 (x2264 x6388) (x6664 5) 0))) (not x2334)) (and (=> x3074 x2382) (=> (and (not x3074) (and (= (x1933 x3899) x8430) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1442)) x1622) (= x3899 (x5783 (x2264 x1659) (x6664 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8430) (>= x8430 0) (= x3367 (x2563 (- x1137 x1442))) (= (< x1622 x8430) x5043))) (and (=> x5043 x2382) (=> (and (not x5043) (and (= 1 x3890) (= x7520 1) (= 32 x8287) (= x3078 (x910 (+ x1442 x8430))))) x1763))))))) (=> (not x8434) x2382))) (=> (not x5785) x2382))))))) (=> (and x6896 (and (= 599290589 x2304) (< 0 x7826) (= 100 x5089) (not (< x5089 4)) (= x4827 (x2563 (- x5089 4))) (not (= 547091486 x2304)) (= x234 x3605) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2045) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4827) (and (> 96 x4827) (= true (<= x4827 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x6817) (< x2304 2217467699) (= x387 x7592) (= 100 x5089) (< x2304 988262939) (not (< x2304 405663989)) (= x7036 x1993) (not (= 405663989 x2304)) (= (x6844 (x2264 x5148)) x7826))) (and (=> (and (and (= x3907 (= x7036 x1993)) (= x3863 x1993)) (not x6817)) (and (=> (not x3907) x4491) (=> (and (and (= (= x234 x3605) x8461) (= x234 x8433)) x3907) (and (=> (and x8461 (and (= x5063 x387) (>= x8883 0) (<= x8883 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6916 (> x7592 x8883)) (= x1302 (x5783 (x2264 x1993) (x6664 5) 0)) (= (x6566 x1302) x8883))) (and (=> (and (and (= x8505 (x6566 x2723)) (>= x8505 0) (= (x5783 (x2264 x1993) (x6664 5) 0) x2723) (= (< x8505 x387) x3646) (<= x8505 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x6916)) (and (=> (and (not x3646) (and (<= 0 x7808) (= (x5783 (x2264 x234) (x6664 5) 0) x4096) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x387)) x980) (= (x2563 (- x8505 x387)) x4933) (= (> x7808 x980) x3936) (= (x1927 x4096) x7808) (<= x7808 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x3936 x4491) (=> (and (not x3936) (and (= x2269 (x910 (+ x387 x7808))) (= 32 x1528) (= x8056 1) (= 1 x6129))) x3123))) (=> x3646 x4491))) (=> x6916 x4491))) (=> (not x8461) x4491))))) (=> x6817 x4491))))))) (=> x8324 x126))) (=> x6856 x126))) (=> x3279 x126))))) (=> (and (and (and (and (= 242558722 x4810) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x795) (> 988262939 x4810) (= x3138 x4302) (< x4810 2217467699) (= x2845 (or (and (= (<= x3113 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3113 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3113))) (= x2518 x3990) (< x4810 405663989) (< 0 x2395) (not (= x4810 75483562)) (not (> 4 x3138)) (not (= x4810 178855970)) (= x3113 (x2563 (- x3138 4))) (= x3138 36) (= x2395 (x6844 (x2264 x1326)))) x7768) (= (= x3881 x1326) x7768)) (not x1413)) (and (=> x2845 x2669) (=> (and (not x2845) (and (= x7575 (> x3990 x6093)) (= x2248 (x5783 (x2264 x7036) (x6664 6) 0)) (= x4990 x2518) (>= x6093 0) (<= x6093 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4457 x2248) x6093))) (and (=> (and (and (<= 0 x8427) (= (x5783 (x2264 x7036) (x6664 6) 0) x49) (= (x4457 x49) x8427) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8427) (= x1804 (> x2518 x8427))) (not x7575)) (and (=> (and (not x1804) (and (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2518)) x3857) (= (x2563 (- x8427 x2518)) x1522) (= (> x5367 x3857) x6045) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5367) (<= 0 x5367))) (and (=> (and (not x6045) (and (< x3252 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x3252) (= x6463 (x910 (+ x5367 x2518))) (>= x3252 0) (= x8450 128) (= (= x3252 x4668) x656))) (and (=> (and (and (= 100 x5198) (not (> 599290589 x1366)) (= x3858 x4990) (= x5198 100) (not (> 4 x5198)) (> x1806 0) (= x7259 (x2563 (- x5198 4))) (= x1366 599290589) (= x7036 x6266) (= x1326 x7103) (> 1466279372 x1366) (= x5513 (or (> x7259 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7259) true) (> 96 x7259)))) (= (x6844 (x2264 x4668)) x1806) (= x40 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x656) (and (=> (and (and (= x4067 x6266) (= x3069 (= x6266 x7036))) (not x5513)) (and (=> (and x3069 (and (= x8303 (= x7103 x1326)) (= x5250 x7103))) (and (=> (not x8303) x7199) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x323) (= x323 (x6570 x2599)) (= x3858 x1164) (= x6201 (< x323 x4990)) (<= 0 x323) (= (x5783 (x2264 x6266) (x6664 1) 0) x2599)) x8303) (and (=> x6201 x7199) (=> (and (= x3393 (> x3858 x323)) (not x6201)) (and (=> x3393 x7199) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3098) (= (x5783 (x2264 x6266) (x6664 1) 0) x6884) (= x5173 (x5783 (x2264 x7103) (x6664 1) 0)) (= x1795 (x2563 (- x323 x3858))) (= x5426 (< x2947 x3098)) (= (x3332 x5173) x3098) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3858)) x2947) (>= x3098 0)) (not x3393)) (and (=> x5426 x7199) (=> (and (and (= x440 (x910 (+ x3858 x3098))) (= (> x3098 x440) x2161)) (not x5426)) (and (=> (and (not x2161) (and (= (x6859 x3487) x5665) (= x3487 (x5783 (x2264 x1326) x2055 0)) (<= x5665 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3139 (< x5665 x3858)) (<= 0 x5665) (= (x5783 (x2264 x6266) (x6664 2) 0) x2055))) (and (=> (and (= x4842 (> x3858 x5665)) (not x3139)) (and (=> x4842 x7199) (=> (and (and (= x5325 (x2563 (- x5665 x3858))) (= x3704 1) (= x284 32)) (not x4842)) x1509))) (=> x3139 x7199))) (=> x2161 x7199))))))))))) (=> (not x3069) x7199))) (=> x5513 x7199))) (=> (and (not x656) (= (= x3252 x5148) x499)) (and (=> (and (= (= x3252 x3605) x2008) (not x499)) (and (=> (and (not x2008) (and (and (and (> 988262939 x3970) (= 599290589 x3970) (= (x2563 (- x2839 4)) x3631) (not (= x3970 547091486)) (= x1326 x8321) (= x7924 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x2839)) (= 100 x2839) (< 0 x7627) (not (= x3970 405663989)) (= x3930 x4990) (= x8885 (or (and (= (<= x3631 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x3631)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3631))) (not (> 405663989 x3970)) (= x7627 (x6844 (x2264 x1326))) (< x3970 2217467699) (= 100 x2839) (= x4391 x7036)) x5700) (= x5700 (= x3252 x1326)))) (and (=> x8885 x7940) (=> (and (not x8885) (and (= x1321 x4391) (= x1856 (= x4391 x7036)))) (and (=> (not x1856) x7940) (=> (and x1856 (and (= x6863 x8321) (= (= x1326 x8321) x3954))) (and (=> (and x3954 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x542) (= (x5783 (x2264 x4391) (x6664 5) 0) x964) (>= x542 0) (= x542 (x108 x964)) (= x7915 (< x542 x4990)) (= x380 x3930))) (and (=> x7915 x7940) (=> (and (not x7915) (and (= (x108 x8943) x1340) (>= x1340 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1340) (= (< x1340 x3930) x901) (= (x5783 (x2264 x4391) (x6664 5) 0) x8943))) (and (=> (and (and (<= 0 x5090) (= (< x2257 x5090) x6235) (= x8621 (x5783 (x2264 x8321) (x6664 5) 0)) (= (x2563 (- x1340 x3930)) x1258) (= x2257 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3930))) (= (x4765 x8621) x5090) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5090)) (not x901)) (and (=> x6235 x7940) (=> (and (not x6235) (and (= x8341 1) (= (x910 (+ x3930 x5090)) x948) (= x4470 1) (= 32 x2696))) x406))) (=> x901 x7940))))) (=> (not x3954) x7940))))))) (=> (and x2008 (and (> 2217467699 x2614) (= 100 x2577) (= x5480 x7036) (not (= 547091486 x2614)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x360) (not (= x2614 405663989)) (= 100 x2577) (< 0 x9170) (> 988262939 x2614) (not (> 4 x2577)) (= x9178 x1326) (= x7918 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2559) (and (> 96 x2559) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2559) true)))) (= x9170 (x6844 (x2264 x3605))) (not (< x2614 405663989)) (= (x2563 (- x2577 4)) x2559) (= x655 x4990) (= x2614 599290589))) (and (=> (and (and (= x5480 x8476) (= (= x5480 x7036) x8493)) (not x7918)) (and (=> (not x8493) x2598) (=> (and x8493 (and (= (= x9178 x1326) x9153) (= x6333 x9178))) (and (=> (and (and (= x3443 x655) (>= x6807 0) (= x3135 (x5783 (x2264 x5480) (x6664 5) 0)) (= x6807 (x3633 x3135)) (= (> x4990 x6807) x7012) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6807)) x9153) (and (=> (and (not x7012) (and (= x905 (x5783 (x2264 x5480) (x6664 5) 0)) (= (> x655 x657) x1280) (= x657 (x3633 x905)) (>= x657 0) (<= x657 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1280) (and (>= x4097 0) (<= x4097 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2245 x4097) x953) (= (x2563 (- x657 x655)) x4229) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x655)) x2245) (= x1521 (x5783 (x2264 x9178) (x6664 5) 0)) (= (x330 x1521) x4097))) (and (=> (and (not x953) (and (= x4237 1) (= (x910 (+ x655 x4097)) x2084) (= 1 x7531) (= 32 x6396))) x787) (=> x953 x2598))) (=> x1280 x2598))) (=> x7012 x2598))) (=> (not x9153) x2598))))) (=> x7918 x2598))))) (=> (and x499 (and (not (= x127 405663989)) (= x8271 100) (= 599290589 x127) (= x3455 x1326) (not (= 547091486 x127)) (= x8868 (or (and (= (<= x7606 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x7606)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7606))) (= x8271 100) (= (x6844 (x2264 x5148)) x3240) (not (> 405663989 x127)) (< x127 2217467699) (< x127 988262939) (not (> 4 x8271)) (= x7606 (x2563 (- x8271 4))) (< 0 x3240) (= x4823 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x7036 x7958) (= x4990 x2604))) (and (=> (and (and (= x740 (= x7958 x7036)) (= x7958 x3144)) (not x8868)) (and (=> (not x740) x5575) (=> (and x740 (and (= x6563 (= x1326 x3455)) (= x3455 x1594))) (and (=> (and x6563 (and (= x2604 x669) (<= 0 x7342) (= x4310 (< x7342 x4990)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7342) (= x419 (x5783 (x2264 x7958) (x6664 5) 0)) (= (x6566 x419) x7342))) (and (=> x4310 x5575) (=> (and (not x4310) (and (<= 0 x5035) (= (> x2604 x5035) x7847) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035) (= x7745 (x5783 (x2264 x7958) (x6664 5) 0)) (= (x6566 x7745) x5035))) (and (=> x7847 x5575) (=> (and (not x7847) (and (= (x5783 (x2264 x3455) (x6664 5) 0) x4678) (= x6705 (x2406 x4678)) (>= x6705 0) (= (< x5801 x6705) x4719) (= x5801 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604))) (= x3141 (x2563 (- x5035 x2604))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6705))) (and (=> x4719 x5575) (=> (and (not x4719) (and (= 32 x5855) (= x4275 1) (= x5874 (x910 (+ x6705 x2604))) (= 1 x8436))) x8192))))))) (=> (not x6563) x5575))))) (=> x8868 x5575))))))) (=> x6045 x2669))) (=> x1804 x2669))) (=> x7575 x2669))))))))) (=> (not x4818) x8633))) x4299))
(assert (= x3081 (and x656 x6868)))
(assert (x9173 x2437))
(assert (x9173 x4374))
(assert (x9173 x4477))
(assert (= (=> (and (= x2054 x7070) (= x5382 0)) x8404) x5592))
(assert (x9173 x1787))
(assert (= (and x3163 x923) x8043))
(assert (= (and (not x8560) x421) x2576))
(assert (x9173 x8892))
(assert (= x1175 (and x2072 (not x8313))))
(assert (x9173 x4201))
(assert (= (and x1575 x5408) x7264))
(assert (x9173 x4519))
(assert (= (and x7593 x6174) x8081))
(assert (= (and x8907 x1209) x8500))
(assert (x5699 x7167 x3868))
(assert (= (or x4252 x1330) x4634))
(assert (x9173 x1982))
(assert (= (and x2421 x9172) x521))
(assert (x2631 x5188))
(assert (x5765 x3114))
(assert (x9173 x3818))
(assert (= x4562 (=> (= (= 0 x2349) x8077) (and (=> (and (not x8077) (= x6815 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x577)) (> 32 x577)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x577)))) (and (=> x6815 x2669) (=> (and (not x6815) (and (= 32 x673) (= 1 x831))) x59))) (=> x8077 x2669)))))
(assert (= (x3373 (x2264 x8631)) x8631))
(assert (= (or x2882 x4231 x4989 x5080) x1626))
(assert (x9173 x817))
(assert (= x8880 (=> (and (= x8554 x1017) (= x911 x7245)) x7473)))
(assert (= (and x5459 x7925) x7050))
(assert (= (x3373 (x6664 6539370208772218570076773595062200405109424842860869254164860851635934461952)) 6539370208772218570076773595062200405109424842860869254164860851635934461952))
(assert (=> (<= x2189 10000) (= (x2264 x2189) (x6664 x2189))))
(assert (= (+ 1 (x3373 x2935)) (x3373 (x4000 x2935 1))))
(assert (x9173 x8069))
(assert (=> (>= 10000 x4924) (= (x6664 x4924) (x2264 x4924))))
(assert (= 1313710058 (x3373 (x6664 1313710058))))
(assert (= x842 (and x8962 (not x7638))))
(assert (= (x3373 (x6664 2678788150)) 2678788150))
(assert (x9173 x6619))
(assert (=> (>= 10000 x4093) (= (x2264 x4093) (x6664 x4093))))
(assert (x9173 x5214))
(assert (= (and x7515 x6441) x4525))
(assert (= (and x8480 x3106) x6751))
(assert (x9173 x4940))
(assert (x5765 x1535))
(assert (= (x3373 (x4000 x5235 1)) (+ 1 (x3373 x5235))))
(assert (= x7345 (x3373 (x2264 x7345))))
(assert (= x4537 (and x834 x6338)))
(assert (= x3257 (and x1417 x5068)))
(assert (= x7689 (and x2955 x5770)))
(assert (x9173 x7480))
(assert (x9173 x6985))
(assert (x5765 x4924))
(assert (= x5993 (and x4068 x2031)))
(assert (= (+ (x3373 x3286) 2) (x3373 (x4000 x3286 2))))
(assert (= (and x4896 (not x3160)) x4957))
(assert (x9173 x7493))
(assert (= x190 (and x2488 (not x6224))))
(assert (x9173 x5463))
(assert (x9173 x2413))
(assert (x9173 x8990))
(assert (= (+ (x3373 x2128) 2) (x3373 (x4000 x2128 2))))
(assert (x9173 x6835))
(assert (x9173 x9108))
(assert (= x945 (and x6808 x6973)))
(assert (= (and x4896 x3160) x8028))
(assert (= (x3373 (x2264 x940)) x940))
(assert (= (and x6992 (not x8318)) x1198))
(assert (= x8825 (=> (= 0 x6755) x8982)))
(assert (= x4217 (and (not x5679) x4040)))
(assert (x9173 x5983))
(assert (= x8542 (and x2520 x1362)))
(assert (= (x3373 (x2264 x8153)) x8153))
(assert (= x2073 (and (not x7418) x2217)))
(assert (x9173 x6161))
(assert (= x8404 (=> (and (= x5382 x4059) (= x2054 x8724)) x3991)))
(assert (x9173 x2964))
(assert (= x711 (and x8873 x5600)))
(assert (x9173 x4153))
(assert (= x3761 (or x2549 x8837)))
(assert (= (or x6372 x876) x4021))
(assert (= (and x6000 x4303) x3604))
(assert (x9173 x2106))
(assert (= (or x8250 (and x886 (not x6378))) x4937))
(assert (= (x3373 (x4000 x803 1)) (+ (x3373 x803) 1)))
(assert (= x6549 (and x6020 x8177)))
(assert (= x8299 (and (not x5776) x5468)))
(assert (= x8991 (and (not x5135) x8801)))
(assert (x9173 x8652))
(assert (x9173 x1841))
(assert (=> (<= x4391 10000) (= (x2264 x4391) (x6664 x4391))))
(assert (= x2370 (and x3344 x3852)))
(assert (= x8197 (and x7133 x7511)))
(assert (x9173 x7224))
(assert (= (or x3625 (and x6970 x614) (and (not x6678) x7540) (and (not x2292) x6422) (and x6044 x136) x2532) x4835))
(assert (= (and (not x7925) x5459) x1574))
(assert (= (and (not x5941) x4904) x7743))
(assert (=> (<= x4134 10000) (= (x6664 x4134) (x2264 x4134))))
(assert (= (and x2706 (not x4647)) x1150))
(assert (x9173 x6305))
(assert (= (and (not x7832) x8418) x5754))
(assert (x9173 x2639))
(assert (= x8250 (and x886 x6378)))
(assert (= x5390 (and x5071 (not x1974))))
(assert (x2631 x2379))
(assert (= (x3373 (x2264 x6404)) x6404))
(assert (x9173 x7334))
(assert (= x6766 (and x4488 x639)))
(assert (x9173 x8643))
(assert (x9173 x1888))
(assert (= x902 (x3373 (x2264 x902))))
(assert (x5765 x4391))
(assert (x9173 x6229))
(assert (= x6273 (and (not x587) x4341)))
(assert (x9173 x8405))
(assert (= x1129 (and x7213 (not x7893))))
(assert (x9173 x3970))
(assert (= (+ 1 (x3373 x8288)) (x3373 (x4000 x8288 1))))
(assert (x5765 x1758))
(assert (= x1100 (and (not x1091) x6592)))
(assert (x9173 x8388))
(assert (= x7121 (and x7829 x3936)))
(assert (= (x3373 (x6664 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x9173 x4281))
(assert (x9173 x1443))
(assert (= (and x8098 x7929) x9025))
(assert (x5699 x5146 x7838))
(assert (= x768 (or x6766 x7868 x3212 x1380 x6438)))
(assert (x5765 x2668))
(assert (= (and x7481 (not x8686)) x7854))
(assert (x9173 x4876))
(assert (= (and x8817 (not x4625)) x5184))
(assert (= (x3373 (x6664 2835717307)) 2835717307))
(assert (= (x3373 (x4000 x525 1)) (+ (x3373 x525) 1)))
(assert (= (or x5364 x3593) x230))
(assert (= (=> (and (= x2775 x629) (= x1578 x6941)) x7731) x7194))
(assert (= (or x4026 x2050) x9066))
(assert (x9173 x3094))
(assert (= (and x2378 (not x1692)) x7098))
(assert (= x4633 (=> (= (= 0 x6492) x4882) (and (=> (and (= (or (> x8736 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x8736) (= true (<= x8736 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x7354) (not x4882)) (and (=> x7354 x6785) (=> (and (not x7354) (= x1471 1)) x5852))) (=> x4882 x6785)))))
(assert (x9173 x785))
(assert (= (and x8462 (not x7425)) x4685))
(assert (= x8259 (and (not x7182) x8791)))
(assert (= (and x4351 x5550) x874))
(assert (x9173 x8436))
(assert (= (or x1801 x5065 x6726 x6688) x1342))
(assert (=> (>= 10000 x2540) (= (x2264 x2540) (x6664 x2540))))
(assert (x9173 x3884))
(assert (x9173 x3650))
(assert (x9173 x5353))
(assert (x9173 x5888))
(assert (x9173 x1643))
(assert (x9173 x7205))
(assert (x9173 x8450))
(assert (= (and (not x6582) x7119) x4543))
(assert (= (and x2925 x932) x4674))
(assert (= x8856 (and x5952 x4732)))
(assert (x5765 x7607))
(assert (x9173 x8292))
(assert (x9173 x3979))
(assert (= (and x407 (not x6272)) x8866))
(assert (= (and x5002 (not x8550)) x3307))
(assert (= (and x5946 (not x1892)) x1675))
(assert (= x6879 (and (not x6733) x830)))
(assert (= (and (not x178) x2726) x8462))
(assert (x9173 x5280))
(assert (=> (>= 10000 x888) (= (x2264 x888) (x6664 x888))))
(assert (= (and (not x303) x7805) x7135))
(assert (= x7810 (or x1272 x6588)))
(assert (= x3956 (x3373 (x2264 x3956))))
(assert (= x1257 (and x6222 x8872)))
(assert (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x3373 (x6664 10936679508223583803006762266923565500374401145016910147028117655998246682624))))
(assert (= x2466 (and x1856 x103)))
(assert (= (and x8492 (not x5285)) x6372))
(assert (= x6588 (and (not x7581) x5390)))
(assert (x9173 x7975))
(assert (x9173 x6227))
(assert (= (or x3588 x4183) x6780))
(assert (x9173 x7073))
(assert (x9173 x4741))
(assert (= x1725 (and x6136 (not x9000))))
(assert (x9173 x403))
(assert (x9173 x4018))
(assert (= x3732 (and x5068 (not x1417))))
(assert (= (and (not x7508) x4841) x5450))
(assert (= (and x1902 (not x8712)) x1825))
(assert (= x8175 (and x9073 x2705)))
(assert (= x5515 (and (not x6036) x2455)))
(assert (= (and x2998 (not x5007)) x7001))
(assert (= x2479 (and x2920 (not x1142))))
(assert (= (x3373 (x4000 x1404 2)) (+ (x3373 x1404) 2)))
(assert (= x5268 (and x1099 (not x8844))))
(assert (x9173 x485))
(assert (= (and x3201 (not x875)) x8268))
(assert (= x1394 (or x2363 x7208)))
(assert (x9173 x4321))
(assert (x9173 x3617))
(assert (x9173 x731))
(assert (= (and (not x7136) x6729) x3726))
(assert (= x1977 (and x6698 (not x200))))
(assert (= (=> (= (< 0 x7027) x1692) (and (=> (and x1692 (= x2029 (> x7027 x1511))) (and (=> x2029 x3931) (=> (and (not x2029) (and (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7027)) x921) (= x2026 (x2563 (- x1511 x7027))) (= x3832 (> x3110 x921)))) (and (=> x3832 x3931) (=> (and (and (= x8896 x2026) (= (x910 (+ x7027 x3110)) x1474) (= x1474 x7052)) (not x3832)) x3370))))) (=> (and (not x1692) (and (= x7052 x3110) (= x8896 x1511))) x3370))) x6115))
(assert (x9173 x1483))
(assert (x9173 x2033))
(assert (x9173 x3352))
(assert (x9173 x7071))
(assert (x9173 x9134))
(assert (x9173 x3684))
(assert (= (and x7 (not x3018)) x3510))
(assert (x9173 x6075))
(assert (= x1715 (and x2824 x8396)))
(assert (x9173 x504))
(assert (= x4370 (x3373 (x2264 x4370))))
(assert (x9173 x7964))
(assert (= (and x8756 x9213) x8314))
(assert (x9173 x5740))
(assert (= x2194 (x3373 (x2264 x2194))))
(assert (x9173 x1775))
(assert (x9173 x3080))
(assert (= x4706 (and x2960 x7807)))
(assert (x9173 x7524))
(assert (x9173 x27))
(assert (x9173 x8034))
(assert (x9173 x1952))
(assert (x5765 x5371))
(assert (= (and x4130 (not x1357)) x4026))
(assert (= (and x3430 x7927) x6317))
(assert (= (and x8314 x1002) x2882))
(assert (x9173 x1913))
(assert (=> (>= 10000 x5888) (= (x6664 x5888) (x2264 x5888))))
(assert (= (and x4404 x3678) x6353))
(assert (x9173 x7419))
(assert (x9173 x5869))
(assert (x9173 x560))
(assert (x9173 x744))
(assert (x9173 x2986))
(assert (= x6355 (and x8869 x6727)))
(assert (x9173 x6492))
(assert (x9173 x7577))
(assert (= (and x7873 x2556) x900))
(assert (x9173 x1010))
(assert (x9173 x2975))
(assert (= x4131 (and x8587 (not x6573))))
(assert (= (and x4132 x5262) x2162))
(assert (x9173 x7424))
(assert (x9173 x7031))
(assert (x9173 x2805))
(assert (x9173 x6298))
(assert (x9173 x7060))
(assert (x9173 x6639))
(assert (= (=> (and (and (= (> x1511 x6718) x1315) (= x6032 (x910 (+ x9171 32)))) (or (and (and (= x1315 x8951) (= x8891 x4091) (= x730 x2254)) (not x1315)) (and x1315 (and (= (= x2325 0) x3134) (<= 0 x2325) (> 1461501637330902918203684832716283019655932542976 x2325) (>= 1461501637330902918203684832716283019655932542975 x2325) (= x3881 x8891) (= (not x3134) x8951) (= x4371 (x4000 x4540 1)) (= x2325 x2254) (= x2325 (x3854 x4371)) (= x4540 (x5783 (x2264 x3881) (x6664 157) 0)))))) x3929) x1785))
(assert (x9173 x7637))
(assert (x9173 x8203))
(assert (= (x3373 (x2264 x2668)) x2668))
(assert (x9173 x5546))
(assert (x9173 x4024))
(assert (x9173 x5885))
(assert (= (and x8067 x2471) x667))
(assert (x9173 x5697))
(assert (= (=> (= x5266 (< 0 x393)) (and (=> (and x5266 (= (= x3741 0) x2573)) (and (=> (and (and (= x364 x7764) (= x1723 x6009) (= 0 x308)) x2573) x7553) (=> (and (and (or (and (and (or (and (not x3001) (and (and x4141 (and (= x1270 405663989) (= x3564 x8360) (= x8360 4) (= 1 x8085) (not (< x8360 4)) (= 32 x4618) (< 0 x1748) (> 2217467699 x1270) (not (> 405663989 x1270)) (> 988262939 x1270) (= x6301 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= (x6844 (x2264 x1326)) x1748))) (= x4141 (= x1326 x3881)))) (and (and (= x1300 x3564) (not (< x1300 4)) (> 988262939 x6413) (= x8326 10936679508223583803006762266923565500374401145016910147028117655998246682624) (not (> 405663989 x6413)) (= 4 x1300) (= x6413 405663989) (> 2217467699 x6413) (= (x6844 (x2264 x3605)) x6030) (= x4618 32) (< 0 x6030) (= 1 x8085)) x3001)) (= (= x3881 x3605) x3001)) (not x6693)) (and x6693 (and (= x4402 405663989) (= x821 10936679508223583803006762266923565500374401145016910147028117655998246682624) (not (< x4402 405663989)) (> 2217467699 x4402) (> 988262939 x4402) (= x1778 x3564) (= x8085 1) (= (x6844 (x2264 x5148)) x4802) (= x4618 32) (< 0 x4802) (not (> 4 x1778)) (= x1778 4)))) (and (= (x910 (+ 160 x1723)) x7579) (= 4 x3564) (= x6693 (= x3881 x5148)))) (not x2573)) x3635))) (=> (not x5266) x6409))) x6381))
(assert (x9173 x3896))
(assert (= (x6664 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x2264 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x9173 x389))
(assert (x9173 x7701))
(assert (= x2300 (and x4923 x2885)))
(assert (= (and x6616 (not x1887)) x3442))
(assert (x9173 x2807))
(assert (= (=> (and (= 0 x2966) (= x2197 x7662)) x1796) x701))
(assert (x9173 x2691))
(assert (= x3931 x704))
(assert (x9173 x9063))
(assert (= x2016 (and (not x4934) x7063)))
(assert (x9173 x2903))
(assert (= (and (not x2560) x9014) x4888))
(assert (x9173 x9205))
(assert (x8398 x1689))
(assert (x9173 x3736))
(assert (= x1140 (or x334 x3975)))
(assert (x5765 x4195))
(assert (x9173 x8676))
(assert (= (and x6772 (not x7879)) x6942))
(assert (= x6121 (x3373 (x2264 x6121))))
(assert (x9173 x7167))
(assert (=> (>= 10000 x8249) (= (x2264 x8249) (x6664 x8249))))
(assert (= (or x8576 (and x5760 x15) (and (not x7616) x4929) (and x1537 x2144) (and x5345 (not x2587)) (and x1355 x411) x3893 x4207 (and x7603 x7264)) x3585))
(assert (x9173 x4649))
(assert (= (+ 1 (x3373 x5876)) (x3373 (x4000 x5876 1))))
(assert (x9173 x2880))
(assert (= x4838 (and (not x7311) x5085)))
(assert (x9173 x2266))
(assert (x9173 x2868))
(assert (= (or x5905 (and x6406 x2500) x4424 x4723 (and x3388 x7048)) x3416))
(assert (= (x3373 (x4000 x6456 1)) (+ 1 (x3373 x6456))))
(assert (= x6522 (=> (and (= x1764 x5661) (= x4940 x720)) x8097)))
(assert (= (and x4762 (not x1563)) x5961))
(assert (x9173 x2809))
(assert (x9173 x4724))
(assert (x5699 x1510 x7761))
(assert (= x7328 (x3373 (x2264 x7328))))
(assert (= (and (not x6943) x3860) x421))
(assert (x9173 x7368))
(assert (= (and x1029 x802) x5663))
(assert (x9173 x3631))
(assert (x9173 x3722))
(assert (= (and x923 (not x3163)) x7730))
(assert (x9173 x1348))
(assert (x9173 x2245))
(assert (x9173 x3448))
(assert (= (and x8698 x5192) x3500))
(assert (= (+ 1 (x3373 x7100)) (x3373 (x4000 x7100 1))))
(assert (x9173 x6830))
(assert (x1593 x2234 x8591))
(assert (= (and x8200 x6644) x639))
(assert (x9173 x5203))
(assert (=> (<= x3265 10000) (= (x6664 x3265) (x2264 x3265))))
(assert (= (and x7689 (not x6050)) x5116))
(assert (= x2350 (or x4375 x6113)))
(assert (= x457 (x3373 (x2264 x457))))
(assert (= (and x2580 (not x4221)) x7041))
(assert (x9173 x5012))
(assert (x9173 x284))
(assert (x5765 x7461))
(assert (x9173 x17))
(assert (x9173 x6634))
(assert (x9173 x6487))
(assert (= x2609 (or (and x746 (not x4161)) (and x1715 x804))))
(assert (x9173 x113))
(assert (=> (<= x435 10000) (= (x6664 x435) (x2264 x435))))
(assert (= (x3373 (x4000 x7130 1)) (+ (x3373 x7130) 1)))
(assert (= (and (not x176) x7378) x8747))
(assert (= (and x8084 x6202) x8512))
(assert (= (and x5946 x1892) x1007))
(assert (x9173 x50))
(assert (x4899 x3872))
(assert (=> (>= 10000 x1903) (= (x2264 x1903) (x6664 x1903))))
(assert (= (and x7321 x5184) x7488))
(assert (= x2246 (and x630 x722)))
(assert (x5765 x5983))
(assert (= (=> (and (= x1657 x3759) (= x5247 x6957)) x215) x452))
(assert (x9173 x5646))
(assert (= (=> (= x8671 (> x282 x393)) (and (=> (and (not x8671) (and (= x5060 x308) (= x7764 x6798) (= (x2563 (- x393 x282)) x5060) (= x2357 x6009))) x7553) (=> x8671 x3931))) x252))
(assert (x9173 x8590))
(assert (x9173 x613))
(assert (x9173 x8503))
(assert (= x2632 (and x3210 (not x4174))))
(assert (x9173 x141))
(assert (x9173 x3443))
(assert (= (x3373 (x6664 76833804140862540057647519496925185374644862498684814347804924264468996685824)) 76833804140862540057647519496925185374644862498684814347804924264468996685824))
(assert (= x8285 (or x468 x2405)))
(assert (= (or x539 x2609) x8088))
(assert (= (x3373 (x6664 2858086653)) 2858086653))
(assert (x9173 x268))
(assert (= x5049 (or (and x5174 x2480) x3839)))
(assert (x9173 x5923))
(assert (=> (>= 10000 x7328) (= (x2264 x7328) (x6664 x7328))))
(assert (= x1559 (and x6854 x6915)))
(assert (= (x3373 (x4000 x4154 1)) (+ (x3373 x4154) 1)))
(assert (= (and x158 (not x5982)) x4485))
(assert (=> (<= x34 10000) (= (x6664 x34) (x2264 x34))))
(assert (= x7262 (and (not x7980) x7667)))
(assert (x9173 x1136))
(assert (=> (<= x7461 10000) (= (x2264 x7461) (x6664 x7461))))
(assert (x9173 x372))
(assert (x9173 x2755))
(assert (= (+ 1 (x3373 x765)) (x3373 (x4000 x765 1))))
(assert (x9173 x6027))
(assert (x5765 x5329))
(assert (= (x3373 (x4000 x3132 1)) (+ (x3373 x3132) 1)))
(assert (= (and x7155 (not x6219)) x4709))
(assert (= (and x5667 (not x5256)) x6270))
(assert (x9173 x1451))
(assert (= (not (and (= x3349 (x5783 (x2264 x7673) x2069 0)) (= x7534 (x524 x6966)) (<= 0 x7534) (>= 1461501637330902918203684832716283019655932542975 x7534) (> 1461501637330902918203684832716283019655932542976 x7534) (= x6966 (x4000 x3349 1)))) x9006))
(assert (x9173 x986))
(assert (= (x3373 (x6664 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x4822 (and x9174 x7223)))
(assert (= (or x6668 x2354) x4637))
(assert (x5765 x8174))
(assert (= x3045 (and x7498 x6636)))
(assert (x9173 x4418))
(assert (= (or x2336 x6179) x5506))
(assert (x2631 x7519))
(assert (= (and x4871 x6407) x7755))
(assert (= (and x3490 x2748) x8105))
(assert (= (or x1095 x5067) x6839))
(assert (= (and (not x2840) x9066) x3406))
(assert (x5765 x2964))
(assert (= x3205 (and x590 x447)))
(assert (= (or x168 x7303) x9131))
(assert (= (and x5937 (not x7300)) x4225))
(assert (= x5163 (and x4821 x8349)))
(assert (x9173 x6515))
(assert (x9173 x3773))
(assert (= (=> (and (and (= x1049 (< x6920 x6370)) (>= x6920 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6920)) (or (and (= x78 0) (not x1049)) (and x1049 (= x78 x6370)))) x3256) x6249))
(assert (x9173 x358))
(assert (= (and x8506 (not x4437)) x2354))
(assert (x9173 x2966))
(assert (x9173 x1115))
(assert (= (x3373 (x4000 x5977 1)) (+ 1 (x3373 x5977))))
(assert (x5765 x5833))
(assert (= x6747 (and x7989 x7485)))
(assert (x5765 x5381))
(assert (= x2377 (and x5288 x4131)))
(assert (x9173 x2716))
(assert (x9173 x6730))
(assert (x9173 x6189))
(assert (x9173 x2254))
(assert (x9173 x2386))
(assert (= x7723 (=> (and (= x1732 x3542) (= x2444 x1646)) x3865)))
(assert (x9173 x1371))
(assert (x9173 x7409))
(assert (= x5471 (or x2117 x1713)))
(assert (= x8363 (and x474 x8190)))
(assert (= x2938 (and x1816 (not x4323))))
(assert (x9173 x7541))
(assert (= (x3373 (x2264 x4391)) x4391))
(assert (= (and x1782 x2411) x5378))
(assert (x9173 x8662))
(assert (x9173 x2821))
(assert (= x7487 (and x7647 (not x8672))))
(assert (x9173 x3336))
(assert (x9173 x6700))
(assert (=> (<= x7544 10000) (= (x2264 x7544) (x6664 x7544))))
(assert (x9173 x8397))
(assert (x9173 x6233))
(assert (= x475 (or x1291 x5860 x7209 x6967)))
(assert (= x4460 (and x1569 x874)))
(assert (x9173 x345))
(assert (= x1316 (and (not x8329) x7197)))
(assert (x9173 x1086))
(assert (= x8792 (or (and x6861 (not x5153)) x5454)))
(assert (=> (>= 10000 x833) (= (x2264 x833) (x6664 x833))))
(assert (x9173 x2540))
(assert (= (and (not x3037) x8969) x7200))
(assert (= x1446 (and (not x3473) x7203)))
(assert (=> (<= x8122 10000) (= (x2264 x8122) (x6664 x8122))))
(assert (= (and x8978 x5271) x9022))
(assert (= x9114 (and x2287 x224)))
(assert (x9173 x780))
(assert (x9173 x8233))
(assert (= (+ 1 (x3373 x5565)) (x3373 (x4000 x5565 1))))
(assert (= (and x4821 (not x8349)) x8261))
(assert (x9173 x8778))
(assert (= (or x2356 x3569) x4972))
(assert (x9173 x5311))
(assert (x9173 x2652))
(assert (= x7950 x4551))
(assert (= (=> (= x52 (= x3386 0)) (and (=> x52 x8633) (=> (and (and (= (x910 (+ x3304 31)) x7111) (= (x910 (+ x7442 x1608)) x4049) (= (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7111) x1608) (= (or (> x3304 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3304 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x3304))) x6331)) (not x52)) (and (=> (and x6331 (= true x6661)) x6209) (=> (and (and (= x86 (x2360 x7442)) (= (x6748 1461501637330902918203684832716283019655932542975 x86) x5553) (= x4189 (= x86 x5553))) (not x6331)) (and (=> (and (not x4189) (= true x6661)) x6209) (=> (and x4189 (and (= x86 x5084) (= x4049 x7435))) x5845))))))) x8262))
(assert (x9173 x6414))
(assert (x9173 x4050))
(assert (= x8572 (and x5848 x5096)))
(assert (= (and x3761 (not x5974)) x8742))
(assert (= x996 (and (not x1721) x6610)))
(assert (= x6271 (or x5422 x2263)))
(assert (x9173 x188))
(assert (= (and x1830 x6193) x5127))
(assert (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x3373 (x6664 35417553099779373699389112480655434059402432070290151981503827724506945814528))))
(assert (= (x3373 (x4000 x5292 2)) (+ 2 (x3373 x5292))))
(assert (x9173 x3971))
(assert (x9173 x8253))
(assert (x9173 x3460))
(assert (= x7855 (and x3816 x1271)))
(assert (= x5167 (or x6870 x1393)))
(assert (x9173 x2738))
(assert (x9173 x3644))
(assert (= x8024 (=> (and (= x6448 x5247) (= x6470 x3759)) x215)))
(assert (=> (>= 10000 x8628) (= (x2264 x8628) (x6664 x8628))))
(assert (x9173 x4557))
(assert (= (and (not x7104) x1378) x6104))
(assert (x5765 x9151))
(assert (x9173 x8635))
(assert (= (x3373 (x4000 x1204 1)) (+ 1 (x3373 x1204))))
(assert (x9173 x6300))
(assert (x9173 x7917))
(assert (x9173 x706))
(assert (= x5234 (=> (and (= x8643 x6608) (= x5410 x2123)) x1415)))
(assert (x9173 x22))
(assert (x9173 x7395))
(assert (x9173 x7840))
(assert (x9173 x2019))
(assert (= x7448 x6661))
(assert (x9173 x436))
(assert (=> (<= x902 10000) (= (x6664 x902) (x2264 x902))))
(assert (x9173 x4348))
(assert (x5699 x7452 x759))
(assert (x9173 x6624))
(assert (x9173 x1936))
(assert (= (and x1664 x1067) x8611))
(assert (= (and x2952 x2308) x7162))
(assert (x9173 x4137))
(assert (x5765 x2254))
(assert (= (and x6973 (not x6808)) x5324))
(assert (= x1037 (and x178 x2726)))
(assert (=> (<= x5341 10000) (= (x6664 x5341) (x2264 x5341))))
(assert (= x2915 (=> (and (= x5012 x6976) (= x2077 x7624)) x8387)))
(assert (= (and x3829 x2544) x3549))
(assert (= (and x374 x1663) x7297))
(assert (x9173 x8876))
(assert (= x8185 (and x4906 x4069)))
(assert (= x7036 (x3373 (x2264 x7036))))
(assert (x9173 x4494))
(assert (x9173 x3705))
(assert (x9173 x2837))
(assert (= (or x2690 x7862) x886))
(assert (= (and x4541 (not x2165)) x3491))
(assert (x9173 x8244))
(assert (= (and (not x6578) x6767) x3957))
(assert (= (and (not x2715) x2663) x6908))
(assert (x9173 x8445))
(assert (= x6191 (and x8462 x7425)))
(assert (= (and x2692 (not x4269)) x4583))
(assert (x9173 x646))
(assert (x9173 x6580))
(assert (= x3856 (and (not x77) x3233)))
(assert (x9173 x8948))
(assert (x9173 x519))
(assert (x9173 x4500))
(assert (x9173 x1251))
(assert (= x6193 (and x240 x3992)))
(assert (= (=> (and (= (ite (< x7656 x1) (not (= 0 x2163)) (< x7656 x1)) x2960) (or (and (not x2960) (and (and (= (x7279 x5326) x3928) (<= 0 x3928) (>= 1461501637330902918203684832716283019655932542975 x3928) (> 1461501637330902918203684832716283019655932542976 x3928) (= (= 0 x3928) x412)) (or (and (not x412) (and (= x4519 x8540) (< x4519 1461501637330902918203684832716283019655932542976) (= (x6315 x3024) x4519) (= (x4000 x3414 1) x8115) (= x1266 (x4000 x3337 1)) (= (x910 (+ x4024 96)) x4739) (= x4739 x4713) (= x3414 (x5783 (x2264 x4519) x2069 0)) (>= 1461501637330902918203684832716283019655932542975 x4519) (= x3337 (x5783 (x2264 x560) x2069 0)) (= x3184 (x4000 x1266 1)) (>= x4519 0) (= (x4000 x5326 1) x3024))) (and (and (= x6039 (x4000 x5326 1)) (= (x4000 x7100 1) x481) (= (x910 (+ x4024 96)) x6246) (= x560 x8540) (= (x5783 (x2264 x560) x2069 0) x9065) (= x7100 (x4000 x9065 1)) (= x6246 x4713)) x412)))) (and x2960 (and (and (>= x3896 0) (= x7878 (> x5193 0)) (= x3896 (x7279 x5326)) (< x3896 1461501637330902918203684832716283019655932542976) (= (x2563 (- x2163 x3896)) x5193) (<= x3896 1461501637330902918203684832716283019655932542975)) (or (and (not x7878) (and (= (x910 (+ x4024 96)) x2476) (= x8540 x2163) (= x4617 (x5783 (x2264 x2163) x2069 0)) (= x1754 (x5783 (x2264 x560) x2069 0)) (= x3216 (x4000 x1985 1)) (= (x4000 x1754 1) x1985) (= x4713 x2476))) (and (and (< x1398 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1398) (= (x5783 (x2264 x560) x2069 0) x3136) (= x6777 (x5783 (x2264 x2163) x2069 0)) (= (x4000 x6725 1) x1264) (<= 0 x1398) (= x2163 x8540) (= x2187 (x910 (+ x4024 96))) (= x6725 (x5783 (x2264 x1398) x2069 0)) (= (x4000 x6131 1) x3963) (= x2187 x4713) (= (x4000 x3136 1) x6131) (= (x5783 (x2264 x2163) x2069 0) x4864) (= x1398 (x286 x6777))) x7878)))))) x1234) x7941))
(assert (= x2343 (and (not x164) x8316)))
(assert (= x8817 (and x6724 x1798)))
(assert (= x7543 (and (not x7873) x2556)))
(assert (= (and x2081 x5722) x1762))
(assert (= (and x2663 x2715) x7026))
(assert (x9173 x6005))
(assert (x9173 x7928))
(assert (= (and (not x4545) x7650) x7833))
(assert (=> (>= 10000 x9178) (= (x2264 x9178) (x6664 x9178))))
(assert (x9173 x7636))
(assert (= (+ (x3373 x9036) 1) (x3373 (x4000 x9036 1))))
(assert (x9173 x1551))
(assert (x9173 x4975))
(assert (= x3816 (and x4655 x102)))
(assert (x9173 x2439))
(assert (= (and x4065 x2783) x1174))
(assert (= (=> (= x4991 (= 0 x8795)) (and (=> (and (and (= (> x6195 0) x5385) (= x8826 (x5783 (x2264 x560) (x6664 161) 0)) (= x6195 (x650 x8826))) (not x4991)) (and (=> (and (and (> 1461501637330902918203684832716283019655932542976 x7800) (<= x7800 1461501637330902918203684832716283019655932542975) (= (x7717 x8826 0) x7139) (<= 0 x7800) (= x7800 (x4575 x1859)) (= x1859 x7139) (= (= x3881 x7800) x4313)) x5385) (and (=> (not x4313) x255) (=> (and x4313 (and (= x7339 (x5783 (x2264 x560) (x6664 161) 0)) (= x27 (x650 x7339)) (= (> 1 x27) x4025))) (and (=> x4025 x3931) (=> (and (not x4025) (and (= (= x50 0) x6277) (= x50 (x2563 (- x27 1))))) (and (=> x6277 x197) (=> (and (and (= x4997 (< x50 x2025)) (= (x650 x5611) x2025) (= (x5783 (x2264 x560) (x6664 161) 0) x5611)) (not x6277)) (and (=> (and x4997 (and (= (> x7887 0) x9000) (= x1344 (x4000 x8706 x50)) (= x4490 (x4575 x1344)) (<= 0 x4490) (= (x5783 (x2264 x560) (x6664 161) 0) x4879) (> 1461501637330902918203684832716283019655932542976 x4490) (= (x7717 x5611 0) x8706) (= (x650 x4879) x7887) (<= x4490 1461501637330902918203684832716283019655932542975))) (and (=> x9000 x197) (=> (not x9000) x5658))) (=> (not x4997) x5658))))))))) (=> (not x5385) x4916))) (=> x4991 x414))) x2344))
(assert (x9173 x4526))
(assert (= x8887 (and x2528 x7271)))
(assert (x9173 x8926))
(assert (= x7035 (and x2224 (not x3497))))
(assert (x2631 x6385))
(assert (= x2254 (x3373 (x2264 x2254))))
(assert (= (and x2417 (not x7532)) x1634))
(assert (x9173 x5441))
(assert (x9173 x3199))
(assert (x5765 x1527))
(assert (x9173 x8628))
(assert (= x754 (and (not x1851) x3986)))
(assert (= (and x7540 x6678) x6970))
(assert (x9173 x3956))
(assert (x9173 x5634))
(assert (= x139 (and x728 x4729)))
(assert (x9173 x3563))
(assert (= (and x6028 x8616) x4056))
(assert (= x1217 (and (not x1630) x7683)))
(assert (= 599290589 (x3373 (x6664 599290589))))
(assert (=> (<= x2335 10000) (= (x2264 x2335) (x6664 x2335))))
(assert (x9173 x5963))
(assert (= (=> (and (= x674 x348) (= x5672 x7728)) x1060) x6991))
(assert (x9173 x8838))
(assert (x9173 x4149))
(assert (x9173 x7609))
(assert (x9173 x8459))
(assert (x9173 x4486))
(assert (= (and (not x3811) x4751) x5648))
(assert (= x3931 x1006))
(assert (= (or x7333 x8755) x4342))
(assert (x9173 x5918))
(assert (x9173 x742))
(assert (x9173 x8238))
(assert (= (x2264 2691771752) (x6664 2691771752)))
(assert (x9173 x7229))
(assert (= x1837 (and x4069 (not x4906))))
(assert (= x7123 (and x3034 x5956)))
(assert (x9173 x363))
(assert (=> (>= 10000 x4529) (= (x2264 x4529) (x6664 x4529))))
(assert (= x615 (and x8675 x441)))
(assert (x9173 x9178))
(assert (= (x3373 (x2264 x4442)) x4442))
(assert (= x3543 (x3373 (x2264 x3543))))
(assert (= (or x6401 (and x219 x6084) x1508 (and x2544 (not x3829)) (and x3549 (not x3215)) (and x8158 x37)) x3161))
(assert (x9173 x6705))
(assert (x9173 x7094))
(assert (= x7069 (or x1628 (and x1946 x6815) x6893 (and x555 x2845) (and x7575 x623) x3164)))
(assert (x9173 x5187))
(assert (= x7695 (and (not x4495) x1003)))
(assert (= (+ 2 (x3373 x7774)) (x3373 (x4000 x7774 2))))
(assert (x9173 x1020))
(assert (= (x3373 (x4000 x8530 2)) (+ 2 (x3373 x8530))))
(assert (= x8358 x3931))
(assert (x9173 x5301))
(assert (x9173 x4162))
(assert (x9173 x5394))
(assert (= (and (=> (and (and (and (= x5253 (x1897 x2650)) (>= x5253 0) (= x2869 (ite (< 1 x1) (not (= 0 x5253)) (> x1 1))) (>= 1461501637330902918203684832716283019655932542975 x5253) (< x5253 1461501637330902918203684832716283019655932542976) (= (x4000 x1028 1) x2650) (= x1028 (x5783 (x2264 x5) x1299 0))) (or (and (and (= (not x4257) x612) (= x4257 (< x5088 x5259)) (<= x5088 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5088 (x3757 x8345)) (= x1167 (x5783 (x2264 x5253) x1299 0)) (>= x5088 0) (= x8345 (x4000 x1167 2))) x2869) (and (= x2869 x612) (not x2869)))) x7107) x6900) (=> (and (and (= 0 x295) (= x5 x1483)) (not x7107)) x5152)) x8600))
(assert (= (and x4961 x6833) x8429))
(assert (= (and x8831 x3711) x2824))
(assert (= (and x3453 x7991) x30))
(assert (x9173 x8746))
(assert (= (and (not x4359) x979) x3230))
(assert (= (+ 1 (x3373 x5479)) (x3373 (x4000 x5479 1))))
(assert (= x1789 (and x8679 x4845)))
(assert (x9173 x8384))
(assert (= (and x3623 x760) x8558))
(assert (x5765 x5891))
(assert (= (x3373 (x4000 x1078 2)) (+ (x3373 x1078) 2)))
(assert (= (and x4164 x684) x9157))
(assert (= (and x6247 x2827) x2838))
(assert (x9173 x1744))
(assert (= (=> (= x8392 (> x7886 0)) (and (=> (and (and (= x3874 x2880) (= x6975 x4172)) (not x8392)) x8903) (=> (and (and (= x3163 (= 0 x560)) (>= x1 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1)) x8392) (and (=> (and (and (= x1224 (x4000 x3286 2)) (<= x2312 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x560) x3119 0) x3286) (>= x2312 0) (= x2312 (x5995 x1224)) (= (= 0 x2312) x7051)) (not x3163)) (and (=> (and (and (or (and (= x1427 x6491) (not x6491)) (and (and (<= 0 x6883) (= x6809 (x5783 (x2264 x9147) x3119 0)) (= (x4000 x6809 2) x2432) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6883) (= x7692 (> x7886 x6883)) (= x1427 (not x7692)) (= x6883 (x5995 x2432))) x6491)) (and (< x9147 1461501637330902918203684832716283019655932542976) (<= 0 x9147) (<= x9147 1461501637330902918203684832716283019655932542975) (= x992 (x4000 x3119 1)) (= (x5640 x992) x9147) (= x6491 (ite (> x1 0) (not (= 0 x9147)) (> x1 0))))) x7051) x38) (=> (not x7051) x8633))) (=> x3163 x8633))))) x3202))
(assert (= x4173 (=> (and (or (and (not x2153) (and (or (and (and (= x3685 x8731) (>= 1461501637330902918203684832716283019655932542975 x3685) (= x6080 x6022) (> 1461501637330902918203684832716283019655932542976 x3685) (= (x4000 x6864 1) x29) (= (x2908 x29) x3685) (<= 0 x3685) (= x6080 (x910 (+ 96 x878)))) (not x7216)) (and (and (= x4768 (x910 (+ 96 x878))) (= x6022 x4768) (= x560 x8731)) x7216)) (and (= (x4343 x6864) x2145) (= x7216 (= 0 x2145)) (<= x2145 1461501637330902918203684832716283019655932542975) (< x2145 1461501637330902918203684832716283019655932542976) (<= 0 x2145)))) (and x2153 (and (or (and (and (= x7556 (x5783 (x2264 x5341) x2128 0)) (<= 0 x6708) (= (x9017 x7556) x6708) (> 1461501637330902918203684832716283019655932542976 x6708) (= x6022 x3640) (= x5341 x8731) (>= 1461501637330902918203684832716283019655932542975 x6708) (= (x910 (+ x878 96)) x3640)) x5321) (and (and (= (x910 (+ x878 96)) x8410) (= x8410 x6022) (= x8731 x5341)) (not x5321))) (and (>= 1461501637330902918203684832716283019655932542975 x337) (= x5321 (< 0 x4100)) (< x337 1461501637330902918203684832716283019655932542976) (= (x4343 x6864) x337) (<= 0 x337) (= x4100 (x2563 (- x5341 x337))))))) (= (ite (> x1 x8282) (not (= x5341 0)) (> x1 x8282)) x2153)) x5959)))
(assert (x9173 x1137))
(assert (x9173 x7550))
(assert (= (and x4428 x6706) x3435))
(assert (= (=> (and (= (x910 (+ x76 32)) x1454) (= (= x5148 x3881) x8841) (= x76 (x910 (+ x1071 4))) (= (x2563 (- x1454 x1071)) x4455)) (and (=> (and (not x8841) (= x8156 (= x3605 x3881))) (and (=> (and (and (< x2491 988262939) (not (= 178855970 x2491)) (= x2491 398450620) (= x4909 (x6844 (x2264 x3605))) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x8037) (> 2217467699 x2491) (not (= 242558722 x2491)) (= (or (and (= (<= x7646 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x7646 32)) (> x7646 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5136) (= x7646 (x2563 (- x7374 4))) (not (> 4 x7374)) (< x2491 405663989) (> x4909 0) (= x7374 36) (not (= 75483562 x2491)) (= x7036 x4129) (= x4455 x7374)) x8156) (and (=> x5136 x1668) (=> (and (not x5136) (and (= x4129 x6679) (= x4084 (= x7036 x4129)))) (and (=> (not x4084) x1668) (=> (and x4084 (and (= x5936 (x5457 x6418)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5936) (= x4844 1) (= 32 x3394) (>= x5936 0) (= x6418 (x5783 (x2264 x4129) (x6664 6) 0)))) x1710))))) (=> (and (not x8156) (and (and x1610 (and (not (= 75483562 x3245)) (= x2457 (or (> x1453 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1453 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1453)))) (= (x2563 (- x5139 4)) x1453) (= x3245 398450620) (< x3245 988262939) (not (= x3245 178855970)) (= x3547 (x6844 (x2264 x1326))) (= 36 x5139) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x2094) (= x5139 x4455) (not (> 4 x5139)) (= x7036 x3114) (not (= x3245 242558722)) (< 0 x3547) (< x3245 2217467699) (> 405663989 x3245))) (= (= x1326 x3881) x1610))) (and (=> (and (not x2457) (and (= x6932 (= x3114 x7036)) (= x3114 x8459))) (and (=> (not x6932) x1550) (=> (and (and (= x385 (x4457 x8412)) (>= x385 0) (= x957 32) (= 1 x4672) (<= x385 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x3114) (x6664 6) 0) x8412)) x6932) x5881))) (=> x2457 x1550))))) (=> (and (and (= 36 x3670) (not (< x3670 4)) (= x5537 (x2563 (- x3670 4))) (= x7562 398450620) (= x7300 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5537) true) (< x5537 32)) (> x5537 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 0 x554) (= (x6844 (x2264 x5148)) x554) (> 2217467699 x7562) (= x3670 x4455) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x4186) (not (= x7562 75483562)) (> 988262939 x7562) (> 405663989 x7562) (not (= x7562 242558722)) (= x5795 x7036) (not (= x7562 178855970))) x8841) (and (=> (and (not x7300) (and (= x363 x5795) (= (= x5795 x7036) x8546))) (and (=> (and x8546 (and (= (x1203 x480) x6098) (<= x6098 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x480 (x5783 (x2264 x5795) (x6664 6) 0)) (= 1 x5799) (= 32 x1010) (>= x6098 0))) x3130) (=> (not x8546) x5296))) (=> x7300 x5296))))) x4085))
(assert (= x2138 (x3373 (x2264 x2138))))
(assert (= x6842 (or x7152 (and x4147 x4336) x919 (and (not x1430) x5980) (and x8497 x2863) (and x6582 x7119) (and x8603 (not x5221)) (and x2365 x7280) x422)))
(assert (x9173 x5307))
(assert (x9173 x7359))
(assert (= x4242 (and (not x9034) x5786)))
(assert (= (or (and x5748 x2591) (and x8363 x3343) x3067 x301 (and x1000 x3607) x6058) x1497))
(assert (x9173 x721))
(assert (= (x3373 (x6664 1466279372)) 1466279372))
(assert (= x8771 (and (not x656) x6868)))
(assert (x9173 x3392))
(assert (= x4069 (and (not x180) x2586)))
(assert (= x3338 (and x499 x8771)))
(assert (= (and x1402 (not x7834)) x6477))
(assert (x9173 x7017))
(assert (= x5831 (and (not x5174) x2480)))
(assert (= x8941 (=> (= true x6661) x6209)))
(assert (=> (>= 10000 x2699) (= (x2264 x2699) (x6664 x2699))))
(assert (x9173 x2750))
(assert (= x5051 (and x4670 x8881)))
(assert (= (=> (and (= x1279 x7070) (= x755 0)) x4656) x6768))
(assert (= (=> (and (= (x6748 x1619 x2966) x3295) (= x7640 (> x3295 0)) (= (x6748 x2710 x576) x4700) (= (ite (< 31 x2197) 1 0) x576) (= x2710 (ite (= x7764 1) 1 0)) (= (ite (= x2197 0) 1 0) x3336) (= x1619 (x2812 x4700 x3336))) (and (=> (and x7640 (and (= (x910 (+ 32 x2202)) x3299) (= x2610 (x2563 (- x3299 x1930))) (= (= x3881 x5148) x1102) (= (x910 (+ 4 x1930)) x2202))) (and (=> (and (not x1102) (= (= x3881 x3605) x7638)) (and (=> (and (and (= x573 36) (= x497 (x6844 (x2264 x3605))) (= (or (and (< x619 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x619))) (> x619 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3151) (= (x2563 (- x573 4)) x619) (< x3400 2929553584) (not (< x3400 2691771752)) (< 0 x497) (not (> 4 x573)) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x4426) (= x345 x393) (= x3400 2691771752) (= x2610 x573) (not (< x3400 2217467699))) x7638) (and (=> (and (not x3151) (and (> 1461501637330902918203684832716283019655932542976 x1750) (<= 0 x1750) (= x578 128) (= x345 x927) (= (= x1750 x4668) x6526) (>= 1461501637330902918203684832716283019655932542975 x1750))) (and (=> (and (not x6526) (= (= x5148 x1750) x1478)) (and (=> (and (and (= x8018 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7856) true) (< x7856 96)) (> x7856 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x8680 405663989)) (not (< x7307 4)) (= 100 x7307) (= x3605 x8521) (< x8680 988262939) (= x7856 (x2563 (- x7307 4))) (= x7036 x1345) (= x927 x753) (not (< x8680 405663989)) (> x8284 0) (= x8284 (x6844 (x2264 x5148))) (= x8680 599290589) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4050) (> 2217467699 x8680) (not (= 547091486 x8680)) (= 100 x7307)) x1478) (and (=> (and (and (= (= x1345 x7036) x6068) (= x1345 x1231)) (not x8018)) (and (=> (not x6068) x6768) (=> (and x6068 (and (= x3707 (= x8521 x3605)) (= x638 x8521))) (and (=> (not x3707) x6768) (=> (and x3707 (and (= (< x4893 x927) x8211) (= x753 x7365) (<= x4893 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x6021 x2369) x4893) (<= 0 x4893) (= x2369 (x5783 (x2264 x1345) (x6664 5) 0)))) (and (=> x8211 x6768) (=> (and (and (>= x3481 0) (= x1851 (< x3481 x753)) (<= x3481 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6132 (x5783 (x2264 x1345) (x6664 5) 0)) (= (x6021 x6132) x3481)) (not x8211)) (and (=> (and (not x1851) (and (>= x5771 0) (= x205 (x5783 (x2264 x8521) (x6664 5) 0)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x753)) x6728) (= x1503 (x2563 (- x3481 x753))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5771) (= x427 (> x5771 x6728)) (= x5771 (x3814 x205)))) (and (=> x427 x6768) (=> (and (not x427) (and (= 1 x3439) (= 1 x755) (= x1279 32) (= x4312 (x910 (+ x5771 x753))))) x4656))) (=> x1851 x6768))))))))) (=> x8018 x6768))) (=> (and (= (= x3605 x1750) x8517) (not x1478)) (and (=> (and (and (= x3830 (= x1750 x1326)) (and x3830 (and (not (> 405663989 x116)) (= 100 x7666) (= x8337 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x774 (x2563 (- x7666 4))) (not (= 547091486 x116)) (= (x6844 (x2264 x1326)) x7349) (= 100 x7666) (= x113 x927) (= x7138 x3605) (> 2217467699 x116) (< x116 988262939) (not (> 4 x7666)) (= x116 599290589) (= x7036 x8644) (< 0 x7349) (not (= x116 405663989)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x774)) (< x774 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x774)) x991)))) (not x8517)) (and (=> (and (and (= x8644 x5864) (= x531 (= x7036 x8644))) (not x991)) (and (=> (not x531) x7633) (=> (and (and (= x7071 x7138) (= x6101 (= x3605 x7138))) x531) (and (=> (and (and (= x2443 (x1604 x2400)) (<= x2443 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x927 x2443) x2621) (= x4153 x113) (<= 0 x2443) (= (x5783 (x2264 x8644) (x6664 5) 0) x2400)) x6101) (and (=> (and (and (<= 0 x314) (= (> x113 x314) x1461) (= (x1604 x4053) x314) (= x4053 (x5783 (x2264 x8644) (x6664 5) 0)) (<= x314 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x2621)) (and (=> (and (not x1461) (and (= (x5241 x7732) x2611) (= (x5783 (x2264 x7138) (x6664 5) 0) x7732) (= x6633 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x113))) (= (< x6633 x2611) x2742) (<= 0 x2611) (<= x2611 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6417 (x2563 (- x314 x113))))) (and (=> (and (not x2742) (and (= x7205 32) (= x4146 1) (= (x910 (+ x2611 x113)) x2795) (= 1 x5487))) x450) (=> x2742 x7633))) (=> x1461 x7633))) (=> x2621 x7633))) (=> (not x6101) x7633))))) (=> x991 x7633))) (=> (and (and (not (< x7891 4)) (> 988262939 x579) (not (= x579 405663989)) (= 100 x7891) (= 599290589 x579) (not (= 547091486 x579)) (= (or (and (< x7087 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7087) true)) (> x7087 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4918) (= x7087 (x2563 (- x7891 4))) (> x703 0) (> 2217467699 x579) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2819) (= 100 x7891) (= x927 x7391) (= x2964 x7036) (= x5362 x3605) (= (x6844 (x2264 x3605)) x703) (not (< x579 405663989))) x8517) (and (=> (and (and (= x1624 (= x7036 x2964)) (= x5372 x2964)) (not x4918)) (and (=> (and x1624 (and (= x4993 x5362) (= (= x5362 x3605) x1840))) (and (=> (and (and (= x6985 (x5971 x5723)) (= x5723 (x5783 (x2264 x2964) (x6664 5) 0)) (= x4307 (< x6985 x927)) (= x7391 x2649) (>= x6985 0) (<= x6985 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1840) (and (=> (and (and (<= 0 x6220) (= x3084 (x5783 (x2264 x2964) (x6664 5) 0)) (= (< x6220 x7391) x7182) (<= x6220 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5971 x3084) x6220)) (not x4307)) (and (=> x7182 x7383) (=> (and (not x7182) (and (= x8775 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7391))) (= x2673 (x5783 (x2264 x5362) (x6664 5) 0)) (= (x3146 x2673) x7025) (>= x7025 0) (<= x7025 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x7025 x8775) x4138) (= (x2563 (- x6220 x7391)) x7192))) (and (=> (and (not x4138) (and (= (x910 (+ x7025 x7391)) x5555) (= 32 x8952) (= 1 x2711) (= x3142 1))) x2070) (=> x4138 x7383))))) (=> x4307 x7383))) (=> (not x1840) x7383))) (=> (not x1624) x7383))) (=> x4918 x7383))))))) (=> (and x6526 (and (= 100 x7577) (= x7725 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< 0 x6194) (not (> 4 x7577)) (= x927 x7352) (= 599290589 x4469) (= x7577 100) (= x541 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2172) true) (> 96 x2172)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2172))) (= x6194 (x6844 (x2264 x4668))) (not (> 599290589 x4469)) (= x6786 x7036) (= x3605 x1333) (= x2172 (x2563 (- x7577 4))) (< x4469 1466279372))) (and (=> (and (not x541) (and (= x8220 (= x7036 x6786)) (= x6786 x6774))) (and (=> (not x8220) x5592) (=> (and x8220 (and (= x1333 x2524) (= x6341 (= x1333 x3605)))) (and (=> (not x6341) x5592) (=> (and x6341 (and (= x4456 (x1148 x4992)) (= x844 x7352) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4456) (= x4992 (x5783 (x2264 x6786) (x6664 1) 0)) (= x3665 (< x4456 x927)) (<= 0 x4456))) (and (=> (and (= x4680 (> x7352 x4456)) (not x3665)) (and (=> x4680 x5592) (=> (and (and (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7352)) x8304) (= (x5783 (x2264 x1333) (x6664 1) 0) x2049) (= x1911 (x5783 (x2264 x6786) (x6664 1) 0)) (= (x2563 (- x4456 x7352)) x8692) (<= x7117 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5802 (< x8304 x7117)) (>= x7117 0) (= (x4781 x2049) x7117)) (not x4680)) (and (=> (and (not x5802) (and (= (x910 (+ x7117 x7352)) x3780) (= x227 (< x3780 x7117)))) (and (=> (and (and (= (x5783 (x2264 x6786) (x6664 2) 0) x4364) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1313) (= x7329 (< x1313 x7352)) (= x6694 (x5783 (x2264 x3605) x4364 0)) (= (x2820 x6694) x1313) (>= x1313 0)) (not x227)) (and (=> (and (= x2782 (> x7352 x1313)) (not x7329)) (and (=> x2782 x5592) (=> (and (and (= (x2563 (- x1313 x7352)) x7101) (= x5382 1) (= 32 x2054)) (not x2782)) x8404))) (=> x7329 x5592))) (=> x227 x5592))) (=> x5802 x5592))))) (=> x3665 x5592))))))) (=> x541 x5592))))) (=> x3151 x2813))) (=> (and (not x7638) (and (and x6348 (and (= 2691771752 x6321) (= x485 (x6844 (x2264 x1326))) (= x3790 x2610) (= x371 72570022874062638528011751457397263716769196454539065078543251854057308946432) (not (< x3790 4)) (= x872 (x2563 (- x3790 4))) (> x485 0) (= x3790 36) (= x5354 x393) (not (< x6321 2217467699)) (< x6321 2929553584) (= x5543 (or (> x872 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x872 32) (= true (<= x872 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (< x6321 2691771752)))) (= (= x3881 x1326) x6348))) (and (=> x5543 x5078) (=> (and (not x5543) (and (= 128 x2831) (< x3252 1461501637330902918203684832716283019655932542976) (>= x3252 0) (= x5354 x2425) (= (= x4668 x3252) x6663) (>= 1461501637330902918203684832716283019655932542975 x3252))) (and (=> (and (= (= x5148 x3252) x4671) (not x6663)) (and (=> (and (and (not (= x2772 405663989)) (= x6433 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 2217467699 x2772) (= x3408 x1326) (= 100 x528) (= x7036 x5896) (= (x6844 (x2264 x5148)) x2671) (= x825 x2425) (= x2772 599290589) (not (> 4 x528)) (> x2671 0) (= 100 x528) (= (x2563 (- x528 4)) x4843) (< x2772 988262939) (= x2306 (or (and (< x4843 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4843))) (> x4843 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x2772 405663989)) (not (= 547091486 x2772))) x4671) (and (=> x2306 x8661) (=> (and (not x2306) (and (= x3722 x5896) (= x3120 (= x5896 x7036)))) (and (=> (and (and (= x3408 x6515) (= x7700 (= x1326 x3408))) x3120) (and (=> (and x7700 (and (= x5697 x825) (= (x6021 x8194) x6440) (= x8601 (< x6440 x2425)) (>= x6440 0) (= x8194 (x5783 (x2264 x5896) (x6664 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6440))) (and (=> (and (not x8601) (and (= (< x5610 x825) x8686) (>= x5610 0) (= x5619 (x5783 (x2264 x5896) (x6664 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5610) (= (x6021 x5619) x5610))) (and (=> (and (not x8686) (and (<= 0 x9162) (= (x2563 (- x5610 x825)) x5394) (= x1906 (> x9162 x8513)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9162) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x825)) x8513) (= (x5783 (x2264 x3408) (x6664 5) 0) x6073) (= x9162 (x764 x6073)))) (and (=> (and (not x1906) (and (= 32 x8735) (= x2085 (x910 (+ x825 x9162))) (= x4750 1) (= x3033 1))) x173) (=> x1906 x8661))) (=> x8686 x8661))) (=> x8601 x8661))) (=> (not x7700) x8661))) (=> (not x3120) x8661))))) (=> (and (not x4671) (= (= x3605 x3252) x7879)) (and (=> (and (not x7879) (and (= (= x1326 x3252) x6681) (and (and (= (or (and (> 96 x8933) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8933))) (> x8933 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3237) (= 100 x4557) (= (x2563 (- x4557 4)) x8933) (not (> 4 x4557)) (< 0 x1587) (= x8602 x2425) (= x6161 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x503) (not (> 405663989 x503)) (= x6673 x7036) (= x4557 100) (not (= 547091486 x503)) (= x8122 x1326) (not (= x503 405663989)) (< x503 2217467699) (< x503 988262939) (= x1587 (x6844 (x2264 x1326)))) x6681))) (and (=> x3237 x7747) (=> (and (and (= x581 (= x7036 x6673)) (= x8842 x6673)) (not x3237)) (and (=> (and x581 (and (= x3347 (= x1326 x8122)) (= x4829 x8122))) (and (=> (not x3347) x7747) (=> (and (and (= (> x2425 x8033) x8566) (<= x8033 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x8033 0) (= (x5783 (x2264 x6673) (x6664 5) 0) x7228) (= x8033 (x1604 x7228)) (= x4812 x8602)) x3347) (and (=> x8566 x7747) (=> (and (and (= x3468 (x1604 x8985)) (<= x3468 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8985 (x5783 (x2264 x6673) (x6664 5) 0)) (= x2619 (> x8602 x3468)) (<= 0 x3468)) (not x8566)) (and (=> x2619 x7747) (=> (and (and (= x2907 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8602))) (= x1371 (x2225 x8309)) (= (> x1371 x2907) x2959) (<= x1371 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8309 (x5783 (x2264 x8122) (x6664 5) 0)) (= x6158 (x2563 (- x3468 x8602))) (>= x1371 0)) (not x2619)) (and (=> x2959 x7747) (=> (and (and (= 32 x2077) (= x6976 1) (= x1880 1) (= x7637 (x910 (+ x1371 x8602)))) (not x2959)) x2915))))))))) (=> (not x581) x7747))))) (=> (and x7879 (and (= x2805 (x6844 (x2264 x3605))) (= 100 x1411) (not (> 405663989 x698)) (= (or (and (> 96 x7546) (= true (<= x7546 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x7546 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x685) (= x7036 x4093) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4796) (not (> 4 x1411)) (> x2805 0) (not (= 547091486 x698)) (= x2425 x7359) (< x698 2217467699) (not (= 405663989 x698)) (= 599290589 x698) (= 100 x1411) (= x7546 (x2563 (- x1411 4))) (> 988262939 x698) (= x2087 x1326))) (and (=> (and (not x685) (and (= x4093 x3792) (= x7456 (= x7036 x4093)))) (and (=> (not x7456) x4607) (=> (and x7456 (and (= x747 (= x1326 x2087)) (= x5585 x2087))) (and (=> (and (and (>= x5992 0) (= (x5971 x4003) x5992) (= x4003 (x5783 (x2264 x4093) (x6664 5) 0)) (<= x5992 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7417 (> x2425 x5992)) (= x7359 x1976)) x747) (and (=> x7417 x4607) (=> (and (not x7417) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x137) (= (< x137 x7359) x1139) (>= x137 0) (= (x5971 x6153) x137) (= x6153 (x5783 (x2264 x4093) (x6664 5) 0)))) (and (=> (and (and (>= x4127 0) (= x8017 (x5783 (x2264 x2087) (x6664 5) 0)) (= x7314 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7359))) (<= x4127 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3477 (x2563 (- x137 x7359))) (= x4127 (x7337 x8017)) (= (< x7314 x4127) x3506)) (not x1139)) (and (=> (and (and (= 1 x2386) (= x1895 32) (= x6227 (x910 (+ x7359 x4127))) (= x3972 1)) (not x3506)) x5811) (=> x3506 x4607))) (=> x1139 x4607))))) (=> (not x747) x4607))))) (=> x685 x4607))))))) (=> (and (and (= (x6844 (x2264 x4668)) x6618) (= x3177 x1326) (> x6618 0) (= x933 x2425) (not (< x4411 4)) (not (> 599290589 x5311)) (= x9015 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4411 100) (> 1466279372 x5311) (= 599290589 x5311) (= x5872 x7036) (= (or (and (> 96 x4372) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4372) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4372)) x2509) (= (x2563 (- x4411 4)) x4372) (= x4411 100)) x6663) (and (=> x2509 x121) (=> (and (and (= (= x5872 x7036) x6157) (= x7393 x5872)) (not x2509)) (and (=> (and (and (= (= x3177 x1326) x472) (= x3177 x4016)) x6157) (and (=> (and (and (= x9103 (x1148 x4782)) (= x933 x4741) (<= 0 x9103) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9103) (= x4782 (x5783 (x2264 x5872) (x6664 1) 0)) (= (> x2425 x9103) x2114)) x472) (and (=> (and (= x6647 (< x9103 x933)) (not x2114)) (and (=> (and (not x6647) (and (= x7247 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x933))) (<= x8638 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8857 (x5783 (x2264 x5872) (x6664 1) 0)) (= (x5783 (x2264 x3177) (x6664 1) 0) x2569) (>= x8638 0) (= (> x8638 x7247) x8953) (= x8638 (x7635 x2569)) (= x4620 (x2563 (- x9103 x933))))) (and (=> x8953 x121) (=> (and (not x8953) (and (= x6776 (> x8638 x4863)) (= (x910 (+ x933 x8638)) x4863))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7128) (= (x2820 x5438) x7128) (= (< x7128 x933) x7532) (= (x5783 (x2264 x5872) (x6664 2) 0) x3918) (<= 0 x7128) (= (x5783 (x2264 x1326) x3918 0) x5438)) (not x6776)) (and (=> x7532 x121) (=> (and (not x7532) (= (> x933 x7128) x5265)) (and (=> x5265 x121) (=> (and (not x5265) (and (= 32 x1516) (= 1 x8592) (= (x2563 (- x7128 x933)) x6963))) x5264))))) (=> x6776 x121))))) (=> x6647 x121))) (=> x2114 x121))) (=> (not x472) x121))) (=> (not x6157) x121))))))))))) (=> (and x1102 (and (not (> 4 x2515)) (= x7639 (x2563 (- x2515 4))) (= (or (and (< x7639 32) (= true (<= x7639 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7639)) x7048) (= x393 x4196) (not (> 2217467699 x1243)) (> x9040 0) (= x2515 36) (< x1243 2929553584) (not (> 2691771752 x1243)) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x928) (= x2515 x2610) (= x1243 2691771752) (= x9040 (x6844 (x2264 x5148))))) (and (=> x7048 x2250) (=> (and (and (= x8713 x4196) (<= x1116 1461501637330902918203684832716283019655932542975) (>= x1116 0) (> 1461501637330902918203684832716283019655932542976 x1116) (= x2878 128) (= (= x4668 x1116) x5239)) (not x7048)) (and (=> (and (and (= x807 100) (> x3070 0) (not (< x807 4)) (= (or (and (= (<= x6346 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x6346)) (> x6346 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4147) (= (x6844 (x2264 x4668)) x3070) (= x6082 x8713) (= x8800 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x6346 (x2563 (- x807 4))) (= x807 100) (= x7036 x5711) (not (> 599290589 x6365)) (= x5148 x1535) (= x6365 599290589) (< x6365 1466279372)) x5239) (and (=> (and (and (= x5221 (= x5711 x7036)) (= x5711 x2013)) (not x4147)) (and (=> (and (and (= (= x1535 x5148) x1430) (= x1535 x7631)) x5221) (and (=> (and (and (= (< x2090 x8713) x2365) (= x6082 x2249) (= (x1148 x8000) x2090) (>= x2090 0) (<= x2090 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8000 (x5783 (x2264 x5711) (x6664 1) 0))) x1430) (and (=> (and (= (< x2090 x6082) x8382) (not x2365)) (and (=> x8382 x8917) (=> (and (and (<= 0 x81) (= (> x81 x918) x6340) (= x5892 (x5783 (x2264 x5711) (x6664 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x81) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6082)) x918) (= (x2563 (- x2090 x6082)) x4566) (= (x5783 (x2264 x1535) (x6664 1) 0) x6427) (= x81 (x251 x6427))) (not x8382)) (and (=> x6340 x8917) (=> (and (and (= x8062 (x910 (+ x6082 x81))) (= (> x81 x8062) x8497)) (not x6340)) (and (=> (and (not x8497) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7636) (= x6582 (> x6082 x7636)) (= (x2820 x467) x7636) (<= 0 x7636) (= x5503 (x5783 (x2264 x5711) (x6664 2) 0)) (= x467 (x5783 (x2264 x5148) x5503 0)))) (and (=> (and (not x6582) (= x1247 (< x7636 x6082))) (and (=> (and (not x1247) (and (= x2965 1) (= 32 x4654) (= x2653 (x2563 (- x7636 x6082))))) x6014) (=> x1247 x8917))) (=> x6582 x8917))) (=> x8497 x8917))))))) (=> x2365 x8917))) (=> (not x1430) x8917))) (=> (not x5221) x8917))) (=> x4147 x8917))) (=> (and (not x5239) (= (= x5148 x1116) x2844)) (and (=> (and x2844 (and (not (< x9049 4)) (< x7822 2217467699) (= (x2563 (- x9049 4)) x773) (= x8713 x2475) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2914) (not (= x7822 547091486)) (= x5148 x5377) (= x1070 (or (and (> 96 x773) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x773))) (> x773 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x9049 100) (= 599290589 x7822) (not (= 405663989 x7822)) (not (> 405663989 x7822)) (= x7036 x8502) (= x9049 100) (= (x6844 (x2264 x5148)) x9136) (> x9136 0) (< x7822 988262939))) (and (=> x1070 x4248) (=> (and (not x1070) (and (= x8502 x6540) (= x3771 (= x8502 x7036)))) (and (=> (and (and (= x5377 x4722) (= x6459 (= x5148 x5377))) x3771) (and (=> (and x6459 (and (= (> x8713 x6005) x3490) (<= x6005 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x8502) (x6664 5) 0) x8523) (= x1468 x2475) (<= 0 x6005) (= x6005 (x6021 x8523)))) (and (=> (and (not x3490) (and (= x879 (x6021 x1955)) (= (x5783 (x2264 x8502) (x6664 5) 0) x1955) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x879) (>= x879 0) (= (< x879 x2475) x6423))) (and (=> (and (and (<= 0 x6612) (= (< x3601 x6612) x4850) (= x3601 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2475))) (= x6612 (x1184 x7141)) (= x7141 (x5783 (x2264 x5377) (x6664 5) 0)) (<= x6612 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8581 (x2563 (- x879 x2475)))) (not x6423)) (and (=> x4850 x4248) (=> (and (not x4850) (and (= x6849 32) (= 1 x134) (= (x910 (+ x2475 x6612)) x6560) (= x8369 1))) x8235))) (=> x6423 x4248))) (=> x3490 x4248))) (=> (not x6459) x4248))) (=> (not x3771) x4248))))) (=> (and (not x2844) (= (= x1116 x3605) x3710)) (and (=> (and (and (= x8317 (= x1116 x1326)) (and x8317 (and (not (= 405663989 x7031)) (not (< x4914 4)) (= x7031 599290589) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6834) (< x7031 988262939) (= (x6844 (x2264 x1326)) x8966) (= (x2563 (- x4914 4)) x2982) (= x7894 x7036) (= x4914 100) (> x8966 0) (not (= 547091486 x7031)) (= x8713 x5463) (= x9230 (or (> x2982 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2982 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2982) true)))) (> 2217467699 x7031) (= x4914 100) (not (> 405663989 x7031)) (= x5329 x5148)))) (not x3710)) (and (=> x9230 x1614) (=> (and (not x9230) (and (= x8905 x7894) (= x216 (= x7036 x7894)))) (and (=> (not x216) x1614) (=> (and (and (= x5329 x3108) (= x9208 (= x5148 x5329))) x216) (and (=> (and (and (= (< x6152 x8713) x8415) (<= 0 x6152) (= x4693 (x5783 (x2264 x7894) (x6664 5) 0)) (= x5463 x6221) (= x6152 (x1604 x4693)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6152)) x9208) (and (=> x8415 x1614) (=> (and (and (= (x5783 (x2264 x7894) (x6664 5) 0) x2530) (<= 0 x6344) (= (< x6344 x5463) x7871) (= (x1604 x2530) x6344) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6344)) (not x8415)) (and (=> (and (and (<= x1043 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2563 (- x6344 x5463)) x7569) (= x1043 (x5181 x1598)) (= x1598 (x5783 (x2264 x5329) (x6664 5) 0)) (= x1698 (> x1043 x9)) (= x9 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5463))) (<= 0 x1043)) (not x7871)) (and (=> x1698 x1614) (=> (and (and (= 1 x2231) (= x5397 1) (= (x910 (+ x1043 x5463)) x5091) (= 32 x1939)) (not x1698)) x8289))) (=> x7871 x1614))))) (=> (not x9208) x1614))))))) (=> (and x3710 (and (= x6655 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x5237 x5148) (= x8241 x8713) (< x7756 2217467699) (= x3775 (or (and (= (<= x2302 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x2302)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2302))) (= 100 x8584) (> x6074 0) (= (x2563 (- x8584 4)) x2302) (= 100 x8584) (not (= x7756 405663989)) (not (= 547091486 x7756)) (not (< x8584 4)) (= x7036 x8297) (= (x6844 (x2264 x3605)) x6074) (< x7756 988262939) (= 599290589 x7756) (not (< x7756 405663989)))) (and (=> (and (not x3775) (and (= x6160 x8297) (= x4532 (= x7036 x8297)))) (and (=> (and x4532 (and (= (= x5148 x5237) x2679) (= x3684 x5237))) (and (=> (and x2679 (and (<= x3844 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3844) (= (< x3844 x8713) x7536) (= (x5971 x2430) x3844) (= x8241 x1686) (= (x5783 (x2264 x8297) (x6664 5) 0) x2430))) (and (=> x7536 x3687) (=> (and (and (<= x1921 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1921 (x5971 x626)) (= x626 (x5783 (x2264 x8297) (x6664 5) 0)) (= (< x1921 x8241) x3867) (<= 0 x1921)) (not x7536)) (and (=> x3867 x3687) (=> (and (not x3867) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8470) (= x225 (x5783 (x2264 x5237) (x6664 5) 0)) (<= 0 x8470) (= (x2563 (- x1921 x8241)) x4649) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8241)) x316) (= x8470 (x1296 x225)) (= (< x316 x8470) x4813))) (and (=> (and (and (= x1565 1) (= x4574 (x910 (+ x8241 x8470))) (= x5672 32) (= 1 x348)) (not x4813)) x6991) (=> x4813 x3687))))))) (=> (not x2679) x3687))) (=> (not x4532) x3687))) (=> x3775 x3687))))))))))))) (=> (not x7640) x8633))) x4953))
(assert (= (and x1545 x6421) x1422))
(assert (= (and x612 x2536) x7797))
(assert (x9173 x2965))
(assert (= (and (not x102) x4655) x5614))
(assert (x9173 x6410))
(assert (x9173 x3305))
(assert (x9173 x7564))
(assert (= x5845 (=> (and (= x3306 (x910 (+ x7435 4))) (= (x910 (+ x8607 32)) x5821) (= (x910 (+ 32 x3306)) x8607) (= (= x5084 x4668) x6292)) (and (=> (and (= x5361 (= x5148 x5084)) (not x6292)) (and (=> (and (= x741 (= x5084 x3605)) (not x5361)) (and (=> (and (not x741) (and (and x4558 (and (= (x6844 (x2264 x1326)) x1998) (= x863 100) (not (> 405663989 x793)) (> 2217467699 x793) (= x793 599290589) (not (= 547091486 x793)) (= x17 x592) (= x7815 (x2563 (- x863 4))) (> 988262939 x793) (> x1998 0) (not (> 4 x863)) (not (= 405663989 x793)) (= x4348 x4044) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1669) (= x3994 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7815) true) (< x7815 96)) (> x7815 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x7036 x5320))) (= (= x1326 x5084) x4558))) (and (=> x3994 x3363) (=> (and (not x3994) (and (= (= x592 x7835) x5554) (= x17 x3413) (= (x6748 1461501637330902918203684832716283019655932542975 x592) x7835))) (and (=> (not x5554) x3363) (=> (and (and (= x5320 x4462) (= (= x5320 x7036) x1798)) x5554) (and (=> (not x1798) x3363) (=> (and x1798 (and (<= 0 x5921) (= x4924 (x6748 1461501637330902918203684832716283019655932542975 x17)) (= x273 (x5783 (x2264 x4924) (x6664 5) 0)) (= (x563 x273) x5921) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5921) (= (< x5921 x4044) x4625) (= x4348 x4699))) (and (=> x4625 x3363) (=> (and (and (= (> x4348 x114) x7321) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x114) (<= 0 x114) (= x114 (x563 x2854)) (= (x6748 1461501637330902918203684832716283019655932542975 x17) x5983) (= x2854 (x5783 (x2264 x5983) (x6664 5) 0))) (not x4625)) (and (=> x7321 x3363) (=> (and (not x7321) (and (= x4563 (x5783 (x2264 x5320) (x6664 5) 0)) (= x3192 (x2563 (- x114 x4348))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9229) (= x2798 (< x8687 x9229)) (<= 0 x9229) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4348)) x8687) (= (x1232 x4563) x9229))) (and (=> (and (and (= x6374 1) (= 32 x8967) (= (x910 (+ x9229 x4348)) x7880) (= 1 x1128)) (not x2798)) x2023) (=> x2798 x3363))))))))))))) (=> (and x741 (and (not (> 405663989 x3528)) (not (< x527 4)) (= x4657 x7036) (= x1223 x4044) (= x592 x861) (= 599290589 x3528) (= x1996 (or (> x8014 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x8014) (= true (<= x8014 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1936 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< 0 x3647) (not (= x3528 405663989)) (= 100 x527) (= (x6844 (x2264 x3605)) x3647) (= x8014 (x2563 (- x527 4))) (< x3528 2217467699) (not (= x3528 547091486)) (> 988262939 x3528))) (and (=> (and (not x1996) (and (= x204 (= x1876 x592)) (= x1876 (x6748 1461501637330902918203684832716283019655932542975 x592)) (= x2351 x861))) (and (=> (and (and (= x4366 x4657) (= x7527 (= x4657 x7036))) x204) (and (=> (and x7527 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x203) (= x6404 (x6748 1461501637330902918203684832716283019655932542975 x861)) (= x203 (x7707 x6605)) (= (x5783 (x2264 x6404) (x6664 5) 0) x6605) (= x5679 (< x203 x4044)) (<= 0 x203) (= x700 x1223))) (and (=> (and (not x5679) (and (>= x7613 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7613) (= x2557 (x6748 1461501637330902918203684832716283019655932542975 x861)) (= (x5783 (x2264 x2557) (x6664 5) 0) x1244) (= (< x7613 x1223) x7116) (= (x7707 x1244) x7613))) (and (=> (and (and (= x8751 (x5783 (x2264 x4657) (x6664 5) 0)) (= x7545 (x7189 x8751)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7545) (>= x7545 0) (= (< x7397 x7545) x6000) (= x7397 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1223))) (= x7522 (x2563 (- x7613 x1223)))) (not x7116)) (and (=> x6000 x4105) (=> (and (and (= 1 x3587) (= 1 x1965) (= (x910 (+ x7545 x1223)) x6135) (= x3254 32)) (not x6000)) x960))) (=> x7116 x4105))) (=> x5679 x4105))) (=> (not x7527) x4105))) (=> (not x204) x4105))) (=> x1996 x4105))))) (=> (and x5361 (and (< x9127 988262939) (= x592 x5618) (= 599290589 x9127) (= x9217 x4044) (= (x6844 (x2264 x5148)) x1602) (= x7143 (x2563 (- x2594 4))) (= x1087 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7143) true) (< x7143 96)) (> x7143 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x2594 4)) (= x9119 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x9127 2217467699) (not (> 405663989 x9127)) (= x4501 x7036) (= 100 x2594) (not (= x9127 547091486)) (> x1602 0) (not (= x9127 405663989)))) (and (=> (and (and (= x1647 (x6748 1461501637330902918203684832716283019655932542975 x592)) (= x5618 x4720) (= (= x1647 x592) x9081)) (not x1087)) (and (=> (not x9081) x5257) (=> (and (and (= x4501 x3101) (= (= x7036 x4501) x58)) x9081) (and (=> (not x58) x5257) (=> (and x58 (and (= x9217 x2898) (>= x8378 0) (= (x769 x5593) x8378) (= (< x8378 x4044) x8810) (= (x5783 (x2264 x5176) (x6664 5) 0) x5593) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8378) (= (x6748 1461501637330902918203684832716283019655932542975 x5618) x5176))) (and (=> (and (not x8810) (and (= x4565 (x5783 (x2264 x7776) (x6664 5) 0)) (= x7776 (x6748 1461501637330902918203684832716283019655932542975 x5618)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8793) (<= 0 x8793) (= (x769 x4565) x8793) (= x6762 (< x8793 x9217)))) (and (=> x6762 x5257) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8934) (= x5617 (x5783 (x2264 x4501) (x6664 5) 0)) (= (x2563 (- x8793 x9217)) x3734) (= x8333 (< x2309 x8934)) (= (x6827 x5617) x8934) (<= 0 x8934) (= x2309 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9217)))) (not x6762)) (and (=> (and (not x8333) (and (= x1732 32) (= 1 x2444) (= x7602 1) (= (x910 (+ x9217 x8934)) x1606))) x7723) (=> x8333 x5257))))) (=> x8810 x5257))))))) (=> x1087 x5257))))) (=> (and (and (= x592 x5252) (< 0 x4771) (= x5516 x4044) (= x8460 x7036) (not (< x2046 599290589)) (= x6116 100) (= x2046 599290589) (= x4771 (x6844 (x2264 x4668))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6781) (= x7419 (x2563 (- x6116 4))) (= x5504 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7419) (and (= true (<= x7419 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x7419)))) (not (> 4 x6116)) (> 1466279372 x2046)) x6292) (and (=> (and (not x5504) (and (= (= x592 x6536) x7837) (= (x6748 1461501637330902918203684832716283019655932542975 x592) x6536))) (and (=> (and (and (= x8460 x4714) (= (= x8460 x7036) x3517)) x7837) (and (=> (and (and (= x3527 (< x7589 x4044)) (= x7589 (x18 x4112)) (= (x5783 (x2264 x7544) (x6664 1) 0) x4112) (= (x6748 1461501637330902918203684832716283019655932542975 x5252) x7544) (= x5516 x3419) (<= 0 x7589) (<= x7589 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x3517) (and (=> (and (= (> x5516 x7589) x3100) (not x3527)) (and (=> (and (not x3100) (and (= x6501 (x1399 x6110)) (<= x6501 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5358 (x6748 1461501637330902918203684832716283019655932542975 x5252)) (= (> x6501 x7432) x6578) (= x1085 (x2563 (- x7589 x5516))) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5516)) x7432) (= x2566 (x5783 (x2264 x5358) (x6664 1) 0)) (<= 0 x6501) (= (x5783 (x2264 x8460) (x6664 1) 0) x6110))) (and (=> (and (and (= (x910 (+ x5516 x6501)) x1436) (= x6288 (> x6501 x1436))) (not x6578)) (and (=> (and (and (= x5547 (x5783 (x2264 x8460) (x6664 1) 0)) (= x794 (< x3103 x5516)) (= x2470 (x5783 (x2264 x7036) x8586 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3103) (= (x8159 x2470) x3103) (= (x6748 1461501637330902918203684832716283019655932542975 x5252) x6972) (= (x5783 (x2264 x6972) (x6664 2) 0) x8586) (>= x3103 0)) (not x6288)) (and (=> x794 x5912) (=> (and (= x6064 (< x3103 x5516)) (not x794)) (and (=> (and (and (= x7110 1) (= (x6748 1461501637330902918203684832716283019655932542975 x5252) x8210) (= x9099 (x5783 (x2264 x8210) (x6664 2) 0)) (= (x5783 (x2264 x7036) x9099 0) x1323) (= 32 x3297) (= (x2563 (- x3103 x5516)) x5774)) (not x6064)) x4889) (=> x6064 x5912))))) (=> x6288 x5912))) (=> x6578 x5912))) (=> x3100 x5912))) (=> x3527 x5912))) (=> (not x3517) x5912))) (=> (not x7837) x5912))) (=> x5504 x5912)))))))
(assert (x9173 x8470))
(assert (= x9009 (and x6157 x6169)))
(assert (x9173 x3556))
(assert (= x3164 (and x4499 x8077)))
(assert (= (x3373 (x4000 x209 1)) (+ (x3373 x209) 1)))
(assert (= x1588 (or x6572 x1769 x2617 x3004 x9093 x6575)))
(assert (= (=> (and (or (and (= 0 x3696) (not x3603)) (and x3603 (= x9194 x3696))) (and (<= x9194 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x9194) (= x4439 (x5783 (x2264 x2254) x1580 0)) (= x1793 (x4000 x8040 2)) (<= 0 x397) (>= x3773 0) (= x8165 (x4584 x1793)) (= x397 (x1309 x4331)) (<= x3773 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x8165) (= x1580 (x5783 (x2264 x3881) (x6664 157) 0)) (= x9194 (x5161 x3294)) (= x4331 (x4000 x4439 2)) (<= x397 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x2254) x1078 0) x8040) (= (x5783 (x2264 x3881) (x6664 159) 0) x4226) (= (x4000 x6715 1) x3294) (= x3603 (> x9194 x6920)) (<= x8165 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x2254) x4226 0) x6715) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6920) (= (x5783 (x2264 x3881) (x6664 156) 0) x1078) (>= x6920 0) (= x3773 (x4553 x6715)))) x4459) x9165))
(assert (x9173 x8820))
(assert (x9173 x2395))
(assert (= x422 (and x1247 x4543)))
(assert (= x6106 (and (not x3665) x1615)))
(assert (= x5906 (=> (and (or (and x9213 (and (or (and (and (= (x5783 (x2264 x2083) x1404 0) x6862) (>= x4200 0) (= (x4000 x44 1) x583) (= (x5783 (x2264 x2083) x1404 0) x5501) (= x8103 (x4000 x8291 1)) (= x2083 x1251) (= x8653 x792) (<= x4200 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x4200) (= (x3426 x6862) x4200) (= x6585 (x4000 x8103 1)) (= (x5783 (x2264 x4396) x1404 0) x8291) (= (x5783 (x2264 x4200) x1404 0) x44) (= x792 (x910 (+ 96 x767)))) x1002) (and (and (= x6077 x8653) (= (x4000 x5103 1) x520) (= x1251 x2083) (= (x5783 (x2264 x2083) x1404 0) x3729) (= (x5783 (x2264 x4396) x1404 0) x5103) (= x6077 (x910 (+ x767 96))) (= (x4000 x520 1) x8802)) (not x1002))) (and (>= 1461501637330902918203684832716283019655932542975 x3971) (< x3971 1461501637330902918203684832716283019655932542976) (<= 0 x3971) (= x3971 (x1268 x2112)) (= (> x8924 0) x1002) (= x8924 (x2563 (- x2083 x3971)))))) (and (and (or (and (and (= (x4000 x3859 1) x2505) (= x4396 x1251) (= (x4000 x2505 1) x7576) (= (x5783 (x2264 x4396) x1404 0) x3859) (= x5218 (x910 (+ 96 x767))) (= x5218 x8653) (= (x4000 x2112 1) x5656)) x8112) (and (not x8112) (and (< x2397 1461501637330902918203684832716283019655932542976) (= x1251 x2397) (= x2463 (x4000 x8912 1)) (= x8653 x5808) (>= 1461501637330902918203684832716283019655932542975 x2397) (= x724 (x4000 x988 1)) (= x8912 (x5783 (x2264 x2397) x1404 0)) (= (x4000 x2112 1) x5788) (<= 0 x2397) (= x7648 (x4000 x724 1)) (= (x910 (+ x767 96)) x5808) (= (x8836 x5788) x2397) (= x988 (x5783 (x2264 x4396) x1404 0))))) (and (<= 0 x8548) (>= 1461501637330902918203684832716283019655932542975 x8548) (> 1461501637330902918203684832716283019655932542976 x8548) (= (x1268 x2112) x8548) (= (= 0 x8548) x8112))) (not x9213))) (= (ite (> x1 x3080) (not (= x2083 0)) (< x3080 x1)) x9213)) x1792)))
(assert (x9173 x9039))
(assert (= (and x8028 (not x5701)) x1818))
(assert (x9173 x6717))
(assert (= x7796 (and x4833 x8814)))
(assert (x5765 x1333))
(assert (x9173 x4792))
(assert (x9173 x4805))
(assert (x9173 x4214))
(assert (x2631 x86))
(assert (x9173 x1935))
(assert (x9173 x8939))
(assert (x9173 x4809))
(assert (= (x3373 (x4000 x4636 1)) (+ 1 (x3373 x4636))))
(assert (x9173 x3070))
(assert (x9173 x691))
(assert (x9173 x709))
(assert (= (=> (and (< x5375 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x5375) (>= x5375 0) (= (= x5375 0) x8813)) (and (=> x8813 x4085) (=> (and (not x8813) (and (= x5576 (x910 (+ x4325 32))) (= (= 0 x5419) x2301) (= (x910 (+ 4 x1071)) x6586) (>= 1461501637330902918203684832716283019655932542975 x5375) (>= x5375 0) (= x4325 (x910 (+ 32 x6586))) (< x5375 1461501637330902918203684832716283019655932542976) (= (x6844 (x2264 x5375)) x5419))) (and (=> (and (not x2301) (< x727 4294967296)) x4085) (=> (and (= x6661 true) x2301) x6209))))) x8618))
(assert (= x4924 (x3373 (x2264 x4924))))
(assert (x9173 x5556))
(assert (x9173 x4611))
(assert (x9173 x7030))
(assert (= x6785 (=> (= 0 x1471) x5852)))
(assert (x9173 x1381))
(assert (= x6284 (and x2546 x7037)))
(assert (x9173 x2202))
(assert (x9173 x270))
(assert (x9173 x3519))
(assert (= x215 (=> (and (or (not x3068) x3068) (= (= x5247 0) x3068)) x5233)))
(assert (x9173 x5069))
(assert (= x6673 (x3373 (x2264 x6673))))
(assert (= (and x8185 x1865) x1791))
(assert (x9173 x2747))
(assert (= (or x7240 x837) x7805))
(assert (= x6091 (and x8594 x3272)))
(assert (x9173 x776))
(assert (x9173 x7308))
(assert (= (and (not x8696) x8457) x9005))
(assert (x9173 x8031))
(assert (x9173 x3766))
(assert (= x4394 (and (not x3200) x3801)))
(assert (x9173 x457))
(assert (x9173 x8999))
(assert (x9173 x5448))
(assert (x9173 x8851))
(assert (= x1298 (and (=> (and x8919 (and (and (<= x8483 1461501637330902918203684832716283019655932542975) (= x7285 (x5783 (x2264 x4442) x783 0)) (<= 0 x8483) (= x3087 (x4000 x7285 1)) (= (ite (< 1 x1) (not (= 0 x8483)) (< 1 x1)) x8672) (> 1461501637330902918203684832716283019655932542976 x8483) (= x8483 (x5978 x3087))) (or (and (and (= x4137 (x1951 x5967)) (>= x4137 0) (= (not x2088) x154) (<= x4137 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2088 (< x4137 x7074)) (= x5967 (x4000 x7753 2)) (= x7753 (x5783 (x2264 x8483) x783 0))) x8672) (and (not x8672) (= x154 x8672))))) x7582) (=> (and (and (= 0 x1539) (= x6343 x4442)) (not x8919)) x6757))))
(assert (x9173 x6483))
(assert (x9173 x7438))
(assert (= x3607 (and (not x3343) x8363)))
(assert (= (x3373 (x2264 x4519)) x4519))
(assert (x9173 x8563))
(assert (= (or x2693 x3257 x4760 x3500 x8032 x968) x2041))
(assert (= x6062 (and x4826 x9228)))
(assert (= x4184 (or x1230 x1768 x1290 x6541)))
(assert (= (and (not x1389) x6256) x7492))
(assert (= x450 (=> (and (= x8724 x7205) (= x4146 x4059)) x3991)))
(assert (x9173 x2440))
(assert (x9173 x6461))
(assert (x9173 x8830))
(assert (= x8633 x1172))
(assert (x9173 x353))
(assert (= (+ (x3373 x3553) 2) (x3373 (x4000 x3553 2))))
(assert (= (=> (and (= x8694 x8643) (= x5410 x3038)) x1415) x1249))
(assert (= x6111 (and x4730 x4888)))
(assert (x9173 x6983))
(assert (= x7299 (and x1185 x6237)))
(assert (= x3340 (and (not x6878) x8792)))
(assert (x9173 x2932))
(assert (x9173 x2871))
(assert (= x4205 (and x8080 x4945)))
(assert (x9173 x6798))
(assert (= x388 (and x8351 x8227)))
(assert (= (or x4319 x710) x2213))
(assert (x9173 x6208))
(assert (x9173 x951))
(assert (x9173 x6371))
(assert (=> (>= 10000 x2399) (= (x2264 x2399) (x6664 x2399))))
(assert (= x2929 (x3373 (x2264 x2929))))
(assert (x9173 x6993))
(assert (x9173 x2561))
(assert (= x2189 (x3373 (x2264 x2189))))
(assert (= (x6664 3583811254) (x2264 3583811254)))
(assert (= (and x164 x8316) x7002))
(assert (x5765 x5795))
(assert (= (x3373 (x4000 x4761 1)) (+ 1 (x3373 x4761))))
(assert (x9173 x8251))
(assert (x9173 x6791))
(assert (= x7301 (and (not x4197) x2643)))
(assert (= (and x3276 x8693) x7157))
(assert (= (=> (= x4826 (= x8085 0)) (and (=> (and (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4618) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4618)) (> 32 x4618))) x4065) (= x5340 (x910 (+ 31 x4618))) (= x1420 (x910 (+ x881 x7579))) (= (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5340) x881)) (not x4826)) (and (=> (and (= true x6661) x4065) x6209) (=> (and (and (and (= x7726 (x2082 x3762)) (<= x7726 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< 0 x393) x4283) (= x899 (x4400 x7579)) (= x3762 (x5783 (x2264 x3881) (x6664 164) 0)) (>= x7726 0)) (or (and (and (= x3881 x8669) (= x4545 x4283) (= x4396 0)) (not x4283)) (and x4283 (and (= (x4000 x525 1) x3059) (= x525 (x5783 (x2264 x3881) (x6664 154) 0)) (= x6802 (= 0 x5746)) (= (x7295 x3059) x5746) (> 1461501637330902918203684832716283019655932542976 x5746) (<= 0 x5746) (>= 1461501637330902918203684832716283019655932542975 x5746) (= x4545 (not x6802)) (= x4396 x5746) (= x3881 x8669))))) (not x4065)) x4927))) (=> x4826 x8633))) x3635))
(assert (= (and x3776 x2798) x6285))
(assert (= (and x465 (not x2662)) x906))
(assert (x9173 x3249))
(assert (x9173 x1534))
(assert (= (+ (x3373 x8003) 1) (x3373 (x4000 x8003 1))))
(assert (= x5605 (and x196 (not x4578))))
(assert (= x3067 (and x6026 x1994)))
(assert (= (and x4505 x3431) x8818))
(assert (= (and x8334 x3786) x4665))
(assert (x9173 x5158))
(assert (= x1090 (and x2605 x26)))
(assert (= x2928 (=> (and (= x1488 0) (= x4777 x3298)) x2931)))
(assert (= x1553 (and x362 (not x9109))))
(assert (x9173 x878))
(assert (= (and x7485 (not x7989)) x5669))
(assert (x9173 x1555))
(assert (= x7829 (and (not x3646) x3465)))
(assert (x9173 x6140))
(assert (= x2677 (and x3274 (not x6577))))
(assert (= (or x2220 x5496) x3106))
(assert (x9173 x888))
(assert (x9173 x3713))
(assert (= (and x5442 x3664) x331))
(assert (= (and x2331 (not x3580)) x6902))
(assert (= x1753 (x3373 (x2264 x1753))))
(assert (= (and x5017 (not x5185)) x8579))
(assert (x9173 x5874))
(assert (x9173 x7976))
(assert (x9173 x7567))
(assert (x9173 x3129))
(assert (= (and (not x8539) x3856) x5828))
(assert (= (and (not x9008) x7437) x5780))
(assert (= (and x8881 (not x4670)) x3566))
(assert (x9173 x3821))
(assert (x9173 x5439))
(assert (= x3023 (and x8331 (not x541))))
(assert (=> (>= 10000 x4200) (= (x2264 x4200) (x6664 x4200))))
(assert (= x6861 (or x5499 x5471 x7382 x5865)))
(assert (x9173 x2849))
(assert (= (=> (and (= 0 x6448) (= x3794 x6470)) x8024) x242))
(assert (= (and x9114 x2507) x6046))
(assert (= (or x3505 x428 x8052) x4377))
(assert (x9173 x3419))
(assert (= (and (not x1213) x7946) x7453))
(assert (= x3662 (and (not x9105) x3526)))
(assert (= (and x6458 x7620) x8996))
(assert (= (and x5040 x3360) x3819))
(assert (x9173 x3096))
(assert (x9173 x753))
(assert (x9173 x6786))
(assert (x9173 x187))
(assert (x9173 x5146))
(assert (= x8249 (x3373 (x2264 x8249))))
(assert (x9173 x6963))
(assert (= x8796 (x3373 (x2264 x8796))))
(assert (x9173 x3445))
(assert (= (=> (and (= x4144 0) (= x4162 x993)) x80) x6603))
(assert (x9173 x4041))
(assert (x2631 x5146))
(assert (= x867 (=> (and (= 0 x319) (= x9184 x3239)) x4508)))
(assert (x9173 x6385))
(assert (= (and x4919 (not x1084)) x2203))
(assert (= (=> (and (= 0 x1965) (= x5123 x3254)) x960) x4105))
(assert (=> (>= 10000 x8460) (= (x2264 x8460) (x6664 x8460))))
(assert (= (or x687 (and x2466 (not x3954)) (and x7915 x5021) x8711 (and x6812 x8885) (and (not x1856) x103)) x2469))
(assert (= x6207 (and x1675 (not x4327))))
(assert (= x234 (x3373 (x2264 x234))))
(assert (= x3470 (or x2576 x5835)))
(assert (= (=> (and (= x7954 (not (< 1 x2289))) (= (x5783 (x2264 x560) (x6664 161) 0) x8938) (= (x650 x8938) x2289)) (and x4916 x7954)) x255))
(assert (= x3750 (and (not x3237) x544)))
(assert (x9173 x5516))
(assert (x9173 x6874))
(assert (x9173 x6536))
(assert (x9173 x4690))
(assert (= (and x4339 x3845) x7970))
(assert (= (x3373 (x2264 x6804)) x6804))
(assert (x9173 x127))
(assert (= x6055 (or x8516 x2390)))
(assert (= (and (not x5755) x1506) x7523))
(assert (= x6451 (and (not x3271) x4254)))
(assert (= x8042 (and (not x1247) x4543)))
(assert (x9173 x8051))
(assert (= x4910 (and x5481 x7423)))
(assert (= (=> (and (= 0 x4873) (= x1368 x5289)) x6994) x3663))
(assert (= (+ (x3373 x4521) 1) (x3373 (x4000 x4521 1))))
(assert (= (and x4604 x4957) x618))
(assert (= (and (not x6215) x181) x4452))
(assert (x9173 x3456))
(assert (x9173 x5053))
(assert (= x4361 (=> (and (= x1511 x2065) (= x8393 x5885)) x2720)))
(assert (x9173 x182))
(assert (= (x3373 (x4000 x6090 1)) (+ 1 (x3373 x6090))))
(assert (= x4673 (and x5177 x3671)))
(assert (= x4527 (and x7376 x3997)))
(assert (= x5729 (x3373 (x2264 x5729))))
(assert (x9173 x5707))
(assert (= x4987 (not (and (< x6584 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x6584) (= (x4000 x5302 1) x8162) (= (x3226 x8162) x6584) (>= x6584 0) (= x5302 (x5783 (x2264 x3539) x6517 0))))))
(assert (x9173 x5553))
(assert (= x8633 (=> (= true x6661) x6209)))
(assert (= (=> (and (or (not x4012) x4012) (= (= x2349 0) x4012)) x4562) x1829))
(assert (x9173 x2681))
(assert (= x4383 (and (not x378) x404)))
(assert (= x5708 (and x2848 x5044)))
(assert (= (and x1625 x6984) x1294))
(assert (= (and x3372 (not x2869)) x5140))
(assert (x9173 x8087))
(assert (= x3107 (=> (and (= x6492 x5369) (= x8736 x2265)) x4908)))
(assert (=> (>= 10000 x3133) (= (x6664 x3133) (x2264 x3133))))
(assert (x5765 x7347))
(assert (= (and x7357 x4842) x1607))
(assert (= (+ 1 (x3373 x8779)) (x3373 (x4000 x8779 1))))
(assert (= x1031 (and x2844 x4585)))
(assert (= x1835 (and (not x7261) x7608)))
(assert (= x9054 (and x2492 (not x8879))))
(assert (x9173 x3719))
(assert (= x4581 (and (not x8018) x5486)))
(assert (x9173 x3910))
(assert (x9173 x2937))
(assert (x9173 x7410))
(assert (= (and x3887 (not x8415)) x6213))
(assert (= (+ 2 (x3373 x8646)) (x3373 (x4000 x8646 2))))
(assert (x9173 x8627))
(assert (= (and (not x227) x6840) x1089))
(assert (x9173 x638))
(assert (x9173 x4759))
(assert (x9173 x3455))
(assert (x9173 x3287))
(assert (= (and (not x3940) x8021) x8316))
(assert (= (and x1433 x8356) x2366))
(assert (x9173 x8692))
(assert (= x3695 (and x662 x1114)))
(assert (x9173 x2065))
(assert (= (x2264 1913449218) (x6664 1913449218)))
(assert (x9173 x4419))
(assert (= (or x8998 x2537 (and x3340 x8656) (and x945 (not x5293)) x8757) x6960))
(assert (= x3931 x6721))
(assert (x9173 x8368))
(assert (= (and x7711 x2629) x6831))
(assert (x9173 x6923))
(assert (x9173 x5245))
(assert (= x4898 (and x14 (not x7225))))
(assert (= x6947 (and x6902 x2602)))
(assert (= (or x7476 x5669) x1009))
(assert (x9173 x5916))
(assert (= (x3373 (x2264 x8114)) x8114))
(assert (x9173 x4963))
(assert (= x7658 (=> (and (= x4091 x8990) (= x9171 x8452)) x4816)))
(assert (= x5065 (and x4706 x7878)))
(assert (x9173 x8014))
(assert (= x6792 (or x6283 x9074)))
(assert (= x9224 (and x1188 x7318)))
(assert (= x5549 (and x5782 x6380)))
(assert (=> (<= x2962 10000) (= (x2264 x2962) (x6664 x2962))))
(assert (x9173 x3193))
(assert (= (and x2847 x8953) x5989))
(assert (= (and x4460 (not x9216)) x705))
(assert (x9173 x3367))
(assert (x9173 x3600))
(assert (= (or x5431 x324) x2663))
(assert (= x1506 (or x8640 x8280)))
(assert (= x5792 (=> (= (= 0 x6461) x4113) (and (=> (and (and (= x6269 (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7585)) (= (x910 (+ x8939 x6269)) x7429) (= x2166 (or (and (= (<= x3456 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3456 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3456))) (= (x910 (+ 31 x3456)) x7585)) (not x4113)) (and (=> (and (= true x6661) x2166) x6209) (=> (and (and (and (<= 0 x1742) (= x312 (x2596 x8939)) (<= x1742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< 0 x1511) x584) (= x1742 (x7727 x1075)) (= x1075 (x5783 (x2264 x3881) (x6664 165) 0))) (or (and x584 (and (= (x212 x2774) x616) (= x616 x730) (= (x5783 (x2264 x3881) (x6664 157) 0) x4048) (>= x616 0) (= (not x3767) x5843) (= x458 x3881) (<= x616 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x616) (= x3767 (= 0 x616)) (= x2774 (x4000 x4048 1)))) (and (not x584) (and (= x3881 x458) (= x730 0) (= x5843 x584))))) (not x2166)) x5392))) (=> x4113 x8633)))))
(assert (= (+ (x3373 x3424) 1) (x3373 (x4000 x3424 1))))
(assert (x5765 x4396))
(assert (x9173 x2187))
(assert (= (+ 2 (x3373 x4439)) (x3373 (x4000 x4439 2))))
(assert (x9173 x5948))
(assert (x5765 x7894))
(assert (x9173 x1595))
(assert (x9173 x2991))
(assert (=> (>= 10000 x1527) (= (x2264 x1527) (x6664 x1527))))
(assert (x9173 x3245))
(assert (=> (>= 10000 x2652) (= (x2264 x2652) (x6664 x2652))))
(assert (x9173 x1669))
(assert (x5765 x3265))
(assert (x9173 x1761))
(assert (x5765 x2368))
(assert (x9173 x4796))
(assert (= x5598 (and x6128 x8468)))
(assert (x9173 x7656))
(assert (= (and (not x1583) x228) x2031))
(assert (x9173 x1146))
(assert (x9173 x5988))
(assert (x9173 x5814))
(assert (x9173 x8925))
(assert (= x2887 (=> (and (= x5104 x629) (= x6941 x7907)) x7731)))
(assert (x9173 x6432))
(assert (x2631 x8564))
(assert (= (=> (and (= x1193 0) (= x5053 x2126)) x1979) x5121))
(assert (x9173 x606))
(assert (x9173 x167))
(assert (= (and x415 (not x6914)) x7499))
(assert (x9173 x440))
(assert (= x5540 (and (not x7433) x6783)))
(assert (x9173 x2046))
(assert (= x8665 (and (not x661) x2385)))
(assert (= (and x8439 x1179) x1351))
(assert (= x513 (=> (and (= x5735 x8717) (= x2186 x7212)) x2842)))
(assert (x9173 x659))
(assert (x9173 x1473))
(assert (x9173 x1341))
(assert (x9173 x5721))
(assert (x5699 x6457 x142))
(assert (= x5813 (and (not x4653) x6816)))
(assert (= x8861 (or x7714 x5038)))
(assert (x9173 x4768))
(assert (= x415 (or x4440 x4227)))
(assert (x9173 x1317))
(assert (x9173 x4754))
(assert (x9173 x4091))
(assert (= (=> (and (and (= x6279 (x5783 (x2264 x560) x1648 0)) (>= x8307 0) (= (= 0 x8307) x3838) (= (x5783 (x2264 x3881) (x6664 160) 0) x1648) (> 256 x8307) (<= x8307 255) (= x8307 (x6016 x6279))) (or (and (not x3838) (and (= x5644 (ite x7081 1 0)) (= (x5783 (x2264 x560) x7809 0) x7058) (= x2453 (x8257 x7058)) (<= 0 x2453) (= x7809 (x5783 (x2264 x3881) (x6664 158) 0)) (<= x2453 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x2453 0) x7081))) (and (= x8307 x5644) x3838))) x8515) x6409))
(assert (x9173 x2982))
(assert (x9173 x5798))
(assert (= (x3373 (x2264 x1326)) x1326))
(assert (= (=> (and (= x6872 (x6168 x6456)) (= (x7727 x3402) x7528) (>= x6872 0) (= x6133 (x5783 (x2264 x3881) (x6664 164) 0)) (<= 0 x7528) (= (x5783 (x2264 x3881) (x6664 169) 0) x66) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2155) (>= x2155 0) (= x4978 (< 115792089237316195423570985008687907853269984665640564039457 x4465)) (= x6407 (= (ite x4978 1 0) 0)) (= x2155 (x2082 x6133)) (= (x5783 (x2264 x3881) (x6664 165) 0) x3402) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6872) (<= x7528 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (not x6407) x3931) (=> (and x6407 (and (= x5039 (ite (> 1000000000000000000 x8662) 1 0)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1395) x8662) (= (= 0 x6325) x4615) (= x6325 (x6748 x403 x5039)) (= x1395 (mod (* x4465 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x403 (ite (not x5087) 1 0)) (= x5087 (= x1395 0)))) (and (=> (and (and (= x4379 (mod (* 1000000000000000000 x1395) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x7528) x1661)) x4615) (and (=> (and (and (= (ite (> x664 x6872) x6872 x664) x5448) (>= x2581 0) (= (div x580 1000000000000000000) x664) (= x707 (> x5448 x2581)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2581) (= x580 (div x4379 x7528)) (= (x6168 x6456) x2581)) x1661) (and (=> x707 x3931) (=> (and (not x707) (and (or (and x1188 (= x7886 x1113)) (and (not x1188) (= x7886 0))) (and (<= x1113 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2195 (x4000 x6389 1)) (<= x2575 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x560) x719 0) x6389) (= (x3434 x2374) x2986) (= x1113 (x3998 x2195)) (<= 0 x2575) (= x2069 (x5783 (x2264 x3881) (x6664 156) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2986) (= (x5783 (x2264 x560) x3119 0) x2658) (= x719 (x5783 (x2264 x3881) (x6664 159) 0)) (>= x1113 0) (<= x6920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5688 (x5783 (x2264 x560) x2069 0)) (= x3183 (x4000 x2658 2)) (= x2575 (x6968 x3183)) (= x3119 (x5783 (x2264 x3881) (x6664 157) 0)) (= x358 (x2563 (- x2581 x5448))) (= (x2422 x6389) x8574) (<= 0 x6920) (= (x4000 x5688 2) x2374) (<= 0 x8574) (= x1188 (< x6920 x1113)) (>= x2986 0) (<= x8574 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) x7389))) (=> (not x1661) x4551))) (=> (not x4615) x3931))))) x3095))
(assert (= x4066 (and x7270 x259)))
(assert (x9173 x7459))
(assert (x9173 x5668))
(assert (= x4747 (and x5118 x8333)))
(assert (x9173 x8715))
(assert (x9173 x2458))
(assert (= (and x2789 x7848) x8129))
(assert (x9173 x5603))
(assert (= (or x8501 x5510) x5922))
(assert (= x2669 (=> (and (= x5353 x673) (= x831 0)) x59)))
(assert (x9173 x9147))
(assert (= x2988 (or x8765 x2930)))
(assert (x9173 x5274))
(assert (= (x3373 (x2264 x5983)) x5983))
(assert (x9173 x7585))
(assert (= x7203 (and x8149 x4579)))
(assert (x9173 x6463))
(assert (x9173 x2929))
(assert (= x264 (and x8385 x2969)))
(assert (= (=> (and (= x6860 0) (= x4344 x2373)) x864) x4220))
(assert (x9173 x5769))
(assert (x9173 x763))
(assert (x9173 x2604))
(assert (x5765 x5358))
(assert (x5765 x5939))
(assert (= x5715 x6249))
(assert (x9173 x3051))
(assert (= (x3373 (x4000 x8709 1)) (+ (x3373 x8709) 1)))
(assert (x9173 x2234))
(assert (= (or x6552 (and (not x4012) x2247)) x4499))
(assert (x9173 x5664))
(assert (= x7650 (or x2942 x6223)))
(assert (= x3504 (and x4219 x5584)))
(assert (x5765 x7345))
(assert (= x6922 x7398))
(assert (= 117300739 (x3373 (x6664 117300739))))
(assert (= x3019 (or x2246 (and x4991 x6848))))
(assert (x9173 x3033))
(assert (= (x3373 (x4000 x2834 1)) (+ (x3373 x2834) 1)))
(assert (= (x3373 (x2264 x9232)) x9232))
(assert (x9173 x6804))
(assert (= (and x1425 (not x6201)) x6720))
(assert (x9173 x5661))
(assert (x9173 x2368))
(assert (x9173 x290))
(assert (= x4908 (=> (and (= x4784 (= x6492 0)) (or (not x4784) x4784)) x4633)))
(assert (= (x3373 (x2264 x5320)) x5320))
(assert (x9173 x1808))
(assert (= x7187 (and x5204 (not x1049))))
(assert (x5765 x4668))
(assert (= (and x1835 (not x3248)) x8809))
(assert (x9173 x3144))
(assert (x2631 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and x8038 x1815) x5523))
(assert (x9173 x6523))
(assert (x5765 x2543))
(assert (x9173 x5060))
(assert (x9173 x9129))
(assert (x9173 x6860))
(assert (x2631 x4773))
(assert (= x3121 (and x1520 x8217)))
(assert (= x2063 (x3373 (x2264 x2063))))
(assert (= x3364 (or x1819 x8101)))
(assert (= (x3373 (x4000 x8968 1)) (+ 1 (x3373 x8968))))
(assert (= (and (not x3181) x6118) x1902))
(assert (= x5686 (and (=> (and (and (= x6784 x1404) (= x3881 x1259) (= x1308 x3325)) x8878) x5631) (=> (and (and (= x2083 x1308) (= 1 x3080)) (not x8878)) x5906))))
(assert (x9173 x2460))
(assert (= (and x6095 x8723) x7282))
(assert (=> (<= x6449 10000) (= (x2264 x6449) (x6664 x6449))))
(assert (x5765 x4519))
(assert (= x3779 (and x4841 x7508)))
(assert (= (x3373 (x2264 x1850)) x1850))
(assert (=> (>= 10000 x2937) (= (x6664 x2937) (x2264 x2937))))
(assert (x5765 x6795))
(assert (x9173 x6449))
(assert (x9173 x6032))
(assert (x9173 x4465))
(assert (x9173 x980))
(assert (= (and (not x3904) x1953) x8525))
(assert (x5765 x6306))
(assert (x9173 x7057))
(assert (= (and x3397 x5901) x1186))
(assert (= x5453 (and x8768 x4586)))
(assert (x9173 x7675))
(assert (= (=> (and (= x4360 x3249) (= x5986 x2891)) x1577) x8992))
(assert (x9173 x4097))
(assert (= (and (not x8475) x7035) x4659))
(assert (= x4293 (and (not x3093) x1252)))
(assert (x9173 x1849))
(assert (= (and x7498 (not x6636)) x915))
(assert (= (and (not x6085) x4244) x5393))
(assert (= x2201 (and (not x2602) x6902)))
(assert (=> (>= 10000 x6906) (= (x6664 x6906) (x2264 x6906))))
(assert (= (+ 1 (x3373 x1246)) (x3373 (x4000 x1246 1))))
(assert (= x7966 (and x802 (not x1029))))
(assert (x5765 x6939))
(assert (x9173 x4700))
(assert (= (x3373 (x2264 x1308)) x1308))
(assert (= (and (not x4309) x8827) x8010))
(assert (= (x3373 (x2264 x6939)) x6939))
(assert (x9173 x655))
(assert (x9173 x6952))
(assert (x9173 x751))
(assert (x9173 x8945))
(assert (= x6795 (x3373 (x2264 x6795))))
(assert (= x8986 x8633))
(assert (= x1426 (or x6969 x3076 x1813)))
(assert (x9173 x7068))
(assert (x9173 x1035))
(assert (x9173 x8488))
(assert (x9173 x589))
(assert (= (or x3813 x1397) x95))
(assert (x9173 x3737))
(assert (= (and x1301 x6867) x6017))
(assert (= x5286 (and x1161 (not x2301))))
(assert (x9173 x1384))
(assert (= x1981 (and x1644 (not x2940))))
(assert (x9173 x4051))
(assert (= (and x2948 x8665) x3860))
(assert (x9173 x4186))
(assert (= (or x7122 x7019) x3010))
(assert (= (=> (and (= (= x1758 0) x4288) (or (and (= (x5783 (x2264 x1758) x4176 0) x8921) (not x4288)) (and (= x329 (x4000 x4176 2)) x4288))) x2571) x1487))
(assert (= x7498 (and (not x100) x170)))
(assert (x9173 x6289))
(assert (= (+ (x3373 x5461) 2) (x3373 (x4000 x5461 2))))
(assert (= (=> (and (= x6022 x2039) (= x1609 x8731)) x8556) x5959))
(assert (x9173 x4556))
(assert (= (and x8022 x396) x3839))
(assert (= x2408 (or x8154 x2954)))
(assert (= (and (not x8497) x2863) x7119))
(assert (= (or x6159 x6763) x7905))
(assert (x9173 x4728))
(assert (= x8198 (and (not x237) x621)))
(assert (x9173 x2305))
(assert (=> (>= 10000 x3325) (= (x2264 x3325) (x6664 x3325))))
(assert (x9173 x4721))
(assert (x9173 x1524))
(assert (x9173 x6266))
(assert (= (or x4123 x8143) x2853))
(assert (x9173 x5720))
(assert (=> (>= 10000 x4519) (= (x2264 x4519) (x6664 x4519))))
(assert (= (and (not x7415) x8804) x738))
(assert (= (or x8359 x1627 x5791 x6782) x1011))
(assert (=> (>= 10000 x4374) (= (x2264 x4374) (x6664 x4374))))
(assert (x5765 x8628))
(assert (= x7 (and (not x522) x4525)))
(assert (= (and x3574 x4116) x7685))
(assert (x9173 x114))
(assert (x5765 x739))
(assert (x9173 x9221))
(assert (x9173 x5340))
(assert (x9173 x5355))
(assert (= x3614 (and x8088 x6363)))
(assert (x2631 x926))
(assert (= (and (not x3105) x7684) x4655))
(assert (= (and x6747 x8164) x8675))
(assert (= (or (and (not x3613) x7796) (and x1235 x4583) (and (not x8814) x4833) (and x1295 x2014) (and x4269 x2692) x8016 (and x1281 x5866) x5856 x9038) x2117))
(assert (x9173 x3594))
(assert (= (and (not x1079) x3227) x1462))
(assert (= (and x5388 x5150) x5905))
(assert (= (and x1825 x7317) x3864))
(assert (x9173 x1733))
(assert (x9173 x7114))
(assert (= x6868 (and (not x6045) x3932)))
(assert (= (and x7683 x1630) x1301))
(assert (= x1285 (or x5531 (and x4369 (not x4450)))))
(assert (= (and (not x7444) x5180) x9113))
(assert (x9173 x2653))
(assert (x9173 x2918))
(assert (x9173 x8360))
(assert (= x1117 (and x7216 x46)))
(assert (x9173 x7085))
(assert (= x4551 x7412))
(assert (x9173 x619))
(assert (x9173 x4827))
(assert (= (and x718 (not x2509)) x6169))
(assert (x9173 x5683))
(assert (x9173 x4582))
(assert (=> (>= 10000 x6059) (= (x2264 x6059) (x6664 x6059))))
(assert (= x6772 (and (not x4671) x2108)))
(assert (= (or x4716 x2222) x3309))
(assert (x9173 x4657))
(assert (= (x6664 1000000000000000000) (x2264 1000000000000000000)))
(assert (= x1393 (or x4203 x1135 x30 x2967 x5312)))
(assert (= (or x7151 (and x5543 x6481) (and x4573 x607) x8142 x1842) x3813))
(assert (x5765 x7673))
(assert (= x3715 (and x8268 (not x3313))))
(assert (= x6853 (and (not x8039) x5399)))
(assert (= x3643 (or x6386 x6940 x1410 x7591)))
(assert (= (and x5692 x5055) x5687))
(assert (= x181 (and (not x8864) x4592)))
(assert (x9173 x1314))
(assert (x9173 x4874))
(assert (= (+ (x3373 x7733) 1) (x3373 (x4000 x7733 1))))
(assert (x2631 x1088))
(assert (= (and x6623 (not x6916)) x3465))
(assert (= (and x7135 (not x2531)) x7306))
(assert (= (and x3883 x1139) x1306))
(assert (= (and x7560 (not x7686)) x2331))
(assert (x9173 x1018))
(assert (= (and (not x7154) x3875) x5034))
(assert (x5765 x3325))
(assert (= x4134 (x3373 (x2264 x4134))))
(assert (x9173 x4456))
(assert (x9173 x8667))
(assert (x9173 x6404))
(assert (x9173 x920))
(assert (= (x3373 (x2264 x9151)) x9151))
(assert (=> (>= 10000 x8644) (= (x6664 x8644) (x2264 x8644))))
(assert (x1593 x4075 x3655))
(assert (x2631 x8125))
(assert (= (x3373 (x4000 x1702 1)) (+ (x3373 x1702) 1)))
(assert (x8537 x592))
(assert (x9173 x4727))
(assert (x9173 x594))
(assert (= (=> (and (= x5735 x3143) (= x2186 x3659)) x513) x5514))
(assert (x9173 x3049))
(assert (= x5588 (and (not x245) x4199)))
(assert (x9173 x9104))
(assert (x9173 x7014))
(assert (x9173 x5864))
(assert (x9173 x8647))
(assert (x5765 x6121))
(assert (= (and x2483 (not x4467)) x4915))
(assert (x9173 x2804))
(assert (x9173 x4412))
(assert (= (and x3042 x7301) x2081))
(assert (= (x3373 (x2264 x8781)) x8781))
(assert (x9173 x7930))
(assert (= x7243 (and x909 x449)))
(assert (= (and x2004 x4882) x2796))
(assert (= (or x6033 x1042) x2027))
(assert (= (and x5770 (not x2955)) x1378))
(assert (x9173 x7604))
(assert (x2631 x8226))
(assert (x9173 x5369))
(assert (= (and (not x766) x4438) x3756))
(assert (= x1703 (or x738 x6238)))
(assert (x9173 x1705))
(assert (= x2023 (=> (and (= x6374 x1646) (= x3542 x8967)) x3865)))
(assert (= (and x5718 x3643) x153))
(assert (= (and (not x7782) x558) x3679))
(assert (x9173 x7501))
(assert (x9173 x5084))
(assert (= x9085 (and x3321 x4558)))
(assert (= x2209 (and x4743 (not x4189))))
(assert (x9173 x8180))
(assert (= (and x1563 x4762) x5460))
(assert (= (or x3798 x12 x5276 x174) x2525))
(assert (x9173 x361))
(assert (= x8296 (and x5667 x5256)))
(assert (x9173 x7483))
(assert (= (x3373 (x2264 x7347)) x7347))
(assert (= (and (not x5136) x2579) x6692))
(assert (x9173 x2451))
(assert (= x8718 (=> (and (= 0 x5869) (= x3985 x4162)) x8875)))
(assert (= (or (and x5587 x6025) (and x3279 x4569) x8255 (and x9045 x5100) x4595 x2934) x7303))
(assert (x9173 x1068))
(assert (x9173 x5210))
(assert (= x8312 (and (not x2651) x488)))
(assert (= (and x2060 x2677) x6644))
(assert (= x7582 (and (=> (and (and (= 1 x1539) (= x6343 x8483)) (not x154)) x6757) (=> (and x154 (and (= x783 x8655) (= x8483 x2015) (= x3881 x7931))) x2646))))
(assert (= (and x5204 x1049) x4436))
(assert (x9173 x3436))
(assert (= (x3373 (x2264 x7919)) x7919))
(assert (=> (>= 10000 x74) (= (x6664 x74) (x2264 x74))))
(assert (x9173 x9199))
(assert (= (and x4141 x6649) x7654))
(assert (x9173 x9171))
(assert (x9173 x3636))
(assert (x9173 x773))
(assert (x9173 x5873))
(assert (x9173 x4993))
(assert (= x2222 (and x3838 x7841)))
(assert (x9173 x7961))
(assert (= (x6664 2858086653) (x2264 2858086653)))
(assert (= x631 (and x4429 x1132)))
(assert (= (and x2339 x3290) x4518))
(assert (=> (<= x2956 10000) (= (x2264 x2956) (x6664 x2956))))
(assert (x9173 x1764))
(assert (= (x3373 (x4000 x3136 1)) (+ 1 (x3373 x3136))))
(assert (x9173 x6293))
(assert (x9173 x2459))
(assert (= x8633 x984))
(assert (= x4592 (and (not x5476) x2192)))
(assert (= (or x8964 x4637) x2032))
(assert (x9173 x3584))
(assert (x9173 x8131))
(assert (x9173 x6239))
(assert (= x2826 (and x8010 (not x7573))))
(assert (x9173 x3778))
(assert (= (and x4487 x8379) x7253))
(assert (= x3784 (and x1531 (not x3867))))
(assert (x2631 x8256))
(assert (x9173 x7371))
(assert (x9173 x2524))
(assert (= (=> (and (= x8653 x3629) (= x1251 x4648)) x7993) x1792))
(assert (= (and (not x21) x4193) x6163))
(assert (= x3674 (and x4883 (not x6328))))
(assert (x9173 x7681))
(assert (= x8998 (and x9059 x9179)))
(assert (x159 x6010))
(assert (x9173 x1388))
(assert (x5765 x7103))
(assert (= (and x3451 (not x6181)) x7267))
(assert (= (and (not x9160) x1175) x4868))
(assert (x9173 x7065))
(assert (= (and x7791 x3732) x968))
(assert (= x8893 x6922))
(assert (= x5137 (=> (= (= x2986 x3231) x3768) (and (=> (and (not x3768) (= x2445 (< 0 x2986))) (and (=> (and (not x2445) (and (= x8229 x7010) (= x4024 x5098))) x7992) (=> (and (and (>= x6306 0) (>= 1461501637330902918203684832716283019655932542975 x6306) (= (x8020 x917) x1018) (= x6306 (x410 x3267)) (= (x4000 x917 1) x3185) (= (x4000 x3267 1) x917) (<= x3869 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x193 (x910 (+ x5098 96))) (= (x5783 (x2264 x560) x2069 0) x3267) (<= x1018 1461501637330902918203684832716283019655932542975) (= (x3434 x3185) x3869) (= (= 0 x3869) x3291) (< x1018 1461501637330902918203684832716283019655932542976) (>= x3869 0) (> 1461501637330902918203684832716283019655932542976 x6306) (<= 0 x1018)) x2445) (and (=> (and (and (or (and (and (= (x4000 x1058 1) x4949) (= (x5783 (x2264 x6306) x2069 0) x1058)) (not x5810)) (and x5810 (= (x4000 x2069 1) x6312))) (= x5810 (= x6306 0))) (not x3291)) x110) (=> x3291 x8633))))) (=> (and (and (= x9202 x5098) (= x8229 x7059)) x3768) x1284)))))
(assert (x9173 x2126))
(assert (x9173 x4023))
(assert (= x3091 (or x1918 x7499)))
(assert (= (and x7481 x8686) x9227))
(assert (= (x3373 (x2264 x3133)) x3133))
(assert (=> (>= 10000 x6673) (= (x6664 x6673) (x2264 x6673))))
(assert (= x8596 (and (not x4496) x5764)))
(assert (x9173 x1657))
(assert (= (and x5096 (not x5848)) x8339))
(assert (x9173 x115))
(assert (x9173 x2676))
(assert (x9173 x239))
(assert (= x484 (and x4511 x5393)))
(assert (=> (<= x1018 10000) (= (x6664 x1018) (x2264 x1018))))
(assert (= (and (not x6423) x3895) x777))
(assert (= x6918 (and x4233 x3001)))
(assert (= (not (and (> 1461501637330902918203684832716283019655932542976 x6371) (<= x6371 1461501637330902918203684832716283019655932542975) (= x5346 (x5783 (x2264 x2015) x8655 0)) (= x6371 (x7095 x4285)) (>= x6371 0) (= x4285 (x4000 x5346 1)))) x2646))
(assert (x9173 x3379))
(assert (= x9215 (and (not x8054) x7557)))
(assert (= x5145 (=> (= (= x19 x7787) x8849) (and (=> (and x8849 (and (= x1420 x391) (= x4698 x4396))) x6977) (=> (and (= x6441 (< 0 x7787)) (not x8849)) (and (=> (and (and (= x4396 x3358) (= x767 x1420)) (not x6441)) x649) (=> (and (and (<= x8266 1461501637330902918203684832716283019655932542975) (= (x5783 (x2264 x4396) x1404 0) x7350) (<= 0 x2921) (= (x8835 x7350) x8266) (<= 0 x8266) (<= x2921 1461501637330902918203684832716283019655932542975) (= (x5766 x195) x2921) (<= 0 x1260) (= x522 (= x1260 0)) (< x8266 1461501637330902918203684832716283019655932542976) (= x195 (x4000 x7350 1)) (= (x910 (+ 96 x1420)) x4593) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1260) (= x1260 (x8732 x1919)) (< x2921 1461501637330902918203684832716283019655932542976) (= x1919 (x4000 x195 1))) x6441) (and (=> x522 x3378) (=> (and (and (or (and (= (x4000 x1404 1) x5027) x3018) (and (and (= (x4000 x7724 1) x5195) (= (x5783 (x2264 x8266) x1404 0) x7724)) (not x3018))) (= (= x8266 0) x3018)) (not x522)) x4981)))))))))
(assert (= x483 (and (not x3648) x2712)))
(assert (= x2633 (x3373 (x2264 x2633))))
(assert (= x7331 (and x3105 x7684)))
(assert (= x8418 (and x1874 (not x4382))))
(assert (= x2690 (or (and (not x1980) x4092) (and x4224 x8728))))
(assert (x9173 x8433))
(assert (x9173 x6832))
(assert (x5699 x7519 x2792))
(assert (= x694 (and x2393 x7920)))
(assert (x5765 x457))
(assert (= (x3373 (x2264 x1499)) x1499))
(assert (= x6569 (and x2623 (not x5542))))
(assert (x5699 x6467 x8125))
(assert (x2631 x4975))
(assert (= (and x3288 x6891) x2537))
(assert (x9173 x3817))
(assert (x9173 x5800))
(assert (= x9189 (and x5648 (not x7427))))
(assert (= x1386 x3931))
(assert (x9173 x4427))
(assert (x9173 x5958))
(assert (x9173 x2859))
(assert (x9173 x4722))
(assert (x9173 x387))
(assert (= (+ (x3373 x9128) 2) (x3373 (x4000 x9128 2))))
(assert (x9173 x5253))
(assert (= (or x6842 x8042) x4047))
(assert (x9173 x8327))
(assert (x9173 x7749))
(assert (= x4872 (and x3320 x322)))
(assert (x9173 x7422))
(assert (x9173 x4851))
(assert (x9173 x8210))
(assert (x2631 x2635))
(assert (= (+ (x3373 x1720) 2) (x3373 (x4000 x1720 2))))
(assert (x9173 x6913))
(assert (= (and x7154 x3875) x3036))
(assert (= x8082 (=> (= (= 0 x5012) x624) (and (=> (and (not x624) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7624) true) (> 32 x7624)) (> x7624 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4573)) (and (=> (and (not x4573) (and (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5354)) x1109) (= (< x1109 x4010) x5880) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4010) (>= x4010 0))) (and (=> x5880 x5078) (=> (and (and (= x2529 (> x7483 x1109)) (= (x5783 (x2264 x7036) (x6664 5) 0) x5830) (= x7483 (x7641 x5830)) (= (x910 (+ x4010 x5354)) x9158) (>= x7483 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7483)) (not x5880)) (and (=> x2529 x5078) (=> (and (and (= (x910 (+ x5354 x7483)) x3694) (= x8400 1) (= 32 x4798)) (not x2529)) x8239))))) (=> x4573 x5078))) (=> x624 x5078)))))
(assert (x9173 x1345))
(assert (= (and x2826 (not x4983)) x3016))
(assert (= (and (not x7971) x853) x8154))
(assert (= (x3373 (x4000 x8246 1)) (+ 1 (x3373 x8246))))
(assert (= (and x6672 x9153) x8890))
(assert (x9173 x3739))
(assert (= x1440 (and x6904 x3731)))
(assert (= (or x7654 x7287 x6918) x9228))
(assert (= (=> (= (< 0 x3231) x1044) (and (=> (and x1044 (and (= (= 0 x560) x4337) (<= x1 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1 0))) (and (=> x4337 x8633) (=> (and (and (= (x4000 x8195 2) x1533) (>= x16 0) (<= x16 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x997 x1533) x16) (= (x5783 (x2264 x560) x2069 0) x8195) (= (= x16 0) x6228)) (not x4337)) (and (=> (and (and (or (and (= x1820 x6112) (not x6112)) (and (and (= (> x3231 x3417) x1423) (= (x5783 (x2264 x7345) x2069 0) x6653) (<= 0 x3417) (<= x3417 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4423 (x4000 x6653 2)) (= (x997 x4423) x3417) (= (not x1423) x1820)) x6112)) (and (= x5326 (x4000 x2069 1)) (= x7345 (x7279 x5326)) (<= 0 x7345) (> 1461501637330902918203684832716283019655932542976 x7345) (= x6112 (ite (< 0 x1) (not (= 0 x7345)) (> x1 0))) (>= 1461501637330902918203684832716283019655932542975 x7345))) x6228) x7563) (=> (not x6228) x8633))))) (=> (and (and (= x570 x7010) (= x5613 x4024)) (not x1044)) x5968))) x7992))
(assert (= x4099 (and x9035 x289)))
(assert (= (x3373 (x2264 x5362)) x5362))
(assert (x9173 x6954))
(assert (= (and x1252 x3093) x1406))
(assert (x9173 x2063))
(assert (x9173 x6514))
(assert (x9173 x2045))
(assert (= (and x69 x1087) x7704))
(assert (= x6486 (and x1731 x1350)))
(assert (= (x3373 (x4000 x4540 1)) (+ (x3373 x4540) 1)))
(assert (= (=> (and (= 0 x1292) (= x5444 x2206)) x2118) x1579))
(assert (x9173 x6497))
(assert (x9173 x62))
(assert (= x5659 (and x7203 x3473)))
(assert (= x7509 (and x8856 (not x2214))))
(assert (= (or x7324 x5955) x4388))
(assert (x9173 x3437))
(assert (x9173 x434))
(assert (= x5582 (and x2917 x7821)))
(assert (= (x3373 (x4000 x9231 1)) (+ 1 (x3373 x9231))))
(assert (x9173 x2538))
(assert (x9173 x1606))
(assert (= x6498 (=> (and (<= x8327 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x8092 x6456) x8327) (= (x1222 x5175) x3225) (<= 0 x8327) (<= 0 x3225) (<= x3225 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x8916)))
(assert (= (and x7936 x5820) x4697))
(assert (x9173 x8784))
(assert (= x6592 (and x6992 x8318)))
(assert (= (and x5974 x3761) x8947))
(assert (x9173 x8829))
(assert (x9173 x183))
(assert (= x8535 (=> (and (= x6532 x6319) (= x8649 0)) x7475)))
(assert (= (and x7885 x7015) x7828))
(assert (x9173 x6473))
(assert (= (and x7123 x6876) x5600))
(assert (x9173 x4648))
(assert (= (=> (and (= x7438 x7052) (= x364 x1589) (= x3741 x4939) (= x393 x8896) (= x1451 x53)) x4150) x3370))
(assert (= (or x9060 x5020 x418 x653) x6211))
(assert (x5765 x888))
(assert (x9173 x3192))
(assert (x9173 x5891))
(assert (x9173 x6092))
(assert (= (and x4569 (not x3279)) x1709))
(assert (x5765 x3817))
(assert (x9173 x9162))
(assert (= x8549 (and (not x2012) x7162)))
(assert (= (or x7013 x8710 (and x5294 x5919) (and x8437 x3151) x4872) x5364))
(assert (x9173 x7968))
(assert (=> (>= 10000 x1758) (= (x6664 x1758) (x2264 x1758))))
(assert (= (and x3310 (not x8301)) x4795))
(assert (x9173 x7624))
(assert (= x2967 (and x8376 x9111)))
(assert (x9173 x6677))
(assert (= x1954 (and x3488 x8759)))
(assert (x9173 x4509))
(assert (= (=> (and (or (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7968) (= (ite x7443 1 0) x2606) (= (x5783 (x2264 x560) x8071 0) x3204) (>= x7968 0) (= (x6537 x3204) x7968) (= (= 0 x7968) x7443) (= x8071 (x5783 (x2264 x3881) (x6664 159) 0))) (not x4493)) (and (= x2542 x2606) x4493)) (= (= x2542 0) x4493)) x5836) x5571))
(assert (x9173 x312))
(assert (x9173 x2921))
(assert (x9173 x4187))
(assert (x9173 x7009))
(assert (= x5404 (and x1517 x2218)))
(assert (= (and x3842 x3016) x8790))
(assert (= x2951 (and x8504 x8745)))
(assert (=> (<= x4396 10000) (= (x6664 x4396) (x2264 x4396))))
(assert (x9173 x6192))
(assert (x9173 x4479))
(assert (= x2028 (and x170 x100)))
(assert (= (=> (= 0 x4355) x2895) x3066))
(assert (x9173 x7916))
(assert (x5765 x2056))
(assert (x9173 x1930))
(assert (= (+ (x3373 x5443) 2) (x3373 (x4000 x5443 2))))
(assert (x9173 x7345))
(assert (= (and x6638 (not x1797)) x5793))
(assert (= x7673 (x3373 (x2264 x7673))))
(assert (x9173 x3350))
(assert (= x4118 (and x2817 x5058)))
(assert (= (and x6477 x4922) x892))
(assert (x9173 x4811))
(assert (= (or x5854 x3259) x1181))
(assert (= x173 (=> (and (= x7624 x8735) (= x5012 x3033)) x8387)))
(assert (=> (>= 10000 x4943) (= (x2264 x4943) (x6664 x4943))))
(assert (= x6297 (x3373 (x2264 x6297))))
(assert (= (and x3453 (not x7991)) x6698))
(assert (x9173 x1921))
(assert (= x3043 (or (and x4881 x676) x3063 (and x4610 x2753) (and (not x175) x4098) x169 (and x838 (not x7953)))))
(assert (x9173 x8913))
(assert (= (and x3750 (not x581)) x2617))
(assert (x9173 x575))
(assert (= (and (not x6850) x2319) x83))
(assert (x9173 x528))
(assert (x9173 x8138))
(assert (= (and x8187 x1981) x4256))
(assert (= x4031 (or x6665 (and (not x5385) x2835))))
(assert (x9173 x4812))
(assert (x9173 x4771))
(assert (= x6175 (and x874 (not x1569))))
(assert (x9173 x5171))
(assert (x9173 x5472))
(assert (= x7325 (and (not x6500) x3494)))
(assert (x9173 x3649))
(assert (x9173 x3984))
(assert (= x2618 (or x7889 x4006)))
(assert (x9173 x9151))
(assert (= (or x4184 x4466) x5165))
(assert (= (or x4436 x7187) x6247))
(assert (= x1752 x3931))
(assert (x9173 x3928))
(assert (= (x3373 (x4000 x2276 2)) (+ (x3373 x2276) 2)))
(assert (= (x3373 (x4000 x3390 1)) (+ 1 (x3373 x3390))))
(assert (= x4883 (and x1641 x1674)))
(assert (x2631 x5465))
(assert (x9173 x1347))
(assert (x9173 x4725))
(assert (= (or x3003 x3002) x8852))
(assert (=> (>= 10000 x3455) (= (x2264 x3455) (x6664 x3455))))
(assert (= (and x1255 (not x836)) x3268))
(assert (= x8633 x9080))
(assert (= (and x2311 x5823) x4252))
(assert (x9173 x6696))
(assert (x9173 x4884))
(assert (= x7881 (=> (and (and (= (< 0 (x6844 (x2264 x1326))) x7735) (not (= x5827 x799)) (<= x6289 1461501637330902918203684832716283019655932542975) (= x3466 (< 0 (x6844 (x2264 x3605)))) (not (= x5148 x799)) (<= 0 x1684) (>= 1461501637330902918203684832716283019655932542975 x5816) (<= x4668 1461501637330902918203684832716283019655932542975) (= x4399 (x4212 x7102)) (<= 0 x9068) (<= x5670 1461501637330902918203684832716283019655932542975) (<= x1935 1461501637330902918203684832716283019655932542975) (not (= x1326 x7091)) (>= x5245 0) (<= x1322 1461501637330902918203684832716283019655932542975) (<= 0 x2801) (not (= x7091 x4668)) (= x5827 x3989) (>= x7060 0) (<= x3747 255) (= (< 0 (x6844 (x2264 x7036))) x321) (<= x239 1461501637330902918203684832716283019655932542975) (= x7060 (x3516 (x2264 x4668))) (> x7091 0) (= (x4070 224) x7180) (<= 0 x696) (<= x8253 255) (<= x8006 1461501637330902918203684832716283019655932542975) (>= x5273 0) (>= x7269 0) (= (not (= x1358 0)) x5606) (> 3842108676 x2266) x3466 (>= x1935 0) (<= 0 x8030) (> x5148 0) (<= x696 1461501637330902918203684832716283019655932542975) (<= x8758 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x7091) (= x4971 (x4070 320)) (= x5245 (x3516 (x2264 x3605))) (not (= x7091 x5148)) (>= x92 0) (= x2719 (x3516 (x2264 x5827))) (= x2755 (x3516 (x2264 x1326))) (>= x6983 0) (= x6278 (x4070 256)) (> x4668 0) (= (> (x6844 (x2264 x5148)) 0) x4675) (<= x1358 255) (= 3583811254 x2266) (<= 0 x6289) (>= 18446744073709551615 x2413) (>= x7748 0) (>= x8006 0) (not (= x7347 x5827)) (>= x4265 0) (>= x3131 0) x321 (>= 255 x2305) (not (= x5827 x5148)) (= (not (= 0 x7334)) x5261) (<= x7269 18446744073709551615) (<= 0 x5375) (>= x4128 0) (>= 1461501637330902918203684832716283019655932542975 x512) (>= 18446744073709551615 x8030) (= x5670 x3543) (= (x4070 160) x4526) (not (= x3605 x1326)) (not (= x1326 x799)) (<= x6983 255) x7994 (<= 0 x3984) (> x7036 0) (>= 1461501637330902918203684832716283019655932542975 x3705) (= x4852 (x3516 (x2264 x5148))) (<= x7748 1461501637330902918203684832716283019655932542975) (<= 0 x1314) (>= x3649 0) (>= x8221 0) (> 256 x1358) (> x3605 0) (<= x2558 18446744073709551615) (< 0 x1326) (>= x1110 0) (< x6081 256) (= x7102 (x5783 (x2264 x3543) (x6664 168) 0)) x7735 (<= x2639 1461501637330902918203684832716283019655932542975) (> 256 x2738) (= (< 0 (x6844 (x2264 x4668))) x7994) (= (not (= x2738 0)) x2534) (>= x2800 0) (not (> 3583811254 x2266)) (>= x8253 0) (>= 1461501637330902918203684832716283019655932542975 x1750) (not (= x7347 x3605)) (= (x811 x7102) x8253) (<= 0 x2305) (<= x6507 1461501637330902918203684832716283019655932542975) (<= 0 x2738) (= (< 0 (x6844 (x2264 x799))) x4390) (<= x3543 1461501637330902918203684832716283019655932542975) (<= x5827 1461501637330902918203684832716283019655932542975) (<= 0 x239) (= (x2616 x7102) x2801) (<= x2800 255) (not (= x5148 x4668)) (= x977 (not (= 0 x6081))) (>= 1461501637330902918203684832716283019655932542975 x799) (<= x3252 1461501637330902918203684832716283019655932542975) (<= 0 x489) (>= x5999 0) (not (= x4668 x799)) (< 0 x7580) (>= x2639 0) (= x5987 (> (x6844 (x2264 x7091)) 0)) (<= 0 x1116) (<= x1116 1461501637330902918203684832716283019655932542975) (<= 0 x4399) (<= x1110 255) (= (< 0 (x6844 (x2264 x5827))) x982) (> x5827 0) (<= x5248 1461501637330902918203684832716283019655932542975) (<= x4265 1461501637330902918203684832716283019655932542975) (>= 255 x6294) (>= 1461501637330902918203684832716283019655932542975 x3989) (= x1392 (not (= x5999 0))) (= (< 0 (x6844 (x2264 x7347))) x9139) (>= 1461501637330902918203684832716283019655932542975 x5375) (<= 0 x3594) (< x2801 256) (>= 255 x2738) (<= x5999 255) (<= 0 x2558) (not (= x7347 x1326)) (= x367 x7091) x982 (not (= x7347 x5148)) (= (not (= x2801 0)) x4007) (>= x2413 0) (not (= x5148 x3605)) (>= x2719 0) (>= x2999 0) (not (= x7091 x7347)) (<= 0 x3252) (= (x4070 352) x2971) (<= x5148 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x8136) (<= 0 x2053) (>= 1461501637330902918203684832716283019655932542975 x3712) (>= 255 x92) (>= x5248 0) (<= x4399 255) (>= x1750 0) (<= 0 x5717) (= x1684 (x3516 (x2264 x7091))) (>= x512 0) (>= x3782 0) (<= 0 x1358) (>= x3989 0) (>= x3747 0) (<= 0 x1858) (> 256 x8253) (= x7387 (not (= x8253 0))) (= x3703 (x4070 288)) (>= 255 x2999) (not (= x3605 x5827)) (= (x5244 x7102) x1358) (>= x5816 0) x5987 (<= x4128 1461501637330902918203684832716283019655932542975) (not (= x7091 x799)) (>= 1461501637330902918203684832716283019655932542975 x3984) (>= 1461501637330902918203684832716283019655932542975 x2053) (not (= x4668 x7347)) (= x6081 (x5621 x7102)) (= (x3516 (x2264 x799)) x3131) (not (= x799 x3605)) (>= x6081 0) (not (= x5827 x1326)) (= x6473 x3712) (= (x7699 x7102) x5999) (not (= x7036 x7347)) (= x5761 x7748) (<= 0 x2755) (<= 0 x3712) (<= x3594 18446744073709551615) (<= 0 x3714) (not (= x7036 x5148)) (>= 1461501637330902918203684832716283019655932542975 x9068) x4390 (<= x8221 255) (> x7347 0) (not (= x1326 x5148)) (>= x8758 0) (<= x5273 18446744073709551615) (>= 255 x2801) (>= x367 0) (<= x3714 18446744073709551615) (= (x4070 192) x2535) (= (x3516 (x2264 x7036)) x2440) (not (= x3605 x4668)) (> 256 x4399) (not (= x7036 x5827)) (<= 0 x7334) (not (= x4668 x5827)) (<= 0 x6294) (not (= x7036 x7091)) (not (= x7036 x3605)) (not (= x1326 x7036)) (<= x6081 255) (not (= x7091 x5827)) (not (= x7036 x799)) (= x2738 (x1645 x7102)) (= x7086 (x4070 128)) (>= 1461501637330902918203684832716283019655932542975 x1314) (not (= x3605 x7091)) (<= x367 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1326) (<= x489 1461501637330902918203684832716283019655932542975) (>= x5670 0) (<= x3605 1461501637330902918203684832716283019655932542975) (<= 0 x2866) (>= x3705 0) (>= 18446744073709551615 x8834) x9139 (= (x3516 (x2264 x7347)) x3782) (<= 0 x1322) (not (= x7036 x4668)) (>= 1461501637330902918203684832716283019655932542975 x7347) (<= 0 x8834) (>= 255 x2866) (not (= x4668 x1326)) (<= 0 x4852) (>= 255 x7334) (>= 1461501637330902918203684832716283019655932542975 x5717) (>= 1461501637330902918203684832716283019655932542975 x7036) (>= 255 x3649) (<= 0 x8136) (not (< x2266 2678788150)) (= x7334 (x8216 x7102)) (> 256 x5999) (not (= x7347 x799)) (> 256 x7334) (= x7580 (x6844 (x2264 x7036))) (< 0 x799) (>= 255 x1858) (<= 0 x6507) x4675 (<= 0 x2440) (= x8004 (not (= x4399 0)))) (and (and (= x5716 x5416) (= (x5783 (x2264 x3644) x4210 0) x2856) (= x1770 x3866) (= (not (= x6278 0)) x6122) (= (x5783 (x2264 x4943) (x6664 160) 0) x4210) (= (not x1770) x8551) (= x9002 (not (= x7180 0))) (not (= 1901074598 x8320)) (not (= x8320 1608758631)) (= (not (= x4526 0)) x8243) (>= 1461501637330902918203684832716283019655932542975 x4943) (>= x4644 0) (< x8320 2678788150) (= x5303 x2182) (= x8929 (ite x3888 1 0)) (= x9002 x8355) (< x8320 2023533118) (not (= 1779720228 x8320)) (<= x3644 1461501637330902918203684832716283019655932542975) (= x2182 (not (= x2971 0))) (= x4943 x5670) (= (x6844 (x2264 x7036)) x4935) (= x8243 x7959) (> 256 x4644) (= (not (= x7086 0)) x8367) (= x7669 (= x4644 0)) (not (= x8320 1523576871)) (= x2626 x36) (<= x4644 255) (not (< x8320 1523576871)) (> x4935 0) (= x2626 x6122) (= x1105 (not (= 0 x4971))) (= (not (= 0 x2535)) x5716) (= x3888 (not x7669)) (= x4447 x1105) (= x3644 x2053) (= x3866 x8367) (= x8320 1913449218) (= x5741 x6510) (= (or x8551 x36) x4995) (= (x6016 x2856) x4644) (= x6510 (not (= 0 x3703)))) (and (= x2053 x5713) (= x5248 x1749) (= x5405 x1749) (= x5626 x5745) (= x2303 x6484) (= x8318 (= x4243 0)) (<= 0 x6484) (= x4125 x5761) (= x5413 x7450) (= (= x3602 0) x559) (>= 1461501637330902918203684832716283019655932542975 x2894) x9152 (<= 0 x4125) (= x8180 x5713) (= x5670 x5868) (= x4567 (not (= 0 x8929))) (= x560 x8180) (>= 1461501637330902918203684832716283019655932542975 x4125) (= (or x3082 x559) x9152) (> x4614 0) (= x4614 (x6844 (x2264 x7036))) (= 0 x2700) (= x7298 x5413) (= x5626 x2179) (= (or x4995 x2779) x3082) (= x6675 x4567) (= x2779 (not x6675)) (= x2303 x1381) (>= 1461501637330902918203684832716283019655932542975 x6484) (= x3713 x2179) (= x9072 x7450) (<= 0 x2894) (= x3881 x5868) (= x3602 x7298)))) (and (=> (and (and (not (= x3428 3069361948)) (not (< x3428 2678788150)) (= x3428 3266287495) (= x1091 (= x5868 x3881)) (not (= 2991318663 x3428)) (= x6832 x3881) (not (> 2991318663 x3428)) (not (= 3047081080 x3428)) (> 3583811254 x3428)) x8318) (and (=> (and (and (= (x6748 1461501637330902918203684832716283019655932542975 x1749) x1571) (= x3582 (= x1571 x1749)) (= x5405 x592)) x1091) (and (=> (and x3582 (and (= (= x8180 x560) x1084) (= x560 x7099))) (and (=> (and (and (= x1687 x9072) (= x3713 x5652) (= x1563 (= x7450 0))) x1084) (and (=> x1563 x8633) (=> (and (not x1563) (and (< x8812 256) (> 256 x1241) (= (x8216 x4448) x1544) (= (= x1551 0) x4629) (= x79 (not x6086)) (= (= 0 x3339) x5981) (= (= 0 x2340) x6659) (<= x3920 255) (= (not x5981) x5469) (= x2823 (= 0 x1544)) (= x7373 (= x1241 0)) (>= x1544 0) (>= 255 x1551) (<= 0 x3920) (= x1277 (x811 x4448)) (= (x5783 (x2264 x3881) (x6664 168) 0) x4448) (= (x5244 x4448) x1551) (<= x3339 255) (= x533 (not x4629)) (>= x2340 0) (= x4886 x8531) (<= 0 x1277) (> 256 x2340) (= x6053 x79) (>= 255 x8812) (= x5996 (not x2823)) (= x8172 (< 0 x3591)) (<= x1241 255) (= (= 0 x1277) x8127) (>= 255 x1544) (= x2340 (x5621 x4448)) (<= x2340 255) (> 256 x1277) (< x3920 256) (<= 0 x1551) (= x3182 x533) (= x6086 (= x8812 0)) (= x6454 x622) (= x2620 (not x6659)) (= x1241 (x7699 x4448)) (= (x2616 x4448) x8812) (<= 0 x3339) (= x2134 (= x3920 0)) (> 256 x1544) (= x6454 (not x2134)) (= x6892 x3743) (> 256 x1551) (= x2620 x8570) (= x2281 x5469) (= (not x8127) x6892) (= (x6778 128) x3591) (= x5996 x1519) (= (x1645 x4448) x3339) (= x3920 (x4212 x4448)) (<= 0 x1241) (<= x1277 255) (< x3339 256) (<= 0 x8812) (= x8531 (not x7373)))) (and (=> (not x8172) x8633) (=> (and x8172 (and (= x2371 (= 0 x950)) (= x950 (x6778 256)))) (and (=> (and (and (<= x2416 255) (= (x5783 (x2264 x3881) (x6664 160) 0) x70) (= x4496 (> x2416 0)) (>= x2416 0) (> 256 x2416) (= x2416 (x6016 x4163)) (= (x5783 (x2264 x560) x70 0) x4163)) x2371) (and (=> (and x4496 (and (or (and (and (not (= 2691771752 x7789)) (<= 0 x2207) (= (x6844 (x2264 x5148)) x2763) (= x5119 4) (= x7789 2858086653) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2207) (not (= 2835717307 x7789)) (not (< x5119 4)) (= 32 x758) (= 1 x1728) (< 0 x2763) (= 4 x5119) (not (> 2691771752 x7789)) (= x6334 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (= x7789 2796547477)) (not (> 2217467699 x7789)) (> 2929553584 x7789)) x3391) (and (and (= (= x3881 x3605) x7430) (or (and (and (and (and (> 2929553584 x1841) (>= x8388 0) (not (= x1841 2835717307)) (not (> 2691771752 x1841)) (not (> 2217467699 x1841)) (= 4 x7504) (< 0 x6047) (= 2858086653 x1841) (= x7504 4) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8388) (not (= x1841 2796547477)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x5446) (= 1 x1728) (= 32 x758) (not (< x7504 4)) (= x6047 (x6844 (x2264 x1326))) (not (= x1841 2691771752))) x3383) (= (= x3881 x1326) x3383)) (not x7430)) (and (and (not (< x9062 2217467699)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x4170) (= x1728 1) (> x7514 0) (< x9062 2929553584) (not (= x9062 2691771752)) (= (x6844 (x2264 x3605)) x7514) (not (> 2691771752 x9062)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8295) (= 4 x1964) (not (= x9062 2796547477)) (= 2858086653 x9062) (not (> 4 x1964)) (>= x8295 0) (= x1964 4) (= 32 x758) (not (= 2835717307 x9062))) x7430))) (not x3391))) (and (= 516 x4797) (>= x8900 0) (= x4857 (x4000 x2522 1)) (<= x8900 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3391 (= x5148 x3881)) (= (x6748 26959946667150639794667015087019630673637144422540572481103610249215 x6010) x39) (= (x5847 x4857) x6764) (= (x910 (+ x39 24044834009420335638544845215851342251227478490780828673611325350056707489792)) x8322) (>= x6764 0) (= x6010 (x8855 416)) (= (x6168 x2522) x8900) (= x7657 (x5783 (x2264 x3881) (x6664 159) 0)) (<= x6764 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x560) x7657 0) x2522)))) x1412) (=> (not x4496) x8633))) (=> (not x2371) x8633))))))) (=> (and (not x1084) (= true x6661)) x6209))) (=> (and (= x6661 true) (not x3582)) x6209))) (=> (and (= true x6661) (not x1091)) x6209))) (=> (and (not x8318) (= true x6661)) x6209)))))
(assert (x9173 x7292))
(assert (= (and x4377 (not x2683)) x4304))
(assert (= (and x7237 x3228) x1827))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x3373 (x6664 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= (and (not x4944) x9087) x5409))
(assert (= 178855970 (x3373 (x6664 178855970))))
(assert (= (or x3235 x4414 x3550 x2765) x4894))
(assert (x9173 x9170))
(assert (=> (<= x6404 10000) (= (x2264 x6404) (x6664 x6404))))
(assert (= (and x1066 x2300) x2704))
(assert (= (x3373 (x2264 x6634)) x6634))
(assert (= (+ 1 (x3373 x8585)) (x3373 (x4000 x8585 1))))
(assert (= (or x8850 x4118) x5217))
(assert (x9173 x6746))
(assert (x9173 x2357))
(assert (x9173 x4129))
(assert (= (+ (x3373 x1839) 1) (x3373 (x4000 x1839 1))))
(assert (= x2682 (or x8175 x7170)))
(assert (x9173 x2269))
(assert (= (and (not x4514) x7478) x1969))
(assert (= (and x7280 (not x2365)) x4311))
(assert (= x3502 (and x3050 (not x2268))))
(assert (= (=> (and (= x193 x4024) (= (x4000 x8582 1) x8666) (= (x4000 x8968 1) x8582) (= x8968 (x5783 (x2264 x560) x2069 0)) (= x7010 x560)) x7992) x4175))
(assert (=> (>= 10000 x8153) (= (x2264 x8153) (x6664 x8153))))
(assert (= (+ (x3373 x7513) 1) (x3373 (x4000 x7513 1))))
(assert (x9173 x5743))
(assert (x9173 x6362))
(assert (= (and x1613 (not x5649)) x1642))
(assert (= (x6664 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x2264 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (= (=> (and (= x2349 x3704) (= x577 x284)) x1829) x1509))
(assert (= (or x551 x6447 x6857) x1288))
(assert (x9173 x6627))
(assert (= x5437 (and x2301 x1161)))
(assert (x9173 x6269))
(assert (x9173 x6234))
(assert (= (x3373 (x2264 x3532)) x3532))
(assert (x5765 x34))
(assert (= (and (not x5359) x5278) x7237))
(assert (=> (<= x7673 10000) (= (x6664 x7673) (x2264 x7673))))
(assert (= (+ 1 (x3373 x6007)) (x3373 (x4000 x6007 1))))
(assert (= (and x8923 x8920) x6555))
(assert (x9173 x911))
(assert (= x909 (and x8853 x5194)))
(assert (x9173 x2496))
(assert (= (and (not x3393) x6720) x1934))
(assert (= x6442 (or x5283 x705)))
(assert (x9173 x2349))
(assert (= (and (not x7511) x7133) x3540))
(assert (x9173 x6939))
(assert (x9173 x6982))
(assert (x9173 x7375))
(assert (= x7938 (and x5755 x1506)))
(assert (x9173 x5109))
(assert (x9173 x6796))
(assert (x9173 x4093))
(assert (= x7472 (=> (and (= x8208 (x4000 x6556 1)) (= x8441 (x4000 x8208 1)) (= x6556 (x5783 (x2264 x2254) x1078 0))) x4213)))
(assert (x9173 x8102))
(assert (x5765 x4943))
(assert (=> (<= x6622 10000) (= (x2264 x6622) (x6664 x6622))))
(assert (x9173 x2056))
(assert (x9173 x6120))
(assert (= x5888 (x3373 (x2264 x5888))))
(assert (= x8049 (=> (= (= x5986 0) x6181) (and (=> (and (= x4187 x5309) x6181) x3952) (=> (and (= (or (and (< x3249 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3249) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3249)) x6479) (not x6181)) (and (=> (and (= x5309 x4187) x6479) x3952) (=> (and (and (= x8598 1) (= x1957 32) (= x4187 x7874)) (not x6479)) x6383)))))))
(assert (x9173 x8391))
(assert (x9173 x8521))
(assert (x2631 x1510))
(assert (= (or x4380 x4031 x4211 x5793 x7034 x1725) x359))
(assert (x9173 x4278))
(assert (x9173 x5410))
(assert (x9173 x6034))
(assert (= x932 (and x1875 x6274)))
(assert (= (x3373 (x4000 x2006 1)) (+ (x3373 x2006) 1)))
(assert (x9173 x4260))
(assert (x9173 x497))
(assert (x9173 x5083))
(assert (= x6527 (or x5596 x6713)))
(assert (= x9193 (and x599 x2408)))
(assert (= (or x801 (and (not x2989) x5327)) x7408))
(assert (x5765 x4657))
(assert (x5765 x8210))
(assert (= x8416 (and (not x9235) x5169)))
(assert (= x976 (and x1828 x5005)))
(assert (= (and (not x4347) x63) x1665))
(assert (= x5836 (=> (and (= x1828 (= 0 x2606)) (or (and (and (= x4701 (x4000 x5565 1)) (= x3496 (x5783 (x2264 x3881) (x6664 159) 0)) (= (ite x2816 1 0) x8795) (= (x3769 x4701) x6307) (= (x5783 (x2264 x560) x3496 0) x5565) (<= 0 x6307) (<= x6307 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x6307) x2816)) (not x1828)) (and (= x8795 x2606) x1828))) x2344)))
(assert (= x2328 (and x975 x8813)))
(assert (= x4014 (or x627 x9186)))
(assert (= x1644 (and x4848 x5997)))
(assert (x9173 x4591))
(assert (= (and x4446 (not x263)) x4729))
(assert (x9173 x6374))
(assert (x5765 x8593))
(assert (= x2976 (=> (and (= x6523 x4008) (= x6300 x7466) (= x2562 x1723) (= x3552 x4010)) x6381)))
(assert (= x4282 (and (not x6199) x1898)))
(assert (x9173 x7649))
(assert (= (+ 2 (x3373 x2329)) (x3373 (x4000 x2329 2))))
(assert (= (or x8444 x4571) x4926))
(assert (x9173 x3694))
(assert (= x8936 (and (not x2098) x7024)))
(assert (x9173 x7801))
(assert (= (and x654 x8118) x6243))
(assert (x9173 x9127))
(assert (x9173 x2289))
(assert (x9173 x6470))
(assert (x2631 x7386))
(assert (=> (<= x2929 10000) (= (x2264 x2929) (x6664 x2929))))
(assert (x9173 x1489))
(assert (x9173 x3413))
(assert (= (and x1030 (not x2008)) x8577))
(assert (= x1916 (or (and x991 x1012) (and (not x6101) x7883) x5421 x2478 (and (not x531) x8874) (and x2621 x4287))))
(assert (= (=> (and (= (= x9232 0) x4437) (or (and (= x4405 (x5783 (x2264 x9232) x783 0)) (not x4437)) (and x4437 (= (x4000 x783 2) x567)))) x2564) x5483))
(assert (x9173 x1292))
(assert (= x7560 (and x6474 x2597)))
(assert (= x1365 (or x2097 x7040 x6780 x1181)))
(assert (x9173 x6167))
(assert (= x1908 (x3373 (x2264 x1908))))
(assert (x9173 x8629))
(assert (= (and (not x1650) x3699) x876))
(assert (x9173 x861))
(assert (= (and x5044 (not x2848)) x4945))
(assert (= (and x3831 (not x204)) x7214))
(assert (= (x3373 (x4000 x6131 1)) (+ 1 (x3373 x6131))))
(assert (x9173 x918))
(assert (= x1480 (and x7781 x2027)))
(assert (= x1958 (and (not x6822) x6803)))
(assert (x9173 x1696))
(assert (x9173 x7010))
(assert (x9173 x8430))
(assert (x9173 x2171))
(assert (= (or x7105 x6067 x6139 x6109 x8466 x8721 x5404 x8542 x4482) x7845))
(assert (= (and x3978 x3000) x7024))
(assert (= x7063 (and x3091 (not x65))))
(assert (= (+ (x3373 x66) 3) (x3373 (x4000 x66 3))))
(assert (=> (<= x6298 10000) (= (x2264 x6298) (x6664 x6298))))
(assert (x9173 x4632))
(assert (= x6886 (=> (= x2715 (> x2044 x2240)) (and (=> (and (and (= x2627 x1589) (= x3878 x1451) (= (x2563 (- x2240 x2044)) x1716) (= x2376 x1716) (= x7027 x3223)) (not x2715)) x1970) (=> x2715 x3931)))))
(assert (= (and x5785 x2754) x2791))
(assert (= (and (not x8885) x6812) x103))
(assert (x9173 x2473))
(assert (= (and (not x9213) x8756) x1950))
(assert (= x787 (=> (and (= x2349 x7531) (= x6396 x577)) x1829)))
(assert (x9173 x2261))
(assert (= x548 (=> (and (= 0 x6291) (= x6505 x4577)) x633)))
(assert (x9173 x7259))
(assert (=> (<= x3725 10000) (= (x6664 x3725) (x2264 x3725))))
(assert (x9173 x8228))
(assert (x9173 x6866))
(assert (= (x3373 (x4000 x8697 1)) (+ 1 (x3373 x8697))))
(assert (= (x3373 (x4000 x7406 1)) (+ 1 (x3373 x7406))))
(assert (x9173 x4228))
(assert (x9173 x8863))
(assert (= (=> (and (= 0 x3890) (= x7965 x8287)) x1763) x2382))
(assert (x5765 x2639))
(assert (x9173 x8135))
(assert (= x4640 (or x1074 x5950)))
(assert (= x4232 (and (not x3936) x7829)))
(assert (x9173 x4121))
(assert (x9173 x5819))
(assert (x9173 x2228))
(assert (x9173 x3065))
(assert (= (and (=> (and (and (= x702 (= x2697 0)) (= x2697 (x4409 x233)) (= (x6748 x6911 x4611) x2048) (= x1605 (= x2048 0)) (= x8914 (x5783 (x2264 x3881) (x6664 159) 0)) (= (x4000 x68 1) x233) (= x68 (x5783 (x2264 x2254) x8914 0)) (<= x2697 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4611 (ite (> x312 x8319) 1 0)) (= x8319 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2697)) (= x6911 (ite (not x702) 1 0)) (>= x2697 0)) x6174) (and (=> (not x1605) x2718) (=> (and (and (= x6339 (div x4754 1000000000000000000)) (= x5975 (> x6718 x1511)) (= x4754 (mod (* x312 x2697) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1605) (and (=> x5975 x8472) (=> (and (and (= (< x2716 x6339) x1875) (= (x2563 (- x1511 x6718)) x2716)) (not x5975)) (and (=> (and x1875 (and (= x2925 (= 0 (ite x8275 1 0))) (= (< 115792089237316195423570985008687907853269984665640564039457 x2716) x8275))) (and (=> (and x2925 (and (= (= x6630 0) x1240) (= x6387 (mod (* 1000000000000000000 x2716) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6387) x3946) (= x7875 (ite (> 1000000000000000000 x3946) 1 0)) (= (= 0 x6387) x3467) (= x6630 (x6748 x8226 x7875)) (= (ite (not x3467) 1 0) x8226))) (and (=> (not x1240) x670) (=> (and x1240 (and (= (mod (* x6387 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1853) (= (< 0 x312) x4323))) (and (=> (not x4323) x7412) (=> (and (and (= (div x6511 1000000000000000000) x5452) (= (div x1853 x312) x6511) (<= 0 x8119) (= x1664 (< x8119 x5452)) (= x8119 (x4409 x233)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8119)) x4323) (and (=> (and (not x1664) (and (= (= (ite x1711 1 0) 0) x7783) (= (< 115792089237316195423570985008687907853269984665640564039457 x2716) x1711) (= x8102 (x2563 (- x8119 x5452))))) (and (=> (not x7783) x7146) (=> (and x7783 (and (= x6952 (x6748 x8256 x2472)) (= x8273 (= 0 x4251)) (= x4251 (mod (* 1000000000000000000 x2716) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (not x8273) 1 0) x8256) (= (= x6952 0) x8027) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4251) x333) (= (ite (> 1000000000000000000 x333) 1 0) x2472))) (and (=> (not x8027) x4415) (=> (and x8027 (and (= x5693 (mod (* x4251 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x7415 (< 0 x1742)))) (and (=> (and x7415 (and (>= x6391 0) (= (div x5693 x1742) x4582) (= x6391 (x8212 x68)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6391) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6674)) x596) (= (div x4582 1000000000000000000) x6674) (= (< x596 x6391) x176))) (and (=> (and (and (= (x910 (+ x6674 x6391)) x1570) (= x8102 x865) (= x1570 x5301)) (not x176)) x9165) (=> x176 x9200))) (=> (not x7415) x7950))))))) (=> x1664 x5942))))))) (=> (not x2925) x7465))) (=> (and (not x1875) (and (= x89 (< 115792089237316195423570985008687907853269984665640564039457 x6339)) (= (= 0 (ite x89 1 0)) x1530))) (and (=> (and x1530 (and (= (ite (> 1000000000000000000 x7801) 1 0) x6385) (= (= 0 x3159) x7311) (= (= x1360 0) x7998) (= x3159 (x6748 x2722 x6385)) (= x1360 (mod (* x6339 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x7801 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1360)) (= (ite (not x7998) 1 0) x2722))) (and (=> (and (and (= x1899 (mod (* x1360 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x5285 (< 0 x1742))) x7311) (and (=> (and x5285 (and (= x7652 (div x1899 x1742)) (= x5602 (div x7652 1000000000000000000)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5602)) x5815) (<= x2991 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2705 (> x2991 x5815)) (>= x2991 0) (= x2991 (x8212 x68)))) (and (=> x2705 x1408) (=> (and (not x2705) (and (= (> x6718 x1039) x634) (= (x910 (+ x5602 x2991)) x2392) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6339)) x1039))) (and (=> x634 x1006) (=> (and (and (= x865 0) (= x5301 x2392)) (not x634)) x9165))))) (=> (not x5285) x4305))) (=> (not x7311) x8358))) (=> (not x1530) x704))))))))) (=> (and (not x6174) (and (= x3878 x9171) (= x6718 x3223) (= x2627 x8891))) x6886)) x401))
(assert (x9173 x1511))
(assert (x9173 x1568))
(assert (x9173 x2286))
(assert (x9173 x5512))
(assert (x9173 x1514))
(assert (= x6610 (and x6091 (not x2436))))
(assert (= (and x6661 x5052) x3396))
(assert (= (and x9142 (not x7918)) x3187))
(assert (x9173 x137))
(assert (x2631 x759))
(assert (x9173 x7391))
(assert (= x6019 (and x4015 x1791)))
(assert (= (and (not x7402) x484) x4512))
(assert (x9173 x7027))
(assert (x2631 x1646))
(assert (x9173 x5088))
(assert (x9173 x5425))
(assert (x9173 x7360))
(assert (x9173 x8508))
(assert (x5699 x3969 x2635))
(assert (x2631 x4611))
(assert (= (and x8223 x6452) x5750))
(assert (x9173 x7429))
(assert (= x6476 (and x4581 x6068)))
(assert (x9173 x7571))
(assert (x5765 x5375))
(assert (x9173 x2829))
(assert (x9173 x2240))
(assert (x9173 x7454))
(assert (x9173 x4588))
(assert (x9173 x5822))
(assert (x5765 x2652))
(assert (= x5071 (or x1008 x6882)))
(assert (x9173 x7856))
(assert (= (x3373 (x4000 x5630 1)) (+ 1 (x3373 x5630))))
(assert (x9173 x6261))
(assert (x9173 x7842))
(assert (= (x3373 (x2264 x3325)) x3325))
(assert (= x8423 (x3373 (x2264 x8423))))
(assert (x5765 x6673))
(assert (x9173 x664))
(assert (= x5074 (and (not x6228) x356)))
(assert (= (x6664 1038142104) (x2264 1038142104)))
(assert (x9173 x8669))
(assert (= (x3373 (x4000 x8877 2)) (+ 2 (x3373 x8877))))
(assert (= x6979 (and x4446 x263)))
(assert (x9173 x7185))
(assert (x9173 x2555))
(assert (x2631 x6911))
(assert (x9173 x5939))
(assert (= x1719 (and x4685 (not x9132))))
(assert (= (=> (and (or (and (= x8509 (x4000 x1404 2)) x7053) (and (not x7053) (= x4869 (x5783 (x2264 x2921) x1404 0)))) (= (= 0 x2921) x7053)) x6376) x4981))
(assert (= (and (not x7361) x1847) x608))
(assert (x2631 x2184))
(assert (x9173 x16))
(assert (= x2888 (and x5849 (not x3517))))
(assert (x9173 x5855))
(assert (= x349 (and x8073 x5509)))
(assert (x9173 x9119))
(assert (x9173 x2911))
(assert (= x994 (or x2328 x5286)))
(assert (x9173 x161))
(assert (= x162 (and x2149 (not x5880))))
(assert (x5765 x2699))
(assert (= (and x5612 (not x2306)) x4320))
(assert (x9173 x2316))
(assert (= x7481 (and x5306 (not x8601))))
(assert (x9173 x3346))
(assert (x5699 x5909 x2918))
(assert (x9173 x1434))
(assert (=> (>= 10000 x6266) (= (x2264 x6266) (x6664 x6266))))
(assert (x9173 x7086))
(assert (x9173 x5758))
(assert (= x6726 (and x412 x2890)))
(assert (= (and x1613 x5649) x1697))
(assert (x9173 x1318))
(assert (= (or x9012 x1305) x2361))
(assert (= (=> (and (= x8649 x1282) (= x4890 x6319)) x7671) x7475))
(assert (x5765 x6993))
(assert (= x5778 (=> (and (= x1800 x6680) (= x156 x353)) x6670)))
(assert (= (=> (and (= (ite (< x4209 x1) (not (= 0 x5939)) (< x4209 x1)) x6854) (or (and (and (and (>= x6837 0) (> 1461501637330902918203684832716283019655932542976 x6837) (= x3447 (< 0 x4952)) (= x6837 (x6617 x298)) (<= x6837 1461501637330902918203684832716283019655932542975) (= (x2563 (- x5939 x6837)) x4952)) (or (and (and (= x4925 (x5783 (x2264 x5939) x1078 0)) (<= x2068 1461501637330902918203684832716283019655932542975) (<= 0 x2068) (= x2068 (x1155 x4925)) (< x2068 1461501637330902918203684832716283019655932542976)) x3447) (not x3447))) x6854) (and (not x6854) (and (and (<= x2096 1461501637330902918203684832716283019655932542975) (= (x6617 x298) x2096) (>= x2096 0) (= (= 0 x2096) x350) (> 1461501637330902918203684832716283019655932542976 x2096)) (or (and (not x350) (and (<= 0 x4222) (>= 1461501637330902918203684832716283019655932542975 x4222) (> 1461501637330902918203684832716283019655932542976 x4222) (= (x2808 x1971) x4222) (= (x4000 x298 1) x1971))) x350))))) x6682) x7625))
(assert (= (and x1818 (not x1023)) x6013))
(assert (x9173 x934))
(assert (= (and x7282 (not x7275)) x7476))
(assert (x2631 x5039))
(assert (x9173 x8840))
(assert (x9173 x3759))
(assert (= (and x1953 x3904) x6882))
(assert (= x4510 (and x7129 x5506)))
(assert (= x8516 (and (not x4489) x7619)))
(assert (= x7437 (and (not x3911) x4746)))
(assert (x9173 x5824))
(assert (= (+ (x3373 x6579) 1) (x3373 (x4000 x6579 1))))
(assert (x2631 x2420))
(assert (x9173 x1385))
(assert (= (and (not x6359) x3208) x824))
(assert (x9173 x3141))
(assert (x9173 x2476))
(assert (= (and (not x2574) x2370) x6590))
(assert (= (=> (and (= (= 0 x1908) x599) (or (and x599 (= x4834 (x4000 x3119 2))) (and (not x599) (= x5682 (x5783 (x2264 x1908) x3119 0))))) x2272) x343))
(assert (x9173 x7394))
(assert (x9173 x489))
(assert (= x1529 (or x2951 x7960)))
(assert (x9173 x4144))
(assert (x9173 x8110))
(assert (x5765 x6059))
(assert (x9173 x6790))
(assert (x9173 x6364))
(assert (= (and x3939 x8205) x6729))
(assert (= (and x7050 x4052) x4484))
(assert (= (and (not x322) x3320) x7405))
(assert (x9173 x7327))
(assert (= x174 (or x4835 x7477)))
(assert (= x6274 (and x370 (not x5975))))
(assert (= x2516 (and (not x2507) x9114)))
(assert (= (and x2876 x6314) x8385))
(assert (= (x2264 26959946667150639794667015087019630673637144422540572481103610249215) (x6664 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x9173 x8276))
(assert (= (=> (and (= x5536 x7645) (= x3479 0)) x2174) x3331))
(assert (= (=> (and (= x2231 x674) (= x7728 x1939)) x1060) x8289))
(assert (x9173 x8717))
(assert (= x1923 (and x6292 x5101)))
(assert (= (and x3779 x2372) x2597))
(assert (x9173 x7758))
(assert (= x1205 (and x5052 (not x6661))))
(assert (x9173 x3122))
(assert (x9173 x647))
(assert (= (x3373 (x2264 x6906)) x6906))
(assert (x9173 x6837))
(assert (x9173 x4087))
(assert (x9173 x4172))
(assert (x9173 x2068))
(assert (x9173 x1034))
(assert (= (and x4236 x1339) x231))
(assert (= x7206 (x3373 (x2264 x7206))))
(assert (x9173 x4550))
(assert (x9173 x883))
(assert (x9173 x8895))
(assert (x9173 x3221))
(assert (x9173 x807))
(assert (x9173 x5004))
(assert (x5765 x2557))
(assert (x9173 x7778))
(assert (=> (>= 10000 x7291) (= (x6664 x7291) (x2264 x7291))))
(assert (= (and x6481 (not x5543)) x3464))
(assert (x9173 x3777))
(assert (= x6472 (and (not x7423) x5481)))
(assert (x9173 x8133))
(assert (x9173 x4406))
(assert (= x8038 (and x8197 x98)))
(assert (x9173 x8584))
(assert (x9173 x1062))
(assert (= x6638 (and (not x8783) x6236)))
(assert (x9173 x6246))
(assert (x9173 x7578))
(assert (x9173 x305))
(assert (x9173 x4290))
(assert (x9173 x8160))
(assert (x9173 x3924))
(assert (x9173 x5966))
(assert (= (and x3081 (not x5513)) x2495))
(assert (x9173 x7771))
(assert (=> (>= 10000 x7206) (= (x2264 x7206) (x6664 x7206))))
(assert (= (and (not x3315) x3196) x6800))
(assert (x5699 x7424 x7054))
(assert (= (+ (x3373 x7350) 1) (x3373 (x4000 x7350 1))))
(assert (= (and (not x2287) x224) x6450))
(assert (x9173 x6628))
(assert (x9173 x426))
(assert (= (and x6896 x462) x5787))
(assert (x9173 x7646))
(assert (= (and (not x2338) x4270) x6545))
(assert (x9173 x8740))
(assert (= (x3373 (x2264 x8502)) x8502))
(assert (x9173 x1398))
(assert (x9173 x1429))
(assert (x9173 x2352))
(assert (x9173 x3730))
(assert (= x4231 (and x8112 x1950)))
(assert (= (and x2860 x3770) x4517))
(assert (= (x2264 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x6664 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (x9173 x3988))
(assert (= (and x5495 (not x2645)) x8143))
(assert (x9173 x1260))
(assert (x9173 x5382))
(assert (x9173 x2660))
(assert (x5765 x1018))
(assert (= (x3373 (x4000 x1266 1)) (+ (x3373 x1266) 1)))
(assert (= (and (not x6421) x1545) x7530))
(assert (x9173 x1390))
(assert (x9173 x3704))
(assert (x9173 x7979))
(assert (= x347 (and x4475 (not x3423))))
(assert (x9173 x477))
(assert (= x2465 (and x4729 (not x728))))
(assert (x9173 x2914))
(assert (= (and x1092 x7369) x3034))
(assert (x9173 x5610))
(assert (x9173 x696))
(assert (x9173 x7835))
(assert (=> (>= 10000 x4501) (= (x6664 x4501) (x2264 x4501))))
(assert (x9173 x673))
(assert (= (and x6735 (not x685)) x7872))
(assert (= (or x1416 x2469) x4042))
(assert (= x7813 (and x6252 (not x8935))))
(assert (= x4195 (x3373 (x2264 x4195))))
(assert (= (=> (and (= x3774 x7018) (= x829 x7850)) x8315) x5709))
(assert (x9173 x580))
(assert (= x6810 (and (not x427) x754)))
(assert (= (and x8054 x7557) x3013))
(assert (x9173 x5289))
(assert (x9173 x2015))
(assert (x9173 x7580))
(assert (= x3931 x7465))
(assert (x5765 x7544))
(assert (= x4786 (and x4 x5097)))
(assert (= (+ 1 (x3373 x2069)) (x3373 (x4000 x2069 1))))
(assert (x9173 x8332))
(assert (= x2744 (and (not x4177) x4515)))
(assert (= (x3373 (x4000 x298 1)) (+ 1 (x3373 x298))))
(assert (= x7152 (and x5853 x6340)))
(assert (= x607 (and (not x624) x7644)))
(assert (= (and x3646 x3465) x3804))
(assert (x9173 x6009))
(assert (x9173 x7965))
(assert (x9173 x4469))
(assert (x9173 x529))
(assert (x9173 x8307))
(assert (= (x3373 (x4000 x8354 1)) (+ 1 (x3373 x8354))))
(assert (= (and x6237 (not x1185)) x1681))
(assert (= (or x1760 x9092) x1123))
(assert (x9173 x9223))
(assert (= (+ (x3373 x550) 1) (x3373 (x4000 x550 1))))
(assert (x9173 x1658))
(assert (= (and (not x8953) x2847) x3692))
(assert (= x6848 (or x976 x2879)))
(assert (x9173 x295))
(assert (= x4891 (and x456 x2568)))
(assert (x9173 x7815))
(assert (x9173 x8932))
(assert (x9173 x1678))
(assert (x2631 x576))
(assert (= x3092 (or x5317 x6451 x8278 x138 x5217 x7720 x5298 x1304 x6779 x6062 x1700 x8991 x64 x3203 x1090 x6271 x2785 x8328 x3974 x7401 x7949 x8155 x8043 x3509 x8589 x2079 x1599 x5074 x4695 x5520 x5160 x1603 x3561 x4860 x8596 x7744 x1233 x667 x9113 x7867 x9079 x32 x5460 x6799 x4568 x8645 x5591 x4082 x3289 x7762 x3057)))
(assert (x5765 x4370))
(assert (x9173 x3170))
(assert (x9173 x983))
(assert (x9173 x6206))
(assert (x9173 x5607))
(assert (x9173 x3178))
(assert (= (x2264 2991318663) (x6664 2991318663)))
(assert (x9173 x3197))
(assert (x9173 x2655))
(assert (x9173 x7346))
(assert (= (and x6244 (not x2333)) x2262))
(assert (x9173 x6834))
(assert (x9173 x1899))
(assert (x9173 x1687))
(assert (= (and x1111 x3582) x4919))
(assert (x9173 x3044))
(assert (= x7362 (and x4918 x1056)))
(assert (= (or x3354 x2769) x3175))
(assert (x9173 x7546))
(assert (x9173 x4379))
(assert (= (and x4613 x8650) x3522))
(assert (= (and x107 x6521) x6368))
(assert (= (and x1719 (not x6225)) x7608))
(assert (= (x3373 (x4000 x7753 2)) (+ 2 (x3373 x7753))))
(assert (= (=> (and (= (= 0 x4940) x7042) (or x7042 (not x7042))) x6685) x8097))
(assert (= x5950 (and x4392 x2418)))
(assert (= (and x555 (not x2845)) x623))
(assert (= x8770 (and (not x5411) x1529)))
(assert (= (and x813 (not x6258)) x849))
(assert (x9173 x6622))
(assert (= (and x6276 (not x3139)) x7357))
(assert (= x6299 (and x2511 (not x1820))))
(assert (x9173 x129))
(assert (x9173 x5511))
(assert (= (and x8130 x3015) x63))
(assert (= (and (not x4922) x6477) x8457))
(assert (= (and x3206 x5569) x5548))
(assert (x9173 x6332))
(assert (x9173 x1334))
(assert (= (or x2764 x1497) x6415))
(assert (= x8745 (and (not x3276) x8693)))
(assert (= x8739 (and x2573 x6264)))
(assert (x9173 x3213))
(assert (= x2105 (and x6085 x4244)))
(assert (= x8297 (x3373 (x2264 x8297))))
(assert (x9173 x2039))
(assert (= (and x8955 (not x7587)) x546))
(assert (x9173 x9232))
(assert (= (or x5042 x6232) x722))
(assert (= (or x5927 x1868) x374))
(assert (= (+ (x3373 x2970) 1) (x3373 (x4000 x2970 1))))
(assert (= (and (not x8396) x2824) x534))
(assert (= x4330 (and x2923 x1864)))
(assert (x5765 x7916))
(assert (x9173 x380))
(assert (= x6411 (and x2004 (not x4882))))
(assert (= (and x1365 x6242) x2380))
(assert (= x535 (and x3411 x5984)))
(assert (x9173 x7126))
(assert (=> (<= x5355 10000) (= (x6664 x5355) (x2264 x5355))))
(assert (x9173 x6530))
(assert (x9173 x7435))
(assert (= (=> (and (= x311 (x5783 (x2264 x1499) x1695 0)) (= x7512 (x4000 x5620 1)) (= (x4000 x311 1) x5620)) x87) x5979))
(assert (x9173 x2831))
(assert (x9173 x7235))
(assert (x4899 x5340))
(assert (x9173 x8337))
(assert (= (and x2978 x2152) x1449))
(assert (= (x3373 (x4000 x2912 1)) (+ (x3373 x2912) 1)))
(assert (= x5596 (and x7810 x1315)))
(assert (x9173 x3417))
(assert (x9173 x9194))
(assert (= (x3373 (x2264 x6306)) x6306))
(assert (= (and x3375 x5010) x677))
(assert (x9173 x7826))
(assert (= (and x5135 x8801) x1722))
(assert (x9173 x1836))
(assert (= (and x1709 (not x6856)) x4506))
(assert (= (and (not x6416) x7380) x5348))
(assert (= (and x3333 x72) x3262))
(assert (x9173 x285))
(assert (x9173 x6077))
(assert (= x6915 (or x564 x20)))
(assert (x5765 x7776))
(assert (= x7505 x8633))
(assert (= x2557 (x3373 (x2264 x2557))))
(assert (x5765 x3850))
(assert (= (and (not x5447) x1617) x2353))
(assert (= x2934 (and x6856 x1709)))
(assert (x9173 x3005))
(assert (= x9051 (or x5759 x7957)))
(assert (x9173 x7687))
(assert (= x7862 (and x1980 x4092)))
(assert (x9173 x7679))
(assert (= x5169 (and (not x3997) x7376)))
(assert (= x4734 (x3373 (x2264 x4734))))
(assert (x9173 x1701))
(assert (= (+ 1 (x3373 x1299)) (x3373 (x4000 x1299 1))))
(assert (= (and x8199 (not x8474)) x853))
(assert (= x6384 (and x2679 x5586)))
(assert (x9173 x1810))
(assert (x9173 x2170))
(assert (= (+ 1 (x3373 x8372)) (x3373 (x4000 x8372 1))))
(assert (x9173 x7125))
(assert (= (+ (x3373 x8040) 2) (x3373 (x4000 x8040 2))))
(assert (=> (>= 10000 x3539) (= (x6664 x3539) (x2264 x3539))))
(assert (x9173 x1973))
(assert (x5765 x7206))
(assert (= (and x5941 x4904) x7852))
(assert (= x1846 (and x8158 (not x37))))
(assert (x9173 x5609))
(assert (x9173 x7668))
(assert (x9173 x1724))
(assert (= x2623 (and (not x614) x6970)))
(assert (x9173 x2491))
(assert (x9173 x8373))
(assert (x9173 x4764))
(assert (x2631 x9226))
(assert (= x7894 (x3373 (x2264 x7894))))
(assert (x9173 x786))
(assert (x9173 x6343))
(assert (x9173 x6901))
(assert (= (or (and x3824 (not x4548)) x4955) x3150))
(assert (= (and x1051 x1990) x5856))
(assert (= (and (not x5760) x15) x8072))
(assert (= (and x8117 x6175) x1730))
(assert (x9173 x7785))
(assert (= x6390 (=> (and (= x2735 0) (= x8276 x2126)) x1877)))
(assert (x9173 x125))
(assert (x9173 x3499))
(assert (= (and (not x7196) x3442) x8029))
(assert (= (=> (and (= x3479 x1800) (= x5536 x156)) x6670) x2174))
(assert (x9173 x6949))
(assert (= (or x3943 x6019 x8495 x2601 x5548 x8930 x1837 x3855 x7664) x8989))
(assert (= (and x4288 x2778) x3577))
(assert (x9173 x2767))
(assert (x9173 x3915))
(assert (x5765 x4529))
(assert (x5765 x502))
(assert (x9173 x5168))
(assert (= (=> (and (= x6374 0) (= x5123 x8967)) x2023) x3363))
(assert (= (and x5442 (not x3664)) x2219))
(assert (x5699 x2451 x2379))
(assert (= x1218 (and (not x6734) x5113)))
(assert (= x370 (and x8081 x1605)))
(assert (= x4235 (and x3711 (not x8831))))
(assert (=> (>= 10000 x5377) (= (x6664 x5377) (x2264 x5377))))
(assert (= (and (not x5266) x4962) x6275))
(assert (x9173 x4458))
(assert (= x7392 (and (=> x5901 x9006) (=> (and (and (= x2163 x7673) (= 1 x7656)) (not x5901)) x7941))))
(assert (= x5296 (=> (and (= x1010 x3634) (= x5799 0)) x3130)))
(assert (x9173 x6434))
(assert (= x7995 (and (not x690) x2018)))
(assert (x9173 x5625))
(assert (= x5267 (and x1210 (not x8733))))
(assert (= (=> (and (= 0 x4672) (= x3634 x957)) x5881) x1550))
(assert (x9173 x8574))
(assert (x9173 x8400))
(assert (x9173 x2409))
(assert (= (and x6355 (not x7232)) x2754))
(assert (x9173 x3693))
(assert (= (+ 1 (x3373 x8208)) (x3373 (x4000 x8208 1))))
(assert (= (and x4311 (not x8382)) x5853))
(assert (= (or x4155 x3632) x2147))
(assert (= x8142 (and x5880 x2149)))
(assert (= x9045 (and x5954 (not x8490))))
(assert (x9173 x5890))
(assert (x9173 x5833))
(assert (= (and (not x8813) x975) x1161))
(assert (x9173 x774))
(assert (= x3334 (and x6199 x1898)))
(assert (x9173 x8070))
(assert (x9173 x9175))
(assert (= x7011 (and x676 (not x4881))))
(assert (x9173 x3733))
(assert (x9173 x4039))
(assert (= x9087 (or x7833 x5318)))
(assert (= x191 (and (not x5403) x5430)))
(assert (= (and x5366 x433) x3955))
(assert (= (x3373 (x2264 x1215)) x1215))
(assert (x9173 x7958))
(assert (= (x3373 (x4000 x6400 1)) (+ (x3373 x6400) 1)))
(assert (= x734 (and x5655 x2258)))
(assert (= (=> (and (= x5920 (x5783 (x2264 x560) (x6664 161) 0)) (= (< 0 x1960) x630) (= x1960 (x650 x5920))) (and (=> (and x630 (= x4738 (x2563 (- x1960 1)))) x414) (=> (not x630) x1963))) x197))
(assert (= x7147 (and x3120 x4320)))
(assert (= (and x2516 (not x8562)) x4702))
(assert (x9173 x1589))
(assert (= x4482 (and x6822 x6803)))
(assert (x9173 x3922))
(assert (x9173 x9072))
(assert (= (x3373 (x4000 x7825 1)) (+ 1 (x3373 x7825))))
(assert (= (and x2347 (not x5812)) x8021))
(assert (x9173 x873))
(assert (= (and x623 (not x7575)) x7486))
(assert (= x8633 x4745))
(assert (x9173 x799))
(assert (x9173 x6543))
(assert (= x6893 (and x3932 x6045)))
(assert (x9173 x2256))
(assert (x9173 x5929))
(assert (x9173 x928))
(assert (x9173 x1578))
(assert (x5765 x8503))
(assert (= (and x6646 (not x7124)) x681))
(assert (= (and x4255 x8580) x8886))
(assert (x9173 x7386))
(assert (= x1586 (and x1099 x8844)))
(assert (x9173 x4742))
(assert (= (or x5348 x192 x6749 x8094 x1989 x5944) x7226))
(assert (x9173 x1779))
(assert (x9173 x4986))
(assert (x9173 x5623))
(assert (= x8278 (or x7211 x4527)))
(assert (= (x3373 (x2264 x6015)) x6015))
(assert (= 989455977 (x3373 (x6664 989455977))))
(assert (= (x3373 (x4000 x2102 1)) (+ (x3373 x2102) 1)))
(assert (= x2544 (and (not x6084) x219)))
(assert (= x4248 (=> (and (= x6849 x6580) (= x134 0)) x8235)))
(assert (= x1262 (and x5385 x2835)))
(assert (= (=> (and (= x2987 x2126) (= 0 x6471)) x8714) x5216))
(assert (x9173 x5377))
(assert (x9173 x2703))
(assert (x8537 x1749))
(assert (= x9186 (and x6202 (not x8084))))
(assert (= x4658 (and (not x6257) x3230)))
(assert (x9173 x7219))
(assert (= x433 (and (not x7906) x6888)))
(assert (x9173 x9077))
(assert (=> (>= 10000 x2368) (= (x6664 x2368) (x2264 x2368))))
(assert (= (and (not x1926) x7241) x6128))
(assert (x9173 x7503))
(assert (x5765 x8644))
(assert (x9173 x3651))
(assert (x9173 x5242))
(assert (= (and (not x7768) x4453) x478))
(assert (x9173 x1045))
(assert (x9173 x7674))
(assert (x9173 x3176))
(assert (x9173 x8134))
(assert (= (+ (x3373 x2855) 1) (x3373 (x4000 x2855 1))))
(assert (= (and x8797 (not x6331)) x4743))
(assert (= x4446 (or x1267 x8708)))
(assert (= (and (not x6548) x2198) x8616))
(assert (= (=> (and (= x7690 x4890) (= x4296 x1282)) x7671) x336))
(assert (= (or x1948 x3756) x4871))
(assert (= x9093 (and x3966 x2619)))
(assert (= (and x2629 (not x7711)) x6843))
(assert (= x453 (and (not x8723) x6095)))
(assert (= x3570 (and x3393 x6720)))
(assert (= (and (not x350) x6329) x1768))
(assert (= (or x2545 x3053) x6594))
(assert (= (and (not x1207) x7416) x1227))
(assert (x9173 x8378))
(assert (x9173 x6702))
(assert (x5699 x5671 x1915))
(assert (x9173 x950))
(assert (= (=> (and (= x730 x2884) (= x4509 x2739) (= (x4000 x7406 1) x2970) (= (x4000 x2970 1) x7823) (= x7406 (x5783 (x2264 x730) x1942 0))) x5310) x8381))
(assert (x9173 x5871))
(assert (= (or x1597 x5395 x8749 x3116 x1237 x7729) x9030))
(assert (= (and (not x582) x6988) x9144))
(assert (x9173 x5397))
(assert (x5765 x31))
(assert (x9173 x5821))
(assert (= x5532 (and x9168 (not x7004))))
(assert (= (x3373 (x2264 x4374)) x4374))
(assert (x9173 x7365))
(assert (x9173 x7036))
(assert (= x1874 (and x2743 x1726)))
(assert (x5699 x4367 x5465))
(assert (x9173 x8254))
(assert (= x5805 (and (not x7803) x6043)))
(assert (x9173 x3159))
(assert (x5765 x3455))
(assert (x9173 x2468))
(assert (= (and x3470 x7449) x2429))
(assert (= (x2264 75483562) (x6664 75483562)))
(assert (= x5283 (and (not x1092) x7369)))
(assert (x9173 x1745))
(assert (= (+ 1 (x3373 x6114)) (x3373 (x4000 x6114 1))))
(assert (x9173 x1445))
(assert (x9173 x1358))
(assert (x9173 x3587))
(assert (= (or x4836 x2180 x726 x668 x2888 x5229 x6597 x3653 x6625) x1523))
(assert (x9173 x7588))
(assert (x9173 x9169))
(assert (= (=> (and (= x5410 x1528) (= x8643 x6129)) x1415) x3123))
(assert (x9173 x6863))
(assert (= (and (not x8656) x3340) x3934))
(assert (= x3326 (and x3010 x9201)))
(assert (x9173 x1396))
(assert (= x6928 (=> (and (and (<= x6920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7951 (> x8446 x6920)) (>= x6920 0)) (or (and (= x5824 0) (not x7951)) (and (= x5824 x8446) x7951))) x3251)))
(assert (x2631 x1749))
(assert (= (=> (= x8490 (= x8643 0)) (and (=> x8490 x126) (=> (and (= (or (and (< x5410 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5410))) (> x5410 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5100) (not x8490)) (and (=> x5100 x126) (=> (and (and (= x8605 1) (= x1211 32)) (not x5100)) x4676))))) x2243))
(assert (x9173 x2324))
(assert (=> (>= 10000 x3532) (= (x6664 x3532) (x2264 x3532))))
(assert (x9173 x4924))
(assert (x2631 x7585))
(assert (= (and x326 x8798) x2785))
(assert (x9173 x7432))
(assert (x9173 x4952))
(assert (x9173 x6872))
(assert (= (+ (x3373 x4176) 2) (x3373 (x4000 x4176 2))))
(assert (x9173 x974))
(assert (x9173 x3920))
(assert (x9173 x8860))
(assert (x9173 x4738))
(assert (x9173 x5839))
(assert (x9173 x5578))
(assert (x9173 x1409))
(assert (x9173 x1510))
(assert (= (x3373 (x4000 x8582 1)) (+ (x3373 x8582) 1)))
(assert (x9173 x1143))
(assert (x9173 x3945))
(assert (x9173 x6081))
(assert (= (and x4382 x1874) x5330))
(assert (x9173 x2732))
(assert (x2631 x6687))
(assert (= (x3373 (x2264 x8521)) x8521))
(assert (= x3055 (=> (and (= x6680 0) (= x353 x7645)) x5778)))
(assert (x9173 x3602))
(assert (x9173 x4776))
(assert (=> (>= 10000 x3850) (= (x2264 x3850) (x6664 x3850))))
(assert (x9173 x6687))
(assert (= (and (not x1461) x1286) x6205))
(assert (= x6903 (and (not x8205) x3939)))
(assert (= (x3373 (x2264 x5057)) x5057))
(assert (= (+ (x3373 x7538) 2) (x3373 (x4000 x7538 2))))
(assert (= (or x7530 x7244) x2442))
(assert (=> (>= 10000 x2557) (= (x2264 x2557) (x6664 x2557))))
(assert (x9173 x7093))
(assert (x9173 x8532))
(assert (x9173 x2103))
(assert (= (and x862 x6504) x7888))
(assert (= (and x4680 x6106) x4621))
(assert (x9173 x3283))
(assert (x9173 x4275))
(assert (=> (<= x2087 10000) (= (x2264 x2087) (x6664 x2087))))
(assert (= x4126 (and x5462 x747)))
(assert (x9173 x2189))
(assert (= (+ (x3373 x5767) 2) (x3373 (x4000 x5767 2))))
(assert (x9173 x1485))
(assert (x9173 x8095))
(assert (= (=> (and (= 0 x348) (= x5672 x6580)) x6991) x3687))
(assert (x9173 x444))
(assert (x9173 x73))
(assert (= (and x8199 x8474) x9079))
(assert (= (and x8478 x2959) x1769))
(assert (= x7076 (and x5002 x8550)))
(assert (x9173 x4146))
(assert (x9173 x7193))
(assert (x9173 x2139))
(assert (= (=> (and (= x5274 x3366) (= x2750 x5338)) x585) x7827))
(assert (= x5653 (and x5055 (not x5692))))
(assert (= x5896 (x3373 (x2264 x5896))))
(assert (= (and x7618 (not x3611)) x335))
(assert (= (x3373 (x2264 x8628)) x8628))
(assert (=> (<= x8502 10000) (= (x2264 x8502) (x6664 x8502))))
(assert (= 1913449218 (x3373 (x6664 1913449218))))
(assert (= (x3373 (x2264 x4396)) x4396))
(assert (x9173 x6155))
(assert (= (and x7510 x6549) x7590))
(assert (=> (>= 10000 x2964) (= (x2264 x2964) (x6664 x2964))))
(assert (= (and x3732 (not x7791)) x8698))
(assert (= (or x717 x906) x6447))
(assert (= (and x2586 x180) x3855))
(assert (= x280 (=> (= (< 0 x7765) x2961) (and (=> (and (and (= (ite (> x6097 x7765) x7765 x6097) x8860) (= (> x8860 x6097) x4605)) x2961) (and (=> x4605 x3931) (=> (and (and (= x6314 (= (ite x6453 1 0) 0)) (= x2678 (x2563 (- x6097 x8860))) (= x6453 (> x8860 115792089237316195423570985008687907853269984665640564039457))) (not x4605)) (and (=> (not x6314) x3931) (=> (and (and (= (mod (* x8860 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4717) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4717) x2170) (= x990 (ite (not x7839) 1 0)) (= (x6748 x990 x1473) x1317) (= (ite (> 1000000000000000000 x2170) 1 0) x1473) (= x2969 (= x1317 0)) (= x7839 (= 0 x4717))) x6314) (and (=> (and (and (= x4334 (mod (* x4717 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x7528 0) x8545)) x2969) (and (=> (and (and (= (x4101 x3745) x8569) (= x5694 (div x1502 1000000000000000000)) (<= 0 x8569) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8569) (= x1502 (div x4334 x7528)) (= x5848 (< x8569 x5694))) x8545) (and (=> x5848 x3931) (=> (and (not x5848) (and (= x6606 (x910 (+ x8393 32))) (<= x8575 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5277 x3745) x2680) (= x2065 x2678) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2680) (= x482 (x2563 (- x8569 x5694))) (= (x3912 x1048) x8575) (>= x8575 0) (<= 0 x2680))) x4361))) (=> (not x8545) x4551))) (=> (not x2969) x3931))))))) (=> (and (not x2961) (= x6097 x2065)) x4361)))))
(assert (= (or x1476 x5945) x6925))
(assert (=> (<= x1308 10000) (= (x2264 x1308) (x6664 x1308))))
(assert (x9173 x6921))
(assert (x9173 x7083))
(assert (= (and x2706 x4647) x954))
(assert (x9173 x8221))
(assert (= (=> (and (= x629 x3239) (= x319 x6941)) x7731) x4508))
(assert (x9173 x1584))
(assert (=> (<= x3881 10000) (= (x6664 x3881) (x2264 x3881))))
(assert (x9173 x5444))
(assert (x9173 x2515))
(assert (= x2540 (x3373 (x2264 x2540))))
(assert (= (and x2361 x605) x3310))
(assert (= (and (not x1274) x815) x7379))
(assert (x9173 x6629))
(assert (x9173 x6847))
(assert (x9173 x2183))
(assert (= x3861 (or x5025 x9022 x2613 x151 x2865 x8911)))
(assert (= x9102 (and x7696 x2519)))
(assert (x9173 x6420))
(assert (x9173 x7850))
(assert (= (x3373 (x2264 x423)) x423))
(assert (= x7202 (and x3198 (not x6526))))
(assert (x9173 x2633))
(assert (= x3035 (or x7506 x7983)))
(assert (x2631 x4367))
(assert (= (and x1729 x1123) x3458))
(assert (= x1107 (and x1654 (not x5727))))
(assert (x9173 x2649))
(assert (= x538 (=> (= (= 0 x5559) x303) (and (=> (and (and (= x7599 x364) (= x53 x5885) (= x3713 x3741) (= x7438 x3110) (= x393 x1511)) x303) x4150) (=> (and (= (= 0 x3713) x2531) (not x303)) (and (=> (and x2531 (and (= x5885 x1451) (= x7599 x1589) (= 0 x2376) (= x7027 0))) x1970) (=> (and (and (and (= x1592 (= x5148 x3881)) (= x2035 4) (= x8939 (x910 (+ 160 x5885)))) (or (and (not x1592) (and (or (and (and (= x751 x2035) (< 0 x3834) (<= x8295 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x4626 2796547477)) (= x3637 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (= 2691771752 x4626)) (= x4626 2858086653) (= x751 4) (= (x6844 (x2264 x3605)) x3834) (>= x8295 0) (= x3456 32) (< x4626 2929553584) (not (< x751 4)) (not (> 2691771752 x4626)) (not (> 2217467699 x4626)) (not (= x4626 2835717307)) (= 1 x6461)) x8550) (and (not x8550) (and (and (and (not (> 2217467699 x3046)) (= 1 x6461) (= x5769 (x6844 (x2264 x1326))) (> 2929553584 x3046) (not (= 2691771752 x3046)) (>= x8388 0) (not (= x3046 2835717307)) (not (> 4 x1678)) (<= x8388 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3456 32) (= x2035 x1678) (not (< x3046 2691771752)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x5839) (< 0 x5769) (not (= x3046 2796547477)) (= 4 x1678) (= x3046 2858086653)) x9195) (= x9195 (= x1326 x3881))))) (= x8550 (= x3605 x3881)))) (and (and (<= x2207 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x2324 2691771752)) (not (= 2835717307 x2324)) (= (x6844 (x2264 x5148)) x1390) (>= x2207 0) (not (= 2796547477 x2324)) (not (= x2324 2691771752)) (not (< x2324 2217467699)) (= 32 x3456) (= x6461 1) (> 2929553584 x2324) (< 0 x1390) (= x6323 4) (= x6323 x2035) (= 2858086653 x2324) (= x1334 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (> 4 x6323))) x1592))) (not x2531)) x5792)))))))
(assert (= (+ (x3373 x5326) 1) (x3373 (x4000 x5326 1))))
(assert (x9173 x5528))
(assert (x9173 x2420))
(assert (x8398 x4700))
(assert (x9173 x6121))
(assert (= x7280 (and x1430 x5980)))
(assert (x9173 x8178))
(assert (= (+ 1 (x3373 x3793)) (x3373 (x4000 x3793 1))))
(assert (= x4203 (and x366 x3150)))
(assert (x2631 x6921))
(assert (x9173 x4355))
(assert (x9173 x5990))
(assert (x9173 x703))
(assert (= x3208 (and x1736 x6069)))
(assert (= (and x7640 x4498) x7220))
(assert (x9173 x2590))
(assert (x9173 x3114))
(assert (x9173 x939))
(assert (= (and x1288 (not x2786)) x9115))
(assert (x9173 x3747))
(assert (x9173 x4229))
(assert (x9173 x1103))
(assert (= x5481 (and x3679 (not x6203))))
(assert (x9173 x713))
(assert (= (+ 2 (x3373 x8821)) (x3373 (x4000 x8821 2))))
(assert (= (x3373 (x4000 x988 1)) (+ (x3373 x988) 1)))
(assert (= (x3373 (x6664 1779720228)) 1779720228))
(assert (= x289 (and x7888 (not x5386))))
(assert (x9173 x3685))
(assert (= (and (not x6876) x7123) x6113))
(assert (= (=> (= (= x8165 x5009) x8580) (and (=> (and (= (> x8165 0) x445) (not x8580)) (and (=> (not x445) x4213) (=> (and (and (> 1461501637330902918203684832716283019655932542976 x6993) (= x6993 (x4292 x1734)) (= x3276 (= 0 x4920)) (= x1734 (x5783 (x2264 x2254) x1078 0)) (= (x4000 x1734 1) x2021) (= (x8870 x2021) x2335) (<= x6993 1461501637330902918203684832716283019655932542975) (<= 0 x2335) (> 1461501637330902918203684832716283019655932542976 x2335) (= x4920 (x4584 x4291)) (= (x4000 x2021 1) x4291) (<= 0 x4920) (<= x2335 1461501637330902918203684832716283019655932542975) (<= 0 x6993) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4920)) x445) (and (=> (and (not x3276) (and (= (= x6993 0) x8504) (or (and x8504 (= (x4000 x1078 1) x1893)) (and (not x8504) (and (= (x4000 x5930 1) x8496) (= x5930 (x5783 (x2264 x6993) x1078 0))))))) x5551) (=> x3276 x6392))))) (=> x8580 x3812))) x3014))
(assert (= (=> (and (or (and (not x7215) (and (>= x1466 0) (= (= 0 x1466) x7061) (= x5559 (ite x723 1 0)) (= (x212 x1171) x1466) (= x7599 x3881) (>= 1461501637330902918203684832716283019655932542975 x1466) (= x723 (not x7061)) (= x1171 (x4000 x4521 1)) (< x1466 1461501637330902918203684832716283019655932542976) (= x4521 (x5783 (x2264 x3881) (x6664 157) 0)))) (and x7215 (and (= x389 x7599) (= x5559 x1062)))) (= x7215 (= 0 x1062))) x538) x4988))
(assert (= (and x8807 x4443) x7209))
(assert (= x2298 (and x3822 x455)))
(assert (= x1455 (and (=> (and x4174 (= (< x985 x1287) x5222)) (and (=> x5222 x2717) (=> (and (not x5222) (and (= x3807 (x2563 (- x985 x1287))) (= x1082 (< x3807 x3741)))) x5749))) (=> (and (= x4174 x1082) (not x4174)) x5749))))
(assert (= (or x166 x1140 x3207 x572) x3824))
(assert (x9173 x1800))
(assert (= x4329 (x3373 (x2264 x4329))))
(assert (= x8210 (x3373 (x2264 x8210))))
(assert (x5765 x9232))
(assert (=> (>= 10000 x5072) (= (x6664 x5072) (x2264 x5072))))
(assert (x9173 x367))
(assert (= x2003 (and x895 x6148)))
(assert (= x4393 (and x5163 x4950)))
(assert (x9173 x7544))
(assert (x9173 x3298))
(assert (= (x3373 (x4000 x3900 2)) (+ 2 (x3373 x3900))))
(assert (= (x3373 (x4000 x3511 1)) (+ 1 (x3373 x3511))))
(assert (= x6283 (or x3544 x8695 x6602 x8442 x6287 x2030)))
(assert (= (and x9085 (not x3994)) x1546))
(assert (x9173 x4059))
(assert (= (or x7379 x6302) x1410))
(assert (= (or x2041 x2438) x7612))
(assert (= x7665 (and (not x6348) x842)))
(assert (= x1668 (=> (and (= x4844 0) (= x3394 x3634)) x1710)))
(assert (x9173 x4209))
(assert (= (x3373 (x4000 x2730 1)) (+ (x3373 x2730) 1)))
(assert (= x4143 (and x3382 x741)))
(assert (= (=> (= (= x7074 x2036) x3904) (and (=> (and x3904 (and (= x9171 x1020) (= x2332 x4091))) x4816) (=> (and (not x3904) (= x3472 (< 0 x2036))) (and (=> (and (and (= x8794 x2332) (= x1020 x9218)) (not x3472)) x8078) (=> (and (and (>= x9232 0) (<= x8777 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x910 (+ x1020 96)) x5668) (> 1461501637330902918203684832716283019655932542976 x9232) (= x4494 (x5949 x9036)) (= (x4000 x9036 1) x4029) (= (x202 x4038) x8777) (>= x8777 0) (= (x4000 x4029 1) x4038) (= x9232 (x8074 x4029)) (<= x9232 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x4494) (<= x4494 1461501637330902918203684832716283019655932542975) (= (= 0 x8777) x6558) (<= 0 x4494) (= (x5783 (x2264 x730) x783 0) x9036)) x3472) (and (=> x6558 x6392) (=> (and (and (or (and (and (= x8946 (x5783 (x2264 x4494) x783 0)) (= (x4000 x8946 1) x2497)) (not x7885)) (and x7885 (= x1336 (x4000 x783 1)))) (= (= x4494 0) x7885)) (not x6558)) x5483))))))) x2447))
(assert (x2631 x5671))
(assert (=> (>= 10000 x423) (= (x2264 x423) (x6664 x423))))
(assert (= (and x3626 x4476) x1813))
(assert (x9173 x2575))
(assert (= x5399 (and x6914 x415)))
(assert (x9173 x5009))
(assert (= (=> (and (= x5916 x4344) (= x7174 0)) x5046) x1781))
(assert (= x8376 (and (not x366) x3150)))
(assert (x9173 x2559))
(assert (= x4760 (and x6308 x5545)))
(assert (= (+ 1 (x3373 x195)) (x3373 (x4000 x195 1))))
(assert (=> (<= x4329 10000) (= (x2264 x4329) (x6664 x4329))))
(assert (= (x2264 988262939) (x6664 988262939)))
(assert (= (x3373 (x4000 x5400 2)) (+ 2 (x3373 x5400))))
(assert (x9173 x5526))
(assert (= (x3373 (x4000 x4422 1)) (+ (x3373 x4422) 1)))
(assert (= (and x6136 x9000) x5042))
(assert (x5765 x8631))
(assert (x9173 x7908))
(assert (= x2956 (x3373 (x2264 x2956))))
(assert (= (or (and (not x3478) x6936) (and x1275 x7568)) x6061))
(assert (x9173 x4223))
(assert (= (and x8597 x4799) x3597))
(assert (= x653 (or x5858 x60)))
(assert (x9173 x3930))
(assert (=> (>= 10000 x5237) (= (x2264 x5237) (x6664 x5237))))
(assert (x9173 x2321))
(assert (x9173 x5308))
(assert (= (and (not x2705) x9073) x2127))
(assert (x9173 x7349))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3373 (x6664 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (= (and x246 (not x1639)) x107))
(assert (= (x3373 (x4000 x4736 2)) (+ (x3373 x4736) 2)))
(assert (x5765 x4483))
(assert (x9173 x7163))
(assert (= (or x2709 x3618) x8526))
(assert (= (and x1178 x8862) x5068))
(assert (= x7181 (and x2789 (not x7848))))
(assert (x9173 x206))
(assert (= x4093 (x3373 (x2264 x4093))))
(assert (= (and x7920 (not x2393)) x9106))
(assert (= (and (not x5100) x9045) x168))
(assert (= x4716 (and x7841 (not x3838))))
(assert (x9173 x85))
(assert (x9173 x6620))
(assert (= x414 (=> (and (<= x451 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x451) (<= 0 x5307) (<= x5307 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x451 (x3769 x5175)) (= (x6537 x6456) x5307)) x8916)))
(assert (=> (>= 10000 x6343) (= (x6664 x6343) (x2264 x6343))))
(assert (x9173 x4391))
(assert (= (or x4109 x2838) x6237))
(assert (= (and x6348 x842) x6481))
(assert (x5765 x1308))
(assert (x9173 x8741))
(assert (x9173 x808))
(assert (x5765 x3051))
(assert (= x2381 (and (not x2689) x2122)))
(assert (x9173 x4474))
(assert (x9173 x6194))
(assert (= (+ 1 (x3373 x6631)) (x3373 (x4000 x6631 1))))
(assert (x9173 x8896))
(assert (x9173 x4455))
(assert (x9173 x1465))
(assert (x9173 x6736))
(assert (= x8603 (and (not x4147) x4336)))
(assert (= (and x8703 (not x9081)) x6709))
(assert (x9173 x7757))
(assert (= (and (not x1812) x4365) x3755))
(assert (= (and (=> (and (and (= x8593 x833) (= x8346 1)) (not x8780)) x6485) (=> x8780 x4135)) x2936))
(assert (= x4941 (and x2086 (not x5851))))
(assert (x9173 x510))
(assert (= (x3373 (x4000 x5099 1)) (+ (x3373 x5099) 1)))
(assert (= (and x3181 x6118) x7628))
(assert (x9173 x6826))
(assert (= (and x1912 x493) x7957))
(assert (= (and x624 x7644) x1842))
(assert (= x2773 (and x8573 (not x4136))))
(assert (x9173 x3807))
(assert (= (x3373 (x2264 x7091)) x7091))
(assert (= x126 (=> (and (= 0 x8605) (= x1211 x5353)) x4676)))
(assert (x9173 x7103))
(assert (= (+ 1 (x3373 x177)) (x3373 (x4000 x177 1))))
(assert (= x4073 (=> (and (= (= 0 x3641) x1209) (or (and (= (x4000 x1942 2) x7895) x1209) (and (= x4001 (x5783 (x2264 x3641) x1942 0)) (not x1209)))) x8381)))
(assert (= x4650 (and (not x2334) x6899)))
(assert (= x7250 (and x8632 (not x171))))
(assert (x9173 x6565))
(assert (= (and x8039 x5399) x5685))
(assert (= (=> (and (= x4344 x4360) (= 0 x2891)) x8992) x3871))
(assert (= x6395 (and x3391 x7246)))
(assert (x9173 x4017))
(assert (x9173 x2803))
(assert (x9173 x3147))
(assert (=> (<= x8297 10000) (= (x6664 x8297) (x2264 x8297))))
(assert (= (and x8947 x4035) x595))
(assert (x9173 x8520))
(assert (= (x3373 (x2264 x1527)) x1527))
(assert (x9173 x7326))
(assert (x9173 x793))
(assert (x5765 x2962))
(assert (x9173 x872))
(assert (= (x3373 (x4000 x6997 1)) (+ (x3373 x6997) 1)))
(assert (= x6327 (and (not x5321) x9101)))
(assert (x9173 x2839))
(assert (= x3104 (and x5849 x3517)))
(assert (= x7416 (and x3953 x7217)))
(assert (= x6666 (and (not x8494) x5051)))
(assert (x9173 x6339))
(assert (= (and x8665 (not x2948)) x2640))
(assert (x5765 x3060))
(assert (x9173 x2416))
(assert (= (and x4308 (not x3506)) x5945))
(assert (= x4124 (and x3484 x7713)))
(assert (x9173 x3670))
(assert (x9173 x4520))
(assert (= x8559 (or x8747 x466)))
(assert (= x2051 (or x615 x8772)))
(assert (= (=> (and (= x8794 x730) (= x4422 (x5783 (x2264 x730) x783 0)) (= x8684 (x4000 x4422 1)) (= x9218 x5668) (= (x4000 x8684 1) x683)) x8078) x2564))
(assert (= x4962 (or x6255 x2593)))
(assert (x5765 x6352))
(assert (= (and (not x1549) x4485) x9074))
(assert (= (and x2698 (not x4774)) x7705))
(assert (x5699 x8740 x873))
(assert (x9173 x7931))
(assert (= (and (not x128) x7502) x6380))
(assert (= x7553 (=> (= (> x393 x308) x5851) (and (=> (and (= x1930 x6009) (not x5851)) x5490) (=> (and x5851 (and (and (= x7564 4) (= x3626 (= x5148 x3881))) (or (and (and (= 32 x5109) (not (< x832 4)) (< 0 x1463) (= (x6844 (x2264 x5148)) x1463) (= 1 x3968) (= x832 x7564) (= 405663989 x7126) (not (< x7126 405663989)) (= x832 4) (> 2217467699 x7126) (= x986 10936679508223583803006762266923565500374401145016910147028117655998246682624) (> 988262939 x7126)) x3626) (and (and (or (and (not x8364) (and (and (and (= x1310 405663989) (> x8811 0) (< x1310 988262939) (= x7564 x6075) (= x8811 (x6844 (x2264 x1326))) (= 1 x3968) (not (> 4 x6075)) (> 2217467699 x1310) (not (> 405663989 x1310)) (= x8244 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= 32 x5109) (= x6075 4)) x75) (= (= x1326 x3881) x75))) (and (and (= 32 x5109) (not (< x244 405663989)) (< 0 x6760) (= x244 405663989) (= x3595 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= 4 x1332) (> 988262939 x244) (not (> 4 x1332)) (> 2217467699 x244) (= x3968 1) (= x1332 x7564) (= (x6844 (x2264 x3605)) x6760)) x8364)) (= x8364 (= x3881 x3605))) (not x3626))))) x3558)))))
(assert (= (and (not x684) x4164) x5584))
(assert (= (and x3273 (not x6354)) x601))
(assert (= x6738 (and (not x3731) x6904)))
(assert (x9173 x6587))
(assert (= (and x4493 x4970) x7404))
(assert (= (=> (and (or (and (not x6148) (and (= x7922 (x1222 x2503)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7922) (= x6089 (x5783 (x2264 x560) x492 0)) (<= 0 x7922) (= (= 0 x7922) x6551) (= x492 (x5783 (x2264 x3881) (x6664 159) 0)) (= x529 (ite x6551 1 0)) (= (x4000 x6089 1) x2503))) (and (= x8913 x529) x6148)) (= x6148 (= 0 x8913))) x5913) x243))
(assert (x9173 x3351))
(assert (x9173 x3339))
(assert (= x4151 (or (and x6742 x1681) (and x5390 x7581) (and x714 x3763) (and x608 x7169))))
(assert (x9173 x7891))
(assert (x9173 x1869))
(assert (x9173 x7838))
(assert (= (and x4191 x8123) x4339))
(assert (= (and (not x8112) x1950) x4989))
(assert (= (and x6422 x2292) x7540))
(assert (x9173 x3758))
(assert (= x689 (and x6615 x1661)))
(assert (x9173 x7589))
(assert (x9173 x1231))
(assert (= x1904 (or x3755 x6741)))
(assert (x2631 x6010))
(assert (= (or x4892 x4394) x8907))
(assert (= x838 (and (not x4610) x2753)))
(assert (x9173 x7666))
(assert (x4899 x3275))
(assert (= (and x2876 (not x6314)) x7892))
(assert (x9173 x8928))
(assert (= x8874 (and (not x991) x1012)))
(assert (x9173 x4798))
(assert (x9173 x8249))
(assert (x9173 x1333))
(assert (x9173 x7886))
(assert (x9173 x2680))
(assert (= (or x5899 x7336) x3746))
(assert (= (x3373 (x2264 x2087)) x2087))
(assert (= x717 (or x5336 (and x2662 x465) x1954 x9013 (and x3344 (not x3852)))))
(assert (= x3157 (and x618 x4058)))
(assert (= (and x1820 x2511) x488))
(assert (x9173 x4859))
(assert (= (=> (= (> x78 0) x378) (and (=> (not x378) x2797) (=> (and (and (<= x1 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x1499) x3997) (>= x1 0)) x378) (and (=> x3997 x1421) (=> (and (not x3997) (and (= x5263 (x4000 x5227 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7463) (= (x5783 (x2264 x1499) x9128 0) x5227) (>= x7463 0) (= (= 0 x7463) x9235) (= x7463 (x2686 x5263)))) (and (=> (not x9235) x1022) (=> (and x9235 (and (or (and (and (= x1863 (> x78 x3519)) (= x8634 (x4000 x5400 2)) (= (x5783 (x2264 x8628) x9128 0) x5400) (= x1630 (not x1863)) (= x3519 (x2686 x8634)) (<= x3519 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3519 0)) x5649) (and (not x5649) (= x1630 x5649))) (and (= x7421 (x4000 x9128 1)) (>= x8628 0) (= x8628 (x8805 x7421)) (>= 1461501637330902918203684832716283019655932542975 x8628) (= x5649 (ite (< 0 x1) (not (= x8628 0)) (< 0 x1))) (> 1461501637330902918203684832716283019655932542976 x8628)))) x4783))))))) x7622))
(assert (x9173 x6048))
(assert (= x74 (x3373 (x2264 x74))))
(assert (x9173 x6240))
(assert (x9173 x1772))
(assert (= x7779 (or x4133 x453)))
(assert (x9173 x7288))
(assert (x5765 x6164))
(assert (= (x3373 (x2264 x5200)) x5200))
(assert (= (=> (and (= x8276 x2750) (= x5274 x2735)) x585) x1877))
(assert (x9173 x7748))
(assert (= x3360 (and x2875 (not x3609))))
(assert (x9173 x2441))
(assert (= x7268 (=> (and (= x8627 x5986) (= x3249 x6096)) x1577)))
(assert (=> (<= x739 10000) (= (x6664 x739) (x2264 x739))))
(assert (x5765 x1595))
(assert (x5765 x2138))
(assert (x9173 x5006))
(assert (= x4498 (or x3614 (and x8088 (not x6363)))))
(assert (= (and x3610 x8499) x7868))
(assert (= (=> (and (= x1957 x3650) (= x7874 x5309) (= x8598 0)) x6383) x3952))
(assert (= x4054 (or x1588 x4689)))
(assert (x8398 x199))
(assert (= (and x4297 x9204) x5468))
(assert (= (and (not x2830) x6150) x7597))
(assert (= x301 (and x3109 x7554)))
(assert (= (and x3522 (not x5841)) x3072))
(assert (= x8533 (and (not x6742) x1681)))
(assert (x9173 x2238))
(assert (= (and (=> (and (not x6914) (and (= x1527 x2694) (= 0 x3723))) x4559) (=> (and x6914 (and (and (= (x5783 (x2264 x1527) x1580 0) x3870) (= (x1891 x1192) x2399) (< x2399 1461501637330902918203684832716283019655932542976) (>= x2399 0) (= (x4000 x3870 1) x1192) (>= 1461501637330902918203684832716283019655932542975 x2399) (= x8039 (ite (< 1 x1) (not (= x2399 0)) (> x1 1)))) (or (and (not x8039) (= x7661 x8039)) (and (and (= (x4000 x5461 2) x8901) (<= x8568 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8568 (x4807 x8901)) (>= x8568 0) (= x7661 (not x4589)) (= x4589 (< x8568 x3696)) (= (x5783 (x2264 x2399) x1580 0) x5461)) x8039)))) x3031)) x1149))
(assert (= x6994 (=> (and (= x4873 x920) (= x1368 x6629)) x5567)))
(assert (= (+ (x3373 x28) 1) (x3373 (x4000 x28 1))))
(assert (= x9038 (and x21 x4193)))
(assert (= (=> (= (> x1191 0) x1729) (and (=> (and (and (>= x1 0) (<= x1 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x730) x9019)) x1729) (and (=> x9019 x9080) (=> (and (not x9019) (and (= (= x5990 0) x4505) (= x3568 (x5783 (x2264 x730) x1942 0)) (>= x5990 0) (= x7021 (x4000 x3568 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5990) (= x5990 (x392 x7021)))) (and (=> (and (and (and (> 1461501637330902918203684832716283019655932542976 x5168) (= (x4000 x1942 1) x2419) (<= x5168 1461501637330902918203684832716283019655932542975) (= (ite (< 0 x1) (not (= x5168 0)) (< 0 x1)) x2241) (<= 0 x5168) (= x5168 (x1005 x2419))) (or (and (and (= x1138 (x4000 x3947 2)) (= x3947 (x5783 (x2264 x5168) x1942 0)) (<= x1658 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x392 x1138) x1658) (= (not x8222) x4136) (= (< x1658 x1191) x8222) (>= x1658 0)) x2241) (and (not x2241) (= x4136 x2241)))) x4505) x7750) (=> (not x4505) x8248))))) (=> (and (not x1729) (and (= x2739 x911) (= x1017 x2884))) x7473))) x5310))
(assert (= x5545 (and x3248 x1835)))
(assert (x9173 x902))
(assert (= x4449 (and x6042 (not x1055))))
(assert (= (and x3575 x9069) x4165))
(assert (x9173 x3655))
(assert (=> (>= 10000 x1333) (= (x6664 x1333) (x2264 x1333))))
(assert (x5765 x5072))
(assert (= x3917 (and x2154 x7434)))
(assert (= x47 (and x3935 x8348)))
(assert (x2631 x5340))
(assert (x5765 x7550))
(assert (x9173 x7178))
(assert (x9173 x3941))
(assert (x9173 x7463))
(assert (x9173 x985))
(assert (x9173 x2866))
(assert (= (+ (x3373 x7440) x5822) (x3373 (x4000 x7440 x5822))))
(assert (= x8379 (and x4883 x6328)))
(assert (x9173 x5639))
(assert (= (x3373 (x2264 x8460)) x8460))
(assert (= x6051 (=> (and (= x3102 x2941) (= x2330 x4596)) x2481)))
(assert (x9173 x201))
(assert (= x6552 (and x2247 x4012)))
(assert (x9173 x1414))
(assert (= x7318 (and (not x707) x689)))
(assert (= (and x158 x5982) x8695))
(assert (x9173 x3605))
(assert (= x789 (and x7197 x8329)))
(assert (= x1671 (and x4510 (not x1349))))
(assert (x9173 x7087))
(assert (x9173 x6093))
(assert (x5699 x471 x8564))
(assert (x9173 x527))
(assert (= (and x2978 (not x2152)) x7911))
(assert (x9173 x8644))
(assert (x5699 x8534 x2420))
(assert (x9173 x1778))
(assert (= (and x3957 (not x6288)) x569))
(assert (= (and x3811 x4751) x8094))
(assert (= (or x2946 x4767 x7262 x1449 x5779 x4124) x3903))
(assert (= (and (not x13) x8904) x6632))
(assert (x9173 x4100))
(assert (= (x3373 (x2264 x1353)) x1353))
(assert (= (and (not x8688) x7112) x4261))
(assert (x9173 x5446))
(assert (x9173 x9217))
(assert (= x7916 (x3373 (x2264 x7916))))
(assert (= (and x3864 (not x5000)) x5878))
(assert (= x8930 (and x7786 x4749)))
(assert (= x5968 (=> (and (= x7059 x570) (= x5613 x9202)) x1284)))
(assert (x9173 x7662))
(assert (x9173 x858))
(assert (x9173 x61))
(assert (= x3452 (=> (and (= x8851 0) (= x3298 x7390)) x2759)))
(assert (= x5957 (and x3657 (not x4641))))
(assert (x9173 x2244))
(assert (= x5129 (and x1610 x3022)))
(assert (= x3980 (=> (and (= x2659 (= 0 x1595)) (or (and x2659 (= x2404 (x4000 x1299 2))) (and (= (x5783 (x2264 x1595) x1299 0) x9031) (not x2659)))) x3399)))
(assert (x9173 x8389))
(assert (= (x2264 2678788150) (x6664 2678788150)))
(assert (x9173 x4787))
(assert (= 1000000000000000000 (x3373 (x6664 1000000000000000000))))
(assert (x9173 x8598))
(assert (= (and (not x1605) x8081) x1014))
(assert (= x5881 (=> (and (= x6414 x4672) (= x6286 x957)) x7257)))
(assert (x9173 x6141))
(assert (= x3076 (and x8364 x9210)))
(assert (x4899 x1088))
(assert (= x6023 (=> (and (or (and x2786 (and (< (+ x7106 x6506) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x7701 x6624) (= (x1656 (x2264 x3881)) x3513) (= (x910 (+ x6506 x7106)) x3214) (= (x7561 (x2264 x7036)) x6506) (= (ite (= 0 x6624) x3990 0) x7106) (= (- x3513 x7106) x5028))) (and (= x7701 x6624) (not x2786))) (= x2786 (= x6624 0))) x2637)))
(assert (= (=> (= x6661 false) x6209) x8916))
(assert (x9173 x8668))
(assert (x2631 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (and x6260 x546) x862))
(assert (x9173 x1646))
(assert (= (and x8971 (not x6858)) x9182))
(assert (x9173 x8085))
(assert (= x1333 (x3373 (x2264 x1333))))
(assert (= (and x5850 x5391) x1380))
(assert (= x4551 x7158))
(assert (x9173 x5063))
(assert (= x1627 (or x5532 x6531)))
(assert (= (and x1335 x3907) x4875))
(assert (x8537 x5252))
(assert (= x1618 (and x5961 x8172)))
(assert (= x4866 (and x7910 x7042)))
(assert (= (not (and (> 1461501637330902918203684832716283019655932542976 x270) (= x270 (x1897 x8181)) (= (x5783 (x2264 x5253) x1299 0) x3511) (<= 0 x270) (= x8181 (x4000 x3511 1)) (<= x270 1461501637330902918203684832716283019655932542975))) x2883))
(assert (x9173 x4920))
(assert (x9173 x6471))
(assert (x9173 x2741))
(assert (= (x3373 (x6664 1856199391)) 1856199391))
(assert (= x2455 (and (not x5657) x1788)))
(assert (= (x3373 (x4000 x3398 1)) (+ (x3373 x3398) 1)))
(assert (= x8492 (and x5085 x7311)))
(assert (= x8321 (x3373 (x2264 x8321))))
(assert (x9173 x733))
(assert (x9173 x3666))
(assert (= (and (not x5433) x1904) x8041))
(assert (x5699 x990 x1473))
(assert (= x1599 (and x9032 x2037)))
(assert (x9173 x9044))
(assert (= x1095 (and (not x7555) x4293)))
(assert (x9173 x1562))
(assert (x9173 x2096))
(assert (x9173 x2739))
(assert (x9173 x2710))
(assert (x9173 x1689))
(assert (= x7166 (and x7202 (not x1478))))
(assert (= (and (not x5554) x1546) x4803))
(assert (x9173 x5104))
(assert (= (and x1929 x4795) x7619))
(assert (= x4522 (and x4848 (not x5997))))
(assert (= (x3373 (x2264 x2639)) x2639))
(assert (= x1400 (and x374 (not x1663))))
(assert (= x3531 (and x77 x3233)))
(assert (x9173 x1594))
(assert (x9173 x1460))
(assert (=> (<= x2083 10000) (= (x2264 x2083) (x6664 x2083))))
(assert (= (and (not x5678) x7492) x4164))
(assert (= (x1738 416) 0))
(assert (x9173 x8148))
(assert (= x649 (=> (= x7124 (> x19 0)) (and (=> (and (not x7124) (and (= x4648 x3358) (= x767 x3629))) x7993) (=> (and x7124 (and (= x8455 (= x4396 0)) (<= 0 x1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1))) (and (=> (and (not x8455) (and (= (x5783 (x2264 x4396) x1404 0) x2276) (= x4968 (x4000 x2276 2)) (= x3978 (= 0 x2316)) (<= 0 x2316) (= x2316 (x1807 x4968)) (<= x2316 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (or (and (not x2098) (= x4514 x2098)) (and (and (= (x5783 (x2264 x739) x1404 0) x5423) (= (x4000 x5423 2) x4715) (= (not x5781) x4514) (<= x2821 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2821 0) (= (x1807 x4715) x2821) (= (< x2821 x19) x5781)) x2098)) (and (<= x739 1461501637330902918203684832716283019655932542975) (= x2098 (ite (> x1 0) (not (= x739 0)) (< 0 x1))) (= (x4000 x1404 1) x2112) (<= 0 x739) (> 1461501637330902918203684832716283019655932542976 x739) (= x739 (x1268 x2112)))) x3978) x1771) (=> (not x3978) x4745))) (=> x8455 x1172)))))))
(assert (= x6105 (and x2677 (not x2060))))
(assert (= x5964 (=> (and (= x1966 x3759) (= x1975 x5247)) x215)))
(assert (x9173 x6718))
(assert (x9173 x2358))
(assert (x9173 x6035))
(assert (x9173 x2155))
(assert (x9173 x5119))
(assert (= x2018 (and (not x7742) x7011)))
(assert (x9173 x2997))
(assert (x9173 x4426))
(assert (= (and x4919 x1084) x4762))
(assert (x9173 x8502))
(assert (= x8701 (=> (and (= 0 x4296) (= x6532 x7690)) x336)))
(assert (= (=> (and (= x4146 0) (= x7205 x7070)) x450) x7633))
(assert (= (and x1262 (not x4313)) x6665))
(assert (x9173 x2668))
(assert (x9173 x5595))
(assert (= x3772 (and x6576 x4057)))
(assert (x9173 x6448))
(assert (= x8942 (and x4429 (not x1132))))
(assert (x9173 x2870))
(assert (x9173 x987))
(assert (= x2385 (or x6142 x7818)))
(assert (x5765 x2929))
(assert (x9173 x7645))
(assert (x9173 x6475))
(assert (= x6775 (=> (and (= x2672 (ite (< x2901 x1) (not (= 0 x4134)) (< x2901 x1))) (or (and (and (and (= x8201 (x4315 x4984)) (> 1461501637330902918203684832716283019655932542976 x8201) (>= x8201 0) (= (= 0 x8201) x5185) (<= x8201 1461501637330902918203684832716283019655932542975)) (or x5185 (and (and (= x2007 (x4000 x4984 1)) (> 1461501637330902918203684832716283019655932542976 x8667) (<= x8667 1461501637330902918203684832716283019655932542975) (<= 0 x8667) (= (x1894 x2007) x8667)) (not x5185)))) (not x2672)) (and (and (and (= (> x2554 0) x5692) (= x7411 (x4315 x4984)) (< x7411 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x7411) (= x2554 (x2563 (- x4134 x7411))) (<= 0 x7411)) (or (and (and (>= x7908 0) (= (x5783 (x2264 x4134) x1695 0) x7552) (<= x7908 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x7908) (= (x6869 x7552) x7908)) x5692) (not x5692))) x2672))) x1359)))
(assert (= (and x75 x1633) x6969))
(assert (= (x3373 (x4000 x6653 2)) (+ 2 (x3373 x6653))))
(assert (= (and x8809 x2793) x1666))
(assert (x9173 x5577))
(assert (x9173 x8426))
(assert (x9173 x5188))
(assert (x9173 x5132))
(assert (= (x3373 (x4000 x104 1)) (+ 1 (x3373 x104))))
(assert (= (and x3966 (not x2619)) x8478))
(assert (= x1225 (and (not x5843) x8852)))
(assert (x9173 x4971))
(assert (= x830 (and x7601 x5368)))
(assert (= x375 (and x1864 (not x2923))))
(assert (x9173 x2565))
(assert (x9173 x6996))
(assert (x9173 x2013))
(assert (x9173 x2772))
(assert (x9173 x1853))
(assert (x9173 x3890))
(assert (x9173 x3712))
(assert (= x4079 (=> (and (= x2859 x384) (= x1805 x7288)) x4420)))
(assert (x9173 x146))
(assert (= x757 (and x1067 (not x1664))))
(assert (x9173 x4376))
(assert (= x3561 (or x7694 x4702)))
(assert (= x1953 (or x5268 x1586)))
(assert (x9173 x3162))
(assert (x9173 x758))
(assert (x9173 x3299))
(assert (x2631 x1733))
(assert (x5699 x2722 x6385))
(assert (x9173 x1735))
(assert (= (or x4342 x3815 x4047 x2521) x3420))
(assert (x9173 x3408))
(assert (= (or x8729 x2410) x2355))
(assert (= (and x2683 x4377) x7401))
(assert (= (or x5022 x2736) x6940))
(assert (x9173 x8056))
(assert (= (and x4309 x8827) x7340))
(assert (= (and x6527 (not x8951)) x7315))
(assert (= (or x271 (and (not x1152) x3403)) x447))
(assert (x9173 x5536))
(assert (x9173 x2987))
(assert (= x1433 (and x2381 x2624)))
(assert (x9173 x1535))
(assert (x9173 x8407))
(assert (= x5072 (x3373 (x2264 x5072))))
(assert (x9173 x6560))
(assert (= (and x757 (not x7783)) x8678))
(assert (x9173 x6063))
(assert (x9173 x1522))
(assert (= (+ 1 (x3373 x9065)) (x3373 (x4000 x9065 1))))
(assert (x2631 x3444))
(assert (= (and x3099 x5635) x8518))
(assert (x5765 x3605))
(assert (= (+ (x3373 x1695) 1) (x3373 (x4000 x1695 1))))
(assert (= x3898 (or x5458 x5409)))
(assert (= (and x3291 x635) x1233))
(assert (x8537 x86))
(assert (x9173 x2535))
(assert (x9173 x9155))
(assert (= (+ 2 (x3373 x8413)) (x3373 (x4000 x8413 2))))
(assert (= x2190 (and (=> (and x7258 (and (and (= x2912 (x5783 (x2264 x8781) x1695 0)) (>= 1461501637330902918203684832716283019655932542975 x8265) (= x7873 (ite (> x1 1) (not (= x8265 0)) (< 1 x1))) (= (x4000 x2912 1) x845) (>= x8265 0) (= x8265 (x274 x845)) (< x8265 1461501637330902918203684832716283019655932542976)) (or (and (not x7873) (= x3427 x7873)) (and (and (= (x4000 x5292 2) x2388) (<= 0 x6049) (= x5292 (x5783 (x2264 x8265) x1695 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6049) (= x3427 (not x3545)) (= (< x6049 x2352) x3545) (= x6049 (x3879 x2388))) x7873)))) x1441) (=> (and (not x7258) (and (= 0 x2901) (= x8781 x4134))) x6775))))
(assert (x9173 x1141))
(assert (x9173 x3853))
(assert (= (and (not x6845) x1553) x8113))
(assert (= x2905 (and (not x4156) x4019)))
(assert (= (+ 2 (x3373 x5688)) (x3373 (x4000 x5688 2))))
(assert (x9173 x7059))
(assert (x9173 x7367))
(assert (x9173 x8815))
(assert (x9173 x7106))
(assert (x9173 x5376))
(assert (x9173 x798))
(assert (x9173 x6641))
(assert (x9173 x84))
(assert (= x4308 (and (not x1139) x3883)))
(assert (= (and x4404 (not x3678)) x4211))
(assert (= (and x7560 x7686) x1276))
(assert (x9173 x5555))
(assert (x9173 x5580))
(assert (= x1494 (and (not x6815) x1946)))
(assert (x2631 x4776))
(assert (x9173 x7352))
(assert (x9173 x8427))
(assert (x9173 x3599))
(assert (x9173 x4717))
(assert (=> (<= x5939 10000) (= (x6664 x5939) (x2264 x5939))))
(assert (x9173 x2526))
(assert (= x3273 (and x5786 x9034)))
(assert (x9173 x632))
(assert (x9173 x3327))
(assert (=> (>= 10000 x1499) (= (x2264 x1499) (x6664 x1499))))
(assert (= x8254 (x3373 (x2264 x8254))))
(assert (x5765 x3133))
(assert (= (and x1182 x7020) x6763))
(assert (x9173 x6056))
(assert (x5765 x5729))
(assert (x9173 x7210))
(assert (x9173 x7212))
(assert (x9173 x3394))
(assert (x9173 x3863))
(assert (x9173 x526))
(assert (=> (>= 10000 x5795) (= (x2264 x5795) (x6664 x5795))))
(assert (= (and x325 x7926) x7967))
(assert (x5765 x4442))
(assert (x9173 x6883))
(assert (= (and (not x5262) x4132) x170))
(assert (x9173 x4829))
(assert (x9173 x2048))
(assert (= 3069361948 (x3373 (x6664 3069361948))))
(assert (= (and x7795 x8769) x3943))
(assert (x9173 x3145))
(assert (x9173 x2434))
(assert (= (and x1816 x4323) x1067))
(assert (x9173 x308))
(assert (x9173 x2398))
(assert (x9173 x2242))
(assert (= x4404 (and x1797 x6638)))
(assert (x9173 x3217))
(assert (x9173 x7933))
(assert (= x7940 (=> (and (= 0 x4470) (= x2696 x2747)) x406)))
(assert (x9173 x4748))
(assert (= x4619 (and x9215 x4373)))
(assert (= (and x7903 x1076) x4227))
(assert (x9173 x3878))
(assert (= (=> (and (= 0 x3366) (= x2126 x5338)) x7827) x6703))
(assert (x9173 x6160))
(assert (= x4551 (=> (= true x6661) x6209)))
(assert (= (and (not x7012) x8890) x1688))
(assert (x9173 x1716))
(assert (= (x2264 1779720228) (x6664 1779720228)))
(assert (x2631 x5252))
(assert (= (=> (and (= x8609 (x4000 x5630 1)) (= x4396 x3851) (= (x4000 x6955 1) x5630) (= (x5783 (x2264 x4396) x4176 0) x6955) (= x8608 x4023)) x7583) x2571))
(assert (= (and x6108 (not x1096)) x7956))
(assert (= (and (not x3845) x4339) x6783))
(assert (= (and x6938 x6787) x5246))
(assert (x9173 x2054))
(assert (= (+ 1 (x3373 x3521)) (x3373 (x4000 x3521 1))))
(assert (= x6185 x2797))
(assert (x9173 x6759))
(assert (= x2727 (or x4410 (and x7468 (not x4854)) (and x1220 x6981) (and x6850 x2319) x1755 (and x5817 (not x1802)))))
(assert (= x3000 (and x6771 (not x8455))))
(assert (= (and x5116 (not x7900)) x6210))
(assert (= x4564 (and (not x1840) x790)))
(assert (= x4375 (and x3015 (not x8130))))
(assert (x9173 x3295))
(assert (x9173 x6280))
(assert (x9173 x3275))
(assert (x5765 x2956))
(assert (x9173 x7447))
(assert (x9173 x2862))
(assert (= (and (not x3383) x1834) x4652))
(assert (x9173 x42))
(assert (x9173 x3572))
(assert (x9173 x4979))
(assert (= x6711 (and x8907 (not x1209))))
(assert (= (+ (x3373 x8946) 1) (x3373 (x4000 x8946 1))))
(assert (x2631 x7054))
(assert (= (and x5411 x1529) x7150))
(assert (x9173 x4433))
(assert (= x2368 (x3373 (x2264 x2368))))
(assert (x9173 x282))
(assert (x9173 x1077))
(assert (= x7389 (=> (= (= x7886 x2575) x2528) (and (=> (and (not x2528) (= (< 0 x2575) x6683)) (and (=> (and (not x6683) (and (= x6975 x1932) (= x3874 x560))) x3202) (=> (and x6683 (and (= x2699 (x8091 x2233)) (= (x910 (+ x1932 96)) x2608) (<= 0 x2699) (<= 0 x1908) (= (x4000 x2233 1) x4154) (> 1461501637330902918203684832716283019655932542976 x2699) (<= x4884 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x4884 0) x8474) (<= 0 x4884) (> 1461501637330902918203684832716283019655932542976 x1908) (= (x5783 (x2264 x560) x3119 0) x2233) (>= 1461501637330902918203684832716283019655932542975 x1908) (= (x4000 x4154 1) x8514) (<= x2699 1461501637330902918203684832716283019655932542975) (= (x6968 x8514) x4884) (= (x6658 x4154) x1908))) (and (=> (and (and (or (and x7971 (= (x4000 x3119 1) x7870)) (and (and (= x8585 (x5783 (x2264 x2699) x3119 0)) (= (x4000 x8585 1) x7171)) (not x7971))) (= (= x2699 0) x7971)) (not x8474)) x343) (=> x8474 x8633))))) (=> (and (and (= x5098 x1932) (= x8229 x560)) x2528) x8145)))))
(assert (x9173 x993))
(assert (= (=> (and (= x2265 x3298) (= 0 x5369)) x3107) x3140))
(assert (= (x6664 1856199391) (x2264 1856199391)))
(assert (x2631 x2777))
(assert (= (and x5794 x5239) x4336))
(assert (= (=> (= x9050 (= 0 x4059)) (and (=> (and (not x9050) (= x5919 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8724) (and (= true (<= x8724 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x8724))))) (and (=> x5919 x2813) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6300) (<= 0 x6300) (= (> x6300 x1831) x322) (= x1831 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x345)))) (not x5919)) (and (=> x322 x2813) (=> (and (and (= (< x1831 x8352) x7752) (= (x318 x4289) x8352) (= x1452 (x910 (+ x345 x6300))) (= (x5783 (x2264 x7036) (x6664 5) 0) x4289) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8352) (>= x8352 0)) (not x322)) (and (=> (and (and (= x1751 32) (= x5646 1) (= x916 (x910 (+ x8352 x345)))) (not x7752)) x2670) (=> x7752 x2813))))))) (=> x9050 x2813))) x2603))
(assert (x9173 x156))
(assert (x5765 x8483))
(assert (= x1581 (and x7004 x9168)))
(assert (x9173 x3495))
(assert (= x7647 (and x8861 x8919)))
(assert (= x9043 x2721))
(assert (= (x2264 10742207464693106059581744854972325794081737850190833080250671788038469713920) (x6664 10742207464693106059581744854972325794081737850190833080250671788038469713920)))
(assert (= x6255 (or x4304 x402)))
(assert (= (or x3191 x3045 x4880 x5633 x955 x2028 x601 x4242 x2162) x5510))
(assert (= x3895 (and (not x3490) x2748)))
(assert (x9173 x6591))
(assert (= x3752 (or (and (not x3748) x4634) x1573)))
(assert (=> (>= 10000 x6759) (= (x2264 x6759) (x6664 x6759))))
(assert (x9173 x1753))
(assert (= x2737 (and x196 x4578)))
(assert (x9173 x9123))
(assert (= (x3373 (x6664 988262939)) 988262939))
(assert (= x5351 (or x4755 x3919 x5167)))
(assert (= (x3373 (x4000 x1942 2)) (+ (x3373 x1942) 2)))
(assert (x9173 x8592))
(assert (= (or x937 x6751) x3210))
(assert (= x3931 x670))
(assert (x9173 x5815))
(assert (x9173 x3133))
(assert (= (and x7220 x1102) x3388))
(assert (x9173 x2307))
(assert (x9173 x9020))
(assert (= (and x1520 (not x8217)) x5431))
(assert (x9173 x4302))
(assert (x5699 x8226 x7875))
(assert (x2631 x5618))
(assert (x9173 x1436))
(assert (= (and x6317 (not x7811)) x9014))
(assert (= (x2264 44970383829727661923261016617897238973146650624978361361029103362720544063488) (x6664 44970383829727661923261016617897238973146650624978361361029103362720544063488)))
(assert (x5765 x8741))
(assert (= x3124 (or x3172 x4806)))
(assert (x2631 x2918))
(assert (= (+ (x3373 x6204) 1) (x3373 (x4000 x6204 1))))
(assert (= x7775 (=> (= x2487 (= x7850 0)) (and (=> x2487 x8633) (=> (and (and (= x2042 (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7386)) (= (x910 (+ x3774 31)) x7386) (= x267 (x910 (+ x53 x2042))) (= x4653 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3774) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3774) true) (> 32 x3774))))) (not x2487)) (and (=> (and (= true x6661) x4653) x6209) (=> (and (not x4653) (and (= x394 (> x2734 0)) (= (ite (< x7438 x6530) x7438 x6530) x2734) (= (x9207 x53) x6530))) (and (=> (and (and (= x6300 x770) (= x1723 x267) (= x1068 x4008) (= x4010 x5367)) (not x394)) x6381) (=> (and (and (>= x1322 0) (> 1461501637330902918203684832716283019655932542976 x1322) (= (x2563 (- x3881 x1322)) x4976) (>= 1461501637330902918203684832716283019655932542975 x1322) (= x8141 (> x4976 0))) x394) (and (=> (and x8141 (and (and (= x931 (x910 (+ 4 x267))) (= x3075 (= x5084 x4668)) (= x6502 (x910 (+ 32 x931)))) (and (and (not (< x6190 4)) (= x2734 x7375) (= x6190 68) (< 0 x4477) (= x8384 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x2019 (x2563 (- x6190 4))) (> 1466279372 x4278) (> 599290589 x4278) (= x4477 (x6844 (x2264 x4668))) (not (= 117300739 x4278)) (= (or (and (> 64 x2019) (= (<= x2019 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2019)) x4224) (= x6832 x5729) (= 157198259 x4278)) x3075))) (and (=> (and (and (= x2227 x5729) (= x1980 (= x6832 x5729))) (not x4224)) (and (=> (not x1980) x843) (=> (and x1980 (and (= x7375 x7610) (= x8988 (x5783 (x2264 x5729) x2757 0)) (= 32 x5258) (= (x5783 (x2264 x7036) (x6664 2) 0) x2757) (= 1 x4074))) x675))) (=> x4224 x843))) (=> (and (and (= (x910 (+ 4 x267)) x3499) (= x3609 (= x4316 0)) (<= x2639 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2639) (= (x6844 (x2264 x2639)) x4316) (>= x2639 0)) (not x8141)) (and (=> (and (= x6661 true) x3609) x6209) (=> (and (not x3609) (and (= (= x3666 0) x5040) (= x3666 (x6844 (x2264 x3881))) (= 4 x858) (< x6180 4294967296))) (and (=> (and x5040 (= x6661 true)) x6209) (=> (and (and (= x130 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x939 x2734)) (<= x2734 x6324))) (= (x3516 (x2264 x3881)) x939) (= (x3516 (x2264 x7036)) x6324)) (not x5040)) (and (=> (and (and (< (+ x2734 x1481) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2496 (x3516 (x2264 x7036))) (= (x910 (+ x1481 x2734)) x877) (= x6577 (= x5148 x3881)) (= x9141 (- x2496 x2734)) (= x1481 (x7702 (x2264 x3881)))) x130) (and (=> (and (not x6577) (= x2060 (= x3605 x3881))) (and (=> (and (not x2060) (and (= x7770 (= x3881 x1326)) (and x7770 (and (= x6364 (x6844 (x2264 x1326))) (= x5997 (= 0 x2734)) (= 4 x5900) (> x6364 0) (= x2660 35417553099779373699389112480655434059402432070290151981503827724506945814528) (= x5900 x858))))) (and (=> (and (= x5367 x4577) (not x5997)) x548) (=> (and (and (< x1925 2217467699) (>= x7047 0) (<= 0 x6913) (not (= 988262939 x1925)) (= x470 (x5783 (x2264 x7036) (x6664 6) 0)) (not (= 989455977 x1925)) (not (> 988262939 x1925)) (= (x4457 x470) x6913) (= x2940 (< x6913 x7047)) (<= x7047 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x7036) (x6664 6) 0) x9130) (< x1925 1856199391) (not (= x1925 1038142104)) (<= x6913 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1313710058 x1925) (not (> 4 x5900)) (= (x4457 x9130) x7047)) x5997) (and (=> (and (not x2940) (and (<= 0 x5367) (= x8108 (x2563 (- x6913 x7047))) (= x8187 (< x187 x5367)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5367) (= x187 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7047))))) (and (=> (and (not x8187) (and (= (x910 (+ x5367 x7047)) x1679) (<= 0 x3252) (= (x910 (+ x7047 x5367)) x8894) (= 128 x5875) (= x971 (= x4668 x3252)) (<= x3252 1461501637330902918203684832716283019655932542975) (< x3252 1461501637330902918203684832716283019655932542976))) (and (=> (and (and (= (x2563 (- x7284 4)) x8361) (> 1466279372 x1391) (not (> 599290589 x1391)) (= x305 (x6844 (x2264 x4668))) (= x7036 x6906) (= x144 x7047) (= x1391 599290589) (= x7284 100) (= x1832 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x7284 4)) (= 100 x7284) (= (or (> x8361 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x8361 96) (= (<= x8361 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x6119) (> x305 0) (= x1326 x7358)) x971) (and (=> (and (and (= x1784 x6906) (= x9034 (= x7036 x6906))) (not x6119)) (and (=> (and (and (= (= x1326 x7358) x6354) (= x7358 x1961)) x9034) (and (=> (not x6354) x3331) (=> (and (and (= x144 x8193) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1061) (= (> x7047 x1061) x5262) (= (x6570 x6561) x1061) (>= x1061 0) (= (x5783 (x2264 x6906) (x6664 1) 0) x6561)) x6354) (and (=> (and (= (< x1061 x144) x100) (not x5262)) (and (=> (and (not x100) (and (= (x5783 (x2264 x7358) (x6664 1) 0) x4830) (= (x5783 (x2264 x6906) (x6664 1) 0) x666) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x372) (= (x4712 x4830) x372) (= (x2563 (- x1061 x144)) x5966) (= (> x372 x4017) x6636) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x144)) x4017) (>= x372 0))) (and (=> x6636 x3331) (=> (and (not x6636) (and (= x4417 (x910 (+ x144 x372))) (= x8453 (> x372 x4417)))) (and (=> x8453 x3331) (=> (and (not x8453) (and (= x7254 (x5783 (x2264 x1326) x8465 0)) (= x602 (x5783 (x2264 x7358) (x6664 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6035) (= x8465 (x5783 (x2264 x6906) (x6664 2) 0)) (= (> x144 x6035) x8867) (= (x4936 x7254) x6035) (>= x6035 0))) (and (=> x8867 x3331) (=> (and (= (> x144 x6035) x8383) (not x8867)) (and (=> (and (and (= x3009 (x2563 (- x6035 x144))) (= x8707 (x5783 (x2264 x1326) x2092 0)) (= x2092 (x5783 (x2264 x6906) (x6664 2) 0)) (= 32 x5536) (= x3479 1)) (not x8383)) x2174) (=> x8383 x3331))))))))) (=> x100 x3331))) (=> x5262 x3331))))) (=> (not x9034) x3331))) (=> x6119 x3331))) (=> (and (not x971) (= x3160 (= x5148 x3252))) (and (=> (and x3160 (and (= (x6844 (x2264 x5148)) x2870) (= x3060 x7036) (= x4241 (x2563 (- x4433 4))) (= x3956 x1326) (= x4433 100) (not (< x7604 405663989)) (= x8401 x7047) (> 2217467699 x7604) (not (> 4 x4433)) (= 100 x4433) (> 988262939 x7604) (= x7604 599290589) (= x6332 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x5701 (or (and (= (<= x4241 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x4241)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4241))) (< 0 x2870) (not (= 405663989 x7604)) (not (= x7604 547091486)))) (and (=> x5701 x3055) (=> (and (and (= (= x7036 x3060) x1023) (= x3060 x8689)) (not x5701)) (and (=> (and x1023 (and (= x3956 x8106) (= x8019 (= x3956 x1326)))) (and (=> (not x8019) x3055) (=> (and x8019 (and (= (> x7047 x1744) x7821) (<= 0 x1744) (= x1744 (x6566 x340)) (= x4705 x8401) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1744) (= (x5783 (x2264 x3060) (x6664 5) 0) x340))) (and (=> (and (and (= (x5783 (x2264 x3060) (x6664 5) 0) x9209) (= (x6566 x9209) x7030) (= x7470 (> x8401 x7030)) (<= 0 x7030) (<= x7030 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x7821)) (and (=> (and (and (= x2645 (> x7164 x2146)) (= (x5783 (x2264 x3956) (x6664 5) 0) x7462) (= x3993 (x2563 (- x7030 x8401))) (<= 0 x7164) (= (x1538 x7462) x7164) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8401)) x2146) (<= x7164 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x7470)) (and (=> x2645 x3055) (=> (and (and (= (x910 (+ x7164 x8401)) x5502) (= 32 x353) (= x5890 1) (= x6680 1)) (not x2645)) x5778))) (=> x7470 x3055))) (=> x7821 x3055))))) (=> (not x1023) x3055))))) (=> (and (not x3160) (= (= x3605 x3252) x4604)) (and (=> (and (not x4604) (and (and (and (= x7014 x7047) (not (> 4 x3846)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6587) (and (= (<= x6587 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x6587 96))) x875) (not (= x4238 547091486)) (not (= 405663989 x4238)) (not (> 405663989 x4238)) (= (x6844 (x2264 x1326)) x4240) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x733) (< 0 x4240) (= 599290589 x4238) (= x6622 x7036) (= 100 x3846) (= x3846 100) (= x6795 x1326) (= x6587 (x2563 (- x3846 4))) (> 2217467699 x4238) (< x4238 988262939)) x1032) (= (= x3252 x1326) x1032))) (and (=> x875 x6637) (=> (and (and (= x3313 (= x7036 x6622)) (= x6622 x6826)) (not x875)) (and (=> (and x3313 (and (= (= x1326 x6795) x7741) (= x6795 x5255))) (and (=> (and x7741 (and (<= x221 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x6622) (x6664 5) 0) x1458) (= (> x7047 x221) x5420) (= x7014 x4735) (>= x221 0) (= (x108 x1458) x221))) (and (=> x5420 x6637) (=> (and (not x5420) (and (= x8196 (x5783 (x2264 x6622) (x6664 5) 0)) (= x5511 (x108 x8196)) (= (> x7014 x5511) x3093) (<= x5511 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5511 0))) (and (=> (and (not x3093) (and (<= x5417 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7555 (< x3475 x5417)) (= (x2563 (- x5511 x7014)) x5762) (= x3475 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7014))) (= x7090 (x5783 (x2264 x6795) (x6664 5) 0)) (= x5417 (x8438 x7090)) (<= 0 x5417))) (and (=> x7555 x6637) (=> (and (and (= x6138 (x910 (+ x5417 x7014))) (= 32 x7588) (= 1 x4531) (= 1 x3171)) (not x7555)) x365))) (=> x3093 x6637))))) (=> (not x7741) x6637))) (=> (not x3313) x6637))))) (=> (and x4604 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6528) (> 2217467699 x7621) (= x7621 599290589) (> 988262939 x7621) (> x808 0) (not (< x7621 405663989)) (= x6298 x7036) (= x1326 x6598) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1501) (and (= true (<= x1501 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1501 96))) x4058) (= x1937 100) (= (x6844 (x2264 x3605)) x808) (= 100 x1937) (= x3617 x7047) (= (x2563 (- x1937 4)) x1501) (not (= x7621 405663989)) (not (< x1937 4)) (not (= x7621 547091486)))) (and (=> (and (and (= x3608 (= x7036 x6298)) (= x5187 x6298)) (not x4058)) (and (=> (not x3608) x978) (=> (and (and (= x9020 x6598) (= x5775 (= x6598 x1326))) x3608) (and (=> (not x5775) x978) (=> (and x5775 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8045) (= x3617 x5639) (= (x3633 x9029) x8045) (= x4359 (> x7047 x8045)) (= (x5783 (x2264 x6298) (x6664 5) 0) x9029) (>= x8045 0))) (and (=> (and (not x4359) (and (= x6257 (< x4384 x3617)) (= (x5783 (x2264 x6298) (x6664 5) 0) x7849) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4384) (>= x4384 0) (= x4384 (x3633 x7849)))) (and (=> (and (and (= x5925 (> x8160 x2636)) (>= x8160 0) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3617)) x2636) (= x8160 (x6929 x2794)) (= x2794 (x5783 (x2264 x6598) (x6664 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8160) (= x2691 (x2563 (- x4384 x3617)))) (not x6257)) (and (=> x5925 x978) (=> (and (not x5925) (and (= 32 x8658) (= x951 (x910 (+ x8160 x3617))) (= 1 x6656) (= x2101 1))) x3380))) (=> x6257 x978))) (=> x4359 x978))))))) (=> x4058 x978))))))))) (=> (and x8187 (= x5367 x4577)) x548))) (=> (and (= x4577 x5367) x2940) x548))))) (=> (and (and (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x2741) (= x8200 (= 0 x2734)) (= x8215 x858) (> x8292 0) (= 4 x8215) (= x8292 (x6844 (x2264 x3605)))) x2060) (and (=> (and (= x770 x2206) (not x8200)) x1579) (=> (and x8200 (and (= x6446 (x5783 (x2264 x7036) (x6664 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3787) (= (x5457 x6446) x3563) (<= 0 x3563) (> 2217467699 x6535) (not (= 989455977 x6535)) (not (> 4 x8215)) (< x6535 1856199391) (= x4488 (< x3563 x3787)) (= x6535 1313710058) (not (= 988262939 x6535)) (not (= 1038142104 x6535)) (>= x3787 0) (= x6998 (x5783 (x2264 x7036) (x6664 6) 0)) (not (< x6535 988262939)) (= x3787 (x5457 x6998)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3563))) (and (=> (and (not x4488) (and (<= x770 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3787)) x6280) (>= x770 0) (= (> x770 x6280) x5850) (= (x2563 (- x3563 x3787)) x3702))) (and (=> (and (= x2206 x770) x5850) x1579) (=> (and (and (>= x1750 0) (= x6085 (= x4668 x1750)) (= 128 x1115) (< x1750 1461501637330902918203684832716283019655932542976) (= (x910 (+ x3787 x770)) x2434) (= x3217 (x910 (+ x3787 x770))) (<= x1750 1461501637330902918203684832716283019655932542975)) (not x5850)) (and (=> (and x6085 (and (= (x2563 (- x1913 4)) x2256) (= x7036 x5371) (= 100 x1913) (not (< x2345 599290589)) (< x2345 1466279372) (= x7676 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2256) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2256)) (> 96 x2256)))) (= x3787 x6697) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2089) (= x1913 100) (= x3605 x4370) (= (x6844 (x2264 x4668)) x2191) (not (> 4 x1913)) (< 0 x2191) (= x2345 599290589))) (and (=> (and (not x7676) (and (= x2924 x5371) (= x7711 (= x7036 x5371)))) (and (=> (not x7711) x6703) (=> (and (and (= x4370 x8046) (= x6182 (= x4370 x3605))) x7711) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x510) (= (x5783 (x2264 x5371) (x6664 1) 0) x7188) (= (> x3787 x510) x9069) (<= 0 x510) (= x6697 x424) (= (x6570 x7188) x510)) x6182) (and (=> x9069 x6703) (=> (and (not x9069) (= x4309 (> x6697 x510))) (and (=> (and (not x4309) (and (= (x7441 x2078) x1871) (>= x1871 0) (= (> x1871 x6487) x7573) (= x3180 (x2563 (- x510 x6697))) (= x2078 (x5783 (x2264 x4370) (x6664 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1871) (= x2968 (x5783 (x2264 x5371) (x6664 1) 0)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6697)) x6487))) (and (=> (and (not x7573) (and (= (> x1871 x5742) x4983) (= x5742 (x910 (+ x6697 x1871))))) (and (=> x4983 x6703) (=> (and (and (>= x3518 0) (= (x4936 x2514) x3518) (= x7469 (x5783 (x2264 x5371) (x6664 2) 0)) (= (< x3518 x6697) x3842) (<= x3518 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x4370) (x6664 1) 0) x511) (= (x5783 (x2264 x3605) x7469 0) x2514)) (not x4983)) (and (=> (and (not x3842) (= x5447 (> x6697 x3518))) (and (=> (and (not x5447) (and (= x9190 (x5783 (x2264 x5371) (x6664 2) 0)) (= (x5783 (x2264 x3605) x9190 0) x4340) (= x6934 (x2563 (- x3518 x6697))) (= x3366 1) (= x5338 32))) x7827) (=> x5447 x6703))) (=> x3842 x6703))))) (=> x7573 x6703))) (=> x4309 x6703))))) (=> (not x6182) x6703))))) (=> x7676 x6703))) (=> (and (not x6085) (= (= x5148 x1750) x4511)) (and (=> (and x4511 (and (= x3787 x7344) (= (or (and (< x2752 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2752))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2752)) x7402) (not (> 405663989 x2033)) (= x3520 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2307 100) (= x2307 100) (< x2033 2217467699) (> x1443 0) (= (x2563 (- x2307 4)) x2752) (not (< x2307 4)) (> 988262939 x2033) (not (= 405663989 x2033)) (= x3605 x74) (= x902 x7036) (= 599290589 x2033) (not (= 547091486 x2033)) (= (x6844 (x2264 x5148)) x1443))) (and (=> (and (and (= x5695 x902) (= x4885 (= x7036 x902))) (not x7402)) (and (=> (not x4885) x5216) (=> (and x4885 (and (= x6416 (= x74 x3605)) (= x74 x944))) (and (=> (and (and (= (> x3787 x2139) x3811) (= x4536 (x5783 (x2264 x902) (x6664 5) 0)) (= (x6566 x4536) x2139) (<= x2139 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2139) (= x7344 x4432)) x6416) (and (=> x3811 x5216) (=> (and (not x3811) (and (= x5529 (x6566 x5189)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5529) (<= 0 x5529) (= x5189 (x5783 (x2264 x902) (x6664 5) 0)) (= (< x5529 x7344) x7427))) (and (=> x7427 x5216) (=> (and (not x7427) (and (<= x9077 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8648 (x5783 (x2264 x74) (x6664 5) 0)) (= x436 (x2563 (- x5529 x7344))) (>= x9077 0) (= x2133 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7344))) (= (x5474 x8648) x9077) (= x7190 (< x2133 x9077)))) (and (=> (and (and (= 32 x2987) (= x4159 (x910 (+ x9077 x7344))) (= 1 x8414) (= 1 x6471)) (not x7190)) x8714) (=> x7190 x5216))))))) (=> (not x6416) x5216))))) (=> x7402 x5216))) (=> (and (not x4511) (= (= x3605 x1750) x2955)) (and (=> (and (not x2955) (and (= (= x1326 x1750) x7104) (and x7104 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1214) (= 599290589 x1514) (= x3523 100) (> x8389 0) (not (> 405663989 x1514)) (= x3523 100) (= x8389 (x6844 (x2264 x1326))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x721) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x721) true) (> 96 x721))) x4) (< x1514 988262939) (not (> 4 x3523)) (not (= x1514 547091486)) (> 2217467699 x1514) (= x7490 x3787) (= x7036 x502) (= (x2563 (- x3523 4)) x721) (not (= x1514 405663989)) (= x3605 x4195))))) (and (=> (and (and (= x4759 x502) (= x2952 (= x502 x7036))) (not x4)) (and (=> (not x2952) x5121) (=> (and x2952 (and (= x963 x4195) (= x2012 (= x3605 x4195)))) (and (=> (and x2012 (and (= x2830 (< x4149 x3787)) (= x4149 (x108 x9180)) (= x5580 x7490) (>= x4149 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4149) (= x9180 (x5783 (x2264 x502) (x6664 5) 0)))) (and (=> x2830 x5121) (=> (and (not x2830) (and (<= 0 x5439) (= x4744 (< x5439 x7490)) (= (x5783 (x2264 x502) (x6664 5) 0) x8335) (<= x5439 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5439 (x108 x8335)))) (and (=> x4744 x5121) (=> (and (not x4744) (and (<= 0 x5337) (= x5010 (< x514 x5337)) (= (x352 x3385) x5337) (= (x2563 (- x5439 x7490)) x8251) (= (x5783 (x2264 x4195) (x6664 5) 0) x3385) (<= x5337 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7490)) x514))) (and (=> (and (and (= x1193 1) (= 1 x8405) (= x5053 32) (= (x910 (+ x7490 x5337)) x2762)) (not x5010)) x1979) (=> x5010 x5121))))))) (=> (not x2012) x5121))))) (=> x4 x5121))) (=> (and (and (= x4734 x3605) (= 599290589 x884) (= x6987 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x610) (= x6056 (x2563 (- x6987 4))) (not (< x884 405663989)) (> 2217467699 x884) (not (= x884 405663989)) (< x884 988262939) (= x7036 x1353) (not (= 547091486 x884)) (= (x6844 (x2264 x3605)) x1821) (= x1418 x3787) (= 100 x6987) (< 0 x1821) (= (or (and (= (<= x6056 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x6056)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6056)) x6050) (not (< x6987 4))) x2955) (and (=> (and (and (= x7900 (= x7036 x1353)) (= x1353 x6865)) (not x6050)) (and (=> (and (and (= x6953 (= x3605 x4734)) (= x4780 x4734)) x7900) (and (=> (not x6953) x6390) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4486) (= (x5783 (x2264 x1353) (x6664 5) 0) x3652) (= (x3633 x3652) x4486) (= x1418 x2818) (= (> x3787 x4486) x4236) (<= 0 x4486)) x6953) (and (=> x4236 x6390) (=> (and (not x4236) (and (>= x868 0) (= (x5783 (x2264 x1353) (x6664 5) 0) x3301) (<= x868 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3633 x3301) x868) (= x3638 (< x868 x1418)))) (and (=> x3638 x6390) (=> (and (not x3638) (and (= (x2563 (- x868 x1418)) x3565) (= x1691 (x7184 x5894)) (>= x1691 0) (= x5894 (x5783 (x2264 x4734) (x6664 5) 0)) (= x3738 (< x8715 x1691)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1418)) x8715) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1691))) (and (=> (and (and (= x8536 (x910 (+ x1691 x1418))) (= x8276 32) (= 1 x2735) (= x3162 1)) (not x3738)) x1877) (=> x3738 x6390))))))))) (=> (not x7900) x6390))) (=> x6050 x6390))))))))))) (=> (and x4488 (= x2206 x770)) x1579))))))) (=> (and (and (= (= x2734 0) x3843) (= x761 (x6844 (x2264 x5148))) (< 0 x761) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x7009) (= x125 4) (= x858 x125)) x6577) (and (=> (and (and (= (x5783 (x2264 x7036) (x6664 6) 0) x2758) (= (< x161 x2064) x7991) (not (> 4 x125)) (<= 0 x2064) (not (= 989455977 x6954)) (not (> 988262939 x6954)) (<= 0 x161) (not (= 988262939 x6954)) (= (x5783 (x2264 x7036) (x6664 6) 0) x4180) (= x161 (x1203 x4180)) (< x6954 1856199391) (<= x2064 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1038142104 x6954)) (= x2064 (x1203 x2758)) (> 2217467699 x6954) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x161) (= 1313710058 x6954)) x3843) (and (=> (and (= x6250 x1068) x7991) x1907) (=> (and (not x7991) (and (<= 0 x1068) (= x200 (< x7598 x1068)) (= x7598 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2064))) (<= x1068 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2563 (- x161 x2064)) x2740))) (and (=> (and x200 (= x6250 x1068)) x1907) (=> (and (not x200) (and (= x6543 (x910 (+ x1068 x2064))) (<= 0 x1116) (= 128 x8332) (>= 1461501637330902918203684832716283019655932542975 x1116) (= (= x1116 x4668) x2787) (= x4576 (x910 (+ x1068 x2064))) (< x1116 1461501637330902918203684832716283019655932542976))) (and (=> (and (not x2787) (= x5476 (= x5148 x1116))) (and (=> (and x5476 (and (not (> 4 x8622)) (= 100 x8622) (not (= x5940 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x8166) (= x8622 100) (= x2064 x9133) (not (= x5940 547091486)) (= x5148 x435) (= (or (and (> 96 x6695) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6695) true)) (> x6695 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x7426) (= 599290589 x5940) (= (x6844 (x2264 x5148)) x188) (> x188 0) (= x6695 (x2563 (- x8622 4))) (> 2217467699 x5940) (not (> 405663989 x5940)) (= x5891 x7036) (< x5940 988262939))) (and (=> x7426 x3716) (=> (and (not x7426) (and (= x989 (= x5891 x7036)) (= x5891 x8937))) (and (=> (and x989 (and (= (= x435 x5148) x4191) (= x5725 x435))) (and (=> (not x4191) x3716) (=> (and (and (>= x7193 0) (= x7703 (x5783 (x2264 x5891) (x6664 5) 0)) (= (< x7193 x2064) x3845) (= (x6566 x7703) x7193) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7193) (= x3945 x9133)) x4191) (and (=> x3845 x3716) (=> (and (not x3845) (and (= (< x4876 x9133) x7433) (= (x5783 (x2264 x5891) (x6664 5) 0) x663) (<= x4876 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4876 (x6566 x663)) (>= x4876 0))) (and (=> (and (and (= x8766 (< x2871 x6103)) (= (x7038 x5991) x6103) (= x2871 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9133))) (= x5991 (x5783 (x2264 x435) (x6664 5) 0)) (>= x6103 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6103) (= (x2563 (- x4876 x9133)) x5647)) (not x7433)) (and (=> (and (and (= 1 x7609) (= 32 x2441) (= x5149 1) (= (x910 (+ x6103 x9133)) x1567)) (not x8766)) x1677) (=> x8766 x3716))) (=> x7433 x3716))))))) (=> (not x989) x3716))))) (=> (and (= (= x1116 x3605) x8864) (not x5476)) (and (=> (and (and (= 100 x8773) (< x6410 2217467699) (= x3265 x7036) (not (= x6410 547091486)) (= (or (> x8926 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x8926 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x8926 96))) x2689) (= (x6844 (x2264 x3605)) x9129) (not (= 405663989 x6410)) (< 0 x9129) (= 100 x8773) (not (< x6410 405663989)) (= 599290589 x6410) (= x2064 x1631) (= (x2563 (- x8773 4)) x8926) (> 988262939 x6410) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2676) (not (< x8773 4)) (= x5148 x6352)) x8864) (and (=> x2689 x8421) (=> (and (not x2689) (and (= x2624 (= x7036 x3265)) (= x3265 x8058))) (and (=> (and (and (= (= x6352 x5148) x8356) (= x6071 x6352)) x2624) (and (=> (and (and (= (< x6627 x2064) x5191) (= x1552 (x5783 (x2264 x3265) (x6664 5) 0)) (= x6627 (x3633 x1552)) (>= x6627 0) (= x3739 x1631) (<= x6627 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x8356) (and (=> x5191 x8421) (=> (and (not x5191) (and (= x8610 (x5783 (x2264 x3265) (x6664 5) 0)) (>= x1318 0) (= x1318 (x3633 x8610)) (<= x1318 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5451 (< x1318 x1631)))) (and (=> x5451 x8421) (=> (and (and (<= x4728 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1631)) x3346) (= (> x4728 x3346) x8978) (= x4728 (x2279 x5429)) (= x2681 (x2563 (- x1318 x1631))) (>= x4728 0) (= (x5783 (x2264 x6352) (x6664 5) 0) x5429)) (not x5451)) (and (=> (and (not x8978) (and (= 1 x310) (= 1 x2654) (= 32 x1869) (= x2803 (x910 (+ x1631 x4728))))) x3961) (=> x8978 x8421))))))) (=> (not x8356) x8421))) (=> (not x2624) x8421))))) (=> (and (and (and (and (= x6939 x7036) (= 100 x7201) (not (< x7201 4)) (= x9124 x5148) (> x7377 0) (= (x2563 (- x7201 4)) x8471) (= x7377 (x6844 (x2264 x1326))) (= x7201 100) (= x6746 x2064) (> 2217467699 x2523) (not (= 547091486 x2523)) (> 988262939 x2523) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8471) (and (= true (<= x8471 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x8471))) x8733) (not (= 405663989 x2523)) (= x1857 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 405663989 x2523)) (= x2523 599290589)) x6215) (= x6215 (= x1116 x1326))) (not x8864)) (and (=> x8733 x672) (=> (and (not x8733) (and (= x2460 x6939) (= x1564 (= x6939 x7036)))) (and (=> (and x1564 (and (= (= x5148 x9124) x1616) (= x6253 x9124))) (and (=> (not x1616) x672) (=> (and x1616 (and (= x8808 (x108 x7767)) (= (> x2064 x8808) x460) (<= x8808 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x8808) (= x7767 (x5783 (x2264 x6939) (x6664 5) 0)) (= x8055 x6746))) (and (=> (and (and (= x2837 (x108 x3805)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2837) (= (x5783 (x2264 x6939) (x6664 5) 0) x3805) (>= x2837 0) (= x3935 (> x6746 x2837))) (not x460)) (and (=> x3935 x672) (=> (and (not x3935) (and (= x67 (< x1881 x4905)) (= (x2563 (- x2837 x6746)) x8829) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4905) (= x8093 (x5783 (x2264 x9124) (x6664 5) 0)) (<= 0 x4905) (= (x1717 x8093) x4905) (= x1881 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6746))))) (and (=> x67 x672) (=> (and (not x67) (and (= 1 x2859) (= (x910 (+ x6746 x4905)) x4263) (= x7288 32) (= x6866 1))) x4079))))) (=> x460 x672))))) (=> (not x1564) x672))))))))) (=> (and (and (not (> 4 x8131)) (= x8131 100) (= x2064 x3392) (= x4474 (x2563 (- x8131 4))) (= (x6844 (x2264 x4668)) x3599) (= x5148 x2063) (= x4080 x7036) (not (< x9206 599290589)) (= x8131 100) (= 599290589 x9206) (< 0 x3599) (> 1466279372 x9206) (= x180 (or (and (< x4474 96) (= true (<= x4474 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4474))) (= x7394 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x2787) (and (=> (and (and (= x4906 (= x7036 x4080)) (= x4080 x742)) (not x180)) (and (=> (and (and (= x1865 (= x2063 x5148)) (= x4179 x2063)) x4906) (and (=> (not x1865) x3735) (=> (and x1865 (and (<= x1019 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8674 x3392) (= (< x1019 x2064) x4015) (>= x1019 0) (= (x5783 (x2264 x4080) (x6664 1) 0) x6818) (= (x6570 x6818) x1019))) (and (=> x4015 x3735) (=> (and (= (> x3392 x1019) x2647) (not x4015)) (and (=> x2647 x3735) (=> (and (and (= x8769 (> x1620 x4600)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1620) (>= x1620 0) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3392)) x4600) (= x1097 (x5783 (x2264 x4080) (x6664 1) 0)) (= x165 (x5783 (x2264 x2063) (x6664 1) 0)) (= (x4825 x165) x1620) (= (x2563 (- x1019 x3392)) x8397)) (not x2647)) (and (=> x8769 x3735) (=> (and (and (= x3661 (< x7338 x1620)) (= (x910 (+ x1620 x3392)) x7338)) (not x8769)) (and (=> x3661 x3735) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8240) (= (x5783 (x2264 x4080) (x6664 2) 0) x8260) (= x6052 (x5783 (x2264 x5148) x8260 0)) (= x5569 (< x8240 x3392)) (= (x5783 (x2264 x2063) (x6664 1) 0) x464) (>= x8240 0) (= x8240 (x4936 x6052))) (not x3661)) (and (=> x5569 x3735) (=> (and (= x4749 (< x8240 x3392)) (not x5569)) (and (=> (and (not x4749) (and (= (x5783 (x2264 x4080) (x6664 2) 0) x4587) (= 32 x4086) (= x7649 1) (= (x5783 (x2264 x5148) x4587 0) x5863) (= (x2563 (- x8240 x3392)) x4631))) x6581) (=> x4749 x3735))))))))))))))) (=> (not x4906) x3735))) (=> x180 x3735))))))))) (=> (and (not x3843) (= x1068 x6250)) x1907))))) (=> (and (and (= x1068 x294) (= x770 x5918) (= x2807 0) (= x7709 x5367)) (not x130)) x8279)))))))))))))))))
(assert (x9173 x1215))
(assert (= (and (not x5587) x6025) x4569))
(assert (x9173 x4277))
(assert (x9173 x2290))
(assert (x9173 x5337))
(assert (x9173 x8605))
(assert (x9173 x1527))
(assert (=> (<= x1326 10000) (= (x6664 x1326) (x2264 x1326))))
(assert (x9173 x5921))
(assert (= x4848 (and x7770 x6105)))
(assert (x9173 x5973))
(assert (x9173 x1194))
(assert (x9173 x9219))
(assert (x9173 x8284))
(assert (= (+ 1 (x3373 x6955)) (x3373 (x4000 x6955 1))))
(assert (x9173 x2345))
(assert (x9173 x2657))
(assert (x9173 x7054))
(assert (x9173 x3990))
(assert (x9173 x6337))
(assert (= x9147 (x3373 (x2264 x9147))))
(assert (= (x3373 (x4000 x7788 1)) (+ (x3373 x7788) 1)))
(assert (= (x3373 (x2264 x5371)) x5371))
(assert (x9173 x4089))
(assert (= (or x5712 x1928) x1740))
(assert (x9173 x6096))
(assert (= x5041 (or x8099 x8296 x5507)))
(assert (= (and (not x4158) x1440) x856))
(assert (x5765 x6906))
(assert (= x5601 (or x302 x5828)))
(assert (x9173 x2702))
(assert (x9173 x3968))
(assert (x9173 x5670))
(assert (= x259 (or x8887 x3356)))
(assert (x2631 x4074))
(assert (= (and x2361 (not x605)) x3632))
(assert (= x7198 (and x1638 x5831)))
(assert (= (and x1650 x3699) x4820))
(assert (=> (<= x2015 10000) (= (x6664 x2015) (x2264 x2015))))
(assert (x5765 x7958))
(assert (= (and x6491 x7044) x3153))
(assert (= x1252 (and x275 (not x5420))))
(assert (x9173 x6760))
(assert (= (and (not x1564) x5267) x41))
(assert (= (x6664 989455977) (x2264 989455977)))
(assert (= x3931 x261))
(assert (x5765 x8048))
(assert (= (+ 2 (x3373 x66)) (x3373 (x4000 x66 2))))
(assert (= (and (not x3042) x7301) x6067))
(assert (x9173 x8206))
(assert (x9173 x6889))
(assert (x9173 x3601))
(assert (= (+ (x3373 x1985) 1) (x3373 (x4000 x1985 1))))
(assert (=> (>= 10000 x8210) (= (x6664 x8210) (x2264 x8210))))
(assert (x9173 x698))
(assert (x9173 x5201))
(assert (x9173 x6656))
(assert (= x143 (and x7805 x303)))
(assert (= (x3373 (x4000 x1491 1)) (+ 1 (x3373 x1491))))
(assert (= (x3373 (x4000 x68 1)) (+ 1 (x3373 x68))))
(assert (= x6524 (and x6887 (not x1624))))
(assert (x9173 x3306))
(assert (= x6981 (and x1255 x836)))
(assert (x9173 x922))
(assert (= x271 (and x1152 x3403)))
(assert (= (x6664 178855970) (x2264 178855970)))
(assert (= x7336 (or (and x2509 x718) x3476 x5406 (and x7532 x2417) (and (not x472) x9009) (and x3692 x6776) x5989 (and x2482 x2114) (and x6169 (not x6157)))))
(assert (x9173 x574))
(assert (x5765 x799))
(assert (= (and x9216 x4460) x6534))
(assert (= (x3373 (x2264 x3408)) x3408))
(assert (= x5935 (and x7166 (not x8517))))
(assert (x8398 x2234))
(assert (x9173 x1659))
(assert (= x1482 (and x5426 x1934)))
(assert (x5765 x3408))
(assert (= (x3373 (x6664 242558722)) 242558722))
(assert (x9173 x8653))
(assert (x9173 x4643))
(assert (x9173 x8048))
(assert (x9173 x6667))
(assert (= x8710 (and x9050 x8425)))
(assert (x9173 x8114))
(assert (x9173 x338))
(assert (= x680 (and x1541 x8406)))
(assert (x9173 x579))
(assert (= x6347 (=> (and (or (and (not x7449) (= (x5783 (x2264 x8741) x1580 0) x7586)) (and x7449 (= x4204 (x4000 x1580 2)))) (= x7449 (= 0 x8741))) x2113)))
(assert (= x7583 (=> (= (> x786 0) x605) (and (=> (and (and (= x8301 (= x4396 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1) (>= x1 0)) x605) (and (=> x8301 x1421) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6790) (= (x4363 x2283) x6790) (= (x5783 (x2264 x4396) x4176 0) x4597) (= (x4000 x4597 2) x2283) (<= 0 x6790) (= (= x6790 0) x1929)) (not x8301)) (and (=> (not x1929) x1022) (=> (and (and (or (and (and (= (not x1843) x9146) (= (x4000 x6553 2) x3825) (= (x4363 x3825) x7820) (= (< x7820 x786) x1843) (>= x7820 0) (= x6553 (x5783 (x2264 x6696) x4176 0)) (<= x7820 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x4489) (and (= x9146 x4489) (not x4489))) (and (> 1461501637330902918203684832716283019655932542976 x6696) (= x6696 (x5131 x7733)) (= x4489 (ite (< 0 x1) (not (= 0 x6696)) (< 0 x1))) (<= x6696 1461501637330902918203684832716283019655932542975) (= x7733 (x4000 x4176 1)) (>= x6696 0))) x1929) x5533))))) (=> (and (and (= x5735 x3851) (= x2186 x8608)) (not x605)) x513)))))
(assert (x9173 x8009))
(assert (x5765 x2189))
(assert (x9173 x2163))
(assert (x9173 x2302))
(assert (x2631 x930))
(assert (x9173 x2719))
(assert (x9173 x439))
(assert (= x6685 (=> (= (= x4940 0) x3300) (and (=> (and (= x8223 (or (and (= (<= x5661 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x5661)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5661))) (not x3300)) (and (=> (and x8223 (= true x6661)) x6209) (=> (and (and (= x3271 (= x4055 0)) (= x4055 (x7222 x1930))) (not x8223)) (and (=> (not x3271) x8633) (=> x3271 x925))))) (=> x3300 x8633)))))
(assert (x9173 x8336))
(assert (x9173 x2897))
(assert (x9173 x6621))
(assert (x9173 x931))
(assert (= (and x2093 x3334) x6722))
(assert (x9173 x5691))
(assert (x9173 x5250))
(assert (= (=> (= x6878 (= 0 x2330)) (and (=> (and (= x8656 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3102) (and (> 32 x3102) (= (<= x3102 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not x6878)) (and (=> (and (not x8656) (= x4355 1)) x2895) (=> x8656 x3066))) (=> x6878 x3066))) x3008))
(assert (x9173 x6373))
(assert (= (=> (and (= x4144 x2330) (= x3102 x993)) x2481) x80))
(assert (x9173 x7919))
(assert (= x1972 (and (not x2961) x4815)))
(assert (= (and x3806 x445) x8693))
(assert (x9173 x3703))
(assert (x9173 x9145))
(assert (= x1561 (and x8305 (not x8858))))
(assert (=> (<= x6795 10000) (= (x2264 x6795) (x6664 x6795))))
(assert (= x1195 (and x7433 x6783)))
(assert (x9173 x6333))
(assert (= x299 (and x8963 x4387)))
(assert (x9173 x6894))
(assert (= (and x7900 x5116) x5484))
(assert (x9173 x6162))
(assert (x9173 x5768))
(assert (x9173 x6469))
(assert (= x7131 (or x6061 x2916)))
(assert (= (and x2456 (not x901)) x2873))
(assert (= (and x2830 x6150) x4663))
(assert (= x8147 (and x8353 (not x1900))))
(assert (x9173 x4192))
(assert (= (and x6590 (not x3691)) x1557))
(assert (=> (<= x4129 10000) (= (x6664 x4129) (x2264 x4129))))
(assert (x9173 x792))
(assert (= x7428 (=> (and (= x6097 x3389) (= x4809 (x3912 x765)) (= x45 (x910 (+ 32 x9202))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5721) (>= x5721 0) (= x2702 x3110) (= x2295 (x1133 x5522)) (>= x4809 0) (<= x4809 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4000 x765 1) x490) (= x765 (x4000 x5522 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2295) (<= 0 x2295) (= (x8959 x490) x5721)) x1036)))
(assert (x9173 x1878))
(assert (= x8444 (or x6191 x6004 x2009 x1037 x8124 x8558)))
(assert (x9173 x4739))
(assert (= 547091486 (x3373 (x6664 547091486))))
(assert (x9173 x1507))
(assert (= x7502 (and x929 x1896)))
(assert (x9173 x7494))
(assert (= x1918 (and x57 (not x7661))))
(assert (x9173 x1151))
(assert (= x1290 (and x1559 x3447)))
(assert (= x7841 (or x6275 x300)))
(assert (x9173 x1857))
(assert (= x7750 (and (=> (and (not x4136) (and (= x8932 x5168) (= 0 x417))) x5305) (=> (and x4136 (and (or (and (and (<= 0 x6282) (= (x392 x2906) x6282) (= x8821 (x5783 (x2264 x1850) x1942 0)) (<= x6282 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3423 (not x3686)) (= (< x6282 x1191) x3686) (= (x4000 x8821 2) x2906)) x9148) (and (not x9148) (= x3423 x9148))) (and (= x9148 (ite (> x1 1) (not (= x1850 0)) (< 1 x1))) (= x2834 (x5783 (x2264 x5168) x1942 0)) (> 1461501637330902918203684832716283019655932542976 x1850) (>= x1850 0) (= x1850 (x6823 x5654)) (<= x1850 1461501637330902918203684832716283019655932542975) (= x5654 (x4000 x2834 1))))) x2707))))
(assert (= (and x736 x8064) x6401))
(assert (x9173 x570))
(assert (x9173 x5665))
(assert (= (x3373 (x2264 x6343)) x6343))
(assert (= x3942 (and (not x8923) x8920)))
(assert (= (and x3230 x6257) x4407))
(assert (x9173 x7522))
(assert (x9173 x6417))
(assert (x9173 x2061))
(assert (= (and x8492 x5285) x9073))
(assert (= x8661 (=> (and (= x7571 x8735) (= 0 x3033)) x173)))
(assert (= (and x8712 x1902) x7045))
(assert (x9173 x699))
(assert (= (x6664 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x2264 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x1363 (and x8675 (not x441))))
(assert (= (=> (and (= x5053 x2750) (= x1193 x5274)) x585) x1979))
(assert (= (and x4709 (not x819)) x291))
(assert (x9173 x8282))
(assert (x9173 x4529))
(assert (= (x3373 (x2264 x4668)) x4668))
(assert (= x8121 (and x1596 x7944)))
(assert (x9173 x8638))
(assert (= x5658 x3976))
(assert (x5765 x3956))
(assert (= x3198 (and x8437 (not x3151))))
(assert (x9173 x8006))
(assert (x9173 x3591))
(assert (= x4287 (and x6101 x7883)))
(assert (= (x3373 (x2264 x6059)) x6059))
(assert (x9173 x8106))
(assert (x9173 x8108))
(assert (= (and x1938 x924) x5231))
(assert (x9173 x5465))
(assert (= x2759 (=> (and (= x8851 x6492) (= x8736 x7390)) x4908)))
(assert (x9173 x3654))
(assert (x9173 x5583))
(assert (= (x3373 (x4000 x9116 2)) (+ (x3373 x9116) 2)))
(assert (x9173 x795))
(assert (x5765 x423))
(assert (= (x3373 (x4000 x1640 2)) (+ (x3373 x1640) 2)))
(assert (= x3931 x7146))
(assert (x9173 x7221))
(assert (= (and x6394 (not x7837)) x668))
(assert (x9173 x2001))
(assert (= x4438 (and x7243 (not x4737))))
(assert (= x8406 (or x5240 x2724)))
(assert (= x801 (and x2989 x5327)))
(assert (= (or x9030 x2073) x8302))
(assert (x9173 x1993))
(assert (x9173 x3297))
(assert (x9173 x1949))
(assert (= (and x6458 (not x7620)) x2154))
(assert (x9173 x3668))
(assert (= x1080 (=> (and (or x2258 (not x2258)) (= x2258 (= x4912 0))) x4855)))
(assert (x9173 x7347))
(assert (= (and (not x3492) x8429) x5635))
(assert (= x5377 (x3373 (x2264 x5377))))
(assert (= (and x4653 x6816) x3229))
(assert (= x3051 (x3373 (x2264 x3051))))
(assert (x9173 x821))
(assert (x9173 x9220))
(assert (= (=> (and (= x4059 x755) (= x1279 x8724)) x3991) x4656))
(assert (x2631 x1473))
(assert (= (and x3420 x276) x5500))
(assert (= (=> (and (= x1869 x1805) (= x310 x384)) x4420) x3961))
(assert (= (and x7237 (not x3228)) x4534))
(assert (= x6383 (=> (and (= x1957 x1157) (= x7219 x1068) (= x7874 x6316) (= x8598 x4912) (= x1612 x5367)) x1080)))
(assert (= x6431 (and x3365 x2377)))
(assert (= 1865448899 (x3373 (x6664 1865448899))))
(assert (x9173 x8033))
(assert (x9173 x1395))
(assert (x9173 x3131))
(assert (x9173 x3102))
(assert (x5765 x3641))
(assert (x9173 x4247))
(assert (= (and x6616 x1887) x149))
(assert (x9173 x6958))
(assert (= x4788 (and x1674 (not x1641))))
(assert (x9173 x1053))
(assert (x9173 x8269))
(assert (= x1983 (and x3342 (not x9148))))
(assert (= x5651 (and (not x3209) x4537)))
(assert (x9173 x8319))
(assert (x9173 x5883))
(assert (= (=> (and (= x6242 (= x4059 0)) (or (not x6242) x6242)) x2603) x3991))
(assert (= (x3373 (x4000 x4176 1)) (+ (x3373 x4176) 1)))
(assert (x5765 x4494))
(assert (=> (>= 10000 x5896) (= (x6664 x5896) (x2264 x5896))))
(assert (x9173 x2313))
(assert (= (=> (and (= (x650 x3156) x6120) (= x3156 (x5783 (x2264 x560) (x6664 161) 0)) (= (> x6120 0) x8022)) (and (=> (and (= x6564 (x2563 (- x6120 1))) x8022) x6498) (=> (not x8022) x1963))) x7566))
(assert (x9173 x416))
(assert (= x555 (and x7768 x4453)))
(assert (x9173 x4402))
(assert (= x1219 (or x8090 x7098)))
(assert (x9173 x150))
(assert (x9173 x8658))
(assert (x9173 x6324))
(assert (x9173 x3564))
(assert (= (and x4799 (not x8597)) x5858))
(assert (x9173 x5209))
(assert (= x5130 (and x714 (not x3763))))
(assert (=> (<= x457 10000) (= (x6664 x457) (x2264 x457))))
(assert (= (and (not x1387) x7198) x8306))
(assert (= x6177 (and (=> (and (not x7660) (and (= x8373 1) (= x6449 x2633))) x3926) (=> (and x7660 (and (= x6517 x4176) (= x2633 x3539) (= x3881 x7292))) x4987))))
(assert (= (+ 2 (x3373 x3947)) (x3373 (x4000 x3947 2))))
(assert (= x3887 (and x4332 x9208)))
(assert (= (+ (x3373 x7032) 2) (x3373 (x4000 x7032 2))))
(assert (= (x3373 (x4000 x7724 1)) (+ 1 (x3373 x7724))))
(assert (x9173 x3647))
(assert (x9173 x5482))
(assert (x9173 x3020))
(assert (x9173 x9140))
(assert (= x1135 (and (not x3843) x6200)))
(assert (x9173 x2763))
(assert (=> (<= x6939 10000) (= (x6664 x6939) (x2264 x6939))))
(assert (= (and (not x508) x3491) x8595))
(assert (= (+ (x3373 x724) 1) (x3373 (x4000 x724 1))))
(assert (=> (<= x5362 10000) (= (x6664 x5362) (x2264 x5362))))
(assert (= (and x5780 (not x4733)) x5946))
(assert (x9173 x5645))
(assert (x9173 x8030))
(assert (= x3725 (x3373 (x2264 x3725))))
(assert (= (=> (and (= x3629 x391) (= x4648 x4698)) x6977) x7993))
(assert (= x4270 (and x4737 x7243)))
(assert (x9173 x3586))
(assert (= (and x3206 (not x5569)) x7786))
(assert (x9173 x7330))
(assert (= x7559 (and (not x4191) x8123)))
(assert (= x5406 (and x1634 x5265)))
(assert (x9173 x1253))
(assert (= (and (not x4264) x818) x157))
(assert (= (x3373 (x4000 x5620 1)) (+ 1 (x3373 x5620))))
(assert (x9173 x6695))
(assert (=> (<= x9232 10000) (= (x6664 x9232) (x2264 x9232))))
(assert (= (and x7893 x7213) x1160))
(assert (x9173 x4195))
(assert (x9173 x8622))
(assert (= x5412 (and x7261 x7608)))
(assert (x9173 x6608))
(assert (= (and (not x1798) x6724) x3432))
(assert (x5765 x3881))
(assert (x9173 x1749))
(assert (= (and (not x6174) x7593) x324))
(assert (= 157198259 (x3373 (x6664 157198259))))
(assert (x9173 x2499))
(assert (= (or x7384 x7772) x2160))
(assert (x9173 x8440))
(assert (x9173 x2156))
(assert (= x3932 (and (not x1804) x7486)))
(assert (= x6130 (and x2327 x4043)))
(assert (= x1636 (and x2166 x2990)))
(assert (= (=> (and (= x5485 (ite (< x417 x1) (not (= x8932 0)) (< x417 x1))) (or (and x5485 (and (and (>= 1461501637330902918203684832716283019655932542975 x4277) (= (> x7494 0) x2205) (= (x1005 x2419) x4277) (< x4277 1461501637330902918203684832716283019655932542976) (= (x2563 (- x8932 x4277)) x7494) (>= x4277 0)) (or (and (and (>= x4427 0) (= x4249 (x5783 (x2264 x8932) x1942 0)) (= x8554 x8932) (< x4427 1461501637330902918203684832716283019655932542976) (= (x5783 (x2264 x4427) x1942 0) x1459) (= x871 (x4000 x1459 1)) (= x7824 (x5783 (x2264 x730) x1942 0)) (= x4427 (x779 x3412)) (= (x4000 x288 1) x3965) (= (x5783 (x2264 x8932) x1942 0) x3412) (>= 1461501637330902918203684832716283019655932542975 x4427) (= x288 (x4000 x7824 1)) (= (x910 (+ 96 x2739)) x983) (= x983 x7245)) x2205) (and (and (= x8003 (x5783 (x2264 x730) x1942 0)) (= x8932 x8554) (= (x4000 x498 1) x5449) (= x936 (x5783 (x2264 x8932) x1942 0)) (= x210 x7245) (= x210 (x910 (+ 96 x2739))) (= x498 (x4000 x8003 1))) (not x2205))))) (and (and (and (<= x4792 1461501637330902918203684832716283019655932542975) (= x3592 (= 0 x4792)) (<= 0 x4792) (> 1461501637330902918203684832716283019655932542976 x4792) (= (x1005 x2419) x4792)) (or (and (and (= x682 (x4000 x2419 1)) (= x8554 x730) (= x1206 (x4000 x1839 1)) (= x7088 (x4000 x1206 1)) (= x6034 (x910 (+ x2739 96))) (= x6034 x7245) (= (x5783 (x2264 x730) x1942 0) x1839)) x3592) (and (and (= x7675 x7245) (= x4895 (x4000 x7491 1)) (= x7675 (x910 (+ 96 x2739))) (>= x6164 0) (= x6164 (x3263 x2810)) (< x6164 1461501637330902918203684832716283019655932542976) (= (x4000 x2533 1) x7491) (<= x6164 1461501637330902918203684832716283019655932542975) (= x8554 x6164) (= x8682 (x4000 x4907 1)) (= x2810 (x4000 x2419 1)) (= (x5783 (x2264 x730) x1942 0) x2533) (= (x5783 (x2264 x6164) x1942 0) x4907)) (not x3592)))) (not x5485)))) x8880) x5305))
(assert (x9173 x6598))
(assert (= x675 (=> (and (or (not x6378) x6378) (= x6378 (= 0 x4074))) x3905)))
(assert (x9173 x8321))
(assert (= x1099 (or x2770 x789)))
(assert (= (=> (and (or (not x5718) x5718) (= x5718 (= 0 x920))) x5275) x5567))
(assert (x9173 x1602))
(assert (x9173 x7602))
(assert (= (x2264 1865448899) (x6664 1865448899)))
(assert (= (and (not x3075) x2454) x4814))
(assert (= x1111 (and x6592 x1091)))
(assert (= (and (not x1828) x5005) x2879))
(assert (x9173 x8649))
(assert (x9173 x1353))
(assert (x5699 x6614 x2402))
(assert (= (or x8219 x5696) x6782))
(assert (= x5662 (and x3025 x3309)))
(assert (x9173 x7592))
(assert (= (and x6891 (not x3288)) x3555))
(assert (= x4904 (and x7320 x2216)))
(assert (x9173 x2731))
(assert (= (x3373 (x2264 x444)) x444))
(assert (= (=> (= (= 0 x1800) x7223) (and (=> (and (= x2359 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x156) true) (< x156 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x156))) (not x7223)) (and (=> (and (and (= x3238 x3199) (= 1 x6291) (= x8894 x6505)) (not x2359)) x633) (=> (and (= x8894 x4577) x2359) x548))) (=> (and x7223 (= x8894 x4577)) x548))) x9023))
(assert (x9173 x2036))
(assert (= (+ (x3373 x288) 1) (x3373 (x4000 x288 1))))
(assert (= x1613 (and x9235 x5169)))
(assert (x9173 x577))
(assert (x9173 x1758))
(assert (= (and x3478 x6936) x2916))
(assert (= x5489 (and (not x1101) x8742)))
(assert (= x7273 (and x1518 (not x5485))))
(assert (= (x6664 1461501637330902918203684832716283019655932542976) (x2264 1461501637330902918203684832716283019655932542976)))
(assert (= x3342 (and x8573 x4136)))
(assert (x9173 x348))
(assert (x9173 x2172))
(assert (= x6855 (and x3567 x5412)))
(assert (x9173 x695))
(assert (= (x6664 599290589) (x2264 599290589)))
(assert (x5765 x1326))
(assert (= (and x2385 x661) x775))
(assert (= x7618 (and x6247 (not x2827))))
(assert (= x8422 (and (not x6406) x2500)))
(assert (x9173 x2178))
(assert (= (and x8350 x375) x6439))
(assert (= x5835 (and x421 x8560)))
(assert (= (and x3784 x4813) x97))
(assert (x9173 x1467))
(assert (x9173 x8015))
(assert (x9173 x5896))
(assert (x9173 x4705))
(assert (x9173 x1939))
(assert (x9173 x4714))
(assert (x9173 x3834))
(assert (x9173 x2083))
(assert (x2631 x990))
(assert (x9173 x471))
(assert (= x4732 (or x7754 x1560)))
(assert (= (and x9054 x1566) x4341))
(assert (= x5114 (and x3831 x204)))
(assert (= (or x904 x9193) x3354))
(assert (x9173 x735))
(assert (x9173 x7143))
(assert (x9173 x3389))
(assert (= (or x8041 x7381) x7197))
(assert (= x448 (and x6538 (not x1044))))
(assert (x9173 x3149))
(assert (= (and x4311 x8382) x919))
(assert (= (x2264 2023533118) (x6664 2023533118)))
(assert (x9173 x8401))
(assert (x9173 x5579))
(assert (x5765 x8423))
(assert (= (and x8681 x8156) x2579))
(assert (x9173 x7307))
(assert (= (and x7938 x1265) x5160))
(assert (= (or x7995 x3043) x12))
(assert (x9173 x6519))
(assert (= (+ (x3373 x7760) 1) (x3373 (x4000 x7760 1))))
(assert (x9173 x4241))
(assert (= x7213 (and x7067 x7632)))
(assert (= x4167 (and x2105 x7676)))
(assert (= (or x3892 x5915) x3576))
(assert (= x1255 (and x7705 (not x4590))))
(assert (= x6394 (and x1923 (not x5504))))
(assert (x9173 x4645))
(assert (= x3057 (and x2010 (not x5702))))
(assert (= (and (not x6663) x3464) x2108))
(assert (= (and (not x4790) x8274) x2978))
(assert (x9173 x7101))
(assert (= x869 (or x1119 x9005)))
(assert (= (+ 2 (x3373 x1167)) (x3373 (x4000 x1167 2))))
(assert (x9173 x1069))
(assert (= (or x2038 x892 x2704 x5726 x7902 x7547) x1119))
(assert (x9173 x2594))
(assert (= x7144 (and (not x5177) x3671)))
(assert (= x7477 (and x6569 (not x4328))))
(assert (= x3265 (x3373 (x2264 x3265))))
(assert (x9173 x8654))
(assert (x9173 x383))
(assert (= (and x5451 x1694) x5025))
(assert (= (or x2988 x8526 x7718 x4042) x2247))
(assert (=> (<= x1483 10000) (= (x6664 x1483) (x2264 x1483))))
(assert (= x5726 (and x8696 x8457)))
(assert (= (=> (and (= x3742 (x4000 x9192 1)) (= x9192 (x4000 x1154 1)) (= x4396 x3358) (= x767 x4593) (= x1154 (x5783 (x2264 x4396) x1404 0))) x649) x6376))
(assert (x9173 x6728))
(assert (x9173 x8694))
(assert (= (and x4784 x2525) x4877))
(assert (= x3040 (and x4388 (not x4284))))
(assert (x5765 x8297))
(assert (= (and (not x8270) x1665) x4133))
(assert (= x6200 (and x3274 x6577)))
(assert (x9173 x8002))
(assert (x9173 x5056))
(assert (=> (>= 10000 x730) (= (x2264 x730) (x6664 x730))))
(assert (x9173 x3714))
(assert (= x1707 (and x1557 (not x509))))
(assert (x9173 x6396))
(assert (= x1425 (and x8303 x2047)))
(assert (x9173 x3058))
(assert (x9173 x1922))
(assert (= (=> (and (= x7294 x7973) (= x8975 x7503)) x4117) x600))
(assert (= (and x7790 x190) x6924))
(assert (x9173 x4531))
(assert (x2631 x403))
(assert (x9173 x4401))
(assert (x9173 x2518))
(assert (= x8798 (and x2428 x8613)))
(assert (x9173 x5374))
(assert (= x5257 (=> (and (= 0 x2444) (= x1732 x5123)) x7723)))
(assert (= x4365 (and x5673 x1789)))
(assert (x9173 x8924))
(assert (x9173 x4660))
(assert (x9173 x7728))
(assert (x5765 x2398))
(assert (=> (>= 10000 x8174) (= (x6664 x8174) (x2264 x8174))))
(assert (x9173 x4044))
(assert (x9173 x761))
(assert (= (x3373 (x2264 x31)) x31))
(assert (x5699 x9226 x6874))
(assert (= x1230 (and x6329 x350)))
(assert (x9173 x7110))
(assert (= (or x5515 x7905) x5509))
(assert (= x2764 (and x2591 (not x5748))))
(assert (x2631 x7882))
(assert (x9173 x1303))
(assert (= x3950 (and (not x8671) x3898)))
(assert (= (and x7124 x6646) x6771))
(assert (= (x2264 2929553584) (x6664 2929553584)))
(assert (x9173 x4243))
(assert (= (+ (x3373 x2505) 1) (x3373 (x4000 x2505 1))))
(assert (x9173 x592))
(assert (x9173 x4959))
(assert (= x5287 (and (not x1271) x3816)))
(assert (x9173 x629))
(assert (x9173 x4939))
(assert (= (or x1447 x2201) x8370))
(assert (= (or x2853 x4972 x6839 x5922) x4116))
(assert (= x2714 (and x9109 x362)))
(assert (x9173 x6172))
(assert (= (x6664 1901074598) (x2264 1901074598)))
(assert (x9173 x7710))
(assert (x9173 x6098))
(assert (= (or x7001 x2727) x5499))
(assert (x9173 x6291))
(assert (= x7240 (and (not x7215) x952)))
(assert (= x2725 (or x7226 x2493)))
(assert (x9173 x884))
(assert (= (and x2008 x1030) x9142))
(assert (= (or x5165 x8886) x325))
(assert (= x43 (and (not x8769) x7795)))
(assert (= x8994 (and x2597 (not x6474))))
(assert (x9173 x3741))
(assert (x9173 x8888))
(assert (= x5096 (and x264 x8545)))
(assert (x9173 x512))
(assert (= (+ 1 (x3373 x3902)) (x3373 (x4000 x3902 1))))
(assert (= (and (not x5401) x5993) x6904))
(assert (x9173 x1287))
(assert (= (x3373 (x2264 x6598)) x6598))
(assert (x9173 x8761))
(assert (= (and x6861 x5153) x5454))
(assert (= (=> (and (= x7444 (< 0 x8863)) (= (x6748 x5334 x1646) x8863) (= x4542 (ite (> x3542 31) 1 0)) (= x5334 (x2812 x4075 x3655)) (= x1991 (ite (= x7099 1) 1 0)) (= x4075 (x6748 x1991 x4542)) (= x3655 (ite (= x3542 0) 1 0))) (and (=> (and (and (or (and x2848 (and (< x3096 2929553584) (= x4002 4) (= x9083 x4002) (= x1165 32) (= (x6844 (x2264 x5148)) x5360) (<= 0 x2207) (= x3096 2858086653) (> x5360 0) (not (< x3096 2691771752)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x8778) (not (> 2217467699 x3096)) (not (= x3096 2796547477)) (<= x2207 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x3096 2835717307)) (not (= 2691771752 x3096)) (not (> 4 x4002)) (= x8070 1))) (and (and (= x8080 (= x3605 x3881)) (or (and x8080 (and (not (> 4 x7674)) (= x5076 2858086653) (not (= x5076 2835717307)) (= x7674 x9083) (= x8070 1) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x7972) (not (> 2217467699 x5076)) (= x1165 32) (< x5076 2929553584) (>= x8295 0) (not (> 2691771752 x5076)) (not (= 2691771752 x5076)) (= x3446 (x6844 (x2264 x3605))) (not (= x5076 2796547477)) (> x3446 0) (= x7674 4) (<= x8295 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (and (and x7037 (and (= x6791 2858086653) (not (= 2835717307 x6791)) (= x1524 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= (x6844 (x2264 x1326)) x647) (> 2929553584 x6791) (>= x8388 0) (= x9083 x4259) (not (> 2691771752 x6791)) (= x8070 1) (= 4 x4259) (not (> 4 x4259)) (not (= 2796547477 x6791)) (not (> 2217467699 x6791)) (not (= x6791 2691771752)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8388) (< 0 x647) (= 32 x1165))) (= x7037 (= x3881 x1326))) (not x8080)))) (not x2848))) (and (= (= x3881 x5148) x2848) (= (x910 (+ 288 x7435)) x5743) (= 4 x9083))) x7444) x9183) (=> (not x7444) x8633))) x8843))
(assert (= x8305 (and (not x9035) x289)))
(assert (x9173 x5013))
(assert (= (and x8434 x2791) x6899))
(assert (x9173 x4067))
(assert (= (and x8140 x1285) x3212))
(assert (x9173 x371))
(assert (= x8721 (and x7446 x1242)))
(assert (= (x3373 (x2264 x8122)) x8122))
(assert (= x6426 (and (not x6642) x6979)))
(assert (x9173 x1239))
(assert (x9173 x2090))
(assert (x9173 x3179))
(assert (= (and x1776 (not x6647)) x2847))
(assert (=> (<= x1398 10000) (= (x2264 x1398) (x6664 x1398))))
(assert (x9173 x8619))
(assert (x9173 x7227))
(assert (x9173 x1337))
(assert (= (or x3510 x3826) x1238))
(assert (= (and x8764 (not x6762)) x5118))
(assert (= (and x1170 (not x2022)) x2030))
(assert (= (and x5466 (not x6788)) x5430))
(assert (= x3724 (and x6112 x530)))
(assert (x5765 x3539))
(assert (x9173 x7875))
(assert (= (and x4215 (not x772)) x8334))
(assert (x9173 x1166))
(assert (= (and (not x4991) x6848) x2835))
(assert (= 1901074598 (x3373 (x6664 1901074598))))
(assert (= (and (not x342) x2744) x3525))
(assert (x9173 x1824))
(assert (x9173 x393))
(assert (= (and x2378 x1692) x2461))
(assert (x9173 x8898))
(assert (x9173 x3858))
(assert (x9173 x5367))
(assert (= (x3373 (x6664 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x9173 x5252))
(assert (x9173 x86))
(assert (=> (<= x9124 10000) (= (x2264 x9124) (x6664 x9124))))
(assert (x9173 x514))
(assert (x9173 x2475))
(assert (= (and (not x2114) x2482) x1776))
(assert (x9173 x3565))
(assert (x9173 x4055))
(assert (x9173 x7812))
(assert (x9173 x6413))
(assert (= x2813 (=> (and (= x1751 x1303) (= x5646 0)) x2670)))
(assert (x9173 x3717))
(assert (x9173 x7800))
(assert (= x4129 (x3373 (x2264 x4129))))
(assert (x1593 x4700 x3336))
(assert (= (x2264 398450620) (x6664 398450620)))
(assert (= (x3373 (x2264 x888)) x888))
(assert (x2631 x3969))
(assert (x5765 x7291))
(assert (x5765 x5355))
(assert (= x2038 (and (not x4688) x4697)))
(assert (x9173 x8569))
(assert (x9173 x6145))
(assert (= x5560 (=> (and (or (not x3748) x3748) (= (= x1915 0) x3748)) x4299)))
(assert (x9173 x3225))
(assert (x9173 x5098))
(assert (x9173 x4593))
(assert (x9173 x4344))
(assert (x9173 x319))
(assert (x9173 x5375))
(assert (= x7333 (or x8763 (and (not x2679) x5586) x97 (and (not x4532) x2607) (and x6744 x3775) (and x7536 x6384))))
(assert (= x1493 (x3373 (x2264 x1493))))
(assert (= x4601 (and x2192 x5476)))
(assert (= (+ 1 (x3373 x8912)) (x3373 (x4000 x8912 1))))
(assert (x9173 x2188))
(assert (x9173 x1556))
(assert (= (or x5356 x8936) x7478))
(assert (x9173 x2207))
(assert (=> (>= 10000 x1885) (= (x6664 x1885) (x2264 x1885))))
(assert (= x22 (x3373 (x2264 x22))))
(assert (= (or x711 x2148) x5884))
(assert (= (and (not x5192) x8698) x2438))
(assert (x9173 x8447))
(assert (= (x3373 (x2264 x2398)) x2398))
(assert (x5765 x1493))
(assert (= (or x1205 x3396) x3261))
(assert (= x4429 (and x3091 x65)))
(assert (= x5631 (not (and (>= x8510 0) (< x8510 1461501637330902918203684832716283019655932542976) (= x8510 (x6184 x3485)) (= (x4000 x399 1) x3485) (= (x5783 (x2264 x3325) x6784 0) x399) (>= 1461501637330902918203684832716283019655932542975 x8510)))))
(assert (= (+ (x3373 x6864) 1) (x3373 (x4000 x6864 1))))
(assert (= (and x7002 x7312) x3344))
(assert (x9173 x355))
(assert (x9173 x5014))
(assert (x5765 x1885))
(assert (= (and (not x2969) x8385) x8623))
(assert (= (=> (and (= x5869 x2330) (= x3102 x3985)) x2481) x8875))
(assert (x8398 x3336))
(assert (= x3653 (and x6767 x6578)))
(assert (= (and (not x3775) x6744) x2607))
(assert (x9173 x4844))
(assert (= (or x4534 x8167) x571))
(assert (x9173 x3189))
(assert (= (and x7253 x5093) x7341))
(assert (= (and x4239 (not x2852)) x7208))
(assert (x9173 x5320))
(assert (x9173 x6344))
(assert (x9173 x3498))
(assert (x9173 x5073))
(assert (x9173 x9047))
(assert (x9173 x6606))
(assert (x9173 x8369))
(assert (=> (<= x5827 10000) (= (x6664 x5827) (x2264 x5827))))
(assert (= x860 (or x3573 x7721 x2567 x1848)))
(assert (x9173 x5711))
(assert (x9173 x7528))
(assert (= (and x1618 x2371) x5764))
(assert (= (and x1762 (not x4202)) x1362))
(assert (x9173 x1300))
(assert (= (x6664 1523576871) (x2264 1523576871)))
(assert (x9173 x2697))
(assert (= x6298 (x3373 (x2264 x6298))))
(assert (= x3474 (and x1730 x1331)))
(assert (x9173 x4169))
(assert (x2631 x6457))
(assert (= x7246 (and x4496 x5764)))
(assert (x9173 x8724))
(assert (= (and x4743 x4189) x3538))
(assert (x9173 x1128))
(assert (= x4758 (or x5663 x6877 (and x1926 x7241) (and x487 x3405) (and (not x1513) x5598) (and x6128 (not x8468)))))
(assert (x9173 x7496))
(assert (x5699 x2184 x4725))
(assert (x9173 x1932))
(assert (x9173 x4843))
(assert (x9173 x2367))
(assert (x9173 x4002))
(assert (x9173 x5354))
(assert (x9173 x2335))
(assert (= (x3373 (x4000 x6358 1)) (+ (x3373 x6358) 1)))
(assert (= (or x4926 x8302 x1394) x5655))
(assert (x9173 x6049))
(assert (= x8124 (and x3451 x6181)))
(assert (x9173 x948))
(assert (x5765 x6))
(assert (= x6707 (and x6244 x2333)))
(assert (x9173 x6755))
(assert (x9173 x8561))
(assert (x9173 x1094))
(assert (x9173 x8423))
(assert (x5765 x8153))
(assert (x9173 x3780))
(assert (x9173 x7263))
(assert (= (or (and x1896 (not x929)) x1581 (and x128 x7502) x5549 (and x3726 (not x8076)) (and x6729 x7136)) x6531))
(assert (x5765 x9124))
(assert (= (or x652 x4004) x3919))
(assert (= (and (not x4950) x5163) x2072))
(assert (x5765 x730))
(assert (x9173 x7164))
(assert (= x672 (=> (and (= 0 x2859) (= x7288 x6926)) x4079)))
(assert (x5765 x3725))
(assert (x9173 x6164))
(assert (= (=> (and (= x7649 x384) (= x1805 x4086)) x4420) x6581))
(assert (x9173 x5456))
(assert (= (+ (x3373 x3870) 1) (x3373 (x4000 x3870 1))))
(assert (x8398 x3655))
(assert (x9173 x5123))
(assert (x9173 x8489))
(assert (= x2842 (=> (and (= x7361 (= x5375 0)) (<= 0 x5375) (>= 1461501637330902918203684832716283019655932542975 x5375) (> 1461501637330902918203684832716283019655932542976 x5375)) (and (=> (and (not x7361) (and (= (= 0 x4087) x7169) (< x5375 1461501637330902918203684832716283019655932542976) (<= x5375 1461501637330902918203684832716283019655932542975) (= (x6844 (x2264 x5375)) x4087) (= (x910 (+ 32 x5208)) x3246) (<= 0 x5375) (= (x910 (+ 4 x7212)) x5208) (= x6965 (x910 (+ 32 x3246))))) (and (=> x7169 x8941) (=> (and (< x8563 4294967296) (not x7169)) x7863))) (=> x7361 x7863)))))
(assert (x9173 x2627))
(assert (x9173 x6002))
(assert (x9173 x3634))
(assert (x9173 x5176))
(assert (x9173 x8564))
(assert (= (and x2900 (not x130)) x3505))
(assert (= (and x5101 (not x6292)) x7923))
(assert (x9173 x5837))
(assert (= x1924 (and x4579 (not x8149))))
(assert (=> (<= x1993 10000) (= (x2264 x1993) (x6664 x1993))))
(assert (= (x3373 (x4000 x4245 2)) (+ (x3373 x4245) 2)))
(assert (x9173 x7289))
(assert (=> (<= x2756 10000) (= (x2264 x2756) (x6664 x2756))))
(assert (x9173 x566))
(assert (x5765 x3498))
(assert (= (and x4438 x766) x5597))
(assert (= (and (not x6459) x3656) x7793))
(assert (x9173 x8819))
(assert (x9173 x832))
(assert (x9173 x2792))
(assert (= x2196 (and x530 (not x6112))))
(assert (= (=> (and (= (x4000 x1038 1) x1104) (= (x5783 (x2264 x2254) x1580 0) x3793) (= x1038 (x4000 x3793 1))) x2953) x2113))
(assert (= x1439 (or x5489 x1889 x6037 x595)))
(assert (= x7112 (and (not x3567) x5412)))
(assert (= x4130 (and (not x5777) x1512)))
(assert (= (x3373 (x6664 44970383829727661923261016617897238973146650624978361361029103362720544063488)) 44970383829727661923261016617897238973146650624978361361029103362720544063488))
(assert (= x4642 (and (not x3935) x8348)))
(assert (= x5442 (and (not x3099) x5635)))
(assert (= (x3373 (x4000 x2533 1)) (+ (x3373 x2533) 1)))
(assert (= (+ 1 (x3373 x3247)) (x3373 (x4000 x3247 1))))
(assert (x2631 x2665))
(assert (x9173 x4620))
(assert (x9173 x4769))
(assert (x9173 x1312))
(assert (x9173 x2186))
(assert (x9173 x7776))
(assert (x9173 x578))
(assert (= x5058 (and x1316 x3449)))
(assert (= (x3373 (x4000 x66 1)) (+ (x3373 x66) 1)))
(assert (x9173 x2878))
(assert (x9173 x5487))
(assert (= (and x4532 x2607) x5586))
(assert (= x3203 (and x7782 x558)))
(assert (= x9027 (and (not x2024) x6534)))
(assert (=> (<= x3060 10000) (= (x2264 x3060) (x6664 x3060))))
(assert (= x4836 (and x3527 x3104)))
(assert (=> (<= x7091 10000) (= (x2264 x7091) (x6664 x7091))))
(assert (x9173 x674))
(assert (x9173 x3240))
(assert (x9173 x3881))
(assert (x9173 x430))
(assert (x9173 x2548))
(assert (= (and x7985 (not x7430)) x1834))
(assert (= x1355 (and (not x3754) x961)))
(assert (= (=> (or x6661 (not x6661)) x7448) x6209))
(assert (= (and x8780 x4778) x4071))
(assert (= (and x4854 x7468) x2319))
(assert (= (x3373 (x4000 x8659 1)) (+ (x3373 x8659) 1)))
(assert (= (and x236 (not x9118)) x8101))
(assert (x5765 x6786))
(assert (x9173 x6248))
(assert (= (x3373 (x2264 x1595)) x1595))
(assert (= (and (not x2624) x2381) x2865))
(assert (= x9183 (=> (= (= x8070 0) x2471) (and (=> (and (not x2471) (and (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1165)) (< x1165 32)) (> x1165 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3062) (= (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3275) x7961) (= (x910 (+ x5743 x7961)) x1932) (= (x910 (+ x1165 31)) x3275))) (and (=> (and (not x3062) (and (<= 0 x1838) (= x1838 (x5847 x5175)) (= (x5783 (x2264 x3881) (x6664 159) 0) x3535) (= (x4000 x6456 1) x5175) (= (x5783 (x2264 x560) x3535 0) x6456) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1838) (= x8853 (> x1838 0)) (= (x2282 x5743) x1253))) (and (=> (and x8853 (and (= (ite (> x1253 x1147) 1 0) x8125) (= x9078 (= x1838 0)) (= (= 0 x6379) x449) (= x1147 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1838)) (= (x6748 x6467 x8125) x6379) (= (ite (not x9078) 1 0) x6467))) (and (=> (not x449) x3931) (=> (and x449 (and (= x4737 (< x4044 x5132)) (= (div x8838 1000000000000000000) x5132) (= (mod (* x1838 x1253) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x8838))) (and (=> (and (and (= (= (ite x598 1 0) 0) x2338) (= (< 115792089237316195423570985008687907853269984665640564039457 x4044) x598)) x4737) (and (=> (not x2338) x3931) (=> (and x2338 (and (= (= x7265 0) x6950) (= x8534 (ite (not x6933) 1 0)) (= (ite (> 1000000000000000000 x8233) 1 0) x2420) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4748) x8233) (= x7265 (x6748 x8534 x2420)) (= (= 0 x4748) x6933) (= x4748 (mod (* x4044 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> (and (and (= x3272 (< 0 x1253)) (= x2881 (mod (* x4748 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x6950) (and (=> (and (and (= (ite (< x1838 x7458) x1838 x7458) x8456) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x283) (= x2436 (> x8456 x283)) (= (x5847 x5175) x283) (= x1836 (div x2881 x1253)) (<= 0 x283) (= x7458 (div x1836 1000000000000000000))) x3272) (and (=> (and (and (or (and (not x1721) (= x5259 0)) (and x1721 (= x3122 x5259))) (and (= (x5783 (x2264 x560) x88 0) x8779) (= x3122 (x6568 x6171)) (<= 0 x3122) (= x3355 (x5783 (x2264 x560) x2128 0)) (= x3960 (x5783 (x2264 x560) x1299 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3122) (= (x6968 x5604) x1166) (= (x3434 x8170) x7403) (= x5604 (x4000 x3960 2)) (<= 0 x1166) (= x5425 (x2563 (- x283 x8456))) (<= 0 x6920) (= x88 (x5783 (x2264 x3881) (x6664 159) 0)) (= x6171 (x4000 x8779 1)) (<= x8446 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x6168 x8779) x8446) (= (> x3122 x6920) x1721) (>= x8446 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7403) (<= x1166 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x3881) (x6664 157) 0) x1299) (= (x4000 x3355 2) x8170) (= (x5783 (x2264 x3881) (x6664 156) 0) x2128) (<= 0 x7403) (<= x6920 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (not x2436)) x644) (=> x2436 x3931))) (=> (not x3272) x4551))) (=> (not x6950) x3931))))) (=> (and (= x766 (> x5132 x4044)) (not x4737)) (and (=> x766 x3931) (=> (and (not x766) (and (= x4465 x2183) (= x5132 x688) (= (x2563 (- x4044 x5132)) x2183))) x3095))))))) (=> (and (not x8853) (and (= x4465 x4044) (= x688 0))) x3095))) (=> (and x3062 (= x6661 true)) x6209))) (=> x2471 x8633)))))
(assert (x9173 x5047))
(assert (x9173 x8931))
(assert (x9173 x1326))
(assert (x9173 x8036))
(assert (= x8067 (or x5708 x6284 x4205)))
(assert (= (=> (= (= 0 x7701) x5219) (and (=> x5219 x8633) (=> (not x5219) x2721))) x2637))
(assert (= (x3373 (x4000 x399 1)) (+ (x3373 x399) 1)))
(assert (x9173 x2901))
(assert (x9173 x3325))
(assert (= (or x2288 x5752) x9167))
(assert (= (or x4421 x3576) x5204))
(assert (= x8556 (=> (and (= x1071 x2039) (= x1609 x6944)) x8618)))
(assert (x9173 x7403))
(assert (= x5229 (and x2383 x6064)))
(assert (x9173 x4251))
(assert (= x8107 (and x11 x7535)))
(assert (x9173 x1432))
(assert (x9173 x2678))
(assert (x9173 x648))
(assert (x9173 x3231))
(assert (= x3573 (or x5756 x7108)))
(assert (x9173 x611))
(assert (x9173 x7725))
(assert (x9173 x9062))
(assert (x9173 x657))
(assert (x9173 x2577))
(assert (x9173 x1085))
(assert (x9173 x2814))
(assert (= (and (not x412) x2890) x1801))
(assert (= x6840 (and x9164 (not x5802))))
(assert (x9173 x1516))
(assert (x9173 x5228))
(assert (x9173 x1609))
(assert (= (and (not x2634) x349) x5459))
(assert (x9173 x1600))
(assert (x9173 x2026))
(assert (= (and x2546 (not x7037)) x8146))
(assert (x5765 x8265))
(assert (x9173 x45))
(assert (= x1873 (and x3895 x6423)))
(assert (= x207 (and x4967 x2582)))
(assert (x2631 x592))
(assert (= x7799 (and x1698 x8927)))
(assert (x9173 x5986))
(assert (= (x3373 (x4000 x8706 x50)) (+ x50 (x3373 x8706))))
(assert (= x4428 (and x2695 x3841)))
(assert (x9173 x2249))
(assert (= (and x6981 (not x1220)) x5817))
(assert (= x9098 (and (not x989) x7145)))
(assert (= (and x2029 x2461) x5690))
(assert (= (=> (and (= x156 x7588) (= x1800 x4531)) x6670) x365))
(assert (= x5349 (and x3341 x5230)))
(assert (x9173 x8591))
(assert (x9173 x6319))
(assert (= x6232 (and x1372 x6277)))
(assert (x9173 x1881))
(assert (= (and x3395 x6919) x1560))
(assert (= x5667 (and (not x247) x8232)))
(assert (x2631 x3868))
(assert (= x1633 (and (not x8364) x9210)))
(assert (x9173 x4076))
(assert (= (and x1433 (not x8356)) x151))
(assert (= x5624 (and x3474 (not x956))))
(assert (= (and x3085 x1426) x8155))
(assert (x9173 x463))
(assert (= (and x3657 x4641) x4586))
(assert (= (and x2861 x483) x1293))
(assert (= x8052 (and (not x1050) x5351)))
(assert (= x8098 (and x1343 x8866)))
(assert (x9173 x1961))
(assert (= x1267 (and x4640 (not x7660))))
(assert (x9173 x1110))
(assert (x9173 x4930))
(assert (x9173 x3696))
(assert (= x2876 (and x272 (not x4605))))
(assert (= (+ (x3373 x5898) 1) (x3373 (x4000 x5898 1))))
(assert (x9173 x1741))
(assert (x9173 x7283))
(assert (x9173 x1145))
(assert (= (and x2713 x6444) x7684))
(assert (= (and x8603 x5221) x5980))
(assert (x9173 x9206))
(assert (x9173 x6097))
(assert (= (and x6228 x356) x530))
(assert (x9173 x1147))
(assert (= (and (not x5925) x4658) x2356))
(assert (= (=> (and (= x1764 x1303) (= x720 0)) x6522) x2250))
(assert (x9173 x5358))
(assert (x9173 x6322))
(assert (= (or x7142 x6450) x2749))
(assert (x9173 x554))
(assert (x9173 x3138))
(assert (x9173 x8793))
(assert (= (=> (and (= x5855 x577) (= x2349 x4275)) x1829) x8192))
(assert (x9173 x2002))
(assert (= (=> (= (= 0 x496) x2274) (and (=> (and (= x2339 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x150) (and (> 32 x150) (= true (<= x150 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not x2274)) (and (=> (and (= x6661 true) x2339) x6209) (=> (and (not x2339) (and (= x442 (x8001 x8590)) (= x1179 (= x442 0)))) (and (=> x1179 x2721) (=> (not x1179) x8633))))) (=> x2274 x8633))) x2125))
(assert (= x8573 (or x5581 x2867)))
(assert (x2631 x8264))
(assert (= (and x7258 x6198) x2556))
(assert (x9173 x2472))
(assert (= (and (not x7107) x6151) x1042))
(assert (x9173 x2962))
(assert (x9173 x8393))
(assert (x9173 x4442))
(assert (x9173 x8716))
(assert (= (or x1626 x681) x7122))
(assert (= (or x6707 x4964) x5574))
(assert (x9173 x3718))
(assert (x5765 x4129))
(assert (x9173 x199))
(assert (=> (<= x799 10000) (= (x6664 x799) (x2264 x799))))
(assert (= (and x2479 (not x748)) x4598))
(assert (x9173 x8557))
(assert (x9173 x8534))
(assert (= x4155 (or x8865 x6426 x2465 x139)))
(assert (x9173 x2542))
(assert (x9173 x8119))
(assert (= (=> (and (= x2880 x8229) (= x5098 x4172)) x8145) x8903))
(assert (x9173 x6906))
(assert (x9173 x2206))
(assert (x9173 x3948))
(assert (x9173 x5694))
(assert (x9173 x3532))
(assert (= (or (and x5513 x3081) (and x3139 x6276) x1607 x1482 x3570 (and x2047 (not x8303)) (and x5082 x2161) (and (not x3069) x2495) (and x1425 x6201)) x3618))
(assert (= x7729 (and x6398 x317)))
(assert (= (and (not x3100) x8060) x6767))
(assert (x9173 x6071))
(assert (= x6296 (and x3271 x4254)))
(assert (= (and (not x7947) x6722) x3711))
(assert (= x854 (and (not x1610) x3022)))
(assert (x9173 x7520))
(assert (x9173 x9086))
(assert (x9173 x5737))
(assert (x9173 x8812))
(assert (= x317 (or x4966 (and x860 (not x3068)))))
(assert (= x1995 (or x8970 x2350 x6070 x1703 x5628 x9144 x3454 x5689 x4021 x8994 x2949 x1854 x5079 x5651 x6907)))
(assert (x9173 x8366))
(assert (= x59 (=> (and (= x496 x831) (= x673 x150)) x8538)))
(assert (x9173 x6911))
(assert (= (and x1389 x6256) x1189))
(assert (x5765 x2540))
(assert (x9173 x4735))
(assert (= x5312 (and x200 x6698)))
(assert (x9173 x3077))
(assert (x9173 x5155))
(assert (x9173 x990))
(assert (= x2707 (and (=> (and x3423 (and (= x3881 x2321) (= x5879 x1942) (= x1850 x8114))) x3709) (=> (and (not x3423) (and (= x417 1) (= x1850 x8932))) x5305))))
(assert (x9173 x1499))
(assert (= x8437 (and x8962 x7638)))
(assert (= x5156 (and x4601 x7426)))
(assert (x9173 x3872))
(assert (x9173 x4699))
(assert (= (and (not x2995) x3562) x8720))
(assert (x9173 x2379))
(assert (= (or (and x2311 (not x5823)) (and x694 x8104)) x1330))
(assert (x9173 x3849))
(assert (x9173 x9124))
(assert (= x9164 (and (not x4680) x6106)))
(assert (= (and x7044 (not x6491)) x5493))
(assert (x9173 x6794))
(assert (x9173 x7726))
(assert (= (x3373 (x4000 x520 1)) (+ (x3373 x520) 1)))
(assert (= (and x7742 x7011) x169))
(assert (x9173 x6268))
(assert (x9173 x3177))
(assert (= x3886 (and x6562 x3917)))
(assert (= x2962 (x3373 (x2264 x2962))))
(assert (= (and x1731 (not x1350)) x5278))
(assert (= (x3373 (x2264 x2397)) x2397))
(assert (= (x3373 (x2264 x1535)) x1535))
(assert (x9173 x4122))
(assert (x9173 x6278))
(assert (= (and x4946 x7453) x5962))
(assert (= x2937 (x3373 (x2264 x2937))))
(assert (= (and x5191 x2366) x2613))
(assert (= x3137 (and x99 (not x4310))))
(assert (= (or x9090 x8107) x4255))
(assert (=> (<= x3498 10000) (= (x2264 x3498) (x6664 x3498))))
(assert (= (and x2224 x3497) x2253))
(assert (= x7525 (and (not x8453) x915)))
(assert (x9173 x1454))
(assert (x5765 x5480))
(assert (= x5519 (and x8872 (not x6222))))
(assert (x4899 x7111))
(assert (x9173 x3214))
(assert (= (and x1743 x953) x7643))
(assert (= (and x3560 x4461) x6651))
(assert (x9173 x7599))
(assert (= (=> (and (= x310 0) (= x6926 x1869)) x3961) x8421))
(assert (x9173 x8581))
(assert (= x8703 (and x69 (not x1087))))
(assert (= (or x3508 x3880) x7234))
(assert (= x4239 (and x447 (not x590))))
(assert (x2631 x7838))
(assert (x9173 x9225))
(assert (x9173 x4935))
(assert (x9173 x8788))
(assert (x9173 x916))
(assert (= x7846 (and (not x7354) x6411)))
(assert (x9173 x833))
(assert (= x4115 (and x909 (not x449))))
(assert (= x7211 (and x3310 x8301)))
(assert (x9173 x7070))
(assert (= x3939 (and (not x6727) x8869)))
(assert (x9173 x8153))
(assert (x9173 x812))
(assert (x9173 x4032))
(assert (x9173 x9184))
(assert (x9173 x5290))
(assert (x9173 x6346))
(assert (= (and x8845 (not x4865)) x158))
(assert (= x4607 (=> (and (= 0 x3972) (= x1895 x7571)) x5811)))
(assert (= (and x3069 x2495) x2047))
(assert (= (and (not x8104) x694) x2311))
(assert (= (x3373 (x4000 x2658 2)) (+ (x3373 x2658) 2)))
(assert (= (and x5231 x6971) x2985))
(assert (= x7653 (and x7306 x1592)))
(assert (x9173 x5))
(assert (x9173 x1277))
(assert (x9173 x8554))
(assert (= x4889 (=> (and (= x1646 x7110) (= x3542 x3297)) x3865)))
(assert (=> (>= 10000 x1215) (= (x6664 x1215) (x2264 x1215))))
(assert (= (x3373 (x2264 x8048)) x8048))
(assert (= x2452 x6682))
(assert (x9173 x409))
(assert (= (and (not x1566) x9054) x6846))
(assert (= x6757 (=> (and (or (and (and (and (= x3322 (x8854 x3521)) (> 1461501637330902918203684832716283019655932542976 x3322) (>= 1461501637330902918203684832716283019655932542975 x3322) (= x7115 (= 0 x3322)) (>= x3322 0)) (or (and (not x7115) (and (= (x910 (+ x9218 96)) x4458) (= (x4000 x209 1) x1246) (= x6825 x290) (= x7431 (x4000 x3521 1)) (< x290 1461501637330902918203684832716283019655932542976) (= x290 (x3927 x7431)) (= x2484 (x4000 x1246 1)) (>= x290 0) (>= 1461501637330902918203684832716283019655932542975 x290) (= x6204 (x5783 (x2264 x290) x783 0)) (= (x4000 x6204 1) x5643) (= x7687 x4458) (= (x5783 (x2264 x730) x783 0) x209))) (and (and (= x7788 (x5783 (x2264 x730) x783 0)) (= (x4000 x7788 1) x7319) (= x7687 x5344) (= (x4000 x7319 1) x756) (= x5344 (x910 (+ 96 x9218))) (= (x4000 x3521 1) x6399) (= x730 x6825)) x7115))) (not x7129)) (and (and (and (<= 0 x8752) (= (> x8803 0) x1349) (= x8752 (x8854 x3521)) (= x8803 (x2563 (- x6343 x8752))) (<= x8752 1461501637330902918203684832716283019655932542975) (< x8752 1461501637330902918203684832716283019655932542976)) (or (and (and (= x6631 (x5783 (x2264 x888) x783 0)) (= (x5783 (x2264 x6343) x783 0) x8035) (= (x910 (+ x9218 96)) x852) (= x3486 (x4000 x999 1)) (= (x5783 (x2264 x730) x783 0) x999) (>= x888 0) (= (x4000 x6631 1) x6408) (= x6343 x6825) (= x8283 (x5783 (x2264 x6343) x783 0)) (= x852 x7687) (> 1461501637330902918203684832716283019655932542976 x888) (= x3606 (x4000 x3486 1)) (>= 1461501637330902918203684832716283019655932542975 x888) (= (x9166 x8035) x888)) x1349) (and (and (= x1543 (x910 (+ x9218 96))) (= x8288 (x4000 x8709 1)) (= (x5783 (x2264 x730) x783 0) x8709) (= (x4000 x8288 1) x5432) (= x6343 x6825) (= x7687 x1543) (= x469 (x5783 (x2264 x6343) x783 0))) (not x1349)))) x7129)) (= (ite (< x1539 x1) (not (= x6343 0)) (> x1 x1539)) x7129)) x6241)))
(assert (= x5789 (and x7045 x7016)))
(assert (x9173 x6540))
(assert (x9173 x3894))
(assert (x9173 x2999))
(assert (= (or x7186 x1794) x8424))
(assert (x9173 x5413))
(assert (x9173 x3868))
(assert (x9173 x8011))
(assert (= x1910 (and x8672 x7647)))
(assert (x9173 x2644))
(assert (x9173 x3046))
(assert (= (and x4177 x4515) x4552))
(assert (x9173 x6987))
(assert (x9173 x7091))
(assert (x5765 x2335))
(assert (x9173 x6190))
(assert (x5765 x2063))
(assert (x9173 x8505))
(assert (= (x6664 1857877511) (x2264 1857877511)))
(assert (= (and (not x7781) x2027) x4443))
(assert (x9173 x4713))
(assert (x9173 x770))
(assert (x5699 x8256 x2472))
(assert (= (and (not x6148) x895) x25))
(assert (= false x1704))
(assert (= x834 (and x1554 x7594)))
(assert (x9173 x7461))
(assert (x9173 x6402))
(assert (x9173 x4614))
(assert (= (+ (x3373 x1754) 1) (x3373 (x4000 x1754 1))))
(assert (x9173 x1112))
(assert (x9173 x3547))
(assert (= x362 (and x2455 x6036)))
(assert (x9173 x6511))
(assert (= (=> (= x5755 (> x5259 0)) (and (=> (and (not x5755) (and (= x8207 x7294) (= x8975 x7332))) x4117) (=> (and x5755 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1) (= (= 0 x560) x1265) (>= x1 0))) (and (=> x1265 x8633) (=> (and (not x1265) (and (= x2124 (x4000 x4736 2)) (= x4736 (x5783 (x2264 x560) x1299 0)) (= x6875 (= 0 x3448)) (= x3448 (x3757 x2124)) (<= 0 x3448) (<= x3448 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and x6875 (and (and (= x2855 (x4000 x1299 1)) (= (x9234 x2855) x5) (<= 0 x5) (= x8963 (ite (< 0 x1) (not (= 0 x5)) (> x1 0))) (<= x5 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x5)) (or (and (not x8963) (= x7107 x8963)) (and (and (= x1177 (x4000 x2236 2)) (<= x6295 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7107 (not x6356)) (= (x5783 (x2264 x5) x1299 0) x2236) (= (x3757 x1177) x6295) (>= x6295 0) (= x6356 (< x6295 x5259))) x8963)))) x8600) (=> (not x6875) x8633))))))) x1073))
(assert (= x7388 (and x7236 x4719)))
(assert (= (and x5804 x1163) x7667))
(assert (= x3557 (and x351 x3583)))
(assert (x9173 x6437))
(assert (= x1305 (and x8118 (not x654))))
(assert (= (or x6303 x7722) x3152))
(assert (= (+ (x3373 x6309) 1) (x3373 (x4000 x6309 1))))
(assert (x5699 x4975 x5638))
(assert (x9173 x5834))
(assert (= x3865 (=> (and (= (= x1646 0) x456) (or (not x456) x456)) x8843)))
(assert (x9173 x6745))
(assert (= x5466 (and x7945 x4157)))
(assert (x9173 x6614))
(assert (=> (<= x6352 10000) (= (x2264 x6352) (x6664 x6352))))
(assert (= x2336 (and (not x8919) x8861)))
(assert (=> (>= 10000 x5872) (= (x6664 x5872) (x2264 x5872))))
(assert (= (and x9008 x7437) x4142))
(assert (x9173 x755))
(assert (x9173 x7458))
(assert (x9173 x7099))
(assert (= (+ (x3373 x2069) 2) (x3373 (x4000 x2069 2))))
(assert (= (and x117 x3555) x2014))
(assert (x9173 x7756))
(assert (x9173 x2140))
(assert (= x8917 (=> (and (= x2965 0) (= x6580 x4654)) x6014)))
(assert (x9173 x116))
(assert (= (x3373 (x4000 x7319 1)) (+ 1 (x3373 x7319))))
(assert (= (and x7618 x3611) x3196))
(assert (x9173 x6149))
(assert (x9173 x1750))
(assert (= x5866 (and x7796 x3613)))
(assert (= (or x859 x3861) x166))
(assert (x9173 x8631))
(assert (x9173 x5295))
(assert (= x2953 (=> (= (> x3696 0) x2287) (and (=> (and (and (>= x1 0) (= x2507 (= 0 x2254)) (<= x1 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2287) (and (=> (and (and (= (= 0 x1582) x8562) (= (x4000 x8877 2) x947) (<= 0 x1582) (= (x4807 x947) x1582) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1582) (= x8877 (x5783 (x2264 x2254) x1580 0))) (not x2507)) (and (=> (and x8562 (and (or (and (and (= (x5783 (x2264 x1527) x1580 0) x2005) (= (< x9155 x3696) x5534) (= x6914 (not x5534)) (= x9155 (x4807 x3753)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9155) (>= x9155 0) (= (x4000 x2005 2) x3753)) x1076) (and (not x1076) (= x6914 x1076))) (and (= (ite (> x1 0) (not (= 0 x1527)) (< 0 x1)) x1076) (= x1527 (x2490 x5235)) (>= 1461501637330902918203684832716283019655932542975 x1527) (< x1527 1461501637330902918203684832716283019655932542976) (>= x1527 0) (= x5235 (x4000 x1580 1))))) x1149) (=> (not x8562) x8248))) (=> x2507 x9080))) (=> (not x2287) x6922)))))
(assert (x9173 x3725))
(assert (x9173 x7148))
(assert (x9173 x5417))
(assert (x9173 x8352))
(assert (= x2832 (and x537 x2359)))
(assert (= x3405 (and x1513 x5598)))
(assert (= (and x8425 (not x9050)) x5294))
(assert (x9173 x4905))
(assert (= (=> (and (= x2176 x4787) (= x9104 x5367) (= x7482 x5583) (= x1584 x770)) x8428) x2387))
(assert (= (=> (and (= x7219 x1068) (= x9149 x4912) (= x1157 x1973) (= x770 x6316) (= x4041 x1612)) x1080) x8908))
(assert (= (and (not x4373) x9215) x5343))
(assert (= x6739 (or x4868 x781)))
(assert (= (x3373 (x2264 x739)) x739))
(assert (= x5927 (and x6520 x6890)))
(assert (= (x3373 (x4000 x946 1)) (+ 1 (x3373 x946))))
(assert (x9173 x7922))
(assert (x9173 x193))
(assert (= (=> (and (and (<= x6920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x11 (< x6920 x3773)) (>= x6920 0)) (or (and (not x11) (= 0 x5009)) (and x11 (= x5009 x3773)))) x3014) x8893))
(assert (= (or x7218 x3457) x5059))
(assert (x9173 x6630))
(assert (x9173 x6505))
(assert (x9173 x458))
(assert (x9173 x2309))
(assert (= x2288 (or x7488 x3432 x4803 x473 x8859 x6285)))
(assert (= x8357 (or x1958 x7845)))
(assert (= x1284 (=> (and (<= 0 x5375) (>= 1461501637330902918203684832716283019655932542975 x5375) (< x5375 1461501637330902918203684832716283019655932542976) (= x1541 (= 0 x5375))) (and (=> x1541 x5202) (=> (and (and (> 1461501637330902918203684832716283019655932542976 x5375) (= (x910 (+ x477 32)) x3352) (<= 0 x5375) (= (x6844 (x2264 x5375)) x2814) (<= x5375 1461501637330902918203684832716283019655932542975) (= x477 (x910 (+ x9202 4))) (= (= 0 x2814) x3675) (= x2849 (x910 (+ 32 x3352)))) (not x1541)) (and (=> (and (not x3675) (< x1988 4294967296)) x5202) (=> (and (= x6661 true) x3675) x6209)))))))
(assert (= (and x5293 x945) x9179))
(assert (x9173 x2562))
(assert (= (=> (and (= x7624 x1895) (= x3972 x5012)) x8387) x5811))
(assert (x9173 x2740))
(assert (x9173 x2907))
(assert (= x8123 (and x989 x7145)))
(assert (= (x3373 (x2264 x4080)) x4080))
(assert (x9173 x693))
(assert (= (and (not x2638) x6805) x4800))
(assert (= (=> (and (= 0 x4074) (= x8034 x5258)) x675) x843))
(assert (= x1993 (x3373 (x2264 x1993))))
(assert (x9173 x6529))
(assert (x2631 x2710))
(assert (= (and x67 x4642) x1131))
(assert (x9173 x1679))
(assert (= (or x90 (and (not x3982) x5128)) x3243))
(assert (= x2407 (and (not x8164) x6747)))
(assert (x9173 x2756))
(assert (= x6907 (and x264 (not x8545))))
(assert (=> (<= x3956 10000) (= (x6664 x3956) (x2264 x3956))))
(assert (= x2630 x2797))
(assert (= x8359 (or x849 x3585)))
(assert (x9173 x6828))
(assert (x9173 x6158))
(assert (= x4666 (and x4839 (not x3427))))
(assert (= x8419 (and x6211 x446)))
(assert (x9173 x4766))
(assert (x9173 x3951))
(assert (= (and x8443 x8512) x3657))
(assert (= x7772 (and x1238 (not x7053))))
(assert (= (and x5484 (not x6953)) x5183))
(assert (= (and x1096 x6108) x7133))
(assert (= (x3373 (x4000 x3859 1)) (+ (x3373 x3859) 1)))
(assert (= (or x2262 x1217) x2712))
(assert (x9173 x1672))
(assert (= x3319 (and (not x1032) x5033)))
(assert (x9173 x1193))
(assert (= (and x6264 (not x2573)) x7974))
(assert (x9173 x7808))
(assert (= (x3373 (x2264 x1758)) x1758))
(assert (x9173 x5362))
(assert (x9173 x1072))
(assert (x9173 x2947))
(assert (x9173 x2392))
(assert (= (or x6382 x7600) x7934))
(assert (= x3812 x2452))
(assert (= (or x4673 x3557 x3772) x9032))
(assert (x9173 x8842))
(assert (x9173 x6926))
(assert (x9173 x1368))
(assert (x9173 x5827))
(assert (= (and (not x1585) x8072) x961))
(assert (= x7903 (and x2516 x8562)))
(assert (= (and x2860 (not x3770)) x1554))
(assert (= (x2264 2835717307) (x6664 2835717307)))
(assert (x9173 x6297))
(assert (x9173 x6165))
(assert (= (and x5007 x2998) x4410))
(assert (x9173 x4698))
(assert (= x4103 (and (not x7821) x2917)))
(assert (x9173 x3640))
(assert (= (+ 1 (x3373 x8025)) (x3373 (x4000 x8025 1))))
(assert (= x5062 (and (=> (and (not x5952) (and (= x8282 0) (= x5341 x8503))) x4173) (=> (and x5952 (and (or (and (= x8351 x2214) (not x2214)) (and x2214 (and (= (> x5824 x223) x6611) (= (x4000 x8413 2) x7023) (= (not x6611) x8351) (<= 0 x223) (= (x3620 x7023) x223) (= (x5783 (x2264 x8254) x2128 0) x8413) (<= x223 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) (and (> 1461501637330902918203684832716283019655932542976 x8254) (= (x4000 x6579 1) x3236) (= (x4385 x3236) x8254) (= (ite (< 1 x1) (not (= x8254 0)) (> x1 1)) x2214) (>= 1461501637330902918203684832716283019655932542975 x8254) (= x6579 (x5783 (x2264 x8503) x2128 0)) (<= 0 x8254)))) x7276))))
(assert (= x3931 (=> (= true x6661) x6209)))
(assert (x9173 x5035))
(assert (= (or x3124 x4054 x6925 x3746) x8390))
(assert (x9173 x8752))
(assert (x5765 x2083))
(assert (= x6020 (and x3227 x1079)))
(assert (= (x3373 (x2264 x8503)) x8503))
(assert (= (=> (and (= x674 x2965) (= x4654 x7728)) x1060) x6014))
(assert (= x7257 (=> (and (or (not x7696) x7696) (= x7696 (= 0 x6414))) x2761)))
(assert (=> (>= 10000 x7358) (= (x6664 x7358) (x2264 x7358))))
(assert (x9173 x5872))
(assert (= (+ (x3373 x4984) 1) (x3373 (x4000 x4984 1))))
(assert (= x4332 (and x5199 x216)))
(assert (= (and x7002 (not x7312)) x6973))
(assert (x5765 x1659))
(assert (= (x3373 (x4000 x9192 1)) (+ 1 (x3373 x9192))))
(assert (= x8644 (x3373 (x2264 x8644))))
(assert (= (and x83 (not x7260)) x2998))
(assert (= x760 (and x5026 x1924)))
(assert (= x493 (and x7478 x4514)))
(assert (x9173 x391))
(assert (x9173 x4602))
(assert (x9173 x3369))
(assert (= (and (not x1295) x2014) x4833))
(assert (= x3169 (=> (and (= x920 x4811) (= x6629 x4606)) x5567)))
(assert (x9173 x7298))
(assert (= (x3373 (x4000 x5423 2)) (+ 2 (x3373 x5423))))
(assert (= (=> (= x3411 (= x566 x786)) (and (=> (and (not x3411) (= (> x566 0) x654)) (and (=> (and (and (= x4023 (x910 (+ x391 96))) (= x4483 (x4463 x7183)) (<= x217 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x4483) (= x7183 (x5783 (x2264 x4396) x4176 0)) (<= 0 x4483) (= x1758 (x8245 x2730)) (= (x9084 x2474) x217) (>= x1758 0) (>= 1461501637330902918203684832716283019655932542975 x1758) (>= x217 0) (< x4483 1461501637330902918203684832716283019655932542976) (< x1758 1461501637330902918203684832716283019655932542976) (= (x4000 x2730 1) x2474) (= x2730 (x4000 x7183 1)) (= x1450 (= x217 0))) x654) (and (=> (and (not x1450) (and (= x7803 (= x4483 0)) (or (and (and (= x8432 (x4000 x8246 1)) (= x8246 (x5783 (x2264 x4483) x4176 0))) (not x7803)) (and (= x5126 (x4000 x4176 1)) x7803)))) x1487) (=> x1450 x4298))) (=> (and (and (= x4698 x3851) (= x391 x8608)) (not x654)) x7583))) (=> (and (and (= x391 x7212) (= x8717 x4698)) x3411) x2842))) x5249))
(assert (x5765 x2633))
(assert (= x1573 (and x4634 x3748)))
(assert (x9173 x543))
(assert (= (and x6288 x3957) x6597))
(assert (x5765 x8122))
(assert (x9173 x930))
(assert (= x4974 (and x191 (not x6029))))
(assert (x9173 x1915))
(assert (= x57 (or x5685 x6853)))
(assert (x9173 x1567))
(assert (x9173 x2768))
(assert (=> (<= x7550 10000) (= (x2264 x7550) (x6664 x7550))))
(assert (= (+ 2 (x3373 x313)) (x3373 (x4000 x313 2))))
(assert (=> (<= x4370 10000) (= (x6664 x4370) (x2264 x4370))))
(assert (= (and x2492 x8879) x4262))
(assert (x9173 x5225))
(assert (= x8464 (and (not x1541) x8406)))
(assert (x2631 x7167))
(assert (x9173 x1502))
(assert (x9173 x3985))
(assert (= (x3373 (x4000 x4808 1)) (+ (x3373 x4808) 1)))
(assert (x9173 x8937))
(assert (= x3826 (and x3018 x7)))
(assert (= (x2264 72570022874062638528011751457397263716769196454539065078543251854057308946432) (x6664 72570022874062638528011751457397263716769196454539065078543251854057308946432)))
(assert (x9173 x2585))
(assert (= (and x3914 (not x2445)) x4635))
(assert (= x4150 (=> (and (= (x910 (+ 4 x53)) x3727) (= x1887 (= x3881 x5148)) (= x549 (x910 (+ 32 x3727))) (= (x2563 (- x549 x53)) x5528)) (and (=> (and (and (> 2217467699 x7935) (< x7935 988262939) (not (< x7274 4)) (= (or (and (= true (<= x3493 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3493)) (> x3493 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4524) (= x2756 x7036) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x3658) (< 0 x8948) (not (= 75483562 x7935)) (= x3493 (x2563 (- x7274 4))) (= (x6844 (x2264 x5148)) x8948) (= 398450620 x7935) (not (= 242558722 x7935)) (not (= x7935 178855970)) (= x5528 x7274) (= 36 x7274) (< x7935 405663989)) x1887) (and (=> (and (not x4524) (and (= x1083 x2756) (= x6464 (= x2756 x7036)))) (and (=> (not x6464) x5911) (=> (and (and (<= 0 x5814) (= x7018 32) (= (x5783 (x2264 x2756) (x6664 6) 0) x5141) (<= x5814 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x829 1) (= x5814 (x1203 x5141))) x6464) x5709))) (=> x4524 x5911))) (=> (and (not x1887) (= (= x3881 x3605) x7196)) (and (=> (and (and (and x1632 (and (= (or (and (> 32 x7688) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7688))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7688)) x237) (not (= 178855970 x5634)) (> x8489 0) (= 398450620 x5634) (= x7036 x8174) (= (x6844 (x2264 x1326)) x8489) (< x5634 988262939) (= x7688 (x2563 (- x7738 4))) (= x7738 x5528) (not (< x7738 4)) (not (= x5634 242558722)) (< x5634 2217467699) (not (= 75483562 x5634)) (= 36 x7738) (> 405663989 x5634) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x182))) (= x1632 (= x3881 x1326))) (not x7196)) (and (=> x237 x7570) (=> (and (and (= x2156 x8174) (= x9003 (= x8174 x7036))) (not x237)) (and (=> (not x9003) x7570) (=> (and (and (= (x4457 x3677) x3302) (<= 0 x3302) (= (x5783 (x2264 x8174) (x6664 6) 0) x3677) (<= x3302 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x1724) (= x7681 1)) x9003) x1962))))) (=> (and (and (< x304 405663989) (= x7568 (or (and (= true (<= x1676 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1676 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1676))) (< x304 2217467699) (< 0 x73) (= x7036 x34) (= 36 x8910) (= 398450620 x304) (not (= x304 178855970)) (not (= 242558722 x304)) (not (= x304 75483562)) (not (< x8910 4)) (= (x2563 (- x8910 4)) x1676) (= x5528 x8910) (< x304 988262939) (= (x6844 (x2264 x3605)) x73) (= x9057 10742207464693106059581744854972325794081737850190833080250671788038469713920)) x7196) (and (=> x7568 x5323) (=> (and (and (= (= x34 x7036) x3478) (= x34 x6167)) (not x7568)) (and (=> (and x3478 (and (<= x3818 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3149 1) (= x3818 (x5457 x5061)) (>= x3818 0) (= x5683 32) (= x5061 (x5783 (x2264 x34) (x6664 6) 0)))) x8762) (=> (not x3478) x5323)))))))))))
(assert (= (and (not x3608) x2200) x1845))
(assert (= x262 (and (not x4288) x2778)))
(assert (= (or x8204 x2355 x2618 x9167) x2568))
(assert (= (=> (= x7067 (> x3713 x2376)) (and (=> (and (= x4939 0) (not x7067)) x6115) (=> (and x7067 (= (< x3713 x2376) x7893)) (and (=> x7893 x3931) (=> (and (and (= x4939 x7163) (= x7163 (x2563 (- x3713 x2376)))) (not x7893)) x6115))))) x1970))
(assert (= x7754 (and x3395 (not x6919))))
(assert (x2631 x2722))
(assert (= (and x474 (not x8190)) x4977))
(assert (x9173 x119))
(assert (x5765 x5827))
(assert (= (and x4389 x4552) x4846))
(assert (= x6006 (and x3175 (not x8392))))
(assert (=> (<= x7607 10000) (= (x6664 x7607) (x2264 x7607))))
(assert (= x7170 (and x3418 x4820)))
(assert (x9173 x7201))
(assert (x9173 x3969))
(assert (= x5300 (and x315 x6800)))
(assert (= x5233 (=> (= x6398 (= x5247 0)) (and (=> (and (= x6254 x974) x6398) x716) (=> (and (= x7418 (or (and (< x3759 32) (= true (<= x3759 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3759 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x6398)) (and (=> (and x7418 (= x974 x6254)) x716) (=> (and (and (= x974 x4041) (= x1973 32) (= x9149 1)) (not x7418)) x8908)))))))
(assert (= (+ (x3373 x7421) 1) (x3373 (x4000 x7421 1))))
(assert (= (and x5420 x275) x6320))
(assert (= x1254 (and x5485 x1518)))
(assert (= (and x5267 x1564) x3847))
(assert (x9173 x5144))
(assert (x5765 x7138))
(assert (x9173 x6100))
(assert (x9173 x4533))
(assert (= (x3373 (x2264 x2921)) x2921))
(assert (x9173 x6152))
(assert (= x3321 (and x3382 (not x741))))
(assert (= (and x4351 (not x5550)) x8277))
(assert (x9173 x4306))
(assert (x9173 x5142))
(assert (= (and x4586 (not x8768)) x1003))
(assert (= (x3373 (x4000 x4907 1)) (+ 1 (x3373 x4907))))
(assert (= (x6664 117300739) (x2264 117300739)))
(assert (= (=> (and (= x6532 x5929) (= x987 0)) x346) x2729))
(assert (= (and (not x2861) x483) x5622))
(assert (= x2942 (and (not x4283) x7836)))
(assert (x9173 x8264))
(assert (= x7461 (x3373 (x2264 x7461))))
(assert (x9173 x7442))
(assert (x9173 x2941))
(assert (x9173 x2346))
(assert (x9173 x8983))
(assert (= (and x1461 x1286) x2478))
(assert (= (and (not x7926) x325) x714))
(assert (x9173 x51))
(assert (x9173 x8173))
(assert (= x3290 (and (not x2274) x7408)))
(assert (= (x3373 (x4000 x5930 1)) (+ (x3373 x5930) 1)))
(assert (= x8632 (and (not x2208) x824)))
(assert (x9173 x7056))
(assert (=> (<= x8048 10000) (= (x6664 x8048) (x2264 x8048))))
(assert (= x5422 (and x3315 x3196)))
(assert (x9173 x8883))
(assert (x9173 x3658))
(assert (x9173 x2819))
(assert (x9173 x1113))
(assert (= x5356 (and x7024 x2098)))
(assert (= (x3373 (x2264 x8593)) x8593))
(assert (x9173 x6542))
(assert (= x1335 (and x5787 (not x6817))))
(assert (= x6977 (=> (and (and (= x9201 (> x1534 x6920)) (>= x6920 0) (<= x6920 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and (= x786 0) (not x9201)) (and x9201 (= x1534 x786)))) x5249)))
(assert (= (and (not x8849) x2213) x7515))
(assert (x9173 x5970))
(assert (x9173 x8271))
(assert (= x407 (and x3050 x2268)))
(assert (= (and (not x2471) x8067) x9188))
(assert (= (and x4428 (not x6706)) x818))
(assert (x9173 x2608))
(assert (=> (<= x7138 10000) (= (x2264 x7138) (x6664 x7138))))
(assert (= x1907 (=> (and (= x4787 x6250) (= 0 x5583)) x2387)))
(assert (= x6801 x3931))
(assert (= x1545 (and x5584 (not x4219))))
(assert (= x532 (or x4330 x5453)))
(assert (= (and (not x1281) x5866) x4193))
(assert (x9173 x7351))
(assert (= (and x2641 x5324) x5736))
(assert (= x6670 (=> (and (or (not x3574) x3574) (= x3574 (= x1800 0))) x9023)))
(assert (x9173 x2231))
(assert (= x214 (and x1680 x7248)))
(assert (x9173 x6806))
(assert (= (and (not x4604) x4957) x5033))
(assert (= x64 (and (not x5008) x4937)))
(assert (= (and x9003 x8198) x7901))
(assert (x9173 x3038))
(assert (x9173 x5816))
(assert (x9173 x310))
(assert (not x7881))
(assert (= (and x3062 x9188) x2062))
(assert (= (and x4009 (not x8027)) x3433))
(assert (x9173 x23))
(assert (x9173 x3439))
(assert (= x537 (and x9174 (not x7223))))
(assert (x9173 x8975))
(assert (x9173 x3048))
(assert (= (and x7879 x6772) x6735))
(assert (x9173 x5795))
(assert (= (and x4778 (not x8780)) x2549))
(assert (x9173 x3265))
(assert (= (and x1617 x5447) x5045))
(assert (= x4676 (=> (and (= x1211 x150) (= x496 x8605)) x8538)))
(assert (=> (>= 10000 x5253) (= (x6664 x5253) (x2264 x5253))))
(assert (x9173 x880))
(assert (= (and x2175 x1107) x6424))
(assert (= x7186 (and x2255 (not x1530))))
(assert (x9173 x2467))
(assert (=> (<= x6015 10000) (= (x2264 x6015) (x6664 x6015))))
(assert (= x7731 (=> (and (= (= 0 x6941) x446) (or (not x446) x446)) x8578)))
(assert (x9173 x1833))
(assert (x2631 x4542))
(assert (x9173 x3782))
(assert (= (x3373 (x4000 x7183 1)) (+ 1 (x3373 x7183))))
(assert (= (or x6472 x5402) x6520))
(assert (x9173 x3292))
(assert (x9173 x839))
(assert (x9173 x6180))
(assert (x9173 x6254))
(assert (= (and x6151 x7107) x3372))
(assert (= x3255 (and x8969 x3037)))
(assert (x9173 x7765))
(assert (= (and x2144 (not x1537)) x813))
(assert (= x2863 (and x5853 (not x6340))))
(assert (= x4707 (and x7430 x7985)))
(assert (x2631 x7452))
(assert (= x5939 (x3373 (x2264 x5939))))
(assert (= x2770 (or x9185 x4894)))
(assert (= x1012 (and x3830 x5935)))
(assert (= x6 (x3373 (x2264 x6))))
(assert (x9173 x2304))
(assert (= (x2264 1466279372) (x6664 1466279372)))
(assert (x9173 x6596))
(assert (= x106 (or x5049 x3019)))
(assert (= x5872 (x3373 (x2264 x5872))))
(assert (=> (<= x6993 10000) (= (x6664 x6993) (x2264 x6993))))
(assert (= (or x8306 (and x5831 (not x1638))) x7034))
(assert (= x9196 (and (not x2582) x4967)))
(assert (x9173 x7247))
(assert (= x7044 (and x7051 x7730)))
(assert (= x3906 (or x4866 (and x7910 (not x7042)))))
(assert (= x3644 (x3373 (x2264 x3644))))
(assert (x9173 x2227))
(assert (x9173 x4606))
(assert (= x551 (or x3934 x6960)))
(assert (x9173 x1795))
(assert (= (and x4143 x1996) x7191))
(assert (= (x3373 (x2264 x5381)) x5381))
(assert (= x4421 (and x5657 x1788)))
(assert (x9173 x4127))
(assert (= (or x7297 x1400) x791))
(assert (x9173 x4366))
(assert (x9173 x4188))
(assert (x9173 x2326))
(assert (= x665 (and x6800 (not x315))))
(assert (x9173 x7751))
(assert (= (or x2899 x9224) x7271))
(assert (= x5264 (=> (and (= x5012 x8592) (= x7624 x1516)) x8387)))
(assert (= x4271 (and x3074 x4650)))
(assert (= (x3373 (x6664 24044834009420335638544845215851342251227478490780828673611325350056707489792)) 24044834009420335638544845215851342251227478490780828673611325350056707489792))
(assert (x9173 x78))
(assert (x5765 x1398))
(assert (x9173 x643))
(assert (x9173 x2270))
(assert (= (and x3776 (not x2798)) x5752))
(assert (=> (>= 10000 x4602) (= (x6664 x4602) (x2264 x4602))))
(assert (x9173 x31))
(assert (x9173 x7153))
(assert (x9173 x2212))
(assert (x9173 x3422))
(assert (= x277 (and x4746 x3911)))
(assert (x9173 x9202))
(assert (x9173 x1376))
(assert (= x7324 (and x7217 (not x3953))))
(assert (x9173 x6282))
(assert (x2631 x8534))
(assert (= (=> (= x4355 x6624) x6023) x2895))
(assert (= x3781 (=> (and (or (and x8482 (= x8913 x8654)) (and (not x8482) (and (= (x5783 (x2264 x3881) (x6664 159) 0) x9198) (<= x3777 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x8092 x3877) x3777) (= (= 0 x3777) x3118) (<= 0 x3777) (= (x5783 (x2264 x560) x9198 0) x3877) (= x8913 (ite x3118 1 0))))) (= (= 0 x8654) x8482)) x243)))
(assert (= x5704 (=> (and (= x2775 x9184) (= 0 x1578)) x7194)))
(assert (= (x3373 (x2264 x3641)) x3641))
(assert (= x8920 (and x1082 x7160)))
(assert (= x7960 (and (not x8504) x8745)))
(assert (x5765 x5148))
(assert (= x4135 (not (and (<= x1136 1461501637330902918203684832716283019655932542975) (= x1136 (x6018 x432)) (< x1136 1461501637330902918203684832716283019655932542976) (= (x4000 x3598 1) x432) (= (x5783 (x2264 x8593) x3119 0) x3598) (>= x1136 0)))))
(assert (= (and x4110 (not x2659)) x8179))
(assert (=> (>= 10000 x2668) (= (x6664 x2668) (x2264 x2668))))
(assert (= x5497 (=> (= (= x5083 0) x2840) (and (=> x2840 x8633) (=> (not x2840) x925)))))
(assert (=> (<= x7103 10000) (= (x6664 x7103) (x2264 x7103))))
(assert (= (and x4828 x7813) x8749))
(assert (=> (<= x5320 10000) (= (x6664 x5320) (x2264 x5320))))
(assert (x9173 x6425))
(assert (=> (>= 10000 x3644) (= (x2264 x3644) (x6664 x3644))))
(assert (x9173 x2485))
(assert (= x8158 (and x3549 x3215)))
(assert (x9173 x3760))
(assert (= (or x680 x1383) x3875))
(assert (= x1625 (and (not x5093) x7253)))
(assert (x9173 x2176))
(assert (= (and x2300 (not x1066)) x5820))
(assert (x9173 x3989))
(assert (=> (>= 10000 x5004) (= (x2264 x5004) (x6664 x5004))))
(assert (x9173 x8795))
(assert (x9173 x1975))
(assert (x9173 x2751))
(assert (= (+ (x3373 x4048) 1) (x3373 (x4000 x4048 1))))
(assert (= (x2264 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x6664 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (x4899 x3444))
(assert (x9173 x3946))
(assert (= (and (not x2641) x5324) x9135))
(assert (= x327 (and x7116 x4217)))
(assert (= x120 (and x2869 x3372)))
(assert (x9173 x3302))
(assert (= (+ (x3373 x9203) 1) (x3373 (x4000 x9203 1))))
(assert (= x2519 (or x7934 x3152 x3035)))
(assert (= (not (and (< x8377 1461501637330902918203684832716283019655932542976) (= (x4000 x6090 1) x5018) (<= x8377 1461501637330902918203684832716283019655932542975) (= (x5783 (x2264 x8114) x5879 0) x6090) (>= x8377 0) (= (x2502 x5018) x8377))) x3709))
(assert (x9173 x435))
(assert (x9173 x7736))
(assert (x9173 x8775))
(assert (x5765 x4734))
(assert (= x8472 x3931))
(assert (x9173 x9018))
(assert (= (x3373 (x4000 x2236 2)) (+ 2 (x3373 x2236))))
(assert (x9173 x6022))
(assert (= (and x4779 x4502) x2545))
(assert (x9173 x9042))
(assert (x9173 x4075))
(assert (= x8633 x3378))
(assert (x2631 x3275))
(assert (= x8962 (and x7220 (not x1102))))
(assert (= (=> (and (= x1657 x3794) (= x6957 0)) x452) x9214))
(assert (x9173 x5799))
(assert (x9173 x7047))
(assert (x9173 x7939))
(assert (x5699 x2710 x576))
(assert (x9173 x7284))
(assert (x9173 x92))
(assert (= (x3373 (x4000 x1299 2)) (+ (x3373 x1299) 2)))
(assert (= (and x1413 x4977) x6025))
(assert (= (=> (and (= x6465 0) (= x5289 x3514)) x4903) x8139))
(assert (= (and x1978 (not x8019)) x7759))
(assert (= x9174 (or (and x4116 (not x3574)) x7685)))
(assert (x9173 x6586))
(assert (x9173 x2777))
(assert (=> (<= x5729 10000) (= (x2264 x5729) (x6664 x5729))))
(assert (= x3494 (and x8852 x5843)))
(assert (x9173 x8346))
(assert (= x418 (or x9196 x7445)))
(assert (x9173 x5148))
(assert (x5765 x3532))
(assert (x9173 x5746))
(assert (= x1757 (and x4284 x4388)))
(assert (= (and x5542 x2623) x3625))
(assert (= (or x5614 x5908) x8645))
(assert (x9173 x2956))
(assert (= (and x5071 x1974) x1272))
(assert (x9173 x4240))
(assert (= (and x6671 x6311) x7714))
(assert (= (x3373 (x4000 x8195 2)) (+ 2 (x3373 x8195))))
(assert (= (x3373 (x2264 x2015)) x2015))
(assert (= (and x8455 x6771) x8897))
(assert (x9173 x454))
(assert (= x6151 (or x299 x5594)))
(assert (x9173 x6321))
(assert (x9173 x6679))
(assert (x2631 x8740))
(assert (=> (>= 10000 x4483) (= (x6664 x4483) (x2264 x4483))))
(assert (x5765 x2087))
(assert (x9173 x3232))
(assert (= x4711 (and (not x4236) x1339)))
(assert (x5765 x5))
(assert (x9173 x4296))
(assert (x9173 x2087))
(assert (x9173 x940))
(assert (= (and x8553 x1144) x7655))
(assert (= (and x3607 (not x1000)) x2688))
(assert (= true x6992))
(assert (x9173 x610))
(assert (= x3384 (and x805 x593)))
(assert (x9173 x4990))
(assert (= x4349 x3931))
(assert (x9173 x1313))
(assert (=> (<= x8266 10000) (= (x6664 x8266) (x2264 x8266))))
(assert (= (and x6176 x4554) x3508))
(assert (= (and (not x8117) x6175) x627))
(assert (= x1210 (and x181 x6215)))
(assert (= (and x7632 (not x7067)) x4253))
(assert (= (and x2122 x2689) x8911))
(assert (x9173 x4852))
(assert (= x1596 (and (not x1134) x1446)))
(assert (= x1415 (=> (and (or (not x4061) x4061) (= (= x8643 0) x4061)) x2243)))
(assert (x9173 x7822))
(assert (= x35 (and x1906 x7854)))
(assert (x5765 x435))
(assert (x9173 x3007))
(assert (x9173 x8905))
(assert (x9173 x5846))
(assert (x9173 x767))
(assert (x9173 x6873))
(assert (x9173 x8456))
(assert (=> (<= x7283 10000) (= (x6664 x7283) (x2264 x7283))))
(assert (= (x3373 (x4000 x5103 1)) (+ (x3373 x5103) 1)))
(assert (= (and (not x3638) x4711) x4464))
(assert (x9173 x4539))
(assert (x9173 x5218))
(assert (x9173 x3246))
(assert (x9173 x2745))
(assert (= (and (not x254) x9112) x8328))
(assert (= (and x2958 x2647) x2601))
(assert (= (and x3383 x1834) x1228))
(assert (= x3050 (and (not x8650) x4613)))
(assert (= x7103 (x3373 (x2264 x7103))))
(assert (x9173 x5909))
(assert (= x7720 (and x3166 x5219)))
(assert (x9173 x5677))
(assert (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x3373 (x6664 20853193852723734048814770637610870652489083209607696777694672748161462697984))))
(assert (= x7671 (=> (and (= (= x1282 0) x1152) (or x1152 (not x1152))) x6962)))
(assert (x9173 x715))
(assert (=> (>= 10000 x7347) (= (x6664 x7347) (x2264 x7347))))
(assert (x9173 x2898))
(assert (x9173 x244))
(assert (= x913 (and x6946 (not x6950))))
(assert (= x2075 (and (not x1265) x7938)))
(assert (x9173 x122))
(assert (x9173 x442))
(assert (x9173 x8326))
(assert (= x967 (and x692 x8317)))
(assert (x5765 x2399))
(assert (x2631 x17))
(assert (= x7910 (or x1456 x95 x230)))
(assert (x9173 x6072))
(assert (= x5202 (=> (and (= (> x4465 0) x7154) (or (and x7154 (and (= x5838 (x4000 x66 1)) (<= x5988 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5988 (x443 x5838)) (= (> x5988 0) x3992) (<= 0 x5988))) (and (= x7154 x3992) (not x7154)))) x2811)))
(assert (x9173 x6323))
(assert (= (x2264 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x6664 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (= (or x7966 x4758) x6386))
(assert (= x7015 (and x6123 (not x6558))))
(assert (= (and (=> (and (and (= 0 x3223) (= x2627 x458) (= x3878 x7429)) (not x8217)) x6886) (=> (and (and (= (ite (> x312 x7409) 1 0) x3868) (= x883 (x4682 x782)) (= x5566 (x5783 (x2264 x3881) (x6664 159) 0)) (= x5564 (= x883 0)) (= (= x9134 0) x3190) (<= 0 x883) (<= x883 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x730) x5566 0) x7495) (= (ite (not x5564) 1 0) x7167) (= x7409 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x883)) (= (x4000 x7495 1) x782) (= (x6748 x7167 x3868) x9134)) x8217) (and (=> (and (and (= x5518 (div x7830 1000000000000000000)) (= (mod (* x883 x312) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x7830) (= x3181 (> 0 x1511))) x3190) (and (=> x3181 x8472) (=> (and (not x3181) (and (= (> x5518 x5013) x8712) (= x1511 x5013))) (and (=> (and (and (= (= (ite x6166 1 0) 0) x7016) (= (< 115792089237316195423570985008687907853269984665640564039457 x5013) x6166)) x8712) (and (=> (and x7016 (and (= x9191 (x6748 x7882 x5188)) (= (ite (not x461) 1 0) x7882) (= x586 (mod (* 1000000000000000000 x5013) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= 0 x9191) x5535) (= x5188 (ite (> 1000000000000000000 x1467) 1 0)) (= x1467 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x586)) (= (= 0 x586) x461))) (and (=> (not x5535) x670) (=> (and (and (= (mod (* 1000000000000000000 x586) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5609) (= x6858 (< 0 x312))) x5535) (and (=> (not x6858) x7412) (=> (and x6858 (and (>= x4201 0) (= (x4682 x782) x4201) (= x1773 (div x420 1000000000000000000)) (= (div x5609 x312) x420) (<= x4201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4201 x1773) x3497))) (and (=> x3497 x5942) (=> (and (and (= x3596 (x2563 (- x4201 x1773))) (= (= (ite x3645 1 0) 0) x8475) (= (> x5013 115792089237316195423570985008687907853269984665640564039457) x3645)) (not x3497)) (and (=> (not x8475) x7146) (=> (and x8475 (and (= (x6748 x5146 x7838) x3021) (= x8679 (= 0 x3021)) (= x7838 (ite (< x4752 1000000000000000000) 1 0)) (= (= x3441 0) x4954) (= x4752 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3441)) (= x3441 (mod (* 1000000000000000000 x5013) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (not x4954) 1 0) x5146))) (and (=> (and (and (= x4290 (mod (* x3441 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x1742 0) x5673)) x8679) (and (=> (not x5673) x7950) (=> (and (and (= (div x5092 1000000000000000000) x5862) (= x5092 (div x4290 x1742)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5505) (= (x1884 x7495) x5505) (= x6002 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5862))) (= x1812 (> x5505 x6002)) (<= 0 x5505)) x5673) (and (=> x1812 x9200) (=> (and (not x1812) (and (= (x910 (+ x5505 x5862)) x4623) (= x7979 x3596) (= x6718 x1511) (= x7736 x4623))) x4560))))) (=> (not x8679) x4415))))))))))) (=> (not x7016) x7465))) (=> (and (and (= x8023 (< 115792089237316195423570985008687907853269984665640564039457 x5518)) (= (= (ite x8023 1 0) 0) x7317)) (not x8712)) (and (=> (not x7317) x704) (=> (and x7317 (and (= (ite (not x2310) 1 0) x2451) (= (mod (* x5518 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x6154) (= x2379 (ite (> 1000000000000000000 x3669) 1 0)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6154) x3669) (= x812 (x6748 x2451 x2379)) (= (= x812 0) x5000) (= (= 0 x6154) x2310))) (and (=> (not x5000) x8358) (=> (and (and (= x2731 (mod (* x6154 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1650 (> x1742 0))) x5000) (and (=> (not x1650) x4305) (=> (and x1650 (and (= (div x2731 x1742) x1485) (= (div x1485 1000000000000000000) x4306) (= x3418 (< x1337 x9046)) (= (x1884 x7495) x9046) (>= x9046 0) (= x1337 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4306))) (<= x9046 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x6140 (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5518))) (= x4554 (> 0 x6140)) (= x2294 (x910 (+ x4306 x9046)))) (not x3418)) (and (=> (and (not x4554) (and (= x5518 x8173) (= x6718 x8173) (= x7979 0) (= x7736 x2294))) x4560) (=> x4554 x1006))) (=> x3418 x1408))))))))))))) (=> (not x3190) x2718)))) x4639))
(assert (x9173 x2115))
(assert (= 2991318663 (x3373 (x6664 2991318663))))
(assert (x9173 x7688))
(assert (= (and (not x499) x8771) x1030))
(assert (= (and x462 (not x6896)) x8869))
(assert (x9173 x5773))
(assert (x9173 x6220))
(assert (x9173 x2397))
(assert (x9173 x7932))
(assert (x2631 x6874))
(assert (x9173 x1211))
(assert (x9173 x3154))
(assert (= (or x6924 x1783 x4434 x7743 x4846 x835) x5756))
(assert (x9173 x2612))
(assert (x9173 x7117))
(assert (= (x3373 (x2264 x3817)) x3817))
(assert (x9173 x1732))
(assert (x9173 x2431))
(assert (= x924 (and x4019 x4156)))
(assert (x9173 x5999))
(assert (= x2122 (and x4592 x8864)))
(assert (= (and x1666 x105) x6602))
(assert (= (and x171 x8632) x8151))
(assert (= x5557 (and x3313 x8268)))
(assert (x5765 x4134))
(assert (= x7145 (and x4601 (not x7426))))
(assert (= (+ 1 (x3373 x1256)) (x3373 (x4000 x1256 1))))
(assert (= (or x2513 x7695) x196))
(assert (x9173 x8265))
(assert (= x4778 (or x1150 x954)))
(assert (x9173 x1470))
(assert (x9173 x5341))
(assert (= (or (and x6117 x4947) x5054 (and (not x2314) x5349) x959 (and (not x3341) x5230) (and x4541 x2165)) x4272))
(assert (x9173 x6506))
(assert (x9173 x3322))
(assert (= x7172 (and (not x8022) x396)))
(assert (x9173 x8967))
(assert (= x6197 x3931))
(assert (x9173 x1806))
(assert (x9173 x8713))
(assert (= (and x7444 x5180) x5044))
(assert (x9173 x5570))
(assert (= (+ 1 (x3373 x3337)) (x3373 (x4000 x3337 1))))
(assert (=> (<= x1659 10000) (= (x2264 x1659) (x6664 x1659))))
(assert (= (x2264 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x6664 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (= (and x1553 x6845) x6518))
(assert (x9173 x8690))
(assert (x9173 x7128))
(assert (x9173 x2184))
(assert (x9173 x4396))
(assert (= x3558 (=> (= (= 0 x3968) x3085) (and (=> x3085 x8633) (=> (and (and (= x1782 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5109) true) (> 32 x5109)) (> x5109 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2232 (x910 (+ x8676 x6009))) (= (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2776) x8676) (= x2776 (x910 (+ 31 x5109)))) (not x3085)) (and (=> (and (and (= x3770 (> x308 x393)) (= (x24 x6009) x292)) (not x1782)) (and (=> x3770 x3931) (=> (and (and (= (< 115792089237316195423570985008687907853269984665640564039457 x6305) x7348) (= (x2563 (- x393 x308)) x6305) (= x7594 (= (ite x7348 1 0) 0))) (not x3770)) (and (=> (and x7594 (and (= (ite (> 1000000000000000000 x575) 1 0) x759) (= (mod (* 1000000000000000000 x6305) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x8977) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8977) x575) (= (ite (not x4973) 1 0) x7452) (= x5006 (x6748 x7452 x759)) (= (= x8977 0) x4973) (= (= 0 x5006) x6338))) (and (=> (not x6338) x3931) (=> (and (and (= (mod (* 1000000000000000000 x8977) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x6483) (= x3209 (< 0 x292))) x6338) (and (=> (not x3209) x4551) (=> (and (and (<= x8839 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3037 (> x8839 x5923)) (= x8839 (x3425 x66)) (>= x8839 0) (= x3129 (div x8690 1000000000000000000)) (= (x2563 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3129)) x5923) (= x8690 (div x6483 x292))) x3209) (and (=> x3037 x3931) (=> (and (not x3037) (and (>= x5570 0) (<= x5570 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2232 x1930) (= (x910 (+ x8839 x3129)) x6514) (= x5570 (x7596 x66)))) x5490))))))) (=> (not x7594) x3931))))) (=> (and x1782 (= x6661 true)) x6209)))))))
(assert (= (=> (and (= x263 (ite (> x1 x8373) (not (= x6449 0)) (> x1 x8373))) (or (and (and (or (and (not x728) (and (< x2189 1461501637330902918203684832716283019655932542976) (= x3659 x2458) (= x7760 (x5783 (x2264 x4396) x4176 0)) (= (x5783 (x2264 x2189) x4176 0) x7962) (= x2189 x3143) (= (x4000 x7733 1) x5024) (= x2458 (x910 (+ 96 x8608))) (<= 0 x2189) (= x7877 (x4000 x7962 1)) (= x1662 (x4000 x6358 1)) (<= x2189 1461501637330902918203684832716283019655932542975) (= x6358 (x4000 x7760 1)) (= (x6226 x5024) x2189))) (and x728 (and (= x5498 (x4000 x2006 1)) (= x6997 (x5783 (x2264 x4396) x4176 0)) (= x5070 (x910 (+ x8608 96))) (= x3659 x5070) (= x4396 x3143) (= x7322 (x4000 x7733 1)) (= (x4000 x6997 1) x2006)))) (and (= (x5131 x7733) x8888) (>= x8888 0) (>= 1461501637330902918203684832716283019655932542975 x8888) (= x728 (= x8888 0)) (< x8888 1461501637330902918203684832716283019655932542976))) (not x263)) (and (and (or (and (and (= x2103 (x910 (+ 96 x8608))) (= x3143 x6449) (= x2103 x3659) (= x1297 (x5783 (x2264 x6449) x4176 0)) (= (x4000 x5932 1) x3944) (= x3132 (x5783 (x2264 x4396) x4176 0)) (= x5932 (x4000 x3132 1))) (not x6642)) (and x6642 (and (= (x5783 (x2264 x6449) x4176 0) x6349) (= x3725 (x8547 x6349)) (= x5209 x3659) (= x4911 (x4000 x4958 1)) (= x3390 (x4000 x8354 1)) (= (x5783 (x2264 x4396) x4176 0) x8354) (= x4958 (x5783 (x2264 x3725) x4176 0)) (= (x5783 (x2264 x6449) x4176 0) x8218) (>= 1461501637330902918203684832716283019655932542975 x3725) (= x3143 x6449) (> 1461501637330902918203684832716283019655932542976 x3725) (<= 0 x3725) (= x1652 (x4000 x3390 1)) (= (x910 (+ 96 x8608)) x5209)))) (and (<= x6716 1461501637330902918203684832716283019655932542975) (>= x6716 0) (= x6716 (x5131 x7733)) (> 1461501637330902918203684832716283019655932542976 x6716) (= x6642 (< 0 x6149)) (= x6149 (x2563 (- x6449 x6716))))) x263))) x5514) x3926))
(assert (= (and x4113 x1637) x7762))
(assert (x9173 x1463))
(assert (= x1794 (and x1825 (not x7317))))
(assert (x1593 x199 x1689))
(assert (= x2527 (or x4838 x5878)))
(assert (x9173 x1571))
(assert (= (and x8616 (not x6028)) x5022))
(assert (x9173 x2337))
(assert (= x6458 (and x1596 (not x7944))))
(assert (= (and x8764 x6762) x3706))
(assert (= x334 (or x47 x4638 x1131 x1379 x6156 x41)))
(assert (x9173 x2025))
(assert (x9173 x7639))
(assert (x9173 x6975))
(assert (= (and x7231 x5222) x8408))
(assert (= (and (not x4335) x1846) x736))
(assert (x9173 x4312))
(assert (x9173 x417))
(assert (x9173 x8981))
(assert (= x60 (or (and x4011 (not x8918)) x3597 x6111 x5115 (and x6317 x7811) (and x6691 x7078) (and x4544 x4898) (and (not x7927) x3430) (and x14 x7225))))
(assert (x5765 x5004))
(assert (= (and (=> (and x5843 (= (> x3188 x2240) x6500)) (and (=> x6500 x6801) (=> (and (and (= (x2563 (- x2240 x3188)) x6432) (= (> x5652 x6432) x8217)) (not x6500)) x4639))) (=> (and (not x5843) (= x8217 x5843)) x4639)) x5392))
(assert (= (and x4507 (not x58)) x1001))
(assert (= x6264 (and x5266 x4962)))
(assert (= x6031 (or (and x9230 x967) (and x8415 x3887) x7799 (and x5199 (not x216)) (and x4332 (not x9208)) x4246)))
(assert (=> (>= 10000 x1753) (= (x6664 x1753) (x2264 x1753))))
(assert (= (and x8029 (not x1632)) x3311))
(assert (= (x3373 (x2264 x4107)) x4107))
(assert (= (and x3691 x6590) x5336))
(assert (x9173 x6440))
(assert (x9173 x2197))
(assert (= x3986 (and x9100 (not x8211))))
(assert (= (and x3692 (not x6776)) x2417))
(assert (= (and x3318 x214) x6313))
(assert (x5765 x4501))
(assert (x9173 x210))
(assert (= x3593 (and x7405 (not x7752))))
(assert (=> (>= 10000 x7894) (= (x2264 x7894) (x6664 x7894))))
(assert (x9173 x3171))
(assert (x9173 x4367))
(assert (= (x3373 (x4000 x5932 1)) (+ (x3373 x5932) 1)))
(assert (x9173 x7328))
(assert (x9173 x2091))
(assert (x9173 x4644))
(assert (= (and (=> (and x1427 (and (or (and x4647 (and (<= x8555 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4000 x8787 2) x2130) (= x8787 (x5783 (x2264 x8593) x3119 0)) (= (not x6263) x8780) (>= x8555 0) (= x6263 (< x8555 x7886)) (= x8555 (x5995 x2130)))) (and (= x8780 x4647) (not x4647))) (and (= (x6018 x6466) x8593) (= (x5783 (x2264 x9147) x3119 0) x6369) (= x4647 (ite (< 1 x1) (not (= x8593 0)) (< 1 x1))) (>= x8593 0) (= (x4000 x6369 1) x6466) (<= x8593 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x8593)))) x2936) (=> (and (not x1427) (and (= x8346 0) (= x833 x9147))) x6485)) x38))
(assert (= (and x317 (not x6398)) x2217))
(assert (= x2977 (and x3137 x7847)))
(assert (x9173 x6593))
(assert (= (and x8185 (not x1865)) x8495))
(assert (x9173 x5832))
(assert (x8537 x861))
(assert (= (and x3423 x4475) x8882))
(assert (x9173 x6851))
(assert (x9173 x7830))
(assert (x9173 x604))
(assert (x9173 x3520))
(assert (x9173 x8510))
(assert (x9173 x4378))
(assert (= (and (not x8156) x8681) x3022))
(assert (x9173 x2881))
(assert (x9173 x6564))
(assert (= x8118 (and (not x3411) x5984)))
(assert (x9173 x6047))
(assert (x9173 x4631))
(assert (x9173 x2402))
(assert (= (and (not x1782) x2411) x2860))
(assert (x9173 x3386))
(assert (= x1868 (and (not x6890) x6520)))
(assert (x5765 x4427))
(assert (= x1508 (and x1846 x4335)))
(assert (= x959 (and x8595 x2142)))
(assert (x9173 x1493))
(assert (x9173 x2776))
(assert (= (and x8076 x3726) x1896))
(assert (= (=> (and (= x1182 (= x589 0)) (or (and (= (x4000 x1695 2) x7952) x1182) (and (not x1182) (= (x5783 (x2264 x589) x1695 0) x3374)))) x5979) x4679))
(assert (= x7722 (or (and (not x8546) x4225) (and x7300 x5937))))
(assert (x9173 x4823))
(assert (= (x3373 (x4000 x1580 1)) (+ 1 (x3373 x1580))))
(assert (= (and x4697 x4688) x1402))
(assert (= 1608758631 (x3373 (x6664 1608758631))))
(assert (x9173 x7865))
(assert (x2631 x4539))
(assert (= x1520 (or x7325 x1225)))
(assert (x5765 x5057))
(assert (=> (>= 10000 x5711) (= (x2264 x5711) (x6664 x5711))))
(assert (x9173 x2752))
(assert (x9173 x7610))
(assert (x9173 x2486))
(assert (= (+ 1 (x3373 x1058)) (x3373 (x4000 x1058 1))))
(assert (= (+ (x3373 x783) 2) (x3373 (x4000 x783 2))))
(assert (= x676 (and x4098 x175)))
(assert (= x2753 (and x7155 x6219)))
(assert (= x396 (or x6353 (and x8783 x6236))))
(assert (x2631 x7111))
(assert (x9173 x3908))
(assert (x9173 x4609))
(assert (= x6142 (and x3603 x8559)))
(assert (= (x3373 (x2264 x135)) x135))
(assert (x9173 x8448))
(assert (= (and x7112 x8688) x4821))
(assert (= x1680 (and (not x7434) x2154)))
(assert (= (=> (and (= 0 x5664) (= x5289 x495)) x4669) x7176))
(assert (x9173 x4179))
(assert (= (and x5820 (not x7936)) x7547))
(assert (= x4453 (and x4977 (not x1413))))
(assert (= (and x8482 x791) x7869))
(assert (= x4006 (and x4303 (not x6000))))
(assert (= x6043 (and (not x1450) x6243)))
(assert (x9173 x7245))
(assert (x9173 x5985))
(assert (= x4669 (=> (and (= x495 x6629) (= x5664 x920)) x5567)))
(assert (x9173 x4033))
(assert (x9173 x5260))
(assert (= x7863 (=> (and (or (and (and (= x454 x8717) (= x8480 x4174) (= x4396 x1499)) (not x8480)) (and x8480 (and (= (x7075 x3329) x731) (= x1499 x731) (= (= x731 0) x4757) (> 1461501637330902918203684832716283019655932542976 x731) (= x454 x3881) (= (x4000 x4808 1) x3329) (<= x731 1461501637330902918203684832716283019655932542975) (= (x5783 (x2264 x3881) (x6664 154) 0) x4808) (= x4174 (not x4757)) (<= 0 x731)))) (and (= x8480 (> x2893 0)) (= (x910 (+ 32 x7212)) x4902))) x1455)))
(assert (= x8633 x4298))
(assert (x9173 x7192))
(assert (x9173 x8058))
(assert (= x3395 (and x254 x9112)))
(assert (x9173 x6673))
(assert (= x5942 x3931))
(assert (x9173 x5149))
(assert (=> (>= 10000 x444) (= (x2264 x444) (x6664 x444))))
(assert (x9173 x7907))
(assert (= x1416 (and (not x6235) x2873)))
(assert (= (and x2786 x1288) x7304))
(assert (= x4350 (and x7951 x6594)))
(assert (= (or (and x3643 (not x5718)) x153) x1994))
(assert (x9173 x5344))
(assert (x9173 x6388))
(assert (x9173 x6379))
(assert (x9173 x1503))
(assert (= x3488 (or x8419 (and (not x446) x6211))))
(assert (= x7142 (or x8942 x2016 x631 x7802)))
(assert (x9173 x3223))
(assert (x9173 x5360))
(assert (= (=> (and (= x150 x4076) (= x496 x3668)) x8538) x2675))
(assert (x9173 x7230))
(assert (x9173 x5076))
(assert (x9173 x6493))
(assert (x9173 x822))
(assert (x9173 x5370))
(assert (= (and (not x3085) x1426) x2411))
(assert (= x7173 (and x4510 x1349)))
(assert (= (and (not x3391) x7246) x7985))
(assert (x9173 x6129))
(assert (x9173 x7314))
(assert (x9173 x9191))
(assert (x5765 x3221))
(assert (x5765 x6759))
(assert (= x2513 (and (not x6087) x3262)))
(assert (= (and x8577 (not x5700)) x398))
(assert (x9173 x2085))
(assert (x2631 x142))
(assert (= x8157 (and x6610 x1721)))
(assert (= (or x8739 x3950) x2086))
(assert (= x7080 (=> (= x8140 (= 0 x5274)) (and (=> (and (not x8140) (= x3610 (or (and (< x2750 32) (= true (<= x2750 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2750)))) (and (=> (and x3610 (= x3217 x2206)) x1579) (=> (and (not x3610) (and (= x1429 x2066) (= x5444 x3217) (= 1 x1292))) x2118))) (=> (and x8140 (= x3217 x2206)) x1579)))))
(assert (= (or x3364 x7323) x8904))
(assert (x9173 x6781))
(assert (= (and x6424 x4444) x6042))
(assert (= (and x2219 (not x3590)) x2198))
(assert (= (and (not x1240) x4674) x5712))
(assert (= (=> (and (or x5153 (not x5153)) (= (= 0 x2330) x5153)) x3008) x2481))
(assert (x9173 x3642))
(assert (= x5594 (and (not x8963) x4387)))
(assert (= (and x2698 x4774) x6117))
(assert (= (x6664 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2264 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (and x2852 x4239) x2318))
(assert (x9173 x53))
(assert (= (or x6739 x6792 x8357 x7612) x2551))
(assert (= x6946 (and x4270 x2338)))
(assert (x9173 x1925))
(assert (x9173 x5166))
(assert (x9173 x7537))
(assert (x9173 x1065))
(assert (= (and (not x1315) x7810) x6713))
(assert (= (and (not x5775) x1667) x82))
(assert (x9173 x4535))
(assert (x5765 x5872))
(assert (x9173 x5198))
(assert (= (x3373 (x4000 x7962 1)) (+ (x3373 x7962) 1)))
(assert (x9173 x2320))
(assert (= x7867 (and (not x1179) x8439)))
(assert (= (or x8734 x3955 x3174 x856 x4878 x6738) x2922))
(assert (x9173 x5517))
(assert (=> (<= x8265 10000) (= (x2264 x8265) (x6664 x8265))))
(assert (= x8431 (and x8464 x3675)))
(assert (= x2099 (and (not x5222) x7231)))
(assert (x9173 x495))
(assert (x9173 x8471))
(assert (= x7946 (and x3996 x5736)))
(assert (= (and x4552 (not x4389)) x2216))
(assert (x9173 x8602))
(assert (= x1767 (=> (and (= x7965 x3038) (= 0 x8694)) x1249)))
(assert (= (and x1123 (not x1729)) x9185))
(assert (x9173 x8891))
(assert (x9173 x7740))
(assert (x9173 x1676))
(assert (= (x3373 (x2264 x4356)) x4356))
(assert (= x7557 (or x5754 x5330)))
(assert (= x4964 (and x7660 x4640)))
(assert (x9173 x831))
(assert (x9173 x7251))
(assert (= (and x4011 x8918) x3430))
(assert (x9173 x6352))
(assert (x9173 x4334))
(assert (x9173 x4982))
(assert (= (x3373 (x4000 x3119 2)) (+ (x3373 x3119) 2)))
(assert (=> (>= 10000 x6306) (= (x6664 x6306) (x2264 x6306))))
(assert (x9173 x5725))
(assert (= x6786 (x3373 (x2264 x6786))))
(assert (=> (<= x940 10000) (= (x6664 x940) (x2264 x940))))
(assert (= x8274 (and x3484 (not x7713))))
(assert (x9173 x7396))
(assert (= x6262 (and x3000 (not x3978))))
(assert (= x7445 (or (and x4131 (not x5288)) x207 (and (not x3365) x2377) (and x6573 x8587) (and x6431 x6102) x6130)))
(assert (= (and x118 x7115) x2833))
(assert (= (and (not x4015) x1791) x2958))
(assert (x9173 x3702))
(assert (= x4200 (x3373 (x2264 x4200))))
(assert (x9173 x4384))
(assert (= 4294967296 (x3373 (x6664 4294967296))))
(assert (= x1948 (and x5194 (not x8853))))
(assert (= x290 (x3373 (x2264 x290))))
(assert (x5765 x5168))
(assert (= x2736 (or (and x3492 x8429) (and x2638 x6805) (and x3590 x2219) x8518 (and (not x4961) x6833) x331 (and x2198 x6548) x4056 (and x4800 (not x1866)))))
(assert (= x6438 (and (not x8200) x6644)))
(assert (x9173 x5774))
(assert (= x4420 (=> (and (or (not x4548) x4548) (= x4548 (= 0 x384))) x4681)))
(assert (=> (<= x6598 10000) (= (x2264 x6598) (x6664 x6598))))
(assert (x9173 x3345))
(assert (x9173 x4596))
(assert (x9173 x2800))
(assert (x2631 x5334))
(assert (= (and x9081 x8703) x4507))
(assert (= x2900 (and (not x5040) x3360)))
(assert (= (x3373 (x2264 x3114)) x3114))
(assert (=> (<= x7916 10000) (= (x2264 x7916) (x6664 x7916))))
(assert (= (and x5506 (not x7129)) x118))
(assert (= (and x1666 (not x105)) x1170))
(assert (x5765 x589))
(assert (= x6816 (and (not x2487) x3243)))
(assert (= x7554 (and (not x3548) x2688)))
(assert (= x6512 (and x4451 x521)))
(assert (= (and x3106 (not x8480)) x937))
(assert (= x805 (or x2547 x8225)))
(assert (= x5770 (and (not x4511) x5393)))
(assert (= x6891 (and x9179 (not x9059))))
(assert (= (and x3806 (not x445)) x5739))
(assert (x9173 x2735))
(assert (x5765 x8460))
(assert (= (and x6651 (not x5445)) x1759))
(assert (= (and x214 (not x3318)) x3227))
(assert (= (x3373 (x2264 x5341)) x5341))
(assert (= (or x3011 x3808 x4786 x4663 x677 x8549) x3421))
(assert (= (x3373 (x4000 x1734 1)) (+ 1 (x3373 x1734))))
(assert (= x5067 (or x6178 x3715 x6320 x4824 x1406 x1504)))
(assert (= (=> (and (= x6976 0) (= x2077 x7571)) x2915) x7747))
(assert (x9173 x451))
(assert (= (=> (and (= x140 (x4000 x803 1)) (= (x4000 x6400 1) x803) (= (x5783 (x2264 x1499) x9128 0) x6400)) x7622) x9041))
(assert (x9173 x8900))
(assert (x9173 x5259))
(assert (x9173 x2294))
(assert (= (and x2961 x4815) x272))
(assert (x9173 x1466))
(assert (= x6660 (or x8944 x2057)))
(assert (x5765 x6972))
(assert (= x5913 (=> (= (= x529 0) x5174) (and (=> x5174 x6498) (=> (and (and (= x4718 (x5783 (x2264 x560) (x6664 161) 0)) (= (< 0 x4089) x1638) (= (x650 x4718) x4089)) (not x5174)) (and (=> (not x1638) x3976) (=> (and x1638 (and (<= x7422 1461501637330902918203684832716283019655932542975) (< x7422 1461501637330902918203684832716283019655932542976) (<= 0 x7422) (= x3616 x5120) (= x1387 (= x7422 x3881)) (= (x7717 x4718 0) x3616) (= (x4575 x5120) x7422))) (and (=> (and (and (= (x650 x9053) x3717) (= (x5783 (x2264 x560) (x6664 161) 0) x9053) (= (> 1 x3717) x3061)) x1387) (and (=> (and (and (= (x2563 (- x3717 1)) x5822) (= x8783 (= x5822 0))) (not x3061)) (and (=> x8783 x7566) (=> (and (and (= x5636 (x5783 (x2264 x560) (x6664 161) 0)) (= x1797 (> x7249 x5822)) (= x7249 (x650 x5636))) (not x8783)) (and (=> (not x1797) x5658) (=> (and (and (= (x650 x7497) x6268) (= (x7717 x5636 0) x7440) (<= x3350 1461501637330902918203684832716283019655932542975) (= (> x6268 0) x3678) (> 1461501637330902918203684832716283019655932542976 x3350) (<= 0 x3350) (= (x5783 (x2264 x560) (x6664 161) 0) x7497) (= (x4575 x2277) x3350) (= (x4000 x7440 x5822) x2277)) x1797) (and (=> x3678 x7566) (=> (not x3678) x5658))))))) (=> x3061 x3931))) (=> (not x1387) x425)))))))))
(assert (x9173 x6532))
(assert (x2631 x7875))
(assert (x9173 x3148))
(assert (x9173 x2581))
(assert (= x833 (x3373 (x2264 x833))))
(assert (= x302 (or x7590 x6313 x1462 x6107 x3531 x4300)))
(assert (x9173 x2843))
(assert (x9173 x1471))
(assert (= x3789 (and (not x5952) x4732)))
(assert (x9173 x7377))
(assert (x9173 x5434))
(assert (= x4110 (or x7181 x8129)))
(assert (= (and (not x7417) x4126) x3883))
(assert (= (and x1981 (not x8187)) x4497))
(assert (= (=> (= (= x1166 x5259) x4779) (and (=> (and x4779 (and (= x5142 x1932) (= x695 x560))) x6928) (=> (and (not x4779) (= x2058 (< 0 x1166))) (and (=> (and (not x2058) (and (= x8207 x1932) (= x560 x7332))) x1073) (=> (and (and (= x5015 (x4000 x946 1)) (<= 0 x7778) (= x2091 (x910 (+ x1932 96))) (>= 1461501637330902918203684832716283019655932542975 x1595) (= (x4000 x5898 1) x946) (<= 0 x8153) (>= 1461501637330902918203684832716283019655932542975 x8153) (< x8153 1461501637330902918203684832716283019655932542976) (= x2605 (= x7778 0)) (> 1461501637330902918203684832716283019655932542976 x1595) (<= 0 x1595) (= x8153 (x8091 x5898)) (= x7778 (x6968 x5015)) (= x5898 (x5783 (x2264 x560) x1299 0)) (= (x6658 x946) x1595) (<= x7778 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2058) (and (=> (and (not x2605) (and (= (= x8153 0) x7848) (or (and (not x7848) (and (= x5424 (x4000 x3424 1)) (= x3424 (x5783 (x2264 x8153) x1299 0)))) (and (= (x4000 x1299 1) x7804) x7848)))) x3980) (=> x2605 x8633))))))) x644))
(assert (x9173 x9))
(assert (x9173 x4411))
(assert (= (x3373 (x2264 x1483)) x1483))
(assert (x9173 x542))
(assert (=> (<= x2254 10000) (= (x6664 x2254) (x2264 x2254))))
(assert (x9173 x1243))
(assert (= (=> (= x1639 (= x4912 0)) (and (=> x1639 x8633) (=> (and (not x1639) (and (= x4032 (x910 (+ x3584 x267))) (= x5434 (x910 (+ 31 x1157))) (= x6521 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1157) true) (< x1157 32)) (> x1157 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x6748 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5434) x3584))) (and (=> (and x6521 (= x6661 true)) x6209) (=> (and (not x6521) (and (= (x5599 x267) x3264) (= x5702 (= x3264 0)))) (and (=> (and x5702 (and (= x7466 x6316) (= x3552 x1612) (= x2562 x4032) (= x7219 x6523))) x2976) (=> (not x5702) x8633))))))) x4855))
(assert (= (x3373 (x4000 x7824 1)) (+ (x3373 x7824) 1)))
(assert (= (=> (and (= (= 0 x4060) x1663) (or (and (not x1663) (and (= x5134 (x5783 (x2264 x3881) (x6664 158) 0)) (= (x5783 (x2264 x560) x5134 0) x7825) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2431) (= (x1124 x7474) x2431) (= (= 0 x2431) x9067) (= x7474 (x4000 x7825 1)) (= (ite x9067 1 0) x8654) (<= 0 x2431))) (and (= x4060 x8654) x1663))) x3781) x8704))
(assert (= x4816 (=> (and (>= x5375 0) (<= x5375 1461501637330902918203684832716283019655932542975) (= x1974 (= 0 x5375)) (< x5375 1461501637330902918203684832716283019655932542976)) (and (=> x1974 x1785) (=> (and (and (= (= 0 x7964) x7581) (= (x910 (+ 4 x9171)) x8543) (>= x5375 0) (= (x910 (+ x4727 32)) x501) (<= x5375 1461501637330902918203684832716283019655932542975) (= (x6844 (x2264 x5375)) x7964) (= (x910 (+ x8543 32)) x4727) (> 1461501637330902918203684832716283019655932542976 x5375)) (not x1974)) (and (=> x7581 x8941) (=> (and (> 4294967296 x2526) (not x7581)) x1785)))))))
(assert (= (and x8798 (not x326)) x6787))
(assert (=> (>= 10000 x4657) (= (x2264 x4657) (x6664 x4657))))
(assert (x9173 x5618))
(assert (x9173 x6941))
(assert (= (+ 2 (x3373 x1580)) (x3373 (x4000 x1580 2))))
(assert (= x5984 (or x3326 x8725)))
(assert (= x3116 (and x6252 x8935)))
(assert (= (=> (= x6661 true) x6209) x5658))
(assert (= x6814 (and x6734 x5113)))
(assert (= x7506 (or (and x2457 x5129) (and (not x6932) x5796))))
(assert (= x3380 (=> (and (= x8658 x156) (= x1800 x6656)) x6670)))
(assert (= (and (not x3025) x3309) x5182))
(assert (=> (>= 10000 x5329) (= (x2264 x5329) (x6664 x5329))))
(assert (= (or x2380 (and (not x6242) x1365)) x8425))
(assert (x9173 x1453))
(assert (= (=> (and (= 0 x7859) (= x6532 x7842)) x3785) x2512))
(assert (x9173 x2257))
(assert (=> (>= 10000 x7776) (= (x2264 x7776) (x6664 x7776))))
(assert (x9173 x4483))
(assert (x9173 x6059))
(assert (=> (>= 10000 x6297) (= (x6664 x6297) (x2264 x6297))))
(assert (x9173 x6618))
(assert (x9173 x4316))
(assert (= (and x1178 (not x8862)) x2693))
(assert (x9173 x7631))
(assert (= x3612 (=> (and (or (and (and (and (= x8824 (x2563 (- x8249 x8761))) (<= x8761 1461501637330902918203684832716283019655932542975) (= x245 (> x8824 0)) (< x8761 1461501637330902918203684832716283019655932542976) (= x8761 (x8805 x7421)) (<= 0 x8761)) (or (and (and (< x2804 1461501637330902918203684832716283019655932542976) (<= 0 x2804) (= (x679 x1649) x2804) (>= 1461501637330902918203684832716283019655932542975 x2804) (= (x5783 (x2264 x8249) x9128 0) x1649)) x245) (not x245))) x3648) (and (not x3648) (and (and (< x5798 1461501637330902918203684832716283019655932542976) (>= x5798 0) (= x5798 (x8805 x7421)) (= x2861 (= 0 x5798)) (>= 1461501637330902918203684832716283019655932542975 x5798)) (or (and (and (= (x3167 x8748) x2285) (<= x2285 1461501637330902918203684832716283019655932542975) (< x2285 1461501637330902918203684832716283019655932542976) (>= x2285 0) (= x8748 (x4000 x7421 1))) (not x2861)) x2861)))) (= x3648 (ite (< x2193 x1) (not (= x8249 0)) (< x2193 x1)))) x2630)))
(assert (= (and (not x3738) x4464) x8454))
(assert (x9173 x9083))
(assert (= (and x2347 x5812) x8507))
(assert (x9173 x7789))
(assert (x9173 x5904))
(assert (x9173 x1631))
(assert (x9173 x3028))
(assert (= x9043 (=> (and (or (and (not x6890) (and (<= 0 x7346) (= x3117 (= 0 x7346)) (= (ite x3117 1 0) x4060) (= x2110 (x5783 (x2264 x560) x8767 0)) (= x7346 (x2017 x2110)) (= x8767 (x5783 (x2264 x3881) (x6664 158) 0)) (<= x7346 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (= x4060 x2510) x6890)) (and (= x2510 (x6016 x8529)) (= (x5783 (x2264 x560) x1278 0) x8529) (< x2510 256) (= x6890 (= 0 x2510)) (>= x2510 0) (= x1278 (x5783 (x2264 x3881) (x6664 160) 0)) (<= x2510 255))) x8704)))
(assert (= (=> (and (and (= x8844 (> x2119 x6920)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6920) (<= 0 x6920)) (or (and (= x7074 0) (not x8844)) (and x8844 (= x7074 x2119)))) x2447) x3165))
(assert (= x6330 (and (not x5010) x3375)))
(assert (x9173 x8977))
(assert (= (x3373 (x2264 x5237)) x5237))
(assert (x9173 x5435))
(assert (x9173 x1885))
(assert (x5765 x6404))
(assert (= (and x9132 x4685) x2009))
(assert (x9173 x2351))
(assert (= (and x2501 x2032) x8872))
(assert (= (=> (= (= x2352 x3572) x5657) (and (=> (and (= (< 0 x3572) x6036) (not x5657)) (and (=> (and (and (> 1461501637330902918203684832716283019655932542976 x589) (<= x6982 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x6982 0) (< x7607 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x589) (= (x5783 (x2264 x1499) x1695 0) x2449) (= x8719 (x4000 x7130 1)) (= (x4000 x2449 1) x7130) (= x9109 (= 0 x6982)) (= x589 (x697 x7130)) (>= x7607 0) (>= x589 0) (= x7607 (x4998 x2449)) (<= x7607 1461501637330902918203684832716283019655932542975) (= (x3835 x8719) x6982)) x6036) (and (=> (and (not x9109) (and (= x6845 (= x7607 0)) (or (and x6845 (= x6571 (x4000 x1695 1))) (and (and (= x4274 (x5783 (x2264 x7607) x1695 0)) (= (x4000 x4274 1) x8958)) (not x6845))))) x4679) (=> x9109 x3378))) (=> (not x6036) x87))) (=> x5657 x6249))) x4301))
(assert (= (or x3942 x8277) x4960))
(assert (x9173 x6267))
(assert (x2631 x6467))
(assert (x9173 x1957))
(assert (x9173 x784))
(assert (= x1999 (and x7045 (not x7016))))
(assert (= x4755 (or x1064 x768)))
(assert (= x3060 (x3373 (x2264 x3060))))
(assert (= x8757 (and x8792 x6878)))
(assert (= x621 (and x8029 x1632)))
(assert (x9173 x1608))
(assert (x9173 x2850))
(assert (= x7471 (=> (and (= x6096 x4344) (= 0 x8627)) x7268)))
(assert (x9173 x1784))
(assert (x9173 x1191))
(assert (x5765 x519))
(assert (= (and x805 (not x593)) x3797))
(assert (= (or x5023 x6753) x5492))
(assert (= x8008 (and x1759 x4345)))
(assert (x9173 x8910))
(assert (= x6256 (and (not x4451) x521)))
(assert (= (and x3583 (not x351)) x3671))
(assert (= (and x13 x8904) x4504))
(assert (x9173 x1786))
(assert (x9173 x2232))
(assert (= (+ (x3373 x1154) 1) (x3373 (x4000 x1154 1))))
(assert (x4899 x5434))
(assert (x9173 x2891))
(assert (x5765 x4200))
(assert (x9173 x3006))
(assert (x9173 x1805))
(assert (= x1990 (and (not x1235) x4583)))
(assert (= x2079 (and x3906 x3300)))
(assert (x9173 x8593))
(assert (= x2423 (and x6091 x2436)))
(assert (x9173 x3358))
(assert (x9173 x2121))
(assert (= (and x3555 (not x117)) x2698))
(assert (x9173 x9133))
(assert (x9173 x8808))
(assert (= (and x9032 (not x2037)) x3562))
(assert (= x1909 (and x4110 x2659)))
(assert (x9173 x6391))
(assert (= x2399 (x3373 (x2264 x2399))))
(assert (x9173 x4777))
(assert (=> (>= 10000 x6696) (= (x6664 x6696) (x2264 x6696))))
(assert (x9173 x172))
(assert (x9173 x3387))
(assert (x9173 x1308))
(assert (= (x3373 (x2264 x7776)) x7776))
(assert (= (and (not x8443) x8512) x505))
(assert (= x6616 (or x1219 x143)))
(assert (= (or x7628 x6188) x4513))
(assert (= (x3373 (x4000 x8291 1)) (+ 1 (x3373 x8291))))
(assert (= x2118 (=> (and (= x1068 x2176) (= x1292 x7482) (= x5367 x9104) (= x5444 x1584)) x8428)))
(assert (x9173 x1647))
(assert (x9173 x7332))
(assert (= x5342 (not (and (= (x4385 x9052) x4122) (<= x4122 1461501637330902918203684832716283019655932542975) (= x9052 (x4000 x8659 1)) (= (x5783 (x2264 x8254) x2128 0) x8659) (< x4122 1461501637330902918203684832716283019655932542976) (>= x4122 0)))))
(assert (= x6156 (and x1210 x8733)))
(assert (x9173 x5924))
(assert (x9173 x8731))
(assert (x9173 x4943))
(assert (= x1512 (and x4235 (not x2136))))
(assert (x9173 x4873))
(assert (x9173 x3791))
(assert (x9173 x4159))
(assert (x9173 x3543))
(assert (= (+ (x3373 x999) 1) (x3373 (x4000 x999 1))))
(assert (= (and x2445 x3914) x635))
(assert (x9173 x2444))
(assert (x9173 x5859))
(assert (= (x3373 (x4000 x6389 1)) (+ 1 (x3373 x6389))))
(assert (= x5224 (=> (and (= x8736 x9004) (= x6492 x3821)) x4908)))
(assert (= x5421 (and x6205 x2742)))
(assert (= x7217 (or x8370 x7984)))
(assert (x9173 x5568))
(assert (= (or (and x5486 x8018) x6186 x4772 (and x6476 (not x3707)) (and (not x6068) x4581) (and x8211 x9100)) x1879))
(assert (x9173 x6528))
(assert (x9173 x1536))
(assert (x9173 x1311))
(assert (= (and x3491 x508) x5054))
(assert (x9173 x2614))
(assert (= (and x4625 x8817) x473))
(assert (x9173 x1360))
(assert (= x5612 (and x4671 x2108)))
(assert (= x5315 (and x2551 x4280)))
(assert (= x8167 (or x3435 x6486 x157 x7041 x1827 x1777)))
(assert (x9173 x3595))
(assert (x9173 x5505))
(assert (x9173 x384))
(assert (x9173 x6080))
(assert (x9173 x8758))
(assert (= x2996 (and x2483 x4467)))
(assert (x9173 x9028))
(assert (x9173 x6103))
(assert (= (+ 2 (x3373 x4597)) (x3373 (x4000 x4597 2))))
(assert (= x2694 (x3373 (x2264 x2694))))
(assert (x5765 x74))
(assert (= x1060 (=> (and (or x276 (not x276)) (= x276 (= 0 x674))) x5705)))
(assert (= x5852 (=> (= x6624 x1471) x6023)))
(assert (x9173 x6965))
(assert (= (or (and x2334 x6899) x4271 x6731 (and x7232 x6355) (and (not x8434) x2791) (and x2754 (not x5785))) x8219))
(assert (x9173 x4618))
(assert (= x5055 (and x5753 x2672)))
(assert (= (and x7260 x83) x1755))
(assert (x9173 x8519))
(assert (= (and x1866 x4800) x6833))
(assert (x9173 x5825))
(assert (x5765 x290))
(assert (= x1788 (or x5605 x2737)))
(assert (x9173 x1017))
(assert (x9173 x7439))
(assert (x9173 x2084))
(assert (= (and x1427 x4538) x2706))
(assert (= (+ 1 (x3373 x917)) (x3373 (x4000 x917 1))))
(assert (x9173 x7338))
(assert (= (and x5700 x8577) x6812))
(assert (x9173 x2071))
(assert (x9173 x2179))
(assert (x9173 x8839))
(assert (= (and x4538 (not x1427)) x8837))
(assert (x9173 x7278))
(assert (x9173 x5057))
(assert (= x2756 (x3373 (x2264 x2756))))
(assert (=> (<= x1486 10000) (= (x2264 x1486) (x6664 x1486))))
(assert (x5765 x632))
(assert (x5765 x1215))
(assert (x9173 x1322))
(assert (x9173 x2191))
(assert (= (or x1200 x6632) x943))
(assert (x9173 x6265))
(assert (x9173 x5247))
(assert (= (and x2031 (not x4068)) x4515))
(assert (= (x3373 (x2264 x7056)) x7056))
(assert (= x69 (and x7923 x5361)))
(assert (= (and x4944 x9087) x4351))
(assert (= (=> (and (= x3668 0) (= x5353 x4076)) x2675) x7642))
(assert (= (and x2840 x9066) x4082))
(assert (= (and x8947 (not x4035)) x1889))
(assert (= x3003 (and x2143 (not x584))))
(assert (= x1504 (and x7555 x4293)))
(assert (=> (>= 10000 x8593) (= (x6664 x8593) (x2264 x8593))))
(assert (= x3806 (and x4255 (not x8580))))
(assert (x5765 x8249))
(assert (= x1304 (and x3243 x2487)))
(assert (= (x3373 (x2264 x8483)) x8483))
(assert (= x2057 (and x5744 x7310)))
(assert (x9173 x56))
(assert (x9173 x5895))
(assert (x9173 x8377))
(assert (x9173 x4626))
(assert (x9173 x135))
(assert (x9173 x5644))
(assert (x9173 x903))
(assert (x9173 x2974))
(assert (= x7563 (and (=> (and x1820 (and (and (= x7673 (x524 x4703)) (> 1461501637330902918203684832716283019655932542976 x7673) (= x5479 (x5783 (x2264 x7345) x2069 0)) (= (ite (> x1 1) (not (= x7673 0)) (> x1 1)) x2651) (>= x7673 0) (>= 1461501637330902918203684832716283019655932542975 x7673) (= x4703 (x4000 x5479 1))) (or (and x2651 (and (= (not x5365) x5901) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5032) (= x5365 (> x3231 x5032)) (= x5032 (x997 x857)) (= x2329 (x5783 (x2264 x7673) x2069 0)) (>= x5032 0) (= (x4000 x2329 2) x857))) (and (= x5901 x2651) (not x2651))))) x7392) (=> (and (not x1820) (and (= 0 x7656) (= x2163 x7345))) x7941))))
(assert (= x7902 (and x1402 x7834)))
(assert (x9173 x5502))
(assert (x9173 x4430))
(assert (x9173 x8636))
(assert (= (and x818 x4264) x2580))
(assert (x5765 x4356))
(assert (x9173 x4259))
(assert (= x7473 (=> (and (= x2332 x1017) (= x911 x1020)) x3165)))
(assert (= (and x8072 x1585) x8576))
(assert (= x2482 (and x9009 x472)))
(assert (= x5117 (or x8882 x3168)))
(assert (x9173 x7882))
(assert (= x5005 (or x4901 x7404)))
(assert (x9173 x7096))
(assert (x9173 x8540))
(assert (=> (>= 10000 x31) (= (x2264 x31) (x6664 x31))))
(assert (x9173 x2971))
(assert (x2631 x7424))
(assert (x9173 x8065))
(assert (= x5236 (=> (and (= x606 x3650) (= 0 x4690) (= x3924 x640)) x6525)))
(assert (x9173 x865))
(assert (= x558 (or (and x2519 (not x7696)) x9102)))
(assert (x9173 x7342))
(assert (x2631 x42))
(assert (= (and (not x7258) x6198) x1325))
(assert (= x8267 (=> (and (or (and (= x19 0) (not x5190)) (and (= x19 x7526) x5190)) (and (= (x9084 x5719) x566) (= x1236 (x4000 x104 1)) (= (x5783 (x2264 x4396) x4176 0) x5443) (= (x5783 (x2264 x4396) x3250 0) x104) (= x4346 (x4000 x2935 1)) (<= x6920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5783 (x2264 x3881) (x6664 154) 0) x4176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7526) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7787) (<= 0 x7526) (<= x1534 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1534) (= x1404 (x5783 (x2264 x3881) (x6664 155) 0)) (= (x8732 x8005) x7787) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x566) (= x8530 (x5783 (x2264 x4396) x1404 0)) (= (x4000 x8530 2) x8005) (= (x4000 x5443 2) x5719) (<= 0 x7787) (<= 0 x6920) (>= x566 0) (= (x3901 x104) x1534) (= (> x7526 x6920) x5190) (= x7526 (x6001 x1236)) (= x3250 (x5783 (x2264 x3881) (x6664 158) 0)))) x5145)))
(assert (= x7744 (and x2075 (not x6875))))
(assert (x9173 x1405))
(assert (x9173 x6370))
(assert (= x9112 (and x4504 (not x8057))))
(assert (x9173 x292))
(assert (= x585 (=> (and (or x4450 (not x4450)) (= x4450 (= 0 x5274))) x7080)))
(assert (x9173 x4081))
(assert (x9173 x3142))
(assert (= x5796 (and (not x2457) x5129)))
(assert (= (and x5345 x2587) x15))
(assert (x9173 x669))
(assert (= x8755 (and (not x4813) x3784)))
(assert (x9173 x7545))
(assert (= (+ (x3373 x5302) 1) (x3373 (x4000 x5302 1))))
(assert (= (and x2536 (not x612)) x6033))
(assert (= x5491 (and (not x7951) x6594)))
(assert (= x1056 (and x8517 x7166)))
(assert (= x1667 (and x3608 x2200)))
(assert (= (and x2075 x6875) x4387))
(assert (x9173 x3850))
(assert (= (and x342 x2744) x1201))
(assert (= x3831 (and x4143 (not x1996))))
(assert (= x8442 (and x9089 (not x9197))))
(assert (= x3933 (and x8595 (not x2142))))
(assert (= x1447 (and x1625 (not x6984))))
(assert (= (and x6526 x3198) x8331))
(assert (= x3798 (or x5019 x6003)))
(assert (= x2532 (and x4328 x6569)))
(assert (= x7818 (and (not x3603) x8559)))
(assert (= (and (not x662) x1114) x6852))
(assert (x9173 x8536))
(assert (x9173 x3820))
(assert (= (=> (= (< 0 x6097) x3953) (and (=> (and (and (= x9202 x5885) (= x6097 x1511)) (not x3953)) x2720) (=> (and x3953 (and (= x1045 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x637)) (= x1207 (= x2313 0)) (= (x6748 x7519 x2792) x2313) (<= x637 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4000 x66 3) x3745) (= (ite (< x1045 x7528) 1 0) x2792) (= (ite (not x5829) 1 0) x7519) (= x5829 (= x637 0)) (= x637 (x4101 x3745)) (<= 0 x637))) (and (=> (not x1207) x3931) (=> (and (and (and (= x51 4) (= (= x3881 x5148) x6576) (= x3737 (mod (* x7528 x637) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x8399 (div x3737 1000000000000000000))) (or (and (not x6576) (and (= x351 (= x3881 x3605)) (or (and x351 (and (< x8668 2217467699) (= 4 x922) (> 988262939 x8668) (= x8668 405663989) (not (< x8668 405663989)) (= x1765 1) (< 0 x7493) (not (> 4 x922)) (= x6469 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= 32 x4612) (= x51 x922) (= (x6844 (x2264 x3605)) x7493))) (and (and (and (and (= x1765 1) (= x4959 x51) (not (> 405663989 x4192)) (> 2217467699 x4192) (= x7719 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= (x6844 (x2264 x1326)) x2071) (= 4 x4959) (> 988262939 x4192) (= 32 x4612) (= 405663989 x4192) (not (< x4959 4)) (> x2071 0)) x5177) (= x5177 (= x3881 x1326))) (not x351))))) (and x6576 (and (< x1982 2217467699) (= x1982 405663989) (not (< x1982 405663989)) (not (< x5110 4)) (> x2648 0) (= x1489 10936679508223583803006762266923565500374401145016910147028117655998246682624) (> 988262939 x1982) (= x4612 32) (= x5110 4) (= 1 x1765) (= x51 x5110) (= x2648 (x6844 (x2264 x5148))))))) x1207) x6547))))) x1036))
(assert (= (and x9148 x3342) x5772))
(assert (= (and x9025 (not x2708)) x2104))
(assert (x9173 x2464))
(assert (= (and (not x7790) x190) x7108))
(assert (= (=> (and (or (not x4190) x4190) (= x4190 (= x5012 0))) x8082) x8387))
(assert (= x7446 (and x2218 (not x1517))))
(assert (x5765 x7283))
(assert (= (x3373 (x4000 x2005 2)) (+ 2 (x3373 x2005))))
(assert (x2631 x6894))
(assert (= x7677 (and x1726 (not x2743))))
(assert (= (and x6207 x2945) x5524))
(assert (x9173 x4250))
(assert (x5765 x6696))
(assert (= (and x7063 x4934) x7802))
(assert (= x6671 (and x6065 x5519)))
(assert (= x3168 (and x57 x7661)))
(assert (= x8515 (=> (and (= (= 0 x5644) x3025) (or (and (and (= (ite x1822 1 0) x2542) (= x3079 (x5783 (x2264 x3881) (x6664 158) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x434) (= (x5783 (x2264 x560) x3079 0) x8372) (= x434 (x8236 x5001)) (= (x4000 x8372 1) x5001) (= (= 0 x434) x1822) (<= 0 x434)) (not x3025)) (and x3025 (= x5644 x2542)))) x5571)))
(assert (= x3484 (and x7980 x7667)))
(assert (= (or x6908 x7238) x7632))
(assert (= x1962 (=> (and (= x1724 x3774) (= x7681 x7850)) x8315)))
(assert (= x8544 (and x8010 x7573)))
(assert (= (and (not x98) x8197) x5079))
(assert (x9173 x7562))
(assert (x9173 x1116))
(assert (= (=> (and (= x7479 x5683) (= x3149 0)) x8762) x5323))
(assert (= (and (not x794) x569) x2383))
(assert (= (and x2278 x154) x5706))
(assert (x9173 x4080))
(assert (= x6646 (or x4324 x2160)))
(assert (= x425 (=> (and (= x7366 (x5783 (x2264 x560) (x6664 161) 0)) (= x7999 (x650 x7366)) (= (not (> x7999 1)) x7372)) (and x7372 x3976))))
(assert (x9173 x1748))
(assert (= (x3373 (x2264 x435)) x435))
(assert (= (and x9160 x1175) x3158))
(assert (x9173 x1258))
(assert (= (and x1634 (not x5265)) x5899))
(assert (x9173 x6865))
(assert (=> (>= 10000 x5176) (= (x2264 x5176) (x6664 x5176))))
(assert (x9173 x7816))
(assert (x9173 x7018))
(assert (= (x6664 2217467699) (x2264 2217467699)))
(assert (= x6238 (and x1789 (not x5673))))
(assert (x9173 x8201))
(assert (= (and x6693 x7974) x7287))
(assert (x5765 x6388))
(assert (=> (<= x2163 10000) (= (x2264 x2163) (x6664 x2163))))
(assert (= x7607 (x3373 (x2264 x7607))))
(assert (x5765 x5888))
(assert (x9173 x2711))
(assert (= (and x5118 (not x8333)) x2410))
(assert (x9173 x3238))
(assert (= x5253 (x3373 (x2264 x5253))))
(assert (x9173 x3641))
(assert (x9173 x7874))
(assert (x9173 x8966))
(assert (x9173 x4119))
(assert (= x4185 (and x7525 (not x8867))))
(assert (= (and x935 x3771) x3656))
(assert (x9173 x8240))
(assert (= x4013 (and (not x6938) x6787)))
(assert (x9173 x8689))
(assert (= (and x2153 x5806) x9101))
(assert (=> (<= x234 10000) (= (x6664 x234) (x2264 x234))))
(assert (x2631 1461501637330902918203684832716283019655932542975))
(assert (= (and x4942 (not x2782)) x3259))
(assert (= x4799 (and x4898 (not x4544))))
(assert (= (and x3244 (not x6499)) x564))
(assert (=> (<= x4668 10000) (= (x6664 x4668) (x2264 x4668))))
(assert (= (=> (and (= x6396 x2747) (= x7531 0)) x787) x2598))
(assert (= (x3373 (x2264 x1885)) x1885))
(assert (x9173 x1126))
(assert (= (x3373 (x2264 x3881)) x3881))
(assert (x9173 x829))
(assert (= (and x7971 x853) x2954))
(assert (= x4689 (and x8478 (not x2959))))
(assert (x9173 x4480))
(assert (= x4681 (=> (= (= 0 x384) x366) (and (=> (and (not x366) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1805) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1805)) (> 32 x1805))) x9111)) (and (=> (and (and (= x4787 x6543) (= 1 x5583) (= x6901 x369)) (not x9111)) x2387) (=> (and (= x6543 x6250) x9111) x1907))) (=> (and (= x6543 x6250) x366) x1907)))))
(assert (x9173 x7374))
(assert (= (x2264 157198259) (x6664 157198259)))
(assert (= (or x4471 x8325) x7718))
(assert (x5699 x7882 x5188))
(assert (x9173 x3400))
(assert (x9173 x5801))
(assert (= (and x6692 x4084) x7600))
(assert (x9173 x5972))
(assert (x9173 x2011))
(assert (= (and x2920 x1142) x8353))
(assert (= (x3373 (x4000 x3362 1)) (+ 1 (x3373 x3362))))
(assert (x9173 x6393))
(assert (= (and x7597 (not x4744)) x3375))
(assert (x9173 x2443))
(assert (= (and x1762 x4202) x7105))
(assert (= (or x8179 x1909) x8280))
(assert (x9173 x4863))
(assert (x9173 x1964))
(assert (= (and (not x5043) x3359) x5696))
(assert (x9173 x4912))
(assert (x9173 x4372))
(assert (= (and x690 x2018) x3063))
(assert (= (and x9189 (not x7190)) x2493))
(assert (= x1617 (and x3016 (not x3842))))
(assert (=> (<= x8796 10000) (= (x6664 x8796) (x2264 x8796))))
(assert (= 3583811254 (x3373 (x6664 3583811254))))
(assert (= x9163 (and x707 x689)))
(assert (= (and x5975 x370) x6188))
(assert (x9173 x2323))
(assert (= (x3373 (x4000 x1809 1)) (+ 1 (x3373 x1809))))
(assert (= x3795 (and x8305 x8858)))
(assert (= (and (not x154) x2278) x6179))
(assert (= x5689 (and x8379 (not x4487))))
(assert (x9173 x7265))
(assert (x9173 x1871))
(assert (= x2724 (and x3768 x3810)))
(assert (= (and x7035 x8475) x4845))
(assert (= x7551 (and x5777 x1512)))
(assert (x5765 x560))
(assert (= x6625 (and x5504 x1923)))
(assert (x9173 x5381))
(assert (= (=> (and (= x5247 x8343) (= x4314 x3759)) x215) x2661))
(assert (= (x3373 (x2264 x5)) x5))
(assert (x9173 x7393))
(assert (x9173 x6334))
(assert (= (and x4297 (not x9204)) x20))
(assert (= x4267 (or x1363 x6964)))
(assert (= (=> (and (= x7294 x5142) (= x8975 x695)) x6928) x4117))
(assert (= (and (=> (and (and (= x8655 x1078) (= x6804 x2015) (= x7931 x3881)) x6499) x2646) (=> (and (and (= x6804 x5939) (= 1 x4209)) (not x6499)) x7625)) x2235))
(assert (= x2930 (and (not x953) x1743)))
(assert (=> (<= x3114 10000) (= (x6664 x3114) (x2264 x3114))))
(assert (x9173 x3823))
(assert (= (=> (= x2501 (< 0 x7074)) (and (=> (and (not x2501) (and (= x8452 x9218) (= x8990 x8794))) x7658) (=> (and (and (<= x1 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6222 (= x730 0)) (<= 0 x1)) x2501) (and (=> x6222 x984) (=> (and (not x6222) (and (= (x1951 x3260) x7229) (= x5767 (x5783 (x2264 x730) x783 0)) (<= 0 x7229) (= x3260 (x4000 x5767 2)) (<= x7229 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x7229) x6065))) (and (=> (and (and (and (= (ite (< 0 x1) (not (= x4442 0)) (< 0 x1)) x6311) (<= 0 x4442) (> 1461501637330902918203684832716283019655932542976 x4442) (= x3521 (x4000 x783 1)) (= (x8854 x3521) x4442) (<= x4442 1461501637330902918203684832716283019655932542975)) (or (and (= x6311 x8919) (not x6311)) (and x6311 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x84) (= (x4000 x1720 2) x155) (= x1720 (x5783 (x2264 x4442) x783 0)) (>= x84 0) (= x84 (x1951 x155)) (= (> x7074 x84) x8375) (= (not x8375) x8919))))) x6065) x1298) (=> (not x6065) x7505))))))) x8078))
(assert (= (and (not x5026) x1924) x5563))
(assert (x9173 x3596))
(assert (= x2173 (or x5156 x7970 x9098 x3744 x1195 x7559)))
(assert (x9173 x5647))
(assert (= x7593 (or x7315 x269)))
(assert (= x5238 x3931))
(assert (x8398 x4075))
(assert (x9173 x5372))
(assert (= (or x5622 x1293 x8486 x5588) x377))
(assert (= (and x6988 x582) x5113))
(assert (x9173 x3774))
(assert (x9173 x4897))
(assert (= (x3373 (x4000 x4454 1)) (+ 1 (x3373 x4454))))
(assert (= x8538 (=> (and (= x2989 (= x496 0)) (or (not x2989) x2989)) x2125)))
(assert (x9173 x2610))
(assert (x9173 x3846))
(assert (x9173 x6655))
(assert (x9173 x7450))
(assert (x5765 x7091))
(assert (= x1359 x5715))
(assert (x9173 x8687))
(assert (x9173 x5717))
(assert (x9173 x3444))
(assert (= (and x6615 (not x1661)) x2949))
(assert (x9173 x6507))
(assert (x9173 x1321))
(assert (= (and x6640 (not x4307)) x8791))
(assert (= x3476 (and x1776 x6647)))
(assert (= (and x6942 x6681) x544))
(assert (x9173 x596))
(assert (x9173 x896))
(assert (x9173 x3723))
(assert (x9173 x5164))
(assert (x9173 x5309))
(assert (= (x3373 (x4000 x6725 1)) (+ (x3373 x6725) 1)))
(assert (x9173 x314))
(assert (x9173 x4710))
(assert (= x2586 (and x2787 x1977)))
(assert (x9173 x5671))
(assert (= x5575 (=> (and (= x4275 0) (= x5855 x2747)) x8192)))
(assert (x9173 x8811))
(assert (= (+ 1 (x3373 x1078)) (x3373 (x4000 x1078 1))))
(assert (x9173 x1127))
(assert (x9173 x1831))
(assert (x9173 x7294))
(assert (= (or x4801 (and x1011 (not x4061))) x5954))
(assert (x9173 x6838))
(assert (x9173 x10))
(assert (x9173 x8803))
(assert (x9173 x7274))
(assert (x9173 x3857))
(assert (= (and (not x4850) x777) x5676))
(assert (= x4970 (or x5662 x5182)))
(assert (x9173 x7607))
(assert (= x2643 (and x1719 x6225)))
(assert (x5765 x1903))
(assert (x5765 x6298))
(assert (x9173 x4134))
(assert (= x3660 (and x2995 x3562)))
(assert (x9173 x8575))
(assert (= x8633 x8248))
(assert (=> (<= x7919 10000) (= (x2264 x7919) (x6664 x7919))))
(assert (= (and x1387 x7198) x5732))
(assert (= (x3373 (x4000 x6089 1)) (+ (x3373 x6089) 1)))
(assert (=> (>= 10000 x502) (= (x6664 x502) (x2264 x502))))
(assert (x9173 x5139))
(assert (x9173 x4128))
(assert (x9173 x4265))
(assert (x9173 x6897))
(assert (x2631 x1619))
(assert (x9173 x4773))
(assert (x9173 x3967))
(assert (=> (>= 10000 x1345) (= (x6664 x1345) (x2264 x1345))))
(assert (x9173 x8402))
(assert (= x1178 (and x6094 x486)))
(assert (x9173 x6484))
(assert (x9173 x2373))
(assert (= x4483 (x3373 (x2264 x4483))))
(assert (= x8204 (or x1523 x7484)))
(assert (x9173 x3514))
(assert (= (and (not x8956) x7113) x468))
(assert (x9173 x4490))
(assert (= x3931 x6737))
(assert (= (=> (and (= x1050 (= x7482 0)) (or (and (and (= x7709 x9104) (= x7482 x2807) (= x5918 x1584) (= x294 x2176)) (not x1050)) (and x1050 (and (< (+ x8620 x8133) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x910 (+ x8133 x8620)) x8063) (= x5918 x1584) (= x7482 x2807) (= x2176 x294) (= x5373 (- x6829 x8620)) (= (x4230 (x2264 x7036)) x8133) (= x8620 (ite (= x7482 0) x2734 0)) (= x7709 x9104) (= (x3041 (x2264 x3881)) x6829))))) x8279) x8428))
(assert (= x8750 (and x2104 x1862)))
(assert (=> (<= x4734 10000) (= (x2264 x4734) (x6664 x4734))))
(assert (x9173 x2123))
(assert (= (+ 1 (x3373 x6369)) (x3373 (x4000 x6369 1))))
(assert (= x6107 (and x6020 (not x8177))))
(assert (= x5480 (x3373 (x2264 x5480))))
(assert (x9173 x7029))
(assert (= (x3373 (x4000 x1038 1)) (+ (x3373 x1038) 1)))
(assert (x9173 x2267))
(assert (= (and (not x7676) x2105) x2629))
(assert (= x771 (and (not x1331) x1730)))
(assert (x9173 x4171))
(assert (= x2218 (and (not x2520) x1362)))
(assert (= (and x8856 x2214) x5889))
(assert (x9173 x2734))
(assert (x9173 x645))
(assert (= x3177 (x3373 (x2264 x3177))))
(assert (= (and (not x6681) x6942) x1943))
(assert (x5765 x5237))
(assert (x9173 x1481))
(assert (x9173 x1043))
(assert (= x3431 (and (not x9019) x3458)))
(assert (x5765 x3644))
(assert (x9173 x1448))
(assert (= (and (not x3592) x7273) x2765))
(assert (= x4928 (and x6649 (not x4141))))
(assert (= (and x7689 x6050) x1354))
(assert (= x2992 (and x4138 x8259)))
(assert (x9173 x6643))
(assert (= x1731 (and x4221 x2580)))
(assert (= x2239 (or x6395 x1228 x4707)))
(assert (x9173 x4102))
(assert (x9173 x1019))
(assert (= (and (not x3841) x2695) x8727))
(assert (x9173 x8663))
(assert (x9173 x5652))
(assert (x9173 x4182))
(assert (= x3015 (and x2024 x6534)))
(assert (= x3699 (and x3864 x5000)))
(assert (x9173 x4917))
(assert (= x4166 (and (not x9172) x2421)))
(assert (= x8969 (and x3209 x4537)))
(assert (= (and (not x3061) x5732) x6236))
(assert (x9173 x5371))
(assert (x9173 x5215))
(assert (x9173 x6015))
(assert (x9173 x7999))
(assert (x9173 x283))
(assert (= (and (not x72) x3333) x4352))
(assert (x9173 x5938))
(assert (= (x6664 2796547477) (x2264 2796547477)))
(assert (x9173 x3284))
(assert (x9173 x7697))
(assert (= (and x8473 (not x460)) x8348))
(assert (= (or x797 x8408) x4664))
(assert (= (and x6029 x191) x226))
(assert (= (=> (and (= x7479 x1724) (= 0 x7681)) x1962) x7570))
(assert (= (and x3860 x6943) x8850))
(assert (= x7889 (or x327 x5031 x7214 x4677 x3604 x7191)))
(assert (= (x3373 (x4000 x3267 1)) (+ 1 (x3373 x3267))))
(assert (x9173 x8241))
(assert (x9173 x8753))
(assert (= x7984 (and (not x3992) x240)))
(assert (x9173 x5206))
(assert (= (or x359 x1198 x8902 x5969 x7467 x5117 x7797 x7436 x3092 x4518 x8431 x4046 x8491 x4071 x5059 x4708 x388 x2298 x3229 x256 x1186 x1100 x1174 x7451 x8507 x3660 x3819 x106 x1636 x2062 x4151 x7551 x5437 x1995 x2203 x5750 x5378 x9150 x2209 x6368 x2889 x5574) x5052))
(assert (x9173 x1620))
(assert (= (and (not x3832) x7539) x8090))
(assert (= x8613 (and x1144 (not x8553))))
(assert (= x726 (and x794 x569)))
(assert (= x4254 (and x6452 (not x8223))))
(assert (=> (<= x2398 10000) (= (x6664 x2398) (x2264 x2398))))
(assert (= (or x4666 x1325) x5753))
(assert (= x560 (x3373 (x2264 x560))))
(assert (= x4475 (or x1983 x5772)))
(assert (x9173 x2795))
(assert (x9173 x9222))
(assert (x9173 x5480))
(assert (x5765 x6297))
(assert (x9173 x8062))
(assert (x9173 x3113))
(assert (= x8380 (or x7413 x2833 x1671 x7173)))
(assert (= (and x729 x1707) x8587))
(assert (x9173 x1159))
(assert (= x5391 (and (not x4488) x639)))
(assert (= x6066 (and x5563 (not x3764))))
(assert (= x828 (or x2796 x5962 (and (not x3996) x5736) x6445 (and x6411 x7354))))
(assert (x5765 x5896))
(assert (x9173 x6295))
(assert (x2631 x2402))
(assert (x9173 x6920))
(assert (x9173 x5405))
(assert (x9173 x7709))
(assert (= x6686 (and x4983 x2826)))
(assert (= (and x1530 x2255) x5085))
(assert (= (x2264 4294967296) (x6664 4294967296)))
(assert (x9173 x4684))
(assert (x9173 x74))
(assert (x9173 x133))
(assert (x9173 x3479))
(assert (x9173 x3186))
(assert (= (and x8774 x6666) x6069))
(assert (= x2699 (x3373 (x2264 x2699))))
(assert (= x7291 (x3373 (x2264 x7291))))
(assert (x9173 x5613))
(assert (= (x3373 (x4000 x783 1)) (+ (x3373 x783) 1)))
(assert (x9173 x4329))
(assert (x9173 x4237))
(assert (= (and x587 x4341) x4746))
(assert (=> (<= x8423 10000) (= (x2264 x8423) (x6664 x8423))))
(assert (x9173 x7859))
(assert (x2631 x2776))
(assert (= x8845 (and x9089 x9197)))
(assert (x9173 x5334))
(assert (= (and x3175 x8392) x923))
(assert (x9173 x882))
(assert (= (x3373 (x2264 x7550)) x7550))
(assert (=> (<= x589 10000) (= (x2264 x589) (x6664 x589))))
(assert (= (=> (= (< 0 x2352) x8073) (and (=> (not x8073) x5715) (=> (and x8073 (and (= x2634 (= x1499 0)) (<= 0 x1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1))) (and (=> (and (not x2634) (and (<= 0 x8615) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8615) (= x1640 (x5783 (x2264 x1499) x1695 0)) (= (= 0 x8615) x7925) (= x732 (x4000 x1640 2)) (= x8615 (x3879 x732)))) (and (=> (and x7925 (and (or (and (and (= x8588 (x3879 x1324)) (= x1324 (x4000 x313 2)) (= x2080 (> x2352 x8588)) (<= x8588 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7258 (not x2080)) (>= x8588 0) (= (x5783 (x2264 x8781) x1695 0) x313)) x4052) (and (= x4052 x7258) (not x4052))) (and (= (x4315 x4984) x8781) (>= x8781 0) (>= 1461501637330902918203684832716283019655932542975 x8781) (< x8781 1461501637330902918203684832716283019655932542976) (= x4052 (ite (> x1 0) (not (= x8781 0)) (> x1 0))) (= x4984 (x4000 x1695 1))))) x2190) (=> (not x7925) x4745))) (=> x2634 x1172))))) x87))
(assert (x9173 x1960))
(assert (x9173 x6662))
(assert (x9173 x2042))
(assert (= x2931 (=> (and (= x1488 x6492) (= x4777 x8736)) x4908)))
(assert (x9173 x223))
(assert (x9173 x8483))
(assert (x9173 x841))
(assert (= (and x7852 (not x3667)) x2488))
(assert (x9173 x1832))
(assert (= (and x8525 x3472) x6123))
(assert (= x6159 (and x7020 (not x1182))))
(assert (x9173 x7764))
(assert (= (or x3036 x5034) x240))
(assert (x9173 x4893))
(assert (= (or x2003 x25) x2480))
(assert (x9173 x1472))
(assert (= x236 (or x5246 x4013)))
(assert (= (and x4225 x8546) x6303))
(assert (x9173 x5931))
(assert (= x2919 (and x4103 x7470)))
(assert (x9173 x1241))
(assert (x9173 x6250))
(assert (x9173 x5272))
(assert (= (and x3843 x6200) x3453))
(assert (x5765 x902))
(assert (= 75483562 (x3373 (x6664 75483562))))
(assert (x9173 x502))
(assert (x9173 x1965))
(assert (x9173 x8287))
(assert (= (and x6640 x4307) x3728))
(assert (x9173 x7482))
(assert (x9173 x316))
(check-sat)
(exit)