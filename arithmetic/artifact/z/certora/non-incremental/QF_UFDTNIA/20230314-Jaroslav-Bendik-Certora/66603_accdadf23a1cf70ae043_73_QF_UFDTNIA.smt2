(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1019 0)) (((x955 (x2856 Int)) (x517 (x699 x1019) (x1666 Int)) (x534 (x563 x1019) (x489 x1019) (x1700 Int)))))
(declare-fun x3072 () Int)
(declare-fun x1061 () Bool)
(declare-fun x3443 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x2189 () Int)
(declare-fun x2933 () Int)
(declare-fun x2526 () Bool)
(declare-fun x448 () Bool)
(declare-fun x3054 () x1019)
(declare-fun x2248 () x1019)
(declare-fun x3633 () Bool)
(declare-fun x3497 () Bool)
(declare-fun x3718 () Bool)
(declare-fun x2195 () Int)
(declare-fun x1507 () x1019)
(declare-fun x544 () Int)
(declare-fun x2883 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x580 () Int)
(declare-fun x3389 () Bool)
(declare-fun x3478 (x1019) Int)
(declare-fun x2560 () Int)
(declare-fun x1752 () Bool)
(declare-fun x2517 () Int)
(declare-fun x3637 () Int)
(declare-fun x2025 () x1019)
(declare-fun x562 (Int) Int)
(declare-fun x1101 () Bool)
(declare-fun x371 () Int)
(declare-fun x1357 () Bool)
(declare-fun x2276 () Int)
(declare-fun x1265 () Int)
(declare-fun x47 () Bool)
(declare-fun x2532 () Int)
(declare-fun x890 () x1019)
(declare-fun x3909 () Int)
(declare-fun x455 () Int)
(declare-fun x1745 () Int)
(declare-fun x303 (x1019) Int)
(declare-fun x3137 () x1019)
(declare-fun x2101 () Int)
(declare-fun x2867 () Int)
(declare-fun x1802 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x3599 () Bool)
(declare-fun x2673 () Bool)
(declare-fun x2952 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x52 () Bool)
(declare-fun x3409 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x177 () Int)
(declare-fun x3324 () x1019)
(declare-fun x401 () Bool)
(declare-fun x2150 () Int)
(declare-fun x1638 () Int)
(declare-fun x505 () Int)
(declare-fun x1970 () Int)
(declare-fun x2832 () Bool)
(declare-fun x1744 () Int)
(declare-fun x1260 () Bool)
(declare-fun x3431 () Int)
(declare-fun x240 (Int) Int)
(declare-fun x351 () Int)
(declare-fun x865 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x473 () Bool)
(declare-fun x2354 () Int)
(declare-fun x2511 () Bool)
(declare-fun x156 () Bool)
(declare-fun x3275 () x1019)
(declare-fun x266 () Int)
(declare-fun x879 () Int)
(declare-fun x3792 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x3749 () x1019)
(declare-fun x3595 () Int)
(declare-fun x10 () x1019)
(declare-fun x2463 () Bool)
(declare-fun x2469 () Int)
(declare-fun x785 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x3809 () Int)
(declare-fun x2516 () x1019)
(declare-fun x2509 () Int)
(declare-fun x701 () Bool)
(declare-fun x3815 () Bool)
(declare-fun x374 () Bool)
(declare-fun x3286 () Int)
(declare-fun x3677 () Int)
(declare-fun x64 () Bool)
(declare-fun x3547 () Bool)
(declare-fun x169 () Bool)
(declare-fun x2128 () Int)
(declare-fun x3786 () Bool)
(declare-fun x2071 () Int)
(declare-fun x1323 () Int)
(declare-fun x638 () Bool)
(declare-fun x1218 () x1019)
(declare-fun x501 () Bool)
(declare-fun x689 () Int)
(declare-fun x1647 () x1019)
(declare-fun x3296 () Int)
(declare-fun x3472 () Bool)
(declare-fun x3447 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x107 () Int)
(declare-fun x3755 () Bool)
(declare-fun x2488 () Int)
(declare-fun x124 () Int)
(declare-fun x373 () Int)
(declare-fun x2715 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x3405 () Bool)
(declare-fun x332 () Int)
(declare-fun x1053 () Int)
(declare-fun x424 () Int)
(declare-fun x858 () Int)
(declare-fun x3213 () Int)
(declare-fun x1100 () Int)
(declare-fun x2929 () Int)
(declare-fun x31 () Int)
(declare-fun x3451 () Bool)
(declare-fun x15 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x3028 () Int)
(declare-fun x434 () Int)
(declare-fun x2361 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x1299 () Int)
(declare-fun x3372 () Int)
(declare-fun x3712 () Int)
(declare-fun x3463 () Int)
(declare-fun x3138 () x1019)
(declare-fun x3477 () Bool)
(declare-fun x3039 () Int)
(declare-fun x247 () Int)
(declare-fun x1399 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1307 () Int)
(declare-fun x125 () Bool)
(declare-fun x7 () Int)
(declare-fun x1989 () Int)
(declare-fun x2182 (Int Int) Int)
(declare-fun x939 () Int)
(declare-fun x3216 () Int)
(declare-fun x2160 () Int)
(declare-fun x1671 () Bool)
(declare-fun x1636 () Int)
(declare-fun x53 () Bool)
(declare-fun x2655 () Bool)
(declare-fun x1516 () Int)
(declare-fun x1489 () Int)
(declare-fun x2299 () Int)
(declare-fun x951 () Bool)
(declare-fun x393 () Bool)
(declare-fun x621 () Int)
(declare-fun x1923 () Int)
(declare-fun x535 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1147 () x1019)
(declare-fun x1547 () Int)
(declare-fun x3910 () x1019)
(declare-fun x2873 () x1019)
(declare-fun x1267 () Bool)
(declare-fun x348 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x101 () x1019)
(declare-fun x2679 () x1019)
(declare-fun x2358 () Bool)
(declare-fun x205 () Bool)
(declare-fun x3388 () Int)
(declare-fun x3179 () Int)
(declare-fun x409 () Int)
(declare-fun x1294 () Int)
(declare-fun x361 () Bool)
(declare-fun x776 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x2688 () Bool)
(declare-fun x3077 () Int)
(declare-fun x1694 () Bool)
(declare-fun x3808 () Int)
(declare-fun x1056 () Int)
(declare-fun x3180 () Int)
(declare-fun x1085 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x796 () Int)
(declare-fun x2448 () Bool)
(declare-fun x3444 () Int)
(declare-fun x3097 () Bool)
(declare-fun x616 () Int)
(declare-fun x2337 () Bool)
(declare-fun x97 () Int)
(declare-fun x3691 () Int)
(declare-fun x1901 () Bool)
(declare-fun x380 () Int)
(declare-fun x2989 () Bool)
(declare-fun x3660 () Int)
(declare-fun x3824 () Bool)
(declare-fun x559 () Bool)
(declare-fun x2065 () x1019)
(declare-fun x3300 () Bool)
(declare-fun x1963 () Bool)
(declare-fun x1900 () Int)
(declare-fun x1392 () x1019)
(declare-fun x1930 () Bool)
(declare-fun x3414 () Bool)
(declare-fun x2777 () Int)
(declare-fun x2340 () Bool)
(declare-fun x1769 () Int)
(declare-fun x523 () Bool)
(declare-fun x669 () Bool)
(declare-fun x281 () Int)
(declare-fun x3642 () Int)
(declare-fun x3395 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x827 () Int)
(declare-fun x1235 () Bool)
(declare-fun x2798 () Int)
(declare-fun x1714 () Int)
(declare-fun x295 () Bool)
(declare-fun x433 () x1019)
(declare-fun x3753 () Int)
(declare-fun x3646 () Int)
(declare-fun x3605 () Bool)
(declare-fun x714 () Int)
(declare-fun x1276 () Bool)
(declare-fun x2177 () Int)
(declare-fun x1032 () Bool)
(declare-fun x1951 () Int)
(declare-fun x3446 () Bool)
(declare-fun x3643 () Bool)
(declare-fun x806 () Bool)
(declare-fun x2611 () Int)
(declare-fun x3503 () x1019)
(declare-fun x2975 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x2093 () x1019)
(declare-fun x3183 () Int)
(declare-fun x3482 () Bool)
(declare-fun x1907 () x1019)
(declare-fun x2422 () Int)
(declare-fun x2450 (Int) Int)
(declare-fun x2709 () Int)
(declare-fun x136 () x1019)
(declare-fun x3458 () Int)
(declare-fun x3448 () x1019)
(declare-fun x63 () Bool)
(declare-fun x1555 () Int)
(declare-fun x3510 () Int)
(declare-fun x22 () Int)
(declare-fun x3038 () Int)
(declare-fun x2780 () Bool)
(declare-fun x3053 () Bool)
(declare-fun x969 () Bool)
(declare-fun x173 () Bool)
(declare-fun x538 () Int)
(declare-fun x160 () Int)
(declare-fun x3639 () Int)
(declare-fun x1447 () Int)
(declare-fun x3935 () Int)
(declare-fun x2591 () Bool)
(declare-fun x2956 () x1019)
(declare-fun x2696 () Int)
(declare-fun x3648 () Bool)
(declare-fun x797 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x3523 () Bool)
(declare-fun x3417 () Int)
(declare-fun x3084 () Int)
(declare-fun x2002 () Int)
(declare-fun x896 () Int)
(declare-fun x611 () Bool)
(declare-fun x3562 () Int)
(declare-fun x2755 () x1019)
(declare-fun x2545 () Int)
(declare-fun x784 () Bool)
(declare-fun x3513 () Bool)
(declare-fun x695 () Bool)
(declare-fun x2398 () Bool)
(declare-fun x584 () Int)
(declare-fun x3030 () x1019)
(declare-fun x2254 () Int)
(declare-fun x2977 (Int) Int)
(declare-fun x737 () Int)
(declare-fun x1883 () Bool)
(declare-fun x1589 () Int)
(declare-fun x1908 () Bool)
(declare-fun x2304 () Int)
(declare-fun x1482 () Int)
(declare-fun x2971 () Bool)
(declare-fun x2810 () Int)
(declare-fun x1817 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x577 () Bool)
(declare-fun x2964 () Int)
(declare-fun x1561 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x619 () Bool)
(declare-fun x3787 () Bool)
(declare-fun x155 () x1019)
(declare-fun x803 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x958 () Int)
(declare-fun x3189 () Bool)
(declare-fun x454 () Bool)
(declare-fun x3887 () Bool)
(declare-fun x549 () Int)
(declare-fun x115 () Bool)
(declare-fun x379 () Bool)
(declare-fun x1361 () Int)
(declare-fun x3462 () Int)
(declare-fun x2122 () Bool)
(declare-fun x2491 () Int)
(declare-fun x103 (x1019) Int)
(declare-fun x3598 () Int)
(declare-fun x284 () Int)
(declare-fun x2204 () Int)
(declare-fun x1144 (x1019) Int)
(declare-fun x1157 () Bool)
(declare-fun x2923 () Bool)
(declare-fun x3267 (Int) Int)
(declare-fun x1088 () Int)
(declare-fun x2496 () Bool)
(declare-fun x27 () Bool)
(declare-fun x3867 () Int)
(declare-fun x3774 () Int)
(declare-fun x3822 () Bool)
(declare-fun x2764 () Int)
(declare-fun x2291 () Int)
(declare-fun x2816 () Int)
(declare-fun x1815 () Int)
(declare-fun x2355 () Bool)
(declare-fun x28 () Bool)
(declare-fun x597 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x2892 () Int)
(declare-fun x1203 () Int)
(declare-fun x1069 () Bool)
(declare-fun x3486 () x1019)
(declare-fun x165 () Int)
(declare-fun x2277 () Bool)
(declare-fun x936 () x1019)
(declare-fun x977 () Bool)
(declare-fun x1681 () x1019)
(declare-fun x3829 () Bool)
(declare-fun x3165 () x1019)
(declare-fun x2236 () x1019)
(declare-fun x1959 () Int)
(declare-fun x3653 () Bool)
(declare-fun x176 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x3614 () Int)
(declare-fun x3014 () Int)
(declare-fun x2808 () Bool)
(declare-fun x370 () Int)
(declare-fun x880 () Int)
(declare-fun x1160 () x1019)
(declare-fun x225 () Bool)
(declare-fun x2686 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x3655 () x1019)
(declare-fun x3117 () x1019)
(declare-fun x600 () Bool)
(declare-fun x2538 () Int)
(declare-fun x2960 (Int Int) Int)
(declare-fun x2789 () Int)
(declare-fun x997 () x1019)
(declare-fun x3567 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x46 () Int)
(declare-fun x1895 () Int)
(declare-fun x3795 () Bool)
(declare-fun x3541 () x1019)
(declare-fun x1434 () Int)
(declare-fun x3050 () Bool)
(declare-fun x875 (Int) Int)
(declare-fun x2742 (Int) Int)
(declare-fun x3618 () x1019)
(declare-fun x3453 () Bool)
(declare-fun x3908 () Int)
(declare-fun x756 () Bool)
(declare-fun x312 () Bool)
(declare-fun x2671 () Int)
(declare-fun x2117 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x76 () Bool)
(declare-fun x2830 () x1019)
(declare-fun x1204 () Bool)
(declare-fun x1957 () Int)
(declare-fun x50 () Int)
(declare-fun x167 () Bool)
(declare-fun x1939 () Int)
(declare-fun x3279 () Bool)
(declare-fun x214 () Int)
(declare-fun x1284 () Int)
(declare-fun x1988 () Int)
(declare-fun x3890 () Int)
(declare-fun x3942 () Int)
(declare-fun x2220 () Bool)
(declare-fun x759 () x1019)
(declare-fun x3368 () Bool)
(declare-fun x1879 () Int)
(declare-fun x2796 () x1019)
(declare-fun x945 () x1019)
(declare-fun x622 () Bool)
(declare-fun x3705 () Bool)
(declare-fun x437 () Bool)
(declare-fun x641 () Bool)
(declare-fun x2838 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x2433 () Int)
(declare-fun x3418 () Int)
(declare-fun x719 () Bool)
(declare-fun x333 () Int)
(declare-fun x2268 () Bool)
(declare-fun x82 () Bool)
(declare-fun x2876 () Int)
(declare-fun x1274 () x1019)
(declare-fun x984 () Bool)
(declare-fun x2227 () Int)
(declare-fun x1508 () Int)
(declare-fun x2945 (x1019) Int)
(declare-fun x636 (Int) Int)
(declare-fun x2137 () Int)
(declare-fun x3657 () Int)
(declare-fun x3412 () Int)
(declare-fun x1587 () Int)
(declare-fun x2875 (Int) Int)
(declare-fun x2132 () x1019)
(declare-fun x596 () Int)
(declare-fun x3750 () Int)
(declare-fun x3020 () Bool)
(declare-fun x957 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x793 () Int)
(declare-fun x2048 () Int)
(declare-fun x383 () Bool)
(declare-fun x239 () Int)
(declare-fun x533 (x1019) Int)
(declare-fun x2395 () Int)
(declare-fun x3096 () Int)
(declare-fun x326 () x1019)
(declare-fun x847 () Int)
(declare-fun x134 () Int)
(declare-fun x3928 () Int)
(declare-fun x94 () Int)
(declare-fun x278 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1517 () Int)
(declare-fun x388 () Bool)
(declare-fun x1955 () Int)
(declare-fun x1794 () x1019)
(declare-fun x901 () Int)
(declare-fun x1479 () Int)
(declare-fun x1637 () Int)
(declare-fun x198 () Bool)
(declare-fun x2807 () x1019)
(declare-fun x2822 () Bool)
(declare-fun x3032 () Bool)
(declare-fun x3066 () x1019)
(declare-fun x2388 () Bool)
(declare-fun x772 () Int)
(declare-fun x3525 () Int)
(declare-fun x3440 () Int)
(declare-fun x3555 () Bool)
(declare-fun x2567 () x1019)
(declare-fun x2260 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x3736 () Int)
(declare-fun x1449 () Bool)
(declare-fun x993 () Int)
(declare-fun x3526 () Int)
(declare-fun x953 () Bool)
(declare-fun x975 () x1019)
(declare-fun x3262 () Bool)
(declare-fun x2599 () Int)
(declare-fun x758 () Bool)
(declare-fun x42 () Int)
(declare-fun x116 () Int)
(declare-fun x2070 () x1019)
(declare-fun x208 () x1019)
(declare-fun x2527 () Bool)
(declare-fun x2683 () Bool)
(declare-fun x1778 () Int)
(declare-fun x753 () Int)
(declare-fun x3760 () x1019)
(declare-fun x2504 () Int)
(declare-fun x390 () Bool)
(declare-fun x2905 () Int)
(declare-fun x3007 () Int)
(declare-fun x609 () Bool)
(declare-fun x2343 () x1019)
(declare-fun x1576 () Int)
(declare-fun x532 () Int)
(declare-fun x70 () Int)
(declare-fun x3089 () Int)
(declare-fun x1773 () Int)
(declare-fun x2781 () Bool)
(declare-fun x2946 () Int)
(declare-fun x3061 () Int)
(declare-fun x2597 () Bool)
(declare-fun x876 () x1019)
(declare-fun x1313 () Int)
(declare-fun x199 () x1019)
(declare-fun x3287 () Int)
(declare-fun x3927 () Int)
(declare-fun x366 () Bool)
(declare-fun x3107 () Int)
(declare-fun x627 () Bool)
(declare-fun x2891 () Int)
(declare-fun x2126 () x1019)
(declare-fun x328 () Bool)
(declare-fun x475 () Bool)
(declare-fun x604 () Int)
(declare-fun x1485 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x2106 () Bool)
(declare-fun x1308 () Int)
(declare-fun x2200 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x43 () Bool)
(declare-fun x510 () Int)
(declare-fun x1613 () Int)
(declare-fun x121 () Int)
(declare-fun x738 () Int)
(declare-fun x2706 () Bool)
(declare-fun x2428 () Int)
(declare-fun x3818 () Int)
(declare-fun x323 () Bool)
(declare-fun x906 () Int)
(declare-fun x3625 () Bool)
(declare-fun x477 () Bool)
(declare-fun x283 () Int)
(declare-fun x1801 () Bool)
(declare-fun x3564 () Bool)
(declare-fun x2922 () Int)
(declare-fun x948 () Int)
(declare-fun x2412 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x286 () Bool)
(declare-fun x2711 () Bool)
(declare-fun x3484 () Bool)
(declare-fun x2217 () Int)
(declare-fun x3623 () Int)
(declare-fun x628 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x3843 () Bool)
(declare-fun x844 () Int)
(declare-fun x2136 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1356 () Int)
(declare-fun x3087 () Int)
(declare-fun x1656 () Int)
(declare-fun x863 () Int)
(declare-fun x1630 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x2086 () Int)
(declare-fun x3783 () Int)
(declare-fun x2727 () Int)
(declare-fun x469 () Int)
(declare-fun x527 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x2562 () x1019)
(declare-fun x2282 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x2501 () Bool)
(declare-fun x3495 () Int)
(declare-fun x2614 () Bool)
(declare-fun x48 () Int)
(declare-fun x3110 () Bool)
(declare-fun x892 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x2993 () Int)
(declare-fun x2338 () Bool)
(declare-fun x3915 () x1019)
(declare-fun x586 () Bool)
(declare-fun x2419 () Int)
(declare-fun x961 () Bool)
(declare-fun x3198 () Int)
(declare-fun x492 () x1019)
(declare-fun x2623 (x1019) Int)
(declare-fun x1977 () Int)
(declare-fun x2851 () Bool)
(declare-fun x2697 (x1019) Int)
(declare-fun x2192 () Bool)
(declare-fun x3400 () Int)
(declare-fun x285 () Int)
(declare-fun x2606 () Bool)
(declare-fun x1201 () Int)
(declare-fun x2131 () Int)
(declare-fun x276 () x1019)
(declare-fun x3713 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x681 () Bool)
(declare-fun x6 () Int)
(declare-fun x3003 () Bool)
(declare-fun x1255 () Int)
(declare-fun x3411 () Int)
(declare-fun x2714 () Bool)
(declare-fun x2267 () Bool)
(declare-fun x3035 () Int)
(declare-fun x3845 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x841 () Bool)
(declare-fun x718 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x2359 () x1019)
(declare-fun x1548 () Int)
(declare-fun x3682 () Bool)
(declare-fun x882 () Int)
(declare-fun x3561 () Bool)
(declare-fun x2271 () x1019)
(declare-fun x143 () Bool)
(declare-fun x2978 () Int)
(declare-fun x2381 () Bool)
(declare-fun x1577 () Int)
(declare-fun x376 () Int)
(declare-fun x1195 () Int)
(declare-fun x788 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1948 () Int)
(declare-fun x3274 () Bool)
(declare-fun x2339 () x1019)
(declare-fun x3294 () Bool)
(declare-fun x3934 () Bool)
(declare-fun x1701 () Int)
(declare-fun x751 () Bool)
(declare-fun x472 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x1000 () x1019)
(declare-fun x1998 () Int)
(declare-fun x1877 () Bool)
(declare-fun x168 () Bool)
(declare-fun x856 () Int)
(declare-fun x1023 () Bool)
(declare-fun x2252 () x1019)
(declare-fun x3008 () Int)
(declare-fun x1902 () Bool)
(declare-fun x1847 () Int)
(declare-fun x883 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x222 () Int)
(declare-fun x1148 (x1019) Int)
(declare-fun x193 () Int)
(declare-fun x2087 () Int)
(declare-fun x99 () Int)
(declare-fun x1805 () Bool)
(declare-fun x456 () Int)
(declare-fun x1248 () x1019)
(declare-fun x2083 () Int)
(declare-fun x2373 () Int)
(declare-fun x2878 () Int)
(declare-fun x3789 () Int)
(declare-fun x1504 () Int)
(declare-fun x2546 () Int)
(declare-fun x465 () Bool)
(declare-fun x2109 () Int)
(declare-fun x2573 () Bool)
(declare-fun x547 () x1019)
(declare-fun x3049 () x1019)
(declare-fun x3796 () Int)
(declare-fun x1684 () Int)
(declare-fun x1968 () Bool)
(declare-fun x3333 () Bool)
(declare-fun x941 () Bool)
(declare-fun x3145 () Int)
(declare-fun x378 () Bool)
(declare-fun x3078 () Int)
(declare-fun x3427 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x2312 () x1019)
(declare-fun x1873 () Bool)
(declare-fun x507 () Int)
(declare-fun x3373 () Int)
(declare-fun x1268 () Int)
(declare-fun x2203 () Bool)
(declare-fun x634 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1325 () x1019)
(declare-fun x3671 () Int)
(declare-fun x3516 () Bool)
(declare-fun x1052 (x1019) Int)
(declare-fun x12 () x1019)
(declare-fun x656 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x746 () Int)
(declare-fun x2156 (x1019) Int)
(declare-fun x1625 () x1019)
(declare-fun x1172 () Bool)
(declare-fun x484 () Bool)
(declare-fun x3188 () x1019)
(declare-fun x3669 () Int)
(declare-fun x2854 () x1019)
(declare-fun x1104 () Int)
(declare-fun x2659 () Bool)
(declare-fun x3710 () Bool)
(declare-fun x3621 () Bool)
(declare-fun x2613 () Bool)
(declare-fun x798 () Bool)
(declare-fun x301 () Int)
(declare-fun x2148 () Int)
(declare-fun x2239 () Int)
(declare-fun x3771 () Int)
(declare-fun x3552 () Int)
(declare-fun x572 () x1019)
(declare-fun x1321 () Bool)
(declare-fun x2629 () Int)
(declare-fun x1440 () Bool)
(declare-fun x3312 () Bool)
(declare-fun x19 () Bool)
(declare-fun x539 () Bool)
(declare-fun x2494 () Int)
(declare-fun x135 () Bool)
(declare-fun x3491 () Int)
(declare-fun x184 () Int)
(declare-fun x872 () Bool)
(declare-fun x386 () x1019)
(declare-fun x1263 () Int)
(declare-fun x3033 () Bool)
(declare-fun x1471 () Int)
(declare-fun x479 () Bool)
(declare-fun x673 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x427 () Int)
(declare-fun x3289 () x1019)
(declare-fun x1631 () Int)
(declare-fun x2408 () Int)
(declare-fun x552 () Int)
(declare-fun x1610 () Bool)
(declare-fun x3659 () Bool)
(declare-fun x853 () x1019)
(declare-fun x166 () Int)
(declare-fun x2653 () Int)
(declare-fun x3499 () Int)
(declare-fun x2694 () Bool)
(declare-fun x2865 () x1019)
(declare-fun x2288 () Bool)
(declare-fun x3350 () Bool)
(declare-fun x1385 () Int)
(declare-fun x1703 () Int)
(declare-fun x3433 (x1019) Int)
(declare-fun x3085 () Int)
(declare-fun x2443 () Int)
(declare-fun x649 () Int)
(declare-fun x1306 () x1019)
(declare-fun x728 () Int)
(declare-fun x3139 () Bool)
(declare-fun x3197 () x1019)
(declare-fun x664 () Int)
(declare-fun x21 () Int)
(declare-fun x3521 () Int)
(declare-fun x2582 () Int)
(declare-fun x2286 () Int)
(declare-fun x2155 () Int)
(declare-fun x3904 () Bool)
(declare-fun x1087 () Int)
(declare-fun x3445 () Bool)
(declare-fun x1849 () Int)
(declare-fun x3493 () Int)
(declare-fun x1738 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x1152 () Int)
(declare-fun x3565 () Bool)
(declare-fun x3558 () Int)
(declare-fun x1120 () Bool)
(declare-fun x1972 () Int)
(declare-fun x2721 () x1019)
(declare-fun x2991 () Bool)
(declare-fun x337 () x1019)
(declare-fun x1861 (x1019) Int)
(declare-fun x3840 () Bool)
(declare-fun x3092 () Bool)
(declare-fun x666 () Bool)
(declare-fun x749 (x1019) Int)
(declare-fun x730 () Int)
(declare-fun x2017 () Int)
(declare-fun x739 () Int)
(declare-fun x1788 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x3678 () Bool)
(declare-fun x2018 () Int)
(declare-fun x1796 () x1019)
(declare-fun x3140 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x3758 () Bool)
(declare-fun x2461 () Int)
(declare-fun x3156 () Bool)
(declare-fun x508 (x1019) Int)
(declare-fun x3114 () Bool)
(declare-fun x520 () Int)
(declare-fun x170 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x626 () Int)
(declare-fun x3184 () Int)
(declare-fun x1614 () Int)
(declare-fun x1033 () Bool)
(declare-fun x709 () x1019)
(declare-fun x161 () Bool)
(declare-fun x3200 () Bool)
(declare-fun x814 () Bool)
(declare-fun x650 () Bool)
(declare-fun x2870 () Bool)
(declare-fun x2533 () Bool)
(declare-fun x233 () Int)
(declare-fun x1397 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x1207 () Int)
(declare-fun x2341 () Int)
(declare-fun x1707 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x3068 () Int)
(declare-fun x2498 () Bool)
(declare-fun x2379 () Int)
(declare-fun x850 () Int)
(declare-fun x3535 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x646 () Int)
(declare-fun x2198 () Int)
(declare-fun x453 () Int)
(declare-fun x231 () Bool)
(declare-fun x1890 () Int)
(declare-fun x823 () Int)
(declare-fun x2741 () Int)
(declare-fun x3624 () Int)
(declare-fun x2375 () Int)
(declare-fun x175 () x1019)
(declare-fun x2618 () Bool)
(declare-fun x813 () Int)
(declare-fun x571 () Bool)
(declare-fun x1732 () Int)
(declare-fun x2171 () Int)
(declare-fun x91 () Bool)
(declare-fun x987 () Int)
(declare-fun x3681 () Bool)
(declare-fun x2930 () Bool)
(declare-fun x3086 () Int)
(declare-fun x2505 () Bool)
(declare-fun x1438 () Int)
(declare-fun x2257 () Int)
(declare-fun x1505 () Int)
(declare-fun x2637 () Bool)
(declare-fun x790 () Int)
(declare-fun x1870 () Bool)
(declare-fun x238 () Bool)
(declare-fun x2552 () Bool)
(declare-fun x919 () Int)
(declare-fun x1965 () Int)
(declare-fun x1720 () Int)
(declare-fun x3685 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x1154 () Int)
(declare-fun x1928 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x1239 () x1019)
(declare-fun x3320 () Bool)
(declare-fun x402 () Int)
(declare-fun x3802 () Int)
(declare-fun x1708 () Bool)
(declare-fun x683 () Bool)
(declare-fun x3804 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x2887 () Int)
(declare-fun x3943 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x789 () Bool)
(declare-fun x995 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x3744 () Int)
(declare-fun x900 () Bool)
(declare-fun x2848 () Bool)
(declare-fun x3891 () Int)
(declare-fun x2056 () x1019)
(declare-fun x3816 () Int)
(declare-fun x2947 () Int)
(declare-fun x2072 () x1019)
(declare-fun x1749 () Int)
(declare-fun x3841 () Int)
(declare-fun x933 () x1019)
(declare-fun x2077 () Int)
(declare-fun x3825 () Int)
(declare-fun x2707 () Int)
(declare-fun x855 () Int)
(declare-fun x2349 () Bool)
(declare-fun x3923 () Int)
(declare-fun x732 () x1019)
(declare-fun x629 () Bool)
(declare-fun x1704 () x1019)
(declare-fun x1345 () Int)
(declare-fun x1042 () Bool)
(declare-fun x2266 () Int)
(declare-fun x212 () Int)
(declare-fun x3600 () Int)
(declare-fun x359 () Bool)
(declare-fun x2598 () Int)
(declare-fun x3901 () Bool)
(declare-fun x2750 () Int)
(declare-fun x1860 () Bool)
(declare-fun x83 () Int)
(declare-fun x3009 () Int)
(declare-fun x860 () Int)
(declare-fun x1857 () Bool)
(declare-fun x1174 () Int)
(declare-fun x37 () Bool)
(declare-fun x3277 () Bool)
(declare-fun x3147 () Int)
(declare-fun x2645 () Int)
(declare-fun x1960 () Int)
(declare-fun x3316 () Bool)
(declare-fun x3563 () Int)
(declare-fun x358 () Bool)
(declare-fun x290 () Int)
(declare-fun x1546 () Bool)
(declare-fun x3615 () Int)
(declare-fun x1792 () x1019)
(declare-fun x2251 () Bool)
(declare-fun x3663 () Int)
(declare-fun x1869 () Int)
(declare-fun x1411 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x1779 () Int)
(declare-fun x1214 () Int)
(declare-fun x335 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x3835 () x1019)
(declare-fun x579 () Bool)
(declare-fun x3645 () Int)
(declare-fun x1378 () Int)
(declare-fun x2296 () Bool)
(declare-fun x2812 () Int)
(declare-fun x2608 () Int)
(declare-fun x2536 (Int) Int)
(declare-fun x1761 () Int)
(declare-fun x2909 () Int)
(declare-fun x3399 () Int)
(declare-fun x744 () Int)
(declare-fun x126 () x1019)
(declare-fun x1262 () Bool)
(declare-fun x2716 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x2362 () Int)
(declare-fun x894 () Int)
(declare-fun x438 () Int)
(declare-fun x229 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x615 () Int)
(declare-fun x2695 () Bool)
(declare-fun x2145 () Int)
(declare-fun x3004 () x1019)
(declare-fun x1519 () Bool)
(declare-fun x1560 () Int)
(declare-fun x1310 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x757 () Int)
(declare-fun x56 () Int)
(declare-fun x717 () x1019)
(declare-fun x416 () Bool)
(declare-fun x154 () Int)
(declare-fun x1837 () Int)
(declare-fun x1451 () Bool)
(declare-fun x3530 () x1019)
(declare-fun x663 () Int)
(declare-fun x2664 () Int)
(declare-fun x723 () x1019)
(declare-fun x2397 () Int)
(declare-fun x3848 () x1019)
(declare-fun x3538 () x1019)
(declare-fun x2334 () Bool)
(declare-fun x1571 () Int)
(declare-fun x1655 () Bool)
(declare-fun x693 () Int)
(declare-fun x3278 () x1019)
(declare-fun x1181 () Int)
(declare-fun x2044 () Int)
(declare-fun x1583 () x1019)
(declare-fun x2700 () Int)
(declare-fun x2294 () x1019)
(declare-fun x660 () Bool)
(declare-fun x381 () Bool)
(declare-fun x1166 () x1019)
(declare-fun x1562 () Int)
(declare-fun x147 () Int)
(declare-fun x1739 () x1019)
(declare-fun x2872 () x1019)
(declare-fun x1041 () Bool)
(declare-fun x1842 () x1019)
(declare-fun x2327 () Bool)
(declare-fun x1950 () Int)
(declare-fun x2075 () Bool)
(declare-fun x1662 () Int)
(declare-fun x3619 () Int)
(declare-fun x3064 () Bool)
(declare-fun x360 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x1192 () x1019)
(declare-fun x2836 () Int)
(declare-fun x3424 () Bool)
(declare-fun x3056 () Int)
(declare-fun x1565 () Bool)
(declare-fun x3842 () Int)
(declare-fun x1835 () Int)
(declare-fun x1271 () x1019)
(declare-fun x3227 () Bool)
(declare-fun x3266 () Int)
(declare-fun x297 () Bool)
(declare-fun x3029 () Int)
(declare-fun x2139 () Bool)
(declare-fun x3420 () Int)
(declare-fun x3383 () Int)
(declare-fun x1781 () Bool)
(declare-fun x1674 () Int)
(declare-fun x1987 () Int)
(declare-fun x436 () Int)
(declare-fun x974 () x1019)
(declare-fun x3285 () Int)
(declare-fun x3872 () Int)
(declare-fun x605 () Bool)
(declare-fun x1476 (Int) Int)
(declare-fun x3512 () Int)
(declare-fun x2743 () x1019)
(declare-fun x1693 () x1019)
(declare-fun x435 () Bool)
(declare-fun x2911 () x1019)
(declare-fun x676 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x771 () Int)
(declare-fun x1678 (x1019) Int)
(declare-fun x3265 () Int)
(declare-fun x3178 () Bool)
(declare-fun x3566 () Bool)
(declare-fun x421 () Int)
(declare-fun x2555 () Bool)
(declare-fun x670 () Bool)
(declare-fun x735 () Int)
(declare-fun x2212 () Int)
(declare-fun x2097 () Int)
(declare-fun x1542 () Int)
(declare-fun x429 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x3406 () Int)
(declare-fun x254 () Int)
(declare-fun x1979 () Bool)
(declare-fun x2481 () Int)
(declare-fun x3686 () Int)
(declare-fun x752 () Bool)
(declare-fun x1277 () Int)
(declare-fun x1153 () Int)
(declare-fun x20 () Int)
(declare-fun x2736 () Int)
(declare-fun x575 () Int)
(declare-fun x3469 () Int)
(declare-fun x1978 (x1019) Int)
(declare-fun x1771 () Bool)
(declare-fun x3680 () x1019)
(declare-fun x243 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x62 () Int)
(declare-fun x1467 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x2805 () Bool)
(declare-fun x11 () x1019)
(declare-fun x835 () Bool)
(declare-fun x13 () Int)
(declare-fun x1409 () Int)
(declare-fun x3207 () Int)
(declare-fun x3826 () Bool)
(declare-fun x3190 () Int)
(declare-fun x1168 () x1019)
(declare-fun x3023 () Int)
(declare-fun x2487 () Bool)
(declare-fun x2259 () Int)
(declare-fun x642 () Int)
(declare-fun x2740 () x1019)
(declare-fun x1063 () Bool)
(declare-fun x3013 () Bool)
(declare-fun x1338 () Int)
(declare-fun x598 (x1019) Int)
(declare-fun x1232 () Bool)
(declare-fun x899 () Int)
(declare-fun x1513 () Bool)
(declare-fun x3191 () Bool)
(declare-fun x3584 () Int)
(declare-fun x2414 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1762 () Int)
(declare-fun x1470 () Int)
(declare-fun x2924 () Bool)
(declare-fun x3206 () Int)
(declare-fun x2255 () x1019)
(declare-fun x2708 () Int)
(declare-fun x2483 () x1019)
(declare-fun x1376 () Int)
(declare-fun x2409 () Bool)
(declare-fun x340 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x606 () Bool)
(declare-fun x2860 () x1019)
(declare-fun x1734 () x1019)
(declare-fun x2350 () Bool)
(declare-fun x3754 () Bool)
(declare-fun x1285 () Int)
(declare-fun x2535 (Int) Int)
(declare-fun x2963 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x3468 () x1019)
(declare-fun x2776 () Bool)
(declare-fun x857 () Bool)
(declare-fun x2452 () Int)
(declare-fun x1896 () Bool)
(declare-fun x75 () Int)
(declare-fun x3063 () Int)
(declare-fun x2928 () Int)
(declare-fun x2859 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x3930 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1466 () Int)
(declare-fun x2949 () x1019)
(declare-fun x3070 () x1019)
(declare-fun x2849 () Int)
(declare-fun x3065 () Bool)
(declare-fun x466 () Bool)
(declare-fun x3253 () Int)
(declare-fun x2098 () Int)
(declare-fun x2570 () Bool)
(declare-fun x2013 () x1019)
(declare-fun x2305 () Int)
(declare-fun x3761 () Int)
(declare-fun x3556 () Bool)
(declare-fun x3229 () Bool)
(declare-fun x3692 () Int)
(declare-fun x1494 () x1019)
(declare-fun x2115 () Bool)
(declare-fun x675 () Bool)
(declare-fun x1983 () Int)
(declare-fun x1807 () Int)
(declare-fun x3006 () Bool)
(declare-fun x292 () Int)
(declare-fun x1291 () Int)
(declare-fun x2804 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x2474 () Int)
(declare-fun x1942 () x1019)
(declare-fun x1251 () Int)
(declare-fun x2820 (x1019) Int)
(declare-fun x2062 () Bool)
(declare-fun x1567 () Int)
(declare-fun x3338 () Int)
(declare-fun x248 () Int)
(declare-fun x365 () Int)
(declare-fun x2497 () Bool)
(declare-fun x1206 () Int)
(declare-fun x576 () Int)
(declare-fun x2840 () Int)
(declare-fun x1830 () Bool)
(declare-fun x2464 () x1019)
(declare-fun x2547 () Int)
(declare-fun x410 () Int)
(declare-fun x1343 () Bool)
(declare-fun x3435 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x3011 () x1019)
(declare-fun x3000 () Bool)
(declare-fun x1831 () Int)
(declare-fun x618 () Bool)
(declare-fun x356 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x65 () Int)
(declare-fun x617 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x1991 () Int)
(declare-fun x3810 () Int)
(declare-fun x1512 () Bool)
(declare-fun x3205 () Bool)
(declare-fun x3573 () Int)
(declare-fun x2223 () Bool)
(declare-fun x1580 () Int)
(declare-fun x2730 () Bool)
(declare-fun x3019 () x1019)
(declare-fun x967 () x1019)
(declare-fun x86 () Int)
(declare-fun x2393 () Bool)
(declare-fun x3731 () Bool)
(declare-fun x3455 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x2797 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x613 () Bool)
(declare-fun x152 () Int)
(declare-fun x2919 () Bool)
(declare-fun x782 () Int)
(declare-fun x3215 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x1634 () Int)
(declare-fun x389 () Int)
(declare-fun x2886 () Int)
(declare-fun x2138 () Bool)
(declare-fun x964 () Bool)
(declare-fun x3060 (Int) Int)
(declare-fun x1713 () Int)
(declare-fun x1711 () Int)
(declare-fun x1374 () x1019)
(declare-fun x352 () Int)
(declare-fun x3130 () Int)
(declare-fun x382 () Int)
(declare-fun x2161 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x3857 () Bool)
(declare-fun x385 (x1019) Int)
(declare-fun x3192 () Bool)
(declare-fun x3607 () Int)
(declare-fun x1741 () Bool)
(declare-fun x2782 (Int Int) Int)
(declare-fun x1448 () Int)
(declare-fun x3354 () x1019)
(declare-fun x537 () Int)
(declare-fun x3827 () Int)
(declare-fun x1486 () x1019)
(declare-fun x3870 () Bool)
(declare-fun x3218 () Bool)
(declare-fun x106 () Bool)
(declare-fun x965 () Bool)
(declare-fun x2549 () Int)
(declare-fun x1995 () Bool)
(declare-fun x3318 () Bool)
(declare-fun x3223 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x885 (x1019) Int)
(declare-fun x1226 () Int)
(declare-fun x1126 () Bool)
(declare-fun x859 () Bool)
(declare-fun x2914 () Int)
(declare-fun x2423 () Bool)
(declare-fun x413 () x1019)
(declare-fun x3421 () Bool)
(declare-fun x1808 () Int)
(declare-fun x1029 () Int)
(declare-fun x3475 () Bool)
(declare-fun x3627 () x1019)
(declare-fun x2575 () Bool)
(declare-fun x2059 (Int) Int)
(declare-fun x211 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x3116 () Int)
(declare-fun x2530 () Int)
(declare-fun x1272 () Int)
(declare-fun x1315 () Bool)
(declare-fun x2281 () Bool)
(declare-fun x912 () Int)
(declare-fun x1457 () Int)
(declare-fun x34 () Bool)
(declare-fun x3700 () Int)
(declare-fun x128 () x1019)
(declare-fun x1719 () Int)
(declare-fun x3144 () Int)
(declare-fun x3701 () Bool)
(declare-fun x3672 () Bool)
(declare-fun x3332 () x1019)
(declare-fun x2774 () Int)
(declare-fun x1062 () Int)
(declare-fun x1302 () Bool)
(declare-fun x2912 () Int)
(declare-fun x441 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x3247 () Bool)
(declare-fun x3430 () Bool)
(declare-fun x884 () Int)
(declare-fun x2451 () Int)
(declare-fun x3126 () Int)
(declare-fun x3519 () x1019)
(declare-fun x236 () Int)
(declare-fun x998 () Bool)
(declare-fun x2577 () Bool)
(declare-fun x1227 () Int)
(declare-fun x362 (x1019) Int)
(declare-fun x1437 () Bool)
(declare-fun x3241 () x1019)
(declare-fun x2811 () Int)
(declare-fun x1102 () Int)
(declare-fun x1380 () Bool)
(declare-fun x2775 () Bool)
(declare-fun x2901 () x1019)
(declare-fun x3210 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x117 () Bool)
(declare-fun x3508 () Bool)
(declare-fun x3260 () Int)
(declare-fun x973 () Bool)
(declare-fun x724 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x369 () Bool)
(declare-fun x2871 (x1019) Int)
(declare-fun x3081 () x1019)
(declare-fun x3666 () Int)
(declare-fun x2841 () Bool)
(declare-fun x1795 () Bool)
(declare-fun x3520 () Int)
(declare-fun x565 () x1019)
(declare-fun x499 () Bool)
(declare-fun x461 () Bool)
(declare-fun x2925 () Bool)
(declare-fun x3174 () Int)
(declare-fun x274 () x1019)
(declare-fun x367 () Bool)
(declare-fun x2164 () Int)
(declare-fun x830 () Int)
(declare-fun x2662 () Bool)
(declare-fun x3740 () Int)
(declare-fun x1876 () Bool)
(declare-fun x1483 () Int)
(declare-fun x3821 () Bool)
(declare-fun x262 () Int)
(declare-fun x1727 () x1019)
(declare-fun x89 () Bool)
(declare-fun x924 () Int)
(declare-fun x1598 () x1019)
(declare-fun x463 () Int)
(declare-fun x3745 () x1019)
(declare-fun x1142 () Int)
(declare-fun x3876 () Bool)
(declare-fun x3588 () Int)
(declare-fun x3359 () Bool)
(declare-fun x2303 (Int) Int)
(declare-fun x2383 () Int)
(declare-fun x397 () x1019)
(declare-fun x3153 () Int)
(declare-fun x3636 () Bool)
(declare-fun x2382 () Bool)
(declare-fun x3280 () Int)
(declare-fun x1827 (x1019) Int)
(declare-fun x3893 () Int)
(declare-fun x3123 () Bool)
(declare-fun x300 () Bool)
(declare-fun x3381 () Int)
(declare-fun x3246 () Int)
(declare-fun x2275 () Bool)
(declare-fun x1187 () x1019)
(declare-fun x2342 () Bool)
(declare-fun x515 () x1019)
(declare-fun x201 () Bool)
(declare-fun x2625 () Int)
(declare-fun x833 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x704 () Bool)
(declare-fun x320 () Int)
(declare-fun x2765 () Bool)
(declare-fun x3640 () Bool)
(declare-fun x1386 () Int)
(declare-fun x3894 () Bool)
(declare-fun x914 () Bool)
(declare-fun x2915 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x149 () x1019)
(declare-fun x318 () Int)
(declare-fun x1888 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x3839 () Bool)
(declare-fun x3428 () Int)
(declare-fun x2142 () Bool)
(declare-fun x3776 () x1019)
(declare-fun x268 () Bool)
(declare-fun x3248 () Int)
(declare-fun x1208 () x1019)
(declare-fun x213 () Bool)
(declare-fun x1475 () Int)
(declare-fun x408 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x623 () Int)
(declare-fun x3611 () Int)
(declare-fun x781 () Bool)
(declare-fun x2246 () Int)
(declare-fun x2768 () Int)
(declare-fun x1993 () Bool)
(declare-fun x3386 () Int)
(declare-fun x1969 () Int)
(declare-fun x2007 () Bool)
(declare-fun x3610 () Bool)
(declare-fun x3851 () Bool)
(declare-fun x1658 () Int)
(declare-fun x3941 () Bool)
(declare-fun x625 () Int)
(declare-fun x1358 () Bool)
(declare-fun x2981 () Bool)
(declare-fun x3903 () Bool)
(declare-fun x3902 () Bool)
(declare-fun x1791 () Int)
(declare-fun x3410 () Bool)
(declare-fun x1146 () Int)
(declare-fun x3067 (x1019) Int)
(declare-fun x3290 () Int)
(declare-fun x1316 () Bool)
(declare-fun x2073 () Int)
(declare-fun x3500 () Bool)
(declare-fun x2766 () x1019)
(declare-fun x2668 () Int)
(declare-fun x1106 () Int)
(declare-fun x357 () Int)
(declare-fun x1790 () Int)
(declare-fun x2601 (x1019) Int)
(declare-fun x440 () Int)
(declare-fun x2363 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x807 () Int)
(declare-fun x1082 () Bool)
(declare-fun x3186 () Bool)
(declare-fun x3168 () Bool)
(declare-fun x2180 () Int)
(declare-fun x2890 () Bool)
(declare-fun x2746 () Int)
(declare-fun x1107 () Bool)
(declare-fun x204 () Int)
(declare-fun x2896 () Bool)
(declare-fun x838 (Int) Int)
(declare-fun x1480 () Bool)
(declare-fun x842 () Bool)
(declare-fun x3250 () Int)
(declare-fun x2506 () Bool)
(declare-fun x3157 (Int) Int)
(declare-fun x2585 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x2348 () Int)
(declare-fun x336 () Int)
(declare-fun x3044 () Int)
(declare-fun x2357 () Bool)
(declare-fun x3604 () Bool)
(declare-fun x3778 () Int)
(declare-fun x206 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x3490 () Int)
(declare-fun x227 () Int)
(declare-fun x3693 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x2489 () x1019)
(declare-fun x2094 () Bool)
(declare-fun x3634 () x1019)
(declare-fun x2389 () x1019)
(declare-fun x1455 () Bool)
(declare-fun x1450 () x1019)
(declare-fun x2988 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x1696 () Int)
(declare-fun x1723 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x375 () Bool)
(declare-fun x1726 () Int)
(declare-fun x1814 () Bool)
(declare-fun x2210 () Bool)
(declare-fun x3849 () Bool)
(declare-fun x566 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x3158 () Int)
(declare-fun x2186 () Bool)
(declare-fun x2654 () Int)
(declare-fun x878 () Int)
(declare-fun x3667 () x1019)
(declare-fun x3869 () Int)
(declare-fun x2881 () Int)
(declare-fun x1105 () Int)
(declare-fun x1853 () Bool)
(declare-fun x1435 () x1019)
(declare-fun x917 () Int)
(declare-fun x14 () Int)
(declare-fun x2102 () Int)
(declare-fun x3204 () Int)
(declare-fun x1785 () Int)
(declare-fun x1579 () Int)
(declare-fun x1924 () Bool)
(declare-fun x3273 () Bool)
(declare-fun x592 (x1019) Int)
(declare-fun x1051 () Int)
(declare-fun x3506 () Bool)
(declare-fun x215 () x1019)
(declare-fun x1215 () Int)
(declare-fun x3252 () Bool)
(declare-fun x2548 () x1019)
(declare-fun x130 () Bool)
(declare-fun x3161 () x1019)
(declare-fun x910 () Bool)
(declare-fun x3199 () Int)
(declare-fun x3687 () Int)
(declare-fun x3185 () Int)
(declare-fun x3369 () Int)
(declare-fun x2954 () Int)
(declare-fun x1667 () Int)
(declare-fun x1425 () Bool)
(declare-fun x1301 () Int)
(declare-fun x871 () Int)
(declare-fun x3379 () Int)
(declare-fun x2634 () Bool)
(declare-fun x150 () Int)
(declare-fun x18 () Bool)
(declare-fun x1922 () Int)
(declare-fun x3724 () Bool)
(declare-fun x680 () Int)
(declare-fun x2206 () Bool)
(declare-fun x2503 () Int)
(declare-fun x349 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x3170 () x1019)
(declare-fun x142 () Int)
(declare-fun x543 () Bool)
(declare-fun x942 () Int)
(declare-fun x2329 () Int)
(declare-fun x253 () x1019)
(declare-fun x2955 () Int)
(declare-fun x754 () Bool)
(declare-fun x1685 () Int)
(declare-fun x2470 () Bool)
(declare-fun x1811 () Int)
(declare-fun x2831 () x1019)
(declare-fun x1985 () Bool)
(declare-fun x191 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x1333 () Int)
(declare-fun x3090 () Int)
(declare-fun x1167 () Bool)
(declare-fun x3404 () Int)
(declare-fun x512 (Int) x1019)
(declare-fun x2773 () Bool)
(declare-fun x2471 () Int)
(declare-fun x568 () x1019)
(declare-fun x2521 () Int)
(declare-fun x3441 () Int)
(declare-fun x3832 () Int)
(declare-fun x157 () Bool)
(declare-fun x1966 () Int)
(declare-fun x1793 () Int)
(declare-fun x2967 () Bool)
(declare-fun x550 () Bool)
(declare-fun x2512 () Int)
(declare-fun x932 () x1019)
(declare-fun x1389 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x131 () Bool)
(declare-fun x545 () Bool)
(declare-fun x2468 () Bool)
(declare-fun x2437 () Bool)
(declare-fun x926 () Bool)
(declare-fun x3298 () Bool)
(declare-fun x3349 () Int)
(declare-fun x1129 () Bool)
(declare-fun x3665 () Int)
(declare-fun x2335 () Int)
(declare-fun x1322 () Bool)
(declare-fun x3476 () Bool)
(declare-fun x1523 () x1019)
(declare-fun x931 () Bool)
(declare-fun x445 () Int)
(declare-fun x1296 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x3577 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x897 () Bool)
(declare-fun x114 () x1019)
(declare-fun x644 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x476 () Bool)
(declare-fun x3914 () Bool)
(declare-fun x981 () Int)
(declare-fun x87 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x2684 () Int)
(declare-fun x3024 () Int)
(declare-fun x2427 () Bool)
(declare-fun x2542 () Bool)
(declare-fun x1729 () x1019)
(declare-fun x3167 () Bool)
(declare-fun x2961 () Bool)
(declare-fun x3737 () x1019)
(declare-fun x2586 () Int)
(declare-fun x1689 () Bool)
(declare-fun x3882 () Bool)
(declare-fun x1975 () Int)
(declare-fun x2731 () Int)
(declare-fun x3924 () x1019)
(declare-fun x1766 () Bool)
(declare-fun x3353 () x1019)
(declare-fun x705 () Int)
(declare-fun x259 () Int)
(declare-fun x1893 () Int)
(declare-fun x384 (x1019) Int)
(declare-fun x1604 () Bool)
(declare-fun x3325 () Bool)
(declare-fun x514 () Bool)
(declare-fun x769 () Int)
(declare-fun x556 () Int)
(declare-fun x2760 () Int)
(declare-fun x3108 () Bool)
(declare-fun x918 () Bool)
(declare-fun x2785 () Bool)
(declare-fun x2858 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x3258 () Bool)
(declare-fun x740 () Bool)
(declare-fun x3594 () Int)
(declare-fun x2809 () Bool)
(declare-fun x1588 () Int)
(declare-fun x745 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x1269 () Int)
(declare-fun x1005 () x1019)
(declare-fun x3221 () Bool)
(declare-fun x144 () x1019)
(declare-fun x873 () Bool)
(declare-fun x316 () x1019)
(declare-fun x755 () Bool)
(declare-fun x1024 () x1019)
(declare-fun x1113 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x3094 () Int)
(declare-fun x1347 () Int)
(declare-fun x1661 () x1019)
(declare-fun x811 () x1019)
(declare-fun x978 () Int)
(declare-fun x3540 () Bool)
(declare-fun x694 () Int)
(declare-fun x960 () Int)
(declare-fun x3863 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x1444 () Int)
(declare-fun x406 () x1019)
(declare-fun x1692 () Int)
(declare-fun x1509 () x1019)
(declare-fun x451 (Int) Int)
(declare-fun x2672 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x2720 () Int)
(declare-fun x2460 (x1019) Int)
(declare-fun x3115 () Bool)
(declare-fun x1402 () Int)
(declare-fun x2442 () Bool)
(declare-fun x2167 () Int)
(declare-fun x2649 () Int)
(declare-fun x1582 () Int)
(declare-fun x481 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x1058 () x1019)
(declare-fun x325 () Int)
(declare-fun x3329 () Int)
(declare-fun x3124 () Bool)
(declare-fun x1864 () x1019)
(declare-fun x1730 () x1019)
(declare-fun x1706 () Int)
(declare-fun x2153 (x1019) Int)
(declare-fun x1155 () Bool)
(declare-fun x503 () x1019)
(declare-fun x2454 () Int)
(declare-fun x2232 () Int)
(declare-fun x275 () Bool)
(declare-fun x419 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x1015 () x1019)
(declare-fun x3337 () Bool)
(declare-fun x2376 () Int)
(declare-fun x3725 () Bool)
(declare-fun x110 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x3834 (Int) Int)
(declare-fun x2311 () Int)
(declare-fun x2938 () Bool)
(declare-fun x3531 () Int)
(declare-fun x2302 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x3860 () Bool)
(declare-fun x553 () Bool)
(declare-fun x928 () Bool)
(declare-fun x95 () Bool)
(declare-fun x2038 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x3874 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x2425 (x1019) Int)
(declare-fun x2642 () Bool)
(declare-fun x2827 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x3238 () Int)
(declare-fun x1288 () Bool)
(declare-fun x1137 () Int)
(declare-fun x3058 () x1019)
(declare-fun x273 () Bool)
(declare-fun x2745 () Int)
(declare-fun x3408 () Bool)
(declare-fun x2279 () Bool)
(declare-fun x3301 () Bool)
(declare-fun x3171 () Bool)
(declare-fun x25 () Bool)
(declare-fun x452 () x1019)
(declare-fun x1535 () Int)
(declare-fun x3254 () Int)
(declare-fun x3889 () Bool)
(declare-fun x2265 (x1019) Int)
(declare-fun x3232 (Int) Int)
(declare-fun x217 () Bool)
(declare-fun x141 () Bool)
(declare-fun x1298 () Int)
(declare-fun x647 () Int)
(declare-fun x1664 () Bool)
(declare-fun x2502 () Bool)
(declare-fun x3243 () Int)
(declare-fun x608 () Bool)
(declare-fun x203 () x1019)
(declare-fun x1419 () Int)
(declare-fun x3291 () Int)
(declare-fun x3344 () Bool)
(declare-fun x742 () Int)
(declare-fun x111 () Bool)
(declare-fun x3104 () Int)
(declare-fun x2916 () Int)
(declare-fun x2525 () Int)
(declare-fun x696 () Int)
(declare-fun x1283 () Bool)
(declare-fun x3668 () x1019)
(declare-fun x1986 () Int)
(declare-fun x277 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x3230 () Bool)
(declare-fun x2937 () Bool)
(declare-fun x1473 () Int)
(declare-fun x200 () Int)
(declare-fun x1292 () x1019)
(declare-fun x1043 () Int)
(declare-fun x3367 () Int)
(declare-fun x2407 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x820 () Int)
(declare-fun x2324 () Bool)
(declare-fun x2692 () Int)
(declare-fun x2864 () Int)
(declare-fun x986 () x1019)
(declare-fun x2576 () Int)
(declare-fun x905 () Bool)
(declare-fun x2441 () Int)
(declare-fun x346 () Bool)
(declare-fun x396 () Int)
(declare-fun x2550 () Int)
(declare-fun x2124 () x1019)
(declare-fun x1974 () Int)
(declare-fun x603 () Int)
(declare-fun x1295 () x1019)
(declare-fun x1139 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x3587 (x1019) Int)
(declare-fun x2224 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x2948 () Int)
(declare-fun x495 () Int)
(declare-fun x230 () x1019)
(declare-fun x1733 () Int)
(declare-fun x1092 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x1379 () Int)
(declare-fun x2950 () Int)
(declare-fun x51 (x1019) Int)
(declare-fun x3255 () Int)
(declare-fun x3581 () Int)
(declare-fun x2123 () Int)
(declare-fun x2317 () x1019)
(declare-fun x3119 () Int)
(declare-fun x836 () Int)
(declare-fun x2287 () Bool)
(declare-fun x1175 () Int)
(declare-fun x3059 () Bool)
(declare-fun x654 () x1019)
(declare-fun x2609 () Int)
(declare-fun x3002 () Int)
(declare-fun x2693 () Bool)
(declare-fun x1076 () x1019)
(declare-fun x1743 (Int) Int)
(declare-fun x581 () Int)
(declare-fun x1049 () Int)
(declare-fun x1159 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x3387 () Bool)
(declare-fun x3742 () Int)
(declare-fun x1243 () Int)
(declare-fun x3237 () Int)
(declare-fun x2902 () Int)
(declare-fun x2490 () x1019)
(declare-fun x3694 () Bool)
(declare-fun x2584 () Int)
(declare-fun x1169 () Int)
(declare-fun x2197 () Int)
(declare-fun x1141 () Int)
(declare-fun x2042 () Int)
(declare-fun x3339 () Bool)
(declare-fun x3854 () Int)
(declare-fun x685 () Int)
(declare-fun x1478 () Int)
(declare-fun x1273 () Int)
(declare-fun x1469 () Bool)
(declare-fun x1362 () Int)
(declare-fun x3871 () Int)
(declare-fun x2353 () Int)
(declare-fun x3106 () Int)
(declare-fun x158 () Int)
(declare-fun x3861 () Bool)
(declare-fun x2493 () Int)
(declare-fun x1764 () Int)
(declare-fun x112 () x1019)
(declare-fun x1832 () x1019)
(declare-fun x2141 (x1019) Int)
(declare-fun x3136 () Int)
(declare-fun x808 () Bool)
(declare-fun x3018 () Bool)
(declare-fun x971 () Bool)
(declare-fun x2729 () Int)
(declare-fun x938 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x542 () Int)
(declare-fun x73 () Bool)
(declare-fun x3883 () Int)
(declare-fun x1349 () Bool)
(declare-fun x578 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x929 () Bool)
(declare-fun x1916 () Int)
(declare-fun x171 () Int)
(declare-fun x1981 () Int)
(declare-fun x2360 () Int)
(declare-fun x956 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x2307 () x1019)
(declare-fun x257 () Int)
(declare-fun x1905 () Bool)
(declare-fun x1958 () Int)
(declare-fun x2262 () Bool)
(declare-fun x2889 () Bool)
(declare-fun x3589 () Bool)
(declare-fun x3041 () Int)
(declare-fun x3416 () Int)
(declare-fun x3886 () Bool)
(declare-fun x2583 () Int)
(declare-fun x3099 (x1019) Int)
(declare-fun x587 () x1019)
(declare-fun x2640 () x1019)
(declare-fun x1197 () x1019)
(declare-fun x398 () Int)
(declare-fun x1026 () Int)
(declare-fun x104 () Int)
(declare-fun x3501 () Bool)
(declare-fun x907 () Int)
(declare-fun x516 (x1019) Int)
(declare-fun x2626 () Bool)
(declare-fun x3884 () Bool)
(declare-fun x2368 () Bool)
(declare-fun x3817 () Bool)
(declare-fun x334 () Bool)
(declare-fun x3128 () x1019)
(declare-fun x3644 () Bool)
(declare-fun x3363 () Int)
(declare-fun x1493 () Int)
(declare-fun x554 () Bool)
(declare-fun x3514 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x1213 () Int)
(declare-fun x113 () Bool)
(declare-fun x2701 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x3939 () Bool)
(declare-fun x3855 () Int)
(declare-fun x2973 () Bool)
(declare-fun x179 () Bool)
(declare-fun x2757 () x1019)
(declare-fun x1938 () Bool)
(declare-fun x916 () Int)
(declare-fun x1763 () Bool)
(declare-fun x828 () Bool)
(declare-fun x3905 () x1019)
(declare-fun x3442 () Bool)
(declare-fun x2987 () Int)
(declare-fun x3921 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x2432 () Int)
(declare-fun x3401 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x779 () Bool)
(declare-fun x1768 () Int)
(declare-fun x1910 () x1019)
(declare-fun x1136 () x1019)
(declare-fun x3452 () Bool)
(declare-fun x821 () Int)
(declare-fun x3073 () Int)
(declare-fun x1845 () x1019)
(declare-fun x989 () Bool)
(declare-fun x2920 (x1019) Int)
(declare-fun x1464 () Int)
(declare-fun x3868 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1721 () Bool)
(declare-fun x3720 () Bool)
(declare-fun x1537 () Int)
(declare-fun x2581 () Bool)
(declare-fun x3533 () Int)
(declare-fun x546 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x339 () Bool)
(declare-fun x982 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x3537 () Int)
(declare-fun x2221 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x1119 () x1019)
(declare-fun x3647 () Int)
(declare-fun x2596 () Int)
(declare-fun x2544 () Int)
(declare-fun x2439 () Bool)
(declare-fun x877 () Int)
(declare-fun x1912 () x1019)
(declare-fun x3249 () Int)
(declare-fun x127 () Int)
(declare-fun x2835 () Int)
(declare-fun x2135 (x1019) Int)
(declare-fun x612 () Int)
(declare-fun x1754 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x2646 () Bool)
(declare-fun x324 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x1755 () x1019)
(declare-fun x2082 () Bool)
(declare-fun x3706 () Bool)
(declare-fun x2500 () Int)
(declare-fun x496 () Int)
(declare-fun x3283 () Int)
(declare-fun x3850 () Int)
(declare-fun x2134 () x1019)
(declare-fun x1217 () Int)
(declare-fun x123 () Int)
(declare-fun x1230 () x1019)
(declare-fun x770 () Int)
(declare-fun x3896 () Bool)
(declare-fun x1770 () Int)
(declare-fun x1190 () Int)
(declare-fun x467 () Int)
(declare-fun x3091 () Bool)
(declare-fun x90 () Bool)
(declare-fun x1534 () x1019)
(declare-fun x1165 () Bool)
(declare-fun x2366 () x1019)
(declare-fun x1261 () Int)
(declare-fun x588 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x2959 (Int) Int)
(declare-fun x3601 () Bool)
(declare-fun x1398 () Int)
(declare-fun x2628 () x1019)
(declare-fun x3465 (Int) Int)
(declare-fun x145 () Bool)
(declare-fun x2045 () Int)
(declare-fun x2486 () Bool)
(declare-fun x395 (Int) Int)
(declare-fun x2196 () Int)
(declare-fun x3684 () Bool)
(declare-fun x1669 () Int)
(declare-fun x1008 () Int)
(declare-fun x3083 () Int)
(declare-fun x1244 () x1019)
(declare-fun x1456 () Int)
(declare-fun x2482 () x1019)
(declare-fun x601 () Bool)
(declare-fun x1984 () x1019)
(declare-fun x8 () Bool)
(declare-fun x2078 () Int)
(declare-fun x3788 () Bool)
(declare-fun x2677 () Int)
(declare-fun x2176 () Int)
(declare-fun x3434 () Int)
(declare-fun x1196 () Int)
(declare-fun x1057 () Int)
(declare-fun x74 () Bool)
(declare-fun x1549 () Int)
(declare-fun x3302 () Bool)
(declare-fun x1210 () Int)
(declare-fun x2104 () x1019)
(declare-fun x3043 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x2992 () x1019)
(declare-fun x1728 () Bool)
(declare-fun x2772 () Int)
(declare-fun x2605 () Int)
(declare-fun x3209 () x1019)
(declare-fun x226 () Int)
(declare-fun x187 () Int)
(declare-fun x573 () x1019)
(declare-fun x1941 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x2158 () Int)
(declare-fun x1330 () Int)
(declare-fun x2322 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x2069 () x1019)
(declare-fun x1477 () x1019)
(declare-fun x3772 () Bool)
(declare-fun x529 (Int) Int)
(declare-fun x3284 () Bool)
(declare-fun x3803 () Int)
(declare-fun x846 () Bool)
(declare-fun x3292 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x697 () Int)
(declare-fun x2028 () Bool)
(declare-fun x2051 () x1019)
(declare-fun x237 () Bool)
(declare-fun x1756 () Int)
(declare-fun x1001 () Int)
(declare-fun x1103 () Int)
(declare-fun x3457 () Int)
(declare-fun x3390 () Int)
(declare-fun x1354 () Bool)
(declare-fun x3460 () Int)
(declare-fun x3150 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x3257 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x459 () Int)
(declare-fun x282 () Bool)
(declare-fun x343 () Bool)
(declare-fun x1731 () Int)
(declare-fun x3925 () x1019)
(declare-fun x3194 () Bool)
(declare-fun x2230 () Bool)
(declare-fun x411 () Bool)
(declare-fun x1616 () Int)
(declare-fun x3343 () Int)
(declare-fun x3767 () Bool)
(declare-fun x2263 () Int)
(declare-fun x1775 () Bool)
(declare-fun x2593 () Bool)
(declare-fun x3012 () Bool)
(declare-fun x715 () Int)
(declare-fun x2278 () Bool)
(declare-fun x2962 () Int)
(declare-fun x854 () Int)
(declare-fun x1699 () Int)
(declare-fun x1344 () Int)
(declare-fun x3135 () Int)
(declare-fun x102 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1558 () Bool)
(declare-fun x2792 () Int)
(declare-fun x1279 () Int)
(declare-fun x2328 () Bool)
(declare-fun x271 () Int)
(declare-fun x84 () Int)
(declare-fun x2480 () Int)
(declare-fun x869 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x58 () Bool)
(declare-fun x1064 () Int)
(declare-fun x677 () Int)
(declare-fun x1787 () Int)
(declare-fun x750 () Int)
(declare-fun x3738 () Int)
(declare-fun x1627 () Bool)
(declare-fun x232 () Int)
(declare-fun x761 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x3001 () x1019)
(declare-fun x2763 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x2336 () Bool)
(declare-fun x791 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x2321 () x1019)
(declare-fun x299 () Bool)
(declare-fun x561 () Bool)
(declare-fun x3159 () Int)
(declare-fun x1618 () Int)
(declare-fun x1608 () Bool)
(declare-fun x2897 () Int)
(declare-fun x69 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x3479 () Bool)
(declare-fun x1266 (x1019) Int)
(declare-fun x1452 () x1019)
(declare-fun x881 () Bool)
(declare-fun x3858 () x1019)
(declare-fun x1492 () Int)
(declare-fun x3688 () Int)
(declare-fun x3545 () Bool)
(declare-fun x946 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x2484 () Int)
(declare-fun x848 () Int)
(declare-fun x1574 () Bool)
(declare-fun x3459 () Bool)
(declare-fun x308 () Int)
(declare-fun x2753 () Int)
(declare-fun x1892 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x307 () Int)
(declare-fun x3560 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x710 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x2738 () x1019)
(declare-fun x1177 () Bool)
(declare-fun x3549 () Bool)
(declare-fun x3790 () Int)
(declare-fun x3357 () x1019)
(declare-fun x1541 () Int)
(declare-fun x952 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x511 () x1019)
(declare-fun x3813 () Bool)
(declare-fun x3088 () Bool)
(declare-fun x3393 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x733 () Int)
(declare-fun x582 () Bool)
(declare-fun x2081 () Int)
(declare-fun x3422 () Int)
(declare-fun x3328 () Int)
(declare-fun x3606 () Bool)
(declare-fun x1751 () Bool)
(declare-fun x1 () Bool)
(declare-fun x2602 () Int)
(declare-fun x502 () Int)
(declare-fun x2603 () Int)
(declare-fun x241 () Int)
(declare-fun x3515 () Int)
(declare-fun x1596 () Int)
(declare-fun x2403 () Int)
(declare-fun x2084 () Int)
(declare-fun x3327 () x1019)
(declare-fun x2990 () Bool)
(declare-fun x1140 () Int)
(declare-fun x1568 () Bool)
(declare-fun x1125 () Int)
(declare-fun x139 () Int)
(declare-fun x1670 () Bool)
(declare-fun x3297 () Int)
(declare-fun x3628 () Bool)
(declare-fun x3154 () Int)
(declare-fun x1818 () Int)
(declare-fun x837 () Bool)
(declare-fun x3747 () Int)
(declare-fun x1186 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x2735 () x1019)
(declare-fun x3652 () x1019)
(declare-fun x2258 () Bool)
(declare-fun x2817 () Int)
(declare-fun x766 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x3467 () Int)
(declare-fun x32 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x2242 () Int)
(declare-fun x1502 () Int)
(declare-fun x852 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x3193 () Bool)
(declare-fun x1889 () x1019)
(declare-fun x1046 () Int)
(declare-fun x1659 () Int)
(declare-fun x1223 () Int)
(declare-fun x40 () Bool)
(declare-fun x36 (Int) Int)
(declare-fun x310 () Bool)
(declare-fun x234 () x1019)
(declare-fun x3347 () Bool)
(declare-fun x2661 () x1019)
(declare-fun x189 () Int)
(declare-fun x2234 () Int)
(declare-fun x422 () Bool)
(declare-fun x3739 () x1019)
(declare-fun x2420 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x1238 () Int)
(declare-fun x423 () Bool)
(declare-fun x2566 () Int)
(declare-fun x2284 () Bool)
(declare-fun x2861 () Bool)
(declare-fun x504 () Int)
(declare-fun x3603 () Bool)
(declare-fun x487 (Int) Int)
(declare-fun x1799 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x1329 () Int)
(declare-fun x146 () Bool)
(declare-fun x1252 () Int)
(declare-fun x2270 () Bool)
(declare-fun x1813 () Int)
(declare-fun x2802 () Bool)
(declare-fun x506 () Bool)
(declare-fun x3323 () x1019)
(declare-fun x482 () Bool)
(declare-fun x3875 () Bool)
(declare-fun x2790 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1067 () Int)
(declare-fun x817 () Int)
(declare-fun x2799 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x3093 () Int)
(declare-fun x3016 () Int)
(declare-fun x319 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x2704 () Int)
(declare-fun x3673 () Bool)
(declare-fun x633 () Bool)
(declare-fun x2520 () x1019)
(declare-fun x216 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x1599 () Int)
(declare-fun x3729 () Int)
(declare-fun x839 () x1019)
(declare-fun x3801 () Int)
(declare-fun x3728 () x1019)
(declare-fun x2208 () Bool)
(declare-fun x3027 () Int)
(declare-fun x3169 () Bool)
(declare-fun x2435 () Bool)
(declare-fun x3042 () Int)
(declare-fun x2595 () Bool)
(declare-fun x172 () Int)
(declare-fun x3616 () Int)
(declare-fun x2942 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x1947 () Int)
(declare-fun x2096 () Bool)
(declare-fun x181 () Bool)
(declare-fun x2014 () Int)
(declare-fun x3757 () Int)
(declare-fun x3859 () Bool)
(declare-fun x722 () Bool)
(declare-fun x686 () Int)
(declare-fun x1365 () Bool)
(declare-fun x3127 () Int)
(declare-fun x721 () Int)
(declare-fun x2163 () Bool)
(declare-fun x1348 () Int)
(declare-fun x2047 () Int)
(declare-fun x3236 () Int)
(declare-fun x190 () Bool)
(declare-fun x2784 () x1019)
(declare-fun x1897 (x1019) Int)
(declare-fun x557 () Int)
(declare-fun x3496 () Bool)
(declare-fun x3311 () Bool)
(declare-fun x3762 () Bool)
(declare-fun x49 () Int)
(declare-fun x895 () Bool)
(declare-fun x1339 () x1019)
(declare-fun x947 () Bool)
(declare-fun x599 () Bool)
(declare-fun x3423 () Int)
(declare-fun x2884 () Bool)
(declare-fun x394 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x2719 () Bool)
(declare-fun x980 () Bool)
(declare-fun x2787 () Int)
(declare-fun x548 () Int)
(declare-fun x2079 () Int)
(declare-fun x3466 () Bool)
(declare-fun x2121 () Int)
(declare-fun x804 () Int)
(declare-fun x3784 () x1019)
(declare-fun x2209 () x1019)
(declare-fun x2843 () Int)
(declare-fun x1569 () Bool)
(declare-fun x1760 () Int)
(declare-fun x1138 () Bool)
(declare-fun x3664 () Int)
(declare-fun x3746 () Int)
(declare-fun x2983 () Bool)
(declare-fun x1682 () Int)
(declare-fun x1643 () Int)
(declare-fun x3895 () Int)
(declare-fun x1953 () Int)
(declare-fun x1783 () x1019)
(declare-fun x3017 () x1019)
(declare-fun x140 () Bool)
(declare-fun x1757 () Int)
(declare-fun x1887 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x645 () Bool)
(declare-fun x3918 () Bool)
(declare-fun x1875 () Int)
(declare-fun x707 () Bool)
(declare-fun x3282 () Bool)
(declare-fun x3734 () Int)
(declare-fun x2574 () Bool)
(declare-fun x2118 () Int)
(declare-fun x2534 () x1019)
(declare-fun x35 () Bool)
(declare-fun x2762 () Int)
(declare-fun x1967 () Bool)
(declare-fun x3651 () Int)
(declare-fun x3656 () Int)
(declare-fun x729 () Bool)
(declare-fun x639 () Bool)
(declare-fun x3559 () Bool)
(declare-fun x3175 () Bool)
(declare-fun x3103 (x1019) Int)
(declare-fun x1672 () Bool)
(declare-fun x468 () x1019)
(declare-fun x488 () Int)
(declare-fun x2413 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x3080 () Bool)
(declare-fun x1715 () Int)
(declare-fun x3715 () Int)
(declare-fun x220 () Int)
(declare-fun x3735 () Int)
(declare-fun x674 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x2943 () Int)
(declare-fun x3358 () Int)
(declare-fun x3641 () x1019)
(declare-fun x30 () Bool)
(declare-fun x1150 () Int)
(declare-fun x1937 () Int)
(declare-fun x3717 () x1019)
(declare-fun x2446 () Bool)
(declare-fun x3352 () Bool)
(declare-fun x3650 () Int)
(declare-fun x304 () Int)
(declare-fun x493 () Bool)
(declare-fun x3864 () Bool)
(declare-fun x1872 () Int)
(declare-fun x1091 () Int)
(declare-fun x3550 () Int)
(declare-fun x2273 () Bool)
(declare-fun x159 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x415 () Bool)
(declare-fun x105 () Bool)
(declare-fun x3917 () Int)
(declare-fun x3437 () Int)
(declare-fun x3862 () Int)
(declare-fun x1913 () Int)
(declare-fun x2932 () x1019)
(declare-fun x2893 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x3916 () Bool)
(declare-fun x194 () Bool)
(declare-fun x3391 () Int)
(declare-fun x344 () Int)
(declare-fun x2633 () Bool)
(declare-fun x902 () x1019)
(declare-fun x1290 () x1019)
(declare-fun x1503 () Bool)
(declare-fun x2674 () x1019)
(declare-fun x1646 () x1019)
(declare-fun x1369 () Int)
(declare-fun x1351 () Bool)
(declare-fun x3394 () Int)
(declare-fun x341 () Int)
(declare-fun x810 () Int)
(declare-fun x79 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x3052 () Int)
(declare-fun x870 () Int)
(declare-fun x45 () Bool)
(declare-fun x2369 () Int)
(declare-fun x1858 () Bool)
(declare-fun x812 () x1019)
(declare-fun x2895 () Int)
(declare-fun x1612 () Int)
(declare-fun x1245 () Int)
(declare-fun x2269 () Int)
(declare-fun x3239 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x595 () Int)
(declare-fun x258 () Int)
(declare-fun x2185 () Int)
(declare-fun x1844 () Int)
(declare-fun x3322 () Int)
(declare-fun x1962 () x1019)
(declare-fun x1531 () Bool)
(declare-fun x457 () x1019)
(declare-fun x2046 () Bool)
(declare-fun x976 () Bool)
(declare-fun x1712 () Int)
(declare-fun x1917 () Bool)
(declare-fun x3471 (x1019) Int)
(declare-fun x2563 () Bool)
(declare-fun x3709 () Bool)
(declare-fun x2356 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x3885 () Int)
(declare-fun x2039 () Bool)
(declare-fun x2507 () x1019)
(declare-fun x2718 () Bool)
(declare-fun x1317 () Int)
(declare-fun x1054 (x1019) Int)
(declare-fun x2732 () Bool)
(declare-fun x219 () Bool)
(declare-fun x3319 () Int)
(declare-fun x2837 (x1019) Int)
(declare-fun x38 () Bool)
(declare-fun x1264 () Int)
(declare-fun x3487 () Int)
(declare-fun x3173 () Int)
(declare-fun x2157 () Int)
(declare-fun x3449 () Int)
(declare-fun x972 () Int)
(declare-fun x2578 () Bool)
(declare-fun x1828 () Int)
(declare-fun x3362 () Int)
(declare-fun x574 () Int)
(declare-fun x2974 () Int)
(declare-fun x2600 () Int)
(declare-fun x1161 () Int)
(declare-fun x1328 () Int)
(declare-fun x3075 () Bool)
(declare-fun x2737 () Int)
(declare-fun x1584 () Bool)
(declare-fun x2918 () Int)
(declare-fun x2199 () Bool)
(declare-fun x700 () Int)
(declare-fun x1865 () Int)
(declare-fun x3485 () Bool)
(declare-fun x3281 () Bool)
(declare-fun x2009 () Int)
(declare-fun x1461 () Bool)
(declare-fun x671 () Bool)
(declare-fun x3751 () Int)
(declare-fun x1010 () Bool)
(declare-fun x2853 () Bool)
(declare-fun x1554 () Int)
(declare-fun x594 () Int)
(declare-fun x2624 () x1019)
(declare-fun x851 () Bool)
(declare-fun x3101 () Bool)
(declare-fun x3351 () Int)
(declare-fun x1116 () Int)
(declare-fun x2058 () Bool)
(declare-fun x2559 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x3635 () x1019)
(declare-fun x2934 (Int) Int)
(declare-fun x2631 () Int)
(declare-fun x98 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x2813 () Int)
(declare-fun x3308 () Bool)
(declare-fun x162 () x1019)
(declare-fun x3299 () Bool)
(declare-fun x624 () Int)
(declare-fun x2681 () Int)
(declare-fun x1371 () Int)
(declare-fun x1668 () x1019)
(declare-fun x2869 () Int)
(declare-fun x224 () x1019)
(declare-fun x2519 () Int)
(declare-fun x799 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x2387 () Int)
(declare-fun x3780 () x1019)
(declare-fun x2794 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x787 () Int)
(declare-fun x446 () x1019)
(declare-fun x2769 () Int)
(declare-fun x1108 () Int)
(declare-fun x1679 () Bool)
(declare-fun x815 () Int)
(declare-fun x3539 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x3727 () Int)
(declare-fun x1314 () Int)
(declare-fun x3272 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x2052 () Int)
(declare-fun x1506 () Bool)
(declare-fun x979 () Int)
(declare-fun x2283 () Bool)
(declare-fun x668 () Int)
(declare-fun x2607 () Bool)
(declare-fun x3187 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x2015 () x1019)
(declare-fun x3208 () x1019)
(declare-fun x1130 () Bool)
(declare-fun x2444 () Int)
(declare-fun x3714 () x1019)
(declare-fun x2744 () Int)
(declare-fun x3360 () Int)
(declare-fun x555 () Bool)
(declare-fun x3536 () Bool)
(declare-fun x3172 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x954 () Bool)
(declare-fun x462 () Int)
(declare-fun x1334 () Bool)
(declare-fun x678 () Int)
(declare-fun x1786 () Bool)
(declare-fun x122 () Bool)
(declare-fun x270 () Int)
(declare-fun x2194 () Int)
(declare-fun x940 () Int)
(declare-fun x3402 () Bool)
(declare-fun x403 () x1019)
(declare-fun x1018 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x1838 () x1019)
(declare-fun x400 () Bool)
(declare-fun x1427 () Int)
(declare-fun x3118 () Int)
(declare-fun x2300 () Bool)
(declare-fun x3149 () Int)
(declare-fun x834 () Int)
(declare-fun x2752 () Int)
(declare-fun x2043 () Int)
(declare-fun x1084 () Int)
(declare-fun x470 () Bool)
(declare-fun x1395 () x1019)
(declare-fun x1011 () Int)
(declare-fun x3317 () x1019)
(declare-fun x521 () x1019)
(declare-fun x3743 () Int)
(declare-fun x1209 () x1019)
(declare-fun x762 () Int)
(declare-fun x3579 () Bool)
(declare-fun x868 () Int)
(declare-fun x3936 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x1431 () Int)
(declare-fun x2980 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x3498 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x3345 () Int)
(declare-fun x3798 () x1019)
(declare-fun x1407 () Int)
(declare-fun x3658 () Int)
(declare-fun x2903 () x1019)
(declare-fun x3811 () Bool)
(declare-fun x2316 () Bool)
(declare-fun x1219 () Int)
(declare-fun x407 () Int)
(declare-fun x2579 () Bool)
(declare-fun x3235 () Bool)
(declare-fun x405 () Int)
(declare-fun x1949 () Bool)
(declare-fun x3474 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x1697 () Int)
(declare-fun x77 () Int)
(declare-fun x9 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x2690 () Int)
(declare-fun x3164 () Int)
(declare-fun x3314 () Int)
(declare-fun x2888 () x1019)
(declare-fun x78 () Bool)
(declare-fun x1961 () Bool)
(declare-fun x3931 () Bool)
(declare-fun x3310 () Int)
(declare-fun x2172 () Bool)
(declare-fun x3723 () Bool)
(declare-fun x2168 () Int)
(declare-fun x2940 () Bool)
(declare-fun x3454 (x1019) Int)
(declare-fun x2908 () Bool)
(declare-fun x655 () Bool)
(declare-fun x3551 () Bool)
(declare-fun x3933 () Bool)
(declare-fun x903 () Int)
(declare-fun x3756 () Bool)
(declare-fun x228 () Bool)
(declare-fun x246 () Int)
(declare-fun x1368 () x1019)
(declare-fun x1200 () Int)
(declare-fun x480 () Bool)
(declare-fun x1040 () Int)
(declare-fun x197 () Int)
(declare-fun x3661 () Bool)
(declare-fun x2462 () Int)
(declare-fun x207 () Int)
(declare-fun x994 () Int)
(declare-fun x3591 () Int)
(declare-fun x3364 () Bool)
(declare-fun x525 () Bool)
(declare-fun x251 () Int)
(declare-fun x2931 () Int)
(declare-fun x3385 () Bool)
(declare-fun x3820 () Int)
(declare-fun x3911 () Int)
(declare-fun x1592 () Int)
(declare-fun x298 () Bool)
(declare-fun x2615 () Int)
(declare-fun x2499 () Bool)
(declare-fun x687 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x3076 () Int)
(declare-fun x1246 () Int)
(declare-fun x1954 () Int)
(declare-fun x1237 () Bool)
(declare-fun x2783 () Bool)
(declare-fun x1593 () x1019)
(declare-fun x260 () x1019)
(declare-fun x904 () Int)
(declare-fun x1311 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1426 () Int)
(declare-fun x16 () Int)
(declare-fun x2107 () Int)
(declare-fun x100 () Bool)
(declare-fun x3355 () Int)
(declare-fun x692 () x1019)
(declare-fun x417 () Int)
(declare-fun x3554 () Bool)
(declare-fun x874 () Int)
(declare-fun x1964 () Bool)
(declare-fun x3708 (x1019) Int)
(declare-fun x1725 () Bool)
(declare-fun x2842 () Int)
(declare-fun x886 () Bool)
(declare-fun x1372 () Int)
(declare-fun x2953 () Int)
(declare-fun x3256 () Bool)
(declare-fun x2771 () Int)
(declare-fun x2882 () Int)
(declare-fun x2524 () Bool)
(declare-fun x3922 () x1019)
(declare-fun x3833 () Bool)
(declare-fun x2691 () Int)
(declare-fun x3675 () Bool)
(declare-fun x2722 () Int)
(declare-fun x1856 () Int)
(declare-fun x3415 () Int)
(declare-fun x1446 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x3045 () Int)
(declare-fun x2261 () Bool)
(declare-fun x891 () Bool)
(declare-fun x2116 () Int)
(declare-fun x2129 () Int)
(declare-fun x2049 () Int)
(declare-fun x1665 () Int)
(declare-fun x3382 () Bool)
(declare-fun x464 () Bool)
(declare-fun x1932 () Int)
(declare-fun x1188 () Int)
(declare-fun x2364 () Int)
(declare-fun x3492 () Int)
(declare-fun x1331 () Bool)
(declare-fun x1971 () Int)
(declare-fun x1737 () Int)
(declare-fun x607 () Int)
(declare-fun x2092 () Bool)
(declare-fun x185 () x1019)
(declare-fun x1366 () Int)
(declare-fun x2617 () Bool)
(declare-fun x3695 () Bool)
(declare-fun x186 () Int)
(declare-fun x1521 () Bool)
(declare-fun x3929 () x1019)
(declare-fun x1220 () x1019)
(declare-fun x1702 () Bool)
(declare-fun x3398 () Int)
(declare-fun x2228 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1716 () Bool)
(declare-fun x1564 () Int)
(declare-fun x734 () Bool)
(declare-fun x658 () Int)
(declare-fun x849 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x764 () Int)
(declare-fun x632 () Int)
(declare-fun x3074 () Bool)
(declare-fun x2635 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1211 () Int)
(declare-fun x3037 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x1566 () Int)
(declare-fun x2703 () Int)
(declare-fun x3196 () Int)
(declare-fun x893 () Bool)
(declare-fun x3568 () Bool)
(declare-fun x439 () Int)
(declare-fun x3571 () Bool)
(declare-fun x39 () Bool)
(declare-fun x3823 () Int)
(declare-fun x188 () Bool)
(declare-fun x1373 () Int)
(declare-fun x3222 () Int)
(declare-fun x1078 () Int)
(declare-fun x706 () x1019)
(declare-fun x2392 () Int)
(declare-fun x1686 () Bool)
(declare-fun x221 () x1019)
(declare-fun x2152 () Int)
(declare-fun x2120 () Int)
(declare-fun x2479 () Int)
(declare-fun x3775 () Int)
(declare-fun x888 () Bool)
(declare-fun x2806 () Int)
(declare-fun x983 () x1019)
(declare-fun x1862 () Bool)
(declare-fun x490 () Bool)
(declare-fun x3837 () Bool)
(declare-fun x1675 () x1019)
(declare-fun x2660 () Bool)
(declare-fun x2166 () x1019)
(declare-fun x3202 (Int) Int)
(declare-fun x2238 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x235 () Bool)
(declare-fun x1164 () Int)
(declare-fun x2669 () x1019)
(declare-fun x3794 () Bool)
(declare-fun x287 () Int)
(declare-fun x3051 () Int)
(declare-fun x2253 () Int)
(declare-fun x1465 () Int)
(declare-fun x1189 () Bool)
(declare-fun x3524 () Bool)
(declare-fun x3597 () x1019)
(declare-fun x2733 () Int)
(declare-fun x3626 () Bool)
(declare-fun x792 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x713 () Int)
(declare-fun x1304 () Bool)
(declare-fun x3719 () Bool)
(declare-fun x3733 () Bool)
(declare-fun x743 () Int)
(declare-fun x1925 () Bool)
(declare-fun x1163 () x1019)
(declare-fun x2778 () Int)
(declare-fun x2680 () Int)
(declare-fun x355 () Int)
(declare-fun x3522 () Int)
(declare-fun x3838 () Int)
(declare-fun x252 () Bool)
(declare-fun x3 () Int)
(declare-fun x2712 () Int)
(declare-fun x824 () Int)
(declare-fun x2367 () Int)
(declare-fun x3134 () Bool)
(declare-fun x3940 () Bool)
(declare-fun x966 () Bool)
(declare-fun x2057 () Int)
(declare-fun x1031 () Int)
(declare-fun x2374 () Int)
(declare-fun x1360 () Int)
(declare-fun x178 () Int)
(declare-fun x2401 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x1198 () Int)
(declare-fun x3295 () Bool)
(declare-fun x3797 () Int)
(declare-fun x2747 () Bool)
(declare-fun x2430 () Int)
(declare-fun x3371 () Int)
(declare-fun x3374 () Bool)
(declare-fun x2377 () Int)
(declare-fun x1841 () Bool)
(declare-fun x3261 () Int)
(declare-fun x3569 () Bool)
(declare-fun x2868 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x1287 () Int)
(declare-fun x3553 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x2130 () Int)
(declare-fun x3814 () Bool)
(declare-fun x2801 () x1019)
(declare-fun x1529 () Int)
(declare-fun x2472 () Bool)
(declare-fun x2308 () Int)
(declare-fun x447 () Int)
(declare-fun x3464 () Int)
(declare-fun x338 () Int)
(declare-fun x1823 () Bool)
(declare-fun x67 () Int)
(declare-fun x2370 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1025 () Int)
(declare-fun x1396 () Int)
(declare-fun x2438 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x3026 () Int)
(declare-fun x3782 () x1019)
(declare-fun x3340 () Bool)
(declare-fun x1909 () Bool)
(declare-fun x3575 () Int)
(declare-fun x2053 () Bool)
(declare-fun x2301 () x1019)
(declare-fun x3532 (Int) Int)
(declare-fun x3166 () x1019)
(declare-fun x763 () Bool)
(declare-fun x3779 () Bool)
(declare-fun x2371 () Int)
(declare-fun x703 () Int)
(declare-fun x3378 () Int)
(declare-fun x2066 () Bool)
(declare-fun x3098 () x1019)
(declare-fun x3766 () Bool)
(declare-fun x1297 () x1019)
(declare-fun x3397 () Int)
(declare-fun x1617 () Int)
(declare-fun x3828 () Bool)
(declare-fun x2372 () x1019)
(declare-fun x2085 () Int)
(declare-fun x329 () Bool)
(declare-fun x2825 () Bool)
(declare-fun x2725 () Int)
(declare-fun x1526 () Int)
(declare-fun x3679 () Int)
(declare-fun x2473 () Int)
(declare-fun x242 () Int)
(declare-fun x2147 () Int)
(declare-fun x809 () Bool)
(declare-fun x3831 () Int)
(declare-fun x3612 () Int)
(declare-fun x2184 () Bool)
(declare-fun x3702 () x1019)
(declare-fun x3489 () Bool)
(declare-fun x92 () Int)
(declare-fun x486 () Bool)
(declare-fun x2060 (x1019) Int)
(declare-fun x330 () Bool)
(declare-fun x265 () Bool)
(declare-fun x1320 () Int)
(declare-fun x3629 () x1019)
(declare-fun x1089 () Int)
(declare-fun x3219 () Bool)
(declare-fun x2133 () Bool)
(declare-fun x3182 () Int)
(declare-fun x583 () x1019)
(declare-fun x3326 () Int)
(declare-fun x1249 () x1019)
(declare-fun x1836 () Bool)
(declare-fun x2685 () Bool)
(declare-fun x774 (x1019) Int)
(declare-fun x2636 () Int)
(declare-fun x747 () Int)
(declare-fun x1115 () Int)
(declare-fun x3132 () x1019)
(declare-fun x2985 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x620 () Bool)
(declare-fun x1859 () x1019)
(declare-fun x767 () Bool)
(declare-fun x3913 () Bool)
(declare-fun x682 () Int)
(declare-fun x317 () Int)
(declare-fun x309 () Bool)
(declare-fun x3005 () Int)
(declare-fun x2710 () Bool)
(declare-fun x3937 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x2026 () Bool)
(declare-fun x2140 () Int)
(declare-fun x218 () Bool)
(declare-fun x3348 () Int)
(declare-fun x3830 () Int)
(declare-fun x2235 () Int)
(declare-fun x1097 () Int)
(declare-fun x1404 () x1019)
(declare-fun x3112 () Int)
(declare-fun x3548 () Int)
(declare-fun x708 () Int)
(declare-fun x153 (x1019) Int)
(declare-fun x1350 (Int) Int)
(declare-fun x280 () x1019)
(declare-fun x2459 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x712 () Int)
(declare-fun x1224 () Bool)
(declare-fun x2944 () Int)
(declare-fun x29 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x2968 () Int)
(declare-fun x1854 () Int)
(declare-fun x3494 () Int)
(declare-fun x1352 () x1019)
(declare-fun x3034 () Bool)
(declare-fun x949 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x24 () Int)
(declare-fun x2580 () Int)
(declare-fun x1098 () x1019)
(declare-fun x672 () Bool)
(declare-fun x3304 () Bool)
(declare-fun x2183 () Int)
(declare-fun x1632 () Bool)
(declare-fun x196 () Bool)
(declare-fun x2247 () Bool)
(declare-fun x509 () x1019)
(declare-fun x3212 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x3873 (x1019) Int)
(declare-fun x1784 () x1019)
(declare-fun x1039 () Int)
(declare-fun x1573 () Bool)
(declare-fun x2175 () Int)
(declare-fun x2935 () Bool)
(declare-fun x164 () Bool)
(declare-fun x2616 () Int)
(declare-fun x81 () Int)
(declare-fun x3143 () Bool)
(declare-fun x3812 () Bool)
(declare-fun x1594 () Int)
(declare-fun x2272 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x3315 () Int)
(declare-fun x1563 () Bool)
(declare-fun x3805 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x1511 () Int)
(declare-fun x2076 () Int)
(declare-fun x450 () Bool)
(declare-fun x662 () Int)
(declare-fun x2453 () Int)
(declare-fun x927 () Int)
(declare-fun x1066 () Bool)
(declare-fun x3276 () Int)
(declare-fun x1536 () Bool)
(declare-fun x2927 () Bool)
(declare-fun x1980 () x1019)
(declare-fun x1633 () Int)
(declare-fun x531 () x1019)
(declare-fun x1020 () Int)
(declare-fun x3176 () x1019)
(declare-fun x778 () Bool)
(declare-fun x963 () Bool)
(declare-fun x485 () Bool)
(declare-fun x2571 () Int)
(declare-fun x1874 () x1019)
(declare-fun x3330 () Bool)
(declare-fun x2651 () Int)
(declare-fun x2108 () Bool)
(declare-fun x1623 () Int)
(declare-fun x3769 () Bool)
(declare-fun x889 () Int)
(declare-fun x1417 () x1019)
(declare-fun x2318 () x1019)
(declare-fun x3544 () Bool)
(declare-fun x2429 () Int)
(declare-fun x3517 () Bool)
(declare-fun x3269 () Int)
(declare-fun x315 () Bool)
(declare-fun x368 () x1019)
(declare-fun x3105 () Int)
(declare-fun x404 () Bool)
(declare-fun x449 () Int)
(declare-fun x138 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x1996 () Int)
(declare-fun x2319 () Bool)
(declare-fun x831 () Int)
(declare-fun x249 () Int)
(declare-fun x679 () Bool)
(declare-fun x350 () x1019)
(declare-fun x2589 () Int)
(declare-fun x372 () Int)
(declare-fun x3181 () Int)
(declare-fun x1143 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x913 () Int)
(declare-fun x2396 () Bool)
(declare-fun x3413 () Bool)
(declare-fun x2245 () Int)
(declare-fun x570 () Bool)
(declare-fun x3920 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x1810 () x1019)
(declare-fun x3055 (x1019) Int)
(declare-fun x1487 () Bool)
(declare-fun x1821 () Int)
(declare-fun x829 () Int)
(declare-fun x2478 () Bool)
(declare-fun x3231 () Bool)
(declare-fun x1199 () Int)
(declare-fun x500 () Int)
(declare-fun x345 () Int)
(declare-fun x2612 () Bool)
(declare-fun x96 () Bool)
(declare-fun x2162 () Int)
(declare-fun x1068 () Int)
(declare-fun x2050 () Bool)
(declare-fun x2029 () Int)
(declare-fun x1904 () Bool)
(declare-fun x327 () Int)
(declare-fun x3631 () x1019)
(declare-fun x306 () Int)
(declare-fun x2828 () Bool)
(declare-fun x518 () Bool)
(declare-fun x3649 () Int)
(declare-fun x1491 () Int)
(declare-fun x1359 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x3251 () x1019)
(declare-fun x2173 () Int)
(declare-fun x1257 () Bool)
(declare-fun x2998 () Int)
(declare-fun x3306 () Bool)
(declare-fun x2205 () Int)
(declare-fun x3146 () Int)
(declare-fun x921 () Bool)
(declare-fun x3704 () Bool)
(declare-fun x1258 () Int)
(declare-fun x794 () Bool)
(declare-fun x2678 () Int)
(declare-fun x1194 () Int)
(declare-fun x2477 () Bool)
(declare-fun x3160 () x1019)
(declare-fun x1393 () Bool)
(declare-fun x2739 () Int)
(declare-fun x1789 () Bool)
(declare-fun x33 () Int)
(declare-fun x2440 () Int)
(declare-fun x2749 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x2213 (x1019) Int)
(declare-fun x3432 () Int)
(declare-fun x2639 () x1019)
(declare-fun x1416 () Bool)
(declare-fun x996 () Int)
(declare-fun x3057 () Int)
(declare-fun x1921 () Int)
(declare-fun x399 () Int)
(declare-fun x3507 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x183 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x2564 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x1234 () Int)
(declare-fun x1037 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x1626 () Int)
(declare-fun x3377 () Bool)
(declare-fun x3163 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x962 () x1019)
(declare-fun x1834 () Bool)
(declare-fun x2767 () Int)
(declare-fun x3630 () Bool)
(declare-fun x3793 (Int) Int)
(declare-fun x302 () Int)
(declare-fun x2467 () Int)
(declare-fun x1595 () Bool)
(declare-fun x244 () Int)
(declare-fun x3897 () Int)
(declare-fun x2001 () Bool)
(declare-fun x2558 () Int)
(declare-fun x2384 () Bool)
(declare-fun x2390 () Int)
(declare-fun x444 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x602 () Int)
(declare-fun x3892 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x1635 () Int)
(declare-fun x1518 () Int)
(declare-fun x3245 () x1019)
(declare-fun x2898 () Bool)
(declare-fun x3375 () Bool)
(declare-fun x773 () Bool)
(declare-fun x2518 () Bool)
(declare-fun x2264 () x1019)
(declare-fun x1510 () Bool)
(declare-fun x934 () Int)
(declare-fun x2705 () Bool)
(declare-fun x3608 () Int)
(declare-fun x498 () Int)
(declare-fun x263 () Bool)
(declare-fun x2698 () Int)
(declare-fun x783 () Int)
(declare-fun x2067 () Bool)
(declare-fun x3270 () Int)
(declare-fun x3932 () Bool)
(declare-fun x2666 () Int)
(declare-fun x1620 () Bool)
(declare-fun x3244 () Int)
(declare-fun x296 () Bool)
(declare-fun x1652 () Int)
(declare-fun x1559 () Int)
(declare-fun x3152 () Int)
(declare-fun x3342 () Bool)
(declare-fun x3791 () Int)
(declare-fun x2032 () Int)
(declare-fun x1118 () Int)
(declare-fun x3321 () Bool)
(declare-fun x41 () Bool)
(declare-fun x3570 () Int)
(declare-fun x3602 () Int)
(declare-fun x2297 () Int)
(declare-fun x3741 () Bool)
(declare-fun x3370 () Bool)
(declare-fun x3574 () Bool)
(declare-fun x864 () Int)
(declare-fun x1180 () Bool)
(declare-fun x3592 () Bool)
(declare-fun x826 () Int)
(declare-fun x1414 () Int)
(declare-fun x2814 () Bool)
(declare-fun x999 () Int)
(declare-fun x1940 () Int)
(declare-fun x1151 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x1381 () Int)
(declare-fun x3777 () x1019)
(declare-fun x2994 () Bool)
(declare-fun x2006 () Int)
(declare-fun x2456 () Bool)
(declare-fun x3426 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x1982 () Int)
(declare-fun x108 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x564 () Int)
(declare-fun x1532 () Bool)
(declare-fun x1501 () Int)
(declare-fun x1003 () Bool)
(declare-fun x2874 () x1019)
(declare-fun x272 () Bool)
(declare-fun x163 () Bool)
(declare-fun x944 () x1019)
(declare-fun x210 () Bool)
(declare-fun x59 () x1019)
(declare-fun x1124 () Bool)
(declare-fun x1538 () Int)
(declare-fun x1920 () Bool)
(declare-fun x3309 () Bool)
(declare-fun x659 () Bool)
(declare-fun x2795 () Int)
(declare-fun x3919 () Int)
(declare-fun x2036 () Bool)
(declare-fun x1474 () Int)
(declare-fun x430 () Bool)
(declare-fun x3799 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x2723 () Bool)
(declare-fun x2280 () Bool)
(declare-fun x354 () Int)
(declare-fun x2921 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x1736 () Int)
(declare-fun x935 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x2610 () x1019)
(declare-fun x2786 () Int)
(declare-fun x2539 () Int)
(declare-fun x513 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x2819 () Int)
(declare-fun x294 () Int)
(declare-fun x631 () Int)
(declare-fun x3505 () Int)
(declare-fun x57 () Int)
(declare-fun x1524 () Bool)
(declare-fun x630 () Bool)
(declare-fun x17 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x1259 () x1019)
(declare-fun x129 () Bool)
(declare-fun x3676 () Int)
(declare-fun x3214 () Bool)
(declare-fun x736 () Bool)
(declare-fun x2641 () Int)
(declare-fun x2241 () Int)
(declare-fun x1677 () Bool)
(declare-fun x909 () Bool)
(declare-fun x3582 () Int)
(declare-fun x3233 () Int)
(declare-fun x2986 () Int)
(declare-fun x688 () Bool)
(declare-fun x1387 () Int)
(declare-fun x2424 () Int)
(declare-fun x2670 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x524 () Int)
(declare-fun x2845 () Bool)
(declare-fun x133 () Int)
(declare-fun x780 () Bool)
(declare-fun x2179 () Int)
(declare-fun x2421 () Int)
(declare-fun x392 () Int)
(declare-fun x3263 () Int)
(declare-fun x822 () Int)
(declare-fun x3546 () Int)
(declare-fun x1074 () Int)
(declare-fun x72 () Int)
(declare-fun x1850 () Int)
(declare-fun x3346 () Int)
(declare-fun x540 () Int)
(declare-fun x990 (x1019) Int)
(declare-fun x3473 () Int)
(declare-fun x1312 () Int)
(declare-fun x347 () Int)
(declare-fun x3113 () Int)
(declare-fun x2724 () x1019)
(declare-fun x3419 (x1019) Int)
(declare-fun x2756 () x1019)
(declare-fun x2676 () Int)
(declare-fun x412 () Int)
(declare-fun x1919 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x2643 () Int)
(declare-fun x291 () Int)
(declare-fun x1191 () Int)
(declare-fun x1216 () Int)
(declare-fun x1602 () Int)
(declare-fun x2285 () Int)
(declare-fun x331 () Bool)
(declare-fun x3880 () Bool)
(declare-fun x3488 () Bool)
(declare-fun x1605 () Int)
(declare-fun x818 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x3807 () Bool)
(declare-fun x3622 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x2879 () Int)
(declare-fun x3100 () Int)
(declare-fun x1654 () Int)
(declare-fun x725 () Int)
(declare-fun x1145 () Int)
(declare-fun x3527 () x1019)
(declare-fun x968 () Int)
(declare-fun x137 () Bool)
(declare-fun x551 () x1019)
(declare-fun x589 () Int)
(declare-fun x2554 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x930 () Bool)
(declare-fun x720 () Int)
(declare-fun x3129 () Bool)
(declare-fun x2663 () Bool)
(declare-fun x653 () Bool)
(declare-fun x526 () Int)
(declare-fun x68 () Int)
(declare-fun x657 () Bool)
(declare-fun x1335 () Int)
(declare-fun x3450 () Int)
(declare-fun x1767 () Int)
(declare-fun x2233 () Bool)
(declare-fun x3699 () x1019)
(declare-fun x3334 () x1019)
(declare-fun x3268 () Int)
(declare-fun x478 () Bool)
(declare-fun x1454 () Int)
(declare-fun x2569 () Bool)
(declare-fun x640 () Bool)
(declare-fun x3307 () Bool)
(declare-fun x959 () Int)
(declare-fun x3142 () Int)
(declare-fun x2514 () Bool)
(declare-fun x250 () Int)
(declare-fun x2877 () Int)
(declare-fun x442 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x443 () Int)
(declare-fun x2417 () Bool)
(declare-fun x1695 () Int)
(declare-fun x2551 () Bool)
(declare-fun x585 () Int)
(declare-fun x1709 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x1915 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x3912 () Int)
(declare-fun x353 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1812 () Int)
(declare-fun x2995 () Int)
(declare-fun x731 () Bool)
(declare-fun x558 () Bool)
(declare-fun x1036 () x1019)
(declare-fun x560 () x1019)
(declare-fun x3899 () Int)
(declare-fun x109 () Bool)
(declare-fun x2844 () Int)
(declare-fun x768 () Int)
(declare-fun x2824 () Int)
(declare-fun x1394 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x2016 () Int)
(declare-fun x2761 () Bool)
(declare-fun x661 () Int)
(declare-fun x1377 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x3518 () Int)
(declare-fun x2826 () Int)
(declare-fun x805 () Int)
(declare-fun x3907 () Int)
(define-fun x3866 ((x1019 x1019) (x3690 Int)) x1019 (ite ((_ is x517) x1019) (x517 (x699 x1019) (+ (x1666 x1019) x3690)) (ite ((_ is x534) x1019) (x534 (x563 x1019) (x489 x1019) (+ (x1700 x1019) x3690)) (x955 (+ x3690 (x2856 x1019))))))
(define-fun x3155 ((x2159 Int)) Int (ite (and (< x2159 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x2159)) x2159 (- x2159 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3331 ((x2159 Int)) Int (ite (and (>= x2159 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x2159 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2159) x2159))
(define-fun x2022 ((x1484 Int)) Bool (and (< x1484 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1484 0)))
(define-fun x2080 ((x1484 Int)) Bool (and (= (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1484) x1484) (= (x2182 x1484 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1484)))
(define-fun x988 ((x1484 Int)) Bool (and (= 0 (x2182 x1484 0)) (= (x2182 0 x1484) 0)))
(define-fun x1318 ((x1484 Int)) Bool (= (x2182 x1484 x1484) x1484))
(define-fun x2447 ((x1484 Int)) Bool (and (x988 x1484) (x1318 x1484) (x2080 x1484)))
(define-fun x652 ((x1484 Int) (x1016 Int)) Bool (= (x2182 x1484 x1016) (x2182 x1016 x1484)))
(define-fun x1424 ((x1484 Int) (x1016 Int)) Bool (and (>= (x2182 x1484 x1016) 0) (=> (<= 0 x1016) (<= (x2182 x1484 x1016) x1016)) (=> (>= x1484 0) (<= (x2182 x1484 x1016) x1484))))
(define-fun x3877 ((x1484 Int) (x1016 Int)) Bool (and (x652 x1484 x1016) (x1424 x1484 x1016)))
(define-fun x3586 ((x1484 Int)) Bool (= (mod x1484 26959946667150639794667015087019630673637144422540572481103610249216) (x2182 x1484 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x2972 ((x1484 Int)) Bool (and (x3586 x1484) (x3877 x1484 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x748 ((x1484 Int)) Bool (= (mod x1484 1461501637330902918203684832716283019655932542976) (x2182 x1484 1461501637330902918203684832716283019655932542975)))
(define-fun x3596 ((x1484 Int)) Bool (and (x748 x1484) (x3877 x1484 1461501637330902918203684832716283019655932542975)))
(define-fun x2880 ((x1484 Int)) Bool (= (+ (mod x1484 32) (x2182 x1484 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x1484 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3356 ((x1484 Int)) Bool (and (x2880 x1484) (x3877 x1484 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x760 ((x1484 Int)) Bool (and (= (x2782 x1484 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2782 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1484) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x3542 ((x1484 Int)) Bool (and (= x1484 (x2782 0 x1484)) (= x1484 (x2782 x1484 0))))
(define-fun x2665 ((x1484 Int)) Bool (= x1484 (x2782 x1484 x1484)))
(define-fun x1976 ((x1484 Int)) Bool (and (x3542 x1484) (x760 x1484) (x2665 x1484)))
(define-fun x614 ((x1484 Int) (x1016 Int)) Bool (= (x2782 x1484 x1016) (x2782 x1016 x1484)))
(define-fun x1533 ((x1484 Int) (x1016 Int)) Bool (and (<= (x2782 x1484 x1016) (+ x1016 x1484)) (=> (>= x1016 0) (<= x1016 (x2782 x1484 x1016))) (=> (<= 0 x1484) (>= (x2782 x1484 x1016) x1484))))
(define-fun x648 ((x1484 Int) (x1016 Int)) Bool (and (x614 x1484 x1016) (x1533 x1484 x1016)))
(define-fun x1222 ((x1710 Int)) Int (ite (= 128 x1710) (ite x2384 1 0) (x2934 x1710)))
(define-fun x1746 ((x1710 Int)) Int (ite (= x1710 160) (ite x3805 1 0) (x1222 x1710)))
(define-fun x2215 ((x1710 Int)) Int (ite (= 192 x1710) (ite x444 1 0) (x1746 x1710)))
(define-fun x1918 ((x1710 Int)) Int (ite (= 224 x1710) (ite x957 1 0) (x2215 x1710)))
(define-fun x1353 ((x1710 Int)) Int (ite (= 256 x1710) (ite x1608 1 0) (x1918 x1710)))
(define-fun x816 ((x1710 Int)) Int (ite (= 288 x1710) (ite x3282 1 0) (x1353 x1710)))
(define-fun x2154 ((x1710 Int)) Int (ite (= 320 x1710) (ite x2361 1 0) (x816 x1710)))
(define-fun x2378 ((x1710 Int)) Int (ite (= x1710 352) (ite x2685 1 0) (x2154 x1710)))
(define-fun x2110 ((x1710 Int)) Int (ite (= x1710 420) x544 (x2378 x1710)))
(define-fun x1640 ((x1710 Int)) Int (ite (= 384 x1710) 36 (x2110 x1710)))
(define-fun x991 ((x1710 Int)) Int (ite (= 416 x1710) x3738 (x1640 x1710)))
(define-fun x132 ((x1710 x1019)) Int (ite (= x1710 x3530) x2995 (x1266 x1710)))
(define-fun x3844 ((x1710 x1019)) Int (ite (= x983 x1710) x1056 (x3708 x1710)))
(define-fun x2218 ((x1710 x1019)) Int (ite (= x1710 x3627) 0 (x1861 x1710)))
(define-fun x3888 ((x1710 x1019)) Int (ite (= x3627 x1710) x1333 (x1861 x1710)))
(define-fun x3120 ((x1710 x1019)) Int (ite x704 (x2218 x1710) (x3888 x1710)))
(define-fun x1468 ((x1710 Int)) Int (ite (= x1710 452) 56879788782001134333110164298630386859921104006521148999079851869125721718784 (x991 x1710)))
(define-fun x1586 ((x1710 Int)) Int (ite (= x1710 452) x3130 (x1468 x1710)))
(define-fun x1581 ((x1710 Int)) Int (ite (= x1710 804) 114138022719912475680867045629478960338713192110453415424194996738542475935744 (x1586 x1710)))
(define-fun x937 ((x1710 Int)) Int (ite (= 808 x1710) x2611 (x1581 x1710)))
(define-fun x2821 ((x1710 Int)) Int (ite (= 804 x1710) x3522 (x937 x1710)))
(define-fun x2386 ((x1710 Int)) Int (ite (= x1710 836) 64481368622683354557555711714629296119639875834729404553039716062438103187456 (x2821 x1710)))
(define-fun x387 ((x1710 Int)) Int (ite (= x1710 840) x2611 (x2386 x1710)))
(define-fun x1826 ((x1710 Int)) Int (ite (= x1710 836) x2947 (x387 x1710)))
(define-fun x2151 ((x1710 Int)) Int (ite (= x1710 868) x1588 (x1826 x1710)))
(define-fun x3040 ((x1710 Int)) Int (ite (= x1710 900) x3105 (x2151 x1710)))
(define-fun x1765 ((x1710 Int)) Int (ite (= 996 x1710) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x3040 x1710)))
(define-fun x2815 ((x1710 Int)) Int (ite (= x1710 996) 1 (x1765 x1710)))
(define-fun x1247 ((x1710 Int)) Int (ite (= x1710 996) 1 (x1765 x1710)))
(define-fun x1884 ((x1710 Int)) Int (ite (= x1710 996) 1 (x1765 x1710)))
(define-fun x471 ((x1710 Int)) Int (ite x1881 (x2815 x1710) (ite x3889 (x1247 x1710) (x1884 x1710))))
(define-fun x182 ((x1710 Int)) Int (ite (= x1710 x2079) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x471 x1710)))
(define-fun x2689 ((x1710 Int)) Int (ite (= x1710 x2079) x1602 (x182 x1710)))
(define-fun x2754 ((x1710 Int)) Int (ite (= x1710 x2079) x3041 (x182 x1710)))
(define-fun x3365 ((x1710 Int)) Int (ite (= x1710 x2079) x2792 (x182 x1710)))
(define-fun x1241 ((x1710 Int)) Int (ite x1281 (x2689 x1710) (ite x3913 (x2754 x1710) (x3365 x1710))))
(define-fun x1544 ((x1710 Int)) Int (ite x3273 (x1586 x1710) (x1241 x1710)))
(define-fun x1747 ((x1710 Int)) Int (ite (= x1710 x1631) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x1544 x1710)))
(define-fun x3504 ((x1710 Int)) Int (ite (= x1710 x1631) x239 (x1747 x1710)))
(define-fun x1809 ((x1710 Int)) Int (ite (= x1631 x1710) x1714 (x1747 x1710)))
(define-fun x2885 ((x1710 Int)) Int (ite (= x1710 x1631) x757 (x1747 x1710)))
(define-fun x2852 ((x1710 Int)) Int (ite x2808 (x3504 x1710) (ite x2825 (x1809 x1710) (x2885 x1710))))
(define-fun x3133 ((x1710 Int)) Int (ite x2667 (x2852 x1710) (x1544 x1710)))
(define-fun x2622 ((x1710 Int)) Int (ite (= x1710 x1518) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x3133 x1710)))
(define-fun x2061 ((x1710 Int)) Int (ite (= x1710 x1518) 1 (x2622 x1710)))
(define-fun x2352 ((x1710 Int)) Int (ite (= x1518 x1710) 1 (x2622 x1710)))
(define-fun x60 ((x1710 Int)) Int (ite (= x1710 x1518) 1 (x2622 x1710)))
(define-fun x2863 ((x1710 Int)) Int (ite x2802 (x2061 x1710) (ite x28 (x2352 x1710) (x60 x1710))))
(define-fun x80 ((x1710 Int)) Int (ite (= x1710 x2950) x1238 (x2863 x1710)))
(define-fun x3429 ((x1710 Int)) Int (ite x561 (x2863 x1710) (x80 x1710)))
(define-fun x2313 ((x1710 Int)) Int (ite (= x1294 x1710) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x3429 x1710)))
(define-fun x2449 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3232 x1710)))
(define-fun x665 ((x1710 Int)) Int (ite (= x1710 x1294) 1 (x2313 x1710)))
(define-fun x3047 ((x1710 Int)) Int (ite (= x1710 0) 1 (x3232 x1710)))
(define-fun x1690 ((x1710 Int)) Int (ite (= x1710 x1294) 1 (x2313 x1710)))
(define-fun x3674 ((x1710 Int)) Int (ite (= x1710 0) 1 (x3232 x1710)))
(define-fun x2556 ((x1710 Int)) Int (ite (= x1710 x1294) 1 (x2313 x1710)))
(define-fun x3305 ((x1710 Int)) Int (ite x1205 (x665 x1710) (ite x3003 (x1690 x1710) (x2556 x1710))))
(define-fun x1443 ((x1710 Int)) Int (ite (= x3520 x1710) 44970383829727661923261016617897238973146650624978361361029103362720544063488 (x3305 x1710)))
(define-fun x2457 ((x1710 Int)) Int (ite (= x3660 x1710) x496 (x1443 x1710)))
(define-fun x3654 ((x1710 Int)) Int (ite (= x1710 x738) x212 (x2457 x1710)))
(define-fun x643 ((x1710 Int)) Int (ite (= x1710 x1939) x172 (x3654 x1710)))
(define-fun x2857 ((x1710 Int)) Int (ite (and (< x1710 (+ 0 x3520)) (<= x3520 x1710)) (x2303 (+ (- x1710 x3520) 0)) (x643 x1710)))
(define-fun x3211 ((x1710 Int)) Int (ite x2100 (x3305 x1710) (x2857 x1710)))
(define-fun x3697 ((x1710 Int)) Int (ite (= x1710 x3520) x389 (x3211 x1710)))
(define-fun x2040 ((x1710 Int)) Int (ite (= x1710 x1043) x1097 (x3697 x1710)))
(define-fun x3683 ((x1710 Int)) Int (ite x3405 (x2040 x1710) (x3305 x1710)))
(define-fun x1660 ((x1710 Int)) Int (ite x1165 (ite x58 (x3683 x1710) (x3429 x1710)) (x3429 x1710)))
(define-fun x3380 ((x1710 x1019)) Int (ite (= x3058 x1710) x3823 (x774 x1710)))
(define-fun x1282 ((x1710 x1019)) Int (ite x1165 (ite x2578 (x774 x1710) (x3380 x1710)) (x774 x1710)))
(define-fun x1759 ((x1710 x1019)) Int (ite (= x350 x1710) x2183 (x3433 x1710)))
(define-fun x861 ((x1710 x1019)) Int (ite (= x1710 x3784) x436 (x885 x1710)))
(define-fun x1550 ((x1710 Int)) Int (ite (= x1710 x3269) x782 (x1660 x1710)))
(define-fun x1514 ((x1710 Int)) Int (ite (= x1710 x3809) x1626 (x1550 x1710)))
(define-fun x2476 ((x1710 Int)) Int (ite (= x1710 x3269) 26675680369413430104207330802600748686362808878094982966429686717365230764032 (x1514 x1710)))
(define-fun x2201 ((x1710 Int)) Int (ite (= x3774 x1710) x3029 (x2476 x1710)))
(define-fun x1553 ((x1710 Int)) Int (ite (= x1710 0) x1614 (x2536 x1710)))
(define-fun x3288 ((x1710 Int)) Int (ite (= x1710 x3269) x1614 (x2201 x1710)))
(define-fun x1006 ((x1710 Int)) Int (ite (= 0 x1710) x2444 (x2536 x1710)))
(define-fun x314 ((x1710 Int)) Int (ite (= x3269 x1710) x2444 (x2201 x1710)))
(define-fun x1158 ((x1710 Int)) Int (ite (= x1710 0) x2608 (x2536 x1710)))
(define-fun x2630 ((x1710 Int)) Int (ite (= x1710 x3269) x2608 (x2201 x1710)))
(define-fun x3726 ((x1710 x1019)) Int (ite (= x2872 x1710) x2698 (x2156 x1710)))
(define-fun x1777 ((x1710 x1019)) Int (ite x3091 (x2156 x1710) (ite x2714 (x2156 x1710) (ite x2626 (x2156 x1710) (ite x2618 (x3726 x1710) (x2156 x1710))))))
(define-fun x3617 ((x1710 x1019)) Int (ite (= x1710 x1838) x134 (x3726 x1710)))
(define-fun x2492 ((x1710 x1019)) Int (ite x442 (x2156 x1710) (ite x1992 (x2156 x1710) (ite x2858 (x2156 x1710) (ite x605 (x1777 x1710) (x3617 x1710))))))
(define-fun x2702 ((x1710 x1019)) Int (ite x1862 (x2492 x1710) (ite x1155 (x2156 x1710) (ite x465 (x2156 x1710) (ite x731 (x2156 x1710) (ite x859 (x2492 x1710) (x2156 x1710)))))))
(define-fun x2249 ((x1710 x1019)) Int (ite x1655 (x2702 x1710) (x2492 x1710)))
(define-fun x483 ((x1710 x1019)) Int (ite (= x1864 x1710) x1965 (x2156 x1710)))
(define-fun x801 ((x1710 x1019)) Int (ite x3829 (x2156 x1710) (ite x3075 (x2156 x1710) (ite x3723 (x2156 x1710) (ite x3772 (x483 x1710) (x2156 x1710))))))
(define-fun x651 ((x1710 x1019)) Int (ite (= x1710 x2072) x2692 (x483 x1710)))
(define-fun x1816 ((x1710 x1019)) Int (ite x111 (x2156 x1710) (ite x2988 (x2156 x1710) (ite x3875 (x2156 x1710) (ite x2565 (x801 x1710) (x651 x1710))))))
(define-fun x2193 ((x1710 x1019)) Int (ite x210 (x1816 x1710) (ite x1120 (x2156 x1710) (ite x1342 (x2156 x1710) (ite x1129 (x2156 x1710) (ite x3336 (x1816 x1710) (x2156 x1710)))))))
(define-fun x2090 ((x1710 x1019)) Int (ite x2501 (x2193 x1710) (x1816 x1710)))
(define-fun x1649 ((x1710 x1019)) Int (ite (= x1693 x1710) x3233 (x2156 x1710)))
(define-fun x3878 ((x1710 x1019)) Int (ite (= x2567 x1710) x604 (x1649 x1710)))
(define-fun x1806 ((x1710 x1019)) Int (ite x1841 (x1649 x1710) (ite x1938 (x1649 x1710) (ite x3033 (x1649 x1710) (ite x297 (x3878 x1710) (x1649 x1710))))))
(define-fun x3529 ((x1710 x1019)) Int (ite (= x1710 x2464) x2276 (x3878 x1710)))
(define-fun x1724 ((x1710 x1019)) Int (ite x2075 (x1649 x1710) (ite x627 (x1649 x1710) (ite x2224 (x1649 x1710) (ite x3168 (x1806 x1710) (x3529 x1710))))))
(define-fun x2037 ((x1710 x1019)) Int (ite x1933 (x1724 x1710) (ite x125 (x2156 x1710) (ite x609 (x2156 x1710) (ite x37 (x1649 x1710) (ite x2935 (x1724 x1710) (x2156 x1710)))))))
(define-fun x3853 ((x1710 x1019)) Int (ite x3568 (x2037 x1710) (x1724 x1710)))
(define-fun x923 ((x1710 x1019)) Int (ite x814 (x2249 x1710) (ite x156 (x2090 x1710) (x3853 x1710))))
(define-fun x2510 ((x1710 x1019)) Int (ite x1331 (x2156 x1710) (ite x1683 (x2156 x1710) (x923 x1710))))
(define-fun x3228 ((x1710 Int)) Int (ite x2967 (ite x2518 (x2201 x1710) (x3288 x1710)) (ite x2683 (ite x3577 (x2201 x1710) (x314 x1710)) (ite x3320 (x2201 x1710) (x2630 x1710)))))
(define-fun x1225 ((x1710 Int)) Int (ite (= x1710 x2204) 60231946789637257468838019015344037944473233080083133266033501538020963123200 (x3228 x1710)))
(define-fun x269 ((x1710 Int)) Int (ite (= x1710 x2609) x186 (x1225 x1710)))
(define-fun x1250 ((x1710 Int)) Int (ite (= x2204 x1710) 0 (x269 x1710)))
(define-fun x3689 ((x1710 Int)) Int (ite (= x2204 x1710) 0 (x269 x1710)))
(define-fun x3511 ((x1710 Int)) Int (ite (= x1710 x2204) 0 (x269 x1710)))
(define-fun x3148 ((x1710 Int)) Int (ite x814 (ite x1655 (x269 x1710) (x1250 x1710)) (ite x156 (ite x2501 (x269 x1710) (x3689 x1710)) (ite x3568 (x269 x1710) (x3511 x1710)))))
(define-fun x2004 ((x1710 Int)) Int (ite (= x2443 x1710) 94482241256677223720308674365448432550660581809977780367718865401173155774464 (x3148 x1710)))
(define-fun x1413 ((x1710 Int)) Int (ite (and (< x1710 (+ x2443 0)) (>= x1710 x2443)) (x240 (+ (- x1710 x2443) 0)) (x2004 x1710)))
(define-fun x845 ((x1710 Int)) Int (ite x3226 (x3148 x1710) (x1413 x1710)))
(define-fun x591 ((x1710 Int)) Int (ite x1331 (x1660 x1710) (ite x1683 (x1514 x1710) (x845 x1710))))
(define-fun x1341 ((x1710 x1019)) Int (ite (= x1710 x1730) x2586 (x2837 x1710)))
(define-fun x1934 ((x1710 x1019)) Int (ite x2319 (x1341 x1710) (ite x47 (x2837 x1710) (ite x3799 (x2837 x1710) (ite x977 (x2837 x1710) (ite x1574 (x1341 x1710) (x2837 x1710)))))))
(define-fun x1171 ((x1710 x1019)) Int (ite (= x1710 x3631) x2681 (x1341 x1710)))
(define-fun x54 ((x1710 x1019)) Int (ite x442 (ite x2021 (x1934 x1710) (x1171 x1710)) (x2837 x1710)))
(define-fun x1911 ((x1710 x1019)) Int (ite x1862 (x54 x1710) (ite x1155 (x2837 x1710) (ite x465 (x2837 x1710) (ite x731 (x2837 x1710) (ite x859 (x54 x1710) (x2837 x1710)))))))
(define-fun x2034 ((x1710 x1019)) Int (ite x1655 (x1911 x1710) (x54 x1710)))
(define-fun x3576 ((x1710 x1019)) Int (ite (= x1710 x234) x178 (x2837 x1710)))
(define-fun x1231 ((x1710 x1019)) Int (ite x3186 (x3576 x1710) (ite x2763 (x2837 x1710) (ite x628 (x2837 x1710) (ite x2463 (x2837 x1710) (ite x2976 (x3576 x1710) (x2837 x1710)))))))
(define-fun x3938 ((x1710 x1019)) Int (ite (= x3138 x1710) x3463 (x3576 x1710)))
(define-fun x1289 ((x1710 x1019)) Int (ite x111 (ite x356 (x1231 x1710) (x3938 x1710)) (x2837 x1710)))
(define-fun x2426 ((x1710 x1019)) Int (ite x210 (x1289 x1710) (ite x1120 (x2837 x1710) (ite x1342 (x2837 x1710) (ite x1129 (x2837 x1710) (ite x3336 (x1289 x1710) (x2837 x1710)))))))
(define-fun x1609 ((x1710 x1019)) Int (ite x2501 (x2426 x1710) (x1289 x1710)))
(define-fun x1185 ((x1710 x1019)) Int (ite (= x1796 x1710) x2636 (x2837 x1710)))
(define-fun x1997 ((x1710 x1019)) Int (ite x1601 (x1185 x1710) (ite x374 (x2837 x1710) (ite x3822 (x2837 x1710) (ite x2961 (x2837 x1710) (ite x100 (x1185 x1710) (x2837 x1710)))))))
(define-fun x2699 ((x1710 x1019)) Int (ite (= x2796 x1710) x1711 (x1185 x1710)))
(define-fun x2652 ((x1710 x1019)) Int (ite x2075 (ite x1664 (x1997 x1710) (x2699 x1710)) (x2837 x1710)))
(define-fun x2537 ((x1710 x1019)) Int (ite x1933 (x2652 x1710) (ite x125 (x2837 x1710) (ite x609 (x2837 x1710) (ite x37 (x2837 x1710) (ite x2935 (x2652 x1710) (x2837 x1710)))))))
(define-fun x3082 ((x1710 x1019)) Int (ite x3568 (x2537 x1710) (x2652 x1710)))
(define-fun x3590 ((x1710 x1019)) Int (ite x814 (x2034 x1710) (ite x156 (x1609 x1710) (x3082 x1710))))
(define-fun x2113 ((x1710 x1019)) Int (ite x1331 (x2837 x1710) (ite x1683 (x2837 x1710) (x3590 x1710))))
(define-fun x2899 ((x1710 x1019)) Int (ite (= x1710 (x512 x3029)) x576 (x3103 x1710)))
(define-fun x522 ((x1710 x1019)) Int (ite (= (x512 x3692) x1710) x3093 (x2899 x1710)))
(define-fun x2734 ((x1710 x1019)) Int (ite x3226 (x3103 x1710) (x522 x1710)))
(define-fun x1202 ((x1710 x1019)) Int (ite x1331 (x3103 x1710) (ite x1683 (x3103 x1710) (x2734 x1710))))
(define-fun x2030 ((x1710 x1019)) Int (ite (= x932 x1710) x2709 (x2697 x1710)))
(define-fun x2418 ((x1710 x1019)) Int (ite x1321 (x2697 x1710) (ite x3382 (x2697 x1710) (ite x2659 (x2697 x1710) (ite x1834 (x2030 x1710) (x2697 x1710))))))
(define-fun x2187 ((x1710 x1019)) Int (ite (= x3667 x1710) x1767 (x2030 x1710)))
(define-fun x3632 ((x1710 x1019)) Int (ite x442 (x2697 x1710) (ite x1992 (x2697 x1710) (ite x2858 (ite x1716 (x2418 x1710) (x2187 x1710)) (x2697 x1710)))))
(define-fun x2966 ((x1710 x1019)) Int (ite x1862 (x3632 x1710) (ite x1155 (x2697 x1710) (ite x465 (x2697 x1710) (ite x731 (x2697 x1710) (ite x859 (x3632 x1710) (x2697 x1710)))))))
(define-fun x3800 ((x1710 x1019)) Int (ite x1655 (x2966 x1710) (x3632 x1710)))
(define-fun x2207 ((x1710 x1019)) Int (ite (= x2865 x1710) x1261 (x2697 x1710)))
(define-fun x3403 ((x1710 x1019)) Int (ite (= x1710 x1166) x3462 (x2207 x1710)))
(define-fun x2529 ((x1710 x1019)) Int (ite x971 (x2207 x1710) (ite x3633 (x2207 x1710) (ite x1595 (x2207 x1710) (ite x3560 (x3403 x1710) (x2207 x1710))))))
(define-fun x1038 ((x1710 x1019)) Int (ite (= x3910 x1710) x370 (x3403 x1710)))
(define-fun x2910 ((x1710 x1019)) Int (ite x111 (x2207 x1710) (ite x2988 (x2207 x1710) (ite x3875 (ite x1111 (x2529 x1710) (x1038 x1710)) (x2207 x1710)))))
(define-fun x2839 ((x1710 x1019)) Int (ite x210 (x2910 x1710) (ite x1120 (x2697 x1710) (ite x1342 (x2697 x1710) (ite x1129 (x2207 x1710) (ite x3336 (x2910 x1710) (x2697 x1710)))))))
(define-fun x2293 ((x1710 x1019)) Int (ite x2501 (x2839 x1710) (x2910 x1710)))
(define-fun x716 ((x1710 x1019)) Int (ite (= x1710 x3760) x2500 (x2697 x1710)))
(define-fun x363 ((x1710 x1019)) Int (ite x110 (x2697 x1710) (ite x2420 (x2697 x1710) (ite x423 (x2697 x1710) (ite x2381 (x716 x1710) (x2697 x1710))))))
(define-fun x1520 ((x1710 x1019)) Int (ite (= x1710 x2873) x3775 (x716 x1710)))
(define-fun x1846 ((x1710 x1019)) Int (ite x2075 (x2697 x1710) (ite x627 (x2697 x1710) (ite x2224 (ite x1573 (x363 x1710) (x1520 x1710)) (x2697 x1710)))))
(define-fun x3806 ((x1710 x1019)) Int (ite x1933 (x1846 x1710) (ite x125 (x2697 x1710) (ite x609 (x2697 x1710) (ite x37 (x2697 x1710) (ite x2935 (x1846 x1710) (x2697 x1710)))))))
(define-fun x3069 ((x1710 x1019)) Int (ite x3568 (x3806 x1710) (x1846 x1710)))
(define-fun x2621 ((x1710 x1019)) Int (ite x814 (x3800 x1710) (ite x156 (x2293 x1710) (x3069 x1710))))
(define-fun x925 ((x1710 x1019)) Int (ite x1331 (x2697 x1710) (ite x1683 (x2697 x1710) (x2621 x1710))))
(define-fun x1420 ((x1710 x1019)) Int (ite (= x1710 x1187) x603 (x2425 x1710)))
(define-fun x2833 ((x1710 x1019)) Int (ite (= x3702 x1710) x2752 (x1420 x1710)))
(define-fun x3721 ((x1710 x1019)) Int (ite x404 (x1420 x1710) (ite x778 (x1420 x1710) (ite x3309 (x1420 x1710) (ite x2280 (x2833 x1710) (x1420 x1710))))))
(define-fun x1645 ((x1710 x1019)) Int (ite (= x839 x1710) x2596 (x2833 x1710)))
(define-fun x2211 ((x1710 x1019)) Int (ite x442 (x1420 x1710) (ite x1992 (ite x3843 (x3721 x1710) (x1645 x1710)) (x1420 x1710))))
(define-fun x1410 ((x1710 x1019)) Int (ite x1862 (x2211 x1710) (ite x1155 (x2425 x1710) (ite x465 (x2425 x1710) (ite x731 (x1420 x1710) (ite x859 (x2211 x1710) (x2425 x1710)))))))
(define-fun x1135 ((x1710 x1019)) Int (ite x1655 (x1410 x1710) (x2211 x1710)))
(define-fun x2508 ((x1710 x1019)) Int (ite (= x2065 x1710) x449 (x2425 x1710)))
(define-fun x2027 ((x1710 x1019)) Int (ite x2368 (x2425 x1710) (ite x3766 (x2425 x1710) (ite x3375 (x2425 x1710) (ite x1262 (x2508 x1710) (x2425 x1710))))))
(define-fun x2332 ((x1710 x1019)) Int (ite (= x3161 x1710) x3355 (x2508 x1710)))
(define-fun x3509 ((x1710 x1019)) Int (ite x111 (x2425 x1710) (ite x2988 (ite x2924 (x2027 x1710) (x2332 x1710)) (x2425 x1710))))
(define-fun x2523 ((x1710 x1019)) Int (ite x210 (x3509 x1710) (ite x1120 (x2425 x1710) (ite x1342 (x2425 x1710) (ite x1129 (x2425 x1710) (ite x3336 (x3509 x1710) (x2425 x1710)))))))
(define-fun x667 ((x1710 x1019)) Int (ite x2501 (x2523 x1710) (x3509 x1710)))
(define-fun x3407 ((x1710 x1019)) Int (ite (= x230 x1710) x3778 (x2425 x1710)))
(define-fun x288 ((x1710 x1019)) Int (ite x1513 (x2425 x1710) (ite x476 (x2425 x1710) (ite x601 (x2425 x1710) (ite x2184 (x3407 x1710) (x2425 x1710))))))
(define-fun x2240 ((x1710 x1019)) Int (ite (= x509 x1710) x3550 (x3407 x1710)))
(define-fun x915 ((x1710 x1019)) Int (ite x2075 (x2425 x1710) (ite x627 (ite x3191 (x288 x1710) (x2240 x1710)) (x2425 x1710))))
(define-fun x1943 ((x1710 x1019)) Int (ite x1933 (x915 x1710) (ite x125 (x2425 x1710) (ite x609 (x2425 x1710) (ite x37 (x2425 x1710) (ite x2935 (x915 x1710) (x2425 x1710)))))))
(define-fun x2759 ((x1710 x1019)) Int (ite x3568 (x1943 x1710) (x915 x1710)))
(define-fun x3392 ((x1710 x1019)) Int (ite x814 (x1135 x1710) (ite x156 (x667 x1710) (x2759 x1710))))
(define-fun x3131 ((x1710 x1019)) Int (ite x1331 (x2425 x1710) (ite x1683 (x2425 x1710) (x3392 x1710))))
(define-fun x2063 ((x1710 x1019)) Int (ite x1331 (x885 x1710) (x861 x1710)))
(define-fun x1753 ((x1710 Int)) Int (ite (= x1710 x3255) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x591 x1710)))
(define-fun x3583 ((x1710 Int)) Int (ite (= 0 x1710) x1602 (x1350 x1710)))
(define-fun x1776 ((x1710 Int)) Int (ite (= x3255 x1710) x1602 (x1753 x1710)))
(define-fun x1134 ((x1710 Int)) Int (ite (= 0 x1710) x3041 (x1350 x1710)))
(define-fun x2779 ((x1710 Int)) Int (ite (= x1710 x3255) x3041 (x1753 x1710)))
(define-fun x2019 ((x1710 Int)) Int (ite (= x1710 0) x2792 (x1350 x1710)))
(define-fun x1472 ((x1710 Int)) Int (ite (= x1710 x3255) x2792 (x1753 x1710)))
(define-fun x1926 ((x1710 Int)) Int (ite (= 128 x1710) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x36 x1710)))
(define-fun x2055 ((x1710 Int)) Int (ite (= x1710 132) x3029 (x1926 x1710)))
(define-fun x3048 ((x1710 Int)) Int (ite (= x1710 164) x33 (x2055 x1710)))
(define-fun x777 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x2059 x1710)))
(define-fun x223 ((x1710 Int)) Int (ite (= x1710 0) 1 (x2059 x1710)))
(define-fun x2274 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x2059 x1710)))
(define-fun x2191 ((x1710 Int)) Int (ite (= x1710 0) 1 (x2059 x1710)))
(define-fun x3707 ((x1710 Int)) Int (ite (= x1710 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1476 x1710)))
(define-fun x1621 ((x1710 Int)) Int (ite (= 132 x1710) x3029 (x3707 x1710)))
(define-fun x414 ((x1710 Int)) Int (ite (= 164 x1710) x848 (x1621 x1710)))
(define-fun x2936 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3465 x1710)))
(define-fun x2149 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3465 x1710)))
(define-fun x195 ((x1710 Int)) Int (ite (= x1710 0) 1 (x3465 x1710)))
(define-fun x2458 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3465 x1710)))
(define-fun x1459 ((x1710 Int)) Int (ite (= x1710 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2959 x1710)))
(define-fun x3071 ((x1710 Int)) Int (ite (= x1710 132) x3029 (x1459 x1710)))
(define-fun x66 ((x1710 Int)) Int (ite (= x1710 164) x2377 (x3071 x1710)))
(define-fun x2391 ((x1710 Int)) Int (ite (= x1710 0) 1 (x395 x1710)))
(define-fun x3480 ((x1710 Int)) Int (ite (= x1710 0) 1 (x395 x1710)))
(define-fun x1772 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x395 x1710)))
(define-fun x1059 ((x1710 Int)) Int (ite (= x1710 0) 1 (x395 x1710)))
(define-fun x1326 ((x1710 x1019)) Int (ite (= x1710 x3924) x317 (x2510 x1710)))
(define-fun x2958 ((x1710 x1019)) Int (ite x3724 (x2510 x1710) (ite x3659 (x2510 x1710) (ite x3489 (x2510 x1710) (ite x263 (x1326 x1710) (x2510 x1710))))))
(define-fun x2222 ((x1710 x1019)) Int (ite (= x1710 x2124) x3106 (x1326 x1710)))
(define-fun x264 ((x1710 x1019)) Int (ite x3139 (x2510 x1710) (ite x2747 (x2510 x1710) (ite x3795 (x2510 x1710) (ite x2559 (x2958 x1710) (x2222 x1710))))))
(define-fun x458 ((x1710 x1019)) Int (ite x2497 (x264 x1710) (ite x1882 (x2510 x1710) (ite x3050 (x2510 x1710) (ite x2284 (x2510 x1710) (ite x2370 (x264 x1710) (x2510 x1710)))))))
(define-fun x313 ((x1710 x1019)) Int (ite x74 (x458 x1710) (x264 x1710)))
(define-fun x1722 ((x1710 x1019)) Int (ite (= x1675 x1710) x820 (x2510 x1710)))
(define-fun x1337 ((x1710 x1019)) Int (ite x3769 (x2510 x1710) (ite x1663 (x2510 x1710) (ite x1919 (x2510 x1710) (ite x545 (x1722 x1710) (x2510 x1710))))))
(define-fun x2289 ((x1710 x1019)) Int (ite (= x1710 x2013) x2677 (x1722 x1710)))
(define-fun x1522 ((x1710 x1019)) Int (ite x3459 (x2510 x1710) (ite x1721 (x2510 x1710) (ite x2981 (x2510 x1710) (ite x3932 (x1337 x1710) (x2289 x1710))))))
(define-fun x567 ((x1710 x1019)) Int (ite x3804 (x1522 x1710) (ite x323 (x2510 x1710) (ite x3377 (x2510 x1710) (ite x687 (x2510 x1710) (ite x1822 (x1522 x1710) (x2510 x1710)))))))
(define-fun x1622 ((x1710 x1019)) Int (ite x2577 (x567 x1710) (x1522 x1710)))
(define-fun x2687 ((x1710 x1019)) Int (ite (= x1710 x1244) x453 (x2510 x1710)))
(define-fun x3534 ((x1710 x1019)) Int (ite x788 (x2510 x1710) (ite x3277 (x2510 x1710) (ite x3344 (x2510 x1710) (ite x53 (x2687 x1710) (x2510 x1710))))))
(define-fun x2119 ((x1710 x1019)) Int (ite (= x337 x1710) x1922 (x2687 x1710)))
(define-fun x3240 ((x1710 x1019)) Int (ite x1380 (x2510 x1710) (ite x1824 (x2510 x1710) (ite x1442 (x2510 x1710) (ite x2225 (x3534 x1710) (x2119 x1710))))))
(define-fun x1293 ((x1710 x1019)) Int (ite x181 (x3240 x1710) (ite x973 (x2510 x1710) (ite x2989 (x2510 x1710) (ite x3219 (x2510 x1710) (ite x1804 (x3240 x1710) (x2510 x1710)))))))
(define-fun x825 ((x1710 x1019)) Int (ite x1763 (x1293 x1710) (x3240 x1710)))
(define-fun x3109 ((x1710 x1019)) Int (ite x3648 (x2510 x1710) (ite x767 (x313 x1710) (ite x2650 (x1622 x1710) (x825 x1710)))))
(define-fun x3543 ((x1710 Int)) Int (ite x273 (x1776 x1710) (ite x3339 (x2779 x1710) (x1472 x1710))))
(define-fun x3470 ((x1710 Int)) Int (ite (= x1710 x1084) 89522461602318961266474185744428785802019839140862557341176434972013554040832 (x3543 x1710)))
(define-fun x727 ((x1710 Int)) Int (ite (= x1710 x3687) x3415 (x3470 x1710)))
(define-fun x1539 ((x1710 Int)) Int (ite (= x1084 x1710) 0 (x727 x1710)))
(define-fun x491 ((x1710 Int)) Int (ite (= x1710 x1084) 0 (x727 x1710)))
(define-fun x1045 ((x1710 Int)) Int (ite (= x1710 x1084) 0 (x727 x1710)))
(define-fun x2 ((x1710 Int)) Int (ite x767 (ite x74 (x727 x1710) (x1539 x1710)) (ite x2650 (ite x2577 (x727 x1710) (x491 x1710)) (ite x1763 (x727 x1710) (x1045 x1710)))))
(define-fun x775 ((x1710 Int)) Int (ite (= x3825 x1710) 94482241256677223720308674365448432550660581809977780367718865401173155774464 (x2 x1710)))
(define-fun x2174 ((x1710 Int)) Int (ite (and (> (+ 0 x3825) x1710) (<= x3825 x1710)) (x875 (+ 0 (- x1710 x3825))) (x775 x1710)))
(define-fun x1530 ((x1710 Int)) Int (ite x3648 (x591 x1710) (ite x2781 (x2 x1710) (x2174 x1710))))
(define-fun x1428 ((x1710 x1019)) Int (ite (= x1452 x1710) x744 (x3131 x1710)))
(define-fun x192 ((x1710 x1019)) Int (ite x1094 (x3131 x1710) (ite x3547 (x3131 x1710) (ite x3134 (x3131 x1710) (ite x754 (x1428 x1710) (x3131 x1710))))))
(define-fun x2982 ((x1710 x1019)) Int (ite (= x208 x1710) x1793 (x1428 x1710)))
(define-fun x2495 ((x1710 x1019)) Int (ite x3139 (x3131 x1710) (ite x2747 (ite x1082 (x192 x1710) (x2982 x1710)) (x3131 x1710))))
(define-fun x2385 ((x1710 x1019)) Int (ite x2497 (x2495 x1710) (ite x1882 (x3131 x1710) (ite x3050 (x3131 x1710) (ite x2284 (x3131 x1710) (ite x2370 (x2495 x1710) (x3131 x1710)))))))
(define-fun x2855 ((x1710 x1019)) Int (ite x74 (x2385 x1710) (x2495 x1710)))
(define-fun x2216 ((x1710 x1019)) Int (ite (= x1710 x3332) x116 (x3131 x1710)))
(define-fun x950 ((x1710 x1019)) Int (ite x3474 (x3131 x1710) (ite x514 (x3131 x1710) (ite x1563 (x3131 x1710) (ite x656 (x2216 x1710) (x3131 x1710))))))
(define-fun x174 ((x1710 x1019)) Int (ite (= x2248 x1710) x3715 (x2216 x1710)))
(define-fun x3259 ((x1710 x1019)) Int (ite x3459 (x3131 x1710) (ite x1721 (ite x3821 (x950 x1710) (x174 x1710)) (x3131 x1710))))
(define-fun x1081 ((x1710 x1019)) Int (ite x3804 (x3259 x1710) (ite x323 (x3131 x1710) (ite x3377 (x3131 x1710) (ite x687 (x3131 x1710) (ite x1822 (x3259 x1710) (x3131 x1710)))))))
(define-fun x2644 ((x1710 x1019)) Int (ite x2577 (x1081 x1710) (x3259 x1710)))
(define-fun x1030 ((x1710 x1019)) Int (ite (= x1710 x759) x3417 (x3131 x1710)))
(define-fun x862 ((x1710 x1019)) Int (ite x908 (x3131 x1710) (ite x2675 (x3131 x1710) (ite x784 (x3131 x1710) (ite x1487 (x1030 x1710) (x3131 x1710))))))
(define-fun x1060 ((x1710 x1019)) Int (ite (= x1710 x1292) x1371 (x1030 x1710)))
(define-fun x321 ((x1710 x1019)) Int (ite x1380 (x3131 x1710) (ite x1824 (ite x1050 (x862 x1710) (x1060 x1710)) (x3131 x1710))))
(define-fun x2682 ((x1710 x1019)) Int (ite x181 (x321 x1710) (ite x973 (x3131 x1710) (ite x2989 (x3131 x1710) (ite x3219 (x3131 x1710) (ite x1804 (x321 x1710) (x3131 x1710)))))))
(define-fun x2292 ((x1710 x1019)) Int (ite x1763 (x2682 x1710) (x321 x1710)))
(define-fun x1453 ((x1710 x1019)) Int (ite x3648 (x3131 x1710) (ite x767 (x2855 x1710) (ite x2650 (x2644 x1710) (x2292 x1710)))))
(define-fun x279 ((x1710 x1019)) Int (ite (= x1290 x1710) x3343 (x2141 x1710)))
(define-fun x3217 ((x1710 x1019)) Int (ite x3648 (x2141 x1710) (x279 x1710)))
(define-fun x3765 ((x1710 x1019)) Int (ite (= x368 x1710) x1329 (x925 x1710)))
(define-fun x3716 ((x1710 x1019)) Int (ite x91 (x925 x1710) (ite x477 (x925 x1710) (ite x1044 (x925 x1710) (ite x2542 (x3765 x1710) (x925 x1710))))))
(define-fun x684 ((x1710 x1019)) Int (ite (= x101 x1710) x3063 (x3765 x1710)))
(define-fun x245 ((x1710 x1019)) Int (ite x3139 (x925 x1710) (ite x2747 (x925 x1710) (ite x3795 (ite x1551 (x3716 x1710) (x684 x1710)) (x925 x1710)))))
(define-fun x3770 ((x1710 x1019)) Int (ite x2497 (x245 x1710) (ite x1882 (x925 x1710) (ite x3050 (x925 x1710) (ite x2284 (x925 x1710) (ite x2370 (x245 x1710) (x925 x1710)))))))
(define-fun x3456 ((x1710 x1019)) Int (ite x74 (x3770 x1710) (x245 x1710)))
(define-fun x3046 ((x1710 x1019)) Int (ite (= x1710 x587) x398 (x925 x1710)))
(define-fun x2513 ((x1710 x1019)) Int (ite x2541 (x925 x1710) (ite x3307 (x925 x1710) (ite x1873 (x925 x1710) (ite x3718 (x3046 x1710) (x925 x1710))))))
(define-fun x2054 ((x1710 x1019)) Int (ite (= x1710 x1477) x580 (x3046 x1710)))
(define-fun x2344 ((x1710 x1019)) Int (ite x3459 (x925 x1710) (ite x1721 (x925 x1710) (ite x2981 (ite x18 (x2513 x1710) (x2054 x1710)) (x925 x1710)))))
(define-fun x5 ((x1710 x1019)) Int (ite x3804 (x2344 x1710) (ite x323 (x925 x1710) (ite x3377 (x925 x1710) (ite x687 (x925 x1710) (ite x1822 (x2344 x1710) (x925 x1710)))))))
(define-fun x3585 ((x1710 x1019)) Int (ite x2577 (x5 x1710) (x2344 x1710)))
(define-fun x391 ((x1710 x1019)) Int (ite (= x1710 x732) x2653 (x925 x1710)))
(define-fun x3698 ((x1710 x1019)) Int (ite x3589 (x925 x1710) (ite x539 (x925 x1710) (ite x335 (x925 x1710) (ite x2896 (x391 x1710) (x925 x1710))))))
(define-fun x530 ((x1710 x1019)) Int (ite (= x1710 x572) x1564 (x391 x1710)))
(define-fun x311 ((x1710 x1019)) Int (ite x1380 (x925 x1710) (ite x1824 (x925 x1710) (ite x1442 (ite x1990 (x3698 x1710) (x530 x1710)) (x925 x1710)))))
(define-fun x3376 ((x1710 x1019)) Int (ite x181 (x311 x1710) (ite x973 (x925 x1710) (ite x2989 (x925 x1710) (ite x3219 (x925 x1710) (ite x1804 (x311 x1710) (x925 x1710)))))))
(define-fun x711 ((x1710 x1019)) Int (ite x1763 (x3376 x1710) (x311 x1710)))
(define-fun x120 ((x1710 x1019)) Int (ite x3648 (x925 x1710) (ite x767 (x3456 x1710) (ite x2650 (x3585 x1710) (x711 x1710)))))
(define-fun x3528 ((x1710 x1019)) Int (ite (= x1710 x1249) x663 (x2113 x1710)))
(define-fun x3759 ((x1710 x1019)) Int (ite x3227 (x3528 x1710) (ite x1687 (x2113 x1710) (ite x1967 (x2113 x1710) (ite x1751 (x2113 x1710) (ite x1488 (x3528 x1710) (x2113 x1710)))))))
(define-fun x474 ((x1710 x1019)) Int (ite (= x1710 x2209) x3087 (x3528 x1710)))
(define-fun x2590 ((x1710 x1019)) Int (ite x3139 (ite x96 (x3759 x1710) (x474 x1710)) (x2113 x1710)))
(define-fun x4 ((x1710 x1019)) Int (ite x2497 (x2590 x1710) (ite x1882 (x2113 x1710) (ite x3050 (x2113 x1710) (ite x2284 (x2113 x1710) (ite x2370 (x2590 x1710) (x2113 x1710)))))))
(define-fun x2528 ((x1710 x1019)) Int (ite x74 (x4 x1710) (x2590 x1710)))
(define-fun x267 ((x1710 x1019)) Int (ite (= x933 x1710) x3546 (x2113 x1710)))
(define-fun x3881 ((x1710 x1019)) Int (ite x206 (x267 x1710) (ite x2551 (x2113 x1710) (ite x2898 (x2113 x1710) (ite x366 (x2113 x1710) (ite x43 (x267 x1710) (x2113 x1710)))))))
(define-fun x698 ((x1710 x1019)) Int (ite (= x1710 x3635) x2494 (x267 x1710)))
(define-fun x2957 ((x1710 x1019)) Int (ite x3459 (ite x3545 (x3881 x1710) (x698 x1710)) (x2113 x1710)))
(define-fun x1528 ((x1710 x1019)) Int (ite x3804 (x2957 x1710) (ite x323 (x2113 x1710) (ite x3377 (x2113 x1710) (ite x687 (x2113 x1710) (ite x1822 (x2957 x1710) (x2113 x1710)))))))
(define-fun x985 ((x1710 x1019)) Int (ite x2577 (x1528 x1710) (x2957 x1710)))
(define-fun x342 ((x1710 x1019)) Int (ite (= x1647 x1710) x2048 (x2113 x1710)))
(define-fun x1820 ((x1710 x1019)) Int (ite x2436 (x342 x1710) (ite x3436 (x2113 x1710) (ite x851 (x2113 x1710) (ite x3308 (x2113 x1710) (ite x2038 (x342 x1710) (x2113 x1710)))))))
(define-fun x1717 ((x1710 x1019)) Int (ite (= x1710 x1912) x721 (x342 x1710)))
(define-fun x3396 ((x1710 x1019)) Int (ite x1380 (ite x2288 (x1820 x1710) (x1717 x1710)) (x2113 x1710)))
(define-fun x920 ((x1710 x1019)) Int (ite x181 (x3396 x1710) (ite x973 (x2113 x1710) (ite x2989 (x2113 x1710) (ite x3219 (x2113 x1710) (ite x1804 (x3396 x1710) (x2113 x1710)))))))
(define-fun x2979 ((x1710 x1019)) Int (ite x1763 (x920 x1710) (x3396 x1710)))
(define-fun x1406 ((x1710 x1019)) Int (ite x3648 (x2113 x1710) (ite x767 (x2528 x1710) (ite x2650 (x985 x1710) (x2979 x1710)))))
(define-fun x2333 ((x1710 x1019)) Int (ite (= x3170 x1710) 0 (x3217 x1710)))
(define-fun x943 ((x1710 x1019)) Int (ite (= x1710 (x512 x3029)) x2708 (x1202 x1710)))
(define-fun x2394 ((x1710 Int)) Int (ite (= x1710 0) 1 (x3793 x1710)))
(define-fun x1833 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3793 x1710)))
(define-fun x1324 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3793 x1710)))
(define-fun x795 ((x1710 Int)) Int (ite (= 0 x1710) x239 (x2535 x1710)))
(define-fun x519 ((x1710 Int)) Int (ite (= x1710 0) x1714 (x2535 x1710)))
(define-fun x2243 ((x1710 Int)) Int (ite (= 0 x1710) x757 (x2535 x1710)))
(define-fun x690 ((x1710 x1019)) Int (ite x3900 (x3708 x1710) (x3844 x1710)))
(define-fun x3461 ((x1710 x1019)) Int (ite x3900 (x1266 x1710) (x132 x1710)))
(define-fun x322 ((x1710 Int)) Int (ite (= x1710 0) x3130 (x3060 x1710)))
(define-fun x23 ((x1710 Int)) Int (ite (= x1710 0) x3522 (x2742 x1710)))
(define-fun x3572 ((x1710 Int)) Int (ite (= x1710 128) (ite x886 1 0) (x3157 x1710)))
(define-fun x256 ((x1710 Int)) Int (ite (= x1710 160) x3348 (x3572 x1710)))
(define-fun x1894 ((x1710 Int)) Int (ite (= 192 x1710) (ite x3860 1 0) (x256 x1710)))
(define-fun x536 ((x1710 Int)) Int (ite (= x1710 0) x2474 (x2450 x1710)))
(define-fun x2656 ((x1710 Int)) Int (ite (= 32 x1710) x72 (x536 x1710)))
(define-fun x1027 ((x1710 Int)) Int (ite (= x1710 64) x3616 (x2656 x1710)))
(define-fun x3151 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3532 x1710)))
(define-fun x2405 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3532 x1710)))
(define-fun x1676 ((x1710 Int)) Int (ite (= x1710 0) 1 (x3532 x1710)))
(define-fun x432 ((x1710 x1019)) Int (ite (= x1710 x997) x1592 (x1897 x1710)))
(define-fun x726 ((x1710 x1019)) Int (ite x1741 (x1897 x1710) (x432 x1710)))
(define-fun x2543 ((x1710 x1019)) Int (ite (= x2339 x1710) 0 (x726 x1710)))
(define-fun x3313 ((x1710 x1019)) Int (ite x229 (x1897 x1710) (x2543 x1710)))
(define-fun x1445 ((x1710 x1019)) Int (ite (= x1710 x3241) x2798 (x3313 x1710)))
(define-fun x569 ((x1710 x1019)) Int (ite (= x3354 x1710) 0 (x3313 x1710)))
(define-fun x2146 ((x1710 x1019)) Int (ite (= x3334 x1710) x2869 (x3313 x1710)))
(define-fun x2770 ((x1710 x1019)) Int (ite (= x1710 x1192) x496 (x2146 x1710)))
(define-fun x2850 ((x1710 x1019)) Int (ite (= x974 x1710) 0 (x3313 x1710)))
(define-fun x2800 ((x1710 x1019)) Int (ite (= x1710 x3132) x496 (x2850 x1710)))
(define-fun x1014 ((x1710 x1019)) Int (ite x3884 (x1445 x1710) (ite x1224 (x569 x1710) (ite x2997 (x2770 x1710) (x2800 x1710)))))
(define-fun x2619 ((x1710 x1019)) Int (ite x1364 (x1897 x1710) (ite x2066 (x3313 x1710) (x1014 x1710))))
(define-fun x26 ((x1710 x1019)) Int (ite (= x2661 x1710) x495 (x3055 x1710)))
(define-fun x1412 ((x1710 x1019)) Int (ite x237 (x3055 x1710) (x26 x1710)))
(define-fun x2380 ((x1710 x1019)) Int (ite (= x709 x1710) 0 (x1412 x1710)))
(define-fun x840 ((x1710 x1019)) Int (ite x229 (x3055 x1710) (x2380 x1710)))
(define-fun x151 ((x1710 x1019)) Int (ite (= x1710 x1792) 0 (x840 x1710)))
(define-fun x3763 ((x1710 x1019)) Int (ite (= x1710 x2482) x496 (x151 x1710)))
(define-fun x1278 ((x1710 x1019)) Int (ite (= x1710 x1494) 0 (x840 x1710)))
(define-fun x305 ((x1710 x1019)) Int (ite (= x1710 x1739) x1635 (x840 x1710)))
(define-fun x3125 ((x1710 x1019)) Int (ite (= x1710 x2669) x496 (x305 x1710)))
(define-fun x1629 ((x1710 x1019)) Int (ite (= x1710 x3629) x1635 (x840 x1710)))
(define-fun x2726 ((x1710 x1019)) Int (ite x3884 (x3763 x1710) (ite x1224 (x1278 x1710) (ite x2997 (x3125 x1710) (x1629 x1710)))))
(define-fun x1718 ((x1710 x1019)) Int (ite x1364 (x3055 x1710) (ite x2066 (x840 x1710) (x2726 x1710))))
(define-fun x209 ((x1710 x1019)) Int (ite (= x1710 x2126) 0 (x2213 x1710)))
(define-fun x2365 ((x1710 x1019)) Int (ite x229 (x2213 x1710) (x209 x1710)))
(define-fun x3819 ((x1710 x1019)) Int (ite (= x3776 x1710) x1284 (x2365 x1710)))
(define-fun x1750 ((x1710 x1019)) Int (ite (= x2317 x1710) x1284 (x2365 x1710)))
(define-fun x2298 ((x1710 x1019)) Int (ite (= x3652 x1710) x1284 (x2365 x1710)))
(define-fun x2939 ((x1710 x1019)) Int (ite (= x413 x1710) x1284 (x2365 x1710)))
(define-fun x867 ((x1710 x1019)) Int (ite x3884 (x3819 x1710) (ite x1224 (x1750 x1710) (ite x2997 (x2298 x1710) (x2939 x1710)))))
(define-fun x1748 ((x1710 x1019)) Int (ite x1364 (x2213 x1710) (ite x2066 (x2365 x1710) (x867 x1710))))
(define-fun x800 ((x1710 x1019)) Int (ite (= x1984 x1710) x495 (x51 x1710)))
(define-fun x3122 ((x1710 x1019)) Int (ite x229 (x51 x1710) (ite x237 (x800 x1710) (x51 x1710))))
(define-fun x2099 ((x1710 x1019)) Int (ite (= x1710 x2830) x496 (x3122 x1710)))
(define-fun x2829 ((x1710 x1019)) Int (ite (= x1710 x2830) x496 (x3122 x1710)))
(define-fun x3481 ((x1710 x1019)) Int (ite x3884 (x3122 x1710) (ite x1224 (x2099 x1710) (ite x2997 (x3122 x1710) (x2829 x1710)))))
(define-fun x93 ((x1710 x1019)) Int (ite x1364 (x51 x1710) (ite x2066 (x3122 x1710) (x3481 x1710))))
(define-fun x2926 ((x1710 x1019)) Int (ite (= x1710 x1058) x3573 (x93 x1710)))
(define-fun x3730 ((x1710 x1019)) Int (ite (= x1734 x1710) x3573 (x1718 x1710)))
(define-fun x2237 ((x1710 x1019)) Int (ite (= x986 x1710) x1381 (x2619 x1710)))
(define-fun x3483 ((x1710 x1019)) Int (ite x3682 (x2619 x1710) (x2237 x1710)))
(define-fun x1843 ((x1710 x1019)) Int (ite (= x1710 x2903) 0 (x3483 x1710)))
(define-fun x3224 ((x1710 x1019)) Int (ite x1930 (x2619 x1710) (x1843 x1710)))
(define-fun x2295 ((x1710 x1019)) Int (ite x2208 (x1718 x1710) (x3730 x1710)))
(define-fun x1099 ((x1710 x1019)) Int (ite (= x253 x1710) 0 (x2295 x1710)))
(define-fun x2485 ((x1710 x1019)) Int (ite x1930 (x1718 x1710) (x1099 x1710)))
(define-fun x610 ((x1710 x1019)) Int (ite (= x1710 x3353) x1592 (x2460 x1710)))
(define-fun x1055 ((x1710 x1019)) Int (ite x229 (x2460 x1710) (ite x1741 (x610 x1710) (x2460 x1710))))
(define-fun x1280 ((x1710 x1019)) Int (ite (= x114 x1710) x496 (x1055 x1710)))
(define-fun x1073 ((x1710 x1019)) Int (ite (= x1710 x1339) x496 (x1055 x1710)))
(define-fun x1914 ((x1710 x1019)) Int (ite x3884 (x1280 x1710) (ite x1224 (x1073 x1710) (x1055 x1710))))
(define-fun x2465 ((x1710 x1019)) Int (ite x1364 (x2460 x1710) (ite x2066 (x1055 x1710) (x1914 x1710))))
(define-fun x3303 ((x1710 x1019)) Int (ite (= x2389 x1710) x1381 (x2465 x1710)))
(define-fun x3768 ((x1710 x1019)) Int (ite x1930 (x2465 x1710) (ite x3682 (x3303 x1710) (x2465 x1710))))
(define-fun x2941 ((x1710 x1019)) Int (ite x1930 (x93 x1710) (ite x2208 (x2926 x1710) (x93 x1710))))
(define-fun x3764 ((x1710 x1019)) Int (ite (= x1710 x2911) 0 (x1748 x1710)))
(define-fun x293 ((x1710 x1019)) Int (ite x1930 (x1748 x1710) (x3764 x1710)))
(define-fun x2256 ((x1710 x1019)) Int (ite (= x1710 x215) x3008 (x1052 x1710)))
(define-fun x2031 ((x1710 x1019)) Int (ite x2694 (x1052 x1710) (x2256 x1710)))
(define-fun x765 ((x1710 x1019)) Int (ite (= x2757 x1710) 0 (x2031 x1710)))
(define-fun x2904 ((x1710 x1019)) Int (ite x3695 (x1052 x1710) (x765 x1710)))
(define-fun x1336 ((x1710 x1019)) Int (ite (= x853 x1710) x1856 (x2904 x1710)))
(define-fun x3271 ((x1710 x1019)) Int (ite (= x1842 x1710) 0 (x2904 x1710)))
(define-fun x702 ((x1710 x1019)) Int (ite (= x112 x1710) x3688 (x2904 x1710)))
(define-fun x255 ((x1710 x1019)) Int (ite (= x1710 x2069) x496 (x702 x1710)))
(define-fun x1829 ((x1710 x1019)) Int (ite (= x1710 x1794) 0 (x2904 x1710)))
(define-fun x2592 ((x1710 x1019)) Int (ite (= x3176 x1710) x496 (x1829 x1710)))
(define-fun x2917 ((x1710 x1019)) Int (ite x909 (x1336 x1710) (ite x1425 (x3271 x1710) (ite x2302 (x255 x1710) (x2592 x1710)))))
(define-fun x3242 ((x1710 x1019)) Int (ite x300 (x1052 x1710) (ite x479 (x2904 x1710) (x2917 x1710))))
(define-fun x3031 ((x1710 x1019)) Int (ite (= x1509 x1710) x1258 (x2920 x1710)))
(define-fun x3361 ((x1710 x1019)) Int (ite x3092 (x2920 x1710) (x3031 x1710)))
(define-fun x202 ((x1710 x1019)) Int (ite (= x3541 x1710) 0 (x3361 x1710)))
(define-fun x88 ((x1710 x1019)) Int (ite x3695 (x2920 x1710) (x202 x1710)))
(define-fun x3638 ((x1710 x1019)) Int (ite (= x1450 x1710) 0 (x88 x1710)))
(define-fun x2416 ((x1710 x1019)) Int (ite (= x1710 x2738) x496 (x3638 x1710)))
(define-fun x2900 ((x1710 x1019)) Int (ite (= x2264 x1710) 0 (x88 x1710)))
(define-fun x1840 ((x1710 x1019)) Int (ite (= x1710 x2056) x1251 (x88 x1710)))
(define-fun x3225 ((x1710 x1019)) Int (ite (= x3519 x1710) x496 (x1840 x1710)))
(define-fun x3926 ((x1710 x1019)) Int (ite (= x3929 x1710) x1251 (x88 x1710)))
(define-fun x2594 ((x1710 x1019)) Int (ite x909 (x2416 x1710) (ite x1425 (x2900 x1710) (ite x2302 (x3225 x1710) (x3926 x1710)))))
(define-fun x1162 ((x1710 x1019)) Int (ite x300 (x2920 x1710) (ite x479 (x88 x1710) (x2594 x1710))))
(define-fun x786 ((x1710 x1019)) Int (ite (= x1710 x573) 0 (x153 x1710)))
(define-fun x180 ((x1710 x1019)) Int (ite x3695 (x153 x1710) (x786 x1710)))
(define-fun x2793 ((x1710 x1019)) Int (ite (= x2860 x1710) x139 (x180 x1710)))
(define-fun x2112 ((x1710 x1019)) Int (ite (= x1404 x1710) x139 (x180 x1710)))
(define-fun x1499 ((x1710 x1019)) Int (ite (= x3011 x1710) x139 (x180 x1710)))
(define-fun x3846 ((x1710 x1019)) Int (ite (= x1710 x3209) x139 (x180 x1710)))
(define-fun x2846 ((x1710 x1019)) Int (ite x909 (x2793 x1710) (ite x1425 (x2112 x1710) (ite x2302 (x1499 x1710) (x3846 x1710)))))
(define-fun x61 ((x1710 x1019)) Int (ite x300 (x153 x1710) (ite x479 (x180 x1710) (x2846 x1710))))
(define-fun x922 ((x1710 x1019)) Int (ite (= x1710 x2949) x1258 (x303 x1710)))
(define-fun x3366 ((x1710 x1019)) Int (ite x3695 (x303 x1710) (ite x3092 (x922 x1710) (x303 x1710))))
(define-fun x2572 ((x1710 x1019)) Int (ite (= x890 x1710) x496 (x3366 x1710)))
(define-fun x2181 ((x1710 x1019)) Int (ite (= x890 x1710) x496 (x3366 x1710)))
(define-fun x1945 ((x1710 x1019)) Int (ite x909 (x3366 x1710) (ite x1425 (x2572 x1710) (ite x2302 (x3366 x1710) (x2181 x1710)))))
(define-fun x992 ((x1710 x1019)) Int (ite x300 (x303 x1710) (ite x479 (x3366 x1710) (x1945 x1710))))
(define-fun x1886 ((x1710 x1019)) Int (ite (= x3782 x1710) x2778 (x992 x1710)))
(define-fun x2431 ((x1710 x1019)) Int (ite (= x1710 x128) x2778 (x1162 x1710)))
(define-fun x819 ((x1710 x1019)) Int (ite x130 (x992 x1710) (ite x1952 (x1886 x1710) (x992 x1710))))
(define-fun x802 ((x1710 x1019)) Int (ite (= x1710 x1259) 0 (x61 x1710)))
(define-fun x3836 ((x1710 x1019)) Int (ite x130 (x61 x1710) (x802 x1710)))
(define-fun x431 ((x1710 x1019)) Int (ite x1952 (x1162 x1710) (x2431 x1710)))
(define-fun x2557 ((x1710 x1019)) Int (ite (= x1710 x2831) 0 (x431 x1710)))
(define-fun x460 ((x1710 x1019)) Int (ite x130 (x1162 x1710) (x2557 x1710)))
(define-fun x3613 ((x1710 x1019)) Int (ite (= x1710 x1845) x2152 (x3242 x1710)))
(define-fun x691 ((x1710 x1019)) Int (ite x3933 (x3242 x1710) (x3613 x1710)))
(define-fun x1035 ((x1710 x1019)) Int (ite (= x1507 x1710) 0 (x691 x1710)))
(define-fun x2862 ((x1710 x1019)) Int (ite x130 (x3242 x1710) (x1035 x1710)))
(define-fun x1300 ((x1710 x1019)) Int (ite (= x3278 x1710) x3008 (x1054 x1710)))
(define-fun x1946 ((x1710 x1019)) Int (ite x3695 (x1054 x1710) (ite x2694 (x1300 x1710) (x1054 x1710))))
(define-fun x3670 ((x1710 x1019)) Int (ite (= x1710 x560) x496 (x1946 x1710)))
(define-fun x3593 ((x1710 x1019)) Int (ite (= x1710 x2956) x496 (x1946 x1710)))
(define-fun x1597 ((x1710 x1019)) Int (ite x909 (x3670 x1710) (ite x1425 (x3593 x1710) (x1946 x1710))))
(define-fun x887 ((x1710 x1019)) Int (ite x300 (x1054 x1710) (ite x479 (x1946 x1710) (x1597 x1710))))
(define-fun x3696 ((x1710 x1019)) Int (ite (= x1710 x2740) x2152 (x887 x1710)))
(define-fun x1309 ((x1710 x1019)) Int (ite x130 (x887 x1710) (ite x3933 (x3696 x1710) (x887 x1710))))
(define-fun x843 ((x1710 x1019)) Int (ite (= x723 x1710) x389 (x2135 x1710)))
(define-fun x1867 ((x1710 x1019)) Int (ite (= x1710 x975) 0 (x843 x1710)))
(define-fun x418 ((x1710 x1019)) Int (ite x2328 (x843 x1710) (x1867 x1710)))
(define-fun x3703 ((x1710 x1019)) Int (ite (= x1168 x1710) x1097 (x2945 x1710)))
(define-fun x2834 ((x1710 x1019)) Int (ite (= x1710 x2735) 0 (x3703 x1710)))
(define-fun x2627 ((x1710 x1019)) Int (ite x315 (x3703 x1710) (x2834 x1710)))
(define-fun x1332 ((x1710 x1019)) Int (ite (= x3503 x1710) x2171 (x418 x1710)))
(define-fun x1415 ((x1710 x1019)) Int (ite (= x1710 x1874) x3525 (x2627 x1710)))
(define-fun x866 ((x1710 x1019)) Int (ite x3557 (x2333 x1710) (x3217 x1710)))
(define-fun x1418 ((x1710 x1019)) Int (ite (= x3030 x1710) x728 (x2153 x1710)))
(define-fun x3162 ((x1710 x1019)) Int (ite (= x1710 x1810) x728 (x749 x1710)))
(define-fun x425 ((x1710 x1019)) Int (ite (= x3160 x1710) 0 (x2063 x1710)))
(define-fun x3141 ((x1710 x1019)) Int (ite x2442 (x2153 x1710) (ite x3523 (x1418 x1710) (x2153 x1710))))
(define-fun x1557 ((x1710 x1019)) Int (ite (= x3745 x1710) 0 (x1678 x1710)))
(define-fun x2522 ((x1710 x1019)) Int (ite x2442 (x1678 x1710) (x1557 x1710)))
(define-fun x1072 ((x1710 x1019)) Int (ite (= x1710 x565) x3457 (x3478 x1710)))
(define-fun x1401 ((x1710 x1019)) Int (ite x2442 (x3478 x1710) (ite x1042 (x1072 x1710) (x3478 x1710))))
(define-fun x261 ((x1710 x1019)) Int (ite x3523 (x749 x1710) (x3162 x1710)))
(define-fun x2728 ((x1710 x1019)) Int (ite (= x1710 x692) 0 (x261 x1710)))
(define-fun x3425 ((x1710 x1019)) Int (ite x2442 (x749 x1710) (x2728 x1710)))
(define-fun x3852 ((x1710 x1019)) Int (ite (= x1710 x11) x3457 (x3471 x1710)))
(define-fun x2620 ((x1710 x1019)) Int (ite x1042 (x3471 x1710) (x3852 x1710)))
(define-fun x44 ((x1710 x1019)) Int (ite (= x1710 x962) 0 (x2620 x1710)))
(define-fun x1651 ((x1710 x1019)) Int (ite x2442 (x3471 x1710) (x44 x1710)))
(define-fun x148 ((x1710 x1019)) Int (ite x2776 (x425 x1710) (x2063 x1710)))
(define-fun x1855 ((x1710 x1019)) Int (ite (= x1710 x1274) x2929 (x1144 x1710)))
(define-fun x55 ((x1710 x1019)) Int (ite (= x1710 x3527) x2929 (x533 x1710)))
(define-fun x1383 ((x1710 Int)) Int (ite (= x1710 x2461) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x1530 x1710)))
(define-fun x911 ((x1710 Int)) Int (ite (= x3608 x1710) x2725 (x1383 x1710)))
(define-fun x2540 ((x1710 Int)) Int (ite (= x1710 x3136) x2353 (x911 x1710)))
(define-fun x3021 ((x1710 Int)) Int (ite (= x1710 x1226) x615 (x2540 x1710)))
(define-fun x3015 ((x1710 Int)) Int (ite (and (<= x2461 x1710) (> (+ x2461 0) x1710)) (x636 (+ 0 (- x1710 x2461))) (x3021 x1710)))
(define-fun x1688 ((x1710 x1019)) Int (ite (= x2562 x1710) 0 (x1978 x1710)))
(define-fun x3609 ((x1710 x1019)) Int (ite x3500 (x1978 x1710) (x1688 x1710)))
(define-fun x119 ((x1710 x1019)) Int (ite x3500 (x1144 x1710) (ite x2202 (x1855 x1710) (x1144 x1710))))
(define-fun x1463 ((x1710 x1019)) Int (ite x2202 (x533 x1710) (x55 x1710)))
(define-fun x1340 ((x1710 x1019)) Int (ite (= x1710 x3739) 0 (x1463 x1710)))
(define-fun x1497 ((x1710 x1019)) Int (ite x3500 (x533 x1710) (x1340 x1710)))
(define-fun x3785 ((x1710 x1019)) Int (ite (= x1710 x3019) x3548 (x1827 x1710)))
(define-fun x3195 ((x1710 x1019)) Int (ite x3231 (x1827 x1710) (x3785 x1710)))
(define-fun x3620 ((x1710 x1019)) Int (ite (= x2639 x1710) 0 (x3195 x1710)))
(define-fun x970 ((x1710 x1019)) Int (ite x3500 (x1827 x1710) (x3620 x1710)))
(define-fun x2165 ((x1710 x1019)) Int (ite (= x199 x1710) x3548 (x3587 x1710)))
(define-fun x2553 ((x1710 x1019)) Int (ite x3500 (x3587 x1710) (ite x3231 (x2165 x1710) (x3587 x1710))))
(define-fun x1270 ((x1710 Int)) Int (ite x3257 (x1530 x1710) (x3015 x1710)))
(define-fun x1432 ((x1710 Int)) Int (ite (= x1710 x2461) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1270 x1710)))
(define-fun x1880 ((x1710 Int)) Int (ite (= x1710 x75) x2725 (x1432 x1710)))
(define-fun x1233 ((x1710 Int)) Int (ite (= x901 x1710) x1088 (x1880 x1710)))
(define-fun x3879 ((x1710 x1019)) Int (ite (= x1710 x2166) x3253 (x1406 x1710)))
(define-fun x3264 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3202 x1710)))
(define-fun x2970 ((x1710 x1019)) Int (ite (= x1710 x3117) x1960 (x1453 x1710)))
(define-fun x635 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3202 x1710)))
(define-fun x3502 ((x1710 x1019)) Int (ite (= x1710 x3188) x2371 (x120 x1710)))
(define-fun x2894 ((x1710 Int)) Int (ite (= x1710 0) 1 (x3202 x1710)))
(define-fun x3847 ((x1710 x1019)) Int (ite (= x1942 x1710) x3222 (x3109 x1710)))
(define-fun x71 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x3202 x1710)))
(define-fun x1256 ((x1710 x1019)) Int (ite x3301 (x2485 x1710) (x840 x1710)))
(define-fun x497 ((x1710 x1019)) Int (ite x2041 (x460 x1710) (x88 x1710)))
(define-fun x2105 ((x1710 Int)) Int (ite (= x1710 0) 0 (x3834 x1710)))
(define-fun x3335 ((x1710 Int)) Int (ite (= x1710 0) 0 (x3834 x1710)))
(define-fun x3384 ((x1710 Int)) Int (ite (= x1710 0) 0 (x3834 x1710)))
(define-fun x3722 ((x1710 Int)) Int (ite (= x1710 0) 0 (x451 x1710)))
(define-fun x898 ((x1710 Int)) Int (ite (= x1710 0) 0 (x451 x1710)))
(define-fun x426 ((x1710 Int)) Int (ite (= x1710 0) 0 (x451 x1710)))
(define-fun x541 ((x1710 Int)) Int (ite x1664 (x395 x1710) (x2391 x1710)))
(define-fun x2648 ((x1710 Int)) Int (ite x3191 (x395 x1710) (x3480 x1710)))
(define-fun x2658 ((x1710 Int)) Int (ite x1573 (x395 x1710) (x1772 x1710)))
(define-fun x3898 ((x1710 Int)) Int (ite x3168 (x395 x1710) (x1059 x1710)))
(define-fun x3711 ((x1710 Int)) Int (ite x2075 (x541 x1710) (ite x627 (x2648 x1710) (ite x2224 (x2658 x1710) (x3898 x1710)))))
(define-fun x2250 ((x1710 Int)) Int (ite x356 (x3465 x1710) (x2936 x1710)))
(define-fun x420 ((x1710 Int)) Int (ite x2924 (x3465 x1710) (x2149 x1710)))
(define-fun x2788 ((x1710 Int)) Int (ite x1111 (x3465 x1710) (x195 x1710)))
(define-fun x1496 ((x1710 Int)) Int (ite x2565 (x3465 x1710) (x2458 x1710)))
(define-fun x1405 ((x1710 Int)) Int (ite x111 (x2250 x1710) (ite x2988 (x420 x1710) (ite x3875 (x2788 x1710) (x1496 x1710)))))
(define-fun x2310 ((x1710 Int)) Int (ite x2021 (x2059 x1710) (x777 x1710)))
(define-fun x2587 ((x1710 Int)) Int (ite x3843 (x2059 x1710) (x223 x1710)))
(define-fun x593 ((x1710 Int)) Int (ite x1716 (x2059 x1710) (x2274 x1710)))
(define-fun x741 ((x1710 Int)) Int (ite x605 (x2059 x1710) (x2191 x1710)))
(define-fun x2330 ((x1710 Int)) Int (ite x442 (x2310 x1710) (ite x1992 (x2587 x1710) (ite x2858 (x593 x1710) (x741 x1710)))))
(define-fun x590 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x487 x1710)))
(define-fun x85 ((x1710 Int)) Int (ite x2288 (x487 x1710) (x590 x1710)))
(define-fun x2803 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x487 x1710)))
(define-fun x2091 ((x1710 Int)) Int (ite x1050 (x487 x1710) (x2803 x1710)))
(define-fun x3856 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x487 x1710)))
(define-fun x3578 ((x1710 Int)) Int (ite x1990 (x487 x1710) (x3856 x1710)))
(define-fun x1615 ((x1710 Int)) Int (ite (= x1710 0) 1 (x487 x1710)))
(define-fun x3220 ((x1710 Int)) Int (ite x2225 (x487 x1710) (x1615 x1710)))
(define-fun x2231 ((x1710 Int)) Int (ite x1380 (x85 x1710) (ite x1824 (x2091 x1710) (ite x1442 (x3578 x1710) (x3220 x1710)))))
(define-fun x528 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x1743 x1710)))
(define-fun x1481 ((x1710 Int)) Int (ite x3545 (x1743 x1710) (x528 x1710)))
(define-fun x3773 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x1743 x1710)))
(define-fun x1758 ((x1710 Int)) Int (ite x3821 (x1743 x1710) (x3773 x1710)))
(define-fun x2351 ((x1710 Int)) Int (ite (= x1710 0) 1 (x1743 x1710)))
(define-fun x1375 ((x1710 Int)) Int (ite x18 (x1743 x1710) (x2351 x1710)))
(define-fun x1570 ((x1710 Int)) Int (ite (= x1710 0) 1 (x1743 x1710)))
(define-fun x3580 ((x1710 Int)) Int (ite x3932 (x1743 x1710) (x1570 x1710)))
(define-fun x118 ((x1710 Int)) Int (ite x3459 (x1481 x1710) (ite x1721 (x1758 x1710) (ite x2981 (x1375 x1710) (x3580 x1710)))))
(define-fun x1423 ((x1710 Int)) Int (ite (= x1710 0) 1 (x838 x1710)))
(define-fun x2323 ((x1710 Int)) Int (ite x96 (x838 x1710) (x1423 x1710)))
(define-fun x2074 ((x1710 Int)) Int (ite (= 0 x1710) 1 (x838 x1710)))
(define-fun x637 ((x1710 Int)) Int (ite x1082 (x838 x1710) (x2074 x1710)))
(define-fun x1591 ((x1710 Int)) Int (ite (= x1710 0) 1 (x838 x1710)))
(define-fun x2713 ((x1710 Int)) Int (ite x1551 (x838 x1710) (x1591 x1710)))
(define-fun x3438 ((x1710 Int)) Int (ite (= x1710 0) 1 (x838 x1710)))
(define-fun x2347 ((x1710 Int)) Int (ite x2559 (x838 x1710) (x3438 x1710)))
(define-fun x1095 ((x1710 Int)) Int (ite x3139 (x2323 x1710) (ite x2747 (x637 x1710) (ite x3795 (x2713 x1710) (x2347 x1710)))))
(define-fun x1648 ((x1710 Int)) Int (ite (= x1710 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2875 x1710)))
(define-fun x2475 ((x1710 Int)) Int (ite (= x1710 132) x3029 (x1648 x1710)))
(define-fun x1578 ((x1710 Int)) Int (ite (= 164 x1710) x1074 (x2475 x1710)))
(define-fun x3906 ((x1710 Int)) Int (ite (= 128 x1710) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2977 x1710)))
(define-fun x1460 ((x1710 Int)) Int (ite (= x1710 132) x3029 (x3906 x1710)))
(define-fun x1390 ((x1710 Int)) Int (ite (= 164 x1710) x3656 (x1460 x1710)))
(define-fun x2434 ((x1710 Int)) Int (ite (= 128 x1710) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x529 x1710)))
(define-fun x2035 ((x1710 Int)) Int (ite (= x1710 132) x3029 (x2434 x1710)))
(define-fun x364 ((x1710 Int)) Int (ite (= x1710 164) x345 (x2035 x1710)))
(define-fun x2818 ((x1710 Int)) Int (ite (= x1710 0) x1602 (x3267 x1710)))
(define-fun x2561 ((x1710 Int)) Int (ite (= x1710 0) x3041 (x3267 x1710)))
(define-fun x494 ((x1710 Int)) Int (ite (= x1710 0) x2792 (x3267 x1710)))
(define-fun x3201 ((x1484 Int)) Bool (=> (and (not (= 44970383829727661923261016617897238973146650624978361361029103362720544063488 x1484)) (not (= 2691771752 x1484)) (not (= 94482241256677223720308674365448432550660581809977780367718865401173155774464 x1484)) (not (= 1000000000000000000 x1484)) (not (= x1484 989455977)) (not (= 2229018723 x1484)) (not (= x1484 2234127075)) (not (= x1484 89522461602318961266474185744428785802019839140862557341176434972013554040832)) (not (= x1484 2678788150)) (not (= 56879788782001134333110164298630386859921104006521148999079851869125721718784 x1484)) (not (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x1484)) (not (= x1484 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1484 2109788624)) (not (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 x1484)) (not (= x1484 2861565780)) (not (= x1484 18446744073709551615)) (not (= 1475734106 x1484)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1484)) (not (= x1484 1931414571)) (not (= 64481368622683354557555711714629296119639875834729404553039716062438103187456 x1484)) (not (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1484)) (not (= 3320572652 x1484)) (not (= 114138022719912475680867045629478960338713192110453415424194996738542475935744 x1484)) (< 10000 x1484) (not (= 3583811254 x1484)) (not (= 1857877511 x1484)) (not (= 988262939 x1484)) (not (= 2929553584 x1484)) (not (= x1484 2796547477)) (not (= x1484 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1484 1265048712)) (not (= x1484 1590201465)) (not (= 2459953569 x1484)) (not (= x1484 4233614559)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1484)) (not (= x1484 1865448899)) (not (= x1484 310377888)) (not (= 405663989 x1484)) (not (= 2281136899 x1484)) (not (= x1484 2858086653)) (not (= 3199929250 x1484)) (not (= x1484 1832238993)) (not (= x1484 2835717307)) (not (= 1461501637330902918203684832716283019655932542975 x1484)) (not (= 2991318663 x1484)) (not (= 1830112933 x1484)) (not (= x1484 129058084)) (not (= 24044834009420335638544845215851342251227478490780828673611325350056707489792 x1484)) (not (= x1484 2391746891)) (not (= x1484 2217467699)) (not (= x1484 115792089237316195423570985008687907853269984665640564039457)) (not (= x1484 4294967296)) (not (= x1484 79266373)) (not (= x1484 1461501637330902918203684832716283019655932542976)) (not (= x1484 60231946789637257468838019015344037944473233080083133266033501538020963123200)) (not (= x1484 50292402827334880472107169365697159231523039388532301717704428044325102813184)) (not (= x1484 26675680369413430104207330802600748686362808878094982966429686717365230764032)) (not (= x1484 1466279372)) (not (= x1484 1856199391))) (not ((_ is x955) (x512 x1484)))))
(assert (= (x955 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x512 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (= x3523 (and x2705 x3306)))
(assert (= (x3873 (x512 x1152)) x1152))
(assert (= (+ 1 (x3873 x2104)) (x3873 (x3866 x2104 1))))
(assert (= x1167 (=> (and (= x2914 x762) (= x3390 x1335) (= x3619 x2745) (= x2631 x769) (= x2369 x924)) x1754)))
(assert (= (and x3482 x1679) x3560))
(assert (= x1129 (and x1131 x3167)))
(assert (= (x955 56879788782001134333110164298630386859921104006521148999079851869125721718784) (x512 56879788782001134333110164298630386859921104006521148999079851869125721718784)))
(assert (= x28 (and x2064 x745)))
(assert (= (x3873 (x955 2281136899)) 2281136899))
(assert (x2022 x987))
(assert (x2022 x3008))
(assert (= x100 (and x2415 x3579)))
(assert (x2022 x3386))
(assert (x2022 x805))
(assert (x2022 x1538))
(assert (= x740 (and (not x3851) x2163)))
(assert (= (and (not x763) x1956) x2349))
(assert (= (+ (x3873 x2766) 1) (x3873 (x3866 x2766 1))))
(assert (= x3339 (and x2268 x296)))
(assert (x2022 x3199))
(assert (x2022 x2641))
(assert (x2022 x2180))
(assert (x2022 x2341))
(assert (x2022 x3345))
(assert (= (and x3701 x3223) x3342))
(assert (= x121 (x3873 (x512 x121))))
(assert (= (and x2533 (not x2893)) x3074))
(assert (x2022 x821))
(assert (= (x3873 (x512 x495)) x495))
(assert (= (and (not x228) x2719) x514))
(assert (= (x3873 (x512 x1699)) x1699))
(assert (= (x955 1461501637330902918203684832716283019655932542976) (x512 1461501637330902918203684832716283019655932542976)))
(assert (= x1601 (and x3636 x1888)))
(assert (x2022 x1251))
(assert (= (x3873 (x3866 x2610 1)) (+ 1 (x3873 x2610))))
(assert (=> (>= 10000 x407) (= (x512 x407) (x955 x407))))
(assert (= (and x3870 (not x3565)) x3445))
(assert (x2022 x2083))
(assert (x2022 x3346))
(assert (= (x3873 (x955 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x2022 x1989))
(assert (x2022 x3796))
(assert (= (x512 2991318663) (x955 2991318663)))
(assert (x2022 x2698))
(assert (x2022 x2798))
(assert (= (and x1070 (not x2448)) x448))
(assert (=> (>= 10000 x2583) (= (x512 x2583) (x955 x2583))))
(assert (x2022 x510))
(assert (x2022 x251))
(assert (= 0 (x2934 416)))
(assert (= (x3873 (x955 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2022 x3499))
(assert (= (=> (and (= x1652 x1719) (= (x3866 x2639 1) x3739) (= x2562 (x3866 x3739 1)) (= x2639 (x534 (x512 x2725) x3197 0)) (= x2744 x2725)) x2921) x3189))
(assert (= (x3873 (x3866 x2056 1)) (+ (x3873 x2056) 1)))
(assert (= 2691771752 (x3873 (x955 2691771752))))
(assert (x2022 x3369))
(assert (x2022 x2286))
(assert (= x2046 (and x3387 (not x3741))))
(assert (= x3644 (and (not x3863) x1363)))
(assert (x3201 x2768))
(assert (x2022 x889))
(assert (= 2861565780 (x3873 (x955 2861565780))))
(assert (= x3804 (and x918 x1510)))
(assert (x2022 x2778))
(assert (= (and x2455 x430) x315))
(assert (x2022 x449))
(assert (= (and x2845 x2340) x2618))
(assert (x2022 x2835))
(assert (x2022 x2849))
(assert (= x2758 (and (not x1653) x3506)))
(assert (x2022 x1039))
(assert (x2022 x1711))
(assert (= (x955 1830112933) (x512 1830112933)))
(assert (= (and x1641 x2279) x1172))
(assert (x2022 x2311))
(assert (x3201 x2044))
(assert (= 2234127075 (x3873 (x955 2234127075))))
(assert (= (=> (and (= x3515 x3199) (= x3028 x1470)) x559) x1853))
(assert (x2022 x2428))
(assert (= (+ (x3873 x1218) 1) (x3873 (x3866 x1218 1))))
(assert (= (and x2719 x228) x1892))
(assert (= x2214 (or x229 x2350)))
(assert (=> (>= 10000 x1715) (= (x512 x1715) (x955 x1715))))
(assert (= (+ 2 (x3873 x3634)) (x3873 (x3866 x3634 2))))
(assert (= x3568 (or x2935 x781 x125 x1933 x37 x609)))
(assert (= (+ 1 (x3873 x2339)) (x3873 (x3866 x2339 1))))
(assert (= (and x1403 x1906) x1155))
(assert (x2022 x2609))
(assert (x2022 x968))
(assert (= (+ 1 (x3873 x149)) (x3873 (x3866 x149 1))))
(assert (= (and x289 x141) x3723))
(assert (x2022 x721))
(assert (x2022 x2681))
(assert (= x3548 (x3873 (x512 x3548))))
(assert (x2022 x737))
(assert (= (or (and x1283 x3279) (and x3571 x1817) (and x3886 x2337) (and x2199 (not x225)) x3599 x3786) x1558))
(assert (x2022 x2725))
(assert (x2022 x1154))
(assert (x2022 x3431))
(assert (x2022 x1537))
(assert (x2022 x552))
(assert (x2022 x259))
(assert (= (=> (and (= x3533 x1387) (= x2479 0)) x1093) x2423))
(assert (= (x3873 (x512 x1174)) x1174))
(assert (= (+ 1 (x3873 x654)) (x3873 (x3866 x654 1))))
(assert (= (x955 2929553584) (x512 2929553584)))
(assert (= (x955 60231946789637257468838019015344037944473233080083133266033501538020963123200) (x512 60231946789637257468838019015344037944473233080083133266033501538020963123200)))
(assert (x2022 x3495))
(assert (= x683 (=> (and (= x793 x2691) (= x2480 x2680)) x2963)))
(assert (= x1130 (and (not x659) x2477)))
(assert (= (+ 1 (x3873 x1668)) (x3873 (x3866 x1668 1))))
(assert (= (x3873 (x3866 x386 1)) (+ 1 (x3873 x386))))
(assert (= (and (not x670) x2427) x3300))
(assert (= x3029 (x3873 (x512 x3029))))
(assert (x2022 x1828))
(assert (= x3340 (and (not x1149) x1490)))
(assert (= x1985 (and (not x718) x2633)))
(assert (x2022 x3042))
(assert (=> (<= x2813 10000) (= (x512 x2813) (x955 x2813))))
(assert (x3201 x1592))
(assert (= (=> (= x618 (= 0 x439)) (and (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x642) (and (= (<= x642 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x642 32))) x918) (not x618)) (and (=> (and (and (= 1 x504) (= x3790 32)) (not x918)) x1303) (=> x918 x3625))) (=> x618 x3625))) x961))
(assert (x2022 x3467))
(assert (= (=> (and (= x1836 (< 0 x56)) (= (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3045) x1770) (<= x56 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x3056 0)) (= x56 (x1861 x3627)) (= (x3155 (+ x1504 31)) x3045) (= (x3155 (+ x1770 x1518)) x2950) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1504) (and (= true (<= x1504 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1504 32)))) (= x1582 (x2863 x1518)) (>= x56 0)) (and (=> (and (not x1836) (and (= x831 0) (= x3649 x1088))) x1117) (=> (and (and (and (= x107 (div x3591 1000000000000000000)) (= (x1861 x3627) x1298) (= (* x1298 x1582) x3591) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1298) (= (< x1088 x107) x3701) (< (* x1582 x1298) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1298)) (or (and (and (= x1594 x3051) (= x1594 (x3331 (- x1088 x107))) (= x994 x107) (not (> x107 x3891))) (not x3701)) (and (and (= x1379 (* x249 1000000000000000000)) (= (ite x143 1 0) x3562) (= x3051 0) (= x1088 x994) (= x2086 (div x1379 x1582)) (>= x2168 0) (= (< 115792089237316195423570985008687907853269984665640564039457 x3891) x143) (= 0 x3562) (< (* x249 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1333 (x3331 (- x2168 x2179))) (= (mod (* x1088 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x249) (= x2179 (div x2086 1000000000000000000)) (not (< x2168 x2179)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2168) (> x1582 0) (= (x1861 x3627) x2168)) x3701))) x1836) x2751))) x416))
(assert (= x1498 (and x3022 (not x1462))))
(assert (= x129 (=> (and (= x371 x574) (= x270 0)) x2439)))
(assert (x2022 x1638))
(assert (x2022 x1299))
(assert (= x323 (and x3485 x1619)))
(assert (x3201 x2953))
(assert (x2022 x738))
(assert (x2022 x3460))
(assert (x2022 x1821))
(assert (= (and (not x938) x1941) x1575))
(assert (= x286 (and x1805 x3733)))
(assert (x3201 x712))
(assert (= x2967 (or x401 x2518)))
(assert (= (=> (and (and (<= 0 x742) (= (< x742 x227) x2455) (<= x742 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and (= x227 x139) x2455) (and (not x2455) (= 0 x139)))) x422) x2579))
(assert (= (and (not x3175) x3921) x353))
(assert (= (x3873 (x512 x1150)) x1150))
(assert (= x1658 (x3873 (x512 x1658))))
(assert (x2022 x2387))
(assert (x2022 x2479))
(assert (= (and x1679 (not x3482)) x2573))
(assert (x2022 x2666))
(assert (= x297 (and x275 x2281)))
(assert (= (or x2527 x953) x2273))
(assert (x2022 x1577))
(assert (= (and x265 (not x1184)) x881))
(assert (x2022 x318))
(assert (x2022 x1634))
(assert (= (and x1802 x1630) x687))
(assert (= x1224 (and x1077 x620)))
(assert (= x3812 (=> (and (= x1996 x1470) (= x3515 x3346)) x559)))
(assert (x2022 x1953))
(assert (= (and (not x1343) x2270) x1455))
(assert (= (and x109 x789) x3064))
(assert (= (or x1741 x2996) x2350))
(assert (x3201 x2813))
(assert (=> (>= 10000 x2929) (= (x955 x2929) (x512 x2929))))
(assert (x2022 x2116))
(assert (= (and x1288 x550) x360))
(assert (= x394 (and x1702 x2346)))
(assert (= x268 (and x2088 (not x3814))))
(assert (= x704 (and x3223 (not x3701))))
(assert (x2022 x3669))
(assert (x2022 x830))
(assert (= (x3873 (x3866 x221 1)) (+ 1 (x3873 x221))))
(assert (= (x3873 (x512 x2824)) x2824))
(assert (= (+ (x3873 x2766) 2) (x3873 (x3866 x2766 2))))
(assert (= (not (and (< x3213 1461501637330902918203684832716283019655932542976) (= x2624 (x534 (x512 x2844) x3197 0)) (>= 1461501637330902918203684832716283019655932542975 x3213) (= x3213 (x1497 x3714)) (= x3714 (x3866 x2624 1)) (>= x3213 0))) x3569))
(assert (x2022 x3598))
(assert (x2022 x2102))
(assert (= (or x1441 x895) x832))
(assert (x2447 x3449))
(assert (x2022 x1347))
(assert (x2022 x370))
(assert (=> (<= x1974 10000) (= (x955 x1974) (x512 x1974))))
(assert (= x3234 (and x2238 x1901)))
(assert (= (and x211 (not x1242)) x3673))
(assert (= (and x2415 (not x3579)) x3636))
(assert (= (x3873 (x955 2991318663)) 2991318663))
(assert (=> (>= 10000 x496) (= (x512 x496) (x955 x496))))
(assert (= x2208 (and x2404 x3000)))
(assert (x2022 x2189))
(assert (= x1775 (or x3720 x3311)))
(assert (= (=> (and (= x1791 x3515) (= x1470 x3537)) x559) x688))
(assert (= (and x3239 (not x3293)) x931))
(assert (= x1924 (and x319 (not x2657))))
(assert (x2022 x2608))
(assert (= (or x3018 x3523) x2247))
(assert (x2022 x1313))
(assert (x2022 x884))
(assert (= (=> (and (or (not x3553) x3553) (= (= 0 x2680) x3553)) x252) x2963))
(assert (= x2368 (and x1436 x2282)))
(assert (= x693 (x3873 (x512 x693))))
(assert (x2022 x3942))
(assert (x2022 x1386))
(assert (= x2406 (and (not x238) x554)))
(assert (x2022 x3254))
(assert (= x1237 (and x3214 x1543)))
(assert (x2022 x1835))
(assert (= (and x3393 x2706) x1170))
(assert (= (and x1370 x1037) x3156))
(assert (= (and x2575 x1782) x1110))
(assert (= (and x1803 (not x1047)) x1917))
(assert (= (and x3427 x3840) x2617))
(assert (x3201 x3044))
(assert (= (and x1367 x1114) x2202))
(assert (x2022 x1548))
(assert (= (and x3814 x2088) x656))
(assert (= (and (=> (and (not x3857) (and (= x456 x2844) (= 1 x3450))) x1022) (=> x3857 x3569)) x3129))
(assert (x2022 x2369))
(assert (= (and x3352 (not x2597)) x1179))
(assert (x2022 x1701))
(assert (x2022 x1279))
(assert (x2022 x906))
(assert (x3201 x124))
(assert (= (+ (x3873 x2015) 2) (x3873 (x3866 x2015 2))))
(assert (= x3536 (and (not x2861) x2951)))
(assert (x2022 x1263))
(assert (=> (<= x1589 10000) (= (x955 x1589) (x512 x1589))))
(assert (= (x3873 (x3866 x1352 2)) (+ (x3873 x1352) 2)))
(assert (x2022 x1238))
(assert (x2022 x3181))
(assert (= (=> (and (= 0 x815) (= x2129 x2121)) x3062) x1632))
(assert (x2022 x1737))
(assert (x2022 x2538))
(assert (x2022 x193))
(assert (= (and (not x1112) x2868) x2220))
(assert (= x1193 (or x3114 x3168)))
(assert (= (+ (x3873 x1583) 2) (x3873 (x3866 x1583 2))))
(assert (x2022 x624))
(assert (x2022 x771))
(assert (x2022 x46))
(assert (= (=> (= x2909 x3520) x2320) x415))
(assert (= (and (not x1973) x1964) x3937))
(assert (= x1561 (and x2883 (not x2228))))
(assert (= (and (not x482) x1985) x2940))
(assert (= x2552 (and (not x3171) x794)))
(assert (x2022 x713))
(assert (x2022 x603))
(assert (= (and x32 x1458) x2388))
(assert (= (=> (and (or (and (not x3837) (and (= x2408 x2109) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2408 x2891)) (= x3268 x1821) (= (div x1571 1000000000000000000) x2408) (= x3379 x3736) (= x3736 (+ x2109 x2242)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x3891 x462)) (= x2891 x2242) (= (* x462 x3891) x1571))) (and (and (= x1821 x3268) (= x2891 x3379)) x3837)) (and (= (div x459 1000000000000000000) x3183) (not (or (and (= true (<= x307 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x307 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x307))) (= (x1241 x2079) x2419) (= x1972 (* x2912 x462)) (= x1821 x2864) (>= x1987 0) (< (* x2335 x1215) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x462 x2912) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3552 x3196) (= (x3155 (+ x307 31)) x1314) (= x3531 (div x1972 1000000000000000000)) (= x2157 (* x1215 x2335)) (= (> x3491 0) x3837) (= (x3155 (+ x1264 x2079)) x919) (not (< x3899 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1169 x1987)) (= x2882 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3531))) (not (> 0 x2882)) (= x1264 (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1314)) (= x2864 (div x2157 1000000000000000000)) (= (div x1483 1000000000000000000) x3552) (not (= x1434 0)) (= x2912 (+ x3196 x894)) (< (+ x3183 x3552) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2891 x3531) (= x894 x3183) (= x1001 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= (* x1987 x1169) x1483) (= x3491 (x3331 (- x1001 x2611))) (= (* x1279 x2419) x459) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1987) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2864)) x3899) (= x1987 (x2601 x2807)) (= (x534 (x512 x2611) (x955 165) 0) x2807) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1279 x2419)))) x2125) x3111))
(assert (x2022 x3238))
(assert (=> (<= x3432 10000) (= (x512 x3432) (x955 x3432))))
(assert (x2022 x712))
(assert (x2022 x1194))
(assert (= (and x1568 x3551) x2823))
(assert (= (and x976 x1521) x478))
(assert (= (x3873 (x3866 x386 2)) (+ 2 (x3873 x386))))
(assert (= x3212 (and x3849 (not x2345))))
(assert (= (and x672 x982) x3933))
(assert (=> (<= x2550 10000) (= (x512 x2550) (x955 x2550))))
(assert (= x2952 (and (not x2884) x657)))
(assert (x3201 x1954))
(assert (x2022 x1025))
(assert (= (and x1028 x1063) x43))
(assert (x2022 x1078))
(assert (= x1257 (=> (= (= x123 0) x2913) (and (=> (and (= x934 x3908) x2913) x2082) (=> (and (not x2913) (= (or (and (= true (<= x3657 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3657)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3657)) x617)) (and (=> (and (not x617) (and (= 32 x2745) (= x3908 x769) (= x1335 1))) x1167) (=> (and (= x3908 x934) x617) x2082)))))))
(assert (x2022 x290))
(assert (x2022 x1665))
(assert (= x2634 (or x909 x1425 x2302 x3497)))
(assert (= x1156 (and (=> (and (not x1458) (and (= x1872 x1017) (= x2817 0))) x2632) (=> (and (and (and (= (* x1427 x3594) x412) (= x1427 (x2135 x723)) (>= x1427 0) (= x723 (x3866 x1168 1)) (= x1295 (x534 (x512 x693) (x955 158) 0)) (not (> 0 x3649)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1427 x3594)) (<= x1427 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x736 (< x2308 x2047)) (= (x534 (x512 x496) x1295 0) x1168) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x693) (= x3649 x2308) (= x2047 (div x412 1000000000000000000))) (or (and x736 (and (= x764 (div x2360 1000000000000000000)) (< (* 1000000000000000000 x2826) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2945 x1168) x2002) (= x150 x1097) (>= x2257 0) (= (div x3727 x3594) x2360) (= (div x703 x70) x3261) (= (ite x2701 1 0) x1243) (<= 0 x2002) (= x2304 x3649) (<= x2002 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x703 (* 1000000000000000000 x2826)) (= (mod (* 1000000000000000000 x2308) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1492) (< 0 x70) (= x150 (+ x3850 x3077)) (= x2701 (> x2308 115792089237316195423570985008687907853269984665640564039457)) (< 0 x3594) (= x257 (div x3261 1000000000000000000)) (= x257 x3850) (= x2257 (x2135 x723)) (= (ite x2612 1 0) x306) (not (< x2257 x764)) (= 0 x306) (= x2002 x3077) (= (x3331 (- x2257 x764)) x2737) (= x2612 (> x2308 115792089237316195423570985008687907853269984665640564039457)) (= x2826 (mod (* 1000000000000000000 x2308) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x1492)) (= x2737 x389) (= x1243 0) (= (* 1000000000000000000 x1492) x3727) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2257) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2002 x257)))) (and (not x736) (and (= x1580 (ite x1848 1 0)) (= x540 x822) (= (div x1011 x70) x2741) (= 0 x1580) (= x399 (+ x2158 x540)) (= x2158 x160) (= (div x2741 1000000000000000000) x822) (not (< x2978 0)) (= (< 115792089237316195423570985008687907853269984665640564039457 x2047) x1848) (= x2047 x3614) (>= x160 0) (= x2978 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2047))) (< 0 x70) (= x389 0) (< (+ x822 x160) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x160) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2176 1000000000000000000)) (= x399 x1097) (= x1011 (* 1000000000000000000 x2176)) (= x3614 x2304) (= x2176 (mod (* 1000000000000000000 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x160 (x2945 x1168)))))) x1458) x3140))))
(assert (x2022 x1937))
(assert (x2022 x1335))
(assert (= (and x1083 (not x1708)) x1569))
(assert (x2022 x804))
(assert (= (and (not x1888) x3636) x3934))
(assert (= (and x1639 x30) x2866))
(assert (x2022 x2123))
(assert (= 64481368622683354557555711714629296119639875834729404553039716062438103187456 (x3873 (x955 64481368622683354557555711714629296119639875834729404553039716062438103187456))))
(assert (x2022 x2371))
(assert (x2022 x2931))
(assert (= true x3684))
(assert (= x2980 (=> (and (or (and (and (= (x2265 (x512 x266)) x2263) (= (x3155 (+ 4 x2461)) x3608) (= x3136 (x3155 (+ 32 x3608))) (> 1461501637330902918203684832716283019655932542976 x266) (not (= 0 x2263)) (>= 1461501637330902918203684832716283019655932542975 x266) (< x3911 4294967296) (= (x3155 (+ 32 x3136)) x1226) (= x2353 (x2182 1461501637330902918203684832716283019655932542975 x544)) (>= x266 0)) (not x1009)) x1009) (and (<= x266 1461501637330902918203684832716283019655932542975) (= x1009 (= 0 x266)) (>= x266 0) (> 1461501637330902918203684832716283019655932542976 x266))) x377)))
(assert (= x137 (and x3178 x2470)))
(assert (= (x955 405663989) (x512 405663989)))
(assert (= x1877 (or x1124 x1018 x448 x3540)))
(assert (x2022 x2943))
(assert (= x3258 (and x2940 (not x3187))))
(assert (x2022 x2746))
(assert (x2022 x3510))
(assert (=> (>= 10000 x3146) (= (x512 x3146) (x955 x3146))))
(assert (= (or x2468 x2593) x1503))
(assert (x2022 x2962))
(assert (x2022 x2840))
(assert (= x3235 (and (not x897) x411)))
(assert (= (and x2327 x328) x1205))
(assert (= x1766 (or x2749 x3788)))
(assert (x2022 x3797))
(assert (x2022 x3428))
(assert (x3201 x1732))
(assert (x2022 x2918))
(assert (x2022 x1188))
(assert (= (x3873 (x512 x2550)) x2550))
(assert (= (or x514 x1563 x3474 x2866 x656) x3821))
(assert (=> (>= 10000 x1592) (= (x955 x1592) (x512 x1592))))
(assert (= (x3873 (x3866 x3629 1)) (+ 1 (x3873 x3629))))
(assert (= (or x1172 x1071) x3080))
(assert (x2022 x2367))
(assert (x2022 x357))
(assert (= x2287 (=> (and (or (and (= x3671 x3039) x277) (and (= 0 x3039) (not x277))) (and (= (x3866 x3468 2) x326) (= (x534 (x512 x1140) x3538 0) x2255) (= (x534 (x512 x1140) x386 0) x3468) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3671) (= (x3866 x2255 2) x3245) (= (x61 x326) x647) (= x1534 (x534 (x512 x2286) (x955 158) 0)) (= x2286 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= x3671 (x1332 x1593)) (>= x742 0) (= x2428 (x2182 1461501637330902918203684832716283019655932542975 x544)) (<= x647 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x534 (x512 x352) (x955 154) 0) x386) (= (x1415 x1208) x242) (<= 0 x3671) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x352) (<= 0 x647) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x242) (>= x242 0) (>= x1272 0) (= x1593 (x3866 x1208 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1272) (= x1208 (x534 (x512 x1140) x1534 0)) (= x277 (< x742 x3671)) (= x3538 (x534 (x512 x2428) (x955 155) 0)) (= x1272 (x1748 x3245)))) x3488)))
(assert (= x1393 (and x527 x2506)))
(assert (= x2711 (and x3402 x1876)))
(assert (= (and x161 x673) x2808))
(assert (x2022 x2162))
(assert (x2022 x70))
(assert (= x558 (and x2906 (not x3272))))
(assert (= (and (not x2569) x2096) x951))
(assert (= (and (not x2033) x1801) x2574))
(assert (x2022 x2147))
(assert (x2022 x882))
(assert (x2022 x1457))
(assert (x2022 x1255))
(assert (x2022 x2360))
(assert (= (and (not x296) x2268) x3914))
(assert (x2022 x3236))
(assert (x2022 x3083))
(assert (x2022 x1020))
(assert (= x3336 (and x3247 x1993)))
(assert (x2022 x443))
(assert (= (or x2577 x2188) x2650))
(assert (= x2178 (and x1469 x1531)))
(assert (x2022 x3253))
(assert (x2022 x2739))
(assert (= x948 (x3873 (x512 x948))))
(assert (= x1763 (or x137 x181 x973 x2989 x3219 x1804)))
(assert (= x1122 (and (not x3837) x1173)))
(assert (= x2660 (and x2398 (not x3833))))
(assert (= x2326 (and x1079 x79)))
(assert (= x788 (and x3475 x145)))
(assert (x3356 x3890))
(assert (x2022 x1658))
(assert (x2022 x2539))
(assert (x2022 x3061))
(assert (= x3824 (and x695 (not x29))))
(assert (= 26675680369413430104207330802600748686362808878094982966429686717365230764032 (x3873 (x955 26675680369413430104207330802600748686362808878094982966429686717365230764032))))
(assert (= (+ (x3873 x1239) 1) (x3873 (x3866 x1239 1))))
(assert (= (x3873 (x3866 x3777 2)) (+ (x3873 x3777) 2)))
(assert (x2022 x439))
(assert (= x176 (or x2634 x479)))
(assert (x2022 x2432))
(assert (x2022 x2653))
(assert (= (and x466 (not x2841)) x641))
(assert (x2022 x2600))
(assert (x2447 x2180))
(assert (x2022 x3179))
(assert (= (and x3479 (not x2847)) x437))
(assert (= x1585 (and x2327 (not x328))))
(assert (= x1364 (and x1653 x3506)))
(assert (x2022 x1454))
(assert (x2022 x3458))
(assert (x3201 x2583))
(assert (= (=> (and (= x737 0) (= x1605 x1844) (= x1115 x2305)) x34) x2026))
(assert (x2022 x2566))
(assert (x2022 x1447))
(assert (= (and x3272 x2906) x578))
(assert (= x237 (and x1540 x3426)))
(assert (= x1123 (=> (= (= x172 x1284) x1653) (and (=> (and (= x3920 (> x172 0)) (not x1653)) (and (=> (and (and (or (and (not x1540) (and (= (x3866 x1368 1) x2661) (= (x534 (x512 x1592) x2766 0) x1368))) (and x1540 (= (x3866 x2766 1) x1984))) (and (< x495 1461501637330902918203684832716283019655932542976) (>= x1213 0) (<= x1213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1213 0)) (= x2271 (x3866 x2874 1)) (= (x3055 x2271) x495) (= x292 (x3155 (+ 96 x1872))) (<= 0 x495) (> 1461501637330902918203684832716283019655932542976 x1592) (>= 1461501637330902918203684832716283019655932542975 x495) (= x2874 (x534 (x512 x496) x2766 0)) (<= 0 x1592) (= x1540 (= x1592 0)) (= x1213 (x2213 x3017)) (= (x3866 x2271 1) x3017) (<= x1592 1461501637330902918203684832716283019655932542975) (= x1592 (x1897 x2874)))) x3920) x1316) (=> (and (= x1311 x1872) (not x3920)) x3121))) (=> (and x1653 (= x498 x1872)) x2579)))))
(assert (= (=> (and (= (= 0 x2148) x2555) (or x2555 (not x2555))) x2203) x2412))
(assert (= x859 (and x475 x1871)))
(assert (x2022 x1779))
(assert (= (and (not x1961) x2172) x2094))
(assert (= (+ (x3873 x853) 1) (x3873 (x3866 x853 1))))
(assert (= (and x1048 (not x2399)) x1449))
(assert (=> (<= x1954 10000) (= (x512 x1954) (x955 x1954))))
(assert (x2022 x3919))
(assert (x2022 x3028))
(assert (x2022 x1373))
(assert (= x87 (and x1964 x1973)))
(assert (= (or x2322 x3876) x3295))
(assert (= (x3873 (x3866 x2132 2)) (+ 2 (x3873 x2132))))
(assert (= (and (not x893) x286) x1543))
(assert (x2022 x1115))
(assert (x2022 x3734))
(assert (x2022 x3525))
(assert (x2022 x827))
(assert (= (and (not x570) x2410) x2005))
(assert (x2022 x855))
(assert (=> (>= 10000 x2098) (= (x512 x2098) (x955 x2098))))
(assert (= (and x3880 x3882) x1882))
(assert (= (and x1034 x1814) x125))
(assert (x2022 x3457))
(assert (x2022 x769))
(assert (x2022 x856))
(assert (x2022 x2488))
(assert (= (x3873 (x512 x2635)) x2635))
(assert (= x3712 (x3873 (x512 x3712))))
(assert (x2022 x226))
(assert (=> (<= x3457 10000) (= (x955 x3457) (x512 x3457))))
(assert (x2022 x3575))
(assert (= x2322 (and x1830 x3364)))
(assert (x2022 x1837))
(assert (= x3252 (or x622 x2000)))
(assert (= (x3873 (x3866 x3334 1)) (+ 1 (x3873 x3334))))
(assert (= (and x2267 (not x3177)) x546))
(assert (x2022 x3624))
(assert (= (x3873 (x512 x2762)) x2762))
(assert (= (and x1305 x2414) x545))
(assert (= (or x754 x1094 x3547 x3134 x2275) x1082))
(assert (= (x955 44970383829727661923261016617897238973146650624978361361029103362720544063488) (x512 44970383829727661923261016617897238973146650624978361361029103362720544063488)))
(assert (= x1679 (and x2965 (not x108))))
(assert (= (or x3226 x1498) x1927))
(assert (x2447 x2643))
(assert (x2022 x1217))
(assert (= (x3873 (x955 2796547477)) 2796547477))
(assert (= x2280 (and x659 x2477)))
(assert (= (+ (x3873 x1024) 2) (x3873 (x3866 x1024 2))))
(assert (= x2268 (and (not x1422) x3943)))
(assert (x3201 x1589))
(assert (x2022 x2760))
(assert (x2022 x1329))
(assert (x2022 x1762))
(assert (=> (>= 10000 x3831) (= (x512 x3831) (x955 x3831))))
(assert (= (=> (and (= x2148 x585) (= x372 x1807)) x2412) x2588))
(assert (= x566 (and x1903 x2316)))
(assert (= (or x1601 x17 x100 x2961 x374 x3822) x1664))
(assert (= (x3873 (x512 x158)) x158))
(assert (= x969 (and (not x1786) x478)))
(assert (x2022 x1287))
(assert (x2022 x972))
(assert (x2022 x2729))
(assert (= x1429 (and x2984 (not x2053))))
(assert (= x780 (or x201 x679)))
(assert (x2022 x2817))
(assert (= (and (=> (and (and (= x1637 x1828) (= x747 x2583) (= x2766 x2992)) x2937) x3374) (=> (and (not x2937) (and (= x1635 x747) (= 1 x3700))) x837)) x776))
(assert (= (or x1877 x9) x2732))
(assert (x2022 x3182))
(assert (x2022 x3002))
(assert (x1976 x1951))
(assert (= x1956 (and (not x2723) x1090)))
(assert (=> (<= x2886 10000) (= (x955 x2886) (x512 x2886))))
(assert (= (and x35 x1126) x1389))
(assert (x2022 x3198))
(assert (x2022 x1623))
(assert (x2022 x2580))
(assert (= (and (not x1740) x2437) x1331))
(assert (= (and (not x3920) x2758) x229))
(assert (=> (<= x747 10000) (= (x955 x747) (x512 x747))))
(assert (= x803 (or x1920 (and (not x324) x98))))
(assert (x2022 x2421))
(assert (x2022 x2929))
(assert (x2022 x2073))
(assert (x2022 x594))
(assert (x2022 x271))
(assert (= (and x3325 x3781) x1881))
(assert (x2022 x320))
(assert (= (or x1858 x1930) x597))
(assert (x2022 x20))
(assert (= x3432 (x3873 (x512 x3432))))
(assert (= (x512 1590201465) (x955 1590201465)))
(assert (= (x955 2234127075) (x512 2234127075)))
(assert (= x2169 (and x1628 (not x388))))
(assert (x2022 x2120))
(assert (x2022 x345))
(assert (x2022 x1190))
(assert (= (x3873 (x3866 x3627 2)) (+ 2 (x3873 x3627))))
(assert (x2022 x1616))
(assert (x2022 x3222))
(assert (= (and x1708 x1083) x1595))
(assert (x2022 x351))
(assert (= x3205 (and (not x3549) x1)))
(assert (x2022 x615))
(assert (x2022 x3416))
(assert (x2022 x3367))
(assert (= (and (not x1604) x3556) x3695))
(assert (= (x3873 (x955 1830112933)) 1830112933))
(assert (= x954 (and x808 x891)))
(assert (= (x3873 (x512 x987)) x987))
(assert (x2022 x2079))
(assert (x2022 x3607))
(assert (=> (<= x712 10000) (= (x955 x712) (x512 x712))))
(assert (= x3377 (and x869 x1399)))
(assert (x2022 x1301))
(assert (= x837 (=> (and (or (and (and (or (and x39 (and (= (x534 (x512 x2869) x2766 0) x1668) (= x3734 (x3155 (+ 96 x1311))) (> 1461501637330902918203684832716283019655932542976 x2869) (= x1192 (x534 (x512 x1635) x2766 0)) (= (x3866 x1668 1) x2669) (= x2869 (x3313 x406)) (= (x3866 x1739 1) x3652) (= x406 (x534 (x512 x1635) x2766 0)) (= x2902 x3734) (>= x2869 0) (<= x2869 1461501637330902918203684832716283019655932542975) (= x3334 (x534 (x512 x496) x2766 0)) (= (x3866 x3334 1) x1739))) (and (not x39) (and (= (x3866 x3629 1) x413) (= x974 (x534 (x512 x496) x2766 0)) (= x500 x2902) (= (x3155 (+ x1311 96)) x500) (= (x3866 x974 1) x3629) (= (x534 (x512 x1635) x2766 0) x3132)))) (and (= x39 (> x2440 0)) (<= 0 x3757) (= x2440 (x3331 (- x1635 x3757))) (>= 1461501637330902918203684832716283019655932542975 x3757) (= (x3122 x2830) x3757) (< x3757 1461501637330902918203684832716283019655932542976))) x2401) (and (not x2401) (and (and (<= 0 x1078) (= x1077 (= x1078 0)) (= x1078 (x3122 x2830)) (>= 1461501637330902918203684832716283019655932542975 x1078) (> 1461501637330902918203684832716283019655932542976 x1078)) (or (and x1077 (and (= x2582 x2902) (= (x534 (x512 x496) x2766 0) x3354) (= x2582 (x3155 (+ x1311 96))) (= x2317 (x3866 x1494 1)) (= x1339 (x3866 x2830 1)) (= x1494 (x3866 x3354 1)))) (and (and (= x1916 x2902) (< x2798 1461501637330902918203684832716283019655932542976) (= x2798 (x1055 x114)) (<= x2798 1461501637330902918203684832716283019655932542975) (= x3776 (x3866 x1792 1)) (= x1076 (x534 (x512 x2798) x2766 0)) (= x3241 (x534 (x512 x496) x2766 0)) (<= 0 x2798) (= x1792 (x3866 x3241 1)) (= (x3155 (+ 96 x1311)) x1916) (= (x3866 x1076 1) x2482) (= x114 (x3866 x2830 1))) (not x1077)))))) (= (ite (< x3700 x720) (not (= x1635 0)) (< x3700 x720)) x2401)) x2511)))
(assert (= (and (not x198) x809) x655))
(assert (x2022 x2596))
(assert (= (x512 1000000000000000000) (x955 1000000000000000000)))
(assert (= x2041 (and x472 x3080)))
(assert (= (not (and (> 1461501637330902918203684832716283019655932542976 x165) (<= 0 x165) (= (x534 (x512 x2824) x3001 0) x2755) (<= x165 1461501637330902918203684832716283019655932542975) (= x3128 (x3866 x2755 1)) (= (x497 x3128) x165))) x1229))
(assert (= x2327 (and x1138 (not x2306))))
(assert (x2022 x848))
(assert (= (x3873 (x512 x407)) x407))
(assert (x2022 x3563))
(assert (= x1607 (and (not x1131) x3167)))
(assert (= (or x558 x578) x1013))
(assert (= (=> (and (= x2700 x3372) (= x2387 x3113)) x1915) x3203))
(assert (x2022 x3688))
(assert (=> (<= x1516 10000) (= (x512 x1516) (x955 x1516))))
(assert (= (and (not x3262) x2192) x2714))
(assert (= x3828 (and x740 (not x2662))))
(assert (= (and x1186 x3640) x2279))
(assert (= (=> (and (or (and (not x190) (and (= 0 x496) (= x190 x3794))) (and x190 (and (= x2025 (x3866 x2743 1)) (= x3794 (not x2785)) (>= x2162 0) (= (= 0 x2162) x2785) (> 1461501637330902918203684832716283019655932542976 x2162) (= x496 x2162) (= x2743 (x534 (x512 x2429) (x955 155) 0)) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x2429) (<= x2162 1461501637330902918203684832716283019655932542975) (= x2162 (x51 x2025))))) (and (= x1872 (x3155 (+ x1294 x2269))) (= x1974 (x2182 1461501637330902918203684832716283019655932542975 x544)) (not (or (and (> 32 x2469) (= true (<= x2469 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2469 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= x70 0) (= x203 (x534 (x512 x1974) (x955 164) 0)) (not (= 0 x2491)) (= (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1175) x2269) (= (< 0 x3649) x190) (= x1175 (x3155 (+ 31 x2469))) (= x70 (x384 x203)) (= x3594 (x3305 x1294)) (<= x70 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x2290) x2300))
(assert (= x1952 (and x211 x1242)))
(assert (= x2398 (and (not x1906) x1403)))
(assert (x2022 x3265))
(assert (= x334 (and x2401 x3252)))
(assert (x2022 x607))
(assert (= (x3873 (x512 x1381)) x1381))
(assert (x3356 x3449))
(assert (= (x3873 (x3866 x149 2)) (+ 2 (x3873 x149))))
(assert (x2022 x3266))
(assert (x2022 x1974))
(assert (x2022 x1097))
(assert (x2022 x3619))
(assert (x3201 x2798))
(assert (= x58 (or x3405 x1735)))
(assert (x3201 x2373))
(assert (x2022 x1206))
(assert (x2022 x1195))
(assert (x3201 x693))
(assert (x2022 x2517))
(assert (x2022 x2137))
(assert (x2022 x3665))
(assert (x2022 x3045))
(assert (= x3889 (and x2170 x3401)))
(assert (x2022 x1294))
(assert (= (and (not x2804) x3281) x2415))
(assert (x2022 x793))
(assert (x2022 x1613))
(assert (= x577 (or x3648 x2136)))
(assert (= (x3873 (x3866 x1598 2)) (+ (x3873 x1598) 2)))
(assert (x2022 x3118))
(assert (= (x955 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x512 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x2022 x822))
(assert (x2022 x1314))
(assert (x2022 x2631))
(assert (x2022 x1466))
(assert (=> (<= x2549 10000) (= (x512 x2549) (x955 x2549))))
(assert (= (=> (= x582 (= x1272 x3039)) (and (=> x582 x3484) (=> (and (not x582) (= x2496 (> x1272 0))) (and (=> (and x2496 (and (or (and (not x2404) (and (= x1734 (x3866 x1147 1)) (= (x534 (x512 x1381) x3538 0) x1147))) (and x2404 (= (x3866 x3538 1) x1058))) (and (<= 0 x3573) (= x1381 (x2619 x1239)) (= x2404 (= x1381 0)) (>= x1381 0) (> 1461501637330902918203684832716283019655932542976 x1381) (= x1239 (x534 (x512 x1140) x3538 0)) (< x3573 1461501637330902918203684832716283019655932542976) (<= x2722 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2722 0) (<= x1381 1461501637330902918203684832716283019655932542975) (= x2722 (x1748 x531)) (= x3573 (x1718 x2548)) (>= 1461501637330902918203684832716283019655932542975 x3573) (= (x3866 x2548 1) x531) (not (= 0 x2722)) (= x2548 (x3866 x1239 1))))) x3200) (=> (not x2496) x2637))))) x3488))
(assert (= x1738 (and x464 x1931)))
(assert (x2022 x382))
(assert (= (or x1775 x3318) x3861))
(assert (= x145 (and x2139 x3300)))
(assert (= (+ 1 (x3873 x1147)) (x3873 (x3866 x1147 1))))
(assert (= (and x1883 x1905) x1107))
(assert (x2022 x1913))
(assert (= x205 (or x3695 x1182)))
(assert (= (=> (and (= 0 x3199) (= x3028 x1419)) x1853) x40))
(assert (= (x3873 (x512 x1188)) x1188))
(assert (x2022 x2914))
(assert (= (and x3013 x2456) x963))
(assert (= (or (and x167 x2396) x2115 (and x3536 (not x2673)) x298 (and x2861 x2951)) x2144))
(assert (= (and x2969 (not x2889)) x3274))
(assert (x2022 x2018))
(assert (x2022 x1879))
(assert (x2022 x3908))
(assert (= (x3873 (x512 x940)) x940))
(assert (= (=> (and (= 0 x1633) (= x2615 x1190)) x2859) x76))
(assert (x3201 x2767))
(assert (= x1801 (and x2526 x1819)))
(assert (= (and x3904 x3421) x393))
(assert (= x2436 (and x1896 x173)))
(assert (x2022 x959))
(assert (x2022 x2253))
(assert (= (and (not x2050) x1260) x499))
(assert (= (and x1467 x2670) x465))
(assert (= (or x218 x2225) x1524))
(assert (x2022 x3159))
(assert (x2022 x2002))
(assert (x3201 x3831))
(assert (x3201 x3666))
(assert (= (and (not x277) x102) x429))
(assert (= (x955 1856199391) (x512 1856199391)))
(assert (x2022 x3406))
(assert (= (=> (and (= 4 x1464) (= x1464 4) (<= x3441 1461501637330902918203684832716283019655932542975) (not (= x2198 1830112933)) (> 1461501637330902918203684832716283019655932542976 x3441) (= (x1586 452) x1537) (<= x1537 1461501637330902918203684832716283019655932542975) (not (< x2198 1590201465)) (>= x3130 0) (> x2227 0) (< x3130 1461501637330902918203684832716283019655932542976) (not (< x2198 1830112933)) (= 2109788624 x2198) (= 452 x2217) (>= x3441 0) (= x1125 (x3461 x2888)) (= x1183 (> x1125 0)) (>= 1461501637330902918203684832716283019655932542975 x3130) (= x2205 56879788782001134333110164298630386859921104006521148999079851869125721718784) (< x2198 2229018723) (not (< x1464 4)) (not (= 1832238993 x2198)) (= (x2265 (x512 x987)) x2227) (not (< x2198 1265048712)) (not (= 1931414571 x2198)) (= x2888 (x534 (x512 x2725) (x955 161) 0))) (and (=> (and (not x1183) (and (= 644 x1631) (= x2750 0) (= 0 x2525))) x2138) (=> (and x1183 (and (and (= x1790 804) (<= 0 x2611) (= x2228 (= x948 x1537)) (> x1366 0) (<= x2611 1461501637330902918203684832716283019655932542975) (= (x534 (x512 x2725) (x955 161) 0) x1435) (> 1461501637330902918203684832716283019655932542976 x2611) (= x2507 x3655) (= (x3461 x1435) x1366) (= (x517 x1435 0) x2507) (= x2611 (x690 x3655))) (and x2228 (and (or (and x3325 (and (= 4 x193) (not (< x193 4)) (= 405663989 x294) (= x2517 10936679508223583803006762266923565500374401145016910147028117655998246682624) (not (> 405663989 x294)) (> 2217467699 x294) (< 0 x2584) (< x294 988262939) (= (x2265 (x512 x318)) x2584) (= 4 x193) (= 1 x2285) (= x705 32))) (and (and (or (and x3401 (and (= 1 x2285) (> x1312 0) (= x705 32) (> 2217467699 x443) (= x443 405663989) (> 988262939 x443) (not (> 405663989 x443)) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x564) (= x1217 4) (= (x2265 (x512 x3432)) x1312) (= x1217 4) (not (> 4 x1217)))) (and (and (and (and (= 32 x705) (> x981 0) (= x2285 1) (= (x2265 (x512 x3181)) x981) (= x817 10936679508223583803006762266923565500374401145016910147028117655998246682624) (< x1762 2217467699) (= x1431 4) (= x1431 4) (> 988262939 x1762) (= 405663989 x1762) (not (> 4 x1431)) (not (< x1762 405663989))) x1032) (= (= x3181 x2611) x1032)) (not x3401))) (= (= x3432 x2611) x3401)) (not x3325))) (and (>= 1461501637330902918203684832716283019655932542975 x407) (= 36 x1636) (< 0 x2840) (= x3315 4233614559) (not (= x3315 79266373)) (not (= 2229018723 x1769)) (= (x3866 x1783 1) x3597) (<= 0 x3348) (= x2070 (x534 (x512 x2611) (x955 158) 0)) (not (> 4 x1636)) (not (= x1769 2281136899)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2876) (= (x2265 (x512 x987)) x1875) (= x3325 (= x318 x2611)) (<= 0 x2876) (not x1723) (<= x3522 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2945 x1783) x2876) (= x2611 x2886) (> 2459953569 x1769) (not x1642) (not (= x3315 310377888)) (= x1642 (or (> x2651 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2651 32) (= true (<= x2651 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x2512 (x2135 x3597)) (= x1000 (x3866 x403 3)) (= x409 36) (= (x3866 x403 1) x2490) (= 36 x409) (= (x2623 x1000) x1489) (= x3159 x407) (< x1769 2861565780) (< x1254 256) (= x3348 (x3454 x2490)) (= x1588 (x1894 160)) (= x332 (x3331 (- x1636 4))) (> x1875 0) (= (x2821 804) x462) (not (> 4 x409)) (= x1254 (x3099 x403)) (> 3199929250 x1769) (= (not (= x1254 0)) x886) (>= x3441 0) (not (= 129058084 x3315)) (not (= x3315 1475734106)) (= (x534 (x512 x2886) (x955 0) 0) x1646) (= x407 x2611) (>= x2512 0) (> 256 x1489) (= 836 x1554) (= 36 x1636) (= x3105 (x1894 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2512) (not (> 2229018723 x1769)) (>= 255 x1489) (> 1461501637330902918203684832716283019655932542976 x3441) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3348) (= x1769 2391746891) (>= 1461501637330902918203684832716283019655932542975 x3441) (= x3616 (x1894 192)) (= (x3040 868) x1215) (= x2474 (x1894 128)) (<= 0 x3522) (= x72 (x1894 160)) (= x403 (x534 (x512 x407) (x955 5) 0)) (= x1731 996) (= x2651 (x3331 (- x409 4))) (= 64481368622683354557555711714629296119639875834729404553039716062438103187456 x3296) (<= 0 x1489) (= x1783 (x534 (x512 x2725) x2070 0)) (= 114138022719912475680867045629478960338713192110453415424194996738542475935744 x405) (= (not (= 0 x1489)) x3860) (= x1723 (or (and (= (<= x332 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x332 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x332))) (<= 0 x1254) (<= x1254 255) (= (x1894 128) x2947) (>= 1461501637330902918203684832716283019655932542975 x2886) (= x3522 (x1148 x1646)) (= (x2265 (x512 x948)) x2840) (not (= 0 x462)) (= x2886 x2720)))))) x369))) x3150))
(assert (x2022 x2810))
(assert (x2022 x999))
(assert (= x352 (x3873 (x512 x352))))
(assert (x2022 x3358))
(assert (x2022 x1397))
(assert (= (=> (= x498 x3686) x2579) x766))
(assert (= x2607 (and (not x1114) x1367)))
(assert (= x910 (=> (and (= x3746 x355) (= x3422 x3263)) x3312)))
(assert (= x3140 (=> (and (or (and (= 0 x1284) (not x758)) (and x758 (= x1284 x805))) (and (<= 0 x742) (= (x534 (x512 x1828) (x955 155) 0) x2766) (= x2816 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= x2735 (x534 (x512 x496) x2321 0)) (>= x172 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3207) (= (< x742 x805) x758) (<= x805 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x534 (x512 x496) x2766 0) x1832) (= (x843 x975) x805) (= (x534 (x512 x1152) (x955 154) 0) x149) (= (x3866 x2735 1) x975) (= (x534 (x512 x2816) (x955 158) 0) x2321) (>= x3207 0) (= (x3866 x1832 2) x2640) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x1828) (= x3207 (x153 x1889)) (>= x805 0) (<= x227 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1889 (x3866 x1024 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x172) (= (x3703 x2735) x227) (<= 0 x227) (= x172 (x2213 x2640)) (= (x534 (x512 x496) x149 0) x1024) (<= x742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1152 (x2182 1461501637330902918203684832716283019655932542975 x544)))) x1123)))
(assert (x2022 x1084))
(assert (= x1606 (=> (and (or (not x792) x792) (= (= 0 x123) x792)) x1257)))
(assert (= x2095 (and (not x3713) x3447)))
(assert (= x3215 (or x676 x349)))
(assert (x3201 x844))
(assert (= x977 (and x2715 x1127)))
(assert (x2022 x2864))
(assert (= x1691 (and x835 (not x3359))))
(assert (x2022 x147))
(assert (= x3408 (or x273 x131 x3339)))
(assert (x2022 x2374))
(assert (x2022 x1219))
(assert (= x1705 (and x3868 x2908)))
(assert (x2022 x3038))
(assert (=> (>= 10000 x121) (= (x512 x121) (x955 x121))))
(assert (= x3557 (and (not x78) x577)))
(assert (= (and x640 (not x45)) x3382))
(assert (x2022 x3650))
(assert (= x1803 (and x701 (not x2210))))
(assert (= (x3873 (x3866 x2271 1)) (+ 1 (x3873 x2271))))
(assert (= x2107 (x3873 (x512 x2107))))
(assert (x2022 x2668))
(assert (= x3389 (=> (and (or (and x3302 (= (x3866 x3066 2) x565)) (and (= (x534 (x512 x728) x3066 0) x11) (not x3302))) (= x3302 (= x728 0))) x3108)))
(assert (x2022 x3216))
(assert (x2022 x2916))
(assert (= x3277 (and (not x2139) x3300)))
(assert (=> (>= 10000 x2816) (= (x512 x2816) (x955 x2816))))
(assert (x2022 x596))
(assert (= x2663 (and x2336 x3685)))
(assert (= (and (not x1620) x3894) x3706))
(assert (= (or x1852 x1155 x465 x1862 x859 x731) x1655))
(assert (= x3430 (and x2221 x3037)))
(assert (x2022 x3911))
(assert (x2022 x820))
(assert (x3201 x1635))
(assert (= x1824 (or x2349 x1050)))
(assert (x2022 x3895))
(assert (x2022 x3076))
(assert (= (x3873 (x3866 x3275 1)) (+ (x3873 x3275) 1)))
(assert (= x2886 (x3873 (x512 x2886))))
(assert (x2022 x304))
(assert (= x3577 (or (and (not x1391) x2315) (and x2008 x2007))))
(assert (= (=> (and (= x762 x2914) (= x968 x2631) (= x3182 x3390) (= x3619 x2731) (= x924 x927)) x1754) x146))
(assert (x3201 x948))
(assert (x2022 x1502))
(assert (= x745 (and x2716 (not x2870))))
(assert (x2022 x86))
(assert (x2447 x544))
(assert (= x2342 (or (and (not x1461) x1033) x378)))
(assert (= x712 (x3873 (x512 x712))))
(assert (= x3318 (and x238 x554)))
(assert (= (+ 1 (x3873 x112)) (x3873 (x3866 x112 1))))
(assert (x2022 x1108))
(assert (= (x3873 (x955 56879788782001134333110164298630386859921104006521148999079851869125721718784)) 56879788782001134333110164298630386859921104006521148999079851869125721718784))
(assert (x2022 x1699))
(assert (= (or x3622 x1221 x1575 x3020) x3788))
(assert (= (and (not x2336) x3685) x681))
(assert (= (and (not x2445) x2400) x3720))
(assert (= (x3873 (x3866 x1907 2)) (+ (x3873 x1907) 2)))
(assert (x2022 x1831))
(assert (x2022 x1057))
(assert (x2022 x2954))
(assert (x2022 x753))
(assert (= x53 (and x2568 x571)))
(assert (= x1677 (or x3445 x3092)))
(assert (= x2225 (or x788 x2655 x3277 x53 x3344)))
(assert (= (and x938 x1941) x1221))
(assert (x2022 x1872))
(assert (= (and x543 (not x2717)) x2965))
(assert (= (and x2172 x1961) x3033))
(assert (= (or x935 x1042) x2068))
(assert (x2022 x2928))
(assert (x2022 x2509))
(assert (= (and x2923 x639) x1286))
(assert (x2022 x1733))
(assert (x2022 x453))
(assert (x2022 x2722))
(assert (= (and x3604 (not x25)) x701))
(assert (x648 x1951 x247))
(assert (= (=> (and (= 0 x3669) (= x86 x863)) x2324) x523))
(assert (x2022 x2586))
(assert (x2022 x948))
(assert (x2022 x1900))
(assert (= x194 (=> (and (= x204 0) (= x86 x3663)) x2487)))
(assert (= (and (not x3733) x1805) x2533))
(assert (= 89522461602318961266474185744428785802019839140862557341176434972013554040832 (x3873 (x955 89522461602318961266474185744428785802019839140862557341176434972013554040832))))
(assert (x2022 x3057))
(assert (= x3249 (x3873 (x512 x3249))))
(assert (x2022 x456))
(assert (x2022 x1773))
(assert (x2022 x1199))
(assert (x2022 x3743))
(assert (= (=> (and (= 0 x1662) (= x2707 x3801)) x2331) x3169))
(assert (= (and (not x2814) x1707) x2407))
(assert (=> (<= x680 10000) (= (x512 x680) (x955 x680))))
(assert (x2022 x48))
(assert (= (x3873 (x955 10936679508223583803006762266923565500374401145016910147028117655998246682624)) 10936679508223583803006762266923565500374401145016910147028117655998246682624))
(assert (x2022 x3145))
(assert (= x461 (and x2686 x3256)))
(assert (x2022 x524))
(assert (= x1357 (=> (and (= x3746 x2615) (= x3422 0)) x910)))
(assert (= x539 (and x3824 (not x2797))))
(assert (= (or x2858 x442 x1992 x2614) x170))
(assert (x2022 x3280))
(assert (= x785 (and (not x3413) x1870)))
(assert (= (and x989 x3476) x2038))
(assert (= (and x39 x334) x2997))
(assert (x2022 x3440))
(assert (x2022 x2974))
(assert (=> (<= x948 10000) (= (x955 x948) (x512 x948))))
(assert (x2022 x1064))
(assert (x2022 x1703))
(assert (= x3091 (and x3849 x2345)))
(assert (x2022 x3935))
(assert (x2022 x1982))
(assert (x2022 x1360))
(assert (= x1814 (and x3304 (not x645))))
(assert (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x3873 (x955 77053863734975077137548456399560439977311721439096602559221323163398253314048))))
(assert (x2022 x1348))
(assert (= (or x87 x3937) x3661))
(assert (x2022 x3363))
(assert (= x799 (and (not x3564) x1121)))
(assert (= x2466 (and (not x2913) x63)))
(assert (x2022 x1770))
(assert (= (+ (x3873 x3081) 1) (x3873 (x3866 x3081 1))))
(assert (x2022 x544))
(assert (= (x3873 (x512 x1998)) x1998))
(assert (= (x3873 (x3866 x144 1)) (+ (x3873 x144) 1)))
(assert (= x3476 (and x808 (not x891))))
(assert (x2022 x2727))
(assert (= x496 (x3873 (x512 x496))))
(assert (= (+ 1 (x3873 x2854)) (x3873 (x3866 x2854 1))))
(assert (x2022 x757))
(assert (x2022 x380))
(assert (= x1358 (and x797 (not x493))))
(assert (= x3496 (and x751 x299)))
(assert (x3201 x823))
(assert (= (and (not x2942) x480) x3025))
(assert (x2022 x1957))
(assert (=> (>= 10000 x1998) (= (x512 x1998) (x955 x1998))))
(assert (= x1236 (or x719 x586)))
(assert (= (x512 2861565780) (x955 2861565780)))
(assert (x2022 x1865))
(assert (x2022 x3463))
(assert (x2022 x124))
(assert (= x3405 (and (not x3817) x2393)))
(assert (x2022 x308))
(assert (= (and x2003 x3215) x1070))
(assert (x2022 x924))
(assert (= (+ 1 (x3873 x890)) (x3873 (x3866 x890 1))))
(assert (= x3932 (or x1663 x3496 x3769 x545 x1919)))
(assert (=> (<= x2259 10000) (= (x955 x2259) (x512 x2259))))
(assert (x2022 x813))
(assert (x2022 x978))
(assert (x2022 x1298))
(assert (x2022 x668))
(assert (= (and (not x798) x360) x3901))
(assert (x2022 x134))
(assert (x2022 x3611))
(assert (= (+ 2 (x3873 x2343)) (x3873 (x3866 x2343 2))))
(assert (x2022 x854))
(assert (x2022 x3322))
(assert (x2022 x2491))
(assert (x2022 x1643))
(assert (=> (<= x2798 10000) (= (x955 x2798) (x512 x2798))))
(assert (= (and x135 x1590) x3219))
(assert (x2022 x1426))
(assert (= x1437 (=> (and (= x1482 x2148) (= x2519 x372)) x2412)))
(assert (= (and x1607 x2985) x1275))
(assert (= x1841 (and x3097 x3755)))
(assert (x2022 x2204))
(assert (x2022 x7))
(assert (x2022 x3679))
(assert (= x17 (and x3281 x2804)))
(assert (= x1735 (and x32 (not x1458))))
(assert (= x1584 (or x1302 x111 x3875 x2988)))
(assert (x2022 x3390))
(assert (= x3718 (and x2096 x2569)))
(assert (= (=> (= (= 0 x3263) x1694) (and (=> (and (= x1003 (or (> x355 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x355) (= (<= x355 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not x1694)) (and (=> x1003 x1891) (=> (and (and (= 1 x1008) (= x1981 32)) (not x1003)) x900))) (=> x1694 x1891))) x196))
(assert (x2022 x1720))
(assert (x2022 x3692))
(assert (x3201 x2259))
(assert (= (and x3539 x163) x1262))
(assert (x2022 x3351))
(assert (= (and x3192 x190) x3792))
(assert (x2022 x2129))
(assert (x2022 x1385))
(assert (= (and x3466 x1892) x3474))
(assert (= x1177 (or (and (not x3553) x756) x3299)))
(assert (x2022 x3493))
(assert (x2022 x75))
(assert (= x377 (=> (and (= (x3155 (+ 32 x75)) x901) (= x75 (x3155 (+ x2461 4))) (= x3896 (= x1263 x1516))) (and (=> (and (and (not (< x958 2835717307)) (< 0 x2897) (= 2835717307 x958) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x333) (= x1246 68) (= x2643 x2018) (not (> 4 x1246)) (= x3891 x376) (= (x3331 (- x1246 4)) x1566) (= (x2265 (x512 x1516)) x2897) (not (< x958 1466279372)) (= x3886 (or (and (= true (<= x1566 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1566)) (> x1566 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3896) (and (=> x3886 x965) (=> (and (not x3886) (and (= (x2182 1461501637330902918203684832716283019655932542975 x2643) x2424) (= x225 (= x2424 x2643)))) (and (=> (not x225) x965) (=> (and (and (= x3147 (x1406 x3324)) (= (< x3147 x3891) x3571) (= x1268 x376) (= x3324 (x534 (x512 x3029) (x955 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3147) (<= 0 x3147)) x225) (and (=> x3571 x965) (=> (and (= (> x376 x3147) x1789) (not x3571)) (and (=> (and (and (= x725 (x3879 x3641)) (= (x534 (x512 x2767) (x955 1) 0) x3641) (= x3253 (x3331 (- x3147 x376))) (= x346 (> x725 x2123)) (>= x725 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x725) (= (x2182 1461501637330902918203684832716283019655932542975 x2018) x2767) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x376)) x2123) (= (x534 (x512 x3029) (x955 1) 0) x2166)) (not x1789)) (and (=> x346 x965) (=> (and (not x346) (and (= x1865 (x3155 (+ x376 x725))) (= x1283 (> x725 x1865)))) (and (=> x1283 x965) (=> (and (and (= x1409 (x2182 1461501637330902918203684832716283019655932542975 x2018)) (= 1 x3346) (= 32 x1996)) (not x1283)) x3812))))) (=> x1789 x965))))))))) (=> (and (= (= x318 x1263) x2563) (not x3896)) (and (=> (and (and (= 68 x834) (> x2150 0) (not (< x834 4)) (not (< x2946 2691771752)) (= x3891 x1869) (= x904 (x3331 (- x834 4))) (= x2946 2835717307) (not (< x2946 2217467699)) (not (= 2691771752 x2946)) (not (= 2796547477 x2946)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x904) (and (> 64 x904) (= true (<= x904 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1267) (= x2150 (x2265 (x512 x318))) (> 2929553584 x2946) (= x3174 x2643) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1360)) x2563) (and (=> (and (not x1267) (and (= (x2182 1461501637330902918203684832716283019655932542975 x2643) x2943) (= (= x2943 x2643) x3337) (= x2116 x3174))) (and (=> (not x3337) x710) (=> (and x3337 (and (<= 0 x3116) (<= x3116 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3116 (x1453 x1625)) (= (x534 (x512 x3029) (x955 5) 0) x1625) (= x1909 (< x3116 x3891)) (= x1869 x1948))) (and (=> (and (and (= (> x1869 x338) x3370) (<= 0 x338) (= x338 (x1453 x3117)) (= x3117 (x534 (x512 x3029) (x955 5) 0)) (<= x338 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1909)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x365) (= x1209 (x534 (x512 x548) (x955 5) 0)) (= x1960 (x3331 (- x338 x1869))) (= (x2970 x1209) x365) (= x548 (x2182 1461501637330902918203684832716283019655932542975 x3174)) (>= x365 0) (= x1970 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1869))) (= x2316 (> x365 x1970))) (not x3370)) (and (=> (and (and (= (x3155 (+ x1869 x365)) x871) (= 1 x1347) (= 32 x3537) (= x1791 1)) (not x2316)) x688) (=> x2316 x710))) (=> x3370 x710))) (=> x1909 x710))))) (=> x1267 x710))) (=> (and (= (= x3432 x1263) x3733) (not x2563)) (and (=> (and (and (= x3891 x1252) (= 2835717307 x2546) (not (> 2691771752 x2546)) (not (= x2546 2691771752)) (= x893 (or (and (> 64 x796) (= (<= x796 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x796 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x2546 2929553584) (= 68 x3646) (not (> 4 x3646)) (= x796 (x3331 (- x3646 4))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1541) (< 0 x1617) (not (> 2217467699 x2546)) (= (x2265 (x512 x3432)) x1617) (= x2643 x2239) (not (= 2796547477 x2546))) x3733) (and (=> x893 x828) (=> (and (not x893) (and (= (= x2643 x2006) x3214) (= x2032 x2239) (= (x2182 1461501637330902918203684832716283019655932542975 x2643) x2006))) (and (=> (and (and (= (x534 (x512 x3029) (x955 5) 0) x3699) (= x1252 x463) (>= x1749 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1749) (= (x120 x3699) x1749) (= (< x1749 x3891) x8)) x3214) (and (=> (and (not x8) (and (= x3286 (x120 x3188)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3286) (= (x534 (x512 x3029) (x955 5) 0) x3188) (= x2486 (< x3286 x1252)) (>= x3286 0))) (and (=> (and (not x2486) (and (= (x2182 1461501637330902918203684832716283019655932542975 x2239) x3831) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3651) (= (> x3651 x2488) x2278) (= x1417 (x534 (x512 x3831) (x955 5) 0)) (= (x3331 (- x3286 x1252)) x2371) (>= x3651 0) (= x3651 (x3502 x1417)) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1252)) x2488))) (and (=> x2278 x828) (=> (and (not x2278) (and (= 32 x2177) (= x1547 1) (= x3492 (x3155 (+ x3651 x1252))) (= x2704 1))) x1232))) (=> x2486 x828))) (=> x8 x828))) (=> (not x3214) x828))))) (=> (and (and (and x2893 (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x826) (not (= x1216 2691771752)) (= (x2265 (x512 x3181)) x2668) (= (x3331 (- x2676 4)) x1744) (= 68 x2676) (= x2861 (or (> x1744 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1744 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1744)))) (= x2379 x3891) (not (< x1216 2691771752)) (not (< x2676 4)) (= x77 x2643) (= x1216 2835717307) (not (= 2796547477 x1216)) (< x1216 2929553584) (> x2668 0) (not (> 2217467699 x1216)))) (= x2893 (= x1263 x3181))) (not x3733)) (and (=> (and (and (= x3153 (x2182 1461501637330902918203684832716283019655932542975 x2643)) (= (= x3153 x2643) x2673) (= x3367 x77)) (not x2861)) (and (=> (and x2673 (and (= (< x1667 x3891) x167) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1667) (= x2379 x2641) (= (x3109 x12) x1667) (>= x1667 0) (= x12 (x534 (x512 x3029) (x955 5) 0)))) (and (=> (and (not x167) (and (<= 0 x1049) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1049) (= (x534 (x512 x3029) (x955 5) 0) x1942) (= x1049 (x3109 x1942)) (= (> x2379 x1049) x2309))) (and (=> x2309 x40) (=> (and (not x2309) (and (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2379)) x2580) (= (x3847 x2721) x1713) (= (x3331 (- x1049 x2379)) x3222) (= (x534 (x512 x3044) (x955 5) 0) x2721) (= (x2182 1461501637330902918203684832716283019655932542975 x77) x3044) (>= x1713 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1713) (= x2053 (< x2580 x1713)))) (and (=> (and (and (= 32 x3028) (= x3199 1) (= (x3155 (+ x1713 x2379)) x2812) (= 1 x1971)) (not x2053)) x1853) (=> x2053 x40))))) (=> x167 x40))) (=> (not x2673) x40))) (=> x2861 x40)))))))))))
(assert (= x3868 (and x1630 (not x1802))))
(assert (= (x3873 (x955 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= x895 (or (and x8 x1237) x3754 x1885 (and x893 x286) (and (not x3214) x1543))))
(assert (x2022 x2877))
(assert (= x2152 (x3873 (x512 x2152))))
(assert (x2022 x623))
(assert (x2022 x1667))
(assert (x2022 x3027))
(assert (= x2487 (=> (and (= x2974 x204) (= x3329 x3663)) x1774)))
(assert (= (x3873 (x3866 x709 1)) (+ 1 (x3873 x709))))
(assert (= x1818 (x3873 (x512 x1818))))
(assert (=> (<= x2428 10000) (= (x512 x2428) (x955 x2428))))
(assert (x2022 x1448))
(assert (x2022 x3637))
(assert (x2022 x1618))
(assert (= (or x2853 x1551) x3795))
(assert (= (or x1524 x1442 x1380 x1824) x98))
(assert (x2022 x1685))
(assert (= (+ 1 (x3873 x2520)) (x3873 (x3866 x2520 1))))
(assert (x3201 x1265))
(assert (= x3368 (=> (and (= x574 x3437) (= x1764 0)) x1825)))
(assert (x2022 x1895))
(assert (x2022 x2118))
(assert (=> (<= x942 10000) (= (x955 x942) (x512 x942))))
(assert (= (and x2192 x3262) x3849))
(assert (x2022 x2684))
(assert (= x2428 (x3873 (x512 x2428))))
(assert (=> (<= x2767 10000) (= (x512 x2767) (x955 x2767))))
(assert (= (and (not x2925) x2581) x3902))
(assert (= x1630 (and x35 (not x1126))))
(assert (=> (<= x1447 10000) (= (x512 x1447) (x955 x1447))))
(assert (x2022 x2403))
(assert (=> (<= x664 10000) (= (x955 x664) (x512 x664))))
(assert (x2022 x2397))
(assert (x2022 x1067))
(assert (x2022 x2500))
(assert (x2022 x3588))
(assert (x2022 x564))
(assert (= x1240 (or x3320 x1999)))
(assert (= (and x2502 (not x1109)) x2761))
(assert (= (+ 1 (x3873 x253)) (x3873 (x3866 x253 1))))
(assert (= (or x2223 x2924) x2988))
(assert (x2022 x685))
(assert (= (and x168 x1771) x2626))
(assert (x2022 x294))
(assert (x3201 x3457))
(assert (x2022 x3584))
(assert (= (x512 129058084) (x955 129058084)))
(assert (x2022 x2676))
(assert (x2022 x764))
(assert (= 1931414571 (x3873 (x955 1931414571))))
(assert (= (and x69 x89) x1741))
(assert (x3201 x2772))
(assert (= x2437 (or x1165 x1851)))
(assert (x2022 x2892))
(assert (x2022 x2750))
(assert (x2022 x1140))
(assert (= x216 (and x1738 (not x3626))))
(assert (= x3075 (and (not x1521) x976)))
(assert (=> (>= 10000 x1732) (= (x955 x1732) (x512 x1732))))
(assert (x2022 x287))
(assert (= (or x1927 x1683) x38))
(assert (x2022 x1579))
(assert (x2022 x1969))
(assert (x2022 x376))
(assert (= x1963 (and x1236 (not x758))))
(assert (x2022 x863))
(assert (= x3762 (=> (= x1958 x3825) x1310)))
(assert (x2022 x2869))
(assert (= (and x3455 x499) x211))
(assert (x2022 x532))
(assert (x2022 x1555))
(assert (= (x3873 (x3866 x1792 1)) (+ (x3873 x1792) 1)))
(assert (=> (>= 10000 x1699) (= (x955 x1699) (x512 x1699))))
(assert (= (or x393 x2976 x628 x2763 x2463 x3186) x356))
(assert (x2022 x257))
(assert (x2022 x65))
(assert (= (and x1740 x2437) x1288))
(assert (= x1235 (=> (and (= x372 x3816) (= x1219 x2148)) x2412)))
(assert (= x2730 (and (not x2258) x340)))
(assert (= (and x2247 x3302) x1042))
(assert (x2022 x1116))
(assert (x2022 x1465))
(assert (= x2593 (and (not x3567) x3295)))
(assert (x3201 x2789))
(assert (x2022 x3827))
(assert (= x2706 (and x1393 (not x724))))
(assert (x2022 x1965))
(assert (= (and (not x2003) x3215) x3874))
(assert (=> (<= x1847 10000) (= (x955 x1847) (x512 x1847))))
(assert (x2022 x2878))
(assert (= (and (not x3811) x1315) x3604))
(assert (= x32 (or x3672 x64)))
(assert (x2022 x3487))
(assert (= x1858 (or x3682 x905)))
(assert (x2022 x3778))
(assert (x2022 x1504))
(assert (x3201 x3285))
(assert (= (and (not x3247) x1993) x3387))
(assert (x2022 x2905))
(assert (= (and x1236 x758) x2328))
(assert (= (x512 1265048712) (x955 1265048712)))
(assert (x2022 x2305))
(assert (= x1915 (=> (and (or (not x2221) x2221) (= x2221 (= x2387 0))) x1228)))
(assert (x2022 x2582))
(assert (= x3554 (and (not x1080) x780)))
(assert (= (or x3034 x605) x2614))
(assert (=> (>= 10000 x2107) (= (x512 x2107) (x955 x2107))))
(assert (x2022 x325))
(assert (x2022 x72))
(assert (= (=> (and (= x2974 x3669) (= x863 x3329)) x1774) x2324))
(assert (x2022 x3338))
(assert (= (+ (x3873 x2255) 2) (x3873 (x3866 x2255 2))))
(assert (=> (>= 10000 x3181) (= (x512 x3181) (x955 x3181))))
(assert (x2022 x3144))
(assert (x3201 x2816))
(assert (x2022 x1529))
(assert (x2022 x2006))
(assert (= (=> (and (= x524 x854) (= (x534 (x512 x2725) x3066 0) x962) (= x692 (x3866 x962 1)) (= x3173 x2725) (= x3745 (x3866 x692 1))) x599) x3108))
(assert (= x2355 (and x1624 (not x3693))))
(assert (x2022 x1125))
(assert (x2022 x3423))
(assert (x2022 x3434))
(assert (x2022 x1756))
(assert (= (+ 1 (x3873 x2743)) (x3873 (x3866 x2743 1))))
(assert (= 2109788624 (x3873 (x955 2109788624))))
(assert (x2022 x3261))
(assert (x2022 x2824))
(assert (x3201 x747))
(assert (x2022 x232))
(assert (x2022 x3649))
(assert (= (and x3544 x1275) x2463))
(assert (= x1354 (and (not x3401) x2170)))
(assert (x2447 x2018))
(assert (= (and x1151 x122) x3769))
(assert (= (+ 1 (x3873 x3354)) (x3873 (x3866 x3354 1))))
(assert (x2022 x2504))
(assert (x2022 x1790))
(assert (= (not (and (not x1377) (not x579))) x606))
(assert (x2447 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x865 (and (not x3704) x1351)))
(assert (= x669 (or x1558 x3621)))
(assert (= (and x1519 (not x671)) x3497))
(assert (x2022 x735))
(assert (= (and x1799 (not x117)) x2346))
(assert (= x1954 (x3873 (x512 x1954))))
(assert (x2022 x1181))
(assert (x2022 x3116))
(assert (x3201 x1856))
(assert (= x1938 (and (not x707) x2094)))
(assert (x2022 x2629))
(assert (= (and x1066 x2472) x3589))
(assert (x3201 x1516))
(assert (= (and (not x3421) x3904) x513))
(assert (= x1611 (=> (and (= x3574 (= x1258 0)) (or (and (not x3574) (= x215 (x534 (x512 x1258) x149 0))) (and (= x3278 (x3866 x149 2)) x3574))) x157)))
(assert (x2022 x1396))
(assert (x3201 x2635))
(assert (= (and x1503 x485) x1941))
(assert (x2022 x2232))
(assert (x2022 x2383))
(assert (= (and (not x408) x3874) x1124))
(assert (x2022 x934))
(assert (x2022 x410))
(assert (= 79266373 (x3873 (x955 79266373))))
(assert (x2022 x1669))
(assert (x2022 x270))
(assert (= x275 (and x3284 (not x1863))))
(assert (= x3050 (and x3758 x1860)))
(assert (x2022 x549))
(assert (x2022 x127))
(assert (x2022 x1921))
(assert (= x2267 (and x419 x1041)))
(assert (=> (>= 10000 x3008) (= (x955 x3008) (x512 x3008))))
(assert (x2022 x3492))
(assert (= (or x1111 x2573) x3875))
(assert (=> (>= 10000 x823) (= (x955 x823) (x512 x823))))
(assert (x2022 x1216))
(assert (= (x512 79266373) (x955 79266373)))
(assert (= (x3873 (x3866 x2264 1)) (+ 1 (x3873 x2264))))
(assert (x2022 x1518))
(assert (= 2217467699 (x3873 (x955 2217467699))))
(assert (= x2358 (and x1354 (not x1032))))
(assert (= (=> (and (= x982 (= 0 x2778)) (or (and (= (x3866 x386 2) x2740) x982) (and (= x1845 (x534 (x512 x2778) x386 0)) (not x982)))) x660) x2907))
(assert (x2022 x2795))
(assert (= (and x102 x277) x1709))
(assert (x2022 x2692))
(assert (x2022 x2227))
(assert (= (and x2011 x3337) x980))
(assert (= x2172 (and x740 x2662)))
(assert (x2022 x2583))
(assert (x2022 x42))
(assert (= (and x1440 x1899) x2825))
(assert (x2022 x3378))
(assert (x2022 x1001))
(assert (= (=> (and (= x355 x189) (= x3263 x2471)) x3312) x470))
(assert (= x3088 (and x3443 (not x964))))
(assert (= x1929 (and x2089 x2024)))
(assert (x2022 x2121))
(assert (x2022 x1345))
(assert (= (x3873 (x955 18446744073709551615)) 18446744073709551615))
(assert (x2022 x826))
(assert (= x273 (and x3943 x1422)))
(assert (= x309 (and (not x3210) x3914)))
(assert (= x2363 (=> (= x2909 x1285) x415)))
(assert (x2022 x3552))
(assert (= x210 (and x3741 x3387)))
(assert (x2022 x3907))
(assert (x2022 x171))
(assert (= (=> (and (and (= (> x3083 x742) x78) (= (x2063 x3160) x3832) (>= x615 0) (<= 0 x1982) (= x3197 (x534 (x512 x2044) (x955 156) 0)) (= (x3866 x1306 2) x155) (= (x1978 x155) x1982) (<= 0 x3832) (= (x3866 x3160 1) x3170) (= x668 (x2182 1461501637330902918203684832716283019655932542975 x544)) (<= 0 x742) (= x3251 (x534 (x512 x668) (x955 159) 0)) (>= x3083 0) (= x2786 (x2182 1461501637330902918203684832716283019655932542975 x544)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1982) (= x967 (x534 (x512 x2725) x3066 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615) (= x2044 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= (x3866 x967 2) x2301) (= (x1678 x2301) x615) (= x3066 (x534 (x512 x2786) (x955 157) 0)) (= (x534 (x512 x2725) x3197 0) x1306) (= (x3217 x3170) x3083) (<= x3832 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x534 (x512 x2725) x3251 0) x3160) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x742) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3083)) (or (and (not x78) (= 0 x860)) (and x78 (= x3083 x860)))) x2983) x1310))
(assert (=> (>= 10000 x1140) (= (x955 x1140) (x512 x1140))))
(assert (x2022 x3505))
(assert (x2022 x879))
(assert (x3201 x1258))
(assert (x2022 x868))
(assert (x2022 x2043))
(assert (x2022 x1174))
(assert (x2022 x417))
(assert (= (+ 2 (x3873 x3749)) (x3873 (x3866 x3749 2))))
(assert (x3201 x1150))
(assert (x2022 x595))
(assert (= x1933 (and x617 x2466)))
(assert (x3201 x2929))
(assert (= (and (not x2693) x2991) x2595))
(assert (= (or x851 x3436 x3308 x954 x2436 x2038) x2288))
(assert (x2022 x2098))
(assert (x3201 x2473))
(assert (= (x3873 (x3866 x1832 2)) (+ (x3873 x1832) 2)))
(assert (x3201 x2844))
(assert (x2022 x3086))
(assert (x2447 x2017))
(assert (x2022 x1812))
(assert (=> (<= x3044 10000) (= (x955 x3044) (x512 x3044))))
(assert (x2022 x2547))
(assert (= x3767 (=> (and (= x3784 (x534 (x512 x2725) x316 0)) (= x1740 (< 0 x1538)) (= (x534 (x512 x2373) (x955 159) 0) x316) (= x2373 (x2182 1461501637330902918203684832716283019655932542975 x544))) (and (=> (and (not x1740) (and (= x589 x968) (= x3269 x3255) (= x2369 x2605) (= x2914 x3386))) x3815) (=> (and (and (= x2183 (+ x836 x3753)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x972) (= x3618 (x534 (x512 x942) (x955 165) 0)) (= (x2601 x3618) x1373) (<= x1626 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1373) (= x3753 x3495) (>= x22 0) (< 0 x1582) (= x515 (x3866 x1980 1)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x22 x3495)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x22) (= x1745 (* x1736 1000000000000000000)) (= (div x1745 x1373) x92) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x712) (= (x1282 x1980) x782) (= (x3866 x3627 2) x1980) (< (* 1000000000000000000 x2348) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2101 (div x154 x1582)) (= (mod (* 1000000000000000000 x1538) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1736) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x942) (= (* 1000000000000000000 x2348) x154) (= x1684 (ite x629 1 0)) (= (+ x1535 x1207) x436) (>= x972 0) (= x1626 (x1759 x515)) (= x1207 x972) (= x3809 (x3155 (+ 32 x3269))) (= (> x1538 115792089237316195423570985008687907853269984665640564039457) x629) (= (x534 (x512 x712) (x955 169) 0) x876) (= x836 x22) (= x3495 x1535) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x972 x3495)) (>= x782 0) (= x630 (> x1538 115792089237316195423570985008687907853269984665640564039457)) (= x972 (x885 x3784)) (= (x3866 x876 3) x350) (= x550 (< 0 x2879)) (<= x782 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x1736)) (= (ite x630 1 0) x84) (= (mod (* 1000000000000000000 x1538) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2348) (= x2879 (div x2101 1000000000000000000)) (= (x3433 x350) x22) (> x1373 0) (= (div x92 1000000000000000000) x3495) (= x84 0) (= 0 x1684) (>= x1626 0)) x1740) (and (=> (and (not x550) (and (= x2369 x2849) (= x3243 x968) (= x1638 x2914) (= x746 x3269))) x3748) (=> (and (and (= x1106 (x3155 (+ 32 x3774))) (= x1397 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= x1356 (x3331 (- x1106 x3269))) (= (x3155 (+ x3269 4)) x3774) (= x798 (= x318 x1397))) x550) (and (=> (and (= (= x1397 x3432) x358) (not x798)) (and (=> (and (and (< x1712 2217467699) (not (= 988262939 x1712)) (not (> 4 x1913)) (= x2008 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1372) (and (< x1372 32) (= true (<= x1372 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (> 1856199391 x1712) (= (x3331 (- x1913 4)) x1372) (= x1913 x1356) (= x2769 26675680369413430104207330802600748686362808878094982966429686717365230764032) (> x49 0) (= 989455977 x1712) (= 36 x1913) (= x3029 x1658) (not (< x1712 988262939)) (= x49 (x2265 (x512 x3432)))) x358) (and (=> (and (and (= (= x1658 x3029) x1391) (= x1940 x1658)) (not x2008)) (and (=> (and x1391 (and (= 32 x3185) (= 1 x2009) (<= 0 x2444) (= x2444 (x2697 x3905)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2444) (= (x534 (x512 x1658) (x955 5) 0) x3905))) x3143) (=> (not x1391) x27))) (=> x2008 x27))) (=> (and (not x358) (and (= x198 (= x3181 x1397)) (and x198 (and (< x445 1856199391) (= x3388 (x3331 (- x2509 4))) (not (> 988262939 x445)) (not (> 4 x2509)) (= (x2265 (x512 x3181)) x1508) (not (= x445 988262939)) (= x124 x3029) (= x2258 (or (> x3388 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3388)) (> 32 x3388)))) (< x445 2217467699) (= 36 x2509) (= x445 989455977) (> x1508 0) (= x1356 x2509) (= 26675680369413430104207330802600748686362808878094982966429686717365230764032 x3072))))) (and (=> (and (and (= x124 x621) (= (= x124 x3029) x883)) (not x2258)) (and (=> (not x883) x331) (=> (and (and (= x1067 1) (<= 0 x2608) (= x830 32) (<= x2608 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x534 (x512 x124) (x955 5) 0) x503) (= x2608 (x2156 x503))) x883) x2515))) (=> x2258 x331))))) (=> (and (and (not (< x3246 988262939)) (= (x3331 (- x939 4)) x1273) (= 26675680369413430104207330802600748686362808878094982966429686717365230764032 x2532) (< x3246 1856199391) (= x3658 (x2265 (x512 x318))) (< 0 x3658) (not (> 4 x939)) (= 989455977 x3246) (= x3564 (or (and (< x1273 32) (= (<= x1273 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1273))) (not (= 988262939 x3246)) (= x1356 x939) (= x3029 x2259) (= x939 36) (< x3246 2217467699)) x798) (and (=> (and (and (= x2259 x410) (= x3930 (= x3029 x2259))) (not x3564)) (and (=> (not x3930) x2338) (=> (and x3930 (and (= x1614 (x2425 x1230)) (= 1 x2480) (<= x1614 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1614 0) (= x1230 (x534 (x512 x2259) (x955 5) 0)) (= 32 x793))) x683))) (=> x3564 x2338)))))))))))
(assert (= (or x2607 x2202) x1624))
(assert (= (or x1281 x3913 x3156) x1173))
(assert (x2022 x831))
(assert (x2022 x3185))
(assert (x2022 x1137))
(assert (x2022 x616))
(assert (x2022 x197))
(assert (= (and (not x2357) x278) x3799))
(assert (x2022 x1031))
(assert (x2022 x2469))
(assert (= x1834 (and x3549 x1)))
(assert (x2022 x1554))
(assert (x2022 x1731))
(assert (= x2981 (or x18 x951)))
(assert (x2022 x1004))
(assert (= x971 (and x2717 x543)))
(assert (= (and x3863 x1363) x1795))
(assert (x2022 x1556))
(assert (x2022 x1849))
(assert (= x3304 (and x480 x2942)))
(assert (x2022 x3112))
(assert (x3201 x3688))
(assert (x2022 x2792))
(assert (= x161 (and x2012 x779)))
(assert (= (x3873 (x3866 x2483 1)) (+ 1 (x3873 x2483))))
(assert (= (and x3006 x2382) x231))
(assert (x2022 x2152))
(assert (= (and x437 x722) x1650))
(assert (x2022 x2354))
(assert (= (and x1650 x2805) x374))
(assert (x2022 x3063))
(assert (= (or x675 x2732) x105))
(assert (x2022 x3450))
(assert (= (or x2997 x3884 x1224 x3845) x2604))
(assert (=> (<= x2768 10000) (= (x955 x2768) (x512 x2768))))
(assert (= 129058084 (x3873 (x955 129058084))))
(assert (x2022 x142))
(assert (= (or x1527 x2711) x797))
(assert (x2022 x3615))
(assert (x2022 x739))
(assert (= (or x3191 x881) x627))
(assert (= (or x3557 x2142) x554))
(assert (= x1920 (and x324 x98)))
(assert (x2022 x2097))
(assert (= x1590 (and (not x2470) x3178)))
(assert (x2022 x258))
(assert (x2022 x371))
(assert (x2022 x3885))
(assert (= (or x1924 x1010) x3352))
(assert (= x2163 (and x2325 (not x3032))))
(assert (= x942 (x3873 (x512 x942))))
(assert (x2022 x2707))
(assert (x2022 x3164))
(assert (= x3439 (and x640 x45)))
(assert (= x2393 (or x3644 x1795)))
(assert (x2022 x2691))
(assert (= (and x1565 (not x361)) x2568))
(assert (=> (<= x1828 10000) (= (x955 x1828) (x512 x1828))))
(assert (= x2990 (or x1179 x1358)))
(assert (x2022 x3869))
(assert (= x2763 (and x2314 x849)))
(assert (x2022 x3041))
(assert (x2022 x520))
(assert (x2022 x919))
(assert (x2022 x3149))
(assert (x2022 x133))
(assert (=> (>= 10000 x1856) (= (x955 x1856) (x512 x1856))))
(assert (= x102 (or x833 x73)))
(assert (x2022 x1118))
(assert (= (and x3426 (not x1540)) x3435))
(assert (x2022 x1362))
(assert (= (=> (and (= x2598 (x3155 (+ 31 x2691))) (not (= 0 x2680)) (= x1785 (x3228 x3269)) (= x2609 (x3155 (+ 4 x2204))) (= x2204 (x3155 (+ x3269 x291))) (= x186 (ite (> x1538 x1785) x1785 x1538)) (= x291 (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2598)) (= (x3155 (+ 32 x2609)) x287) (= x2039 (= x318 x94)) (not (or (> x2691 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2691 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2691 32)))) (= x94 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= (x3331 (- x287 x2204)) x3467)) (and (=> (and (= (= x3432 x94) x2938) (not x2039)) (and (=> (and x2938 (and (not (< x1812 4)) (= (x2265 (x512 x3432)) x1768) (not (= 2217467699 x3623)) (not (< x3623 2217467699)) (= x1797 (or (and (= true (<= x1720 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1720)) (> x1720 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1812 x3467) (= 60231946789637257468838019015344037944473233080083133266033501538020963123200 x3358) (< x3623 2929553584) (= (x3331 (- x1812 4)) x1720) (< 0 x1768) (= 2234127075 x3623) (= x186 x848) (= 36 x1812) (< x3623 2691771752))) (and (=> (and (not x1797) (and (= x1728 (< x3642 x186)) (= (x2697 x568) x3642) (= x2684 x848) (= (x534 (x512 x3029) (x955 5) 0) x568) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3642) (<= 0 x3642))) (and (=> (and (= x2914 x1115) x1728) x2026) (=> (and (not x1728) (and (= (x2697 x2865) x1313) (<= 0 x1313) (= (x534 (x512 x3029) (x955 5) 0) x2865) (= (< x1313 x848) x2591) (<= x1313 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (<= 0 x2914) (<= x2914 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1261 (x3331 (- x1313 x848))) (= x1131 (< x2914 x848))) (not x2591)) (and (=> (and (and (= (= x1516 x1714) x2985) (= (x3331 (- x2914 x848)) x3118) (<= 0 x1714) (<= x1714 1461501637330902918203684832716283019655932542975) (< x1714 1461501637330902918203684832716283019655932542976) (= 128 x827) (= (x3331 (- x2914 x848)) x3797)) (not x1131)) (and (=> (and (not x2985) (= (= x318 x1714) x2693)) (and (=> (and x2693 (and (not (> 2691771752 x2016)) (= x1699 x3029) (= (x3331 (- x1733 4)) x2733) (= x2684 x2539) (= x3270 (x2265 (x512 x318))) (not (> 2217467699 x2016)) (not (= x2016 2796547477)) (= x1733 68) (< 0 x3270) (= 68 x1733) (= x1096 (or (and (> 64 x2733) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2733) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2733))) (> 2929553584 x2016) (not (= x2016 2691771752)) (= 2835717307 x2016) (= x1562 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 4 x1733)))) (and (=> (and (and (= x1908 (= x3029 x1699)) (= x1699 x1345)) (not x1096)) (and (=> (and (and (= (x2425 x3780) x3038) (= x2282 (> x2684 x3038)) (<= 0 x3038) (= x2539 x2083) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3038) (= (x534 (x512 x3432) (x955 5) 0) x3780)) x1908) (and (=> x2282 x523) (=> (and (not x2282) (and (= (> x2539 x2690) x3514) (= x2065 (x534 (x512 x3432) (x955 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2690) (= (x2425 x2065) x2690) (>= x2690 0))) (and (=> (and (not x3514) (and (= (x2508 x3161) x2948) (= x3161 (x534 (x512 x1699) (x955 5) 0)) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2539)) x3838) (= (x3331 (- x2690 x2539)) x449) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2948) (>= x2948 0) (= x3539 (> x2948 x3838)))) (and (=> (and (and (= 32 x863) (= 1 x3669) (= (x3155 (+ x2539 x2948)) x3355) (= x1959 1)) (not x3539)) x2324) (=> x3539 x523))) (=> x3514 x523))))) (=> (not x1908) x523))) (=> x1096 x523))) (=> (and (not x2693) (= (= x1714 x3432) x3194)) (and (=> (and (and (= x2892 2835717307) (not (< x2892 2691771752)) (> 2929553584 x2892) (> x327 0) (not (= x2892 2691771752)) (= 68 x351) (not (< x351 4)) (= (x3331 (- x351 4)) x1104) (= x351 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2964) (= (x2265 (x512 x3432)) x327) (not (< x2892 2217467699)) (= x3712 x3029) (not (= 2796547477 x2892)) (= x2684 x3397) (= x1708 (or (and (< x1104 64) (= (<= x1104 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1104)))) x3194) (and (=> x1708 x194) (=> (and (and (= (= x3712 x3029) x484) (= x3712 x1031)) (not x1708)) (and (=> (and x484 (and (>= x2629 0) (= x3668 (x534 (x512 x3432) (x955 5) 0)) (= x2629 (x2207 x3668)) (= (> x2684 x2629) x2717) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629) (= x1346 x3397))) (and (=> (and (not x2717) (and (<= 0 x1808) (= x108 (> x3397 x1808)) (= (x534 (x512 x3432) (x955 5) 0) x1166) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1808) (= x1808 (x2207 x1166)))) (and (=> (and (and (= (x534 (x512 x3712) (x955 5) 0) x3910) (= (x3331 (- x1808 x3397)) x3462) (= x1921 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3397))) (<= x3885 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3482 (> x3885 x1921)) (= (x3403 x3910) x3885) (<= 0 x3885)) (not x108)) (and (=> (and (not x3482) (and (= 1 x753) (= 32 x3663) (= x204 1) (= x370 (x3155 (+ x3397 x3885))))) x2487) (=> x3482 x194))) (=> x108 x194))) (=> x2717 x194))) (=> (not x484) x194))))) (=> (and (not x3194) (and (= (= x3181 x1714) x3566) (and (and (> 2929553584 x1473) (= 68 x870) (not (> 2217467699 x1473)) (not (< x1473 2691771752)) (not (= x1473 2691771752)) (not (> 4 x870)) (= x2684 x2616) (= (x3331 (- x870 4)) x1385) (= x3029 x1715) (= x2481 (x2265 (x512 x3181))) (> x2481 0) (= x1320 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 68 x870) (= x1473 2835717307) (not (= 2796547477 x1473)) (= x289 (or (and (= (<= x1385 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1385 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1385)))) x3566))) (and (=> x289 x3678) (=> (and (and (= x133 x1715) (= (= x3029 x1715) x1521)) (not x289)) (and (=> (not x1521) x3678) (=> (and x1521 (and (= (> x2684 x1407) x1786) (>= x1407 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1407) (= (x534 (x512 x3432) (x955 5) 0) x162) (= x1407 (x2156 x162)) (= x1813 x2616))) (and (=> (and (and (<= 0 x1439) (= (< x1439 x2616) x1480) (<= x1439 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1864 (x534 (x512 x3432) (x955 5) 0)) (= (x2156 x1864) x1439)) (not x1786)) (and (=> (and (not x1480) (and (= (x483 x2072) x200) (= (x3331 (- x1439 x2616)) x1965) (<= 0 x200) (= x3171 (< x993 x200)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x200) (= x993 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2616))) (= x2072 (x534 (x512 x1715) (x955 5) 0)))) (and (=> (and (and (= x879 1) (= 1 x714) (= 32 x625) (= x2692 (x3155 (+ x2616 x200)))) (not x3171)) x1012) (=> x3171 x3678))) (=> x1480 x3678))) (=> x1786 x3678))))))))))) (=> (and (and (= x2173 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2684 x2071) (= 2835717307 x1317) (= 68 x3135) (< 0 x3248) (= x3248 (x2265 (x512 x1516))) (not (< x1317 2835717307)) (= x3135 68) (= (x3331 (- x3135 4)) x2137) (not (< x3135 4)) (= x3029 x2147) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2137) (and (< x2137 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2137) true))) x3544) (not (< x1317 1466279372))) x2985) (and (=> (and (and (= (= x3029 x2147) x3347) (= x2147 x959)) (not x3544)) (and (=> (not x3347) x3694) (=> (and x3347 (and (<= 0 x1737) (<= x1737 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2294 (x534 (x512 x3432) (x955 1) 0)) (= x3005 x2071) (= (> x2684 x1737) x2314) (= (x2837 x2294) x1737))) (and (=> x2314 x3694) (=> (and (= (< x1737 x2071) x3421) (not x2314)) (and (=> (and (and (= x490 (< x46 x903)) (= x2093 (x534 (x512 x2147) (x955 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x903) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2071)) x46) (= (x3331 (- x1737 x2071)) x178) (= (x534 (x512 x3432) (x955 1) 0) x234) (= (x3576 x2093) x903) (>= x903 0)) (not x3421)) (and (=> x490 x3694) (=> (and (and (= (< x3463 x903) x2889) (= (x3155 (+ x2071 x903)) x3463)) (not x490)) (and (=> x2889 x3694) (=> (and (and (= x2441 1) (= x3007 32) (= (x534 (x512 x2147) (x955 1) 0) x3138)) (not x2889)) x1023))))) (=> x3421 x3694))))))) (=> x3544 x3694))))) (=> (and x1131 (= x1115 x2914)) x2026))) (=> (and x2591 (= x1115 x2914)) x2026))))) (=> (and (= x2914 x1115) x1797) x2026))) (=> (and (and (and x2942 (and (> 2929553584 x3238) (= (x2265 (x512 x3181)) x1105) (= x1064 x3467) (= x2377 x186) (= (or (and (< x2367 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2367) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2367)) x645) (= (x3331 (- x1064 4)) x2367) (= 60231946789637257468838019015344037944473233080083133266033501538020963123200 x880) (not (< x3238 2217467699)) (= 2234127075 x3238) (< x3238 2691771752) (= x1064 36) (not (= x3238 2217467699)) (< 0 x1105) (not (< x1064 4)))) (= x2942 (= x3181 x94))) (not x2938)) (and (=> (and (not x645) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1269) (= x1034 (< x1269 x186)) (= x2377 x2649) (= (x2156 x3448) x1269) (= x3448 (x534 (x512 x3029) (x955 5) 0)) (>= x1269 0))) (and (=> (and x1034 (= x934 x968)) x2082) (=> (and (and (= (x534 (x512 x3029) (x955 5) 0) x1693) (= (< x3107 x2377) x388) (= (x2156 x1693) x3107) (>= x3107 0) (<= x3107 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1034)) (and (=> (and (not x388) (and (= (< x968 x2377) x873) (>= x968 0) (<= x968 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3233 (x3331 (- x3107 x2377))))) (and (=> (and (not x873) (and (= x3908 (x3331 (- x968 x2377))) (> 1461501637330902918203684832716283019655932542976 x757) (= x3677 128) (= (x3331 (- x968 x2377)) x810) (<= x757 1461501637330902918203684832716283019655932542975) (<= 0 x757) (= x1506 (= x1516 x757)))) (and (=> (and (and (= x1955 68) (not (< x1955 4)) (not (< x1559 1466279372)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1466) (= 68 x1955) (= x2847 (or (and (< x2078 64) (= (<= x2078 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x2078 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1761 0) (= x1761 (x2265 (x512 x1516))) (= x1559 2835717307) (= x3029 x1818) (not (> 2835717307 x1559)) (= (x3331 (- x1955 4)) x2078) (= x2649 x1039)) x1506) (and (=> (and (not x2847) (and (= (= x1818 x3029) x722) (= x1818 x1692))) (and (=> (not x722) x2809) (=> (and x722 (and (= x3469 x1039) (<= x2819 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1297 (x534 (x512 x3181) (x955 1) 0)) (>= x2819 0) (= (> x2649 x2819) x2805) (= (x2837 x1297) x2819))) (and (=> (and (= x2804 (< x2819 x1039)) (not x2805)) (and (=> (and (and (<= x3841 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x534 (x512 x1818) (x955 1) 0) x1661) (= x1796 (x534 (x512 x3181) (x955 1) 0)) (= (x3331 (- x2819 x1039)) x2636) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1039)) x850) (= x3841 (x1185 x1661)) (= (< x850 x3841) x3579) (>= x3841 0)) (not x2804)) (and (=> x3579 x2809) (=> (and (and (= x1888 (> x3841 x1711)) (= x1711 (x3155 (+ x1039 x3841)))) (not x3579)) (and (=> (and (and (= 32 x3600) (= x2796 (x534 (x512 x1818) (x955 1) 0)) (= x1893 1)) (not x1888)) x3115) (=> x1888 x2809))))) (=> x2804 x2809))) (=> x2805 x2809))))) (=> x2847 x2809))) (=> (and (not x1506) (= (= x757 x318) x3032)) (and (=> (and (and (not (> 2217467699 x770)) (= x3029 x1102) (> 2929553584 x770) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x632) (and (< x632 64) (= true (<= x632 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3163) (not (= 2691771752 x770)) (= 2835717307 x770) (= x2649 x2390) (= (x3331 (- x3371 4)) x632) (not (= 2796547477 x770)) (= x184 (x2265 (x512 x318))) (not (< x770 2691771752)) (= x3371 68) (= x1665 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< 0 x184) (not (> 4 x3371)) (= x3371 68)) x3032) (and (=> (and (and (= (= x1102 x3029) x1931) (= x1102 x1701)) (not x3163)) (and (=> (and (and (= x2390 x259) (>= x1587 0) (= x1587 (x2425 x3737)) (= x3737 (x534 (x512 x3181) (x955 5) 0)) (= (> x2649 x1587) x3626) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)) x1931) (and (=> (and (and (= x230 (x534 (x512 x3181) (x955 5) 0)) (<= 0 x602) (<= x602 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2425 x230) x602) (= (> x2390 x602) x1798)) (not x3626)) (and (=> x1798 x3507) (=> (and (not x1798) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2764) (= x3778 (x3331 (- x602 x2390))) (<= 0 x2764) (= (x3407 x509) x2764) (= (x534 (x512 x1102) (x955 5) 0) x509) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2390)) x2029) (= (< x2029 x2764) x1184))) (and (=> (and (not x1184) (and (= (x3155 (+ x2390 x2764)) x3550) (= 32 x1831) (= x3895 1) (= x2451 1))) x3010) (=> x1184 x3507))))) (=> x3626 x3507))) (=> (not x1931) x3507))) (=> x3163 x3507))) (=> (and (= (= x757 x3432) x3851) (not x3032)) (and (=> (and x3851 (and (= x1087 68) (= x2649 x3418) (< x649 2929553584) (not (= 2691771752 x649)) (= 68 x1087) (< 0 x2760) (= (x3331 (- x1087 4)) x3526) (= x2922 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (and (> 64 x3526) (= (<= x3526 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x3526 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1343) (not (> 2217467699 x649)) (= x2760 (x2265 (x512 x3432))) (= 2835717307 x649) (not (> 4 x1087)) (not (< x649 2691771752)) (= x3029 x1174) (not (= x649 2796547477)))) (and (=> x1343 x2423) (=> (and (not x1343) (and (= x3026 x1174) (= x956 (= x1174 x3029)))) (and (=> (not x956) x2423) (=> (and (and (= (x534 (x512 x3181) (x955 5) 0) x583) (= x3418 x626) (= x1511 (x2697 x583)) (= x2638 (> x2649 x1511)) (<= 0 x1511) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1511)) x956) (and (=> (and (and (= (x2697 x3760) x3521) (= x3760 (x534 (x512 x3181) (x955 5) 0)) (<= 0 x3521) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3521) (= (< x3521 x3418) x1905)) (not x2638)) (and (=> x1905 x2423) (=> (and (and (<= 0 x3743) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3418)) x3290) (= x2873 (x534 (x512 x1174) (x955 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3743) (= x3743 (x716 x2873)) (= (> x3743 x3290) x3713) (= x2500 (x3331 (- x3521 x3418)))) (not x1905)) (and (=> (and (and (= x1387 32) (= x3775 (x3155 (+ x3418 x3743))) (= 1 x2479) (= x1555 1)) (not x3713)) x1093) (=> x3713 x2423))))) (=> x2638 x2423))))))) (=> (and (not x3851) (and (= (= x3181 x757) x2662) (and x2662 (and (= 68 x1697) (not (> 2691771752 x304)) (= x1961 (or (> x3729 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x3729) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3729) true)))) (= x844 x3029) (= 2835717307 x304) (> 2929553584 x304) (= x1697 68) (not (> 4 x1697)) (not (< x304 2217467699)) (not (= x304 2691771752)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x226) (= (x2265 (x512 x3181)) x236) (= (x3331 (- x1697 4)) x3729) (< 0 x236) (not (= x304 2796547477)) (= x2649 x301))))) (and (=> x1961 x3172) (=> (and (not x1961) (and (= x1991 x844) (= x707 (= x3029 x844)))) (and (=> (and x707 (and (>= x1983 0) (= x3755 (< x1983 x2649)) (= (x1649 x936) x1983) (= x936 (x534 (x512 x3181) (x955 5) 0)) (= x301 x1937) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1983))) (and (=> x3755 x3172) (=> (and (not x3755) (and (= (x1649 x2567) x1091) (= x1863 (> x301 x1091)) (<= 0 x1091) (= x2567 (x534 (x512 x3181) (x955 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1091))) (and (=> (and (and (= (> x166 x3326) x2281) (<= x166 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3878 x2464) x166) (= (x3331 (- x1091 x301)) x604) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x301)) x3326) (= x2464 (x534 (x512 x844) (x955 5) 0)) (<= 0 x166)) (not x1863)) (and (=> (and (and (= 1 x689) (= x1811 1) (= (x3155 (+ x301 x166)) x2276) (= 32 x2467)) (not x2281)) x435) (=> x2281 x3172))) (=> x1863 x3172))))) (=> (not x707) x3172))))))))))) (=> (and (= x968 x934) x873) x2082))) (=> (and x388 (= x968 x934)) x2082))))) (=> (and x645 (= x968 x934)) x2082))))) (=> (and (and (> 2691771752 x1456) (> 2929553584 x1456) (> x488 0) (= x2968 (x3331 (- x3598 4))) (= 60231946789637257468838019015344037944473233080083133266033501538020963123200 x21) (= (or (and (> 32 x2968) (= true (<= x2968 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2968)) x2670) (= x3598 x3467) (not (< x1456 2217467699)) (not (= x1456 2217467699)) (not (< x3598 4)) (= (x2265 (x512 x318)) x488) (= x33 x186) (= 36 x3598) (= x1456 2234127075)) x2039) (and (=> (and (and (= (x2425 x10) x2403) (<= x2403 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1726 x33) (= (> x186 x2403) x1906) (= (x534 (x512 x3029) (x955 5) 0) x10) (<= 0 x2403)) (not x2670)) (and (=> (and (not x1906) (and (= x3833 (> x33 x1344)) (= x1187 (x534 (x512 x3029) (x955 5) 0)) (>= x1344 0) (= (x2425 x1187) x1344) (<= x1344 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (= x2369 x2454) x3833) x1944) (=> (and (not x3833) (and (= x600 (< x2369 x33)) (<= 0 x2369) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2369) (= x603 (x3331 (- x1344 x33))))) (and (=> (and (and (= (x3331 (- x2369 x33)) x1969) (= x3416 128) (< x239 1461501637330902918203684832716283019655932542976) (<= x239 1461501637330902918203684832716283019655932542975) (= (= x1516 x239) x755) (= x1328 (x3331 (- x2369 x33))) (<= 0 x239)) (not x600)) (and (=> (and (not x755) (= x2417 (= x239 x318))) (and (=> (and (= (= x3432 x239) x1935) (not x2417)) (and (=> (and (not x1935) (and (= x1149 (= x239 x3181)) (and x1149 (and (= x537 x1726) (= x3029 x2762) (not (> 4 x3473)) (not (= 2691771752 x347)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3505) (< 0 x3588) (= 68 x3473) (= x3473 68) (not (> 2217467699 x347)) (> 2929553584 x347) (= (x2265 (x512 x3181)) x3588) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3676) true) (< x3676 64)) (> x3676 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x168) (not (= 2796547477 x347)) (not (< x347 2691771752)) (= (x3331 (- x3473 4)) x3676) (= x347 2835717307))))) (and (=> x168 x441) (=> (and (and (= (= x2762 x3029) x3262) (= x2993 x2762)) (not x168)) (and (=> (and (and (<= 0 x3345) (= (x534 (x512 x318) (x955 5) 0) x1910) (= x3345 (x2156 x1910)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3345) (= x2345 (< x3345 x1726)) (= x537 x2155)) x3262) (and (=> (and (and (= (x534 (x512 x318) (x955 5) 0) x2872) (= x3330 (< x2954 x537)) (<= 0 x2954) (= x2954 (x2156 x2872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2954)) (not x2345)) (and (=> (and (and (<= 0 x1223) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x537)) x2297) (= (x3726 x1838) x1223) (= (x3331 (- x2954 x537)) x2698) (= x1838 (x534 (x512 x2762) (x955 5) 0)) (= (> x1223 x2297) x2340) (<= x1223 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3330)) (and (=> x2340 x441) (=> (and (and (= x2266 1) (= x3144 1) (= x134 (x3155 (+ x1223 x537))) (= 32 x3440)) (not x2340)) x3316))) (=> x3330 x441))) (=> x2345 x441))) (=> (not x3262) x441))))) (=> (and (and (= x2484 (x3331 (- x3383 4))) (> 2929553584 x2175) (= 68 x3383) (not (> 2217467699 x2175)) (= (x2265 (x512 x3432)) x3810) (= (or (> x2484 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2484)) (> 64 x2484))) x1349) (= x2175 2835717307) (< 0 x3810) (= x3383 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x341) (= x552 x1726) (= x3029 x1338) (not (> 2691771752 x2175)) (not (= x2175 2796547477)) (not (< x3383 4)) (not (= 2691771752 x2175))) x1935) (and (=> x1349 x1857) (=> (and (not x1349) (and (= x1338 x320) (= x45 (= x1338 x3029)))) (and (=> (and x45 (and (= x1430 (x2697 x1325)) (= x2790 x552) (= (x534 (x512 x318) (x955 5) 0) x1325) (<= 0 x1430) (<= x1430 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3292 (> x1726 x1430)))) (and (=> x3292 x1857) (=> (and (and (= (x2697 x932) x607) (= x367 (> x552 x607)) (<= 0 x607) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607) (= (x534 (x512 x318) (x955 5) 0) x932)) (not x3292)) (and (=> x367 x1857) (=> (and (and (= x3855 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x552))) (<= x3869 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2709 (x3331 (- x607 x552))) (<= 0 x3869) (= x3549 (> x3869 x3855)) (= (x534 (x512 x1338) (x955 5) 0) x3667) (= x3869 (x2030 x3667))) (not x367)) (and (=> (and (not x3549) (and (= x2835 1) (= (x3155 (+ x3869 x552)) x1767) (= 32 x1807) (= x585 1))) x2588) (=> x3549 x1857))))))) (=> (not x45) x1857))))))) (=> (and (and (< 0 x16) (= x1146 (x3331 (- x24 4))) (= x3254 2835717307) (not (< x3254 2691771752)) (not (< x24 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3104) (= x3029 x2772) (= x302 x1726) (= x24 68) (= 68 x24) (> 2929553584 x3254) (= x964 (or (and (= (<= x1146 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1146 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1146))) (not (= x3254 2796547477)) (not (= 2691771752 x3254)) (= x16 (x2265 (x512 x318))) (not (< x3254 2217467699))) x2417) (and (=> (and (and (= x1526 x2772) (= (= x3029 x2772) x1644)) (not x964)) (and (=> (and x1644 (and (<= x3624 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1726 x3624) x3859) (<= 0 x3624) (= x302 x1854) (= x3624 (x1420 x452)) (= (x534 (x512 x318) (x955 5) 0) x452))) (and (=> (and (and (= (x534 (x512 x318) (x955 5) 0) x3702) (>= x2189 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2189) (= (x1420 x3702) x2189) (= x3059 (< x2189 x302))) (not x3859)) (and (=> (and (and (= x2558 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x302))) (<= x1890 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2752 (x3331 (- x2189 x302))) (<= 0 x1890) (= (x2833 x839) x1890) (= x839 (x534 (x512 x2772) (x955 5) 0)) (= (> x1890 x2558) x659)) (not x3059)) (and (=> x659 x644) (=> (and (not x659) (and (= x1219 1) (= x3816 32) (= 1 x3750) (= (x3155 (+ x1890 x302)) x2596))) x1235))) (=> x3059 x644))) (=> x3859 x644))) (=> (not x1644) x644))) (=> x964 x644))))) (=> (and x755 (and (= 2835717307 x3016) (= x2077 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x2265 (x512 x1516)) x104) (not (< x3016 2835717307)) (= x1726 x783) (= 68 x715) (> x104 0) (= x1199 (x3331 (- x715 4))) (not (< x3016 1466279372)) (= x715 68) (= x1998 x3029) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1199) (and (> 64 x1199) (= true (<= x1199 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x2715) (not (> 4 x715)))) (and (=> (and (and (= x1998 x700) (= (= x3029 x1998) x2357)) (not x2715)) (and (=> (and x2357 (and (= (x534 (x512 x318) (x955 1) 0) x1486) (= x1988 (x2837 x1486)) (= x117 (< x1988 x1726)) (<= 0 x1988) (= x3184 x783) (<= x1988 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (= x1702 (> x783 x1988)) (not x117)) (and (=> (and (not x1702) (and (= (> x424 x62) x2230) (<= 0 x424) (= (x534 (x512 x1998) (x955 1) 0) x3317) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x424) (= (x534 (x512 x318) (x955 1) 0) x1730) (= (x3331 (- x1988 x783)) x2586) (= x62 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x783))) (= (x1341 x3317) x424))) (and (=> (and (not x2230) (and (= x2884 (< x2681 x424)) (= x2681 (x3155 (+ x783 x424))))) (and (=> x2884 x1143) (=> (and (and (= x3631 (x534 (x512 x1998) (x955 1) 0)) (= x1482 1) (= x2519 32)) (not x2884)) x1437))) (=> x2230 x1143))) (=> x1702 x1143))) (=> x117 x1143))) (=> (not x2357) x1143))) (=> x2715 x1143))))) (=> (and x600 (= x2369 x2454)) x1944))))) (=> (and x1906 (= x2369 x2454)) x1944))) (=> (and x2670 (= x2454 x2369)) x1944))))) x252))
(assert (x2022 x770))
(assert (= x1092 (and x2033 x1801)))
(assert (x2022 x405))
(assert (x2022 x2947))
(assert (= x1800 (=> (and (or (not x525) x525) (= (= x3145 0) x525)) x2822)))
(assert (= (and x846 (not x806)) x1028))
(assert (x2022 x1511))
(assert (x2022 x152))
(assert (x2022 x631))
(assert (= x1421 false))
(assert (=> (<= x266 10000) (= (x512 x266) (x955 x266))))
(assert (x2022 x1922))
(assert (x2022 x3024))
(assert (x2022 x3823))
(assert (x2022 x2867))
(assert (x2022 x434))
(assert (x2022 x2480))
(assert (x2447 x1314))
(assert (= x3229 (=> (and (and (<= x742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3832 x742) x235) (>= x742 0)) (or (and x235 (= x2453 x3832)) (and (not x235) (= 0 x2453)))) x841)))
(assert (= (or x3273 x608) x2012))
(assert (= x1852 (and x3833 x2398)))
(assert (x2022 x3287))
(assert (= 1475734106 (x3873 (x955 1475734106))))
(assert (= (and (not x582) x553) x613))
(assert (x2022 x2217))
(assert (x2022 x1169))
(assert (= (x3873 (x512 x2789)) x2789))
(assert (x2022 x981))
(assert (x2022 x1243))
(assert (= (and x428 x966) x2370))
(assert (= x1165 (or x2578 x3555)))
(assert (= (x3873 (x3866 x692 1)) (+ 1 (x3873 x692))))
(assert (= x1403 (and (not x2670) x1467)))
(assert (x2022 x57))
(assert (x2022 x396))
(assert (x2022 x2955))
(assert (x3201 x121))
(assert (x2022 x1493))
(assert (= (x3873 (x955 1857877511)) 1857877511))
(assert (x2022 x469))
(assert (x2022 x104))
(assert (=> (>= 10000 x807) (= (x512 x807) (x955 x807))))
(assert (=> (<= x2147 10000) (= (x512 x2147) (x955 x2147))))
(assert (= x1903 (and x1995 (not x3370))))
(assert (= 1265048712 (x3873 (x955 1265048712))))
(assert (x2022 x3007))
(assert (x2022 x642))
(assert (x3201 x1188))
(assert (= (and x334 (not x39)) x3845))
(assert (x2022 x3283))
(assert (= (x3873 (x512 x2798)) x2798))
(assert (= (and (not x2024) x2089) x588))
(assert (= (and x3517 (not x1887)) x905))
(assert (x2022 x3093))
(assert (= x1817 (and x225 x2199)))
(assert (x2022 x1793))
(assert (x2022 x1582))
(assert (x3201 x456))
(assert (x2022 x2530))
(assert (x2022 x2462))
(assert (x2022 x3927))
(assert (x2022 x2257))
(assert (x2022 x3491))
(assert (x2022 x248))
(assert (x2022 x2078))
(assert (= (and x2893 x2533) x2951))
(assert (= (and x1994 (not x2486)) x2062))
(assert (x3201 x1715))
(assert (= (x512 2678788150) (x955 2678788150)))
(assert (x2022 x2433))
(assert (x2022 x2212))
(assert (x2022 x3802))
(assert (= (and x2851 x2973) x1878))
(assert (= (=> (and (= x2605 x2849) (= x746 x3255) (= x1638 x3386) (= x3243 x589)) x3815) x3748))
(assert (= x710 (=> (and (= x3537 x1419) (= x1791 0)) x688)))
(assert (= 405663989 (x3873 (x955 405663989))))
(assert (= x3186 (and x2889 x2969)))
(assert (x2022 x2677))
(assert (x2022 x233))
(assert (= (and (not x618) x2342) x1510))
(assert (= x2136 (or x3902 x2781)))
(assert (= x1686 (and x2238 (not x1901))))
(assert (x2022 x1761))
(assert (= (and x1186 (not x3640)) x1672))
(assert (x2022 x158))
(assert (x2022 x1654))
(assert (= x675 (and x1109 x2502)))
(assert (= x2527 (and (not x3865) x2023)))
(assert (= 2858086653 (x3873 (x955 2858086653))))
(assert (=> (>= 10000 x697) (= (x955 x697) (x512 x697))))
(assert (= (and x1133 x3258) x2427))
(assert (= x2270 (and x3851 x2163)))
(assert (x2022 x3751))
(assert (x2022 x307))
(assert (x2022 x3420))
(assert (= x2396 (and x3536 x2673)))
(assert (x2022 x424))
(assert (= x1399 (and x3894 x1620)))
(assert (= (or x1552 (and (not x3628) x791)) x2092))
(assert (x2022 x3244))
(assert (= x3659 (and (not x527) x2506)))
(assert (= (and x3918 x1878) x379))
(assert (x2022 x1258))
(assert (= x2927 (and (=> (and x1319 (= (= x2746 0) x2306)) (and (=> (and (not x2306) (and (and (= (x3155 (+ 160 x2950)) x1294) (= x328 (= x318 x3615)) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x3615) (= x2736 4)) (or (and (and (= (= x3615 x3432) x2272) (or (and (and (= (= x3615 x3181) x217) (and (and (not (< x1950 4)) (< x1989 988262939) (= x733 10936679508223583803006762266923565500374401145016910147028117655998246682624) (> x1779 0) (= x1989 405663989) (= 1 x2491) (= x2469 32) (= x1950 x2736) (< x1989 2217467699) (= x1950 4) (not (> 405663989 x1989)) (= x1779 (x2265 (x512 x3181)))) x217)) (not x2272)) (and (and (not (> 405663989 x3493)) (= (x2265 (x512 x3432)) x3190) (= 4 x3431) (= x3493 405663989) (> 2217467699 x3493) (= x2491 1) (= x3431 x2736) (= x2469 32) (> 988262939 x3493) (= x3126 10936679508223583803006762266923565500374401145016910147028117655998246682624) (not (< x3431 4)) (< 0 x3190)) x2272))) (not x328)) (and (and (= x3871 405663989) (= x2491 1) (> x1977 0) (< x3871 988262939) (= x1977 (x2265 (x512 x318))) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x97) (not (< x3871 405663989)) (= x434 4) (> 2217467699 x3871) (= x2469 32) (not (< x434 4)) (= x2736 x434)) x328)))) x2300) (=> (and (and (= 0 x584) (= x2950 x3735)) x2306) x1327))) (=> (and (not x1319) (and (= x1538 x831) (= x2950 x3269) (= x3649 x3415))) x3767))))
(assert (x2022 x242))
(assert (x3201 x1847))
(assert (x2022 x1955))
(assert (= x3477 (and (not x1789) x1525)))
(assert (x2022 x1960))
(assert (x2022 x1764))
(assert (x2022 x284))
(assert (= (and x3758 (not x1860)) x3882))
(assert (x2022 x3107))
(assert (x3201 x942))
(assert (= (and (not x1545) x3887) x477))
(assert (x3201 x3432))
(assert (= (x3873 (x512 x2844)) x2844))
(assert (x2022 x1029))
(assert (= (x3873 (x3866 x2318 1)) (+ (x3873 x2318) 1)))
(assert (=> (<= x940 10000) (= (x512 x940) (x955 x940))))
(assert (=> (<= x1174 10000) (= (x955 x1174) (x512 x1174))))
(assert (= (or x1075 x3662 x1180 x3661 x2092 x2459) x2919))
(assert (= x233 (x3873 (x512 x233))))
(assert (=> (>= 10000 x2786) (= (x512 x2786) (x955 x2786))))
(assert (= (or x1949 x1823) x1964))
(assert (= (and (not x2775) x2838) x1416))
(assert (= (or x2890 x213) x1048))
(assert (= (or x566 (and x1909 x980) (and (not x3337) x2011) (and x2446 x1267) x619) x2226))
(assert (= x1847 (x3873 (x512 x1847))))
(assert (x3201 x2778))
(assert (= (and x3710 x1061) x138))
(assert (= (and x2244 (not x1322)) x164))
(assert (x2022 x3715))
(assert (= (x512 2391746891) (x955 2391746891)))
(assert (x2022 x1053))
(assert (= (or x2531 x1364) x430))
(assert (x2447 x1175))
(assert (x2022 x2769))
(assert (x2022 x621))
(assert (= (x3873 (x3866 x1842 1)) (+ (x3873 x1842) 1)))
(assert (= x2931 (x3873 (x512 x2931))))
(assert (x2022 x2998))
(assert (x2022 x1475))
(assert (x2022 x3537))
(assert (x2022 x994))
(assert (x3201 x2725))
(assert (= (and (not x3513) x329) x2244))
(assert (x2022 x445))
(assert (= x1487 (and x763 x1956)))
(assert (= (and x809 x198) x340))
(assert (x2022 x1285))
(assert (= (x3873 (x512 x1516)) x1516))
(assert (x2022 x783))
(assert (= (=> (and (= x1008 0) (= x1981 x2121)) x900) x1891))
(assert (x2022 x3677))
(assert (x2022 x33))
(assert (x2022 x1479))
(assert (= x3442 (and (=> (and (and (and (>= x3002 0) (>= 1461501637330902918203684832716283019655932542975 x3002) (= x3865 (ite (> x720 1) (not (= x3002 0)) (> x720 1))) (= x1098 (x534 (x512 x664) x3538 0)) (= (x3866 x1098 1) x126) (= x3002 (x2485 x126)) (> 1461501637330902918203684832716283019655932542976 x3002)) (or (and (= x3053 x3865) (not x3865)) (and (and (<= x661 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (not x1673) x3053) (<= 0 x661) (= x661 (x293 x1163)) (= (< x661 x3039) x1673) (= x1163 (x3866 x3098 2)) (= x3098 (x534 (x512 x3002) x3538 0))) x3865))) x3567) x3333) (=> (and (not x3567) (and (= x1457 0) (= x664 x2107))) x106))))
(assert (x2022 x896))
(assert (x2022 x2183))
(assert (= x411 (and (not x966) x428)))
(assert (= 44970383829727661923261016617897238973146650624978361361029103362720544063488 (x3873 (x955 44970383829727661923261016617897238973146650624978361361029103362720544063488))))
(assert (= (and x1305 (not x2414)) x3839))
(assert (x2022 x502))
(assert (x2022 x1636))
(assert (x2022 x427))
(assert (= 1000000000000000000 (x3873 (x955 1000000000000000000))))
(assert (= x946 (or x2355 x3231)))
(assert (= x3643 (and x2190 x1584)))
(assert (= (or x379 x1657) x1041))
(assert (= x1774 (=> (and (or (not x2190) x2190) (= x2190 (= x2974 0))) x3779)))
(assert (x2022 x2246))
(assert (= x3034 (and x2845 (not x2340))))
(assert (= (and x633 x3347) x849))
(assert (= x3940 (or x872 x561)))
(assert (x2022 x796))
(assert (x2022 x2836))
(assert (x2022 x1402))
(assert (= (and (not x1536) x2990) x169))
(assert (= (+ 2 (x3873 x3197)) (x3873 (x3866 x3197 2))))
(assert (x2022 x3248))
(assert (x2022 x2047))
(assert (x2447 x2836))
(assert (x2022 x2254))
(assert (= x2725 (x3873 (x512 x2725))))
(assert (= x609 (and x645 x3304)))
(assert (= x1182 (or x1086 x2694)))
(assert (x2022 x1592))
(assert (x3201 x2098))
(assert (x2022 x1975))
(assert (x2022 x2194))
(assert (= x2320 (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x266) (= (= 0 x266) x1276) (< x266 1461501637330902918203684832716283019655932542976) (<= 0 x266)) (or (and (not x1276) (and (<= 0 x266) (= (x3155 (+ 32 x3660)) x738) (= x3660 (x3155 (+ x3520 4))) (< x1301 4294967296) (= (x2265 (x512 x266)) x3090) (= (x3155 (+ x738 32)) x1939) (= x212 (x2182 1461501637330902918203684832716283019655932542975 x544)) (not (= x3090 0)) (<= x266 1461501637330902918203684832716283019655932542975) (< x266 1461501637330902918203684832716283019655932542976))) x1276)) x3043)))
(assert (x3201 x728))
(assert (= (x512 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x955 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (= (and x1275 (not x3544)) x633))
(assert (=> (>= 10000 x1818) (= (x955 x1818) (x512 x1818))))
(assert (= (or x767 x3630 x2650) x1979))
(assert (x2022 x3623))
(assert (= (or x3274 x356) x111))
(assert (= (x3873 (x3866 x3323 1)) (+ 1 (x3873 x3323))))
(assert (= (and (=> (and (and (or (and (and (>= x336 0) (= x336 (x180 x1015)) (<= x336 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (not x1902) x2597) (= (x534 (x512 x940) x149 0) x2359) (= x1015 (x3866 x2359 2)) (= x1902 (> x139 x336))) x2657) (and (not x2657) (= x2657 x2597))) (and (<= x940 1461501637330902918203684832716283019655932542975) (< x940 1461501637330902918203684832716283019655932542976) (= x940 (x88 x3070)) (= x2318 (x534 (x512 x2098) x149 0)) (= x3070 (x3866 x2318 1)) (>= x940 0) (= x2657 (ite (> x720 1) (not (= x940 0)) (> x720 1))))) x493) x2296) (=> (and (not x493) (and (= 0 x3740) (= x1251 x2098))) x343)) x1627))
(assert (=> (<= x318 10000) (= (x955 x318) (x512 x318))))
(assert (= x266 (x3873 (x512 x266))))
(assert (x2022 x421))
(assert (x2022 x1932))
(assert (x2022 x2813))
(assert (x2022 x3897))
(assert (= x441 (=> (and (= 0 x2266) (= x1118 x3440)) x3316)))
(assert (= (and (not x982) x672) x1178))
(assert (= (+ (x3873 x2624) 1) (x3873 (x3866 x2624 1))))
(assert (x2022 x123))
(assert (x3201 x2550))
(assert (x2022 x250))
(assert (=> (<= x548 10000) (= (x955 x548) (x512 x548))))
(assert (x2022 x2379))
(assert (x2022 x1719))
(assert (= (x512 2217467699) (x955 2217467699)))
(assert (= x3231 (and x1624 x3693)))
(assert (x2022 x1328))
(assert (x2022 x77))
(assert (= (and (not x2314) x849) x3904))
(assert (x2022 x2140))
(assert (x2022 x2419))
(assert (= x3457 (x3873 (x512 x3457))))
(assert (x2022 x341))
(assert (x2022 x3917))
(assert (x3201 x158))
(assert (x2022 x750))
(assert (x2022 x3073))
(assert (x2022 x2503))
(assert (= x1355 (=> (and (= x1518 x3862) (not (= x1850 0)) (>= 1461501637330902918203684832716283019655932542975 x896) (= (x3155 (+ x1631 x1953)) x3862) (= (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3518) x1953) (= x1263 x896) (= (x3155 (+ 31 x2185)) x3518) (= (x2852 x1631) x896) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2185) true) (> 32 x2185)) (> x2185 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x2229)))
(assert (x2022 x1246))
(assert (= (x512 26675680369413430104207330802600748686362808878094982966429686717365230764032) (x955 26675680369413430104207330802600748686362808878094982966429686717365230764032)))
(assert (x2022 x81))
(assert (x2022 x2128))
(assert (= x2694 (and x1677 x3574)))
(assert (= (+ (x3873 x944) 1) (x3873 (x3866 x944 1))))
(assert (x2022 x333))
(assert (x2022 x332))
(assert (x3201 x2824))
(assert (= (and x2133 x1506) x3479))
(assert (= x1531 (and (not x1400) x3653)))
(assert (= x3892 x3124))
(assert (x2022 x99))
(assert (x2022 x2602))
(assert (= x900 (=> (and (= x3744 x1981) (= x1008 x3145)) x1800)))
(assert (x2022 x2886))
(assert (= (x3873 (x512 x3002)) x3002))
(assert (= x3599 (and x3477 x346)))
(assert (x2022 x612))
(assert (x2022 x1008))
(assert (= (+ (x3873 x876) 3) (x3873 (x3866 x876 3))))
(assert (= x3223 (and x1836 x2010)))
(assert (x2022 x3738))
(assert (= (x955 18446744073709551615) (x512 18446744073709551615)))
(assert (= x553 (or x1709 x429)))
(assert (x2022 x647))
(assert (x2022 x575))
(assert (= (+ 1 (x3873 x1450)) (x3873 (x3866 x1450 1))))
(assert (x2022 x1409))
(assert (= (and x2382 (not x3006)) x3341))
(assert (x2022 x1308))
(assert (= (and x2427 x670) x3344))
(assert (= x3443 (and x2417 x1411)))
(assert (x2022 x844))
(assert (= (and x3837 x1173) x383))
(assert (= x310 (and x835 x3359)))
(assert (= x1251 (x3873 (x512 x1251))))
(assert (= x1260 (or x3234 x1686)))
(assert (x2022 x2635))
(assert (= (x512 3199929250) (x955 3199929250)))
(assert (x2022 x1203))
(assert (not x339))
(assert (= x2781 (and x2925 x2581)))
(assert (= x2098 (x3873 (x512 x2098))))
(assert (= x1944 (=> (and (= x2731 x1605) (= x2454 x927) (= 0 x3182)) x146)))
(assert (= x3662 (or x3301 x1742)))
(assert (x2022 x2276))
(assert (x2022 x3831))
(assert (x2022 x3087))
(assert (= x2845 (and (not x3330) x3212)))
(assert (= (and (not x1931) x464) x476))
(assert (= x605 (or x2626 x2714 x3091 x2618 x1388)))
(assert (= x3436 (and x2103 x3559)))
(assert (= (x3873 (x3866 x3929 1)) (+ (x3873 x3929) 1)))
(assert (x2022 x3602))
(assert (x2022 x3838))
(assert (x2022 x447))
(assert (x2022 x214))
(assert (x2022 x917))
(assert (x2022 x291))
(assert (= x1384 (=> (and (= x1638 x762) (= x746 x2443) (= x3243 x2631) (= x2849 x924)) x3748)))
(assert (x3201 x1699))
(assert (= (x955 4294967296) (x512 4294967296)))
(assert (x2022 x1372))
(assert (= (=> (= x3065 (< 0 x139)) (and (=> (and (and (and (= x1876 (ite (> x720 0) (not (= 0 x2098)) (> x720 0))) (= x2098 (x3366 x890)) (= x3742 (x180 x175)) (= x3742 0) (<= 0 x2098) (= (x3866 x149 1) x890) (= x2343 (x534 (x512 x496) x149 0)) (<= x3742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x2098 1461501637330902918203684832716283019655932542976) (<= x720 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2098 1461501637330902918203684832716283019655932542975) (>= x720 0) (<= 0 x3742) (= (x3866 x2343 2) x175) (not (= 0 x496))) (or (and (= x1876 x493) (not x1876)) (and x1876 (and (= x251 (x180 x2756)) (= (> x139 x251) x2186) (= (x3866 x3922 2) x2756) (<= 0 x251) (<= x251 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3922 (x534 (x512 x2098) x149 0)) (= (not x2186) x493))))) x3065) x1627) (=> (and (= x2909 x1773) (not x3065)) x415))) x857))
(assert (= (x3873 (x512 x456)) x456))
(assert (x2022 x1087))
(assert (x2022 x24))
(assert (x2022 x3912))
(assert (x3201 x2786))
(assert (x2022 x2285))
(assert (= x2122 (=> (and (= (x3866 x253 1) x2911) (= (x534 (x512 x1140) x3538 0) x2903) (= (x3866 x2903 1) x253)) x2637)))
(assert (x2022 x1726))
(assert (= 60231946789637257468838019015344037944473233080083133266033501538020963123200 (x3873 (x955 60231946789637257468838019015344037944473233080083133266033501538020963123200))))
(assert (= x3167 (and (not x2591) x41)))
(assert (x2022 x979))
(assert (x3201 x2611))
(assert (x2022 x626))
(assert (= (x3873 (x955 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x3873 (x955 2391746891)) 2391746891))
(assert (x3201 x1174))
(assert (= x548 (x3873 (x512 x548))))
(assert (x2022 x3399))
(assert (x2022 x3362))
(assert (= x1441 (and x2062 (not x2278))))
(assert (= (or x383 x1122) x608))
(assert (x2022 x996))
(assert (x2022 x2737))
(assert (= x3284 (and x3097 (not x3755))))
(assert (= x2747 (or x330 x1082)))
(assert (x2022 x2598))
(assert (x2022 x700))
(assert (x2022 x283))
(assert (= x3630 (or x1532 x1763)))
(assert (x2022 x2444))
(assert (x2022 x1102))
(assert (= x2468 (and x2273 (not x3053))))
(assert (= x2224 (or x1573 x2095)))
(assert (x2022 x1950))
(assert (= x1671 (=> (and (or (and (and (= (x3103 (x512 x3692)) x768) (<= 0 x3692) x2695 (= (<= x186 x804) x2695) (= x3093 (x3155 (+ x186 x824))) (< (+ x186 x824) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x3665 x186) x576) (> 4294967296 x3761) (= (x2265 (x512 x3692)) x2232) (= (x3103 (x512 x3029)) x3665) (= x2219 (< (+ x768 x186) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2219 (= (x2899 (x512 x3692)) x824) (<= x3692 1461501637330902918203684832716283019655932542975) (not (= 0 x2232)) (= (x3103 (x512 x3029)) x804) (> 1461501637330902918203684832716283019655932542976 x3692)) (not x1462)) x1462) (and (= x2867 (x2182 1461501637330902918203684832716283019655932542975 x544)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3619) (and (= (<= x3619 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x3619)))) (= (x3331 (- x2867 x556)) x538) (= x2811 (x3148 x2204)) (<= x556 1461501637330902918203684832716283019655932542975) (>= x556 0) (= x2811 0) (> 1461501637330902918203684832716283019655932542976 x556) (= x2443 (x3155 (+ x3391 x2204))) (= x3391 (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639904 x549)) (= x1462 (> x538 0)) (not (= x3390 0)) (= (x3155 (+ x3619 31)) x549))) x1384)))
(assert (x2022 x2806))
(assert (x2022 x2335))
(assert (= (=> (and (= x642 x1021) (= x439 x2052)) x3941) x2994))
(assert (= x63 (or x15 (and (not x792) x2261))))
(assert (= x2100 (and x19 x1276)))
(assert (x2022 x662))
(assert (= x622 (and (not x2799) x3731)))
(assert (= x2890 (and x3940 x272)))
(assert (= 988262939 (x3873 (x955 988262939))))
(assert (= (and (not x3566) x1365) x3561))
(assert (=> (>= 10000 x3029) (= (x955 x3029) (x512 x3029))))
(assert (= (and x613 (not x2496)) x1930))
(assert (x2022 x3084))
(assert (= x2765 (and x2868 x1112)))
(assert (= (=> (and (= x371 x642) (= x439 x270)) x3941) x2439))
(assert (x2022 x878))
(assert (= (+ 2 (x3873 x2366)) (x3873 (x3866 x2366 2))))
(assert (= x2067 (or x2559 x1898)))
(assert (x2022 x495))
(assert (x2022 x2560))
(assert (x2022 x2071))
(assert (x2022 x2771))
(assert (= x1721 (or x3821 x268)))
(assert (= (and x1032 x1354) x1752))
(assert (x3201 x1102))
(assert (= (and x2797 x3824) x2472))
(assert (x2022 x1223))
(assert (x3201 x1613))
(assert (x2022 x3152))
(assert (= (or x28 x2802 x1101) x2010))
(assert (x2022 x2651))
(assert (x2022 x1150))
(assert (= (or x818 x2828) x1363))
(assert (x2022 x3039))
(assert (= x1990 (or x2663 x2896 x335 x539 x3589)))
(assert (= (and x513 (not x490)) x2969))
(assert (x2022 x1268))
(assert (= (and x1705 (not x3218)) x3427))
(assert (x2022 x1430))
(assert (x2022 x3297))
(assert (= x756 (or x2683 x2967 x1240)))
(assert (= (+ 1 (x3873 x945)) (x3873 (x3866 x945 1))))
(assert (= x2578 (and x3813 (not x3452))))
(assert (= (and (=> (and (and (and (<= x747 1461501637330902918203684832716283019655932542975) (= (ite (> x720 1) (not (= x747 0)) (< 1 x720)) x3272) (= x811 (x534 (x512 x3146) x2766 0)) (= x3289 (x3866 x811 1)) (= x747 (x840 x3289)) (> 1461501637330902918203684832716283019655932542976 x747) (<= 0 x747)) (or (and (and (>= x3363 0) (= (x534 (x512 x747) x2766 0) x224) (<= x3363 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1284 x3363) x1113) (= (not x1113) x2937) (= (x3866 x224 2) x1681) (= (x2365 x1681) x3363)) x3272) (and (= x2937 x3272) (not x3272)))) x2799) x776) (=> (and (not x2799) (and (= 0 x3700) (= x1635 x3146))) x837)) x653))
(assert (= (x3873 (x512 x2429)) x2429))
(assert (= (x3873 (x3866 x2051 1)) (+ (x3873 x2051) 1)))
(assert (x2022 x189))
(assert (= x3095 (=> (and (= (ite (> x720 x1089) (not (= x158 0)) (< x1089 x720)) x3916) (or (and x3916 (and (or (and x3704 (and (< x3512 1461501637330902918203684832716283019655932542976) (>= x3512 0) (= (x534 (x512 x158) x386 0) x3848) (= x3512 (x2862 x3848)) (<= x3512 1461501637330902918203684832716283019655932542975))) (not x3704)) (and (<= x1900 1461501637330902918203684832716283019655932542975) (= (x3331 (- x158 x1900)) x2073) (>= x1900 0) (= x3704 (> x2073 0)) (< x1900 1461501637330902918203684832716283019655932542976) (= x1900 (x819 x1197))))) (and (and (or x3359 (and (and (> 1461501637330902918203684832716283019655932542976 x2395) (<= 0 x2395) (= x397 (x3866 x1197 1)) (= x2395 (x1309 x397)) (<= x2395 1461501637330902918203684832716283019655932542975)) (not x3359))) (and (< x960 1461501637330902918203684832716283019655932542976) (= (= x960 0) x3359) (<= x960 1461501637330902918203684832716283019655932542975) (>= x960 0) (= x960 (x819 x1197)))) (not x3916)))) x2001)))
(assert (= (x512 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x955 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (= x3551 (and x2456 (not x3013))))
(assert (x2022 x2171))
(assert (x2022 x2558))
(assert (x3201 x1998))
(assert (x2022 x3383))
(assert (x2022 x1474))
(assert (= (and x806 x846) x1334))
(assert (=> (>= 10000 x544) (= (x512 x544) (x955 x544))))
(assert (= (and x1382 (not x1797)) x2028))
(assert (= (=> (and (= x86 x3007) (= 0 x2441)) x1023) x3694))
(assert (= (and (not x3794) x1007) x64))
(assert (x2022 x436))
(assert (x2022 x2933))
(assert (= x1002 (and x2393 x3817)))
(assert (x2022 x2364))
(assert (= x1513 (and x3626 x1738)))
(assert (= (x3873 (x512 x844)) x844))
(assert (= x2356 (and x3921 x3175)))
(assert (x2022 x864))
(assert (x2022 x344))
(assert (x3201 x680))
(assert (x2022 x2819))
(assert (x2022 x2964))
(assert (= x206 (and x2409 x2117)))
(assert (= x2999 (and x1707 x2814)))
(assert (x2022 x2790))
(assert (= x3931 (and x482 x1985)))
(assert (= (and (not x2039) x1177) x1139))
(assert (x2022 x904))
(assert (= x2989 (and x570 x2410)))
(assert (= x1670 (and x1644 x3088)))
(assert (= (and x1689 x597) x3364))
(assert (x2022 x1198))
(assert (= (and x3603 x2827) x3308))
(assert (= (and x597 (not x1689)) x2749))
(assert (x2022 x1471))
(assert (x2022 x1103))
(assert (x2022 x3647))
(assert (x2022 x3381))
(assert (= (x3873 (x512 x807)) x807))
(assert (x2022 x3285))
(assert (= (=> (= (< 0 x3415) x90) (and (=> (and (and (or (and (and (= (= x3432 x3398) x296) (or (and (not x296) (and (= (= x3398 x3181) x3210) (and x3210 (and (not (= x596 2691771752)) (not (> 2691771752 x596)) (not (< x739 4)) (= x685 1) (not (= x596 2796547477)) (not (= x596 2835717307)) (>= x2792 0) (= x2530 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= x1787 (x2265 (x512 x3181))) (< 0 x1787) (= 2858086653 x596) (= 4 x739) (= x739 x1141) (<= x2792 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2432 32) (< x596 2929553584) (not (< x596 2217467699)))))) (and (and (<= x3041 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2858086653 x1245) (= 1 x685) (not (< x1245 2691771752)) (>= x3041 0) (not (= x1245 2691771752)) (not (< x1245 2217467699)) (not (> 4 x1414)) (< 0 x13) (< x1245 2929553584) (= x623 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= 4 x1414) (not (= 2796547477 x1245)) (= x1414 x1141) (= x2432 32) (not (= 2835717307 x1245)) (= (x2265 (x512 x3432)) x13)) x296))) (not x1422)) (and x1422 (and (not (> 2217467699 x3942)) (not (> 2691771752 x3942)) (= x3420 4) (= x685 1) (> 2929553584 x3942) (= (x2265 (x512 x318)) x3584) (= x3362 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (< x3420 4)) (= 2858086653 x3942) (= x3420 x1141) (< 0 x3584) (not (= x3942 2691771752)) (= x2432 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1602) (not (= 2796547477 x3942)) (>= x1602 0) (not (= x3942 2835717307))))) (and (= x1141 4) (= x3398 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= x1422 (= x3398 x318)))) x90) x1212) (=> (and (= x3255 x1958) (not x90)) x1310))) x3815))
(assert (= x3787 (or x3900 x3424)))
(assert (= (and x1607 (not x2985)) x2991))
(assert (x2022 x302))
(assert (= x908 (and x2832 x461)))
(assert (x2022 x488))
(assert (x2022 x2625))
(assert (x2022 x3791))
(assert (x2022 x2881))
(assert (x2022 x2205))
(assert (= x1117 (=> (and (or (and x272 (and (= (x2182 1461501637330902918203684832716283019655932542975 x544) x121) (>= x3260 0) (= x59 (x534 (x512 x121) (x955 163) 0)) (<= x3260 255) (= (x2060 x59) x3260) (< x3260 256) (= x2399 (= x3260 0)))) (and (= x2399 x272) (not x272))) (= (< 0 x3649) x272)) x611)))
(assert (x2022 x2532))
(assert (= x3374 (not (and (= x1196 (x1256 x3137)) (= (x3866 x2051 1) x3137) (= x2051 (x534 (x512 x2583) x2992 0)) (>= 1461501637330902918203684832716283019655932542975 x1196) (< x1196 1461501637330902918203684832716283019655932542976) (<= 0 x1196)))))
(assert (= (and x115 x3681) x3489))
(assert (=> (>= 10000 x1152) (= (x955 x1152) (x512 x1152))))
(assert (= (x3873 (x955 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x3873 (x512 x3181)) x3181))
(assert (= (x3873 (x955 1856199391)) 1856199391))
(assert (= x1316 (=> (and (or (and (= x997 (x534 (x512 x495) x2766 0)) (not x89)) (and x89 (= (x3866 x2766 2) x3353))) (= (= x495 0) x89)) x1204)))
(assert (x2022 x1291))
(assert (x2022 x3398))
(assert (= x664 (x3873 (x512 x664))))
(assert (= x1857 (=> (and (= x585 0) (= x1118 x1807)) x2588)))
(assert (= (and (not x2401) x3252) x620))
(assert (x2022 x62))
(assert (x2022 x3090))
(assert (= (and (not x3807) x3414) x2575))
(assert (= (and x52 x3857) x1180))
(assert (= (and x2315 x1391) x501))
(assert (= 114138022719912475680867045629478960338713192110453415424194996738542475935744 (x3873 (x955 114138022719912475680867045629478960338713192110453415424194996738542475935744))))
(assert (= x1572 (and x2827 (not x3603))))
(assert (= x3605 (and (not x2975) x2435)))
(assert (=> (<= x3712 10000) (= (x955 x3712) (x512 x3712))))
(assert (= (=> (and (= x879 0) (= x625 x86)) x1012) x3678))
(assert (= x952 (and x2971 (not x3896))))
(assert (x2022 x505))
(assert (x2022 x829))
(assert (x2022 x3290))
(assert (= (x3873 (x512 x1635)) x1635))
(assert (= (and x3279 (not x1283)) x3621))
(assert (= x3402 (and x205 x3065)))
(assert (= x1212 (=> (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x283 x847)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x3802)) (<= 0 x847) (= x283 x3872) (= x634 (< 115792089237316195423570985008687907853269984665640564039457 x3415)) (= (x3155 (+ x3255 x1142)) x1084) (= (x2141 x1290) x847) (= (* 1000000000000000000 x3802) x31) (= x283 (div x2933 1000000000000000000)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x847) (= (x3155 (+ 32 x3687)) x1502) (= x50 x847) (= x3206 (x3543 x3255)) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x1348) (= (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2017) x1142) (not (or (> x2432 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2432 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2432)))) (= x3802 (mod (* 1000000000000000000 x3415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3687 (x3155 (+ x1084 4))) (= (ite x634 1 0) x1669) (= (+ x50 x3872) x3343) (= x1290 (x3866 x3784 1)) (= x595 (x3331 (- x1502 x1084))) (= x1669 0) (= x2017 (x3155 (+ x2432 31))) (= x2933 (div x31 x3206)) (= x2791 (= x318 x1348)) (< 0 x3206) (not (= 0 x685))) (and (=> (and (not x2791) (= x1620 (= x1348 x3432))) (and (=> (and (and (= 3320572652 x1932) (= x1612 36) (= x595 x1612) (not (> 2217467699 x1932)) (not (< x1612 4)) (= 89522461602318961266474185744428785802019839140862557341176434972013554040832 x2493) (= (or (> x1040 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1040)) (> 32 x1040))) x869) (not (> 3320572652 x1932)) (not (< x1932 2929553584)) (= (x2265 (x512 x3432)) x3558) (= x1040 (x3331 (- x1612 4))) (< 0 x3558) (= x3415 x3656)) x1620) (and (=> (and (not x869) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3386) (<= 0 x3386) (= x3485 (> x3415 x3386)) (= x3656 x899))) (and (=> (and (not x3485) (and (>= x2246 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2246) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3656)) x2987) (= x2246 (x385 x3915)) (= x3915 (x534 (x512 x3029) (x955 6) 0)) (= x1126 (> x2246 x2987)))) (and (=> (and (and (>= x3386 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3386) (= x612 (x3155 (+ x3656 x2246))) (= x1802 (< x3386 x3656))) (not x1126)) (and (=> (and (not x1802) (and (= 128 x2729) (>= x1714 0) (< x1714 1461501637330902918203684832716283019655932542976) (<= x1714 1461501637330902918203684832716283019655932542975) (= (x3331 (- x3386 x3656)) x3771) (= (= x1714 x1516) x2908))) (and (=> (and x2908 (and (= 68 x2571) (= x2931 x3029) (= x2422 (x2265 (x512 x1516))) (not (> 2835717307 x2421)) (< 0 x2422) (= (or (> x3369 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3369 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3369 64))) x3218) (= 68 x2571) (not (< x2571 4)) (= x899 x402) (not (< x2421 1466279372)) (= (x3331 (- x2571 4)) x3369) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x821) (= x2421 2835717307))) (and (=> x3218 x3368) (=> (and (and (= x1154 x2931) (= (= x3029 x2931) x3840)) (not x3218)) (and (=> (not x3840) x3368) (=> (and (and (= x3919 (x2113 x2236)) (<= x3919 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x995 (< x3919 x899)) (>= x3919 0) (= x402 x2118) (= (x534 (x512 x3432) (x955 1) 0) x2236)) x3840) (and (=> x995 x3368) (=> (and (= (< x3919 x402) x806) (not x995)) (and (=> (and (not x806) (and (= x1063 (< x2374 x455)) (= (x267 x1704) x455) (= (x534 (x512 x2931) (x955 1) 0) x1704) (= (x3331 (- x3919 x402)) x3546) (= (x534 (x512 x3432) (x955 1) 0) x933) (<= x455 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x455) (= x2374 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x402))))) (and (=> (and (and (= (< x2494 x455) x2409) (= x2494 (x3155 (+ x402 x455)))) (not x1063)) (and (=> (and (not x2409) (and (= (x534 (x512 x2931) (x955 1) 0) x3635) (= 32 x3437) (= x1764 1))) x1825) (=> x2409 x3368))) (=> x1063 x3368))) (=> x806 x3368))))))))) (=> (and (not x2908) (= x3013 (= x1714 x318))) (and (=> (and (not x3013) (= (= x3432 x1714) x1568)) (and (=> (and x1568 (and (= x3029 x3249) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3381) (= 68 x3400) (= x3102 (or (and (< x2245 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2245) true)) (> x2245 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x899 x344) (= x2329 2835717307) (not (> 2691771752 x2329)) (> 2929553584 x2329) (not (= x2329 2691771752)) (= (x3331 (- x3400 4)) x2245) (not (= x2329 2796547477)) (not (< x3400 4)) (= x3400 68) (not (> 2217467699 x2329)) (> x2521 0) (= x2521 (x2265 (x512 x3432))))) (and (=> (and (and (= x1299 x3249) (= (= x3029 x3249) x2106)) (not x3102)) (and (=> (and x2106 (and (<= x505 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2260 (< x505 x899)) (>= x505 0) (= (x534 (x512 x3432) (x955 5) 0) x812) (= x505 (x925 x812)) (= x344 x2895))) (and (=> (and (not x2260) (and (<= x3180 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x344 x3180) x79) (= (x534 (x512 x3432) (x955 5) 0) x587) (<= 0 x3180) (= (x925 x587) x3180))) (and (=> (and (and (= (x534 (x512 x3249) (x955 5) 0) x1477) (= (x3046 x1477) x2253) (= x2569 (< x1153 x2253)) (<= 0 x2253) (= (x3331 (- x3180 x344)) x398) (= x1153 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344))) (<= x2253 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x79)) (and (=> (and (not x2569) (and (= (x3155 (+ x344 x2253)) x580) (= x1021 32) (= x2052 1) (= 1 x469))) x2994) (=> x2569 x95))) (=> x79 x95))) (=> x2260 x95))) (=> (not x2106) x95))) (=> x3102 x95))) (=> (and (not x1568) (and (and (and (not (< x3096 4)) (= (x3331 (- x3096 4)) x3089) (= 68 x3096) (= x3029 x1589) (= x2545 2835717307) (not (> 2217467699 x2545)) (< 0 x3611) (not (= 2796547477 x2545)) (not (< x2545 2691771752)) (= x48 x899) (not (= 2691771752 x2545)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x624) (= (x2265 (x512 x3181)) x3611) (= (or (and (= true (<= x3089 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3089 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3089)) x2524) (> 2929553584 x2545) (= x3096 68)) x2775) (= x2775 (= x3181 x1714)))) (and (=> x2524 x129) (=> (and (and (= x3756 (= x1589 x3029)) (= x3152 x1589)) (not x2524)) (and (=> (and (and (= (< x3338 x899) x1151) (= (x2510 x2534) x3338) (= x48 x1195) (>= x3338 0) (<= x3338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2534 (x534 (x512 x3432) (x955 5) 0))) x3756) (and (=> x1151 x129) (=> (and (and (= x751 (> x48 x127)) (= (x2510 x1675) x127) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x127) (>= x127 0) (= x1675 (x534 (x512 x3432) (x955 5) 0))) (not x1151)) (and (=> x751 x129) (=> (and (not x751) (and (= (x1722 x2013) x171) (= x820 (x3331 (- x127 x48))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x171) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x48)) x3265) (= (x534 (x512 x1589) (x955 5) 0) x2013) (<= 0 x171) (= (> x171 x3265) x2414))) (and (=> x2414 x129) (=> (and (not x2414) (and (= x371 32) (= 1 x270) (= (x3155 (+ x48 x171)) x2677) (= 1 x2753))) x2439))))))) (=> (not x3756) x129))))))) (=> (and (and (not (< x3460 2691771752)) (= x682 x899) (not (= 2691771752 x3460)) (= x1085 (or (> x694 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x694 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x694))))) (= 68 x2787) (= x3142 (x2265 (x512 x318))) (< x3460 2929553584) (= x248 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x3029 x1954) (< 0 x3142) (= x694 (x3331 (- x2787 4))) (not (< x3460 2217467699)) (not (> 4 x2787)) (not (= 2796547477 x3460)) (= 68 x2787) (= 2835717307 x3460)) x3013) (and (=> (and (and (= x1954 x147) (= (= x3029 x1954) x228)) (not x1085)) (and (=> (and (and (= x3466 (< x2076 x899)) (= (x3131 x274) x2076) (<= x2076 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3406 x682) (>= x2076 0) (= x274 (x534 (x512 x3432) (x955 5) 0))) x228) (and (=> x3466 x312) (=> (and (not x3466) (and (= (> x682 x3052) x30) (= x3332 (x534 (x512 x3432) (x955 5) 0)) (<= x3052 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3052 0) (= (x3131 x3332) x3052))) (and (=> (and (and (<= x3373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3331 (- x3052 x682)) x116) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x682)) x3464) (= x3373 (x2216 x2248)) (= (x534 (x512 x1954) (x955 5) 0) x2248) (<= 0 x3373) (= (> x3373 x3464) x3814)) (not x30)) (and (=> (and (and (= x3715 (x3155 (+ x682 x3373))) (= x3679 1) (= x2671 32) (= x3009 1)) (not x3814)) x3732) (=> x3814 x312))) (=> x30 x312))))) (=> (not x228) x312))) (=> x1085 x312))))))) (=> x1802 x3625))) (=> x1126 x3625))) (=> x3485 x3625))) (=> x869 x3625))) (=> (and (and (and x1065 (and (= x570 (or (and (> 32 x575) (= (<= x575 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x575 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2538 3320572652) (= x3415 x345) (> x3487 0) (not (> 2217467699 x2538)) (= 89522461602318961266474185744428785802019839140862557341176434972013554040832 x2887) (= x3487 (x2265 (x512 x3181))) (= (x3331 (- x2602 4)) x575) (not (< x2538 2929553584)) (= x2602 36) (not (< x2602 4)) (= x595 x2602) (not (< x2538 3320572652)))) (= x1065 (= x3181 x1348))) (not x1620)) (and (=> (and (and (<= x589 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x589) (= x2131 x345) (= x1485 (< x589 x3415))) (not x570)) (and (=> (and (not x1485) (and (= (< x878 x246) x2470) (= x246 (x598 x3054)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x246) (= x3054 (x534 (x512 x3029) (x955 6) 0)) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x345)) x878) (<= 0 x246))) (and (=> (and (not x2470) (and (>= x589 0) (= (< x589 x345) x135) (= (x3155 (+ x246 x345)) x3027) (<= x589 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x135 x1891) (=> (and (and (= x686 128) (= (= x757 x1516) x718) (= (x3331 (- x589 x345)) x373) (>= 1461501637330902918203684832716283019655932542975 x757) (> 1461501637330902918203684832716283019655932542976 x757) (<= 0 x757)) (not x135)) (and (=> (and (not x718) (= (= x318 x757) x482)) (and (=> (and (not x482) (= x3187 (= x3432 x757))) (and (=> (and x3187 (and (= 68 x1778) (not (> 4 x1778)) (= x3029 x697) (> 2929553584 x3112) (= x29 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3747) (and (< x3747 64) (= (<= x3747 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= 2796547477 x3112)) (= x3747 (x3331 (- x1778 4))) (= x3112 2835717307) (= x3458 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2691771752 x3112)) (not (< x3112 2217467699)) (> x708 0) (= 68 x1778) (= x708 (x2265 (x512 x3432))) (= x2131 x1895) (not (= x3112 2691771752)))) (and (=> x29 x3012) (=> (and (not x29) (and (= x2797 (= x3029 x697)) (= x697 x996))) (and (=> (and (and (= x1066 (> x2131 x220)) (= x3897 x1895) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x220) (= x3858 (x534 (x512 x3181) (x955 5) 0)) (<= 0 x220) (= (x925 x3858) x220)) x2797) (and (=> x1066 x3012) (=> (and (not x1066) (and (= (x534 (x512 x3181) (x955 5) 0) x732) (= (< x1255 x1895) x2336) (>= x1255 0) (<= x1255 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1255 (x925 x732)))) (and (=> x2336 x3012) (=> (and (and (= x2881 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1895))) (= (< x2881 x1200) x3409) (= (x391 x572) x1200) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1200) (>= x1200 0) (= (x3331 (- x1255 x1895)) x2653) (= (x534 (x512 x697) (x955 5) 0) x572)) (not x2336)) (and (=> (and (not x3409) (and (= 1 x2471) (= x1564 (x3155 (+ x1200 x1895))) (= x189 32) (= x83 1))) x470) (=> x3409 x3012))))))) (=> (not x2797) x3012))))) (=> (and (not x3187) (and (and x1133 (and (< x1517 2929553584) (= x670 (or (> x3319 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x3319 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x3319)))) (= x696 x2131) (not (= 2796547477 x1517)) (not (= 2691771752 x1517)) (< 0 x3076) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1308) (= 2835717307 x1517) (= 68 x1068) (not (> 2691771752 x1517)) (= x3029 x2550) (= (x3331 (- x1068 4)) x3319) (not (> 2217467699 x1517)) (= x1068 68) (= x3076 (x2265 (x512 x3181))) (not (< x1068 4)))) (= x1133 (= x3181 x757)))) (and (=> x670 x76) (=> (and (and (= x2550 x2664) (= (= x2550 x3029) x2139)) (not x670)) (and (=> (and (and (<= x284 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x696 x1549) (= x284 (x2510 x2489)) (= x3475 (< x284 x2131)) (<= 0 x284) (= x2489 (x534 (x512 x3181) (x955 5) 0))) x2139) (and (=> x3475 x76) (=> (and (not x3475) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1757) (= x1757 (x2510 x1244)) (= (< x1757 x696) x361) (= x1244 (x534 (x512 x3181) (x955 5) 0)) (>= x1757 0))) (and (=> (and (not x361) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1103) (>= x1103 0) (= x337 (x534 (x512 x2550) (x955 5) 0)) (= (x3331 (- x1757 x696)) x453) (= (x2687 x337) x1103) (= x1214 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x696))) (= (< x1214 x1103) x571))) (and (=> x571 x76) (=> (and (and (= x1633 1) (= (x3155 (+ x1103 x696)) x1922) (= 32 x1190) (= 1 x3607)) (not x571)) x2859))) (=> x361 x76))))) (=> (not x2139) x76))))))) (=> (and x482 (and (> x1879 0) (not (= x1760 2796547477)) (= x1362 (x3331 (- x6 4))) (not (< x1760 2691771752)) (not (= x1760 2691771752)) (= x535 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1362) true) (< x1362 64)) (> x1362 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1847 x3029) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2383) (= 68 x6) (= (x2265 (x512 x318)) x1879) (not (< x1760 2217467699)) (< x1760 2929553584) (= 2835717307 x1760) (= x6 68) (= x2131 x1108) (not (> 4 x6)))) (and (=> (and (and (= x232 x1847) (= x2686 (= x3029 x1847))) (not x535)) (and (=> (not x2686) x1357) (=> (and (and (<= x3061 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1036 (x534 (x512 x3181) (x955 5) 0)) (= x3061 (x3131 x1036)) (<= 0 x3061) (= (< x3061 x2131) x2832) (= x3328 x1108)) x2686) (and (=> x2832 x1357) (=> (and (not x2832) (and (= x2723 (> x1108 x3510)) (= (x534 (x512 x3181) (x955 5) 0) x759) (>= x3510 0) (<= x3510 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3510 (x3131 x759)))) (and (=> x2723 x1357) (=> (and (not x2723) (and (<= x3595 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1474 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1108))) (= (x534 (x512 x1847) (x955 5) 0) x1292) (= (> x3595 x1474) x763) (<= 0 x3595) (= (x1030 x1292) x3595) (= (x3331 (- x3510 x1108)) x3417))) (and (=> x763 x1357) (=> (and (and (= 1 x3422) (= 32 x3746) (= (x3155 (+ x1108 x3595)) x1371) (= x3563 1)) (not x763)) x910))))))))) (=> x535 x1357))))) (=> (and x718 (and (not (> 4 x2547)) (= x2576 2835717307) (not (< x2576 2835717307)) (= x2547 68) (= x1426 x2131) (= x1493 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (and (< x2042 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2042) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2042)) x3603) (= x3029 x1188) (= (x3331 (- x2547 4)) x2042) (= x2547 68) (= x1837 (x2265 (x512 x1516))) (not (> 1466279372 x2576)) (> x1837 0))) (and (=> (and (not x3603) (and (= x188 (= x3029 x1188)) (= x1479 x1188))) (and (=> (and x188 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1618) (>= x1618 0) (= x3925 (x534 (x512 x3181) (x955 1) 0)) (= x1203 x1426) (= x1618 (x2113 x3925)) (= x3559 (> x2131 x1618)))) (and (=> (and (= (< x1618 x1426) x891) (not x3559)) (and (=> x891 x2570) (=> (and (and (<= x3127 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x534 (x512 x1188) (x955 1) 0) x1727) (<= 0 x3127) (= (x342 x1727) x3127) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1426)) x3250) (= (x534 (x512 x3181) (x955 1) 0) x1647) (= x2048 (x3331 (- x1618 x1426))) (= x989 (< x3250 x3127))) (not x891)) (and (=> x989 x2570) (=> (and (not x989) (and (= (x3155 (+ x3127 x1426)) x721) (= (< x721 x3127) x173))) (and (=> x173 x2570) (=> (and (not x173) (and (= x1912 (x534 (x512 x1188) (x955 1) 0)) (= x1471 1) (= 32 x2600))) x926))))))) (=> x3559 x2570))) (=> (not x188) x2570))) (=> x3603 x2570))))))) (=> x2470 x1891))) (=> x1485 x1891))) (=> x570 x1891))))) (=> (and (and (= (x3331 (- x99 4)) x889) (not (> 2929553584 x3883)) (= (x2265 (x512 x318)) x1542) (not (> 3320572652 x3883)) (> x1542 0) (= x1074 x3415) (not (< x99 4)) (= x595 x99) (= 89522461602318961266474185744428785802019839140862557341176434972013554040832 x557) (= (or (> x889 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x889 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x889))) x1860) (not (> 2217467699 x3883)) (= x3883 3320572652) (= x99 36)) x2791) (and (=> x1860 x1632) (=> (and (and (<= 0 x2605) (= x2364 x1074) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2605) (= x3880 (> x3415 x2605))) (not x1860)) (and (=> (and (and (= x1784 (x534 (x512 x3029) (x955 6) 0)) (= x3006 (> x2810 x3042)) (<= x2810 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1074)) x3042) (>= x2810 0) (= x2810 (x508 x1784))) (not x3880)) (and (=> x3006 x1632) (=> (and (not x3006) (and (= (x3155 (+ x2810 x1074)) x2392) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2605) (<= 0 x2605) (= (> x1074 x2605) x761))) (and (=> x761 x1632) (=> (and (and (= x308 (x3331 (- x2605 x1074))) (> 1461501637330902918203684832716283019655932542976 x239) (= x3811 (= x239 x1516)) (>= 1461501637330902918203684832716283019655932542975 x239) (= 128 x907) (>= x239 0)) (not x761)) (and (=> (and x3811 (and (= x2795 2835717307) (> x382 0) (= x2783 (or (> x3283 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x3283 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3283 64)))) (= x3283 (x3331 (- x3024 4))) (not (< x2795 2835717307)) (= 68 x3024) (= x3024 68) (= x3029 x3666) (= x616 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2128 x2364) (not (> 1466279372 x2795)) (= x382 (x2265 (x512 x1516))) (not (> 4 x3024)))) (and (=> (and (and (= x916 x3666) (= (= x3666 x3029) x928)) (not x2783)) (and (=> (and (and (= x1400 (< x3927 x2364)) (= (x2113 x902) x3927) (>= x3927 0) (= x2128 x3411) (= x902 (x534 (x512 x318) (x955 1) 0)) (<= x3927 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x928) (and (=> (and (= (< x3927 x2128) x1469) (not x1400)) (and (=> x1469 x3169) (=> (and (and (= x1249 (x534 (x512 x318) (x955 1) 0)) (<= 0 x3216) (<= x3216 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3513 (< x197 x3216)) (= (x534 (x512 x3666) (x955 1) 0) x3728) (= x197 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2128))) (= x663 (x3331 (- x3927 x2128))) (= (x3528 x3728) x3216)) (not x1469)) (and (=> (and (and (= (> x3216 x3087) x1322) (= (x3155 (+ x2128 x3216)) x3087)) (not x3513)) (and (=> x1322 x3169) (=> (and (not x1322) (and (= x3801 32) (= (x534 (x512 x3666) (x955 1) 0) x2209) (= x1662 1))) x2331))) (=> x3513 x3169))))) (=> x1400 x3169))) (=> (not x928) x3169))) (=> x2783 x3169))) (=> (and (= (= x318 x239) x25) (not x3811)) (and (=> (and x25 (and (= (or (and (> 64 x67) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x67) true)) (> x67 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2841) (= x3149 (x2265 (x512 x318))) (not (= 2691771752 x3650)) (= x3637 68) (= x3029 x3) (not (< x3650 2691771752)) (= x67 (x3331 (- x3637 4))) (> 2929553584 x3650) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1191) (not (< x3637 4)) (= x3650 2835717307) (= 68 x3637) (not (= 2796547477 x3650)) (= x2364 x1386) (not (> 2217467699 x3650)) (< 0 x3149))) (and (=> x2841 x219) (=> (and (and (= x2514 (= x3 x3029)) (= x979 x3)) (not x2841)) (and (=> (not x2514) x219) (=> (and x2514 (and (<= 0 x2696) (= x1386 x3935) (= x2975 (< x2696 x2364)) (= x2901 (x534 (x512 x318) (x955 5) 0)) (= x2696 (x3131 x2901)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2696))) (and (=> (and (not x2975) (and (= (x534 (x512 x318) (x955 5) 0) x1452) (= (x3131 x1452) x813) (= (< x813 x1386) x1446) (<= x813 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x813 0))) (and (=> (and (not x1446) (and (= x208 (x534 (x512 x3) (x955 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1181) (= (x1428 x208) x1181) (= (x3331 (- x813 x1386)) x744) (>= x1181 0) (= x2774 (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1386))) (= (< x2774 x1181) x930))) (and (=> x930 x219) (=> (and (and (= 1 x357) (= x3113 1) (= 32 x2700) (= (x3155 (+ x1386 x1181)) x1793)) (not x930)) x3203))) (=> x1446 x219))) (=> x2975 x219))))))) (=> (and (not x25) (= (= x3432 x239) x2210)) (and (=> (and (and (not (< x1674 2691771752)) (= x1447 x3029) (= x3237 x2364) (= x771 68) (= x771 68) (not (< x1674 2217467699)) (< 0 x3854) (= x3035 (x3331 (- x771 4))) (not (= x1674 2691771752)) (= x1674 2835717307) (< x1674 2929553584) (= (x2265 (x512 x3432)) x3854) (= x3298 (or (and (= true (<= x3035 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3035 64)) (> x3035 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 4 x771)) (not (= x1674 2796547477)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1654)) x2210) (and (=> (and (not x3298) (and (= x594 x1447) (= (= x3029 x1447) x1545))) (and (=> (and x1545 (and (= x1330 x3237) (= (x925 x2134) x2678) (= (x534 (x512 x318) (x955 5) 0) x2134) (<= x2678 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2364 x2678) x3807) (>= x2678 0))) (and (=> (and (not x3807) (and (<= x1210 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1210) (= x368 (x534 (x512 x318) (x955 5) 0)) (= x1210 (x925 x368)) (= (< x1210 x3237) x1782))) (and (=> (and (and (>= x2049 0) (= (x534 (x512 x1447) (x955 5) 0) x101) (<= x2049 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2049 x1501) x1408) (= (x3331 (- x1210 x3237)) x1329) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3237)) x1501) (= x2049 (x3765 x101))) (not x1782)) (and (=> (and (and (= (x3155 (+ x2049 x3237)) x3063) (= x1051 1) (= 32 x1923) (= x1291 1)) (not x1408)) x2718) (=> x1408 x2114))) (=> x1782 x2114))) (=> x3807 x2114))) (=> (not x1545) x2114))) (=> x3298 x2114))) (=> (and (not x2210) (and (= (= x239 x3181) x1047) (and x1047 (and (= (x3331 (- x1198 4)) x3791) (= x3094 2835717307) (= x2549 x3029) (not (= 2691771752 x3094)) (= x1198 68) (not (< x3094 2217467699)) (not (< x3094 2691771752)) (= x3681 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3791) (and (> 64 x3791) (= true (<= x3791 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (> 2929553584 x3094) (= x271 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1599 x2364) (< 0 x3808) (not (= 2796547477 x3094)) (not (< x1198 4)) (= 68 x1198) (= x3808 (x2265 (x512 x3181))))))) (and (=> (and (and (= x527 (= x2549 x3029)) (= x1444 x2549)) (not x3681)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x262) (<= 0 x262) (= (x2510 x1392) x262) (= x1392 (x534 (x512 x318) (x955 5) 0)) (= x3494 x1599) (= x724 (> x2364 x262))) x527) (and (=> (and (not x724) (and (= (x534 (x512 x318) (x955 5) 0) x3924) (= x3393 (< x3645 x1599)) (= (x2510 x3924) x3645) (>= x3645 0) (<= x3645 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= (x534 (x512 x2549) (x955 5) 0) x2124) (= x317 (x3331 (- x3645 x1599))) (= (x1326 x2124) x3827) (<= x3827 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3827) (= (x3331 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1599)) x1211) (= (< x1211 x3827) x486)) (not x3393)) (and (=> x486 x921) (=> (and (and (= x68 1) (= 32 x3351) (= x3106 (x3155 (+ x1599 x3827))) (= x3404 1)) (not x486)) x454))) (=> x3393 x921))) (=> x724 x921))) (=> (not x527) x921))) (=> x3681 x921))))))))))))) (=> x3880 x1632)))))))))
(assert (= x1839 (and x2723 x1090)))
(assert (=> (>= 10000 x1188) (= (x512 x1188) (x955 x1188))))
(assert (x2022 x92))
(assert (=> (>= 10000 x844) (= (x512 x844) (x955 x844))))
(assert (x2022 x3412))
(assert (= (x3873 (x512 x1338)) x1338))
(assert (= (and x3053 x2273) x3301))
(assert (= x1805 (and x952 (not x2563))))
(assert (x2022 x2052))
(assert (= (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x742) (>= x742 0) (= (> x242 x742) x1901)) (or (and (= x3907 x242) x1901) (and (= x3907 0) (not x1901)))) x3350) x3484))
(assert (x3201 x1152))
(assert (= (x3873 (x3866 x3835 1)) (+ 1 (x3873 x3835))))
(assert (= x2929 (x3873 (x512 x2929))))
(assert (= (+ (x3873 x717) 1) (x3873 (x3866 x717 1))))
(assert (= (or (and (not x2555) x170) x2647) x1871))
(assert (x2022 x3842))
(assert (x2022 x1252))
(assert (x2022 x2148))
(assert (x2022 x1587))
(assert (= (=> (and (<= x1238 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x994 x831) (= x1238 (x3120 x3627)) (= x3649 x3051) (>= x1238 0)) x1117) x2751))
(assert (= x2531 (or x2066 x2604)))
(assert (x2022 x1333))
(assert (x2022 x3801))
(assert (x2022 x2376))
(assert (= (or x3453 x2283) x1949))
(assert (x2022 x3775))
(assert (= (and x3592 (not x1408)) x2853))
(assert (= x731 (and x600 x2660)))
(assert (= x2611 (x3873 (x512 x2611))))
(assert (x2022 x677))
(assert (= (+ 1 (x3873 x2830)) (x3873 (x3866 x2830 1))))
(assert (= (and x2940 x3187) x695))
(assert (x2022 x1659))
(assert (x2022 x2611))
(assert (x2022 x6))
(assert (= x3012 (=> (and (= x2471 0) (= x2615 x189)) x470)))
(assert (= x1822 (and x618 x2342)))
(assert (= x2564 (or x1672 x666)))
(assert (x2022 x1856))
(assert (x2022 x1778))
(assert (x2022 x2016))
(assert (= (or x1841 x2411 x297 x1938 x3033) x3168))
(assert (x2022 x1356))
(assert (= x298 (and x3675 x2309)))
(assert (= (and x2058 (not x2783)) x140))
(assert (= (x512 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x955 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x2022 x3816))
(assert (x2022 x3686))
(assert (x3201 x544))
(assert (= (and x390 (not x3514)) x163))
(assert (x2022 x292))
(assert (= (x3873 (x512 x2259)) x2259))
(assert (= (and x2870 x2716) x2802))
(assert (x2022 x1692))
(assert (= x329 (and (not x1469) x1531)))
(assert (x2022 x236))
(assert (x2022 x184))
(assert (x2022 x850))
(assert (x2022 x3830))
(assert (= x18 (or x3307 x1873 x2541 x2326 x3718)))
(assert (x2022 x958))
(assert (= (x955 310377888) (x512 310377888)))
(assert (x2022 x1652))
(assert (x2022 x200))
(assert (= x1304 (=> (and (or (and (not x1819) (and (or (and (and (<= x1053 1461501637330902918203684832716283019655932542975) (= (x3155 (+ 96 x854)) x3428) (= x1053 x1659) (= (x3866 x654 1) x3486) (<= 0 x1053) (= (x1401 x3486) x1053) (= x2603 x3428) (< x1053 1461501637330902918203684832716283019655932542976)) (not x2814)) (and (and (= x1695 x2603) (= x2725 x1659) (= (x3155 (+ 96 x854)) x1695)) x2814)) (and (= x2814 (= x1475 0)) (>= x1475 0) (<= x1475 1461501637330902918203684832716283019655932542975) (= (x3141 x654) x1475) (> 1461501637330902918203684832716283019655932542976 x1475)))) (and x1819 (and (and (< x241 1461501637330902918203684832716283019655932542976) (<= 0 x241) (= x2033 (< 0 x1137)) (= (x3331 (- x807 x241)) x1137) (>= 1461501637330902918203684832716283019655932542975 x241) (= x241 (x3141 x654))) (or (and (and (= x438 (x3155 (+ 96 x854))) (= x1659 x807) (= x438 x2603) (<= x1703 1461501637330902918203684832716283019655932542975) (= x1703 (x1651 x3357)) (<= 0 x1703) (= (x534 (x512 x807) x3066 0) x3357) (> 1461501637330902918203684832716283019655932542976 x1703)) x2033) (and (not x2033) (and (= x2645 x2603) (= x1659 x807) (= x2645 (x3155 (+ x854 96))))))))) (= x1819 (ite (< x1277 x720) (not (= 0 x807)) (< x1277 x720)))) x1159)))
(assert (= x2505 (and (not x2524) x1866)))
(assert (x2022 x2259))
(assert (= (x3873 (x3866 x1208 1)) (+ (x3873 x1208) 1)))
(assert (= (and (not x484) x1569) x3633))
(assert (x2022 x870))
(assert (x2022 x1599))
(assert (x2022 x1562))
(assert (x2022 x2733))
(assert (x2022 x1346))
(assert (= x3884 (and (not x1077) x620)))
(assert (x2022 x3100))
(assert (x2022 x3600))
(assert (x2022 x3750))
(assert (= (x3873 (x3866 x1098 1)) (+ (x3873 x1098) 1)))
(assert (x2022 x2576))
(assert (x2022 x2297))
(assert (= (or x778 x3606 x404 x3309 x2280) x3843))
(assert (= (and (not x346) x3477) x3279))
(assert (= (or x3064 x2808 x2825) x2667))
(assert (x2022 x1526))
(assert (= (and x191 x2106) x1904))
(assert (x2022 x3113))
(assert (= x3410 (and x1455 x956)))
(assert (=> (<= x668 10000) (= (x512 x668) (x955 x668))))
(assert (x2022 x3213))
(assert (= x3299 (and x3553 x756)))
(assert (x2022 x1414))
(assert (x2022 x2239))
(assert (= x1592 (x3873 (x512 x1592))))
(assert (= x1899 (and (not x673) x161)))
(assert (= (and x3903 (not x1096)) x359))
(assert (x2022 x3642))
(assert (x2022 x2430))
(assert (x2022 x1146))
(assert (= x1327 (=> (and (= (> x584 0) x3452) (or (and x3452 (and (<= x187 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div x1957 1000000000000000000) x3085) (= (x3331 (- x3649 x584)) x1227) (= x2777 x3085) (= x1398 (ite x2688 1 0)) (= x1957 (div x3276 x187)) (= (x384 x3327) x187) (= x1732 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= x1150 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= x1227 x3164) (< (* 1000000000000000000 x1438) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x510 (x774 x3058)) (= (x534 (x512 x1732) (x955 169) 0) x2801) (= x584 x3490) (< 0 x187) (= x831 x1323) (= x3276 (* 1000000000000000000 x1438)) (>= x187 0) (>= x510 0) (not (< x3649 x584)) (= x2688 (< 115792089237316195423570985008687907853269984665640564039457 x584)) (= x207 x510) (= (mod (* x584 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1438) (= (+ x2777 x207) x3823) (<= x510 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x244 x3266) (= x1398 0) (= (x3866 x2801 2) x3058) (= (x534 (x512 x1150) (x955 164) 0) x3327) (< (+ x831 x584) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x244 (+ x3490 x1323)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x510 x3085)))) (and (not x3452) (and (= x3649 x3164) (= x3266 x831))))) x1610)))
(assert (= (and x2028 (not x1728)) x41))
(assert (= x1742 (and x2937 x1013)))
(assert (x3201 x1658))
(assert (x2022 x2454))
(assert (x2022 x538))
(assert (x2022 x3687))
(assert (= (=> (or (and x3863 (and (not (> x2097 x855)) (= (x3331 (- x855 x2097)) x1849) (= (< x1849 x3647) x3817))) (and (not x3863) (= x3863 x3817))) x375) x3752))
(assert (x2022 x1444))
(assert (x2447 1461501637330902918203684832716283019655932542975))
(assert (= x265 (and x216 (not x1798))))
(assert (x2022 x3464))
(assert (= x1111 (or x179 x971 x3560 x1595 x3633)))
(assert (= (and x3341 (not x761)) x1315))
(assert (= x319 (and x797 x493)))
(assert (x2022 x3744))
(assert (= (x955 26959946667150639794667015087019630673637144422540572481103610249215) (x512 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x2022 x3243))
(assert (= x2199 (and x2337 (not x3886))))
(assert (= x213 (and (not x272) x3940)))
(assert (x2022 x2179))
(assert (= (x512 1832238993) (x955 1832238993)))
(assert (=> (<= x1258 10000) (= (x512 x1258) (x955 x1258))))
(assert (x2022 x2950))
(assert (= (x3873 (x3866 x1197 1)) (+ (x3873 x1197) 1)))
(assert (= (or x1721 x2478 x2981 x3459) x1033))
(assert (x2022 x762))
(assert (x2022 x3029))
(assert (x3356 x3518))
(assert (= x1995 (and (not x1909) x980)))
(assert (x2022 x3372))
(assert (x2022 x3023))
(assert (= x3829 (and x478 x1786)))
(assert (x2022 x2443))
(assert (x2022 x1106))
(assert (= (or x3535 x1655) x814))
(assert (x3201 x3008))
(assert (= (x3873 (x3866 x1794 1)) (+ 1 (x3873 x1794))))
(assert (x2022 x993))
(assert (x2022 x317))
(assert (x2022 x1767))
(assert (= x2961 (and x2847 x3479)))
(assert (x2022 x1854))
(assert (x2022 x2107))
(assert (= x1079 (and x1904 (not x2260))))
(assert (=> (>= 10000 x1381) (= (x955 x1381) (x512 x1381))))
(assert (= x74 (or x2497 x1882 x2370 x3050 x2284 x231)))
(assert (= (=> (and (= x372 x3440) (= x2148 x2266)) x2412) x3316))
(assert (x2022 x2044))
(assert (x2022 x1947))
(assert (=> (<= x2844 10000) (= (x955 x2844) (x512 x2844))))
(assert (x2022 x1387))
(assert (= x1447 (x3873 (x512 x1447))))
(assert (= (and x3258 (not x1133)) x518))
(assert (= (and x2748 x90) x3943))
(assert (= (x955 2796547477) (x512 2796547477)))
(assert (= x828 (=> (and (= x2704 0) (= x2177 x1419)) x1232)))
(assert (x2022 x1959))
(assert (x2447 x2842))
(assert (x2022 x3899))
(assert (= (and (not x486) x752) x1898))
(assert (x2022 x1541))
(assert (= (or x1752 x1881 x3889) x1870))
(assert (x2022 x3825))
(assert (= x278 (and (not x2715) x1127)))
(assert (x2022 x1200))
(assert (x2022 x212))
(assert (x2022 x1559))
(assert (x2022 x2549))
(assert (= x2858 (or x1716 x3205)))
(assert (= x1093 (=> (and (= x2479 x123) (= x3657 x1387)) x1606)))
(assert (=> (<= x2869 10000) (= (x955 x2869) (x512 x2869))))
(assert (x2022 x1051))
(assert (= x2021 (or x977 x47 x1574 x3799 x2319 x394)))
(assert (x2022 x686))
(assert (= (or x3839 x3932) x2478))
(assert (=> (>= 10000 x2931) (= (x512 x2931) (x955 x2931))))
(assert (x2022 x2767))
(assert (= (and x930 x3193) x754))
(assert (x2022 x83))
(assert (=> (>= 10000 x987) (= (x512 x987) (x955 x987))))
(assert (= (x3873 (x955 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x2022 x2912))
(assert (= x479 (and x205 (not x3065))))
(assert (= (x3873 (x512 x1589)) x1589))
(assert (x2022 x172))
(assert (= x2315 (and (not x2008) x2007)))
(assert (= (+ (x3873 x1160) 1) (x3873 (x3866 x1160 1))))
(assert (= (and x650 x1680) x300))
(assert (= x3459 (or x3545 x3446)))
(assert (= x422 (=> (= (= x3207 x139) x650) (and (=> (and (not x650) (= x1604 (< 0 x3207))) (and (=> (and (not x1604) (= x498 x1773)) x857) (=> (and (and (and (>= x1258 0) (= (x534 (x512 x496) x149 0) x3717) (<= 0 x3008) (not (= x57 0)) (= (x3866 x3049 1) x136) (<= x57 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1052 x3717) x3008) (= x999 (x3155 (+ 96 x498))) (< x1258 1461501637330902918203684832716283019655932542976) (<= x3008 1461501637330902918203684832716283019655932542975) (>= x57 0) (> 1461501637330902918203684832716283019655932542976 x3008) (= (= 0 x3008) x3565) (= x3049 (x3866 x3717 1)) (= (x153 x136) x57) (= (x2920 x3049) x1258) (<= x1258 1461501637330902918203684832716283019655932542975)) (or (and (not x3565) (and (= x1509 (x3866 x2610 1)) (= (x534 (x512 x3008) x149 0) x2610))) (and (= (x3866 x149 1) x2949) x3565))) x1604) x1611))) (=> (and x650 (= x3520 x498)) x2320)))))
(assert (x2022 x1515))
(assert (x2022 x3035))
(assert (x2022 x3026))
(assert (x2022 x1091))
(assert (x2022 x3250))
(assert (= (=> (and (= (= 0 x2929) x3693) (or (and x3693 (= x199 (x3866 x3197 2))) (and (= x3019 (x534 (x512 x2929) x3197 0)) (not x3693)))) x3189) x773))
(assert (x2447 x3890))
(assert (x2022 x1164))
(assert (x3201 x2549))
(assert (= (and x3704 x1351) x1433))
(assert (= (x3873 (x955 2459953569)) 2459953569))
(assert (x2022 x3044))
(assert (= (and x1370 (not x1037)) x729))
(assert (x2022 x3582))
(assert (= x2115 (and x2984 x2053)))
(assert (= x1061 (or x2672 x156 x814)))
(assert (x2022 x580))
(assert (x2022 x500))
(assert (x2022 x139))
(assert (= (and x109 (not x789)) x400))
(assert (= x3018 (and x2705 (not x3306))))
(assert (= (and x1899 (not x1440)) x109))
(assert (=> (<= x1150 10000) (= (x955 x1150) (x512 x1150))))
(assert (x3201 x3692))
(assert (x3201 x3249))
(assert (= x3725 (and x19 (not x1276))))
(assert (= (and (not x989) x3476) x1896))
(assert (= x818 (and x2499 (not x243))))
(assert (= (x955 64481368622683354557555711714629296119639875834729404553039716062438103187456) (x512 64481368622683354557555711714629296119639875834729404553039716062438103187456)))
(assert (x2022 x2422))
(assert (= (x955 1461501637330902918203684832716283019655932542975) (x512 1461501637330902918203684832716283019655932542975)))
(assert (= (x3873 (x512 x3008)) x3008))
(assert (= x312 (=> (and (= x2671 x574) (= x3009 0)) x3732)))
(assert (= (or x2747 x2067 x3139 x3795) x3037))
(assert (= 4294967296 (x3873 (x955 4294967296))))
(assert (x2022 x714))
(assert (x2022 x2291))
(assert (= (and x3443 x964) x3309))
(assert (x2022 x3105))
(assert (x2022 x178))
(assert (= x3672 (and x1007 x3794)))
(assert (x2022 x1312))
(assert (x2022 x3379))
(assert (= 1590201465 (x3873 (x955 1590201465))))
(assert (x2022 x2753))
(assert (= (and (not x3059) x3709) x2477))
(assert (= x846 (and (not x995) x2617)))
(assert (= 2835717307 (x3873 (x955 2835717307))))
(assert (= x2238 (or x674 x1766)))
(assert (= (or x1286 x1500) x1186))
(assert (x2022 x1398))
(assert (x2022 x2741))
(assert (= x3606 (and x3709 x3059)))
(assert (x3201 x233))
(assert (=> (>= 10000 x1338) (= (x512 x1338) (x955 x1338))))
(assert (= (and x141 (not x289)) x976))
(assert (x2022 x3014))
(assert (x2022 x3691))
(assert (x2022 x1807))
(assert (x2022 x2084))
(assert (x2022 x2948))
(assert (x2022 x682))
(assert (= (and x3439 (not x3292)) x1069))
(assert (= x2373 (x3873 (x512 x2373))))
(assert (= x179 (and x108 x2965)))
(assert (= (and (=> x1080 x2402) (=> (and (not x1080) (and (= 1 x1277) (= x807 x2473))) x1304)) x3524))
(assert (= x183 (and x2012 (not x779))))
(assert (x2022 x3735))
(assert (x2022 x3871))
(assert (= x1527 (and x3402 (not x1876))))
(assert (x3877 x2836 x3236))
(assert (= (x3873 (x512 x1102)) x1102))
(assert (= x2778 (x3873 (x512 x2778))))
(assert (= x3724 (and x1393 x724)))
(assert (x2022 x2700))
(assert (= (and x2446 (not x1267)) x2011))
(assert (= x3123 (and x2466 (not x617))))
(assert (=> (<= x3692 10000) (= (x955 x3692) (x512 x3692))))
(assert (x2022 x1026))
(assert (x2022 x2101))
(assert (x2022 x3106))
(assert (x2022 x1191))
(assert (x2022 x2720))
(assert (= x599 (=> (= x2445 (> x860 0)) (and (=> (and (and (= x3280 x3173) (= x3434 x854)) (not x2445)) x3864) (=> (and (and (or (and (and (>= x20 0) (= x20 (x2522 x3798)) (= (x534 (x512 x1613) x3066 0) x1598) (= x3798 (x3866 x1598 2)) (<= x20 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3321 (> x860 x20)) (= x2024 (not x3321))) x1112) (and (= x1112 x2024) (not x1112))) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x720) (= x1112 (ite (< 0 x720) (not (= x1613 0)) (> x720 0))) (<= 0 x2962) (= (x2522 x1248) x2962) (= x2366 (x534 (x512 x2725) x3066 0)) (<= x1613 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2962) (> 1461501637330902918203684832716283019655932542976 x1613) (= (x3141 x654) x1613) (= x2962 0) (not (= x2643 0)) (>= x1613 0) (= x1248 (x3866 x2366 2)) (= x654 (x3866 x3066 1)) (>= x720 0))) x2445) x941)))))
(assert (= (and x2472 (not x1066)) x3685))
(assert (x2022 x1361))
(assert (x2022 x116))
(assert (x2022 x22))
(assert (= (or x3725 x2100) x2499))
(assert (= (and x2028 x1728) x1120))
(assert (= (x3873 (x512 x697)) x697))
(assert (x2022 x1988))
(assert (= x3227 (and x1322 x2244)))
(assert (x2022 x2173))
(assert (= (and (not x1644) x3088) x778))
(assert (x2447 x2598))
(assert (= (and (not x3574) x1677) x1086))
(assert (= (x512 2229018723) (x955 2229018723)))
(assert (= (or (and (not x3930) x799) (and x1121 x3564)) x2518))
(assert (= x2410 (and x3706 x1065)))
(assert (x2022 x663))
(assert (x2022 x2645))
(assert (x2022 x2891))
(assert (=> (>= 10000 x2789) (= (x955 x2789) (x512 x2789))))
(assert (x1976 x247))
(assert (x2022 x3867))
(assert (x2022 x556))
(assert (x2022 x3891))
(assert (x2022 x3291))
(assert (x2022 x3855))
(assert (= (or x3939 x3792) x1007))
(assert (= x3876 (and (not x1830) x3364)))
(assert (= x1919 (and x1866 x2524)))
(assert (x3201 x318))
(assert (x2022 x2085))
(assert (x2022 x1043))
(assert (x2022 x1227))
(assert (x2022 x3126))
(assert (x2022 x3546))
(assert (x2022 x2453))
(assert (= x2117 (and (not x1063) x1028)))
(assert (x2022 x823))
(assert (= (x3873 (x3866 x1168 1)) (+ (x3873 x1168) 1)))
(assert (x3201 x2429))
(assert (= x1022 (=> (and (or (and (and (or (and (not x2448) (and (= (x3155 (+ x1719 96)) x2727) (= x2727 x2212) (= x1756 x456))) (and (and (>= 1461501637330902918203684832716283019655932542975 x152) (= x2212 x1560) (= x152 (x970 x1374)) (= x1756 x456) (= x1374 (x534 (x512 x456) x3197 0)) (= x1560 (x3155 (+ x1719 96))) (< x152 1461501637330902918203684832716283019655932542976) (>= x152 0)) x2448)) (and (>= x3664 0) (>= 1461501637330902918203684832716283019655932542975 x3664) (= (x3331 (- x456 x3664)) x3014) (> 1461501637330902918203684832716283019655932542976 x3664) (= x2448 (> x3014 0)) (= (x119 x945) x3664))) x2003) (and (and (or (and (and (= (x3866 x945 1) x2724) (= (x2553 x2724) x3581) (= x1756 x3581) (= x2212 x3923) (= (x3155 (+ 96 x1719)) x3923) (>= 1461501637330902918203684832716283019655932542975 x3581) (>= x3581 0) (> 1461501637330902918203684832716283019655932542976 x3581)) (not x408)) (and (and (= x2212 x2311) (= x2725 x1756) (= (x3155 (+ x1719 96)) x2311)) x408)) (and (<= x1369 1461501637330902918203684832716283019655932542975) (= (x119 x945) x1369) (> 1461501637330902918203684832716283019655932542976 x1369) (<= 0 x1369) (= x408 (= x1369 0)))) (not x2003))) (= x2003 (ite (> x720 x3450) (not (= 0 x456)) (> x720 x3450)))) x3719)))
(assert (x2022 x1633))
(assert (x2022 x462))
(assert (x2022 x2452))
(assert (x2022 x3809))
(assert (= x2261 (or x1193 x627 x2075 x2224)))
(assert (= (and x1887 x3517) x3682))
(assert (x2022 x632))
(assert (x2022 x3400))
(assert (=> (<= x2778 10000) (= (x512 x2778) (x955 x2778))))
(assert (x2022 x1971))
(assert (x2022 x1338))
(assert (= x2114 (=> (and (= x1923 x2707) (= 0 x1051)) x2718)))
(assert (x3201 x940))
(assert (x2022 x2745))
(assert (=> (>= 10000 x2635) (= (x512 x2635) (x955 x2635))))
(assert (= (and (not x3347) x633) x628))
(assert (= (and x2260 x1904) x2541))
(assert (x2022 x3094))
(assert (= (and (=> (and (and (or (and (not x3177) (= x3857 x3177)) (and x3177 (and (<= x3582 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2307 (x3866 x1352 2)) (= x3101 (> x2453 x3582)) (= x3582 (x3609 x2307)) (= (x534 (x512 x2844) x3197 0) x1352) (= (not x3101) x3857) (<= 0 x3582)))) (and (< x2844 1461501637330902918203684832716283019655932542976) (= (x3866 x511 1) x2628) (<= x2844 1461501637330902918203684832716283019655932542975) (= (x1497 x2628) x2844) (= x3177 (ite (> x720 1) (not (= 0 x2844)) (< 1 x720))) (= x511 (x534 (x512 x3285) x3197 0)) (>= x2844 0))) x419) x3129) (=> (and (not x419) (and (= x456 x3285) (= x3450 0))) x1022)) x1394))
(assert (x2022 x2390))
(assert (x2022 x3089))
(assert (= (=> (and (or (and (and (or x2773 (and (not x2773) (and (>= 1461501637330902918203684832716283019655932542975 x713) (= (x3866 x944 1) x521) (<= 0 x713) (= (x3768 x521) x713) (< x713 1461501637330902918203684832716283019655932542976)))) (and (<= 0 x2291) (<= x2291 1461501637330902918203684832716283019655932542975) (= (x2941 x944) x2291) (= (= 0 x2291) x2773) (< x2291 1461501637330902918203684832716283019655932542976))) (not x485)) (and (and (or (not x938) (and (and (>= 1461501637330902918203684832716283019655932542975 x2504) (= x1136 (x534 (x512 x2107) x3538 0)) (< x2504 1461501637330902918203684832716283019655932542976) (= (x3224 x1136) x2504) (<= 0 x2504)) x938)) (and (< x3602 1461501637330902918203684832716283019655932542976) (<= 0 x3602) (>= 1461501637330902918203684832716283019655932542975 x3602) (= (x3331 (- x2107 x3602)) x864) (= x938 (< 0 x864)) (= (x2941 x944) x3602))) x485)) (= (ite (> x720 x1457) (not (= 0 x2107)) (< x1457 x720)) x485)) x3124) x106))
(assert (x2022 x2882))
(assert (= (and x952 x2563) x2446))
(assert (x3596 x3174))
(assert (= (x3873 (x3866 x1306 2)) (+ 2 (x3873 x1306))))
(assert (=> (>= 10000 x2429) (= (x512 x2429) (x955 x2429))))
(assert (x2022 x1612))
(assert (= x110 (and x2638 x3410)))
(assert (x2022 x2902))
(assert (= (x3873 (x512 x823)) x823))
(assert (= x1574 (and x2230 x1788)))
(assert (= x47 (and x1799 x117)))
(assert (x2022 x2245))
(assert (= (+ 1 (x3873 x3160)) (x3873 (x3866 x3160 1))))
(assert (= (and x2499 x243) x2828))
(assert (x2022 x1265))
(assert (= x3097 (and x707 x2094)))
(assert (x2022 x1757))
(assert (= (+ (x3873 x2735) 1) (x3873 (x3866 x2735 1))))
(assert (= x375 (and (=> (and (not x3817) (and (= x3520 x1017) (= x2304 x2817))) x2632) (=> (and (and (and (= x868 (div x1966 1000000000000000000)) (= x1874 (x534 (x512 x1140) x706 0)) (< (* x3594 x1194) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x3866 x1874 1) x3503) (= x1194 (x418 x3503)) (= (* x1194 x3594) x1966) (= x1968 (< x2560 x868)) (= (x3331 (- x3649 x2304)) x2560) (= x706 (x534 (x512 x2635) (x955 158) 0)) (not (> x2304 x3649)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1194) (<= 0 x1194) (= x2635 (x2182 1461501637330902918203684832716283019655932542975 x544))) (or (and (and (= x1145 x2171) (= x906 (x2627 x1874)) (= (div x281 x70) x2084) (= x1145 (x3331 (- x1378 x290))) (= 0 x2654) (< (* 1000000000000000000 x3575) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite x1157 1 0) x3423) (= (* 1000000000000000000 x3575) x1491) (= x1157 (< 115792089237316195423570985008687907853269984665640564039457 x2560)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x906 x1164)) (not (< x1378 x290)) (= x281 (* x3349 1000000000000000000)) (= x1986 x906) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x3349)) (<= x1378 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x354 x1986) x3158) (> x70 0) (= (div x214 1000000000000000000) x290) (= (mod (* 1000000000000000000 x2560) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3349) (= x354 x1164) (= x3158 x3525) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x906) (= x1164 (div x2084 1000000000000000000)) (= (div x1491 x3594) x214) (= (< 115792089237316195423570985008687907853269984665640564039457 x2560) x929) (>= x1378 0) (= x3575 (mod (* x2560 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> x3594 0) (= x1378 (x418 x3503)) (<= 0 x906) (= x3423 0) (= (ite x929 1 0) x2654)) x1968) (and (not x1968) (and (= (div x1567 1000000000000000000) x2843) (= x3909 x2843) (= x421 (ite x2413 1 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2916 x2843)) (< 0 x70) (= 0 x2171) (= x631 (mod (* 1000000000000000000 x868) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x222 (* x631 1000000000000000000)) (= x1567 (div x222 x70)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2916) (= x3444 x2916) (< (+ x2304 x868) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (> x868 115792089237316195423570985008687907853269984665640564039457) x2413) (= (+ x3444 x3909) x3310) (= 0 x421) (< (* 1000000000000000000 x631) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2627 x1874) x2916) (= x3310 x3525) (>= x2916 0))))) x3817) x2287))))
(assert (x2022 x1715))
(assert (x2022 x1021))
(assert (= x3239 (and x745 (not x2064))))
(assert (= x640 (and (not x1349) x1495)))
(assert (= x2147 (x3873 (x512 x2147))))
(assert (= x3766 (and (not x1908) x359)))
(assert (x2022 x68))
(assert (= x953 (and x2023 x3865)))
(assert (x2022 x336))
(assert (x2022 x1706))
(assert (= 1461501637330902918203684832716283019655932542976 (x3873 (x955 1461501637330902918203684832716283019655932542976))))
(assert (x3201 x3181))
(assert (x2022 x720))
(assert (=> (>= 10000 x1102) (= (x512 x1102) (x955 x1102))))
(assert (= (+ (x3873 x403) 1) (x3873 (x3866 x403 1))))
(assert (= (x3873 (x512 x2869)) x2869))
(assert (= x3446 (and (not x2409) x2117)))
(assert (x2022 x3841))
(assert (x2022 x3355))
(assert (x3201 x1338))
(assert (=> (<= x2824 10000) (= (x512 x2824) (x955 x2824))))
(assert (= x3453 (and (not x1128) x381)))
(assert (x2022 x3700))
(assert (x2022 x504))
(assert (= x2290 (=> (or (and (not x3794) (= x1458 x3794)) (and (and (= x3928 (x3331 (- x855 x730))) (= (< x3928 x3647) x1458) (not (> x730 x855))) x3794)) x1156)))
(assert (= x3556 (and x1680 (not x650))))
(assert (= (and x1315 x3811) x2058))
(assert (= x3273 (and (not x1183) x3787)))
(assert (x3877 x2842 x3515))
(assert (x2022 x365))
(assert (x2022 x3263))
(assert (x2022 x498))
(assert (x2022 x3928))
(assert (= (and x3713 x3447) x2381))
(assert (= (=> (and (= x3744 x2129) (= x3145 x815)) x1800) x3062))
(assert (= (x512 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x955 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (x2022 x3712))
(assert (= (and x1461 x1033) x378))
(assert (x2022 x2197))
(assert (x2022 x2130))
(assert (= x1551 (or x477 x91 x2542 x1110 x1044)))
(assert (= x2277 (and x1480 x969)))
(assert (= (and x1085 x963) x1563))
(assert (x3201 x496))
(assert (x2022 x2048))
(assert (x2022 x1977))
(assert (x2022 x916))
(assert (x2022 x3832))
(assert (x2022 x3790))
(assert (= (and x1628 x388) x781))
(assert (x2022 x3343))
(assert (x2022 x3810))
(assert (= x1140 (x3873 (x512 x1140))))
(assert (= x561 (and x2010 (not x1836))))
(assert (= (and x486 x752) x263))
(assert (x2022 x715))
(assert (x2022 x3663))
(assert (= (and (=> (and (not x3053) (and (= x1457 1) (= x2107 x3002))) x106) (=> (and (and (= x2428 x1637) (= x2992 x3538) (= x3002 x2583)) x3053) x3374)) x3333))
(assert (x2022 x585))
(assert (= (and x3210 x3914) x131))
(assert (= (or x2952 x2021) x442))
(assert (x2022 x2087))
(assert (x2022 x2494))
(assert (= (x3873 (x512 x3146)) x3146))
(assert (= (x512 94482241256677223720308674365448432550660581809977780367718865401173155774464) (x955 94482241256677223720308674365448432550660581809977780367718865401173155774464)))
(assert (= (x3873 (x512 x2767)) x2767))
(assert (= x2581 (or x3826 (and (not x525) x1979))))
(assert (x2022 x1153))
(assert (x2022 x2392))
(assert (= (and x792 x2261) x15))
(assert (x2022 x2493))
(assert (x2022 x790))
(assert (x2022 x1141))
(assert (x2022 x3666))
(assert (= 3199929250 (x3873 (x955 3199929250))))
(assert (= 2229018723 (x3873 (x955 2229018723))))
(assert (= x2402 (not (and (> 1461501637330902918203684832716283019655932542976 x2918) (= (x3866 x2932 1) x492) (<= 0 x2918) (<= x2918 1461501637330902918203684832716283019655932542975) (= (x534 (x512 x2473) x3066 0) x2932) (= x2918 (x3425 x492))))))
(assert (= (and x169 (not x1780)) x909))
(assert (x2022 x2986))
(assert (x2022 x1366))
(assert (= x2223 (and (not x3539) x163)))
(assert (= x1342 (and x1382 x1797)))
(assert (x2022 x2895))
(assert (= x888 (and (not x600) x2660)))
(assert (x2022 x1104))
(assert (= (=> (and (= x1923 x3372) (= x2387 x1051)) x1915) x2718))
(assert (x2022 x3676))
(assert (x2022 x2519))
(assert (= x3822 (and x437 (not x722))))
(assert (x2022 x2731))
(assert (= (+ 3 (x3873 x403)) (x3873 (x3866 x403 3))))
(assert (= (or x1990 x2606) x1442))
(assert (= x2935 (and x63 x2913)))
(assert (x2022 x728))
(assert (x2022 x3233))
(assert (x2022 x1439))
(assert (x2022 x1152))
(assert (= (and x3192 (not x190)) x3939))
(assert (= x2896 (and x681 x3409)))
(assert (x2022 x187))
(assert (x2022 x1145))
(assert (= (and x3684 x2930) x3900))
(assert (= (and x2325 x3032) x1936))
(assert (= x2683 (or x3577 x501)))
(assert (x2022 x2664))
(assert (x2022 x1317))
(assert (x2022 x1516))
(assert (x2022 x266))
(assert (x2022 x2636))
(assert (x2022 x574))
(assert (= x1204 (=> (and (= x2126 (x3866 x709 1)) (= x292 x1311) (= (x3866 x2339 1) x709) (= (x534 (x512 x496) x2766 0) x2339)) x3121)))
(assert (x2447 x3518))
(assert (= x1232 (=> (and (= x1470 x2177) (= x3515 x2704)) x559)))
(assert (x2022 x2774))
(assert (x2022 x3249))
(assert (= x2170 (and (not x3325) x3781)))
(assert (x3201 x2147))
(assert (x2022 x927))
(assert (= x2672 (or x3568 x3123)))
(assert (= (and (not x358) x3901) x809))
(assert (= (and (not x3508) x1929) x201))
(assert (x2022 x3740))
(assert (= (=> (and (= x123 x1811) (= x2467 x3657)) x1606) x435))
(assert (x2022 x3078))
(assert (x2022 x1489))
(assert (x2022 x338))
(assert (= x1613 (x3873 (x512 x1613))))
(assert (= x1600 (and (not x2417) x1411)))
(assert (=> (>= 10000 x233) (= (x512 x233) (x955 x233))))
(assert (=> (<= x3285 10000) (= (x512 x3285) (x955 x3285))))
(assert (= (and x1814 (not x1034)) x1628))
(assert (= x3913 (and x3472 x785)))
(assert (x2022 x1847))
(assert (= x973 (and x2005 x1485)))
(assert (x2022 x3315))
(assert (= (=> (and (= x1219 0) (= x3816 x1118)) x1235) x644))
(assert (x2022 x3056))
(assert (x2022 x1269))
(assert (x2022 x1062))
(assert (= (x955 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x512 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x2022 x2812))
(assert (x2022 x3418))
(assert (x2022 x880))
(assert (x2022 x496))
(assert (x2022 x912))
(assert (x2022 x834))
(assert (x2022 x2752))
(assert (= (and x2838 x2775) x1866))
(assert (= x1751 (and x2058 x2783)))
(assert (x3201 x697))
(assert (= (and x235 x3861) x3036))
(assert (= (=> (and (and (= (x2182 1461501637330902918203684832716283019655932542975 x544) x2928) (= x2194 0) (< x556 1461501637330902918203684832716283019655932542976) (= (x2 x1084) x2194) (= (< 0 x3023) x2925) (= (x3155 (+ x2433 x1084)) x3825) (>= 1461501637330902918203684832716283019655932542975 x556) (= x2433 (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3449)) (= (x3331 (- x2928 x556)) x3023) (not (or (and (> 32 x3744) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3744) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3744))) (not (= x3145 0)) (= (x3155 (+ x3744 31)) x3449) (>= x556 0)) (or (and (not x2925) (and (> 1461501637330902918203684832716283019655932542976 x3692) (= (- x2376 x3415) x2708) (= x2376 (x1202 (x512 x3029))) (= x2145 (x2265 (x512 x3692))) (> 4294967296 x1161) (= (x3155 (+ x1548 x3415)) x750) (= x2613 (>= x3179 x3415)) (= (x1202 (x512 x3029)) x3179) (>= 1461501637330902918203684832716283019655932542975 x3692) (>= x3692 0) (= x2195 (x1202 (x512 x3692))) (= (< (+ x3415 x2195) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x473) x2613 (not (= x2145 0)) (< (+ x1548 x3415) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1548 (x943 (x512 x3692))) x473)) x2925)) x3762) x2822))
(assert (x2022 x1996))
(assert (= 94482241256677223720308674365448432550660581809977780367718865401173155774464 (x3873 (x955 94482241256677223720308674365448432550660581809977780367718865401173155774464))))
(assert (= (x3873 (x955 2678788150)) 2678788150))
(assert (x2022 x3005))
(assert (= (and x1400 x3653) x1687))
(assert (x2022 x3104))
(assert (= (x512 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x955 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (x2022 x1508))
(assert (= (x3873 (x512 x2786)) x2786))
(assert (x2022 x2353))
(assert (= (x3873 (x3866 x3066 2)) (+ (x3873 x3066) 2)))
(assert (= (and x1788 (not x2230)) x657))
(assert (= (and x3920 x2758) x3426))
(assert (x2022 x3349))
(assert (= (and x2973 (not x2851)) x9))
(assert (= x2082 (=> (and (= x934 x769) (= x2745 x1605) (= 0 x1335)) x1167)))
(assert (x2022 x3437))
(assert (= (and x2591 x41) x842))
(assert (= (+ 2 (x3873 x1220)) (x3873 (x3866 x1220 2))))
(assert (x2022 x1201))
(assert (= x2089 (or x2765 x2220)))
(assert (= (x512 1865448899) (x955 1865448899)))
(assert (= (or x206 x43 x366 x2551 x2898 x1334) x3545))
(assert (= (or x3221 x2041) x1075))
(assert (x2022 x246))
(assert (= x3592 (and x2575 (not x1782))))
(assert (x2022 x3136))
(assert (x2022 x3441))
(assert (x2022 x1056))
(assert (= (and x3395 x2214) x3921))
(assert (x2022 x2348))
(assert (x2022 x3174))
(assert (x2022 x1371))
(assert (x3596 x2643))
(assert (= (or x946 x3500) x2973))
(assert (x2022 x2826))
(assert (x2022 x2150))
(assert (= x1799 (and x2357 x278)))
(assert (= (and x3556 x1604) x3870))
(assert (= (and x2103 (not x3559)) x808))
(assert (x2022 x1712))
(assert (= (x512 89522461602318961266474185744428785802019839140862557341176434972013554040832) (x955 89522461602318961266474185744428785802019839140862557341176434972013554040832)))
(assert (x2022 x3391))
(assert (= (+ 1 (x3873 x3197)) (x3873 (x3866 x3197 1))))
(assert (= (x3873 (x3866 x1494 1)) (+ 1 (x3873 x1494))))
(assert (=> (<= x1658 10000) (= (x512 x1658) (x955 x1658))))
(assert (x2022 x2177))
(assert (x2447 x3045))
(assert (x2022 x220))
(assert (x2022 x526))
(assert (= (and x3298 x2200) x1044))
(assert (= x2906 (and x3731 x2799)))
(assert (x2022 x810))
(assert (= x1619 (and x1399 (not x869))))
(assert (x2022 x3183))
(assert (x3201 x668))
(assert (= (=> (and (= (= x3515 0) x3628) (or x3628 (not x3628))) x984) x559))
(assert (= (and (not x1702) x2346) x1788))
(assert (x2022 x2081))
(assert (x2022 x3142))
(assert (=> (>= 10000 x3548) (= (x955 x3548) (x512 x3548))))
(assert (= (x3873 (x3866 x3717 1)) (+ (x3873 x3717) 1)))
(assert (= (and x1519 x671) x2302))
(assert (x2022 x239))
(assert (= (+ 1 (x3873 x3784)) (x3873 (x3866 x3784 1))))
(assert (x2022 x743))
(assert (= x544 (x3873 (x512 x544))))
(assert (x2022 x1637))
(assert (= (+ (x3873 x3922) 2) (x3873 (x3866 x3922 2))))
(assert (x2022 x2616))
(assert (= (and x3604 x25) x466))
(assert (= (x3873 (x512 x3692)) x3692))
(assert (= x1018 (and x2448 x1070)))
(assert (x2022 x2198))
(assert (= x1680 (or x315 x1925)))
(assert (= (=> (and (= 0 x3404) (= x3351 x2707)) x454) x921))
(assert (x2022 x3533))
(assert (= x2283 (or x1691 x865 x1433 x310)))
(assert (x2022 x1617))
(assert (=> (<= x3002 10000) (= (x955 x3002) (x512 x3002))))
(assert (x2022 x3512))
(assert (= (x3873 (x3866 x2757 1)) (+ (x3873 x2757) 1)))
(assert (= (and x897 x411) x2497))
(assert (x2022 x1951))
(assert (x2022 x2842))
(assert (= x719 (and x2388 x736)))
(assert (= (and x1525 x1789) x3786))
(assert (x2022 x705))
(assert (= (and (not x1085) x963) x2719))
(assert (= x3043 (=> (and (or (and (not x243) (and (= x496 x1140) (= x3863 x243))) (and x243 (and (<= x2164 1461501637330902918203684832716283019655932542975) (= (= x2164 0) x1132) (= x2164 (x93 x1005)) (= x680 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= x3863 (not x1132)) (= (x534 (x512 x680) (x955 155) 0) x1859) (<= 0 x2164) (= x1005 (x3866 x1859 1)) (< x2164 1461501637330902918203684832716283019655932542976) (= x1140 x2164)))) (and (= x1043 (x3155 (+ 32 x3520))) (= x243 (> x3649 x2304)))) x3752)))
(assert (= (or x1664 x3934) x2075))
(assert (=> (>= 10000 x158) (= (x955 x158) (x512 x158))))
(assert (x2022 x3237))
(assert (= x2108 (and (not x173) x1896)))
(assert (x2022 x1916))
(assert (= x2915 (and x1359 (not x217))))
(assert (= x1967 (and (not x928) x140)))
(assert (x2022 x877))
(assert (x2022 x2467))
(assert (x3201 x3573))
(assert (= (x3873 (x3866 x3538 2)) (+ (x3873 x3538) 2)))
(assert (= (x955 1857877511) (x512 1857877511)))
(assert (= (x3873 (x3866 x811 1)) (+ (x3873 x811) 1)))
(assert (= x1868 (and x217 x1359)))
(assert (x2022 x2704))
(assert (= (+ (x3873 x1874) 1) (x3873 (x3866 x1874 1))))
(assert (= (=> (and (= x3185 x2691) (= x2680 x2009)) x2963) x3143))
(assert (x2022 x1284))
(assert (= (x3873 (x955 4233614559)) 4233614559))
(assert (x2022 x2764))
(assert (x2022 x3373))
(assert (= (=> (or (and (not x2399) (= x1319 x2399)) (and (and (>= 1461501637330902918203684832716283019655932542975 x2397) (= x3166 (x3866 x3835 1)) (= x2397 (x51 x3166)) (= (= 0 x2397) x2646) (> 1461501637330902918203684832716283019655932542976 x2397) (>= x2397 0) (= x3835 (x534 (x512 x2813) (x955 155) 0)) (= x2813 (x2182 1461501637330902918203684832716283019655932542975 x544)) (= x1319 (not x2646))) x2399)) x2927) x611))
(assert (= (and (not x956) x1455) x2420))
(assert (= x3731 (or x2356 x353)))
(assert (x2022 x2643))
(assert (x3201 x2428))
(assert (x2022 x3522))
(assert (= x2133 (and (not x873) x2169)))
(assert (x2022 x507))
(assert (= (and (not x2585) x2761) x3500))
(assert (= (and x1929 x3508) x679))
(assert (x2022 x1320))
(assert (=> (>= 10000 x728) (= (x955 x728) (x512 x728))))
(assert (x2022 x584))
(assert (x2022 x2377))
(assert (x2022 x3146))
(assert (= x3044 (x3873 (x512 x3044))))
(assert (x2022 x2440))
(assert (= x91 (and x3807 x3414)))
(assert (= (and (not x930) x3193) x330))
(assert (x2022 x241))
(assert (x2022 x693))
(assert (x2022 x1844))
(assert (x2022 x581))
(assert (x2022 x1954))
(assert (x2022 x94))
(assert (= (x955 2858086653) (x512 2858086653)))
(assert (= x767 (or x74 x3235)))
(assert (x2022 x3371))
(assert (= x52 (or x914 x546)))
(assert (=> (>= 10000 x1613) (= (x512 x1613) (x955 x1613))))
(assert (= x282 x2251))
(assert (= x3178 (and x2005 (not x1485))))
(assert (x2022 x3581))
(assert (= x3230 (or x2226 x1451)))
(assert (= x2192 (and (not x168) x1771)))
(assert (x2022 x3388))
(assert (x2447 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x955 2109788624) (x512 2109788624)))
(assert (x2022 x1813))
(assert (x2022 x3319))
(assert (= (and x2693 x2991) x3903))
(assert (x2022 x1482))
(assert (x2447 x3174))
(assert (= (and x3408 x2791) x3758))
(assert (x2022 x1580))
(assert (x2022 x1226))
(assert (x3201 x2286))
(assert (x2022 x1088))
(assert (x3201 x3146))
(assert (x2022 x858))
(assert (x2022 x2077))
(assert (= (x955 1931414571) (x512 1931414571)))
(assert (= x2921 (=> (= (< 0 x2453) x2851) (and (=> (and (and (= x978 x2744) (= x1719 x2739)) (not x2851)) x555) (=> (and x2851 (and (and (<= x3285 1461501637330902918203684832716283019655932542975) (>= x1577 0) (> 1461501637330902918203684832716283019655932542976 x3285) (= x945 (x3866 x3197 1)) (>= x720 0) (= x457 (x3866 x1220 2)) (= (ite (< 0 x720) (not (= x3285 0)) (< 0 x720)) x3918) (= (x3609 x457) x1577) (= (x119 x945) x3285) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1577) (= 0 x1577) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x720) (= (x534 (x512 x2725) x3197 0) x1220) (>= x3285 0) (not (= x2643 0))) (or (and (= x3918 x419) (not x3918)) (and x3918 (and (= (not x1253) x419) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1643) (= x1253 (> x2453 x1643)) (= x1583 (x534 (x512 x3285) x3197 0)) (>= x1643 0) (= (x3609 x280) x1643) (= (x3866 x1583 2) x280)))))) x1394)))))
(assert (= (+ 2 (x3873 x3098)) (x3873 (x3866 x3098 2))))
(assert (= x1296 (or x3933 x1178)))
(assert (=> (>= 10000 x3688) (= (x955 x3688) (x512 x3688))))
(assert (x2022 x1381))
(assert (x2022 x1656))
(assert (x2022 x3404))
(assert (= (and x1139 (not x2938)) x480))
(assert (x3356 x549))
(assert (= (=> (and (= x2140 x793) (= 0 x2480)) x683) x2338))
(assert (= x1552 (and x791 x3628)))
(assert (x2022 x1068))
(assert (x2022 x537))
(assert (x2022 x3923))
(assert (= (and x1569 x484) x543))
(assert (= x1707 (and x2526 (not x1819))))
(assert (x2022 x1427))
(assert (x3201 x1140))
(assert (= (=> (and (or (and (and (= 4 x1596) (not (= x2589 2796547477)) (= 32 x307) (= x1596 x2462) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1602) (= 2858086653 x2589) (= x2955 77053863734975077137548456399560439977311721439096602559221323163398253314048) (< 0 x3783) (> 2929553584 x2589) (not (> 2691771752 x2589)) (not (= 2835717307 x2589)) (<= 0 x1602) (= x3783 (x2265 (x512 x318))) (not (< x1596 4)) (not (< x2589 2217467699)) (= 1 x1434) (not (= 2691771752 x2589))) x3413) (and (and (= (= x3432 x2611) x3472) (or (and (not x3472) (and (and (and (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x3612) (not (> 2217467699 x1529)) (= x1100 (x2265 (x512 x3181))) (= 1 x1434) (= 2858086653 x1529) (not (< x2087 4)) (not (= x1529 2796547477)) (= 32 x307) (< x1529 2929553584) (= x2087 4) (not (> 2691771752 x1529)) (not (= x1529 2691771752)) (not (= x1529 2835717307)) (<= 0 x2792) (= x2087 x2462) (> x1100 0) (<= x2792 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1037) (= x1037 (= x2611 x3181)))) (and x3472 (and (not (< x1026 4)) (= x42 (x2265 (x512 x3432))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3041) (< x2771 2929553584) (not (< x2771 2691771752)) (= x2462 x1026) (= x307 32) (> x42 0) (not (= 2796547477 x2771)) (= 1 x1434) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x3068) (not (< x2771 2217467699)) (not (= x2771 2835717307)) (= 2858086653 x2771) (not (= x2771 2691771752)) (= x1026 4) (<= 0 x3041))))) (not x3413))) (and (= x1815 (* x3803 x2512)) (= x2252 (x534 (x512 x2611) (x955 159) 0)) (= x2462 4) (= x3890 (x3155 (+ x705 31))) (= x3803 (x471 996)) (= x2806 (div x1376 1000000000000000000)) (< (* x1623 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1169 (x885 x2520)) (= x3639 x2806) (= (x534 (x512 x2725) x2252 0) x2520) (= x2625 x3314) (>= x1169 0) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x705)) (< x705 32)) (> x705 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2335 (div x3360 1000000000000000000)) (= x3360 (* x1623 x462)) (= x3912 (x3155 (+ 996 x1975))) (= x2625 (div x1815 1000000000000000000)) (= (x3155 (+ x3912 64)) x2079) (< (* x2876 x3751) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1279 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3751 0) (= (x2182 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3890) x1975) (= (x3866 x2520 1) x547) (not (= 0 x2285)) (= x3165 (x534 (x512 x2611) (x955 164) 0)) (= x1279 (x2141 x547)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2806 x2625)) (= x1376 (* x2876 x3751)) (>= x1279 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2512 x3803)) (= x3751 (x384 x3165)) (= (+ x3639 x3314) x1623) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3751) (<= x1169 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3413 (= x2611 x318)))) x3111) x369))
(assert (= x3414 (and x1545 x3887)))
(assert (x2022 x1744))
(assert (x2447 x3515))
(assert (= (or x1130 x3843) x1992))
(assert (x2022 x254))
(assert (x3201 x266))
(assert (= (x3873 (x512 x3831)) x3831))
(assert (= x2848 (and (not x1694) x803)))
(assert (x2022 x3774))
(assert (x2022 x1210))
(assert (= (and x490 x513) x2976))
(assert (= x1500 (and x2923 (not x639))))
(assert (x2022 x1142))
(assert (= x3121 (=> (= (> x1284 0) x3395) (and (=> (and (and (or (and (and (>= x3378 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3378) (= (x2365 x1523) x3378) (= (x534 (x512 x3146) x2766 0) x1907) (= x2498 (> x1284 x3378)) (= (not x2498) x2799) (= (x3866 x1907 2) x1523)) x3175) (and (= x2799 x3175) (not x3175))) (and (= (x3866 x2132 2) x433) (= 0 x1287) (>= x1287 0) (> 1461501637330902918203684832716283019655932542976 x3146) (= x2132 (x534 (x512 x496) x2766 0)) (= (x3866 x2766 1) x2830) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x720) (<= x3146 1461501637330902918203684832716283019655932542975) (= x3175 (ite (< 0 x720) (not (= 0 x3146)) (< 0 x720))) (>= x3146 0) (= x3146 (x3122 x2830)) (not (= 0 x496)) (= (x2365 x433) x1287) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1287) (<= 0 x720))) x3395) x653) (=> (and (= x3686 x1311) (not x3395)) x766)))))
(assert (= (+ (x3873 x2755) 1) (x3873 (x3866 x2755 1))))
(assert (x2022 x733))
(assert (= (and x3592 x1408) x2542))
(assert (= (=> (and (and (<= x266 1461501637330902918203684832716283019655932542975) (= (= 0 x266) x1973) (< x266 1461501637330902918203684832716283019655932542976) (>= x266 0)) (or x1973 (and (not x1973) (and (>= 1461501637330902918203684832716283019655932542975 x266) (> 4294967296 x1025) (>= x266 0) (> 1461501637330902918203684832716283019655932542976 x266) (= x14 (x2265 (x512 x266))) (not (= x14 0)))))) x1421) x282))
(assert (= x1367 (and x2585 x2761)))
(assert (= (x3873 (x3866 x1783 1)) (+ 1 (x3873 x1783))))
(assert (= x2809 (=> (and (= x1893 0) (= x3600 x3533)) x3115)))
(assert (x2022 x1893))
(assert (x2022 x1261))
(assert (x2022 x2879))
(assert (= (and x969 (not x1480)) x794))
(assert (= x747 (x3873 (x512 x747))))
(assert (x2022 x2922))
(assert (= x454 (=> (and (= x3372 x3351) (= x2387 x3404)) x1915)))
(assert (= (and x780 x1080) x2459))
(assert (x2022 x2471))
(assert (x2022 x3893))
(assert (x2022 x2461))
(assert (= x3226 (and x3022 x1462)))
(assert (x2022 x2811))
(assert (= (and x525 x1979) x3826))
(assert (= x1411 (and (not x755) x888)))
(assert (x3201 x2931))
(assert (= x2319 (and x2884 x657)))
(assert (= (and (not x419) x1041) x349))
(assert (x2972 x2180))
(assert (x2022 x1626))
(assert (x2022 x824))
(assert (= (and x553 x582) x674))
(assert (= x2096 (and (not x79) x1079)))
(assert (x2022 x204))
(assert (= x3200 (=> (and (or (and (= x986 (x534 (x512 x3573) x3538 0)) (not x1887)) (and x1887 (= x2389 (x3866 x3538 2)))) (= x1887 (= 0 x3573))) x2122)))
(assert (x2022 x2680))
(assert (= (and x105 (not x1009)) x3079))
(assert (= x2675 (and x3256 (not x2686))))
(assert (= x619 (and x3370 x1995)))
(assert (= x1488 (and x3513 x329)))
(assert (= x1281 (and x1870 x3413)))
(assert (= (x512 2691771752) (x955 2691771752)))
(assert (x3201 x1251))
(assert (x3596 x2239))
(assert (x2022 x3548))
(assert (= (and (=> (and (not x2597) (and (= x3740 1) (= x1251 x940))) x343) (=> (and x2597 (and (= x940 x2824) (= x2120 x1152) (= x149 x3001))) x1229)) x2296))
(assert (x2022 x2678))
(assert (x2022 x2451))
(assert (= (or x1205 x3003 x1868) x3192))
(assert (= (and x3341 x761) x2284))
(assert (x2022 x1875))
(assert (= (x955 2281136899) (x512 2281136899)))
(assert (= (and x3410 (not x2638)) x1883))
(assert (= (and x3212 x3330) x1388))
(assert (x3201 x3029))
(assert (= x3936 (and x3000 (not x2404))))
(assert (x2022 x3135))
(assert (x2022 x1991))
(assert (= 1466279372 (x3873 (x955 1466279372))))
(assert (= x3887 (and x2200 (not x3298))))
(assert (x3596 x544))
(assert (= (=> (and (= 0 x2052) (= x1021 x574)) x2994) x95))
(assert (x2022 x285))
(assert (x2022 x2263))
(assert (x2022 x1213))
(assert (= x423 (and x1343 x2270)))
(assert (= (x3873 (x512 x3)) x3))
(assert (= (x3873 (x512 x668)) x668))
(assert (=> (>= 10000 x2286) (= (x955 x2286) (x512 x2286))))
(assert (= (+ 1 (x3873 x2874)) (x3873 (x3866 x2874 1))))
(assert (= x2331 (=> (and (= x3372 x3801) (= x1662 x2387)) x1915)))
(assert (x2022 x3153))
(assert (x2022 x3173))
(assert (x2022 x1492))
(assert (x2022 x3515))
(assert (x2022 x1769))
(assert (= x1083 (and x3194 x2595)))
(assert (x2022 x1785))
(assert (= x2996 (and x69 (not x89))))
(assert (x2022 x1684))
(assert (x2022 x1682))
(assert (x2022 x1046))
(assert (x2022 x1105))
(assert (x2022 x1749))
(assert (x2022 x625))
(assert (x2022 x2131))
(assert (x2022 x3595))
(assert (x2022 x3328))
(assert (x2022 x1560))
(assert (x2022 x3594))
(assert (x2022 x1791))
(assert (= (and (not x2773) x3705) x3622))
(assert (x2022 x3016))
(assert (= (or x3554 x588) x2526))
(assert (x2022 x2481))
(assert (= x1885 (and x2062 x2278)))
(assert (= x3350 (=> (= (= x647 x3907) x2050) (and (=> x2050 x282) (=> (and (not x2050) (= x3455 (< 0 x647))) (and (=> (and x3455 (and (or (and (= x3782 (x3866 x386 1)) x1242) (and (and (= (x3866 x3275 1) x128) (= (x534 (x512 x2152) x386 0) x3275)) (not x1242))) (and (>= 1461501637330902918203684832716283019655932542975 x2778) (= x2152 (x3242 x717)) (>= x2544 0) (= x717 (x534 (x512 x1140) x386 0)) (<= x2544 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2152) (= (= 0 x2152) x1242) (= (x61 x446) x2544) (> 1461501637330902918203684832716283019655932542976 x2778) (>= 1461501637330902918203684832716283019655932542975 x2152) (= x446 (x3866 x185 1)) (> 1461501637330902918203684832716283019655932542976 x2152) (not (= 0 x2544)) (= (x3866 x717 1) x185) (= x2778 (x1162 x185)) (>= x2778 0)))) x2907) (=> (not x3455) x1603)))))))
(assert (= (=> (= x966 (= 0 x2387)) (and (=> (and (= (or (and (> 32 x3372) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3372))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3372)) x897) (not x966)) (and (=> (and (and (= 1 x815) (= x2129 32)) (not x897)) x3062) (=> x897 x1632))) (=> x966 x1632))) x1228))
(assert (= 3583811254 (x3873 (x955 3583811254))))
(assert (= x331 (=> (and (= x830 x2140) (= 0 x1067)) x2515)))
(assert (= (x3873 (x3866 x1859 1)) (+ 1 (x3873 x1859))))
(assert (x2022 x1631))
(assert (x2022 x3651))
(assert (x3201 x3548))
(assert (x2022 x3550))
(assert (x2022 x742))
(assert (x2022 x1736))
(assert (x2022 x438))
(assert (= (=> (and (= x3434 x2603) (= x1659 x3280)) x3864) x1159))
(assert (x2022 x3469))
(assert (= x2001 x2251))
(assert (x2022 x1464))
(assert (= (x955 988262939) (x512 988262939)))
(assert (x2022 x3329))
(assert (x2022 x1215))
(assert (= (x3873 (x955 3320572652)) 3320572652))
(assert (x2022 x1923))
(assert (x2022 x2196))
(assert (x2022 x3269))
(assert (= (and (not x1065) x3706) x3516))
(assert (x2022 x1588))
(assert (= x1565 (and x145 (not x3475))))
(assert (= (x3873 (x512 x2583)) x2583))
(assert (=> (>= 10000 x352) (= (x512 x352) (x955 x352))))
(assert (x2022 x3206))
(assert (x2022 x1596))
(assert (x2022 x1674))
(assert (= x3894 (and x3408 (not x2791))))
(assert (x2022 x1196))
(assert (x2022 x2649))
(assert (= (x3873 (x3866 x1507 1)) (+ 1 (x3873 x1507))))
(assert (x2022 x3207))
(assert (= (or x300 x176) x19))
(assert (= x3779 (=> (= x3247 (= x2974 0)) (and (=> (and (= (or (and (= true (<= x3329 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3329)) (> x3329 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3741) (not x3247)) (and (=> (and (not x3741) (and (= x2305 x3797) (= x737 1) (= x1844 32))) x34) (=> (and (= x3797 x1115) x3741) x2026))) (=> (and (= x3797 x1115) x3247) x2026)))))
(assert (x3201 x2762))
(assert (= (+ (x3873 x974) 1) (x3873 (x3866 x974 1))))
(assert (x2022 x1272))
(assert (x2022 x2086))
(assert (x2022 x2589))
(assert (x2022 x1089))
(assert (= x2023 (and x3567 x3295)))
(assert (x2022 x2304))
(assert (= x1862 (and x2554 x3294)))
(assert (x2022 x1567))
(assert (x2022 x355))
(assert (= x3114 (and x275 (not x2281))))
(assert (= x335 (and x695 x29)))
(assert (x2022 x1732))
(assert (x2022 x940))
(assert (x2022 x3803))
(assert (= x784 (and x535 x3931)))
(assert (= x3307 (and (not x2106) x191)))
(assert (= (and x2938 x1139) x1382))
(assert (x2022 x2160))
(assert (x2022 x899))
(assert (= (x3873 (x955 989455977)) 989455977))
(assert (x2022 x2155))
(assert (= (or x3673 x1952) x672))
(assert (x2022 x2474))
(assert (= x3191 (or x2020 x1513 x476 x2184 x601)))
(assert (x2022 x347))
(assert (x2022 x3614))
(assert (x2022 x3671))
(assert (x2022 x589))
(assert (x2022 x2235))
(assert (= (and x2617 x995) x2551))
(assert (= (x3873 (x955 76833804140862540057647519496925185374644862498684814347804924264468996685824)) 76833804140862540057647519496925185374644862498684814347804924264468996685824))
(assert (x2022 x3415))
(assert (x2022 x3397))
(assert (x2022 x3531))
(assert (= (and (not x1506) x2133) x2325))
(assert (= x1603 (=> (= x1128 (> x3907 0)) (and (=> (not x1128) x2251) (=> (and (and (or (and (= x639 x3640) (not x639)) (and (and (= x3640 (not x1189)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1478) (>= x1478 0) (= x1962 (x3866 x468 2)) (= (< x1478 x3907) x1189) (= x468 (x534 (x512 x1265) x386 0)) (= x1478 (x3836 x1962))) x639)) (and (= (x534 (x512 x1140) x386 0) x2015) (= (x819 x1197) x1265) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x720) (<= 0 x1265) (= (x3866 x2015 2) x276) (= x639 (ite (> x720 0) (not (= x1265 0)) (< 0 x720))) (<= 0 x1116) (> 1461501637330902918203684832716283019655932542976 x1265) (= 0 x1116) (>= x720 0) (= (x3836 x276) x1116) (<= x1265 1461501637330902918203684832716283019655932542975) (= (x3866 x386 1) x1197) (<= x1116 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1140 0)))) x1128) x3498)))))
(assert (= x2859 (=> (and (= x1633 x3263) (= x355 x1190)) x3312)))
(assert (=> (<= x2953 10000) (= (x512 x2953) (x955 x2953))))
(assert (x2022 x817))
(assert (x3356 x2017))
(assert (x2022 x409))
(assert (= (and (not x3756) x2505) x1663))
(assert (x3356 x1175))
(assert (x2022 x744))
(assert (x2022 x247))
(assert (= (x3873 (x3866 x3241 1)) (+ 1 (x3873 x3241))))
(assert (x2022 x2550))
(assert (= (or x1449 x947) x2111))
(assert (x2022 x1254))
(assert (= (and x2039 x1177) x1467))
(assert (x2022 x3518))
(assert (= x3506 (or x1963 x2328)))
(assert (x2022 x3808))
(assert (x2022 x3820))
(assert (x2022 x1589))
(assert (x2022 x960))
(assert (x2022 x3616))
(assert (= (+ (x3873 x1739) 1) (x3873 (x3866 x1739 1))))
(assert (= x660 (=> (and (= x2831 (x3866 x1507 1)) (= (x3866 x2831 1) x1259) (= x1507 (x534 (x512 x1140) x386 0))) x1603)))
(assert (x2022 x2671))
(assert (x2022 x3204))
(assert (x2022 x807))
(assert (= x1071 (and (not x1641) x2279)))
(assert (x2022 x2512))
(assert (= x2125 (=> (= (not (> x1125 1)) x113) (and (=> (and (= x919 x1631) (= x3268 x2750) (= x2525 x3379)) x2138) x113))))
(assert (x2022 x2944))
(assert (x3201 x807))
(assert (= x3257 (and x1009 x105)))
(assert (x2022 x3608))
(assert (=> (>= 10000 x2611) (= (x955 x2611) (x512 x2611))))
(assert (x3201 x407))
(assert (x2022 x3645))
(assert (x2022 x2789))
(assert (= (x512 2835717307) (x955 2835717307)))
(assert (= (or x2667 x183) x2716))
(assert (x2022 x697))
(assert (= x2411 (and x3284 x1863)))
(assert (= x96 (or x1967 x1687 x1488 x1751 x2178 x3227)))
(assert (x2022 x3729))
(assert (= x2772 (x3873 (x512 x2772))))
(assert (= (=> (and (= 0 x3346) (= x1419 x1996)) x3812) x965))
(assert (= (x3873 (x3866 x1076 1)) (+ (x3873 x1076) 1)))
(assert (= x926 (=> (and (= x3263 x1471) (= x355 x2600)) x3312)))
(assert (= (+ (x3873 x2359) 2) (x3873 (x3866 x2359 2))))
(assert (x3201 x1828))
(assert (x2022 x2167))
(assert (= x1359 (and x1585 (not x2272))))
(assert (x2022 x1697))
(assert (x2022 x3789))
(assert (x2022 x3521))
(assert (x2022 x1049))
(assert (= x1828 (x3873 (x512 x1828))))
(assert (= (x3873 (x512 x318)) x318))
(assert (=> (>= 10000 x2772) (= (x955 x2772) (x512 x2772))))
(assert (= x2868 (and x2445 x2400)))
(assert (x2022 x1614))
(assert (x3201 x3712))
(assert (= (and x1003 x2848) x181))
(assert (= x3781 (and x2228 x2883)))
(assert (= x122 (and x2505 x3756)))
(assert (= x1715 (x3873 (x512 x1715))))
(assert (= x2515 (=> (and (= x1067 x2680) (= x830 x2691)) x2963)))
(assert (x2022 x1696))
(assert (x2022 x2424))
(assert (= (+ 1 (x3873 x3739)) (x3873 (x3866 x3739 1))))
(assert (x2022 x2968))
(assert (x2022 x1419))
(assert (= x3705 (and x1503 (not x485))))
(assert (x2022 x67))
(assert (x2022 x3862))
(assert (= (and x1490 x1149) x1771))
(assert (x2022 x2168))
(assert (= (and x1288 (not x550)) x1683))
(assert (= (and x358 x3901) x2007))
(assert (x2022 x389))
(assert (= x914 (and x2267 x3177)))
(assert (= x3110 (or x2144 x1429)))
(assert (x2022 x1869))
(assert (= (x3873 (x512 x2286)) x2286))
(assert (x2447 x549))
(assert (= (and (not x3918) x1878) x1657))
(assert (x2022 x2762))
(assert (= x3498 (and (=> (and x3640 (and (or (and (and (= (x3836 x3680) x142) (= (< x142 x3907) x159) (<= x142 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3680 (x3866 x3749 2)) (>= x142 0) (= x472 (not x159)) (= (x534 (x512 x2768) x386 0) x3749)) x1641) (and (not x1641) (= x1641 x472))) (and (= (x460 x3208) x2768) (<= 0 x2768) (= x1641 (ite (> x720 1) (not (= 0 x2768)) (> x720 1))) (> 1461501637330902918203684832716283019655932542976 x2768) (= x3208 (x3866 x2483 1)) (= (x534 (x512 x1265) x386 0) x2483) (<= x2768 1461501637330902918203684832716283019655932542975)))) x1928) (=> (and (not x3640) (and (= 0 x1089) (= x1265 x158))) x3095))))
(assert (x2022 x3854))
(assert (= (x3873 (x512 x3573)) x3573))
(assert (= (=> (and (= 0 x2009) (= x3185 x2140)) x3143) x27))
(assert (= (=> (= x1109 (= x1982 x2453)) (and (=> (and (and (= x874 x81) (= x1465 x2461)) x1109) x2980) (=> (and (not x1109) (= (> x1982 0) x2585)) (and (=> (and (not x2585) (and (= x2744 x874) (= x1719 x1465))) x2921) (=> (and x2585 (and (or (and (not x1114) (and (= (x534 (x512 x3548) x3197 0) x144) (= x3527 (x3866 x144 1)))) (and (= (x3866 x3197 1) x1274) x1114)) (and (= x2372 (x3866 x2854 1)) (= x1114 (= 0 x3548)) (= x502 (x1978 x2372)) (<= x502 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1461501637330902918203684832716283019655932542976 x3548) (= (x3866 x3081 1) x2854) (not (= 0 x502)) (>= x3548 0) (= x1652 (x3155 (+ 96 x1465))) (> 1461501637330902918203684832716283019655932542976 x2929) (<= 0 x2929) (<= x2929 1461501637330902918203684832716283019655932542975) (<= x3548 1461501637330902918203684832716283019655932542975) (= x2929 (x533 x2854)) (= x3081 (x534 (x512 x2725) x3197 0)) (<= 0 x502) (= (x1827 x3081) x3548)))) x773))))) x841))
(assert (= (+ 2 (x3873 x3468)) (x3873 (x3866 x3468 2))))
(assert (= (and x1590 (not x135)) x2633))
(assert (= (and (not x3681) x115) x2506))
(assert (= (or x58 x481) x3813))
(assert (=> (<= x1635 10000) (= (x512 x1635) (x955 x1635))))
(assert (x2022 x2185))
(assert (x2022 x1478))
(assert (= x2549 (x3873 (x512 x2549))))
(assert (= x404 (and x1670 x3859)))
(assert (= (and x1436 (not x2282)) x390))
(assert (= (=> (and (or (and x2870 (and (= x3056 1) (< 0 x3198) (= x325 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= x258 x1556) (< x913 2217467699) (= x1556 4) (> 988262939 x913) (not (< x1556 4)) (not (> 405663989 x913)) (= x1504 32) (= x3198 (x2265 (x512 x318))) (= x913 405663989))) (and (not x2870) (and (or (and (and (and x3293 (and (not (> 4 x1361)) (= 405663989 x3119) (< x3119 2217467699) (= x258 x1361) (= x65 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= x677 (x2265 (x512 x3181))) (= x1361 4) (= x3056 1) (= x1504 32) (< 0 x677) (< x3119 988262939) (not (> 405663989 x3119)))) (= x3293 (= x396 x3181))) (not x2064)) (and x2064 (and (= x1504 32) (not (< x3412 405663989)) (> 988262939 x3412) (= x3818 4) (= x2452 10936679508223583803006762266923565500374401145016910147028117655998246682624) (> x2354 0) (not (< x3818 4)) (> 2217467699 x3412) (= 405663989 x3412) (= x258 x3818) (= x2354 (x2265 (x512 x3432))) (= 1 x3056)))) (= x2064 (= x396 x3432))))) (and (= 4 x258) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x396) (= x3627 (x534 (x512 x2789) (x955 169) 0)) (= x2870 (= x396 x318)) (= x2789 (x2182 1461501637330902918203684832716283019655932542975 x544)))) x416) x2229))
(assert (x2022 x2909))
(assert (x2022 x1214))
(assert (x3201 x2107))
(assert (x2022 x2234))
(assert (x2022 x21))
(assert (=> (>= 10000 x693) (= (x955 x693) (x512 x693))))
(assert (x2022 x1344))
(assert (x2022 x2473))
(assert (= (=> (and (= (= 0 x3263) x324) (or x324 (not x324))) x196) x3312))
(assert (= x3010 (=> (and (= x2451 x123) (= x1831 x3657)) x1606)))
(assert (x2022 x3154))
(assert (= (and x3870 x3565) x3092))
(assert (= (and x1184 x265) x2184))
(assert (= (and x1892 (not x3466)) x1639))
(assert (x2022 x2241))
(assert (x2022 x398))
(assert (= x1856 (x3873 (x512 x1856))))
(assert (x3596 x2018))
(assert (= (x3873 (x512 x1258)) x1258))
(assert (= (or x2501 x2046) x156))
(assert (=> (<= x3249 10000) (= (x512 x3249) (x955 x3249))))
(assert (x2022 x3255))
(assert (x2022 x84))
(assert (x2022 x3085))
(assert (= (=> (and (and (<= 0 x2362) (<= 0 x1656) (<= 0 x743) (<= 0 x1046) (<= 0 x772) (= x858 (x2182 26959946667150639794667015087019630673637144422540572481103610249215 x2180)) (>= x3244 0) (>= 1461501637330902918203684832716283019655932542975 x3057) (<= 0 x3499) (= (x534 (x512 x2725) x1395 0) x3004) (<= 0 x3893) (= (x3103 (x512 x318)) x772) (>= 18446744073709551615 x3244) (<= x266 1461501637330902918203684832716283019655932542975) (<= x3867 1461501637330902918203684832716283019655932542975) (= (x3103 (x512 x1516)) x662) (<= 0 x829) (not (= x233 x3432)) (not (= x823 x233)) (>= 255 x1307) (<= x1046 1461501637330902918203684832716283019655932542975) (= x3451 (not x2262)) (> 2991318663 x7) (= x2241 (x2378 192)) (<= x2102 18446744073709551615) (> x1516 0) (<= 0 x3692) (not (= x318 x3181)) (= x912 (x2871 x2679)) x1781 (not (= x3432 x823)) (= x2014 (x3103 (x512 x987))) (>= 1461501637330902918203684832716283019655932542975 x239) (= (x3155 (+ x858 24044834009420335638544845215851342251227478490780828673611325350056707489792)) x3738) (= x2679 (x534 (x512 x544) (x955 168) 0)) (= (x3103 (x512 x3029)) x2085) (<= x3820 1461501637330902918203684832716283019655932542975) (<= 0 x1234) (>= x646 0) (= x1781 (> (x2265 (x512 x823)) 0)) (= x2953 (x2182 1461501637330902918203684832716283019655932542975 x544)) (not (= x3432 x3029)) (= (= x1515 0) x348) x2438 (<= 0 x3130) (not (= x318 x3432)) (= (= x2712 0) x1725) (>= 255 x3086) (>= 1461501637330902918203684832716283019655932542975 x467) (< x3084 256) x82 (>= 255 x3394) (not (= x3181 x1516)) (<= 0 x1201) (>= 255 x1029) (>= 1461501637330902918203684832716283019655932542975 x3499) (= x1307 (x3067 x3004)) (>= 1461501637330902918203684832716283019655932542975 x1516) (>= x392 0) (<= 0 x1515) (<= 0 x3086) (not (= x233 x948)) x949 (= x3073 x1088) (not (= x823 x948)) (= x2780 (not x295)) (= false x2710) (>= 1461501637330902918203684832716283019655932542975 x2341) (<= 0 x3820) (not (= x987 x3181)) (<= x3084 255) (= (< 0 (x2265 (x512 x3432))) x2127) (> 256 x1307) (>= 255 x735) (= x7 2678788150) (>= 1461501637330902918203684832716283019655932542975 x3181) (<= x3399 1461501637330902918203684832716283019655932542975) (<= 0 x3441) (= x444 x2161) (not (= x3432 x948)) (= x734 (not x3610)) (= x3084 (x3419 x2679)) (>= 18446744073709551615 x1234) (= x1512 (< 0 (x2265 (x512 x318)))) (<= x1515 255) (<= 0 x2430) (not (= x948 x3029)) (not (= x3432 x1516)) (= x2206 (= 0 x3084)) (>= 18446744073709551615 x3917) (= x1546 (> (x2265 (x512 x233)) 0)) (>= x1029 0) (= (not x1725) x2161) (<= 0 x3830) (= x2180 (x1640 416)) (> 256 x2986) (= (not x1176) x998) (= x852 x3805) (= x2362 (x3103 (x512 x233))) (= x1176 (= 0 x1201)) (= (x3331 (- x177 4)) x1396) (>= x2197 0) (not (= x3181 x233)) (>= 255 x1402) (>= 255 x2986) (= x3610 (= x2986 0)) x1512 (<= x3691 255) (< x1515 256) (>= x239 0) (= x1634 x544) (>= 255 x912) (> 256 x2712) (not (= x987 x1516)) (not (= x1516 x948)) (= x3282 x3501) (<= x2643 1461501637330902918203684832716283019655932542975) (>= 255 x2703) (<= 0 x3691) (not (= x233 x3029)) (not (= x3029 x1516)) (<= 0 x790) (>= 1461501637330902918203684832716283019655932542975 x544) (= x3287 (x2378 128)) (= x2196 (x3103 (x512 x3432))) (>= 255 x658) (= x646 x3842) (= 3 x1057) (<= 0 x735) (not (= x987 x948)) (= x2725 x2430) (<= 0 x2045) (= x3441 x987) (<= x948 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x556) (not (= x987 x823)) (< x2167 256) (< 0 x581) (< 0 x3287) (= x2438 (> (x2265 (x512 x3029)) 0)) (= false x3385) (<= x2043 255) (= x506 (= x2167 0)) (<= x3432 1461501637330902918203684832716283019655932542975) (> 3583811254 x7) (<= x233 1461501637330902918203684832716283019655932542975) (= x2233 (< 0 (x2265 (x512 x3181)))) (= x3647 x2746) (< 0 x318) (<= 0 x662) (<= x829 1461501637330902918203684832716283019655932542975) (= x1395 (x534 (x512 x2953) (x955 160) 0)) (>= x2085 0) (>= x417 0) (= x2361 x998) (>= 1461501637330902918203684832716283019655932542975 x646) (<= 0 x556) (not (= x318 x1516)) (<= x1576 255) (< x1201 256) (>= 1461501637330902918203684832716283019655932542975 x2430) (= x1682 0) (= x2643 x2725) (>= x3297 0) (>= 1461501637330902918203684832716283019655932542975 x743) (<= x1505 1461501637330902918203684832716283019655932542975) (not (= x1516 x233)) (>= x1402 0) (< 0 x987) (= x1608 x2780) (<= x2712 255) (= x3830 (x3103 (x512 x3181))) (> x3432 0) (< 0 x3029) (>= 18446744073709551615 x3297) (>= x2703 0) (<= x3570 1461501637330902918203684832716283019655932542975) (not (= x318 x823)) (= x3796 (x592 x2679)) (< 0 x3181) (= (< 0 (x2265 (x512 x948))) x82) (not (or (and (= (<= x1396 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x1396)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1396))) x2127 (= (not x506) x852) (= x2685 x3451) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x177) true) (> x177 99)) (= x2241 0) (>= 1461501637330902918203684832716283019655932542975 x3441) (<= x2234 18446744073709551615) (<= x1201 255) (<= x1714 1461501637330902918203684832716283019655932542975) (<= x3029 1461501637330902918203684832716283019655932542975) x2233 (= x734 x957) (= x949 (> (x2265 (x512 x987)) 0)) (not (< x177 4)) (<= x254 1461501637330902918203684832716283019655932542975) (<= 0 x266) (<= x3692 1461501637330902918203684832716283019655932542975) (> 256 x3796) (<= x1062 255) (not (= x233 x987)) (not (= x318 x987)) (= (x3103 (x512 x948)) x2375) (<= 0 x1307) (<= 0 x2375) (>= x2043 0) (>= x1714 0) (>= x3796 0) (>= x1576 0) (>= 255 x2167) (= x3501 (not x348)) (= x3842 x507) (not (= x3432 x987)) (>= x2167 0) (>= x3322 0) (< 0 x948) (>= x1206 0) (<= x987 1461501637330902918203684832716283019655932542975) (not (= x3181 x823)) (= x2341 x233) (>= x757 0) (= x1685 x1682) (>= x2643 0) (= x1088 x3891) (not (= x3029 x823)) (= x2986 (x990 x2679)) (<= x392 1461501637330902918203684832716283019655932542975) (>= x380 0) (< 0 x233) (>= 1461501637330902918203684832716283019655932542975 x757) (<= 0 x3917) x2143 (>= x467 0) (= x2235 x544) (>= x2234 0) (not (< x7 2678788150)) (>= x3399 0) (= x1515 (x516 x2679)) (= (x3103 (x512 x823)) x1656) (>= x254 0) (>= x1505 0) (<= x823 1461501637330902918203684832716283019655932542975) (= false x1698) (<= x856 1461501637330902918203684832716283019655932542975) (= (< 0 (x2265 (x512 x1516))) x2143) (< 0 x823) (= x2930 (< 0 x1307)) (<= 0 x3084) (<= 0 x658) (<= x417 255) (= x2334 false) (<= 0 x2196) (not (= x3181 x3432)) (<= x318 1461501637330902918203684832716283019655932542975) (<= 0 x3394) (not (= x318 x233)) (>= x856 0) (>= x912 0) (>= x2712 0) (= x581 (x2265 (x512 x3029))) (not (= x1088 0)) (= x2384 x2794) (>= 1461501637330902918203684832716283019655932542975 x2045) (not (= x318 x948)) (not (= x1516 x823)) (>= x1062 0) (>= 1461501637330902918203684832716283019655932542975 x380) (<= x3893 1461501637330902918203684832716283019655932542975) (>= x2341 0) (= x3291 x1706) (= x295 (= x912 0)) (>= 1461501637330902918203684832716283019655932542975 x3322) (= x1835 x2746) (= x2262 (= 0 x3796)) (>= 1461501637330902918203684832716283019655932542975 x3130) (= (x2820 x2679) x1201) x1546 (<= x1206 1461501637330902918203684832716283019655932542975) (> 256 x912) (not (= x3181 x948)) (<= 0 x3570) (not (= x318 x3029)) (= x2167 (x103 x2679)) (>= x2102 0) (not (= x3029 x3181)) (= x2712 (x362 x2679)) (= 2678788150 x2081) (not (= x987 x3029)) (= x440 x3399) (>= x3057 0) (<= 0 x2986) (>= x2014 0) (>= x3867 0) (>= 18446744073709551615 x790) (<= x2197 18446744073709551615) (<= x3796 255) (= x2794 (not x2206))) (or x2930 (and (and (= (x2182 1461501637330902918203684832716283019655932542975 x544) x1056) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x882) (= x1119 (x517 x3530 0)) (= (x534 (x512 x2725) (x955 161) 0) x3530) (= (x3866 x1119 x3078) x983) (= (x3155 (+ 1 x3078)) x2995) (= x3078 (x1266 x3530))) (not x2930)))) x3150) x339))
(assert (x2022 x2584))
(assert (= (and x3868 (not x2908)) x2456))
(assert (= (x3873 (x512 x124)) x124))
(assert (= x2565 (or x3075 x3772 x3723 x2277 x3829)))
(assert (x2022 x696))
(assert (x2022 x1017))
(assert (= (and x681 (not x3409)) x2606))
(assert (=> (<= x495 10000) (= (x955 x495) (x512 x495))))
(assert (= x947 (and x1048 x2399)))
(assert (x2022 x1594))
(assert (= x2924 (or x892 x1262 x3375 x2368 x3766)))
(assert (x2022 x548))
(assert (x2022 x3761))
(assert (= x3320 (or (and x2730 (not x883)) (and x340 x2258))))
(assert (x3356 x3045))
(assert (x2022 x694))
(assert (x3201 x2886))
(assert (= (or x3036 x2776) x2502))
(assert (x2022 x747))
(assert (= x1101 (and x3293 x3239)))
(assert (x2022 x2266))
(assert (x2022 x658))
(assert (= x3193 (and (not x1446) x3605)))
(assert (= (=> (and (= x3600 x3657) (= x1893 x123)) x1606) x3115))
(assert (x2022 x3072))
(assert (= (and x3080 (not x472)) x666))
(assert (x3201 x664))
(assert (= x37 (and x873 x2169)))
(assert (= x3172 (=> (and (= x1811 0) (= x3533 x2467)) x435)))
(assert (x2022 x1998))
(assert (x2022 x3462))
(assert (=> (<= x2725 10000) (= (x512 x2725) (x955 x2725))))
(assert (= (and x803 x1694) x1804))
(assert (x3201 x3))
(assert (x2022 x1307))
(assert (= (and x216 x1798) x2020))
(assert (= x3941 (=> (and (= (= 0 x439) x1461) (or x1461 (not x1461))) x961)))
(assert (x2022 x2844))
(assert (= (+ (x3873 x967) 2) (x3873 (x3866 x967 2))))
(assert (= x835 (and (not x3916) x2564)))
(assert (x2022 x3526))
(assert (x2022 x2736))
(assert (x3201 x1447))
(assert (x2022 x664))
(assert (= x3772 (and x794 x3171)))
(assert (= x2501 (or x842 x3336 x210 x1120 x1342 x1129)))
(assert (x2022 x3449))
(assert (= (x512 3583811254) (x955 3583811254)))
(assert (= x3864 (=> (and (= x3280 x874) (= x3434 x1465)) x3229)))
(assert (x2022 x2299))
(assert (= x3688 (x3873 (x512 x3688))))
(assert (= (=> (and (= x642 x3437) (= x439 x1764)) x3941) x1825))
(assert (= x1303 (=> (and (= x3145 x504) (= x3744 x3790)) x1800)))
(assert (= (and x2388 (not x736)) x586))
(assert (= (and x3874 x408) x3540))
(assert (= (and x2657 x319) x1010))
(assert (= (=> (and (= 0 x3113) (= x2700 x2707)) x3203) x219))
(assert (x2022 x2395))
(assert (x2022 x49))
(assert (x2022 x725))
(assert (x2022 x604))
(assert (= x3022 (or x138 (and x1061 (not x3710)))))
(assert (= (x512 1466279372) (x955 1466279372)))
(assert (x2022 x14))
(assert (=> (<= x3 10000) (= (x955 x3) (x512 x3))))
(assert (x2022 x3296))
(assert (= (x512 2459953569) (x955 2459953569)))
(assert (= x2570 (=> (and (= 0 x1471) (= x2615 x2600)) x926)))
(assert (= x1302 (or x2565 x2552)))
(assert (= (=> (and (= x3710 (= x3390 0)) (or (not x3710) x3710)) x1671) x1754))
(assert (= (and (not x1935) x1600) x1490))
(assert (x2022 x2768))
(assert (= x35 (and (not x3485) x1619)))
(assert (= x3732 (=> (and (= x3009 x439) (= x642 x2671)) x3941)))
(assert (= (x3873 (x512 x2813)) x2813))
(assert (= x3285 (x3873 (x512 x3285))))
(assert (x2022 x1311))
(assert (x2022 x2329))
(assert (x2022 x2605))
(assert (x2022 x1713))
(assert (= (x955 114138022719912475680867045629478960338713192110453415424194996738542475935744) (x512 114138022719912475680867045629478960338713192110453415424194996738542475935744)))
(assert (= (and x1013 (not x2937)) x2000))
(assert (x2022 x1407))
(assert (= (and x1260 x2050) x1823))
(assert (x2022 x3411))
(assert (x2022 x2308))
(assert (= x2400 (or x2068 x2442)))
(assert (x2022 x939))
(assert (x3201 x2869))
(assert (= x3517 (or x3936 x2208)))
(assert (= x401 (and x3930 x799)))
(assert (x2022 x903))
(assert (x2022 x2545))
(assert (x2022 x3260))
(assert (=> (>= 10000 x124) (= (x512 x124) (x955 x124))))
(assert (x2022 x2946))
(assert (= (and x1565 x361) x2655))
(assert (x2022 x3890))
(assert (= (and x718 x2633) x2827))
(assert (x2022 x746))
(assert (= x2435 (and x641 x2514)))
(assert (x2022 x678))
(assert (= (=> (and (= x737 x3390) (= x2631 x968) (= x2305 x762) (= x1844 x3619) (= x924 x2369)) x1754) x34))
(assert (= (=> (and (< 0 x2905) (<= x2998 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x285 0) (= x2842 (x2782 x1951 x247)) (= (ite (= x1470 0) 1 0) x247) (= (x148 x3784) x2998) (= (ite (= x81 1) 1 0) x2836) (= (x3866 x3784 1) x2312) (= x1951 (x2182 x2836 x3236)) (<= 0 x2998) (= x3236 (ite (> x1470 31) 1 0)) (= (x866 x2312) x285) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x285) (= x2905 (x2182 x2842 x3515)) (= false x579) (= false x1377)) x606) x984))
(assert (= x3535 (and (not x3294) x2554)))
(assert (= x428 (or (and x3037 (not x2221)) x3430)))
(assert (x2022 x1970))
(assert (x2022 x1940))
(assert (x2022 x942))
(assert (= x3311 (or x2574 x2999 x1092 x2407)))
(assert (= x2138 (=> (and (not (> x2525 x2750)) (<= 0 x556) (< x556 1461501637330902918203684832716283019655932542976) (= x779 (< 0 x1696)) (= x1696 (x3331 (- x2299 x556))) (= x2299 (x2182 1461501637330902918203684832716283019655932542975 x544)) (<= x556 1461501637330902918203684832716283019655932542975)) (and (=> (and (not x779) (and (>= x3692 0) (= x1263 x3692) (= x1631 x1518) (<= x3692 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x3692))) x2229) (=> (and (and (and (= x673 (= x318 x2878)) (= 4 x877) (= (x2182 1461501637330902918203684832716283019655932542975 x544) x2878)) (or (and (and (= 1 x1850) (> 2217467699 x2503) (= x2503 1865448899) (not (= x2503 1856199391)) (= x1020 50292402827334880472107169365697159231523039388532301717704428044325102813184) (= 4 x2130) (< x239 1461501637330902918203684832716283019655932542976) (not (< x2130 4)) (not (> 1856199391 x2503)) (not (< x2503 988262939)) (not (= x2503 1857877511)) (= 32 x2185) (>= x239 0) (= (x2265 (x512 x318)) x532) (= x877 x2130) (< 0 x532) (<= x239 1461501637330902918203684832716283019655932542975)) x673) (and (and (= (= x2878 x3432) x1440) (or (and x1440 (and (> 1461501637330902918203684832716283019655932542976 x1714) (= x3154 4) (= x877 x3154) (> 2217467699 x526) (>= x1714 0) (< 0 x2877) (not (< x526 988262939)) (= x2185 32) (= x2877 (x2265 (x512 x3432))) (not (> 4 x3154)) (<= x1714 1461501637330902918203684832716283019655932542975) (not (< x526 1856199391)) (not (= 1856199391 x526)) (= x2666 50292402827334880472107169365697159231523039388532301717704428044325102813184) (= 1865448899 x526) (= x1850 1) (not (= x526 1857877511)))) (and (not x1440) (and (= x789 (= x3181 x2878)) (and x789 (and (not (= x250 1856199391)) (not (= x250 1857877511)) (>= 1461501637330902918203684832716283019655932542975 x757) (not (< x250 988262939)) (= x2185 32) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x1616) (<= 0 x757) (= (x2265 (x512 x3181)) x2599) (< x250 2217467699) (= x250 1865448899) (= x1850 1) (not (< x2566 4)) (not (< x250 1856199391)) (= x2566 x877) (= 4 x2566) (< x757 1461501637330902918203684832716283019655932542976) (< 0 x2599))))))) (not x673)))) x779) x1355)))))
(assert (x2022 x2042))
(assert (x2022 x1714))
(assert (x2022 x56))
(assert (= (x3873 (x3866 x2801 2)) (+ 2 (x3873 x2801))))
(assert (x2022 x1576))
(assert (= (and x3514 x390) x892))
(assert (x2022 x3051))
(assert (= (or x164 x96) x3139))
(assert (= x1873 (and x3102 x2823)))
(assert (= x1380 (or x2288 x2108)))
(assert (= x2103 (and x1572 x188)))
(assert (= (x955 3320572652) (x512 3320572652)))
(assert (x2022 x1983))
(assert (= (+ (x3873 x1980) 1) (x3873 (x3866 x1980 1))))
(assert (= x2971 (or x3079 x3257)))
(assert (= (x3873 (x512 x3666)) x3666))
(assert (x2022 x2690))
(assert (= (x3873 (x3866 x2903 1)) (+ (x3873 x2903) 1)))
(assert (= x1495 (and x1600 x1935)))
(assert (= (x3873 (x512 x1974)) x1974))
(assert (= x2776 (and (not x235) x3861)))
(assert (x2022 x2076))
(assert (x2022 x2045))
(assert (x2022 x2709))
(assert (x2022 x16))
(assert (= x1305 (and x299 (not x751))))
(assert (=> (<= x2473 10000) (= (x512 x2473) (x955 x2473))))
(assert (= x833 (and x1968 x1002)))
(assert (x2022 x13))
(assert (= (+ (x3873 x2639) 1) (x3873 (x3866 x2639 1))))
(assert (= x1050 (or x2675 x1839 x784 x1487 x908)))
(assert (= x872 (or x3342 x704)))
(assert (x2022 x97))
(assert (x2022 x1549))
(assert (= (=> (and (not (< x855 x1947)) (= x1017 x3735) (= x2817 x584)) x1327) x2632))
(assert (= (and x2823 (not x3102)) x191))
(assert (= x2088 (and (not x30) x1639)))
(assert (x2022 x2571))
(assert (x2022 x2145))
(assert (= (x3873 (x512 x1265)) x1265))
(assert (= x2203 (=> (= x475 (= x2148 0)) (and (=> (and (= x2454 x1969) x475) x1944) (=> (and (not x475) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x372) true) (> 32 x372)) (> x372 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3294)) (and (=> (and (not x3294) (and (= 32 x2731) (= x927 x1969) (= 1 x3182))) x146) (=> (and (= x2454 x1969) x3294) x1944)))))))
(assert (x2022 x227))
(assert (= (and x122 (not x1151)) x299))
(assert (x2022 x787))
(assert (x2022 x3658))
(assert (= x2705 (and x2036 x2406)))
(assert (x2022 x2987))
(assert (x2022 x306))
(assert (= x218 (and (not x571) x2568)))
(assert (= (and (not x3880) x3882) x2382))
(assert (x2022 x1635))
(assert (= (x3873 (x512 x1732)) x1732))
(assert (= (and x1183 x3787) x2883))
(assert (x2022 x2897))
(assert (x2022 x2703))
(assert (x3201 x495))
(assert (= x115 (and x1803 x1047)))
(assert (x2022 x2615))
(assert (= x1525 (and x1817 (not x3571))))
(assert (x3201 x352))
(assert (x2022 x166))
(assert (= x941 (and (=> (and (not x2024) (and (= x1277 0) (= x807 x1613))) x1304) (=> (and x2024 (and (or (and (not x3508) (= x3508 x1080)) (and (and (= (not x2642) x1080) (= (x534 (x512 x2473) x3066 0) x3634) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x787) (>= x787 0) (= x2642 (> x860 x787)) (= x551 (x3866 x3634 2)) (= x787 (x2522 x551))) x3508)) (and (= (ite (> x720 1) (not (= 0 x2473)) (> x720 1)) x3508) (= (x3866 x221 1) x2784) (= x2473 (x3425 x2784)) (>= 1461501637330902918203684832716283019655932542975 x2473) (<= 0 x2473) (< x2473 1461501637330902918203684832716283019655932542976) (= (x534 (x512 x1613) x3066 0) x221)))) x3524))))
(assert (x2022 x1234))
(assert (x2022 x1378))
(assert (x2022 x1818))
(assert (= (and (not x2805) x1650) x3281))
(assert (x2022 x557))
(assert (= (=> (and (= x999 x1773) (= x2757 (x534 (x512 x496) x149 0)) (= (x3866 x2757 1) x3541) (= (x3866 x3541 1) x573)) x857) x157))
(assert (= (and (not x1003) x2848) x1532))
(assert (x2022 x392))
(assert (= (+ (x3873 x2548) 1) (x3873 (x3866 x2548 1))))
(assert (x2022 x2995))
(assert (x2022 x2712))
(assert (= (x955 1475734106) (x512 1475734106)))
(assert (x2022 x107))
(assert (= (x3873 (x955 310377888)) 310377888))
(assert (x2022 x3783))
(assert (x2022 x3119))
(assert (x2022 x907))
(assert (x2447 x3236))
(assert (= 2929553584 (x3873 (x955 2929553584))))
(assert (= (x3873 (x512 x728)) x728))
(assert (x2022 x3660))
(assert (= x1321 (and x3292 x3439)))
(assert (x2022 x3417))
(assert (x2022 x2441))
(assert (x2022 x455))
(assert (x2022 x3612))
(assert (= (and x2496 x613) x3000))
(assert (x2022 x860))
(assert (= x676 (and (not x3857) x52)))
(assert (= (x3873 (x3866 x511 1)) (+ (x3873 x511) 1)))
(assert (= x1994 (and x1237 (not x8))))
(assert (= x366 (and x1705 x3218)))
(assert (=> (>= 10000 x1265) (= (x512 x1265) (x955 x1265))))
(assert (= x1351 (and x3916 x2564)))
(assert (x2022 x1605))
(assert (x2022 x3184))
(assert (= (x3873 (x512 x2816)) x2816))
(assert (= (=> (and (= x1118 x2519) (= 0 x1482)) x1437) x1143))
(assert (x2022 x2373))
(assert (x2022 x2603))
(assert (x2022 x1369))
(assert (x2022 x2978))
(assert (x2022 x768))
(assert (= (=> (and (= x879 x2974) (= x3329 x625)) x1774) x1012))
(assert (x2022 x3180))
(assert (x2022 x440))
(assert (= x752 (and x2706 (not x3393))))
(assert (x2022 x1787))
(assert (= (and x1365 x3566) x141))
(assert (x2022 x1987))
(assert (x2022 x1473))
(assert (= (and (not x188) x1572) x851))
(assert (= x1121 (and x360 x798)))
(assert (= (or x130 x1296) x381))
(assert (x2022 x1981))
(assert (x2022 x2786))
(assert (x2022 x1175))
(assert (x3201 x3002))
(assert (x2022 x352))
(assert (= (and x2773 x3705) x3020))
(assert (x2022 x1517))
(assert (x2022 x1431))
(assert (x2022 x3130))
(assert (= x1851 (and (not x1319) x2111)))
(assert (x2022 x1547))
(assert (x2022 x815))
(assert (= x1451 (and (not x2316) x1903)))
(assert (x2022 x646))
(assert (= x1928 (and (=> (and (and (= 1 x1089) (= x2768 x158)) (not x472)) x3095) (=> (and x472 (and (= x386 x3001) (= x352 x2120) (= x2768 x2824))) x1229))))
(assert (x2022 x3656))
(assert (x2022 x3818))
(assert (x2022 x1958))
(assert (= (and x3896 x2971) x2337))
(assert (= (x3873 (x3866 x962 1)) (+ (x3873 x962) 1)))
(assert (x2022 x730))
(assert (x2022 x327))
(assert (= (and x1069 (not x367)) x1))
(assert (x2022 x1768))
(assert (x2022 x177))
(assert (x2022 x542))
(assert (= x3653 (and x140 x928)))
(assert (= (+ 1 (x3873 x2674)) (x3873 (x3866 x2674 1))))
(assert (x3356 x1314))
(assert (= (and (not x475) x1871) x2554))
(assert (x2022 x2525))
(assert (x2022 x3746))
(assert (x2022 x3646))
(assert (= x1519 (and x2990 x1536)))
(assert (x3201 x987))
(assert (x2022 x1264))
(assert (x2022 x1277))
(assert (= (x3873 (x3866 x224 2)) (+ (x3873 x224) 2)))
(assert (x2022 x3494))
(assert (x2022 x301))
(assert (x2022 x3326))
(assert (x2022 x3348))
(assert (= x3555 (and x3452 x3813)))
(assert (= x2188 (and x1510 (not x918))))
(assert (= (and x1936 (not x3163)) x464))
(assert (x2022 x680))
(assert (x2022 x3562))
(assert (= (x3873 (x3866 x260 2)) (+ (x3873 x260) 2)))
(assert (= 1865448899 (x3873 (x955 1865448899))))
(assert (x3356 x2598))
(assert (x2022 x3068))
(assert (x2022 x3246))
(assert (x2022 x1939))
(assert (= x450 (and x367 x1069)))
(assert (x2022 x689))
(assert (x2022 x249))
(assert (= x1610 (=> (and (= x1538 x3266) (= x3415 x3164) (= x3269 x3735)) x3767)))
(assert (x2022 x2362))
(assert (x2022 x2787))
(assert (= (and x78 x577) x2142))
(assert (= (and x1936 x3163) x601))
(assert (x3201 x1381))
(assert (= 1832238993 (x3873 (x955 1832238993))))
(assert (= x1925 (and x430 (not x2455))))
(assert (x3201 x1974))
(assert (x2022 x3570))
(assert (= (and x1128 x381) x2923))
(assert (= x1090 (and x461 (not x2832))))
(assert (x2022 x1434))
(assert (x2022 x2696))
(assert (x2022 x3757))
(assert (x2022 x3422))
(assert (x2022 x3657))
(assert (x2022 x2057))
(assert (x3596 x77))
(assert (x3201 x2152))
(assert (x2022 x3747))
(assert (x2022 x3394))
(assert (= (x512 4233614559) (x955 4233614559)))
(assert (= (x3873 (x512 x2473)) x2473))
(assert (x2022 x1330))
(assert (x2022 x3127))
(assert (= x2984 (and (not x2309) x3675)))
(assert (= (and x2435 x2975) x1094))
(assert (= (and x641 (not x2514)) x3547))
(assert (= x935 (and (not x3302) x2247)))
(assert (x2022 x407))
(assert (x2022 x1948))
(assert (x2447 x2239))
(assert (x2022 x772))
(assert (x2022 x3432))
(assert (x2022 x2876))
(assert (x2022 x602))
(assert (x2022 x2269))
(assert (x2022 x1564))
(assert (x2022 x3096))
(assert (x2022 x1695))
(assert (= x1999 (and x883 x2730)))
(assert (x2022 x467))
(assert (= (=> (and (= x1831 x3533) (= 0 x2451)) x3010) x3507))
(assert (x2022 x2009))
(assert (= (x3873 (x3866 x2932 1)) (+ (x3873 x2932) 1)))
(assert (x2022 x2843))
(assert (= (x3873 (x512 x2953)) x2953))
(assert (=> (<= x2044 10000) (= (x955 x2044) (x512 x2044))))
(assert (x2022 x1211))
(assert (x2022 x262))
(assert (= x1425 (and x1780 x169)))
(assert (x2022 x1808))
(assert (= (and (not x1905) x1883) x3447))
(assert (x2022 x372))
(assert (x2022 x3771))
(assert (x2022 x1074))
(assert (x2022 x649))
(assert (x2022 x3558))
(assert (x2022 x913))
(assert (= (and x2214 (not x3395)) x2066))
(assert (= (+ 1 (x3873 x185)) (x3873 (x3866 x185 1))))
(assert (x2022 x3270))
(assert (x2022 x2014))
(assert (x2022 x1890))
(assert (x2022 x3))
(assert (= (and x2210 x701) x2200))
(assert (= x3675 (and x2396 (not x167))))
(assert (= x3375 (and x3903 x1096)))
(assert (= x2511 (=> (= x2902 x3686) x766)))
(assert (x2022 x2953))
(assert (= (or x237 x3435) x69))
(assert (= (and (not x1968) x1002) x73))
(assert (= x3754 (and x1994 x2486)))
(assert (= x2748 (or x38 x1331)))
(assert (= x3134 (and x2841 x466)))
(assert (x2022 x3052))
(assert (x2022 x871))
(assert (x2022 x373))
(assert (= x3625 (=> (and (= 0 x504) (= x2121 x3790)) x1303)))
(assert (= x2044 (x3873 (x512 x2044))))
(assert (x3201 x548))
(assert (= x2442 (and x2406 (not x2036))))
(assert (x2022 x1501))
(assert (x2022 x3190))
(assert (x2022 x2993))
(assert (= x1573 (or x2381 x1107 x110 x423 x2420)))
(assert (x2022 x708))
(assert (= x3709 (and (not x3859) x1670)))
(assert (= (+ (x3873 x3049) 1) (x3873 (x3866 x3049 1))))
(assert (= (and x170 x2555) x2647))
(assert (= (or x2659 x3382 x1321 x450 x1834) x1716))
(assert (x2022 x1542))
(assert (x3201 x1818))
(assert (x2022 x1505))
(assert (= x1023 (=> (and (= x3007 x3329) (= x2974 x2441)) x1774)))
(assert (= (and (not x3455) x499) x130))
(assert (= (and x2748 (not x90)) x3648))
(assert (=> (>= 10000 x456) (= (x955 x456) (x512 x456))))
(assert (= (and x2306 x1138) x481))
(assert (x2022 x1100))
(assert (x2022 x2175))
(assert (= (+ (x3873 x1119) x3078) (x3873 (x3866 x1119 x3078))))
(assert (x2022 x1456))
(assert (= x3003 (and x2272 x1585)))
(assert (x2022 x1438))
(assert (x2022 x1273))
(assert (= (x3873 (x3866 x3066 1)) (+ (x3873 x3066) 1)))
(assert (= x1127 (and x755 x888)))
(assert (x2022 x3268))
(assert (x2022 x3573))
(assert (x2022 x2599))
(assert (x2022 x3009))
(assert (= x1138 (and x2111 x1319)))
(assert (=> (>= 10000 x3666) (= (x955 x3666) (x512 x3666))))
(assert (x2022 x463))
(assert (= (=> (and (= x2212 x2739) (= x1756 x978)) x555) x3719))
(assert (x2022 x1602))
(assert (x2022 x1566))
(assert (x2022 x3664))
(assert (x2022 x2887))
(assert (= (and (not x3840) x3427) x2898))
(assert (= (and x2595 (not x3194)) x1365))
(assert (= (=> (= x238 (= x860 x615)) (and (=> (and (not x238) (= (> x615 0) x2036)) (and (=> (and (and (and (= x3323 (x3866 x2104 1)) (>= 1461501637330902918203684832716283019655932542975 x728) (= (= x3457 0) x3306) (not (= 0 x2254)) (<= 0 x2254) (= x2254 (x1678 x1271)) (<= x3457 1461501637330902918203684832716283019655932542975) (>= x728 0) (>= x3457 0) (= (x749 x3323) x728) (<= x2254 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x524 (x3155 (+ 96 x1958))) (= x3457 (x3471 x2104)) (= x1271 (x3866 x3323 1)) (= x2104 (x534 (x512 x2725) x3066 0)) (> 1461501637330902918203684832716283019655932542976 x728) (< x3457 1461501637330902918203684832716283019655932542976)) (or (and (= x3030 (x3866 x3066 1)) x3306) (and (not x3306) (and (= x2674 (x534 (x512 x3457) x3066 0)) (= x1810 (x3866 x2674 1)))))) x2036) x3389) (=> (and (not x2036) (and (= x1958 x854) (= x3173 x2725))) x599))) (=> (and (and (= x2725 x874) (= x1465 x1958)) x238) x3229))) x2983))
(assert (= x2768 (x3873 (x512 x2768))))
(assert (= (or x3724 x1170 x3659 x3489 x263) x2559))
(assert (x2022 x2772))
(assert (= (x512 115792089237316195423570985008687907853269984665640564039457) (x955 115792089237316195423570985008687907853269984665640564039457)))
(assert (= x2577 (or x687 x3804 x3377 x323 x1822 x1389)))
(assert (x2022 x661))
(assert (= 24044834009420335638544845215851342251227478490780828673611325350056707489792 (x3873 (x955 24044834009420335638544845215851342251227478490780828673611325350056707489792))))
(assert (x2022 x2049))
(assert (x2022 x165))
(assert (x2022 x2017))
(assert (= (=> (= (> x3039 0) x1689) (and (=> (not x1689) x3892) (=> (and x1689 (and (and (= (x3866 x260 2) x1729) (= x3789 (x293 x1729)) (<= 0 x3789) (<= x3789 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x534 (x512 x1140) x3538 0) x260) (<= x664 1461501637330902918203684832716283019655932542975) (= (x3866 x3538 1) x944) (<= 0 x664) (> 1461501637330902918203684832716283019655932542976 x664) (<= x720 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x720 0) (= (x2941 x944) x664) (= 0 x3789) (= (ite (> x720 0) (not (= x664 0)) (< 0 x720)) x1830) (not (= 0 x1140))) (or (and (and (= (x293 x2516) x1454) (>= x1454 0) (= (x3866 x3777 2) x2516) (= (> x3039 x1454) x3601) (= x3567 (not x3601)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1454) (= (x534 (x512 x664) x3538 0) x3777)) x1830) (and (not x1830) (= x3567 x1830))))) x3442))) x2637))
(assert (= (+ (x3873 x2831) 1) (x3873 (x3866 x2831 1))))
(assert (x2022 x3286))
(assert (x2022 x3520))
(assert (= (and (not x535) x3931) x3256))
(assert (x2022 x901))
(assert (= x1436 (and x1908 x359)))
(assert (= x343 (=> (and (or (and (and (or (and (not x671) (and (= (x534 (x512 x496) x149 0) x1794) (= x3929 (x3866 x1794 1)) (= x3176 (x534 (x512 x1251) x149 0)) (= (x3866 x3929 1) x3209) (= x1579 (x3155 (+ x1773 96))) (= x1579 x1285))) (and (and (>= 1461501637330902918203684832716283019655932542975 x3688) (>= x3688 0) (= (x3866 x112 1) x2056) (= (x3866 x1160 1) x3519) (= x112 (x534 (x512 x496) x149 0)) (= x678 x1285) (= (x2904 x1755) x3688) (= x1755 (x534 (x512 x1251) x149 0)) (= x2069 (x534 (x512 x1251) x149 0)) (= x678 (x3155 (+ x1773 96))) (= (x3866 x2056 1) x3011) (< x3688 1461501637330902918203684832716283019655932542976) (= (x534 (x512 x3688) x149 0) x1160)) x671)) (and (<= x427 1461501637330902918203684832716283019655932542975) (= x671 (> x3204 0)) (<= 0 x427) (< x427 1461501637330902918203684832716283019655932542976) (= (x3366 x890) x427) (= x3204 (x3331 (- x1251 x427))))) x1536) (and (and (and (= (x3366 x890) x542) (>= 1461501637330902918203684832716283019655932542975 x542) (>= x542 0) (= x1780 (= 0 x542)) (> 1461501637330902918203684832716283019655932542976 x542)) (or (and (and (= x1404 (x3866 x2264 1)) (= x1842 (x534 (x512 x496) x149 0)) (= (x3866 x1842 1) x2264) (= x1004 (x3155 (+ x1773 96))) (= x2956 (x3866 x890 1)) (= x1285 x1004)) x1780) (and (and (= x2738 (x3866 x1218 1)) (= (x1946 x560) x1856) (= x1218 (x534 (x512 x1856) x149 0)) (<= x1856 1461501637330902918203684832716283019655932542975) (= (x3866 x853 1) x1450) (= (x3866 x1450 1) x2860) (= (x534 (x512 x496) x149 0) x853) (<= 0 x1856) (= x1448 x1285) (= x560 (x3866 x890 1)) (= (x3155 (+ 96 x1773)) x1448) (< x1856 1461501637330902918203684832716283019655932542976)) (not x1780)))) (not x1536))) (= x1536 (ite (< x3740 x720) (not (= 0 x1251)) (> x720 x3740)))) x2363)))
(assert (=> (<= x3573 10000) (= (x512 x3573) (x955 x3573))))
(assert (x2022 x3883))
(assert (x2022 x1470))
(assert (= (+ 1 (x3873 x3541)) (x3873 (x3866 x3541 1))))
(assert (= x791 (or x3230 x832 x3110 x669)))
(assert (=> (<= x2373 10000) (= (x955 x2373) (x512 x2373))))
(assert (x2022 x874))
(assert (= x3892 x3484))
(assert (x2447 x77))
(assert (= (x3873 (x3866 x3538 1)) (+ (x3873 x3538) 1)))
(assert (x2022 x1760))
(assert (x2022 x2544))
(assert (x2022 x2744))
(assert (x2022 x3473))
(assert (= (x3873 (x3866 x468 2)) (+ 2 (x3873 x468))))
(assert (= x3221 (and x3352 x2597)))
(assert (x2022 x1811))
(assert (x2022 x2654))
(assert (x2022 x2164))
(assert (=> (>= 10000 x2762) (= (x512 x2762) (x955 x2762))))
(assert (x2022 x2375))
(assert (x2022 x1662))
(assert (x2022 x2816))
(assert (= x2659 (and x1349 x1495)))
(assert (= (and x3605 x1446) x2275))
(assert (x2022 x2032))
(assert (=> (<= x1251 10000) (= (x955 x1251) (x512 x1251))))
(assert (= (=> (and (= x2461 x2739) (= x81 x978)) x2980) x555))
(assert (x2022 x2484))
(assert (x2022 x186))
(assert (x2022 x402))
(assert (x2022 x2408))
(assert (=> (<= x2152 10000) (= (x955 x2152) (x512 x2152))))
(assert (x2022 x121))
(assert (x2022 x2429))
(assert (= (x3873 (x955 50292402827334880472107169365697159231523039388532301717704428044325102813184)) 50292402827334880472107169365697159231523039388532301717704428044325102813184))
(assert (= x1993 (or x3643 (and x1584 (not x2190)))))
(assert (x2022 x782))
(assert (x2022 x1850))
(assert (x2022 x2195))
(assert (x2022 x2521))
(assert (= (x512 989455977) (x955 989455977)))
(assert (x2022 x3147))
(assert (= (x3873 (x512 x680)) x680))
(assert (= (x3873 (x3866 x1368 1)) (+ 1 (x3873 x1368))))
(assert (= (and (not x3472) x785) x1370))
(assert (x2022 x3742))
(assert (x2022 x2546))
(assert (x2022 x1245))
(assert (= x2838 (and (not x1568) x3551)))
(assert (x2022 x1040))
(assert (x2022 x847))
(assert (= x3424 (and x3684 (not x2930))))
(assert (x2022 x2176))
(assert (x2022 x160))
(assert (x2022 x2029))
(assert (x2022 x1161))
(check-sat)
(exit)