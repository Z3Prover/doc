(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x301 0)) (((x1426 (x1633 Int)) (x2541 (x1212 x301) (x1519 Int)) (x2536 (x1489 x301) (x1520 x301) (x280 Int)))))
(declare-fun x2339 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x1619 () Int)
(declare-fun x378 () Bool)
(declare-fun x1579 () Int)
(declare-fun x2269 () Bool)
(declare-fun x919 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x579 () Int)
(declare-fun x232 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x1860 () Bool)
(declare-fun x1755 () Int)
(declare-fun x2399 () Int)
(declare-fun x608 () x301)
(declare-fun x1164 () x301)
(declare-fun x1917 () Bool)
(declare-fun x1833 () Int)
(declare-fun x892 () Int)
(declare-fun x1861 () Int)
(declare-fun x2146 () Bool)
(declare-fun x126 () Int)
(declare-fun x1991 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x1302 () Int)
(declare-fun x1012 () Int)
(declare-fun x1199 () x301)
(declare-fun x66 () Bool)
(declare-fun x616 () Int)
(declare-fun x1398 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1960 () Int)
(declare-fun x1115 () x301)
(declare-fun x2203 () Int)
(declare-fun x512 () Int)
(declare-fun x1845 () Int)
(declare-fun x1573 () x301)
(declare-fun x2202 () Int)
(declare-fun x1247 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x418 () Int)
(declare-fun x1595 () Int)
(declare-fun x339 () Bool)
(declare-fun x1391 () Int)
(declare-fun x529 () Bool)
(declare-fun x2596 () Int)
(declare-fun x2436 () Int)
(declare-fun x980 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x932 () Bool)
(declare-fun x796 () Int)
(declare-fun x330 () Bool)
(declare-fun x26 () Int)
(declare-fun x2121 () Int)
(declare-fun x1455 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x844 () Bool)
(declare-fun x2714 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x1795 () Bool)
(declare-fun x1657 () Int)
(declare-fun x966 () Int)
(declare-fun x1518 () Int)
(declare-fun x581 () Bool)
(declare-fun x57 () Bool)
(declare-fun x1098 () Int)
(declare-fun x555 () Bool)
(declare-fun x2286 () Int)
(declare-fun x1218 () Int)
(declare-fun x18 () Bool)
(declare-fun x580 () Bool)
(declare-fun x2427 () Int)
(declare-fun x210 () x301)
(declare-fun x1140 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x670 () x301)
(declare-fun x39 () x301)
(declare-fun x1526 () Bool)
(declare-fun x2052 () Int)
(declare-fun x2530 () Int)
(declare-fun x1113 () x301)
(declare-fun x2148 () Bool)
(declare-fun x1758 () Int)
(declare-fun x1286 () Bool)
(declare-fun x2072 () Int)
(declare-fun x487 () Bool)
(declare-fun x1340 () Int)
(declare-fun x1032 () Bool)
(declare-fun x1727 () Int)
(declare-fun x1612 () Int)
(declare-fun x1049 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x295 () Bool)
(declare-fun x337 () Bool)
(declare-fun x1568 (x301) Int)
(declare-fun x2308 () Bool)
(declare-fun x1873 () Int)
(declare-fun x225 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x965 () Int)
(declare-fun x344 () Bool)
(declare-fun x471 () Bool)
(declare-fun x897 () x301)
(declare-fun x2060 () Bool)
(declare-fun x2509 () Int)
(declare-fun x2285 () Int)
(declare-fun x627 () Bool)
(declare-fun x238 () Bool)
(declare-fun x649 () Int)
(declare-fun x2354 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x68 () Bool)
(declare-fun x1171 () x301)
(declare-fun x1922 () Int)
(declare-fun x949 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x1979 () Int)
(declare-fun x1816 () Bool)
(declare-fun x1941 () Bool)
(declare-fun x817 () Bool)
(declare-fun x73 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x1277 () Int)
(declare-fun x772 () Bool)
(declare-fun x201 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x2389 () Bool)
(declare-fun x1963 () Int)
(declare-fun x2137 () Bool)
(declare-fun x2223 () Bool)
(declare-fun x2073 () x301)
(declare-fun x859 () Bool)
(declare-fun x2441 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x615 (x301) Int)
(declare-fun x1483 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x317 () Bool)
(declare-fun x934 () Int)
(declare-fun x1095 () Bool)
(declare-fun x2256 () Bool)
(declare-fun x2414 () Int)
(declare-fun x287 () Int)
(declare-fun x2325 () x301)
(declare-fun x229 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x227 () Int)
(declare-fun x2489 () Int)
(declare-fun x1513 () Int)
(declare-fun x2605 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x1445 () Int)
(declare-fun x226 () Int)
(declare-fun x1965 () Int)
(declare-fun x2296 () Int)
(declare-fun x1765 () Int)
(declare-fun x124 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x643 () Int)
(declare-fun x1767 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x298 () Bool)
(declare-fun x1746 () Int)
(declare-fun x452 () Bool)
(declare-fun x1529 () Int)
(declare-fun x2675 () Int)
(declare-fun x2179 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x2316 () x301)
(declare-fun x567 () Bool)
(declare-fun x2633 () Bool)
(declare-fun x2139 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x1135 () Int)
(declare-fun x1724 () x301)
(declare-fun x1661 () Int)
(declare-fun x1294 () Int)
(declare-fun x1567 () Bool)
(declare-fun x550 () Bool)
(declare-fun x363 () Int)
(declare-fun x1191 () Int)
(declare-fun x991 () Bool)
(declare-fun x43 () Bool)
(declare-fun x1215 () Int)
(declare-fun x2494 () Int)
(declare-fun x1935 () Bool)
(declare-fun x1136 () Int)
(declare-fun x1597 () Bool)
(declare-fun x454 () Bool)
(declare-fun x2078 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x2663 () Bool)
(declare-fun x24 () Bool)
(declare-fun x1453 () x301)
(declare-fun x1658 () Bool)
(declare-fun x1031 () Int)
(declare-fun x1399 () Int)
(declare-fun x1238 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x332 () Int)
(declare-fun x2407 () Int)
(declare-fun x1267 () Int)
(declare-fun x2500 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x146 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x2523 () Bool)
(declare-fun x1681 () Int)
(declare-fun x698 () Int)
(declare-fun x1762 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x1607 () Int)
(declare-fun x249 () Int)
(declare-fun x2713 () Int)
(declare-fun x425 () Bool)
(declare-fun x705 () Bool)
(declare-fun x1672 () Int)
(declare-fun x1044 () Int)
(declare-fun x1900 () Bool)
(declare-fun x11 () Int)
(declare-fun x1544 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1512 () x301)
(declare-fun x2294 () Int)
(declare-fun x2480 () Bool)
(declare-fun x2687 () Bool)
(declare-fun x194 () Int)
(declare-fun x2260 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x2677 () Bool)
(declare-fun x1818 () Int)
(declare-fun x2411 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x486 () Bool)
(declare-fun x594 () Int)
(declare-fun x799 () Bool)
(declare-fun x816 () Int)
(declare-fun x239 () x301)
(declare-fun x2447 () Bool)
(declare-fun x104 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x1893 () Int)
(declare-fun x1207 () Bool)
(declare-fun x1955 () Int)
(declare-fun x653 () Int)
(declare-fun x2543 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x1985 () Int)
(declare-fun x1864 () Bool)
(declare-fun x890 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x2388 () Bool)
(declare-fun x509 () Bool)
(declare-fun x2730 () Bool)
(declare-fun x617 () Bool)
(declare-fun x1024 () x301)
(declare-fun x1040 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x328 () Bool)
(declare-fun x1099 () Int)
(declare-fun x393 () Int)
(declare-fun x1298 () Int)
(declare-fun x13 () Int)
(declare-fun x2600 () Int)
(declare-fun x1804 () Bool)
(declare-fun x2327 () Bool)
(declare-fun x2641 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1936 () Int)
(declare-fun x1163 () Int)
(declare-fun x1688 () Int)
(declare-fun x399 () Int)
(declare-fun x135 () Int)
(declare-fun x1224 () Int)
(declare-fun x314 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x2088 () Int)
(declare-fun x2673 () Bool)
(declare-fun x1803 () x301)
(declare-fun x687 () Int)
(declare-fun x815 () Bool)
(declare-fun x472 () Bool)
(declare-fun x368 () Int)
(declare-fun x2511 () Bool)
(declare-fun x1837 () Bool)
(declare-fun x521 () Bool)
(declare-fun x2053 () x301)
(declare-fun x81 () Bool)
(declare-fun x821 () Bool)
(declare-fun x479 () Bool)
(declare-fun x2715 () Int)
(declare-fun x1323 () Int)
(declare-fun x1946 () Bool)
(declare-fun x1757 () Int)
(declare-fun x415 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x95 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x109 () Int)
(declare-fun x2525 () Int)
(declare-fun x412 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x1664 () Int)
(declare-fun x557 () Bool)
(declare-fun x2035 () Int)
(declare-fun x769 () Bool)
(declare-fun x894 () Bool)
(declare-fun x1353 () Bool)
(declare-fun x2204 () Int)
(declare-fun x788 () Bool)
(declare-fun x1064 () Int)
(declare-fun x2089 () Bool)
(declare-fun x2265 () Int)
(declare-fun x573 () Int)
(declare-fun x524 () Int)
(declare-fun x860 () x301)
(declare-fun x2626 () Int)
(declare-fun x1413 () Bool)
(declare-fun x1593 () Int)
(declare-fun x871 () Int)
(declare-fun x762 () Bool)
(declare-fun x2612 () Int)
(declare-fun x1253 () Int)
(declare-fun x390 () Bool)
(declare-fun x2558 () x301)
(declare-fun x120 () Int)
(declare-fun x2305 () Int)
(declare-fun x2311 () Bool)
(declare-fun x74 () x301)
(declare-fun x2681 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x2630 () Int)
(declare-fun x1592 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x220 () Bool)
(declare-fun x783 () Bool)
(declare-fun x899 () Bool)
(declare-fun x2284 () Int)
(declare-fun x1258 () Int)
(declare-fun x381 () Bool)
(declare-fun x2438 () Bool)
(declare-fun x992 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x734 (Int) Int)
(declare-fun x701 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x2422 () Int)
(declare-fun x1789 () Int)
(declare-fun x986 () Bool)
(declare-fun x779 () Int)
(declare-fun x2439 () Int)
(declare-fun x1626 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1076 () Int)
(declare-fun x2468 () x301)
(declare-fun x2707 (x301) Int)
(declare-fun x1954 () Bool)
(declare-fun x2047 () Bool)
(declare-fun x1835 () Int)
(declare-fun x1236 () Int)
(declare-fun x2640 () Bool)
(declare-fun x1811 () Int)
(declare-fun x1938 () Int)
(declare-fun x1118 () Int)
(declare-fun x1908 () Int)
(declare-fun x362 () Int)
(declare-fun x2445 () Bool)
(declare-fun x2001 () Int)
(declare-fun x1287 () Int)
(declare-fun x2725 () Bool)
(declare-fun x308 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x347 () Int)
(declare-fun x131 () Int)
(declare-fun x2278 () Int)
(declare-fun x1862 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x2649 () Int)
(declare-fun x723 () x301)
(declare-fun x1394 () Int)
(declare-fun x1653 () Int)
(declare-fun x993 () Int)
(declare-fun x2696 () Int)
(declare-fun x481 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x426 () Int)
(declare-fun x400 () Bool)
(declare-fun x1407 () Int)
(declare-fun x684 () Int)
(declare-fun x2721 () Int)
(declare-fun x969 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x2257 () Int)
(declare-fun x812 () Int)
(declare-fun x102 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x729 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x47 () Bool)
(declare-fun x595 () Int)
(declare-fun x1020 () Bool)
(declare-fun x1390 () x301)
(declare-fun x2061 () Int)
(declare-fun x2662 () Bool)
(declare-fun x404 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x630 () Int)
(declare-fun x1005 () Int)
(declare-fun x895 () Bool)
(declare-fun x738 () Int)
(declare-fun x906 () Int)
(declare-fun x1438 () Bool)
(declare-fun x2738 () Int)
(declare-fun x271 () Int)
(declare-fun x1865 () Int)
(declare-fun x2157 () Bool)
(declare-fun x2524 () Int)
(declare-fun x160 () Int)
(declare-fun x1748 () Int)
(declare-fun x2416 () Int)
(declare-fun x448 () Bool)
(declare-fun x474 () Bool)
(declare-fun x279 () Int)
(declare-fun x121 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x1011 () Int)
(declare-fun x2232 () x301)
(declare-fun x1402 () Int)
(declare-fun x721 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x1827 () Int)
(declare-fun x1599 () Int)
(declare-fun x1261 () Int)
(declare-fun x485 () x301)
(declare-fun x500 () Int)
(declare-fun x2579 () Bool)
(declare-fun x32 () Int)
(declare-fun x586 () Bool)
(declare-fun x530 () Bool)
(declare-fun x211 () Int)
(declare-fun x2660 () x301)
(declare-fun x947 () Int)
(declare-fun x2043 () Bool)
(declare-fun x138 () x301)
(declare-fun x829 () Bool)
(declare-fun x2653 () Bool)
(declare-fun x103 () Int)
(declare-fun x2182 () Bool)
(declare-fun x1309 () x301)
(declare-fun x2491 () Bool)
(declare-fun x1665 () Int)
(declare-fun x1894 () Int)
(declare-fun x1370 () Int)
(declare-fun x720 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x403 () Int)
(declare-fun x91 () Int)
(declare-fun x1361 () Int)
(declare-fun x1459 () Int)
(declare-fun x2194 () Bool)
(declare-fun x825 () Int)
(declare-fun x2332 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x1448 () Int)
(declare-fun x2440 () Int)
(declare-fun x672 () Int)
(declare-fun x2331 () Bool)
(declare-fun x552 (x301) Int)
(declare-fun x2142 () Int)
(declare-fun x516 () Int)
(declare-fun x2670 () Bool)
(declare-fun x1956 () Int)
(declare-fun x840 () Int)
(declare-fun x697 () Bool)
(declare-fun x623 () x301)
(declare-fun x1382 () Int)
(declare-fun x750 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x152 () Int)
(declare-fun x5 () x301)
(declare-fun x878 () Bool)
(declare-fun x2281 () Int)
(declare-fun x2338 () Bool)
(declare-fun x440 () Int)
(declare-fun x2679 () Int)
(declare-fun x1354 () Bool)
(declare-fun x1416 () Int)
(declare-fun x1575 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x360 () Int)
(declare-fun x1229 () Bool)
(declare-fun x158 () Int)
(declare-fun x2350 () Int)
(declare-fun x1613 () Bool)
(declare-fun x2069 () Int)
(declare-fun x2191 () x301)
(declare-fun x1750 () Int)
(declare-fun x156 () Int)
(declare-fun x118 () Int)
(declare-fun x1461 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1249 () Bool)
(declare-fun x1169 () Int)
(declare-fun x2044 () Int)
(declare-fun x208 (Int) Int)
(declare-fun x1698 () x301)
(declare-fun x408 () Bool)
(declare-fun x2017 () Bool)
(declare-fun x513 () Int)
(declare-fun x132 () Int)
(declare-fun x2742 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x2476 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x2368 () Int)
(declare-fun x661 () Bool)
(declare-fun x1959 () Int)
(declare-fun x2376 () Int)
(declare-fun x145 () Int)
(declare-fun x1059 () Bool)
(declare-fun x300 () Int)
(declare-fun x1639 () x301)
(declare-fun x996 () x301)
(declare-fun x1279 () Int)
(declare-fun x548 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x1412 () Int)
(declare-fun x2423 () Bool)
(declare-fun x1857 () Int)
(declare-fun x1122 () Bool)
(declare-fun x141 () x301)
(declare-fun x1411 () Int)
(declare-fun x645 () Bool)
(declare-fun x2262 () Bool)
(declare-fun x283 () Bool)
(declare-fun x2096 () Bool)
(declare-fun x1570 () Int)
(declare-fun x662 () Int)
(declare-fun x1295 () Bool)
(declare-fun x2740 () Bool)
(declare-fun x477 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x2528 () Int)
(declare-fun x1683 () Bool)
(declare-fun x590 () x301)
(declare-fun x2683 () Bool)
(declare-fun x184 () Int)
(declare-fun x1889 () Int)
(declare-fun x1337 () Bool)
(declare-fun x236 () Int)
(declare-fun x2237 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x2665 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x2218 () Bool)
(declare-fun x1716 () Int)
(declare-fun x1484 () Int)
(declare-fun x2210 () Bool)
(declare-fun x1170 () Int)
(declare-fun x2367 () Bool)
(declare-fun x841 () x301)
(declare-fun x2328 () Bool)
(declare-fun x1251 () x301)
(declare-fun x626 () Bool)
(declare-fun x101 () Int)
(declare-fun x2003 (Int) Int)
(declare-fun x319 () Int)
(declare-fun x2147 () Bool)
(declare-fun x482 () Bool)
(declare-fun x733 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x1524 () Int)
(declare-fun x695 () Int)
(declare-fun x1666 () Int)
(declare-fun x845 () Bool)
(declare-fun x1745 () Int)
(declare-fun x1077 () Bool)
(declare-fun x2467 () Int)
(declare-fun x571 () Bool)
(declare-fun x970 () Int)
(declare-fun x428 () Int)
(declare-fun x341 () Bool)
(declare-fun x2575 () Int)
(declare-fun x642 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x386 () Int)
(declare-fun x1611 () Int)
(declare-fun x197 () Int)
(declare-fun x1562 () Bool)
(declare-fun x1628 () Int)
(declare-fun x1265 () Int)
(declare-fun x2384 () Int)
(declare-fun x1797 () Bool)
(declare-fun x2357 () Bool)
(declare-fun x2508 () Bool)
(declare-fun x694 () Int)
(declare-fun x2201 () Int)
(declare-fun x717 () Int)
(declare-fun x1177 (Int) Int)
(declare-fun x2651 () Int)
(declare-fun x2091 () x301)
(declare-fun x2200 () Int)
(declare-fun x223 () Int)
(declare-fun x1649 () Bool)
(declare-fun x1006 () x301)
(declare-fun x1508 () Int)
(declare-fun x1496 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x624 () x301)
(declare-fun x862 () Int)
(declare-fun x976 () Int)
(declare-fun x1179 () Int)
(declare-fun x365 () Bool)
(declare-fun x1969 () x301)
(declare-fun x749 () Int)
(declare-fun x2324 () Int)
(declare-fun x824 () Int)
(declare-fun x1001 () Int)
(declare-fun x2634 () Bool)
(declare-fun x546 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x2745 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x998 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x267 () Bool)
(declare-fun x1016 () Int)
(declare-fun x2131 () Int)
(declare-fun x2104 () Int)
(declare-fun x1736 () Bool)
(declare-fun x1510 () Int)
(declare-fun x1346 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x2574 () x301)
(declare-fun x2307 () Bool)
(declare-fun x2589 () Bool)
(declare-fun x114 () Int)
(declare-fun x2435 () Int)
(declare-fun x1801 () Int)
(declare-fun x2484 () Bool)
(declare-fun x997 () x301)
(declare-fun x1 () Bool)
(declare-fun x110 () Int)
(declare-fun x1943 (x301) Int)
(declare-fun x2181 () Int)
(declare-fun x776 () Bool)
(declare-fun x1035 () Int)
(declare-fun x2042 () Int)
(declare-fun x2062 () Int)
(declare-fun x385 () Int)
(declare-fun x463 () Int)
(declare-fun x1107 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x2676 () Bool)
(declare-fun x1905 () Bool)
(declare-fun x78 () Int)
(declare-fun x2006 () Int)
(declare-fun x2621 () Int)
(declare-fun x1883 () Bool)
(declare-fun x89 () Int)
(declare-fun x166 () Int)
(declare-fun x2481 () Bool)
(declare-fun x2159 () Int)
(declare-fun x25 () x301)
(declare-fun x525 () Bool)
(declare-fun x15 () Bool)
(declare-fun x1272 () Int)
(declare-fun x1932 () Int)
(declare-fun x1962 () Int)
(declare-fun x598 () Bool)
(declare-fun x2292 () Bool)
(declare-fun x2648 () Int)
(declare-fun x1220 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x628 () x301)
(declare-fun x407 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x56 () Bool)
(declare-fun x912 () Int)
(declare-fun x2549 () Bool)
(declare-fun x58 () Int)
(declare-fun x1888 () x301)
(declare-fun x1451 () Bool)
(declare-fun x247 () Int)
(declare-fun x2084 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x1574 () Int)
(declare-fun x2304 () Bool)
(declare-fun x2242 () Bool)
(declare-fun x526 () Int)
(declare-fun x2723 () Bool)
(declare-fun x449 () Int)
(declare-fun x2154 () x301)
(declare-fun x751 () Bool)
(declare-fun x2444 () Int)
(declare-fun x2247 () Int)
(declare-fun x329 () Int)
(declare-fun x1636 () Bool)
(declare-fun x1689 () Int)
(declare-fun x495 () Bool)
(declare-fun x36 () Int)
(declare-fun x1087 (Int) Int)
(declare-fun x1711 () Int)
(declare-fun x1065 () Int)
(declare-fun x106 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x2553 () Int)
(declare-fun x852 () Bool)
(declare-fun x1703 () Int)
(declare-fun x167 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x2382 () Bool)
(declare-fun x731 () Int)
(declare-fun x338 () Int)
(declare-fun x2458 () Int)
(declare-fun x1879 () Bool)
(declare-fun x2659 () Int)
(declare-fun x794 () Int)
(declare-fun x234 () Int)
(declare-fun x384 () Int)
(declare-fun x614 () Int)
(declare-fun x1303 () Int)
(declare-fun x2602 () x301)
(declare-fun x290 () Bool)
(declare-fun x2127 () Int)
(declare-fun x375 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x154 () Int)
(declare-fun x2497 () Bool)
(declare-fun x163 () Int)
(declare-fun x75 () Int)
(declare-fun x1383 () Int)
(declare-fun x648 () Int)
(declare-fun x511 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x1871 () Int)
(declare-fun x1768 () Bool)
(declare-fun x740 () Bool)
(declare-fun x224 () Int)
(declare-fun x252 () Int)
(declare-fun x444 () Bool)
(declare-fun x1449 () Int)
(declare-fun x719 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x455 () x301)
(declare-fun x583 () Int)
(declare-fun x1924 () Int)
(declare-fun x1276 () Int)
(declare-fun x1003 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x2607 () x301)
(declare-fun x2398 () x301)
(declare-fun x1616 () x301)
(declare-fun x2216 () Int)
(declare-fun x2463 () Int)
(declare-fun x2461 () Bool)
(declare-fun x2669 () Int)
(declare-fun x813 () Int)
(declare-fun x1322 () Bool)
(declare-fun x2135 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x1293 () Int)
(declare-fun x2175 () Bool)
(declare-fun x1271 (Int) Int)
(declare-fun x1300 () Int)
(declare-fun x514 () Int)
(declare-fun x2590 () Int)
(declare-fun x2591 () x301)
(declare-fun x866 () Int)
(declare-fun x2569 () Int)
(declare-fun x143 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1285 () x301)
(declare-fun x1637 () Bool)
(declare-fun x168 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x807 () Int)
(declare-fun x2063 () Bool)
(declare-fun x2462 () Bool)
(declare-fun x1234 () Int)
(declare-fun x2369 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x823 () Bool)
(declare-fun x1415 () x301)
(declare-fun x217 () Int)
(declare-fun x2320 () Int)
(declare-fun x1660 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x975 () Int)
(declare-fun x1109 () Bool)
(declare-fun x1503 () Int)
(declare-fun x1690 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x833 () Bool)
(declare-fun x869 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1739 () Int)
(declare-fun x2736 () Bool)
(declare-fun x1067 () x301)
(declare-fun x1018 () Bool)
(declare-fun x1744 () Int)
(declare-fun x1550 () Bool)
(declare-fun x2628 () x301)
(declare-fun x681 () Bool)
(declare-fun x2277 () Bool)
(declare-fun x2336 () Int)
(declare-fun x828 () Int)
(declare-fun x1851 () Int)
(declare-fun x988 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x1948 () Int)
(declare-fun x1790 () Int)
(declare-fun x2561 () Int)
(declare-fun x195 () Bool)
(declare-fun x904 () Bool)
(declare-fun x2287 () Int)
(declare-fun x1515 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x990 () Int)
(declare-fun x1884 () Int)
(declare-fun x2606 () Int)
(declare-fun x433 () Bool)
(declare-fun x377 () Int)
(declare-fun x1856 () Bool)
(declare-fun x1951 () Int)
(declare-fun x1472 () Int)
(declare-fun x547 () Int)
(declare-fun x2377 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1380 () Int)
(declare-fun x2642 () Int)
(declare-fun x1555 () Int)
(declare-fun x491 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x193 () Bool)
(declare-fun x3 () Bool)
(declare-fun x200 () Int)
(declare-fun x1487 () Int)
(declare-fun x196 () Int)
(declare-fun x207 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x2378 () Bool)
(declare-fun x2702 () Int)
(declare-fun x1173 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x352 () Bool)
(declare-fun x2386 () Int)
(declare-fun x54 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x2077 () x301)
(declare-fun x149 () Bool)
(declare-fun x76 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x2709 () Int)
(declare-fun x665 () Int)
(declare-fun x781 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1945 () Int)
(declare-fun x790 () Bool)
(declare-fun x1753 () Int)
(declare-fun x2068 () Int)
(declare-fun x973 () Int)
(declare-fun x882 () Bool)
(declare-fun x2510 () Bool)
(declare-fun x499 () Int)
(declare-fun x1066 () Int)
(declare-fun x1147 () Int)
(declare-fun x1121 () Bool)
(declare-fun x379 (x301) Int)
(declare-fun x2488 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x989 () Int)
(declare-fun x398 () Bool)
(declare-fun x1870 () Int)
(declare-fun x1668 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x2115 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x2031 () Int)
(declare-fun x983 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x192 () Bool)
(declare-fun x276 (Int) Int)
(declare-fun x264 () Bool)
(declare-fun x1041 () Int)
(declare-fun x775 () Int)
(declare-fun x1776 () Int)
(declare-fun x1478 () Bool)
(declare-fun x2666 () Bool)
(declare-fun x889 () Bool)
(declare-fun x957 () Bool)
(declare-fun x2007 () Int)
(declare-fun x1533 () Int)
(declare-fun x636 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x785 () Bool)
(declare-fun x2330 () Int)
(declare-fun x1606 () Int)
(declare-fun x1172 () Int)
(declare-fun x1848 () Bool)
(declare-fun x540 () Int)
(declare-fun x2456 () Bool)
(declare-fun x1798 () x301)
(declare-fun x743 () Int)
(declare-fun x100 () Int)
(declare-fun x1345 () Bool)
(declare-fun x888 () Bool)
(declare-fun x933 () Bool)
(declare-fun x7 () Int)
(declare-fun x937 () Bool)
(declare-fun x826 () Bool)
(declare-fun x297 () Int)
(declare-fun x2548 () Int)
(declare-fun x456 () Int)
(declare-fun x2126 () Int)
(declare-fun x2113 () Int)
(declare-fun x1601 () Bool)
(declare-fun x2033 () Int)
(declare-fun x2267 () Bool)
(declare-fun x1227 () Int)
(declare-fun x565 () Bool)
(declare-fun x884 () Bool)
(declare-fun x374 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x2198 () Int)
(declare-fun x1652 () Int)
(declare-fun x2608 (Int) Int)
(declare-fun x496 () Int)
(declare-fun x343 () x301)
(declare-fun x1435 () Int)
(declare-fun x1185 () Bool)
(declare-fun x2297 () Int)
(declare-fun x1389 () Bool)
(declare-fun x2646 () Bool)
(declare-fun x1968 () Int)
(declare-fun x1270 () Int)
(declare-fun x2288 () Bool)
(declare-fun x755 () x301)
(declare-fun x1802 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x23 () Int)
(declare-fun x2048 () Bool)
(declare-fun x2672 () x301)
(declare-fun x618 () x301)
(declare-fun x854 () Bool)
(declare-fun x38 () Bool)
(declare-fun x1706 () Int)
(declare-fun x1778 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x922 () Bool)
(declare-fun x593 () x301)
(declare-fun x793 () Int)
(declare-fun x900 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x1854 () Int)
(declare-fun x2187 () Int)
(declare-fun x851 () Int)
(declare-fun x745 () Int)
(declare-fun x838 () x301)
(declare-fun x504 () Int)
(declare-fun x2317 () Int)
(declare-fun x228 () Bool)
(declare-fun x1187 () Int)
(declare-fun x708 () Int)
(declare-fun x1139 () Int)
(declare-fun x299 () Int)
(declare-fun x416 () Int)
(declare-fun x943 () Bool)
(declare-fun x834 () Int)
(declare-fun x1754 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x2168 () Int)
(declare-fun x111 () Bool)
(declare-fun x766 () Int)
(declare-fun x1463 () Bool)
(declare-fun x1167 () Int)
(declare-fun x2161 () Int)
(declare-fun x1680 () Bool)
(declare-fun x2239 () Bool)
(declare-fun x243 () Int)
(declare-fun x2684 () Bool)
(declare-fun x574 () Bool)
(declare-fun x99 () Bool)
(declare-fun x1086 () Int)
(declare-fun x177 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x2138 () Bool)
(declare-fun x2678 () x301)
(declare-fun x1978 () Int)
(declare-fun x2567 () Bool)
(declare-fun x176 () Bool)
(declare-fun x588 () Int)
(declare-fun x725 () Int)
(declare-fun x34 () Bool)
(declare-fun x2136 () x301)
(declare-fun x2079 () Bool)
(declare-fun x600 () Bool)
(declare-fun x1068 () Int)
(declare-fun x2636 () Bool)
(declare-fun x2744 () Int)
(declare-fun x1571 () Bool)
(declare-fun x2466 () Int)
(declare-fun x69 () Int)
(declare-fun x282 () Int)
(declare-fun x1869 () Int)
(declare-fun x1124 () Int)
(declare-fun x2302 () Bool)
(declare-fun x310 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1288 () x301)
(declare-fun x876 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x837 () Int)
(declare-fun x2030 () Int)
(declare-fun x2599 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x327 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x62 () Int)
(declare-fun x484 () Bool)
(declare-fun x607 () Int)
(declare-fun x439 () Bool)
(declare-fun x913 () Bool)
(declare-fun x20 () Int)
(declare-fun x1456 () Int)
(declare-fun x1534 () Int)
(declare-fun x430 () Bool)
(declare-fun x2258 () Int)
(declare-fun x1589 () Int)
(declare-fun x1563 () Bool)
(declare-fun x447 () Bool)
(declare-fun x198 () Int)
(declare-fun x1786 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x702 () Bool)
(declare-fun x51 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x33 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x2026 () Int)
(declare-fun x539 () Int)
(declare-fun x2341 () Bool)
(declare-fun x2406 (x301) Int)
(declare-fun x70 () Bool)
(declare-fun x1014 (x301) Int)
(declare-fun x1004 () Int)
(declare-fun x2618 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x2506 () Int)
(declare-fun x916 () x301)
(declare-fun x1405 () Int)
(declare-fun x2505 () Bool)
(declare-fun x556 () Int)
(declare-fun x40 () x301)
(declare-fun x535 () Bool)
(declare-fun x2592 () Int)
(declare-fun x349 () Int)
(declare-fun x584 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1214 () Int)
(declare-fun x2664 () Bool)
(declare-fun x531 () Bool)
(declare-fun x883 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x789 () Bool)
(declare-fun x2498 () Bool)
(declare-fun x2571 () Bool)
(declare-fun x436 () Bool)
(declare-fun x2370 () Int)
(declare-fun x582 () Bool)
(declare-fun x261 () x301)
(declare-fun x2619 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x591 () Bool)
(declare-fun x460 () Bool)
(declare-fun x94 () Int)
(declare-fun x1552 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x82 () Int)
(declare-fun x1901 () Int)
(declare-fun x174 () Int)
(declare-fun x2167 () Bool)
(declare-fun x885 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x777 () Int)
(declare-fun x1853 () Bool)
(declare-fun x49 () Bool)
(declare-fun x2710 () Int)
(declare-fun x716 () Int)
(declare-fun x340 () Int)
(declare-fun x686 () Bool)
(declare-fun x601 () Int)
(declare-fun x1629 () Bool)
(declare-fun x534 () Int)
(declare-fun x85 () Int)
(declare-fun x2526 () Bool)
(declare-fun x1877 () x301)
(declare-fun x2209 () Bool)
(declare-fun x445 () x301)
(declare-fun x1696 () Int)
(declare-fun x316 () Int)
(declare-fun x1241 () x301)
(declare-fun x353 () Int)
(declare-fun x2570 () x301)
(declare-fun x52 () Bool)
(declare-fun x480 () Int)
(declare-fun x1648 () Int)
(declare-fun x371 () Int)
(declare-fun x1148 () Int)
(declare-fun x1045 () x301)
(declare-fun x19 () Int)
(declare-fun x2055 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x1111 () Int)
(declare-fun x490 () Bool)
(declare-fun x1996 () Int)
(declare-fun x2428 () Bool)
(declare-fun x2712 () Bool)
(declare-fun x2155 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x2018 () Bool)
(declare-fun x2487 () x301)
(declare-fun x2580 () Bool)
(declare-fun x675 () Int)
(declare-fun x45 () Int)
(declare-fun x457 () Int)
(declare-fun x1282 () Bool)
(declare-fun x875 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x1369 () Int)
(declare-fun x2578 () Bool)
(declare-fun x1715 () Int)
(declare-fun x293 () Int)
(declare-fun x1808 () Bool)
(declare-fun x2542 () Int)
(declare-fun x1156 () Bool)
(declare-fun x65 () Bool)
(declare-fun x782 () Bool)
(declare-fun x1913 () Int)
(declare-fun x1909 () Bool)
(declare-fun x2410 () x301)
(declare-fun x55 () Bool)
(declare-fun x2012 () Int)
(declare-fun x2013 () Int)
(declare-fun x528 () Int)
(declare-fun x907 () Int)
(declare-fun x1517 () Bool)
(declare-fun x2603 () Int)
(declare-fun x2387 () Bool)
(declare-fun x1891 () Int)
(declare-fun x629 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x1643 () Int)
(declare-fun x1621 () Bool)
(declare-fun x1386 () Int)
(declare-fun x727 () x301)
(declare-fun x470 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x2562 () Int)
(declare-fun x1437 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x804 () Bool)
(declare-fun x1401 () x301)
(declare-fun x189 () x301)
(declare-fun x2413 () Bool)
(declare-fun x587 () Bool)
(declare-fun x2342 () Bool)
(declare-fun x564 () Bool)
(declare-fun x505 () Bool)
(declare-fun x1327 () Int)
(declare-fun x2158 () Bool)
(declare-fun x1058 () Int)
(declare-fun x2207 () Int)
(declare-fun x498 () Int)
(declare-fun x1181 () x301)
(declare-fun x1895 () Int)
(declare-fun x2728 () Bool)
(declare-fun x765 () Bool)
(declare-fun x411 () Int)
(declare-fun x2092 () Int)
(declare-fun x446 () Bool)
(declare-fun x405 () Bool)
(declare-fun x31 () Bool)
(declare-fun x611 () Bool)
(declare-fun x97 () Int)
(declare-fun x441 () Bool)
(declare-fun x978 () Bool)
(declare-fun x938 () Bool)
(declare-fun x2228 () Int)
(declare-fun x2537 () Bool)
(declare-fun x549 () Bool)
(declare-fun x2114 () Int)
(declare-fun x2041 () Bool)
(declare-fun x1343 () Int)
(declare-fun x1026 () Int)
(declare-fun x954 () x301)
(declare-fun x2383 () Int)
(declare-fun x849 () Bool)
(declare-fun x383 () Int)
(declare-fun x2004 () Int)
(declare-fun x609 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x1925 () Int)
(declare-fun x427 () Bool)
(declare-fun x199 () Bool)
(declare-fun x1577 () Int)
(declare-fun x2593 () Int)
(declare-fun x877 () Int)
(declare-fun x63 () Int)
(declare-fun x1531 () Bool)
(declare-fun x2080 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x2176 () Int)
(declare-fun x1866 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x206 () Bool)
(declare-fun x1673 () Int)
(declare-fun x658 () Bool)
(declare-fun x263 () Bool)
(declare-fun x1447 () Int)
(declare-fun x768 () Bool)
(declare-fun x2057 (Int) Int)
(declare-fun x1885 () x301)
(declare-fun x382 () x301)
(declare-fun x469 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x780 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x2581 () Bool)
(declare-fun x1085 () Int)
(declare-fun x355 () Bool)
(declare-fun x842 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x2152 () Int)
(declare-fun x1190 () Int)
(declare-fun x1336 () Int)
(declare-fun x2120 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x2421 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x865 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x331 () Bool)
(declare-fun x112 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x1799 (Int Int) Int)
(declare-fun x735 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x1194 () x301)
(declare-fun x2635 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x939 () Bool)
(declare-fun x898 () Int)
(declare-fun x1740 () Int)
(declare-fun x1899 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x668 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x2163 () Int)
(declare-fun x886 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1578 () Int)
(declare-fun x2455 () Bool)
(declare-fun x709 () Int)
(declare-fun x678 () Bool)
(declare-fun x389 () Bool)
(declare-fun x1650 () Int)
(declare-fun x318 () Int)
(declare-fun x2037 () Int)
(declare-fun x1604 () Bool)
(declare-fun x2172 () Int)
(declare-fun x963 () x301)
(declare-fun x1332 () Bool)
(declare-fun x1046 () Int)
(declare-fun x1150 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2334 () Int)
(declare-fun x1849 () Int)
(declare-fun x853 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x67 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x2249 () Bool)
(declare-fun x2513 () Bool)
(declare-fun x451 () Int)
(declare-fun x458 () Bool)
(declare-fun x2082 () Int)
(declare-fun x483 () x301)
(declare-fun x1635 () Int)
(declare-fun x397 () Bool)
(declare-fun x497 () Bool)
(declare-fun x128 () Bool)
(declare-fun x2188 () Int)
(declare-fun x2502 () Bool)
(declare-fun x650 () Int)
(declare-fun x2065 () Int)
(declare-fun x1674 () Bool)
(declare-fun x551 () Bool)
(declare-fun x2276 () Bool)
(declare-fun x2496 () x301)
(declare-fun x22 () Int)
(declare-fun x1257 () Int)
(declare-fun x326 () x301)
(declare-fun x741 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x910 () Int)
(declare-fun x366 () Bool)
(declare-fun x2300 () Bool)
(declare-fun x306 () Bool)
(declare-fun x1850 () Int)
(declare-fun x1817 () Int)
(declare-fun x2695 () Bool)
(declare-fun x2503 () x301)
(declare-fun x808 () Bool)
(declare-fun x715 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x651 () Bool)
(declare-fun x1348 () x301)
(declare-fun x2130 () Int)
(declare-fun x1096 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x857 () Bool)
(declare-fun x190 () Bool)
(declare-fun x760 () Int)
(declare-fun x1246 () Bool)
(declare-fun x1292 () Int)
(declare-fun x730 () Int)
(declare-fun x4 () Int)
(declare-fun x758 () Int)
(declare-fun x321 () Int)
(declare-fun x1117 () Int)
(declare-fun x974 () Int)
(declare-fun x1532 () Bool)
(declare-fun x2275 () Int)
(declare-fun x2133 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x2211 () Int)
(declare-fun x1904 () Int)
(declare-fun x188 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x159 () Int)
(declare-fun x1378 () Bool)
(declare-fun x1490 () Int)
(declare-fun x704 () x301)
(declare-fun x1414 () Bool)
(declare-fun x1822 () Int)
(declare-fun x2374 () Int)
(declare-fun x1082 () Int)
(declare-fun x1967 () Bool)
(declare-fun x901 () Bool)
(declare-fun x2356 () Int)
(declare-fun x1564 () Bool)
(declare-fun x2212 () x301)
(declare-fun x640 () Int)
(declare-fun x302 () Int)
(declare-fun x2221 () Int)
(declare-fun x2519 () Bool)
(declare-fun x2691 () Int)
(declare-fun x493 () Bool)
(declare-fun x147 () Bool)
(declare-fun x346 () Int)
(declare-fun x272 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x918 () Int)
(declare-fun x592 () Int)
(declare-fun x1921 () Int)
(declare-fun x1686 () Bool)
(declare-fun x117 (x301) Int)
(declare-fun x1725 () Int)
(declare-fun x520 () Bool)
(declare-fun x773 () Int)
(declare-fun x41 () Int)
(declare-fun x896 () Bool)
(declare-fun x2700 () Int)
(declare-fun x1602 () Int)
(declare-fun x2729 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x155 () Int)
(declare-fun x759 () Bool)
(declare-fun x805 () Int)
(declare-fun x64 () Int)
(declare-fun x1887 () Int)
(declare-fun x968 () Int)
(declare-fun x222 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x1679 () Int)
(declare-fun x867 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x14 () Int)
(declare-fun x1039 () Bool)
(declare-fun x2032 () Int)
(declare-fun x1707 () Int)
(declare-fun x891 () Int)
(declare-fun x2217 () Bool)
(declare-fun x2627 () Int)
(declare-fun x1876 () Bool)
(declare-fun x1176 () Int)
(declare-fun x1054 () x301)
(declare-fun x1232 () Bool)
(declare-fun x1514 () Int)
(declare-fun x71 () Bool)
(declare-fun x2727 () Bool)
(declare-fun x647 () Int)
(declare-fun x872 () Int)
(declare-fun x1223 () Bool)
(declare-fun x2234 () Bool)
(declare-fun x711 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x1080 () Int)
(declare-fun x6 () Bool)
(declare-fun x2344 () Int)
(declare-fun x478 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1291 () Bool)
(declare-fun x342 () Bool)
(declare-fun x1289 () x301)
(declare-fun x1500 () x301)
(declare-fun x1446 () x301)
(declare-fun x836 () Int)
(declare-fun x2733 () Bool)
(declare-fun x2586 () x301)
(declare-fun x212 () Int)
(declare-fun x2734 () Int)
(declare-fun x644 () Bool)
(declare-fun x2520 () x301)
(declare-fun x2711 () Bool)
(declare-fun x139 () Int)
(declare-fun x1972 () Bool)
(declare-fun x2364 () x301)
(declare-fun x2527 (x301) Int)
(declare-fun x2251 () Bool)
(declare-fun x1280 () Int)
(declare-fun x361 () Int)
(declare-fun x958 () x301)
(declare-fun x523 () Int)
(declare-fun x2348 () Int)
(declare-fun x688 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x700 () Bool)
(declare-fun x632 () Int)
(declare-fun x96 () Bool)
(declare-fun x1759 () Int)
(declare-fun x431 () Bool)
(declare-fun x2457 () x301)
(declare-fun x2486 () Int)
(declare-fun x1197 () Int)
(declare-fun x1545 () Bool)
(declare-fun x855 () Int)
(declare-fun x2128 () Int)
(declare-fun x335 () Bool)
(declare-fun x1791 () Int)
(declare-fun x370 () Int)
(declare-fun x1149 () Int)
(declare-fun x1609 () Bool)
(declare-fun x216 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x108 () Bool)
(declare-fun x2008 () Int)
(declare-fun x2208 () Int)
(declare-fun x679 () Bool)
(declare-fun x1516 () Int)
(declare-fun x2584 () Bool)
(declare-fun x72 () Int)
(declare-fun x669 () Int)
(declare-fun x2222 () Int)
(declare-fun x2293 () Bool)
(declare-fun x123 () Bool)
(declare-fun x2397 () Int)
(declare-fun x2479 () Bool)
(declare-fun x1174 () Int)
(declare-fun x1691 () Bool)
(declare-fun x2557 () x301)
(declare-fun x1275 () Bool)
(declare-fun x1669 () x301)
(declare-fun x202 () Bool)
(declare-fun x1844 () Int)
(declare-fun x2273 () Bool)
(declare-fun x868 () Bool)
(declare-fun x1771 () Int)
(declare-fun x2656 () x301)
(declare-fun x464 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x2395 () Bool)
(declare-fun x2719 () Int)
(declare-fun x2279 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x1372 () Int)
(declare-fun x955 () Int)
(declare-fun x1466 () Bool)
(declare-fun x1709 (Int) Int)
(declare-fun x1299 () Bool)
(declare-fun x671 () Bool)
(declare-fun x1995 (Int) Int)
(declare-fun x44 () x301)
(declare-fun x995 () Int)
(declare-fun x2554 () Int)
(declare-fun x2093 () Int)
(declare-fun x453 () Bool)
(declare-fun x10 () Bool)
(declare-fun x2315 (Int) Int)
(declare-fun x2485 () Bool)
(declare-fun x1779 () Int)
(declare-fun x392 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x401 () Bool)
(declare-fun x2235 () Int)
(declare-fun x880 () x301)
(declare-fun x2230 () Int)
(declare-fun x2314 () Bool)
(declare-fun x909 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x2166 () x301)
(declare-fun x1492 () Int)
(declare-fun x2036 () Bool)
(declare-fun x1598 () Int)
(declare-fun x257 () Bool)
(declare-fun x2551 () Bool)
(declare-fun x1462 () Int)
(declare-fun x1128 () x301)
(declare-fun x2225 () Bool)
(declare-fun x930 () Int)
(declare-fun x1133 () Bool)
(declare-fun x784 () Bool)
(declare-fun x2464 () Bool)
(declare-fun x856 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x172 () Bool)
(declare-fun x602 () Bool)
(declare-fun x1205 () x301)
(declare-fun x2058 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x685 () Bool)
(declare-fun x1429 () Int)
(declare-fun x2190 () Int)
(declare-fun x1103 () Int)
(declare-fun x2563 () Bool)
(declare-fun x274 () Int)
(declare-fun x1785 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x1161 () Int)
(declare-fun x179 () Bool)
(declare-fun x654 () Bool)
(declare-fun x1195 () Int)
(declare-fun x797 () Int)
(declare-fun x1393 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x2698 () Int)
(declare-fun x979 () Bool)
(declare-fun x502 () Int)
(declare-fun x2025 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x2585 () Int)
(declare-fun x2437 () Int)
(declare-fun x1362 (x301) Int)
(declare-fun x1984 () Int)
(declare-fun x935 () Bool)
(declare-fun x656 (Int) Int)
(declare-fun x1874 () Int)
(declare-fun x2248 () Int)
(declare-fun x2067 () Int)
(declare-fun x699 () Bool)
(declare-fun x98 () x301)
(declare-fun x561 () x301)
(declare-fun x2318 () Int)
(declare-fun x680 () Int)
(declare-fun x205 () Bool)
(declare-fun x2393 () Int)
(declare-fun x2206 () Bool)
(declare-fun x2703 () Bool)
(declare-fun x213 () Int)
(declare-fun x927 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x489 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x1642 () Int)
(declare-fun x1548 () Int)
(declare-fun x325 () Int)
(declare-fun x1028 () Bool)
(declare-fun x136 () Int)
(declare-fun x2016 () Bool)
(declare-fun x503 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x273 () Int)
(declare-fun x388 () Bool)
(declare-fun x568 () Int)
(declare-fun x832 () Bool)
(declare-fun x1138 () Int)
(declare-fun x2160 () x301)
(declare-fun x2692 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x1749 () x301)
(declare-fun x125 () Bool)
(declare-fun x532 () Int)
(declare-fun x2034 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x575 () Bool)
(declare-fun x737 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x1783 () Int)
(declare-fun x2272 () Bool)
(declare-fun x414 () Int)
(declare-fun x1821 () Int)
(declare-fun x1182 () Bool)
(declare-fun x93 () x301)
(declare-fun x2134 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x129 () Int)
(declare-fun x1647 (Int) Int)
(declare-fun x987 () Int)
(declare-fun x2385 () Bool)
(declare-fun x421 () Int)
(declare-fun x2335 () Bool)
(declare-fun x923 () Int)
(declare-fun x157 () Bool)
(declare-fun x1333 () x301)
(declare-fun x563 () Int)
(declare-fun x2000 () Int)
(declare-fun x1839 () Int)
(declare-fun x1325 () Bool)
(declare-fun x2050 () Int)
(declare-fun x2119 (Int) x301)
(declare-fun x1989 () Bool)
(declare-fun x1812 () Int)
(declare-fun x1075 () Int)
(declare-fun x358 () Bool)
(declare-fun x544 () Int)
(declare-fun x652 () Int)
(declare-fun x2492 () Bool)
(declare-fun x2014 () Int)
(declare-fun x1119 () Bool)
(declare-fun x240 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x2688 () Int)
(declare-fun x1777 () Bool)
(declare-fun x2540 () Int)
(declare-fun x2360 () Int)
(declare-fun x1255 () Bool)
(declare-fun x1737 () Int)
(declare-fun x1373 () Int)
(declare-fun x1781 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x612 () Bool)
(declare-fun x677 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x1713 () Int)
(declare-fun x2107 (Int) Int)
(declare-fun x1021 () Int)
(declare-fun x576 () Int)
(declare-fun x305 () Int)
(declare-fun x2193 () Int)
(declare-fun x80 () Int)
(declare-fun x268 () Bool)
(declare-fun x214 () Bool)
(declare-fun x2448 () Bool)
(declare-fun x2514 () Int)
(declare-fun x254 () Bool)
(declare-fun x519 () Int)
(declare-fun x1730 () Int)
(declare-fun x2512 () Int)
(declare-fun x1763 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x357 () Int)
(declare-fun x1770 () x301)
(declare-fun x953 () Bool)
(declare-fun x27 () Int)
(declare-fun x542 () Int)
(declare-fun x1651 () Int)
(declare-fun x262 () Bool)
(declare-fun x1421 () x301)
(declare-fun x1342 () Int)
(declare-fun x1933 () x301)
(declare-fun x543 () Bool)
(declare-fun x467 () Int)
(declare-fun x510 () Bool)
(declare-fun x1030 () Int)
(declare-fun x1944 () Int)
(declare-fun x1158 () Bool)
(declare-fun x2362 () Int)
(declare-fun x1631 () Int)
(declare-fun x2392 () Int)
(declare-fun x2732 () Int)
(declare-fun x553 () Bool)
(declare-fun x1106 () Int)
(declare-fun x488 () Bool)
(declare-fun x1408 () Int)
(declare-fun x1539 () Int)
(declare-fun x1324 () x301)
(declare-fun x1355 () Int)
(declare-fun x219 () Bool)
(declare-fun x2313 () Int)
(declare-fun x767 () Int)
(declare-fun x79 () Bool)
(declare-fun x2059 () Int)
(declare-fun x1923 () Bool)
(declare-fun x461 () Int)
(declare-fun x2631 () Int)
(declare-fun x545 () x301)
(declare-fun x16 () Bool)
(declare-fun x406 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1528 () x301)
(declare-fun x468 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x1126 () Int)
(declare-fun x746 () Bool)
(declare-fun x1476 () Int)
(declare-fun x1204 () Int)
(declare-fun x2144 () Int)
(declare-fun x2165 () Bool)
(declare-fun x2101 () Int)
(declare-fun x37 () Int)
(declare-fun x2375 () Int)
(declare-fun x245 () Bool)
(declare-fun x1831 () Int)
(declare-fun x1027 () Bool)
(declare-fun x2689 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x2644 () Int)
(declare-fun x2515 () Int)
(declare-fun x1341 () Int)
(declare-fun x1953 () Bool)
(declare-fun x2577 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x802 () Bool)
(declare-fun x1591 () Int)
(declare-fun x2716 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x9 () Bool)
(declare-fun x303 () Int)
(declare-fun x1527 () Int)
(declare-fun x756 () Int)
(declare-fun x1268 () Bool)
(declare-fun x209 () Int)
(declare-fun x806 () Int)
(declare-fun x778 () Bool)
(declare-fun x61 () Int)
(declare-fun x2085 () Int)
(declare-fun x2443 () Int)
(declare-fun x2471 () Int)
(declare-fun x1116 () Bool)
(declare-fun x1094 () Int)
(declare-fun x2038 () Int)
(declare-fun x256 () Int)
(declare-fun x1733 () Int)
(declare-fun x1705 () Bool)
(declare-fun x116 () Int)
(declare-fun x748 () Int)
(declare-fun x754 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x1023 () x301)
(declare-fun x1013 () Int)
(declare-fun x88 () Bool)
(declare-fun x1084 () Int)
(declare-fun x2108 () Int)
(declare-fun x1847 () Bool)
(declare-fun x2613 () Bool)
(declare-fun x2469 () Int)
(declare-fun x1081 () Int)
(declare-fun x1400 () Int)
(declare-fun x473 () Bool)
(declare-fun x354 () Int)
(declare-fun x1881 () Bool)
(declare-fun x183 () Bool)
(declare-fun x690 () Int)
(declare-fun x2102 () Bool)
(declare-fun x873 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x434 (Int Int) Int)
(declare-fun x2022 () Bool)
(declare-fun x566 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x660 () Int)
(declare-fun x1038 () Int)
(declare-fun x204 () Int)
(declare-fun x2309 () Int)
(declare-fun x1662 () Int)
(declare-fun x1546 () Bool)
(declare-fun x1751 () x301)
(declare-fun x1738 () Int)
(declare-fun x2185 () Bool)
(declare-fun x413 () x301)
(declare-fun x2521 () Bool)
(declare-fun x1311 () x301)
(declare-fun x641 () x301)
(declare-fun x2171 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x944 () Int)
(declare-fun x2109 () Bool)
(declare-fun x130 () Bool)
(declare-fun x2694 () Bool)
(declare-fun x437 () Bool)
(declare-fun x2450 () Int)
(declare-fun x2289 () Bool)
(declare-fun x1792 () Int)
(declare-fun x1566 () Bool)
(declare-fun x2401 () Bool)
(declare-fun x2588 () x301)
(declare-fun x311 (Int) Int)
(declare-fun x507 () Int)
(declare-fun x1846 () Int)
(declare-fun x1999 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x185 () x301)
(declare-fun x2243 () Bool)
(declare-fun x171 () Int)
(declare-fun x2595 () Int)
(declare-fun x432 () Int)
(declare-fun x2424 () Int)
(declare-fun x950 () Int)
(declare-fun x764 () Int)
(declare-fun x2259 () Int)
(declare-fun x2547 () Bool)
(declare-fun x260 () Int)
(declare-fun x424 () Bool)
(declare-fun x1326 () Int)
(declare-fun x1732 () Int)
(declare-fun x2125 () Int)
(declare-fun x792 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x2609 () Int)
(declare-fun x1477 () Bool)
(declare-fun x1551 () Int)
(declare-fun x946 () Bool)
(declare-fun x1928 () x301)
(declare-fun x712 () Int)
(declare-fun x2404 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x476 () Bool)
(declare-fun x59 () Int)
(declare-fun x180 () Int)
(declare-fun x659 () x301)
(declare-fun x376 () x301)
(declare-fun x1366 () Bool)
(declare-fun x800 () Bool)
(declare-fun x1502 () Int)
(declare-fun x1810 () Int)
(declare-fun x2271 () Bool)
(declare-fun x638 () Bool)
(declare-fun x1875 () Int)
(declare-fun x2021 () Int)
(declare-fun x2 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x810 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x410 () Bool)
(declare-fun x1937 () Bool)
(declare-fun x244 () Bool)
(declare-fun x2442 () x301)
(declare-fun x2412 () Int)
(declare-fun x693 () Bool)
(declare-fun x1671 () Int)
(declare-fun x2351 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1142 () x301)
(declare-fun x763 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x713 () Int)
(declare-fun x1915 () Bool)
(declare-fun x296 () Bool)
(declare-fun x1010 () Int)
(declare-fun x2299 () Int)
(declare-fun x2238 () Int)
(declare-fun x2322 () Bool)
(declare-fun x435 () Bool)
(declare-fun x2371 () Int)
(declare-fun x1586 () Int)
(declare-fun x1684 () Int)
(declare-fun x113 () Int)
(declare-fun x646 () Int)
(declare-fun x1569 () x301)
(declare-fun x1982 () Int)
(declare-fun x2611 () Bool)
(declare-fun x2622 () Int)
(declare-fun x2726 () Bool)
(declare-fun x17 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x87 () Bool)
(declare-fun x732 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x714 () x301)
(declare-fun x1062 () Int)
(declare-fun x438 () Bool)
(declare-fun x465 () Int)
(declare-fun x2268 () Int)
(declare-fun x1468 () Bool)
(declare-fun x1663 () Int)
(declare-fun x2425 () Bool)
(declare-fun x942 () Int)
(declare-fun x2156 (x301) Int)
(declare-fun x1145 () Bool)
(declare-fun x1829 () Bool)
(declare-fun x956 () Int)
(declare-fun x1983 () Int)
(declare-fun x2373 () Int)
(declare-fun x822 () Int)
(declare-fun x683 () Int)
(declare-fun x28 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x926 () Bool)
(declare-fun x655 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x801 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x2379 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x258 () Int)
(declare-fun x959 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x322 () Int)
(declare-fun x1339 () Int)
(declare-fun x251 () Int)
(declare-fun x2556 () Bool)
(declare-fun x86 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x613 () Int)
(declare-fun x1284 () Int)
(declare-fun x604 () Bool)
(declare-fun x292 () Bool)
(declare-fun x2192 () Int)
(declare-fun x494 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x914 () Int)
(declare-fun x961 () Int)
(declare-fun x181 () Int)
(declare-fun x2490 () x301)
(declare-fun x1927 () Bool)
(declare-fun x50 () Int)
(declare-fun x541 () Int)
(declare-fun x1100 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x2429 () x301)
(declare-fun x2106 () Int)
(declare-fun x1832 () Bool)
(declare-fun x2045 () Bool)
(declare-fun x1734 () Int)
(declare-fun x2020 () Int)
(declare-fun x1581 () Bool)
(declare-fun x1610 (Int) Int)
(declare-fun x289 () Int)
(declare-fun x1151 () Int)
(declare-fun x742 () Int)
(declare-fun x1952 () x301)
(declare-fun x1521 () Bool)
(declare-fun x8 () Int)
(declare-fun x402 () Bool)
(declare-fun x396 () Bool)
(declare-fun x178 () Int)
(declare-fun x977 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1233 () Int)
(declare-fun x2283 () x301)
(declare-fun x1918 () Int)
(declare-fun x1375 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x2680 () Int)
(declare-fun x466 () Bool)
(declare-fun x373 () Int)
(declare-fun x1033 () Int)
(declare-fun x235 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x739 () Int)
(declare-fun x962 () Int)
(declare-fun x1225 () Int)
(declare-fun x911 () Bool)
(declare-fun x1729 () Int)
(declare-fun x304 () Bool)
(declare-fun x60 () Int)
(declare-fun x2051 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1454 () Int)
(declare-fun x1470 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x2180 () Int)
(declare-fun x508 () Bool)
(declare-fun x1813 () Int)
(declare-fun x1266 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x2380 () Int)
(declare-fun x1624 () x301)
(declare-fun x2196 () Int)
(declare-fun x2624 () Bool)
(declare-fun x2430 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x1208 () Int)
(declare-fun x2474 () Int)
(declare-fun x169 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x2117 () Int)
(declare-fun x536 () Int)
(declare-fun x1656 () Bool)
(declare-fun x2465 () Int)
(declare-fun x2501 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x2708 () Bool)
(declare-fun x515 () Int)
(declare-fun x1617 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x1206 () Int)
(declare-fun x1196 () Bool)
(declare-fun x2396 () Int)
(declare-fun x2704 () Int)
(declare-fun x2639 () Bool)
(declare-fun x2446 () Int)
(declare-fun x92 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x1841 () Int)
(declare-fun x634 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x265 () Int)
(declare-fun x1051 () Bool)
(declare-fun x1511 () Int)
(declare-fun x2116 () Bool)
(declare-fun x920 () Int)
(declare-fun x1988 () Bool)
(declare-fun x1331 () Int)
(declare-fun x270 () Int)
(declare-fun x1328 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x285 () Int)
(declare-fun x2326 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x77 () Int)
(declare-fun x134 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x1990 () Int)
(declare-fun x1974 () Int)
(declare-fun x706 () Int)
(declare-fun x1530 () Int)
(declare-fun x798 () Bool)
(declare-fun x324 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x307 () Bool)
(declare-fun x1682 () Int)
(declare-fun x633 () Int)
(declare-fun x1424 () Bool)
(declare-fun x119 () Bool)
(declare-fun x1260 () Int)
(declare-fun x1154 () x301)
(declare-fun x2270 () Bool)
(declare-fun x1112 () Int)
(declare-fun x757 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x921 () Bool)
(declare-fun x2071 () Int)
(declare-fun x2070 () Bool)
(declare-fun x2355 () Int)
(declare-fun x1741 () Int)
(declare-fun x948 () Int)
(declare-fun x2358 () Bool)
(declare-fun x1914 () Int)
(declare-fun x1541 () Bool)
(declare-fun x2426 () Int)
(declare-fun x127 () Bool)
(declare-fun x291 () Int)
(declare-fun x1561 () Bool)
(declare-fun x462 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x294 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x999 () Bool)
(declare-fun x246 () Int)
(declare-fun x2418 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x718 () Int)
(declare-fun x1318 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1890 () Int)
(declare-fun x1422 () Int)
(declare-fun x1615 () Bool)
(declare-fun x1794 () Int)
(declare-fun x835 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x1796 () Int)
(declare-fun x2419 () Bool)
(declare-fun x12 () Bool)
(declare-fun x2482 () Bool)
(declare-fun x692 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x419 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x2261 () x301)
(declare-fun x1047 () x301)
(declare-fun x2699 () Bool)
(declare-fun x2452 () Bool)
(declare-fun x728 () Bool)
(declare-fun x191 () Bool)
(declare-fun x830 () Int)
(declare-fun x277 () Int)
(declare-fun x1052 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x774 () Int)
(declare-fun x1825 () Bool)
(declare-fun x903 () Int)
(declare-fun x994 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x2361 () Int)
(declare-fun x1457 () Bool)
(declare-fun x170 () Int)
(declare-fun x603 () Bool)
(declare-fun x417 () Int)
(declare-fun x1838 () Bool)
(declare-fun x879 () Int)
(declare-fun x492 () Bool)
(declare-fun x248 () Bool)
(declare-fun x2105 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x864 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x2643 () Int)
(declare-fun x2655 () Bool)
(declare-fun x1970 () Int)
(declare-fun x736 () Int)
(declare-fun x2478 () Bool)
(declare-fun x1903 () Int)
(declare-fun x1523 () x301)
(declare-fun x2075 () Bool)
(declare-fun x1306 () Int)
(declare-fun x2241 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x924 () Bool)
(declare-fun x2566 (Int) Int)
(declare-fun x162 () Bool)
(declare-fun x372 () Bool)
(declare-fun x2495 () Int)
(declare-fun x2054 () Int)
(declare-fun x2550 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x278 () Bool)
(declare-fun x2056 () Bool)
(declare-fun x2572 () Int)
(declare-fun x133 () Bool)
(declare-fun x165 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x2451 () Int)
(declare-fun x2539 () x301)
(declare-fun x599 () Int)
(declare-fun x1092 () Int)
(declare-fun x2652 () Bool)
(declare-fun x315 () Int)
(declare-fun x442 () Bool)
(declare-fun x951 () Bool)
(declare-fun x2214 () Int)
(declare-fun x863 () Int)
(declare-fun x1558 () Int)
(declare-fun x1417 () Int)
(declare-fun x2381 () Int)
(declare-fun x610 () Int)
(declare-fun x809 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1961 () Int)
(declare-fun x2625 () Bool)
(declare-fun x241 () Bool)
(declare-fun x1782 (x301) Int)
(declare-fun x1855 () Bool)
(declare-fun x843 () Int)
(declare-fun x753 () Bool)
(declare-fun x203 () Bool)
(declare-fun x2352 (Int) Int)
(declare-fun x577 () Bool)
(declare-fun x831 () Int)
(declare-fun x682 () Int)
(declare-fun x1998 () Int)
(declare-fun x1756 () Bool)
(declare-fun x2359 () Int)
(declare-fun x2667 () Int)
(declare-fun x887 () Int)
(declare-fun x667 () Bool)
(declare-fun x2472 () Int)
(declare-fun x2409 () Bool)
(declare-fun x537 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x29 () Bool)
(declare-fun x2434 () x301)
(declare-fun x2534 () Bool)
(declare-fun x2516 () Int)
(declare-fun x2186 () Bool)
(declare-fun x253 () x301)
(declare-fun x1237 () Bool)
(declare-fun x506 () Bool)
(declare-fun x929 () Bool)
(declare-fun x2686 () Bool)
(declare-fun x1114 () Int)
(declare-fun x2658 () x301)
(declare-fun x1433 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x1222 () Int)
(declare-fun x2295 () Int)
(declare-fun x1695 () Bool)
(declare-fun x2615 () Bool)
(declare-fun x250 () Int)
(declare-fun x1430 () Bool)
(declare-fun x2402 () Int)
(declare-fun x1319 () Bool)
(declare-fun x2098 () Int)
(declare-fun x2150 () Int)
(declare-fun x1836 () Bool)
(declare-fun x2499 () Int)
(declare-fun x2250 () Bool)
(declare-fun x522 () Int)
(declare-fun x1634 () Bool)
(declare-fun x215 () x301)
(declare-fun x795 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1977 () Int)
(declare-fun x1800 () Bool)
(declare-fun x518 () Int)
(declare-fun x1583 () Bool)
(declare-fun x847 () Int)
(declare-fun x1469 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x2671 () Bool)
(declare-fun x1787 () Int)
(declare-fun x83 () Int)
(declare-fun x230 () Int)
(declare-fun x313 () Int)
(declare-fun x420 () Bool)
(declare-fun x395 () Int)
(declare-fun x819 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x2533 () Bool)
(declare-fun x1186 () Int)
(declare-fun x1942 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1497 () Int)
(declare-fun x2349 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x850 () Int)
(declare-fun x1966 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x2559 () Bool)
(declare-fun x533 () x301)
(declare-fun x1070 () Int)
(declare-fun x2140 () Int)
(declare-fun x1213 () Bool)
(declare-fun x142 () Int)
(declare-fun x2321 () Int)
(declare-fun x2576 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x1274 () Int)
(declare-fun x2420 () Int)
(declare-fun x1367 () Bool)
(declare-fun x787 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x1055 () Int)
(declare-fun x967 () Bool)
(declare-fun x893 () x301)
(declare-fun x140 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1071 () x301)
(declare-fun x1042 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x501 () Bool)
(declare-fun x259 () Int)
(declare-fun x2717 () Int)
(declare-fun x1916 () Int)
(declare-fun x2329 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x786 () Int)
(declare-fun x1859 () Int)
(declare-fun x1819 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x2705 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x1053 () Int)
(declare-fun x2555 () Bool)
(declare-fun x2460 () Int)
(declare-fun x839 () Bool)
(declare-fun x744 () Int)
(declare-fun x1934 () Bool)
(declare-fun x596 () Int)
(declare-fun x1840 () Bool)
(declare-fun x221 (Int) Int)
(declare-fun x527 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x1243 (x301) Int)
(declare-fun x621 () Bool)
(declare-fun x2620 () Bool)
(declare-fun x710 () Bool)
(declare-fun x666 () x301)
(declare-fun x164 () Bool)
(declare-fun x1184 () Int)
(declare-fun x2215 () Int)
(declare-fun x2685 () Bool)
(declare-fun x333 () Bool)
(declare-fun x2731 () Int)
(declare-fun x2280 () Int)
(declare-fun x1743 () Bool)
(declare-fun x1973 () Int)
(declare-fun x148 () Bool)
(declare-fun x1231 () x301)
(declare-fun x380 () Bool)
(declare-fun x928 () Int)
(declare-fun x940 () Bool)
(declare-fun x1815 () Int)
(declare-fun x1471 () Int)
(declare-fun x1537 () Int)
(declare-fun x1002 () x301)
(declare-fun x707 () Int)
(declare-fun x281 () Int)
(declare-fun x673 () Int)
(declare-fun x1554 () Bool)
(define-fun x945 ((x301 x301) (x635 Int)) x301 (ite ((_ is x2541) x301) (x2541 (x1212 x301) (+ (x1519 x301) x635)) (ite ((_ is x2536) x301) (x2536 (x1489 x301) (x1520 x301) (+ (x280 x301) x635)) (x1426 (+ x635 (x1633 x301))))))
(define-fun x90 ((x905 Int)) Int (ite (and (< x905 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x905)) x905 (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1655 ((x905 Int)) Int (ite (and (>= x905 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x905 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x905) x905))
(define-fun x48 ((x1089 Int)) Bool (and (< x1089 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1089 0)))
(define-fun x559 ((x1089 Int)) Bool (and (= (x434 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1089) x1089) (= (x434 x1089 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1089)))
(define-fun x691 ((x1089 Int)) Bool (and (= 0 (x434 x1089 0)) (= (x434 0 x1089) 0)))
(define-fun x2236 ((x1089 Int)) Bool (= (x434 x1089 x1089) x1089))
(define-fun x2545 ((x1089 Int)) Bool (and (x691 x1089) (x2236 x1089) (x559 x1089)))
(define-fun x1614 ((x1089 Int) (x1675 Int)) Bool (= (x434 x1089 x1675) (x434 x1675 x1089)))
(define-fun x320 ((x1089 Int) (x1675 Int)) Bool (and (>= (x434 x1089 x1675) 0) (=> (<= 0 x1675) (<= (x434 x1089 x1675) x1675)) (=> (>= x1089 0) (<= (x434 x1089 x1675) x1089))))
(define-fun x2552 ((x1089 Int) (x1675 Int)) Bool (and (x1614 x1089 x1675) (x320 x1089 x1675)))
(define-fun x350 ((x1089 Int)) Bool (= (mod x1089 1461501637330902918203684832716283019655932542976) (x434 x1089 1461501637330902918203684832716283019655932542975)))
(define-fun x2254 ((x1089 Int)) Bool (and (x350 x1089) (x2552 x1089 1461501637330902918203684832716283019655932542975)))
(define-fun x2597 ((x1089 Int)) Bool (= (mod x1089 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x1089 32) (x434 x1089 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x1376 ((x1089 Int)) Bool (and (x2552 x1089 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2597 x1089)))
(define-fun x348 ((x1722 Int)) Int (ite (= 128 x1722) x2201 (x2107 x1722)))
(define-fun x1165 ((x1722 Int)) Int (ite (= 160 x1722) x2474 (x348 x1722)))
(define-fun x846 ((x1722 Int)) Int (ite (= x1722 192) x1663 (x1165 x1722)))
(define-fun x1950 ((x1722 Int)) Int (x1087 x1722))
(define-fun x1659 ((x1722 Int)) Int (ite (= x1722 128) x1889 (x1177 x1722)))
(define-fun x150 ((x1722 x301)) Int (x1362 x1722))
(define-fun x1189 ((x1722 x301)) Int (ite (= x1969 x1722) x129 (x552 x1722)))
(define-fun x1814 ((x1722 x301)) Int (ite x2421 (ite x2270 (x552 x1722) (x1189 x1722)) (x552 x1722)))
(define-fun x1522 ((x1722 x301)) Int (ite x753 (ite x1695 (x1814 x1722) (ite x1719 (x552 x1722) (ite x2601 (x552 x1722) (ite x1820 (x552 x1722) (ite x503 (x1814 x1722) (x552 x1722)))))) (ite x296 (x552 x1722) (x1814 x1722))))
(define-fun x1105 ((x1722 x301)) Int (ite (= x1722 x1181) x1265 (x1522 x1722)))
(define-fun x2661 ((x1722 x301)) Int (ite x1153 (x1105 x1722) (ite x1937 (x1522 x1722) (ite x2445 (x1522 x1722) (ite x2304 (x1522 x1722) (ite x2260 (x1105 x1722) (x1522 x1722)))))))
(define-fun x175 ((x1722 x301)) Int (ite (= x1722 x239) x2309 (x1105 x1722)))
(define-fun x1050 ((x1722 x301)) Int (ite x1180 (x2661 x1722) (x175 x1722)))
(define-fun x387 ((x1722 x301)) Int (ite x998 (x552 x1722) (ite x575 (x1050 x1722) (x1522 x1722))))
(define-fun x902 ((x1722 x301)) Int (ite (= x1194 x1722) x428 (x1568 x1722)))
(define-fun x2564 ((x1722 x301)) Int (ite x780 (x902 x1722) (ite x1830 (x1568 x1722) (ite x1315 (x1568 x1722) (ite x1255 (x1568 x1722) (ite x2563 (x902 x1722) (x1568 x1722)))))))
(define-fun x269 ((x1722 x301)) Int (ite (= x755 x1722) x1041 (x902 x1722)))
(define-fun x1997 ((x1722 x301)) Int (ite x1876 (x2564 x1722) (x269 x1722)))
(define-fun x1824 ((x1722 x301)) Int (ite x998 (x1568 x1722) (ite x575 (x1568 x1722) (ite x1207 (x1568 x1722) (ite x1838 (x1568 x1722) (x1997 x1722))))))
(define-fun x827 ((x1722 x301)) Int (x2156 x1722))
(define-fun x266 ((x1722 x301)) Int (x2707 x1722))
(define-fun x1975 ((x1722 x301)) Int (x1014 x1722))
(define-fun x1404 ((x1722 x301)) Int (ite (= x1722 x185) x1224 (x1782 x1722)))
(define-fun x42 ((x1722 x301)) Int (ite x2333 (x1404 x1722) (ite x2697 (x1782 x1722) (ite x771 (x1782 x1722) (ite x2461 (x1782 x1722) (ite x1109 (x1404 x1722) (x1782 x1722)))))))
(define-fun x1141 ((x1722 x301)) Int (ite (= x1722 x1401) x91 (x1404 x1722)))
(define-fun x578 ((x1722 x301)) Int (ite x612 (x42 x1722) (x1141 x1722)))
(define-fun x2149 ((x1722 x301)) Int (ite x998 (x1782 x1722) (ite x575 (x1782 x1722) (ite x1207 (x1782 x1722) (ite x1838 (x578 x1722) (x1782 x1722))))))
(define-fun x1166 ((x1722 x301)) Int (ite (= x1024 x1722) x2230 (x379 x1722)))
(define-fun x1278 ((x1722 x301)) Int (ite x2421 (x379 x1722) (ite x1804 (x379 x1722) (x1166 x1722))))
(define-fun x364 ((x1722 x301)) Int (ite x753 (ite x1695 (x1278 x1722) (ite x1719 (x379 x1722) (ite x2601 (x379 x1722) (ite x1820 (x379 x1722) (ite x503 (x1278 x1722) (x379 x1722)))))) (ite x296 (x379 x1722) (x1278 x1722))))
(define-fun x1344 ((x1722 x301)) Int (ite (= x1722 x2261) x1845 (x364 x1722)))
(define-fun x2529 ((x1722 x301)) Int (ite x1866 (x1344 x1722) (ite x835 (x364 x1722) (ite x1229 (x364 x1722) (ite x2223 (x364 x1722) (ite x1561 (x1344 x1722) (x364 x1722)))))))
(define-fun x1828 ((x1722 x301)) Int (ite (= x1390 x1722) x1514 (x1344 x1722)))
(define-fun x2040 ((x1722 x301)) Int (ite x2025 (x2529 x1722) (x1828 x1722)))
(define-fun x186 ((x1722 x301)) Int (ite x998 (x379 x1722) (ite x575 (x364 x1722) (ite x1207 (x2040 x1722) (x364 x1722)))))
(define-fun x2301 ((x1722 x301)) Int (ite (= x1722 x413) x507 (x2149 x1722)))
(define-fun x115 ((x1722 x301)) Int (ite x728 (x2301 x1722) (ite x1262 (x2149 x1722) (ite x2322 (x2149 x1722) (ite x2646 (x2149 x1722) (ite x868 (x2301 x1722) (x2149 x1722)))))))
(define-fun x1549 ((x1722 x301)) Int (ite (= x1348 x1722) x745 (x2301 x1722)))
(define-fun x2475 ((x1722 x301)) Int (ite x2300 (x2149 x1722) (ite x67 (x2149 x1722) (ite x715 (ite x1999 (x115 x1722) (x1549 x1722)) (x2149 x1722)))))
(define-fun x971 ((x1722 x301)) Int (ite (= x561 x1722) x1298 (x2475 x1722)))
(define-fun x1131 ((x1722 x301)) Int (ite x312 (x971 x1722) (ite x2610 (x2475 x1722) (ite x1334 (x2475 x1722) (ite x1365 (x2475 x1722) (ite x1743 (x971 x1722) (x2475 x1722)))))))
(define-fun x2009 ((x1722 x301)) Int (ite (= x1722 x39) x1891 (x971 x1722)))
(define-fun x925 ((x1722 x301)) Int (ite x699 (x2475 x1722) (ite x2400 (x2475 x1722) (ite x2640 (ite x2277 (x1131 x1722) (x2009 x1722)) (x2475 x1722)))))
(define-fun x2560 ((x1722 x301)) Int (ite (= x1722 x2410) x2216 (x925 x1722)))
(define-fun x286 ((x1722 x301)) Int (ite x921 (x2560 x1722) (ite x1252 (x925 x1722) (ite x1515 (x925 x1722) (ite x392 (x925 x1722) (ite x2028 (x2560 x1722) (x925 x1722)))))))
(define-fun x2347 ((x1722 x301)) Int (ite (= x1453 x1722) x920 (x2560 x1722)))
(define-fun x2029 ((x1722 x301)) Int (ite x2482 (x925 x1722) (ite x1618 (x925 x1722) (ite x2382 (ite x1090 (x286 x1722) (x2347 x1722)) (x925 x1722)))))
(define-fun x2403 ((x1722 x301)) Int (ite x245 (x2029 x1722) (ite x1494 (x925 x1722) (ite x823 (x2475 x1722) (ite x2537 (x2149 x1722) (ite x108 (x2149 x1722) (ite x2288 (x2149 x1722) (ite x1899 (x2149 x1722) (ite x581 (x2029 x1722) (ite x1430 (x925 x1722) (x2475 x1722)))))))))))
(define-fun x2682 ((x1722 x301)) Int (ite x2555 (x2403 x1722) (x2029 x1722)))
(define-fun x724 ((x1722 x301)) Int (ite (= x1285 x1722) x2709 (x2149 x1722)))
(define-fun x1183 ((x1722 x301)) Int (ite x458 (x724 x1722) (ite x1567 (x2149 x1722) (ite x1742 (x2149 x1722) (ite x809 (x2149 x1722) (ite x946 (x724 x1722) (x2149 x1722)))))))
(define-fun x1110 ((x1722 x301)) Int (ite (= x2434 x1722) x1084 (x724 x1722)))
(define-fun x1162 ((x1722 x301)) Int (ite x2423 (x2149 x1722) (ite x402 (x2149 x1722) (ite x980 (ite x1322 (x1183 x1722) (x1110 x1722)) (x2149 x1722)))))
(define-fun x562 ((x1722 x301)) Int (ite (= x954 x1722) x576 (x1162 x1722)))
(define-fun x814 ((x1722 x301)) Int (ite x1915 (x562 x1722) (ite x447 (x1162 x1722) (ite x729 (x1162 x1722) (ite x1617 (x1162 x1722) (ite x2157 (x562 x1722) (x1162 x1722)))))))
(define-fun x1747 ((x1722 x301)) Int (ite (= x1722 x2487) x610 (x562 x1722)))
(define-fun x674 ((x1722 x301)) Int (ite x1953 (x1162 x1722) (ite x1678 (x1162 x1722) (ite x1140 (ite x88 (x814 x1722) (x1747 x1722)) (x1162 x1722)))))
(define-fun x1958 ((x1722 x301)) Int (ite (= x485 x1722) x1012 (x674 x1722)))
(define-fun x811 ((x1722 x301)) Int (ite x1559 (x1958 x1722) (ite x1477 (x674 x1722) (ite x1328 (x674 x1722) (ite x2614 (x674 x1722) (ite x1562 (x1958 x1722) (x674 x1722)))))))
(define-fun x35 ((x1722 x301)) Int (ite (= x1722 x1289) x1068 (x1958 x1722)))
(define-fun x2535 ((x1722 x301)) Int (ite x2485 (x674 x1722) (ite x1091 (x674 x1722) (ite x1266 (ite x1198 (x811 x1722) (x35 x1722)) (x674 x1722)))))
(define-fun x394 ((x1722 x301)) Int (ite x380 (x2535 x1722) (ite x1310 (x674 x1722) (ite x481 (x1162 x1722) (ite x1532 (x2149 x1722) (ite x1433 (x2149 x1722) (ite x1245 (x2149 x1722) (ite x6 (x2149 x1722) (ite x2452 (x2535 x1722) (ite x1840 (x674 x1722) (x1162 x1722)))))))))))
(define-fun x2718 ((x1722 x301)) Int (ite x586 (x394 x1722) (x2535 x1722)))
(define-fun x639 ((x1722 x301)) Int (ite x555 (x2149 x1722) (ite x1843 (x2149 x1722) (ite x789 (x2682 x1722) (x2718 x1722)))))
(define-fun x2623 ((x1722 x301)) Int (ite (= x1722 x958) x1612 (x1824 x1722)))
(define-fun x2240 ((x1722 x301)) Int (ite x676 (x2623 x1722) (ite x71 (x1824 x1722) (ite x292 (x1824 x1722) (ite x474 (x1824 x1722) (ite x1000 (x2623 x1722) (x1824 x1722)))))))
(define-fun x803 ((x1722 x301)) Int (ite (= x1722 x1928) x2590 (x2623 x1722)))
(define-fun x2184 ((x1722 x301)) Int (ite x2300 (x1824 x1722) (ite x67 (x1824 x1722) (ite x715 (x1824 x1722) (ite x1107 (x2240 x1722) (x803 x1722))))))
(define-fun x2616 ((x1722 x301)) Int (ite (= x1722 x723) x2370 (x2184 x1722)))
(define-fun x2110 ((x1722 x301)) Int (ite x1366 (x2616 x1722) (ite x1254 (x2184 x1722) (ite x802 (x2184 x1722) (ite x1667 (x2184 x1722) (ite x2615 (x2616 x1722) (x2184 x1722)))))))
(define-fun x2737 ((x1722 x301)) Int (ite (= x1722 x1770) x1591 (x2616 x1722)))
(define-fun x1622 ((x1722 x301)) Int (ite x699 (x2184 x1722) (ite x2400 (x2184 x1722) (ite x2640 (x2184 x1722) (ite x1554 (x2110 x1722) (x2737 x1722))))))
(define-fun x1863 ((x1722 x301)) Int (ite (= x1722 x1311) x2000 (x1622 x1722)))
(define-fun x1132 ((x1722 x301)) Int (ite x1312 (x1863 x1722) (ite x2171 (x1622 x1722) (ite x735 (x1622 x1722) (ite x634 (x1622 x1722) (ite x1600 (x1863 x1722) (x1622 x1722)))))))
(define-fun x1152 ((x1722 x301)) Int (ite (= x1722 x2503) x707 (x1863 x1722)))
(define-fun x2531 ((x1722 x301)) Int (ite x2482 (x1622 x1722) (ite x1618 (x1622 x1722) (ite x2382 (x1622 x1722) (ite x442 (x1132 x1722) (x1152 x1722))))))
(define-fun x818 ((x1722 x301)) Int (ite x245 (x2531 x1722) (ite x1494 (x1622 x1722) (ite x823 (x2184 x1722) (ite x2537 (x1824 x1722) (ite x108 (x1824 x1722) (ite x2288 (x1824 x1722) (ite x1899 (x1824 x1722) (ite x581 (x2531 x1722) (ite x1430 (x1622 x1722) (x2184 x1722)))))))))))
(define-fun x1723 ((x1722 x301)) Int (ite x2555 (x818 x1722) (x2531 x1722)))
(define-fun x1048 ((x1722 x301)) Int (ite (= x2166 x1722) x2585 (x1824 x1722)))
(define-fun x791 ((x1722 x301)) Int (ite x177 (x1048 x1722) (ite x1443 (x1824 x1722) (ite x157 (x1824 x1722) (ite x781 (x1824 x1722) (ite x2078 (x1048 x1722) (x1824 x1722)))))))
(define-fun x218 ((x1722 x301)) Int (ite (= x1446 x1722) x1893 (x1048 x1722)))
(define-fun x1788 ((x1722 x301)) Int (ite x2423 (x1824 x1722) (ite x402 (x1824 x1722) (ite x980 (x1824 x1722) (ite x869 (x791 x1722) (x218 x1722))))))
(define-fun x2099 ((x1722 x301)) Int (ite (= x1722 x1023) x247 (x1788 x1722)))
(define-fun x1987 ((x1722 x301)) Int (ite x1632 (x2099 x1722) (ite x104 (x1788 x1722) (ite x1418 (x1788 x1722) (ite x2580 (x1788 x1722) (ite x2326 (x2099 x1722) (x1788 x1722)))))))
(define-fun x2454 ((x1722 x301)) Int (ite (= x44 x1722) x975 (x2099 x1722)))
(define-fun x1872 ((x1722 x301)) Int (ite x1953 (x1788 x1722) (ite x1678 (x1788 x1722) (ite x1140 (x1788 x1722) (ite x1018 (x1987 x1722) (x2454 x1722))))))
(define-fun x173 ((x1722 x301)) Int (ite (= x1722 x2602) x85 (x1872 x1722)))
(define-fun x1697 ((x1722 x301)) Int (ite x106 (x173 x1722) (ite x242 (x1872 x1722) (ite x477 (x1872 x1722) (ite x2354 (x1872 x1722) (ite x686 (x173 x1722) (x1872 x1722)))))))
(define-fun x1805 ((x1722 x301)) Int (ite (= x1722 x1952) x1831 (x173 x1722)))
(define-fun x585 ((x1722 x301)) Int (ite x2485 (x1872 x1722) (ite x1091 (x1872 x1722) (ite x1266 (x1872 x1722) (ite x894 (x1697 x1722) (x1805 x1722))))))
(define-fun x336 ((x1722 x301)) Int (ite x380 (x585 x1722) (ite x1310 (x1872 x1722) (ite x481 (x1788 x1722) (ite x1532 (x1824 x1722) (ite x1433 (x1824 x1722) (ite x1245 (x1824 x1722) (ite x6 (x1824 x1722) (ite x2452 (x585 x1722) (ite x1840 (x1872 x1722) (x1788 x1722)))))))))))
(define-fun x572 ((x1722 x301)) Int (ite x586 (x336 x1722) (x585 x1722)))
(define-fun x1572 ((x1722 x301)) Int (ite x555 (x1824 x1722) (ite x1843 (x1824 x1722) (ite x789 (x1723 x1722) (x572 x1722)))))
(define-fun x1726 ((x1722 x301)) Int (ite (= x1722 x141) x2542 (x387 x1722)))
(define-fun x137 ((x1722 x301)) Int (ite x2725 (x1726 x1722) (ite x87 (x387 x1722) (ite x2328 (x387 x1722) (ite x323 (x387 x1722) (ite x1432 (x1726 x1722) (x387 x1722)))))))
(define-fun x284 ((x1722 x301)) Int (ite (= x1722 x1888) x830 (x1726 x1722)))
(define-fun x1359 ((x1722 x301)) Int (ite x2300 (ite x1478 (x137 x1722) (x284 x1722)) (x387 x1722)))
(define-fun x1134 ((x1722 x301)) Int (ite (= x618 x1722) x1787 (x1359 x1722)))
(define-fun x569 ((x1722 x301)) Int (ite x1320 (x1134 x1722) (ite x527 (x1359 x1722) (ite x304 (x1359 x1722) (ite x1337 (x1359 x1722) (ite x627 (x1134 x1722) (x1359 x1722)))))))
(define-fun x1676 ((x1722 x301)) Int (ite (= x455 x1722) x72 (x1134 x1722)))
(define-fun x351 ((x1722 x301)) Int (ite x699 (ite x453 (x569 x1722) (x1676 x1722)) (x1359 x1722)))
(define-fun x1793 ((x1722 x301)) Int (ite (= x1722 x1698) x14 (x351 x1722)))
(define-fun x1307 ((x1722 x301)) Int (ite x1467 (x1793 x1722) (ite x741 (x351 x1722) (ite x1419 (x351 x1722) (ite x1281 (x351 x1722) (ite x668 (x1793 x1722) (x351 x1722)))))))
(define-fun x1465 ((x1722 x301)) Int (ite (= x1528 x1722) x1510 (x1793 x1722)))
(define-fun x1506 ((x1722 x301)) Int (ite x2482 (ite x1466 (x1307 x1722) (x1465 x1722)) (x351 x1722)))
(define-fun x952 ((x1722 x301)) Int (ite x245 (x1506 x1722) (ite x1494 (x351 x1722) (ite x823 (x1359 x1722) (ite x2537 (x387 x1722) (ite x108 (x387 x1722) (ite x2288 (x387 x1722) (ite x1899 (x387 x1722) (ite x581 (x1506 x1722) (ite x1430 (x351 x1722) (x1359 x1722)))))))))))
(define-fun x1806 ((x1722 x301)) Int (ite x2555 (x952 x1722) (x1506 x1722)))
(define-fun x2227 ((x1722 x301)) Int (ite (= x1722 x641) x1822 (x387 x1722)))
(define-fun x2174 ((x1722 x301)) Int (ite x1102 (x2227 x1722) (ite x2685 (x387 x1722) (ite x207 (x387 x1722) (ite x1864 (x387 x1722) (ite x2673 (x2227 x1722) (x387 x1722)))))))
(define-fun x367 ((x1722 x301)) Int (ite (= x1722 x2053) x2104 (x2227 x1722)))
(define-fun x597 ((x1722 x301)) Int (ite x2423 (ite x1486 (x2174 x1722) (x367 x1722)) (x387 x1722)))
(define-fun x2164 ((x1722 x301)) Int (ite (= x1002 x1722) x384 (x597 x1722)))
(define-fun x1452 ((x1722 x301)) Int (ite x47 (x2164 x1722) (ite x565 (x597 x1722) (ite x290 (x597 x1722) (ite x337 (x597 x1722) (ite x1809 (x2164 x1722) (x597 x1722)))))))
(define-fun x722 ((x1722 x301)) Int (ite (= x1722 x727) x50 (x2164 x1722)))
(define-fun x1882 ((x1722 x301)) Int (ite x1953 (ite x2674 (x1452 x1722) (x722 x1722)) (x597 x1722)))
(define-fun x1201 ((x1722 x301)) Int (ite (= x1251 x1722) x1757 (x1882 x1722)))
(define-fun x2517 ((x1722 x301)) Int (ite x1395 (x1201 x1722) (ite x2337 (x1882 x1722) (ite x1125 (x1882 x1722) (ite x768 (x1882 x1722) (ite x864 (x1201 x1722) (x1882 x1722)))))))
(define-fun x2532 ((x1722 x301)) Int (ite (= x343 x1722) x2436 (x1201 x1722)))
(define-fun x2417 ((x1722 x301)) Int (ite x2485 (ite x2438 (x2517 x1722) (x2532 x1722)) (x1882 x1722)))
(define-fun x255 ((x1722 x301)) Int (ite x380 (x2417 x1722) (ite x1310 (x1882 x1722) (ite x481 (x597 x1722) (ite x1532 (x387 x1722) (ite x1433 (x387 x1722) (ite x1245 (x387 x1722) (ite x6 (x387 x1722) (ite x2452 (x2417 x1722) (ite x1840 (x1882 x1722) (x597 x1722)))))))))))
(define-fun x981 ((x1722 x301)) Int (ite x586 (x255 x1722) (x2417 x1722)))
(define-fun x619 ((x1722 x301)) Int (ite x555 (x387 x1722) (ite x1843 (x387 x1722) (ite x789 (x1806 x1722) (x981 x1722)))))
(define-fun x985 ((x1722 x301)) Int (ite (= x1722 x189) x1274 (x186 x1722)))
(define-fun x2741 ((x1722 x301)) Int (ite x229 (x985 x1722) (ite x1685 (x186 x1722) (ite x433 (x186 x1722) (ite x331 (x186 x1722) (ite x543 (x985 x1722) (x186 x1722)))))))
(define-fun x2244 ((x1722 x301)) Int (ite (= x1722 x2678) x1080 (x985 x1722)))
(define-fun x144 ((x1722 x301)) Int (ite x2300 (x186 x1722) (ite x67 (ite x1571 (x2741 x1722) (x2244 x1722)) (x186 x1722))))
(define-fun x1057 ((x1722 x301)) Int (ite (= x533 x1722) x1771 (x144 x1722)))
(define-fun x1971 ((x1722 x301)) Int (ite x1658 (x1057 x1722) (ite x2599 (x144 x1722) (ite x795 (x144 x1722) (ite x454 (x144 x1722) (ite x192 (x1057 x1722) (x144 x1722)))))))
(define-fun x1504 ((x1722 x301)) Int (ite (= x1722 x916) x1484 (x1057 x1722)))
(define-fun x2617 ((x1722 x301)) Int (ite x699 (x144 x1722) (ite x2400 (ite x2217 (x1971 x1722) (x1504 x1722)) (x144 x1722))))
(define-fun x2637 ((x1722 x301)) Int (ite (= x1722 x714) x1508 (x2617 x1722)))
(define-fun x941 ((x1722 x301)) Int (ite x2671 (x2637 x1722) (ite x1469 (x2617 x1722) (ite x1470 (x2617 x1722) (ite x2576 (x2617 x1722) (ite x378 (x2637 x1722) (x2617 x1722)))))))
(define-fun x2743 ((x1722 x301)) Int (ite (= x1722 x1171) x1035 (x2637 x1722)))
(define-fun x1714 ((x1722 x301)) Int (ite x2482 (x2617 x1722) (ite x1618 (ite x754 (x941 x1722) (x2743 x1722)) (x2617 x1722))))
(define-fun x2173 ((x1722 x301)) Int (ite x245 (x1714 x1722) (ite x1494 (x2617 x1722) (ite x823 (x144 x1722) (ite x2537 (x186 x1722) (ite x108 (x186 x1722) (ite x2288 (x186 x1722) (ite x1899 (x186 x1722) (ite x581 (x1714 x1722) (ite x1430 (x2617 x1722) (x144 x1722)))))))))))
(define-fun x752 ((x1722 x301)) Int (ite x2555 (x2173 x1722) (x1714 x1722)))
(define-fun x1192 ((x1722 x301)) Int (ite (= x1722 x2398) x2561 (x186 x1722)))
(define-fun x1773 ((x1722 x301)) Int (ite x642 (x1192 x1722) (ite x678 (x186 x1722) (ite x1357 (x186 x1722) (ite x566 (x186 x1722) (ite x2385 (x1192 x1722) (x186 x1722)))))))
(define-fun x2245 ((x1722 x301)) Int (ite (= x996 x1722) x411 (x1192 x1722)))
(define-fun x625 ((x1722 x301)) Int (ite x2423 (x186 x1722) (ite x402 (ite x1384 (x1773 x1722) (x2245 x1722)) (x186 x1722))))
(define-fun x1392 ((x1722 x301)) Int (ite (= x1933 x1722) x2106 (x625 x1722)))
(define-fun x1731 ((x1722 x301)) Int (ite x2225 (x1392 x1722) (ite x2049 (x625 x1722) (ite x2464 (x625 x1722) (ite x1547 (x625 x1722) (ite x1237 (x1392 x1722) (x625 x1722)))))))
(define-fun x620 ((x1722 x301)) Int (ite (= x1722 x545) x2222 (x1392 x1722)))
(define-fun x1693 ((x1722 x301)) Int (ite x1953 (x625 x1722) (ite x1678 (ite x688 (x1731 x1722) (x620 x1722)) (x625 x1722))))
(define-fun x2431 ((x1722 x301)) Int (ite (= x1722 x1885) x1707 (x1693 x1722)))
(define-fun x2493 ((x1722 x301)) Int (ite x344 (x2431 x1722) (ite x1601 (x1693 x1722) (ite x2133 (x1693 x1722) (ite x2205 (x1693 x1722) (ite x2311 (x2431 x1722) (x1693 x1722)))))))
(define-fun x1248 ((x1722 x301)) Int (ite (= x1722 x2160) x796 (x2431 x1722)))
(define-fun x1823 ((x1722 x301)) Int (ite x2485 (x1693 x1722) (ite x1091 (ite x1785 (x2493 x1722) (x1248 x1722)) (x1693 x1722))))
(define-fun x2724 ((x1722 x301)) Int (ite x380 (x1823 x1722) (ite x1310 (x1693 x1722) (ite x481 (x625 x1722) (ite x1532 (x186 x1722) (ite x1433 (x186 x1722) (ite x1245 (x186 x1722) (ite x6 (x186 x1722) (ite x2452 (x1823 x1722) (ite x1840 (x1693 x1722) (x625 x1722)))))))))))
(define-fun x1623 ((x1722 x301)) Int (ite x586 (x2724 x1722) (x1823 x1722)))
(define-fun x1351 ((x1722 x301)) Int (ite x555 (x186 x1722) (ite x1843 (x186 x1722) (ite x789 (x752 x1722) (x1623 x1722)))))
(define-fun x726 ((x1722 Int)) Int (ite (= 160 x1722) x227 (x1659 x1722)))
(define-fun x972 ((x1722 Int)) Int (ite x1286 (x1659 x1722) (x726 x1722)))
(define-fun x637 ((x1722 Int)) Int (ite (= x1722 x2713) 65943510083598082279227955258803319933472635617035506777028864765220054106112 (x972 x1722)))
(define-fun x1263 ((x1722 Int)) Int (ite (= x2178 x1722) x109 (x637 x1722)))
(define-fun x931 ((x1722 Int)) Int (ite (= x2713 x1722) 74228146054641364427485594382366355075153451190847473373747070783662162182144 (x1263 x1722)))
(define-fun x2518 ((x1722 Int)) Int (ite (= x2238 x1722) x2548 (x931 x1722)))
(define-fun x1211 ((x1722 Int)) Int (ite (= x1722 128) 72223263258191293651604190264004579703475585967499159981614695267027195527168 (x1271 x1722)))
(define-fun x1202 ((x1722 Int)) Int (ite (= x1722 132) x1635 (x1211 x1722)))
(define-fun x231 ((x1722 Int)) Int (ite (= 164 x1722) x132 (x1202 x1722)))
(define-fun x1896 ((x1722 Int)) Int (ite (= x2713 x1722) x1978 (x2518 x1722)))
(define-fun x761 ((x1722 Int)) Int (ite (and (>= x1722 x2278) (> (+ x59 x2278) x1722)) (x1087 (+ x2355 (- x1722 x2278))) (x1896 x1722)))
(define-fun x2507 ((x1722 Int)) Int (ite x551 (x1896 x1722) (x761 x1722)))
(define-fun x2587 ((x1722 Int)) Int (ite (= x1456 x1722) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2507 x1722)))
(define-fun x1403 ((x1722 Int)) Int (ite (= x1796 x1722) x13 (x2587 x1722)))
(define-fun x359 ((x1722 Int)) Int (ite (= x1722 0) x652 (x656 x1722)))
(define-fun x1335 ((x1722 Int)) Int (ite (= x1456 x1722) x652 (x1403 x1722)))
(define-fun x2123 ((x1722 Int)) Int (ite (= x1722 0) x63 (x656 x1722)))
(define-fun x2629 ((x1722 Int)) Int (ite (= x1456 x1722) x63 (x1403 x1722)))
(define-fun x1316 ((x1722 Int)) Int (ite (= 0 x1722) x683 (x656 x1722)))
(define-fun x984 ((x1722 Int)) Int (ite (= x1722 x1456) x683 (x1403 x1722)))
(define-fun x443 ((x1722 Int)) Int (ite (= 0 x1722) x2489 (x656 x1722)))
(define-fun x554 ((x1722 Int)) Int (ite (= x1722 x1456) x2489 (x1403 x1722)))
(define-fun x1906 ((x1722 Int)) Int (ite x1819 (ite x123 (x1403 x1722) (x1335 x1722)) (ite x2182 (ite x737 (x1403 x1722) (x2629 x1722)) (ite x911 (ite x2066 (x1403 x1722) (x984 x1722)) (ite x1173 (x1403 x1722) (x554 x1722))))))
(define-fun x570 ((x1722 Int)) Int (ite (= x1758 x1722) x1399 (x1906 x1722)))
(define-fun x2706 ((x1722 Int)) Int (ite (= x1722 x1370) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x570 x1722)))
(define-fun x1160 ((x1722 Int)) Int (ite (= x2208 x1722) x2030 (x2706 x1722)))
(define-fun x1728 ((x1722 Int)) Int (ite (= x1722 x2704) x1399 (x1160 x1722)))
(define-fun x663 ((x1722 Int)) Int (ite (= x1722 0) x563 (x1728 x1722)))
(define-fun x1219 ((x1722 Int)) Int (ite (= 0 x1722) x83 (x1728 x1722)))
(define-fun x2701 ((x1722 Int)) Int (ite (= x1722 0) x1163 (x1728 x1722)))
(define-fun x664 ((x1722 Int)) Int (ite (= x1722 0) x1974 (x1728 x1722)))
(define-fun x605 ((x1722 Int)) Int (ite x1108 (ite x2 (x1728 x1722) (x663 x1722)) (ite x216 (ite x2083 (x1728 x1722) (x1219 x1722)) (ite x1037 (ite x2692 (x1728 x1722) (x2701 x1722)) (ite x2677 (x1728 x1722) (x664 x1722))))))
(define-fun x558 ((x1722 Int)) Int (ite (= x1722 0) 1 (x2057 x1722)))
(define-fun x1826 ((x1722 Int)) Int (ite x2 (x2057 x1722) (x558 x1722)))
(define-fun x982 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x2057 x1722)))
(define-fun x1608 ((x1722 Int)) Int (ite x2083 (x2057 x1722) (x982 x1722)))
(define-fun x689 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x2057 x1722)))
(define-fun x606 ((x1722 Int)) Int (ite x2692 (x2057 x1722) (x689 x1722)))
(define-fun x1858 ((x1722 Int)) Int (ite (= x1722 0) 1 (x2057 x1722)))
(define-fun x309 ((x1722 Int)) Int (ite x2677 (x2057 x1722) (x1858 x1722)))
(define-fun x1209 ((x1722 Int)) Int (ite x1108 (x1826 x1722) (ite x216 (x1608 x1722) (ite x1037 (x606 x1722) (x309 x1722)))))
(define-fun x1902 ((x1722 Int)) Int (ite (and (> (+ 0 x1875) x1722) (<= 0 x1722)) (x1209 (+ 0 (- x1722 0))) (x605 x1722)))
(define-fun x2177 ((x1722 Int)) Int (ite x757 (x605 x1722) (x1902 x1722)))
(define-fun x696 ((x1722 Int)) Int (ite x1049 (x1906 x1722) (x2177 x1722)))
(define-fun x1986 ((x1722 x301)) Int (ite (= x659 x1722) x2469 (x1572 x1722)))
(define-fun x1074 ((x1722 x301)) Int (ite x2633 (x1986 x1722) (ite x2312 (x1572 x1722) (ite x484 (x1572 x1722) (ite x1130 (x1572 x1722) (ite x859 (x1986 x1722) (x1572 x1722)))))))
(define-fun x107 ((x1722 x301)) Int (ite (= x74 x1722) x1558 (x1986 x1722)))
(define-fun x237 ((x1722 x301)) Int (ite x2677 (x1074 x1722) (x107 x1722)))
(define-fun x657 ((x1722 x301)) Int (ite x1108 (x1572 x1722) (ite x216 (x1572 x1722) (ite x1037 (x1572 x1722) (x237 x1722)))))
(define-fun x1994 ((x1722 x301)) Int (ite x1049 (x1572 x1722) (x657 x1722)))
(define-fun x703 ((x1722 Int)) Int (ite x476 (x2507 x1722) (ite x1654 (x2507 x1722) (x696 x1722))))
(define-fun x1540 ((x1722 x301)) Int (ite x476 (x1572 x1722) (ite x1654 (x1572 x1722) (x1994 x1722))))
(define-fun x151 ((x1722 Int)) Int (ite (= x1722 x1030) x155 (x703 x1722)))
(define-fun x1017 ((x1722 Int)) Int (ite (= x607 x1722) x2530 (x151 x1722)))
(define-fun x288 ((x1722 Int)) Int (ite (= x1722 x2159) x2422 (x1017 x1722)))
(define-fun x2483 ((x1722 Int)) Int (ite (= x1013 x1722) x2649 (x288 x1722)))
(define-fun x631 ((x1722 Int)) Int (ite (= x767 x1722) x534 (x2483 x1722)))
(define-fun x1230 ((x1722 Int)) Int (ite (= x1722 128) 48119142951092613731468242753959111846395615040638799039548226541748339343360 (x1647 x1722)))
(define-fun x1588 ((x1722 Int)) Int (ite (= 132 x1722) x2717 (x1230 x1722)))
(define-fun x1880 ((x1722 Int)) Int (ite (= x1722 128) 16284467712533504949339770971755156993396464521235680726719773044698144309248 (x2608 x1722)))
(define-fun x1481 ((x1722 Int)) Int (ite (= 132 x1722) x1635 (x1880 x1722)))
(define-fun x422 ((x1722 Int)) Int (ite (= 164 x1722) x599 (x1481 x1722)))
(define-fun x770 ((x1722 Int)) Int (ite (= x1722 x1118) x1001 (x631 x1722)))
(define-fun x747 ((x1722 Int)) Int (ite (= x1722 128) x599 (x1588 x1722)))
(define-fun x820 ((x1722 Int)) Int (ite x753 (x1588 x1722) (x747 x1722)))
(define-fun x858 ((x1722 Int)) Int (ite (= x2383 x1722) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x820 x1722)))
(define-fun x2231 ((x1722 Int)) Int (ite (= x851 x1722) x2648 (x858 x1722)))
(define-fun x1061 ((x1722 Int)) Int (ite (= x1722 x196) x1679 (x2231 x1722)))
(define-fun x2343 ((x1722 Int)) Int (ite (= x1722 0) 1 (x2315 x1722)))
(define-fun x2735 ((x1722 Int)) Int (ite (= x1722 0) 1 (x2315 x1722)))
(define-fun x1368 ((x1722 Int)) Int (ite (= x1722 0) 1 (x2315 x1722)))
(define-fun x1338 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x2315 x1722)))
(define-fun x275 ((x1722 x301)) Int (ite (= x1624 x1722) x1258 (x619 x1722)))
(define-fun x1701 ((x1722 x301)) Int (ite (= x1722 x1324) x1225 (x1351 x1722)))
(define-fun x2647 ((x1722 x301)) Int (ite (= x1722 x1113) x990 (x639 x1722)))
(define-fun x153 ((x1722 Int)) Int (ite x1180 (x2315 x1722) (x2343 x1722)))
(define-fun x870 ((x1722 Int)) Int (ite x2025 (x2315 x1722) (x2735 x1722)))
(define-fun x53 ((x1722 Int)) Int (ite x612 (x2315 x1722) (x1368 x1722)))
(define-fun x848 ((x1722 Int)) Int (ite x1876 (x2315 x1722) (x1338 x1722)))
(define-fun x1687 ((x1722 Int)) Int (ite x575 (x153 x1722) (ite x1207 (x870 x1722) (ite x1838 (x53 x1722) (x848 x1722)))))
(define-fun x1464 ((x1722 Int)) Int (ite (= x1722 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x734 x1722)))
(define-fun x356 ((x1722 Int)) Int (ite (= 132 x1722) x60 (x1464 x1722)))
(define-fun x2372 ((x1722 Int)) Int (ite (= 164 x1722) x1462 (x356 x1722)))
(define-fun x459 ((x1722 Int)) Int (ite (= x1722 0) 1 (x221 x1722)))
(define-fun x1350 ((x1722 Int)) Int (ite (= x1722 128) 1 (x2372 x1722)))
(define-fun x1620 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x221 x1722)))
(define-fun x391 ((x1722 Int)) Int (ite (= x1722 128) 1 (x2372 x1722)))
(define-fun x1964 ((x1722 Int)) Int (ite (= x1722 0) 1 (x221 x1722)))
(define-fun x2255 ((x1722 Int)) Int (ite (= x1722 128) 1 (x2372 x1722)))
(define-fun x1699 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x221 x1722)))
(define-fun x1157 ((x1722 Int)) Int (ite (= x1722 128) 1 (x2372 x1722)))
(define-fun x1535 ((x1722 Int)) Int (ite x2423 (ite x1486 (x2372 x1722) (x1350 x1722)) (ite x402 (ite x1384 (x2372 x1722) (x391 x1722)) (ite x980 (ite x1322 (x2372 x1722) (x2255 x1722)) (ite x869 (x2372 x1722) (x1157 x1722))))))
(define-fun x1304 ((x1722 Int)) Int (ite (= x1280 x1722) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1535 x1722)))
(define-fun x429 ((x1722 Int)) Int (ite (= x252 x1722) x60 (x1304 x1722)))
(define-fun x2582 ((x1722 Int)) Int (ite (= x1722 x633) x1789 (x429 x1722)))
(define-fun x1029 ((x1722 Int)) Int (ite (= x1722 0) 1 (x1995 x1722)))
(define-fun x1460 ((x1722 Int)) Int (ite (= x1722 x1280) 1 (x2582 x1722)))
(define-fun x2449 ((x1722 Int)) Int (ite (= x1722 0) 1 (x1995 x1722)))
(define-fun x1525 ((x1722 Int)) Int (ite (= x1280 x1722) 1 (x2582 x1722)))
(define-fun x960 ((x1722 Int)) Int (ite (= x1722 0) 1 (x1995 x1722)))
(define-fun x1385 ((x1722 Int)) Int (ite (= x1280 x1722) 1 (x2582 x1722)))
(define-fun x1867 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x1995 x1722)))
(define-fun x182 ((x1722 Int)) Int (ite (= x1280 x1722) 1 (x2582 x1722)))
(define-fun x2546 ((x1722 Int)) Int (ite x1953 (ite x2674 (x2582 x1722) (x1460 x1722)) (ite x1678 (ite x688 (x2582 x1722) (x1525 x1722)) (ite x1140 (ite x88 (x2582 x1722) (x1385 x1722)) (ite x1018 (x2582 x1722) (x182 x1722))))))
(define-fun x334 ((x1722 Int)) Int (ite (= x1722 x662) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2546 x1722)))
(define-fun x589 ((x1722 Int)) Int (ite (= x1722 x1004) x60 (x334 x1722)))
(define-fun x1907 ((x1722 Int)) Int (ite (= x879 x1722) x2013 (x589 x1722)))
(define-fun x1317 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x2352 x1722)))
(define-fun x2290 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x2352 x1722)))
(define-fun x2544 ((x1722 Int)) Int (ite (= x1722 0) 1 (x2352 x1722)))
(define-fun x1919 ((x1722 Int)) Int (ite (= x1722 0) 1 (x2352 x1722)))
(define-fun x1015 ((x1722 Int)) Int (ite (= 128 x1722) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2003 x1722)))
(define-fun x1088 ((x1722 Int)) Int (ite (= 132 x1722) x321 (x1015 x1722)))
(define-fun x1441 ((x1722 Int)) Int (ite (= 164 x1722) x2037 (x1088 x1722)))
(define-fun x1043 ((x1722 Int)) Int (ite (= x1722 0) 1 (x1709 x1722)))
(define-fun x1363 ((x1722 Int)) Int (ite (= x1722 128) 1 (x1441 x1722)))
(define-fun x1097 ((x1722 Int)) Int (ite (= x1722 0) 1 (x1709 x1722)))
(define-fun x1710 ((x1722 Int)) Int (ite (= 128 x1722) 1 (x1441 x1722)))
(define-fun x2100 ((x1722 Int)) Int (ite (= x1722 0) 1 (x1709 x1722)))
(define-fun x1226 ((x1722 Int)) Int (ite (= 128 x1722) 1 (x1441 x1722)))
(define-fun x2132 ((x1722 Int)) Int (ite (= x1722 0) 1 (x1709 x1722)))
(define-fun x1036 ((x1722 Int)) Int (ite (= 128 x1722) 1 (x1441 x1722)))
(define-fun x2046 ((x1722 Int)) Int (ite x2300 (ite x1478 (x1441 x1722) (x1363 x1722)) (ite x67 (ite x1571 (x1441 x1722) (x1710 x1722)) (ite x715 (ite x1999 (x1441 x1722) (x1226 x1722)) (ite x1107 (x1441 x1722) (x1036 x1722))))))
(define-fun x1264 ((x1722 Int)) Int (ite (= x1722 x1176) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2046 x1722)))
(define-fun x30 ((x1722 Int)) Int (ite (= x1722 x75) x321 (x1264 x1722)))
(define-fun x517 ((x1722 Int)) Int (ite (= x1651 x1722) x1149 (x30 x1722)))
(define-fun x1764 ((x1722 Int)) Int (ite (= x1722 0) 1 (x276 x1722)))
(define-fun x2453 ((x1722 Int)) Int (ite (= x1176 x1722) 1 (x517 x1722)))
(define-fun x84 ((x1722 Int)) Int (ite (= x1722 0) 1 (x276 x1722)))
(define-fun x1425 ((x1722 Int)) Int (ite (= x1176 x1722) 1 (x517 x1722)))
(define-fun x2504 ((x1722 Int)) Int (ite (= x1722 0) 1 (x276 x1722)))
(define-fun x1766 ((x1722 Int)) Int (ite (= x1722 x1176) 1 (x517 x1722)))
(define-fun x1329 ((x1722 Int)) Int (ite (= x1722 0) 1 (x276 x1722)))
(define-fun x915 ((x1722 Int)) Int (ite (= x1176 x1722) 1 (x517 x1722)))
(define-fun x2303 ((x1722 Int)) Int (ite x699 (ite x453 (x517 x1722) (x2453 x1722)) (ite x2400 (ite x2217 (x517 x1722) (x1425 x1722)) (ite x2640 (ite x2277 (x517 x1722) (x1766 x1722)) (ite x1554 (x517 x1722) (x915 x1722))))))
(define-fun x1491 ((x1722 Int)) Int (ite (= x1476 x1722) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2303 x1722)))
(define-fun x187 ((x1722 Int)) Int (ite (= x1722 x1577) x321 (x1491 x1722)))
(define-fun x1228 ((x1722 Int)) Int (ite (= x541 x1722) x1887 (x187 x1722)))
(define-fun x1410 ((x1722 Int)) Int (ite (= x1722 0) 1 (x208 x1722)))
(define-fun x2408 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x208 x1722)))
(define-fun x1143 ((x1722 Int)) Int (ite (= x1722 0) 1 (x208 x1722)))
(define-fun x450 ((x1722 Int)) Int (ite (= x1722 0) 1 (x208 x1722)))
(define-fun x1981 ((x1722 Int)) Int (ite (= x1722 128) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x422 x1722)))
(define-fun x2604 ((x1722 Int)) Int (ite (= x1722 132) x1635 (x1981 x1722)))
(define-fun x1396 ((x1722 Int)) Int (ite (= 164 x1722) x599 (x2604 x1722)))
(define-fun x345 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x1610 x1722)))
(define-fun x964 ((x1722 Int)) Int (ite (= 0 x1722) 1 (x1610 x1722)))
(define-fun x861 ((x1722 Int)) Int (ite (= x1722 0) x599 (x311 x1722)))
(define-fun x1104 ((x1722 Int)) Int (ite x2674 (x1995 x1722) (x1029 x1722)))
(define-fun x1807 ((x1722 Int)) Int (ite x688 (x1995 x1722) (x2449 x1722)))
(define-fun x622 ((x1722 Int)) Int (ite x88 (x1995 x1722) (x960 x1722)))
(define-fun x936 ((x1722 Int)) Int (ite x1018 (x1995 x1722) (x1867 x1722)))
(define-fun x1677 ((x1722 Int)) Int (ite x1953 (x1104 x1722) (ite x1678 (x1807 x1722) (ite x1140 (x622 x1722) (x936 x1722)))))
(define-fun x1912 ((x1722 Int)) Int (ite x2438 (x2352 x1722) (x1317 x1722)))
(define-fun x1290 ((x1722 Int)) Int (ite x1785 (x2352 x1722) (x2290 x1722)))
(define-fun x1210 ((x1722 Int)) Int (ite x1198 (x2352 x1722) (x2544 x1722)))
(define-fun x2353 ((x1722 Int)) Int (ite x894 (x2352 x1722) (x1919 x1722)))
(define-fun x1450 ((x1722 Int)) Int (ite x2485 (x1912 x1722) (ite x1091 (x1290 x1722) (ite x1266 (x1210 x1722) (x2353 x1722)))))
(define-fun x475 ((x1722 Int)) Int (ite x453 (x276 x1722) (x1764 x1722)))
(define-fun x2170 ((x1722 Int)) Int (ite x2217 (x276 x1722) (x84 x1722)))
(define-fun x881 ((x1722 Int)) Int (ite x2277 (x276 x1722) (x2504 x1722)))
(define-fun x1761 ((x1722 Int)) Int (ite x1554 (x276 x1722) (x1329 x1722)))
(define-fun x1700 ((x1722 Int)) Int (ite x699 (x475 x1722) (ite x2400 (x2170 x1722) (ite x2640 (x881 x1722) (x1761 x1722)))))
(define-fun x538 ((x1722 Int)) Int (ite x1466 (x208 x1722) (x1410 x1722)))
(define-fun x409 ((x1722 Int)) Int (ite x754 (x208 x1722) (x2408 x1722)))
(define-fun x46 ((x1722 Int)) Int (ite x1090 (x208 x1722) (x1143 x1722)))
(define-fun x2264 ((x1722 Int)) Int (ite x442 (x208 x1722) (x450 x1722)))
(define-fun x21 ((x1722 Int)) Int (ite x2482 (x538 x1722) (ite x1618 (x409 x1722) (ite x2382 (x46 x1722) (x2264 x1722)))))
(define-fun x2366 ((x1722 Int)) Int (ite x2270 (x1610 x1722) (x345 x1722)))
(define-fun x369 ((x1722 Int)) Int (ite x1804 (x1610 x1722) (x964 x1722)))
(define-fun x917 ((x1722 Int)) Int (ite x2421 (x2366 x1722) (x369 x1722)))
(define-fun x2129 ((x1089 Int)) Bool (=> (and (not (= x1089 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1089 604024478)) (not (= 872247156 x1089)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1089)) (not (= x1089 65943510083598082279227955258803319933472635617035506777028864765220054106112)) (not (= x1089 72223263258191293651604190264004579703475585967499159981614695267027195527168)) (not (= x1089 614698425)) (not (= 3459381112 x1089)) (not (= 1461501637330902918203684832716283019655932542975 x1089)) (not (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x1089)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1089)) (not (= 1461501637330902918203684832716283019655932542976 x1089)) (not (= 3053082678 x1089)) (not (= x1089 3648997476)) (not (= 74228146054641364427485594382366355075153451190847473373747070783662162182144 x1089)) (not (= 1784838210 x1089)) (> x1089 10000) (not (= x1089 3467235951)) (not (= x1089 16284467712533504949339770971755156993396464521235680726719773044698144309248)) (not (= 2569309863 x1089)) (not (= 2737736067 x1089)) (not (= x1089 2514000705)) (not (= 1926446194 x1089)) (not (= 2867092931 x1089)) (not (= x1089 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1089 565014339)) (not (= 3756033516 x1089)) (not (= x1089 2646777772)) (not (= 2678909723 x1089)) (not (= 2753274959 x1089)) (not (= 2835717307 x1089)) (not (= 18446744073709551615 x1089)) (not (= x1089 2445980732)) (not (= x1089 1889567281)) (not (= 48119142951092613731468242753959111846395615040638799039548226541748339343360 x1089)) (not (= x1089 856900995)) (not (= x1089 2952933380)) (not (= 826074471 x1089)) (not (= 1086394137 x1089))) (not ((_ is x1426) (x2119 x1089)))))
(assert (= x2363 (or (and x2687 (not x2084)) x1223)))
(assert (x48 x139))
(assert (x48 x178))
(assert (x48 x1845))
(assert (= (and x1455 x1881) x2379))
(assert (= 2737736067 (x1943 (x1426 2737736067))))
(assert (x48 x1167))
(assert (x48 x1031))
(assert (= (x1426 74228146054641364427485594382366355075153451190847473373747070783662162182144) (x2119 74228146054641364427485594382366355075153451190847473373747070783662162182144)))
(assert (x48 x536))
(assert (= x2066 (or (and x263 x2653) (and (not x2694) x2220))))
(assert (= x2338 (or x1019 x1244 x1259 x1754 x2505)))
(assert (= x560 (or (and x2076 x190) (and x2418 (not x2683)) x355)))
(assert (= x890 (=> (and (= x1411 0) (= x2187 x2042)) x2341)))
(assert (x48 x325))
(assert (= x933 (and x1543 (not x2345))))
(assert (x48 x385))
(assert (= (and (not x804) x2390) x1470))
(assert (x48 x1364))
(assert (= (and x464 x57) x1830))
(assert (x48 x1903))
(assert (= (and (not x31) x1242) x1077))
(assert (x48 x154))
(assert (x48 x601))
(assert (x48 x1534))
(assert (= x130 (or x489 x124)))
(assert (x48 x1821))
(assert (= (=> (and (= x1055 0) (= x217 x1408)) x2433) x1576))
(assert (= (=> (and (= x135 x1303) (= 0 x613)) x143) x1989))
(assert (x48 x411))
(assert (= x1237 (and x937 x1273)))
(assert (= (x2119 2678909723) (x1426 2678909723)))
(assert (= (=> (and (= x1948 x1875) (= x2691 x2228)) x2139) x2080))
(assert (= x396 (=> (and (= x2562 x2007) (= x1021 x1169)) x1182)))
(assert (= (or x2385 x642 x1357 x1760 x678 x566) x1384))
(assert (= (and x2070 x1613) x546))
(assert (x48 x1191))
(assert (= (x1943 (x2119 x1382)) x1382))
(assert (= x2473 (and x127 x1073)))
(assert (= x423 (=> (and (= x1666 x1661) (= x2204 x289)) x468)))
(assert (x48 x805))
(assert (= (and x598 x2705) x1930))
(assert (= (and (not x165) x2365) x506))
(assert (= (and x2501 x1708) x2260))
(assert (x48 x319))
(assert (= x2625 (and (not x2226) x1767)))
(assert (= (=> (and (= x1875 x1270) (= x579 x2691)) x2139) x2497))
(assert (= x1898 (and (not x2302) x2389)))
(assert (x48 x2101))
(assert (= (=> (and (= 0 x97) (= x1284 x2305)) x15) x876))
(assert (= (and x1238 x992) x2703))
(assert (x48 x2469))
(assert (x48 x1643))
(assert (x48 x775))
(assert (= x1495 (and x1621 x574)))
(assert (= (and x430 (not x233)) x888))
(assert (x48 x1011))
(assert (= x242 (and x2279 x1414)))
(assert (x48 x158))
(assert (x48 x518))
(assert (x48 x1358))
(assert (x48 x2460))
(assert (x48 x862))
(assert (x48 x373))
(assert (x48 x1727))
(assert (= x1433 (and x2728 (not x1931))))
(assert (x48 x1810))
(assert (= (and (not x1463) x2239) x655))
(assert (=> (<= x816 10000) (= (x2119 x816) (x1426 x816))))
(assert (= x1266 (or x1198 x1027)))
(assert (x48 x1936))
(assert (= x1051 (and (not x645) x34)))
(assert (x2545 x2221))
(assert (x48 x1558))
(assert (x48 x1138))
(assert (= (and x1808 x2314) x2571))
(assert (= x2346 (and x1931 x2728)))
(assert (=> (<= x285 10000) (= (x2119 x285) (x1426 x285))))
(assert (= (and (not x629) x1795) x1244))
(assert (x48 x2150))
(assert (= x1430 (and x1485 x711)))
(assert (= (and x509 x2419) x940))
(assert (x2254 x1429))
(assert (x48 x2721))
(assert (x48 x1865))
(assert (= (and x1249 (not x1560)) x375))
(assert (x48 x825))
(assert (= x1517 (and (not x845) x2197)))
(assert (x48 x648))
(assert (= (and x1927 x979) x2599))
(assert (= (x2119 2569309863) (x1426 2569309863)))
(assert (x48 x2014))
(assert (x48 x1190))
(assert (= x1678 (or x688 x1892)))
(assert (= (and x1122 (not x856)) x1249))
(assert (x48 x1179))
(assert (x48 x1556))
(assert (= x1736 (=> (and (= 36 x786) (= x736 (x1655 (- x786 4))) (> 2867092931 x524) (= x1117 (x2406 (x2119 x1635))) (= (or (and (= (<= x736 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x736 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x736)) x603) (= x2548 (x434 1461501637330902918203684832716283019655932542975 x2033)) (= 74228146054641364427485594382366355075153451190847473373747070783662162182144 x1984) (not (= x524 2569309863)) (= (x2406 (x2119 x1635)) x2348) (= (x90 (+ x2713 4)) x725) (= (x1655 (- x1326 x2713)) x2050) (= x725 x2238) (not (= x892 0)) (not (> 2445980732 x524)) (not (> 4 x786)) (< 0 x2348) (= 2753274959 x524) (not (> 1926446194 x524)) (not (= 2737736067 x524)) (not (= x524 2445980732)) (= x1318 x2548) (= x1326 (x90 (+ x725 32))) (= x786 x2050) (not (= x1117 0))) (and (=> (and x603 (= x2715 0)) x1686) (=> (and (and (= x1349 true) (= x2330 x1318)) (not x603)) (and (=> (and (= x2172 0) (not x1349)) x1800) (=> (and x1349 (and (= (x945 x1512 1) x897) (= 128 x126) (= x132 (x266 x897)) (= x1067 (x2536 (x2119 x1318) (x1426 3) 0)) (<= 0 x132) (<= x132 1461501637330902918203684832716283019655932542975) (= x1512 (x945 x1067 1)) (>= x1339 0) (= x636 (= 0 x515)) (<= x1339 1461501637330902918203684832716283019655932542975) (= x515 (x2406 (x2119 x1339))) (< x1339 1461501637330902918203684832716283019655932542976) (< x132 1461501637330902918203684832716283019655932542976) (= (x827 x1512) x1339))) (and (=> (and (not x636) (= x1238 (= x461 x1339))) (and (=> (and (not x1238) (and (and x2022 (and (< 0 x467) (not (> 2646777772 x1011)) (= x2374 68) (= (x1655 (- x2374 4)) x414) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x414) true) (< x414 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x414)) x1637) (< x1011 3053082678) (not (< x2374 4)) (not (< x1011 1889567281)) (= x60 x132) (= x2374 68) (= (x2406 (x2119 x1815)) x467) (not (= x1011 2646777772)) (= x325 72223263258191293651604190264004579703475585967499159981614695267027195527168) (= 2678909723 x1011) (= x843 x1635))) (= (= x1339 x1815) x2022))) (and (=> x1637 x2002) (=> (and (and (= x843 x2258) (= x2391 (= x843 x1635))) (not x1637)) (and (=> (not x2391) x2002) (=> (and (and (= x60 x110) (= (= x132 x60) x1931)) x2391) (and (=> (and x1931 (= (= 0 x60) x878)) (and (=> x878 x782) (=> (and (= x1829 (= x843 x1635)) (not x878)) (and (=> x1829 x782) (=> (not x1829) x2002))))) (=> (not x1931) x2002))))))) (=> (and x1238 (and (not (> 4 x887)) (> x2626 0) (= x847 (x1655 (- x887 4))) (= x1635 x1382) (= x2526 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x847) (and (< x847 64) (= (<= x847 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x132 x321) (not (= x100 2646777772)) (= x100 2678909723) (= 68 x887) (= 72223263258191293651604190264004579703475585967499159981614695267027195527168 x2012) (not (< x100 2646777772)) (not (> 1889567281 x100)) (= 68 x887) (= (x2406 (x2119 x461)) x2626) (> 3053082678 x100))) (and (=> (and (and (= (= x1635 x1382) x772) (= x1529 x1382)) (not x2526)) (and (=> (and x772 (and (= x321 x2131) (= x16 (= x321 x132)))) (and (=> (not x16) x1387) (=> (and x16 (= x2428 (= 0 x321))) (and (=> x2428 x751) (=> (and (= (= x1382 x1635) x149) (not x2428)) (and (=> (not x149) x1387) (=> x149 x751))))))) (=> (not x772) x1387))) (=> x2526 x1387))))) (=> (and x636 (= 0 x2172)) x1800)))))))))
(assert (x48 x2744))
(assert (x48 x1787))
(assert (= x2025 (or x835 x1866 x1561 x2654 x2223 x1229)))
(assert (x48 x1746))
(assert (= x1763 (or x2556 (and x2428 x1939))))
(assert (x48 x2042))
(assert (x48 x515))
(assert (x48 x291))
(assert (= (and x2251 (not x611)) x437))
(assert (= x2213 (and x2598 (not x2723))))
(assert (= (and x2151 (not x1063)) x2027))
(assert (x48 x1035))
(assert (x48 x250))
(assert (x48 x524))
(assert (x48 x643))
(assert (= (and x750 x1545) x1820))
(assert (= (and x1702 x1772) x87))
(assert (= x489 (and x1332 x2568)))
(assert (=> (>= 10000 x1492) (= (x2119 x1492) (x1426 x1492))))
(assert (= (and x452 x926) x1221))
(assert (x48 x1021))
(assert (x48 x2241))
(assert (= (or x1695 x1820 x264 x2601 x503 x1719) x753))
(assert (x48 x1484))
(assert (= x245 (and x1371 x720)))
(assert (x2129 x136))
(assert (= x1250 (or x1018 x2109)))
(assert (x48 x2420))
(assert (= x420 (or x998 x1423)))
(assert (= x792 (=> (and (= x58 x1169) (= 0 x2562)) x396)))
(assert (= x1947 (and (not x1855) x95)))
(assert (= (x2119 1086394137) (x1426 1086394137)))
(assert (= x1784 (=> (= (= 0 x1955) x203) (and (=> (and (not x203) (= (or (and (< x2202 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2202) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2202)) x720)) (and (=> x720 x1387) (=> (and (not x720) (= 1 x1186)) x1203))) (=> x203 x1387)))))
(assert (x48 x2626))
(assert (= x2610 (and x267 x73)))
(assert (x48 x1372))
(assert (x48 x1706))
(assert (x48 x26))
(assert (x48 x1370))
(assert (x48 x1306))
(assert (x48 x652))
(assert (x48 x1257))
(assert (x48 x1789))
(assert (x48 x246))
(assert (x48 x1932))
(assert (= x177 (and x1816 x1144)))
(assert (x48 x2606))
(assert (= (and x1003 (not x1040)) x2274))
(assert (x48 x7))
(assert (= x88 (or x729 x2157 x1915 x1617 x447 x919)))
(assert (= (and x2209 x2655) x1667))
(assert (x48 x2092))
(assert (x48 x1792))
(assert (x48 x1771))
(assert (x48 x1253))
(assert (= (and x102 x479) x312))
(assert (= (and x2274 x12) x2633))
(assert (x2129 x687))
(assert (= x833 (and x2635 x2589)))
(assert (x48 x1938))
(assert (= x2319 (=> (and (= (= 0 x1870) x2084) (or (not x2084) x2084)) x2620)))
(assert (x48 x1750))
(assert (= (or (and x1406 x1781) x580 (and (not x2479) x3)) x400))
(assert (= (and x951 x933) x2662))
(assert (= (and x1862 x214) x447))
(assert (x48 x85))
(assert (= (and x2256 x1644) x1393))
(assert (= (or x1107 x1) x1356))
(assert (x48 x457))
(assert (x48 x1013))
(assert (x48 x316))
(assert (x48 x2067))
(assert (= x2209 (and x1133 x2115)))
(assert (= (and x2045 (not x1059)) x431))
(assert (= x2382 (or x161 x1090)))
(assert (= (and x1438 x2639) x1915))
(assert (x48 x1996))
(assert (= x264 (and x1375 x2477)))
(assert (x48 x683))
(assert (x48 x2702))
(assert (x48 x1745))
(assert (=> (<= x891 10000) (= (x1426 x891) (x2119 x891))))
(assert (= x2638 (and x2498 x1583)))
(assert (= x911 (or x2066 x495)))
(assert (x48 x541))
(assert (x48 x1062))
(assert (= x575 (or x832 x1180)))
(assert (x48 x2098))
(assert (x48 x2596))
(assert (= x1694 (and x1247 x2017)))
(assert (x48 x2001))
(assert (x48 x2281))
(assert (= (x1177 160) 0))
(assert (x48 x1642))
(assert (x48 x910))
(assert (x48 x812))
(assert (= (and (not x2428) x1939) x2219))
(assert (x48 x2680))
(assert (x48 x2437))
(assert (x48 x2321))
(assert (x48 x1172))
(assert (= (and (not x2655) x2209) x2329))
(assert (= x2580 (and x1638 x2523)))
(assert (= x2565 (=> (and (= x742 x1284) (= 0 x2026)) x788)))
(assert (= x2686 (=> (and (= 0 x2679) (= x513 x217)) x564)))
(assert (x48 x1844))
(assert (= x327 (and x2459 x2331)))
(assert (x48 x1818))
(assert (= (or x2730 x1999) x715))
(assert (x48 x836))
(assert (= x290 (and (not x2016) x2010)))
(assert (= (+ 1 (x1943 x2628)) (x1943 (x945 x2628 1))))
(assert (x48 x1508))
(assert (= x2250 (and x2652 (not x339))))
(assert (= x216 (or x2083 x2578)))
(assert (x2129 x461))
(assert (x48 x891))
(assert (= x677 (and (not x1640) x1200)))
(assert (= x1146 (and (not x491) x1546)))
(assert (= x1337 (and x2598 x2723)))
(assert (x48 x2193))
(assert (x48 x507))
(assert (= x2148 (and (not x2394) x130)))
(assert (x48 x1369))
(assert (x48 x2424))
(assert (= x2195 (and x431 (not x134))))
(assert (x2254 x2033))
(assert (= x2400 (or x854 x2217)))
(assert (= (and (not x469) x1457) x1580))
(assert (x48 x1894))
(assert (x48 x305))
(assert (= x2157 (and x2388 x677)))
(assert (x48 x1070))
(assert (x48 x2374))
(assert (= x586 (or x2452 x481 x1310 x1433 x6 x380 x1532 x1840 x1762 x1245)))
(assert (= x1387 (=> (= x1186 0) x1203)))
(assert (= (and (not x2017) x1247) x1917))
(assert (x2129 x1492))
(assert (= (and (not x1613) x2070) x2445))
(assert (x48 x1765))
(assert (x48 x194))
(assert (x48 x1652))
(assert (= x835 (and x2055 x1690)))
(assert (x48 x948))
(assert (= (and x548 x2253) x551))
(assert (x48 x2127))
(assert (x2129 x1635))
(assert (= x2045 (and x1178 (not x1367))))
(assert (= x1559 (and x2470 x119)))
(assert (= (and x1009 (not x636)) x992))
(assert (= (and (not x168) x1398) x2726))
(assert (x48 x2038))
(assert (= x1291 (=> (and (= x2719 x174) (= x1665 x41)) x740)))
(assert (= x105 (and x2015 x2378)))
(assert (x48 x851))
(assert (x48 x1417))
(assert (x48 x1891))
(assert (x48 x80))
(assert (x48 x1579))
(assert (x48 x1479))
(assert (= x1178 (and x1853 x2624)))
(assert (= 0 (x1177 x2414)))
(assert (= x2349 (and x1946 (not x2298))))
(assert (= (=> (and (or x571 (not x571)) (= (= x2715 0) x571)) x1680) x1686))
(assert (= (and x1008 (not x2018)) x2133))
(assert (x48 x461))
(assert (x48 x61))
(assert (= (and (not x10) x1976) x2492))
(assert (= x503 (and x1220 x557)))
(assert (x48 x340))
(assert (= (and x1060 x999) x76))
(assert (x48 x2710))
(assert (= (and x1427 x943) x1072))
(assert (x48 x1983))
(assert (= (and x1007 (not x2684)) x702))
(assert (= (and x268 x241) x839))
(assert (x48 x2313))
(assert (= x1052 (and x1625 (not x1544))))
(assert (= (and x1856 x140) x337))
(assert (x48 x315))
(assert (= x1467 (and x1480 x873)))
(assert (= (x2119 614698425) (x1426 614698425)))
(assert (= (and (not x1609) x352) x800))
(assert (x48 x69))
(assert (= (and x2693 (not x986)) x582))
(assert (x48 x1889))
(assert (= 2646777772 (x1943 (x1426 2646777772))))
(assert (= (or x894 x375) x798))
(assert (x48 x834))
(assert (x48 x1400))
(assert (= x70 (and x314 x1991)))
(assert (x48 x749))
(assert (x48 x1925))
(assert (= (or x2311 x2133 x2205 x1378 x344 x1601) x1785))
(assert (x48 x1961))
(assert (x48 x1010))
(assert (= x808 (and x2726 x298)))
(assert (= x2500 (or x2708 x757)))
(assert (= x2168 (x1943 (x2119 x2168))))
(assert (x48 x579))
(assert (= (and (not x2388) x677) x2639))
(assert (x48 x2035))
(assert (x48 x181))
(assert (x2545 x1527))
(assert (= x821 (and (not x38) x472)))
(assert (= (x1177 x371) 0))
(assert (= (and (not x521) x172) x1159))
(assert (x48 x592))
(assert (x48 x1978))
(assert (x48 x1944))
(assert (= (and (not x1775) x1541) x96))
(assert (= (x1943 (x2119 x540)) x540))
(assert (x48 x1901))
(assert (x48 x2472))
(assert (= (and x1485 (not x711)) x1101))
(assert (x48 x1041))
(assert (= x1843 (and x826 x603)))
(assert (= (and x1120 x43) x1308))
(assert (x48 x1405))
(assert (= (and x2703 (not x2526)) x1330))
(assert (= (and x317 x1505) x2225))
(assert (x48 x2142))
(assert (= (=> (and (= x465 x2569) (= 0 x1383)) x2058) x257))
(assert (= 16284467712533504949339770971755156993396464521235680726719773044698144309248 (x1943 (x1426 16284467712533504949339770971755156993396464521235680726719773044698144309248))))
(assert (=> (<= x583 10000) (= (x2119 x583) (x1426 x583))))
(assert (= x1988 (and (not x241) x268)))
(assert (x48 x767))
(assert (x48 x2575))
(assert (= (=> (and (not (= x596 0)) (= x1085 x1112) (= x2380 (x1655 (- x806 4))) (= (x1655 (- x877 x2713)) x2696) (not (> 2445980732 x2031)) (= 2445980732 x2031) (= (x434 1461501637330902918203684832716283019655932542975 x2033) x109) (= (or (and (= true (<= x2380 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2380)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2380)) x2124) (= x109 x816) (= x1085 (x434 1461501637330902918203684832716283019655932542975 x2033)) (not (< x2031 1926446194)) (not (< x806 4)) (= (x90 (+ 4 x2713)) x749) (= x2178 x749) (= 36 x806) (= x2696 x806) (= 65943510083598082279227955258803319933472635617035506777028864765220054106112 x319) (= (x2406 (x2119 x1635)) x596) (= (x90 (+ 32 x749)) x877) (< x2031 2867092931) (= (x2406 (x2119 x1635)) x1098) (< 0 x1098)) (and (=> (and (not x2124) (and (= x816 x2001) (= true x769))) (and (=> (not x769) x225) (=> (and x769 (and (and x2538 (and (= (x2406 (x2119 x223)) x395) (= x2412 36) (= x2717 x2451) (not (< x2412 4)) (= x1405 48119142951092613731468242753959111846395615040638799039548226541748339343360) (= (or (> x142 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x142) true) (< x142 32))) x1545) (= 1784838210 x159) (= (x1655 (- x2412 4)) x142) (> x395 0) (= 36 x2412))) (and (= 128 x1184) (= (x2156 x2628) x2717) (= (x2536 (x2119 x816) (x1426 3) 0) x1047) (= x2538 (= x223 x1593)) (= (x434 1461501637330902918203684832716283019655932542975 x1835) x1593) (>= 1461501637330902918203684832716283019655932542975 x2717) (> 1461501637330902918203684832716283019655932542976 x2717) (= x2628 (x945 x1047 1)) (>= x2717 0)))) (and (=> (and (not x1545) (and (= x1114 x2451) (= (= x2717 x2451) x2377))) (and (=> (not x2377) x1989) (=> (and x2377 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x599) (= x1301 (= 0 x2280)) (= x1606 128) (>= x599 0) (= (x2406 (x2119 x2451)) x2280))) (and (=> (and (not x1301) (= (= x461 x2451) x398)) (and (=> (and (not x398) (and (and x875 (and (= x1706 68) (= 604024478 x502) (not (< x1706 4)) (> x944 0) (not (> 604024478 x502)) (= x739 16284467712533504949339770971755156993396464521235680726719773044698144309248) (= x599 x1901) (= (x2406 (x2119 x1815)) x944) (= x498 (x1655 (- x1706 4))) (< x502 1889567281) (> 856900995 x502) (= 68 x1706) (= x2424 x1635) (= x1781 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x498) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x498)) (< x498 64)))))) (= x875 (= x2451 x1815)))) (and (=> x1781 x1712) (=> (and (not x1781) (and (= x480 x2424) (= x2479 (= x1635 x2424)))) (and (=> (not x2479) x1712) (=> (and x2479 (and (= x2191 (x2536 (x2119 x2424) (x1426 16) 0)) (= x2004 (x615 x2191)) (= x1797 (> x2004 x1454)) (<= 0 x2004) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2004) (= x1454 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x599))))) (and (=> x1797 x1712) (=> (and (and (= x2257 1) (= (x90 (+ x2004 x1901)) x872)) (not x1797)) x2141))))))) (=> (and x398 (and (= 16284467712533504949339770971755156993396464521235680726719773044698144309248 x2203) (= x599 x1611) (= 604024478 x2612) (= x2592 x1635) (= x1982 (x2406 (x2119 x461))) (= (x1655 (- x1977 4)) x706) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x706) (and (< x706 64) (= (<= x706 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2076) (> 1889567281 x2612) (< x2612 856900995) (= x1977 68) (= x1977 68) (> x1982 0) (not (< x1977 4)) (not (< x2612 604024478)))) (and (=> x2076 x79) (=> (and (not x2076) (and (= x2592 x812) (= x2683 (= x1635 x2592)))) (and (=> (not x2683) x79) (=> (and (and (= (< x313 x1894) x1168) (<= 0 x1894) (= x210 (x2536 (x2119 x2592) (x1426 16) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1894) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x599)) x313) (= (x1243 x210) x1894)) x2683) (and (=> x1168 x79) (=> (and (not x1168) (and (= x1598 1) (= x209 (x90 (+ x1894 x1611))))) x1116))))))))) (=> x1301 x1989))))) (=> x1545 x1989))))) (=> x2124 x225))) x2194))
(assert (= x1815 (x1943 (x2119 x1815))))
(assert (= x1439 (and x2224 (not x2242))))
(assert (x48 x850))
(assert (x48 x660))
(assert (= x1398 (and x99 x1475)))
(assert (x48 x1340))
(assert (= x99 (and (not x278) x248)))
(assert (x48 x2569))
(assert (= (x2119 872247156) (x1426 872247156)))
(assert (x2129 x321))
(assert (= x1704 (and (not x2147) x96)))
(assert (= (and x2714 x444) x1443))
(assert (x48 x2069))
(assert (= x1991 (and x2650 (not x2746))))
(assert (= (and x1702 (not x1772)) x1541))
(assert (x1376 x730))
(assert (= x693 (and (not x1629) x762)))
(assert (x48 x1962))
(assert (x48 x2121))
(assert (x48 x399))
(assert (= (and x388 x790) x1332))
(assert (x48 x764))
(assert (= (x1943 (x2119 x256)) x256))
(assert (x48 x2698))
(assert (= (and x2695 x520) x1254))
(assert (= (or x1334 x312 x2610 x1743 x1980 x1365) x2277))
(assert (x48 x1151))
(assert (x48 x63))
(assert (= x2210 (and x2401 x1720)))
(assert (= x1130 (and x1381 x1538)))
(assert (x48 x2439))
(assert (x48 x1979))
(assert (= x1496 (=> (= (= 0 x174) x469) (and (=> (and (not x469) (and (= x673 (x90 (+ 31 x41))) (= x1176 (x90 (+ 128 x281))) (= (x434 115792089237316195423570985008687907853269984665640564039457584007913129639904 x673) x281) (= x1379 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x41) (and (> 32 x41) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x41) true)))))) (and (=> (and (not x1379) (and (= x1149 (x1975 x593)) (>= x1149 0) (= (x90 (+ x75 64)) x1850) (= (x2536 (x2119 x1382) x1415 0) x593) (= (x1655 (- x1850 x1176)) x2710) (= (x90 (+ x1176 4)) x75) (= x1347 (= x2207 x461)) (< x2207 1461501637330902918203684832716283019655932542976) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1149) (= (x90 (+ x75 32)) x1651) (= x1415 (x2536 (x2119 x2207) (x1426 17) 0)) (> 1461501637330902918203684832716283019655932542976 x2207))) (and (=> (and x1347 (and (= x2723 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1340) true) (< x1340 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1340))) (= x1340 (x1655 (- x1908 4))) (= x265 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x2318 2646777772)) (= x2318 2835717307) (not (> 1889567281 x2318)) (not (= 2678909723 x2318)) (= x1149 x2295) (= x1908 x2710) (> x2098 0) (= 68 x1908) (= (x2406 (x2119 x461)) x2098) (not (< x1908 4)) (> 3053082678 x2318) (not (= 2646777772 x2318)) (= x2131 x246))) (and (=> (and (not x2723) (= (= x2131 x246) x885)) (and (=> (and (and (>= x1684 0) (= x492 (> x1149 x1684)) (= x2295 x250) (= (x2536 (x2119 x461) (x1426 2) 0) x2364) (= x1684 (x1359 x2364)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1684)) x885) (and (=> (and (= x1468 (< x1684 x2295)) (not x492)) (and (=> (and (and (>= x1472 0) (= x2426 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2295))) (= x491 (> x1472 x2426)) (<= x1472 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1787 (x1655 (- x1684 x2295))) (= x1472 (x1134 x1205)) (= x1205 (x2536 (x2119 x321) (x1426 2) 0)) (= x618 (x2536 (x2119 x461) (x1426 2) 0))) (not x1468)) (and (=> (and (and (= x2727 (< x72 x1472)) (= (x90 (+ x2295 x1472)) x72)) (not x491)) (and (=> (and (and (= x1364 1) (= x315 32) (= x455 (x2536 (x2119 x321) (x1426 2) 0))) (not x2727)) x2233) (=> x2727 x2358))) (=> x491 x2358))) (=> x1468 x2358))) (=> x492 x2358))) (=> (not x885) x2358))) (=> x2723 x2358))) (=> (and (not x1347) (= (= x2207 x1815) x1705)) (and (=> (and (not x1705) (= (= x316 x2207) x1297)) (and (=> (and x1297 (and (< 0 x2516) (not (= 826074471 x94)) (= x2516 (x2406 (x2119 x316))) (not (= 1889567281 x94)) (= (x1655 (- x743 4)) x1732) (= 2835717307 x94) (= x1149 x1653) (not (> 826074471 x94)) (= x1913 x2131) (not (< x743 4)) (= (or (and (> 64 x1732) (= (<= x1732 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1732 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2226) (= 68 x743) (= x421 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2514000705 x94)) (= x743 x2710))) (and (=> x2226 x2739) (=> (and (not x2226) (= x49 (= x2131 x1913))) (and (=> (and (and (= x680 x1653) (= x1333 (x2536 (x2119 x461) (x1426 1) 0)) (= x73 (> x1149 x2286)) (<= 0 x2286) (= x2286 (x2475 x1333)) (<= x2286 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x49) (and (=> (and (= x1463 (< x2286 x1653)) (not x73)) (and (=> (and (and (= x1516 (x971 x261)) (= x191 (< x630 x1516)) (>= x1516 0) (= x630 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1653))) (= x561 (x2536 (x2119 x461) (x1426 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1516) (= x1298 (x1655 (- x2286 x1653))) (= x261 (x2536 (x2119 x321) (x1426 1) 0))) (not x1463)) (and (=> (and (not x191) (and (= (x90 (+ x1516 x1653)) x1891) (= (> x1516 x1891) x479))) (and (=> x479 x2739) (=> (and (and (= x1945 1) (= 1 x2204) (= 32 x1666) (= x39 (x2536 (x2119 x321) (x1426 1) 0))) (not x479)) x423))) (=> x191 x2739))) (=> x1463 x2739))) (=> x73 x2739))) (=> (not x49) x2739))))) (=> (and (not x1297) (and (and x1133 (and (> x2085 0) (= (x1655 (- x717 4)) x198) (= x731 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 68 x717) (= x2466 2835717307) (= x717 x2710) (not (= 826074471 x2466)) (not (= x2466 2514000705)) (= x1149 x463) (not (> 826074471 x2466)) (not (> 4 x717)) (= (x2406 (x2119 x2744)) x2085) (not (= 1889567281 x2466)) (= (or (> x198 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x198) true) (> 64 x198))) x2655) (= x2131 x2297))) (= x1133 (= x2207 x2744)))) (and (=> (and (= (= x2131 x2297) x283) (not x2655)) (and (=> (not x283) x2686) (=> (and x283 (and (<= x1873 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1873 0) (= (x2184 x2136) x1873) (= (< x1873 x1149) x2695) (= x103 x463) (= (x2536 (x2119 x461) (x1426 1) 0) x2136))) (and (=> (and (= (> x463 x1873) x1926) (not x2695)) (and (=> (and (and (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x463)) x1147) (<= 0 x653) (= (x1655 (- x1873 x463)) x2370) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x653) (= (x2616 x1803) x653) (= x658 (> x653 x1147)) (= (x2536 (x2119 x321) (x1426 1) 0) x1803) (= (x2536 (x2119 x461) (x1426 1) 0) x723)) (not x1926)) (and (=> x658 x2686) (=> (and (not x658) (and (= x1566 (< x1591 x653)) (= x1591 (x90 (+ x653 x463))))) (and (=> x1566 x2686) (=> (and (not x1566) (and (= x2631 1) (= x2679 1) (= x1770 (x2536 (x2119 x321) (x1426 1) 0)) (= x513 32))) x564))))) (=> x1926 x2686))) (=> x2695 x2686))))) (=> x2655 x2686))))) (=> (and x1705 (and (not (= x2121 2678909723)) (= x1734 (x2406 (x2119 x1815))) (= 68 x1294) (= x249 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1539 x1149) (> 3053082678 x2121) (= x1294 x2710) (= x2131 x1944) (= x2121 2835717307) (not (> 1889567281 x2121)) (not (< x2121 2646777772)) (not (> 4 x1294)) (> x1734 0) (= (x1655 (- x1294 4)) x1062) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1062) (and (> 64 x1062) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1062) true))) x896) (not (= x2121 2646777772)))) (and (=> (and (= x1420 (= x2131 x1944)) (not x896)) (and (=> (and (and (= x838 (x2536 (x2119 x461) (x1426 2) 0)) (<= x2525 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1306 x1539) (= x1927 (< x2525 x1149)) (<= 0 x2525) (= x2525 (x144 x838))) x1420) (and (=> x1927 x1576) (=> (and (not x1927) (= x2681 (> x1539 x2525))) (and (=> (and (not x2681) (and (>= x353 0) (= x1851 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539))) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1771 (x1655 (- x2525 x1539))) (= (x2536 (x2119 x461) (x1426 2) 0) x533) (= (< x1851 x353) x425) (= (x2536 (x2119 x321) (x1426 2) 0) x1199) (= x353 (x1057 x1199)))) (and (=> x425 x1576) (=> (and (not x425) (and (= (< x1484 x353) x2339) (= (x90 (+ x1539 x353)) x1484))) (and (=> x2339 x1576) (=> (and (not x2339) (and (= (x2536 (x2119 x321) (x1426 2) 0) x916) (= 1 x1055) (= 32 x1408))) x2433))))) (=> x2681 x1576))))) (=> (not x1420) x1576))) (=> x896 x1576))))))) (=> x1379 x1387))) (=> x469 x1387)))))
(assert (x48 x45))
(assert (= (or (and x2459 (not x2331)) x327) x1976))
(assert (= (x2119 72223263258191293651604190264004579703475585967499159981614695267027195527168) (x1426 72223263258191293651604190264004579703475585967499159981614695267027195527168)))
(assert (x48 x1839))
(assert (= x787 (and (not x1587) x511)))
(assert (x48 x1869))
(assert (x48 x1361))
(assert (= (=> (and (= x1253 0) (= x1662 x1402)) x2387) x1721))
(assert (x48 x1099))
(assert (x48 x414))
(assert (= x2229 (and (not x1705) x1852)))
(assert (x48 x793))
(assert (x48 x163))
(assert (x48 x1757))
(assert (x48 x1383))
(assert (= x778 (and x884 x2237)))
(assert (x48 x1859))
(assert (= (and x1345 x2273) x2171))
(assert (x48 x1298))
(assert (= (and x1299 x2534) x263))
(assert (x48 x2278))
(assert (x48 x886))
(assert (x48 x1811))
(assert (= x1018 (or x2326 x1632 x535 x104 x2580 x1418)))
(assert (= (and x2639 (not x1438)) x466))
(assert (=> (<= x316 10000) (= (x2119 x316) (x1426 x316))))
(assert (= x2663 (and (not x2102) x732)))
(assert (x48 x273))
(assert (=> (>= 10000 x1339) (= (x1426 x1339) (x2119 x1339))))
(assert (x48 x1476))
(assert (= x580 (and x1842 x1797)))
(assert (x48 x1004))
(assert (x48 x1730))
(assert (=> (>= 10000 x223) (= (x2119 x223) (x1426 x223))))
(assert (x48 x1914))
(assert (= x2387 (=> (and (= x694 x1253) (= x1402 x120)) x441)))
(assert (x48 x502))
(assert (= x408 (and (not x1634) x2335)))
(assert (= (and x1592 x765) x874))
(assert (x48 x1555))
(assert (x48 x13))
(assert (= (and x829 (not x2740)) x2484))
(assert (=> (>= 10000 x1318) (= (x2119 x1318) (x1426 x1318))))
(assert (= x1641 (or x442 x710)))
(assert (= (=> (and (= x2125 x2691) (= x287 x1875)) x2139) x2619))
(assert (x48 x1857))
(assert (x48 x2516))
(assert (x48 x2295))
(assert (= (=> (and (= x2021 x1548) (= x528 x2088)) x1095) x1604))
(assert (x48 x1606))
(assert (= (and x1774 (not x2547)) x2105))
(assert (= (x1943 (x1426 2569309863)) 2569309863))
(assert (= (and (not x425) x810) x1354))
(assert (x48 x690))
(assert (= x1461 (and (not x2481) x148)))
(assert (= (or x783 x1658 x454 x795 x2599 x192) x2217))
(assert (x48 x973))
(assert (= x2601 (and (not x2377) x867)))
(assert (= x2089 (and x2346 (not x878))))
(assert (x48 x944))
(assert (x48 x1391))
(assert (= (=> (and (= x742 x154) (= x1870 x2026)) x2319) x788))
(assert (x48 x258))
(assert (x48 x2675))
(assert (= x1312 (and x2462 x1127)))
(assert (x48 x2731))
(assert (x48 x1233))
(assert (= x1592 (and (not x2276) x1763)))
(assert (= (and x1898 x904) x1123))
(assert (= (and x2666 (not x410)) x1096))
(assert (= (x1426 2737736067) (x2119 2737736067)))
(assert (x48 x1208))
(assert (x48 x1713))
(assert (= (and (not x2087) x1883) x335))
(assert (x48 x1117))
(assert (= x1477 (and x1221 x2075)))
(assert (= x461 (x1943 (x2119 x461))))
(assert (x48 x698))
(assert (x48 x2187))
(assert (= (and x1802 (not x1909)) x2652))
(assert (x48 x1651))
(assert (= x2411 (=> (and (= x2515 x58) (= 0 x1811)) x2519)))
(assert (= x2086 (and x979 (not x1927))))
(assert (= (and x2274 (not x12)) x510))
(assert (x48 x2192))
(assert (= x2270 (or x935 x2047 x940 x1550 x1216 x1488 x1352)))
(assert (x48 x680))
(assert (x48 x77))
(assert (= x1419 (and (not x1934) x408)))
(assert (x48 x796))
(assert (= (x1943 (x1426 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x48 x1871))
(assert (= (and x1704 x1509) x2725))
(assert (= (and x525 x924) x935))
(assert (x48 x2061))
(assert (x48 x251))
(assert (x48 x2037))
(assert (= (and (not x1905) x2369) x2103))
(assert (x48 x2715))
(assert (= (and x437 x2456) x1109))
(assert (x48 x1260))
(assert (x48 x2375))
(assert (= (and (not x548) x2253) x235))
(assert (= (=> (= (not (< 1 x1978)) x1437) (and x1437 (=> (= x1370 x2176) x1121))) x1434))
(assert (= x1328 (and (not x926) x452)))
(assert (x48 x2265))
(assert (= x111 (=> (and (= x1021 x178) (= x2007 x1440)) x1182)))
(assert (= (or x1966 x222 x1879) x555))
(assert (x48 x2592))
(assert (= (and x2010 x2016) x1972))
(assert (= x474 (and x1778 x2185)))
(assert (x2545 x813))
(assert (= x2145 (and x2115 (not x1133))))
(assert (= x1255 (and x1905 x2369)))
(assert (= (and (not x904) x1898) x206))
(assert (x48 x1815))
(assert (= x2036 (=> (and (= x1662 x1138) (= x2067 0)) x1305)))
(assert (x48 x1539))
(assert (x2129 x13))
(assert (= (=> (and (= x1325 (= 0 x2088)) (or (not x1325) x1325)) x448) x1095))
(assert (x48 x274))
(assert (= x2094 (and x2019 x1346)))
(assert (= x321 (x1943 (x2119 x321))))
(assert (x48 x1092))
(assert (=> (<= x256 10000) (= (x1426 x256) (x2119 x256))))
(assert (x48 x174))
(assert (= x405 (and x76 x1992)))
(assert (x48 x2360))
(assert (= (and x2185 (not x1778)) x490))
(assert (x48 x289))
(assert (= (and x929 x1077) x179))
(assert (x48 x907))
(assert (x48 x1447))
(assert (x48 x2427))
(assert (= x1760 (and x2143 x1051)))
(assert (= (and x179 (not x2138)) x991))
(assert (x48 x1148))
(assert (= (x2119 565014339) (x1426 565014339)))
(assert (= x1091 (or x1785 x1461)))
(assert (= x92 (and x1353 x2632)))
(assert (= (x1943 (x2119 x934)) x934))
(assert (x48 x1075))
(assert (x48 x1435))
(assert (= (and x2022 x2039) x2676))
(assert (x48 x2071))
(assert (x48 x1551))
(assert (= x1685 (and x2432 x988)))
(assert (= (=> (and (= 0 x2228) (= x1126 x1948)) x2080) x913))
(assert (x48 x1514))
(assert (= (x1426 2835717307) (x2119 2835717307)))
(assert (x48 x1407))
(assert (= (and x1786 x587) x2306))
(assert (= x2563 (and x2573 x661)))
(assert (= x746 (and (not x479) x102)))
(assert (= (x1426 1461501637330902918203684832716283019655932542976) (x2119 1461501637330902918203684832716283019655932542976)))
(assert (x48 x321))
(assert (=> (>= 10000 x322) (= (x1426 x322) (x2119 x322))))
(assert (x48 x847))
(assert (x48 x116))
(assert (= x95 (and (not x272) x341)))
(assert (= x1862 (and x1442 x991)))
(assert (= (and x829 x2740) x1395))
(assert (= x790 (and x2363 x667)))
(assert (= (and x172 x521) x1866))
(assert (x48 x109))
(assert (x48 x576))
(assert (= x2139 (=> (and (= (= 0 x2691) x1957) (or (not x1957) x1957)) x17)))
(assert (= x2300 (or x1478 x1235)))
(assert (= x2651 (x1943 (x2119 x2651))))
(assert (x48 x2709))
(assert (x48 x197))
(assert (= (and x473 (not x238)) x2657))
(assert (= (x1426 18446744073709551615) (x2119 18446744073709551615)))
(assert (= x2206 (and x134 x431)))
(assert (= (or x2354 x686 x2210 x242 x106 x477) x894))
(assert (= (x1943 (x1426 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= x1281 (and x1634 x2335)))
(assert (= (and x52 (not x537)) x2197))
(assert (= (and x1242 x31) x1946))
(assert (= x810 (and (not x2681) x2086)))
(assert (= x2337 (and x1717 x2662)))
(assert (x48 x395))
(assert (= (x1943 (x1426 1926446194)) 1926446194))
(assert (= x267 (and x2625 x49)))
(assert (= x644 (=> (= x10 (= 0 x1890)) (and (=> (and x10 (= x2172 0)) x1800) (=> (and (not x10) (= 1 x2715)) x1686)))))
(assert (= (or x244 x586) x1848))
(assert (= x604 (and (not x2118) x1232)))
(assert (x48 x1921))
(assert (x48 x588))
(assert (x48 x357))
(assert (x48 x361))
(assert (= x529 (=> (= (= 0 x694) x2405) (and (=> x2405 x2002) (=> (and (not x2405) (and (= (x90 (+ x1280 x432)) x662) (= x2553 (x90 (+ x120 31))) (= (x434 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2553) x432) (= x1909 (or (and (> 32 x120) (= (<= x120 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x120 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (and (not x1909) (and (= x339 (= x583 x461)) (<= x2013 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x583 1461501637330902918203684832716283019655932542976) (= x2558 (x2536 (x2119 x583) (x1426 17) 0)) (= (x90 (+ 64 x1004)) x1336) (= x1004 (x90 (+ x662 4))) (> 1461501637330902918203684832716283019655932542976 x583) (>= x2013 0) (= x879 (x90 (+ 32 x1004))) (= (x150 x624) x2013) (= (x1655 (- x1336 x662)) x2643) (= (x2536 (x2119 x843) x2558 0) x624))) (and (=> (and (= x1674 (= x1815 x583)) (not x339)) (and (=> (and (= x121 (= x583 x316)) (not x1674)) (and (=> (and (and (= x1940 (= x2744 x583)) (and (and (> x698 0) (= x110 x258) (= x1642 2835717307) (not (= 826074471 x1642)) (= x310 x2013) (not (= 1889567281 x1642)) (= x2684 (or (and (< x2140 64) (= true (<= x2140 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2140 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x1642 826074471)) (= x2140 (x1655 (- x2630 4))) (= x1607 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x698 (x2406 (x2119 x2744))) (= 68 x2630) (= x2630 x2643) (not (> 4 x2630)) (not (= x1642 2514000705))) x1940)) (not x121)) (and (=> (and (not x2684) (= x953 (= x258 x110))) (and (=> (and (and (= x1414 (< x1579 x2013)) (= x1599 x310) (>= x1579 0) (= x1128 (x2536 (x2119 x1815) (x1426 1) 0)) (= (x1872 x1128) x1579) (<= x1579 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x953) (and (=> x1414 x257) (=> (and (not x1414) (= x1720 (< x1579 x310))) (and (=> (and (and (= (x2536 (x2119 x1815) (x1426 1) 0) x2602) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x923) (= x923 (x173 x590)) (= (x2536 (x2119 x60) (x1426 1) 0) x590) (= (< x2392 x923) x856) (= x85 (x1655 (- x1579 x310))) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x310)) x2392) (<= 0 x923)) (not x1720)) (and (=> x856 x257) (=> (and (and (= (x90 (+ x310 x923)) x1831) (= x1560 (> x923 x1831))) (not x856)) (and (=> (and (and (= x2069 1) (= (x2536 (x2119 x60) (x1426 1) 0) x1952) (= 1 x1383) (= 32 x465)) (not x1560)) x2058) (=> x1560 x257))))) (=> x1720 x257))))) (=> (not x953) x257))) (=> x2684 x257))) (=> (and x121 (and (= x2013 x152) (= x204 (x1655 (- x1869 4))) (= (x2406 (x2119 x316)) x695) (= x1869 x2643) (not (< x36 826074471)) (= x36 2835717307) (not (< x1869 4)) (not (= x36 826074471)) (< 0 x695) (not (= 2514000705 x36)) (= 68 x1869) (not (= x36 1889567281)) (= x602 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x204) true) (< x204 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x204))) (= x2402 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x536 x110))) (and (=> x602 x721) (=> (and (= (= x536 x110) x926) (not x602)) (and (=> (not x926) x721) (=> (and (and (<= x2052 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2052 0) (= x2075 (< x2052 x2013)) (= x2052 (x674 x1288)) (= x2621 x152) (= x1288 (x2536 (x2119 x1815) (x1426 1) 0))) x926) (and (=> (and (= x2017 (> x152 x2052)) (not x2075)) (and (=> x2017 x721) (=> (and (and (= (x2536 (x2119 x60) (x1426 1) 0) x2073) (= x1012 (x1655 (- x2052 x152))) (= (x2536 (x2119 x1815) (x1426 1) 0) x485) (<= x1570 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1570 (x1958 x2073)) (= x1417 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x152))) (= x2243 (> x1570 x1417)) (>= x1570 0)) (not x2017)) (and (=> (and (and (= x1068 (x90 (+ x1570 x152))) (= (> x1570 x1068) x119)) (not x2243)) (and (=> (and (not x119) (and (= (x2536 (x2119 x60) (x1426 1) 0) x1289) (= 1 x519) (= 1 x2371) (= 32 x2603))) x1886) (=> x119 x721))) (=> x2243 x721))))) (=> x2075 x721))))))))) (=> (and (and (not (> 4 x2386)) (= 2835717307 x1524) (= x2446 x2013) (= x401 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1688) true) (< x1688 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1688))) (> x1990 0) (= x2386 68) (not (> 2646777772 x1524)) (= x1688 (x1655 (- x2386 4))) (= x1990 (x2406 (x2119 x1815))) (not (= 2646777772 x1524)) (not (= x1524 2678909723)) (= x110 x2732) (> 3053082678 x1524) (= x2643 x2386) (not (< x1524 1889567281)) (= x1490 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1674) (and (=> (and (= (= x110 x2732) x2018) (not x401)) (and (=> (and x2018 (and (= x1058 (x1693 x2457)) (>= x1058 0) (= (x2536 (x2119 x1815) (x1426 2) 0) x2457) (= x2446 x2281) (= x29 (> x2013 x1058)) (<= x1058 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (= x895 (> x2446 x1058)) (not x29)) (and (=> x895 x324) (=> (and (not x895) (and (= x2591 (x2536 (x2119 x60) (x1426 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x226) (<= 0 x226) (= x2467 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2446))) (= x308 (> x226 x2467)) (= x1885 (x2536 (x2119 x1815) (x1426 2) 0)) (= (x2431 x2591) x226) (= (x1655 (- x1058 x2446)) x1707))) (and (=> x308 x324) (=> (and (and (= (> x226 x796) x2481) (= x796 (x90 (+ x2446 x226)))) (not x308)) (and (=> (and (not x2481) (and (= 1 x1961) (= x2440 32) (= (x2536 (x2119 x60) (x1426 2) 0) x2160))) x2584) (=> x2481 x324))))))) (=> x29 x324))) (=> (not x2018) x324))) (=> x401 x324))))) (=> (and x339 (and (not (= x23 2646777772)) (= x871 68) (< x23 3053082678) (= (or (> x2161 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2161) true) (< x2161 64))) x2345) (< 0 x1261) (= x23 2835717307) (= x2643 x871) (= x1261 (x2406 (x2119 x461))) (= x2013 x1373) (not (< x23 1889567281)) (= x690 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2128 x110) (not (> 4 x871)) (not (= x23 2678909723)) (not (< x23 2646777772)) (= x2161 (x1655 (- x871 4))))) (and (=> (and (not x2345) (= x951 (= x110 x2128))) (and (=> (not x951) x1119) (=> (and x951 (and (= x1717 (< x1792 x2013)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1792) (= x1713 x1373) (<= 0 x1792) (= x1792 (x1882 x860)) (= x860 (x2536 (x2119 x1815) (x1426 2) 0)))) (and (=> (and (= (< x1792 x1373) x241) (not x1717)) (and (=> (and (not x241) (and (= (> x26 x614) x701) (= (x2536 (x2119 x1815) (x1426 2) 0) x1251) (= x1757 (x1655 (- x1792 x1373))) (= (x2536 (x2119 x60) (x1426 2) 0) x880) (<= x26 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1201 x880) x26) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1373)) x614) (<= 0 x26))) (and (=> x701 x1119) (=> (and (and (= (> x26 x2436) x2740) (= (x90 (+ x26 x1373)) x2436)) (not x701)) (and (=> x2740 x1119) (=> (and (not x2740) (and (= x528 1) (= (x2536 (x2119 x60) (x1426 2) 0) x343) (= x2021 32))) x1604))))) (=> x241 x1119))) (=> x1717 x1119))))) (=> x2345 x1119))))) (=> x1909 x2002)))))))
(assert (= (and (not x2448) x1536) x1786))
(assert (= (=> (and (= x2021 x2569) (= 0 x528)) x1604) x1119))
(assert (= (and x482 x1155) x2137))
(assert (=> (>= 10000 x139) (= (x1426 x139) (x2119 x139))))
(assert (x48 x1261))
(assert (x48 x2221))
(assert (x48 x1276))
(assert (= x2082 (x1943 (x2119 x2082))))
(assert (= (or x1649 x1037 x216 x1108) x1683))
(assert (= x527 (and x492 x1563)))
(assert (x48 x2072))
(assert (= x2074 (and (not x24) x92)))
(assert (= (or x304 x627 x1320 x527 x1337 x959) x453))
(assert (x48 x1696))
(assert (= x924 (and x2419 (not x509))))
(assert (= (and (not x2378) x2015) x1286))
(assert (= (=> (and (= x2038 x2042) (= 0 x1925)) x1213) x1656))
(assert (x48 x914))
(assert (x48 x2330))
(assert (x48 x2168))
(assert (x48 x1661))
(assert (x48 x37))
(assert (= (and x1972 x1069) x565))
(assert (= (+ 1 (x1943 x1047)) (x1943 (x945 x1047 1))))
(assert (x48 x1801))
(assert (= (+ 1 (x1943 x215)) (x1943 (x945 x215 1))))
(assert (x48 x2215))
(assert (x48 x126))
(assert (x48 x990))
(assert (x48 x709))
(assert (= (and x953 x702) x2279))
(assert (= x167 (and (not x1597) x2357)))
(assert (= x2605 (and (not x492) x1563)))
(assert (x48 x1197))
(assert (= (and x2390 x804) x372))
(assert (= x2438 (or x864 x2337 x768 x1395 x1125 x839)))
(assert (= 18446744073709551615 (x1943 (x1426 18446744073709551615))))
(assert (x48 x1574))
(assert (x48 x159))
(assert (= (=> (and (= x694 x1272) (= x120 x2437)) x441) x1431))
(assert (x48 x528))
(assert (= x1561 (and x1321 x506)))
(assert (= x1197 (x1943 (x2119 x1197))))
(assert (= (and x2404 (not x1926)) x1860))
(assert (= x2729 (and x1008 x2018)))
(assert (= (=> (and (= 0 x1595) (= x1865 x2600)) x2618) x1100))
(assert (x48 x1733))
(assert (x48 x2007))
(assert (= 2867092931 (x1943 (x1426 2867092931))))
(assert (x48 x1835))
(assert (= (or x199 x2674) x1953))
(assert (x2545 1461501637330902918203684832716283019655932542975))
(assert (= x1505 (and (not x937) x1273)))
(assert (x48 x2350))
(assert (x48 x2426))
(assert (x48 x595))
(assert (=> (>= 10000 x2207) (= (x2119 x2207) (x1426 x2207))))
(assert (x48 x596))
(assert (= (and x335 x1295) x1847))
(assert (x48 x2284))
(assert (x48 x2068))
(assert (x48 x1982))
(assert (x48 x1068))
(assert (x48 x2466))
(assert (= (and (not x1409) x888) x1003))
(assert (x48 x1850))
(assert (x48 x234))
(assert (= (and x2357 x1597) x2223))
(assert (x48 x2178))
(assert (= x176 (and x493 x2551)))
(assert (x48 x2230))
(assert (x48 x2393))
(assert (= (=> (and (= x1527 x1970) (= x891 x1861) (= 0 x892) (= x2669 x583) (= x300 x2644) (= x2207 x547) (= x910 x1197)) x2508) x225))
(assert (= (=> (and (= x993 0) (= x8 x1979)) x1032) x2455))
(assert (= (and x34 x645) x678))
(assert (= (or x753 x549) x294))
(assert (= (and x56 x1079) x676))
(assert (= x1108 (or x2543 x2)))
(assert (x48 x2188))
(assert (= x133 (and x488 (not x626))))
(assert (= x817 (and x1763 x2276)))
(assert (=> (>= 10000 x934) (= (x2119 x934) (x1426 x934))))
(assert (x48 x2631))
(assert (= (and (not x2447) x1275) x2699))
(assert (x48 x966))
(assert (= (and (not x1295) x335) x1774))
(assert (x48 x2196))
(assert (= x34 (and x2409 x865)))
(assert (x48 x2603))
(assert (= x1247 (and (not x2075) x1221)))
(assert (x48 x142))
(assert (= x1352 (and (not x2314) x1808)))
(assert (= (and (not x1829) x2089) x1532))
(assert (x48 x822))
(assert (= x381 (and (not x435) x28)))
(assert (x48 x338))
(assert (= x140 (and x65 x1552)))
(assert (= (x1943 (x1426 2445980732)) 2445980732))
(assert (= x222 (and (not x1349) x1093)))
(assert (= x771 (and (not x598) x2705)))
(assert (= x378 (and x272 x341)))
(assert (= x2614 (and x1553 x602)))
(assert (x48 x2208))
(assert (= (or (and x2491 x2521) (and x2736 (not x700))) x123))
(assert (x48 x1548))
(assert (x48 x672))
(assert (= x2555 (or x581 x245 x1899 x823 x2288 x1430 x1756 x1494 x108 x2537)))
(assert (x48 x1776))
(assert (x48 x2093))
(assert (= (=> (= x1598 x1968) x1256) x1116))
(assert (x48 x2444))
(assert (= x1832 (and x1056 x490)))
(assert (x48 x1292))
(assert (x48 x2593))
(assert (x48 x1518))
(assert (= 604024478 (x1943 (x1426 604024478))))
(assert (= x1910 (=> (= x38 (= x2007 0)) (and (=> (and (not x38) (and (= x1911 (or (and (< x1021 32) (= true (<= x1021 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1021))) (= (x90 (+ x357 128)) x1280) (= (x90 (+ x1021 31)) x1031) (= (x434 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1031) x357))) (and (=> x1911 x2002) (=> (and (and (= x252 (x90 (+ x1280 4))) (>= x1789 0) (= x601 (x90 (+ 64 x252))) (= x65 (= x461 x891)) (= x1789 (x150 x382)) (= x382 (x2536 (x2119 x843) x2283 0)) (= (x90 (+ 32 x252)) x633) (= (x2536 (x2119 x891) (x1426 17) 0) x2283) (= x118 (x1655 (- x601 x1280))) (> 1461501637330902918203684832716283019655932542976 x891) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1789) (< x891 1461501637330902918203684832716283019655932542976)) (not x1911)) (and (=> (and (= (= x891 x1815) x31) (not x65)) (and (=> (and (= x929 (= x891 x316)) (not x31)) (and (=> (and (and (and x2395 (and (= 2835717307 x1857) (= x118 x64) (not (= x1857 826074471)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x496) (not (> 4 x64)) (= x518 (x1655 (- x64 4))) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x518) true) (< x518 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x518)) x2523) (not (> 826074471 x1857)) (= x277 (x2406 (x2119 x2744))) (< 0 x277) (not (= x1857 1889567281)) (= x64 68) (not (= x1857 2514000705)) (= x1789 x2435) (= x110 x1973))) (= x2395 (= x2744 x891))) (not x929)) (and (=> (and (not x2523) (= x882 (= x1973 x110))) (and (=> (and x882 (and (= (x1788 x1798) x385) (= (x2536 (x2119 x1815) (x1426 1) 0) x1798) (<= x385 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x385) (= x1099 x2435) (= x697 (< x385 x1789)))) (and (=> (and (= x2664 (< x385 x2435)) (not x697)) (and (=> x2664 x1691) (=> (and (not x2664) (and (= x1026 (x2099 x5)) (= x2384 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2435))) (>= x1026 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1026) (= (x1655 (- x385 x2435)) x247) (= x2447 (< x2384 x1026)) (= x1023 (x2536 (x2119 x1815) (x1426 1) 0)) (= (x2536 (x2119 x60) (x1426 1) 0) x5))) (and (=> x2447 x1691) (=> (and (not x2447) (and (= x2367 (< x975 x1026)) (= (x90 (+ x1026 x2435)) x975))) (and (=> x2367 x1691) (=> (and (not x2367) (and (= x2437 32) (= x44 (x2536 (x2119 x60) (x1426 1) 0)) (= x1272 1) (= x32 1))) x1431))))))) (=> x697 x1691))) (=> (not x882) x1691))) (=> x2523 x1691))) (=> (and (and (= x807 x110) (= 2835717307 x305) (= 68 x1187) (not (= 2514000705 x305)) (not (> 4 x1187)) (not (= x305 826074471)) (not (= 1889567281 x305)) (= x1167 (x2406 (x2119 x316))) (< 0 x1167) (= x1187 x118) (not (< x305 826074471)) (= x2138 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x61) (and (= true (<= x61 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x61)))) (= x1789 x995) (= x61 (x1655 (- x1187 4))) (= x930 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x929) (and (=> x2138 x2036) (=> (and (= (= x110 x807) x1442) (not x2138)) (and (=> (not x1442) x2036) (=> (and x1442 (and (<= x184 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2536 (x2119 x1815) (x1426 1) 0) x1115) (= (< x184 x1789) x214) (= x948 x995) (>= x184 0) (= (x1162 x1115) x184))) (and (=> x214 x2036) (=> (and (= (< x184 x995) x1640) (not x214)) (and (=> (and (not x1640) (and (= x1033 (x562 x1724)) (= x954 (x2536 (x2119 x1815) (x1426 1) 0)) (= (< x101 x1033) x2388) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x995)) x101) (= x1724 (x2536 (x2119 x60) (x1426 1) 0)) (= x576 (x1655 (- x184 x995))) (<= x1033 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1033))) (and (=> (and (not x2388) (and (= x1438 (< x610 x1033)) (= x610 (x90 (+ x995 x1033))))) (and (=> x1438 x2036) (=> (and (not x1438) (and (= x2067 1) (= x1138 32) (= x2044 1) (= (x2536 (x2119 x60) (x1426 1) 0) x2487))) x1305))) (=> x2388 x2036))) (=> x1640 x2036))))))))))) (=> (and x31 (and (= (x2406 (x2119 x1815)) x1871) (= x1302 (x1655 (- x2514 4))) (not (= 2678909723 x968)) (not (= 2646777772 x968)) (not (< x2514 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x942) (= x118 x2514) (> x1871 0) (not (< x968 1889567281)) (= x2298 (or (and (> 64 x1302) (= (<= x1302 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1302 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x968 3053082678) (= x1789 x1839) (= 68 x2514) (= x968 2835717307) (= x110 x1904) (not (< x968 2646777772)))) (and (=> x2298 x1721) (=> (and (= x2175 (= x1904 x110)) (not x2298)) (and (=> (not x2175) x1721) (=> (and x2175 (and (>= x181 0) (= x181 (x625 x2574)) (<= x181 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2536 (x2119 x1815) (x1426 2) 0) x2574) (= x1839 x211) (= x1063 (< x181 x1789)))) (and (=> x1063 x1721) (=> (and (= (< x181 x1839) x2023) (not x1063)) (and (=> (and (and (= x937 (> x1260 x539)) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1839)) x539) (>= x1260 0) (= x1669 (x2536 (x2119 x60) (x1426 2) 0)) (= x1260 (x1392 x1669)) (= (x2536 (x2119 x1815) (x1426 2) 0) x1933) (<= x1260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1655 (- x181 x1839)) x2106)) (not x2023)) (and (=> (and (and (= x2222 (x90 (+ x1839 x1260))) (= (< x2222 x1260) x317)) (not x937)) (and (=> (and (not x317) (and (= (x2536 (x2119 x60) (x1426 2) 0) x545) (= x1253 1) (= x1402 32))) x2387) (=> x317 x1721))) (=> x937 x1721))) (=> x2023 x1721))))))))))) (=> (and (and (= (x1655 (- x1292 4)) x1025) (< 0 x2721) (= x1856 (or (> x1025 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1025 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1025)))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x80) (= 68 x1292) (= x1292 x118) (not (> 2646777772 x1503)) (= x110 x1511) (= x1503 2835717307) (not (= x1503 2646777772)) (not (= x1503 2678909723)) (= x1789 x2450) (not (< x1503 1889567281)) (not (> 4 x1292)) (= x2721 (x2406 (x2119 x461))) (< x1503 3053082678)) x65) (and (=> (and (= (= x1511 x110) x2016) (not x1856)) (and (=> (and (and (= (x2536 (x2119 x1815) (x1426 2) 0) x1045) (= (x597 x1045) x2444) (= (> x1789 x2444) x1069) (= x2642 x2450) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2444) (<= 0 x2444)) x2016) (and (=> (and (not x1069) (= (> x2450 x2444) x2511)) (and (=> x2511 x1034) (=> (and (not x2511) (and (= x1499 (< x1234 x243)) (= (x2164 x445) x243) (= x384 (x1655 (- x2444 x2450))) (<= x243 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2536 (x2119 x1815) (x1426 2) 0) x1002) (= x445 (x2536 (x2119 x60) (x1426 2) 0)) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2450)) x1234) (>= x243 0))) (and (=> x1499 x1034) (=> (and (and (= x1039 (> x243 x50)) (= (x90 (+ x2450 x243)) x50)) (not x1499)) (and (=> (and (and (= (x2536 (x2119 x60) (x1426 2) 0) x727) (= 32 x2688) (= x170 1)) (not x1039)) x342) (=> x1039 x1034))))))) (=> x1069 x1034))) (=> (not x2016) x1034))) (=> x1856 x1034))))))) (=> x38 x2002)))))
(assert (= (or x2484 x2438) x2485))
(assert (x48 x738))
(assert (x48 x713))
(assert (= (and x808 (not x1692)) x1232))
(assert (= x2505 (and x2441 (not x784))))
(assert (x48 x2514))
(assert (x48 x2000))
(assert (x48 x2717))
(assert (= (and x179 x2138) x1617))
(assert (= x2205 (and x1498 x401)))
(assert (= x583 (x1943 (x2119 x583))))
(assert (x48 x707))
(assert (x48 x1058))
(assert (x48 x2732))
(assert (x48 x156))
(assert (x48 x1813))
(assert (x48 x687))
(assert (= x473 (and x68 (not x195))))
(assert (x48 x2216))
(assert (x1376 x813))
(assert (= (=> (= x711 (= 0 x289)) (and (=> x711 x1387) (=> (and (and (= x813 (x90 (+ x1661 31))) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1661)) (< x1661 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1661)) x2262) (= (x90 (+ x1963 x1176)) x1476) (= x1963 (x434 115792089237316195423570985008687907853269984665640564039457584007913129639904 x813))) (not x711)) (and (=> x2262 x1387) (=> (and (and (= (x90 (+ x1476 4)) x1577) (>= x1887 0) (= x2586 (x2536 (x2119 x1197) (x1426 17) 0)) (= x1874 (x90 (+ 64 x1577))) (= x2448 (= x1197 x461)) (= (x90 (+ 32 x1577)) x541) (= (x2536 (x2119 x1382) x2586 0) x2325) (< x1197 1461501637330902918203684832716283019655932542976) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1887) (< x1197 1461501637330902918203684832716283019655932542976) (= x1741 (x1655 (- x1874 x1476))) (= (x1975 x2325) x1887)) (not x2262)) (and (=> (and (and (= x1741 x965) (= x2659 (x1655 (- x965 4))) (not (> 1889567281 x1844)) (not (< x965 4)) (= x363 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (> x2659 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x2659) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2659) true))) x1634) (= (x2406 (x2119 x461)) x672) (= 2835717307 x1844) (= x2572 x1887) (= 68 x965) (= x514 x2131) (not (< x1844 2646777772)) (not (= x1844 2646777772)) (not (= x1844 2678909723)) (< x1844 3053082678) (< 0 x672)) x2448) (and (=> x1634 x2135) (=> (and (not x1634) (= x1934 (= x514 x2131))) (and (=> (and x1934 (and (= (x2536 (x2119 x461) (x1426 2) 0) x2091) (= x1327 (x351 x2091)) (>= x1327 0) (<= x1327 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2502 (< x1327 x1887)) (= x2572 x1827))) (and (=> x2502 x2135) (=> (and (not x2502) (= x1621 (> x2572 x1327))) (and (=> x1621 x2135) (=> (and (and (= (x2536 (x2119 x321) (x1426 2) 0) x40) (= x14 (x1655 (- x1327 x2572))) (= x451 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2572))) (<= x1790 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1790 (x1793 x40)) (= (> x1790 x451) x406) (= x1698 (x2536 (x2119 x461) (x1426 2) 0)) (>= x1790 0)) (not x1621)) (and (=> x406 x2135) (=> (and (not x406) (and (= (x90 (+ x1790 x2572)) x1510) (= (< x1510 x1790) x873))) (and (=> x873 x2135) (=> (and (and (= x114 1) (= x2072 32) (= (x2536 (x2119 x321) (x1426 2) 0) x1528)) (not x873)) x553))))))))) (=> (not x1934) x2135))))) (=> (and (= x587 (= x1815 x1197)) (not x2448)) (and (=> (and x587 (and (not (= 2646777772 x1924)) (not (< x230 4)) (not (< x1924 1889567281)) (= x1741 x230) (= x273 (x2406 (x2119 x1815))) (= x2131 x2285) (not (< x1924 2646777772)) (= 68 x230) (= x1887 x649) (not (= 2678909723 x1924)) (= x1924 2835717307) (= (x1655 (- x230 4)) x20) (= (or (> x20 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x20)) (< x20 64))) x2081) (> 3053082678 x1924) (= x7 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x273 0))) (and (=> x2081 x2158) (=> (and (not x2081) (= (= x2131 x2285) x804)) (and (=> (and (and (= (x2536 (x2119 x461) (x1426 2) 0) x1751) (= (x2617 x1751) x2200) (= (> x1887 x2200) x939) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2200) (= x649 x1513) (>= x2200 0)) x804) (and (=> x939 x2158) (=> (and (= (> x649 x2200) x1155) (not x939)) (and (=> x1155 x2158) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2127) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x649)) x987) (= x2127 (x2637 x483)) (= x272 (< x987 x2127)) (<= 0 x2127) (= (x1655 (- x2200 x649)) x1508) (= (x2536 (x2119 x321) (x1426 2) 0) x483) (= (x2536 (x2119 x461) (x1426 2) 0) x714)) (not x1155)) (and (=> (and (not x272) (and (= x1855 (< x1035 x2127)) (= (x90 (+ x2127 x649)) x1035))) (and (=> x1855 x2158) (=> (and (not x1855) (and (= 1 x213) (= 32 x171) (= x1171 (x2536 (x2119 x321) (x1426 2) 0)))) x390))) (=> x272 x2158))))))) (=> (not x804) x2158))))) (=> (and (not x587) (= x1353 (= x1197 x316))) (and (=> (and (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1236) (not (> 4 x2439)) (= x2361 2835717307) (not (= 1889567281 x2361)) (= (or (and (< x643 64) (= true (<= x643 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x643 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x24) (= x643 (x1655 (- x2439 4))) (= x1854 x1887) (= 68 x2439) (= x2439 x1741) (> x594 0) (not (> 826074471 x2361)) (= x2131 x1233) (not (= x2361 2514000705)) (not (= x2361 826074471)) (= x594 (x2406 (x2119 x316)))) x1353) (and (=> (and (= x651 (= x2131 x1233)) (not x24)) (and (=> (not x651) x927) (=> (and x651 (and (= (x2536 (x2119 x461) (x1426 1) 0) x1054) (= x1854 x1148) (= (> x1887 x303) x1584) (= (x925 x1054) x303) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x303) (<= 0 x303))) (and (=> x1584 x927) (=> (and (not x1584) (= (< x303 x1854) x2237)) (and (=> x2237 x927) (=> (and (not x2237) (and (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1854)) x760) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x950) (= x950 (x2560 x670)) (<= 0 x950) (= x2216 (x1655 (- x303 x1854))) (= (< x760 x950) x1627) (= x2410 (x2536 (x2119 x461) (x1426 1) 0)) (= x670 (x2536 (x2119 x321) (x1426 1) 0)))) (and (=> x1627 x927) (=> (and (not x1627) (and (= x920 (x90 (+ x950 x1854))) (= (> x950 x920) x460))) (and (=> x460 x927) (=> (and (and (= (x2536 (x2119 x321) (x1426 1) 0) x1453) (= 32 x1111) (= 1 x354) (= x840 1)) (not x460)) x1923))))))))))) (=> x24 x927))) (=> (and (not x1353) (and (and (and (= (x2406 (x2119 x2744)) x650) (= x234 2835717307) (= x2465 x1741) (not (= 2514000705 x234)) (< 0 x650) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2472) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2472) true) (> 64 x2472))) x410) (not (> 4 x2465)) (= x89 x1887) (not (< x234 826074471)) (not (= x234 1889567281)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1555) (= x2465 68) (= x2472 (x1655 (- x2465 4))) (= x2131 x1331) (not (= x234 826074471))) x776) (= (= x2744 x1197) x776))) (and (=> x410 x1028) (=> (and (= x857 (= x2131 x1331)) (not x410)) (and (=> (not x857) x1028) (=> (and (and (= x2273 (< x1631 x1887)) (<= 0 x1631) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1631) (= x89 x19) (= x1631 (x1622 x2658)) (= x2658 (x2536 (x2119 x461) (x1426 1) 0))) x857) (and (=> x2273 x1028) (=> (and (not x2273) (= (> x89 x1631) x2162)) (and (=> x2162 x1028) (=> (and (not x2162) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x416) (= (x2536 (x2119 x321) (x1426 1) 0) x2520) (= (x2536 (x2119 x461) (x1426 1) 0) x1311) (= (< x2680 x416) x2722) (= (x1863 x2520) x416) (= x2000 (x1655 (- x1631 x89))) (>= x416 0) (= x2680 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x89))))) (and (=> x2722 x1028) (=> (and (not x2722) (and (= x1127 (< x707 x416)) (= (x90 (+ x89 x416)) x707))) (and (=> (and (and (= 1 x2356) (= x2114 32) (= x2503 (x2536 (x2119 x321) (x1426 1) 0)) (= x903 1)) (not x1127)) x2308) (=> x1127 x1028))))))))))))))))))))))) x584))
(assert (= (=> (and (= x718 x2072) (= 0 x114)) x553) x2135))
(assert (x48 x1222))
(assert (= (x1426 856900995) (x2119 856900995)))
(assert (x48 x2140))
(assert (x48 x1873))
(assert (x48 x1373))
(assert (x48 x1472))
(assert (x48 x2734))
(assert (= (=> (and (= x2331 (= 0 x1890)) (or x2331 (not x2331))) x644) x2289))
(assert (= (and (not x2559) x2105) x407))
(assert (x48 x1394))
(assert (= (and x147 (not x600)) x157))
(assert (= (and (not x1193) x366) x2645))
(assert (= x1605 (and x1052 (not x2146))))
(assert (= (and x52 x537) x1246))
(assert (= x102 (and (not x191) x655)))
(assert (= (and x1059 x2045) x1585))
(assert (x48 x840))
(assert (= x688 (or x2225 x1237 x2464 x1547 x2049 x2155)))
(assert (= (and x582 x1626) x380))
(assert (= x2095 (and x1683 x1957)))
(assert (x48 x2130))
(assert (=> (>= 10000 x136) (= (x2119 x136) (x1426 x136))))
(assert (x48 x426))
(assert (x48 x539))
(assert (= (=> (and (= x1179 (x90 (+ x1151 32))) (= x2165 (not (< x1179 x2399))) (>= 1461501637330902918203684832716283019655932542975 x227) (= (x1087 x1151) x227)) (and x2165 x2194)) x1314))
(assert (x48 x2622))
(assert (x48 x1619))
(assert (= (=> (= x2524 x1890) x2289) x763))
(assert (x2129 x2207))
(assert (= (x1426 65943510083598082279227955258803319933472635617035506777028864765220054106112) (x2119 65943510083598082279227955258803319933472635617035506777028864765220054106112)))
(assert (= (and x2122 (not x2476)) x484))
(assert (= (or x2078 x2522 x157 x781 x177 x1443) x869))
(assert (x48 x725))
(assert (= x1879 (and x636 x1009)))
(assert (x48 x1998))
(assert (= x754 (or x2137 x378 x2576 x1470 x1469 x2671)))
(assert (= (and x2559 x2105) x1319))
(assert (x48 x942))
(assert (= x341 (and x482 (not x1155))))
(assert (=> (>= 10000 x687) (= (x1426 x687) (x2119 x687))))
(assert (= x1145 (or x1618 x2482 x2382 x1641)))
(assert (= x501 (and x819 (not x1083))))
(assert (x48 x684))
(assert (= x2415 (and x2162 x1542)))
(assert (x48 x1812))
(assert (x48 x1098))
(assert (= x612 (or x1109 x2742 x771 x2697 x2333 x2461)))
(assert (x48 x20))
(assert (x48 x1570))
(assert (= (and x1083 x819) x458))
(assert (= (or x292 x1660 x1000 x474 x71 x676) x1107))
(assert (= (and x1704 (not x1509)) x1235))
(assert (x48 x2524))
(assert (x48 x1503))
(assert (= x1632 (and x2699 x2367)))
(assert (= (and (not x658) x1860) x328))
(assert (x48 x906))
(assert (x48 x354))
(assert (= x801 (and x815 x882)))
(assert (= x494 (and x1283 (not x1239))))
(assert (x48 x383))
(assert (x48 x1716))
(assert (= (and x1239 x1283) x780))
(assert (x48 x1206))
(assert (x48 x2228))
(assert (= x1630 (=> (and (= x1030 x2163) (= (x90 (+ x2713 32)) x69) (= x2159 (x90 (+ 32 x607))) (= (< 0 x2530) x1752) (= (x90 (+ x2163 32)) x607) (= (x151 x2713) x2530) (= 32 x155)) (and (=> (and (and (= x2422 (x1017 x69)) (= x1821 (x90 (+ x69 32))) (= (< 1 x2530) x784) (= x1013 (x90 (+ x2159 32)))) x1752) (and (=> (and (and (= x1920 (> x2530 2)) (= (x90 (+ 32 x1013)) x767) (= (x90 (+ x1821 32)) x2414) (= (x288 x1821) x2649)) x784) (and (=> (and (not x1920) (and (= x2512 x2414) (= x523 2) (= x2181 x767))) x2246) (=> (and (and (= x1118 (x90 (+ 32 x767))) (= (x90 (+ x2414 32)) x2317) (= x534 (x2483 x2414)) (= (< 3 x2530) x629)) x1920) (and (=> x629 x2327) (=> (and (and (= x2512 x2317) (= x2181 x1118) (= 3 x523)) (not x629)) x2246))))) (=> (and (and (= x1821 x2512) (= x2181 x1013) (= 1 x523)) (not x784)) x2246))) (=> (and (and (= x2159 x2181) (= 0 x523) (= x2512 x69)) (not x1752)) x2246)))))
(assert (= x1552 (and (not x1911) x821)))
(assert (= (and x1072 (not x2096)) x493))
(assert (x48 x1184))
(assert (x48 x568))
(assert (x48 x1913))
(assert (x48 x287))
(assert (= (and x2690 (not x1388)) x2578))
(assert (= (and x2041 (not x842)) x2712))
(assert (x48 x58))
(assert (x48 x1080))
(assert (x48 x2435))
(assert (x48 x1030))
(assert (x48 x542))
(assert (x48 x2247))
(assert (= (and (not x2538) x470) x1575))
(assert (= x1852 (and (not x1347) x1718)))
(assert (x48 x887))
(assert (x48 x346))
(assert (x48 x1377))
(assert (= x1315 (and (not x621) x2103)))
(assert (x48 x872))
(assert (x48 x955))
(assert (x48 x731))
(assert (x48 x440))
(assert (x48 x607))
(assert (x48 x1112))
(assert (= x18 (and x884 (not x2237))))
(assert (x48 x843))
(assert (= (=> (and (= x2688 x120) (= x170 x694)) x441) x342))
(assert (= (=> (and (= (= x1448 0) x127) (or (not x127) x127)) x799) x295))
(assert (x48 x282))
(assert (=> (>= 10000 x843) (= (x2119 x843) (x1426 x843))))
(assert (x48 x1990))
(assert (x48 x480))
(assert (= x2185 (and x1837 x577)))
(assert (= (=> (= x2533 (< 0 x1978)) (and (=> (and (and (= x1730 (x434 1461501637330902918203684832716283019655932542975 x1227)) (= x1227 (x2507 160)) (> x2734 0) (= x2734 (x2507 128)) (= (= 0 x1730) x1544)) x2533) (and (=> (and (and (= (x90 (+ 4 x1456)) x1673) (= x456 (x434 1461501637330902918203684832716283019655932542975 x1227)) (= (x90 (+ 32 x1673)) x918) (= x1537 (x1655 (- x918 x1456))) (= (= x461 x456) x2146) (= x1796 x1673)) (not x1544)) (and (=> (and (= x2169 (= x456 x1815)) (not x2146)) (and (=> (and (not x2169) (= x1299 (= x456 x316))) (and (=> (and (and (= (= x2744 x456) x188) (and (and (= x37 (x2406 (x2119 x2744))) (= x1537 x793) (not (< x2731 826074471)) (= x914 x13) (not (< x793 4)) (= x842 (or (and (< x2126 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2126) true)) (> x2126 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 826074471 x2731)) (= x793 36) (= x2126 (x1655 (- x793 4))) (= 1889567281 x2731) (> x37 0) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1812)) x188)) (not x1299)) (and (=> (and (and (= x863 x914) (= (= x13 x914) x2332)) (not x842)) (and (=> (not x2332) x1615) (=> (and x2332 (and (= 1 x1715) (= (x1572 x93) x2489) (<= 0 x2489) (= 32 x271) (<= x2489 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2536 (x2119 x914) (x1426 1) 0) x93))) x969))) (=> x842 x1615))) (=> (and (and (= x1416 (x2406 (x2119 x316))) (= x1394 (x1655 (- x556 4))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1394) (and (< x1394 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1394)))) x2653) (> x1416 0) (= x1170 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (< x22 826074471)) (not (> 4 x556)) (not (= 826074471 x22)) (= x1537 x556) (= x556 36) (= x322 x13) (= 1889567281 x22)) x1299) (and (=> (and (and (= x1053 x322) (= (= x13 x322) x2694)) (not x2653)) (and (=> (and (and (= x2071 32) (>= x683 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x683) (= x666 (x2536 (x2119 x322) (x1426 1) 0)) (= x2188 1) (= x683 (x639 x666))) x2694) x2011) (=> (not x2694) x2425))) (=> x2653 x2425))))) (=> (and x2169 (and (= (or (> x822 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x822) (= true (<= x822 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1609) (= x2334 (x2406 (x2119 x1815))) (< x163 3053082678) (not (> 4 x1801)) (= x1801 36) (not (< x163 1889567281)) (= x1932 50942633119752846454219349998365661925608737367104304655302372697894809501696) (> x2334 0) (= (x1655 (- x1801 4)) x822) (= x163 1889567281) (= x1537 x1801) (= x285 x13) (> 2646777772 x163))) (and (=> (and (and (= (= x13 x285) x404) (= x1648 x285)) (not x1609)) (and (=> (and x404 (and (= 1 x1411) (= x893 (x2536 (x2119 x285) (x1426 2) 0)) (= x2187 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x63) (>= x63 0) (= (x1351 x893) x63))) x2341) (=> (not x404) x890))) (=> x1609 x890))))) (=> (and (and (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1681) (> 2646777772 x1218) (= x1818 x1537) (= 1889567281 x1218) (= x1921 (x2406 (x2119 x461))) (= x13 x1533) (= x2521 (or (and (= (<= x1914 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1914 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1914))) (not (< x1218 1889567281)) (= x1914 (x1655 (- x1818 4))) (not (> 4 x1818)) (> x1921 0) (< x1218 3053082678) (= x1818 36)) x2146) (and (=> (and (not x2521) (and (= x700 (= x13 x1533)) (= x11 x1533))) (and (=> (not x700) x1656) (=> (and x700 (and (= x1925 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x652) (= x1231 (x2536 (x2119 x1533) (x1426 2) 0)) (= x2038 32) (>= x652 0) (= (x619 x1231) x652))) x1213))) (=> x2521 x1656))))) (=> (and x1544 (= x1456 x2163)) x1630))) (=> (and (not x2533) (= x2176 x1456)) x1121))) x977))
(assert (= x868 (and x1590 x438)))
(assert (= x2369 (and x762 x1629)))
(assert (x48 x1302))
(assert (= (and x1582 x406) x668))
(assert (= x2357 (and x206 x1042)))
(assert (= x2432 (and x254 x2005)))
(assert (= x2714 (and x147 x600)))
(assert (= x1242 (and (not x65) x1552)))
(assert (= (and (not x1468) x2605) x1546))
(assert (x48 x196))
(assert (x48 x2627))
(assert (= x2413 (and (not x2568) x1332)))
(assert (x48 x1861))
(assert (x48 x2509))
(assert (x48 x97))
(assert (x48 x1887))
(assert (x48 x1985))
(assert (= (and (not x119) x2470) x1027))
(assert (= x1008 (and x1498 (not x401))))
(assert (= (and x2684 x1007) x2354))
(assert (= x922 (=> (and (= x1938 x1456) (= x1399 (x1906 x1938)) (= (x434 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1172) x340) (= (x90 (+ x340 x1456)) x1370) (= (< 0 x1399) x2498) (= x1172 (x90 (+ x2113 31))) (not (= 0 x1435)) (not (or (and (= true (<= x2113 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2113)) (> x2113 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (not x2498) x1434) (=> (and x2498 (and (= (= x461 x2651) x1769) (> x1744 0) (= (x434 1461501637330902918203684832716283019655932542975 x1227) x2651) (= x2704 (x90 (+ 32 x2208))) (= x1744 (x1906 x2713)) (= (x90 (+ x2713 32)) x1758) (= x2208 (x90 (+ x1370 4))) (= (x434 1461501637330902918203684832716283019655932542975 x2033) x2030))) (and (=> (and x1769 (and (not (= x1652 2646777772)) (> x1859 0) (> 3053082678 x1652) (= x1652 2835717307) (= x1859 (x2406 (x2119 x461))) (= x685 (or (and (> 64 x232) (= (<= x232 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x232 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 68 x2499) (= x2540 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 1889567281 x1652)) (= x2168 x2030) (= x2627 x1399) (not (< x1652 2646777772)) (= x232 (x1655 (- x2499 4))) (not (< x2499 4)) (not (= x1652 2678909723)))) (and (=> (and (and (= x2168 x1016) (= x2624 (= x2030 x2168))) (not x685)) (and (=> (not x2624) x2249) (=> (and (and (= x2429 (x2536 (x2119 x13) (x1426 2) 0)) (= x1367 (< x449 x1399)) (<= x449 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x449) (= (x619 x2429) x449) (= x2035 x2627)) x2624) (and (=> x1367 x2249) (=> (and (not x1367) (= x1059 (< x449 x2627))) (and (=> x1059 x2249) (=> (and (not x1059) (and (<= 0 x1755) (= x2077 (x2536 (x2119 x2168) (x1426 2) 0)) (= (x2536 (x2119 x13) (x1426 2) 0) x1624) (= x2622 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2627))) (<= x1755 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x134 (> x1755 x2622)) (= x1258 (x1655 (- x449 x2627))) (= x1755 (x275 x2077)))) (and (=> x134 x2249) (=> (and (not x134) (and (= (x90 (+ x2627 x1755)) x898) (= x2668 (< x898 x1755)))) (and (=> (and (and (= 1 x684) (= 32 x1065) (= x563 x1372)) (not x2668)) x1282) (=> x2668 x2249))))))))))) (=> x685 x2249))) (=> (and (not x1769) (= (= x1815 x2651) x278)) (and (=> (and x278 (and (= x1399 x2247) (= x2130 x2030) (not (= 2646777772 x544)) (= (x1655 (- x1748 4)) x912) (not (> 2646777772 x544)) (< x544 3053082678) (not (> 1889567281 x544)) (= (or (and (> 64 x912) (= true (<= x912 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x912)) x81) (= x500 (x2406 (x2119 x1815))) (not (< x1748 4)) (= 2835717307 x544) (= 68 x1748) (= x2376 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2678909723 x544)) (> x500 0))) (and (=> (and (and (= x1737 x2130) (= (= x2030 x2130) x1935)) (not x81)) (and (=> (not x1935) x1150) (=> (and x1935 (and (<= x2373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2373 0) (= x2660 (x2536 (x2119 x13) (x1426 2) 0)) (= (> x1399 x2373) x486) (= x2373 (x1351 x2660)) (= x2247 x2235))) (and (=> (and (not x486) (= (< x2373 x2247) x2635)) (and (=> x2635 x1150) (=> (and (and (= x197 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247))) (<= x1791 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1791 (x1701 x2570)) (<= 0 x1791) (= (x1655 (- x2373 x2247)) x1225) (= (x2536 (x2119 x13) (x1426 2) 0) x1324) (= x2570 (x2536 (x2119 x2130) (x1426 2) 0)) (= (> x1791 x197) x2581)) (not x2635)) (and (=> (and (not x2581) (and (= x1388 (< x1918 x1791)) (= x1918 (x90 (+ x2247 x1791))))) (and (=> (and (not x1388) (and (= x282 x83) (= 1 x579) (= 32 x1270))) x2497) (=> x1388 x1150))) (=> x2581 x1150))))) (=> x486 x1150))))) (=> x81 x1150))) (=> (and (= (= x2651 x316) x1475) (not x278)) (and (=> (and (not x1475) (and (and (and (= x113 68) (not (= 2514000705 x2396)) (= (x2406 (x2119 x2744)) x973) (> x973 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2324) (not (= 1889567281 x2396)) (= x1381 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1502) (and (> 64 x1502) (= true (<= x1502 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x2396 2835717307) (not (= x2396 826074471)) (= x1399 x2150) (not (< x113 4)) (not (> 826074471 x2396)) (= x2030 x2006) (= x1502 (x1655 (- x113 4)))) x679) (= x679 (= x2651 x2744)))) (and (=> x1381 x913) (=> (and (not x1381) (and (= x2476 (= x2030 x2006)) (= x2006 x1046))) (and (=> (and x2476 (and (= (x2536 (x2119 x13) (x1426 1) 0) x2490) (= (x1572 x2490) x2641) (= x233 (< x2641 x1399)) (= x1725 x2150) (>= x2641 0) (<= x2641 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x233 x913) (=> (and (= (< x2641 x2150) x1409) (not x233)) (and (=> x1409 x913) (=> (and (not x1409) (and (= (> x1643 x2320) x1040) (= (x1655 (- x2641 x2150)) x2469) (= (x1986 x2672) x1643) (= x659 (x2536 (x2119 x13) (x1426 1) 0)) (= x2320 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2150))) (= (x2536 (x2119 x2006) (x1426 1) 0) x2672) (<= x1643 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1643 0))) (and (=> (and (not x1040) (and (= (> x1643 x1558) x12) (= x1558 (x90 (+ x1643 x2150))))) (and (=> (and (and (= 1 x648) (= 32 x1948) (= x1974 x2700) (= x74 (x2536 (x2119 x2006) (x1426 1) 0)) (= 1 x2228)) (not x12)) x2080) (=> x12 x913))) (=> x1040 x913))))))) (=> (not x2476) x913))))) (=> (and (and (= x1399 x738) (= x1447 68) (not (= x855 826074471)) (= (or (and (> 64 x1010) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1010))) (> x1010 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x168) (= (x1655 (- x1447 4)) x1010) (= x139 x2030) (= x708 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< 0 x1479) (= 2835717307 x855) (not (= x855 1889567281)) (not (< x1447 4)) (not (= x855 2514000705)) (not (< x855 826074471)) (= (x2406 (x2119 x316)) x1479)) x1475) (and (=> (and (and (= x298 (= x139 x2030)) (= x2152 x139)) (not x168)) (and (=> (and x298 (and (<= 0 x1412) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1412) (= x1412 (x639 x2588)) (= x2588 (x2536 (x2119 x13) (x1426 1) 0)) (= (< x1412 x1399) x1692) (= x568 x738))) (and (=> (and (not x1692) (= (> x738 x1412) x2118)) (and (=> (and (not x2118) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2486) (= x608 (x2536 (x2119 x139) (x1426 1) 0)) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x738)) x2471) (= x2323 (> x2486 x2471)) (>= x2486 0) (= x2486 (x2647 x608)) (= (x1655 (- x1412 x738)) x990) (= x1113 (x2536 (x2119 x13) (x1426 1) 0)))) (and (=> x2323 x2271) (=> (and (not x2323) (and (= x1483 (< x156 x2486)) (= (x90 (+ x2486 x738)) x156))) (and (=> x1483 x2271) (=> (and (not x1483) (and (= x1664 x1163) (= 32 x287) (= 1 x2575) (= x2125 1))) x2619))))) (=> x2118 x2271))) (=> x1692 x2271))) (=> (not x298) x2271))) (=> x168 x2271)))))))))))))
(assert (x48 x512))
(assert (x2129 x2424))
(assert (x48 x514))
(assert (x48 x962))
(assert (=> (>= 10000 x2082) (= (x1426 x2082) (x2119 x2082))))
(assert (= (and (not x2175) x2349) x2464))
(assert (= x783 (and x2681 x2086)))
(assert (= x1282 (=> (and (= x684 x2691) (= x1065 x1875)) x2139)))
(assert (x48 x2371))
(assert (= (and x2567 x1185) x2293))
(assert (= x732 (and x1993 x2189)))
(assert (x48 x2176))
(assert (x48 x64))
(assert (= (or x1667 x1254 x671 x802 x2615 x1366) x1554))
(assert (x48 x2032))
(assert (= (x1943 (x1426 74228146054641364427485594382366355075153451190847473373747070783662162182144)) 74228146054641364427485594382366355075153451190847473373747070783662162182144))
(assert (x48 x209))
(assert (= x864 (and x1988 x701)))
(assert (= (and x2102 x732) x2646))
(assert (=> (>= 10000 x779) (= (x1426 x779) (x2119 x779))))
(assert (= x1079 (and x2645 (not x86))))
(assert (= (and x372 x939) x1469))
(assert (x48 x1648))
(assert (x48 x777))
(assert (= (and x267 (not x73)) x2239))
(assert (x48 x8))
(assert (x48 x2088))
(assert (=> (>= 10000 x60) (= (x2119 x60) (x1426 x60))))
(assert (= (and x1580 (not x1379)) x1718))
(assert (x48 x837))
(assert (x48 x1272))
(assert (= x2341 (=> (and (= x2187 x2113) (= x1411 x1435)) x922)))
(assert (x48 x1026))
(assert (= (and x1039 x2307) x47))
(assert (= (and x51 x1847) x566))
(assert (x48 x1103))
(assert (= (and (not x55) x1319) x147))
(assert (= (or x453 x1834) x699))
(assert (x48 x871))
(assert (x48 x2436))
(assert (x48 x2446))
(assert (= x1868 (and (not x193) x2112)))
(assert (= x495 (and x2694 x2220)))
(assert (x48 x712))
(assert (x48 x2679))
(assert (x2129 x2451))
(assert (x48 x2318))
(assert (x48 x1195))
(assert (x48 x556))
(assert (x48 x1214))
(assert (= (and x233 x430) x2312))
(assert (x48 x968))
(assert (= x1886 (=> (and (= x519 x2088) (= x1548 x2603)) x1095)))
(assert (x48 x1445))
(assert (= (and x531 x2663) x2650))
(assert (x48 x2458))
(assert (= (and x1594 x817) x323))
(assert (= x1320 (and x2727 x1146)))
(assert (x48 x2190))
(assert (= (=> (and (= (= 0 x1968) x2733) (or x2733 (not x2733))) x2689) x1256))
(assert (x48 x19))
(assert (x48 x1124))
(assert (= (x2119 2646777772) (x1426 2646777772)))
(assert (= x530 (or x235 x551)))
(assert (= (x2119 604024478) (x1426 604024478)))
(assert (=> (<= x2651 10000) (= (x2119 x2651) (x1426 x2651))))
(assert (x48 x855))
(assert (= x998 (or (and x2389 x2302) x591 x2413 x2094 x2148 x1389 (and x883 x2124) (and (not x769) x2134))))
(assert (= x1735 (and x437 (not x2456))))
(assert (x48 x1589))
(assert (= x2522 (and x2267 x967)))
(assert (= (=> (and (= x41 x2600) (= x1595 x174)) x740) x2618))
(assert (x48 x1163))
(assert (x48 x970))
(assert (= (and (not x2273) x1345) x1542))
(assert (x1376 x2553))
(assert (x48 x2659))
(assert (x48 x2207))
(assert (x48 x2416))
(assert (x48 x1741))
(assert (x48 x2285))
(assert (= x316 (x1943 (x2119 x316))))
(assert (x48 x293))
(assert (= x2711 (and x2729 (not x29))))
(assert (x48 x1270))
(assert (= x244 (and x582 (not x1626))))
(assert (=> (<= x540 10000) (= (x2119 x540) (x1426 x540))))
(assert (x48 x1635))
(assert (x48 x22))
(assert (x2129 x1339))
(assert (= x1601 (and x2729 x29)))
(assert (= x1198 (or x1328 x1559 x1694 x1562 x1477 x2614)))
(assert (= (and (not x121) x240) x909))
(assert (= x1878 (and x1409 x888)))
(assert (x48 x1612))
(assert (x48 x975))
(assert (= x782 (=> (and (<= 0 x1462) (<= x1462 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1462 (x150 x2656)) (= (x2536 (x2119 x779) (x1426 17) 0) x623) (= x2656 (x2536 (x2119 x843) x623 0)) (= (x434 1461501637330902918203684832716283019655932542975 x300) x2061) (= x779 (x434 1461501637330902918203684832716283019655932542975 x300)) (= x777 128) (= (= x461 x2061) x2087)) (and (=> (and x2087 (and (not (> 4 x1445)) (not (> 2646777772 x251)) (= 2835717307 x251) (= x1445 68) (= x1776 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< x251 3053082678) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586)) (< x1586 64))) x949) (= x1445 68) (not (= 2678909723 x251)) (= x1586 (x1655 (- x1445 4))) (= x1204 x110) (< 0 x180) (not (= x251 2646777772)) (not (> 1889567281 x251)) (= x1462 x2192) (= (x2406 (x2119 x461)) x180))) (and (=> x949 x2097) (=> (and (= x943 (= x1204 x110)) (not x949)) (and (=> (and (and (<= x346 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x346) (= x1341 x2192) (= x2154 (x2536 (x2119 x1815) (x1426 2) 0)) (= (< x346 x1462) x2096) (= x346 (x387 x2154))) x943) (and (=> (and (not x2096) (= (< x346 x2192) x2551)) (and (=> x2551 x2097) (=> (and (not x2551) (and (= (x2227 x1006) x2675) (= x195 (> x2675 x2506)) (= x2506 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2192))) (<= 0 x2675) (= (x1655 (- x346 x2192)) x1822) (= (x2536 (x2119 x1815) (x1426 2) 0) x641) (<= x2675 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1006 (x2536 (x2119 x60) (x1426 2) 0)))) (and (=> (and (not x195) (and (= (x90 (+ x2675 x2192)) x2104) (= x238 (> x2675 x2104)))) (and (=> x238 x2097) (=> (and (and (= 32 x797) (= 1 x1064) (= x2053 (x2536 (x2119 x60) (x1426 2) 0))) (not x238)) x1646))) (=> x195 x2097))))) (=> x2096 x2097))) (=> (not x943) x2097))))) (=> (and (not x2087) (= x1295 (= x1815 x2061))) (and (=> (and (= x2547 (= x316 x2061)) (not x1295)) (and (=> (and (and (= 2835717307 x377) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x166) (not (= x377 826074471)) (= x1462 x1082) (= (x1655 (- x1956 4)) x131) (not (= 1889567281 x377)) (= 68 x1956) (not (> 826074471 x377)) (= x193 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x131) true) (> 64 x131)) (> x131 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x110 x2460) (not (< x1956 4)) (= 68 x1956) (not (= 2514000705 x377)) (< 0 x955) (= (x2406 (x2119 x316)) x955)) x2547) (and (=> (and (not x193) (= x2218 (= x110 x2460))) (and (=> (not x2218) x2411) (=> (and x2218 (and (>= x2068 0) (= x1650 x1082) (<= x2068 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2149 x25) x2068) (= x2292 (< x2068 x1462)) (= (x2536 (x2119 x1815) (x1426 1) 0) x25))) (and (=> x2292 x2411) (=> (and (= x1185 (< x2068 x1082)) (not x2292)) (and (=> (and (not x1185) (and (= (x1655 (- x2068 x1082)) x2709) (= (> x27 x1783) x1668) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x27) (= x1285 (x2536 (x2119 x1815) (x1426 1) 0)) (= (x724 x1616) x27) (>= x27 0) (= (x2536 (x2119 x60) (x1426 1) 0) x1616) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1082)) x1783))) (and (=> (and (and (= (> x27 x1084) x1083) (= (x90 (+ x1082 x27)) x1084)) (not x1668)) (and (=> x1083 x2411) (=> (and (not x1083) (and (= 1 x1811) (= x2515 32) (= x1135 1) (= (x2536 (x2119 x60) (x1426 1) 0) x2434))) x2519))) (=> x1668 x2411))) (=> x1185 x2411))))))) (=> x193 x2411))) (=> (and (not x2547) (and (= x2559 (= x2744 x2061)) (and (and (not (> 4 x2702)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x632) (= x1779 2835717307) (not (= x1779 2514000705)) (= x293 x110) (= 68 x2702) (not (= x1779 826074471)) (> x709 0) (= x1462 x2092) (= (x2406 (x2119 x2744)) x709) (not (< x1779 826074471)) (not (= 1889567281 x1779)) (= 68 x2702) (= x2265 (x1655 (- x2702 4))) (= (or (and (= true (<= x2265 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2265 64)) (> x2265 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x55)) x2559))) (and (=> x55 x792) (=> (and (= (= x293 x110) x600) (not x55)) (and (=> (and (and (= x2092 x2397) (= x444 (< x837 x1462)) (<= 0 x837) (= x837 (x1824 x2607)) (= x2607 (x2536 (x2119 x1815) (x1426 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x837)) x600) (and (=> (and (not x444) (= (> x2092 x837) x967)) (and (=> x967 x792) (=> (and (and (<= 0 x2062) (= x2215 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2092))) (= (> x2062 x2215) x1521) (<= x2062 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2166 (x2536 (x2119 x1815) (x1426 1) 0)) (= x2585 (x1655 (- x837 x2092))) (= x963 (x2536 (x2119 x60) (x1426 1) 0)) (= (x1048 x963) x2062)) (not x967)) (and (=> x1521 x792) (=> (and (not x1521) (and (= x1144 (> x2062 x1893)) (= x1893 (x90 (+ x2062 x2092))))) (and (=> (and (not x1144) (and (= (x2536 (x2119 x60) (x1426 1) 0) x1446) (= 1 x1682) (= 32 x1169) (= x2562 1))) x396) (=> x1144 x792))))))) (=> x444 x792))) (=> (not x600) x792))))))) (=> (and x1295 (and (= 68 x2196) (= x1136 x110) (= (x2406 (x2119 x1815)) x1794) (= (x1655 (- x2196 4)) x1267) (not (> 2646777772 x4)) (not (= x4 2646777772)) (= x1462 x2313) (> 3053082678 x4) (not (< x2196 4)) (= x1765 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 1889567281 x4)) (= x4 2835717307) (= (or (> x1267 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1267 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1267))) x51) (> x1794 0) (= x2196 68) (not (= x4 2678909723)))) (and (=> (and (= x2409 (= x110 x1136)) (not x51)) (and (=> (not x2409) x1836) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x62) (= (x2536 (x2119 x1815) (x1426 2) 0) x1569) (= (x186 x1569) x62) (= x2313 x1895) (<= 0 x62) (= x645 (< x62 x1462))) x2409) (and (=> x645 x1836) (=> (and (= x2143 (> x2313 x62)) (not x645)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x45) (>= x45 0) (= (< x318 x45) x435) (= (x2536 (x2119 x1815) (x1426 2) 0) x2398) (= (x1192 x1523) x45) (= x318 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2313))) (= (x1655 (- x62 x2313)) x2561) (= x1523 (x2536 (x2119 x60) (x1426 2) 0))) (not x2143)) (and (=> (and (and (= (> x45 x411) x1436) (= (x90 (+ x45 x2313)) x411)) (not x435)) (and (=> x1436 x1836) (=> (and (and (= x996 (x2536 (x2119 x60) (x1426 2) 0)) (= 1 x1440) (= 32 x178)) (not x1436)) x111))) (=> x435 x1836))) (=> x2143 x1836))))))) (=> x51 x1836)))))))))
(assert (= x2158 (=> (and (= x718 x171) (= 0 x213)) x390)))
(assert (= x1543 (and x339 x2652)))
(assert (= (=> (= (= x1968 0) x2477) (and (=> x2477 x1989) (=> (and (and (= (= x599 0) x1188) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x599) (>= x599 0)) (not x2477)) (and (=> x1188 x424) (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x1066) (<= 0 x599) (> 1461501637330902918203684832716283019655932542976 x1066) (>= x1066 0) (= 128 x1996) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x599) (= x2153 (= x1066 x461))) (not x1188)) (and (=> (and (and (= x1471 x599) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1276) (and (< x1276 64) (= true (<= x1276 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1942) (> 1889567281 x361) (not (> 856900995 x361)) (not (= x361 872247156)) (= 1086394137 x361) (not (= x361 856900995)) (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x1206) (= x744 (x2406 (x2119 x461))) (not (> 4 x2248)) (not (> 604024478 x361)) (= x2248 68) (= x1276 (x1655 (- x2248 4))) (> x744 0) (= x2248 68) (= x1635 x2082)) x2153) (and (=> (and (and (= x330 (= x2082 x1635)) (= x2082 x834)) (not x1942)) (and (=> (not x330) x2455) (=> (and (and (= x2117 x1471) (<= 0 x77) (<= x77 1461501637330902918203684832716283019655932542975) (= (= x77 x223) x2314) (> 1461501637330902918203684832716283019655932542976 x77)) x330) (and (=> (and (= x844 (= x2082 0)) x2314) (and (=> (and (not x844) (= (= 0 x1471) x1424)) (and (=> (and (not x1424) (and (>= x1817 0) (= (> x1817 x440) x509) (= x440 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1471))) (<= x1817 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x509 x2455) (=> (and (and (<= 0 x2593) (= x525 (< x440 x2593)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2593) (= (x552 x253) x2593) (= x1386 (x90 (+ x1471 x1817))) (= x253 (x2536 (x2119 x2082) (x1426 2) 0))) (not x509)) (and (=> (and (and (= x993 1) (= x970 1) (= x1969 (x2536 (x2119 x2082) (x1426 2) 0)) (= x129 (x90 (+ x2593 x1471))) (= 32 x1979)) (not x525)) x1032) (=> x525 x2455))))) (=> x1424 x2455))) (=> x844 x2455))) (=> (not x2314) x2455))))) (=> x1942 x2455))) (=> (and (and (= (= x1066 x1815) x1587) (and (and (= x338 1086394137) (not (> 604024478 x338)) (= (or (> x1086 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1086 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1086 64))) x2242) (= 68 x2241) (not (> 4 x2241)) (not (< x338 856900995)) (= x599 x383) (= x1086 (x1655 (- x2241 4))) (= x1745 (x2406 (x2119 x1815))) (= x1635 x1391) (> 1889567281 x338) (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x1208) (= 68 x2241) (not (= x338 872247156)) (not (= x338 856900995)) (< 0 x1745)) x1587)) (not x2153)) (and (=> (and (and (= (= x1635 x1391) x169) (= x1391 x886)) (not x2242)) (and (=> (and x169 (and (>= x1296 0) (= x383 x1377) (>= 1461501637330902918203684832716283019655932542975 x1296) (< x1296 1461501637330902918203684832716283019655932542976) (= (= x223 x1296) x1060))) (and (=> (and (= (= 0 x1391) x1992) x1060) (and (=> (and (= x537 (= x383 0)) (not x1992)) (and (=> x537 x1397) (=> (and (and (<= x236 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x236 x1038) x845) (= x1038 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x383))) (<= 0 x236)) (not x537)) (and (=> (and (and (= (x379 x1500) x373) (= (x90 (+ x383 x236)) x2284) (>= x373 0) (= x1500 (x2536 (x2119 x1391) (x1426 2) 0)) (<= x373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1175 (> x373 x1038))) (not x845)) (and (=> x1175 x1397) (=> (and (not x1175) (and (= 32 x1740) (= x2230 (x90 (+ x383 x373))) (= x2463 1) (= 1 x2344) (= x1024 (x2536 (x2119 x1391) (x1426 2) 0)))) x1929))) (=> x845 x1397))))) (=> x1992 x1397))) (=> (not x1060) x1397))) (=> (not x169) x1397))) (=> x2242 x1397))))))))) x2689))
(assert (x48 x2630))
(assert (x48 x384))
(assert (x48 x2471))
(assert (x48 x421))
(assert (x48 x918))
(assert (= x1615 (=> (and (= 0 x1715) (= x271 x2042)) x969)))
(assert (x48 x534))
(assert (x48 x640))
(assert (x48 x2590))
(assert (x48 x748))
(assert (= x2508 (=> (and (= x1129 (= x892 0)) (or x1129 (not x1129))) x1736)))
(assert (x48 x1327))
(assert (= x1719 (and x1301 x446)))
(assert (= x2327 (=> (and (= x2266 (not (> x2530 4))) (= x2359 (x90 (+ x1118 32))) (= (x631 x2317) x1001) (= x224 (x90 (+ 32 x2317)))) (and (=> (and (= x2359 x2181) (= 4 x523) (= x224 x2512)) x2246) x2266))))
(assert (x48 x2211))
(assert (x48 x1963))
(assert (= x2670 (and x2733 x1474)))
(assert (x48 x1303))
(assert (x48 x1326))
(assert (x48 x730))
(assert (= x2632 (and x1786 (not x587))))
(assert (x2254 x1835))
(assert (x48 x2204))
(assert (x48 x563))
(assert (= x2705 (and (not x609) x852)))
(assert (= (and x1897 (not x125)) x488))
(assert (= (x1943 (x1426 72223263258191293651604190264004579703475585967499159981614695267027195527168)) 72223263258191293651604190264004579703475585967499159981614695267027195527168))
(assert (=> (<= x914 10000) (= (x1426 x914) (x2119 x914))))
(assert (x48 x1922))
(assert (= (=> (and (= x465 x1548) (= x1383 x2088)) x1095) x2058))
(assert (x48 x1974))
(assert (x48 x1386))
(assert (x48 x1412))
(assert (x48 x498))
(assert (x48 x633))
(assert (x48 x647))
(assert (= x735 (and (not x857) x1096)))
(assert (x48 x2006))
(assert (= (x1943 (x1426 3053082678)) 3053082678))
(assert (= x2433 (=> (and (= x1055 x289) (= x1661 x1408)) x468)))
(assert (= (and x609 x852) x2461))
(assert (x48 x1833))
(assert (x2129 x2744))
(assert (= (and x436 (not x1501)) x2708))
(assert (= x1966 (and x10 x1976)))
(assert (= (or x1947 x754) x1618))
(assert (x48 x200))
(assert (= x999 (and x169 x1439)))
(assert (= (and x2638 (not x1769)) x248))
(assert (x48 x75))
(assert (= (and x849 x875) x1406))
(assert (x48 x370))
(assert (= (and x2662 (not x1717)) x268))
(assert (x48 x1591))
(assert (x48 x2198))
(assert (= x959 (and x2605 x1468)))
(assert (x48 x519))
(assert (= (and x2023 x2027) x2155))
(assert (x48 x1874))
(assert (x48 x669))
(assert (= (and x885 x2213) x1563))
(assert (= (=> (= x2172 x2715) x1686) x1800))
(assert (= x2549 (and x2418 x2683)))
(assert (= (=> (and (= 0 x457) (= x1833 x1865)) x374) x733))
(assert (x2129 x60))
(assert (x48 x371))
(assert (x48 x1234))
(assert (= x1743 (and x191 x655)))
(assert (x48 x265))
(assert (x48 x863))
(assert (x48 x418))
(assert (x48 x1890))
(assert (= (and x1909 x1802) x1310))
(assert (x48 x1513))
(assert (=> (<= x1382 10000) (= (x1426 x1382) (x2119 x1382))))
(assert (x48 x1355))
(assert (x48 x91))
(assert (= (x1943 (x2119 x285)) x285))
(assert (x48 x976))
(assert (= x2510 (and (not x1797) x1842)))
(assert (= x1259 (and x1795 x629)))
(assert (= x719 (=> (and (= x1960 0) (= x1865 x1689)) x333)))
(assert (= (and x2282 x1920) x1795))
(assert (= (and x389 x1581) x124))
(assert (x48 x236))
(assert (x48 x2305))
(assert (= (and (not x896) x2263) x128))
(assert (x48 x1280))
(assert (= (x1943 (x1426 856900995)) 856900995))
(assert (= x2418 (and x190 (not x2076))))
(assert (x48 x1277))
(assert (x48 x2386))
(assert (x2129 x540))
(assert (x48 x1738))
(assert (x48 x987))
(assert (= x2006 (x1943 (x2119 x2006))))
(assert (x48 x131))
(assert (x48 x1791))
(assert (= x2620 (=> (= (< 0 x1870) x667) (and (=> (not x667) x225) (=> (and x667 (= (= 0 x154) x388)) (and (=> (and x388 (and (= x716 (x2406 (x2119 x200))) (= (< 0 x716) x2568))) (and (=> (not x2568) x225) (=> (and (= 1 x1810) x2568) x901))) (=> (and (not x388) (= x1581 (= 32 x154))) (and (=> (not x1581) x225) (=> (and (and (= x1810 (ite x1413 1 0)) (= x1413 (not x9)) (= x9 (= x2001 0))) x1581) x901)))))))))
(assert (x48 x155))
(assert (x48 x736))
(assert (x48 x1176))
(assert (= (x1426 48119142951092613731468242753959111846395615040638799039548226541748339343360) (x2119 48119142951092613731468242753959111846395615040638799039548226541748339343360)))
(assert (= (x1426 826074471) (x2119 826074471)))
(assert (= (and x651 x2074) x2583))
(assert (x2129 x2130))
(assert (= x1531 (and (not x1594) x817)))
(assert (not x1022))
(assert (x48 x2317))
(assert (x48 x1318))
(assert (x48 x120))
(assert (x48 x1530))
(assert (x48 x1924))
(assert (= x2430 (and x2711 (not x895))))
(assert (x48 x1459))
(assert (x48 x2691))
(assert (x48 x1740))
(assert (x48 x1001))
(assert (= x750 (and x470 x2538)))
(assert (= x355 (and x2549 x1168)))
(assert (= x1999 (or x868 x1262 x728 x70 x2646 x2322)))
(assert (= (x2119 1784838210) (x1426 1784838210)))
(assert (= (and (not x1475) x99) x957))
(assert (x48 x1236))
(assert (x48 x1411))
(assert (x2129 x1382))
(assert (x48 x2474))
(assert (= (=> (and (= x1021 x2515) (= x1811 x2007)) x1182) x2519))
(assert (x48 x1422))
(assert (= (=> (and (= x2305 x154) (= x1870 x97)) x2319) x15))
(assert (x48 x961))
(assert (= x1533 (x1943 (x2119 x1533))))
(assert (= (and x1451 x1424) x1216))
(assert (= x472 (or x2090 (and (not x497) x2063))))
(assert (x48 x965))
(assert (x48 x451))
(assert (= (and (not x308) x2430) x148))
(assert (= x1625 (and x2533 x530)))
(assert (x48 x1755))
(assert (x48 x1732))
(assert (= (=> (= (= x2088 0) x986) (and (=> x986 x2002) (=> (and (= (or (> x1548 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1548)) (< x1548 32))) x1626) (not x986)) (and (=> (and (= 1 x2524) (not x1626)) x763) (=> x1626 x2002))))) x448))
(assert (= (=> (= x2257 x1968) x1256) x2141))
(assert (= (and (not x460) x112) x161))
(assert (= x1565 (and (not x776) x201)))
(assert (= (and x2349 x2175) x2151))
(assert (x48 x14))
(assert (x48 x956))
(assert (x48 x2396))
(assert (= (=> (and (= x1257 x1740) (= x1448 x2344)) x295) x1929))
(assert (= (=> (and (= x1955 x354) (= x2202 x1111)) x2043) x1923))
(assert (x48 x2033))
(assert (= 826074471 (x1943 (x1426 826074471))))
(assert (x48 x4))
(assert (x48 x1715))
(assert (= (and (not x203) x1217) x1371))
(assert (= x2249 (=> (and (= x1065 x1126) (= x684 0)) x1282)))
(assert (= x441 (=> (and (or x1455 (not x1455)) (= x1455 (= 0 x694))) x529)))
(assert (x48 x1602))
(assert (x48 x247))
(assert (= (and x28 x435) x2385))
(assert (x48 x1118))
(assert (x48 x2696))
(assert (x48 x60))
(assert (x48 x2440))
(assert (x48 x1593))
(assert (= x627 (and x491 x1546)))
(assert (x48 x739))
(assert (x48 x212))
(assert (x48 x1758))
(assert (x48 x1729))
(assert (= (and x1590 (not x438)) x2480))
(assert (= x2304 (and x1123 x1444)))
(assert (x48 x2600))
(assert (x48 x1841))
(assert (x48 x2359))
(assert (= x415 (and x2332 x2712)))
(assert (= (x1943 (x1426 29289127993025145568725129057828671567744754166070328588094505464281371246592)) 29289127993025145568725129057828671567744754166070328588094505464281371246592))
(assert (= x789 (or x2199 x2555)))
(assert (x48 x160))
(assert (= x207 (and (not x943) x1427)))
(assert (= (and x2567 (not x1185)) x2291))
(assert (= (=> (and (= x2113 x2038) (= x1435 x1925)) x922) x1213))
(assert (= x1486 (or x2685 x2673 x1864 x1102 x207 x176)))
(assert (x48 x2392))
(assert (x48 x36))
(assert (x48 x2161))
(assert (= x1900 (and (not x2022) x2039)))
(assert (x48 x1111))
(assert (= x779 (x1943 (x2119 x779))))
(assert (= (and x2151 x1063) x2049))
(assert (x48 x467))
(assert (= x816 (x1943 (x2119 x816))))
(assert (x48 x1046))
(assert (= (and x1531 (not x1645)) x2328))
(assert (= (or (and x1145 (not x220)) x2340) x1217))
(assert (x48 x2499))
(assert (x48 x403))
(assert (x48 x1650))
(assert (= (or x1838 x983 x1207 x575) x2687))
(assert (= (and x1093 x1349) x1009))
(assert (x48 x1336))
(assert (x48 x1682))
(assert (=> (<= x756 10000) (= (x2119 x756) (x1426 x756))))
(assert (x48 x2214))
(assert (x48 x2203))
(assert (= x2421 (or x1949 x2270)))
(assert (= (and x2079 x949) x1864))
(assert (= (and x2703 x2526) x1899))
(assert (x48 x232))
(assert (x48 x1666))
(assert (x48 x368))
(assert (= x2365 (and (not x1690) x2055)))
(assert (x48 x2494))
(assert (x48 x285))
(assert (= x374 (=> (and (= x1833 x41) (= x174 x457)) x740)))
(assert (= (and x1526 x908) x1360))
(assert (= (and x2581 x1557) x202))
(assert (x48 x930))
(assert (x48 x50))
(assert (x2545 x1227))
(assert (x48 x934))
(assert (x48 x204))
(assert (= (or x560 x1780) x427))
(assert (= x136 (x1943 (x2119 x136))))
(assert (= x229 (and x488 x626)))
(assert (x48 x281))
(assert (x48 x1187))
(assert (x48 x2181))
(assert (= (or x737 x164) x2182))
(assert (x48 x1908))
(assert (x48 x544))
(assert (= x994 (and (not x1299) x2534)))
(assert (x48 x2621))
(assert (x48 x1267))
(assert (= (x2119 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1426 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x48 x794))
(assert (= (x1943 (x2119 x2424)) x2424))
(assert (x48 x2238))
(assert (x48 x2202))
(assert (= (=> (and (= x2719 0) (= x1665 x1865)) x1291) x1240))
(assert (x48 x226))
(assert (x48 x743))
(assert (x48 x662))
(assert (= (and x1072 x2096) x2685))
(assert (x48 x1663))
(assert (x48 x813))
(assert (x48 x2553))
(assert (x48 x632))
(assert (= x2060 (or x415 x1173)))
(assert (= x2130 (x1943 (x2119 x2130))))
(assert (x48 x523))
(assert (x48 x2530))
(assert (= x1809 (and x1499 x1196)))
(assert (= x591 (and (not x1581) x389)))
(assert (= x785 (and x2511 x2234)))
(assert (= (or x458 x2293 x946 x1567 x809 x1742) x1322))
(assert (x48 x428))
(assert (= (and x1319 x55) x781))
(assert (x2129 x583))
(assert (= x867 (and x750 (not x1545))))
(assert (x48 x1516))
(assert (x48 x786))
(assert (= x762 (and (not x1493) x1458)))
(assert (= x2252 (and x2269 x571)))
(assert (= x543 (and x1897 x125)))
(assert (= x1180 (or x2445 x1153 x1360 x2260 x1937 x2304)))
(assert (= (and x1200 x1640) x919))
(assert (x48 x1893))
(assert (x2129 x1197))
(assert (x48 x2258))
(assert (x48 x2117))
(assert (x48 x1955))
(assert (=> (<= x1391 10000) (= (x2119 x1391) (x1426 x1391))))
(assert (x48 x2336))
(assert (x48 x694))
(assert (x48 x1973))
(assert (x48 x824))
(assert (= (and (not x1301) x446) x638))
(assert (x48 x1081))
(assert (x48 x2280))
(assert (x48 x2299))
(assert (x48 x1033))
(assert (x48 x1725))
(assert (= x1993 (and x1592 (not x765))))
(assert (= (and x2282 (not x1920)) x1754))
(assert (= x2288 (and x1330 (not x772))))
(assert (= (x1943 (x2119 x2744)) x2744))
(assert (x48 x313))
(assert (= x1480 (and (not x406) x1582)))
(assert (x48 x2489))
(assert (= (x2119 2514000705) (x1426 2514000705)))
(assert (x48 x774))
(assert (= x1937 (and x546 x1313)))
(assert (= (and x1330 x772) x2613))
(assert (= x2079 (and x1883 x2087)))
(assert (x48 x2700))
(assert (x48 x1502))
(assert (= (=> (and (= x718 x1111) (= x354 0)) x1923) x927))
(assert (= x843 (x1943 (x2119 x843))))
(assert (= x1457 (or (and x2256 (not x1644)) x1393)))
(assert (x48 x1462))
(assert (x48 x463))
(assert (x48 x2412))
(assert (= (x2119 16284467712533504949339770971755156993396464521235680726719773044698144309248) (x1426 16284467712533504949339770971755156993396464521235680726719773044698144309248)))
(assert (= (and (not x486) x1137) x2589))
(assert (x48 x1094))
(assert (= x1275 (and (not x2664) x1825)))
(assert (= x1466 (or x668 x1467 x1281 x1419 x1495 x741)))
(assert (x48 x828))
(assert (= (or x427 x505) x1474))
(assert (= x71 (and x1832 x1768)))
(assert (x48 x1664))
(assert (x48 x2414))
(assert (x2129 x891))
(assert (= x815 (and (not x2523) x1638)))
(assert (x1376 x673))
(assert (x1376 x2221))
(assert (= (x1943 (x2119 x200)) x200))
(assert (= (x1177 x1821) 0))
(assert (x48 x877))
(assert (x48 x332))
(assert (= x2716 (and x845 x2197)))
(assert (= x66 (and x2267 (not x967))))
(assert (x2129 x756))
(assert (= x470 (and x2134 x769)))
(assert (= (and x776 x201) x2666))
(assert (x48 x2463))
(assert (= (and x121 x240) x1553))
(assert (x48 x1822))
(assert (x48 x1402))
(assert (= (x1943 (x945 x997 1)) (+ (x1943 x997) 1)))
(assert (= x1834 (and x1146 (not x2727))))
(assert (x2129 x2082))
(assert (x48 x271))
(assert (= x2739 (=> (and (= x217 x1666) (= x2204 0)) x423)))
(assert (x48 x1737))
(assert (x48 x2108))
(assert (= 2514000705 (x1943 (x1426 2514000705))))
(assert (x48 x675))
(assert (x48 x353))
(assert (x48 x136))
(assert (x48 x695))
(assert (x48 x1225))
(assert (= x550 (=> (< 0 x1044) x1434)))
(assert (= x424 (=> (and (<= x599 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x599) (= 32 x1303) (= x613 1)) x143)))
(assert (= x1000 (and x86 x2645)))
(assert (= x436 (or x2095 (and (not x1957) x1683))))
(assert (= (or x1953 x1678 x1140 x1250) x1881))
(assert (= x1482 (and (not x2179) x2120)))
(assert (x2254 x1527))
(assert (= (and (not x2695) x520) x2404))
(assert (= (and x697 x801) x104))
(assert (x48 x1527))
(assert (= (and x2676 x1637) x6))
(assert (= x520 (and x283 x2329)))
(assert (= (and (not x2511) x2234) x1196))
(assert (= x2134 (and (not x2124) x883)))
(assert (= (and x1553 (not x602)) x452))
(assert (= (and (not x949) x2079) x1427))
(assert (= (=> (and (and (= (= x1978 0) x548) (not (= 0 x2715)) (= (x90 (+ x2713 x966)) x1456) (= (x2518 128) x1978) (= (mod (* x1978 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2198) (= x966 (x90 (+ x2198 32)))) (or (and (and (= x59 (mod (* 32 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2278 (x90 (+ 32 x2713)))) (not x548)) x548)) x977) x1680))
(assert (x48 x2585))
(assert (= x2253 (or x2252 (and x2269 (not x571)))))
(assert (= x1954 (and (not x1060) x999)))
(assert (x2545 x1835))
(assert (x48 x1603))
(assert (x48 x1287))
(assert (x48 x11))
(assert (= x2697 (and x1930 x122)))
(assert (= x1269 (and x957 (not x679))))
(assert (= (and (not x1321) x506) x172))
(assert (= (and (not x929) x1077) x2513))
(assert (= (or (and (not x2478) x358) x1564) x1485))
(assert (x48 x1956))
(assert (x48 x2008))
(assert (x48 x1529))
(assert (= x687 (x1943 (x2119 x687))))
(assert (x48 x1831))
(assert (= (and x2720 x294) x219))
(assert (= x68 (and (not x2551) x493)))
(assert (= (x1943 (x2119 x2299)) x2299))
(assert (x48 x170))
(assert (x48 x903))
(assert (x48 x297))
(assert (= (and x856 x1122) x686))
(assert (x48 x23))
(assert (x2254 x1227))
(assert (x48 x892))
(assert (= 0 (x1177 x1938)))
(assert (= x634 (and x2666 x410)))
(assert (x48 x465))
(assert (x48 x1170))
(assert (x48 x1224))
(assert (x48 x594))
(assert (= (and x95 x1855) x2671))
(assert (x48 x2309))
(assert (x48 x2104))
(assert (x48 x2515))
(assert (x48 x1161))
(assert (=> (>= 10000 x2424) (= (x2119 x2424) (x1426 x2424))))
(assert (= (or x1596 (and (not x1325) x1967)) x2693))
(assert (x48 x779))
(assert (x48 x1711))
(assert (= (x1177 x69) 0))
(assert (x48 x614))
(assert (= (=> (= x2257 0) x2141) x1712))
(assert (x48 x2512))
(assert (x48 x1851))
(assert (= (=> (and (= x2440 x1548) (= x1961 x2088)) x1095) x2584))
(assert (= x2462 (and (not x2722) x508)))
(assert (x48 x1790))
(assert (= (or x1819 x2060 x911 x2182) x1583))
(assert (= (or x123 x2636) x1819))
(assert (= x1654 (and x530 (not x2533))))
(assert (= x2577 (and (not x1144) x1816)))
(assert (x48 x2542))
(assert (x48 x1204))
(assert (= x1742 (and x1868 (not x2218))))
(assert (= x240 (and x2250 (not x1674))))
(assert (= x1073 (or x2421 x1636)))
(assert (= (and x1096 x857) x1345))
(assert (x48 x377))
(assert (= (and (not x1346) x2019) x2389))
(assert (x48 x1689))
(assert (x48 x198))
(assert (= (and x330 x1507) x1808))
(assert (= x2451 (x1943 (x2119 x2451))))
(assert (= (or x1255 x1315 x2563 x2342 x1830 x780) x1876))
(assert (= (x1943 (x1426 2952933380)) 2952933380))
(assert (x48 x1126))
(assert (x48 x252))
(assert (= (x2119 3459381112) (x1426 3459381112)))
(assert (= x2199 (and (not x720) x1371)))
(assert (x48 x1114))
(assert (= (=> (and (= x1662 x2437) (= 0 x1272)) x1431) x1691))
(assert (x48 x2361))
(assert (= (and x1379 x1580) x823))
(assert (= (x1943 (x2119 x1339)) x1339))
(assert (= (and (not x283) x2329) x802))
(assert (x48 x2561))
(assert (x2129 x1391))
(assert (x48 x1399))
(assert (=> (>= 10000 x2130) (= (x1426 x2130) (x2119 x2130))))
(assert (x48 x1064))
(assert (x48 x72))
(assert (x48 x300))
(assert (= (and x2291 (not x1668)) x819))
(assert (x2545 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x979 (and x128 x1420)))
(assert (= x2220 (and x263 (not x2653))))
(assert (x48 x2525))
(assert (x48 x879))
(assert (= (and (not x49) x2625) x1334))
(assert (= x164 (and x404 x800)))
(assert (= x2256 (or x715 x67 x1356 x2300)))
(assert (x48 x1875))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1943 (x1426 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (and (not x2169) x1605) x2534))
(assert (= x1158 (and x1232 x2118)))
(assert (x48 x2373))
(assert (= x2271 (=> (and (= x287 x1126) (= x2125 0)) x2619)))
(assert (x48 x2609))
(assert (x48 x2667))
(assert (= x901 (=> (= (> x1810 0) x2394) (and (=> (and (and (= x891 x1861) (= 1 x892) (= x583 x2669) (= x1527 x1970) (= x910 x1197) (= x2207 x547) (= x300 x2644)) x2394) x2508) (=> (not x2394) x225)))))
(assert (= x1526 (and x546 (not x1313))))
(assert (x48 x2397))
(assert (x2129 x1815))
(assert (x2129 x934))
(assert (= (and x1767 x2226) x1365))
(assert (= x1093 (and x826 (not x603))))
(assert (x48 x1672))
(assert (= x1635 (x1943 (x2119 x1635))))
(assert (= x2692 (or x1158 (and x2726 (not x298)) (and x932 x1483) x1428 (and x168 x1398) (and x808 x1692))))
(assert (= (=> (and (= x2569 x2603) (= 0 x519)) x1886) x721))
(assert (= x1941 (=> (= x1346 (= x613 0)) (and (=> (and (not x1346) (and (= x2383 (x90 (+ x1696 128))) (= x1696 (x434 115792089237316195423570985008687907853269984665640564039457584007913129639904 x730)) (= (x90 (+ 31 x1303)) x730) (= (or (> x1303 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1303)) (< x1303 32))) x2302))) (and (=> (and (and (= x2232 (x945 x2628 1)) (= x1679 (x820 128)) (= (= x200 x461) x904) (= (x90 (+ 32 x851)) x196) (< x2648 1461501637330902918203684832716283019655932542976) (>= x2648 0) (<= x2648 1461501637330902918203684832716283019655932542975) (= (x90 (+ 4 x2383)) x851) (= (x434 1461501637330902918203684832716283019655932542975 x1429) x200) (= (x2707 x2232) x2648)) (not x2302)) (and (=> (and (not x904) (= (= x1815 x200) x1042)) (and (=> (and x1042 (and (= x756 x2648) (> 3053082678 x1556) (= x1936 (x1655 (- x1602 4))) (= x1597 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1936) (and (> 64 x1936) (= (<= x1936 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1679 x1738) (not (< x1602 4)) (not (> 2646777772 x1556)) (= (x2406 (x2119 x1815)) x1916) (= x1602 68) (not (> 1889567281 x1556)) (= 2835717307 x1556) (> x1916 0) (not (= x1556 2678909723)) (not (= 2646777772 x1556)) (= x1671 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (and (=> (and (not x1597) (and (= x1422 x756) (= (= x2648 x756) x2351))) (and (=> (not x2351) x439) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x349) (= x98 (x2536 (x2119 x1635) (x1426 2) 0)) (= x1738 x2142) (>= x349 0) (= (x364 x98) x349) (= x1690 (> x1679 x349))) x2351) (and (=> x1690 x439) (=> (and (= (< x349 x1738) x165) (not x1690)) (and (=> x165 x439) (=> (and (and (= (x2536 (x2119 x756) (x1426 2) 0) x1421) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1738)) x2362) (= x1321 (< x2362 x426)) (>= x426 0) (= (x1344 x1421) x426) (<= x426 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2536 (x2119 x1635) (x1426 2) 0) x2261) (= x1845 (x1655 (- x349 x1738)))) (not x165)) (and (=> (and (not x1321) (and (= x521 (> x426 x1514)) (= x1514 (x90 (+ x1738 x426))))) (and (=> x521 x439) (=> (and (and (= x2065 1) (= x1390 (x2536 (x2119 x756) (x1426 2) 0)) (= x2108 32)) (not x521)) x938))) (=> x1321 x439))))))))) (=> x1597 x439))) (=> (and (= (= x316 x200) x1493) (not x1042)) (and (=> (and x1493 (and (not (> 4 x592)) (not (= x1657 1889567281)) (= x1679 x386) (not (< x1657 826074471)) (= 2835717307 x1657) (= x687 x2648) (not (= 826074471 x1657)) (not (= 2514000705 x1657)) (= x609 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x976) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x976)) (> 64 x976)))) (= x976 (x1655 (- x592 4))) (> x1191 0) (= x1628 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 68 x592) (= x1191 (x2406 (x2119 x316))))) (and (=> x609 x876) (=> (and (and (= x598 (= x687 x2648)) (= x687 x1959)) (not x609)) (and (=> (and (and (= (x2536 (x2119 x1635) (x1426 1) 0) x1164) (= x122 (> x1679 x646)) (= (x1782 x1164) x646) (= x2336 x386) (<= x646 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x646)) x598) (and (=> (and (= x611 (> x386 x646)) (not x122)) (and (=> (and (and (<= x2596 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x712 x2596) x2456) (= x376 (x2536 (x2119 x687) (x1426 1) 0)) (= x2596 (x1404 x376)) (= x185 (x2536 (x2119 x1635) (x1426 1) 0)) (= (x1655 (- x646 x386)) x1224) (>= x2596 0) (= x712 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x386)))) (not x611)) (and (=> x2456 x876) (=> (and (not x2456) (and (= x419 (> x2596 x91)) (= x91 (x90 (+ x2596 x386))))) (and (=> x419 x876) (=> (and (and (= x1401 (x2536 (x2119 x687) (x1426 1) 0)) (= 32 x2305) (= x2008 1) (= x97 1)) (not x419)) x15))))) (=> x611 x876))) (=> x122 x876))) (=> (not x598) x876))))) (=> (and (not x1493) (and (and x1629 (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2554) (= x1905 (or (and (< x393 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x393) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x393))) (= x2299 x2648) (not (< x1323 4)) (< 0 x1753) (= (x1655 (- x1323 4)) x393) (= x1380 2835717307) (= 68 x1323) (not (= x1380 826074471)) (= (x2406 (x2119 x2744)) x1753) (not (< x1380 826074471)) (not (= x1380 2514000705)) (not (= x1380 1889567281)) (= x1739 x1679))) (= x1629 (= x2744 x200)))) (and (=> x1905 x2565) (=> (and (not x1905) (and (= x621 (= x2299 x2648)) (= x2299 x1951))) (and (=> (not x621) x2565) (=> (and (and (= x947 (x1568 x2468)) (<= x947 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x464 (< x947 x1679)) (<= 0 x947) (= x2468 (x2536 (x2119 x1635) (x1426 1) 0)) (= x1739 x1518)) x621) (and (=> x464 x2565) (=> (and (not x464) (= (> x1739 x947) x705)) (and (=> x705 x2565) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2350) (= (x902 x2557) x2350) (= x2032 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1739))) (= x2557 (x2536 (x2119 x2299) (x1426 1) 0)) (= (x2536 (x2119 x1635) (x1426 1) 0) x1194) (= x2573 (> x2350 x2032)) (= (x1655 (- x947 x1739)) x428) (>= x2350 0)) (not x705)) (and (=> x2573 x2565) (=> (and (not x2573) (and (= (x90 (+ x2350 x1739)) x1041) (= (< x1041 x2350) x1239))) (and (=> x1239 x2565) (=> (and (and (= x755 (x2536 (x2119 x2299) (x1426 1) 0)) (= 1 x1672) (= 1 x2026) (= x742 32)) (not x1239)) x788))))))))))))))))) (=> (and x904 (and (< x78 3053082678) (not (< x78 1889567281)) (not (= 2678909723 x78)) (not (< x775 4)) (= x78 2835717307) (not (> 2646777772 x78)) (not (= x78 2646777772)) (= x2287 (x1655 (- x775 4))) (= x775 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x682) (< 0 x764) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2287) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2287) true) (< x2287 64))) x1444) (= x1679 x418) (= x764 (x2406 (x2119 x461))) (= x2648 x256))) (and (=> x1444 x2634) (=> (and (and (= x256 x1603) (= (= x256 x2648) x1613)) (not x1444)) (and (=> (not x1613) x2634) (=> (and x1613 (and (= x1241 (x2536 (x2119 x1635) (x1426 2) 0)) (= x1313 (> x1679 x1287)) (<= 0 x1287) (= (x1522 x1241) x1287) (= x1459 x418) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1287))) (and (=> (and (not x1313) (= x908 (> x418 x1287))) (and (=> (and (not x908) (and (>= x1903 0) (= x824 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x418))) (= (x2536 (x2119 x1635) (x1426 2) 0) x1181) (= (> x1903 x824) x2501) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1903) (= x1071 (x2536 (x2119 x256) (x1426 2) 0)) (= (x1105 x1071) x1903) (= (x1655 (- x1287 x418)) x1265))) (and (=> (and (and (= (x90 (+ x1903 x418)) x2309) (= x1670 (> x1903 x2309))) (not x2501)) (and (=> (and (and (= x259 1) (= 32 x907) (= (x2536 (x2119 x256) (x1426 2) 0) x239)) (not x1670)) x681) (=> x1670 x2634))) (=> x2501 x2634))) (=> x908 x2634))) (=> x1313 x2634))))))))) (=> x2302 x225))) (=> x1346 x225)))))
(assert (x48 x766))
(assert (x1376 x1031))
(assert (= x1357 (and (not x2409) x865)))
(assert (= x740 (=> (and (= x1644 (= x174 0)) (or (not x1644) x1644)) x1496)))
(assert (= (x1943 (x2119 x322)) x322))
(assert (x48 x2248))
(assert (x48 x1065))
(assert (= x2543 (and (not x2668) x2195)))
(assert (= x462 (and (not x1940) x909)))
(assert (= x1451 (and (not x844) x2571)))
(assert (= x2308 (=> (and (= x2114 x2202) (= x2356 x1955)) x2043)))
(assert (x48 x2399))
(assert (x48 x744))
(assert (x48 x2642))
(assert (= (and x1735 x419) x2333))
(assert (= x481 (and x821 x1911)))
(assert (x48 x500))
(assert (= (and x1934 x408) x2116))
(assert (= (and x1003 x1040) x859))
(assert (x48 x27))
(assert (= (and x2048 x1935) x1137))
(assert (= x2251 (and x1930 (not x122))))
(assert (x48 x1511))
(assert (= (or (and x2690 x1388) (and x2034 x81) (and x1137 x486) x202 x833 (and (not x1935) x2048)) x2083))
(assert (x48 x1382))
(assert (= x1816 (and x66 (not x1521))))
(assert (x48 x1849))
(assert (= x2234 (and (not x1069) x1972)))
(assert (= (and x1354 (not x2339)) x854))
(assert (x48 x82))
(assert (= (=> (and (= x58 x797) (= x1064 0)) x1646) x2097))
(assert (x48 x2651))
(assert (=> (<= x321 10000) (= (x2119 x321) (x1426 x321))))
(assert (= x2002 (=> (= x2524 0) x763)))
(assert (= x67 (or x1571 x133)))
(assert (x48 x360))
(assert (x48 x1739))
(assert (= x192 (and x810 x425)))
(assert (= (x1943 (x1426 3756033516)) 3756033516))
(assert (= (x2119 2753274959) (x1426 2753274959)))
(assert (x48 x630))
(assert (= (and x1708 (not x2501)) x228))
(assert (x48 x2644))
(assert (= (+ (x1943 x1067) 1) (x1943 (x945 x1067 1))))
(assert (= x932 (and x604 (not x2323))))
(assert (= x1120 (and x2432 (not x988))))
(assert (= x1375 (or x2670 (and (not x2733) x1474))))
(assert (= (x2119 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1426 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x2482 (or x1466 x471)))
(assert (= (and x2711 x895) x1378))
(assert (x48 x758))
(assert (x48 x2595))
(assert (= (and x1217 x203) x581))
(assert (x48 x1796))
(assert (= (and (not x254) x2005) x433))
(assert (x48 x89))
(assert (= x2028 (and x18 x1627)))
(assert (= (and x372 (not x939)) x482))
(assert (x48 x2641))
(assert (x48 x2031))
(assert (x48 x1294))
(assert (= x13 (x1943 (x2119 x13))))
(assert (= (and x2447 x1275) x2326))
(assert (x48 x2050))
(assert (x48 x1965))
(assert (= x2015 true))
(assert (= x2615 (and x658 x1860)))
(assert (x48 x152))
(assert (x48 x718))
(assert (x48 x1846))
(assert (x48 x2713))
(assert (= x397 (and (not x464) x57)))
(assert (= (and x1942 x2056) x1550))
(assert (= x1708 (and (not x908) x1526)))
(assert (= x1883 (or x183 (and x2346 x878))))
(assert (= x2078 (and x66 x1521)))
(assert (= (and (not x1444) x1123) x2070))
(assert (x48 x993))
(assert (x48 x1086))
(assert (= (or x1486 x2657) x2423))
(assert (x48 x1577))
(assert (= (and x130 x2394) x1423))
(assert (x48 x2450))
(assert (x48 x166))
(assert (x2129 x914))
(assert (= (and x679 x957) x1538))
(assert (x48 x2268))
(assert (x48 x807))
(assert (x48 x83))
(assert (x48 x78))
(assert (= (x1426 3756033516) (x2119 3756033516)))
(assert (x48 x797))
(assert (= (=> (and (= x315 x1661) (= x289 x1364)) x468) x2233))
(assert (x2129 x2592))
(assert (x48 x32))
(assert (= (=> (and (= x114 x1955) (= x2202 x2072)) x2043) x553))
(assert (= x199 (and x2307 (not x1039))))
(assert (= 1889567281 (x1943 (x1426 1889567281))))
(assert (= 565014339 (x1943 (x1426 565014339))))
(assert (=> (>= 10000 x1635) (= (x1426 x1635) (x2119 x1635))))
(assert (= x1 (and x1079 (not x56))))
(assert (= x2019 (or x219 (and x294 (not x2720)))))
(assert (x48 x1895))
(assert (x48 x1055))
(assert (x48 x1870))
(assert (x48 x2648))
(assert (x2545 x1172))
(assert (= (and x128 (not x1420)) x795))
(assert (= x728 (and x2480 x478)))
(assert (x48 x1854))
(assert (x48 x2383))
(assert (x2545 x1031))
(assert (= x2677 (or x2633 x1130 x2312 x859 x484 x1878)))
(assert (= (=> (and (= x1961 0) (= x2440 x2569)) x2584) x324))
(assert (= (and x2491 (not x2521)) x2736))
(assert (x48 x1218))
(assert (= x106 (and x1249 x1560)))
(assert (x48 x2381))
(assert (x2129 x2651))
(assert (= x1428 (and x2323 x604)))
(assert (x48 x650))
(assert (x48 x2085))
(assert (= x1252 (and x2583 x1584)))
(assert (x48 x2131))
(assert (= (and x705 x397) x2342))
(assert (= (and x1541 x1775) x2594))
(assert (= (x1943 (x2119 x891)) x891))
(assert (x48 x649))
(assert (= 3648997476 (x1943 (x1426 3648997476))))
(assert (= x1600 (and x508 x2722)))
(assert (x48 x1339))
(assert (= x1702 (and x1531 x1645)))
(assert (x48 x2172))
(assert (x2545 x730))
(assert (x48 x1662))
(assert (= (or x746 x2277) x2640))
(assert (x48 x1684))
(assert (x48 x145))
(assert (= (x1426 2952933380) (x2119 2952933380)))
(assert (x48 x393))
(assert (x2129 x779))
(assert (= x2556 (and x149 x2219)))
(assert (x48 x816))
(assert (= x162 (and (not x1566) x328)))
(assert (=> (>= 10000 x200) (= (x1426 x200) (x2119 x200))))
(assert (x48 x94))
(assert (x48 x1341))
(assert (= x1571 (or x543 x1685 x433 x331 x1308 x229)))
(assert (x48 x1827))
(assert (x48 x1331))
(assert (x48 x118))
(assert (= x2634 (=> (and (= 0 x259) (= x1284 x907)) x681)))
(assert (x48 x349))
(assert (x48 x1783))
(assert (x48 x583))
(assert (x48 x322))
(assert (x48 x2612))
(assert (= x1638 (and x2395 x2513)))
(assert (x48 x950))
(assert (x48 x2106))
(assert (x48 x2012))
(assert (x48 x103))
(assert (= x2322 (and x2663 (not x531))))
(assert (= x1262 (and x2746 x2650)))
(assert (= (and (not x169) x1439) x978))
(assert (= (and (not x2502) x2116) x574))
(assert (x48 x1215))
(assert (= (and (not x1127) x2462) x710))
(assert (= (and x815 (not x882)) x1418))
(assert (x48 x1673))
(assert (= (and x2122 x2476) x430))
(assert (x48 x110))
(assert (x2129 x322))
(assert (x48 x831))
(assert (= (and x986 x2693) x2452))
(assert (= x799 (=> (= (= x1448 0) x1220) (and (=> (and (= x2179 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1257) (and (< x1257 32) (= (<= x1257 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not x1220)) (and (=> (not x2179) x424) (=> x2179 x1989))) (=> x1220 x1989)))))
(assert (= x1268 (and x1129 x420)))
(assert (x48 x1595))
(assert (= x296 (and x1188 x2111)))
(assert (= x2043 (=> (and (or x220 (not x220)) (= x220 (= 0 x1955))) x1784)))
(assert (x48 x2384))
(assert (= x832 (and x228 (not x1670))))
(assert (x48 x2026))
(assert (x48 x2344))
(assert (= (or x2206 (and x1853 (not x2624)) x1585 (and x685 x262) (and x2195 x2668) (and x1367 x1178)) x2))
(assert (= x1007 (and x1940 x909)))
(assert (x2254 x300))
(assert (= (or x2500 x1049) x2167))
(assert (= x1478 (or x87 x1432 x2328 x323 x2725 x2594)))
(assert (x48 x2152))
(assert (= x1019 (and x1473 (not x1752))))
(assert (x48 x1053))
(assert (= (x1943 (x2119 x1492)) x1492))
(assert (x2129 x200))
(assert (= x883 (or x105 x1286)))
(assert (x48 x928))
(assert (= x2654 (and x165 x2365)))
(assert (x48 x716))
(assert (= (and x638 (not x398)) x849))
(assert (= (=> (and (= x2071 x2042) (= x2188 0)) x2011) x2425))
(assert (x48 x1186))
(assert (= (and x1926 x2404) x671))
(assert (x48 x1025))
(assert (x48 x386))
(assert (= x983 (or x1876 x494)))
(assert (= (x2119 3053082678) (x1426 3053082678)))
(assert (x48 x1537))
(assert (= (and x1543 x2345) x768))
(assert (x48 x706))
(assert (x48 x1748))
(assert (x48 x310))
(assert (x2129 x1318))
(assert (= x564 (=> (and (= x513 x1661) (= x289 x2679)) x468)))
(assert (= (and x1542 (not x2162)) x508))
(assert (= (x1943 (x1426 1086394137)) 1086394137))
(assert (x48 x456))
(assert (x48 x113))
(assert (x1376 x1172))
(assert (x48 x2082))
(assert (x48 x516))
(assert (= (x1426 29289127993025145568725129057828671567744754166070328588094505464281371246592) (x2119 29289127993025145568725129057828671567744754166070328588094505464281371246592)))
(assert (=> (>= 10000 x2451) (= (x2119 x2451) (x1426 x2451))))
(assert (= (=> (and (= x154 x907) (= x1870 x259)) x2319) x681))
(assert (x48 x59))
(assert (= (x1943 (x1426 872247156)) 872247156))
(assert (x48 x1490))
(assert (= (and (not x1220) x557) x2120))
(assert (= 1461501637330902918203684832716283019655932542976 (x1943 (x1426 1461501637330902918203684832716283019655932542976))))
(assert (x48 x2044))
(assert (= (x1943 (x2119 x1318)) x1318))
(assert (x48 x1471))
(assert (x48 x211))
(assert (= x2041 (and x994 x188)))
(assert (x48 x898))
(assert (= x2488 (and (not x188) x994)))
(assert (= (and (not x2262) x1101) x1536))
(assert (= (and x1480 (not x873)) x471))
(assert (= (and x867 x2377) x446))
(assert (x48 x1948))
(assert (=> (<= x1815 10000) (= (x1426 x1815) (x2119 x1815))))
(assert (= (and x1917 x2243) x1562))
(assert (x48 x2704))
(assert (x2129 x2006))
(assert (= (and x460 x112) x921))
(assert (x48 x449))
(assert (= (x1426 2867092931) (x2119 2867092931)))
(assert (x48 x1586))
(assert (x48 x2422))
(assert (x48 x2287))
(assert (= 3467235951 (x1943 (x1426 3467235951))))
(assert (x2129 x843))
(assert (= (and x1946 x2298) x1547))
(assert (= (and x1832 (not x1768)) x366))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1943 (x1426 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x48 x2296))
(assert (x48 x1408))
(assert (= x946 (and x2291 x1668)))
(assert (x48 x1703))
(assert (x48 x1653))
(assert (x48 x532))
(assert (x48 x1779))
(assert (x48 x2370))
(assert (x48 x1293))
(assert (x48 x540))
(assert (x48 x2125))
(assert (= x729 (and (not x1442) x991)))
(assert (= (x1943 (x1426 65943510083598082279227955258803319933472635617035506777028864765220054106112)) 65943510083598082279227955258803319933472635617035506777028864765220054106112))
(assert (= x1150 (=> (and (= 0 x579) (= x1270 x1126)) x2497)))
(assert (= x1762 (and x38 x472)))
(assert (x48 x1492))
(assert (x48 x2021))
(assert (= x304 (and (not x885) x2213)))
(assert (= (or x400 x2510) x505))
(assert (x48 x270))
(assert (= (and x2571 x844) x1488))
(assert (x48 x2286))
(assert (= x2470 (and (not x2243) x1917)))
(assert (x48 x1794))
(assert (x48 x1265))
(assert (= (=> (and (= x1979 x1257) (= x993 x1448)) x295) x1032))
(assert (= x2567 (and (not x2292) x2064)))
(assert (x48 x599))
(assert (= (and x490 (not x1056)) x292))
(assert (= x2673 (and x68 x195)))
(assert (x48 x1005))
(assert (x48 x2235))
(assert (x48 x1343))
(assert (= x756 (x1943 (x2119 x756))))
(assert (= x1636 (or x1804 x146)))
(assert (= (or x2167 x1654) x2665))
(assert (= x1596 (and x1325 x1967)))
(assert (x48 x866))
(assert (x48 x223))
(assert (x48 x129))
(assert (x48 x2376))
(assert (x48 x1665))
(assert (x48 x2506))
(assert (x48 x347))
(assert (x48 x1753))
(assert (=> (>= 10000 x2592) (= (x1426 x2592) (x2119 x2592))))
(assert (x48 x2334))
(assert (x48 x1970))
(assert (= x1825 (and (not x697) x801)))
(assert (x48 x1296))
(assert (x48 x2065))
(assert (x48 x1945))
(assert (= (x2119 2445980732) (x1426 2445980732)))
(assert (x48 x1734))
(assert (= (and x1451 (not x1424)) x2419))
(assert (x48 x742))
(assert (x48 x496))
(assert (x48 x227))
(assert (= x2064 (and x2218 x1868)))
(assert (x48 x1884))
(assert (x48 x416))
(assert (x48 x2126))
(assert (x48 x2548))
(assert (= (and x2242 x2224) x487))
(assert (x48 x1012))
(assert (x48 x2201))
(assert (x48 x2355))
(assert (x2129 x223))
(assert (= (or (and (not x1455) x1881) x2379) x2611))
(assert (= (x1943 (x1426 2753274959)) 2753274959))
(assert (x48 x2649))
(assert (= (or x88 x466) x1140))
(assert (= (or (and (not x127) x1073) x2473) x557))
(assert (= (and x2306 (not x2081)) x2390))
(assert (x48 x1487))
(assert (x48 x1681))
(assert (x48 x1016))
(assert (= (x1943 (x1426 48119142951092613731468242753959111846395615040638799039548226541748339343360)) 48119142951092613731468242753959111846395615040638799039548226541748339343360))
(assert (x48 x1284))
(assert (= (x1943 (x2119 x914)) x914))
(assert (x48 x1135))
(assert (x48 x180))
(assert (x48 x132))
(assert (= (and x611 x2251) x2742))
(assert (= x1802 (and x2611 (not x2405))))
(assert (=> (>= 10000 x461) (= (x1426 x461) (x2119 x461))))
(assert (= x1203 (=> (= x1186 x1890) x2289)))
(assert (x48 x1759))
(assert (= x1756 (and x469 x1457)))
(assert (= x307 (and x1517 x1175)))
(assert (= x1229 (and x167 (not x2351))))
(assert (= x1980 (and x2239 x1463)))
(assert (= (or x2692 x654) x1037))
(assert (x48 x1679))
(assert (x48 x1139))
(assert (=> (>= 10000 x1197) (= (x2119 x1197) (x1426 x1197))))
(assert (x48 x806))
(assert (x48 x1497))
(assert (= (or (and x352 x1609) (and (not x404) x800)) x737))
(assert (x48 x1671))
(assert (x48 x213))
(assert (x48 x1082))
(assert (= x2269 (or x1843 x2492 x555)))
(assert (x48 x2324))
(assert (x48 x2030))
(assert (= x3 (and x1406 (not x1781))))
(assert (= x654 (and x932 (not x1483))))
(assert (x48 x756))
(assert (x48 x673))
(assert (x48 x1136))
(assert (= x865 (and x1847 (not x51))))
(assert (x2129 x256))
(assert (x48 x1416))
(assert (= x1564 (and x2478 x358)))
(assert (= x390 (=> (and (= x2202 x171) (= x1955 x213)) x2043)))
(assert (x48 x1916))
(assert (= x1658 (and x1354 x2339)))
(assert (x48 x665))
(assert (= (=> (= x2176 x2163) x1630) x1121))
(assert (= (and x511 x1587) x2224))
(assert (= x1557 (and x2589 (not x2635))))
(assert (= (and (not x1353) x2632) x201))
(assert (= 3459381112 (x1943 (x1426 3459381112))))
(assert (= (or x2677 x510) x1649))
(assert (x48 x1599))
(assert (= x661 (and (not x705) x397)))
(assert (x48 x2465))
(assert (= x1804 (or x2716 x1246 x1954 x487 x978 x307 x405)))
(assert (= x2055 (and x2351 x167)))
(assert (= (and x1991 (not x314)) x1590))
(assert (= (and x2027 (not x2023)) x1273))
(assert (= (and x278 x248) x2034))
(assert (= (and x2120 x2179) x1695))
(assert (= (and x1557 (not x2581)) x2690))
(assert (x48 x318))
(assert (x48 x504))
(assert (= (and x2112 x193) x809))
(assert (x48 x1960))
(assert (= x1125 (and (not x951) x933)))
(assert (= x511 (and (not x2153) x899)))
(assert (x48 x920))
(assert (x48 x610))
(assert (= x2537 (and (not x149) x2219)))
(assert (x48 x1085))
(assert (= (=> (= x1598 0) x1116) x79))
(assert (x2129 x2299))
(assert (=> (<= x2299 10000) (= (x1426 x2299) (x2119 x2299))))
(assert (x2129 x139))
(assert (= x1366 (and x1566 x328)))
(assert (x48 x1342))
(assert (x48 x2528))
(assert (= (=> (and (and (and (and (= x532 1889567281) (>= x1092 0) (= x2381 x1092) (= (x2406 (x2119 x2744)) x1574) (not (> 826074471 x532)) (= x1759 x1174) (>= 1461501637330902918203684832716283019655932542975 x1635) (= (x2536 (x2119 x1635) (x1426 1) 0) x2316) (= (x1540 x2316) x1092) (> x1574 0) (not (= x532 826074471)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1092)) (and (= x974 x2381) (= x260 x573) (= x526 x2259) (= x2368 x974) (= (- x260 x526) x2054) (= x362 x2294) (= x2738 (- x773 x2368)) (= (= x2054 x2738) x205) (= x2272 (= x2495 x2294)) (= x2495 x1174) (= (= x2272 x205) x853) (= x773 x1449))) (and (= 1889567281 x906) (<= 0 x2595) (= x2595 (x1540 x841)) (= x573 x1841) (= (x2536 (x2119 x13) (x1426 1) 0) x841) (= x1530 (x2406 (x2119 x2744))) (<= x2595 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x906)) (< 0 x1530) (= x1759 x2595) (not (> 826074471 x906)) (>= 1461501637330902918203684832716283019655932542975 x13))) (and (<= x934 1461501637330902918203684832716283019655932542975) (<= x2190 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1889567281 x1551) (= x2014 (x90 (+ x69 x1578))) (= x956 (ite (= x371 0) x542 (ite (= x371 32) x805 (ite (= x371 64) x2163 (ite x1244 (x631 x371) (ite x1754 (x2483 x371) (ite x2505 (x288 x371) (ite x1019 (x1017 x371) (x770 x371))))))))) (= x523 x2530) (>= x2190 0) (= (x1540 x1154) x2190) (= (x2536 (x2119 x934) (x1426 1) 0) x1154) (= (x2406 (x2119 x2744)) x962) (not (= x1551 826074471)) (= (mod (* x2530 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1578) (= x2014 x2512) (= x371 x2163) (not (> 826074471 x1551)) (= x748 x934) (= x1195 (mod (* 32 x2530) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1005 (x90 (+ x1195 x2159))) (= x1005 x2181) (< 0 x962) (= x1841 x2190))) x853) x2246))
(assert (x48 x1959))
(assert (= (=> (and (or (and (and (= 1 x1044) (> x368 0) (= (x2406 (x2119 x2651)) x368)) x1501) (and (not x1501) (and (= x617 (= 0 x542)) (= 32 x1875) (= x1044 (ite x1777 1 0)) (= (not x617) x1777)))) (and (= (= x1875 0) x1501) (< 0 x2691))) x550) x17))
(assert (= x642 (and x381 x1436)))
(assert (=> (>= 10000 x2006) (= (x1426 x2006) (x2119 x2006))))
(assert (x48 x256))
(assert (x48 x100))
(assert (x48 x2451))
(assert (= (and x2084 x2687) x1223))
(assert (= x2730 (and x2480 (not x478))))
(assert (= (or x1848 x789) x2459))
(assert (x48 x989))
(assert (= x2592 (x1943 (x2119 x2592))))
(assert (x48 x224))
(assert (x2545 x2033))
(assert (x48 x41))
(assert (x48 x277))
(assert (= x52 (and (not x1992) x76)))
(assert (= (and x1493 x1458) x852))
(assert (x48 x2222))
(assert (x48 x2114))
(assert (x48 x682))
(assert (= x1049 (and x1583 (not x2498))))
(assert (x48 x1628))
(assert (= (and x436 x1501) x757))
(assert (x48 x1380))
(assert (x48 x522))
(assert (= x54 (and x2513 (not x2395))))
(assert (= (and x1674 x2250) x1498))
(assert (= x183 (and x1829 x2089)))
(assert (x48 x2163))
(assert (x2545 x1429))
(assert (= x2576 (and x2306 x2081)))
(assert (= x57 (and x2103 x621)))
(assert (= (=> (and (= x2108 x154) (= x2065 x1870)) x2319) x938))
(assert (x48 x114))
(assert (x48 x1598))
(assert (x48 x1429))
(assert (x48 x2128))
(assert (= x2011 (=> (and (= x2071 x2113) (= x1435 x2188)) x922)))
(assert (x48 x1084))
(assert (x48 x279))
(assert (= (and x2116 x2502) x741))
(assert (x48 x2643))
(assert (x48 x1448))
(assert (x48 x2688))
(assert (x48 x499))
(assert (x48 x830))
(assert (= (and (not x1042) x206) x1458))
(assert (x48 x2004))
(assert (x48 x653))
(assert (= (x1943 (x2119 x60)) x60))
(assert (= (and x2074 (not x651)) x1515))
(assert (= x352 (and x2169 x1605)))
(assert (x48 x302))
(assert (x48 x2200))
(assert (x48 x1147))
(assert (= (or x1252 x2028 x921 x778 x392 x1515) x1090))
(assert (x48 x1578))
(assert (= (=> (and (= x694 x2067) (= x120 x1138)) x441) x1305))
(assert (= (and x638 x398) x190))
(assert (x48 x1149))
(assert (= (x1426 1926446194) (x2119 1926446194)))
(assert (x2545 x2553))
(assert (x48 x2572))
(assert (x48 x243))
(assert (= (and x1852 x1705) x2263))
(assert (= x262 (and x1769 x2638)))
(assert (x48 x708))
(assert (= (x2119 1461501637330902918203684832716283019655932542975) (x1426 1461501637330902918203684832716283019655932542975)))
(assert (x48 x2554))
(assert (= x306 (and x849 (not x875))))
(assert (= (=> (and (= x1740 x8) (= 0 x2344)) x1929) x1397))
(assert (x48 x101))
(assert (= (=> (and (= x1284 x2108) (= x2065 0)) x938) x439))
(assert (x48 x62))
(assert (x48 x1951))
(assert (= x1494 (and x1101 x2262)))
(assert (x2545 x300))
(assert (= (and x1718 x1347) x2598))
(assert (= (x1943 (x1426 2678909723)) 2678909723))
(assert (x48 x2013))
(assert (x48 x1744))
(assert (x48 x2362))
(assert (x2545 x673))
(assert (= (and x1538 (not x1381)) x2122))
(assert (= x2039 (and (not x1238) x992)))
(assert (x48 x2052))
(assert (= x2745 (or x162 x1554)))
(assert (x48 x995))
(assert (x48 x1106))
(assert (= x2115 (and (not x1297) x2229)))
(assert (x48 x2443))
(assert (= x1842 (and x3 x2479)))
(assert (x48 x2062))
(assert (x48 x2486))
(assert (x48 x1227))
(assert (= x358 (or x699 x2640 x2400 x2745)))
(assert (= (x1943 (x2119 x139)) x139))
(assert (=> (<= x2168 10000) (= (x1426 x2168) (x2119 x2168))))
(assert (x48 x1066))
(assert (= 2835717307 (x1943 (x1426 2835717307))))
(assert (= (and x1145 x220) x2340))
(assert (= (and x1774 x2547) x2112))
(assert (= (and x1473 x1752) x2441))
(assert (=> (>= 10000 x1533) (= (x2119 x1533) (x1426 x1533))))
(assert (x48 x947))
(assert (= x1389 (and (not x667) x2363)))
(assert (= x402 (or x1384 x365)))
(assert (x48 x249))
(assert (= (or x501 x1322) x980))
(assert (x48 x1274))
(assert (= (and x2613 (not x16)) x108))
(assert (x48 x613))
(assert (= (and x1536 x2448) x2335))
(assert (=> (<= x13 10000) (= (x2119 x13) (x1426 x13))))
(assert (x2129 x1533))
(assert (= x333 (=> (and (= x174 x1960) (= x1689 x41)) x740)))
(assert (x48 x1044))
(assert (= x535 (and x2664 x1825)))
(assert (x48 x432))
(assert (x48 x1258))
(assert (x48 x2467))
(assert (x48 x2380))
(assert (= x1391 (x1943 (x2119 x1391))))
(assert (x48 x1533))
(assert (= x1034 (=> (and (= 0 x170) (= x1662 x2688)) x342)))
(assert (= (and (not x81) x2034) x2048))
(assert (x48 x2059))
(assert (= (x1426 3467235951) (x2119 3467235951)))
(assert (= (x2119 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1426 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x48 x1169))
(assert (x48 x1611))
(assert (= (and (not x2391) x33) x1245))
(assert (x48 x2275))
(assert (x48 x230))
(assert (= (and x1988 (not x701)) x829))
(assert (= (and x874 (not x692)) x2005))
(assert (= x969 (=> (and (= x271 x2113) (= x1435 x1715)) x922)))
(assert (x48 x1707))
(assert (x48 x760))
(assert (= (or x1268 (and (not x1129) x420)) x826))
(assert (= (and x2146 x1052) x2491))
(assert (x48 x299))
(assert (= (and (not x1942) x2056) x1507))
(assert (= x2401 (and (not x1414) x2279)))
(assert (= x1767 (and x2229 x1297)))
(assert (x48 x646))
(assert (= (x1943 (x2119 x223)) x223))
(assert (= x884 (and (not x1584) x2583)))
(assert (= (and x2263 x896) x454))
(assert (x48 x1918))
(assert (= (and (not x1637) x2676) x33))
(assert (= 1461501637330902918203684832716283019655932542975 (x1943 (x1426 1461501637330902918203684832716283019655932542975))))
(assert (= (and (not x1168) x2549) x1780))
(assert (= (=> (and (= x58 x178) (= x1440 0)) x111) x1836))
(assert (= (x1943 (x2119 x2207)) x2207))
(assert (= (and x92 x24) x392))
(assert (= x1022 (=> (and (and (and (= x2201 (x2527 x215)) (not (= 2952933380 x1293)) (= x370 (x2406 (x2119 x1635))) (<= 0 x2201) (<= 0 x1103) (= x825 x136) (= x825 x1985) (>= x2474 0) (= x997 (x945 x215 1)) (not (= x1293 3467235951)) (> 1461501637330902918203684832716283019655932542976 x2201) (not (= 2867092931 x1293)) (not (> 2867092931 x1293)) (not (> 1926446194 x1293)) (<= x2201 1461501637330902918203684832716283019655932542975) (not (= x1293 3459381112)) (= x215 (x2536 (x2119 x136) (x1426 3) 0)) (<= x1103 1461501637330902918203684832716283019655932542975) (= x2442 (x945 x997 1)) (<= x136 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1497) (> x370 0) (< x2474 1461501637330902918203684832716283019655932542976) (= (x846 192) x1358) (> 1461501637330902918203684832716283019655932542976 x1663) (= x1293 3648997476) (>= x1361 0) (= (x846 160) x2443) (<= x1663 1461501637330902918203684832716283019655932542975) (<= 0 x1497) (>= 1461501637330902918203684832716283019655932542975 x1361) (= x1075 (x846 128)) (<= 0 x1663) (= (x2156 x997) x2474) (> 3756033516 x1293) (= x1663 (x2707 x2442)) (<= x2474 1461501637330902918203684832716283019655932542975)) (and (and (and (and (and (= x1889 (x1087 x1727)) (<= 0 x1277) (= x1619 x302) (not (> x1889 18446744073709551615)) (= x302 x1076) (= (> 128 x2713) x2051) (= x1342 0) (or (and (< x2494 x2355) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2494) (<= x2355 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x2494 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2355 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2399 (x90 (+ x1081 x1151))) (not (> x2399 x2355)) (= (x90 (+ x1727 32)) x1151) (= 565014339 x297) (not (> x1849 18446744073709551615)) (= (x1655 (- x2355 4)) x831) (= (x90 (+ x1727 31)) x2494) (= x1727 (x90 (+ 4 x1849))) (= (or x2051 x2579) x900) (= (< x1151 x2399) x2378) (= x2221 (x90 (+ 31 x299))) (not (or (and (< x831 32) (= true (<= x831 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x831 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x2355 35) (= (<= x2355 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (>= x1076 0) (= (x2406 (x2119 x13)) x2321) (= x1922 x1112) (<= 0 x1112) (not (> 4 x2355)) (<= x1277 1461501637330902918203684832716283019655932542975) (= x1343 (mod (* x1889 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2579 (> x2713 18446744073709551615)) (= x1342 x158) (= (ite x900 1 0) x1355) (= x1081 (mod (* x1889 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 1461501637330902918203684832716283019655932542975 x1076) (= x1449 x2528) (= x2713 (x90 (+ 128 x1214))) (>= 1461501637330902918203684832716283019655932542975 x1112) (> x2321 0) (= (x434 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2221) x1214) (= x1355 0) (= (x90 (+ x1343 32)) x299)) (and (<= 0 x713) (not (= 826074471 x1407)) (= x362 x2427) (= (x1568 x1573) x713) (= x2528 x713) (< 0 x2360) (<= x1635 1461501637330902918203684832716283019655932542975) (= x1407 1889567281) (= x2360 (x2406 (x2119 x2744))) (not (< x1407 826074471)) (= (x2536 (x2119 x1635) (x1426 1) 0) x1573) (<= x713 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (>= x669 0) (= x1124 (x2406 (x2119 x2744))) (not (< x1983 826074471)) (>= 1461501637330902918203684832716283019655932542975 x13) (= (x1568 x1877) x669) (= x1877 (x2536 (x2119 x13) (x1426 1) 0)) (> x1124 0) (= x1300 x2259) (not (= x1983 826074471)) (= x1983 1889567281) (<= x669 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2427 x669))) (and (= (x2406 (x2119 x2744)) x1094) (not (= x116 826074471)) (= x748 x540) (= x2296 (x1568 x1142)) (<= 0 x2296) (= x1746 x748) (= x1142 (x2536 (x2119 x540) (x1426 1) 0)) (<= x2296 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x116 1889567281) (not (> 826074471 x116)) (>= 1461501637330902918203684832716283019655932542975 x540) (= x2296 x1300) (< 0 x1094))) (and (= x2407 x1358) x759 (= 614698425 x504) x2183 (>= 1461501637330902918203684832716283019655932542975 x291) (> x1750 0) (= x194 x2275) (= x1358 x647) (<= 0 x291) (= (x2406 (x2119 x13)) x1750) (= x928 x825) (= x836 x1746) (= x836 (x434 1461501637330902918203684832716283019655932542975 x2033)) (= (= x647 x989) x2024) (= x766 x825) (= (not (= x2407 x928)) x2183) (= x13 x989) x2024 (not (= x504 565014339)) (= x1922 x291) (>= x194 0) (>= 1461501637330902918203684832716283019655932542975 x194) (= x759 (not (= x766 x862))) (= x862 x1635)))) (and (not (= x316 x13)) (not (= 565014339 x522)) (<= x1106 1461501637330902918203684832716283019655932542975) (<= 0 x774) (<= x1215 1461501637330902918203684832716283019655932542975) (not (= x461 x1815)) (< 0 x2744) (< 0 x1815) (= x499 (x2406 (x2119 x13))) (>= 1461501637330902918203684832716283019655932542975 x1296) (not (= x461 x223)) (<= 0 x910) (<= 0 x2020) (>= 1461501637330902918203684832716283019655932542975 x2744) (>= x1884 0) (>= x274 0) x1078 (>= 1461501637330902918203684832716283019655932542975 x316) (>= 1461501637330902918203684832716283019655932542975 x910) (= 614698425 x522) (not (= x2744 x1635)) (<= 0 x2420) (not (= x2744 x461)) (<= x1222 1461501637330902918203684832716283019655932542975) (<= 0 x77) (<= 0 x329) (>= x1215 0) x889 (> x13 0) (= (x117 (x2119 x461)) x774) (<= x160 1461501637330902918203684832716283019655932542975) (not (= x2744 x316)) (= x1985 x2059) (>= x1589 0) (<= 0 x961) (>= x270 0) (<= 0 x547) (<= 0 x1861) (= (< 0 (x2406 (x2119 x1635))) x1156) (= x961 (x117 (x2119 x1635))) (= x274 (x117 (x2119 x316))) (not (= x13 x461)) (not (= x316 x1815)) (> x223 0) (not (= x223 x1635)) (= (x117 (x2119 x2744)) x2375) (>= 1461501637330902918203684832716283019655932542975 x794) (not (= x13 x223)) (>= 1461501637330902918203684832716283019655932542975 x2101) x2550 (>= 1461501637330902918203684832716283019655932542975 x1815) (not (= x461 x316)) (>= x2375 0) (< 0 x499) (= (x117 (x2119 x13)) x1884) (not (= x2744 x223)) x2186 (>= x2669 0) (= (< 0 (x2406 (x2119 x2744))) x1078) (not (= x1635 x1815)) (>= 1461501637330902918203684832716283019655932542975 x1861) (<= x2020 1461501637330902918203684832716283019655932542975) (= x2186 (< 0 (x2406 (x2119 x223)))) (>= 1461501637330902918203684832716283019655932542975 x1066) (= (x117 (x2119 x1815)) x270) (= x889 (> (x2406 (x2119 x13)) 0)) (>= 1461501637330902918203684832716283019655932542975 x1589) (>= x1296 0) (not (= x2744 x1815)) (>= 1461501637330902918203684832716283019655932542975 x547) (not (= x13 x1815)) (>= x1222 0) (>= 1461501637330902918203684832716283019655932542975 x223) (not (= x461 x1635)) (> x316 0) (>= x794 0) (<= x77 1461501637330902918203684832716283019655932542975) (<= 0 x160) (<= 0 x2101) (not (= x13 x1635)) (<= 0 x1711) (> x1635 0) (= x1020 (> (x2406 (x2119 x461)) 0)) (not (= x316 x223)) (= (x117 (x2119 x223)) x329) (<= x1635 1461501637330902918203684832716283019655932542975) (not (= x2744 x13)) (>= x1106 0) (= (x434 1461501637330902918203684832716283019655932542975 x2033) x2059) (>= x595 0) (= x1374 (> (x2406 (x2119 x316)) 0)) (>= x1066 0) x1156 (>= 1461501637330902918203684832716283019655932542975 x461) (<= x2420 1461501637330902918203684832716283019655932542975) (<= x1711 1461501637330902918203684832716283019655932542975) (= (< 0 (x2406 (x2119 x1815))) x2550) x1374 x1020 (not (= x316 x1635)) (not (= x1815 x223)) (<= x595 1461501637330902918203684832716283019655932542975) (< 0 x461) (>= 1461501637330902918203684832716283019655932542975 x2669) (<= x13 1461501637330902918203684832716283019655932542975))) (and (=> x2378 x1314) (=> (not x2378) x2194)))))
(assert (= x1582 (and (not x1621) x574)))
(assert (= x1173 (or (and x2712 (not x2332)) (and x2041 x842))))
(assert (= x1660 (and x366 x1193)))
(assert (= x549 (or x296 x1482)))
(assert (= (and x2111 (not x1188)) x899))
(assert (= (and (not x685) x262) x1853))
(assert (x48 x1076))
(assert (= 1784838210 (x1943 (x1426 1784838210))))
(assert (= x146 (and (not x1175) x1517)))
(assert (= x2636 (and x700 x2736)))
(assert (= (and (not x1627) x18) x112))
(assert (x48 x135))
(assert (x48 x259))
(assert (x48 x1323))
(assert (x48 x2180))
(assert (x48 x513))
(assert (x48 x329))
(assert (= x1838 (or x412 x612)))
(assert (= x1949 (and x924 (not x525))))
(assert (x48 x417))
(assert (= x28 (and (not x2143) x1051)))
(assert (= (and x1670 x228) x1153))
(assert (x48 x363))
(assert (= x1892 (and x1505 (not x317))))
(assert (= x442 (or x1312 x735 x2415 x1600 x2171 x634)))
(assert (x48 x616))
(assert (= x2267 (and x2714 (not x444))))
(assert (= x2358 (=> (and (= x315 x217) (= x1364 0)) x2233)))
(assert (x48 x2257))
(assert (= (=> (and (= (= 0 x2007) x497) (or (not x497) x497)) x1910) x1182))
(assert (x48 x2320))
(assert (= x412 (and (not x419) x1735)))
(assert (x2129 x816))
(assert (= x2056 (and x899 x2153)))
(assert (= (=> (and (<= 0 x2037) (= x1639 (x2536 (x2119 x1382) x326 0)) (= (x1975 x1639) x2037) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2037) (= (x2536 (x2119 x1492) (x1426 17) 0) x326) (= (= x1161 x461) x2276) (= (x434 1461501637330902918203684832716283019655932542975 x1527) x1161) (= x2667 128) (= x1492 (x434 1461501637330902918203684832716283019655932542975 x1527))) (and (=> (and (and (= 2835717307 x332) (> x1487 0) (not (= 2678909723 x332)) (< x332 3053082678) (= 68 x1400) (not (= x332 2646777772)) (= (x1655 (- x1400 4)) x1729) (not (< x1400 4)) (= x1400 68) (not (> 2646777772 x332)) (not (> 1889567281 x332)) (= (x2406 (x2119 x461)) x1487) (= x1594 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1729) true) (< x1729 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1729))) (= x516 x2037) (= x2131 x360) (= x1962 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x2276) (and (=> x1594 x1240) (=> (and (= x1645 (= x360 x2131)) (not x1594)) (and (=> (not x1645) x1240) (=> (and x1645 (and (= x1772 (< x2698 x2037)) (= (x2536 (x2119 x461) (x1426 2) 0) x1309) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2698) (= x1716 x516) (= (x387 x1309) x2698) (<= 0 x2698))) (and (=> x1772 x1240) (=> (and (not x1772) (= x1775 (< x2698 x516))) (and (=> x1775 x1240) (=> (and (and (<= 0 x660) (= (x2536 (x2119 x321) (x1426 2) 0) x2496) (<= x660 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x660 x2180) x2147) (= (x1726 x2496) x660) (= (x2536 (x2119 x461) (x1426 2) 0) x141) (= x2542 (x1655 (- x2698 x516))) (= x2180 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x516)))) (not x1775)) (and (=> x2147 x1240) (=> (and (not x2147) (and (= (< x830 x660) x1509) (= x830 (x90 (+ x660 x516))))) (and (=> (and (and (= x1888 (x2536 (x2119 x321) (x1426 2) 0)) (= 1 x2719) (= x1665 32)) (not x1509)) x1291) (=> x1509 x1240))))))))))))) (=> (and (not x2276) (= (= x1815 x1161) x765)) (and (=> (and (and (= x145 x2037) (not (= x2416 2646777772)) (not (= x2416 2678909723)) (= x2131 x279) (not (> 1889567281 x2416)) (= 68 x828) (not (< x828 4)) (= 2835717307 x2416) (= 68 x828) (= x758 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2646777772 x2416)) (> x1813 0) (= (x2406 (x2119 x1815)) x1813) (= (x1655 (- x828 4)) x2193) (= x692 (or (and (< x2193 64) (= true (<= x2193 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2193 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x2416 3053082678)) x765) (and (=> (and (not x692) (= x254 (= x2131 x279))) (and (=> (and x254 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2211) (>= x2211 0) (= x988 (< x2211 x2037)) (= x399 x145) (= x2211 (x186 x2539)) (= (x2536 (x2119 x461) (x1426 2) 0) x2539))) (and (=> (and (not x988) (= x43 (> x145 x2211))) (and (=> x43 x1100) (=> (and (not x43) (and (= x212 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x145))) (= (x2536 (x2119 x461) (x1426 2) 0) x189) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x403) (>= x403 0) (= x125 (< x212 x403)) (= x403 (x985 x1749)) (= (x2536 (x2119 x321) (x1426 2) 0) x1749) (= x1274 (x1655 (- x2211 x145))))) (and (=> (and (and (= x626 (< x1080 x403)) (= x1080 (x90 (+ x403 x145)))) (not x125)) (and (=> x626 x1100) (=> (and (not x626) (and (= x2678 (x2536 (x2119 x321) (x1426 2) 0)) (= x2600 32) (= 1 x1595))) x2618))) (=> x125 x1100))))) (=> x988 x1100))) (=> (not x254) x1100))) (=> x692 x1100))) (=> (and (not x765) (= (= x316 x1161) x2189)) (and (=> (and (and (= x1837 (= x2744 x1161)) (and x1837 (and (> x640 0) (not (= 1889567281 x1703)) (= x82 68) (= x2131 x2609) (= 68 x82) (not (= 826074471 x1703)) (= 2835717307 x1703) (not (< x1703 826074471)) (= x850 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (> x2144 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2144)) (< x2144 64))) x1778) (= x2144 (x1655 (- x82 4))) (not (= x1703 2514000705)) (= (x2406 (x2119 x2744)) x640) (not (> 4 x82)) (= x2606 x2037)))) (not x2189)) (and (=> (and (= (= x2131 x2609) x1056) (not x1778)) (and (=> (not x1056) x733) (=> (and (and (= (x2536 (x2119 x461) (x1426 1) 0) x138) (<= 0 x1190) (= (x1824 x138) x1190) (= (> x2037 x1190) x1768) (= x2268 x2606) (<= x1190 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1056) (and (=> x1768 x733) (=> (and (= (> x2606 x1190) x1193) (not x1768)) (and (=> (and (not x1193) (and (>= x616 0) (= (x2536 (x2119 x321) (x1426 1) 0) x628) (<= x616 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1279 (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2606))) (= x86 (> x616 x1279)) (= x1612 (x1655 (- x1190 x2606))) (= (x2536 (x2119 x461) (x1426 1) 0) x958) (= x616 (x2623 x628)))) (and (=> x86 x733) (=> (and (not x86) (and (= (> x616 x2590) x56) (= (x90 (+ x2606 x616)) x2590))) (and (=> (and (not x56) (and (= x1928 (x2536 (x2119 x321) (x1426 1) 0)) (= 32 x1833) (= 1 x866) (= x457 1))) x374) (=> x56 x733))))) (=> x1193 x733))))))) (=> x1778 x733))) (=> (and (and (not (= x1846 826074471)) (= (x1655 (- x588 4)) x1070) (= 2835717307 x1846) (= x2093 x2037) (not (= x1846 1889567281)) (= x2131 x1965) (= x347 (x2406 (x2119 x316))) (= 68 x588) (= x2458 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1070) true) (> 64 x1070)) (> x1070 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2102) (< 0 x347) (= x588 68) (not (> 826074471 x1846)) (not (= x1846 2514000705)) (not (> 4 x588))) x2189) (and (=> x2102 x719) (=> (and (= (= x2131 x1965) x531) (not x2102)) (and (=> (not x531) x719) (=> (and x531 (and (= x2093 x1733) (<= 0 x2214) (<= x2214 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2536 (x2119 x461) (x1426 1) 0) x2212) (= (x2149 x2212) x2214) (= x2746 (< x2214 x2037)))) (and (=> (and (not x2746) (= x314 (< x2214 x2093))) (and (=> (and (and (>= x675 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x675) (= (x1655 (- x2214 x2093)) x507) (= (x2301 x704) x675) (= x438 (< x417 x675)) (= (x2536 (x2119 x321) (x1426 1) 0) x704) (= (x1655 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2093)) x417) (= x413 (x2536 (x2119 x461) (x1426 1) 0))) (not x314)) (and (=> x438 x719) (=> (and (and (= x478 (< x745 x675)) (= (x90 (+ x675 x2093)) x745)) (not x438)) (and (=> (and (and (= (x2536 (x2119 x321) (x1426 1) 0) x1348) (= 1 x1960) (= x1534 1) (= 32 x1689)) (not x478)) x333) (=> x478 x719))))) (=> x314 x719))) (=> x2746 x719))))))))))))) x751))
(assert (= (x2119 1889567281) (x1426 1889567281)))
(assert (x48 x1454))
(assert (x48 x1456))
(assert (x48 x1510))
(assert (= x1283 (and (not x2573) x661)))
(assert (= (and x2401 (not x1720)) x1122))
(assert (=> (>= 10000 x2744) (= (x1426 x2744) (x2119 x2744))))
(assert (x48 x923))
(assert (x48 x2402))
(assert (= (or x476 x2665) x1473))
(assert (x48 x1631))
(assert (= x2010 (and (not x1856) x140)))
(assert (x48 x2719))
(assert (x48 x1984))
(assert (x48 x2297))
(assert (x48 x1279))
(assert (x2129 x2168))
(assert (= (and x577 (not x1837)) x567))
(assert (x48 x2669))
(assert (= x1967 (or x1091 x1266 x2485 x798)))
(assert (= (and x2064 x2292) x1567))
(assert (= (x1426 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x2119 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (or x2025 x1159) x1207))
(assert (x48 x171))
(assert (= x1646 (=> (and (= x797 x1021) (= x1064 x2007)) x1182)))
(assert (= (and x308 x2430) x2311))
(assert (x2129 x316))
(assert (= (+ 1 (x1943 x1512)) (x1943 (x945 x1512 1))))
(assert (= (and (not x2189) x1993) x577))
(assert (x48 x217))
(assert (x48 x1968))
(assert (x48 x1657))
(assert (x48 x1904))
(assert (= 614698425 (x1943 (x1426 614698425))))
(assert (x48 x547))
(assert (= (=> (and (= x2114 x718) (= x2356 0)) x2308) x1028))
(assert (= x2111 (and x1375 (not x2477))))
(assert (= (and x473 x238) x1102))
(assert (x48 x2020))
(assert (= (and x381 (not x1436)) x365))
(assert (= (x1177 x2317) 0))
(assert (= x143 (=> (and (or x2720 (not x2720)) (= x2720 (= 0 x613))) x1941)))
(assert (= x2063 (or x2310 x2423 x980 x402)))
(assert (x48 x1977))
(assert (x48 x2159))
(assert (= (and x1196 (not x1499)) x2307))
(assert (= x2047 (and x1507 (not x330))))
(assert (= x477 (and x702 (not x953))))
(assert (= (and x1544 x1625) x476))
(assert (= x2310 (or x869 x2577)))
(assert (x48 x1607))
(assert (= (and x692 x874) x331))
(assert (x48 x912))
(assert (= (and x1120 (not x43)) x1897))
(assert (x48 x184))
(assert (= (and (not x388) x790) x389))
(assert (x48 x745))
(assert (= (and (not x2367) x2699) x2109))
(assert (= (and x784 x2441) x2282))
(assert (= (x2119 3648997476) (x1426 3648997476)))
(assert (x48 x1440))
(assert (x48 x303))
(assert (x48 x2540))
(assert (x48 x2348))
(assert (x48 x2356))
(assert (x48 x2562))
(assert (x48 x2144))
(assert (x48 x2113))
(assert (= x344 (and x148 x2481)))
(assert (= x1200 (and x1862 (not x214))))
(assert (= x2090 (and x497 x2063)))
(assert (x48 x1524))
(assert (= x1432 (and x96 x2147)))
(assert (x48 x1300))
(assert (x48 x1688))
(assert (= x1939 (and x2613 x16)))
(assert (x48 x2407))
(assert (= (and x2391 x33) x2728))
(assert (x2129 x285))
(assert (= x1840 (and x2611 x2405)))
(assert (x48 x717))
(assert (x48 x1817))
(assert (x48 x1038))
(assert (= (=> (and (or x2478 (not x2478)) (= (= 0 x289) x2478)) x584) x468))
(assert (= x2674 (or x290 x337 x1809 x565 x785 x47)))
(check-sat)
(exit)