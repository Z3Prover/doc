(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1549 0)) (((x1606 (x1321 x1549) (x664 x1549) (x1728 x1549) (x1386 x1549) (x1718 Int)) (x28 (x727 x1549) (x268 x1549) (x748 x1549) (x185 x1549) (x1010 x1549) (x1645 x1549) (x328 Int)) (x1771 (x1426 x1549) (x335 x1549) (x969 x1549) (x1546 Int)) (x295 (x299 Int)) (x1364 (x1597 x1549) (x1261 x1549) (x819 Int)) (x1703 (x714 x1549) (x807 Int)) (x1310 (x1325 x1549) (x575 x1549) (x262 x1549) (x1747 x1549) (x846 x1549) (x531 Int)) (x1341 (x1028 x1549) (x1512 x1549) (x1571 x1549) (x39 x1549) (x1146 x1549) (x705 x1549) (x1384 x1549) (x878 Int)))))
(declare-fun x3 () Bool)
(declare-fun x1061 () x1549)
(declare-fun x1009 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x942 () Int)
(declare-fun x615 () x1549)
(declare-fun x257 () Bool)
(declare-fun x1373 () Int)
(declare-fun x496 () Int)
(declare-fun x956 () Bool)
(declare-fun x1181 () Int)
(declare-fun x950 () Int)
(declare-fun x623 () Bool)
(declare-fun x27 () Bool)
(declare-fun x272 () Int)
(declare-fun x485 () Bool)
(declare-fun x208 () Bool)
(declare-fun x170 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x255 () Bool)
(declare-fun x241 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x445 () Bool)
(declare-fun x310 () Bool)
(declare-fun x710 () Int)
(declare-fun x678 () Int)
(declare-fun x384 () x1549)
(declare-fun x1802 () Int)
(declare-fun x1103 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x797 () Int)
(declare-fun x260 (Int) Int)
(declare-fun x622 () Int)
(declare-fun x1770 () Bool)
(declare-fun x1280 () Int)
(declare-fun x1845 () Int)
(declare-fun x822 () Int)
(declare-fun x785 () Int)
(declare-fun x1106 () Bool)
(declare-fun x29 () Int)
(declare-fun x227 () Bool)
(declare-fun x309 () Int)
(declare-fun x276 () Bool)
(declare-fun x1267 () Int)
(declare-fun x242 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1335 () Int)
(declare-fun x1828 () Int)
(declare-fun x1789 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x350 () Bool)
(declare-fun x665 () Int)
(declare-fun x405 () Bool)
(declare-fun x93 () Int)
(declare-fun x1613 () Int)
(declare-fun x1494 () Int)
(declare-fun x1066 () Int)
(declare-fun x1016 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x1763 () x1549)
(declare-fun x259 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x985 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x1506 () Int)
(declare-fun x1014 () Int)
(declare-fun x567 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x79 () Int)
(declare-fun x302 () Int)
(declare-fun x126 () Int)
(declare-fun x1823 () Int)
(declare-fun x83 () Int)
(declare-fun x452 () x1549)
(declare-fun x540 () Bool)
(declare-fun x888 () Bool)
(declare-fun x745 () Bool)
(declare-fun x620 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x1292 () Int)
(declare-fun x147 () Bool)
(declare-fun x21 () Int)
(declare-fun x1161 () Bool)
(declare-fun x90 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x719 () Int)
(declare-fun x802 () Int)
(declare-fun x522 () Bool)
(declare-fun x178 () Bool)
(declare-fun x387 () Bool)
(declare-fun x860 () x1549)
(declare-fun x1220 () Bool)
(declare-fun x1258 () Int)
(declare-fun x1832 () Int)
(declare-fun x1441 () Bool)
(declare-fun x283 () Int)
(declare-fun x254 () Bool)
(declare-fun x1532 () Int)
(declare-fun x1369 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x127 () Bool)
(declare-fun x801 () Int)
(declare-fun x346 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x1077 () Int)
(declare-fun x57 () Bool)
(declare-fun x209 () Int)
(declare-fun x4 () Int)
(declare-fun x169 () x1549)
(declare-fun x30 () Int)
(declare-fun x1110 () Int)
(declare-fun x680 () Int)
(declare-fun x1521 () Bool)
(declare-fun x351 () Int)
(declare-fun x1793 () Bool)
(declare-fun x1158 () Int)
(declare-fun x434 () Bool)
(declare-fun x858 () Int)
(declare-fun x1704 () Bool)
(declare-fun x648 () Int)
(declare-fun x524 () Bool)
(declare-fun x1004 (Int) Int)
(declare-fun x853 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x413 () Int)
(declare-fun x937 () Bool)
(declare-fun x981 () Bool)
(declare-fun x560 () Int)
(declare-fun x697 () Int)
(declare-fun x363 () Bool)
(declare-fun x1375 () Int)
(declare-fun x478 (Int Int) Int)
(declare-fun x512 () Int)
(declare-fun x88 () x1549)
(declare-fun x1136 () Int)
(declare-fun x526 () x1549)
(declare-fun x679 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1609 () Int)
(declare-fun x1636 () Bool)
(declare-fun x1537 () Int)
(declare-fun x146 () Int)
(declare-fun x928 () Bool)
(declare-fun x1139 () x1549)
(declare-fun x1032 () Bool)
(declare-fun x634 () Int)
(declare-fun x1776 () Bool)
(declare-fun x896 () Bool)
(declare-fun x941 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x1407 () Int)
(declare-fun x1573 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x84 (Int) Int)
(declare-fun x1486 () Bool)
(declare-fun x791 () Int)
(declare-fun x1241 () Bool)
(declare-fun x1819 () Int)
(declare-fun x1265 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x957 () Int)
(declare-fun x917 () Bool)
(declare-fun x486 () Bool)
(declare-fun x471 () x1549)
(declare-fun x551 () Int)
(declare-fun x1489 () Bool)
(declare-fun x1566 () Int)
(declare-fun x1062 () Int)
(declare-fun x1420 () Bool)
(declare-fun x1417 () x1549)
(declare-fun x1540 () Bool)
(declare-fun x82 () Bool)
(declare-fun x364 () Bool)
(declare-fun x1775 () Int)
(declare-fun x1536 () Bool)
(declare-fun x750 () Int)
(declare-fun x1182 () Bool)
(declare-fun x98 () Bool)
(declare-fun x1734 () Int)
(declare-fun x1709 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x53 () Bool)
(declare-fun x508 () Int)
(declare-fun x730 () Int)
(declare-fun x67 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x506 () Bool)
(declare-fun x238 () Int)
(declare-fun x481 () Bool)
(declare-fun x383 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x588 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x42 () Int)
(declare-fun x695 () Int)
(declare-fun x1171 () Int)
(declare-fun x715 () Bool)
(declare-fun x1460 () Int)
(declare-fun x157 () Int)
(declare-fun x1436 () Bool)
(declare-fun x1137 () Int)
(declare-fun x596 () Bool)
(declare-fun x563 () Int)
(declare-fun x1120 () Bool)
(declare-fun x367 () Bool)
(declare-fun x25 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x1410 () Int)
(declare-fun x924 () Int)
(declare-fun x7 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x92 () Int)
(declare-fun x1539 () Bool)
(declare-fun x1852 () Int)
(declare-fun x583 () Int)
(declare-fun x317 () Bool)
(declare-fun x619 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x1134 () x1549)
(declare-fun x1726 () Int)
(declare-fun x1788 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x365 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x212 () Bool)
(declare-fun x406 () Int)
(declare-fun x1213 () Int)
(declare-fun x1529 () Int)
(declare-fun x1333 () Int)
(declare-fun x1104 () Bool)
(declare-fun x414 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x716 () Bool)
(declare-fun x266 () Int)
(declare-fun x659 () Bool)
(declare-fun x168 () Int)
(declare-fun x1157 () Int)
(declare-fun x1193 () Int)
(declare-fun x1490 () Bool)
(declare-fun x273 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x891 () Int)
(declare-fun x1740 () Int)
(declare-fun x751 () Bool)
(declare-fun x1623 (Int) Int)
(declare-fun x1510 () Int)
(declare-fun x1502 () Bool)
(declare-fun x451 () Bool)
(declare-fun x851 (Int) Int)
(declare-fun x1288 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x499 () Bool)
(declare-fun x1629 () Int)
(declare-fun x6 () Bool)
(declare-fun x1818 () Int)
(declare-fun x240 () Bool)
(declare-fun x72 () Bool)
(declare-fun x1235 () x1549)
(declare-fun x1277 () Bool)
(declare-fun x718 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x729 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x909 () Bool)
(declare-fun x988 () Bool)
(declare-fun x856 () Int)
(declare-fun x418 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x191 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1370 () x1549)
(declare-fun x940 () Int)
(declare-fun x559 () Int)
(declare-fun x1472 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1249 () Bool)
(declare-fun x823 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x124 () Bool)
(declare-fun x645 () Int)
(declare-fun x1798 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x1173 () Int)
(declare-fun x368 () Int)
(declare-fun x1514 () Int)
(declare-fun x774 () Bool)
(declare-fun x660 () Int)
(declare-fun x1657 (Int) Int)
(declare-fun x1530 () Int)
(declare-fun x284 () x1549)
(declare-fun x840 () Bool)
(declare-fun x1311 () Int)
(declare-fun x1827 () Bool)
(declare-fun x1073 () Int)
(declare-fun x1150 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x844 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x523 () Int)
(declare-fun x541 () Int)
(declare-fun x1296 () Bool)
(declare-fun x637 () Int)
(declare-fun x1345 () Int)
(declare-fun x1274 () Int)
(declare-fun x1169 () Bool)
(declare-fun x938 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x1754 (x1549) Int)
(declare-fun x1632 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x55 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x372 () Bool)
(declare-fun x1631 () Int)
(declare-fun x1569 () Int)
(declare-fun x1757 () Bool)
(declare-fun x217 () Bool)
(declare-fun x1681 () Int)
(declare-fun x1801 () Int)
(declare-fun x1405 () Int)
(declare-fun x813 () Int)
(declare-fun x306 (Int) Int)
(declare-fun x761 () Bool)
(declare-fun x453 () Bool)
(declare-fun x336 () Bool)
(declare-fun x145 () Int)
(declare-fun x393 () Int)
(declare-fun x421 () x1549)
(declare-fun x1646 () Int)
(declare-fun x1451 () Bool)
(declare-fun x218 () Bool)
(declare-fun x945 () Bool)
(declare-fun x12 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x41 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x1239 (Int) Int)
(declare-fun x1548 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1143 () Int)
(declare-fun x684 () Bool)
(declare-fun x1808 () Bool)
(declare-fun x556 () Int)
(declare-fun x441 () Int)
(declare-fun x899 () Bool)
(declare-fun x69 () Int)
(declare-fun x803 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x895 () Bool)
(declare-fun x105 () Bool)
(declare-fun x475 () Bool)
(declare-fun x628 () Bool)
(declare-fun x80 () Bool)
(declare-fun x323 () Int)
(declare-fun x465 () Int)
(declare-fun x286 () Int)
(declare-fun x428 () Bool)
(declare-fun x820 () Bool)
(declare-fun x1685 () Int)
(declare-fun x903 () Int)
(declare-fun x322 () Int)
(declare-fun x1159 () Bool)
(declare-fun x618 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1101 () Bool)
(declare-fun x1006 () Int)
(declare-fun x427 () Int)
(declare-fun x1205 () Int)
(declare-fun x746 () Int)
(declare-fun x640 () Int)
(declare-fun x1785 () Bool)
(declare-fun x140 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x228 () Int)
(declare-fun x187 () Int)
(declare-fun x649 () Int)
(declare-fun x230 () Int)
(declare-fun x248 () Bool)
(declare-fun x881 () Int)
(declare-fun x326 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x533 () Bool)
(declare-fun x709 () Int)
(declare-fun x1072 () Int)
(declare-fun x358 () Int)
(declare-fun x576 () Int)
(declare-fun x1352 () Int)
(declare-fun x862 () Bool)
(declare-fun x520 () Bool)
(declare-fun x855 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x1390 (Int) Int)
(declare-fun x1242 (Int) Int)
(declare-fun x1558 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x1578 () Int)
(declare-fun x99 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x682 () Int)
(declare-fun x402 () Bool)
(declare-fun x826 () Int)
(declare-fun x713 () Int)
(declare-fun x1796 (Int) Int)
(declare-fun x102 () Int)
(declare-fun x789 () Int)
(declare-fun x691 () Int)
(declare-fun x1553 () Int)
(declare-fun x897 () Int)
(declare-fun x196 () Bool)
(declare-fun x905 () Bool)
(declare-fun x54 () Int)
(declare-fun x139 () Int)
(declare-fun x694 () Int)
(declare-fun x1096 () Int)
(declare-fun x908 () Int)
(declare-fun x629 () Bool)
(declare-fun x667 () Int)
(declare-fun x1138 () Bool)
(declare-fun x108 () Int)
(declare-fun x1394 () Bool)
(declare-fun x1516 () x1549)
(declare-fun x1659 () Bool)
(declare-fun x480 () Int)
(declare-fun x1232 () Bool)
(declare-fun x962 () Bool)
(declare-fun x1094 () Int)
(declare-fun x60 () Int)
(declare-fun x954 () Int)
(declare-fun x784 () Bool)
(declare-fun x466 () Int)
(declare-fun x1210 () Bool)
(declare-fun x914 () Int)
(declare-fun x1380 () Int)
(declare-fun x771 () Bool)
(declare-fun x1031 () Int)
(declare-fun x919 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x329 () Bool)
(declare-fun x1484 () Int)
(declare-fun x436 () Int)
(declare-fun x828 () Bool)
(declare-fun x1230 () Int)
(declare-fun x918 () Bool)
(declare-fun x1687 () Int)
(declare-fun x366 () Bool)
(declare-fun x333 () Bool)
(declare-fun x156 () Bool)
(declare-fun x721 () x1549)
(declare-fun x223 () Bool)
(declare-fun x1206 () Int)
(declare-fun x603 () Bool)
(declare-fun x901 () Bool)
(declare-fun x173 () Bool)
(declare-fun x815 () Bool)
(declare-fun x261 () Int)
(declare-fun x422 () Bool)
(declare-fun x1809 () Int)
(declare-fun x1414 () Bool)
(declare-fun x573 () Bool)
(declare-fun x655 () Int)
(declare-fun x1365 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1324 () Int)
(declare-fun x125 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x141 () Int)
(declare-fun x662 () Int)
(declare-fun x974 () Int)
(declare-fun x814 () Int)
(declare-fun x598 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x76 () Bool)
(declare-fun x883 () Int)
(declare-fun x1100 () Bool)
(declare-fun x1034 () Int)
(declare-fun x1000 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x505 () Int)
(declare-fun x400 () Bool)
(declare-fun x26 () Int)
(declare-fun x1197 () Int)
(declare-fun x951 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x1089 () Int)
(declare-fun x997 () Bool)
(declare-fun x671 () Int)
(declare-fun x799 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1455 () Bool)
(declare-fun x150 () x1549)
(declare-fun x36 () Bool)
(declare-fun x1194 () Int)
(declare-fun x182 () Bool)
(declare-fun x884 () Int)
(declare-fun x1557 () Bool)
(declare-fun x467 () x1549)
(declare-fun x1560 () Int)
(declare-fun x759 () Bool)
(declare-fun x483 () Int)
(declare-fun x1833 () x1549)
(declare-fun x138 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x394 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x409 () Int)
(declare-fun x128 () Bool)
(declare-fun x121 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x534 () Int)
(declare-fun x1839 (x1549) Int)
(declare-fun x1672 () Int)
(declare-fun x129 () Int)
(declare-fun x460 () Int)
(declare-fun x777 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x831 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x1630 () Int)
(declare-fun x459 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x912 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x810 () Bool)
(declare-fun x1604 (Int) Int)
(declare-fun x889 () Int)
(declare-fun x32 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x760 () Int)
(declare-fun x50 () Int)
(declare-fun x723 () Bool)
(declare-fun x1082 () Int)
(declare-fun x167 () Bool)
(declare-fun x806 (Int Int) Int)
(declare-fun x1189 () Bool)
(declare-fun x327 () Bool)
(declare-fun x960 () Bool)
(declare-fun x442 () Bool)
(declare-fun x670 () Int)
(declare-fun x380 () Int)
(declare-fun x359 () Bool)
(declare-fun x1702 () Int)
(declare-fun x490 () Int)
(declare-fun x1179 () Bool)
(declare-fun x742 () Bool)
(declare-fun x77 () Bool)
(declare-fun x334 () Bool)
(declare-fun x13 () Int)
(declare-fun x780 () Bool)
(declare-fun x600 () Bool)
(declare-fun x305 () Bool)
(declare-fun x677 () Bool)
(declare-fun x247 () Int)
(declare-fun x1027 () Int)
(declare-fun x315 () Int)
(declare-fun x859 () Bool)
(declare-fun x612 () Bool)
(declare-fun x1383 () Int)
(declare-fun x1452 () Bool)
(declare-fun x144 () Int)
(declare-fun x1658 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x1678 () x1549)
(declare-fun x1695 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x86 (Int) Int)
(declare-fun x1528 (Int) Int)
(declare-fun x487 (x1549) Int)
(declare-fun x1633 () Int)
(declare-fun x1697 () Int)
(declare-fun x735 () Bool)
(declare-fun x253 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x961 () Bool)
(declare-fun x688 () Int)
(declare-fun x898 () Bool)
(declare-fun x833 () Bool)
(declare-fun x1617 () Int)
(declare-fun x767 () Bool)
(declare-fun x741 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x725 () Int)
(declare-fun x1393 () Bool)
(declare-fun x101 () Bool)
(declare-fun x747 () Bool)
(declare-fun x237 () Int)
(declare-fun x1742 () Int)
(declare-fun x949 () Int)
(declare-fun x1092 () Bool)
(declare-fun x388 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1684 () Int)
(declare-fun x1849 () x1549)
(declare-fun x1067 () Bool)
(declare-fun x601 () Int)
(declare-fun x907 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x1671 () Bool)
(declare-fun x732 () Bool)
(declare-fun x398 () Int)
(declare-fun x788 () Bool)
(declare-fun x1211 () Int)
(declare-fun x1820 () Int)
(declare-fun x38 () Bool)
(declare-fun x779 () Int)
(declare-fun x1482 () Bool)
(declare-fun x341 () Int)
(declare-fun x161 () Int)
(declare-fun x536 () Int)
(declare-fun x875 () Bool)
(declare-fun x943 () Int)
(declare-fun x160 () Bool)
(declare-fun x449 () Int)
(declare-fun x768 () Bool)
(declare-fun x555 () Bool)
(declare-fun x476 () Int)
(declare-fun x1811 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x923 () Bool)
(declare-fun x1431 () x1549)
(declare-fun x1840 () Bool)
(declare-fun x733 () Bool)
(declare-fun x1814 () Int)
(declare-fun x446 () Bool)
(declare-fun x1069 () x1549)
(declare-fun x591 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x423 () Bool)
(declare-fun x149 () x1549)
(declare-fun x20 () Bool)
(declare-fun x1773 () Int)
(declare-fun x1563 () Bool)
(declare-fun x280 () Int)
(declare-fun x642 () Bool)
(declare-fun x1424 () Int)
(declare-fun x906 () Bool)
(declare-fun x361 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x557 () Int)
(declare-fun x1236 () Bool)
(declare-fun x1036 () Int)
(declare-fun x1391 () Int)
(declare-fun x1454 () Bool)
(declare-fun x593 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x143 () Int)
(declare-fun x1745 (Int) Int)
(declare-fun x148 () Bool)
(declare-fun x698 () Bool)
(declare-fun x609 () Bool)
(declare-fun x507 () Bool)
(declare-fun x1166 () Int)
(declare-fun x500 () Bool)
(declare-fun x885 () Int)
(declare-fun x857 () Bool)
(declare-fun x1240 () Int)
(declare-fun x1443 () Bool)
(declare-fun x1554 () Int)
(declare-fun x1610 () Bool)
(declare-fun x73 (x1549) Int)
(declare-fun x1614 () Bool)
(declare-fun x391 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1744 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x561 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1063 () Int)
(declare-fun x608 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x607 () Int)
(declare-fun x19 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x757 () Bool)
(declare-fun x66 () Bool)
(declare-fun x307 () Bool)
(declare-fun x470 () Bool)
(declare-fun x578 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x37 () Int)
(declare-fun x720 () Int)
(declare-fun x936 (Int) Int)
(declare-fun x1192 () Bool)
(declare-fun x804 () Int)
(declare-fun x1805 () Bool)
(declare-fun x539 () Bool)
(declare-fun x595 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x492 () Int)
(declare-fun x263 () Bool)
(declare-fun x913 () Int)
(declare-fun x594 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x1826 () Int)
(declare-fun x1283 () Int)
(declare-fun x494 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x1428 () Int)
(declare-fun x1651 () Bool)
(declare-fun x43 () Bool)
(declare-fun x304 () Int)
(declare-fun x1018 () Int)
(declare-fun x1585 () Bool)
(declare-fun x1401 () Int)
(declare-fun x947 () Bool)
(declare-fun x1372 (Int Int) Int)
(declare-fun x270 () Bool)
(declare-fun x386 () Bool)
(declare-fun x652 () x1549)
(declare-fun x722 () x1549)
(declare-fun x59 () Bool)
(declare-fun x1355 () Int)
(declare-fun x800 (x1549) Int)
(declare-fun x89 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1755 () Bool)
(declare-fun x1620 () Int)
(declare-fun x198 () Int)
(declare-fun x766 () Bool)
(declare-fun x1243 () Int)
(declare-fun x308 () x1549)
(declare-fun x16 () Int)
(declare-fun x1337 () Int)
(declare-fun x1187 () Bool)
(declare-fun x582 () Bool)
(declare-fun x1119 () Int)
(declare-fun x1750 () Int)
(declare-fun x548 () Bool)
(declare-fun x429 () Int)
(declare-fun x313 (x1549) Int)
(declare-fun x52 () Int)
(declare-fun x1810 () Bool)
(declare-fun x927 () Bool)
(declare-fun x46 () Bool)
(declare-fun x597 () Bool)
(declare-fun x274 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x118 () Bool)
(declare-fun x517 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x243 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1402 () Int)
(declare-fun x992 () Bool)
(declare-fun x538 () Int)
(declare-fun x1050 () Bool)
(declare-fun x1071 () Int)
(declare-fun x980 () Bool)
(declare-fun x955 () Int)
(declare-fun x438 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x450 () Int)
(declare-fun x195 () Bool)
(declare-fun x1505 () x1549)
(declare-fun x832 () Int)
(declare-fun x324 () Bool)
(declare-fun x549 () Int)
(declare-fun x1121 () Int)
(declare-fun x1107 () Int)
(declare-fun x1781 () Bool)
(declare-fun x11 () Bool)
(declare-fun x849 (x1549) Int)
(declare-fun x586 () Int)
(declare-fun x192 () Int)
(declare-fun x1328 () Bool)
(declare-fun x1123 () Int)
(declare-fun x562 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1533 () Int)
(declare-fun x1174 () Bool)
(declare-fun x279 () x1549)
(declare-fun x1786 () x1549)
(declare-fun x493 () Int)
(declare-fun x1409 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x1 () Int)
(declare-fun x415 () Int)
(declare-fun x693 () Bool)
(declare-fun x287 () Int)
(declare-fun x1204 () Int)
(declare-fun x181 () Bool)
(declare-fun x515 () Bool)
(declare-fun x675 () x1549)
(declare-fun x1162 () Int)
(declare-fun x778 () Int)
(declare-fun x1184 () Int)
(declare-fun x933 () Int)
(declare-fun x1716 () Bool)
(declare-fun x1251 () Int)
(declare-fun x1114 () Bool)
(declare-fun x1225 () Int)
(declare-fun x689 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1797 () Int)
(declare-fun x1041 () Int)
(declare-fun x332 () Bool)
(declare-fun x106 () Bool)
(declare-fun x554 () Bool)
(declare-fun x589 () Int)
(declare-fun x245 () Bool)
(declare-fun x68 () Bool)
(declare-fun x1743 () Int)
(declare-fun x983 () Bool)
(declare-fun x978 () x1549)
(declare-fun x1567 () Bool)
(declare-fun x100 () Bool)
(declare-fun x565 () Int)
(declare-fun x275 () Int)
(declare-fun x1635 () Int)
(declare-fun x834 () Int)
(declare-fun x1091 () Bool)
(declare-fun x443 () Bool)
(declare-fun x736 () Int)
(declare-fun x246 () Bool)
(declare-fun x712 () Int)
(declare-fun x633 () Int)
(declare-fun x572 () Bool)
(declare-fun x1022 () Int)
(declare-fun x724 () Bool)
(declare-fun x1612 () Int)
(declare-fun x1461 () Int)
(declare-fun x1371 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x1764 () Int)
(declare-fun x1051 () Bool)
(declare-fun x1347 () Int)
(declare-fun x686 () Int)
(declare-fun x430 () x1549)
(declare-fun x502 () Bool)
(declare-fun x97 () Int)
(declare-fun x1677 () Int)
(declare-fun x770 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1483 () Bool)
(declare-fun x1317 () Int)
(declare-fun x1751 () Int)
(declare-fun x1413 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x120 () Int)
(declare-fun x1128 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x805 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x290 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x1081 () Int)
(declare-fun x468 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x793 () Bool)
(declare-fun x175 () Int)
(declare-fun x1682 () Bool)
(declare-fun x1829 () Int)
(declare-fun x756 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x1078 () Int)
(declare-fun x847 () Int)
(declare-fun x1854 () Bool)
(declare-fun x1649 () x1549)
(declare-fun x892 () Int)
(declare-fun x437 () Int)
(declare-fun x1551 () Bool)
(declare-fun x782 () Int)
(declare-fun x1791 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x1075 () Int)
(declare-fun x792 () Bool)
(declare-fun x1113 () Int)
(declare-fun x982 () Int)
(declare-fun x537 () Bool)
(declare-fun x345 () Bool)
(declare-fun x644 () Bool)
(declare-fun x632 () Bool)
(declare-fun x993 () Int)
(declare-fun x17 () Int)
(declare-fun x948 () Bool)
(declare-fun x407 () Int)
(declare-fun x838 () Bool)
(declare-fun x362 () Int)
(declare-fun x501 () Bool)
(declare-fun x744 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x64 () Bool)
(declare-fun x674 () Bool)
(declare-fun x337 () Int)
(declare-fun x114 () Bool)
(declare-fun x817 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x1568 () Int)
(declare-fun x462 () Int)
(declare-fun x763 () Int)
(declare-fun x256 () x1549)
(declare-fun x707 () Int)
(declare-fun x267 () Bool)
(declare-fun x617 (Int) Int)
(declare-fun x159 () Int)
(declare-fun x922 () Bool)
(declare-fun x455 () Int)
(declare-fun x320 () Int)
(declare-fun x1133 () Bool)
(declare-fun x1131 () Int)
(declare-fun x1087 () Bool)
(declare-fun x376 () Int)
(declare-fun x1642 () Int)
(declare-fun x1850 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x408 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x183 () Bool)
(declare-fun x967 () Int)
(declare-fun x1777 () Bool)
(declare-fun x165 () Int)
(declare-fun x1596 () Bool)
(declare-fun x850 () Int)
(declare-fun x234 () Int)
(declare-fun x488 () Bool)
(declare-fun x344 () Int)
(declare-fun x1148 () Bool)
(declare-fun x188 () Int)
(declare-fun x1286 () Bool)
(declare-fun x521 () Int)
(declare-fun x528 () Int)
(declare-fun x431 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x439 () Int)
(declare-fun x975 () Bool)
(declare-fun x1400 () Int)
(declare-fun x1594 () Bool)
(declare-fun x348 () Int)
(declare-fun x911 () Bool)
(declare-fun x966 () Int)
(declare-fun x1804 () Int)
(declare-fun x1112 () Int)
(declare-fun x171 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x752 () Bool)
(declare-fun x103 () Int)
(declare-fun x963 () Bool)
(declare-fun x1752 () Int)
(declare-fun x360 () Int)
(declare-fun x1700 () Bool)
(declare-fun x1676 () Int)
(declare-fun x971 () Int)
(declare-fun x201 () Int)
(declare-fun x1272 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x569 () Int)
(declare-fun x1201 () Bool)
(declare-fun x477 () Bool)
(declare-fun x219 () Bool)
(declare-fun x513 () Int)
(declare-fun x2 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x1795 () Int)
(declare-fun x1680 () Bool)
(declare-fun x495 () Bool)
(declare-fun x426 () Bool)
(declare-fun x696 () Bool)
(declare-fun x342 () Bool)
(declare-fun x1624 () Int)
(declare-fun x316 () Int)
(declare-fun x1346 () Int)
(declare-fun x946 () Bool)
(declare-fun x353 () Int)
(declare-fun x829 () Bool)
(declare-fun x811 () Bool)
(declare-fun x504 (x1549) Int)
(declare-fun x643 () Int)
(declare-fun x754 () x1549)
(declare-fun x701 () Int)
(declare-fun x995 () Int)
(declare-fun x1275 () Bool)
(declare-fun x614 () x1549)
(declare-fun x604 () Int)
(declare-fun x910 () Bool)
(declare-fun x968 () Int)
(declare-fun x1045 () Bool)
(declare-fun x18 () Bool)
(declare-fun x762 () Int)
(declare-fun x104 () Bool)
(declare-fun x836 () Int)
(declare-fun x726 () Bool)
(declare-fun x1730 () Int)
(declare-fun x511 () Int)
(declare-fun x886 () Bool)
(declare-fun x646 () Bool)
(declare-fun x998 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x151 () Bool)
(declare-fun x996 () Int)
(declare-fun x1769 () Int)
(declare-fun x1582 () Bool)
(declare-fun x1590 () Int)
(declare-fun x661 () Int)
(declare-fun x873 () Bool)
(declare-fun x271 () Int)
(declare-fun x786 () Int)
(declare-fun x636 () x1549)
(declare-fun x1209 () Int)
(declare-fun x1415 () Bool)
(declare-fun x639 () Bool)
(declare-fun x1140 () Int)
(declare-fun x51 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x1650 () Int)
(declare-fun x1692 () Bool)
(declare-fun x162 () Bool)
(declare-fun x781 () Bool)
(declare-fun x683 (Int) Int)
(declare-fun x1154 () Bool)
(declare-fun x900 () Int)
(declare-fun x285 () Int)
(declare-fun x818 () Bool)
(declare-fun x190 () Int)
(declare-fun x772 () Bool)
(declare-fun x699 () Bool)
(declare-fun x1282 () Int)
(declare-fun x410 () Int)
(declare-fun x412 () Int)
(declare-fun x939 () Int)
(declare-fun x1412 () Int)
(declare-fun x1727 () Bool)
(declare-fun x425 () Bool)
(declare-fun x753 () Int)
(declare-fun x369 () Bool)
(declare-fun x835 (Int) Int)
(declare-fun x920 () Bool)
(declare-fun x1654 () Int)
(declare-fun x176 () Bool)
(declare-fun x447 () Int)
(declare-fun x658 () Int)
(declare-fun x133 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x700 () Bool)
(declare-fun x1035 () Int)
(declare-fun x392 () Bool)
(declare-fun x403 () Bool)
(declare-fun x1691 () Int)
(declare-fun x1350 () Bool)
(declare-fun x1600 () Int)
(declare-fun x1015 () Int)
(declare-fun x1504 () Bool)
(declare-fun x866 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1019 () Int)
(declare-fun x529 () Bool)
(declare-fun x627 () Bool)
(declare-fun x269 () Int)
(declare-fun x650 () Int)
(declare-fun x35 () Int)
(declare-fun x210 (Int) Int)
(declare-fun x893 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x657 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x31 () Bool)
(declare-fun x837 () x1549)
(declare-fun x87 () x1549)
(declare-fun x116 () Bool)
(declare-fun x867 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x1351 () Int)
(declare-fun x931 () Bool)
(declare-fun x848 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x397 () Int)
(declare-fun x1748 () Bool)
(declare-fun x568 () Bool)
(declare-fun x371 () Bool)
(declare-fun x702 () Bool)
(declare-fun x112 (Int) Int)
(declare-fun x1701 () Int)
(declare-fun x1316 () Int)
(declare-fun x904 () Bool)
(declare-fun x574 () Int)
(declare-fun x224 () Int)
(declare-fun x1665 () Int)
(declare-fun x1164 () Int)
(declare-fun x1105 () Int)
(declare-fun x231 () Int)
(declare-fun x1538 () Bool)
(declare-fun x204 () Bool)
(declare-fun x743 () x1549)
(declare-fun x1782 () Int)
(declare-fun x1511 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x865 () Bool)
(declare-fun x1464 () Int)
(declare-fun x1715 () Int)
(declare-fun x1109 () Bool)
(declare-fun x530 () Int)
(declare-fun x1543 () Int)
(declare-fun x861 () x1549)
(declare-fun x1503 () Int)
(declare-fun x929 () Int)
(declare-fun x1758 () Bool)
(declare-fun x587 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x152 () Bool)
(declare-fun x203 () x1549)
(declare-fun x134 () Bool)
(declare-fun x1762 () Int)
(declare-fun x1853 () x1549)
(declare-fun x794 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x153 () x1549)
(declare-fun x1165 () Bool)
(declare-fun x166 () Bool)
(declare-fun x1250 () Int)
(declare-fun x464 () Bool)
(declare-fun x1723 () Int)
(declare-fun x1007 () Int)
(declare-fun x1290 () Bool)
(declare-fun x916 () Int)
(declare-fun x1831 () Bool)
(declare-fun x297 () Bool)
(declare-fun x547 () Bool)
(declare-fun x651 () Bool)
(declare-fun x404 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x1710 () Int)
(declare-fun x354 () Bool)
(declare-fun x845 () Int)
(declare-fun x1245 () Bool)
(declare-fun x1040 () x1549)
(declare-fun x56 () Bool)
(declare-fun x314 () Int)
(declare-fun x1527 () Bool)
(declare-fun x703 () Int)
(declare-fun x115 () Int)
(declare-fun x1583 () Int)
(declare-fun x1774 () Int)
(declare-fun x1142 () Bool)
(declare-fun x1305 () Int)
(declare-fun x444 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x641 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x991 () Bool)
(declare-fun x1256 () x1549)
(declare-fun x356 () Int)
(declare-fun x775 () x1549)
(declare-fun x1330 () Int)
(declare-fun x994 () Int)
(declare-fun x1033 () Int)
(declare-fun x1656 () Bool)
(declare-fun x215 () Int)
(declare-fun x1812 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x113 () Bool)
(declare-fun x24 () Bool)
(declare-fun x1760 () Int)
(declare-fun x206 () Bool)
(declare-fun x1183 () Int)
(declare-fun x685 () Bool)
(declare-fun x71 () Bool)
(declare-fun x378 () Bool)
(declare-fun x264 () Int)
(declare-fun x544 () Bool)
(declare-fun x509 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x879 (x1549) Int)
(declare-fun x1195 () Int)
(declare-fun x189 () Bool)
(declare-fun x70 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x964 () Bool)
(declare-fun x666 () Int)
(declare-fun x1001 () Int)
(declare-fun x1477 () Int)
(declare-fun x647 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x193 () Int)
(declare-fun x1525 () Bool)
(declare-fun x10 (x1549) Int)
(declare-fun x457 () Int)
(declare-fun x1467 () Int)
(declare-fun x1229 () Int)
(declare-fun x179 () Int)
(declare-fun x635 () Bool)
(declare-fun x616 () Int)
(declare-fun x1522 () Bool)
(declare-fun x1144 () Int)
(declare-fun x1579 () Int)
(declare-fun x1599 () Int)
(declare-fun x1366 (Int) Int)
(declare-fun x1207 (Int) Int)
(declare-fun x979 (Int) Int)
(declare-fun x249 () Bool)
(declare-fun x174 (Int) Int)
(declare-fun x1638 () Bool)
(declare-fun x1655 () Bool)
(declare-fun x1531 () Int)
(declare-fun x653 () Bool)
(declare-fun x199 () Bool)
(declare-fun x1427 (x1549) Int)
(declare-fun x824 () Int)
(declare-fun x1843 () x1549)
(declare-fun x282 () Int)
(declare-fun x1731 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x1176 (Int) x1549)
(declare-fun x1648 () x1549)
(declare-fun x343 () Bool)
(declare-fun x1215 () Int)
(declare-fun x519 () Bool)
(declare-fun x717 () Bool)
(declare-fun x62 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x232 () Int)
(declare-fun x1526 () Bool)
(declare-fun x107 () Int)
(declare-fun x1307 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x553 () Int)
(declare-fun x1821 () Int)
(declare-fun x1765 () Int)
(declare-fun x65 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1815 () Bool)
(declare-fun x49 () Int)
(declare-fun x1574 () Bool)
(declare-fun x1688 () x1549)
(declare-fun x668 () Int)
(declare-fun x180 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x1287 () x1549)
(declare-fun x454 () Bool)
(declare-fun x773 () Bool)
(declare-fun x1628 () Int)
(declare-fun x1354 () Bool)
(declare-fun x669 () Int)
(declare-fun x1746 (Int) Int)
(declare-fun x1099 () Bool)
(declare-fun x1269 () Int)
(declare-fun x1223 () Int)
(declare-fun x14 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1784 () Bool)
(declare-fun x579 () x1549)
(declare-fun x1837 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x1406 () Int)
(declare-fun x352 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x1303 () Int)
(declare-fun x1652 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x1020 () Int)
(declare-fun x953 () Int)
(declare-fun x1670 () Int)
(declare-fun x687 () Int)
(declare-fun x321 () Int)
(declare-fun x580 () Bool)
(declare-fun x959 () Int)
(declare-fun x977 () Bool)
(declare-fun x987 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x389 () Int)
(declare-fun x1792 () Bool)
(declare-fun x1520 () Int)
(declare-fun x1024 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x656 () x1549)
(declare-fun x1689 () Bool)
(declare-fun x1544 () Int)
(declare-fun x1499 () Bool)
(declare-fun x1177 () Int)
(declare-fun x154 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x296 () Int)
(declare-fun x197 () Bool)
(declare-fun x854 () x1549)
(declare-fun x1212 () Bool)
(declare-fun x870 () Bool)
(declare-fun x1124 () Int)
(declare-fun x1561 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x734 () x1549)
(declare-fun x550 (Int) Int)
(declare-fun x1048 () x1549)
(declare-fun x1156 () Bool)
(declare-fun x816 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x543 () Int)
(declare-fun x233 () Bool)
(declare-fun x1686 () Int)
(declare-fun x542 () Int)
(declare-fun x1362 () Int)
(declare-fun x863 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x1722 () Int)
(declare-fun x318 () Bool)
(declare-fun x704 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x15 () Bool)
(declare-fun x1813 () Int)
(declare-fun x33 () Bool)
(declare-fun x566 () Int)
(declare-fun x205 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x764 () Bool)
(declare-fun x137 () Int)
(declare-fun x1449 (Int) Int)
(declare-fun x250 () Bool)
(declare-fun x1276 () Int)
(declare-fun x48 () Bool)
(declare-fun x510 () Bool)
(declare-fun x1735 () x1549)
(declare-fun x382 () Int)
(declare-fun x96 () Bool)
(declare-fun x673 () Int)
(declare-fun x136 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x1151 () Int)
(declare-fun x78 () Bool)
(declare-fun x1052 () Int)
(declare-fun x783 () Int)
(declare-fun x631 () Int)
(declare-fun x222 (x1549) Int)
(declare-fun x571 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x654 () Bool)
(declare-fun x1248 () Int)
(declare-fun x1721 () Bool)
(declare-fun x1361 () Int)
(declare-fun x370 () Bool)
(declare-fun x958 () x1549)
(declare-fun x200 () Int)
(declare-fun x577 () Int)
(declare-fun x1338 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x514 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1496 () Bool)
(declare-fun x1145 () Int)
(declare-fun x85 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x930 () Int)
(declare-fun x1761 () Bool)
(declare-fun x952 () Int)
(declare-fun x1152 () x1549)
(declare-fun x944 () Int)
(declare-fun x1259 () Int)
(declare-fun x411 () Bool)
(declare-fun x330 () Int)
(declare-fun x385 () Bool)
(declare-fun x390 () Int)
(declare-fun x839 () Int)
(declare-fun x1733 () Bool)
(declare-fun x809 () Bool)
(declare-fun x1800 () Int)
(declare-fun x211 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1224 () Int)
(declare-fun x864 () Bool)
(declare-fun x525 () Int)
(declare-fun x1319 () Bool)
(declare-fun x663 () Bool)
(declare-fun x1403 () Int)
(declare-fun x1097 () Bool)
(declare-fun x1653 () Int)
(declare-fun x61 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x535 (Int) Int)
(declare-fun x1344 () Int)
(declare-fun x1149 () Int)
(declare-fun x1481 () Bool)
(declare-fun x1039 (Int) Int)
(declare-fun x1621 () Int)
(declare-fun x94 () Int)
(declare-fun x1003 () Bool)
(declare-fun x1442 () Int)
(declare-fun x158 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x812 () Bool)
(declare-fun x23 () Int)
(declare-fun x1495 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x220 () Int)
(declare-fun x1725 () Int)
(declare-fun x546 () Int)
(declare-fun x545 () Int)
(declare-fun x110 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x749 () Bool)
(declare-fun x973 () Int)
(declare-fun x375 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x606 () Bool)
(declare-fun x44 () Int)
(declare-fun x925 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1675 () Int)
(declare-fun x984 () x1549)
(declare-fun x81 () Bool)
(declare-fun x123 () Bool)
(declare-fun x1844 (x1549) Int)
(declare-fun x194 () Bool)
(declare-fun x258 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x226 () Bool)
(declare-fun x1679 () Int)
(declare-fun x1318 () Int)
(declare-fun x301 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x432 () Bool)
(declare-fun x776 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x527 () Int)
(declare-fun x503 () Bool)
(declare-fun x1690 () Int)
(declare-fun x1043 () Bool)
(declare-fun x1535 () Int)
(declare-fun x868 () x1549)
(declare-fun x738 () Int)
(declare-fun x1637 () Bool)
(declare-fun x311 () Int)
(declare-fun x1696 () Bool)
(declare-fun x300 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1411 (Int) Int)
(declare-fun x887 () Int)
(declare-fun x1794 () Bool)
(declare-fun x999 () x1549)
(declare-fun x1564 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x424 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x172 () Int)
(declare-fun x1842 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x711 () Bool)
(declare-fun x1683 () Int)
(declare-fun x482 () Bool)
(declare-fun x1759 () Int)
(declare-fun x830 () Bool)
(declare-fun x731 () Bool)
(declare-fun x532 () Bool)
(declare-fun x34 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x1462 () Int)
(declare-fun x419 () Bool)
(declare-fun x1660 () x1549)
(declare-fun x312 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x1666 () Int)
(declare-fun x1429 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x1247 () Int)
(declare-fun x630 () Bool)
(declare-fun x291 () Int)
(declare-fun x1326 () Bool)
(declare-fun x965 () Bool)
(declare-fun x796 () Int)
(declare-fun x690 () Bool)
(declare-fun x1608 () Int)
(declare-fun x758 () Bool)
(declare-fun x119 () Bool)
(declare-fun x252 () Int)
(declare-fun x1622 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x251 () Bool)
(declare-fun x214 () Bool)
(declare-fun x740 () Bool)
(declare-fun x1332 () Int)
(declare-fun x1054 () Bool)
(declare-fun x5 () Bool)
(declare-fun x1592 () Int)
(declare-fun x842 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x491 () Bool)
(declare-fun x787 () Bool)
(declare-fun x869 () Int)
(declare-fun x552 () x1549)
(declare-fun x1425 () Int)
(declare-fun x1017 () Int)
(declare-fun x972 () Bool)
(declare-fun x1053 () Int)
(declare-fun x294 () Bool)
(declare-fun x91 () Bool)
(declare-fun x894 () Int)
(declare-fun x877 () Int)
(declare-fun x1118 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x132 () Int)
(declare-fun x1799 () Int)
(declare-fun x292 () Bool)
(declare-fun x489 () Bool)
(declare-fun x216 () Bool)
(declare-fun x558 () Int)
(declare-fun x373 () Bool)
(declare-fun x1191 () Int)
(declare-fun x1057 () Bool)
(declare-fun x672 () Bool)
(declare-fun x621 () Int)
(declare-fun x611 () Int)
(declare-fun x130 () Bool)
(declare-fun x396 () Int)
(declare-fun x1547 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x584 () Int)
(declare-fun x298 () Int)
(declare-fun x202 () Int)
(declare-fun x790 () Bool)
(declare-fun x1353 (Int) Int)
(declare-fun x1021 (Int) Int)
(declare-fun x338 () Bool)
(declare-fun x1556 () Int)
(declare-fun x921 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x229 () Bool)
(declare-fun x610 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1576 () Int)
(declare-fun x769 () Bool)
(declare-fun x976 () Int)
(declare-fun x765 () x1549)
(declare-fun x374 () Bool)
(declare-fun x474 () Bool)
(declare-fun x122 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x827 () Bool)
(declare-fun x340 () x1549)
(declare-fun x1343 () Int)
(declare-fun x1422 () Int)
(declare-fun x1349 () Bool)
(declare-fun x986 () Int)
(declare-fun x1395 () Bool)
(declare-fun x638 () Int)
(declare-fun x1738 () Int)
(declare-fun x1517 () Int)
(declare-fun x1298 () Bool)
(declare-fun x1244 () Bool)
(define-fun x1509 ((x1549 x1549) (x235 Int)) x1549 (ite ((_ is x1341) x1549) (x1341 (x1028 x1549) (x1512 x1549) (x1571 x1549) (x39 x1549) (x1146 x1549) (x705 x1549) (x1384 x1549) (+ (x878 x1549) x235)) (ite ((_ is x28) x1549) (x28 (x727 x1549) (x268 x1549) (x748 x1549) (x185 x1549) (x1010 x1549) (x1645 x1549) (+ (x328 x1549) x235)) (ite ((_ is x1310) x1549) (x1310 (x1325 x1549) (x575 x1549) (x262 x1549) (x1747 x1549) (x846 x1549) (+ (x531 x1549) x235)) (ite ((_ is x1606) x1549) (x1606 (x1321 x1549) (x664 x1549) (x1728 x1549) (x1386 x1549) (+ (x1718 x1549) x235)) (ite ((_ is x1771) x1549) (x1771 (x1426 x1549) (x335 x1549) (x969 x1549) (+ (x1546 x1549) x235)) (ite ((_ is x1703) x1549) (x1703 (x714 x1549) (+ (x807 x1549) x235)) (ite ((_ is x1364) x1549) (x1364 (x1597 x1549) (x1261 x1549) (+ x235 (x819 x1549))) (x295 (+ x235 (x299 x1549)))))))))))
(define-fun x473 ((x1313 Int)) Int (ite (and (< x1313 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1313 0)) x1313 (- x1313 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1074 ((x1313 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1313) (< x1313 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1313) x1313))
(define-fun x1419 ((x1065 Int)) Bool (and (< x1065 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1065)))
(define-fun x737 ((x1065 Int)) Bool (and (= (x806 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1065) x1065) (= (x806 x1065 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1065)))
(define-fun x1469 ((x1065 Int)) Bool (and (= (x806 x1065 0) 0) (= 0 (x806 0 x1065))))
(define-fun x1218 ((x1065 Int)) Bool (= x1065 (x806 x1065 x1065)))
(define-fun x518 ((x1065 Int)) Bool (and (x1469 x1065) (x1218 x1065) (x737 x1065)))
(define-fun x1737 ((x1065 Int) (x1674 Int)) Bool (= (x806 x1065 x1674) (x806 x1674 x1065)))
(define-fun x347 ((x1065 Int) (x1674 Int)) Bool (and (=> (<= 0 x1674) (>= x1674 (x806 x1065 x1674))) (<= 0 (x806 x1065 x1674)) (=> (<= 0 x1065) (<= (x806 x1065 x1674) x1065))))
(define-fun x1713 ((x1065 Int) (x1674 Int)) Bool (and (x1737 x1065 x1674) (x347 x1065 x1674)))
(define-fun x1440 ((x1065 Int)) Bool (= (mod x1065 26959946667150639794667015087019630673637144422540572481103610249216) (x806 x1065 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1552 ((x1065 Int)) Bool (and (x1440 x1065) (x1713 x1065 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x458 ((x1065 Int)) Bool (= (mod x1065 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x1065 32) (x806 x1065 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x605 ((x1065 Int)) Bool (and (x1713 x1065 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x458 x1065)))
(define-fun x1772 ((x1065 Int)) Bool (= (mod x1065 2) (x806 x1065 1)))
(define-fun x349 ((x1065 Int)) Bool (and (x1772 x1065) (x1713 x1065 1)))
(define-fun x1445 ((x1065 Int)) Bool (= (mod x1065 128) (x806 x1065 127)))
(define-fun x1312 ((x1065 Int)) Bool (and (x1713 x1065 127) (x1445 x1065)))
(define-fun x1555 ((x1065 Int)) Bool (= (+ (x806 x1065 115792089237316195423570985008687907853269984665640564039457584007913129639680) (mod x1065 256)) (mod x1065 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1598 ((x1065 Int)) Bool (and (x1555 x1065) (x1713 x1065 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(define-fun x1641 ((x1065 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1372 x1065 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1372 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1065))))
(define-fun x461 ((x1065 Int)) Bool (and (= (x1372 x1065 0) x1065) (= x1065 (x1372 0 x1065))))
(define-fun x117 ((x1065 Int)) Bool (= x1065 (x1372 x1065 x1065)))
(define-fun x1056 ((x1065 Int)) Bool (and (x1641 x1065) (x117 x1065) (x461 x1065)))
(define-fun x1644 ((x1065 Int) (x1674 Int)) Bool (= (x1372 x1674 x1065) (x1372 x1065 x1674)))
(define-fun x1185 ((x1065 Int) (x1674 Int)) Bool (and (=> (<= 0 x1065) (>= (x1372 x1065 x1674) x1065)) (=> (<= 0 x1674) (<= x1674 (x1372 x1065 x1674))) (>= (+ x1674 x1065) (x1372 x1065 x1674))))
(define-fun x1172 ((x1065 Int) (x1674 Int)) Bool (and (x1185 x1065 x1674) (x1644 x1065 x1674)))
(define-fun x708 ((x876 Int)) Int (ite (> x645 x876) (x86 x876) 0))
(define-fun x1847 ((x876 Int)) Int (ite (> x1670 x876) (x535 x876) 0))
(define-fun x1270 ((x876 Int)) Int (ite (> x1697 x876) (x1242 x876) 0))
(define-fun x379 ((x876 Int)) Int (ite (< x876 x638) (x1004 x876) 0))
(define-fun x798 ((x876 Int)) Int (ite (= x876 x175) x37 (x1528 x876)))
(define-fun x1281 ((x876 Int)) Int (ite (= x876 x161) x783 (x174 x876)))
(define-fun x1507 ((x876 Int)) Int (ite x815 (ite x988 (x174 x876) (x1281 x876)) (x1281 x876)))
(define-fun x1433 ((x876 Int)) Int (ite x815 (ite x988 (x1528 x876) (x798 x876)) (x798 x876)))
(define-fun x1634 ((x876 x1549)) Int (x10 x876))
(define-fun x990 ((x876 x1549)) Int (ite x470 (x1634 x876) (ite x246 (x10 x876) (x1634 x876))))
(define-fun x882 ((x876 x1549)) Int (ite x434 (x990 x876) (x10 x876)))
(define-fun x1699 ((x876 x1549)) Int (ite (= x876 x169) 1 (x10 x876)))
(define-fun x1693 ((x876 x1549)) Int (ite x258 (x10 x876) (x1699 x876)))
(define-fun x902 ((x876 x1549)) Int (ite x1706 (x10 x876) (x1693 x876)))
(define-fun x989 ((x876 x1549)) Int (ite x771 (x902 x876) (ite x374 (x10 x876) (x902 x876))))
(define-fun x932 ((x876 x1549)) Int (ite x1733 (x882 x876) (x989 x876)))
(define-fun x599 ((x876 x1549)) Int (ite (= x876 x775) 0 (x10 x876)))
(define-fun x1708 ((x876 x1549)) Int (ite (= x876 x656) 1 (x599 x876)))
(define-fun x1216 ((x876 x1549)) Int (ite x199 (x10 x876) (x1708 x876)))
(define-fun x1848 ((x876 x1549)) Int (ite x138 (x10 x876) (x1216 x876)))
(define-fun x1492 ((x876 x1549)) Int (ite x152 (x1848 x876) (ite x217 (x10 x876) (x1848 x876))))
(define-fun x1611 ((x876 x1549)) Int (ite x522 (x932 x876) (x1492 x876)))
(define-fun x63 ((x876 x1549)) Int (x10 x876))
(define-fun x1766 ((x876 x1549)) Int (x10 x876))
(define-fun x186 ((x876 x1549)) Int (ite (= x876 x1763) 0 (x10 x876)))
(define-fun x1257 ((x876 x1549)) Int (ite x1368 (x1766 x876) (x186 x876)))
(define-fun x1846 ((x876 x1549)) Int (ite x919 (x63 x876) (ite x248 (x1257 x876) (x10 x876))))
(define-fun x825 ((x876 x1549)) Int (ite x717 (x1846 x876) (ite x619 (x10 x876) (x1846 x876))))
(define-fun x75 ((x876 x1549)) Int (ite x1009 (x1611 x876) (x825 x876)))
(define-fun x448 ((x876 x1549)) Int (ite x114 (x10 x876) (ite x263 (x75 x876) (x10 x876))))
(define-fun x1378 ((x876 Int)) Int (ite (= 128 x876) 4 (x1604 x876)))
(define-fun x1779 ((x876 Int)) Int (ite (= x876 160) x953 (x1623 x876)))
(define-fun x319 ((x876 Int)) Int (ite (= x876 164) x1813 (x1353 x876)))
(define-fun x585 ((x876 Int)) Int (ite (= 196 x876) x1613 (x319 x876)))
(define-fun x325 ((x876 Int)) Int (ite (= 228 x876) x1136 (x585 x876)))
(define-fun x1485 ((x876 Int)) Int (ite (= x876 128) 4 (x1390 x876)))
(define-fun x239 ((x876 Int)) Int (ite (= 160 x876) x1683 (x1657 x876)))
(define-fun x278 ((x876 Int)) Int (ite (= 164 x876) x389 (x1353 x876)))
(define-fun x564 ((x876 Int)) Int (ite (= x876 196) x556 (x278 x876)))
(define-fun x479 ((x876 Int)) Int (ite (= 228 x876) x914 (x564 x876)))
(define-fun x795 ((x876 Int)) Int (ite (= x876 128) 4 (x550 x876)))
(define-fun x1724 ((x876 Int)) Int (ite (= 160 x876) x126 (x617 x876)))
(define-fun x681 ((x876 Int)) Int (ite (= 164 x876) x1759 (x1353 x876)))
(define-fun x265 ((x876 Int)) Int (ite (= 196 x876) x1775 (x681 x876)))
(define-fun x1459 ((x876 Int)) Int (ite (= 228 x876) x1533 (x265 x876)))
(define-fun x1233 ((x876 Int)) Int (ite (= 164 x876) x145 (x84 x876)))
(define-fun x1047 ((x876 Int)) Int (ite (= 196 x876) 64 (x1233 x876)))
(define-fun x184 ((x876 Int)) Int (ite (= x876 228) x1553 (x1047 x876)))
(define-fun x1570 ((x876 Int)) Int (ite (= x876 128) x943 (x1039 x876)))
(define-fun x1732 ((x876 Int)) Int (ite (= 160 x876) x942 (x184 x876)))
(define-fun x625 ((x876 Int)) Int (ite (= x527 x876) x287 (x1353 x876)))
(define-fun x890 ((x876 Int)) Int (ite (= x637 x876) x1197 (x625 x876)))
(define-fun x1835 ((x876 Int)) Int (ite (= x876 x1590) x143 (x890 x876)))
(define-fun x1049 ((x876 x1549)) Int (x313 x876))
(define-fun x463 ((x876 x1549)) Int (ite x470 (x1049 x876) (ite x246 (x313 x876) (x1049 x876))))
(define-fun x1271 ((x876 x1549)) Int (ite x434 (x463 x876) (x313 x876)))
(define-fun x692 ((x876 x1549)) Int (x313 x876))
(define-fun x935 ((x876 x1549)) Int (ite x1706 (x313 x876) (x692 x876)))
(define-fun x1471 ((x876 x1549)) Int (ite x771 (x935 x876) (ite x374 (x313 x876) (x935 x876))))
(define-fun x1122 ((x876 x1549)) Int (ite x1733 (x1271 x876) (x1471 x876)))
(define-fun x355 ((x876 x1549)) Int (x313 x876))
(define-fun x484 ((x876 x1549)) Int (ite x138 (x313 x876) (x355 x876)))
(define-fun x417 ((x876 x1549)) Int (ite x152 (x484 x876) (ite x217 (x313 x876) (x484 x876))))
(define-fun x1729 ((x876 x1549)) Int (ite x522 (x1122 x876) (x417 x876)))
(define-fun x1479 ((x876 x1549)) Int (x313 x876))
(define-fun x163 ((x876 x1549)) Int (x313 x876))
(define-fun x1584 ((x876 x1549)) Int (ite x1368 (x163 x876) (x313 x876)))
(define-fun x331 ((x876 x1549)) Int (ite x919 (x1479 x876) (ite x248 (x1584 x876) (x313 x876))))
(define-fun x456 ((x876 x1549)) Int (ite x717 (x331 x876) (ite x619 (x313 x876) (x331 x876))))
(define-fun x1790 ((x876 x1549)) Int (ite x263 (ite x1009 (x1729 x876) (x456 x876)) (x313 x876)))
(define-fun x1234 ((x876 x1549)) Int (ite (= x876 (x1176 x1686)) x836 (x222 x876)))
(define-fun x401 ((x876 x1549)) Int (ite (= (x1176 x1151) x876) x50 (x1234 x876)))
(define-fun x1320 ((x876 Int)) Int (ite (= x903 x876) x954 (x1835 x876)))
(define-fun x880 ((x876 Int)) Int (ite x1025 (x1835 x876) (ite x1016 (x890 x876) (ite x1338 (x625 x876) (ite x211 (x1353 x876) (x1320 x876))))))
(define-fun x40 ((x876 Int)) Int (ite (= x876 x971) 0 (x880 x876)))
(define-fun x9 ((x876 Int)) Int (ite (= x876 260) x1157 (x325 x876)))
(define-fun x135 ((x876 Int)) Int (ite x70 (x325 x876) (ite x113 (x585 x876) (ite x696 (x319 x876) (ite x300 (x1353 x876) (x9 x876))))))
(define-fun x357 ((x876 Int)) Int (ite (= x146 x876) 0 (x135 x876)))
(define-fun x1741 ((x876 Int)) Int (ite (= x876 260) x1073 (x479 x876)))
(define-fun x1524 ((x876 Int)) Int (ite x918 (x479 x876) (ite x1619 (x564 x876) (ite x1125 (x278 x876) (ite x1525 (x1353 x876) (x1741 x876))))))
(define-fun x1615 ((x876 Int)) Int (ite (= x876 x725) 0 (x1524 x876)))
(define-fun x581 ((x876 Int)) Int (ite (= x876 260) x736 (x1459 x876)))
(define-fun x739 ((x876 Int)) Int (ite x1499 (x1459 x876) (ite x644 (x265 x876) (ite x1614 (x681 x876) (ite x1088 (x1353 x876) (x581 x876))))))
(define-fun x1327 ((x876 Int)) Int (ite (= x876 x441) 0 (x739 x876)))
(define-fun x1806 ((x876 Int)) Int (ite x1680 (x880 x876) (x40 x876)))
(define-fun x288 ((x876 x1549)) Int (ite (= (x1176 x1686) x876) x1158 (x222 x876)))
(define-fun x111 ((x876 x1549)) Int (ite (= (x1176 x1686) x876) x283 (x288 x876)))
(define-fun x221 ((x876 Int)) Int (ite (and (<= 100 x876) (> (+ (x1074 (- x839 100)) 100) x876)) (x1806 (+ (- x876 100) (x473 (+ 100 x1352)))) (x708 x876)))
(define-fun x624 ((x876 Int)) Int (ite x1057 (x135 x876) (x357 x876)))
(define-fun x1132 ((x876 x1549)) Int (ite (= x876 (x1176 x1686)) x198 (x222 x876)))
(define-fun x1493 ((x876 x1549)) Int (ite (= (x1176 x1686) x876) x1019 (x1132 x876)))
(define-fun x498 ((x876 Int)) Int (ite (= 128 x876) 33277650900348105781121326340019631498405652329376380866381358124409588547584 (x979 x876)))
(define-fun x1664 ((x876 Int)) Int (ite (= x876 132) x69 (x498 x876)))
(define-fun x1423 ((x876 Int)) Int (ite (= x876 164) x145 (x1664 x876)))
(define-fun x755 ((x876 Int)) Int (ite (= 196 x876) 96 (x1423 x876)))
(define-fun x1116 ((x876 Int)) Int (ite (= 228 x876) x1460 (x755 x876)))
(define-fun x164 ((x876 Int)) Int (ite x1167 (x1524 x876) (x1615 x876)))
(define-fun x1129 ((x876 x1549)) Int (ite (= x876 (x1176 x1686)) x16 (x222 x876)))
(define-fun x1498 ((x876 x1549)) Int (ite (= (x1176 x1686) x876) x1795 (x1129 x876)))
(define-fun x1046 ((x876 Int)) Int (ite (= 128 x876) 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x112 x876)))
(define-fun x1293 ((x876 Int)) Int (ite (= 132 x876) x69 (x1046 x876)))
(define-fun x1768 ((x876 Int)) Int (ite (= 164 x876) x1243 (x1293 x876)))
(define-fun x676 ((x876 Int)) Int (ite (= x876 196) 96 (x1768 x876)))
(define-fun x381 ((x876 Int)) Int (ite (= 228 x876) x1274 (x676 x876)))
(define-fun x45 ((x876 Int)) Int (ite x639 (x739 x876) (x1327 x876)))
(define-fun x1519 ((x876 x1549)) Int (ite (= x876 (x1176 x1686)) x35 (x222 x876)))
(define-fun x728 ((x876 x1549)) Int (ite (= (x1176 x1686) x876) x1592 (x1519 x876)))
(define-fun x602 ((x876 Int)) Int (ite (= x876 128) 656247078515407326148355443760548300161286948278503429861414951787075469312 (x683 x876)))
(define-fun x970 ((x876 Int)) Int (ite (= 132 x876) x1243 (x602 x876)))
(define-fun x1541 ((x876 Int)) Int (ite (= 164 x876) x145 (x970 x876)))
(define-fun x433 ((x876 Int)) Int (ite (= 196 x876) 96 (x1541 x876)))
(define-fun x592 ((x876 Int)) Int (ite (= x876 228) x316 (x433 x876)))
(define-fun x1268 ((x876 x1549)) Int (x1493 x876))
(define-fun x293 ((x876 x1549)) Int (ite (= (x1176 x1686) x876) x1681 (x1268 x876)))
(define-fun x469 ((x876 Int)) Int (ite (= 260 x876) x1845 (x1116 x876)))
(define-fun x570 ((x876 Int)) Int (ite x597 (x1116 x876) (x469 x876)))
(define-fun x934 ((x876 Int)) Int (ite (= x876 x994) 0 (x570 x876)))
(define-fun x915 ((x876 Int)) Int (ite x1716 (x570 x876) (x934 x876)))
(define-fun x1588 ((x876 Int)) Int (ite (and (>= x876 132) (< x876 (+ 132 (x1074 (- x1608 132))))) (x915 (+ (- x876 132) 260)) (x1847 x876)))
(define-fun x225 ((x876 Int)) Int (ite (= x876 x536) x993 (x1433 x876)))
(define-fun x1736 ((x876 Int)) Int (ite (= x876 x512) x1017 (x1507 x876)))
(define-fun x47 ((x876 Int)) Int (ite (= x368 x876) x1355 (x225 x876)))
(define-fun x1030 ((x876 Int)) Int (ite (= x876 x1823) x368 (x1736 x876)))
(define-fun x1669 ((x876 x1549)) Int (ite (= x876 x1287) x483 (x800 x876)))
(define-fun x1719 ((x876 Int)) Int (ite (= x876 x1676) x460 (x47 x876)))
(define-fun x1381 ((x876 Int)) Int (ite (= x876 x525) x1282 (x1030 x876)))
(define-fun x1705 ((x876 x1549)) Int (ite x792 (x1669 x876) (x800 x876)))
(define-fun x926 ((x876 Int)) Int (ite x792 (x1719 x876) (x1433 x876)))
(define-fun x155 ((x876 Int)) Int (ite x792 (x1381 x876) (x1507 x876)))
(define-fun x1408 ((x876 Int)) Int (ite (and (<= 128 x876) (> (+ x682 128) x876)) (x1588 (+ 132 (- x876 128))) (x936 x876)))
(define-fun x1377 ((x876 Int)) Int (ite (= x44 x876) 0 (x1408 x876)))
(define-fun x1098 ((x876 Int)) Int (ite (= 128 x876) x1829 (x1377 x876)))
(define-fun x395 ((x876 Int)) Int (ite (= 128 x876) x17 (x1377 x876)))
(define-fun x843 ((x876 Int)) Int (ite x1396 (x1377 x876) (x395 x876)))
(define-fun x435 ((x876 Int)) Int (ite x404 (x1098 x876) (x843 x876)))
(define-fun x1208 ((x876 x1549)) Int (x1498 x876))
(define-fun x1263 ((x876 x1549)) Int (ite (= x876 (x1176 x1686)) x545 (x1208 x876)))
(define-fun x74 ((x876 Int)) Int (ite (= x876 260) x1568 (x381 x876)))
(define-fun x1712 ((x876 Int)) Int (ite x674 (x381 x876) (x74 x876)))
(define-fun x244 ((x876 Int)) Int (ite (= x876 x1401) 0 (x1712 x876)))
(define-fun x1595 ((x876 Int)) Int (ite x1711 (x1712 x876) (x244 x876)))
(define-fun x236 ((x876 Int)) Int (ite (and (< x876 (+ 132 (x1074 (- x1723 132)))) (<= 132 x876)) (x1595 (+ 260 (- x876 132))) (x1270 x876)))
(define-fun x416 ((x876 Int)) Int (ite (= x876 x1722) x691 (x1433 x876)))
(define-fun x213 ((x876 Int)) Int (ite (= x512 x876) x1375 (x1507 x876)))
(define-fun x1432 ((x876 Int)) Int (ite (and (< x876 (+ 128 x1617)) (>= x876 128)) (x236 (+ 132 (- x876 128))) (x1411 x876)))
(define-fun x613 ((x876 Int)) Int (ite (= x1702 x876) 0 (x1432 x876)))
(define-fun x1294 ((x876 Int)) Int (ite (= x876 128) x1020 (x613 x876)))
(define-fun x706 ((x876 Int)) Int (ite (= 128 x876) x566 (x613 x876)))
(define-fun x1435 ((x876 Int)) Int (ite x840 (x613 x876) (x706 x876)))
(define-fun x821 ((x876 Int)) Int (ite x391 (x1294 x876) (x1435 x876)))
(define-fun x1163 ((x876 x1549)) Int (x728 x876))
(define-fun x95 ((x876 x1549)) Int (ite (= x876 (x1176 x1686)) x1018 (x1163 x876)))
(define-fun x339 ((x876 Int)) Int (ite (= 260 x876) x1089 (x592 x876)))
(define-fun x1186 ((x876 Int)) Int (ite x85 (x592 x876) (x339 x876)))
(define-fun x1673 ((x876 Int)) Int (ite (= x286 x876) 0 (x1186 x876)))
(define-fun x1438 ((x876 Int)) Int (ite x628 (x1186 x876) (x1673 x876)))
(define-fun x1392 ((x876 Int)) Int (ite (and (< x876 (+ (x1074 (- x892 132)) 132)) (<= 132 x876)) (x1438 (+ 260 (- x876 132))) (x379 x876)))
(define-fun x1221 ((x876 Int)) Int (ite (and (<= 128 x876) (> (+ x1215 128) x876)) (x1392 (+ 132 (- x876 128))) (x1021 x876)))
(define-fun x1302 ((x876 Int)) Int (ite (= x876 x1081) 0 (x1221 x876)))
(define-fun x8 ((x876 Int)) Int (ite (= x876 128) x528 (x1302 x876)))
(define-fun x1473 ((x876 Int)) Int (ite (= x876 128) x563 (x1302 x876)))
(define-fun x841 ((x876 Int)) Int (ite x857 (x1302 x876) (x1473 x876)))
(define-fun x808 ((x876 Int)) Int (ite x423 (x8 x876) (x841 x876)))
(define-fun x516 ((x876 x1549)) Int (x111 x876))
(define-fun x590 ((x876 x1549)) Int (ite (= (x1176 x1686) x876) x1600 (x516 x876)))
(define-fun x399 ((x876 Int)) Int (ite (and (< x876 (+ 128 x1654)) (>= x876 128)) (x221 (+ 100 (- x876 128))) (x306 x876)))
(define-fun x852 ((x876 Int)) Int (ite (= x876 x1666) 0 (x399 x876)))
(define-fun x1627 ((x876 Int)) Int (ite (= 128 x876) x1799 (x852 x876)))
(define-fun x1291 ((x876 Int)) Int (ite (= x876 128) x1292 (x852 x876)))
(define-fun x497 ((x876 Int)) Int (ite x829 (x852 x876) (x1291 x876)))
(define-fun x58 ((x876 Int)) Int (ite x312 (x1627 x876) (x497 x876)))
(define-fun x871 ((x876 x1549)) Int (ite x20 (x1844 x876) (x401 x876)))
(define-fun x1416 ((x876 x1549)) Int (ite (= (x1176 x1151) x876) x779 (x871 x876)))
(define-fun x1042 ((x1065 Int)) Bool (=> (and (not (= x1065 100000000000000000)) (not (= x1065 1680813743)) (not (= 3733007566 x1065)) (not (= x1065 4294967296)) (not (= x1065 24341557)) (not (= 1461501637330902918203684832716283019655932542975 x1065)) (not (= x1065 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1065 3081457077)) (not (= x1065 2867924802)) (not (= 2112976665 x1065)) (not (= x1065 78829575338057407266098799593532030895783219923606930547737006156155256307712)) (not (= x1065 2923951457)) (not (= x1065 1234336674)) (not (= 3948783980 x1065)) (not (= x1065 288768741)) (not (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 x1065)) (not (= x1065 2279315017)) (not (= x1065 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (not (= x1065 50455196340412629536459377552246818957342304218644716315923982585962625499136)) (not (= x1065 1039635593)) (< 10000 x1065) (not (= x1065 2726977199)) (not (= 1030951317 x1065)) (not (= 656247078515407326148355443760548300161286948278503429861414951787075469312 x1065)) (not (= x1065 106459005500898838667931598610041423549574964228674563513410788872267948359680)) (not (= x1065 1871487246)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1065)) (not (= 1461501637330902918203684832716283019655932542976 x1065)) (not (= x1065 56965738197333823925951794324075424010313516842063129668313081903848242544640)) (not (= x1065 18446744073709551615)) (not (= x1065 3285302901)) (not (= 33277650900348105781121326340019631498405652329376380866381358124409588547584 x1065)) (not (= x1065 115792089237316195423570985008687907853269984665640564039457484007913129639935)) (not (= x1065 839595567)) (not (= x1065 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 4294967295 x1065))) (not ((_ is x295) (x1176 x1065)))))
(assert (x1419 x179))
(assert (x1419 x505))
(assert (x1419 x1580))
(assert (x1419 x437))
(assert (x1419 x682))
(assert (= (mod (* x719 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x478 x719 224)))
(assert (x1419 x172))
(assert (= (or x591 x917) x1356))
(assert (x1419 x778))
(assert (x1419 x126))
(assert (= (x1427 (x1176 (x613 288))) (x613 288)))
(assert (= x917 (and (not x195) x1807)))
(assert (x1419 x356))
(assert (= (x1176 (x1427 x860)) x860))
(assert (= (or x1778 x312) x1245))
(assert (x1419 x569))
(assert (= x218 (and x774 x1300)))
(assert (= x1093 (and x307 x1045)))
(assert (x1419 x1264))
(assert (= (and x1720 (not x777)) x1557))
(assert (x1419 x903))
(assert (x1312 x132))
(assert (x518 x132))
(assert (= x1160 (=> (and (= x1115 (< x1403 x814)) (or (and (= x441 (x473 (+ x1403 164))) x1115) (not x1115))) x1601)))
(assert (x1419 x427))
(assert (= x1614 (and (not x1830) x1421)))
(assert (x1419 x42))
(assert (x1042 (x435 320)))
(assert (= x373 (=> (and (= x1332 x247) (= x847 x753) (= x688 x396)) x327)))
(assert (x1419 x892))
(assert (= x207 (and x81 (not x1521))))
(assert (x1419 x309))
(assert (= x1389 (and x204 x274)))
(assert (x1419 x1782))
(assert (x518 x738))
(assert (= x1472 (and x1385 x53)))
(assert (x1419 x1391))
(assert (x1419 x930))
(assert (= x1441 (and x1841 x874)))
(assert (x1419 x92))
(assert (= (and x1749 x127) x562))
(assert (=> (>= 10000 (x808 224)) (= (x295 (x808 224)) (x1176 (x808 224)))))
(assert (= x1038 (or x910 x414)))
(assert (= 0 (x1657 160)))
(assert (= (x295 26959946667150639794667015087019630673637144422540572481103610249215) (x1176 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (and (not x1319) x723) x582))
(assert (= x629 (=> (and (= (x222 (x1176 x1686)) x52) (= (x473 (+ x534 164)) x701) (= x894 (x1074 (- x701 164))) (= 164 x949) (= x718 (and (< (+ x622 x1105) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x52 x1105))) (= (x222 (x1176 x1686)) x622)) (and (=> (and (and (= x1019 (x473 (+ x1143 x1105))) (= x1670 4) (= x1670 x894) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1143 x1105)) (= (- x321 x1105) x198) (= (x879 (x1176 x1686)) x200) (= (= x1105 0) x831) (< 0 x200) (= (x222 (x1176 x1686)) x321) (= x973 106459005500898838667931598610041423549574964228674563513410788872267948359680) (= (x1132 (x1176 x1686)) x1143)) x718) (and (=> (and (not x831) (and (= x1332 0) (= x1750 x753))) x373) (=> (and (and (<= x145 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1460 (x835 96)) (>= x145 0) (= 3948783980 x850) (< x69 1461501637330902918203684832716283019655932542976) (not (> 2112976665 x850)) (not (> 3948783980 x850)) (not (< x850 3081457077)) (not (> 4 x1670)) (= x1538 (> x1460 0)) (<= x69 1461501637330902918203684832716283019655932542975) (>= x69 0) (not (< x850 3733007566))) x831) (and (=> (and (not x1538) (= x709 0)) x1817) (=> x1538 x1842))))) (=> (and (and (= 0 x450) (= x1750 x1351) (= 0 x530)) (not x718)) x176)))))
(assert (x1419 x750))
(assert (x1419 x1742))
(assert (x1419 x1676))
(assert (= (and x1594 x177) x820))
(assert (= x771 (and (not x866) x502)))
(assert (x1042 (x1377 320)))
(assert (x1598 x916))
(assert (x1419 x687))
(assert (x1419 x320))
(assert (x1042 (x821 288)))
(assert (x1042 x1358))
(assert (= x1262 (and (not x317) x90)))
(assert (= (x435 224) (x1427 (x1176 (x435 224)))))
(assert (x1419 x1418))
(assert (= (and x367 x609) x1289))
(assert (x1419 x439))
(assert (= (or x829 x1727) x1778))
(assert (x1172 x97 x1650))
(assert (x518 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (+ (x1427 x308) x298) (x1427 (x1509 x308 x298))))
(assert (= (=> (and (= (= 0 x959) x1252) (or (and (and (= x1554 x1765) (= x304 x959)) (not x1252)) (and x1252 (and (= x311 (x871 (x1176 x1151))) (= (x473 (+ x1430 x1809)) x1014) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1430 x1809)) (= x1765 x1554) (= x1809 (ite (= x959 0) x1105 0)) (= x304 x959) (= (- x311 x1809) x779) (= (x1416 (x1176 x1686)) x1430))))) x1487) x1051))
(assert (= (or x85 x1005) x704))
(assert (x1419 x584))
(assert (= (and x1360 (not x594)) x76))
(assert (x1419 x1344))
(assert (= x1301 (and (not x110) x482)))
(assert (x1419 x508))
(assert (x1056 x763))
(assert (x1042 (x58 320)))
(assert (= (and (=> (and (and (= (div x215 2) x538) (= x322 (x473 (+ x538 1))) (= (< x79 x322) x1155)) (not x1045)) (and (=> (and x1155 (and (= x1750 x640) (= 0 x634))) x27) (=> (and (and (<= 0 x668) (<= x668 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (not (= x668 x804)) x1789)) (not x1155)) (and (=> (and x1789 (= x1656 x1789)) x911) (=> (not x1789) x733))))) (=> (and (and (= x1750 x640) (= x634 0)) x1045) x27)) x572))
(assert (= (and (not x548) x816) x106))
(assert (x1419 x845))
(assert (= (and x375 x332) x1219))
(assert (x1419 x94))
(assert (x1419 x269))
(assert (=> (<= x673 10000) (= (x295 x673) (x1176 x673))))
(assert (= x482 (or x965 x741)))
(assert (= (and (not x62) x72) x105))
(assert (= x1202 (or (and (not x1448) x1478) x446)))
(assert (= (x1427 (x1176 (x613 128))) (x613 128)))
(assert (x1419 x566))
(assert (=> (<= (x852 224) 10000) (= (x295 (x852 224)) (x1176 (x852 224)))))
(assert (=> (>= 10000 (x1377 160)) (= (x1176 (x1377 160)) (x295 (x1377 160)))))
(assert (= x354 (and (not x1037) x784)))
(assert (x1419 x574))
(assert (x1419 x1722))
(assert (x1419 x1762))
(assert (= (and x1714 (not x1011)) x988))
(assert (x1419 x230))
(assert (= 0 (x936 256)))
(assert (x1419 x1642))
(assert (x1419 x1345))
(assert (x1419 x763))
(assert (= x1415 (or x794 x148 x1254)))
(assert (= x1822 (and x1429 x1329)))
(assert (= x741 (and x7 x1791)))
(assert (= 0 (x1411 224)))
(assert (x1419 x955))
(assert (= (x84 192) 0))
(assert (= (=> (and (and (not (> 1030951317 x955)) (= (not x700) x1080) (> 2112976665 x955) (<= x1517 255) (< 0 x1333) (= x1517 (x448 x615)) (not (< x955 839595567)) (= 1030951317 x955) (>= x1517 0) (< x1517 256) (< x955 1680813743) (= x700 (= x1517 0)) (= (x879 (x1176 x1686)) x1333) (= (x1364 (x295 0) (x295 2) 0) x615) (= (ite x1080 1 0) x730) (= 0 x272)) (and (= (not x125) x651) (= x1371 x125) (= x1371 (not (= x730 0))))) x651) x921))
(assert (= (and x901 x128) x867))
(assert (= (or x1706 x1118) x502))
(assert (x1419 x528))
(assert (x1419 x1405))
(assert (x1419 x797))
(assert (x1419 x115))
(assert (= x810 (=> (= (not (> x29 32)) x438) (and x438 x57))))
(assert (= x784 (and x297 x305)))
(assert (x1419 x511))
(assert (= (or x1486 x938 x105) x1029))
(assert (= (and x1306 x444) x893))
(assert (x1419 x315))
(assert (= (or x1009 x1038) x263))
(assert (= (and (=> (and (and (= x1277 (= x996 (ite x1083 1 0))) (= (div x791 2) x1205) (= (x806 1 x791) x996) (= (> 32 x661) x1083) (= (ite (< 0 x996) x1205 (x806 127 x1205)) x661)) x1099) (and (=> x1277 x595) (=> (and (and (= (x1509 x308 x298) x860) (= x298 (div x1066 32)) (= x308 (x1703 (x295 5) 0)) (= (> x1617 0) x276) (= (x473 (+ 31 x661)) x1066)) (not x1277)) (and (=> (and (not x276) (and (= x1412 0) (= x153 x308))) x947) (=> (and (= (< 31 x1617) x1792) x276) (and (=> (and (not x1792) (and (= (ite x653 x703 x1194) x1412) (= (x473 (+ x1248 x238)) x703) (= x238 (x806 115792089237316195423570985008687907853269984665640564039457584007913129639680 x252)) (= x1248 (x473 (+ x1617 x1617))) (= (x236 132) x252) (= (x473 (+ x1248 x238)) x1556) (= x1187 (>= 255 x1248)) (= (x1372 x1248 x238) x1566) (= x308 x153) (= (>= 255 x1248) x653) (= x1194 (ite x1187 x1556 x1566)))) x947) (=> (and (and (= x1665 (x473 (+ x1617 x1617))) (= x908 (x473 (+ 1 x1665))) (= (> x824 132) x515) (= (x473 (+ x1617 132)) x824)) x1792) (and (=> (and (= x743 x308) (not x515)) x100) (=> x515 x363))))))))) (=> (not x1099) x1398)) x533))
(assert (= x1639 (=> (and (= (x1509 x1660 1) x861) (= x1003 (not (> x1075 164)))) (and (=> (= x1516 x861) x1834) x1003))))
(assert (= (or x1128 x758) x757))
(assert (= (=> (and (= (x222 (x1176 x1686)) x583) (= x277 (and (>= x583 x1105) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1105 x1119)))) (= x1119 (x222 (x1176 x1151)))) (and (=> (and (and (or (and x136 (and x1694 (> 4294967296 x1765) (= (= (x1844 (x1176 x1151)) x1407) x1534) x1534 (= x1694 (<= x883 (x1844 (x1176 x1686)))) (= x883 (x401 (x1176 x1686))) (= (x401 (x1176 x1151)) x1407))) (not x136)) (and (= (x473 (+ x1740 x1105)) x50) (= x1740 (x1234 (x1176 x1151))) (= (- x1062 x1105) x836) (< (+ x1740 x1105) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (< 0 x959) x136) (= x1062 (x222 (x1176 x1686))))) x277) x1051) (=> (and (and (= x304 0) (= x1554 0)) (not x277)) x1487))) x1783))
(assert (x349 x1628))
(assert (= (and (not x259) x394) x744))
(assert (= x424 x790))
(assert (= (x1427 (x1176 (x58 224))) (x58 224)))
(assert (x1419 x298))
(assert (= x327 (=> (and (or (and (and (= x688 x530) (= x247 x450) (= x847 x1351)) (not x811)) (and x811 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1800 x940)) (= x530 x688) (= x940 (ite (= 0 x247) x1105 0)) (= x247 x450) (= x762 (x473 (+ x1800 x940))) (= x1800 (x293 (x1176 x1686))) (= x847 x1351) (= (x1268 (x1176 x1686)) x1305) (= (- x1305 x940) x1681)))) (= x811 (= 0 x247))) x176)))
(assert (x1419 x457))
(assert (= (x979 324) 0))
(assert (x1419 x406))
(assert (=> (<= (x808 192) 10000) (= (x295 (x808 192)) (x1176 (x808 192)))))
(assert (x1419 x389))
(assert (x1419 x1157))
(assert (= x1497 (and x226 x6)))
(assert (x1419 x1380))
(assert (= x1336 (=> (and (= (x849 x340) x1292) (= (not (< 32 x986)) x1540)) (and x1540 x1179))))
(assert (= x941 (or x514 x1367)))
(assert (= x1776 (=> (and (= x485 (>= 224 x1418)) (= (x1074 (- x1702 128)) x1418) (= (x473 (+ x1617 128)) x1702)) (and x485 (=> (and (= x603 (> 32 x586)) (= x586 (ite (< 0 x1183) x1225 (x806 127 x1225))) (= x1523 (= (ite x603 1 0) x1183)) (= x1225 (div x791 2)) (= (x806 1 x791) x1183) (= x471 (ite (>= 32 x1418) (x1703 (x1176 (x613 128)) 0) (ite (<= x1418 64) (x1364 (x1176 (x613 128)) (x1176 (x613 160)) 0) (ite (>= 96 x1418) (x1771 (x1176 (x613 128)) (x1176 (x613 160)) (x1176 (x613 192)) 0) (ite (>= 128 x1418) (x1606 (x1176 (x613 128)) (x1176 (x613 160)) (x1176 (x613 192)) (x1176 (x613 224)) 0) (ite (<= x1418 160) (x1310 (x1176 (x613 128)) (x1176 (x613 160)) (x1176 (x613 192)) (x1176 (x613 224)) (x1176 (x613 256)) 0) (ite (>= 192 x1418) (x28 (x1176 (x613 128)) (x1176 (x613 160)) (x1176 (x613 192)) (x1176 (x613 224)) (x1176 (x613 256)) (x1176 (x613 288)) 0) (ite (>= 224 x1418) (x1341 (x1176 (x613 128)) (x1176 (x613 160)) (x1176 (x613 192)) (x1176 (x613 224)) (x1176 (x613 256)) (x1176 (x613 288)) (x1176 (x613 320)) 0) (x1176 x1078)))))))))) (and (=> x1523 x595) (=> (and (and (= x991 (= 0 x437)) (= x437 (x806 1 x791))) (not x1523)) (and (=> (and (and (= (> x586 0) x1836) (= x614 (x1703 (x295 5) 0))) (not x991)) (and (=> x1836 x366) (=> (not x1836) x1468))) (=> (and x991 (and (= (x806 115792089237316195423570985008687907853269984665640564039457584007913129639680 x791) x1020) (= (x473 (+ 128 x586)) x1162) (= x1006 x1162))) x1244)))))))))
(assert (=> (>= 10000 (x435 320)) (= (x295 (x435 320)) (x1176 (x435 320)))))
(assert (= 0 (x979 452)))
(assert (= (x295 115792089237316195423570985008687907853269984665640564039457484007913129639935) (x1176 115792089237316195423570985008687907853269984665640564039457484007913129639935)))
(assert (x1042 (x613 128)))
(assert (x1419 x786))
(assert (x349 x791))
(assert (x1419 x869))
(assert (= x400 (and x227 x1441)))
(assert (= (x821 128) (x1427 (x1176 (x821 128)))))
(assert (x1419 x161))
(assert (= (and (not x156) x1513) x1111))
(assert (x1419 x1765))
(assert (x518 x252))
(assert (= x1114 (or x1314 x138)))
(assert (= (and x253 x571) x1147))
(assert (= (and (not x1651) x377) x1025))
(assert (x1419 x1629))
(assert (= (and (not x444) x1306) x1167))
(assert (= (and x1497 x121) x1354))
(assert (x1042 x492))
(assert (x1419 x1654))
(assert (x1419 x762))
(assert (x1419 x1071))
(assert (= (and (not x1825) x1114) x152))
(assert (x1042 (x852 256)))
(assert (x1419 x120))
(assert (x1419 x1316))
(assert (x1419 x982))
(assert (= (or x918 x1619 x1125 x1761 x1525) x1306))
(assert (= x1838 (and (not x121) x1497)))
(assert (x518 127))
(assert (x1042 (x613 320)))
(assert (= (x1427 (x295 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x518 x1137))
(assert (x1419 x1477))
(assert (= x249 (and x1647 x1523)))
(assert (x1419 x1535))
(assert (= (and x520 (not x67)) x1088))
(assert (= (+ (x1427 x1069) x1) (x1427 (x1509 x1069 x1))))
(assert (x1419 x897))
(assert (x1042 (x613 192)))
(assert (= x104 (and (not x1376) x1495)))
(assert (= (x1176 656247078515407326148355443760548300161286948278503429861414951787075469312) (x295 656247078515407326148355443760548300161286948278503429861414951787075469312)))
(assert (= (and x657 x1200) x451))
(assert (x1419 x952))
(assert (= x1260 (=> (and (= (x1074 (- x1439 128)) x944) (= x1227 (>= 224 x944))) (and (=> (and (= (= x1843 x1235) x1326) (= (ite (<= x944 32) (x1703 (x1176 (x435 128)) 0) (ite (>= 64 x944) (x1364 (x1176 (x435 128)) (x1176 (x435 160)) 0) (ite (>= 96 x944) (x1771 (x1176 (x435 128)) (x1176 (x435 160)) (x1176 (x435 192)) 0) (ite (>= 128 x944) (x1606 (x1176 (x435 128)) (x1176 (x435 160)) (x1176 (x435 192)) (x1176 (x435 224)) 0) (ite (<= x944 160) (x1310 (x1176 (x435 128)) (x1176 (x435 160)) (x1176 (x435 192)) (x1176 (x435 224)) (x1176 (x435 256)) 0) (ite (<= x944 192) (x28 (x1176 (x435 128)) (x1176 (x435 160)) (x1176 (x435 192)) (x1176 (x435 224)) (x1176 (x435 256)) (x1176 (x435 288)) 0) (ite (>= 224 x944) (x1341 (x1176 (x435 128)) (x1176 (x435 160)) (x1176 (x435 192)) (x1176 (x435 224)) (x1176 (x435 256)) (x1176 (x435 288)) (x1176 (x435 320)) 0) (x1176 x492)))))))) x1235) (= (not x1326) x1656)) x911) x1227))))
(assert (= 2112976665 (x1427 (x295 2112976665))))
(assert (= (and x1825 x1114) x1013))
(assert (= x1256 (x1176 (x1427 x1256))))
(assert (= x1109 x345))
(assert (= x1008 (and x811 x64)))
(assert (x1419 x1665))
(assert (x1042 (x1377 288)))
(assert (x1419 x703))
(assert (= x1340 (and x1472 x350)))
(assert (= (and x618 x140) x985))
(assert (x1419 x1337))
(assert (x1419 x1821))
(assert (= (or x761 x134) x1450))
(assert (= (or x354 x142) x1190))
(assert (=> (>= 10000 x1686) (= (x295 x1686) (x1176 x1686))))
(assert (= (and x1607 x1709) x1091))
(assert (x1419 x1775))
(assert (x1419 x231))
(assert (= 0 (x1623 192)))
(assert (x1419 x813))
(assert (x1419 x1052))
(assert (x518 x720))
(assert (= (=> (and (or (not x1491) (and x1491 (= x1401 (x473 (+ 260 x1274))))) (= x1491 (< x1274 x1461))) x206) x1527))
(assert (x1419 x493))
(assert (x1042 (x808 224)))
(assert (x1042 (x808 160)))
(assert (= (and (not x817) x133) x1573))
(assert (= x792 (and x1214 x1142)))
(assert (x1419 x1554))
(assert (x1419 x1035))
(assert (x1419 x1620))
(assert (x1042 (x435 192)))
(assert (x1419 x1193))
(assert (=> (>= 10000 x802) (= (x1176 x802) (x295 x802))))
(assert (=> (>= 10000 (x821 160)) (= (x295 (x821 160)) (x1176 (x821 160)))))
(assert (= (and x453 x245) x699))
(assert (= x1085 (and x773 (not x830))))
(assert (= x258 (or (and x773 x830) (and x1787 x334) x1238 x411 x1573 x68 x162 (and x1696 (not x1798)) (and x1231 (not x1000)) x873 x1399 x1064 (and x181 x1508) x863)))
(assert (= (x295 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1176 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1419 x296))
(assert (= (and x862 (not x1203)) x1501))
(assert (= (x1176 (x1427 x384)) x384))
(assert (x1419 x351))
(assert (x1419 x1764))
(assert (= x171 (and x387 x116)))
(assert (x518 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1419 x141))
(assert (= (=> (and (= x1117 x1646) (= x256 x636)) x420) x1744))
(assert (x1419 x512))
(assert (x518 x261))
(assert (= (and (not x1491) x1490) x1711))
(assert (= (and x1585 x1199) x1761))
(assert (x1419 x561))
(assert (x1042 (x808 288)))
(assert (x1419 x1430))
(assert (x1419 x79))
(assert (= (=> (and (= (x1074 (- x1006 128)) x266) (= x844 (<= x266 224))) (and (=> (and (= (ite (>= 32 x266) (x1703 (x1176 (x821 128)) 0) (ite (>= 64 x266) (x1364 (x1176 (x821 128)) (x1176 (x821 160)) 0) (ite (>= 96 x266) (x1771 (x1176 (x821 128)) (x1176 (x821 160)) (x1176 (x821 192)) 0) (ite (>= 128 x266) (x1606 (x1176 (x821 128)) (x1176 (x821 160)) (x1176 (x821 192)) (x1176 (x821 224)) 0) (ite (>= 160 x266) (x1310 (x1176 (x821 128)) (x1176 (x821 160)) (x1176 (x821 192)) (x1176 (x821 224)) (x1176 (x821 256)) 0) (ite (>= 192 x266) (x28 (x1176 (x821 128)) (x1176 (x821 160)) (x1176 (x821 192)) (x1176 (x821 224)) (x1176 (x821 256)) (x1176 (x821 288)) 0) (ite (<= x266 224) (x1341 (x1176 (x821 128)) (x1176 (x821 160)) (x1176 (x821 192)) (x1176 (x821 224)) (x1176 (x821 256)) (x1176 (x821 288)) (x1176 (x821 320)) 0) (x1176 x1053)))))))) x1040) (= (not x1253) x1099) (= x1253 (= x1040 x471))) x533) x844)) x1244))
(assert (= (x979 260) 0))
(assert (= x170 (and x277 x732)))
(assert (x1419 x1412))
(assert (x518 x1117))
(assert (x1419 x1258))
(assert (x1419 x1624))
(assert (= (and x1150 x1496) x481))
(assert (= x90 (and x1572 x1668)))
(assert (= 0 (x112 356)))
(assert (= x623 (and x98 x1307)))
(assert (x1419 x1484))
(assert (x518 x695))
(assert (= (=> (and (= x1484 x1171) (= x490 x429)) x361) x1168))
(assert (=> (>= 10000 (x613 224)) (= (x1176 (x613 224)) (x295 (x613 224)))))
(assert (= (or x434 x1548) x1733))
(assert (x1419 x1845))
(assert (= x1237 (and x253 (not x571))))
(assert (x349 x1117))
(assert (x1419 x1308))
(assert (x1419 x1569))
(assert (x1419 x1248))
(assert (= (x1427 (x1176 (x58 288))) (x58 288)))
(assert (x1419 x527))
(assert (x1419 x1715))
(assert (x1042 x1494))
(assert (= x896 (and x1214 (not x1142))))
(assert (= (x1427 (x1176 x549)) x549))
(assert (x1419 x1191))
(assert (x1419 x1020))
(assert (x1419 x730))
(assert (x518 x1205))
(assert (x1419 x1251))
(assert (= (=> (and (= x576 (x473 (+ 128 x586))) (= x1006 x576)) x1244) x1468))
(assert (x1419 x1666))
(assert (x1419 x397))
(assert (x1419 x1113))
(assert (= x66 (=> (and (= x23 x450) (= x1510 x1351)) x1704)))
(assert (= (x1623 224) 0))
(assert (x1419 x1801))
(assert (x1419 x949))
(assert (x1419 x97))
(assert (= (and x1387 (not x1127)) x488))
(assert (= x610 (and x233 x772)))
(assert (=> (<= (x821 256) 10000) (= (x295 (x821 256)) (x1176 (x821 256)))))
(assert (x1419 x1280))
(assert (x1419 x224))
(assert (x518 x633))
(assert (= (x306 256) 0))
(assert (x1419 x1613))
(assert (=> (>= 10000 (x1377 320)) (= (x295 (x1377 320)) (x1176 (x1377 320)))))
(assert (= x72 (and (not x1212) x998)))
(assert (= (and (not x1792) x1102) x55))
(assert (= x216 (and x250 x1226)))
(assert (= (x808 320) (x1427 (x1176 (x808 320)))))
(assert (= (and x385 x1389) x1005))
(assert (= (and x77 (not x1115)) x639))
(assert (x1419 x314))
(assert (x1419 x202))
(assert (=> (<= (x435 256) 10000) (= (x1176 (x435 256)) (x295 (x435 256)))))
(assert (= (=> (and (= 1 x957) (= x1750 x611)) x123) x1398))
(assert (x1419 x1173))
(assert (x1419 x1677))
(assert (x1419 x662))
(assert (x1419 x943))
(assert (= 0 (x306 288)))
(assert (x1419 x1206))
(assert (= x619 (and x1561 (not x718))))
(assert (= 0 (x1411 160)))
(assert (= (and x723 x1319) x663))
(assert (x1419 x542))
(assert (x1419 x1358))
(assert (= 1680813743 (x1427 (x295 1680813743))))
(assert (= (=> (and (= x1071 x1750) (= x1380 0) (= x565 x670)) x1284) x310))
(assert (x1419 x1460))
(assert (= (x979 356) 0))
(assert (x1419 x302))
(assert (= (or x403 x1518) x1577))
(assert (x1419 x1303))
(assert (= x281 (and x726 x770)))
(assert (= x740 (or x459 x404)))
(assert (= (x936 224) 0))
(assert (= (x852 288) (x1427 (x1176 (x852 288)))))
(assert (x1042 (x852 288)))
(assert (x518 x1251))
(assert (= (x295 1461501637330902918203684832716283019655932542975) (x1176 1461501637330902918203684832716283019655932542975)))
(assert (x1419 x1119))
(assert (= (+ (x1427 x256) 1) (x1427 (x1509 x256 1))))
(assert (x1419 x738))
(assert (x1419 x655))
(assert (x1419 x1362))
(assert (= x1299 (and x1054 x647)))
(assert (x1419 x1407))
(assert (x1419 x1612))
(assert (= (and x1616 x524) x404))
(assert (x1419 x996))
(assert (x1419 x1078))
(assert (= (=> (and (= x1762 0) (= x1173 x1612) (= x1685 x1750)) x842) x333))
(assert (= (or x792 x267) x598))
(assert (x1419 x1726))
(assert (x1419 x4))
(assert (x1419 x275))
(assert (= (x1021 128) 0))
(assert (x1419 x44))
(assert (= (=> (and (= x1750 x1071) (= 1 x1380) (= x670 0)) x1284) x36))
(assert (= x402 (=> (and (= x640 x1750) (= x634 0)) x27)))
(assert (x1056 x1248))
(assert (x1419 x701))
(assert (x349 x1742))
(assert (x1419 x129))
(assert (x1419 x1352))
(assert (x1419 x881))
(assert (= (or x318 x1368) x657))
(assert (x1419 x637))
(assert (= (x1176 3733007566) (x295 3733007566)))
(assert (x1042 (x58 288)))
(assert (= (and x529 x1547) x212))
(assert (= (x1176 100000000000000000) (x295 100000000000000000)))
(assert (x1419 x791))
(assert (= (x1353 (+ 160 (x473 (+ 100 x1352)))) 0))
(assert (x1419 x883))
(assert (= (x295 1039635593) (x1176 1039635593)))
(assert (x1419 x1797))
(assert (x1419 x686))
(assert (x1419 x707))
(assert (= 0 (x1021 192)))
(assert (x1419 x1136))
(assert (x1042 (x435 224)))
(assert (= (=> (= x554 (= 0 x957)) (and (=> (and (and (= 0 x1612) (= 1 x1762) (= x1685 x611)) (not x554)) x842) (=> x554 x333))) x43))
(assert (= (and x468 (not x991)) x432))
(assert (x1419 x858))
(assert (x1419 x1568))
(assert (= (or x610 x1680) x1298))
(assert (= x1009 (or x960 x522)))
(assert (x1419 x789))
(assert (= (x1427 (x1176 x1258)) x1258))
(assert (= 0 (x683 420)))
(assert (x1419 x280))
(assert (= (and x1692 (not x859)) x612))
(assert (x1419 x1675))
(assert (= (and x1655 x1550) x609))
(assert (x1419 x1077))
(assert (= (x1427 (x1176 (x613 256))) (x613 256)))
(assert (= x1841 (and x255 x567)))
(assert (= x1331 (=> (= (= 0 x466) x343) (and (=> x343 x921) (=> (and (and (or (and (= x1105 x1684) x571) (and (and (= x1773 x1105) (= x1773 (x1074 (- x1684 100000000000000000))) (not (> 100000000000000000 x1684))) (not x571))) (and (= x571 (= x666 0)) (<= 0 x1684) (<= x1684 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x666 256) (= (x1509 x1649 3) x1786) (= x1684 (x1839 x1688)) (= x666 (x313 x1786)) (= x1649 (x1364 (x1176 x813) (x295 7) 0)) (<= 0 x666) (= (x1509 x1649 1) x1688) (<= x666 255))) (not x343)) x1328)))))
(assert (=> (<= (x821 320) 10000) (= (x295 (x821 320)) (x1176 (x821 320)))))
(assert (= (x1176 2867924802) (x295 2867924802)))
(assert (x518 x1425))
(assert (= (=> (and (= x1191 x634) (= x1345 x640)) x1161) x27))
(assert (= x1475 (=> (= x1488 (not (< 1 x924))) (and x1488 x196))))
(assert (x1419 x460))
(assert (=> (<= (x435 128) 10000) (= (x1176 (x435 128)) (x295 (x435 128)))))
(assert (x1419 x719))
(assert (= (x1427 (x1176 x1078)) x1078))
(assert (= (and x805 x1397) x91))
(assert (= x1076 (=> (and (= x80 (<= x93 224)) (= x93 (x1074 (- x1343 128)))) (and x80 (=> (and (= (ite (<= x93 32) (x1703 (x1176 (x58 128)) 0) (ite (>= 64 x93) (x1364 (x1176 (x58 128)) (x1176 (x58 160)) 0) (ite (<= x93 96) (x1771 (x1176 (x58 128)) (x1176 (x58 160)) (x1176 (x58 192)) 0) (ite (>= 128 x93) (x1606 (x1176 (x58 128)) (x1176 (x58 160)) (x1176 (x58 192)) (x1176 (x58 224)) 0) (ite (<= x93 160) (x1310 (x1176 (x58 128)) (x1176 (x58 160)) (x1176 (x58 192)) (x1176 (x58 224)) (x1176 (x58 256)) 0) (ite (>= 192 x93) (x28 (x1176 (x58 128)) (x1176 (x58 160)) (x1176 (x58 192)) (x1176 (x58 224)) (x1176 (x58 256)) (x1176 (x58 288)) 0) (ite (<= x93 224) (x1341 (x1176 (x58 128)) (x1176 (x58 160)) (x1176 (x58 192)) (x1176 (x58 224)) (x1176 (x58 256)) (x1176 (x58 288)) (x1176 (x58 320)) 0) (x1176 x631)))))))) x88) (= x96 (= x854 x88)) (= (not x96) x931)) x961)))))
(assert (x1419 x1515))
(assert (x1419 x1537))
(assert (= x809 (and x875 x907)))
(assert (x1419 x190))
(assert (x1419 x330))
(assert (x1598 x791))
(assert (= (and x1382 (not x1538)) x597))
(assert (= (and x672 x326) x1513))
(assert (x1419 x1529))
(assert (x1419 x1117))
(assert (= (x852 224) (x1427 (x1176 (x852 224)))))
(assert (= 3081457077 (x1427 (x295 3081457077))))
(assert (x1419 x884))
(assert (x1419 x455))
(assert (x1419 x1510))
(assert (= x1058 (and x364 x495)))
(assert (= x983 (=> (and (= x939 x512) (= 0 x466)) x1331)))
(assert (= x1055 (and x1840 x1100)))
(assert (x1419 x546))
(assert (x1419 x950))
(assert (= (=> (and (= x1191 1) (= x1345 x1750)) x1161) x756))
(assert (x1419 x466))
(assert (= x780 (and x259 x394)))
(assert (x1312 x1406))
(assert (= x568 (or x1379 x91)))
(assert (x1419 x1650))
(assert (= x818 (or x1058 (and (not x364) x495))))
(assert (x1419 x1224))
(assert (x1419 x49))
(assert (= (x1427 (x295 839595567)) 839595567))
(assert (=> (>= 10000 (x58 128)) (= (x295 (x58 128)) (x1176 (x58 128)))))
(assert (x1419 x1723))
(assert (x1419 x291))
(assert (= 1030951317 (x1427 (x295 1030951317))))
(assert (= (=> (and (= (not (< 32 x1274)) x767) (= (x1366 128) x1568)) (and (=> (= 32 x1461) x1527) x767)) x32))
(assert (= (=> (and (or (not x444) (and x444 (= (x473 (+ 164 x1752)) x725))) (= (< x1752 x409) x444)) x573) x1090))
(assert (x1419 x640))
(assert (= x833 (and x1444 x945)))
(assert (= x158 (and x1749 (not x127))))
(assert (x1419 x1531))
(assert (= (=> (and (= 164 x976) (= (x1074 (- x785 164)) x1264) (= (x222 (x1176 x1686)) x220) (= (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1105 x220)) (<= x1105 x1002)) x1457) (= x785 (x473 (+ x1403 164))) (= x1002 (x222 (x1176 x1686)))) (and (=> (and (not x1457) (and (= 0 x561) (= 0 x900) (= x1750 x832))) x600) (=> (and (and (= (= x1105 0) x204) (= x1592 (x473 (+ x1105 x280))) (> x351 0) (= (x879 (x1176 x1686)) x351) (< (+ x1105 x280) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x638 x1264) (= 4 x638) (= x358 56965738197333823925951794324075424010313516842063129668313081903848242544640) (= x280 (x1519 (x1176 x1686))) (= x1543 (x222 (x1176 x1686))) (= (- x1543 x1105) x35)) x1457) (and (=> (and (and (= x316 (x1796 96)) (>= x1243 0) (not (> 2112976665 x457)) (= x385 (> x316 0)) (<= x145 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 3081457077 x457) (< x457 2726977199) (<= 0 x145) (< x457 2279315017) (< x1243 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1243) (not (< x638 4)) (= 2112976665 x457)) x204) (and (=> (and (= x897 0) (not x385)) x273) (=> x385 x1640))) (=> (not x204) x205))))) x1601))
(assert (x1419 x658))
(assert (=> (>= 10000 (x58 192)) (= (x295 (x58 192)) (x1176 (x58 192)))))
(assert (= 0 (x1657 192)))
(assert (=> (<= (x613 192) 10000) (= (x295 (x613 192)) (x1176 (x613 192)))))
(assert (= x1564 (and (not x1155) x1097)))
(assert (x1419 x691))
(assert (x1419 x368))
(assert (= x1151 (x1427 (x1176 x1151))))
(assert (= (and x24 x1210) x1170))
(assert (x1419 x30))
(assert (= (x1427 (x295 2279315017)) 2279315017))
(assert (x1419 x560))
(assert (= x756 x345))
(assert (= (and x632 x464) x422))
(assert (x1419 x144))
(assert (= (or x812 x597) x24))
(assert (x1312 x633))
(assert (= (and x1085 (not x1780)) x411))
(assert (x1419 x1685))
(assert (x1419 x1305))
(assert (= (and x718 x1561) x1661))
(assert (x1419 x616))
(assert (x1419 x753))
(assert (= (+ x1391 (x1427 x1370)) (x1427 (x1509 x1370 x1391))))
(assert (= x1610 (and x352 (not x1662))))
(assert (= (and (not x227) x1441) x1338))
(assert (= (=> (and (= (div x1117 2) x913) (= (x806 1 x1117) x929) (<= x553 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1814 (ite (> x929 0) x913 (x806 127 x913))) (= x1758 (> 32 x1814)) (>= x553 0) (= x1388 (= x929 (ite x1758 1 0)))) (and (=> x1388 x1446) (=> (and (and (= (= 0 x1802) x828) (= x1802 (x806 1 x1117))) (not x1388)) (and (=> x828 x219) (=> (and (= x195 (> x1814 0)) (not x828)) (and (=> (not x195) x472) (=> x195 x972))))))) x1059))
(assert (= 1039635593 (x1427 (x295 1039635593))))
(assert (x1419 x1105))
(assert (x1419 x785))
(assert (= x199 (or x1188 x1201 x281 (and x1502 (not x1357)) x1558 x249 (and x608 x1153) x519 (and x1562 x1808) (and (not x853) x1659) (and x303 x1296) x1241 x378 x507 x684 x1262 (and x1348 (not x1395)) x744)))
(assert (= (and x147 (not x1220)) x217))
(assert (x1419 x973))
(assert (= (or x981 x19 x1394) x1791))
(assert (x1419 x834))
(assert (x518 x1422))
(assert (x1419 x1697))
(assert (x1419 x517))
(assert (x1419 x1774))
(assert (x1419 x665))
(assert (= (or x980 x928 (and x654 x1104) (and (not x646) x1610) x985 (and x1662 x352) x977 (and x1452 (not x1717)) x809 x242 (and x1127 x1387)) x1086))
(assert (= (x435 160) (x1427 (x1176 (x435 160)))))
(assert (= (+ (x1427 x308) 1) (x1427 (x1509 x308 1))))
(assert (= 115792089237316195423570985008687907853269984665640564039457484007913129639935 (x1427 (x295 115792089237316195423570985008687907853269984665640564039457484007913129639935))))
(assert (= (x1427 (x1509 x153 1)) (+ (x1427 x153) 1)))
(assert (= x1787 (and x1798 x1696)))
(assert (= x815 (or x988 x1721)))
(assert (x1419 x1183))
(assert (= (x1427 (x1176 (x821 224))) (x821 224)))
(assert (= (x1427 (x1176 x1569)) x1569))
(assert (= (x1427 (x295 18446744073709551615)) 18446744073709551615))
(assert (= (or (and x1822 x1689) x865) x408))
(assert (= x1238 (and x1174 x941)))
(assert (x1042 (x1377 224)))
(assert (=> (>= 10000 (x852 160)) (= (x1176 (x852 160)) (x295 (x852 160)))))
(assert (=> (>= 10000 (x1302 224)) (= (x1176 (x1302 224)) (x295 (x1302 224)))))
(assert (x1419 x671))
(assert (x1419 x69))
(assert (= (and x1478 x1448) x1470))
(assert (x1419 x1225))
(assert (x1419 x159))
(assert (= (and x1659 x853) x608))
(assert (= x888 (and (=> x1174 x1446) (=> (and (and (= x1067 (> x107 x1642)) (= x107 (x473 (+ x584 1))) (= x584 (div x346 2))) (not x1174)) (and (=> (and (not x1067) (and (>= x668 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x668) (= x15 (not (= x668 x553))))) (and (=> (not x15) x975) (=> (and x15 (= x15 x1307)) x1526))) (=> x1067 x1446))))))
(assert (x1419 x1769))
(assert (x605 x1764))
(assert (= 0 (x306 192)))
(assert (=> (<= (x58 224) 10000) (= (x295 (x58 224)) (x1176 (x58 224)))))
(assert (=> (>= 10000 (x1377 256)) (= (x1176 (x1377 256)) (x295 (x1377 256)))))
(assert (= (and x1851 (not x1409)) x324))
(assert (x1419 x215))
(assert (x1042 (x1377 192)))
(assert (=> (<= (x1302 128) 10000) (= (x295 (x1302 128)) (x1176 (x1302 128)))))
(assert (x1419 x1317))
(assert (= (and x1447 x99) x1334))
(assert (= (x84 256) 0))
(assert (= (and (not x1789) x1564) x12))
(assert (x1419 x1631))
(assert (x1419 x1672))
(assert (= x1755 (and (not x515) x596)))
(assert (= x724 (=> (and (= x1144 (x806 115792089237316195423570985008687907853269984665640564039457584007913129639904 x397)) (= x1608 (x1074 (- x511 128))) (= (x473 (+ 260 x1144)) x511) (= (x879 (x1176 x1686)) x1052) (= (= 0 x1052) x745) (= 128 x1545) (= (x473 (+ 31 x1460)) x397)) (and (=> (and (not x745) (and (< 0 x513) (= x1652 (or (> x1820 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x1820) (= (<= x1820 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= 1030951317 x1424)) x781 (< x1424 1680813743) (<= 132 x1373) (not (> 4 x1373)) (not (< x1424 1030951317)) (not (> 839595567 x1424)) (= x1608 x1373) (= (= x1460 (x1847 100)) x781) (< x1424 2112976665) (= x145 x79) (= (x1074 (- x1373 4)) x1820) (= 1234336674 x1424) (= (x879 (x1176 x1686)) x513) (= x230 33277650900348105781121326340019631498405652329376380866381358124409588547584) (not (= 1039635593 x1424)) (= x69 x1821))) (and (=> (and (not x1652) (and (= x1376 (= x69 x1821)) (= x1821 x643))) (and (=> (and (not x1376) (and (= x640 x1750) (= 0 x634))) x27) (=> (and x1376 (and (= (and (< 131 x1373) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1373))) x53) (= x79 x804))) (and (=> (and x53 (and (= x682 (x1588 100)) (= x350 (> x682 18446744073709551615)))) (and (=> (and x350 (and (= x640 x1750) (= x634 0))) x27) (=> (and (not x350) (and (= 132 x224) (= (> x1801 x1373) x1192) (= (x473 (+ 132 x682)) x1801))) (and (=> (and (not x1192) (= x859 true)) (and (=> (and (not x859) (and (= x640 x1750) (= 0 x634))) x27) (=> (and (and (>= 255 x102) (>= x102 0) (= x102 (x10 x722)) (= (x1364 (x1176 x1821) (x295 2) 0) x722) (= x1329 (< 0 x102)) (< x102 256)) x859) (and (=> (and (not x1329) (and (= x634 0) (= x640 x1750))) x27) (=> (and (and (= 0 x1204) (= (x1364 (x1176 x1821) (x295 2) 0) x1763) (= x1689 (< x924 1))) x1329) (and (=> x1689 x402) (=> (and (and (= x1447 (< 0 x1503)) (= (x1074 (- x924 1)) x1503)) (not x1689)) (and (=> (and (not x1447) (= x952 x512)) x214) (=> (and (= x992 (< 0 x924)) x1447) (and (=> (and (not x992) (and (= x1750 x640) (= 0 x634))) x27) (=> (and (and (= (not (= x891 0)) x1228) (= x834 (x1433 x315)) (= (mod x521 115792089237316195423570985008687907853269984665640564039457584007913129639936) x120) (= 0 x1017) (= x891 (x1507 x551)) (= x521 0) (= x551 (x1433 x604)) (= x1420 (or (not x1663) x716)) (= x6 (= x1821 x380)) (= x838 (<= x512 x551)) (= (or x1228 x838) x292) (<= x380 1461501637330902918203684832716283019655932542975) (= (mod x877 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1383) (= 0 x536) (= x868 x1678) (= x580 (not (= 0 x380))) (= x1663 (and x920 x292)) (<= 0 x380) (= x61 (= x192 0)) (= x192 (x260 x380)) x1420 (= x716 (or (not x580) x61)) (= x993 (ite x292 x512 x834)) (> 1461501637330902918203684832716283019655932542976 x380) (= (x473 (+ x512 x950)) x1823) (= x950 (ite x292 x1383 x120)) (= (x1703 (x295 1) 0) x868) (= x604 0) (= (x800 x1678) x380) (= 0 x315) (= x877 1)) x992) (and (=> (and x6 (= (> 1 x924) x121)) (and (=> (and (not x121) (and (= x368 (x1074 (- x924 1))) (= (< x368 x924) x1563))) (and (=> (and (not x1563) (and (= x634 0) (= x1750 x640))) x27) (=> (and (and (= x685 (not (= x483 0))) (= (x225 x368) x264) (= 0 x302) (= (= x368 x1462) x1770) (= x189 (or x1770 (not x685))) (= (x1509 x150 x368) x526) (= (ite x191 x353 x1033) x660) (= x1142 (< 0 x924)) (= x1072 1) (<= x483 1461501637330902918203684832716283019655932542975) (= (x1736 x201) x1635) (= (mod x302 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1033) (= (x225 x368) x201) (= x1108 (or (not x752) x189)) (= (and x920 x191) x752) (= (or x1767 x793) x191) (>= x483 0) (= x525 (x473 (+ x660 x1823))) (= x1355 (ite x191 x1823 x264)) (= (x1703 (x295 1) 0) x150) (= (<= x1823 x201) x1767) (> 1461501637330902918203684832716283019655932542976 x483) (= x353 (mod x1072 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1108 (= x1462 (x260 x483)) (= (not (= x1635 x368)) x793) (= x483 (x800 x526))) x1563) (and (=> (and (and (= x1344 (x260 x1022)) (= x1282 0) (= 0 x694) (= x1803 (= 0 x1344)) (= x1522 (or x1803 (not x1489))) (= 0 x1676) (= x968 (ite x898 x1177 x439)) (= x1743 0) (= (<= x525 x1560) x1500) (= (mod x1826 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1177) (= (ite x898 x525 x797) x460) x1827 (= x157 x952) (= (or (not x500) x1522) x1827) (= x1022 (x800 x1287)) (= (x47 x462) x1560) (= x439 (mod x694 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 0 x1022) (= (not (= 0 x1022)) x1489) (= x157 (x473 (+ x525 x968))) (= x1648 (x1703 (x295 1) 0)) (= 0 x462) (= 1 x1826) (= (x1030 x1560) x1346) (= x1648 x1287) (= x1217 (not (= 0 x1346))) (>= 1461501637330902918203684832716283019655932542975 x1022) (= x797 (x47 x1743)) (= (or x1217 x1500) x898) (= (and x920 x898) x500)) x1142) x214) (=> (and (not x1142) (and (= x640 x1750) (= 0 x634))) x27))))) (=> (and (and (= x634 0) (= x640 x1750)) x121) x27))) (=> (not x6) x1126))))))))))))) (=> (and (and (= x1750 x640) (= x634 0)) x1192) x27))))) (=> (and (not x53) (and (= x634 0) (= x640 x1750))) x27))))) (=> (and x1652 (and (= 0 x634) (= x1750 x640))) x27))) (=> (and (and (= x247 0) (= x1750 x847) (= x396 x688)) x745) x327)))))
(assert (= (and x1198 x663) x372))
(assert (= 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x1427 (x295 78829575338057407266098799593532030895783219923606930547737006156155256307712))))
(assert (= (and x474 (not x588)) x134))
(assert (x1042 x1078))
(assert (= (=> (and (= x864 (> 32 x29)) (<= 0 x668) (= x770 (= (ite x864 1 0) x92)) (= x92 (x806 1 x1412)) (= x29 (ite (> x92 0) x1425 (x806 127 x1425))) (<= x668 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div x1412 2) x1425)) (and (=> x770 x595) (=> (and (and (= (x806 1 x1412) x1223) (= x1100 (= x1223 0))) (not x770)) (and (=> x1100 x1079) (=> (and (not x1100) (= x1322 (< 0 x29))) (and (=> x1322 x810) (=> (not x1322) x57))))))) x735))
(assert (= (and x178 (not x1236)) x758))
(assert (x1419 x638))
(assert (x1419 x52))
(assert (=> (<= (x808 256) 10000) (= (x295 (x808 256)) (x1176 (x808 256)))))
(assert (= (or (and x1436 (not x931)) x33) x1103))
(assert (x1419 x1609))
(assert (x1419 x187))
(assert (= 656247078515407326148355443760548300161286948278503429861414951787075469312 (x1427 (x295 656247078515407326148355443760548300161286948278503429861414951787075469312))))
(assert (= 0 (x1657 256)))
(assert (x1419 x1400))
(assert (x1042 (x808 192)))
(assert (=> (>= 10000 (x613 256)) (= (x1176 (x613 256)) (x295 (x613 256)))))
(assert (= (=> (and (= x772 (< x190 x1535)) (or (and x772 (= x971 (x473 (+ x1352 x190)))) (not x772))) x925) x1323))
(assert (= x520 (and x1050 x76)))
(assert (x1552 x271))
(assert (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 (x1427 (x295 50455196340412629536459377552246818957342304218644716315923982585962625499136))))
(assert (= (x613 224) (x1427 (x1176 (x613 224)))))
(assert (= x769 (=> (and (= x384 (x1509 x978 1)) (= (not (< (x1427 x384) (x1427 x958))) x803)) (and x46 x803))))
(assert (x518 x271))
(assert (= (x1427 (x1176 (x613 320))) (x613 320)))
(assert (x1419 x1583))
(assert (x1419 x1373))
(assert (= (=> (and (or (and (and (= x1762 x559) (= x607 (ite (= x1762 0) x1105 0)) (= (x1208 (x1176 x1686)) x323) (= (x1263 (x1176 x1686)) x1124) (= x1609 x1685) (= x746 x1612) (< (+ x607 x1124) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x473 (+ x607 x1124)) x1832) (= x545 (- x323 x607))) x1825) (and (not x1825) (and (= x1609 x1685) (= x746 x1612) (= x559 x1762)))) (= x1825 (= x1762 0))) x1443) x842))
(assert (x1419 x553))
(assert (= x377 (and x400 x1811)))
(assert (x1419 x583))
(assert (x1419 x557))
(assert (= x1456 (and x1101 (not x1067))))
(assert (x1419 x1828))
(assert (x1419 x146))
(assert (x349 x1412))
(assert (= (=> (= x593 (not (< 32 x889))) (and x1165 x593)) x160))
(assert (= x1314 (and x818 (not x554))))
(assert (= x359 (or x217 x152 x1013)))
(assert (x1419 x1621))
(assert (x1419 x995))
(assert (= x1087 (=> (and (= x1816 (not (> x1752 128))) (= (x239 256) x1073)) (and (=> (= x409 128) x1090) x1816))))
(assert (=> (>= 10000 x1151) (= (x295 x1151) (x1176 x1151))))
(assert (=> (<= x1053 10000) (= (x1176 x1053) (x295 x1053))))
(assert (= (and (not x776) x1278) x1188))
(assert (x518 x913))
(assert (= (x1176 (x1427 x153)) x153))
(assert (x1419 x316))
(assert (= x717 (and x64 (not x811))))
(assert (x1042 (x1377 128)))
(assert (= 0 (x1366 128)))
(assert (= (and x787 x745) x630))
(assert (x1419 x415))
(assert (= (x683 324) 0))
(assert (= (and x1360 x594) x1586))
(assert (= (x808 256) (x1427 (x1176 (x808 256)))))
(assert (= x1783 x454))
(assert (= 0 (x1353 (+ 192 (x473 (+ x1352 100))))))
(assert (x1419 x1823))
(assert (= (or x118 x1632) x960))
(assert (= x1328 (=> (and (<= 0 x1247) (= x464 (= x1247 x1686)) (= x1247 (x504 x1649)) (< x1247 1461501637330902918203684832716283019655932542976) (<= x1247 1461501637330902918203684832716283019655932542975)) (and (=> (and (and (>= 4294967295 x719) (>= x719 0) (= x1196 (= (x478 x719 224) 106459005500898838667931598610041423549574964228674563513410788872267948359680)) (< x719 4294967296)) x464) (and (=> (and (and (= x881 (x806 26959946667150639794667015087019630673637144422540572481103610249215 x271)) (= x534 (x1378 128)) (= (x1623 160) x271) (= x1655 (< 0 x534)) (= x953 (x473 (+ x881 106459005500898838667931598610041423549574964228674563513410788872267948359680)))) x1196) (and (=> (and (= x1797 0) (not x1655)) x1349) (=> (and x1655 (and (= (< 32 x534) x367) (= (x1779 160) x1813))) (and (=> (and (= x1797 32) (not x367)) x1349) (=> (and x367 (and (= (x1779 192) x1613) (= (< 64 x534) x946))) (and (=> (and (not x946) (= 64 x1797)) x1349) (=> (and x946 (and (= (x1779 224) x1136) (= x332 (< 96 x534)))) (and (=> (and (not x332) (= x1797 96)) x1349) (=> x332 x547))))))))) (=> (and (and (>= x719 0) (<= x719 4294967295) (= (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 (x478 x719 224)) x594) (< x719 4294967296)) (not x1196)) (and (=> (and x594 (and (= (x806 26959946667150639794667015087019630673637144422540572481103610249215 x360) x237) (= (x1657 160) x360) (= (x1485 128) x1752) (= x1683 (x473 (+ 100641684887429822015232653770480429695213136867978658013931169090238473568256 x237))) (= (< 0 x1752) x388))) (and (=> (and (= 0 x409) (not x388)) x1090) (=> (and (and (= x250 (< 32 x1752)) (= (x239 160) x389)) x388) (and (=> (and (and (= (x239 192) x556) (= x342 (< 64 x1752))) x250) (and (=> (and x342 (and (= x1199 (> x1752 96)) (= x914 (x239 224)))) (and (=> (and (= 96 x409) (not x1199)) x1090) (=> x1199 x1087))) (=> (and (= 64 x409) (not x342)) x1090))) (=> (and (not x250) (= 32 x409)) x1090))))) (=> (and (not x594) (and (= (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 (x478 x719 224)) x1050) (<= 0 x719) (< x719 4294967296) (<= x719 4294967295))) (and (=> (and x1050 (and (= (x473 (+ x94 56965738197333823925951794324075424010313516842063129668313081903848242544640)) x126) (= (x806 26959946667150639794667015087019630673637144422540572481103610249215 x1137) x94) (= x1403 (x795 128)) (= (< 0 x1403) x67) (= (x617 160) x1137))) (and (=> (and (and (= x1830 (> x1403 32)) (= (x1724 160) x1759)) x67) (and (=> (and (and (= (< 64 x1403) x18) (= (x1724 192) x1775)) x1830) (and (=> (and (and (= x453 (> x1403 96)) (= (x1724 224) x1533)) x18) (and (=> (and (not x453) (= x814 96)) x1160) (=> x453 x1265))) (=> (and (not x18) (= x814 64)) x1160))) (=> (and (= x814 32) (not x1830)) x1160))) (=> (and (= x814 0) (not x67)) x1160))) (=> (and (not x1050) (and (>= x719 0) (<= x719 4294967295) (> 4294967296 x719) (= (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 (x478 x719 224)) x255))) (and (=> (and (and (= (x473 (+ 260 x1738)) x1352) (= (x851 96) x1553) (= (x1074 (- x1352 128)) x678) (= (x1074 (- x678 32)) x943) (<= x145 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1570 128) x190) (= (x806 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1224) x1738) (>= x145 0) (= x1828 (x806 26959946667150639794667015087019630673637144422540572481103610249215 x542)) (= (x184 160) x542) (= x1224 (x473 (+ 31 x1553))) (= x942 (x473 (+ x1828 50455196340412629536459377552246818957342304218644716315923982585962625499136))) (= x874 (< 0 x190))) x255) (and (=> (and x874 (and (= (> x190 32) x227) (= x1352 x527) (= x287 (x1732 160)))) (and (=> (and (not x227) (= x1535 32)) x1323) (=> (and (and (= (> x190 64) x1811) (= x637 (x473 (+ 32 x1352))) (= x1197 (x1732 192))) x227) (and (=> (and (not x1811) (= 64 x1535)) x1323) (=> (and x1811 (and (= (x1732 224) x143) (= (> x190 96) x1651) (= x1590 (x473 (+ 64 x1352))))) (and (=> x1651 x1304) (=> (and (not x1651) (= x1535 96)) x1323))))))) (=> (and (not x874) (= x1535 0)) x1323))) (=> (and (and (= x1653 x1750) (= 1 x930)) (not x255)) x626))))))))) (=> (and (and (< x1151 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1151) (not (= x1335 x1347)) (= (> 32 x314) x1288) (= x1347 (x806 1 x1422)) (= x188 (x806 1 x1422)) (= (ite x1288 1 0) x1335) (= x314 (ite (< 0 x1347) x187 (x806 127 x187))) (= (x504 x1649) x1151) (= (x1509 x1688 1) x452) (>= x1151 0) (= x187 (div x1422 2)) (= x1422 (x1754 x452)) (= (= x188 0) x1521)) (not x464)) (and (=> x1521 x1783) (=> (and (= x1574 (> x314 0)) (not x1521)) (and (=> (not x1574) x454) (=> x1574 x124)))))))))
(assert (= (x808 192) (x1427 (x1176 (x808 192)))))
(assert (x1042 (x852 160)))
(assert (= (or x1060 x1605) x22))
(assert (x1419 x1355))
(assert (= (x1427 (x295 33277650900348105781121326340019631498405652329376380866381358124409588547584)) 33277650900348105781121326340019631498405652329376380866381358124409588547584))
(assert (=> (<= (x1377 128) 10000) (= (x1176 (x1377 128)) (x295 (x1377 128)))))
(assert (= (or x1237 x1147) x632))
(assert (= (x1302 192) (x1427 (x1176 (x1302 192)))))
(assert (= 2923951457 (x1427 (x295 2923951457))))
(assert (x1419 x944))
(assert (= x211 (and x1841 (not x874))))
(assert (= (or x1138 x1091 x151) x1706))
(assert (= (or x895 x1482 x499) x178))
(assert (= (or x544 x423) x119))
(assert (= (and x422 (not x1196)) x1360))
(assert (= (x1427 (x1176 (x1377 160))) (x1377 160)))
(assert (= (=> (= (> (x1427 x958) (x1427 x978)) x7) (and (=> x7 x769) (=> (not x7) x46))) x89))
(assert (x1419 x483))
(assert (x1419 x209))
(assert (= (and (not x11) x909) x14))
(assert (= (and x1295 x1785) x486))
(assert (= (and (not x464) x632) x81))
(assert (= x274 (and x1667 x1457)))
(assert (x1419 x1194))
(assert (= x840 (and x432 (not x1836))))
(assert (x1419 x710))
(assert (x1419 x1653))
(assert (x1419 x736))
(assert (= 0 (x84 224)))
(assert (x1419 x525))
(assert (x1419 x23))
(assert (x1419 x631))
(assert (= 0 (x1411 128)))
(assert (x1419 x60))
(assert (x1419 x1177))
(assert (=> (<= (x613 160) 10000) (= (x295 (x613 160)) (x1176 (x613 160)))))
(assert (= (and x1011 x1714) x1837))
(assert (x1419 x887))
(assert (x1419 x709))
(assert (x1419 x1740))
(assert (= x870 (and (not x875) x907)))
(assert (x1419 x252))
(assert (x1419 x1283))
(assert (= (x1176 288768741) (x295 288768741)))
(assert (= (x1427 (x1176 (x1302 288))) (x1302 288)))
(assert (= x122 (and x12 x257)))
(assert (= x812 (and x1382 x1538)))
(assert (x1056 x1650))
(assert (= x123 (=> (and (or x364 (not x364)) (= (= 0 x957) x364)) x43)))
(assert (= 0 (x617 192)))
(assert (= (x821 192) (x1427 (x1176 (x821 192)))))
(assert (= (=> (= (not (< 32 x1814)) x1618) (and x472 x1618)) x972))
(assert (= x1060 (or x391 x386)))
(assert (= x1249 x1165))
(assert (= x391 (and x991 x468)))
(assert (= (x295 33277650900348105781121326340019631498405652329376380866381358124409588547584) (x1176 33277650900348105781121326340019631498405652329376380866381358124409588547584)))
(assert (x1042 x802))
(assert (= (=> (= x65 (= 0 x662)) (and (=> x65 x205) (=> (and (and (= x655 x1112) (= x1269 0) (= x1324 1)) (not x65)) x1831))) x1756))
(assert (x1419 x83))
(assert (x1419 x994))
(assert (x1419 x1213))
(assert (= (=> (and (= (x222 (x1176 x1686)) x1035) (= (x222 (x1176 x1686)) x1123) (= x1603 (and (<= x1105 x1035) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1105 x1123)))) (= x839 x190)) (and (=> (and x1603 (and (= (x288 (x1176 x1686)) x1283) (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 x493) (<= 100 x966) (= (x879 (x1176 x1686)) x710) (= (x222 (x1176 x1686)) x144) (< 0 x710) (= (= 0 x1105) x1717) (= (x473 (+ x1105 x1283)) x283) (= x966 x839) x1393 (= (- x144 x1105) x1158) (= x1428 x145) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1283 x1105)) (= (= 0 (x708 68)) x1393))) (and (=> (not x1717) x310) (=> (and x1717 (and (= 1871487246 x1531) (not (> 839595567 x1531)) (not (> 1680813743 x1531)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x517) true) (> 64 x517)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x517)) x1662) (< x1531 2112976665) (= x517 (x1074 (- x966 4))) (not (> 1871487246 x1531)) (not (< x966 4)))) (and (=> (and (and (= x646 (and (< 99 x966) (= (<= x966 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= x1213 x1428)) (not x1662)) (and (=> (not x646) x310) (=> (and x646 (and (= (> x1654 18446744073709551615) x1104) (= x1654 (x221 68)))) (and (=> (and (and (= (< x966 x159) x1127) (= 100 x1537) (= x159 (x473 (+ x1654 100)))) (not x1104)) (and (=> (and (= true x1255) (not x1127)) (and (=> (not x1255) x310) (=> (and x1255 (and (or (and x588 (= x1483 x588)) (and (not x588) (and (= x1483 (ite x440 x440 (= x924 0))) (= (= x1213 0) x440)))) (= (< x924 x1428) x588))) x1567))) (=> x1127 x310))) (=> x1104 x310))))) (=> x1662 x310))))) (=> (and (and (= x1691 0) (= x129 x1750) (= x179 0)) (not x1603)) x1700))) x925))
(assert (= (+ 1 (x1427 x978)) (x1427 (x1509 x978 1))))
(assert (= (+ 1 (x1427 x1660)) (x1427 (x1509 x1660 1))))
(assert (= x468 (and x1647 (not x1523))))
(assert (= x470 (and (not x177) x1594)))
(assert (x1419 x396))
(assert (x1419 x1053))
(assert (=> (>= 10000 (x808 160)) (= (x1176 (x808 160)) (x295 (x808 160)))))
(assert (= (x1176 18446744073709551615) (x295 18446744073709551615)))
(assert (=> (>= 10000 (x821 288)) (= (x1176 (x821 288)) (x295 (x821 288)))))
(assert (= (+ (x1427 x150) x368) (x1427 (x1509 x150 x368))))
(assert (=> (<= x1569 10000) (= (x1176 x1569) (x295 x1569))))
(assert (x1042 x813))
(assert (= x1214 (and x1838 x1563)))
(assert (= 0 (x1021 288)))
(assert (= 0 (x1796 96)))
(assert (= (and x1456 x15) x1638))
(assert (x1419 x1679))
(assert (= x1692 (and x963 (not x1192))))
(assert (x1419 x412))
(assert (= x1458 (or x240 (and x208 (not x1043)))))
(assert (x1042 (x613 160)))
(assert (x1419 x586))
(assert (= 0 (x936 128)))
(assert (= (or x1111 x689) x1482))
(assert (x518 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1419 x1533))
(assert (x1419 x536))
(assert (x1312 x1425))
(assert (x1419 x1760))
(assert (= x431 (and x133 x817)))
(assert (x1419 x1017))
(assert (x1042 (x808 256)))
(assert (x518 x916))
(assert (= x183 (and x1421 x1830)))
(assert (x1419 x193))
(assert (=> (<= (x852 192) 10000) (= (x295 (x852 192)) (x1176 (x852 192)))))
(assert (x1419 x1683))
(assert (x1042 x1821))
(assert (= (=> (and (= x957 0) (= x1750 x611)) x123) x595))
(assert (= 0 (x1021 256)))
(assert (=> (<= (x1377 224) 10000) (= (x1176 (x1377 224)) (x295 (x1377 224)))))
(assert (= (and (not x250) x1226) x1125))
(assert (= (x1427 (x1509 x87 x1405)) (+ (x1427 x87) x1405)))
(assert (= (or x1695 x771 x374) x862))
(assert (= x790 x921))
(assert (= (and x1616 (not x524)) x647))
(assert (= (x295 50455196340412629536459377552246818957342304218644716315923982585962625499136) (x1176 50455196340412629536459377552246818957342304218644716315923982585962625499136)))
(assert (x1419 x804))
(assert (= (x1411 320) 0))
(assert (x518 x1406))
(assert (x1419 x913))
(assert (= (x1427 (x295 115792089237316195423570985008687907853269984665640564039457584007913129639680)) 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1419 x1687))
(assert (x1419 x447))
(assert (x1419 x1171))
(assert (= (or x639 x729) x1667))
(assert (= (x821 160) (x1427 (x1176 (x821 160)))))
(assert (= (and x627 (not x540)) x223))
(assert (x1419 x563))
(assert (x1552 x1137))
(assert (x1419 x143))
(assert (= (x1427 (x1176 (x435 256))) (x435 256)))
(assert (x1419 x1096))
(assert (x1042 (x821 160)))
(assert (= (=> (and (= x786 (x1074 (- x1544 128))) (= x1739 (>= 224 x786))) (and (=> (and (= (ite (>= 32 x786) (x1703 (x1176 (x808 128)) 0) (ite (<= x786 64) (x1364 (x1176 (x808 128)) (x1176 (x808 160)) 0) (ite (<= x786 96) (x1771 (x1176 (x808 128)) (x1176 (x808 160)) (x1176 (x808 192)) 0) (ite (>= 128 x786) (x1606 (x1176 (x808 128)) (x1176 (x808 160)) (x1176 (x808 192)) (x1176 (x808 224)) 0) (ite (>= 160 x786) (x1310 (x1176 (x808 128)) (x1176 (x808 160)) (x1176 (x808 192)) (x1176 (x808 224)) (x1176 (x808 256)) 0) (ite (<= x786 192) (x28 (x1176 (x808 128)) (x1176 (x808 160)) (x1176 (x808 192)) (x1176 (x808 224)) (x1176 (x808 256)) (x1176 (x808 288)) 0) (ite (>= 224 x786) (x1341 (x1176 (x808 128)) (x1176 (x808 160)) (x1176 (x808 192)) (x1176 (x808 224)) (x1176 (x808 256)) (x1176 (x808 288)) (x1176 (x808 320)) 0) (x1176 x1760)))))))) x1152) (= x1307 (not x1023)) (= x1023 (= x1139 x1152))) x1526) x1739)) x1024))
(assert (x1419 x802))
(assert (= (and x482 x110) x928))
(assert (= (x1176 2726977199) (x295 2726977199)))
(assert (= x507 (and x56 x1190)))
(assert (x1419 x942))
(assert (x1598 x252))
(assert (x1419 x358))
(assert (x1419 x621))
(assert (x1419 x712))
(assert (x1419 x1422))
(assert (= (x1796 128) 0))
(assert (x1419 x1041))
(assert (= (x936 320) 0))
(assert (x1419 x534))
(assert (x518 x360))
(assert (= x242 (and x488 (not x1255))))
(assert (= x148 (and (not x1252) x1148)))
(assert (= (x295 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1176 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x979 292) 0))
(assert (= x912 (=> (and (= x1609 x429) (= x1484 x559)) x361)))
(assert (= x394 (and x90 x317)))
(assert (x1056 x1620))
(assert (= x644 (and x183 (not x18))))
(assert (= x363 (=> (and (= (not (> x824 164)) x1463) (= (x1509 x308 1) x552)) (and x1463 (=> (= x743 x552) x100)))))
(assert (x518 x542))
(assert (= 0 (x112 420)))
(assert (= x1241 (and x1279 x751)))
(assert (x1419 x521))
(assert (x1419 x247))
(assert (= 0 (x683 452)))
(assert (x1419 x490))
(assert (x1419 x720))
(assert (x1419 x1464))
(assert (x1419 x1503))
(assert (x1419 x157))
(assert (x1419 x1738))
(assert (= (or x582 x1587 x1575) x138))
(assert (= (and x491 (not x1070)) x1647))
(assert (= (and x1415 x764) x1518))
(assert (x1419 x261))
(assert (=> (<= (x435 160) 10000) (= (x295 (x435 160)) (x1176 (x435 160)))))
(assert (= (x1427 (x1176 (x1377 128))) (x1377 128)))
(assert (= x1443 (=> (and (or (not x59) x59) (= (= 0 x746) x59)) x912)))
(assert (= x1495 (and x1474 (not x1652))))
(assert (= (and (not x276) x48) x131))
(assert (x1419 x1131))
(assert (= x176 (=> (and (or x182 (not x182)) (= x182 (= x530 0))) x66)))
(assert (=> (<= (x1377 288) 10000) (= (x1176 (x1377 288)) (x295 (x1377 288)))))
(assert (x1419 x238))
(assert (x1419 x847))
(assert (= (x808 224) (x1427 (x1176 (x808 224)))))
(assert (= x1454 (and x1278 x776)))
(assert (= x674 (and x663 (not x1198))))
(assert (x1042 (x821 256)))
(assert (= (and x1043 x208) x240))
(assert (= (and x375 (not x332)) x70))
(assert (= x1365 (and x1851 x1409)))
(assert (x1042 (x1302 256)))
(assert (x1419 x1410))
(assert (x1419 x1576))
(assert (= (and (not x1100) x1840) x1404))
(assert (= (x1427 (x1176 x492)) x492))
(assert (= x1696 (and x1231 x1000)))
(assert (x1419 x1274))
(assert (x1419 x670))
(assert (= (and x1322 x1404) x71))
(assert (x1419 x565))
(assert (= x1363 (and (not x1547) x529)))
(assert (not x1092))
(assert (= x1840 (and x726 (not x770))))
(assert (x1419 x607))
(assert (=> (>= 10000 (x435 224)) (= (x295 (x435 224)) (x1176 (x435 224)))))
(assert (= x1834 (=> (and (= x1516 x1833) (= x650 x1742)) x768)))
(assert (x1419 x287))
(assert (= (x295 1030951317) (x1176 1030951317)))
(assert (= x253 (and x3 (not x343))))
(assert (x1419 x839))
(assert (= x1548 (and (not x255) x567)))
(assert (x1419 x29))
(assert (=> (>= 10000 (x1377 192)) (= (x1176 (x1377 192)) (x295 (x1377 192)))))
(assert (x1419 x1230))
(assert (x1042 x673))
(assert (x1419 x1590))
(assert (= (x617 160) 0))
(assert (x1419 x1335))
(assert (=> (<= x631 10000) (= (x295 x631) (x1176 x631))))
(assert (= x403 (and (not x764) x1415)))
(assert (= x133 (and x1780 x1085)))
(assert (= (x1427 (x1176 (x435 320))) (x435 320)))
(assert (= (or x1707 x510) x1272))
(assert (= x503 (and x1429 (not x1329))))
(assert (x518 x1628))
(assert (x1419 x1818))
(assert (x1042 (x613 288)))
(assert (x1419 x971))
(assert (= x672 (and x1350 x494)))
(assert (= (x1427 (x1176 x1686)) x1686))
(assert (= x1487 (=> (and (or (not x764) x764) (= (= x1554 0) x764)) x587)))
(assert (= x1126 (=> (= (> 1 x924) x51) (and x402 x51))))
(assert (x1419 x1800))
(assert (=> (<= (x821 224) 10000) (= (x295 (x821 224)) (x1176 (x821 224)))))
(assert (= x733 (=> (and (= x1582 (<= x1442 224)) (= x44 (x473 (+ 128 x682))) (= (x1074 (- x44 128)) x1442)) (and (=> (and (= (div x791 2) x83) (= (ite (<= x1442 32) (x1703 (x1176 (x1377 128)) 0) (ite (>= 64 x1442) (x1364 (x1176 (x1377 128)) (x1176 (x1377 160)) 0) (ite (>= 96 x1442) (x1771 (x1176 (x1377 128)) (x1176 (x1377 160)) (x1176 (x1377 192)) 0) (ite (<= x1442 128) (x1606 (x1176 (x1377 128)) (x1176 (x1377 160)) (x1176 (x1377 192)) (x1176 (x1377 224)) 0) (ite (<= x1442 160) (x1310 (x1176 (x1377 128)) (x1176 (x1377 160)) (x1176 (x1377 192)) (x1176 (x1377 224)) (x1176 (x1377 256)) 0) (ite (>= 192 x1442) (x28 (x1176 (x1377 128)) (x1176 (x1377 160)) (x1176 (x1377 192)) (x1176 (x1377 224)) (x1176 (x1377 256)) (x1176 (x1377 288)) 0) (ite (<= x1442 224) (x1341 (x1176 (x1377 128)) (x1176 (x1377 160)) (x1176 (x1377 192)) (x1176 (x1377 224)) (x1176 (x1377 256)) (x1176 (x1377 288)) (x1176 (x1377 320)) 0) (x1176 x673)))))))) x1843) (= (< x1330 32) x1536) (= x275 (x806 1 x791)) (= x1330 (ite (> x275 0) x83 (x806 127 x83))) (= (= (ite x1536 1 0) x275) x257)) (and (=> (and (and (= x640 x1750) (= x634 0)) x257) x27) (=> (and (not x257) (and (= (= x1077 0) x524) (= x1077 (x806 1 x791)))) (and (=> (and (and (= (x806 115792089237316195423570985008687907853269984665640564039457584007913129639680 x791) x1829) (= (x473 (+ x1330 128)) x557) (= x1439 x557)) x524) x1260) (=> (and (and (= x1054 (< 0 x1330)) (= (x1703 (x295 5) 0) x1134)) (not x524)) (and (=> (not x1054) x1339) (=> x1054 x1658))))))) x1582))))
(assert (= (and x1363 x383) x1707))
(assert (= (and x598 x635) x627))
(assert (x1419 x1223))
(assert (= (or x1232 x258) x208))
(assert (x1042 (x852 224)))
(assert (x1419 x666))
(assert (x1419 x1494))
(assert (x1419 x891))
(assert (= (or x71 x1596) x1476))
(assert (x1419 x102))
(assert (x1419 x407))
(assert (= x1575 (and x799 x370)))
(assert (= (=> (and (= x900 x1171) (= x490 x832)) x1168) x899))
(assert (x518 x1224))
(assert (= (x821 288) (x1427 (x1176 (x821 288)))))
(assert (x1419 x900))
(assert (x1419 x449))
(assert (= (or x893 x1167) x147))
(assert (x1419 x266))
(assert (x1419 x1243))
(assert (x1419 x523))
(assert (= (and (not x1054) x647) x1396))
(assert (x1419 x1514))
(assert (x1419 x1802))
(assert (= x151 (and x65 x1458)))
(assert (= x19 (or x1589 x130)))
(assert (= (and x828 x1812) x1854))
(assert (=> (<= (x821 192) 10000) (= (x1176 (x821 192)) (x295 (x821 192)))))
(assert (x1419 x103))
(assert (x1419 x513))
(assert (x1419 x200))
(assert (= 0 (x112 292)))
(assert (= x794 (and x1252 x1148)))
(assert (= (=> (and (= x17 (x849 x1134)) (= x1026 (not (< 32 x1330)))) (and x1339 x1026)) x1658))
(assert (= (and x1643 x243) x980))
(assert (x1419 x1734))
(assert (x1312 x187))
(assert (= x1057 (and (not x1300) x774)))
(assert (x518 x1515))
(assert (= (=> (and (= x1280 (x473 (+ 128 x1330))) (= x1439 x1280)) x1260) x1339))
(assert (= x919 (or x171 x1159)))
(assert (= (x1657 224) 0))
(assert (= x1064 (and x1067 x1101)))
(assert (= x180 (and (not x992) x1334)))
(assert (= (x1302 160) (x1427 (x1176 (x1302 160)))))
(assert (x1419 x1702))
(assert (= (or x1577 x263) x805))
(assert (= x1382 (and x831 x1661)))
(assert (= (x1427 (x295 24341557)) 24341557))
(assert (= x1585 (and x216 x342)))
(assert (x1419 x1184))
(assert (= x1399 (and x1465 x623)))
(assert (= (and x1789 x1564) x823))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1427 (x295 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1419 x232))
(assert (= (x306 128) 0))
(assert (x1419 x713))
(assert (x1419 x362))
(assert (=> (>= 10000 (x435 288)) (= (x1176 (x435 288)) (x295 (x435 288)))))
(assert (= x909 (or x246 x470 x820)))
(assert (= (x1353 (+ 32 (x473 (+ 100 x1352)))) 0))
(assert (x1042 (x1302 320)))
(assert (= x1632 (and x59 x359)))
(assert (= 288768741 (x1427 (x295 288768741))))
(assert (x1419 x1267))
(assert (= (x1176 1461501637330902918203684832716283019655932542976) (x295 1461501637330902918203684832716283019655932542976)))
(assert (x1312 x720))
(assert (x1419 x1759))
(assert (=> (>= 10000 (x852 128)) (= (x295 (x852 128)) (x1176 (x852 128)))))
(assert (= 0 (x617 224)))
(assert (x1419 x967))
(assert (= (+ (x1427 x1833) 1) (x1427 (x1509 x1833 1))))
(assert (x1419 x1015))
(assert (x1042 (x58 192)))
(assert (= (or x857 x1141) x544))
(assert (= x1414 (and (=> (and (and (= x1599 (x473 (+ 1 x1276))) (= (div x924 2) x1276) (= x1279 (< x668 x1599))) (not x56)) (and (=> x1279 x595) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x668) (<= 0 x668) (= false x1070)) (not x1279)) (and (=> (and x1070 (= x1070 x1099)) x533) (=> (not x1070) x1776))))) (=> x56 x595))))
(assert (x1419 x1752))
(assert (= (and x251 x1301) x38))
(assert (x1419 x633))
(assert (x1419 x286))
(assert (= (x435 288) (x1427 (x1176 (x435 288)))))
(assert (x1419 x436))
(assert (= (x84 160) 0))
(assert (= (and (not x635) x598) x241))
(assert (= x910 (and (not x182) x329)))
(assert (x1419 x480))
(assert (x518 1))
(assert (x1419 x1701))
(assert (x1419 x1292))
(assert (= (and x1470 (not x1453)) x1201))
(assert (=> (<= (x1302 256) 10000) (= (x1176 (x1302 256)) (x295 (x1302 256)))))
(assert (x1419 x1164))
(assert (x1042 (x613 256)))
(assert (=> (<= x1358 10000) (= (x295 x1358) (x1176 x1358))))
(assert (x1419 x139))
(assert (x1042 x1760))
(assert (= (and x901 (not x128)) x68))
(assert (x518 x1412))
(assert (= (=> (= x336 (not (> x1041 32))) (and x336 x1109)) x759))
(assert (= (and x946 x1289) x375))
(assert (x1419 x1401))
(assert (= x1118 (and (not x65) x1458)))
(assert (= 0 (x683 292)))
(assert (= (x1411 256) 0))
(assert (= (x1427 (x1509 x1688 1)) (+ 1 (x1427 x1688))))
(assert (= x1148 (or x20 x555)))
(assert (= x446 (and (not x886) x501)))
(assert (x1419 x877))
(assert (= x1284 (=> (and (or (and (not x177) (and (= x1380 x1691) (= x1071 x129) (= x179 x670))) (and x177 (and (= (x516 (x1176 x1686)) x269) (= x687 (x473 (+ x1193 x1259))) (= x129 x1071) (= x179 x670) (= (ite (= x1380 0) x1105 0) x1193) (= x1691 x1380) (= (- x269 x1193) x1600) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1259 x1193)) (= (x590 (x1176 x1686)) x1259)))) (= x177 (= 0 x1380))) x1700)))
(assert (= x130 (and x962 x486)))
(assert (x1172 x1248 x238))
(assert (= x85 (and x1389 (not x385))))
(assert (= (and x1196 x422) x1550))
(assert (= (and x1115 x77) x729))
(assert (= (x1302 320) (x1427 (x1176 (x1302 320)))))
(assert (= (and x1190 (not x56)) x751))
(assert (= x813 (x1427 (x1176 x813))))
(assert (x1419 x678))
(assert (x1419 x1809))
(assert (x1419 x1063))
(assert (= x749 (or (and (not x1099) x22) x1565)))
(assert (= x78 (=> (and (= x837 (x1509 x1833 1)) (= x1781 (not (> (x1427 x1048) (x1427 x837))))) (and x1120 x1781))))
(assert (= (or x1602 x1354 x503 x122 x338 x408 x1340 x1455 x180 x1793 x731 x855 x788 x104 x896 x1093 x612 x241 x223) x1368))
(assert (x605 x1224))
(assert (= (x1377 320) (x1427 (x1176 (x1377 320)))))
(assert (= (x1427 (x1176 (x613 160))) (x613 160)))
(assert (x1419 x1375))
(assert (x1419 x1520))
(assert (= (and x672 (not x326)) x499))
(assert (= x474 (and x488 x1255)))
(assert (x1419 x957))
(assert (x1419 x1467))
(assert (= (=> (and (<= 0 x804) (= (> 32 x1041) x1068) (= x1041 (ite (< 0 x665) x1515 (x806 127 x1515))) (= (div x1742 2) x1515) (= x665 (x806 1 x1742)) (<= x804 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1626 (= (ite x1068 1 0) x665))) (and (=> (and (and (= x1750 x640) (= x634 0)) x1626) x27) (=> (and (and (= (= 0 x1529) x1547) (= x1529 (x806 1 x1742))) (not x1626)) (and (=> x1547 x345) (=> (and (not x1547) (= (< 0 x1041) x383)) (and (=> (not x383) x1109) (=> x383 x759))))))) x1120))
(assert (x1419 x165))
(assert (= x802 (x1427 (x1176 x802))))
(assert (x1419 x1819))
(assert (x518 x83))
(assert (= (and x751 (not x1279)) x491))
(assert (= (and x1450 (not x1483)) x140))
(assert (x1419 x660))
(assert (x1419 x390))
(assert (= x245 (and x183 x18)))
(assert (= x547 (=> (and (= (not (> x534 128)) x1815) (= x1157 (x1779 256))) (and x1815 (=> (= 128 x1797) x1349)))))
(assert (= x229 (=> (and (= x978 x765) (= x1628 x1110)) x89)))
(assert (x1419 x725))
(assert (x1419 x1406))
(assert (x1419 x1250))
(assert (x1419 x1123))
(assert (x1419 x234))
(assert (x1419 x37))
(assert (= (+ (x1427 x1649) 1) (x1427 (x1509 x1649 1))))
(assert (= x773 (and (not x334) x1787)))
(assert (= (and x927 x431) x162))
(assert (x1419 x576))
(assert (= x1851 (or x131 x55 x1285)))
(assert (= (and x646 x1610) x654))
(assert (x1419 x322))
(assert (x1419 x959))
(assert (= 0 (x112 452)))
(assert (= 0 (x617 256)))
(assert (=> (<= x492 10000) (= (x295 x492) (x1176 x492))))
(assert (x1419 x1145))
(assert (x1419 x1089))
(assert (x1419 x1832))
(assert (= x1387 (and (not x1104) x654)))
(assert (x1419 x1814))
(assert (=> (>= 10000 (x1302 288)) (= (x295 (x1302 288)) (x1176 (x1302 288)))))
(assert (= (x1411 288) 0))
(assert (= (and (not x962) x486) x1589))
(assert (= (=> (and (= (not (> x541 164)) x1178) (= (x1509 x87 1) x721)) (and x1178 (=> (= x636 x721) x1744))) x1559))
(assert (x1419 x1633))
(assert (x1419 x1240))
(assert (= x46 (=> (and (= (= (ite x1275 1 0) x1145) x110) (<= x1213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1213) (= x889 (ite (> x1145 0) x633 (x806 127 x633))) (= (< x889 32) x1275) (= (x806 1 x1628) x1145) (= (div x1628 2) x633)) (and (=> (and (not x110) (and (= (x806 1 x1628) x1007) (= (= 0 x1007) x251))) (and (=> (and (not x251) (= (> x889 0) x1444)) (and (=> (not x1444) x1165) (=> x1444 x160))) (=> x251 x1249))) (=> x110 x310)))))
(assert (= (x295 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1176 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (x1419 x929))
(assert (x1419 x1082))
(assert (x1419 x746))
(assert (= (x1353 (+ (x473 (+ x1352 100)) 128)) 0))
(assert (= (and x11 x909) x489))
(assert (x518 x397))
(assert (x605 x695))
(assert (x1419 x1439))
(assert (x1419 x1112))
(assert (x1419 x604))
(assert (= x1812 (and x757 (not x1388))))
(assert (x1419 x1269))
(assert (= 4294967295 (x1427 (x295 4294967295))))
(assert (x1419 x496))
(assert (= x1102 (and x276 x48)))
(assert (= (and x67 x520) x1421))
(assert (= x219 x472))
(assert (x1042 (x821 320)))
(assert (= (and (not x1655) x1550) x300))
(assert (= (and x81 x1521) x31))
(assert (= (x1427 (x1176 x1494)) x1494))
(assert (x1552 x360))
(assert (x1419 x465))
(assert (= x1486 (and x1622 (not x443))))
(assert (x1419 x543))
(assert (x1419 x1730))
(assert (x1042 x1569))
(assert (= (and (not x956) x870) x301))
(assert (= (=> (and (= x1096 (x473 (+ x1752 164))) (= x1220 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1852 x1105)) (>= x1140 x1105))) (= x1140 (x222 (x1176 x1686))) (= x616 (x1074 (- x1096 164))) (= x1852 (x222 (x1176 x1686))) (= 164 x1532)) (and (=> (and x1220 (and (= x1795 (x473 (+ x1105 x1317))) (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 x801) (= x16 (- x168 x1105)) (< 0 x296) (= x1317 (x1129 (x1176 x1686))) (= x1697 4) (= (= x1105 0) x1319) (= (x879 (x1176 x1686)) x296) (= x1697 x616) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1317 x1105)) (= x168 (x222 (x1176 x1686))))) (and (=> (and x1319 (and (not (< x789 3733007566)) (> 3948783980 x789) (= x1274 (x1366 96)) (not (< x1697 4)) (> 1461501637330902918203684832716283019655932542976 x69) (>= x69 0) (not (< x789 3081457077)) (<= x69 1461501637330902918203684832716283019655932542975) (<= x1243 1461501637330902918203684832716283019655932542975) (= x1198 (> x1274 0)) (< x1243 1461501637330902918203684832716283019655932542976) (>= x1243 0) (= 3733007566 x789) (not (> 2112976665 x789)))) (and (=> (and (not x1198) (= 0 x1461)) x1527) (=> x1198 x32))) (=> (not x1319) x333))) (=> (and (and (= x1609 x1750) (= x559 0) (= 0 x746)) (not x1220)) x1443))) x573))
(assert (x1419 x1332))
(assert (=> (>= 10000 (x58 288)) (= (x295 (x58 288)) (x1176 (x58 288)))))
(assert (x1419 x933))
(assert (= (and x1585 (not x1199)) x918))
(assert (= 0 (x1353 (+ 64 (x473 (+ 100 x1352))))))
(assert (= x495 (or x199 x749)))
(assert (= (or x568 x114) x1273))
(assert (= x1398 x1079))
(assert (=> (>= 10000 (x58 160)) (= (x295 (x58 160)) (x1176 (x58 160)))))
(assert (= (x295 3285302901) (x1176 3285302901)))
(assert (= (or x1170 x1716) x787))
(assert (= (and x1470 x1453) x501))
(assert (= 0 (x112 388)))
(assert (= (=> (= x116 (= 0 x1191)) (and (=> (and x116 (and (= x1750 x753) (= 0 x1332))) x373) (=> (and (not x116) (and (= 0 x688) (= x247 1) (= x1345 x847))) x327))) x1182))
(assert (x1042 (x1302 128)))
(assert (= x426 (and (not x1397) x805)))
(assert (= x420 (=> (= x1236 (< (x1427 x256) (x1427 x203))) (and (=> (not x1236) x1059) (=> x1236 x506)))))
(assert (= x1032 (=> (= (= 0 x671) x1397) (and (=> x1397 x790) (=> (and (and (and (>= 255 x1031) (< x1031 256) (= (x1790 x1786) x1031) (= (= 0 x1031) x1591) (>= x1031 0)) (or x1591 (and (and (not (< 115792089237316195423570985008687907853269984665640564039457484007913129639935 x1679)) (= (x473 (+ 100000000000000000 x1679)) x1229) (<= 0 x1679) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1679)) (not x1591)))) (not x1397)) x424)))))
(assert (x1312 x83))
(assert (x1419 x783))
(assert (x1042 (x821 192)))
(assert (= x246 (and x1298 (not x1603))))
(assert (x1419 x916))
(assert (x1419 x1461))
(assert (x1419 x1211))
(assert (x1419 x1710))
(assert (= (x1176 4294967295) (x295 4294967295)))
(assert (= x567 (and (not x1050) x76)))
(assert (= (and x245 (not x453)) x1499))
(assert (x1419 x1347))
(assert (x1419 x304))
(assert (x1419 x272))
(assert (= (and (not x1808) x1562) x1502))
(assert (x1419 x634))
(assert (= (and x1837 x1246) x1222))
(assert (= x865 (and x226 (not x6))))
(assert (= x827 (and x1574 x207)))
(assert (x1419 x1383))
(assert (x1419 x650))
(assert (= x1695 (and x866 x502)))
(assert (x1419 x939))
(assert (x1042 (x1377 256)))
(assert (= (and (not x1350) x494) x895))
(assert (= (and x1667 (not x1457)) x374))
(assert (= (or x674 x372) x1490))
(assert (x1419 x188))
(assert (x1419 x1318))
(assert (x1419 x1229))
(assert (x1419 x1073))
(assert (x1419 x1066))
(assert (= (x1427 (x1176 x631)) x631))
(assert (x1419 x832))
(assert (= (and x870 x956) x312))
(assert (x1419 x1031))
(assert (x1419 x1014))
(assert (x1419 x1599))
(assert (= x1385 (and x1376 x1495)))
(assert (x1419 x1151))
(assert (= (and x501 x886) x1278))
(assert (= (=> (and (= x1361 x1343) (= (x473 (+ x986 128)) x1361)) x1076) x1179))
(assert (= (and (not x1811) x400) x1016))
(assert (x1419 x175))
(assert (= x857 (and x948 (not x1297))))
(assert (= x1097 (and x307 (not x1045))))
(assert (= x539 (and x922 x1029)))
(assert (= (+ 1 (x1427 x87)) (x1427 (x1509 x87 1))))
(assert (x1419 x1543))
(assert (x1419 x1006))
(assert (= (x1427 (x1176 (x1377 192))) (x1377 192)))
(assert (x1419 x1149))
(assert (= (=> (and (= x1666 (x473 (+ x1654 128))) (= (<= x1063 224) x964) (= (x1074 (- x1666 128)) x1063)) (and x964 (=> (and (= (ite (< 0 x1677) x132 (x806 127 x132)) x986) (= x875 (= (ite x1315 1 0) x1677)) (= (x806 1 x791) x1677) (= (> 32 x986) x1315) (= (div x791 2) x132) (= (ite (<= x1063 32) (x1703 (x1176 (x852 128)) 0) (ite (>= 64 x1063) (x1364 (x1176 (x852 128)) (x1176 (x852 160)) 0) (ite (<= x1063 96) (x1771 (x1176 (x852 128)) (x1176 (x852 160)) (x1176 (x852 192)) 0) (ite (>= 128 x1063) (x1606 (x1176 (x852 128)) (x1176 (x852 160)) (x1176 (x852 192)) (x1176 (x852 224)) 0) (ite (<= x1063 160) (x1310 (x1176 (x852 128)) (x1176 (x852 160)) (x1176 (x852 192)) (x1176 (x852 224)) (x1176 (x852 256)) 0) (ite (>= 192 x1063) (x28 (x1176 (x852 128)) (x1176 (x852 160)) (x1176 (x852 192)) (x1176 (x852 224)) (x1176 (x852 256)) (x1176 (x852 288)) 0) (ite (<= x1063 224) (x1341 (x1176 (x852 128)) (x1176 (x852 160)) (x1176 (x852 192)) (x1176 (x852 224)) (x1176 (x852 256)) (x1176 (x852 288)) (x1176 (x852 320)) 0) (x1176 x1258)))))))) x854)) (and (=> (and (not x875) (and (= (= 0 x1195) x956) (= (x806 1 x791) x1195))) (and (=> (and (not x956) (and (= (x1703 (x295 5) 0) x340) (= x1374 (< 0 x986)))) (and (=> x1374 x1336) (=> (not x1374) x1179))) (=> (and x956 (and (= x1799 (x806 115792089237316195423570985008687907853269984665640564039457584007913129639680 x791)) (= x1230 x1343) (= (x473 (+ 128 x986)) x1230))) x1076))) (=> x875 x310))))) x1551))
(assert (=> (<= (x808 320) 10000) (= (x1176 (x808 320)) (x295 (x808 320)))))
(assert (= (x821 256) (x1427 (x1176 (x821 256)))))
(assert (= x816 (and x443 x1622)))
(assert (= (x1176 106459005500898838667931598610041423549574964228674563513410788872267948359680) (x295 106459005500898838667931598610041423549574964228674563513410788872267948359680)))
(assert (= (and x1661 (not x831)) x1159))
(assert (x1172 x1620 x1630))
(assert (= x1640 (=> (and (= (x1796 128) x1089) (= x693 (not (< 32 x316)))) (and x693 (=> (= 32 x897) x273)))))
(assert (= (x295 839595567) (x1176 839595567)))
(assert (= x907 (and x1496 (not x1150))))
(assert (x1419 x1204))
(assert (= x1053 (x1427 (x1176 x1053))))
(assert (= (x295 100641684887429822015232653770480429695213136867978658013931169090238473568256) (x1176 100641684887429822015232653770480429695213136867978658013931169090238473568256)))
(assert (x1419 x228))
(assert (= (or x158 x562) x307))
(assert (x1419 x530))
(assert (x1419 x13))
(assert (x1419 x589))
(assert (x1419 x1333))
(assert (x1419 x1424))
(assert (= (x1427 (x295 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (or x1755 x475) x1285))
(assert (= x732 (or x31 x1180)))
(assert (= x768 (=> (= (> (x1427 x1048) (x1427 x1833)) x922) (and (=> x922 x78) (=> (not x922) x1120)))))
(assert (x1419 x1346))
(assert (= (and (not x1643) x243) x1413))
(assert (= (x1377 224) (x1427 (x1176 (x1377 224)))))
(assert (=> (>= 10000 x1821) (= (x1176 x1821) (x295 x1821))))
(assert (x1419 x661))
(assert (= (and x1070 x491) x1605))
(assert (= (and x216 (not x342)) x1619))
(assert (= (x435 128) (x1427 (x1176 (x435 128)))))
(assert (x1419 x1442))
(assert (= true x1714))
(assert (= x494 (and (not x1465) x623)))
(assert (x1419 x1001))
(assert (= x284 (x1176 (x1427 x284))))
(assert (x1419 x348))
(assert (x1419 x1343))
(assert (x1419 x1553))
(assert (x1419 x1852))
(assert (=> (<= x1078 10000) (= (x295 x1078) (x1176 x1078))))
(assert (x1419 x50))
(assert (= (x1176 2279315017) (x295 2279315017)))
(assert (x1419 x1556))
(assert (x1419 x1140))
(assert (x1419 x908))
(assert (x1419 x826))
(assert (= x673 (x1427 (x1176 x673))))
(assert (= x510 (and x1363 (not x383))))
(assert (= (and x816 x548) x987))
(assert (x1419 x393))
(assert (x1419 x924))
(assert (= (and x704 x1434) x154))
(assert (x1312 x1251))
(assert (=> (>= 10000 (x613 128)) (= (x295 (x613 128)) (x1176 (x613 128)))))
(assert (= 4294967296 (x1427 (x295 4294967296))))
(assert (= x1474 (and x787 (not x745))))
(assert (= x114 (and x343 x3)))
(assert (= (=> (= (not (< 32 x314)) x679) (and x679 x454)) x124))
(assert (= x142 (and x784 x1037)))
(assert (= x1358 (x1427 (x1176 x1358))))
(assert (= (x852 192) (x1427 (x1176 (x852 192)))))
(assert (= x1721 (and (not x1246) x1837)))
(assert (=> (>= 10000 (x58 320)) (= (x1176 (x58 320)) (x295 (x58 320)))))
(assert (= x591 (and x1807 x195)))
(assert (x1419 x954))
(assert (x1419 x337))
(assert (x1419 x476))
(assert (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 (x1427 (x295 56965738197333823925951794324075424010313516842063129668313081903848242544640))))
(assert (= (x1176 (x1427 x203)) x203))
(assert (x1419 x271))
(assert (x1419 x1542))
(assert (x1042 x549))
(assert (x1419 x1094))
(assert (= x219 x371))
(assert (=> (>= 10000 (x613 320)) (= (x1176 (x613 320)) (x295 (x613 320)))))
(assert (= x1616 (and x12 (not x257))))
(assert (x1419 x801))
(assert (= 3285302901 (x1427 (x295 3285302901))))
(assert (= x723 (and x147 x1220)))
(assert (= x206 (=> (and (= x1633 (x879 (x1176 x1686))) (= (x473 (+ x523 260)) x398) (= (x1074 (- x398 128)) x1723) (= x382 128) (= (x473 (+ x1274 31)) x1764) (= x523 (x806 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1764)) (= (= 0 x1633) x370)) (and (=> x370 x333) (=> (and (not x370) (and (not (> 2112976665 x172)) (not (> 4 x669)) (= x1240 (x1074 (- x669 4))) x477 (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1240) (and (= true (<= x1240 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1240 96))) x1808) (< x172 3081457077) (<= 132 x669) (= (x879 (x1176 x1686)) x165) (= x1243 x1494) (not (> 2867924802 x172)) (= x1337 78829575338057407266098799593532030895783219923606930547737006156155256307712) (not (= 2867924802 x172)) (= 2923951457 x172) (< 0 x165) (= x477 (= (x1270 100) x1274)) (not (< x172 2726977199)) (= x69 x802) (= x1723 x669))) (and (=> x1808 x595) (=> (and (not x1808) (and (= (= x802 x69) x1357) (= x802 x1576))) (and (=> (and x1357 (and (= x658 x1494) (= x1395 (= x1494 x1243)))) (and (=> (not x1395) x595) (=> (and x1395 (= x853 (and (< 131 x669) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x669))))) (and (=> (not x853) x595) (=> (and x853 (and (= (x236 100) x1617) (= x1153 (> x1617 18446744073709551615)))) (and (=> x1153 x595) (=> (and (and (= 132 x1211) (= (< x669 x1316) x1296) (= x1316 (x473 (+ 132 x1617)))) (not x1153)) (and (=> x1296 x595) (=> (and (= true x1572) (not x1296)) (and (=> (and x1572 (and (= x652 (x1364 (x1176 x802) (x295 2) 0)) (>= 255 x1001) (> 256 x1001) (= (x10 x652) x1001) (>= x1001 0) (= x317 (> x1001 0)))) (and (=> (not x317) x595) (=> (and x317 (and (< x1464 256) (= (= 0 x1464) x259) (<= x1464 255) (>= x1464 0) (= x1464 (x10 x149)) (= (x1364 (x1176 x1494) (x295 2) 0) x149))) (and (=> (not x259) x595) (=> (and (= (= 0 x1494) x167) x259) (and (=> x167 x595) (=> (and (not x167) (and (= (< 0 x924) x1448) (= 0 x1672))) (and (=> (not x1448) x196) (=> (and (= x1453 (> x924 0)) x1448) (and (=> (and (and (= x362 0) (= x496 (x1507 x933)) x392 (= 0 x1722) (<= x885 1461501637330902918203684832716283019655932542975) (= 0 x508) (= x392 (or (not x532) x428)) (= (not (= 0 x496)) x1784) (= x984 x1417) (= x1375 0) (= x532 (and x405 x920)) (= x49 (mod x1506 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x885 (x800 x984)) (= (x1433 x362) x412) (= 1 x1506) (= (x1703 (x295 1) 0) x1417) (= x1481 (not (= 0 x885))) (= x428 (or (not x1481) x747)) (= x982 (ite x405 x49 x1726)) (= x845 (x473 (+ x512 x982))) (= x1726 (mod x508 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x747 (= x1701 0)) (>= x885 0) (= x1701 (x260 x885)) (= (<= x512 x933) x1794) (= x691 (ite x405 x512 x412)) (= 0 x141) (< x885 1461501637330902918203684832716283019655932542976) (= x933 (x1433 x141)) (= x405 (or x1794 x1784)) (= (= x802 x885) x886)) x1453) (and (=> (not x886) x1475) (=> (and (= (< 0 x924) x776) x886) (and (=> (not x776) x595) (=> (and (and (= (or x445 (not x1044)) x1504) (= (or x1133 x1731) x425) (= (x213 x1579) x209) (= x675 x467) (= (x416 x1687) x1579) (= (= x291 0) x1266) (<= x1715 1461501637330902918203684832716283019655932542975) (= (not (= x209 0)) x1133) (= x675 (x1703 (x295 1) 0)) x1504 (= x1044 (and x920 x425)) (= x1715 (x800 x467)) (= x445 (or x1266 (not x1095))) (= x1731 (>= x1579 x845)) (= x291 (x260 x1715)) (<= 0 x1715) (= (not (= x1715 0)) x1095) (= 0 x1687)) x776) x34))))) (=> (not x1453) x595))))))))))) (=> (not x1572) x595))))))))))) (=> (not x1357) x595)))))))))
(assert (x1419 x168))
(assert (= (x1176 (x1427 x256)) x256))
(assert (x1419 x1002))
(assert (= 0 (x835 96)))
(assert (= x1079 x57))
(assert (= x1807 (and x1812 (not x828))))
(assert (x1419 x492))
(assert (=> (<= (x1302 192) 10000) (= (x295 (x1302 192)) (x1176 (x1302 192)))))
(assert (x1419 x237))
(assert (= x352 (and x1717 x1452)))
(assert (= x774 (or x300 x696 x70 x1219 x113)))
(assert (x1419 x429))
(assert (= (or (and (not x1200) x657) x451) x387))
(assert (= (x1427 (x1176 (x808 288))) (x808 288)))
(assert (= x1455 (and x1192 x963)))
(assert (= x600 (=> (and (or (not x1203) x1203) (= (= x561 0) x1203)) x899)))
(assert (x1419 x311))
(assert (x1042 x1686))
(assert (= x1429 (and x1692 x859)))
(assert (x1419 x559))
(assert (= (and (not x305) x297) x519))
(assert (= (x808 160) (x1427 (x1176 (x808 160)))))
(assert (x1419 x1462))
(assert (= (or x1016 x211 x1581 x1025 x1338) x233))
(assert (= (x1427 (x1176 (x613 192))) (x613 192)))
(assert (x1419 x1124))
(assert (x1419 x1324))
(assert (x1419 x558))
(assert (= (and x677 (not x1277)) x48))
(assert (= (or x1008 x619 x717) x329))
(assert (x1419 x382))
(assert (x1419 x1033))
(assert (= (and x1298 x1603) x1452))
(assert (x1419 x1209))
(assert (= (x1176 (x1427 x978)) x978))
(assert (x1419 x1517))
(assert (= x1668 (and (not x1296) x303)))
(assert (x1042 (x852 192)))
(assert (x1042 (x808 320)))
(assert (x1312 x913))
(assert (= (x1427 (x295 3948783980)) 3948783980))
(assert (= (and x862 x1203) x1135))
(assert (x1419 x1121))
(assert (x1419 x1691))
(assert (= 0 (x112 260)))
(assert (x1419 x968))
(assert (x1419 x410))
(assert (x605 x397))
(assert (x1042 x1053))
(assert (x1419 x760))
(assert (= (x1427 (x1509 x421 x924)) (+ x924 (x1427 x421))))
(assert (= x378 (and x167 x780)))
(assert (= (+ 1 (x1427 x1370)) (x1427 (x1509 x1370 1))))
(assert (x1042 (x58 256)))
(assert (= (x1427 (x295 2726977199)) 2726977199))
(assert (x1419 x1751))
(assert (= (and x1099 x22) x677))
(assert (= (and x431 (not x927)) x901))
(assert (x1419 x1560))
(assert (= (x1427 (x1176 (x58 160))) (x58 160)))
(assert (= (and x1277 x677) x1558))
(assert (x1419 x132))
(assert (x349 x1422))
(assert (x1419 x1566))
(assert (= (x936 192) 0))
(assert (x1419 x1630))
(assert (x1419 x1725))
(assert (= (and x780 (not x167)) x1478))
(assert (x1419 x648))
(assert (x1419 x192))
(assert (x1419 x1530))
(assert (x1419 x697))
(assert (=> (>= 10000 (x58 256)) (= (x1176 (x58 256)) (x295 (x58 256)))))
(assert (x1419 x1544))
(assert (x1419 x360))
(assert (= (x1176 2112976665) (x295 2112976665)))
(assert (x1419 x824))
(assert (= (or x690 (and x1591 x426)) x1379))
(assert (x1042 (x1302 224)))
(assert (x1419 x914))
(assert (x1419 x1829))
(assert (x1419 x976))
(assert (= x1716 (and x24 (not x1210))))
(assert (= x1567 (and (=> x1483 x310) (=> (and (not x1483) (and (= (div x924 2) x884) (= x282 (x473 (+ x884 1))) (= (< x1428 x282) x618))) (and (=> x618 x310) (=> (and (not x618) (and (<= 0 x668) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x668) (= (not (= x668 x1213)) x1150))) (and (=> (not x1150) x1551) (=> (and x1150 (= x931 x1150)) x961))))))))
(assert (= x1161 (=> (and (= (= 0 x1191) x1200) (or x1200 (not x1200))) x1182)))
(assert (x1419 x1143))
(assert (x1419 x1311))
(assert (= (and x1413 x1106) x1785))
(assert (x1419 x1247))
(assert (= x214 (=> (= x635 (< 0 x924)) (and (=> (and x635 (and (= (x1703 (x295 1) 0) x1069) (<= 0 x667) (= x540 true) x173 (>= 1461501637330902918203684832716283019655932542975 x667) (= (<= x952 x1520) x1309) (= x872 (and x920 x369)) (= x667 (x1705 x1431)) (= x1286 (not (= x1 x574))) (= (= x1267 x1) x1012) (= (or x1012 (not x1369)) x906) (= x1520 (x926 x1)) (= (x1509 x1069 x1) x1431) (= x1267 (x260 x667)) (= (or x1286 x1309) x369) (= x1 (x1074 (- x924 1))) (= (not (= x667 0)) x1369) (= x574 (x155 x1520)) (= x173 (or (not x872) x906)) (= (x1074 (- x924 1)) x215))) (and (=> (and (not x540) (and (= 0 x634) (= x1750 x640))) x27) (=> (and x540 (and (or (and (not x127) (and (= (ite x766 x766 (= x215 0)) x1045) (= (= x804 0) x766))) (and (= x1045 x127) x127)) (= x127 (< x215 x79)))) x572))) (=> (and (and (= x1750 x640) (= x634 0)) (not x635)) x27)))))
(assert (x1419 x668))
(assert (x1419 x850))
(assert (=> (>= 10000 x1258) (= (x1176 x1258) (x295 x1258))))
(assert (x1042 (x58 128)))
(assert (x1552 x542))
(assert (x1419 x413))
(assert (x1419 x993))
(assert (= (and x1836 x432) x166))
(assert (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 (x1427 (x295 100641684887429822015232653770480429695213136867978658013931169090238473568256))))
(assert (x1419 x398))
(assert (x518 x1804))
(assert (= (x1427 (x295 1234336674)) 1234336674))
(assert (= (x1176 78829575338057407266098799593532030895783219923606930547737006156155256307712) (x295 78829575338057407266098799593532030895783219923606930547737006156155256307712)))
(assert (x1419 x376))
(assert (= x1833 (x1176 (x1427 x1833))))
(assert (= (or x1614 x644 x1499 x1088 x699) x77))
(assert (x1419 x1608))
(assert (x518 x1225))
(assert (= x855 (and x1626 x1671)))
(assert (= x690 (and x426 (not x1591))))
(assert (x1419 x796))
(assert (= x303 (and (not x1153) x608)))
(assert (= (x295 24341557) (x1176 24341557)))
(assert (= (=> (and (= x1412 x908) (= x743 x153)) x947) x100))
(assert (= x365 (and x1029 (not x922))))
(assert (x1419 x822))
(assert (= (x1302 224) (x1427 (x1176 (x1302 224)))))
(assert (= (+ x344 (x1427 x1660)) (x1427 (x1509 x1660 x344))))
(assert (x1419 x1351))
(assert (= (and (not x116) x387) x248))
(assert (= 1461501637330902918203684832716283019655932542976 (x1427 (x295 1461501637330902918203684832716283019655932542976))))
(assert (x1042 (x1302 160)))
(assert (= x1757 (=> (and (or (not x1043) x1043) (= x1043 (= 0 x662))) x1756)))
(assert (x1042 (x435 288)))
(assert (= x1138 (and x274 (not x204))))
(assert (= (x851 96) 0))
(assert (= x1562 (and (not x370) x799)))
(assert (= (=> (and (= x1269 x447) (= x1750 x1112) (= 0 x1324)) x1831) x205))
(assert (x1419 x667))
(assert (= (x852 320) (x1427 (x1176 (x852 320)))))
(assert (= x25 (and (not x1574) x207)))
(assert (= 0 (x1021 320)))
(assert (x1312 x1225))
(assert (= (=> (and (= x671 x304) (= x1679 x1750)) x1032) x587))
(assert (x1419 x1820))
(assert (= x938 (or x106 x987)))
(assert (= x596 (and x1792 x1102)))
(assert (x1419 x54))
(assert (= (x1176 (x1427 x958)) x958))
(assert (= x529 (and x1671 (not x1626))))
(assert (x1419 x1743))
(assert (= 0 (x979 388)))
(assert (= x1659 (and x1395 x1348)))
(assert (= x371 (=> (and (= x1750 x655) (= x662 1)) x1757)))
(assert (x1419 x409))
(assert (= (=> (and (= (= x1324 0) x866) (or (and (not x866) (and (= x1269 x561) (= x900 x1324) (= x1112 x832))) (and (and (= (x95 (x1176 x1686)) x390) (= x561 x1269) (= x900 x1324) (= (x1163 (x1176 x1686)) x1166) (= x108 (x473 (+ x390 x1131))) (= x832 x1112) (< (+ x1131 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite (= x1324 0) x1105 0) x1131) (= (- x1166 x1131) x1018)) x866))) x600) x1831))
(assert (= x1092 (=> (and (and (= x1819 x1725) (< x234 256) (>= 255 x234) (= x1113 x858) (<= x1819 1461501637330902918203684832716283019655932542975) (= x813 x476) (= (x1074 (- x645 4)) x356) (= 3285302901 x1308) (<= x1181 1461501637330902918203684832716283019655932542975) (> x569 0) (>= x1181 0) (= 0 x234) (= (x879 (x1176 x1686)) x569) (= (x73 x1853) x234) (= x813 x13) (= (x1364 (x1176 x813) (x295 7) 0) x1061) (>= x320 0) (= x951 x1290) (not (< x1308 3285302901)) (not (> 3081457077 x1308)) (= (x1509 x1061 3) x1853) (= x348 x320) (<= 0 x1819) x1636 (not (> 4 x645)) (= (not x1290) x1636) (<= 0 x234) (not (> 2112976665 x1308)) (= 0 x543) (> 3733007566 x1308) (= x1113 0) (and (< 35 x645) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x645))) (<= x320 1461501637330902918203684832716283019655932542975) (= x1011 (< 0 x924)) (not (or (> x356 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x356 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x356 32)))) (= x1530 x348) (= x951 (not (= 0 x60)))) (and (<= x413 255) (<= x69 1461501637330902918203684832716283019655932542975) (= x1782 0) (>= x1243 0) (>= 4294967295 x719) (>= x193 0) (<= x1402 1461501637330902918203684832716283019655932542975) (= x509 (not x742)) (>= x1734 0) (<= x376 1461501637330902918203684832716283019655932542975) x419 (< x1250 1680813743) (= 1030951317 x1250) (= x1015 3285302901) (>= 1461501637330902918203684832716283019655932542975 x1686) (= false x418) (= x415 x1734) (not (< x1250 1030951317)) (<= 0 x1164) (< x193 256) (= false x194) (<= 0 x413) (< 0 x1149) (> 2112976665 x1250) (= 1 x103) (>= x69 0) (not (> 839595567 x1250)) (= (= x193 0) x742) (<= x193 255) (= x1164 (x222 (x1176 x1686))) (= x60 (ite x509 1 0)) (<= 0 x1402) (>= x1542 0) (>= x376 0) (= x193 (x10 x754)) (= x376 x1725) (= false x905) (= (x879 (x1176 x1686)) x1149) (= (x1364 (x295 0) (x295 2) 0) x754) (= false x1682) (= (> (x879 (x1176 x1686)) 0) x419) (<= x1243 1461501637330902918203684832716283019655932542975) (<= x1542 255) (> x1686 0) (>= 1461501637330902918203684832716283019655932542975 x1734) (<= 0 x719))) (and (=> (and (not x1011) (= x161 x939)) x983) (=> (and (and (= (or x1156 x1810) x1777) (= x783 0) (= x290 (or x1154 (not x41))) (= 1 x1624) (= x21 (x487 x579)) (= (x1703 (x295 1) 0) x999) (<= 0 x668) x290 (= x579 (x1364 (x1176 x1358) x1735 0)) (= (= 0 x480) x1539) (>= 1461501637330902918203684832716283019655932542975 x1358) (< 0 x924) (= x1849 x999) (>= 255 x21) (>= x21 0) (= (x473 (+ x161 x393)) x1206) (= x1358 (x800 x1849)) (= (x1528 x796) x115) (>= x1358 0) (= (or x1539 (not x1698)) x1154) (= x1107 (x1528 x601)) (= (x260 x1358) x480) (= x546 (mod x1624 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x393 (ite x1777 x546 x139)) (<= x668 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1810 (<= x161 x115)) (= 0 x796) (= (= 0 x21) x997) (= (and x920 x1777) x41) (= x1698 (not (= x1358 0))) (= x1578 0) (= x37 (ite x1777 x161 x1107)) (= (= x668 (ite x997 0 1)) x1246) (< x21 256) (= x139 (mod x1578 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x330 (x174 x115)) (= 0 x601) (= (x1364 (x1176 x813) (x295 9) 0) x1735) (= x1156 (not (= 0 x330))) (= x175 0) (< x1358 1461501637330902918203684832716283019655932542976)) x1011) (and (=> (and (and (= x512 x1206) (= x466 1)) x1246) x1331) (=> (not x1246) x1480)))))))
(assert (= x829 (and x301 (not x1374))))
(assert (x1419 x17))
(assert (x1419 x1670))
(assert (x1419 x1027))
(assert (x1419 x966))
(assert (x1419 x669))
(assert (= (or x1222 x815) x3))
(assert (= x1496 (and (not x618) x140)))
(assert (x1419 x1428))
(assert (= x522 (or x1733 x1805)))
(assert (= (and x609 (not x367)) x696))
(assert (x1419 x285))
(assert (x1419 x1081))
(assert (= (and x1404 (not x1322)) x1596))
(assert (x1042 (x821 128)))
(assert (x1419 x1181))
(assert (=> (<= x1760 10000) (= (x1176 x1760) (x295 x1760))))
(assert (x1419 x1022))
(assert (= (=> (and (= (x879 (x1176 x1686)) x465) (= (x473 (+ 31 x316)) x695) (= x1027 (x806 115792089237316195423570985008687907853269984665640564039457584007913129639904 x695)) (= 128 x760) (= x1709 (= x465 0)) (= (x473 (+ x1027 260)) x1467) (= (x1074 (- x1467 128)) x892)) (and (=> x1709 x205) (=> (and (and (not (< x558 4)) (= x558 x892) (= 24341557 x560) x1437 (= x407 (x879 (x1176 x1686))) (> 839595567 x560) (< x560 288768741) (= (= (x379 100) x316) x1437) (>= x558 132) (< 0 x407) (= x181 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1580) (and (> 96 x1580) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1580))))) (= x1642 x145) (< x560 2112976665) (= x1243 x549) (= x1631 656247078515407326148355443760548300161286948278503429861414951787075469312) (= x1580 (x1074 (- x558 4)))) (not x1709)) (and (=> x181 x1446) (=> (and (and (= (= x549 x1243) x1000) (= x549 x1621)) (not x181)) (and (=> (and (and (= x1798 (and (> x558 131) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x558) true))) (= x1642 x553)) x1000) (and (=> (not x1798) x1446) (=> (and x1798 (and (= (x1392 100) x1215) (= x334 (< 18446744073709551615 x1215)))) (and (=> (and (and (= x830 (< x558 x1769)) (= 132 x505) (= (x473 (+ 132 x1215)) x1769)) (not x334)) (and (=> (and (= true x1780) (not x830)) (and (=> (and (and (< x1311 256) (= (x10 x1505) x1311) (>= x1311 0) (= (x1364 (x1176 x549) (x295 2) 0) x1505) (>= 255 x1311) (= x817 (= 0 x1311))) x1780) (and (=> (not x817) x1446) (=> (and (= (= 0 x549) x927) x817) (and (=> x927 x1446) (=> (and (and (= (= x924 x436) x1084) (<= x750 1461501637330902918203684832716283019655932542975) (= (<= x512 x822) x197) (= x750 (x800 x430)) (= x2 (or x197 x937)) (= (or x1084 (not x904)) x578) (= (x1507 x822) x995) (= (not (= x750 0)) x904) (>= x750 0) (= (x260 x750) x436) x1359 (= x421 (x1703 (x295 1) 0)) (= (or x578 (not x698)) x1359) (= true x128) (= x698 (and x2 x920)) (= (x473 (+ x924 1)) x346) (= x430 (x1509 x421 x924)) (= (not (= x995 x924)) x937) (= (x1433 x924) x822) (= (x1364 (x1176 x549) (x295 2) 0) x169)) (not x927)) (and (=> (and x128 (and (or (and (not x5) (and (= x1174 (ite x270 x270 (= x346 0))) (= x270 (= x553 0)))) (and (= x5 x1174) x5)) (= x5 (< x346 x1642)))) x888) (=> (not x128) x1446))))))) (=> (not x1780) x1446))) (=> x830 x1446))) (=> x334 x1446))))) (=> (not x1000) x1446))))))) x641))
(assert (= x514 (and x867 (not x5))))
(assert (x1419 x1804))
(assert (x1419 x643))
(assert (x1042 (x435 128)))
(assert (x1419 x1579))
(assert (= (or x827 x25) x1180))
(assert (= x1700 (=> (and (or (not x11) x11) (= x11 (= x179 0))) x1169)))
(assert (x1419 x1545))
(assert (x1419 x1635))
(assert (x518 x791))
(assert (= (=> (and (= x736 (x1724 256)) (= x848 (not (< 128 x1403)))) (and (=> (= 128 x814) x1160) x848)) x1265))
(assert (x1312 x1515))
(assert (= (or x1356 x1854) x442))
(assert (= x1805 (or x1135 x1501)))
(assert (= (and (not x1689) x1822) x99))
(assert (x1419 x1215))
(assert (x1419 x1361))
(assert (x1419 x538))
(assert (= x1048 (x1176 (x1427 x1048))))
(assert (x1419 x782))
(assert (= (x683 260) 0))
(assert (= (x1176 2923951457) (x295 2923951457)))
(assert (x1042 (x1302 192)))
(assert (x1419 x1686))
(assert (x1419 x264))
(assert (=> (>= 10000 (x852 256)) (= (x295 (x852 256)) (x1176 (x852 256)))))
(assert (x1419 x1062))
(assert (= x1232 (or x442 (and x98 (not x1307)))))
(assert (= x64 (or x919 x248 x630)))
(assert (= (x58 320) (x1427 (x1176 (x58 320)))))
(assert (x1056 x97))
(assert (= x34 x196))
(assert (x1419 x1403))
(assert (x1419 x673))
(assert (= (and (not x350) x1472) x963))
(assert (= (x1176 56965738197333823925951794324075424010313516842063129668313081903848242544640) (x295 56965738197333823925951794324075424010313516842063129668313081903848242544640)))
(assert (x1042 x631))
(assert (x1419 x541))
(assert (= x555 (and x170 (not x136))))
(assert (= x1594 (or x1103 x1086)))
(assert (= (x1377 288) (x1427 (x1176 (x1377 288)))))
(assert (= x1394 (and (not x1106) x1413)))
(assert (x1419 x441))
(assert (= (x683 356) 0))
(assert (=> (>= 10000 (x1302 320)) (= (x1176 (x1302 320)) (x295 (x1302 320)))))
(assert (= (=> (and (= (< x1460 x709) x1210) (or (and x1210 (= (x473 (+ x1460 260)) x994)) (not x1210))) x724) x1817))
(assert (x1419 x1))
(assert (= (x58 192) (x1427 (x1176 (x58 192)))))
(assert (= x1587 (and x554 x818)))
(assert (= (=> (and (= x1750 x655) (= x662 0)) x1757) x1446))
(assert (x1419 x1826))
(assert (= (and x62 x72) x1622))
(assert (x1419 x1259))
(assert (x1419 x986))
(assert (= x1821 (x1427 (x1176 x1821))))
(assert (x1419 x645))
(assert (= (=> (and (= x1691 x930) (= x129 x1653)) x626) x1169))
(assert (=> (>= 10000 x549) (= (x1176 x549) (x295 x549))))
(assert (x1419 x1646))
(assert (x1419 x695))
(assert (x1419 x462))
(assert (= x1367 (and x867 x5)))
(assert (x1419 x1137))
(assert (x1419 x1107))
(assert (= x961 (and (=> (and (and (= x648 (ite (> x1629 0) x1251 (x806 127 x1251))) (= x1629 (x806 1 x791)) (= (> 32 x648) x711) (= (= x1629 (ite x711 1 0)) x1643) (= x1251 (div x791 2))) x931) (and (=> x1643 x310) (=> (and (and (= x778 (x473 (+ 31 x648))) (= x1391 (div x778 32)) (= (< 0 x1654) x1106) (= x958 (x1509 x1370 x1391)) (= x1370 (x1703 (x295 5) 0))) (not x1643)) (and (=> (and (not x1106) (and (= x1370 x978) (= 0 x1628))) x89) (=> (and (= (> x1654 31) x1295) x1106) (and (=> (and (and (= (x473 (+ x826 1)) x1110) (= (x473 (+ x1654 x1654)) x826) (= (x473 (+ x1654 100)) x707) (= x962 (> x707 100))) x1295) (and (=> x962 x1451) (=> (and (not x962) (= x1370 x765)) x229))) (=> (and (not x1295) (and (= x1370 x978) (= x1400 (ite x923 x1094 x449)) (= x1094 (x473 (+ x763 x680))) (= x923 (<= x763 255)) (= x763 (x473 (+ x1654 x1654))) (= (x473 (+ x763 x680)) x856) (= x1628 (ite x1748 x856 x1400)) (= (x1372 x763 x680) x449) (= (>= 255 x763) x1748) (= (x221 100) x916) (= x680 (x806 115792089237316195423570985008687907853269984665640564039457584007913129639680 x916)))) x89))))))) (=> (not x931) x36))))
(assert (= (and (not x1572) x1668) x684))
(assert (x1419 x145))
(assert (x1042 (x1302 288)))
(assert (= x1189 (and x1491 x1490)))
(assert (= (=> (and (= x101 (not (> x707 132))) (= x279 (x1509 x1370 1))) (and (=> (= x279 x765) x229) x101)) x1451))
(assert (x1419 x1690))
(assert (x1419 x450))
(assert (x1419 x1532))
(assert (= (and x1586 (not x388)) x1525))
(assert (= (x1623 256) 0))
(assert (x1419 x551))
(assert (= x761 (and x588 x474)))
(assert (x1312 x1205))
(assert (x1419 x1195))
(assert (x1419 x1075))
(assert (= (x58 128) (x1427 (x1176 (x58 128)))))
(assert (x1419 x889))
(assert (= (=> (and (= x429 x1510) (= x1484 x23)) x1704) x361))
(assert (= x1249 x36))
(assert (x518 x1764))
(assert (= x1749 (and x540 x627)))
(assert (= x965 (and (not x7) x1791)))
(assert (= (x1176 4294967296) (x295 4294967296)))
(assert (x1042 (x821 224)))
(assert (=> (>= 10000 (x435 192)) (= (x295 (x435 192)) (x1176 (x435 192)))))
(assert (x1419 x556))
(assert (x1419 x341))
(assert (= x1175 (or x833 x620)))
(assert (= x294 (or x740 x823)))
(assert (= (x1427 (x1176 (x852 128))) (x852 128)))
(assert (= (x295 1680813743) (x1176 1680813743)))
(assert (= x620 (and (not x1444) x945)))
(assert (= x981 (and x1785 (not x1295))))
(assert (= (and x596 x515) x475))
(assert (= x1254 (and (not x277) x732)))
(assert (= x1231 (and (not x181) x1508)))
(assert (x1419 x611))
(assert (= (and x1385 (not x53)) x788))
(assert (= (x1366 96) 0))
(assert (x1419 x885))
(assert (= (x306 320) 0))
(assert (x1419 x1684))
(assert (x1419 x346))
(assert (x1419 x1425))
(assert (x1419 x201))
(assert (= x998 (and x1656 x294)))
(assert (= (or x539 x365) x1671))
(assert (x1042 (x852 320)))
(assert (= (x1176 1871487246) (x295 1871487246)))
(assert (= (x1427 (x1509 x1061 3)) (+ (x1427 x1061) 3)))
(assert (x1042 (x613 224)))
(assert (= x1304 (=> (and (= (not (< 128 x190)) x1625) (= x954 (x1732 256)) (= (x473 (+ 96 x1352)) x903)) (and x1625 (=> (= x1535 128) x1323)))))
(assert (x1042 (x808 128)))
(assert (= (and (not x59) x359) x118))
(assert (= x366 (=> (and (= (x849 x614) x566) (= (not (> x586 32)) x1593)) (and x1593 x1468))))
(assert (= (x1427 (x1176 (x852 160))) (x852 160)))
(assert (x1042 (x1377 160)))
(assert (x1419 x601))
(assert (x1419 x1750))
(assert (x1419 x1402))
(assert (= 0 (x1021 160)))
(assert (x1419 x353))
(assert (= x243 (and x1436 x931)))
(assert (x1419 x321))
(assert (= (x1623 160) 0))
(assert (=> (>= 10000 (x852 288)) (= (x1176 (x852 288)) (x295 (x852 288)))))
(assert (= (x295 1234336674) (x1176 1234336674)))
(assert (=> (>= 10000 (x852 320)) (= (x295 (x852 320)) (x1176 (x852 320)))))
(assert (= x254 (=> (and (= (x1509 x153 1) x284) (= x659 (not (< (x1427 x284) (x1427 x860))))) (and x735 x659))))
(assert (x1419 x1617))
(assert (= (x1176 (x1427 x837)) x837))
(assert (= 1871487246 (x1427 (x295 1871487246))))
(assert (= x911 (and (=> (and (and (= (> 32 x1209) x606) (= x1212 (= (ite x606 1 0) x337)) (= x1804 (div x791 2)) (= (x806 1 x791) x337) (= (ite (< 0 x337) x1804 (x806 127 x1804)) x1209)) x1656) (and (=> (and (not x1212) (and (= (x1509 x1660 x344) x1048) (= (x473 (+ x1209 31)) x1514) (= (< 0 x682) x62) (= (div x1514 32) x344) (= (x1703 (x295 5) 0) x1660))) (and (=> (and (= x443 (< 31 x682)) x62) (and (=> (and (not x443) (and (= x228 (x473 (+ x1620 x1630))) (= (ite x1342 x228 x42) x1690) (= (x1588 132) x261) (= (x473 (+ x1620 x1630)) x4) (= (x806 115792089237316195423570985008687907853269984665640564039457584007913129639680 x261) x1630) (= (x1372 x1620 x1630) x42) (= x1620 (x473 (+ x682 x682))) (= x537 (>= 255 x1620)) (= (>= 255 x1620) x1342) (= (ite x537 x4 x1690) x1742) (= x1660 x1833))) x768) (=> (and (and (= x548 (> x1075 132)) (= x650 (x473 (+ 1 x712))) (= (x473 (+ x682 x682)) x712) (= (x473 (+ 132 x682)) x1075)) x443) (and (=> x548 x1639) (=> (and (= x1660 x1516) (not x548)) x1834))))) (=> (and (not x62) (and (= x1742 0) (= x1833 x1660))) x768))) (=> (and (and (= x1750 x640) (= 0 x634)) x1212) x27))) (=> (not x1656) x756))))
(assert (= 0 (x936 160)))
(assert (= (x1427 (x1176 (x1377 256))) (x1377 256)))
(assert (x1419 x1162))
(assert (x1419 x1592))
(assert (= (and x388 x1586) x1226))
(assert (x1419 x1813))
(assert (= (x1427 (x1176 x1760)) x1760))
(assert (= (x1353 (+ 96 (x473 (+ 100 x1352)))) 0))
(assert (= (or x324 x1365) x726))
(assert (= (=> (and (= x642 (not (> (x1427 x203) (x1427 x1256)))) (= x1256 (x1509 x256 1))) (and x642 x1059)) x506))
(assert (x1419 x1506))
(assert (x1419 x549))
(assert (x1419 x344))
(assert (x1419 x283))
(assert (= x1581 (and x377 x1651)))
(assert (x1419 x894))
(assert (x1419 x108))
(assert (= (or x38 x1175) x33))
(assert (= (x306 160) 0))
(assert (= (x1427 (x1176 (x852 256))) (x852 256)))
(assert (= (x808 128) (x1427 (x1176 (x808 128)))))
(assert (x1419 x93))
(assert (x1042 x1258))
(assert (= x702 (or x1272 x212)))
(assert (x1419 x1330))
(assert (= (and x1456 (not x15)) x1720))
(assert (= x34 (=> (and (= x775 (x1364 (x1176 x802) (x295 2) 0)) (<= x668 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1364 (x1176 x1494) (x295 2) 0) x656) (= x305 true) (<= 0 x668)) (and (=> (and x305 (and (or (and (not x1037) (and (= x56 (ite x1824 x1824 (= 0 x924))) (= (= 0 x668) x1824))) (and (= x56 x1037) x1037)) (= x1037 (> x668 x924)))) x1414) (=> (not x305) x595)))))
(assert (x1419 x940))
(assert (= x947 (=> (= x1409 (< (x1427 x153) (x1427 x860))) (and (=> x1409 x254) (=> (not x1409) x735)))))
(assert (= (and x757 x1388) x863))
(assert (x1419 x1773))
(assert (=> (<= (x821 128) 10000) (= (x295 (x821 128)) (x1176 (x821 128)))))
(assert (x1419 x974))
(assert (x1419 x1276))
(assert (= (and (not x1434) x704) x628))
(assert (x1042 (x435 256)))
(assert (= x1349 (=> (and (or (not x1300) (and (= (x473 (+ 164 x534)) x146) x1300)) (= x1300 (< x534 x1797))) x629)))
(assert (= (and x992 x1334) x226))
(assert (x1419 x220))
(assert (= (x1427 (x295 106459005500898838667931598610041423549574964228674563513410788872267948359680)) 106459005500898838667931598610041423549574964228674563513410788872267948359680))
(assert (= (and x136 x170) x20))
(assert (= (x1427 (x1509 x1649 3)) (+ (x1427 x1649) 3)))
(assert (= 3733007566 (x1427 (x295 3733007566))))
(assert (= x1128 (and x1236 x178)))
(assert (= x1101 (and (not x1174) x941)))
(assert (x1419 x1197))
(assert (= (x1427 (x1176 (x1302 128))) (x1302 128)))
(assert (x1419 x21))
(assert (= (and x1557 (not x715)) x948))
(assert (= (x306 224) 0))
(assert (= (x1021 224) 0))
(assert (x1042 (x58 224)))
(assert (x1042 (x58 160)))
(assert (x1419 x814))
(assert (= (x295 3948783980) (x1176 3948783980)))
(assert (= (x1427 (x295 2867924802)) 2867924802))
(assert (= (or x1299 x1396) x459))
(assert (= (x1427 (x1176 (x435 192))) (x435 192)))
(assert (= (x1302 256) (x1427 (x1176 (x1302 256)))))
(assert (= (and x1155 x1097) x1793))
(assert (= (or x628 x154) x1607))
(assert (x1419 x1799))
(assert (= (or (and x294 (not x1656)) x702) x318))
(assert (= (and x1357 x1502) x1348))
(assert (x1419 x1795))
(assert (= x1680 (and x233 (not x772))))
(assert (x1419 x1282))
(assert (= (and x1289 (not x946)) x113))
(assert (x1419 x622))
(assert (= (and x1607 (not x1709)) x1508))
(assert (x1419 x1205))
(assert (= x1480 (=> (= x1511 (not (< 1 x924))) (and (=> (= x1206 x939) x983) x1511))))
(assert (= (and x1374 x301) x1727))
(assert (= x975 (=> (and (= (<= x1362 224) x1753) (= x1081 (x473 (+ x1215 128))) (= (x1074 (- x1081 128)) x1362)) (and x1753 (=> (and (= x1406 (div x791 2)) (= x1466 (> 32 x974)) (= (x806 1 x791) x1477) (= (ite (> x1477 0) x1406 (x806 127 x1406)) x974) (= x1139 (ite (<= x1362 32) (x1703 (x1176 (x1302 128)) 0) (ite (>= 64 x1362) (x1364 (x1176 (x1302 128)) (x1176 (x1302 160)) 0) (ite (<= x1362 96) (x1771 (x1176 (x1302 128)) (x1176 (x1302 160)) (x1176 (x1302 192)) 0) (ite (<= x1362 128) (x1606 (x1176 (x1302 128)) (x1176 (x1302 160)) (x1176 (x1302 192)) (x1176 (x1302 224)) 0) (ite (<= x1362 160) (x1310 (x1176 (x1302 128)) (x1176 (x1302 160)) (x1176 (x1302 192)) (x1176 (x1302 224)) (x1176 (x1302 256)) 0) (ite (<= x1362 192) (x28 (x1176 (x1302 128)) (x1176 (x1302 160)) (x1176 (x1302 192)) (x1176 (x1302 224)) (x1176 (x1302 256)) (x1176 (x1302 288)) 0) (ite (<= x1362 224) (x1341 (x1176 (x1302 128)) (x1176 (x1302 160)) (x1176 (x1302 192)) (x1176 (x1302 224)) (x1176 (x1302 256)) (x1176 (x1302 288)) (x1176 (x1302 320)) 0) (x1176 x1569))))))))) (= x777 (= (ite x1466 1 0) x1477))) (and (=> (and (not x777) (and (= (= x967 0) x715) (= (x806 1 x791) x967))) (and (=> (and (not x715) (and (= x734 (x1703 (x295 5) 0)) (= x1297 (> x974 0)))) (and (=> (not x1297) x289) (=> x1297 x109))) (=> (and (and (= (x473 (+ x974 128)) x713) (= (x806 115792089237316195423570985008687907853269984665640564039457584007913129639680 x791) x528) (= x1544 x713)) x715) x1024))) (=> x777 x1446)))))))
(assert (x1042 (x852 128)))
(assert (= (=> (and (= x1637 (not (< 32 x974))) (= x563 (x849 x734))) (and x1637 x289)) x109))
(assert (= (x979 420) 0))
(assert (x1042 (x435 160)))
(assert (= x873 (and x1720 x777)))
(assert (x1419 x1144))
(assert (= x273 (=> (and (or (not x1434) (and (= x286 (x473 (+ x316 260))) x1434)) (= (< x316 x897) x1434)) x641)))
(assert (= (x295 3081457077) (x1176 3081457077)))
(assert (= x1436 (or x1245 x481)))
(assert (x1419 x1007))
(assert (= (and x99 (not x1447)) x267))
(assert (x1312 x1804))
(assert (x518 x1742))
(assert (x1419 x688))
(assert (=> (<= x813 10000) (= (x1176 x813) (x295 x813))))
(assert (= (and x1483 x1450) x977))
(assert (= (or x1057 x218) x1561))
(assert (x1056 x1630))
(assert (x518 x187))
(assert (= (x1411 192) 0))
(assert (x1419 x26))
(assert (=> (>= 10000 (x1302 160)) (= (x295 (x1302 160)) (x1176 (x1302 160)))))
(assert (x1419 x694))
(assert (= (x1353 (x473 (+ x1352 100))) 0))
(assert (= (or x14 x489) x434))
(assert (x1419 x649))
(assert (=> (>= 10000 (x808 128)) (= (x295 (x808 128)) (x1176 (x808 128)))))
(assert (x1419 x1166))
(assert (= (and x329 x182) x414))
(assert (x1419 x1628))
(assert (= (=> (and (= x671 x23) (= x1679 x1510)) x1032) x1704))
(assert (x1419 x1110))
(assert (= (or x840 x166) x386))
(assert (= x297 (or x1202 x1454)))
(assert (x1419 x107))
(assert (= (and x1301 (not x251)) x945))
(assert (x1419 x380))
(assert (x1419 x1019))
(assert (x1419 x680))
(assert (x1419 x1036))
(assert (= 0 (x683 388)))
(assert (= 0 (x936 288)))
(assert (= (x58 256) (x1427 (x1176 (x58 256)))))
(assert (x1598 x261))
(assert (= (and x1297 x948) x1141))
(assert (= (and x1212 x998) x1602))
(assert (= (and (=> (and (and (= x649 (ite (< 0 x285) x720 (x806 127 x720))) (= x1788 (> 32 x649)) (= x285 (x806 1 x791)) (= x1465 (= (ite x1788 1 0) x285)) (= (div x791 2) x720)) x1307) (and (=> (and (not x1465) (and (= x203 (x1509 x87 x1405)) (= (x1703 (x295 5) 0) x87) (= (x473 (+ 31 x649)) x455) (= x1405 (div x455 32)) (= x1350 (< 0 x1215)))) (and (=> (and x1350 (= (< 31 x1215) x326)) (and (=> (and (and (= (x473 (+ x1215 132)) x541) (= x1646 (x473 (+ x1318 1))) (= x156 (> x541 132)) (= (x473 (+ x1215 x1215)) x1318)) x326) (and (=> (and (not x156) (= x636 x87)) x1744) (=> x156 x1559))) (=> (and (not x326) (and (= x1082 (x473 (+ x97 x1650))) (= (x473 (+ x1650 x97)) x577) (= (x1392 132) x738) (= (ite x1130 x1082 x621) x1117) (= (<= x97 255) x1850) (= (ite x1850 x577 x341) x621) (= x87 x256) (= (x1372 x97 x1650) x341) (= (x473 (+ x1215 x1215)) x97) (= (x806 115792089237316195423570985008687907853269984665640564039457584007913129639680 x738) x1650) (= (<= x97 255) x1130))) x420))) (=> (and (and (= x87 x256) (= x1117 0)) (not x1350)) x420))) (=> x1465 x1446))) (=> (not x1307) x371)) x1526))
(assert (x1419 x1034))
(assert (= x626 (=> (and (= x930 x1171) (= x1653 x490)) x1168)))
(assert (x1056 x680))
(assert (= x338 (and x1474 x1652)))
(assert (= x423 (and x715 x1557)))
(assert (= (x1427 (x295 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= x689 (and x1513 x156)))
(assert (=> (>= 10000 (x613 288)) (= (x295 (x613 288)) (x1176 (x613 288)))))
(assert (x1056 x238))
(assert (x1419 x137))
(assert (= (=> (and (= x1845 (x835 128)) (= x82 (not (< 32 x1460)))) (and x82 (=> (= 32 x709) x1817))) x1842))
(assert (x1419 x323))
(assert (= (x821 320) (x1427 (x1176 (x821 320)))))
(assert (x1598 x738))
(assert (x1419 x282))
(assert (=> (>= 10000 x1494) (= (x295 x1494) (x1176 x1494))))
(assert (=> (>= 10000 (x808 288)) (= (x1176 (x808 288)) (x295 (x808 288)))))
(assert (x1419 x1072))
(assert (x1419 x1578))
(assert (x1042 x1151))
(assert (x1419 x953))
(assert (x1419 x577))
(assert (= x98 (or x1638 x119)))
(assert (= 0 (x112 324)))
(assert (= 0 (x835 128)))
(assert (= (and x1838 (not x1563)) x731))
(assert (x1419 x856))
(assert (= (or x1711 x1189) x799))
(assert (x1172 x763 x680))
(assert (= 100000000000000000 (x1427 (x295 100000000000000000))))
(assert (= x1565 (or x1476 x1055)))
(assert (= x289 (=> (and (= x410 x1544) (= (x473 (+ 128 x974)) x410)) x1024)))
(check-sat)
(exit)