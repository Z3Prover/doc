(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1761 0)) (((x71 (x1070 Int)) (x930 (x1955 x1761) (x2314 Int)) (x19 (x1147 x1761) (x1415 x1761) (x738 Int)))))
(declare-fun x715 () Int)
(declare-fun x2095 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x1817 () Int)
(declare-fun x156 () x1761)
(declare-fun x1286 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x2584 () Int)
(declare-fun x13 () Bool)
(declare-fun x884 () Int)
(declare-fun x179 () Bool)
(declare-fun x897 () Int)
(declare-fun x2213 () Int)
(declare-fun x708 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x1334 () Int)
(declare-fun x1199 () Bool)
(declare-fun x84 () Int)
(declare-fun x710 () Int)
(declare-fun x150 () Bool)
(declare-fun x283 () Int)
(declare-fun x1165 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x821 () Int)
(declare-fun x1508 () Int)
(declare-fun x2319 () Bool)
(declare-fun x1013 () Int)
(declare-fun x1329 () Int)
(declare-fun x1520 () Int)
(declare-fun x1307 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x880 () Int)
(declare-fun x1699 () Int)
(declare-fun x2058 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x865 () Bool)
(declare-fun x373 () x1761)
(declare-fun x2170 () Int)
(declare-fun x1720 () Int)
(declare-fun x1213 () x1761)
(declare-fun x237 () Int)
(declare-fun x1924 () Int)
(declare-fun x2320 () Int)
(declare-fun x965 () Bool)
(declare-fun x921 () Bool)
(declare-fun x544 () Bool)
(declare-fun x1878 () Int)
(declare-fun x1359 () Int)
(declare-fun x954 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x2063 () Int)
(declare-fun x2482 () Int)
(declare-fun x900 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x1035 () x1761)
(declare-fun x905 () Bool)
(declare-fun x2509 () Int)
(declare-fun x306 () Bool)
(declare-fun x1397 () x1761)
(declare-fun x458 () Bool)
(declare-fun x349 () Int)
(declare-fun x2188 () Int)
(declare-fun x2255 () Int)
(declare-fun x359 () Int)
(declare-fun x1401 () Bool)
(declare-fun x131 () Bool)
(declare-fun x2159 () Int)
(declare-fun x2315 () Int)
(declare-fun x2179 () Bool)
(declare-fun x441 () Bool)
(declare-fun x889 () Bool)
(declare-fun x483 () Bool)
(declare-fun x811 () Int)
(declare-fun x1033 () Bool)
(declare-fun x2075 () Int)
(declare-fun x1767 () Bool)
(declare-fun x843 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x2499 () Bool)
(declare-fun x1201 () Int)
(declare-fun x1873 () Bool)
(declare-fun x2304 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x2360 () Bool)
(declare-fun x1192 () x1761)
(declare-fun x638 () Int)
(declare-fun x2550 () Bool)
(declare-fun x2114 () Int)
(declare-fun x1185 () Int)
(declare-fun x455 () Int)
(declare-fun x813 () x1761)
(declare-fun x977 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1087 () Int)
(declare-fun x919 () Int)
(declare-fun x1030 () Bool)
(declare-fun x21 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x154 () Bool)
(declare-fun x1497 () Int)
(declare-fun x2096 () Int)
(declare-fun x165 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x2064 () Int)
(declare-fun x1109 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x164 () Bool)
(declare-fun x1641 () x1761)
(declare-fun x2129 () Bool)
(declare-fun x2487 () Int)
(declare-fun x2388 () Bool)
(declare-fun x2104 () Int)
(declare-fun x2690 () Int)
(declare-fun x2669 () Bool)
(declare-fun x663 () Bool)
(declare-fun x2574 () Int)
(declare-fun x591 () Int)
(declare-fun x2235 () Bool)
(declare-fun x809 () Int)
(declare-fun x1077 () Int)
(declare-fun x894 () Bool)
(declare-fun x577 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x1789 () Int)
(declare-fun x935 () Int)
(declare-fun x1689 () Bool)
(declare-fun x1960 () x1761)
(declare-fun x2448 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x1892 () Int)
(declare-fun x1404 () Int)
(declare-fun x2442 () Bool)
(declare-fun x2061 () Int)
(declare-fun x339 () Int)
(declare-fun x1200 () Int)
(declare-fun x1946 () Bool)
(declare-fun x101 () Int)
(declare-fun x2685 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x2231 () Bool)
(declare-fun x1679 () Bool)
(declare-fun x2645 () Int)
(declare-fun x1559 () Int)
(declare-fun x959 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x311 () x1761)
(declare-fun x380 () Bool)
(declare-fun x36 () Int)
(declare-fun x61 () Bool)
(declare-fun x1588 () Bool)
(declare-fun x270 () Int)
(declare-fun x527 () Int)
(declare-fun x1633 () x1761)
(declare-fun x824 () Bool)
(declare-fun x1292 () Int)
(declare-fun x2020 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x975 () x1761)
(declare-fun x279 () Int)
(declare-fun x1146 () Int)
(declare-fun x169 () Bool)
(declare-fun x1640 () Int)
(declare-fun x1023 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x785 () Int)
(declare-fun x1051 () Bool)
(declare-fun x491 () Int)
(declare-fun x1813 () Int)
(declare-fun x999 () Bool)
(declare-fun x875 () Int)
(declare-fun x67 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x43 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x755 () Bool)
(declare-fun x2609 () Int)
(declare-fun x2635 () Bool)
(declare-fun x1174 () Int)
(declare-fun x1728 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x2514 () Int)
(declare-fun x2689 () Bool)
(declare-fun x2569 () Bool)
(declare-fun x2172 () Bool)
(declare-fun x2026 () x1761)
(declare-fun x1190 () Bool)
(declare-fun x1368 () Int)
(declare-fun x2300 () Bool)
(declare-fun x135 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x939 () Bool)
(declare-fun x1383 () Int)
(declare-fun x2069 () Bool)
(declare-fun x482 () Bool)
(declare-fun x2504 () Bool)
(declare-fun x2177 () Int)
(declare-fun x415 () x1761)
(declare-fun x888 () Bool)
(declare-fun x826 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x2365 () Int)
(declare-fun x391 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x578 () Int)
(declare-fun x1795 () Int)
(declare-fun x1561 () Int)
(declare-fun x446 () x1761)
(declare-fun x2605 () Bool)
(declare-fun x1901 () Int)
(declare-fun x553 () Bool)
(declare-fun x2105 () Int)
(declare-fun x1004 () Int)
(declare-fun x1055 () Int)
(declare-fun x289 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x426 () Int)
(declare-fun x2 () Int)
(declare-fun x1430 () x1761)
(declare-fun x1722 () x1761)
(declare-fun x1824 () Bool)
(declare-fun x2375 () Int)
(declare-fun x171 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x1295 () Int)
(declare-fun x817 () Int)
(declare-fun x639 () x1761)
(declare-fun x1137 () Int)
(declare-fun x801 () Bool)
(declare-fun x2672 () x1761)
(declare-fun x842 () Int)
(declare-fun x1766 () Int)
(declare-fun x1278 () Bool)
(declare-fun x422 () Int)
(declare-fun x2062 () Int)
(declare-fun x2330 () Int)
(declare-fun x934 () Int)
(declare-fun x794 () Int)
(declare-fun x1906 () x1761)
(declare-fun x1756 () Int)
(declare-fun x2081 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x37 () Bool)
(declare-fun x1808 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x595 () Int)
(declare-fun x2178 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x1979 () Int)
(declare-fun x762 () Int)
(declare-fun x1339 () Int)
(declare-fun x1412 () Bool)
(declare-fun x2331 () Int)
(declare-fun x2422 () Bool)
(declare-fun x2589 () Bool)
(declare-fun x1687 () x1761)
(declare-fun x1695 () x1761)
(declare-fun x2676 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x1902 () Bool)
(declare-fun x1084 () Int)
(declare-fun x2310 () Bool)
(declare-fun x136 () Bool)
(declare-fun x1801 () Int)
(declare-fun x263 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1667 () Int)
(declare-fun x1986 () Bool)
(declare-fun x1855 () Int)
(declare-fun x1796 () Int)
(declare-fun x1308 () Bool)
(declare-fun x973 () Bool)
(declare-fun x2713 () Int)
(declare-fun x1961 () Bool)
(declare-fun x346 () Int)
(declare-fun x1566 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x322 () Bool)
(declare-fun x2545 () Bool)
(declare-fun x2462 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x245 () Bool)
(declare-fun x147 () Bool)
(declare-fun x1475 () Int)
(declare-fun x2517 (x1761) Int)
(declare-fun x2599 () Bool)
(declare-fun x2275 () Int)
(declare-fun x2121 () Int)
(declare-fun x1799 () Int)
(declare-fun x65 () Bool)
(declare-fun x2409 () x1761)
(declare-fun x1036 () Int)
(declare-fun x2291 () Bool)
(declare-fun x158 () Int)
(declare-fun x2596 () Int)
(declare-fun x265 () Int)
(declare-fun x1613 () Bool)
(declare-fun x1168 () Int)
(declare-fun x2266 () Int)
(declare-fun x70 () Bool)
(declare-fun x554 () Int)
(declare-fun x419 () Bool)
(declare-fun x816 () Int)
(declare-fun x1653 () Bool)
(declare-fun x256 () Bool)
(declare-fun x475 () Bool)
(declare-fun x1470 () Int)
(declare-fun x2445 () Bool)
(declare-fun x1247 () Int)
(declare-fun x381 () Int)
(declare-fun x2333 () Int)
(declare-fun x351 () Int)
(declare-fun x488 () x1761)
(declare-fun x1134 () Bool)
(declare-fun x1301 () Int)
(declare-fun x1846 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x2525 () x1761)
(declare-fun x212 () Int)
(declare-fun x2248 () Bool)
(declare-fun x1205 () Int)
(declare-fun x2446 (Int) Int)
(declare-fun x445 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x846 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1503 () x1761)
(declare-fun x8 () Bool)
(declare-fun x2453 () Bool)
(declare-fun x1024 () Int)
(declare-fun x707 () Int)
(declare-fun x1612 () Bool)
(declare-fun x382 () Int)
(declare-fun x971 () x1761)
(declare-fun x1837 () Int)
(declare-fun x692 () Int)
(declare-fun x1133 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x658 () Int)
(declare-fun x953 () Int)
(declare-fun x1467 () Bool)
(declare-fun x1049 (x1761) Int)
(declare-fun x1737 () Int)
(declare-fun x743 () Int)
(declare-fun x2033 () Int)
(declare-fun x1059 () Bool)
(declare-fun x410 () Bool)
(declare-fun x791 () Int)
(declare-fun x1919 () Int)
(declare-fun x1807 () x1761)
(declare-fun x46 () Int)
(declare-fun x1715 () Bool)
(declare-fun x1050 () Int)
(declare-fun x2578 () Int)
(declare-fun x1524 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x1904 () Int)
(declare-fun x2334 () Bool)
(declare-fun x1819 () Int)
(declare-fun x2580 () Bool)
(declare-fun x118 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x967 () x1761)
(declare-fun x562 () Bool)
(declare-fun x895 (Int) Int)
(declare-fun x1487 () Int)
(declare-fun x2176 () x1761)
(declare-fun x2630 () Bool)
(declare-fun x923 () Bool)
(declare-fun x700 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x775 () Int)
(declare-fun x596 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x489 () Int)
(declare-fun x1622 () Int)
(declare-fun x1445 () Bool)
(declare-fun x584 () Bool)
(declare-fun x1540 () Int)
(declare-fun x1270 () Int)
(declare-fun x183 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x2173 () Int)
(declare-fun x2145 () Int)
(declare-fun x2311 () Int)
(declare-fun x1565 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x2154 () Int)
(declare-fun x911 () Int)
(declare-fun x220 () Int)
(declare-fun x153 () Int)
(declare-fun x1747 () Bool)
(declare-fun x951 () Bool)
(declare-fun x200 () Bool)
(declare-fun x615 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1994 () x1761)
(declare-fun x1306 () Bool)
(declare-fun x2643 () Int)
(declare-fun x509 () Int)
(declare-fun x2544 () Bool)
(declare-fun x221 () Bool)
(declare-fun x1939 () Int)
(declare-fun x157 () Bool)
(declare-fun x1017 () x1761)
(declare-fun x2413 () Bool)
(declare-fun x251 () Int)
(declare-fun x244 () Int)
(declare-fun x1609 () Int)
(declare-fun x1226 () Bool)
(declare-fun x1537 () x1761)
(declare-fun x2617 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x145 () Bool)
(declare-fun x887 () Int)
(declare-fun x1937 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x1122 () Int)
(declare-fun x2573 () Bool)
(declare-fun x2518 () Bool)
(declare-fun x1322 () Int)
(declare-fun x1636 () Bool)
(declare-fun x802 () Int)
(declare-fun x448 () Int)
(declare-fun x331 () Int)
(declare-fun x342 () Int)
(declare-fun x731 () Bool)
(declare-fun x741 () Bool)
(declare-fun x94 () Int)
(declare-fun x1150 () Int)
(declare-fun x1118 () Bool)
(declare-fun x267 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x1836 () Int)
(declare-fun x903 () x1761)
(declare-fun x321 () Bool)
(declare-fun x2622 () x1761)
(declare-fun x192 () Int)
(declare-fun x974 () Int)
(declare-fun x2237 () Bool)
(declare-fun x2415 () Int)
(declare-fun x546 () Bool)
(declare-fun x1206 () Int)
(declare-fun x1299 () Bool)
(declare-fun x318 () Int)
(declare-fun x2528 () Int)
(declare-fun x1047 () Int)
(declare-fun x2500 () Bool)
(declare-fun x2398 () Int)
(declare-fun x291 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x1806 () x1761)
(declare-fun x795 () Bool)
(declare-fun x385 () Int)
(declare-fun x1738 (Int) Int)
(declare-fun x552 () Int)
(declare-fun x463 () Bool)
(declare-fun x511 () Bool)
(declare-fun x2181 () x1761)
(declare-fun x601 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x188 (x1761) Int)
(declare-fun x1376 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x2593 () Bool)
(declare-fun x1877 () Int)
(declare-fun x1867 () Bool)
(declare-fun x629 () Int)
(declare-fun x1065 () Int)
(declare-fun x1948 () Bool)
(declare-fun x655 () Bool)
(declare-fun x1385 () Int)
(declare-fun x705 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x1896 () Int)
(declare-fun x1535 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1267 () Int)
(declare-fun x301 () Int)
(declare-fun x687 () Bool)
(declare-fun x1968 () Int)
(declare-fun x2185 () Int)
(declare-fun x253 () x1761)
(declare-fun x1971 (Int) Int)
(declare-fun x1557 () Int)
(declare-fun x2436 () Int)
(declare-fun x1356 () Bool)
(declare-fun x2449 () Bool)
(declare-fun x1408 () Int)
(declare-fun x2440 () Bool)
(declare-fun x329 () Int)
(declare-fun x1319 () Bool)
(declare-fun x686 () Bool)
(declare-fun x2157 () x1761)
(declare-fun x1755 () Bool)
(declare-fun x328 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x1092 () Int)
(declare-fun x961 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x867 () Bool)
(declare-fun x1409 () Int)
(declare-fun x659 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x421 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x2051 () Int)
(declare-fun x1340 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x268 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x771 () Bool)
(declare-fun x736 () Int)
(declare-fun x1694 () Int)
(declare-fun x2454 () Bool)
(declare-fun x1936 () Int)
(declare-fun x2285 () Int)
(declare-fun x551 () Bool)
(declare-fun x617 () Bool)
(declare-fun x484 () Bool)
(declare-fun x2567 () x1761)
(declare-fun x1669 () Int)
(declare-fun x1131 () Int)
(declare-fun x530 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x547 () Bool)
(declare-fun x2305 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x1832 (Int) Int)
(declare-fun x1449 () Bool)
(declare-fun x1765 () Int)
(declare-fun x1436 () Bool)
(declare-fun x926 () Bool)
(declare-fun x979 () Int)
(declare-fun x956 () Int)
(declare-fun x2511 () Bool)
(declare-fun x363 () x1761)
(declare-fun x968 () Bool)
(declare-fun x205 () Bool)
(declare-fun x697 () x1761)
(declare-fun x1579 () Int)
(declare-fun x2367 () x1761)
(declare-fun x1992 () Int)
(declare-fun x2019 (x1761) Int)
(declare-fun x1650 () Bool)
(declare-fun x1983 () Int)
(declare-fun x394 () Int)
(declare-fun x1701 (x1761) Int)
(declare-fun x1268 () Bool)
(declare-fun x822 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x2038 () Int)
(declare-fun x1132 () Int)
(declare-fun x54 () Bool)
(declare-fun x2059 () Int)
(declare-fun x2468 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x767 () Bool)
(declare-fun x128 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x2148 () Bool)
(declare-fun x354 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x1933 () Int)
(declare-fun x1655 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x461 () Int)
(declare-fun x1143 () Bool)
(declare-fun x387 () Int)
(declare-fun x411 () Bool)
(declare-fun x14 () Bool)
(declare-fun x305 () Bool)
(declare-fun x62 () Int)
(declare-fun x1870 () Bool)
(declare-fun x1529 () Int)
(declare-fun x2431 () Bool)
(declare-fun x1229 () Int)
(declare-fun x2615 () Int)
(declare-fun x56 () Int)
(declare-fun x345 () Int)
(declare-fun x92 () Int)
(declare-fun x338 () Int)
(declare-fun x332 () Bool)
(declare-fun x727 () Int)
(declare-fun x2199 () Int)
(declare-fun x1052 () Int)
(declare-fun x1989 () Int)
(declare-fun x580 () Bool)
(declare-fun x194 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x2561 () x1761)
(declare-fun x918 () Int)
(declare-fun x1088 () Int)
(declare-fun x106 () Int)
(declare-fun x1775 () Int)
(declare-fun x944 () x1761)
(declare-fun x1435 () Int)
(declare-fun x1078 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x77 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x500 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x864 () Bool)
(declare-fun x91 () x1761)
(declare-fun x2056 () Int)
(declare-fun x1253 () Int)
(declare-fun x2267 () Int)
(declare-fun x1733 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x1648 () Int)
(declare-fun x2565 () Int)
(declare-fun x155 () Int)
(declare-fun x1905 () Bool)
(declare-fun x388 () Int)
(declare-fun x1418 () Int)
(declare-fun x438 () Bool)
(declare-fun x872 () Int)
(declare-fun x805 () Bool)
(declare-fun x1792 () Int)
(declare-fun x970 () Int)
(declare-fun x2684 () Int)
(declare-fun x2665 () Int)
(declare-fun x269 () Bool)
(declare-fun x636 () Int)
(declare-fun x323 () x1761)
(declare-fun x1712 () Int)
(declare-fun x1797 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x701 () Int)
(declare-fun x1236 () Int)
(declare-fun x2317 () Bool)
(declare-fun x737 () Bool)
(declare-fun x1204 () x1761)
(declare-fun x1643 () Bool)
(declare-fun x561 () Int)
(declare-fun x1697 () Int)
(declare-fun x2433 () Bool)
(declare-fun x1912 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x406 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x1007 () Int)
(declare-fun x756 () Int)
(declare-fun x64 () Int)
(declare-fun x430 () Int)
(declare-fun x2342 () Bool)
(declare-fun x1945 () Int)
(declare-fun x2053 () Bool)
(declare-fun x1355 () Int)
(declare-fun x2614 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1446 () Int)
(declare-fun x748 () Int)
(declare-fun x120 () Int)
(declare-fun x2112 () Int)
(declare-fun x1327 () Bool)
(declare-fun x2039 () Int)
(declare-fun x2106 () Bool)
(declare-fun x724 () x1761)
(declare-fun x2194 () Bool)
(declare-fun x78 () Bool)
(declare-fun x2652 () Bool)
(declare-fun x2498 () Int)
(declare-fun x2312 () x1761)
(declare-fun x1460 () Bool)
(declare-fun x1547 () Int)
(declare-fun x2540 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x2576 () Int)
(declare-fun x1676 () Int)
(declare-fun x1530 () x1761)
(declare-fun x2218 () Bool)
(declare-fun x673 () Bool)
(declare-fun x2534 () Int)
(declare-fun x2708 () Bool)
(declare-fun x280 () Int)
(declare-fun x723 () Int)
(declare-fun x1044 () Bool)
(declare-fun x2699 () Int)
(declare-fun x2457 () Bool)
(declare-fun x2602 () Int)
(declare-fun x2681 () x1761)
(declare-fun x2353 () Int)
(declare-fun x2049 () Int)
(declare-fun x776 () Bool)
(declare-fun x2502 () Int)
(declare-fun x1197 () x1761)
(declare-fun x400 () Int)
(declare-fun x1008 () Bool)
(declare-fun x172 () Int)
(declare-fun x2641 () Int)
(declare-fun x247 () Bool)
(declare-fun x202 () Int)
(declare-fun x2391 () Bool)
(declare-fun x2281 () Int)
(declare-fun x2008 () Bool)
(declare-fun x946 () Bool)
(declare-fun x2270 () Int)
(declare-fun x2396 () Bool)
(declare-fun x1159 () x1761)
(declare-fun x1375 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x938 () Int)
(declare-fun x1628 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x862 () Int)
(declare-fun x1269 () x1761)
(declare-fun x1142 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x1099 () Int)
(declare-fun x1348 () Bool)
(declare-fun x750 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x294 () Bool)
(declare-fun x2613 () Int)
(declare-fun x2198 () Bool)
(declare-fun x396 () Int)
(declare-fun x2508 () Int)
(declare-fun x1198 () Bool)
(declare-fun x668 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1073 () Int)
(declare-fun x1597 () Int)
(declare-fun x1617 () Int)
(declare-fun x1967 () x1761)
(declare-fun x2437 () Bool)
(declare-fun x2712 () Bool)
(declare-fun x141 () Int)
(declare-fun x1735 () Bool)
(declare-fun x2102 () Bool)
(declare-fun x1006 () Int)
(declare-fun x2658 () Bool)
(declare-fun x2382 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x2067 () Int)
(declare-fun x485 () Int)
(declare-fun x2667 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x199 () Int)
(declare-fun x2338 () Int)
(declare-fun x2628 () Bool)
(declare-fun x160 () Bool)
(declare-fun x1928 () Int)
(declare-fun x557 () Int)
(declare-fun x75 () Bool)
(declare-fun x1284 () x1761)
(declare-fun x660 () x1761)
(declare-fun x1798 () Int)
(declare-fun x1434 () Int)
(declare-fun x2261 () Int)
(declare-fun x2414 () Bool)
(declare-fun x360 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x1353 () Bool)
(declare-fun x619 () Int)
(declare-fun x2463 () Int)
(declare-fun x1691 () Int)
(declare-fun x2507 () Bool)
(declare-fun x2558 () Int)
(declare-fun x1666 () Bool)
(declare-fun x390 () Int)
(declare-fun x1675 () Bool)
(declare-fun x1507 () Int)
(declare-fun x780 () Bool)
(declare-fun x90 () Bool)
(declare-fun x2035 () Int)
(declare-fun x2139 () Int)
(declare-fun x572 () Int)
(declare-fun x63 () Bool)
(declare-fun x384 () Bool)
(declare-fun x80 () Bool)
(declare-fun x1104 () Int)
(declare-fun x1076 () Int)
(declare-fun x1184 () Int)
(declare-fun x2363 () Bool)
(declare-fun x2301 () x1761)
(declare-fun x1670 () x1761)
(declare-fun x393 () Bool)
(declare-fun x955 () Int)
(declare-fun x1809 () Int)
(declare-fun x2242 () Bool)
(declare-fun x1950 () Int)
(declare-fun x770 () Bool)
(declare-fun x2351 () Int)
(declare-fun x2034 () Bool)
(declare-fun x760 () Bool)
(declare-fun x1120 () Int)
(declare-fun x1688 () Int)
(declare-fun x2707 () Bool)
(declare-fun x1532 () Int)
(declare-fun x1214 () x1761)
(declare-fun x1942 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x2045 () Bool)
(declare-fun x2581 () Int)
(declare-fun x185 () Int)
(declare-fun x2117 () Int)
(declare-fun x957 () Int)
(declare-fun x108 () Int)
(declare-fun x344 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x2606 () Int)
(declare-fun x1984 () x1761)
(declare-fun x2023 () Int)
(declare-fun x2465 (x1761) Int)
(declare-fun x1058 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x1379 () Int)
(declare-fun x1102 () Bool)
(declare-fun x2032 () Int)
(declare-fun x2099 () Int)
(declare-fun x542 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x1112 () Int)
(declare-fun x679 () Int)
(declare-fun x1554 () Bool)
(declare-fun x1293 () Int)
(declare-fun x2526 () Bool)
(declare-fun x524 () Int)
(declare-fun x2180 () Bool)
(declare-fun x1100 () Int)
(declare-fun x425 () Bool)
(declare-fun x937 () Int)
(declare-fun x1830 () Int)
(declare-fun x1599 () Bool)
(declare-fun x2407 () Int)
(declare-fun x1840 () Int)
(declare-fun x575 () Bool)
(declare-fun x49 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x613 () Int)
(declare-fun x2007 () Int)
(declare-fun x250 () Bool)
(declare-fun x241 () Bool)
(declare-fun x2258 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x26 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x409 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1220 () Int)
(declare-fun x858 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x353 (Int) Int)
(declare-fun x2347 () Int)
(declare-fun x1533 () Int)
(declare-fun x116 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x820 () Int)
(declare-fun x235 () Int)
(declare-fun x1111 () Bool)
(declare-fun x2390 () Int)
(declare-fun x906 () Bool)
(declare-fun x111 () Bool)
(declare-fun x1913 () Int)
(declare-fun x1325 () Bool)
(declare-fun x746 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x1282 () Int)
(declare-fun x2324 () x1761)
(declare-fun x2557 () x1761)
(declare-fun x680 () Int)
(declare-fun x95 () Bool)
(declare-fun x1915 () Bool)
(declare-fun x2387 () Int)
(declare-fun x1927 () Bool)
(declare-fun x2579 () Int)
(declare-fun x721 () Bool)
(declare-fun x766 () Bool)
(declare-fun x539 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x1251 () Int)
(declare-fun x1117 () Int)
(declare-fun x1816 () Int)
(declare-fun x2380 () Bool)
(declare-fun x405 () Bool)
(declare-fun x4 () Int)
(declare-fun x1429 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x716 () Int)
(declare-fun x2566 () Int)
(declare-fun x1916 () Bool)
(declare-fun x293 () Int)
(declare-fun x2167 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1702 () Int)
(declare-fun x625 () Int)
(declare-fun x2501 () Int)
(declare-fun x1208 () Bool)
(declare-fun x181 () Int)
(declare-fun x129 () Int)
(declare-fun x254 () Bool)
(declare-fun x592 () Bool)
(declare-fun x1028 () Int)
(declare-fun x835 () Int)
(declare-fun x334 () Int)
(declare-fun x969 () Bool)
(declare-fun x796 () Int)
(declare-fun x2673 () x1761)
(declare-fun x447 () Bool)
(declare-fun x69 () Bool)
(declare-fun x433 () Int)
(declare-fun x1997 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x2010 () x1761)
(declare-fun x1346 () x1761)
(declare-fun x2110 () Bool)
(declare-fun x88 () Int)
(declare-fun x991 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x2470 () Int)
(declare-fun x1494 () Int)
(declare-fun x840 () Int)
(declare-fun x985 () Bool)
(declare-fun x386 () Bool)
(declare-fun x175 () Bool)
(declare-fun x761 () Bool)
(declare-fun x1285 () Int)
(declare-fun x1981 () Bool)
(declare-fun x2529 () Bool)
(declare-fun x1335 () Int)
(declare-fun x986 () Bool)
(declare-fun x992 () Int)
(declare-fun x186 () Int)
(declare-fun x1723 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x998 () Bool)
(declare-fun x2460 () Bool)
(declare-fun x536 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x274 () Bool)
(declare-fun x1153 () Int)
(declare-fun x96 () Int)
(declare-fun x1674 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x2215 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1483 () x1761)
(declare-fun x1264 () Bool)
(declare-fun x1602 () Int)
(declare-fun x1231 () Int)
(declare-fun x929 () Int)
(declare-fun x1097 () Bool)
(declare-fun x565 () Bool)
(declare-fun x870 () Bool)
(declare-fun x286 () Int)
(declare-fun x12 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x1777 () Int)
(declare-fun x2421 () Int)
(declare-fun x2028 () Int)
(declare-fun x652 () Bool)
(declare-fun x100 () Bool)
(declare-fun x815 () Bool)
(declare-fun x579 () Int)
(declare-fun x7 () x1761)
(declare-fun x2659 () Bool)
(declare-fun x1294 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x97 () Int)
(declare-fun x1380 () Int)
(declare-fun x47 () Bool)
(declare-fun x2206 () Int)
(declare-fun x2648 () Bool)
(declare-fun x2253 () x1761)
(declare-fun x1576 () x1761)
(declare-fun x525 () x1761)
(declare-fun x873 () Int)
(declare-fun x479 () Bool)
(declare-fun x2548 () Int)
(declare-fun x532 () Bool)
(declare-fun x1793 () Int)
(declare-fun x598 () Bool)
(declare-fun x2551 () Int)
(declare-fun x1465 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x931 () Int)
(declare-fun x1890 () Int)
(declare-fun x2091 () Bool)
(declare-fun x76 () Int)
(declare-fun x1603 () Bool)
(declare-fun x1501 () Int)
(declare-fun x2444 () Bool)
(declare-fun x1700 () Int)
(declare-fun x191 () x1761)
(declare-fun x2289 () x1761)
(declare-fun x2089 () Int)
(declare-fun x2016 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x2450 () Bool)
(declare-fun x53 () Bool)
(declare-fun x2456 () x1761)
(declare-fun x1849 () Bool)
(declare-fun x740 () Bool)
(declare-fun x2402 () Int)
(declare-fun x2025 () x1761)
(declare-fun x2274 () Bool)
(declare-fun x2140 () Bool)
(declare-fun x920 () Bool)
(declare-fun x1608 () Int)
(declare-fun x729 () Int)
(declare-fun x1522 () Int)
(declare-fun x2119 () Int)
(declare-fun x2350 () x1761)
(declare-fun x1138 () Bool)
(declare-fun x517 () Bool)
(declare-fun x1275 () Int)
(declare-fun x706 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x1627 () Int)
(declare-fun x1773 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x239 () Bool)
(declare-fun x41 () Bool)
(declare-fun x2001 () Int)
(declare-fun x104 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x2585 () Int)
(declare-fun x1996 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x1978 () x1761)
(declare-fun x2520 () Int)
(declare-fun x2399 () Int)
(declare-fun x2160 () Bool)
(declare-fun x1632 () x1761)
(declare-fun x319 () Bool)
(declare-fun x2232 () Int)
(declare-fun x313 () Bool)
(declare-fun x432 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x653 () Bool)
(declare-fun x32 () Bool)
(declare-fun x83 () Bool)
(declare-fun x2015 () Int)
(declare-fun x230 () Bool)
(declare-fun x704 () Bool)
(declare-fun x223 () Int)
(declare-fun x2651 () Int)
(declare-fun x2192 () Int)
(declare-fun x913 () Bool)
(declare-fun x559 () Bool)
(declare-fun x2076 () Int)
(declare-fun x765 () Int)
(declare-fun x309 () Int)
(declare-fun x718 () Bool)
(declare-fun x2553 () Bool)
(declare-fun x773 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x1718 () Int)
(declare-fun x676 () Int)
(declare-fun x720 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x1389 () Int)
(declare-fun x371 () Bool)
(declare-fun x2603 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x587 () Bool)
(declare-fun x435 () x1761)
(declare-fun x2537 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x2229 () x1761)
(declare-fun x467 () Bool)
(declare-fun x882 () Bool)
(declare-fun x2265 () Bool)
(declare-fun x226 () Bool)
(declare-fun x1060 () Int)
(declare-fun x2649 () x1761)
(declare-fun x1066 () Int)
(declare-fun x1709 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x533 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x117 () x1761)
(declare-fun x276 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x470 () Bool)
(declare-fun x2031 () Int)
(declare-fun x2322 () Bool)
(declare-fun x983 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x337 () Int)
(declare-fun x768 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x2464 () x1761)
(declare-fun x159 () Bool)
(declare-fun x2239 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x764 () Bool)
(declare-fun x2196 () Int)
(declare-fun x1195 () Int)
(declare-fun x859 () Int)
(declare-fun x2563 () x1761)
(declare-fun x1341 () Bool)
(declare-fun x1835 () Int)
(declare-fun x621 () Bool)
(declare-fun x1908 () Int)
(declare-fun x352 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x1459 () Int)
(declare-fun x2369 () Bool)
(declare-fun x2542 () Int)
(declare-fun x1255 () Int)
(declare-fun x1582 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x1671 () Bool)
(declare-fun x288 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x451 () Bool)
(declare-fun x892 () Int)
(declare-fun x2680 () Bool)
(declare-fun x927 () Int)
(declare-fun x803 () Bool)
(declare-fun x2644 () Int)
(declare-fun x876 () Bool)
(declare-fun x178 () Int)
(declare-fun x566 () x1761)
(declare-fun x1345 () Int)
(declare-fun x189 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x2127 () Int)
(declare-fun x1624 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x1828 () Int)
(declare-fun x2072 () Int)
(declare-fun x521 () Bool)
(declare-fun x206 () Int)
(declare-fun x1826 () Bool)
(declare-fun x1136 () Int)
(declare-fun x2040 () Bool)
(declare-fun x358 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x1951 () Int)
(declare-fun x52 () Bool)
(declare-fun x994 () x1761)
(declare-fun x2137 () Bool)
(declare-fun x810 () Int)
(declare-fun x526 () Bool)
(declare-fun x2216 (x1761) Int)
(declare-fun x1234 () Bool)
(declare-fun x703 () Bool)
(declare-fun x507 () Bool)
(declare-fun x28 () Bool)
(declare-fun x1252 () Int)
(declare-fun x2126 () Int)
(declare-fun x1010 () Bool)
(declare-fun x2203 () Int)
(declare-fun x828 () Bool)
(declare-fun x367 () Int)
(declare-fun x1856 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x1331 () Int)
(declare-fun x1833 () Bool)
(declare-fun x1744 () Int)
(declare-fun x1988 () Int)
(declare-fun x2527 () Bool)
(declare-fun x958 () Int)
(declare-fun x2298 () Int)
(declare-fun x423 () Bool)
(declare-fun x1778 () Int)
(declare-fun x2150 () Bool)
(declare-fun x2474 () Int)
(declare-fun x1555 () Bool)
(declare-fun x1352 () Int)
(declare-fun x182 () Int)
(declare-fun x1969 () Bool)
(declare-fun x137 () Bool)
(declare-fun x214 () Bool)
(declare-fun x2587 () Int)
(declare-fun x1209 () Int)
(declare-fun x783 () Bool)
(declare-fun x1351 () x1761)
(declare-fun x1302 () Int)
(declare-fun x229 () Int)
(declare-fun x1040 () Int)
(declare-fun x407 () Bool)
(declare-fun x2554 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x564 () Bool)
(declare-fun x1464 () Int)
(declare-fun x853 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x25 (Int) Int)
(declare-fun x759 () Int)
(declare-fun x1639 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x2286 () Int)
(declare-fun x984 () Int)
(declare-fun x82 () Int)
(declare-fun x1228 () Bool)
(declare-fun x733 () Int)
(declare-fun x793 () Bool)
(declare-fun x2703 () Int)
(declare-fun x144 () Bool)
(declare-fun x1365 () Int)
(declare-fun x1186 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1461 () Bool)
(declare-fun x837 () Bool)
(declare-fun x347 () Int)
(declare-fun x982 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x2302 () x1761)
(declare-fun x1330 () Bool)
(declare-fun x1706 () x1761)
(declare-fun x2293 () Bool)
(declare-fun x512 () Int)
(declare-fun x1448 () Int)
(declare-fun x622 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x1000 () Int)
(declare-fun x2316 () Int)
(declare-fun x831 () Int)
(declare-fun x2688 () Bool)
(declare-fun x336 () Int)
(declare-fun x81 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x744 () Int)
(declare-fun x2273 () Bool)
(declare-fun x2675 () Int)
(declare-fun x662 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x1614 () Int)
(declare-fun x2646 () Bool)
(declare-fun x255 () x1761)
(declare-fun x1645 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x453 (Int) Int)
(declare-fun x563 () Int)
(declare-fun x2358 () Int)
(declare-fun x2259 () Bool)
(declare-fun x290 () Int)
(declare-fun x1173 () Int)
(declare-fun x696 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x877 () Int)
(declare-fun x917 () Int)
(declare-fun x616 () Bool)
(declare-fun x437 () Bool)
(declare-fun x618 () Bool)
(declare-fun x2246 () x1761)
(declare-fun x1218 () Bool)
(declare-fun x1377 () Int)
(declare-fun x612 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x1090 () Int)
(declare-fun x125 () Bool)
(declare-fun x2485 () Int)
(declare-fun x370 () Bool)
(declare-fun x2085 () Int)
(declare-fun x2403 () Bool)
(declare-fun x450 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x732 () Bool)
(declare-fun x995 () Int)
(declare-fun x2493 () Int)
(declare-fun x1457 () Bool)
(declare-fun x180 () Int)
(declare-fun x1305 () x1761)
(declare-fun x1129 () Bool)
(declare-fun x195 () Int)
(declare-fun x30 () Int)
(declare-fun x976 () Bool)
(declare-fun x2151 () Int)
(declare-fun x742 () Bool)
(declare-fun x2043 () Int)
(declare-fun x2601 () Bool)
(declare-fun x2686 () Int)
(declare-fun x362 () Int)
(declare-fun x1713 () Bool)
(declare-fun x570 () Bool)
(declare-fun x1883 (x1761) Int)
(declare-fun x2471 () Int)
(declare-fun x222 () Bool)
(declare-fun x1963 () Bool)
(declare-fun x225 () Int)
(declare-fun x1629 () Int)
(declare-fun x2260 () Int)
(declare-fun x2533 () Int)
(declare-fun x1141 () Bool)
(declare-fun x209 () Bool)
(declare-fun x1573 () Int)
(declare-fun x327 () Bool)
(declare-fun x502 () Int)
(declare-fun x2212 () Bool)
(declare-fun x499 () Bool)
(declare-fun x988 () Bool)
(declare-fun x17 () Bool)
(declare-fun x754 () Int)
(declare-fun x1584 () Int)
(declare-fun x109 () Int)
(declare-fun x2361 () Int)
(declare-fun x677 () Int)
(declare-fun x2430 () Bool)
(declare-fun x899 () Int)
(declare-fun x2217 () x1761)
(declare-fun x2600 () Bool)
(declare-fun x1941 () Int)
(declare-fun x460 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x1089 () Int)
(declare-fun x2036 () Bool)
(declare-fun x1318 () Int)
(declare-fun x261 () Int)
(declare-fun x99 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x1930 () Int)
(declare-fun x2541 () Int)
(declare-fun x2683 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x2374 () Bool)
(declare-fun x1026 () Int)
(declare-fun x1911 () Int)
(declare-fun x1249 () x1761)
(declare-fun x1829 () Int)
(declare-fun x2257 () Bool)
(declare-fun x167 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x2608 () Int)
(declare-fun x2078 () Bool)
(declare-fun x774 () Int)
(declare-fun x1145 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x424 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x620 () Int)
(declare-fun x1009 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x264 () Int)
(declare-fun x836 () Int)
(declare-fun x2221 () Int)
(declare-fun x684 () Bool)
(declare-fun x1987 () Bool)
(declare-fun x412 () Bool)
(declare-fun x583 () Int)
(declare-fun x1071 () Int)
(declare-fun x1472 () Int)
(declare-fun x1079 () Bool)
(declare-fun x2624 () Int)
(declare-fun x1083 () Bool)
(declare-fun x2642 () Int)
(declare-fun x2346 () Bool)
(declare-fun x1572 () Int)
(declare-fun x1581 () Int)
(declare-fun x218 () Int)
(declare-fun x1350 () Int)
(declare-fun x1392 () Bool)
(declare-fun x462 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x1279 () Int)
(declare-fun x1203 () Int)
(declare-fun x149 () Int)
(declare-fun x2147 () Bool)
(declare-fun x2070 () Bool)
(declare-fun x1538 () Int)
(declare-fun x852 () Int)
(declare-fun x1276 () Int)
(declare-fun x932 () Bool)
(declare-fun x1506 () Int)
(declare-fun x2408 () Int)
(declare-fun x603 () Int)
(declare-fun x315 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x115 () Int)
(declare-fun x1818 () Int)
(declare-fun x2171 () Int)
(declare-fun x1589 () Int)
(declare-fun x2516 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x1868 () Int)
(declare-fun x560 () Bool)
(declare-fun x2378 () Bool)
(declare-fun x869 () Bool)
(declare-fun x649 () Int)
(declare-fun x751 () Int)
(declare-fun x1528 () x1761)
(declare-fun x2357 () Int)
(declare-fun x1880 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x1466 () Int)
(declare-fun x518 () Int)
(declare-fun x1207 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x476 () Int)
(declare-fun x2241 () Int)
(declare-fun x93 () Bool)
(declare-fun x376 () x1761)
(declare-fun x2682 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x1729 () Int)
(declare-fun x2149 () Int)
(declare-fun x1681 () Bool)
(declare-fun x2018 () Bool)
(declare-fun x1893 () Int)
(declare-fun x661 () x1761)
(declare-fun x2607 () x1761)
(declare-fun x1512 () x1761)
(declare-fun x1920 () x1761)
(declare-fun x1001 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x814 () Int)
(declare-fun x777 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x1680 () Int)
(declare-fun x314 () Bool)
(declare-fun x98 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x2671 () Bool)
(declare-fun x316 () Int)
(declare-fun x806 () Int)
(declare-fun x1288 () Int)
(declare-fun x57 () Bool)
(declare-fun x341 (Int) Int)
(declare-fun x1347 () Int)
(declare-fun x1178 () Bool)
(declare-fun x397 () Int)
(declare-fun x1216 () Int)
(declare-fun x1095 () Int)
(declare-fun x1480 () Bool)
(declare-fun x1244 (x1761) Int)
(declare-fun x176 () Int)
(declare-fun x688 () Bool)
(declare-fun x881 () Bool)
(declare-fun x590 () Int)
(declare-fun x798 () x1761)
(declare-fun x2495 () Int)
(declare-fun x2486 () Bool)
(declare-fun x44 () Bool)
(declare-fun x187 () Bool)
(declare-fun x139 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x366 () Bool)
(declare-fun x2228 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x193 () Int)
(declare-fun x170 () Int)
(declare-fun x997 () Int)
(declare-fun x102 () Bool)
(declare-fun x2611 () Int)
(declare-fun x825 () Bool)
(declare-fun x1647 () Int)
(declare-fun x300 () Int)
(declare-fun x1502 () Int)
(declare-fun x1320 () Bool)
(declare-fun x2476 () Int)
(declare-fun x1043 () Bool)
(declare-fun x1274 () Int)
(declare-fun x1440 () Bool)
(declare-fun x211 () Int)
(declare-fun x2118 () Bool)
(declare-fun x240 () Int)
(declare-fun x1261 () Int)
(declare-fun x1311 () Bool)
(declare-fun x1887 () Int)
(declare-fun x2532 () Int)
(declare-fun x2560 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x1804 () Int)
(declare-fun x2362 () Int)
(declare-fun x173 () Bool)
(declare-fun x506 () Bool)
(declare-fun x1509 () Int)
(declare-fun x2262 () Int)
(declare-fun x2438 () Bool)
(declare-fun x2670 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x2193 () Bool)
(declare-fun x168 () x1761)
(declare-fun x1240 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x2401 () Bool)
(declare-fun x556 () Bool)
(declare-fun x284 () x1761)
(declare-fun x656 () Bool)
(declare-fun x1315 () Int)
(declare-fun x24 () Bool)
(declare-fun x981 () Int)
(declare-fun x1096 () x1761)
(declare-fun x2284 () Int)
(declare-fun x1519 () Int)
(declare-fun x672 () x1761)
(declare-fun x1273 () Int)
(declare-fun x465 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x800 () Bool)
(declare-fun x161 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x1753 () Int)
(declare-fun x273 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x611 () Int)
(declare-fun x87 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x1223 () x1761)
(declare-fun x1019 () Bool)
(declare-fun x1372 () Int)
(declare-fun x1260 () Int)
(declare-fun x2097 () Int)
(declare-fun x2124 () Bool)
(declare-fun x2434 () Int)
(declare-fun x2383 () Bool)
(declare-fun x454 () Bool)
(declare-fun x1158 () Int)
(declare-fun x1164 () Int)
(declare-fun x369 () Bool)
(declare-fun x2660 () Int)
(declare-fun x304 () Bool)
(declare-fun x2492 () Int)
(declare-fun x1571 () Bool)
(declare-fun x2211 () Bool)
(declare-fun x257 () Bool)
(declare-fun x2048 () Int)
(declare-fun x2385 () Bool)
(declare-fun x2296 () Int)
(declare-fun x58 () Int)
(declare-fun x429 () Bool)
(declare-fun x42 () Int)
(declare-fun x2687 () Bool)
(declare-fun x2272 () Bool)
(declare-fun x480 () Int)
(declare-fun x535 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x302 () Int)
(declare-fun x1180 () Bool)
(declare-fun x1219 () Int)
(declare-fun x2368 () Bool)
(declare-fun x2197 () Int)
(declare-fun x2268 () Int)
(declare-fun x449 () Bool)
(declare-fun x16 () Bool)
(declare-fun x928 () Bool)
(declare-fun x1441 () x1761)
(declare-fun x1454 () Bool)
(declare-fun x2279 () Bool)
(declare-fun x310 () Int)
(declare-fun x133 () Bool)
(declare-fun x1861 () Bool)
(declare-fun x110 () Int)
(declare-fun x757 () Int)
(declare-fun x645 () Bool)
(declare-fun x2530 () Int)
(declare-fun x266 () Bool)
(declare-fun x1621 () Int)
(declare-fun x282 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x420 () Int)
(declare-fun x2536 () Int)
(declare-fun x89 () Int)
(declare-fun x2661 () Int)
(declare-fun x2123 () Bool)
(declare-fun x1802 () Int)
(declare-fun x2694 () x1761)
(declare-fun x2086 () Bool)
(declare-fun x404 () Bool)
(declare-fun x2506 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x628 () Bool)
(declare-fun x2101 () Int)
(declare-fun x2571 () Bool)
(declare-fun x898 () Int)
(declare-fun x641 () Int)
(declare-fun x392 () Bool)
(declare-fun x2295 () x1761)
(declare-fun x2692 () Int)
(declare-fun x2225 () x1761)
(declare-fun x933 () x1761)
(declare-fun x514 () x1761)
(declare-fun x126 () Int)
(declare-fun x666 () Bool)
(declare-fun x1922 () Int)
(declare-fun x2287 () Bool)
(declare-fun x1649 () Int)
(declare-fun x1510 () Bool)
(declare-fun x1768 () Int)
(declare-fun x1578 () Int)
(declare-fun x1630 () Bool)
(declare-fun x1527 () Int)
(declare-fun x1425 () Int)
(declare-fun x355 () Int)
(declare-fun x2637 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x1437 () Int)
(declare-fun x728 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x614 () Int)
(declare-fun x1651 () Bool)
(declare-fun x501 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x1843 () Int)
(declare-fun x597 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x573 () Bool)
(declare-fun x2586 () Int)
(declare-fun x1857 () x1761)
(declare-fun x103 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x1779 () x1761)
(declare-fun x823 () Bool)
(declare-fun x29 () Bool)
(declare-fun x847 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x1523 () x1761)
(declare-fun x1634 () x1761)
(declare-fun x1364 () Int)
(declare-fun x722 () Bool)
(declare-fun x1783 () x1761)
(declare-fun x474 () Int)
(declare-fun x978 () Int)
(declare-fun x643 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x819 () Int)
(declare-fun x1166 () Bool)
(declare-fun x2343 () Int)
(declare-fun x2461 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x493 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x2292 () Int)
(declare-fun x1587 () Int)
(declare-fun x227 () Bool)
(declare-fun x2428 () Int)
(declare-fun x492 () x1761)
(declare-fun x576 () Int)
(declare-fun x134 () Int)
(declare-fun x1742 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x51 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x34 () x1761)
(declare-fun x375 () Bool)
(declare-fun x574 () Int)
(declare-fun x990 () x1761)
(declare-fun x915 () Bool)
(declare-fun x631 () Bool)
(declare-fun x1324 () x1761)
(declare-fun x633 () Bool)
(declare-fun x472 () Bool)
(declare-fun x403 () Int)
(declare-fun x540 () Bool)
(declare-fun x340 () Bool)
(declare-fun x644 () Bool)
(declare-fun x695 () Bool)
(declare-fun x434 () Int)
(declare-fun x1041 () Int)
(declare-fun x912 () Int)
(declare-fun x2318 () Bool)
(declare-fun x464 () Bool)
(declare-fun x1730 () Int)
(declare-fun x1710 () Bool)
(declare-fun x890 () Int)
(declare-fun x1693 () Int)
(declare-fun x1416 () Bool)
(declare-fun x201 () Int)
(declare-fun x494 () Int)
(declare-fun x1310 () Bool)
(declare-fun x2572 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x163 () Int)
(declare-fun x2356 () Bool)
(declare-fun x260 () Int)
(declare-fun x166 () Int)
(declare-fun x878 () Int)
(declare-fun x916 () Int)
(declare-fun x1048 () Int)
(declare-fun x2226 () Int)
(declare-fun x2552 () Bool)
(declare-fun x215 () Bool)
(declare-fun x1787 () Int)
(declare-fun x23 () Bool)
(declare-fun x2714 () Bool)
(declare-fun x515 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x2393 () Bool)
(declare-fun x2166 () Int)
(declare-fun x1940 () Int)
(declare-fun x1692 () Bool)
(declare-fun x1895 () Int)
(declare-fun x848 () Bool)
(declare-fun x948 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x1039 () Int)
(declare-fun x694 () Int)
(declare-fun x374 () Int)
(declare-fun x2484 (x1761) Int)
(declare-fun x2458 () Int)
(declare-fun x1091 () Int)
(declare-fun x545 () Int)
(declare-fun x1484 () Int)
(declare-fun x2249 () Int)
(declare-fun x902 () Int)
(declare-fun x2230 () Int)
(declare-fun x1531 () Bool)
(declare-fun x1546 () Int)
(declare-fun x1570 () x1761)
(declare-fun x2429 () Bool)
(declare-fun x2556 () x1761)
(declare-fun x2451 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x2120 () Int)
(declare-fun x2210 () Int)
(declare-fun x498 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x1462 () Int)
(declare-fun x1406 () Bool)
(declare-fun x787 () Int)
(declare-fun x941 () Int)
(declare-fun x1805 () Int)
(declare-fun x333 () Int)
(declare-fun x1891 () Int)
(declare-fun x1191 () Int)
(declare-fun x1631 () Bool)
(declare-fun x1053 () Int)
(declare-fun x1684 () Bool)
(declare-fun x295 () Int)
(declare-fun x2084 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x2575 () Int)
(declare-fun x1243 () Int)
(declare-fun x735 () Bool)
(declare-fun x456 () Int)
(declare-fun x2042 () Bool)
(declare-fun x2251 () Int)
(declare-fun x1596 () Bool)
(declare-fun x808 () Int)
(declare-fun x2022 () Bool)
(declare-fun x1560 () Int)
(declare-fun x2161 () x1761)
(declare-fun x2512 (Int) Int)
(declare-fun x1481 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x74 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x2328 () Int)
(declare-fun x2481 () Int)
(declare-fun x922 () Bool)
(declare-fun x2616 () Bool)
(declare-fun x602 () Int)
(declare-fun x2000 (Int) Int)
(declare-fun x442 () Bool)
(declare-fun x33 () Bool)
(declare-fun x594 () Bool)
(declare-fun x2186 () Int)
(declare-fun x151 () x1761)
(declare-fun x682 () Int)
(declare-fun x856 () Int)
(declare-fun x1848 () Bool)
(declare-fun x414 () Int)
(declare-fun x292 () Int)
(declare-fun x504 () Bool)
(declare-fun x487 () Bool)
(declare-fun x753 () Int)
(declare-fun x2639 () x1761)
(declare-fun x1390 () Bool)
(declare-fun x901 () Bool)
(declare-fun x2459 () Int)
(declare-fun x2277 () Int)
(declare-fun x326 () Int)
(declare-fun x2073 () Int)
(declare-fun x389 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x674 () Int)
(declare-fun x324 () Int)
(declare-fun x2510 () Bool)
(declare-fun x1925 () x1761)
(declare-fun x1899 () Int)
(declare-fun x123 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x1854 () Int)
(declare-fun x1677 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x769 () Int)
(declare-fun x490 () Bool)
(declare-fun x335 () Bool)
(declare-fun x436 () Int)
(declare-fun x2523 () Int)
(declare-fun x2297 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x2376 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x1966 () Int)
(declare-fun x1772 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x1656 () x1761)
(declare-fun x2079 () Int)
(declare-fun x497 (Int) Int)
(declare-fun x2629 () x1761)
(declare-fun x350 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x851 () Bool)
(declare-fun x2092 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x632 () Int)
(declare-fun x2168 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x2306 () Int)
(declare-fun x86 () Int)
(declare-fun x2706 () Int)
(declare-fun x2424 () Int)
(declare-fun x797 () Int)
(declare-fun x444 () Bool)
(declare-fun x2108 () Int)
(declare-fun x105 () Int)
(declare-fun x1176 () Int)
(declare-fun x2441 () Bool)
(declare-fun x1549 () Int)
(declare-fun x1 () Bool)
(declare-fun x2046 () Int)
(declare-fun x702 () Int)
(declare-fun x675 () Bool)
(declare-fun x2505 () Int)
(declare-fun x1564 () Int)
(declare-fun x1405 () Int)
(declare-fun x1686 () Bool)
(declare-fun x1956 () Int)
(declare-fun x1593 () Bool)
(declare-fun x664 () Bool)
(declare-fun x55 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x972 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1831 () Int)
(declare-fun x608 () Bool)
(declare-fun x567 () Bool)
(declare-fun x1344 () Int)
(declare-fun x395 () Int)
(declare-fun x1638 () Bool)
(declare-fun x640 () Bool)
(declare-fun x2480 () Bool)
(declare-fun x1591 () Int)
(declare-fun x2419 () Int)
(declare-fun x1800 () Int)
(declare-fun x1668 () Bool)
(declare-fun x2475 (x1761) Int)
(declare-fun x630 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x893 (x1761) Int)
(declare-fun x683 () Bool)
(declare-fun x2679 () Int)
(declare-fun x203 () Int)
(declare-fun x1736 () Bool)
(declare-fun x1664 () Int)
(declare-fun x987 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x15 () Bool)
(declare-fun x1316 () Int)
(declare-fun x1489 () Int)
(declare-fun x1189 () Bool)
(declare-fun x2144 () Int)
(declare-fun x2250 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1493 () Int)
(declare-fun x943 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x2175 () x1761)
(declare-fun x1064 () Bool)
(declare-fun x747 () Bool)
(declare-fun x248 () Bool)
(declare-fun x788 () x1761)
(declare-fun x657 () Int)
(declare-fun x1486 () x1761)
(declare-fun x2050 () Bool)
(declare-fun x714 () Int)
(declare-fun x1732 () Int)
(declare-fun x285 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x119 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x2327 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x452 () Int)
(declare-fun x1011 () Int)
(declare-fun x1323 () Bool)
(declare-fun x399 () Bool)
(declare-fun x1863 (x1761) Int)
(declare-fun x950 () Int)
(declare-fun x1025 () Int)
(declare-fun x2307 () Bool)
(declare-fun x1360 () x1761)
(declare-fun x1623 () Bool)
(declare-fun x2531 () Int)
(declare-fun x1081 () Bool)
(declare-fun x2618 () Int)
(declare-fun x1553 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x589 () Int)
(declare-fun x2371 () Bool)
(declare-fun x85 () Int)
(declare-fun x2638 () Bool)
(declare-fun x60 () Int)
(declare-fun x2348 () Int)
(declare-fun x685 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x1552 () Int)
(declare-fun x2519 () Int)
(declare-fun x891 () Int)
(declare-fun x2496 () Bool)
(declare-fun x2626 () Int)
(declare-fun x670 () Bool)
(declare-fun x1057 () Int)
(declare-fun x635 () Bool)
(declare-fun x1672 () Int)
(declare-fun x2269 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x198 () x1761)
(declare-fun x1562 () Int)
(declare-fun x11 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x364 () Bool)
(declare-fun x1384 () Int)
(declare-fun x2394 () Bool)
(declare-fun x113 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x2389 () Int)
(declare-fun x1812 () Bool)
(declare-fun x719 () x1761)
(declare-fun x647 () Bool)
(declare-fun x980 () Int)
(declare-fun x2698 () Bool)
(declare-fun x604 () Bool)
(declare-fun x548 () x1761)
(declare-fun x2077 () Bool)
(declare-fun x59 () Int)
(declare-fun x204 () Int)
(declare-fun x1045 () Int)
(declare-fun x20 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x1536 () Int)
(declare-fun x219 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x277 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x634 () x1761)
(declare-fun x730 () x1761)
(declare-fun x1661 () Bool)
(declare-fun x812 () Int)
(declare-fun x739 () Bool)
(declare-fun x2604 () Int)
(declare-fun x148 () Bool)
(declare-fun x1663 () Int)
(declare-fun x2208 () Int)
(declare-fun x2535 () Int)
(declare-fun x520 () Bool)
(declare-fun x379 (Int) Int)
(declare-fun x782 () Bool)
(declare-fun x114 (Int) Int)
(declare-fun x146 () Int)
(declare-fun x2256 () Int)
(declare-fun x1005 () Int)
(declare-fun x896 () Bool)
(declare-fun x343 () Int)
(declare-fun x665 () Int)
(declare-fun x2141 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x138 () Bool)
(declare-fun x162 () Bool)
(declare-fun x549 () Bool)
(declare-fun x2595 () Bool)
(declare-fun x130 () Int)
(declare-fun x1363 () Int)
(declare-fun x1751 () Bool)
(declare-fun x2513 () Bool)
(declare-fun x1526 () Bool)
(declare-fun x1172 () Int)
(declare-fun x960 () Bool)
(declare-fun x2326 () Int)
(declare-fun x2366 () Int)
(declare-fun x505 () x1761)
(declare-fun x1862 () Int)
(declare-fun x2663 () Bool)
(declare-fun x1754 () Int)
(declare-fun x190 () Int)
(declare-fun x297 () Int)
(declare-fun x667 () Int)
(declare-fun x1601 () Bool)
(declare-fun x262 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x569 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1980 () Int)
(declare-fun x1492 () Bool)
(declare-fun x2299 () Bool)
(declare-fun x1450 () Int)
(declare-fun x2395 () Bool)
(declare-fun x496 () Bool)
(declare-fun x1823 (Int Int) Int)
(declare-fun x1708 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x6 () Int)
(declare-fun x1387 () Bool)
(declare-fun x107 () Int)
(declare-fun x925 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x2631 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x271 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x2164 (x1761) Int)
(declare-fun x2653 () Bool)
(declare-fun x2283 () Int)
(declare-fun x1452 () Bool)
(declare-fun x940 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x883 () Int)
(declare-fun x1067 () Int)
(declare-fun x1521 () Int)
(declare-fun x1101 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x1453 () Int)
(declare-fun x2435 () Int)
(declare-fun x571 () x1761)
(declare-fun x2057 () Int)
(declare-fun x2696 () Bool)
(declare-fun x964 () Int)
(declare-fun x1716 () Int)
(declare-fun x2116 () Int)
(declare-fun x1469 () Int)
(declare-fun x121 () Bool)
(declare-fun x2693 () Int)
(declare-fun x1074 () Int)
(declare-fun x588 () Bool)
(declare-fun x874 () Int)
(declare-fun x477 () Int)
(declare-fun x2582 () Bool)
(declare-fun x2156 () Int)
(declare-fun x1814 () x1761)
(declare-fun x1277 () Bool)
(declare-fun x1884 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x1860 () x1761)
(declare-fun x10 () Bool)
(declare-fun x66 () Bool)
(declare-fun x2359 () Bool)
(declare-fun x1841 () Int)
(declare-fun x1094 () Int)
(declare-fun x2082 () Int)
(declare-fun x2564 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x40 () Bool)
(declare-fun x481 () Int)
(declare-fun x1965 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x1156 () Int)
(declare-fun x1910 () Bool)
(declare-fun x523 () Int)
(declare-fun x1563 () Int)
(declare-fun x495 (Int) Int)
(declare-fun x459 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x725 () Int)
(declare-fun x841 () Bool)
(declare-fun x799 () Bool)
(declare-fun x1748 () Int)
(declare-fun x439 () Int)
(declare-fun x907 () Bool)
(declare-fun x2695 () Int)
(declare-fun x143 () Int)
(declare-fun x2323 () Bool)
(declare-fun x2710 () Bool)
(declare-fun x609 () Int)
(declare-fun x534 () Int)
(declare-fun x1673 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x127 () Int)
(declare-fun x2271 () Bool)
(declare-fun x2349 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x443 () Int)
(declare-fun x1574 () Bool)
(declare-fun x18 () Bool)
(declare-fun x1864 () Int)
(declare-fun x1098 () x1761)
(declare-fun x236 () Int)
(declare-fun x1477 () Int)
(declare-fun x1242 () Int)
(declare-fun x1202 () Int)
(declare-fun x1110 () Int)
(declare-fun x1382 () Int)
(declare-fun x2339 () Int)
(declare-fun x850 () Int)
(declare-fun x2047 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x2620 () Bool)
(declare-fun x122 () Int)
(declare-fun x1953 () x1761)
(declare-fun x1758 () Bool)
(declare-fun x124 () Bool)
(declare-fun x2621 () Int)
(declare-fun x834 () Int)
(declare-fun x1719 () Int)
(declare-fun x1594 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x2021 () Int)
(declare-fun x281 () Bool)
(declare-fun x1427 () Int)
(declare-fun x427 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x1424 () Int)
(declare-fun x296 () Bool)
(declare-fun x582 () Int)
(declare-fun x1163 () x1761)
(declare-fun x2539 () Bool)
(declare-fun x356 () x1761)
(declare-fun x2138 () Int)
(declare-fun x1605 () Bool)
(declare-fun x1607 () Int)
(declare-fun x1391 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1280 () x1761)
(declare-fun x993 () Int)
(declare-fun x605 () Bool)
(declare-fun x555 () Int)
(declare-fun x1784 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x868 () Int)
(declare-fun x1297 () Bool)
(declare-fun x2591 () Bool)
(declare-fun x2163 () Int)
(declare-fun x2109 () Bool)
(declare-fun x568 () x1761)
(declare-fun x1543 () Int)
(declare-fun x1745 () Bool)
(declare-fun x312 () Int)
(declare-fun x486 () Int)
(declare-fun x1233 () Int)
(declare-fun x2098 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x50 () Int)
(declare-fun x307 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x1682 () Int)
(declare-fun x1993 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1790 () Int)
(declare-fun x1343 () Bool)
(declare-fun x863 () Int)
(declare-fun x558 () Int)
(declare-fun x1366 () Int)
(declare-fun x478 () Int)
(declare-fun x1151 () Int)
(declare-fun x849 () Bool)
(declare-fun x818 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x2187 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x1113 () Int)
(declare-fun x45 () Bool)
(declare-fun x2191 () Int)
(declare-fun x1958 (Int Int) Int)
(declare-fun x1903 () Bool)
(declare-fun x963 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x966 () Int)
(declare-fun x1820 () Bool)
(declare-fun x779 (Int) Int)
(declare-fun x2054 () Int)
(declare-fun x2200 () Bool)
(declare-fun x844 () Int)
(declare-fun x2066 () Int)
(declare-fun x886 () Int)
(declare-fun x2577 () Int)
(declare-fun x522 () Int)
(declare-fun x637 () Bool)
(declare-fun x1020 () Int)
(declare-fun x2452 () x1761)
(declare-fun x471 () x1761)
(declare-fun x1760 () Int)
(declare-fun x2636 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x529 () Bool)
(declare-fun x1124 () Int)
(declare-fun x2590 () Bool)
(declare-fun x1970 () Int)
(declare-fun x2027 () Bool)
(declare-fun x1031 (Int) Int)
(declare-fun x1021 () Bool)
(declare-fun x2655 () Int)
(declare-fun x1847 () Int)
(declare-fun x711 () Int)
(declare-fun x2087 () x1761)
(declare-fun x1002 () Int)
(declare-fun x2379 () Int)
(declare-fun x1991 () Bool)
(declare-fun x2423 () Int)
(declare-fun x1811 () Bool)
(declare-fun x287 () Bool)
(declare-fun x1909 () Int)
(declare-fun x1866 () Bool)
(declare-fun x2491 () Int)
(declare-fun x778 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x1400 () x1761)
(declare-fun x1431 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x1844 () Int)
(declare-fun x48 () Bool)
(declare-fun x745 () x1761)
(declare-fun x1215 () Bool)
(declare-fun x681 () Int)
(declare-fun x413 () Int)
(declare-fun x1221 () Bool)
(declare-fun x2111 () Int)
(declare-fun x2280 () Bool)
(declare-fun x2400 () Int)
(declare-fun x914 () Bool)
(declare-fun x790 () Bool)
(declare-fun x2555 () Bool)
(declare-fun x468 () Bool)
(declare-fun x1757 () Int)
(declare-fun x2625 () Bool)
(declare-fun x763 () Bool)
(declare-fun x1727 () Int)
(declare-fun x2472 () Bool)
(declare-fun x845 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x1558 () Int)
(declare-fun x1982 (Int) Int)
(declare-fun x39 () Int)
(declare-fun x924 () Bool)
(declare-fun x2677 () Int)
(declare-fun x1938 () Int)
(declare-fun x1542 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x1015 () Int)
(declare-fun x416 () Int)
(declare-fun x1516 () Bool)
(declare-fun x2619 (Int) x1761)
(declare-fun x2656 () Bool)
(declare-fun x1972 () Int)
(declare-fun x466 () Int)
(declare-fun x317 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x2135 () Bool)
(declare-fun x749 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x1210 () Int)
(declare-fun x299 () Int)
(declare-fun x272 () Int)
(declare-fun x2080 () Bool)
(declare-fun x1659 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x709 () Int)
(declare-fun x1959 () Bool)
(declare-fun x2205 (Int) Int)
(declare-fun x2370 () Int)
(declare-fun x510 () x1761)
(declare-fun x398 () Int)
(declare-fun x308 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x698 () x1761)
(declare-fun x1121 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x402 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x989 () Bool)
(declare-fun x357 () Bool)
(declare-fun x2598 (Int) Int)
(declare-fun x2668 () Bool)
(declare-fun x610 () Int)
(declare-fun x508 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x2397 () Int)
(declare-fun x1762 () Bool)
(declare-fun x599 () x1761)
(declare-fun x1106 () Int)
(declare-fun x2103 () Bool)
(declare-fun x27 () Bool)
(declare-fun x1399 () x1761)
(declare-fun x2336 () Bool)
(declare-fun x671 () Int)
(declare-fun x1935 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x1337 () Int)
(declare-fun x1177 () Bool)
(declare-fun x228 () Int)
(declare-fun x1921 () Bool)
(declare-fun x275 () Int)
(define-fun x112 ((x1761 x1761) (x581 Int)) x1761 (ite ((_ is x930) x1761) (x930 (x1955 x1761) (+ (x2314 x1761) x581)) (ite ((_ is x19) x1761) (x19 (x1147 x1761) (x1415 x1761) (+ (x738 x1761) x581)) (x71 (+ x581 (x1070 x1761))))))
(define-fun x2155 ((x624 Int)) Int (ite (and (< x624 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x624)) x624 (- x624 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2052 ((x624 Int)) Int (ite (and (>= x624 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x624 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x624) x624))
(define-fun x593 ((x1332 Int)) Bool (and (< x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1332 0)))
(define-fun x1171 ((x1332 Int)) Bool (and (= (x1958 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1332) x1332) (= (x1958 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1332)))
(define-fun x1225 ((x1332 Int)) Bool (and (= 0 (x1958 x1332 0)) (= (x1958 0 x1332) 0)))
(define-fun x1126 ((x1332 Int)) Bool (= (x1958 x1332 x1332) x1332))
(define-fun x2381 ((x1332 Int)) Bool (and (x1225 x1332) (x1126 x1332) (x1171 x1332)))
(define-fun x1029 ((x1332 Int) (x184 Int)) Bool (= (x1958 x1332 x184) (x1958 x184 x1332)))
(define-fun x690 ((x1332 Int) (x184 Int)) Bool (and (>= (x1958 x1332 x184) 0) (=> (<= 0 x184) (<= (x1958 x1332 x184) x184)) (=> (>= x1332 0) (<= (x1958 x1332 x184) x1332))))
(define-fun x428 ((x1332 Int) (x184 Int)) Bool (and (x1029 x1332 x184) (x690 x1332 x184)))
(define-fun x213 ((x1332 Int)) Bool (= (mod x1332 1461501637330902918203684832716283019655932542976) (x1958 x1332 1461501637330902918203684832716283019655932542975)))
(define-fun x2384 ((x1332 Int)) Bool (and (x213 x1332) (x428 x1332 1461501637330902918203684832716283019655932542975)))
(define-fun x2332 ((x1332 Int)) Bool (= (mod x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x1332 32) (x1958 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x1116 ((x1332 Int)) Bool (and (x428 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2332 x1332)))
(define-fun x1931 ((x330 Int)) Int (ite (= 128 x330) x50 (x497 x330)))
(define-fun x278 ((x330 Int)) Int (ite (= 160 x330) x1117 (x1931 x330)))
(define-fun x2313 ((x330 Int)) Int (ite (= x330 192) x2089 (x278 x330)))
(define-fun x232 ((x330 Int)) Int (x1738 x330))
(define-fun x752 ((x330 Int)) Int (ite (= x330 128) x1236 (x25 x330)))
(define-fun x2238 ((x330 Int)) Int (ite (= x330 160) x2085 (x752 x330)))
(define-fun x586 ((x330 Int)) Int (ite x271 (x752 x330) (x2238 x330)))
(define-fun x1918 ((x330 Int)) Int (ite (= x1202 x330) 65943510083598082279227955258803319933472635617035506777028864765220054106112 (x586 x330)))
(define-fun x1705 ((x330 Int)) Int (ite (= x474 x330) x1878 (x1918 x330)))
(define-fun x1410 ((x330 Int)) Int (ite (= x330 x1202) 74228146054641364427485594382366355075153451190847473373747070783662162182144 (x1705 x330)))
(define-fun x678 ((x330 Int)) Int (ite (= x1813 x330) x2415 (x1410 x330)))
(define-fun x2678 ((x330 x1761)) Int (x1049 x330))
(define-fun x871 ((x330 x1761)) Int (x2019 x330))
(define-fun x1027 ((x330 Int)) Int (ite (= 128 x330) 72223263258191293651604190264004579703475585967499159981614695267027195527168 (x2000 x330)))
(define-fun x1750 ((x330 Int)) Int (ite (= 132 x330) x206 (x1027 x330)))
(define-fun x866 ((x330 Int)) Int (ite (= 164 x330) x1939 (x1750 x330)))
(define-fun x543 ((x330 Int)) Int (ite (= x1202 x330) x1922 (x678 x330)))
(define-fun x642 ((x330 Int)) Int (ite (and (< x330 (+ x2186 x1242)) (<= x2186 x330)) (x1738 (+ x1409 (- x330 x2186))) (x543 x330)))
(define-fun x1785 ((x330 Int)) Int (ite x2374 (x543 x330) (x642 x330)))
(define-fun x1973 ((x330 Int)) Int (ite (= x330 x414) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1785 x330)))
(define-fun x1063 ((x330 Int)) Int (ite (= x330 x2171) x2156 (x1973 x330)))
(define-fun x623 ((x330 x1761)) Int (ite (= x330 x724) x1892 (x1701 x330)))
(define-fun x839 ((x330 x1761)) Int (ite x1873 (ite x1250 (x1701 x330) (x623 x330)) (x1701 x330)))
(define-fun x1075 ((x330 x1761)) Int (ite x380 (ite x569 (x839 x330) (ite x735 (x1701 x330) (ite x1033 (x1701 x330) (ite x2369 (x1701 x330) (ite x2547 (x839 x330) (x1701 x330)))))) (ite x2688 (x1701 x330) (x839 x330))))
(define-fun x726 ((x330 x1761)) Int (ite (= x1576 x330) x1647 (x1075 x330)))
(define-fun x503 ((x330 x1761)) Int (ite x776 (x726 x330) (ite x55 (x1075 x330) (ite x604 (x1075 x330) (ite x427 (x1075 x330) (ite x768 (x726 x330) (x1075 x330)))))))
(define-fun x784 ((x330 x1761)) Int (ite (= x1280 x330) x667 (x726 x330)))
(define-fun x693 ((x330 x1761)) Int (ite x592 (x503 x330) (x784 x330)))
(define-fun x772 ((x330 x1761)) Int (ite x458 (x1701 x330) (ite x2440 (x693 x330) (x1075 x330))))
(define-fun x1125 ((x330 x1761)) Int (ite (= x330 x2607) x1617 (x772 x330)))
(define-fun x2245 ((x330 x1761)) Int (ite x2527 (x1125 x330) (ite x1751 (x772 x330) (ite x646 (x772 x330) (ite x1222 (x772 x330) (ite x2656 (x1125 x330) (x772 x330)))))))
(define-fun x734 ((x330 x1761)) Int (ite (= x330 x2302) x1124 (x1125 x330)))
(define-fun x807 ((x330 x1761)) Int (ite x778 (ite x2623 (x2245 x330) (x734 x330)) (x772 x330)))
(define-fun x68 ((x330 x1761)) Int (ite (= x2246 x330) x420 (x807 x330)))
(define-fun x885 ((x330 x1761)) Int (ite x1491 (x68 x330) (ite x1155 (x807 x330) (ite x1638 (x807 x330) (ite x167 (x807 x330) (ite x2394 (x68 x330) (x807 x330)))))))
(define-fun x196 ((x330 x1761)) Int (ite (= x330 x1537) x60 (x68 x330)))
(define-fun x2340 ((x330 x1761)) Int (ite x675 (ite x596 (x885 x330) (x196 x330)) (x807 x330)))
(define-fun x197 ((x330 x1761)) Int (ite (= x1632 x330) x1282 (x2340 x330)))
(define-fun x2700 ((x330 x1761)) Int (ite x132 (x197 x330) (ite x594 (x2340 x330) (ite x2180 (x2340 x330) (ite x1208 (x2340 x330) (ite x2081 (x197 x330) (x2340 x330)))))))
(define-fun x365 ((x330 x1761)) Int (ite (= x330 x1204) x677 (x197 x330)))
(define-fun x827 ((x330 x1761)) Int (ite x1635 (ite x1848 (x2700 x330) (x365 x330)) (x2340 x330)))
(define-fun x2439 ((x330 x1761)) Int (ite x686 (x827 x330) (ite x708 (x2340 x330) (ite x2248 (x807 x330) (ite x268 (x772 x330) (ite x1108 (x772 x330) (ite x179 (x772 x330) (ite x48 (x772 x330) (ite x1885 (x827 x330) (ite x2670 (x2340 x330) (x807 x330)))))))))))
(define-fun x2029 ((x330 x1761)) Int (ite x17 (x2439 x330) (x827 x330)))
(define-fun x1439 ((x330 x1761)) Int (ite (= x1324 x330) x1067 (x772 x330)))
(define-fun x1505 ((x330 x1761)) Int (ite x1625 (x1439 x330) (ite x2349 (x772 x330) (ite x2466 (x772 x330) (ite x570 (x772 x330) (ite x1620 (x1439 x330) (x772 x330)))))))
(define-fun x528 ((x330 x1761)) Int (ite (= x330 x1634) x1052 (x1439 x330)))
(define-fun x2113 ((x330 x1761)) Int (ite x53 (ite x584 (x1505 x330) (x528 x330)) (x772 x330)))
(define-fun x1907 ((x330 x1761)) Int (ite (= x330 x2295) x817 (x2113 x330)))
(define-fun x1852 ((x330 x1761)) Int (ite x144 (x1907 x330) (ite x444 (x2113 x330) (ite x888 (x2113 x330) (ite x961 (x2113 x330) (ite x450 (x1907 x330) (x2113 x330)))))))
(define-fun x2055 ((x330 x1761)) Int (ite (= x330 x1814) x629 (x1907 x330)))
(define-fun x298 ((x330 x1761)) Int (ite x704 (ite x2667 (x1852 x330) (x2055 x330)) (x2113 x330)))
(define-fun x789 ((x330 x1761)) Int (ite (= x330 x1351) x116 (x298 x330)))
(define-fun x1381 ((x330 x1761)) Int (ite x1742 (x789 x330) (ite x2630 (x298 x330) (ite x1068 (x298 x330) (ite x123 (x298 x330) (ite x864 (x789 x330) (x298 x330)))))))
(define-fun x1367 ((x330 x1761)) Int (ite (= x1035 x330) x92 (x789 x330)))
(define-fun x378 ((x330 x1761)) Int (ite x83 (ite x1721 (x1381 x330) (x1367 x330)) (x298 x330)))
(define-fun x606 ((x330 x1761)) Int (ite x147 (x378 x330) (ite x843 (x298 x330) (ite x1166 (x2113 x330) (ite x327 (x772 x330) (ite x616 (x772 x330) (ite x588 (x772 x330) (ite x1080 (x772 x330) (ite x2167 (x378 x330) (ite x1443 (x298 x330) (x2113 x330)))))))))))
(define-fun x469 ((x330 x1761)) Int (ite x2202 (x606 x330) (x378 x330)))
(define-fun x1152 ((x330 x1761)) Int (ite x43 (x772 x330) (ite x1535 (ite x1257 (x2029 x330) (x469 x330)) (x772 x330))))
(define-fun x238 ((x330 Int)) Int (ite (= x330 0) x166 (x2205 x330)))
(define-fun x1556 ((x330 Int)) Int (ite (= x414 x330) x166 (x1063 x330)))
(define-fun x2017 ((x330 x1761)) Int (ite (= x330 x639) x658 (x1883 x330)))
(define-fun x600 ((x330 x1761)) Int (ite x1873 (x1883 x330) (ite x2224 (x1883 x330) (x2017 x330))))
(define-fun x910 ((x330 x1761)) Int (ite x380 (ite x569 (x600 x330) (ite x735 (x1883 x330) (ite x1033 (x1883 x330) (ite x2369 (x1883 x330) (ite x2547 (x600 x330) (x1883 x330)))))) (ite x2688 (x1883 x330) (x600 x330))))
(define-fun x1898 ((x330 x1761)) Int (ite (= x2225 x330) x2191 (x910 x330)))
(define-fun x1256 ((x330 x1761)) Int (ite x16 (x1898 x330) (ite x1238 (x910 x330) (ite x1064 (x910 x330) (ite x357 (x910 x330) (ite x987 (x1898 x330) (x910 x330)))))))
(define-fun x1062 ((x330 x1761)) Int (ite (= x330 x2622) x636 (x1898 x330)))
(define-fun x2701 ((x330 x1761)) Int (ite x241 (x1256 x330) (x1062 x330)))
(define-fun x949 ((x330 x1761)) Int (ite x458 (x1883 x330) (ite x2440 (x910 x330) (ite x601 (x2701 x330) (x910 x330)))))
(define-fun x1569 ((x330 x1761)) Int (ite (= x330 x2229) x1520 (x949 x330)))
(define-fun x830 ((x330 x1761)) Int (ite x922 (x1569 x330) (ite x1986 (x949 x330) (ite x2050 (x949 x330) (ite x2433 (x949 x330) (ite x2383 (x1569 x330) (x949 x330)))))))
(define-fun x1161 ((x330 x1761)) Int (ite (= x330 x488) x149 (x1569 x330)))
(define-fun x2447 ((x330 x1761)) Int (ite x778 (x949 x330) (ite x1417 (ite x832 (x830 x330) (x1161 x330)) (x949 x330))))
(define-fun x627 ((x330 x1761)) Int (ite (= x415 x330) x1020 (x2447 x330)))
(define-fun x2234 ((x330 x1761)) Int (ite x1445 (x627 x330) (ite x1815 (x2447 x330) (ite x2573 (x2447 x330) (ite x2088 (x2447 x330) (ite x746 (x627 x330) (x2447 x330)))))))
(define-fun x2030 ((x330 x1761)) Int (ite (= x330 x672) x1391 (x627 x330)))
(define-fun x2204 ((x330 x1761)) Int (ite x675 (x2447 x330) (ite x200 (ite x1310 (x2234 x330) (x2030 x330)) (x2447 x330))))
(define-fun x217 ((x330 x1761)) Int (ite (= x2157 x330) x2339 (x2204 x330)))
(define-fun x1879 ((x330 x1761)) Int (ite x328 (x217 x330) (ite x2385 (x2204 x330) (ite x542 (x2204 x330) (ite x549 (x2204 x330) (ite x544 (x217 x330) (x2204 x330)))))))
(define-fun x2011 ((x330 x1761)) Int (ite (= x1346 x330) x2028 (x217 x330)))
(define-fun x440 ((x330 x1761)) Int (ite x1635 (x2204 x330) (ite x1544 (ite x1333 (x1879 x330) (x2011 x330)) (x2204 x330))))
(define-fun x2633 ((x330 x1761)) Int (ite x686 (x440 x330) (ite x708 (x2204 x330) (ite x2248 (x2447 x330) (ite x268 (x949 x330) (ite x1108 (x949 x330) (ite x179 (x949 x330) (ite x48 (x949 x330) (ite x1885 (x440 x330) (ite x2670 (x2204 x330) (x2447 x330)))))))))))
(define-fun x174 ((x330 x1761)) Int (ite x17 (x2633 x330) (x440 x330)))
(define-fun x531 ((x330 x1761)) Int (ite (= x330 x168) x1285 (x949 x330)))
(define-fun x431 ((x330 x1761)) Int (ite x2080 (x531 x330) (ite x508 (x949 x330) (ite x1531 (x949 x330) (ite x1858 (x949 x330) (ite x1406 (x531 x330) (x949 x330)))))))
(define-fun x1575 ((x330 x1761)) Int (ite (= x330 x990) x110 (x531 x330)))
(define-fun x2559 ((x330 x1761)) Int (ite x53 (x949 x330) (ite x1278 (ite x500 (x431 x330) (x1575 x330)) (x949 x330))))
(define-fun x1551 ((x330 x1761)) Int (ite (= x505 x330) x143 (x2559 x330)))
(define-fun x1882 ((x330 x1761)) Int (ite x2310 (x1551 x330) (ite x1432 (x2559 x330) (ite x1668 (x2559 x330) (ite x803 (x2559 x330) (ite x1637 (x1551 x330) (x2559 x330)))))))
(define-fun x1287 ((x330 x1761)) Int (ite (= x1430 x330) x1970 (x1551 x330)))
(define-fun x691 ((x330 x1761)) Int (ite x704 (x2559 x330) (ite x2545 (ite x254 (x1882 x330) (x1287 x330)) (x2559 x330))))
(define-fun x1014 ((x330 x1761)) Int (ite (= x330 x1687) x2436 (x691 x330)))
(define-fun x383 ((x330 x1761)) Int (ite x1341 (x1014 x330) (ite x2045 (x691 x330) (ite x1662 (x691 x330) (ite x2109 (x691 x330) (ite x1054 (x1014 x330) (x691 x330)))))))
(define-fun x1085 ((x330 x1761)) Int (ite (= x330 x1783) x1508 (x1014 x330)))
(define-fun x712 ((x330 x1761)) Int (ite x83 (x691 x330) (ite x2546 (ite x250 (x383 x330) (x1085 x330)) (x691 x330))))
(define-fun x1776 ((x330 x1761)) Int (ite x147 (x712 x330) (ite x843 (x691 x330) (ite x1166 (x2559 x330) (ite x327 (x949 x330) (ite x616 (x949 x330) (ite x588 (x949 x330) (ite x1080 (x949 x330) (ite x2167 (x712 x330) (ite x1443 (x691 x330) (x2559 x330)))))))))))
(define-fun x2201 ((x330 x1761)) Int (ite x2202 (x1776 x330) (x712 x330)))
(define-fun x1764 ((x330 x1761)) Int (ite x43 (x949 x330) (ite x1535 (ite x1257 (x174 x330) (x2201 x330)) (x949 x330))))
(define-fun x2405 ((x330 Int)) Int (ite (= x330 0) x2514 (x2205 x330)))
(define-fun x234 ((x330 Int)) Int (ite (= x414 x330) x2514 (x1063 x330)))
(define-fun x996 ((x330 x1761)) Int (ite (= x330 x2010) x339 (x893 x330)))
(define-fun x513 ((x330 x1761)) Int (ite x257 (x996 x330) (ite x1463 (x893 x330) (ite x763 (x893 x330) (ite x1659 (x893 x330) (ite x1677 (x996 x330) (x893 x330)))))))
(define-fun x368 ((x330 x1761)) Int (ite (= x330 x2176) x1494 (x996 x330)))
(define-fun x1016 ((x330 x1761)) Int (ite x1141 (x513 x330) (x368 x330)))
(define-fun x2443 ((x330 x1761)) Int (ite x458 (x893 x330) (ite x2440 (x893 x330) (ite x601 (x893 x330) (ite x2560 (x1016 x330) (x893 x330))))))
(define-fun x1763 ((x330 x1761)) Int (ite (= x1400 x330) x2485 (x2443 x330)))
(define-fun x2009 ((x330 x1761)) Int (ite x2590 (x1763 x330) (ite x2522 (x2443 x330) (ite x1867 (x2443 x330) (ite x227 (x2443 x330) (ite x1046 (x1763 x330) (x2443 x330)))))))
(define-fun x1374 ((x330 x1761)) Int (ite (= x156 x330) x394 (x1763 x330)))
(define-fun x1338 ((x330 x1761)) Int (ite x778 (x2443 x330) (ite x1417 (x2443 x330) (ite x1628 (ite x2168 (x2009 x330) (x1374 x330)) (x2443 x330)))))
(define-fun x2711 ((x330 x1761)) Int (ite (= x2525 x330) x1007 (x1338 x330)))
(define-fun x2549 ((x330 x1761)) Int (ite x2460 (x2711 x330) (ite x460 (x1338 x330) (ite x1465 (x1338 x330) (ite x553 (x1338 x330) (ite x1262 (x2711 x330) (x1338 x330)))))))
(define-fun x325 ((x330 x1761)) Int (ite (= x330 x284) x1039 (x2711 x330)))
(define-fun x2162 ((x330 x1761)) Int (ite x675 (x1338 x330) (ite x200 (x1338 x330) (ite x1319 (ite x511 (x2549 x330) (x325 x330)) (x1338 x330)))))
(define-fun x1954 ((x330 x1761)) Int (ite (= x330 x994) x2082 (x2162 x330)))
(define-fun x2515 ((x330 x1761)) Int (ite x487 (x1954 x330) (ite x1478 (x2162 x330) (ite x655 (x2162 x330) (ite x925 (x2162 x330) (ite x171 (x1954 x330) (x2162 x330)))))))
(define-fun x2640 ((x330 x1761)) Int (ite (= x1807 x330) x1968 (x1954 x330)))
(define-fun x2335 ((x330 x1761)) Int (ite x1635 (x2162 x330) (ite x1544 (x2162 x330) (ite x1440 (ite x2194 (x2515 x330) (x2640 x330)) (x2162 x330)))))
(define-fun x2627 ((x330 x1761)) Int (ite x686 (x2335 x330) (ite x708 (x2162 x330) (ite x2248 (x1338 x330) (ite x268 (x2443 x330) (ite x1108 (x2443 x330) (ite x179 (x2443 x330) (ite x48 (x2443 x330) (ite x1885 (x2335 x330) (ite x2670 (x2162 x330) (x1338 x330)))))))))))
(define-fun x2247 ((x330 x1761)) Int (ite x17 (x2627 x330) (x2335 x330)))
(define-fun x2294 ((x330 x1761)) Int (ite (= x933 x330) x502 (x2443 x330)))
(define-fun x537 ((x330 x1761)) Int (ite x2329 (x2294 x330) (ite x1438 (x2443 x330) (ite x2053 (x2443 x330) (ite x2593 (x2443 x330) (ite x718 (x2294 x330) (x2443 x330)))))))
(define-fun x2071 ((x330 x1761)) Int (ite (= x330 x697) x522 (x2294 x330)))
(define-fun x1871 ((x330 x1761)) Int (ite x53 (x2443 x330) (ite x1278 (x2443 x330) (ite x721 (ite x670 (x537 x330) (x2071 x330)) (x2443 x330)))))
(define-fun x804 ((x330 x1761)) Int (ite (= x330 x1530) x911 (x1871 x330)))
(define-fun x838 ((x330 x1761)) Int (ite x98 (x804 x330) (ite x2269 (x1871 x330) (ite x777 (x1871 x330) (ite x618 (x1871 x330) (ite x2467 (x804 x330) (x1871 x330)))))))
(define-fun x2136 ((x330 x1761)) Int (ite (= x330 x1399) x964 (x804 x330)))
(define-fun x1232 ((x330 x1761)) Int (ite x704 (x1871 x330) (ite x2545 (x1871 x330) (ite x1009 (ite x1356 (x838 x330) (x2136 x330)) (x1871 x330)))))
(define-fun x1618 ((x330 x1761)) Int (ite (= x363 x330) x1251 (x1232 x330)))
(define-fun x22 ((x330 x1761)) Int (ite x973 (x1618 x330) (ite x851 (x1232 x330) (ite x124 (x1232 x330) (ite x1272 (x1232 x330) (ite x826 (x1618 x330) (x1232 x330)))))))
(define-fun x2243 ((x330 x1761)) Int (ite (= x2563 x330) x1339 (x1618 x330)))
(define-fun x31 ((x330 x1761)) Int (ite x83 (x1232 x330) (ite x2546 (x1232 x330) (ite x780 (ite x2582 (x22 x330) (x2243 x330)) (x1232 x330)))))
(define-fun x1119 ((x330 x1761)) Int (ite x147 (x31 x330) (ite x843 (x1232 x330) (ite x1166 (x1871 x330) (ite x327 (x2443 x330) (ite x616 (x2443 x330) (ite x588 (x2443 x330) (ite x1080 (x2443 x330) (ite x2167 (x31 x330) (ite x1443 (x1232 x330) (x1871 x330)))))))))))
(define-fun x1361 ((x330 x1761)) Int (ite x2202 (x1119 x330) (x31 x330)))
(define-fun x1610 ((x330 x1761)) Int (ite x43 (x2443 x330) (ite x1535 (ite x1257 (x2247 x330) (x1361 x330)) (x2443 x330))))
(define-fun x1642 ((x330 Int)) Int (ite (= x330 0) x2693 (x2205 x330)))
(define-fun x348 ((x330 Int)) Int (ite (= x414 x330) x2693 (x1063 x330)))
(define-fun x418 ((x330 x1761)) Int (ite (= x330 x1670) x1609 (x2216 x330)))
(define-fun x1894 ((x330 x1761)) Int (ite x1167 (x418 x330) (ite x1654 (x2216 x330) (ite x2098 (x2216 x330) (ite x2473 (x2216 x330) (ite x1135 (x418 x330) (x2216 x330)))))))
(define-fun x2143 ((x330 x1761)) Int (ite (= x330 x2087) x312 (x418 x330)))
(define-fun x1626 ((x330 x1761)) Int (ite x29 (x1894 x330) (x2143 x330)))
(define-fun x2288 ((x330 x1761)) Int (ite x458 (x2216 x330) (ite x2440 (x2216 x330) (ite x601 (x2216 x330) (ite x2560 (x2216 x330) (x1626 x330))))))
(define-fun x1420 ((x330 x1761)) Int (ite (= x1213 x330) x1073 (x2288 x330)))
(define-fun x320 ((x330 x1761)) Int (ite x2263 (x1420 x330) (ite x742 (x2288 x330) (ite x968 (x2288 x330) (ite x1653 (x2288 x330) (ite x121 (x1420 x330) (x2288 x330)))))))
(define-fun x246 ((x330 x1761)) Int (ite (= x1305 x330) x1818 (x1420 x330)))
(define-fun x408 ((x330 x1761)) Int (ite x778 (x2288 x330) (ite x1417 (x2288 x330) (ite x1628 (x2288 x330) (ite x364 (x320 x330) (x246 x330))))))
(define-fun x1003 ((x330 x1761)) Int (ite (= x2301 x330) x2298 (x408 x330)))
(define-fun x2014 ((x330 x1761)) Int (ite x652 (x1003 x330) (ite x80 (x408 x330) (ite x1542 (x408 x330) (ite x2183 (x408 x330) (ite x628 (x1003 x330) (x408 x330)))))))
(define-fun x1237 ((x330 x1761)) Int (ite (= x1096 x330) x1448 (x1003 x330)))
(define-fun x2705 ((x330 x1761)) Int (ite x675 (x408 x330) (ite x200 (x408 x330) (ite x1319 (x408 x330) (ite x1109 (x2014 x330) (x1237 x330))))))
(define-fun x1914 ((x330 x1761)) Int (ite (= x330 x730) x1521 (x2705 x330)))
(define-fun x2592 ((x330 x1761)) Int (ite x1218 (x1914 x330) (ite x2600 (x2705 x330) (ite x684 (x2705 x330) (ite x688 (x2705 x330) (ite x1595 (x1914 x330) (x2705 x330)))))))
(define-fun x152 ((x330 x1761)) Int (ite (= x510 x330) x1793 (x1914 x330)))
(define-fun x2240 ((x330 x1761)) Int (ite x1635 (x2705 x330) (ite x1544 (x2705 x330) (ite x1440 (x2705 x330) (ite x438 (x2592 x330) (x152 x330))))))
(define-fun x3 ((x330 x1761)) Int (ite x686 (x2240 x330) (ite x708 (x2705 x330) (ite x2248 (x408 x330) (ite x268 (x2288 x330) (ite x1108 (x2288 x330) (ite x179 (x2288 x330) (ite x48 (x2288 x330) (ite x1885 (x2240 x330) (ite x2670 (x2705 x330) (x408 x330)))))))))))
(define-fun x372 ((x330 x1761)) Int (ite x17 (x3 x330) (x2240 x330)))
(define-fun x9 ((x330 x1761)) Int (ite (= x330 x2161) x2210 (x2288 x330)))
(define-fun x224 ((x330 x1761)) Int (ite x1651 (x9 x330) (ite x1623 (x2288 x330) (ite x1422 (x2288 x330) (ite x288 (x2288 x330) (ite x1674 (x9 x330) (x2288 x330)))))))
(define-fun x2024 ((x330 x1761)) Int (ite (= x1960 x330) x710 (x9 x330)))
(define-fun x2130 ((x330 x1761)) Int (ite x53 (x2288 x330) (ite x1278 (x2288 x330) (ite x721 (x2288 x330) (ite x1606 (x224 x330) (x2024 x330))))))
(define-fun x1786 ((x330 x1761)) Int (ite (= x330 x1570) x992 (x2130 x330)))
(define-fun x457 ((x330 x1761)) Int (ite x1426 (x1786 x330) (ite x1910 (x2130 x330) (ite x2228 (x2130 x330) (ite x2646 (x2130 x330) (ite x1248 (x1786 x330) (x2130 x330)))))))
(define-fun x231 ((x330 x1761)) Int (ite (= x1925 x330) x1667 (x1786 x330)))
(define-fun x2107 ((x330 x1761)) Int (ite x704 (x2130 x330) (ite x2545 (x2130 x330) (ite x1009 (x2130 x330) (ite x2317 (x457 x330) (x231 x330))))))
(define-fun x1725 ((x330 x1761)) Int (ite (= x1994 x330) x2281 (x2107 x330)))
(define-fun x249 ((x330 x1761)) Int (ite x2377 (x1725 x330) (ite x2274 (x2107 x330) (ite x1926 (x2107 x330) (ite x2220 (x2107 x330) (ite x321 (x1725 x330) (x2107 x330)))))))
(define-fun x377 ((x330 x1761)) Int (ite (= x330 x2324) x2154 (x1725 x330)))
(define-fun x401 ((x330 x1761)) Int (ite x83 (x2107 x330) (ite x2546 (x2107 x330) (ite x780 (x2107 x330) (ite x1996 (x249 x330) (x377 x330))))))
(define-fun x1326 ((x330 x1761)) Int (ite x147 (x401 x330) (ite x843 (x2107 x330) (ite x1166 (x2130 x330) (ite x327 (x2288 x330) (ite x616 (x2288 x330) (ite x588 (x2288 x330) (ite x1080 (x2288 x330) (ite x2167 (x401 x330) (ite x1443 (x2107 x330) (x2130 x330)))))))))))
(define-fun x942 ((x330 x1761)) Int (ite x2202 (x1326 x330) (x401 x330)))
(define-fun x1114 ((x330 x1761)) Int (ite x43 (x2288 x330) (ite x1535 (ite x1257 (x372 x330) (x942 x330)) (x2288 x330))))
(define-fun x651 ((x330 Int)) Int (ite (= x330 0) x2611 (x2205 x330)))
(define-fun x2276 ((x330 Int)) Int (ite (= x414 x330) x2611 (x1063 x330)))
(define-fun x2543 ((x330 Int)) Int (ite x1743 (ite x564 (x1063 x330) (x1556 x330)) (ite x8 (ite x209 (x1063 x330) (x234 x330)) (ite x2554 (ite x1658 (x1063 x330) (x348 x330)) (ite x2041 (x1063 x330) (x2276 x330))))))
(define-fun x908 ((x330 Int)) Int (ite (= x2398 x330) x1487 (x2543 x330)))
(define-fun x1175 ((x330 Int)) Int (ite (= x2038 x330) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x908 x330)))
(define-fun x216 ((x330 Int)) Int (ite (= x330 x892) x331 (x1175 x330)))
(define-fun x2664 ((x330 Int)) Int (ite (= x330 x978) x1487 (x216 x330)))
(define-fun x2219 ((x330 Int)) Int (ite (= 0 x330) x638 (x2664 x330)))
(define-fun x1999 ((x330 Int)) Int (ite (= x330 0) x1819 (x2664 x330)))
(define-fun x1586 ((x330 Int)) Int (ite (= x330 0) x937 (x2664 x330)))
(define-fun x1193 ((x330 Int)) Int (ite (= x330 0) x181 (x2664 x330)))
(define-fun x936 ((x330 Int)) Int (ite x2636 (ite x1678 (x2664 x330) (x2219 x330)) (ite x2430 (ite x2005 (x2664 x330) (x1999 x330)) (ite x389 (ite x1773 (x2664 x330) (x1586 x330)) (ite x1974 (x2664 x330) (x1193 x330))))))
(define-fun x1881 ((x330 Int)) Int (ite (= x330 0) 1 (x495 x330)))
(define-fun x550 ((x330 Int)) Int (ite x1678 (x495 x330) (x1881 x330)))
(define-fun x1194 ((x330 Int)) Int (ite (= x330 0) 1 (x495 x330)))
(define-fun x361 ((x330 Int)) Int (ite x2005 (x495 x330) (x1194 x330)))
(define-fun x2152 ((x330 Int)) Int (ite (= 0 x330) 1 (x495 x330)))
(define-fun x1281 ((x330 Int)) Int (ite x1773 (x495 x330) (x2152 x330)))
(define-fun x792 ((x330 Int)) Int (ite (= x330 0) 1 (x495 x330)))
(define-fun x1414 ((x330 Int)) Int (ite x1974 (x495 x330) (x792 x330)))
(define-fun x2488 ((x330 Int)) Int (ite x2636 (x550 x330) (ite x2430 (x361 x330) (ite x389 (x1281 x330) (x1414 x330)))))
(define-fun x1834 ((x330 Int)) Int (ite (and (<= 0 x330) (> (+ x2542 0) x330)) (x2488 (+ 0 (- x330 0))) (x936 x330)))
(define-fun x1130 ((x330 Int)) Int (ite x1138 (x936 x330) (x1834 x330)))
(define-fun x2223 ((x330 Int)) Int (ite x1118 (x2543 x330) (x1130 x330)))
(define-fun x1842 ((x330 Int)) Int (ite x1123 (x1785 x330) (ite x2323 (x1785 x330) (x2223 x330))))
(define-fun x1369 ((x330 x1761)) Int (ite (= x330 x356) x1712 (x1114 x330)))
(define-fun x713 ((x330 x1761)) Int (ite x2437 (x1369 x330) (ite x1710 (x1114 x330) (ite x1081 (x1114 x330) (ite x1553 (x1114 x330) (ite x406 (x1369 x330) (x1114 x330)))))))
(define-fun x607 ((x330 x1761)) Int (ite (= x330 x323) x1802 (x1369 x330)))
(define-fun x2427 ((x330 x1761)) Int (ite x1974 (x713 x330) (x607 x330)))
(define-fun x909 ((x330 x1761)) Int (ite x2636 (x1114 x330) (ite x2430 (x1114 x330) (ite x389 (x1114 x330) (x2427 x330)))))
(define-fun x1839 ((x330 x1761)) Int (ite x1118 (x1114 x330) (x909 x330)))
(define-fun x140 ((x330 x1761)) Int (ite x1123 (x1114 x330) (ite x2323 (x1114 x330) (x1839 x330))))
(define-fun x2132 ((x330 Int)) Int (ite (= x330 x1799) x1464 (x1842 x330)))
(define-fun x1012 ((x330 Int)) Int (ite (= x330 x603) x396 (x2132 x330)))
(define-fun x1698 ((x330 Int)) Int (ite (= x107 x330) x1699 (x1012 x330)))
(define-fun x208 ((x330 Int)) Int (ite (= x403 x330) x2692 (x1698 x330)))
(define-fun x2494 ((x330 Int)) Int (ite (= x1318 x330) x1437 (x208 x330)))
(define-fun x2002 ((x330 Int)) Int (ite (= 128 x330) 48119142951092613731468242753959111846395615040638799039548226541748339343360 (x1832 x330)))
(define-fun x1037 ((x330 Int)) Int (ite (= x330 132) x625 (x2002 x330)))
(define-fun x669 ((x330 Int)) Int (ite (= x330 128) 16284467712533504949339770971755156993396464521235680726719773044698144309248 (x1971 x330)))
(define-fun x79 ((x330 Int)) Int (ite (= 132 x330) x206 (x669 x330)))
(define-fun x650 ((x330 Int)) Int (ite (= 164 x330) x1026 (x79 x330)))
(define-fun x2146 ((x330 Int)) Int (ite (= x1484 x330) x1557 (x2494 x330)))
(define-fun x259 ((x330 x1761)) Int (x188 x330))
(define-fun x2100 ((x330 x1761)) Int (x1244 x330))
(define-fun x2647 ((x330 Int)) Int (ite (= x330 128) x1026 (x1037 x330)))
(define-fun x1770 ((x330 Int)) Int (ite x380 (x1037 x330) (x2647 x330)))
(define-fun x1488 ((x330 Int)) Int (ite (= x873 x330) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1770 x330)))
(define-fun x1749 ((x330 Int)) Int (ite (= x218 x330) x336 (x1488 x330)))
(define-fun x1741 ((x330 Int)) Int (ite (= x330 x1564) x534 (x1749 x330)))
(define-fun x541 ((x330 Int)) Int (ite (= x330 0) 1 (x1982 x330)))
(define-fun x2386 ((x330 Int)) Int (ite (= x330 0) 1 (x1982 x330)))
(define-fun x1726 ((x330 Int)) Int (ite (= x330 0) 1 (x1982 x330)))
(define-fun x689 ((x330 Int)) Int (ite (= 0 x330) 1 (x1982 x330)))
(define-fun x654 ((x330 x1761)) Int (ite (= x2312 x330) x1893 (x1152 x330)))
(define-fun x1545 ((x330 x1761)) Int (ite (= x330 x255) x785 (x1764 x330)))
(define-fun x2657 ((x330 x1761)) Int (ite (= x330 x719) x1840 (x1610 x330)))
(define-fun x2524 ((x330 Int)) Int (ite x592 (x1982 x330) (x541 x330)))
(define-fun x952 ((x330 Int)) Int (ite x241 (x1982 x330) (x2386 x330)))
(define-fun x1534 ((x330 Int)) Int (ite x1141 (x1982 x330) (x1726 x330)))
(define-fun x38 ((x330 Int)) Int (ite x29 (x1982 x330) (x689 x330)))
(define-fun x1227 ((x330 Int)) Int (ite x2440 (x2524 x330) (ite x601 (x952 x330) (ite x2560 (x1534 x330) (x38 x330)))))
(define-fun x1354 ((x330 Int)) Int (ite (= x330 128) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x650 x330)))
(define-fun x1258 ((x330 Int)) Int (ite (= 132 x330) x206 (x1354 x330)))
(define-fun x1468 ((x330 Int)) Int (ite (= 164 x330) x1026 (x1258 x330)))
(define-fun x417 ((x330 Int)) Int (ite (= x330 0) 1 (x779 x330)))
(define-fun x2131 ((x330 Int)) Int (ite (= x330 0) 1 (x779 x330)))
(define-fun x1042 ((x330 Int)) Int (ite (= 0 x330) x1026 (x2446 x330)))
(define-fun x1932 ((x330 Int)) Int (ite (= x330 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x453 x330)))
(define-fun x1128 ((x330 Int)) Int (ite (= x330 132) x1589 (x1932 x330)))
(define-fun x2133 ((x330 Int)) Int (ite (= x330 164) x129 (x1128 x330)))
(define-fun x1230 ((x330 Int)) Int (ite (= 0 x330) 1 (x353 x330)))
(define-fun x945 ((x330 Int)) Int (ite (= x330 128) 1 (x2133 x330)))
(define-fun x861 ((x330 Int)) Int (ite (= 0 x330) 1 (x353 x330)))
(define-fun x1696 ((x330 Int)) Int (ite (= 128 x330) 1 (x2133 x330)))
(define-fun x2469 ((x330 Int)) Int (ite (= x330 0) 1 (x353 x330)))
(define-fun x1977 ((x330 Int)) Int (ite (= 128 x330) 1 (x2133 x330)))
(define-fun x1259 ((x330 Int)) Int (ite (= x330 0) 1 (x353 x330)))
(define-fun x1433 ((x330 Int)) Int (ite (= 128 x330) 1 (x2133 x330)))
(define-fun x1093 ((x330 Int)) Int (ite x53 (ite x584 (x2133 x330) (x945 x330)) (ite x1278 (ite x500 (x2133 x330) (x1696 x330)) (ite x721 (ite x670 (x2133 x330) (x1977 x330)) (ite x1606 (x2133 x330) (x1433 x330))))))
(define-fun x303 ((x330 Int)) Int (ite (= x727 x330) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1093 x330)))
(define-fun x1312 ((x330 Int)) Int (ite (= x330 x802) x1589 (x303 x330)))
(define-fun x1235 ((x330 Int)) Int (ite (= x2535 x330) x192 (x1312 x330)))
(define-fun x473 ((x330 Int)) Int (ite (= 0 x330) 1 (x2598 x330)))
(define-fun x962 ((x330 Int)) Int (ite (= x727 x330) 1 (x1235 x330)))
(define-fun x860 ((x330 Int)) Int (ite (= x330 0) 1 (x2598 x330)))
(define-fun x1245 ((x330 Int)) Int (ite (= x727 x330) 1 (x1235 x330)))
(define-fun x904 ((x330 Int)) Int (ite (= x330 0) 1 (x2598 x330)))
(define-fun x2426 ((x330 Int)) Int (ite (= x727 x330) 1 (x1235 x330)))
(define-fun x2128 ((x330 Int)) Int (ite (= 0 x330) 1 (x2598 x330)))
(define-fun x2227 ((x330 Int)) Int (ite (= x330 x727) 1 (x1235 x330)))
(define-fun x207 ((x330 Int)) Int (ite x704 (ite x2667 (x1235 x330) (x962 x330)) (ite x2545 (ite x254 (x1235 x330) (x1245 x330)) (ite x1009 (ite x1356 (x1235 x330) (x2426 x330)) (ite x2317 (x1235 x330) (x2227 x330))))))
(define-fun x1423 ((x330 Int)) Int (ite (= x330 x2677) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x207 x330)))
(define-fun x1082 ((x330 Int)) Int (ite (= x1868 x330) x1589 (x1423 x330)))
(define-fun x2189 ((x330 Int)) Int (ite (= x602 x330) x1293 (x1082 x330)))
(define-fun x1188 ((x330 Int)) Int (ite (= 0 x330) 1 (x1031 x330)))
(define-fun x947 ((x330 Int)) Int (ite (= x330 0) 1 (x1031 x330)))
(define-fun x699 ((x330 Int)) Int (ite (= x330 0) 1 (x1031 x330)))
(define-fun x2195 ((x330 Int)) Int (ite (= x330 0) 1 (x1031 x330)))
(define-fun x2497 ((x330 Int)) Int (ite (= 128 x330) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x114 x330)))
(define-fun x857 ((x330 Int)) Int (ite (= x330 132) x290 (x2497 x330)))
(define-fun x879 ((x330 Int)) Int (ite (= 164 x330) x2665 (x857 x330)))
(define-fun x2355 ((x330 Int)) Int (ite (= x330 0) 1 (x2512 x330)))
(define-fun x2254 ((x330 Int)) Int (ite (= 128 x330) 1 (x879 x330)))
(define-fun x1328 ((x330 Int)) Int (ite (= x330 0) 1 (x2512 x330)))
(define-fun x833 ((x330 Int)) Int (ite (= x330 128) 1 (x879 x330)))
(define-fun x2562 ((x330 Int)) Int (ite (= x330 0) 1 (x2512 x330)))
(define-fun x2344 ((x330 Int)) Int (ite (= 128 x330) 1 (x879 x330)))
(define-fun x2364 ((x330 Int)) Int (ite (= 0 x330) 1 (x2512 x330)))
(define-fun x243 ((x330 Int)) Int (ite (= x330 128) 1 (x879 x330)))
(define-fun x2222 ((x330 Int)) Int (ite x778 (ite x2623 (x879 x330) (x2254 x330)) (ite x1417 (ite x832 (x879 x330) (x833 x330)) (ite x1628 (ite x2168 (x879 x330) (x2344 x330)) (ite x364 (x879 x330) (x243 x330))))))
(define-fun x5 ((x330 Int)) Int (ite (= x578 x330) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2222 x330)))
(define-fun x1241 ((x330 Int)) Int (ite (= x330 x1048) x290 (x5 x330)))
(define-fun x72 ((x330 Int)) Int (ite (= x330 x2104) x1427 (x1241 x330)))
(define-fun x2478 ((x330 Int)) Int (ite (= x330 0) 1 (x379 x330)))
(define-fun x1500 ((x330 Int)) Int (ite (= x578 x330) 1 (x72 x330)))
(define-fun x1471 ((x330 Int)) Int (ite (= x330 0) 1 (x379 x330)))
(define-fun x855 ((x330 Int)) Int (ite (= x330 x578) 1 (x72 x330)))
(define-fun x781 ((x330 Int)) Int (ite (= x330 0) 1 (x379 x330)))
(define-fun x1211 ((x330 Int)) Int (ite (= x578 x330) 1 (x72 x330)))
(define-fun x1774 ((x330 Int)) Int (ite (= 0 x330) 1 (x379 x330)))
(define-fun x519 ((x330 Int)) Int (ite (= x578 x330) 1 (x72 x330)))
(define-fun x1714 ((x330 Int)) Int (ite x675 (ite x596 (x72 x330) (x1500 x330)) (ite x200 (ite x1310 (x72 x330) (x855 x330)) (ite x1319 (ite x511 (x72 x330) (x1211 x330)) (ite x1109 (x72 x330) (x519 x330))))))
(define-fun x2662 ((x330 Int)) Int (ite (= x330 x671) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1714 x330)))
(define-fun x1309 ((x330 Int)) Int (ite (= x330 x759) x290 (x2662 x330)))
(define-fun x177 ((x330 Int)) Int (ite (= x330 x1254) x195 (x1309 x330)))
(define-fun x1707 ((x330 Int)) Int (ite (= 0 x330) 1 (x341 x330)))
(define-fun x35 ((x330 Int)) Int (ite (= 0 x330) 1 (x341 x330)))
(define-fun x258 ((x330 Int)) Int (ite (= 0 x330) 1 (x341 x330)))
(define-fun x2412 ((x330 Int)) Int (ite (= x330 0) 1 (x341 x330)))
(define-fun x1473 ((x330 Int)) Int (ite x1250 (x779 x330) (x417 x330)))
(define-fun x1402 ((x330 Int)) Int (ite x2224 (x779 x330) (x2131 x330)))
(define-fun x1181 ((x330 Int)) Int (ite x1873 (x1473 x330) (x1402 x330)))
(define-fun x538 ((x330 Int)) Int (ite x2667 (x2598 x330) (x473 x330)))
(define-fun x648 ((x330 Int)) Int (ite x254 (x2598 x330) (x860 x330)))
(define-fun x1711 ((x330 Int)) Int (ite x1356 (x2598 x330) (x904 x330)))
(define-fun x2115 ((x330 Int)) Int (ite x2317 (x2598 x330) (x2128 x330)))
(define-fun x2691 ((x330 Int)) Int (ite x704 (x538 x330) (ite x2545 (x648 x330) (ite x1009 (x1711 x330) (x2115 x330)))))
(define-fun x1349 ((x330 Int)) Int (ite x1721 (x1031 x330) (x1188 x330)))
(define-fun x1585 ((x330 Int)) Int (ite x250 (x1031 x330) (x947 x330)))
(define-fun x2666 ((x330 Int)) Int (ite x2582 (x1031 x330) (x699 x330)))
(define-fun x1703 ((x330 Int)) Int (ite x1996 (x1031 x330) (x2195 x330)))
(define-fun x1266 ((x330 Int)) Int (ite x83 (x1349 x330) (ite x2546 (x1585 x330) (ite x780 (x2666 x330) (x1703 x330)))))
(define-fun x717 ((x330 Int)) Int (ite x596 (x379 x330) (x2478 x330)))
(define-fun x1592 ((x330 Int)) Int (ite x1310 (x379 x330) (x1471 x330)))
(define-fun x2583 ((x330 Int)) Int (ite x511 (x379 x330) (x781 x330)))
(define-fun x585 ((x330 Int)) Int (ite x1109 (x379 x330) (x1774 x330)))
(define-fun x2373 ((x330 Int)) Int (ite x675 (x717 x330) (ite x200 (x1592 x330) (ite x1319 (x2583 x330) (x585 x330)))))
(define-fun x1179 ((x330 Int)) Int (ite x1848 (x341 x330) (x1707 x330)))
(define-fun x516 ((x330 Int)) Int (ite x1333 (x341 x330) (x35 x330)))
(define-fun x1975 ((x330 Int)) Int (ite x2194 (x341 x330) (x258 x330)))
(define-fun x1394 ((x330 Int)) Int (ite x438 (x341 x330) (x2412 x330)))
(define-fun x73 ((x330 Int)) Int (ite x1635 (x1179 x330) (ite x1544 (x516 x330) (ite x1440 (x1975 x330) (x1394 x330)))))
(define-fun x210 ((x1332 Int)) Bool (=> (and (not (= x1332 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1332 604024478)) (not (= 872247156 x1332)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1332)) (not (= x1332 65943510083598082279227955258803319933472635617035506777028864765220054106112)) (not (= x1332 72223263258191293651604190264004579703475585967499159981614695267027195527168)) (not (= x1332 614698425)) (not (= 3459381112 x1332)) (not (= 565014339 x1332)) (not (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x1332)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1332)) (not (= 1461501637330902918203684832716283019655932542976 x1332)) (not (= 3053082678 x1332)) (not (= x1332 3648997476)) (not (= 74228146054641364427485594382366355075153451190847473373747070783662162182144 x1332)) (not (= 1784838210 x1332)) (> x1332 10000) (not (= x1332 3467235951)) (not (= x1332 16284467712533504949339770971755156993396464521235680726719773044698144309248)) (not (= 2569309863 x1332)) (not (= 2737736067 x1332)) (not (= x1332 2514000705)) (not (= 1926446194 x1332)) (not (= 2867092931 x1332)) (not (= x1332 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x1332 1461501637330902918203684832716283019655932542975)) (not (= 3756033516 x1332)) (not (= x1332 2646777772)) (not (= 2678909723 x1332)) (not (= 2753274959 x1332)) (not (= 2835717307 x1332)) (not (= 18446744073709551615 x1332)) (not (= x1332 2445980732)) (not (= x1332 1889567281)) (not (= 48119142951092613731468242753959111846395615040638799039548226541748339343360 x1332)) (not (= x1332 856900995)) (not (= x1332 2952933380)) (not (= 826074471 x1332)) (not (= 1086394137 x1332))) (not ((_ is x71) (x2619 x1332)))))
(assert (x593 x2577))
(assert (x593 x1475))
(assert (x593 x2661))
(assert (= x167 (and x1038 x783)))
(assert (x593 x2049))
(assert (= x1290 (and (not x2110) x2307)))
(assert (= x460 (and x162 x928)))
(assert (= (and (not x580) x2486) x2490))
(assert (= x686 (and x2516 x1199)))
(assert (x593 x1968))
(assert (x593 x1805))
(assert (x593 x1322))
(assert (x593 x710))
(assert (= (and x1583 (not x1129)) x1422))
(assert (x593 x831))
(assert (x593 x1055))
(assert (x593 x2558))
(assert (= x763 (and x1803 (not x2272))))
(assert (= (and x2431 (not x2614)) x1524))
(assert (= (and (not x2372) x612) x2620))
(assert (x593 x929))
(assert (x593 x466))
(assert (x593 x563))
(assert (x593 x2471))
(assert (= (and x2354 x1482) x1208))
(assert (x593 x388))
(assert (= x441 (and (not x1198) x399)))
(assert (x593 x1113))
(assert (x593 x2097))
(assert (x593 x476))
(assert (x593 x2609))
(assert (x593 x1828))
(assert (= x521 (=> (> x620 0) x1810)))
(assert (x593 x1778))
(assert (= (and (not x932) x277) x2250))
(assert (= (x2619 2753274959) (x71 2753274959)))
(assert (=> (<= x76 10000) (= (x71 x76) (x2619 x76))))
(assert (= x2290 (=> (and (or (not x1646) x1646) (= x1646 (= 0 x1837))) x2682)))
(assert (= (x2465 (x71 3648997476)) 3648997476))
(assert (x2381 x1519))
(assert (x593 x774))
(assert (= (and x2696 (not x2650)) x1630))
(assert (x2381 x1924))
(assert (x593 x1158))
(assert (x593 x394))
(assert (=> (<= x1589 10000) (= (x71 x1589) (x2619 x1589))))
(assert (x593 x1573))
(assert (x593 x2534))
(assert (x593 x101))
(assert (= x1874 (and x2084 x2539)))
(assert (= x1650 (and (not x1357) x517)))
(assert (=> (<= x2072 10000) (= (x2619 x2072) (x71 x2072))))
(assert (x593 x2566))
(assert (= (=> (and (= x1837 x2365) (= x2285 x2023)) x2290) x2403))
(assert (=> (>= 10000 x448) (= (x2619 x448) (x71 x448))))
(assert (= x257 (and x1884 x703)))
(assert (= (x2619 2867092931) (x71 2867092931)))
(assert (= (and (not x1187) x535) x1746))
(assert (= (and x2553 x2468) x2081))
(assert (= (and x943 (not x305)) x1867))
(assert (x593 x1940))
(assert (x210 x2361))
(assert (= x2430 (or x2445 x2005)))
(assert (= x864 (and x1838 x1291)))
(assert (x593 x59))
(assert (= (or x1109 x175) x988))
(assert (= (and x951 x482) x1491))
(assert (= (x2465 (x71 1086394137)) 1086394137))
(assert (= x723 (x2465 (x2619 x723))))
(assert (= (and (not x2539) x2084) x616))
(assert (x593 x1292))
(assert (= x282 (and x2236 (not x2212))))
(assert (= (or x696 (and (not x2376) x1059)) x307))
(assert (= (x2465 (x2619 x491)) x491))
(assert (x593 x2495))
(assert (= x968 (and (not x2018) x2158)))
(assert (= x1368 (x2465 (x2619 x1368))))
(assert (= (and x366 x1949) x1139))
(assert (x593 x555))
(assert (= x621 (=> (and (= x809 x1549) (= x819 x2362)) x1021)))
(assert (x593 x280))
(assert (x593 x190))
(assert (= (or x17 x47) x1257))
(assert (= (and x1264 (not x1010)) x1019))
(assert (x593 x1260))
(assert (= (x2465 (x112 x1214 1)) (+ (x2465 x1214) 1)))
(assert (= (and (not x2450) x637) x1370))
(assert (x593 x1682))
(assert (= (=> (and (= x127 0) (= x1331 x1302)) x74) x262))
(assert (x593 x2266))
(assert (= x1583 (and x1139 (not x1474))))
(assert (= x1167 (and x921 x1298)))
(assert (= x1311 (and x189 (not x562))))
(assert (x593 x1243))
(assert (x593 x2226))
(assert (x593 x1050))
(assert (= x1217 (or x2303 (and (not x1212) x2200))))
(assert (= x1262 (and x2454 x1733)))
(assert (x593 x2434))
(assert (x593 x1928))
(assert (= (and x720 x1935) x161))
(assert (x593 x1699))
(assert (x593 x872))
(assert (x593 x1559))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2465 (x71 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x593 x292))
(assert (x593 x679))
(assert (= x1059 (or x113 x1544 x1635 x1440)))
(assert (x593 x178))
(assert (x593 x1160))
(assert (= x961 (and x2034 x2123)))
(assert (= 856900995 (x2465 (x71 856900995))))
(assert (x593 x918))
(assert (x593 x671))
(assert (= x742 (and x2036 x1709)))
(assert (x593 x1909))
(assert (= (and (not x1598) x2060) x1079))
(assert (x593 x1335))
(assert (= (x71 48119142951092613731468242753959111846395615040638799039548226541748339343360) (x2619 48119142951092613731468242753959111846395615040638799039548226541748339343360)))
(assert (= x2187 (and x1296 x1981)))
(assert (x593 x2491))
(assert (= (=> (and (= x1206 x1584) (= x2039 x1536)) x1412) x2568))
(assert (= x1157 (and (not x556) x1375)))
(assert (= (and x350 x2393) x2601))
(assert (= (x71 604024478) (x2619 604024478)))
(assert (x593 x714))
(assert (x593 x753))
(assert (x593 x1015))
(assert (= x2572 (and x2074 x2652)))
(assert (= x1271 (or x770 x1336 x1684 x2620 x1314)))
(assert (= (and x617 x1880) x1613))
(assert (= (and x2668 x1708) x1811))
(assert (= x1421 (and x360 x1186)))
(assert (= (and x294 (not x2078)) x61))
(assert (x593 x557))
(assert (= x800 (or (and (not x1611) x705) x1378 (and x21 x2659))))
(assert (= x1965 (=> (and (= x1302 x2343) (= x1602 0)) x44)))
(assert (x593 x2551))
(assert (= x2687 (and x2382 (not x157))))
(assert (x593 x802))
(assert (x593 x56))
(assert (x593 x1334))
(assert (= (and x1395 (not x1299)) x2050))
(assert (x593 x1936))
(assert (x210 x283))
(assert (x593 x2062))
(assert (= (and x2334 x2669) x470))
(assert (x593 x2032))
(assert (= x406 (and x419 x221)))
(assert (x593 x1110))
(assert (= x427 (and x758 x2638)))
(assert (x593 x1242))
(assert (= (or x544 x542 x2385 x328 x137 x549) x1333))
(assert (= x828 (=> (and (= (x19 (x2619 x347) x971 0) x1641) (= (x259 x1641) x129) (<= 0 x129) (= x285 (= x1664 x448)) (= x1664 (x1958 1461501637330902918203684832716283019655932542975 x1160)) (= 128 x1691) (= (x1958 1461501637330902918203684832716283019655932542975 x1160) x283) (= x971 (x19 (x2619 x283) (x71 17) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x129)) (and (=> (and x285 (and (= x1805 (x2484 (x2619 x448))) (= (or (and (< x374 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x374))) (> x374 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x78) (= x129 x1956) (= x374 (x2052 (- x115 4))) (= x1233 x2502) (< 0 x1805) (not (> 2646777772 x995)) (< x995 3053082678) (= x115 68) (= x2408 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 1889567281 x995)) (= x115 68) (not (= 2678909723 x995)) (not (= 2646777772 x995)) (not (> 4 x115)) (= 2835717307 x995))) (and (=> x78 x2538) (=> (and (= (= x1233 x2502) x985) (not x78)) (and (=> (not x985) x2538) (=> (and (and (<= x938 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x938) (= (< x938 x129) x605) (= (x19 (x2619 x2001) (x71 2) 0) x1695) (= (x772 x1695) x938) (= x1956 x576)) x985) (and (=> x605 x2538) (=> (and (not x605) (= (> x1956 x938) x1713)) (and (=> x1713 x2538) (=> (and (and (= x1067 (x2052 (- x938 x1956))) (= x2452 (x19 (x2619 x1589) (x71 2) 0)) (= x1089 (x1439 x2452)) (<= 0 x1089) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1956)) x1247) (= (< x1247 x1089) x1286) (= (x19 (x2619 x2001) (x71 2) 0) x1324) (<= x1089 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1713)) (and (=> x1286 x2538) (=> (and (not x1286) (and (= x1052 (x2155 (+ x1956 x1089))) (= x2020 (> x1089 x1052)))) (and (=> x2020 x2538) (=> (and (not x2020) (and (= x1754 32) (= x1896 1) (= (x19 (x2619 x1589) (x71 2) 0) x1634))) x1692))))))))))))) (=> (and (not x285) (= (= x2001 x1664) x2580)) (and (=> (and (= x1612 (= x1664 x1877)) (not x2580)) (and (=> (and x1612 (and (= 2835717307 x613) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x461) (= x382 (x2484 (x2619 x1877))) (not (= x613 826074471)) (= x2502 x211) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2495) true) (< x2495 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2495)) x1320) (= x129 x2551) (not (< x2206 4)) (= 68 x2206) (not (< x613 826074471)) (< 0 x382) (= x2495 (x2052 (- x2206 4))) (not (= x613 2514000705)) (not (= x613 1889567281)) (= x2206 68))) (and (=> x1320 x1715) (=> (and (not x1320) (= (= x2502 x211) x2441)) (and (=> (and (and (= x398 (x2443 x1984)) (= x2308 (> x129 x398)) (<= x398 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x398 0) (= x2551 x680) (= x1984 (x19 (x2619 x2001) (x71 1) 0))) x2441) (and (=> (and (= x1639 (< x398 x2551)) (not x2308)) (and (=> (and (and (<= x756 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x19 (x2619 x1589) (x71 1) 0) x376) (= (x2294 x376) x756) (= (x19 (x2619 x2001) (x71 1) 0) x933) (<= 0 x756) (= (x2052 (- x398 x2551)) x502) (= (> x756 x1344) x1149) (= x1344 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2551)))) (not x1639)) (and (=> x1149 x1715) (=> (and (not x1149) (and (= x2137 (> x756 x522)) (= x522 (x2155 (+ x2551 x756))))) (and (=> (and (and (= x697 (x19 (x2619 x1589) (x71 1) 0)) (= 1 x1694) (= x2519 1) (= x1730 32)) (not x2137)) x1511) (=> x2137 x1715))))) (=> x1639 x1715))) (=> x2308 x1715))) (=> (not x2441) x1715))))) (=> (and (not x1612) (and (= (= x1664 x863) x366) (and (and (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1229) true) (< x1229 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1229)) x1474) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1930) (= x129 x2487) (= 68 x155) (not (= 826074471 x1847)) (not (< x1847 826074471)) (not (< x155 4)) (= x2502 x796) (= (x2484 (x2619 x863)) x2565) (= 2835717307 x1847) (not (= 1889567281 x1847)) (= 68 x155) (= (x2052 (- x155 4)) x1229) (> x2565 0) (not (= 2514000705 x1847))) x366))) (and (=> x1474 x2617) (=> (and (= (= x796 x2502) x1129) (not x1474)) (and (=> (not x1129) x2617) (=> (and x1129 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2626) (= x2487 x106) (<= 0 x2626) (= x2626 (x2288 x2181)) (= x2181 (x19 (x2619 x2001) (x71 1) 0)) (= x1083 (< x2626 x129)))) (and (=> (and (= x1631 (> x2487 x2626)) (not x1083)) (and (=> (and (and (= (x19 (x2619 x1589) (x71 1) 0) x1512) (= x1178 (< x1004 x2292)) (= x2292 (x9 x1512)) (= (x19 (x2619 x2001) (x71 1) 0) x2161) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2292) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2487)) x1004) (<= 0 x2292) (= (x2052 (- x2626 x2487)) x2210)) (not x1631)) (and (=> (and (not x1178) (and (= (x2155 (+ x2487 x2292)) x710) (= (< x710 x2292) x1957))) (and (=> (and (not x1957) (and (= 1 x1191) (= 1 x754) (= x1099 32) (= x1960 (x19 (x2619 x1589) (x71 1) 0)))) x2118) (=> x1957 x2617))) (=> x1178 x2617))) (=> x1631 x2617))) (=> x1083 x2617))))))))) (=> (and x2580 (and (= x2031 x129) (= x1475 (x2052 (- x970 4))) (> x2032 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1629) (not (= 2678909723 x1158)) (not (= 2646777772 x1158)) (= (or (and (> 64 x1475) (= true (<= x1475 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1475 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2106) (= x970 68) (not (< x1158 2646777772)) (= (x2484 (x2619 x2001)) x2032) (= 2835717307 x1158) (not (< x1158 1889567281)) (not (< x970 4)) (= x2397 x2502) (> 3053082678 x1158) (= 68 x970))) (and (=> (and (= x1866 (= x2397 x2502)) (not x2106)) (and (=> (and x1866 (and (= (x949 x1441) x850) (= (> x129 x850) x1103) (<= 0 x850) (= x2031 x1380) (<= x850 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x19 (x2619 x2001) (x71 2) 0) x1441))) (and (=> x1103 x2004) (=> (and (not x1103) (= x2450 (< x850 x2031))) (and (=> x2450 x2004) (=> (and (not x2450) (and (= (x19 (x2619 x2001) (x71 2) 0) x168) (>= x1106 0) (= (< x2493 x1106) x1851) (= x1285 (x2052 (- x850 x2031))) (= x1106 (x531 x2217)) (= (x19 (x2619 x1589) (x71 2) 0) x2217) (= x2493 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2031))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1106))) (and (=> (and (and (= (x2155 (+ x1106 x2031)) x110) (= (< x110 x1106) x1769)) (not x1851)) (and (=> x1769 x2004) (=> (and (and (= x333 1) (= x990 (x19 (x2619 x1589) (x71 2) 0)) (= 32 x2015)) (not x1769)) x45))) (=> x1851 x2004))))))) (=> (not x1866) x2004))) (=> x2106 x2004)))))))))
(assert (= x853 (and (not x506) x2304)))
(assert (= x2072 (x2465 (x2619 x2072))))
(assert (= (and x291 (not x369)) x2304))
(assert (x593 x1552))
(assert (= x2299 (and x2404 (not x148))))
(assert (= (=> (and (= x439 x1076) (= x94 x1301)) x1306) x445))
(assert (x593 x1901))
(assert (= x2248 (and x2134 x2595)))
(assert (= x90 (and x2572 (not x1917))))
(assert (x593 x984))
(assert (x593 x1854))
(assert (x593 x674))
(assert (x593 x1796))
(assert (x593 x1878))
(assert (= (and (not x1320) x1516) x2410))
(assert (x593 x1004))
(assert (= (=> (= (= 0 x1060) x1303) (and (=> x1303 x371) (=> (and (and (= x1924 (x2155 (+ 31 x2073))) (= x578 (x2155 (+ 128 x1561))) (= (x1958 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1924) x1561) (= x2134 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2073)) (> 32 x2073)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2073)))) (not x1303)) (and (=> (and (not x2134) (and (= (x2052 (- x2713 x578)) x2684) (= x2464 (x19 (x2619 x355) x2561 0)) (> 1461501637330902918203684832716283019655932542976 x204) (= x1189 (= x448 x204)) (= x2561 (x19 (x2619 x204) (x71 17) 0)) (= (x2100 x2464) x1427) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1427) (= (x2155 (+ 4 x578)) x1048) (>= x1427 0) (= (x2155 (+ x1048 64)) x2713) (< x204 1461501637330902918203684832716283019655932542976) (= (x2155 (+ 32 x1048)) x2104))) (and (=> (and (= x2457 (= x204 x2001)) (not x1189)) (and (=> (and (and (not (> 4 x2066)) (not (= 2678909723 x527)) (= x2232 x1427) (= x146 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2646777772 x527)) (= x2511 (or (> x1669 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1669) true) (> 64 x1669)))) (= x1669 (x2052 (- x2066 4))) (< 0 x1316) (= x2066 x2684) (not (= 2646777772 x527)) (> 3053082678 x527) (not (< x527 1889567281)) (= x611 x466) (= x527 2835717307) (= 68 x2066) (= x1316 (x2484 (x2619 x2001)))) x2457) (and (=> (and (not x2511) (= x2704 (= x611 x466))) (and (=> (and (and (<= 0 x176) (= (< x176 x1427) x2092) (= x1017 (x19 (x2619 x448) (x71 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x176) (= x2232 x1527) (= x176 (x2447 x1017))) x2704) (and (=> (and (not x2092) (= x1772 (> x2232 x176))) (and (=> x1772 x1665) (=> (and (and (= (x627 x2409) x134) (>= x134 0) (= x415 (x19 (x2619 x448) (x71 2) 0)) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2232)) x821) (= x2409 (x19 (x2619 x290) (x71 2) 0)) (<= x134 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2555 (> x134 x821)) (= (x2052 (- x176 x2232)) x1020)) (not x1772)) (and (=> x2555 x1665) (=> (and (and (= x157 (< x1391 x134)) (= (x2155 (+ x2232 x134)) x1391)) (not x2555)) (and (=> x157 x1665) (=> (and (not x157) (and (= 1 x2604) (= (x19 (x2619 x290) (x71 2) 0) x672) (= 32 x324))) x205))))))) (=> x2092 x1665))) (=> (not x2704) x1665))) (=> x2511 x1665))) (=> (and (= (= x1877 x204) x739) (not x2457)) (and (=> (and (and (and (and (not (> 4 x343)) (= x1917 (or (> x2492 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x2492) (= (<= x2492 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1274 x466) (= x2615 x1427) (= x1727 2835717307) (= (x2052 (- x343 4)) x2492) (not (= 1889567281 x1727)) (not (= x1727 826074471)) (= (x2484 (x2619 x863)) x220) (= x2684 x343) (not (= x1727 2514000705)) (= x1757 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x220 0) (= 68 x343) (not (< x1727 826074471))) x2074) (= x2074 (= x863 x204))) (not x739)) (and (=> x1917 x960) (=> (and (not x1917) (= (= x1274 x466) x766)) (and (=> (and x766 (and (= x2615 x1908) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2587) (= (x19 (x2619 x448) (x71 1) 0) x1269) (= (x408 x1269) x2587) (<= 0 x2587) (= x822 (> x1427 x2587)))) (and (=> (and (= (> x2615 x2587) x1555) (not x822)) (and (=> (and (not x1555) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x153) (= x2301 (x19 (x2619 x448) (x71 1) 0)) (= x2298 (x2052 (- x2587 x2615))) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2615)) x1185) (= (x19 (x2619 x290) (x71 1) 0) x2289) (>= x153 0) (= (> x153 x1185) x1565) (= x153 (x1003 x2289)))) (and (=> (and (and (= x1448 (x2155 (+ x153 x2615))) (= x2378 (> x153 x1448))) (not x1565)) (and (=> (and (not x2378) (and (= x2023 32) (= x430 1) (= x1096 (x19 (x2619 x290) (x71 1) 0)) (= 1 x2365))) x2403) (=> x2378 x960))) (=> x1565 x960))) (=> x1555 x960))) (=> x822 x960))) (=> (not x766) x960))))) (=> (and x739 (and (= x1427 x1719) (not (= 826074471 x665)) (= x466 x2056) (not (< x2706 4)) (> x4 0) (= x2684 x2706) (not (= 1889567281 x665)) (= 2835717307 x665) (not (< x665 826074471)) (= 68 x2706) (= (or (and (= (<= x615 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x615 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x615)) x562) (not (= 2514000705 x665)) (= (x2052 (- x2706 4)) x615) (= x1789 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x4 (x2484 (x2619 x1877))))) (and (=> x562 x1998) (=> (and (= (= x2056 x466) x1162) (not x562)) (and (=> (and x1162 (and (<= x1469 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x19 (x2619 x448) (x71 1) 0) x525) (= x928 (< x1469 x1427)) (= x1469 (x1338 x525)) (<= 0 x1469) (= x318 x1719))) (and (=> (and (= x546 (> x1719 x1469)) (not x928)) (and (=> x546 x1998) (=> (and (and (= (x19 (x2619 x290) (x71 1) 0) x1159) (= x297 (x2711 x1159)) (= x1007 (x2052 (- x1469 x1719))) (<= 0 x297) (= x2525 (x19 (x2619 x448) (x71 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x297) (= (> x297 x2508) x2454) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1719)) x2508)) (not x546)) (and (=> (and (not x2454) (and (= x1044 (< x1039 x297)) (= (x2155 (+ x297 x1719)) x1039))) (and (=> (and (and (= x284 (x19 (x2619 x290) (x71 1) 0)) (= x1350 1) (= x1095 1) (= x1365 32)) (not x1044)) x1869) (=> x1044 x1998))) (=> x2454 x1998))))) (=> x928 x1998))) (=> (not x1162) x1998))))))))) (=> (and x1189 (and (not (= x489 2678909723)) (> x388 0) (not (> 1889567281 x489)) (not (> 4 x2419)) (= 2835717307 x489) (= (x2052 (- x2419 4)) x1090) (not (= x489 2646777772)) (= x1113 x466) (< x489 3053082678) (= x388 (x2484 (x2619 x448))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x552) (= x1055 x1427) (not (< x489 2646777772)) (= x2684 x2419) (= (or (> x1090 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1090 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1090 64))) x1038) (= x2419 68))) (and (=> x1038 x1371) (=> (and (not x1038) (= (= x466 x1113) x63)) (and (=> (and (and (>= x2505 0) (= (x19 (x2619 x448) (x71 2) 0) x2025) (= x1006 x1055) (= x2505 (x807 x2025)) (= x1822 (> x1427 x2505)) (<= x2505 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x63) (and (=> (and (= x818 (> x1055 x2505)) (not x1822)) (and (=> x818 x1371) (=> (and (not x818) (and (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055)) x455) (= x2411 (< x455 x1831)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1831) (= x420 (x2052 (- x2505 x1055))) (= (x19 (x2619 x448) (x71 2) 0) x2246) (= (x19 (x2619 x290) (x71 2) 0) x1249) (<= 0 x1831) (= (x68 x1249) x1831))) (and (=> x2411 x1371) (=> (and (not x2411) (and (= x60 (x2155 (+ x1055 x1831))) (= (> x1831 x60) x951))) (and (=> (and (and (= x1537 (x19 (x2619 x290) (x71 2) 0)) (= 1 x1559) (= x897 32)) (not x951)) x2401) (=> x951 x1371))))))) (=> x1822 x1371))) (=> (not x63) x1371))))))) (=> x2134 x371))))) x539))
(assert (x593 x863))
(assert (= (and x154 x1782) x2688))
(assert (x593 x2197))
(assert (=> (>= 10000 x723) (= (x71 x723) (x2619 x723))))
(assert (x593 x1088))
(assert (x593 x1233))
(assert (= x2418 (and x1942 x533)))
(assert (= (x71 1461501637330902918203684832716283019655932542975) (x2619 1461501637330902918203684832716283019655932542975)))
(assert (x593 x456))
(assert (= (and x577 x2707) x1343))
(assert (x593 x2713))
(assert (= (=> (and (<= x1026 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x2399) (= 32 x709) (<= 0 x1026)) x138) x2257))
(assert (= (x2619 29289127993025145568725129057828671567744754166070328588094505464281371246592) (x71 29289127993025145568725129057828671567744754166070328588094505464281371246592)))
(assert (= x517 (and x1943 (not x226))))
(assert (= (or x1463 x1659 x257 x1594 x1677 x763) x1141))
(assert (x593 x2492))
(assert (= (and x2299 x2680) x137))
(assert (x593 x1301))
(assert (= x2599 (and x57 (not x867))))
(assert (x593 x2436))
(assert (= (or x241 x2214) x601))
(assert (x593 x917))
(assert (=> (<= x1270 10000) (= (x2619 x1270) (x71 x1270))))
(assert (x593 x1464))
(assert (= x1762 (and (not x1431) x673)))
(assert (x2384 x1562))
(assert (= x1118 (and x2129 (not x2537))))
(assert (x593 x1727))
(assert (x593 x931))
(assert (x593 x1818))
(assert (x593 x2208))
(assert (x593 x1275))
(assert (x593 x1716))
(assert (x593 x1090))
(assert (x593 x264))
(assert (x593 x1084))
(assert (x593 x884))
(assert (= (and (not x2308) x559) x1265))
(assert (x593 x2643))
(assert (x593 x862))
(assert (x593 x2251))
(assert (x210 x355))
(assert (x593 x1777))
(assert (x210 x2156))
(assert (= 2753274959 (x2465 (x71 2753274959))))
(assert (x593 x1060))
(assert (= x2371 (and x1739 (not x314))))
(assert (= (and x1548 x2337) x2547))
(assert (= x780 (or x2582 x801)))
(assert (= x1659 (and x2187 x2091)))
(assert (= (and x2158 x2018) x2036))
(assert (= (and x1228 x2605) x121))
(assert (= x2466 (and (not x985) x242)))
(assert (x593 x2035))
(assert (x593 x433))
(assert (x593 x852))
(assert (= x653 (and x965 (not x1030))))
(assert (x2381 x993))
(assert (x593 x1608))
(assert (= (and x1325 x1915) x740))
(assert (= (and x1078 (not x1771)) x597))
(assert (= x1277 (and x1603 (not x656))))
(assert (= (and (not x1689) x1217) x2252))
(assert (x210 x2679))
(assert (x593 x1730))
(assert (x593 x552))
(assert (x1116 x2661))
(assert (= (x2465 (x71 3053082678)) 3053082678))
(assert (= (=> (and (or (not x2027) x2027) (= (= x1060 0) x2027)) x539) x2683))
(assert (x593 x2548))
(assert (x593 x2067))
(assert (= (x2465 (x2619 x485)) x485))
(assert (x593 x842))
(assert (x593 x295))
(assert (x593 x439))
(assert (= (or x1118 x65) x2635))
(assert (x593 x1506))
(assert (= x1478 (and x1069 x2571)))
(assert (= (x2465 (x71 3459381112)) 3459381112))
(assert (x593 x1757))
(assert (= (x2465 (x71 614698425)) 614698425))
(assert (x593 x1391))
(assert (x593 x1922))
(assert (= (and x656 x1603) x1403))
(assert (= (or x2489 x1123) x847))
(assert (x593 x2149))
(assert (x593 x2402))
(assert (x593 x814))
(assert (= x1784 (and x1515 x1767)))
(assert (x593 x1479))
(assert (= x451 (and x304 (not x2462))))
(assert (= (and x786 (not x2239)) x565))
(assert (x593 x2541))
(assert (= (and x653 (not x11)) x1668))
(assert (x593 x2389))
(assert (x593 x725))
(assert (x593 x1450))
(assert (x593 x2230))
(assert (= (and x1794 x2414) x501))
(assert (x593 x2585))
(assert (x210 x1589))
(assert (x2381 x2366))
(assert (= x921 (and (not x2483) x1499)))
(assert (x593 x1372))
(assert (x210 x347))
(assert (= x1111 (and (not x540) x1079)))
(assert (= (=> (and (= x1260 x1972) (= x1546 x1563)) x2291) x1154))
(assert (= (and (not x276) x926) x764))
(assert (x593 x1137))
(assert (x593 x919))
(assert (= x2623 (or x1751 x646 x2656 x1222 x1759 x2527)))
(assert (x593 x1972))
(assert (= x1336 (and (not x2663) x499)))
(assert (= (=> (and (= x1837 x2604) (= x324 x2285)) x2290) x205))
(assert (= (and (not x103) x1645) x2180))
(assert (x593 x1522))
(assert (x593 x2655))
(assert (x593 x1089))
(assert (x593 x897))
(assert (x593 x126))
(assert (x593 x2213))
(assert (x593 x1647))
(assert (x593 x2338))
(assert (= (and x1539 x1758) x147))
(assert (= (x2619 2835717307) (x71 2835717307)))
(assert (= (x25 x966) 0))
(assert (= x587 (and x829 x161)))
(assert (= (or x2317 x1097) x1196))
(assert (= (and x429 x2106) x1858))
(assert (x593 x2487))
(assert (x593 x2199))
(assert (= x256 (and (not x2134) x2595)))
(assert (x593 x338))
(assert (x593 x927))
(assert (= x2632 (=> (and (= x2423 x2542) (= x2581 x2541)) x1170)))
(assert (x593 x2421))
(assert (= x154 (and x795 (not x252))))
(assert (= x32 (and x905 x687)))
(assert (x593 x2353))
(assert (= x133 (and x2457 x2265)))
(assert (= (or x2687 x1310) x200))
(assert (= (or x799 x616 x327 x2167 x1443 x843 x1166 x1080 x147 x588) x2202))
(assert (= 2445980732 (x2465 (x71 2445980732))))
(assert (x593 x1543))
(assert (= x2167 (and x2597 x1554)))
(assert (x593 x992))
(assert (= (x71 3459381112) (x2619 3459381112)))
(assert (= (and x2356 x2237) x1723))
(assert (x593 x2476))
(assert (x593 x1302))
(assert (= x617 (and x2036 (not x1709))))
(assert (= x906 (and x2702 (not x2455))))
(assert (= (or x1873 x1961) x2438))
(assert (= x987 (and x700 x853)))
(assert (x593 x707))
(assert (= x83 (or x1323 x1721)))
(assert (= x722 (and x2150 (not x605))))
(assert (= x2179 (and (not x1165) x1513)))
(assert (= x2242 (and x2278 (not x815))))
(assert (= x824 (and x1850 (not x529))))
(assert (x593 x2458))
(assert (x593 x2398))
(assert (= (and (not x2003) x2529) x655))
(assert (= x2670 (and x963 x2259)))
(assert (x593 x2121))
(assert (x593 x2400))
(assert (= x55 (and x889 x2198)))
(assert (x593 x2361))
(assert (x593 x1766))
(assert (= x2617 (=> (and (= x2185 x1099) (= x1191 0)) x2118)))
(assert (x210 x1835))
(assert (x593 x218))
(assert (x593 x1680))
(assert (x593 x486))
(assert (x593 x1131))
(assert (x593 x390))
(assert (x593 x1345))
(assert (= (and (not x1268) x2479) x1375))
(assert (x593 x817))
(assert (x593 x1267))
(assert (x593 x1176))
(assert (= x2264 (and x1644 (not x1083))))
(assert (x593 x1459))
(assert (x593 x1536))
(assert (x593 x816))
(assert (x593 x1893))
(assert (= x124 (and (not x1724) x2599)))
(assert (x593 x632))
(assert (x593 x629))
(assert (x2381 1461501637330902918203684832716283019655932542975))
(assert (= x1447 (or (and (not x1072) x532) x1283)))
(assert (= x2383 (and x2006 x2093)))
(assert (x593 x527))
(assert (x593 x2051))
(assert (x593 x938))
(assert (= (and x2569 x1772) x2504))
(assert (= (and (not x1969) x2371) x136))
(assert (= x1637 (and x1357 x517)))
(assert (= (and x2150 x605) x2349))
(assert (= x1666 (and x1304 x989)))
(assert (x593 x477))
(assert (x593 x413))
(assert (=> (<= x1760 10000) (= (x2619 x1760) (x71 x1760))))
(assert (x593 x397))
(assert (x593 x966))
(assert (= (and x1289 x1102) x1745))
(assert (= x13 (and x1686 x737)))
(assert (= x2682 (=> (= (= 0 x1837) x963) (and (=> x963 x371) (=> (and (and (= (x2155 (+ x2285 31)) x2049) (= (x2155 (+ x486 x578)) x671) (= x1101 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2285) true) (< x2285 32)) (> x2285 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x486 (x1958 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2049))) (not x963)) (and (=> x1101 x371) (=> (and (not x1101) (and (= x1254 (x2155 (+ 32 x759))) (= x759 (x2155 (+ x671 4))) (= (x2052 (- x1765 x671)) x702) (= x2629 (x19 (x2619 x478) (x71 17) 0)) (<= x195 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x478 1461501637330902918203684832716283019655932542976) (= x125 (= x478 x448)) (= (x19 (x2619 x355) x2629 0) x7) (= (x2100 x7) x195) (= x1765 (x2155 (+ 64 x759))) (>= x195 0) (> 1461501637330902918203684832716283019655932542976 x478))) (and (=> (and (and (= (x2052 (- x814 4)) x1466) (not (= 2678909723 x1025)) (= x466 x1790) (= x887 x195) (= x814 x702) (not (< x814 4)) (= (or (and (= (<= x1466 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1466 64)) (> x1466 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2354) (not (< x1025 1889567281)) (= x1216 (x2484 (x2619 x448))) (not (= 2646777772 x1025)) (not (> 2646777772 x1025)) (< 0 x1216) (= 68 x814) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2577) (= x1025 2835717307) (< x1025 3053082678)) x125) (and (=> x2354 x1207) (=> (and (not x2354) (= (= x466 x1790) x103)) (and (=> (and x103 (and (>= x426 0) (= x426 (x2340 x2175)) (= x2188 x887) (= (< x426 x195) x1525) (<= x426 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2175 (x19 (x2619 x448) (x71 2) 0)))) (and (=> x1525 x1207) (=> (and (= (< x426 x887) x1327) (not x1525)) (and (=> (and (and (= (x19 (x2619 x290) (x71 2) 0) x1656) (= (> x342 x2111) x2468) (= (x197 x1656) x342) (= (x2052 (- x426 x887)) x1282) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x342) (= x2111 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x887))) (>= x342 0) (= (x19 (x2619 x448) (x71 2) 0) x1632)) (not x1327)) (and (=> x2468 x1207) (=> (and (and (= (x2155 (+ x887 x342)) x677) (= x2710 (< x677 x342))) (not x2468)) (and (=> x2710 x1207) (=> (and (and (= 32 x1766) (= x1204 (x19 (x2619 x290) (x71 2) 0)) (= x2059 1)) (not x2710)) x69))))) (=> x1327 x1207))))) (=> (not x103) x1207))))) (=> (and (not x125) (= (= x2001 x478) x1870)) (and (=> (and (and (< 0 x1077) (not (< x1936 4)) (= x1936 x702) (= 68 x1936) (= x2268 2835717307) (= (x2484 (x2619 x2001)) x1077) (not (> 2646777772 x2268)) (not (= x2268 2646777772)) (= x919 (x2052 (- x1936 4))) (not (= x2268 2678909723)) (= x96 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x2268 1889567281)) (= x1337 x195) (= x466 x2370) (= x289 (or (and (< x919 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x919) true)) (> x919 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 3053082678 x2268)) x1870) (and (=> (and (= (= x2370 x466) x999) (not x289)) (and (=> (not x999) x608) (=> (and (and (= x148 (< x2208 x195)) (= (x19 (x2619 x448) (x71 2) 0) x1098) (<= x2208 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1002 x1337) (= x2208 (x2204 x1098)) (>= x2208 0)) x999) (and (=> x148 x608) (=> (and (= x2680 (< x2208 x1337)) (not x148)) (and (=> x2680 x608) (=> (and (and (= x1706 (x19 (x2619 x290) (x71 2) 0)) (= (x2052 (- x2208 x1337)) x2339) (= x2157 (x19 (x2619 x448) (x71 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2121) (>= x2121 0) (= (> x2121 x2530) x2336) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1337)) x2530) (= (x217 x1706) x2121)) (not x2680)) (and (=> (and (and (= (< x2028 x2121) x901) (= x2028 (x2155 (+ x2121 x1337)))) (not x2336)) (and (=> (and (and (= x2471 1) (= x1346 (x19 (x2619 x290) (x71 2) 0)) (= 32 x523)) (not x901)) x139) (=> x901 x608))) (=> x2336 x608))))))))) (=> x289 x608))) (=> (and (= x493 (= x1877 x478)) (not x1870)) (and (=> (and x493 (and (not (= x163 826074471)) (= x2578 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< 0 x649) (= (x2484 (x2619 x1877)) x649) (= x890 x195) (= x702 x1509) (not (> 4 x1509)) (not (= 1889567281 x163)) (= x163 2835717307) (not (= 2514000705 x163)) (= 68 x1509) (= x2481 (x2052 (- x1509 4))) (not (> 826074471 x163)) (= x466 x2675) (= (or (> x2481 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2481 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2481 64))) x2068))) (and (=> (and (not x2068) (= x2003 (= x2675 x466))) (and (=> (not x2003) x81) (=> (and (and (<= 0 x1150) (= x1069 (< x1150 x195)) (= x884 x890) (= x117 (x19 (x2619 x448) (x71 1) 0)) (= x1150 (x2162 x117)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1150)) x2003) (and (=> x1069 x81) (=> (and (not x1069) (= x20 (< x1150 x890))) (and (=> x20 x81) (=> (and (not x20) (and (= x1529 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x890))) (= (< x1529 x589) x2207) (= (x2052 (- x1150 x890)) x2082) (>= x589 0) (= x566 (x19 (x2619 x290) (x71 1) 0)) (= (x1954 x566) x589) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x589) (= (x19 (x2619 x448) (x71 1) 0) x994))) (and (=> (and (not x2207) (and (= (x2155 (+ x589 x890)) x1968) (= x668 (> x589 x1968)))) (and (=> x668 x81) (=> (and (and (= x302 1) (= 1 x1076) (= 32 x1301) (= x1807 (x19 (x2619 x290) (x71 1) 0))) (not x668)) x445))) (=> x2207 x81))))))))) (=> x2068 x81))) (=> (and (and (= x932 (= x863 x478)) (and x932 (and (> x2266 0) (= (x2484 (x2619 x863)) x2266) (not (< x409 4)) (= x2421 (x2052 (- x409 4))) (not (< x2400 826074471)) (= x409 68) (not (= x2400 1889567281)) (= 2835717307 x2400) (= x334 x466) (= x844 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2316 x195) (not (= 826074471 x2400)) (not (= 2514000705 x2400)) (= x702 x409) (= (or (and (= true (<= x2421 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x2421)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2421)) x37)))) (not x493)) (and (=> (and (not x37) (= x1944 (= x334 x466))) (and (=> (and x1944 (and (= x2316 x2260) (= (x2705 x634) x2348) (>= x2348 0) (= (x19 (x2619 x448) (x71 1) 0) x634) (= (> x195 x2348) x2444) (<= x2348 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x2444 x1456) (=> (and (= x173 (< x2348 x2316)) (not x2444)) (and (=> (and (not x173) (and (= (x1914 x1860) x1104) (= x619 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2316))) (= x1860 (x19 (x2619 x290) (x71 1) 0)) (= (< x619 x1104) x159) (= x730 (x19 (x2619 x448) (x71 1) 0)) (<= x1104 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2052 (- x2348 x2316)) x1521) (<= 0 x1104))) (and (=> (and (and (= (> x1104 x1793) x858) (= (x2155 (+ x2316 x1104)) x1793)) (not x159)) (and (=> (and (not x858) (and (= 1 x1817) (= 1 x1110) (= (x19 (x2619 x290) (x71 1) 0) x510) (= 32 x1680))) x1985) (=> x858 x1456))) (=> x159 x1456))) (=> x173 x1456))))) (=> (not x1944) x1456))) (=> x37 x1456)))))))))))))))
(assert (= (and x1018 x441) x790))
(assert (= x2282 (and x1987 (not x2058))))
(assert (x593 x2270))
(assert (x593 x658))
(assert (x1116 x1924))
(assert (= x1692 (=> (and (= x1896 x1700) (= x1754 x762)) x640)))
(assert (= x2658 (and x2304 x506)))
(assert (= x1653 (and x1143 x1313)))
(assert (x593 x1719))
(assert (= (or x357 x987 x2658 x1238 x16 x1064) x241))
(assert (= (and x1915 (not x1325)) x459))
(assert (= (and x61 x40) x2479))
(assert (= x2077 (=> (and (= x1060 x300) (= x2073 x1385)) x2683)))
(assert (x593 x195))
(assert (= (=> (and (= x2390 x1563) (= x1424 x1260)) x2291) x986))
(assert (= (and x1856 (not x1286)) x1134))
(assert (x593 x89))
(assert (= x673 (and x1460 (not x1734))))
(assert (= (x2619 2514000705) (x71 2514000705)))
(assert (= (and x2187 (not x2091)) x1803))
(assert (= x1263 (and x976 (not x2453))))
(assert (= (and x424 x23) x357))
(assert (= (or (and x1034 x1376) (and x10 x1343) x2148 (and x1616 x1888) (and x1358 (not x633)) x2418) x1773))
(assert (= x2702 (and x304 x2462)))
(assert (= x1927 (and x169 x1411)))
(assert (= (or x2676 (and x825 (not x1086))) x1686))
(assert (= x393 (=> (= x2616 (= 0 x1700)) (and (=> (and (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x762) (and (< x762 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x762) true))) x666) (= x2101 (x2155 (+ x762 31))) (= (x1958 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2101) x1195) (= (x2155 (+ x1195 128)) x727)) (not x2616)) (and (=> x666 x128) (=> (and (and (= x2535 (x2155 (+ x802 32))) (< x1649 1461501637330902918203684832716283019655932542976) (= x192 (x259 x548)) (= (x2052 (- x236 x727)) x692) (= (x2155 (+ 4 x727)) x802) (< x1649 1461501637330902918203684832716283019655932542976) (= (= x1649 x448) x1010) (<= x192 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x19 (x2619 x1649) (x71 17) 0) x2673) (= x236 (x2155 (+ x802 64))) (= (x19 (x2619 x347) x2673 0) x548) (>= x192 0)) (not x666)) (and (=> (and (= (= x1649 x2001) x1740) (not x1010)) (and (=> (and x1740 (and (= (x2052 (- x1418 4)) x1809) (= 2835717307 x1572) (< 0 x2120) (= x1418 x692) (not (= 2678909723 x1572)) (not (< x1572 1889567281)) (= x192 x2351) (= (x2484 (x2619 x2001)) x2120) (= x1418 68) (not (> 2646777772 x1572)) (< x1572 3053082678) (not (= 2646777772 x1572)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1809) (and (= (<= x1809 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1809 64))) x1030) (= x2502 x1329) (not (< x1418 4)) (= x2145 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (and (=> x1030 x1731) (=> (and (= x11 (= x1329 x2502)) (not x1030)) (and (=> (and (and (= (x2559 x1397) x293) (= (< x293 x192) x2345) (= x2351 x1091) (>= x293 0) (= (x19 (x2619 x2001) (x71 2) 0) x1397) (<= x293 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x11) (and (=> (and (= x226 (< x293 x2351)) (not x2345)) (and (=> (and (and (= x143 (x2052 (- x293 x2351))) (<= 0 x86) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x86) (= (x1551 x34) x86) (= x505 (x19 (x2619 x2001) (x71 2) 0)) (= x1357 (> x86 x931)) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2351)) x931) (= (x19 (x2619 x1589) (x71 2) 0) x34)) (not x226)) (and (=> x1357 x1731) (=> (and (and (= x1970 (x2155 (+ x2351 x86))) (= x915 (> x86 x1970))) (not x1357)) (and (=> x915 x1731) (=> (and (not x915) (and (= 32 x1546) (= (x19 (x2619 x1589) (x71 2) 0) x1430) (= x1972 1))) x1154))))) (=> x226 x1731))) (=> x2345 x1731))) (=> (not x11) x1731))))) (=> (and (= (= x1649 x1877) x1411) (not x1740)) (and (=> (and x1411 (and (< 0 x1614) (= x2112 x2502) (= (x2052 (- x190 4)) x2358) (= x1392 (or (> x2358 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2358 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2358 64)))) (not (= x279 826074471)) (= x692 x190) (not (= 2514000705 x279)) (not (> 826074471 x279)) (= 68 x190) (not (> 4 x190)) (= x30 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1614 (x2484 (x2619 x1877))) (= x279 2835717307) (not (= x279 1889567281)) (= x1801 x192))) (and (=> x1392 x881) (=> (and (not x1392) (= (= x2112 x2502) x411)) (and (=> (not x411) x881) (=> (and x411 (and (<= 0 x2256) (= (< x2256 x192) x1198) (<= x2256 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1871 x253) x2256) (= x1801 x917) (= (x19 (x2619 x2001) (x71 1) 0) x253))) (and (=> (and (= x1018 (< x2256 x1801)) (not x1198)) (and (=> x1018 x881) (=> (and (and (= (x19 (x2619 x1589) (x71 1) 0) x975) (= (x19 (x2619 x2001) (x71 1) 0) x1530) (= x2064 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1801))) (<= 0 x199) (<= x199 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x199 (x804 x975)) (= (x2052 (- x2256 x1801)) x911) (= (< x2064 x199) x972)) (not x1018)) (and (=> x972 x881) (=> (and (and (= x498 (> x199 x964)) (= x964 (x2155 (+ x199 x1801)))) (not x972)) (and (=> (and (and (= x1522 1) (= 1 x400) (= (x19 (x2619 x1589) (x71 1) 0) x1399) (= x1901 32)) (not x498)) x2653) (=> x498 x881))))))) (=> x1198 x881))))))) (=> (and (not x1411) (and (= x793 (= x1649 x863)) (and x793 (and (= x192 x797) (> x2463 0) (not (> 826074471 x980)) (= x2094 (or (> x2007 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2007 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2007) true)))) (= x980 2835717307) (not (= x980 826074471)) (= x194 x692) (not (= 1889567281 x980)) (= 68 x194) (= (x2484 (x2619 x863)) x2463) (= (x2052 (- x194 4)) x2007) (= x2230 x2502) (= x787 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x194 4)) (not (= 2514000705 x980)))))) (and (=> x2094 x1240) (=> (and (not x2094) (= (= x2502 x2230) x1780)) (and (=> (and (and (= (< x201 x192) x1023) (= (x19 (x2619 x2001) (x71 1) 0) x311) (<= x201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x201 0) (= x1205 x797) (= x201 (x2130 x311))) x1780) (and (=> x1023 x1240) (=> (and (not x1023) (= (< x201 x797) x882)) (and (=> (and (not x882) (and (= (x19 (x2619 x2001) (x71 1) 0) x1570) (<= 0 x1273) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1273) (= (> x1273 x2139) x1396) (= (x2052 (- x201 x797)) x992) (= (x1786 x1978) x1273) (= x2139 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x797))) (= (x19 (x2619 x1589) (x71 1) 0) x1978))) (and (=> (and (not x1396) (and (= x1481 (> x1273 x1667)) (= x1667 (x2155 (+ x1273 x797))))) (and (=> (and (not x1481) (and (= 1 x1011) (= (x19 (x2619 x1589) (x71 1) 0) x1925) (= x1372 1) (= 32 x2215))) x2391) (=> x1481 x1240))) (=> x1396 x1240))) (=> x882 x1240))))) (=> (not x1780) x1240))))))))) (=> (and (and (= x509 (x2484 (x2619 x448))) (= x2123 (or (and (> 64 x2531) (= true (<= x2531 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2531))) (< x476 3053082678) (= x692 x1688) (not (= x476 2646777772)) (= x225 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1688 68) (not (< x476 2646777772)) (not (< x476 1889567281)) (= (x2052 (- x1688 4)) x2531) (= x476 2835717307) (= x2624 x2502) (= x572 x192) (not (< x1688 4)) (> x509 0) (not (= 2678909723 x476))) x1010) (and (=> x2123 x846) (=> (and (= (= x2502 x2624) x350) (not x2123)) (and (=> (and x350 (and (= x823 (> x192 x2523)) (>= x2523 0) (<= x2523 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x967 (x19 (x2619 x2001) (x71 2) 0)) (= x1992 x572) (= (x2113 x967) x2523))) (and (=> x823 x846) (=> (and (not x823) (= (< x2523 x572) x1187)) (and (=> (and (and (= x1756 (x1907 x1197)) (<= 0 x1756) (= x2295 (x19 (x2619 x2001) (x71 2) 0)) (= x1197 (x19 (x2619 x1589) (x71 2) 0)) (= x66 (> x1756 x1057)) (= x817 (x2052 (- x2523 x572))) (= x1057 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x572))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1756)) (not x1187)) (and (=> (and (not x66) (and (= (x2155 (+ x572 x1756)) x629) (= x1690 (> x1756 x629)))) (and (=> x1690 x846) (=> (and (not x1690) (and (= 32 x2390) (= 1 x1424) (= (x19 (x2619 x1589) (x71 2) 0) x1814))) x986))) (=> x66 x846))) (=> x1187 x846))))) (=> (not x350) x846))))))))) (=> x2616 x128)))))
(assert (= x169 (and (not x1740) x1019)))
(assert (= (=> (and (= x1206 x1979) (= x1536 0)) x2568) x2160))
(assert (= x1426 (and x1481 x1596)))
(assert (x593 x270))
(assert (x593 x2117))
(assert (x593 x1036))
(assert (= (and x66 x1746) x450))
(assert (x593 x2357))
(assert (x593 x165))
(assert (= (=> (and (= x2105 x105) (= x359 x1156)) x2047) x2174))
(assert (x593 x1493))
(assert (x593 x1377))
(assert (x593 x2463))
(assert (= (and x2020 x1134) x1625))
(assert (x593 x1124))
(assert (x593 x1891))
(assert (x593 x1200))
(assert (= x1620 (and x1856 x1286)))
(assert (= x939 (and x1713 x722)))
(assert (= (and x1643 x2432) x1846))
(assert (x593 x489))
(assert (= (=> (and (= x1095 0) (= x1365 x88)) x1869) x1998))
(assert (x593 x316))
(assert (x593 x727))
(assert (= (and (not x1713) x722) x1856))
(assert (x593 x2120))
(assert (=> (>= 10000 x2361) (= (x2619 x2361) (x71 x2361))))
(assert (= x2538 (=> (and (= x2185 x1754) (= x1896 0)) x1692)))
(assert (= x1571 (and x100 x131)))
(assert (= (=> (and (= x1837 x1559) (= x2285 x897)) x2290) x2401))
(assert (= (and x2570 (not x1612)) x1949))
(assert (x593 x2159))
(assert (x593 x2099))
(assert (x593 x796))
(assert (x593 x201))
(assert (x593 x1379))
(assert (x593 x1315))
(assert (= x57 (and x2231 x1444)))
(assert (= (and x782 x467) x2341))
(assert (= x2600 (and x1820 x2444)))
(assert (= (and (not x1411) x169) x1239))
(assert (= x1407 (and x1723 (not x2685))))
(assert (x593 x1804))
(assert (= x2095 (and (not x951) x482)))
(assert (x593 x265))
(assert (x593 x1219))
(assert (x593 x283))
(assert (= x1658 (or (and (not x1643) x2432) (and x308 x685))))
(assert (=> (>= 10000 x1200) (= (x2619 x1200) (x71 x1200))))
(assert (x593 x1930))
(assert (x210 x448))
(assert (x593 x193))
(assert (= x2147 (and x2299 (not x2680))))
(assert (= (=> (= 0 x775) x1593) x1342))
(assert (= (=> (and (= x395 x2542) (= x2541 x1174)) x1170) x547))
(assert (x593 x2166))
(assert (x593 x875))
(assert (x593 x1404))
(assert (= (=> (= (> x1579 0) x1679) (and (=> (and x1679 (and (= x185 x478) (= x1160 x835) (= x204 x1890) (= x2532 x1649) (= x878 1) (= x1519 x595) (= x1506 x1368))) x854) (=> (not x1679) x2153))) x732))
(assert (= x683 (and (not x845) x1947)))
(assert (x593 x2651))
(assert (= (or x2081 x472 x2180 x1208 x132 x594) x1848))
(assert (= x76 (x2465 (x2619 x76))))
(assert (= (and x1582 (not x666)) x1264))
(assert (= (x2465 (x2619 x478)) x478))
(assert (x593 x2007))
(assert (x593 x58))
(assert (x593 x711))
(assert (x593 x1024))
(assert (= x1097 (and (not x1481) x1596)))
(assert (= x2273 (and (not x245) x740)))
(assert (x593 x2493))
(assert (= (x71 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2619 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x593 x1720))
(assert (x593 x2379))
(assert (x593 x349))
(assert (= (and (not x1162) x1311) x1465))
(assert (= x1516 (and x2570 x1612)))
(assert (x593 x324))
(assert (x593 x1829))
(assert (= x735 (and x2479 x1268)))
(assert (x593 x1120))
(assert (= (=> (and (or (and (and (< 0 x494) (= x620 1) (= (x2484 (x2619 x583)) x494)) x761) (and (and (= x620 (ite x954 1 0)) (= 32 x2542) (= (not x1599) x954) (= x1599 (= x579 0))) (not x761))) (and (> x2541 0) (= (= 0 x2542) x761))) x521) x2103))
(assert (= x26 (and x1861 (not x668))))
(assert (x210 x1368))
(assert (= (and (not x15) x1762) x805))
(assert (x593 x964))
(assert (x593 x1185))
(assert (=> (>= 10000 x290) (= (x71 x290) (x2619 x290))))
(assert (x593 x1989))
(assert (= (and x793 x1239) x1660))
(assert (= x659 (and x653 x11)))
(assert (= (and x761 x1447) x1138))
(assert (= 1461501637330902918203684832716283019655932542976 (x2465 (x71 1461501637330902918203684832716283019655932542976))))
(assert (x593 x1587))
(assert (= x2668 (or x53 x1278 x721 x907)))
(assert (x593 x237))
(assert (x593 x1494))
(assert (= (=> (and (= x1464 32) (= x1234 (> x396 0)) (= x603 (x2155 (+ 32 x2))) (= x107 (x2155 (+ 32 x603))) (= x2 x1799) (= x1841 (x2155 (+ 32 x1202))) (= x396 (x2132 x1202))) (and (=> (and (and (= x1862 0) (= x1941 x1841) (= x107 x108)) (not x1234)) x2352) (=> (and x1234 (and (= x403 (x2155 (+ x107 32))) (= (x1012 x1841) x1699) (= (x2155 (+ 32 x1841)) x2099) (= x2372 (> x396 1)))) (and (=> (and (not x2372) (and (= 1 x1862) (= x2099 x1941) (= x403 x108))) x2352) (=> (and (and (= (> x396 2) x2628) (= x1318 (x2155 (+ 32 x403))) (= (x1698 x2099) x2692) (= (x2155 (+ x2099 32)) x966)) x2372) (and (=> (and (and (= x1941 x966) (= 2 x1862) (= x108 x1318)) (not x2628)) x2352) (=> (and (and (= (x2155 (+ x1318 32)) x1484) (= (x208 x966) x1437) (= x2663 (> x396 3)) (= (x2155 (+ x966 32)) x2173)) x2628) (and (=> (and (and (= x2173 x1941) (= x1862 3) (= x1484 x108)) (not x2663)) x2352) (=> x2663 x462))))))))) x386))
(assert (x593 x1408))
(assert (x593 x2508))
(assert (x593 x2641))
(assert (x593 x300))
(assert (x593 x995))
(assert (x593 x620))
(assert (x593 x1830))
(assert (= x924 (=> (and (= x1584 x338) (= x2039 x1909)) x1412)))
(assert (x593 x436))
(assert (= (and x1165 x1513) x536))
(assert (x593 x192))
(assert (= x1467 (and x2110 x2307)))
(assert (= x424 (and x2209 x767)))
(assert (= x454 (or x1811 (and (not x1708) x2668))))
(assert (x593 x2459))
(assert (x593 x1270))
(assert (x593 x1229))
(assert (x593 x615))
(assert (= x2510 (and x1853 (not x849))))
(assert (= (and x1416 x442) x889))
(assert (= (or x1491 x1155 x920 x1638 x2394 x167) x596))
(assert (= (and x1246 x560) x1677))
(assert (x593 x2399))
(assert (x593 x42))
(assert (x593 x2296))
(assert (= x65 (or x239 x1138)))
(assert (x593 x1434))
(assert (= (and (not x818) x1480) x2594))
(assert (= x705 (and (not x2659) x21)))
(assert (= (and x1019 x1740) x965))
(assert (= x2287 (and x1476 x285)))
(assert (= x1997 (and x2569 (not x1772))))
(assert (x593 x2104))
(assert (x593 x2706))
(assert (x593 x957))
(assert (x210 x1983))
(assert (x593 x1649))
(assert (= x2327 (and x1655 (not x1690))))
(assert (= (and x2637 x1577) x1986))
(assert (= x21 (and x556 x1375)))
(assert (= x1926 (and x131 (not x100))))
(assert (= x2473 (and x2702 x2455)))
(assert (= (=> (= (= x2399 0) x737) (and (=> (and (and (= x2366 (x2155 (+ x709 31))) (= (x2155 (+ x2076 128)) x873) (= x2076 (x1958 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2366)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x709) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x709)) (> 32 x709))) x1808)) (not x737)) (and (=> x1808 x2153) (=> (and (not x1808) (and (= x336 (x2019 x1192)) (= x1192 (x112 x492 1)) (= (x2155 (+ x218 32)) x1564) (= x491 (x1958 1461501637330902918203684832716283019655932542975 x89)) (= x837 (= x448 x491)) (>= x336 0) (<= x336 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x336) (= x534 (x1770 128)) (= x218 (x2155 (+ 4 x873))))) (and (=> (and (and (= (or (and (= true (<= x2402 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2402 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2402)) x758) (= x956 68) (= x534 x1071) (not (> 1889567281 x2320)) (= (x2052 (- x956 4)) x2402) (not (< x956 4)) (> 3053082678 x2320) (not (= 2678909723 x2320)) (= x387 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x336 x1200) (= x1267 (x2484 (x2619 x448))) (not (< x2320 2646777772)) (not (= 2646777772 x2320)) (> x1267 0) (= x2320 2835717307)) x837) (and (=> x758 x2042) (=> (and (not x758) (and (= x1200 x381) (= x442 (= x336 x1200)))) (and (=> (and (and (= (x19 (x2619 x206) (x71 2) 0) x2639) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2528) (= x2528 (x1075 x2639)) (= (> x534 x2528) x2198) (<= 0 x2528) (= x2149 x1071)) x442) (and (=> (and (not x2198) (= x529 (> x1071 x2528))) (and (=> x529 x2042) (=> (and (not x529) (and (= (x19 (x2619 x206) (x71 2) 0) x1576) (= x2686 (x726 x471)) (= x982 (< x2117 x2686)) (>= x2686 0) (= (x2052 (- x2528 x1071)) x1647) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2686) (= (x19 (x2619 x1200) (x71 2) 0) x471) (= x2117 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1071))))) (and (=> x982 x2042) (=> (and (not x982) (and (= x1390 (> x2686 x667)) (= x667 (x2155 (+ x2686 x1071))))) (and (=> x1390 x2042) (=> (and (and (= 1 x2105) (= (x19 (x2619 x1200) (x71 2) 0) x1280) (= x1156 32)) (not x1390)) x2174))))))) (=> x2198 x2042))) (=> (not x442) x2042))))) (=> (and (= (= x2001 x491) x767) (not x837)) (and (=> (and (= x1981 (= x1877 x491)) (not x767)) (and (=> (and (and (= (= x863 x491) x2462) (and x2462 (and (< 0 x2221) (= x1911 x336) (= x534 x791) (not (= x1778 1889567281)) (not (> 826074471 x1778)) (= 68 x2067) (not (= x1778 826074471)) (not (= 2514000705 x1778)) (= x2221 (x2484 (x2619 x863))) (= x958 (x2052 (- x2067 4))) (= x1778 2835717307) (= x2455 (or (and (= true (<= x958 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x958)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x958))) (= x1408 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 4 x2067))))) (not x1981)) (and (=> x2455 x1008) (=> (and (not x2455) (and (= x765 x1911) (= (= x336 x1911) x1510))) (and (=> (and (and (= x791 x2284) (= (x19 (x2619 x206) (x71 1) 0) x2350) (<= 0 x42) (= x42 (x2216 x2350)) (= x2239 (< x42 x534)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x42)) x1510) (and (=> x2239 x1008) (=> (and (not x2239) (= (< x42 x791) x410)) (and (=> (and (not x410) (and (= (x418 x571) x950) (= (x2052 (- x42 x791)) x1609) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x950) (= (x19 (x2619 x206) (x71 1) 0) x1670) (= (> x950 x1607) x2483) (= x1607 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x791))) (>= x950 0) (= (x19 (x2619 x1911) (x71 1) 0) x571))) (and (=> (and (not x2483) (and (= (x2155 (+ x791 x950)) x312) (= (> x950 x312) x1298))) (and (=> x1298 x1008) (=> (and (and (= 1 x694) (= x2087 (x19 (x2619 x1911) (x71 1) 0)) (= 1 x2613) (= x120 32)) (not x1298)) x1567))) (=> x2483 x1008))) (=> x410 x1008))))) (=> (not x1510) x1008))))) (=> (and x1981 (and (not (> 4 x1231)) (not (= 1889567281 x1383)) (= 2835717307 x1383) (= x534 x1621) (= (x2484 (x2619 x1877)) x1146) (= x336 x485) (= x2353 (x2052 (- x1231 4))) (> x1146 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1404) (not (= x1383 2514000705)) (not (= 826074471 x1383)) (= x2091 (or (and (< x2353 64) (= (<= x2353 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x2353 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 826074471 x1383)) (= 68 x1231))) (and (=> x2091 x1671) (=> (and (and (= x2127 x485) (= x2272 (= x485 x336))) (not x2091)) (and (=> (not x2272) x1671) (=> (and x2272 (and (= x1621 x443) (= x198 (x19 (x2619 x206) (x71 1) 0)) (= x2503 (> x534 x481)) (>= x481 0) (= (x893 x198) x481) (<= x481 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x2503 x1671) (=> (and (= x1624 (> x1621 x481)) (not x2503)) (and (=> x1624 x1671) (=> (and (and (= x2010 (x19 (x2619 x206) (x71 1) 0)) (= x560 (> x413 x345)) (= x660 (x19 (x2619 x485) (x71 1) 0)) (<= x413 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2052 (- x481 x1621)) x339) (<= 0 x413) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1621)) x345) (= x413 (x996 x660))) (not x1624)) (and (=> x560 x1671) (=> (and (not x560) (and (= x1884 (< x1494 x413)) (= x1494 (x2155 (+ x413 x1621))))) (and (=> x1884 x1671) (=> (and (not x1884) (and (= x545 32) (= x203 1) (= x2470 1) (= (x19 (x2619 x485) (x71 1) 0) x2176))) x959))))))))))))))) (=> (and x767 (and (= 68 x1024) (< 0 x953) (= x723 x336) (= x23 (or (and (> 64 x1000) (= (<= x1000 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1000 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x84 2646777772)) (= 2835717307 x84) (not (= 2646777772 x84)) (= (x2484 (x2619 x2001)) x953) (= x2046 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x534 x1919) (not (< x84 1889567281)) (not (< x1024 4)) (> 3053082678 x84) (not (= x84 2678909723)) (= (x2052 (- x1024 4)) x1000))) (and (=> (and (and (= x573 (= x723 x336)) (= x316 x723)) (not x23)) (and (=> (and (and (= x369 (< x295 x534)) (>= x295 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x295) (= x295 (x910 x788)) (= x1919 x725) (= (x19 (x2619 x206) (x71 2) 0) x788)) x573) (and (=> (and (not x369) (= (> x1919 x295) x506)) (and (=> x506 x1574) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1363) (<= 0 x1363) (= x2435 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1919))) (= (x19 (x2619 x723) (x71 2) 0) x745) (= (x19 (x2619 x206) (x71 2) 0) x2225) (= (x1898 x745) x1363) (= (> x1363 x2435) x700) (= (x2052 (- x295 x1919)) x2191)) (not x506)) (and (=> (and (not x700) (and (= x636 (x2155 (+ x1363 x1919))) (= x1307 (> x1363 x636)))) (and (=> (and (not x1307) (and (= (x19 (x2619 x723) (x71 2) 0) x2622) (= 32 x85) (= x682 1))) x626) (=> x1307 x1574))) (=> x700 x1574))))) (=> x369 x1574))) (=> (not x573) x1574))) (=> x23 x1574))))))))) (=> x737 x2153))) x1142))
(assert (x593 x953))
(assert (x593 x2339))
(assert (x2381 x89))
(assert (x593 x997))
(assert (= x51 (or x274 x1996)))
(assert (= (and (not x2006) x2093) x1619))
(assert (= (=> (and (= 0 x1424) (= x251 x2390)) x986) x846))
(assert (x593 x1617))
(assert (x593 x1497))
(assert (= (and x687 (not x905)) x913))
(assert (x593 x2089))
(assert (= (or (and x1001 x631) (and x2334 (not x2669))) x2041))
(assert (= x1821 (and x741 x24)))
(assert (x593 x2532))
(assert (x593 x2256))
(assert (x593 x1546))
(assert (x593 x1892))
(assert (= x1539 (and (not x2597) x1554)))
(assert (x593 x1385))
(assert (x593 x2407))
(assert (= x2012 (and (not x2612) x459)))
(assert (x593 x958))
(assert (x593 x2268))
(assert (= (and x1902 x2012) x631))
(assert (x593 x2692))
(assert (= x1678 (or x1467 (and x2013 x18) (and x2142 x222) (and x276 x926) (and (not x248) x296) x749)))
(assert (= (or x564 x969) x1743))
(assert (= x1751 (and x2212 x2236)))
(assert (= x976 (and x1444 (not x2231))))
(assert (x593 x1793))
(assert (x593 x2642))
(assert (x593 x2261))
(assert (= x370 (and (not x1808) x2461)))
(assert (= x263 (and (not x1758) x1539)))
(assert (= (and x214 x1679) x2211))
(assert (x593 x1547))
(assert (x593 x1384))
(assert (= x1248 (and x2008 x1396)))
(assert (= (and (not x2207) x479) x1861))
(assert (= (or x851 x1272 x973 x826 x1934 x124) x2582))
(assert (x593 x1011))
(assert (= x1606 (or x1452 x1623 x1674 x1651 x1422 x288)))
(assert (= (and (not x771) x2526) x1323))
(assert (= (and x2420 (not x1419)) x111))
(assert (= x2554 (or x1658 x1846)))
(assert (= (x2619 2569309863) (x71 2569309863)))
(assert (= 2737736067 (x2465 (x71 2737736067))))
(assert (x2381 x2101))
(assert (= x1058 (and (not x2074) x2652)))
(assert (x593 x1100))
(assert (x1116 x2049))
(assert (= x1671 (=> (and (= 0 x203) (= x545 x806)) x959)))
(assert (x593 x293))
(assert (x593 x1472))
(assert (x593 x1205))
(assert (= (=> (= x252 (= 0 x2501)) (and (=> x252 x1976) (=> (and (and (<= x1026 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1026) (= (= 0 x1026) x1782)) (not x252)) (and (=> (and (and (= (= x448 x2641) x1935) (= 128 x1352) (>= x2641 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1026) (> 1461501637330902918203684832716283019655932542976 x2641) (>= 1461501637330902918203684832716283019655932542975 x2641) (>= x1026 0)) (not x1782)) (and (=> (and x1935 (and (< 0 x165) (not (= 872247156 x2690)) (= (or (and (< x1864 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1864))) (> x1864 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x829) (= 68 x2660) (= x2645 x1026) (not (< x2690 856900995)) (= x2690 1086394137) (not (= x2690 856900995)) (not (> 4 x2660)) (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x1184) (= x206 x2262) (= (x2484 (x2619 x448)) x165) (not (> 604024478 x2690)) (> 1889567281 x2690) (= 68 x2660) (= x1864 (x2052 (- x2660 4))))) (and (=> x829 x2135) (=> (and (and (= x2262 x270) (= x2614 (= x206 x2262))) (not x829)) (and (=> (not x2614) x2135) (=> (and x2614 (and (<= x275 1461501637330902918203684832716283019655932542975) (= (= x2520 x275) x849) (= x2645 x452) (>= x275 0) (< x275 1461501637330902918203684832716283019655932542976))) (and (=> (not x849) x2135) (=> (and x849 (= (= x2262 0) x1144)) (and (=> x1144 x2135) (=> (and (= x1661 (= x2645 0)) (not x1144)) (and (=> (and (and (= x2315 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2645))) (= x643 (> x1676 x2315)) (<= 0 x1676) (<= x1676 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1661)) (and (=> x643 x2135) (=> (and (and (= x1779 (x19 (x2619 x2262) (x71 2) 0)) (>= x941 0) (= (x2155 (+ x2645 x1676)) x554) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x941) (= x941 (x1701 x1779)) (= (> x941 x2315) x656)) (not x643)) (and (=> x656 x2135) (=> (and (and (= (x19 (x2619 x2262) (x71 2) 0) x724) (= 1 x2286) (= 32 x2267) (= (x2155 (+ x941 x2645)) x1892) (= 1 x1094)) (not x656)) x2698))))) (=> x1661 x2135))))))))))) (=> (and (not x1935) (and (= x755 (= x2001 x2641)) (and x755 (and (not (= 856900995 x1775)) (not (< x1775 604024478)) (= 68 x1462) (not (> 856900995 x1775)) (= x1462 68) (= x1532 x206) (< x1775 1889567281) (not (< x1462 4)) (> x2075 0) (= (x2484 (x2619 x2001)) x2075) (= x1136 (x2052 (- x1462 4))) (= x856 x1026) (= x1775 1086394137) (not (= x1775 872247156)) (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x2642) (= (or (and (= (<= x1136 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1136)) (> x1136 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1165))))) (and (=> (and (not x1165) (and (= x1490 (= x1532 x206)) (= x1532 x1168))) (and (=> (not x1490) x2610) (=> (and (and (> 1461501637330902918203684832716283019655932542976 x170) (= x2650 (= x170 x2520)) (>= x170 0) (<= x170 1461501637330902918203684832716283019655932542975) (= x856 x810)) x1490) (and (=> (not x2650) x2610) (=> (and x2650 (= x1734 (= 0 x1532))) (and (=> x1734 x2610) (=> (and (= x1431 (= x856 0)) (not x1734)) (and (=> x1431 x2610) (=> (and (and (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x856)) x1153) (>= x2199 0) (<= x2199 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1153 x2199) x15)) (not x1431)) (and (=> (and (and (= x2480 (< x1153 x2114)) (<= x2114 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2114) (= x2672 (x19 (x2619 x1532) (x71 2) 0)) (= (x2155 (+ x856 x2199)) x299) (= x2114 (x1883 x2672))) (not x15)) (and (=> x2480 x2610) (=> (and (and (= x886 32) (= x1578 1) (= x658 (x2155 (+ x2114 x856))) (= x1151 1) (= (x19 (x2619 x1532) (x71 2) 0) x639)) (not x2480)) x1))) (=> x15 x2610))))))))))) (=> x1165 x2610))))) (=> x1782 x2257))))) x2305))
(assert (= x803 (and x1030 x965)))
(assert (x593 x1255))
(assert (x593 x2613))
(assert (x593 x2021))
(assert (= (and x2663 x499) x1314))
(assert (x593 x1816))
(assert (x2381 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x593 x2206))
(assert (x593 x603))
(assert (x593 x1919))
(assert (x593 x94))
(assert (x593 x2156))
(assert (= (x2465 (x71 826074471)) 826074471))
(assert (x593 x2684))
(assert (x593 x2056))
(assert (= (=> (and (or (not x1148) x1148) (= (= 0 x2039) x1148)) x1889) x1412))
(assert (x593 x759))
(assert (= (and x183 (not x1023)) x1781))
(assert (= (and x2496 (not x384)) x1987))
(assert (= x1550 (and x598 (not x923))))
(assert (= x1651 (and x1957 x1824)))
(assert (x593 x297))
(assert (= (or (and x1681 x2513) x2674 (and (not x2325) x2368)) x1752))
(assert (x593 x677))
(assert (x593 x2626))
(assert (x593 x856))
(assert (x2381 x310))
(assert (= x2653 (=> (and (= x1901 x1563) (= x400 x1260)) x2291)))
(assert (= x1535 (and x2449 (not x1636))))
(assert (= x551 (and (not x1794) x2414)))
(assert (= x2448 (and x493 x1061)))
(assert (= (and x2506 x1865) x447))
(assert (= (and x972 x2037) x2467))
(assert (x593 x310))
(assert (= x1078 (and x282 (not x1962))))
(assert (x593 x602))
(assert (= x239 (and x1447 (not x761))))
(assert (= x716 (x2465 (x2619 x716))))
(assert (x593 x1150))
(assert (x593 x2046))
(assert (x593 x130))
(assert (= (x71 3648997476) (x2619 3648997476)))
(assert (= x708 (and x1101 x2271)))
(assert (x593 x2505))
(assert (x210 x2520))
(assert (x593 x1760))
(assert (= x1123 (and x2631 x2634)))
(assert (x593 x2145))
(assert (= x144 (and x1655 x1690)))
(assert (x593 x2347))
(assert (= 72223263258191293651604190264004579703475585967499159981614695267027195527168 (x2465 (x71 72223263258191293651604190264004579703475585967499159981614695267027195527168))))
(assert (x593 x890))
(assert (x593 x342))
(assert (= x2451 (or x1952 x1974)))
(assert (= (and x1997 x2555) x746))
(assert (= (and (not x1515) x1767) x271))
(assert (x593 x1318))
(assert (=> (>= 10000 x1877) (= (x2619 x1877) (x71 x1877))))
(assert (x593 x1076))
(assert (= x2433 (and x504 x869)))
(assert (= x47 (and (not x1199) x2516)))
(assert (= x2413 (or x1745 (and x1289 (not x1102)))))
(assert (= (x2465 (x2619 x1760)) x1760))
(assert (= x2593 (and x1516 x1320)))
(assert (= (and x1650 (not x915)) x773))
(assert (= x1820 (and x1944 x1993)))
(assert (=> (<= x204 10000) (= (x71 x204) (x2619 x204))))
(assert (= x782 (or x1413 x1833)))
(assert (= (or x2327 x2667) x704))
(assert (x593 x1768))
(assert (x593 x811))
(assert (x593 x2151))
(assert (=> (>= 10000 x2262) (= (x71 x2262) (x2619 x2262))))
(assert (= x670 (or x1438 x718 x2053 x946 x2593 x2329)))
(assert (= x2630 (and x2685 x1723)))
(assert (x593 x582))
(assert (= x128 (=> (= x1663 0) x1177)))
(assert (x593 x4))
(assert (x593 x572))
(assert (= (and (not x2198) x889) x1850))
(assert (= x900 (and x412 (not x1555))))
(assert (x593 x2581))
(assert (= x364 (or x121 x1613 x2263 x1653 x742 x968)))
(assert (= x294 (and x465 x2360)))
(assert (= x799 (and x454 x2616)))
(assert (= x2150 (and x242 x985)))
(assert (= x1755 (and x2553 (not x2468))))
(assert (= x2540 (and x2169 (not x940))))
(assert (= x1675 (and (not x498) x1373)))
(assert (= (=> (and (= x1372 x1260) (= x1563 x2215)) x2291) x2391))
(assert (= x1635 (or x2086 x1848)))
(assert (x593 x62))
(assert (x593 x478))
(assert (x593 x1933))
(assert (x593 x2039))
(assert (= (x2465 (x71 2514000705)) 2514000705))
(assert (x593 x2482))
(assert (= x876 (or x780 x83 x51 x2546)))
(assert (x2381 x1562))
(assert (x593 x1540))
(assert (=> (<= x1368 10000) (= (x71 x1368) (x2619 x1368))))
(assert (x593 x1389))
(assert (= 65943510083598082279227955258803319933472635617035506777028864765220054106112 (x2465 (x71 65943510083598082279227955258803319933472635617035506777028864765220054106112))))
(assert (x593 x1614))
(assert (x593 x2267))
(assert (= x2368 (and (not x2513) x1681)))
(assert (= (and (not x289) x2342) x1121))
(assert (x593 x2604))
(assert (x593 x2320))
(assert (= x922 (and x1619 x1107)))
(assert (x593 x2358))
(assert (= x1638 (and x1826 (not x63))))
(assert (= x219 (and x2271 (not x1101))))
(assert (x593 x941))
(assert (= (and x617 (not x1880)) x2605))
(assert (= (=> (and (= (= 0 x2533) x269) (or (not x269) x269)) x1518) x1398))
(assert (= x626 (=> (and (= x85 x359) (= x105 x682)) x2047)))
(assert (= (and x1105 x551) x321))
(assert (= (and x1870 x2689) x2342))
(assert (= (and x825 x1086) x2676))
(assert (x210 x2262))
(assert (= x464 (and x281 x332)))
(assert (x593 x1862))
(assert (x593 x202))
(assert (x593 x1868))
(assert (x593 x1831))
(assert (x593 x1562))
(assert (=> (<= x716 10000) (= (x71 x716) (x2619 x716))))
(assert (x593 x182))
(assert (x593 x36))
(assert (= x274 (and (not x2300) x354)))
(assert (x593 x1609))
(assert (= x1838 (and x1407 (not x2396))))
(assert (x593 x1489))
(assert (= x77 (and (not x221) x419)))
(assert (x593 x1350))
(assert (x593 x1066))
(assert (= x1009 (or x1356 x1675)))
(assert (x593 x46))
(assert (x210 x478))
(assert (x593 x820))
(assert (= (x2465 (x2619 x204)) x204))
(assert (= x1835 (x2465 (x2619 x1835))))
(assert (= x1649 (x2465 (x2619 x1649))))
(assert (= x449 (or x2190 x364)))
(assert (=> (>= 10000 x206) (= (x2619 x206) (x71 x206))))
(assert (x593 x434))
(assert (x593 x2520))
(assert (= x2420 (or x1784 x271)))
(assert (= (and x463 x95) x2045))
(assert (= x2646 (and x1660 x2094)))
(assert (= x1589 (x2465 (x2619 x1589))))
(assert (= (and (not x1957) x1824) x2625))
(assert (= (and x2506 (not x1865)) x1915))
(assert (= (or x645 x670) x721))
(assert (x593 x426))
(assert (x593 x610))
(assert (x593 x2624))
(assert (x593 x50))
(assert (x593 x1006))
(assert (=> (<= x2679 10000) (= (x71 x2679) (x2619 x2679))))
(assert (= (and x982 x824) x768))
(assert (x593 x981))
(assert (= (=> (= x2501 x2536) x2406) x1449))
(assert (x593 x2286))
(assert (= x1395 (and x869 (not x504))))
(assert (x593 x1911))
(assert (= (and (not x1492) x247) x1662))
(assert (= (and x2441 x2410) x559))
(assert (= x1684 (and x847 (not x1234))))
(assert (= x268 (and x1747 (not x421))))
(assert (x593 x667))
(assert (= x1934 (and x1929 x2490)))
(assert (x593 x1581))
(assert (x593 x785))
(assert (x593 x1529))
(assert (=> (<= x1649 10000) (= (x2619 x1649) (x71 x1649))))
(assert (x593 x1253))
(assert (x593 x2408))
(assert (= (and x70 x111) x465))
(assert (= (and x535 x1187) x142))
(assert (=> (<= x292 10000) (= (x71 x292) (x2619 x292))))
(assert (x593 x116))
(assert (x593 x1099))
(assert (x593 x2079))
(assert (= x354 (and (not x1105) x551)))
(assert (x593 x2076))
(assert (= x2013 (and x296 x248)))
(assert (x593 x974))
(assert (x593 x1453))
(assert (= (=> (and (= x2471 0) (= x523 x769)) x139) x608))
(assert (= x1190 (and x870 (not x159))))
(assert (x593 x1890))
(assert (x593 x1840))
(assert (x593 x2419))
(assert (x593 x955))
(assert (x593 x877))
(assert (= (and (not x573) x914) x1064))
(assert (x593 x387))
(assert (x593 x333))
(assert (= (or x1341 x2045 x2109 x1662 x2363 x1054) x250))
(assert (x593 x1071))
(assert (x593 x1676))
(assert (x593 x261))
(assert (= (and x2416 x2233) x2631))
(assert (x593 x1509))
(assert (x593 x110))
(assert (x593 x2116))
(assert (x593 x1837))
(assert (=> (>= 10000 x1036) (= (x71 x1036) (x2619 x1036))))
(assert (x593 x665))
(assert (= (or (and x2140 (not x1886)) x319) x1580))
(assert (= x508 (and x1103 x575)))
(assert (x593 x1380))
(assert (x593 x1887))
(assert (x593 x180))
(assert (x593 x2075))
(assert (x593 x2677))
(assert (= (and x1307 x2507) x16))
(assert (=> (<= x2001 10000) (= (x71 x2001) (x2619 x2001))))
(assert (x593 x420))
(assert (x210 x2072))
(assert (= (or x2220 x2377 x501 x321 x2274 x1926) x1996))
(assert (x593 x1693))
(assert (x593 x2170))
(assert (= x2574 (x2465 (x2619 x2574))))
(assert (=> (>= 10000 x1835) (= (x71 x1835) (x2619 x1835))))
(assert (= x1952 (and x77 (not x1496))))
(assert (= (and x2477 (not x1735)) x2190))
(assert (x593 x723))
(assert (= (and (not x493) x1061) x277))
(assert (= (x2465 (x2619 x283)) x283))
(assert (x593 x937))
(assert (= (and (not x1624) x2380) x1246))
(assert (= (=> (and (= x1933 x1584) (= x1796 x2039)) x1412) x475))
(assert (= x2044 (or x2388 x1257)))
(assert (x593 x1487))
(assert (x593 x2139))
(assert (= (or x209 x2392) x8))
(assert (x593 x2606))
(assert (x593 x787))
(assert (= (=> (= (= x2533 0) x1548) (and (=> x1548 x1976) (=> (and (= (or (and (> 32 x934) (= (<= x934 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x934 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x923) (not x1548)) (and (=> (not x923) x2257) (=> x923 x1976))))) x1518))
(assert (x593 x1980))
(assert (= (and x2147 x2336) x544))
(assert (x210 x1200))
(assert (= (x71 614698425) (x2619 614698425)))
(assert (x593 x1688))
(assert (x593 x146))
(assert (= (x2465 (x2619 x2520)) x2520))
(assert (x593 x2185))
(assert (= x1739 (and (not x463) x95)))
(assert (x593 x1424))
(assert (= x2648 (and x2264 (not x1631))))
(assert (= x2429 (and x1820 (not x2444))))
(assert (x593 x591))
(assert (= (=> (and (= x88 x2023) (= x2365 0)) x2403) x960))
(assert (=> (<= x478 10000) (= (x71 x478) (x2619 x478))))
(assert (= (and x2472 x1590) x2084))
(assert (x593 x1501))
(assert (= x1313 (and x731 x1111)))
(assert (= (and (not x2378) x41) x175))
(assert (x593 x2675))
(assert (= x1043 (and x2293 (not x1300))))
(assert (x593 x1053))
(assert (= x288 (and x1474 x1139)))
(assert (x593 x1251))
(assert (x593 x1663))
(assert (= (and x1442 x20) x1317))
(assert (= (and x1571 (not x160)) x2414))
(assert (x593 x60))
(assert (= x371 (=> (= 0 x1744) x2280)))
(assert (x593 x878))
(assert (x593 x141))
(assert (x593 x2602))
(assert (= (=> (and (= x1301 x769) (= x1076 0)) x445) x81))
(assert (x593 x806))
(assert (= x2552 (and x976 x2453)))
(assert (= (=> (and (= x897 x88) (= x1559 0)) x2401) x1371))
(assert (x593 x1578))
(assert (= x206 (x2465 (x2619 x206))))
(assert (x593 x107))
(assert (x593 x1172))
(assert (= x1833 (or x1752 x1215)))
(assert (x593 x887))
(assert (x593 x2485))
(assert (= (or x925 x1478 x487 x171 x1317 x655) x2194))
(assert (x593 x1841))
(assert (x593 x1789))
(assert (x210 x1760))
(assert (= x139 (=> (and (= x2471 x439) (= x94 x523)) x1306)))
(assert (= (or x470 x2041) x402))
(assert (x593 x1191))
(assert (= (and (not x2499) x27) x179))
(assert (x593 x1104))
(assert (= (=> (= (> x1922 0) x2233) (and (=> (and (= x1405 x414) (not x2233)) x233) (=> (and x2233 (and (< 0 x2602) (= (= x874 0) x2634) (= (x1958 1461501637330902918203684832716283019655932542975 x310) x874) (= x310 (x1785 160)) (= (x1785 128) x2602))) (and (=> (and (not x2634) (and (= x2171 x1792) (= (= x448 x1203) x1865) (= x46 (x2155 (+ x1792 32))) (= x1792 (x2155 (+ 4 x414))) (= (x2052 (- x46 x414)) x558) (= x1203 (x1958 1461501637330902918203684832716283019655932542975 x310)))) (and (=> (and (= x1325 (= x1203 x2001)) (not x1865)) (and (=> (and x1325 (and (= x574 (x2484 (x2619 x2001))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1552) (not (> 1889567281 x1702)) (< x1702 2646777772) (= x1702 1889567281) (not (> 4 x1716)) (= x245 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x729) (and (= (<= x729 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x729)))) (= x2249 x2156) (< x1702 3053082678) (> x574 0) (= x1716 x558) (= (x2052 (- x1716 4)) x729) (= 36 x1716))) (and (=> x245 x1965) (=> (and (not x245) (and (= x2249 x2196) (= x2141 (= x2249 x2156)))) (and (=> (and x2141 (and (= (x1764 x191) x2514) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2514) (= x191 (x19 (x2619 x2249) (x71 2) 0)) (= x2343 32) (= x1602 1) (>= x2514 0))) x44) (=> (not x2141) x1965))))) (=> (and (= x2612 (= x1877 x1203)) (not x1325)) (and (=> (and (and (not (= x362 826074471)) (= (x2484 (x2619 x1877)) x715) (< 0 x715) (= x2156 x1581) (= x308 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2296) (and (= (<= x2296 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2296 32)))) (= x2434 x558) (= 36 x2434) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2275) (= x2296 (x2052 (- x2434 4))) (= 1889567281 x362) (not (< x362 826074471)) (not (> 4 x2434))) x2612) (and (=> x308 x262) (=> (and (and (= x1389 x1581) (= x1643 (= x1581 x2156))) (not x308)) (and (=> (and x1643 (and (= x127 1) (= x2693 (x1610 x514)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2693) (<= 0 x2693) (= x1331 32) (= x514 (x19 (x2619 x1581) (x71 1) 0)))) x74) (=> (not x1643) x262))))) (=> (and (and (= x1902 (= x1203 x863)) (and (and (= x2476 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x558 x1210) (= 36 x1210) (< 0 x122) (not (> 826074471 x1627)) (= x2574 x2156) (= x122 (x2484 (x2619 x863))) (not (< x1210 4)) (not (= 826074471 x1627)) (= x178 (x2052 (- x1210 4))) (= x1627 1889567281) (= x1001 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x178) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x178) true) (< x178 32))))) x1902)) (not x2612)) (and (=> x1001 x1923) (=> (and (and (= (= x2156 x2574) x2669) (= x632 x2574)) (not x1001)) (and (=> (and x2669 (and (= x2458 32) (= x2611 (x1114 x1967)) (= (x19 (x2619 x2574) (x71 1) 0) x1967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2611) (<= 0 x2611) (= 1 x1945))) x1145) (=> (not x2669) x1923))))))))) (=> (and x1865 (and (not (< x367 1889567281)) (= x367 1889567281) (< x367 2646777772) (= (x2052 (- x244 4)) x1122) (= x558 x244) (= 36 x244) (< x367 3053082678) (= x496 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1122) true) (< x1122 32)) (> x1122 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2159) (< 0 x1573) (not (> 4 x244)) (= x1036 x2156) (= (x2484 (x2619 x448)) x1573))) (and (=> x496 x404) (=> (and (and (= (= x2156 x1036) x28) (= x1036 x1384)) (not x496)) (and (=> (not x28) x404) (=> (and (and (= 32 x1549) (<= 0 x166) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x166) (= x1284 (x19 (x2619 x1036) (x71 2) 0)) (= 1 x2362) (= x166 (x1152 x1284))) x28) x621))))))) (=> (and x2634 (= x414 x2)) x386))))) x1652))
(assert (= x150 (and x133 (not x2511))))
(assert (= (=> (and (= x2458 x809) (= x819 x1945)) x1021) x1145))
(assert (x593 x899))
(assert (x593 x769))
(assert (= (and x2496 x384) x1046))
(assert (= (and x104 x1948) x1133))
(assert (x593 x1355))
(assert (= (+ (x2465 x492) 1) (x2465 (x112 x492 1))))
(assert (= (=> (and (= x1945 0) (= x1302 x2458)) x1145) x1923))
(assert (= x2406 (=> (and (or (not x467) x467) (= x467 (= 0 x2501))) x2305)))
(assert (x210 x1270))
(assert (= (x2465 (x112 x1528 1)) (+ 1 (x2465 x1528))))
(assert (= x1990 (=> (and (= x477 x2541) (= x2389 x2542)) x1170)))
(assert (x593 x733))
(assert (=> (>= 10000 x347) (= (x71 x347) (x2619 x347))))
(assert (= (x2465 (x2619 x1036)) x1036))
(assert (x593 x902))
(assert (x593 x374))
(assert (x593 x935))
(assert (x593 x343))
(assert (= (and x307 (not x1541)) x2516))
(assert (= x2679 (x2465 (x2619 x2679))))
(assert (= 0 (x25 x2099)))
(assert (x593 x1802))
(assert (x593 x455))
(assert (x593 x1202))
(assert (= (or (and (not x630) x432) x2709) x1947))
(assert (=> (>= 10000 x1911) (= (x2619 x1911) (x71 x1911))))
(assert (= x618 (and x1927 x1392)))
(assert (x593 x382))
(assert (x593 x590))
(assert (x593 x2059))
(assert (= x1665 (=> (and (= x2604 0) (= x88 x324)) x205)))
(assert (x593 x1094))
(assert (= (and x1791 (not x391)) x2322))
(assert (= (and x32 x2022) x1080))
(assert (x593 x1847))
(assert (x593 x1359))
(assert (x593 x757))
(assert (=> (<= x2249 10000) (= (x71 x2249) (x2619 x2249))))
(assert (= (and x1390 x1683) x776))
(assert (= (and x1460 x1734) x1127))
(assert (= x1511 (=> (and (= x1730 x762) (= x2519 x1700)) x640)))
(assert (x593 x448))
(assert (x593 x1168))
(assert (x593 x916))
(assert (x593 x1591))
(assert (= x1021 (=> (and (= x993 (x2155 (+ x809 31))) (= (x2155 (+ x414 x436)) x2038) (not (= 0 x819)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x809) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x809)) (< x809 32)))) (= (x2543 x1540) x1487) (= (< 0 x1487) x2537) (= x1540 x414) (= (x1958 115792089237316195423570985008687907853269984665640564039457584007913129639904 x993) x436)) (and (=> (not x2537) x1810) (=> (and x2537 (and (= x1502 (x2543 x1202)) (= x331 (x1958 1461501637330902918203684832716283019655932542975 x1562)) (= (= x583 x448) x1905) (= x583 (x1958 1461501637330902918203684832716283019655932542975 x310)) (= (x2155 (+ 4 x2038)) x892) (< 0 x1502) (= (x2155 (+ x1202 32)) x2398) (= (x2155 (+ 32 x892)) x978))) (and (=> (and x1905 (and (= x2142 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1334) true) (> 64 x1334)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1334))) (not (= x834 2678909723)) (= x141 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x834 2646777772)) (= x331 x1983) (not (> 4 x1279)) (= x834 2835717307) (not (< x834 2646777772)) (< x834 3053082678) (= 68 x1279) (= x681 x1487) (= (x2052 (- x1279 4)) x1334) (= x2333 (x2484 (x2619 x448))) (not (< x834 1889567281)) (> x2333 0))) (and (=> (and (and (= x1983 x1040) (= (= x331 x1983) x248)) (not x2142)) (and (=> (not x248) x1495) (=> (and (and (<= 0 x434) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x434) (= x434 (x1152 x1503)) (= x18 (< x434 x1487)) (= x1503 (x19 (x2619 x2156) (x71 2) 0)) (= x681 x1219)) x248) (and (=> (and (= (> x681 x434) x2110) (not x18)) (and (=> x2110 x1495) (=> (and (not x2110) (and (= (x654 x1223) x1854) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x681)) x852) (= x2312 (x19 (x2619 x2156) (x71 2) 0)) (<= x1854 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1223 (x19 (x2619 x1983) (x71 2) 0)) (>= x1854 0) (= (< x852 x1854) x407) (= (x2052 (- x434 x681)) x1893))) (and (=> x407 x1495) (=> (and (and (= (< x714 x1854) x276) (= (x2155 (+ x1854 x681)) x714)) (not x407)) (and (=> (and (not x276) (and (= x2581 1) (= x2423 32) (= x1209 x638))) x2632) (=> x276 x1495))))))) (=> x18 x1495))))) (=> x2142 x1495))) (=> (and (= (= x583 x2001) x1600) (not x1905)) (and (=> (and (not x1600) (= (= x1877 x583) x577)) (and (=> (and (and (not (< x1497 4)) (= x261 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2514000705 x1005)) (> x130 0) (= (or (> x1836 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1836 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1836 64))) x10) (not (= 1889567281 x1005)) (= 68 x1497) (= x674 x1487) (not (> 826074471 x1005)) (= x130 (x2484 (x2619 x1877))) (= x1005 2835717307) (not (= x1005 826074471)) (= x1836 (x2052 (- x1497 4))) (= x331 x2072)) x577) (and (=> x10 x2518) (=> (and (not x10) (and (= (= x331 x2072) x633) (= x212 x2072))) (and (=> (not x633) x2518) (=> (and (and (= x674 x1777) (<= 0 x609) (= (> x1487 x609) x1616) (= (x19 (x2619 x2156) (x71 1) 0) x2367) (= (x1610 x2367) x609) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x609)) x633) (and (=> x1616 x2518) (=> (and (not x1616) (= (< x609 x674) x533)) (and (=> (and (not x533) (and (= (x19 (x2619 x2156) (x71 1) 0) x719) (= x1840 (x2052 (- x609 x674))) (= (x2657 x661) x2057) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2057) (<= 0 x2057) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x674)) x2226) (= (> x2057 x2226) x1393) (= x661 (x19 (x2619 x2072) (x71 1) 0)))) (and (=> (and (and (= x1376 (< x875 x2057)) (= (x2155 (+ x2057 x674)) x875)) (not x1393)) (and (=> (and (and (= x733 1) (= x477 1) (= 32 x2389) (= x2585 x937)) (not x1376)) x1990) (=> x1376 x2518))) (=> x1393 x2518))) (=> x533 x2518))))))))) (=> (and (and (and (and (= (x2052 (- x2096 4)) x898) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1989) (> x1169 0) (= x1487 x590) (not (= 2514000705 x1940)) (not (= x1940 1889567281)) (not (< x2096 4)) (not (= x1940 826074471)) (= x1169 (x2484 (x2619 x863))) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x898)) (< x898 64)) (> x898 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x391) (= 2835717307 x1940) (= x1270 x331) (= 68 x2096) (not (> 826074471 x1940))) x2319) (= (= x863 x583) x2319)) (not x577)) (and (=> x391 x33) (=> (and (not x391) (and (= x340 (= x1270 x331)) (= x1270 x859))) (and (=> (not x340) x33) (=> (and x340 (and (<= 0 x2579) (= (x1114 x1722) x2579) (= (> x1487 x2579) x2070) (<= x2579 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x590 x2379) (= x1722 (x19 (x2619 x2156) (x71 1) 0)))) (and (=> (and (= x437 (> x590 x2579)) (not x2070)) (and (=> x437 x33) (=> (and (not x437) (and (= (x2052 (- x2579 x590)) x1712) (= (> x2192 x280) x221) (= (x19 (x2619 x1270) (x71 1) 0) x1360) (= x356 (x19 (x2619 x2156) (x71 1) 0)) (= (x1369 x1360) x2192) (>= x2192 0) (= x280 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x590))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2192))) (and (=> (and (not x221) (and (= (x2155 (+ x2192 x590)) x1802) (= x1496 (> x2192 x1802)))) (and (=> (and (and (= (x19 (x2619 x1270) (x71 1) 0) x323) (= 1 x736) (= x1591 x181) (= 1 x1243) (= 32 x2534)) (not x1496)) x2564) (=> x1496 x33))) (=> x221 x33))))) (=> x2070 x33))))))))) (=> (and x1600 (and (= x1087 x1487) (> x591 0) (= x292 x331) (= x2097 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2213 68) (not (< x1137 2646777772)) (not (= x1137 2646777772)) (= x1221 (or (> x223 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x223 64) (= true (<= x223 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x2052 (- x2213 4)) x223) (= (x2484 (x2619 x2001)) x591) (= x1137 2835717307) (not (< x2213 4)) (not (= 2678909723 x1137)) (> 3053082678 x1137) (not (< x1137 1889567281)))) (and (=> x1221 x266) (=> (and (not x1221) (and (= (= x331 x292) x1186) (= x292 x1294))) (and (=> (not x1186) x266) (=> (and (and (= x1828 x1087) (>= x1493 0) (= x1493 (x1764 x698)) (= (x19 (x2619 x2156) (x71 2) 0) x698) (<= x1493 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1487 x1493) x1485)) x1186) (and (=> x1485 x266) (=> (and (= (> x1087 x1493) x1429) (not x1485)) (and (=> x1429 x266) (=> (and (not x1429) (and (>= x2079 0) (= x940 (> x2079 x1648)) (= (x19 (x2619 x292) (x71 2) 0) x373) (= (x19 (x2619 x2156) (x71 2) 0) x255) (= x2079 (x1545 x373)) (= x1648 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1087))) (= (x2052 (- x1493 x1087)) x785) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2079))) (and (=> (and (and (= x2166 (x2155 (+ x1087 x2079))) (= x750 (< x2166 x2079))) (not x940)) (and (=> (and (not x750) (and (= x395 32) (= x1174 1) (= x1322 x1819))) x547) (=> x750 x266))) (=> x940 x266)))))))))))))))))))
(assert (x593 x2481))
(assert (= (and (not x999) x1121) x542))
(assert (x593 x1448))
(assert (x593 x2177))
(assert (x593 x1462))
(assert (=> (<= x1983 10000) (= (x2619 x1983) (x71 x1983))))
(assert (x593 x1877))
(assert (= x1358 (and (not x10) x1343)))
(assert (= (and x2654 x1224) x635))
(assert (= (or x2297 x536 x313 x1900 x483 x1127 x1630) x2224))
(assert (x593 x1091))
(assert (= x2707 (and x2395 (not x1600))))
(assert (x593 x1988))
(assert (x210 x1649))
(assert (x593 x775))
(assert (= (x2465 (x2619 x1200)) x1200))
(assert (x593 x2695))
(assert (x2381 x1160))
(assert (x593 x108))
(assert (x1116 x2101))
(assert (= (x71 872247156) (x2619 872247156)))
(assert (= x1504 (=> (and (= x1120 x1364) (= 0 x1672)) x1849)))
(assert (x593 x1363))
(assert (x593 x85))
(assert (= x2065 (and (not x1044) x760)))
(assert (x593 x2114))
(assert (= (x71 1889567281) (x2619 1889567281)))
(assert (= x2422 (and x90 x766)))
(assert (x593 x554))
(assert (x593 x1028))
(assert (= x1406 (and x1370 x1851)))
(assert (= x389 (or x87 x1773)))
(assert (= (or x2224 x54) x1961))
(assert (= x1964 (and x1600 x2395)))
(assert (x2384 x89))
(assert (x593 x279))
(assert (x593 x1835))
(assert (= (and x1458 (not x99)) x1215))
(assert (x593 x494))
(assert (x593 x2215))
(assert (x593 x1983))
(assert (= (=> (and (= x105 x2613) (= x120 x359)) x2047) x1567))
(assert (= (or x1625 x2466 x939 x1620 x2349 x570) x584))
(assert (= (x2619 1461501637330902918203684832716283019655932542976) (x71 1461501637330902918203684832716283019655932542976)))
(assert (x593 x1041))
(assert (x593 x2306))
(assert (= x760 (and (not x2454) x1733)))
(assert (= x1531 (and (not x1866) x1728)))
(assert (= (=> (= x2501 x775) x2406) x1593))
(assert (x593 x1700))
(assert (= x637 (and (not x1103) x575)))
(assert (= (and x2034 (not x2123)) x2393))
(assert (x593 x166))
(assert (x593 x692))
(assert (x593 x561))
(assert (x593 x1285))
(assert (x593 x1602))
(assert (x210 x863))
(assert (= (and x622 x635) x48))
(assert (= x1644 (and x1583 x1129)))
(assert (x593 x203))
(assert (= (x2465 (x71 2678909723)) 2678909723))
(assert (x593 x1896))
(assert (= x132 (and x1755 x2710)))
(assert (= (or x1319 x675 x988 x200) x14))
(assert (x593 x2531))
(assert (= x119 (and (not x2336) x2147)))
(assert (x593 x2618))
(assert (x593 x2575))
(assert (= (x2465 (x2619 x1581)) x1581))
(assert (x593 x2333))
(assert (x593 x850))
(assert (x593 x1584))
(assert (= (=> (and (= x2015 x2185) (= x333 0)) x45) x2004))
(assert (x593 x1347))
(assert (= x1859 (and (not x1935) x720)))
(assert (= x1877 (x2465 (x2619 x1877))))
(assert (= (and x421 x1747) x1517))
(assert (x593 x682))
(assert (x593 x2608))
(assert (=> (<= x491 10000) (= (x71 x491) (x2619 x491))))
(assert (x593 x681))
(assert (= x1445 (and x157 x2382)))
(assert (= (or (and x2438 (not x269)) x507) x2337))
(assert (= (and x703 (not x1884)) x93))
(assert (= (and x162 (not x928)) x1845))
(assert (= (and x565 (not x410)) x1499))
(assert (x593 x2260))
(assert (= 3756033516 (x2465 (x71 3756033516))))
(assert (x593 x821))
(assert (x593 x1718))
(assert (x2384 x1519))
(assert (= (and x858 x1190) x1218))
(assert (x593 x345))
(assert (x593 x1174))
(assert (x593 x891))
(assert (= (and x2449 x1636) x1797))
(assert (= x795 (or x2341 (and x782 (not x467)))))
(assert (= x230 (=> (and (not (> 1926446194 x1787)) (= (x2155 (+ 4 x1202)) x582) (= x716 x1878) (not (> 4 x2407)) (= (x1958 1461501637330902918203684832716283019655932542975 x1562) x1878) (= 36 x2407) (= x1787 2445980732) (not (< x1787 2445980732)) (= x518 (x2052 (- x1816 x1202))) (< x1787 2867092931) (> x1798 0) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x182) (and (> 32 x182) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x182) true))) x1419) (= x1816 (x2155 (+ x582 32))) (= (x2484 (x2619 x206)) x1047) (= (x2052 (- x2407 4)) x182) (= x2407 x518) (= x1470 x2357) (= (x2484 (x2619 x206)) x1798) (= 65943510083598082279227955258803319933472635617035506777028864765220054106112 x2699) (= x2357 (x1958 1461501637330902918203684832716283019655932542975 x1562)) (not (= 0 x1047)) (= x582 x474)) (and (=> (and (not x1419) (and (= x2170 x716) (= true x70))) (and (=> (and x70 (and (and (< x625 1461501637330902918203684832716283019655932542976) (= x625 (x1049 x492)) (= x641 128) (= (x112 x1528 1) x492) (= (= x2520 x1112) x2360) (= (x1958 1461501637330902918203684832716283019655932542975 x679) x1112) (= x1528 (x19 (x2619 x716) (x71 3) 0)) (>= x625 0) (>= 1461501637330902918203684832716283019655932542975 x625)) (and (and (= x2618 1784838210) (not (> 4 x2558)) (= x748 48119142951092613731468242753959111846395615040638799039548226541748339343360) (= (x2052 (- x2558 4)) x1533) (> x1720 0) (= 36 x2558) (= 36 x2558) (= x1720 (x2484 (x2619 x2520))) (= x2331 x625) (= x2078 (or (and (< x1533 32) (= true (<= x1533 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1533)))) x2360))) (and (=> (and (not x2078) (and (= x2331 x1597) (= x40 (= x2331 x625)))) (and (=> (not x40) x1976) (=> (and x40 (and (= 128 x416) (= (= 0 x1895) x1268) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1026) (>= x1026 0) (= x1895 (x2484 (x2619 x2331))))) (and (=> (and (= (= x448 x2331) x556) (not x1268)) (and (=> (and (and (and x145 (and (= 68 x524) (> 1889567281 x349) (= 68 x524) (> x2177 0) (= x2270 (x2052 (- x524 4))) (= x349 604024478) (< x349 856900995) (not (< x349 604024478)) (= x1026 x1453) (= x206 x2679) (= x744 16284467712533504949339770971755156993396464521235680726719773044698144309248) (= x2177 (x2484 (x2619 x2001))) (not (> 4 x524)) (= x2513 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2270)) (< x2270 64)) (> x2270 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (= x2331 x2001) x145)) (not x556)) (and (=> x2513 x2069) (=> (and (not x2513) (and (= x2325 (= x2679 x206)) (= x2679 x1335))) (and (=> (not x2325) x2069) (=> (and x2325 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x974) (= x2557 (x19 (x2619 x2679) (x71 16) 0)) (= (> x974 x2163) x99) (= x2163 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1026))) (<= 0 x974) (= (x2475 x2557) x974))) (and (=> (and (not x99) (and (= x2536 1) (= (x2155 (+ x974 x1453)) x260))) x1449) (=> x99 x2069))))))) (=> (and x556 (and (< x1938 1889567281) (> 856900995 x1938) (not (< x1966 4)) (= x206 x76) (= (or (> x1988 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1988 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1988 64))) x2659) (not (> 604024478 x1938)) (= 16284467712533504949339770971755156993396464521235680726719773044698144309248 x1347) (= 68 x1966) (= x1026 x1173) (= x1966 68) (> x2608 0) (= x2608 (x2484 (x2619 x448))) (= 604024478 x1938) (= x1988 (x2052 (- x1966 4))))) (and (=> x2659 x1342) (=> (and (and (= (= x206 x76) x1611) (= x76 x1015)) (not x2659)) (and (=> (and (and (= x1483 (x19 (x2619 x76) (x71 16) 0)) (= x842 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1026))) (>= x264 0) (= (x2517 x1483) x264) (<= x264 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1330 (> x264 x842))) x1611) (and (=> x1330 x1342) (=> (and (not x1330) (and (= x775 1) (= (x2155 (+ x1173 x264)) x193))) x1593))) (=> (not x1611) x1342))))))) (=> x1268 x1976))))) (=> x2078 x1976))) (=> (not x70) x2153))) (=> x1419 x2153)))))
(assert (x593 x583))
(assert (= (and x815 x2278) x741))
(assert (=> (<= x583 10000) (= (x2619 x583) (x71 x583))))
(assert (= x1824 (and (not x1178) x2648)))
(assert (x593 x115))
(assert (x593 x194))
(assert (= x355 (x2465 (x2619 x355))))
(assert (= (and (not x437) x352) x419))
(assert (= x1482 (and x125 x219)))
(assert (=> (<= x2574 10000) (= (x71 x2574) (x2619 x2574))))
(assert (= (and (not x2022) x32) x2472))
(assert (= x2571 (and x2529 x2003)))
(assert (x593 x170))
(assert (x593 x1667))
(assert (= (and x1541 x307) x1885))
(assert (= (=> (= x1744 x935) x948) x2280))
(assert (x593 x2127))
(assert (x593 x1813))
(assert (x593 x2326))
(assert (x593 x2138))
(assert (= (and (not x972) x2037) x1373))
(assert (x593 x2111))
(assert (x593 x1025))
(assert (= (x2619 856900995) (x71 856900995)))
(assert (= (and x783 (not x1038)) x1826))
(assert (x593 x1843))
(assert (x593 x1437))
(assert (= x1513 (and x755 x1859)))
(assert (= (and (not x989) x1304) x2496))
(assert (= (=> (= (= 0 x935) x1636) (and (=> (and (= x229 1) (not x1636)) x52) (=> (and x1636 (= x707 0)) x1704))) x1916))
(assert (= x1791 (and x2697 x2319)))
(assert (= (and x865 x1149) x718))
(assert (= x925 (and x2068 x2448)))
(assert (=> (>= 10000 x2156) (= (x71 x2156) (x2619 x2156))))
(assert (= x1853 (and x2431 x2614)))
(assert (x593 x844))
(assert (x593 x2281))
(assert (= (or x1678 x764) x2636))
(assert (= x1747 (and (not x1991) x2442)))
(assert (= (and x375 x2070) x1710))
(assert (= x2591 (and (not x1812) x1875)))
(assert (x593 x1409))
(assert (x593 x1073))
(assert (x593 x1276))
(assert (= (or x444 x961 x142 x450 x888 x144) x2667))
(assert (= (and x1421 (not x1485)) x2235))
(assert (= x778 (or x2623 x2125)))
(assert (x593 x638))
(assert (x593 x2387))
(assert (x593 x812))
(assert (= x2293 (and x1897 x1568)))
(assert (x593 x956))
(assert (x593 x748))
(assert (= x888 (and x2393 (not x350))))
(assert (x593 x2191))
(assert (= (and x2325 x2368) x1458))
(assert (x593 x1908))
(assert (= x2440 (or x592 x2124)))
(assert (x593 x329))
(assert (= (and (not x747) x644) x1875))
(assert (x593 x1691))
(assert (= x1386 (and x447 (not x496))))
(assert (= (or x2554 x8 x402 x1743) x2129))
(assert (x593 x1000))
(assert (x593 x1532))
(assert (x593 x225))
(assert (x593 x109))
(assert (x593 x6))
(assert (= x920 (and x1480 x818)))
(assert (x593 x1146))
(assert (x593 x1694))
(assert (x593 x2699))
(assert (= (and (not x1144) x2165) x1912))
(assert (= (and (not x1392) x1927) x1995))
(assert (x210 x292))
(assert (= x520 (and (not x2122) x2346)))
(assert (= (or x2309 x587 x1403 x664 x1308 x1524 x2510) x1250))
(assert (= x532 (or x2451 x2430 x389 x2636)))
(assert (x593 x2112))
(assert (x593 x797))
(assert (= x2090 (=> (= x1436 (= x1260 0)) (and (=> x1436 x128) (=> (and (not x1436) (and (= (x2155 (+ x727 x916)) x2677) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1563) (and (= true (<= x1563 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1563))) x1605) (= x2661 (x2155 (+ 31 x1563))) (= x916 (x1958 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2661)))) (and (=> (and (and (> 1461501637330902918203684832716283019655932542976 x1368) (= x2681 (x19 (x2619 x1368) (x71 17) 0)) (= (x2155 (+ 4 x2677)) x1868) (<= x1293 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2155 (+ 64 x1868)) x1477) (= (x2052 (- x1477 x2677)) x753) (= (x2155 (+ x1868 32)) x602) (< x1368 1461501637330902918203684832716283019655932542976) (<= 0 x1293) (= (x259 x1953) x1293) (= (x19 (x2619 x347) x2681 0) x1953) (= x104 (= x448 x1368))) (not x1605)) (and (=> (and (= x281 (= x2001 x1368)) (not x104)) (and (=> (and (= (= x1877 x1368) x2231) (not x281)) (and (=> (and (not x2231) (and (and x2453 (and (= (x2484 (x2619 x863)) x1472) (not (= 1889567281 x1729)) (< 0 x1472) (not (< x1753 4)) (= x397 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2502 x2621) (not (< x1729 826074471)) (= x1753 x753) (not (= x1729 826074471)) (= x1601 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x329) (and (> 64 x329) (= true (<= x329 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1753 68) (not (= 2514000705 x1729)) (= x1729 2835717307) (= x1292 x1293) (= (x2052 (- x1753 4)) x329))) (= (= x863 x1368) x2453))) (and (=> x1601 x2160) (=> (and (= (= x2502 x2621) x100) (not x1601)) (and (=> (not x100) x2160) (=> (and x100 (and (= (x19 (x2619 x2001) (x71 1) 0) x2253) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1066) (>= x1066 0) (= x126 x1292) (= (x2107 x2253) x1066) (= (> x1293 x1066) x160))) (and (=> (and (not x160) (= (< x1066 x1292) x1794)) (and (=> (and (not x1794) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x272) (= (x19 (x2619 x1589) (x71 1) 0) x1806) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1292)) x337) (>= x272 0) (= (x19 (x2619 x2001) (x71 1) 0) x1994) (= x272 (x1725 x1806)) (= x1105 (< x337 x272)) (= x2281 (x2052 (- x1066 x1292))))) (and (=> x1105 x2160) (=> (and (not x1105) (and (= x2300 (> x272 x2154)) (= x2154 (x2155 (+ x272 x1292))))) (and (=> (and (and (= x2324 (x19 (x2619 x1589) (x71 1) 0)) (= 1 x774) (= x1536 1) (= 32 x1206)) (not x2300)) x2568) (=> x2300 x2160))))) (=> x1794 x2160))) (=> x160 x2160))))))) (=> (and x2231 (and (= x840 (x2484 (x2619 x1877))) (= 2835717307 x1640) (= 68 x265) (not (= x1640 2514000705)) (= x265 x753) (not (> 4 x265)) (> x840 0) (not (= x1640 826074471)) (not (= x1640 1889567281)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x836) (= x676 x2502) (= (or (and (> 64 x101) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x101) true)) (> x101 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x867) (not (> 826074471 x1640)) (= (x2052 (- x265 4)) x101) (= x1293 x1355))) (and (=> x867 x1451) (=> (and (= x1724 (= x676 x2502)) (not x867)) (and (=> (and x1724 (and (= (x1232 x1523) x701) (<= x701 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x19 (x2619 x2001) (x71 1) 0) x1523) (<= 0 x701) (= x1355 x202) (= (> x1293 x701) x580))) (and (=> x580 x1451) (=> (and (= (< x701 x1355) x1929) (not x580)) (and (=> (and (and (= (x19 (x2619 x1589) (x71 1) 0) x2567) (= x1401 (< x1829 x58)) (<= x58 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1251 (x2052 (- x701 x1355))) (= (x19 (x2619 x2001) (x71 1) 0) x363) (= x58 (x1618 x2567)) (>= x58 0) (= x1829 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1355)))) (not x1929)) (and (=> (and (and (= x1032 (> x58 x1339)) (= (x2155 (+ x1355 x58)) x1339)) (not x1401)) (and (=> (and (not x1032) (and (= x338 32) (= 1 x1909) (= x2563 (x19 (x2619 x1589) (x71 1) 0)) (= 1 x808))) x924) (=> x1032 x1451))) (=> x1401 x1451))) (=> x1929 x1451))))) (=> (not x1724) x1451))))))) (=> (and x281 (and (= x2035 2835717307) (not (> 1889567281 x2035)) (= x240 (x2052 (- x2043 4))) (= x1693 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x422 (x2484 (x2619 x2001))) (= x1293 x1053) (= x2043 68) (not (> 4 x2043)) (> 3053082678 x2035) (> x422 0) (= x753 x2043) (not (< x2035 2646777772)) (= x1220 x2502) (not (= x2035 2678909723)) (not (= x2035 2646777772)) (= (or (and (< x240 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x240))) (> x240 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2708))) (and (=> x2708 x2589) (=> (and (= x1492 (= x1220 x2502)) (not x2708)) (and (=> (not x1492) x2589) (=> (and (and (= x1053 x351) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1459) (= x1459 (x691 x2649)) (<= 0 x1459) (= (x19 (x2619 x2001) (x71 2) 0) x2649) (= x463 (< x1459 x1293))) x1492) (and (=> x463 x2589) (=> (and (not x463) (= x314 (> x1053 x1459))) (and (=> (and (not x314) (and (= (x19 (x2619 x2001) (x71 2) 0) x1687) (<= x2575 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2575 0) (= (x19 (x2619 x1589) (x71 2) 0) x151) (= x1969 (> x2575 x1065)) (= x2436 (x2052 (- x1459 x1053))) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1053)) x1065) (= (x1014 x151) x2575))) (and (=> x1969 x2589) (=> (and (not x1969) (and (= x1508 (x2155 (+ x1053 x2575))) (= x49 (> x2575 x1508)))) (and (=> (and (not x49) (and (= x1796 1) (= (x19 (x2619 x1589) (x71 2) 0) x1783) (= 32 x1933))) x475) (=> x49 x2589))))) (=> x314 x2589))))))))))) (=> (and (and (= x1293 x480) (= (x2052 (- x1366 4)) x1682) (< 0 x180) (= x1366 68) (not (= 2646777772 x186)) (not (< x186 2646777772)) (= x1366 x753) (not (> 4 x1366)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1682) (and (< x1682 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1682)))) x1514) (> 3053082678 x186) (not (= 2678909723 x186)) (= x180 (x2484 (x2619 x448))) (= x2482 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x186 1889567281)) (= 2835717307 x186) (= x2502 x2387)) x104) (and (=> (and (not x1514) (= x2356 (= x2502 x2387))) (and (=> (and (and (<= x880 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2685 (> x1293 x880)) (= x944 (x19 (x2619 x2001) (x71 2) 0)) (>= x880 0) (= x480 x1899) (= (x298 x944) x880)) x2356) (and (=> x2685 x267) (=> (and (not x2685) (= (> x480 x880) x2396)) (and (=> x2396 x267) (=> (and (not x2396) (and (<= 0 x2347) (= x2694 (x19 (x2619 x1589) (x71 2) 0)) (<= x2347 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2052 (- x880 x480)) x116) (= x1913 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x480))) (= x2347 (x789 x2694)) (= x1291 (< x1913 x2347)) (= x1351 (x19 (x2619 x2001) (x71 2) 0)))) (and (=> x1291 x267) (=> (and (and (= (x2155 (+ x2347 x480)) x92) (= x771 (> x2347 x92))) (not x1291)) (and (=> (and (not x771) (and (= x2330 32) (= x2277 1) (= (x19 (x2619 x1589) (x71 2) 0) x1035))) x1022) (=> x771 x267))))))))) (=> (not x2356) x267))) (=> x1514 x267))))) (=> x1605 x128)))))))
(assert (x593 x2))
(assert (= (and x214 (not x1679)) x848))
(assert (= x2714 (and x1645 x103)))
(assert (= (and (not x442) x1416) x604))
(assert (= (x71 3467235951) (x2619 3467235951)))
(assert (x593 x2584))
(assert (= x44 (=> (and (= x819 x1602) (= x2343 x809)) x1021)))
(assert (= (and x335 x2580) x429))
(assert (x593 x2173))
(assert (= 2835717307 (x2465 (x71 2835717307))))
(assert (= (and x1673 (not x2040)) x327))
(assert (= (and x1303 x1526) x1182))
(assert (x593 x1425))
(assert (x593 x1712))
(assert (= x209 (or (and x2273 (not x2141)) (and x245 x740))))
(assert (x593 x220))
(assert (= (x71 65943510083598082279227955258803319933472635617035506777028864765220054106112) (x2619 65943510083598082279227955258803319933472635617035506777028864765220054106112)))
(assert (x593 x414))
(assert (= x1033 (and x61 (not x40))))
(assert (x593 x1809))
(assert (x593 x2536))
(assert (x593 x331))
(assert (= x1603 (and (not x643) x2193)))
(assert (= (and (not x173) x2429) x870))
(assert (= x1903 (and x2417 x2027)))
(assert (= x1544 (or x358 x1333)))
(assert (x2381 x309))
(assert (x210 x1532))
(assert (= (or x438 x1457) x113))
(assert (x593 x1924))
(assert (= x304 (and x1296 (not x1981))))
(assert (= x2093 (and (not x423) x118)))
(assert (= (or x1921 x896) x214))
(assert (= (x2619 3053082678) (x71 3053082678)))
(assert (= (and x1313 (not x1143)) x2158))
(assert (= (and x2337 (not x1548)) x598))
(assert (= x227 (and x2603 x1340)))
(assert (x593 x2621))
(assert (x593 x2072))
(assert (= (and x2322 (not x340)) x1081))
(assert (= (or x2323 x2635) x2489))
(assert (x593 x228))
(assert (= (x2465 (x2619 x1270)) x1270))
(assert (x593 x1446))
(assert (= x2016 (and x27 x2499)))
(assert (= x1261 (x2465 (x2619 x1261))))
(assert (x593 x702))
(assert (= x2507 (and x853 (not x700))))
(assert (= x41 (and (not x1565) x900)))
(assert (= x1728 (and (not x2106) x429)))
(assert (= (and x1246 (not x560)) x703))
(assert (= x2291 (=> (and (or x1102 (not x1102)) (= (= 0 x1260) x1102)) x2090)))
(assert (x593 x1045))
(assert (= (=> (and (= 0 x2362) (= x1549 x1302)) x621) x404))
(assert (= (or x2590 x1046 x1867 x1666 x2522 x227) x2168))
(assert (= (x71 72223263258191293651604190264004579703475585967499159981614695267027195527168) (x2619 72223263258191293651604190264004579703475585967499159981614695267027195527168)))
(assert (x210 x206))
(assert (x593 x176))
(assert (= (and x923 x598) x569))
(assert (x593 x1527))
(assert (x593 x206))
(assert (= 0 (x25 x1540)))
(assert (x593 x312))
(assert (x210 x491))
(assert (= x2377 (and x354 x2300)))
(assert (x593 x2023))
(assert (x593 x158))
(assert (x593 x791))
(assert (= x1362 (and x529 x1850)))
(assert (x2381 x2661))
(assert (x593 x1557))
(assert (= (and x2193 x643) x664))
(assert (= x45 (=> (and (= x2015 x762) (= x333 x1700)) x640)))
(assert (= x728 (and (not x755) x1859)))
(assert (x593 x1112))
(assert (= x2309 (and x1912 x1661)))
(assert (= (and (not x1944) x1993) x684))
(assert (= (x2465 (x71 29289127993025145568725129057828671567744754166070328588094505464281371246592)) 29289127993025145568725129057828671567744754166070328588094505464281371246592))
(assert (x593 x400))
(assert (x593 x579))
(assert (= x500 (or x1858 x1406 x2080 x1183 x1531 x508)))
(assert (= (=> (and (= x59 x1120) (= 0 x2116)) x1588) x2359))
(assert (= (x2465 (x2619 x292)) x292))
(assert (= (=> (and (= x2376 (= 0 x439)) (or (not x2376) x2376)) x2178) x1306))
(assert (= x564 (or (and x496 x447) (and x1386 (not x28)))))
(assert (x210 x76))
(assert (x593 x2579))
(assert (x593 x1048))
(assert (x593 x122))
(assert (x593 x106))
(assert (x593 x309))
(assert (x593 x409))
(assert (= (or x530 (and x1827 x1874)) x1476))
(assert (= x1240 (=> (and (= 0 x1372) (= x2215 x251)) x2391)))
(assert (x210 x1581))
(assert (= x2346 (and x747 x644)))
(assert (= (=> (and (= 0 x682) (= x806 x85)) x626) x1574))
(assert (x593 x1579))
(assert (x593 x485))
(assert (x593 x1549))
(assert (x593 x64))
(assert (= x1319 (or x511 x2065)))
(assert (x593 x1195))
(assert (x593 x911))
(assert (x593 x934))
(assert (x593 x1039))
(assert (= (and (not x2457) x2265) x135))
(assert (= (and x1043 (not x663)) x646))
(assert (= (or x1465 x460 x553 x2460 x1262 x2544) x511))
(assert (x593 x1640))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2465 (x71 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x593 x1756))
(assert (x593 x1795))
(assert (= x2069 (=> (= x2536 0) x1449)))
(assert (= x1921 (and x1812 x1875)))
(assert (= (and x1431 x673) x1900))
(assert (= x2037 (and (not x1018) x441)))
(assert (= (=> (and (= 0 x2519) (= x2185 x1730)) x1511) x1715))
(assert (= x628 (and x1565 x900)))
(assert (x593 x1754))
(assert (= (and (not x1905) x1180) x2395))
(assert (= (=> (= x845 (> x105 0)) (and (=> (not x845) x2153) (=> (and (= x747 (= x359 0)) x845) (and (=> (and (= x1812 (= x359 32)) (not x747)) (and (=> (not x1812) x2153) (=> (and (and (= (ite x2318 1 0) x1579) (= (not x317) x2318) (= (= 0 x2170) x317)) x1812) x732))) (=> (and (and (= x2122 (> x1359 0)) (= x1359 (x2484 (x2619 x491)))) x747) (and (=> (and x2122 (= x1579 1)) x732) (=> (not x2122) x2153))))))) x515))
(assert (x593 x808))
(assert (= x67 (and x2413 (not x1436))))
(assert (x593 x979))
(assert (= (and (not x1490) x2179) x313))
(assert (= x2317 (or x1321 x1426 x1910 x2646 x2228 x1248)))
(assert (x593 x2519))
(assert (x593 x1561))
(assert (x593 x1383))
(assert (x593 x1945))
(assert (x593 x1203))
(assert (= x2169 (and (not x1429) x2235)))
(assert (x593 x2126))
(assert (x593 x794))
(assert (x210 x1261))
(assert (x593 x2028))
(assert (x593 x1344))
(assert (=> (>= 10000 x1581) (= (x2619 x1581) (x71 x1581))))
(assert (x593 x120))
(assert (= (x2619 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x71 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x593 x236))
(assert (x593 x480))
(assert (= (and x67 (not x1605)) x1948))
(assert (= (x2465 (x71 48119142951092613731468242753959111846395615040638799039548226541748339343360)) 48119142951092613731468242753959111846395615040638799039548226541748339343360))
(assert (x593 x1913))
(assert (x593 x756))
(assert (x593 x2424))
(assert (x210 x2001))
(assert (x593 x129))
(assert (= (and x2450 x637) x1183))
(assert (x593 x2596))
(assert (x593 x762))
(assert (= 1784838210 (x2465 (x71 1784838210))))
(assert (= x29 (or x1167 x2098 x215 x1135 x2473 x1654)))
(assert (x593 x509))
(assert (x210 x583))
(assert (x593 x2362))
(assert (= (and x2346 x2122) x896))
(assert (x593 x1798))
(assert (= x1685 (and (not x1902) x2012)))
(assert (= (and x2237 (not x2356)) x1068))
(assert (= (and (not x145) x1157) x392))
(assert (= (x2465 (x2619 x448)) x448))
(assert (= x1628 (or x2282 x2168)))
(assert (x593 x2351))
(assert (= (x2465 (x2619 x583)) x583))
(assert (= x1456 (=> (and (= x769 x1680) (= x1110 0)) x1985)))
(assert (= 74228146054641364427485594382366355075153451190847473373747070783662162182144 (x2465 (x71 74228146054641364427485594382366355075153451190847473373747070783662162182144))))
(assert (= x2437 (and x77 x1496)))
(assert (= (x2619 2678909723) (x71 2678909723)))
(assert (x210 x1877))
(assert (= x1207 (=> (and (= x2059 0) (= x769 x1766)) x69)))
(assert (x593 x1122))
(assert (=> (>= 10000 x863) (= (x71 x863) (x2619 x863))))
(assert (= (and x1947 x845) x644))
(assert (x593 x481))
(assert (x593 x1065))
(assert (x593 x680))
(assert (= (and (not x1107) x1619) x567))
(assert (= (+ 1 (x2465 x2026)) (x2465 (x112 x2026 1))))
(assert (x593 x970))
(assert (x593 x993))
(assert (= (=> (and (= 0 x2581) (= x2423 x2051)) x2632) x1495))
(assert (= (and x160 x1571) x2274))
(assert (x593 x912))
(assert (= (and x484 x1580) x1937))
(assert (x593 x2375))
(assert (x593 x1274))
(assert (x593 x286))
(assert (= x2352 (=> (and (>= x82 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x82) (not (< x2576 826074471)) (= x1804 x1941) (= (ite (= x2306 0) x579 (ite (= x2306 32) x2021 (ite (= x2306 64) x2 (ite x1336 (x2494 x2306) (ite x770 (x208 x2306) (ite x2620 (x1698 x2306) (ite x1684 (x1012 x2306) (x2146 x2306)))))))) x1501) (= x1045 (mod (* 32 x396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2484 (x2619 x863)) x2651) (= x82 x743) (= x91 (x19 (x2619 x2156) (x71 1) 0)) (= x1804 (x2155 (+ x64 x1841))) (< 0 x2651) (= x396 x1862) (= x64 (mod (* x396 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x2156 1461501637330902918203684832716283019655932542975) (= x2306 x2) (= x2576 1889567281) (= (x140 x91) x82) (= x108 x1255) (not (= x2576 826074471)) (= x1255 (x2155 (+ x1045 x107)))) (not (and (= x1295 x743) (= x2311 x2644) (= x1844 x1295) (= x2550 (= x2311 x1844)) x2550)))))
(assert (x593 x545))
(assert (x593 x223))
(assert (x593 x2435))
(assert (= (and x2169 x940) x1428))
(assert (x593 x1627))
(assert (= x2385 (and x2404 x148)))
(assert (x593 x1366))
(assert (x593 x2686))
(assert (= (x2619 826074471) (x71 826074471)))
(assert (= (and (not x1330) x490) x12))
(assert (= (x2465 (x2619 x1911)) x1911))
(assert (= x1034 (and x1388 (not x1393))))
(assert (= x688 (and x2083 x37)))
(assert (= (and x2016 x526) x2442))
(assert (x593 x1020))
(assert (= x825 (or x380 x1297)))
(assert (= (and x1393 x1388) x2148))
(assert (x593 x2615))
(assert (= x2153 (=> (and (= 0 x878) (= x595 x1519) (= x185 x478) (= x1368 x1506) (= x835 x1160) (= x2532 x1649) (= x204 x1890)) x854)))
(assert (= x1815 (and x405 x2092)))
(assert (x593 x980))
(assert (= (x2465 (x2619 x2249)) x2249))
(assert (= x943 (and (not x2603) x1340)))
(assert (= (or x1736 x2050 x922 x2433 x2383 x1986) x832))
(assert (x593 x2285))
(assert (x593 x609))
(assert (= (and (not x1780) x2184) x2228))
(assert (x593 x2690))
(assert (x593 x1209))
(assert (x593 x2255))
(assert (x593 x251))
(assert (= (and x901 x119) x328))
(assert (x593 x2033))
(assert (= x2589 (=> (and (= x1979 x1933) (= 0 x1796)) x475)))
(assert (x593 x522))
(assert (x593 x351))
(assert (x593 x452))
(assert (x593 x1521))
(assert (x593 x1329))
(assert (x593 x2315))
(assert (= x2080 (and x1769 x2258)))
(assert (x593 x1748))
(assert (= (and (not x2137) x991) x645))
(assert (= x2486 (and x1724 x2599)))
(assert (x593 x2048))
(assert (= x2236 (and x663 x1043)))
(assert (x593 x1572))
(assert (x593 x1132))
(assert (x593 x416))
(assert (= (and x150 (not x2704)) x2573))
(assert (x593 x1799))
(assert (x593 x534))
(assert (x593 x1669))
(assert (x593 x574))
(assert (= (and (not x285) x1476) x335))
(assert (x593 x2101))
(assert (= x1788 (and (not x1525) x2714)))
(assert (= x138 (=> (and (or (not x1086) x1086) (= (= 0 x2399) x1086)) x1142)))
(assert (= (x2619 2952933380) (x71 2952933380)))
(assert (= (and x559 x2308) x1438))
(assert (= x1022 (=> (and (= x2039 x2277) (= x2330 x1584)) x1412)))
(assert (= x412 (and (not x822) x2422)))
(assert (x593 x1427))
(assert (x593 x1938))
(assert (x593 x729))
(assert (x593 x836))
(assert (= (and x1803 x2272) x2521))
(assert (= (and x906 (not x1510)) x2098))
(assert (= (and x2628 x425) x499))
(assert (x593 x1331))
(assert (= (and (not x2142) x222) x296))
(assert (= (and x2279 (not x1401)) x322))
(assert (= (or x1872 x250) x2546))
(assert (= (or x746 x2573 x2088 x1445 x2504 x1815) x1310))
(assert (= (and x630 x432) x2709))
(assert (= x438 (or x1218 x1595 x688 x684 x998 x2600)))
(assert (x593 x709))
(assert (=> (<= x2331 10000) (= (x2619 x2331) (x71 x2331))))
(assert (= x946 (and x1639 x1265)))
(assert (x593 x523))
(assert (x593 x2679))
(assert (x593 x395))
(assert (= (and x1111 (not x731)) x1140))
(assert (x593 x1117))
(assert (x593 x2523))
(assert (= x2008 (and x1781 (not x882))))
(assert (= x1594 (and x1624 x2380)))
(assert (x593 x186))
(assert (= (=> (and (= x2051 x2389) (= x477 0)) x1990) x2518))
(assert (x593 x1273))
(assert (not x983))
(assert (= (x25 x1841) 0))
(assert (= x2183 (and x2572 x1917)))
(assert (x593 x625))
(assert (x593 x1477))
(assert (x593 x1563))
(assert (= (and x2594 x2411) x2394))
(assert (= (x2619 16284467712533504949339770971755156993396464521235680726719773044698144309248) (x71 16284467712533504949339770971755156993396464521235680726719773044698144309248)))
(assert (= (and x2040 x1673) x530))
(assert (x593 x1790))
(assert (= (x2619 1086394137) (x71 1086394137)))
(assert (= x291 (and x914 x573)))
(assert (x593 x1095))
(assert (= x2001 (x2465 (x2619 x2001))))
(assert (x593 x754))
(assert (= x2570 (and (not x2580) x335)))
(assert (x593 x2031))
(assert (x593 x385))
(assert (x593 x2057))
(assert (= (and x1059 x2376) x696))
(assert (= x2374 (and x1217 x1689)))
(assert (= (and x78 x2287) x570))
(assert (= x1681 (and x1157 x145)))
(assert (x593 x2066))
(assert (= (or x1657 (and (not x1148) x876)) x1554))
(assert (x593 x512))
(assert (x593 x1951))
(assert (= x17 (or x1885 x2248 x48 x1182 x2670 x686 x1108 x179 x708 x268)))
(assert (= (x2465 (x2619 x2331)) x2331))
(assert (x593 x461))
(assert (x593 x347))
(assert (x593 x1466))
(assert (x593 x1092))
(assert (x593 x1899))
(assert (x593 x1316))
(assert (= (and x226 x1943) x2218))
(assert (= (and x344 x2044) x977))
(assert (x593 x362))
(assert (= (or (and x1419 x2420) (and x1808 x2461) (and x111 (not x70)) x848 x520 x2591 x683 x13) x458))
(assert (= x2278 (and x1580 (not x484))))
(assert (x593 x1153))
(assert (x593 x318))
(assert (= x907 (or x2625 x1606)))
(assert (= (and x1429 x2235) x187))
(assert (= x1588 (=> (and (= x59 x2073) (= x2116 x1060)) x2683)))
(assert (= (and (not x737) x1686) x2461))
(assert (= (=> (and (or x344 (not x344)) (= x344 (= 0 x935))) x1916) x948))
(assert (x593 x474))
(assert (x593 x2096))
(assert (= x2449 (or (and x2044 (not x344)) x977)))
(assert (= (and (not x366) x1949) x1115))
(assert (= (and x252 x795) x1461))
(assert (x593 x2514))
(assert (= (x2619 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x71 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x593 x143))
(assert (= (and (not x837) x370) x2209))
(assert (x593 x1337))
(assert (x593 x199))
(assert (x593 x2188))
(assert (x593 x1206))
(assert (= x1582 (and x454 (not x2616))))
(assert (x593 x1836))
(assert (x593 x96))
(assert (= (x2465 (x112 x1633 1)) (+ 1 (x2465 x1633))))
(assert (x593 x1787))
(assert (x593 x715))
(assert (x593 x676))
(assert (x593 x657))
(assert (= (and x479 x2207) x171))
(assert (x593 x1753))
(assert (= (and x1853 x849) x2165))
(assert (= x2527 (and x2102 x597)))
(assert (x593 x172))
(assert (x593 x181))
(assert (= (and x370 x837) x2638))
(assert (= (x2619 2737736067) (x71 2737736067)))
(assert (x593 x1288))
(assert (= (and (not x24) x741) x1224))
(assert (x593 x1558))
(assert (x593 x134))
(assert (= (and x2612 x459) x685))
(assert (= (=> (and (= x1578 x2533) (= x886 x934)) x1398) x1))
(assert (= x254 (or x1637 x803 x1432 x2310 x2218 x1668)))
(assert (= x80 (and x2422 x822)))
(assert (x593 x1252))
(assert (x210 x2249))
(assert (= (and x2594 (not x2411)) x482))
(assert (= x405 (and x150 x2704)))
(assert (x593 x641))
(assert (= x287 (and (not x1298) x921)))
(assert (= x2118 (=> (and (= x1191 x1700) (= x762 x1099)) x640)))
(assert (x210 x290))
(assert (x593 x2241))
(assert (= (and x322 (not x1032)) x801))
(assert (x593 x595))
(assert (x593 x491))
(assert (= (=> (and (or (not x630) x630) (= (= 0 x105) x630)) x515) x2047))
(assert (= (and x2378 x41) x652))
(assert (= (and x1995 x411) x399))
(assert (x2384 x310))
(assert (= x2178 (=> (= (= 0 x439) x1541) (and (=> x1541 x371) (=> (and (= x1199 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x94)) (< x94 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x94))) (not x1541)) (and (=> x1199 x371) (=> (and (= x1744 1) (not x1199)) x2280)))))))
(assert (x593 x1648))
(assert (= (and (not x1782) x154) x720))
(assert (x210 x716))
(assert (= (x2465 (x71 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x593 x2277))
(assert (= (and x423 x118) x1736))
(assert (= (and x1079 x540) x1340))
(assert (x593 x873))
(assert (x593 x1418))
(assert (x593 x819))
(assert (= x1974 (or x2437 x1553 x2182 x1081 x406 x1710)))
(assert (x593 x1293))
(assert (= (or x773 x254) x2545))
(assert (x593 x39))
(assert (= x2595 (and x1526 (not x1303))))
(assert (= x332 (and x1948 (not x104))))
(assert (= (x71 1784838210) (x2619 1784838210)))
(assert (x593 x1247))
(assert (x593 x2474))
(assert (= x1825 (and x1646 x14)))
(assert (x593 x892))
(assert (= (=> (and (= 0 x1578) (= x2375 x886)) x1) x2610))
(assert (x210 x204))
(assert (= (and x2631 (not x2634)) x2506))
(assert (x593 x1801))
(assert (x1116 x993))
(assert (= x1180 (and x2129 x2537)))
(assert (= (and x375 (not x2070)) x352))
(assert (x593 x346))
(assert (= x2271 (and x2259 (not x963))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2465 (x71 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (and x1148 x876) x1657))
(assert (= (and (not x750) x2540) x2445))
(assert (x210 x1036))
(assert (= x594 (and x2714 x1525)))
(assert (x593 x2105))
(assert (=> (>= 10000 x2520) (= (x71 x2520) (x2619 x2520))))
(assert (x593 x898))
(assert (x593 x1164))
(assert (x593 x260))
(assert (x593 x1013))
(assert (x593 x1136))
(assert (= (and x405 (not x2092)) x2569))
(assert (x593 x1210))
(assert (= (=> (= x935 x1663) x948) x1177))
(assert (x593 x1775))
(assert (x593 x355))
(assert (= (or x1550 x2688) x1297))
(assert (= x2529 (and x2448 (not x2068))))
(assert (x593 x211))
(assert (x593 x2163))
(assert (x593 x1261))
(assert (= x2431 (and x161 (not x829))))
(assert (x593 x765))
(assert (x593 x1173))
(assert (x593 x1589))
(assert (x593 x127))
(assert (x593 x398))
(assert (= (and x2503 x2521) x1463))
(assert (x593 x1956))
(assert (x593 x1979))
(assert (= (and x1660 (not x2094)) x2184))
(assert (= x183 (and x2184 x1780)))
(assert (x593 x1470))
(assert (x593 x1077))
(assert (= (and (not x739) x135) x2652))
(assert (x593 x1220))
(assert (x593 x1817))
(assert (= x1943 (and x659 (not x2345))))
(assert (x593 x1729))
(assert (= x2477 (and (not x1228) x2605)))
(assert (x593 x524))
(assert (= (x2465 (x71 3467235951)) 3467235951))
(assert (x593 x2249))
(assert (x593 x1792))
(assert (= (and x532 x1072) x1283))
(assert (x593 x2415))
(assert (x593 x840))
(assert (x593 x105))
(assert (x593 x2262))
(assert (x593 x1507))
(assert (x593 x649))
(assert (= (and x2078 x294) x2369))
(assert (x593 x1800))
(assert (= x2258 (and (not x1851) x1370)))
(assert (= (and x1897 (not x1568)) x2060))
(assert (= (and (not x23) x424) x914))
(assert (= (or x1362 x55 x768 x427 x776 x604) x592))
(assert (= (and x1683 (not x1390)) x2124))
(assert (= (and x932 x277) x2083))
(assert (= x2214 (and x2507 (not x1307))))
(assert (x593 x88))
(assert (x593 x430))
(assert (= (and x2552 x1601) x2220))
(assert (= (and x1644 x1083) x1623))
(assert (= (and (not x1514) x1133) x2237))
(assert (=> (<= x283 10000) (= (x71 x283) (x2619 x283))))
(assert (= (=> (and (= x203 x105) (= x545 x359)) x2047) x959))
(assert (= x1733 (and (not x546) x1845)))
(assert (= (=> (and (= (not (> x396 4)) x1498) (= x1489 (x2155 (+ 32 x2173))) (= x1557 (x2494 x2173)) (= (x2155 (+ 32 x1484)) x2108)) (and (=> (and (= 4 x1862) (= x1489 x1941) (= x108 x2108)) x2352) x1498)) x462))
(assert (= (and x2521 (not x2503)) x2380))
(assert (x593 x751))
(assert (x593 x2316))
(assert (= (or x1454 x1068 x1742 x123 x864 x2630) x1721))
(assert (= x1910 (and x1023 x183)))
(assert (x593 x2693))
(assert (= x1388 (and x1942 (not x533))))
(assert (= x2500 (=> (and (= 0 x2203) (= x2326 x1120)) x2712)))
(assert (x593 x2365))
(assert (= x770 (and (not x2628) x425)))
(assert (x593 x1364))
(assert (= x1135 (and x1499 x2483)))
(assert (= (x25 160) 0))
(assert (x593 x744))
(assert (x593 x2015))
(assert (x593 x2064))
(assert (x593 x97))
(assert (= (and x136 (not x49)) x1872))
(assert (x593 x334))
(assert (x593 x2119))
(assert (x593 x2203))
(assert (= x1432 (and x2345 x659)))
(assert (= x2522 (and x1353 x1604)))
(assert (= x2432 (and (not x308) x685)))
(assert (x593 x301))
(assert (x593 x1629))
(assert (= x2109 (and x2708 x464)))
(assert (x593 x1254))
(assert (x593 x2390))
(assert (x593 x1368))
(assert (= (and x2526 x771) x1742))
(assert (= x1704 (=> (= x707 x229) x52)))
(assert (x593 x204))
(assert (x593 x694))
(assert (x593 x868))
(assert (= x1308 (and x1144 x2165)))
(assert (x593 x1560))
(assert (x593 x2578))
(assert (= (and x1886 x2140) x319))
(assert (= (or x1876 x584) x53))
(assert (x593 x1597))
(assert (x593 x1074))
(assert (= (and (not x758) x2638) x1416))
(assert (x593 x229))
(assert (= x2689 (and (not x125) x219)))
(assert (= x2156 (x2465 (x2619 x2156))))
(assert (x593 x84))
(assert (x593 x613))
(assert (= (=> (= x1566 (not (> x1922 1))) (and (=> (= x1405 x2038) x233) x1566)) x1810))
(assert (x593 x1435))
(assert (x593 x1365))
(assert (x593 x2330))
(assert (x593 x396))
(assert (= x1109 (or x102 x2183 x652 x80 x1542 x628)))
(assert (x593 x2210))
(assert (= (=> (and (= x1979 x338) (= 0 x1909)) x924) x1451))
(assert (x593 x2154))
(assert (x593 x2292))
(assert (= (and x1762 x15) x2297))
(assert (x593 x2061))
(assert (x593 x1855))
(assert (x593 x2586))
(assert (x593 x1520))
(assert (x593 x2043))
(assert (x593 x2063))
(assert (= (=> (and (= 0 x300) (= x1120 x1385)) x2077) x1959))
(assert (= (x2619 18446744073709551615) (x71 18446744073709551615)))
(assert (= (=> (and (= x1060 x1672) (= x2073 x1364)) x2683) x1849))
(assert (= x777 (and x1995 (not x411))))
(assert (= x2172 (and (not x2319) x2697)))
(assert (= (or x1033 x2369 x735 x1461 x2547 x569) x380))
(assert (= x535 (and (not x823) x2601)))
(assert (x593 x2587))
(assert (= x1577 (and x1395 x1299)))
(assert (= (x2465 (x71 2569309863)) 2569309863))
(assert (x593 x2232))
(assert (x593 x2428))
(assert (x593 x381))
(assert (x593 x743))
(assert (= (and x289 x2342) x549))
(assert (= x2263 (and x2477 x1735)))
(assert (x593 x2275))
(assert (x593 x1279))
(assert (= x2269 (and x1198 x399)))
(assert (x2384 x679))
(assert (x593 x2370))
(assert (= (x25 x2306) 0))
(assert (= (and x314 x1739) x2363))
(assert (x593 x2186))
(assert (= (and x562 x189) x553))
(assert (x593 x809))
(assert (= (=> (and (= x2361 (x1958 1461501637330902918203684832716283019655932542975 x1519)) (= x2665 (x2100 x568)) (= x1288 (x1958 1461501637330902918203684832716283019655932542975 x1519)) (<= x2665 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x446 (x19 (x2619 x2361) (x71 17) 0)) (= x568 (x19 (x2619 x355) x446 0)) (= x237 128) (<= 0 x2665) (= x1568 (= x1288 x448))) (and (=> (and (not x1568) (= (= x2001 x1288) x1598)) (and (=> (and (= (= x1877 x1288) x540) (not x1598)) (and (=> (and (not x540) (and (= x731 (= x863 x1288)) (and x731 (and (= x979 x466) (= x2695 68) (not (> 4 x2695)) (= x1382 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< 0 x1088) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x872) (and (= true (<= x872 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x872 64))) x1143) (= x1434 x2665) (= 68 x2695) (not (= 2514000705 x2283)) (not (= 1889567281 x2283)) (not (< x2283 826074471)) (= (x2052 (- x2695 4)) x872) (= x1088 (x2484 (x2619 x863))) (not (= 826074471 x2283)) (= 2835717307 x2283))))) (and (=> (and (= x2018 (= x466 x979)) (not x1143)) (and (=> (and x2018 (and (>= x1507 0) (= (x2288 x599) x1507) (= (x19 (x2619 x448) (x71 1) 0) x599) (= x1434 x158) (<= x1507 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1709 (< x1507 x2665)))) (and (=> x1709 x2359) (=> (and (not x1709) (= (> x1434 x1507) x1880)) (and (=> (and (not x1880) (and (= (x19 (x2619 x448) (x71 1) 0) x1213) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1434)) x831) (= x1073 (x2052 (- x1507 x1434))) (= x1228 (> x2126 x831)) (= (x1420 x813) x2126) (= x813 (x19 (x2619 x290) (x71 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2126) (>= x2126 0))) (and (=> (and (and (= (x2155 (+ x1434 x2126)) x1818) (= (> x2126 x1818) x1735)) (not x1228)) (and (=> x1735 x2359) (=> (and (not x1735) (and (= x1305 (x19 (x2619 x290) (x71 1) 0)) (= 1 x2116) (= x2586 1) (= x59 32))) x1588))) (=> x1228 x2359))) (=> x1880 x2359))))) (=> (not x2018) x2359))) (=> x1143 x2359))) (=> (and x540 (and (< 0 x1950) (= x1928 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2063 (x2052 (- x2048 4))) (= x1435 x2665) (not (= 1889567281 x981)) (not (< x981 826074471)) (= x981 2835717307) (= x2603 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2063)) (< x2063 64)) (> x2063 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1950 (x2484 (x2619 x1877))) (= 68 x2048) (not (= x981 826074471)) (= 68 x2048) (not (< x2048 4)) (not (= x981 2514000705)) (= x2428 x466))) (and (=> (and (not x2603) (= x305 (= x466 x2428))) (and (=> (not x305) x1959) (=> (and (and (= x1353 (< x883 x2665)) (= (x19 (x2619 x448) (x71 1) 0) x2556) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x883) (= x1164 x1435) (>= x883 0) (= (x2443 x2556) x883)) x305) (and (=> (and (= (> x1435 x883) x989) (not x1353)) (and (=> x989 x1959) (=> (and (and (= x1163 (x19 (x2619 x290) (x71 1) 0)) (= x1400 (x19 (x2619 x448) (x71 1) 0)) (= x2485 (x2052 (- x883 x1435))) (<= x1547 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x891 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1435))) (= (x1763 x1163) x1547) (>= x1547 0) (= (< x891 x1547) x384)) (not x989)) (and (=> x384 x1959) (=> (and (not x384) (and (= (< x394 x1547) x2058) (= (x2155 (+ x1547 x1435)) x394))) (and (=> x2058 x1959) (=> (and (and (= 1 x300) (= x2251 1) (= x156 (x19 (x2619 x290) (x71 1) 0)) (= x1385 32)) (not x2058)) x2077))))))) (=> x1353 x1959))))) (=> x2603 x1959))))) (=> (and x1598 (and (= (x2484 (x2619 x2001)) x2338) (not (> 4 x433)) (< 0 x2338) (= x504 (or (and (= true (<= x1608 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1608)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1608))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x984) (= x2596 2835717307) (not (= x2596 2646777772)) (= 68 x433) (= x957 x466) (= x456 x2665) (not (= x2596 2678909723)) (= (x2052 (- x433 4)) x1608) (not (< x2596 2646777772)) (< x2596 3053082678) (not (> 1889567281 x2596)) (= x433 68))) (and (=> x504 x1504) (=> (and (= x1299 (= x466 x957)) (not x504)) (and (=> (not x1299) x1504) (=> (and (and (= (x949 x1920) x614) (= (x19 (x2619 x448) (x71 2) 0) x1920) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x614) (= x36 x456) (>= x614 0) (= x2637 (< x614 x2665))) x1299) (and (=> (and (not x2637) (= (> x456 x614) x423)) (and (=> x423 x1504) (=> (and (not x423) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x301) (= x301 (x1569 x1857)) (>= x301 0) (= (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x456)) x918) (= x2229 (x19 (x2619 x448) (x71 2) 0)) (= (x2052 (- x614 x456)) x1520) (= (> x301 x918) x2006) (= x1857 (x19 (x2619 x290) (x71 2) 0)))) (and (=> x2006 x1504) (=> (and (not x2006) (and (= (x2155 (+ x301 x456)) x149) (= x1107 (< x149 x301)))) (and (=> (and (and (= (x19 (x2619 x290) (x71 2) 0) x488) (= 1 x1672) (= x1364 32)) (not x1107)) x1849) (=> x1107 x1504))))))) (=> x2637 x1504))))))))) (=> (and x1568 (and (= x812 68) (= x557 (x2052 (- x812 4))) (= x1904 x2665) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x228) (< x561 3053082678) (not (< x561 1889567281)) (< 0 x2151) (not (< x561 2646777772)) (= 2835717307 x561) (not (> 4 x812)) (= 68 x812) (= (x2484 (x2619 x448)) x2151) (= (or (and (< x557 64) (= (<= x557 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x557)) x1300) (= x466 x6) (not (= x561 2646777772)) (not (= 2678909723 x561)))) (and (=> (and (not x1300) (= (= x6 x466) x663)) (and (=> (not x663) x2500) (=> (and x663 (and (= x955 x1904) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2241) (= x2241 (x772 x1486)) (= (x19 (x2619 x448) (x71 2) 0) x1486) (<= 0 x2241) (= (> x2665 x2241) x2212))) (and (=> (and (= (< x2241 x1904) x1962) (not x2212)) (and (=> x1962 x2500) (=> (and (and (= (< x912 x390) x1771) (= (x19 (x2619 x448) (x71 2) 0) x2607) (= x435 (x19 (x2619 x290) (x71 2) 0)) (<= 0 x390) (= x912 (x2052 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1904))) (= (x1125 x435) x390) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x390) (= x1617 (x2052 (- x2241 x1904)))) (not x1962)) (and (=> x1771 x2500) (=> (and (and (= (< x1124 x390) x2102) (= (x2155 (+ x1904 x390)) x1124)) (not x1771)) (and (=> x2102 x2500) (=> (and (and (= (x19 (x2619 x290) (x71 2) 0) x2302) (= x2203 1) (= x2326 32)) (not x2102)) x2712))))))) (=> x2212 x2500))))) (=> x1300 x2500))))) x1051))
(assert (x593 x339))
(assert (x593 x1737))
(assert (x593 x502))
(assert (= x52 (=> (and (or (not x1212) x1212) (= x1212 (= x229 0))) x2588)))
(assert (x593 x611))
(assert (x593 x212))
(assert (x593 x2108))
(assert (= x991 (and (not x1149) x865)))
(assert (= (and x28 x1386) x969))
(assert (= x1673 (and x1874 (not x1827))))
(assert (x593 x1664))
(assert (= (and x2601 x823) x444))
(assert (x593 x1697))
(assert (x593 x1231))
(assert (x593 x2542))
(assert (x593 x874))
(assert (x593 x2082))
(assert (= x2193 (and x1912 (not x1661))))
(assert (= x69 (=> (and (= x2059 x439) (= x1766 x94)) x1306)))
(assert (= x2404 (and x999 x1121)))
(assert (x593 x880))
(assert (= (x71 2646777772) (x2619 2646777772)))
(assert (x593 x2501))
(assert (= (x2619 2445980732) (x71 2445980732)))
(assert (x593 x1151))
(assert (= (and x282 x1962) x1759))
(assert (= (and x464 (not x2708)) x247))
(assert (= 2646777772 (x2465 (x71 2646777772))))
(assert (= (and x1373 x498) x98))
(assert (= (and x915 x1650) x2310))
(assert (= x131 (and (not x1601) x2552)))
(assert (= x1054 (and x1969 x2371)))
(assert (x593 x403))
(assert (= x1238 (and x369 x291)))
(assert (x593 x636))
(assert (=> (<= x485 10000) (= (x2619 x485) (x71 x485))))
(assert (x593 x859))
(assert (= x2088 (and x133 x2511)))
(assert (= 18446744073709551615 (x2465 (x71 18446744073709551615))))
(assert (= x507 (and x2438 x269)))
(assert (x593 x589))
(assert (x593 x1744))
(assert (x593 x302))
(assert (x593 x1294))
(assert (= x2697 (and (not x577) x2707)))
(assert (= x2125 (and (not x2102) x597)))
(assert (= (x2465 (x2619 x863)) x863))
(assert (= (and (not x1001) x631) x2334))
(assert (x593 x1405))
(assert (x593 x1484))
(assert (x593 x1057))
(assert (= (or x778 x449 x1628 x1417) x2417))
(assert (x593 x1026))
(assert (= (and x1034 (not x1376)) x87))
(assert (x593 x326))
(assert (= x273 (=> (and (= (x2155 (+ 32 x326)) x1951) (= x1387 (not (< x1951 x1560))) (>= 1461501637330902918203684832716283019655932542975 x2085) (= (x1738 x326) x2085)) (and x1387 x230))))
(assert (= x865 (and x1265 (not x1639))))
(assert (= x102 (and x412 x1555)))
(assert (= x640 (=> (and (or x1708 (not x1708)) (= (= x1700 0) x1708)) x393)))
(assert (x593 x272))
(assert (x593 x2366))
(assert (x593 x1939))
(assert (x2381 x679))
(assert (x593 x1864))
(assert (x593 x1052))
(assert (x593 x275))
(assert (= x162 (and x1311 x1162)))
(assert (= (and x256 x1189) x783))
(assert (x2384 x1160))
(assert (= x1553 (and x1791 x391)))
(assert (x1116 x309))
(assert (x593 x337))
(assert (= x2388 (or x263 x2202)))
(assert (= (or x1797 x2242 x1821) x43))
(assert (= x242 (and (not x78) x2287)))
(assert (= (x2465 (x2619 x347)) x347))
(assert (= 604024478 (x2465 (x71 604024478))))
(assert (= x1897 (or x1517 (and x1991 x2442))))
(assert (= 872247156 (x2465 (x71 872247156))))
(assert (x593 x163))
(assert (= x2698 (=> (and (= x2533 x1094) (= x934 x2267)) x1398)))
(assert (= x222 (and x1905 x1180)))
(assert (= x2329 (and x2137 x991)))
(assert (x593 x149))
(assert (= (or (and (not x1646) x14) x1825) x2259))
(assert (x593 x2196))
(assert (x593 x2073))
(assert (x593 x367))
(assert (x593 x2423))
(assert (= 2952933380 (x2465 (x71 2952933380))))
(assert (= (and (not x1822) x1615) x1480))
(assert (x593 x716))
(assert (= (=> (and (= x2277 0) (= x1979 x2330)) x1022) x267))
(assert (= x1542 (and x90 (not x766))))
(assert (x593 x2470))
(assert (= (=> (and (or (not x1072) x1072) (= x1072 (= x2541 0))) x2103) x1170))
(assert (= x2042 (=> (and (= x806 x1156) (= 0 x2105)) x2174)))
(assert (x210 x2574))
(assert (=> (<= x355 10000) (= (x2619 x355) (x71 x355))))
(assert (x593 x1519))
(assert (x593 x2298))
(assert (x593 x2611))
(assert (x593 x2576))
(assert (x593 x2565))
(assert (x593 x240))
(assert (= (and (not x1616) x1888) x1942))
(assert (= x1993 (and (not x37) x2083)))
(assert (x593 x2348))
(assert (x593 x1621))
(assert (x593 x1702))
(assert (= x1296 (and x2209 (not x767))))
(assert (x593 x2645))
(assert (= x2544 (and x1845 x546)))
(assert (= (and x256 (not x1189)) x2265))
(assert (= (and x1604 (not x1353)) x1304))
(assert (x593 x1950))
(assert (= (and (not x66) x1746) x1655))
(assert (x210 x1911))
(assert (= x1596 (and (not x1396) x2008)))
(assert (= (and x2696 x2650) x1460))
(assert (= (x2465 (x71 16284467712533504949339770971755156993396464521235680726719773044698144309248)) 16284467712533504949339770971755156993396464521235680726719773044698144309248))
(assert (x593 x1382))
(assert (= 565014339 (x2465 (x71 565014339))))
(assert (= (and x668 x1861) x487))
(assert (= (x2465 (x2619 x2262)) x2262))
(assert (= (x2465 (x71 1889567281)) 1889567281))
(assert (= x1876 (and x1134 (not x2020))))
(assert (x593 x2530))
(assert (=> (<= x1261 10000) (= (x71 x1261) (x2619 x1261))))
(assert (= x1166 (and x1582 x666)))
(assert (= x1008 (=> (and (= x2613 0) (= x806 x120)) x1567)))
(assert (= x1417 (or x567 x832)))
(assert (= x1356 (or x2467 x98 x2269 x790 x618 x777)))
(assert (x593 x2535))
(assert (x593 x1502))
(assert (x593 x2001))
(assert (x593 x886))
(assert (x593 x2331))
(assert (= (and x2258 (not x1769)) x315))
(assert (= x706 (or x29 x287)))
(assert (= (and x1482 (not x2354)) x1645))
(assert (= (x2465 (x71 2867092931)) 2867092931))
(assert (x593 x558))
(assert (= (and x1264 x1010) x2034))
(assert (x593 x2660))
(assert (= x1443 (and x1436 x2413)))
(assert (x593 x1169))
(assert (= (and x1178 x2648) x1674))
(assert (x593 x1895))
(assert (= x1108 (and (not x526) x2016)))
(assert (= (x25 x2173) 0))
(assert (= x973 (and x1032 x322)))
(assert (= (and x1300 x2293) x1222))
(assert (x593 x1106))
(assert (x210 x2331))
(assert (= x2416 (or x2374 x2252)))
(assert (= (and x870 x159) x1595))
(assert (x593 x2171))
(assert (x593 x1533))
(assert (= x612 (and x1234 x847)))
(assert (x593 x443))
(assert (= (and x67 x1605) x843))
(assert (x593 x1201))
(assert (x593 x2054))
(assert (x593 x1087))
(assert (= x2382 (and x1997 (not x2555))))
(assert (= x2005 (or (and x360 (not x1186)) x187 x1428 (and x1221 x1964) (and x2540 x750) (and x1485 x1421))))
(assert (x593 x1732))
(assert (x593 x82))
(assert (= (and x612 x2372) x425))
(assert (= (and x1290 (not x407)) x926))
(assert (x593 x1040))
(assert (x593 x2192))
(assert (x593 x1282))
(assert (x593 x1607))
(assert (x593 x883))
(assert (= (and x2200 x1212) x2303))
(assert (= x1976 (=> (and (= 0 x2399) (= x2643 x709)) x138)))
(assert (x593 x1469))
(assert (x593 x576))
(assert (x593 x1236))
(assert (= (and x332 (not x281)) x1444))
(assert (= (x71 1926446194) (x2619 1926446194)))
(assert (= (and (not x2233) x2416) x2323))
(assert (x593 x2085))
(assert (= x1226 (=> (and (not (> 4 x1041)) (not (< x2474 2445980732)) (= (x2484 (x2619 x206)) x657) (= x2415 x1835) (not (= x2474 2569309863)) (= x2474 2753274959) (= x1813 x1172) (= (x2155 (+ x1202 4)) x1172) (< 0 x657) (not (= 0 x2491)) (not (= x878 0)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1558) true) (< x1558 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1558)) x484) (not (< x2474 1926446194)) (= (x2155 (+ x1172 32)) x899) (= x1558 (x2052 (- x1041 4))) (> 2867092931 x2474) (= x1041 x97) (not (= x2474 2737736067)) (not (= x2474 2445980732)) (= 36 x1041) (= (x2052 (- x899 x1202)) x97) (= (x2484 (x2619 x206)) x2491) (= x2566 74228146054641364427485594382366355075153451190847473373747070783662162182144) (= (x1958 1461501637330902918203684832716283019655932542975 x1562) x2415)) (and (=> (and (and (= x1835 x1887) (= x815 true)) (not x484)) (and (=> (and (not x815) (= x707 0)) x1704) (=> (and (and (> 1461501637330902918203684832716283019655932542976 x1939) (= x1939 (x871 x903)) (= x903 (x112 x2456 1)) (<= 0 x1939) (= (= 0 x1252) x24) (= (x112 x2026 1) x2456) (= x1855 128) (<= 0 x1760) (= x1252 (x2484 (x2619 x1760))) (< x1760 1461501637330902918203684832716283019655932542976) (= (x2678 x2456) x1760) (>= 1461501637330902918203684832716283019655932542975 x1760) (= (x19 (x2619 x1835) (x71 3) 0) x2026) (<= x1939 1461501637330902918203684832716283019655932542975)) x815) (and (=> (and x24 (= 0 x707)) x1704) (=> (and (not x24) (= x2654 (= x1760 x448))) (and (=> (and (not x2654) (and (and x905 (and (not (> 4 x902)) (> x2255 0) (= x1718 (x2052 (- x902 4))) (= x206 x347) (= x2022 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1718) (and (< x1718 64) (= (<= x1718 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1939 x1589) (not (= x2033 2646777772)) (= x2033 2678909723) (= 68 x902) (= 72223263258191293651604190264004579703475585967499159981614695267027195527168 x109) (not (< x2033 2646777772)) (not (> 1889567281 x2033)) (= 68 x902) (= (x2484 (x2619 x2001)) x2255) (> 3053082678 x2033))) (= x905 (= x1760 x2001)))) (and (=> x2022 x128) (=> (and (and (= (= x347 x206) x1590) (= x347 x2459)) (not x2022)) (and (=> (not x1590) x128) (=> (and x1590 (and (= x2539 (= x1939 x1589)) (= x2502 x1589))) (and (=> (and (= x1827 (= x1589 0)) x2539) (and (=> x1827 x828) (=> (and (not x1827) (= (= x206 x347) x2040)) (and (=> x2040 x828) (=> (not x2040) x128))))) (=> (not x2539) x128))))))) (=> (and x2654 (and (< 0 x2606) (= x622 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x563) (and (> 64 x563) (= (<= x563 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x355 x206) (= x1939 x290) (not (> 4 x286)) (not (> 1889567281 x2548)) (= (x2052 (- x286 4)) x563) (= (x2484 (x2619 x448)) x2606) (= 2678909723 x2548) (= x286 68) (= x286 68) (< x2548 3053082678) (= 72223263258191293651604190264004579703475585967499159981614695267027195527168 x1253) (not (< x2548 2646777772)) (not (= 2646777772 x2548)))) (and (=> (and (and (= (= x206 x355) x2499) (= x355 x1345)) (not x622)) (and (=> (not x2499) x371) (=> (and (and (= x526 (= x290 x1939)) (= x290 x466)) x2499) (and (=> (not x526) x371) (=> (and x526 (= (= 0 x290) x1991)) (and (=> x1991 x1051) (=> (and (= x421 (= x206 x355)) (not x1991)) (and (=> (not x421) x371) (=> x421 x1051))))))))) (=> x622 x371))))))))) (=> (and x484 (= x229 0)) x52)))))
(assert (x593 x299))
(assert (=> (>= 10000 x1532) (= (x71 x1532) (x2619 x1532))))
(assert (= (and x1510 x906) x786))
(assert (= (=> (and (or (not x1886) x1886) (= (= 0 x878) x1886)) x1226) x854))
(assert (= (and x1358 x633) x1888))
(assert (x593 x1156))
(assert (= x1985 (=> (and (= x439 x1110) (= x1680 x94)) x1306)))
(assert (x593 x1067))
(assert (= x189 (and x135 x739)))
(assert (x593 x153))
(assert (= (or x1009 x704 x2545 x1196) x1289))
(assert (x593 x1966))
(assert (= (and x1755 (not x2710)) x2086))
(assert (x2381 x2049))
(assert (x593 x30))
(assert (= (x2465 (x2619 x290)) x290))
(assert (= (and (not x901) x119) x358))
(assert (= (or x1277 x1250) x1873))
(assert (= x2460 (and x1044 x760)))
(assert (= (and x1987 x2058) x2590))
(assert (= x95 (and x1492 x247)))
(assert (x593 x2502))
(assert (= (=> (and (and (not (= x229 0)) (= (x2155 (+ x1013 32)) x1795) (= x1922 (x678 128)) (= x1689 (= 0 x1922)) (= x414 (x2155 (+ x1795 x1202))) (= x1013 (mod (* x1922 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (or x1689 (and (and (= x1242 (mod (* x1922 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2186 (x2155 (+ x1202 32)))) (not x1689)))) x1652) x2588))
(assert (= (=> (and (= x2534 x2051) (= x736 0)) x2564) x33))
(assert (x593 x2221))
(assert (= x479 (and (not x20) x1442)))
(assert (x593 x2665))
(assert (x593 x835))
(assert (= (x2619 565014339) (x71 565014339)))
(assert (= x894 (and x465 (not x2360))))
(assert (x593 x518))
(assert (= x851 (and x580 x2486)))
(assert (x593 x1904))
(assert (x1116 x2366))
(assert (= (x2465 (x2619 x2361)) x2361))
(assert (x593 x2509))
(assert (= (and x2322 x340) x375))
(assert (= x2656 (and x1771 x1078)))
(assert (x593 x1184))
(assert (= x1767 true))
(assert (x593 x1765))
(assert (x593 x834))
(assert (= x647 (and (not x793) x1239)))
(assert (= x2200 (or x1937 x43 x1535)))
(assert (= x2053 (and x2410 (not x2441))))
(assert (x593 x1002))
(assert (= x1615 (and x63 x1826)))
(assert (x593 x336))
(assert (x593 x2284))
(assert (= x432 (or x2560 x706 x601 x2440)))
(assert (x593 x1339))
(assert (= (and x805 x2480) x483))
(assert (= (or x1141 x93) x2560))
(assert (= (and x705 x1611) x490))
(assert (x593 x2038))
(assert (= x1378 (and x490 x1330)))
(assert (= (=> (and (= x2285 x1365) (= x1095 x1837)) x2290) x1869))
(assert (= x2526 (and (not x1291) x1838)))
(assert (x593 x92))
(assert (x593 x2528))
(assert (x593 x619))
(assert (= x1321 (and x1781 x882)))
(assert (= x1413 (or x12 x800)))
(assert (= (and x867 x57) x1272))
(assert (= (and x824 (not x982)) x1683))
(assert (x593 x1970))
(assert (= (=> (= x1405 x2) x386) x233))
(assert (x593 x2498))
(assert (x593 x736))
(assert (= (and x1728 x1866) x575))
(assert (x593 x1672))
(assert (x593 x1005))
(assert (= x1442 (and (not x1069) x2571)))
(assert (= x2696 (and x2179 x1490)))
(assert (x593 x978))
(assert (= (x2465 (x2619 x1532)) x1532))
(assert (= x1452 (and x2264 x1631)))
(assert (x593 x86))
(assert (x593 x2283))
(assert (x593 x1622))
(assert (x593 x1992))
(assert (= (and x1788 (not x1327)) x2553))
(assert (= (or x596 x2095) x675))
(assert (x593 x290))
(assert (x210 x723))
(assert (= (and x2472 (not x1590)) x588))
(assert (= (and x1577 (not x2637)) x118))
(assert (= (x2465 (x112 x2456 1)) (+ (x2465 x2456) 1)))
(assert (x593 x2144))
(assert (= (and x565 x410) x215))
(assert (= (and x2141 x2273) x2392))
(assert (x593 x701))
(assert (= (x2619 74228146054641364427485594382366355075153451190847473373747070783662162182144) (x71 74228146054641364427485594382366355075153451190847473373747070783662162182144)))
(assert (x593 x1941))
(assert (x593 x185))
(assert (= (=> (and (= x2051 x395) (= 0 x1174)) x547) x266))
(assert (= x1155 (and x1822 x1615)))
(assert (= x1983 (x2465 (x2619 x1983))))
(assert (= x472 (and x1788 x1327)))
(assert (= x983 (=> (and (and (>= x185 0) (not (= x2001 x1877)) (= x2138 (x2164 (x2619 x863))) (>= 1461501637330902918203684832716283019655932542975 x275) (<= x1506 1461501637330902918203684832716283019655932542975) (<= x170 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1877) x841 x75 x164 (not (= x2156 x2520)) (not (= x1877 x206)) (<= 0 x170) x2425 (<= x385 1461501637330902918203684832716283019655932542975) (<= x2641 1461501637330902918203684832716283019655932542975) (= x2655 (x2484 (x2619 x2156))) (<= 0 x2138) (= 1 x1450) (not (= x2156 x863)) (>= 1461501637330902918203684832716283019655932542975 x863) (<= x1100 1461501637330902918203684832716283019655932542975) (<= x1377 1461501637330902918203684832716283019655932542975) (= x56 x877) (>= 1461501637330902918203684832716283019655932542975 x1538) (>= 1461501637330902918203684832716283019655932542975 x448) (not (= x1877 x2520)) (>= x2609 0) x1348 (<= 0 x1538) (>= 1461501637330902918203684832716283019655932542975 x1830) (= (> (x2484 (x2619 x2001)) 0) x1348) (> x206 0) (<= 0 x275) (<= x2062 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2156) (>= x1446 0) (>= x1100 0) (<= 0 x1890) (not (= x448 x2520)) (not (= x206 x863)) (>= x816 0) (= x1830 x1074) (<= 0 x1506) (>= x2061 0) (< 0 x1877) (= 614698425 x39) x1717 (= x1717 (> (x2484 (x2619 x2156)) 0)) (>= x1830 0) (= (x1958 1461501637330902918203684832716283019655932542975 x1562) x877) (= (> (x2484 (x2619 x448)) 0) x841) (>= 1461501637330902918203684832716283019655932542975 x2584) (< 0 x2156) (>= 1461501637330902918203684832716283019655932542975 x2061) (not (= x206 x2001)) (>= 1461501637330902918203684832716283019655932542975 x172) (= false x2671) (<= x1132 1461501637330902918203684832716283019655932542975) (<= x62 1461501637330902918203684832716283019655932542975) (not (= x2520 x206)) (= (x2164 (x2619 x2520)) x1028) (>= x2062 0) (= x468 false) (< 0 x863) (not (= x2156 x1877)) (not (= x206 x2156)) (<= x816 1461501637330902918203684832716283019655932542975) (= x711 565014339) (= x2261 (x2164 (x2619 x206))) (<= x1890 1461501637330902918203684832716283019655932542975) (< 0 x2655) (= (x2164 (x2619 x2156)) x1748) (= (x2164 (x2619 x448)) x1800) (<= x2001 1461501637330902918203684832716283019655932542975) (= (x2164 (x2619 x1877)) x2609) (= (> (x2484 (x2619 x2520)) 0) x75) (not (= x863 x2001)) x1455 (not (= x863 x448)) (>= x1084 0) (not (= x863 x2520)) (= (< 0 (x2484 (x2619 x206))) x164) (>= x1377 0) (>= x385 0) (>= 1461501637330902918203684832716283019655932542975 x1446) (>= x172 0) (>= x2261 0) (<= 0 x1748) (>= x2584 0) (not (= x863 x1877)) (> x2001 0) (>= 1461501637330902918203684832716283019655932542975 x2532) (>= 1461501637330902918203684832716283019655932542975 x185) (= x2425 (< 0 (x2484 (x2619 x863)))) (not (= x448 x2001)) (= x385 x2498) (= x1455 (< 0 (x2484 (x2619 x1877)))) (>= 1461501637330902918203684832716283019655932542975 x206) (<= 0 x62) (not (= x2001 x2520)) (not (= x448 x2156)) (not (= 565014339 x39)) (not (= x206 x448)) (<= 0 x2532) (< 0 x448) (= false x2244) (>= x1132 0) (not (= x448 x1877)) (= false x306) (<= x2520 1461501637330902918203684832716283019655932542975) (>= x2641 0) (<= 0 x1028) (= (x2164 (x2619 x2001)) x1084) (<= 0 x1800) (> x2520 0) (not (= x2001 x2156))) (and (and (>= x2089 0) (not (= x1201 2867092931)) (not (= x1201 3467235951)) (>= x1117 0) (<= 0 x1737) (not (= 2952933380 x1201)) (>= 1461501637330902918203684832716283019655932542975 x2089) (< x1201 3756033516) (not (= 3459381112 x1201)) (>= 1461501637330902918203684832716283019655932542975 x1737) (= x1117 (x1049 x1633)) (= x2328 (x2313 160)) (= (x2313 128) x346) (= (x2484 (x2619 x206)) x2054) (<= x1117 1461501637330902918203684832716283019655932542975) (= (x2019 x798) x2089) (<= 0 x50) (<= x235 1461501637330902918203684832716283019655932542975) (= (x112 x1214 1) x1633) (< x2089 1461501637330902918203684832716283019655932542976) (>= x757 0) (> 1461501637330902918203684832716283019655932542976 x1117) (>= 1461501637330902918203684832716283019655932542975 x757) (> 1461501637330902918203684832716283019655932542976 x50) (= x798 (x112 x1633 1)) (= x50 (x1863 x1214)) (= x1843 x56) (= x1214 (x19 (x2619 x1261) (x71 3) 0)) (not (< x1201 2867092931)) (= x1843 x1261) (>= 1461501637330902918203684832716283019655932542975 x50) (= 3648997476 x1201) (< 0 x2054) (= (x2313 192) x2119) (<= x1261 1461501637330902918203684832716283019655932542975) (not (< x1201 1926446194)) (<= 0 x235)) (and (and (= x1276 x1732) (>= 1461501637330902918203684832716283019655932542975 x2703) (= (x2155 (+ x555 x326)) x1560) (= x751 x1768) (not (> x1236 18446744073709551615)) (= x997 x1587) (= x1479 (x2155 (+ 31 x512))) (< 0 x862) (= x862 (x2484 (x2619 x2156))) (>= 1461501637330902918203684832716283019655932542975 x1543) (not (> x751 18446744073709551615)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1425) (and (> 32 x1425) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1425) true)))) (not (> 4 x1409)) (= x512 (x2155 (+ x1768 4))) (= (> x1202 18446744073709551615) x1963) (= x1697 565014339) (<= 0 x1543) (= (x1738 x512) x1236) (= (> 128 x1202) x1946) (= (> x1560 x326) x1515) (= x1425 (x2052 (- x1409 4))) (= x2144 0) (= x2644 x927) (= x1276 0) (= x309 (x2155 (+ x2197 31))) (= (x2155 (+ 128 x1131)) x1202) (= (ite x662 1 0) x2144) (= x2498 x1470) (= x2197 (x2155 (+ x2509 32))) (= (mod (* 32 x1236) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x555) (= (x2155 (+ x512 32)) x326) (= (x1958 115792089237316195423570985008687907853269984665640564039457584007913129639904 x309) x1131) (>= 1461501637330902918203684832716283019655932542975 x1470) (<= 0 x1470) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1479) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1409)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1409) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1479)) (< x1479 x1409))) (not (> x1560 x1409)) (and (> x1409 35) (= (<= x1409 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (= x997 x2703) (>= x2703 0) (= x662 (or x1963 x1946)) (= x2509 (mod (* x1236 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (= x1176 1889567281) (= x2156 x794) (<= 0 x610) (= x206 x811) (= x927 x610) (= x1843 x1379) (= x1056 (not (= x1379 x868))) (= x1843 x929) (= (= x794 x1275) x695) (= x868 x2119) (< 0 x1315) (= (x2484 (x2619 x863)) x1315) (not (< x1176 826074471)) (= x1906 (x19 (x2619 x2156) (x71 1) 0)) (= x1275 x2119) x695 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x610) (= x2321 (not (= x929 x811))) (not (= x1176 826074471)) x2321 (= (x2216 x1906) x610) x1056 (<= x2156 1461501637330902918203684832716283019655932542975))))) (and (=> x1515 x273) (=> (not x1515) x230)))))
(assert (= (and x173 x2429) x998))
(assert (x593 x359))
(assert (x593 x1819))
(assert (= (x2619 3756033516) (x71 3756033516)))
(assert (x593 x614))
(assert (x593 x244))
(assert (= x2279 (and x2490 (not x1929))))
(assert (x593 x2397))
(assert (x210 x485))
(assert (= (and x1401 x2279) x826))
(assert (x593 x810))
(assert (= (x2465 (x71 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x1454 (and x2396 x1407)))
(assert (x593 x1508))
(assert (= x749 (and x407 x1290)))
(assert (= (and x1224 (not x2654)) x687))
(assert (x593 x155))
(assert (= x1457 (and x1190 (not x858))))
(assert (= x1278 (or x315 x500)))
(assert (x593 x1538))
(assert (= (and x49 x136) x1341))
(assert (= (and x305 x943) x1604))
(assert (x593 x76))
(assert (= (and x99 x1458) x2674))
(assert (= x881 (=> (and (= x400 0) (= x1901 x251)) x2653)))
(assert (x593 x1007))
(assert (= (=> (and (= x251 x1546) (= 0 x1972)) x1154) x1731))
(assert (= (or x2211 x458) x2140))
(assert (= x123 (and x1514 x1133)))
(assert (= x2307 (and x2013 (not x18))))
(assert (= (x2619 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x71 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x593 x2703))
(assert (= (and x635 (not x622)) x27))
(assert (x593 x422))
(assert (= (=> (= (= x2039 0) x2597) (and (=> x2597 x128) (=> (and (= x1758 (or (> x1584 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1584 32) (= true (<= x1584 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not x2597)) (and (=> x1758 x128) (=> (and (= 1 x1663) (not x1758)) x1177))))) x1889))
(assert (= (=> (and (= x809 x1331) (= x127 x819)) x1021) x74))
(assert (= x2712 (=> (and (= x2203 x1060) (= x2073 x2326)) x2683)))
(assert (= (or x26 x2194) x1440))
(assert (x593 x1047))
(assert (x593 x2574))
(assert (= (or x1903 (and (not x2027) x2417)) x1526))
(assert (x593 x2343))
(assert (x593 x578))
(assert (= x2564 (=> (and (= x2541 x736) (= x2542 x2534)) x1170)))
(assert (x593 x1352))
(assert (= x869 (and x2060 x1598)))
(assert (= (and x2689 (not x1870)) x1061))
(assert (x593 x1216))
(assert (= (x2465 (x71 1926446194)) 1926446194))
(assert (= (and x2239 x786) x1654))
(assert (= (and x1964 (not x1221)) x360))
(assert (= x54 (and x805 (not x2480))))
(assert (= (=> (and (= x2267 x2375) (= x1094 0)) x2698) x2135))
(assert (x593 x2533))
(assert (x593 x235))
(assert (x593 x2328))
(assert (x593 x950))
(assert (x593 x1564))
(assert (= (and x352 x437) x2182))
(check-sat)
(exit)