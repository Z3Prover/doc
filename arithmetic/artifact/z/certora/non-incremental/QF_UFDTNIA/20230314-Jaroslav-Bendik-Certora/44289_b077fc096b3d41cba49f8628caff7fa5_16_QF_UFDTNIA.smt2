(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x549 0)) (((x1899 (x25 x549) (x259 x549) (x891 Int)) (x2070 (x1088 x549) (x1029 Int)) (x1829 (x653 Int)))))
(declare-fun x304 () Bool)
(declare-fun x298 (x549) Int)
(declare-fun x1802 () Int)
(declare-fun x340 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x740 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x135 () Bool)
(declare-fun x490 () Bool)
(declare-fun x482 () Int)
(declare-fun x2098 () Bool)
(declare-fun x1913 () Int)
(declare-fun x601 () x549)
(declare-fun x780 () Int)
(declare-fun x707 () Bool)
(declare-fun x77 () Int)
(declare-fun x16 () Int)
(declare-fun x417 () Bool)
(declare-fun x723 () Int)
(declare-fun x697 () Int)
(declare-fun x1383 () Bool)
(declare-fun x51 () Bool)
(declare-fun x438 () x549)
(declare-fun x1252 () Bool)
(declare-fun x483 () Bool)
(declare-fun x1176 () Int)
(declare-fun x374 () Bool)
(declare-fun x379 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x1675 () Int)
(declare-fun x519 () Bool)
(declare-fun x795 (Int Int) Int)
(declare-fun x1143 () Int)
(declare-fun x1511 () Int)
(declare-fun x877 () Int)
(declare-fun x1705 () Int)
(declare-fun x125 () Int)
(declare-fun x1797 () Int)
(declare-fun x1299 () Bool)
(declare-fun x1135 () Int)
(declare-fun x284 () Int)
(declare-fun x1725 () Int)
(declare-fun x222 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x1174 () Int)
(declare-fun x1362 () Bool)
(declare-fun x470 () Int)
(declare-fun x1357 () x549)
(declare-fun x1602 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x243 () Bool)
(declare-fun x1234 () Int)
(declare-fun x1629 () Bool)
(declare-fun x1734 () Int)
(declare-fun x1249 () Int)
(declare-fun x1945 () Bool)
(declare-fun x1642 () Int)
(declare-fun x998 () Bool)
(declare-fun x2031 () Int)
(declare-fun x1941 () Int)
(declare-fun x385 () Int)
(declare-fun x1784 () Int)
(declare-fun x486 () Bool)
(declare-fun x876 () Int)
(declare-fun x1844 () Bool)
(declare-fun x2142 () Int)
(declare-fun x1428 () Int)
(declare-fun x996 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x1127 (Int) Int)
(declare-fun x1118 () Bool)
(declare-fun x542 () x549)
(declare-fun x1401 () Int)
(declare-fun x1080 () Int)
(declare-fun x1657 () Int)
(declare-fun x1152 () Int)
(declare-fun x642 () Int)
(declare-fun x658 () Int)
(declare-fun x1768 () Int)
(declare-fun x1908 () Int)
(declare-fun x211 () x549)
(declare-fun x4 () Bool)
(declare-fun x363 () Bool)
(declare-fun x471 () Bool)
(declare-fun x1804 (x549) Int)
(declare-fun x1670 () Int)
(declare-fun x187 () Int)
(declare-fun x1610 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1704 () Int)
(declare-fun x901 () Bool)
(declare-fun x258 () Int)
(declare-fun x1842 () Int)
(declare-fun x1279 () Bool)
(declare-fun x1914 (Int) Int)
(declare-fun x1634 () Int)
(declare-fun x2036 () Int)
(declare-fun x1086 () Bool)
(declare-fun x2089 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1496 () Int)
(declare-fun x103 () Int)
(declare-fun x1537 () Int)
(declare-fun x1590 () x549)
(declare-fun x1880 () Int)
(declare-fun x2029 () Int)
(declare-fun x1326 () Int)
(declare-fun x56 () Int)
(declare-fun x823 () Int)
(declare-fun x704 () Int)
(declare-fun x1903 () Int)
(declare-fun x421 () Bool)
(declare-fun x760 () Int)
(declare-fun x735 () Int)
(declare-fun x1131 () Int)
(declare-fun x1231 () Bool)
(declare-fun x1625 () Int)
(declare-fun x1380 () x549)
(declare-fun x1693 () Bool)
(declare-fun x1968 () x549)
(declare-fun x1631 () Bool)
(declare-fun x407 () Bool)
(declare-fun x219 () Bool)
(declare-fun x1226 () Int)
(declare-fun x137 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x204 () Int)
(declare-fun x1424 () Int)
(declare-fun x279 () Bool)
(declare-fun x1075 () Int)
(declare-fun x2081 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x508 () Int)
(declare-fun x630 () Int)
(declare-fun x1538 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x882 () Bool)
(declare-fun x916 () Int)
(declare-fun x67 () Int)
(declare-fun x1334 () Bool)
(declare-fun x1791 () Int)
(declare-fun x130 () Int)
(declare-fun x650 () Int)
(declare-fun x280 () Bool)
(declare-fun x1832 () Int)
(declare-fun x1257 () Int)
(declare-fun x1235 () Bool)
(declare-fun x1923 () Int)
(declare-fun x579 () Bool)
(declare-fun x699 () Int)
(declare-fun x842 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x311 () Int)
(declare-fun x837 () Int)
(declare-fun x1092 () Int)
(declare-fun x406 () Bool)
(declare-fun x914 () Int)
(declare-fun x1399 (Int) Int)
(declare-fun x1459 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x772 () Int)
(declare-fun x1305 () Bool)
(declare-fun x119 () Bool)
(declare-fun x963 () Int)
(declare-fun x462 () Bool)
(declare-fun x2019 () Int)
(declare-fun x884 (Int) Int)
(declare-fun x1317 () Int)
(declare-fun x274 () Int)
(declare-fun x859 () Int)
(declare-fun x633 (x549) Int)
(declare-fun x1857 () Int)
(declare-fun x64 () Int)
(declare-fun x1451 () Bool)
(declare-fun x234 () Int)
(declare-fun x229 () Int)
(declare-fun x402 () Int)
(declare-fun x1182 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x457 () Int)
(declare-fun x192 () Int)
(declare-fun x1553 () Int)
(declare-fun x943 () Bool)
(declare-fun x1467 () Int)
(declare-fun x356 () Bool)
(declare-fun x522 () Bool)
(declare-fun x371 () Int)
(declare-fun x718 () Bool)
(declare-fun x514 () Int)
(declare-fun x983 () Int)
(declare-fun x1688 () Bool)
(declare-fun x1524 () Int)
(declare-fun x1647 () Int)
(declare-fun x346 () Int)
(declare-fun x929 () Bool)
(declare-fun x110 () x549)
(declare-fun x283 (x549) Int)
(declare-fun x83 () Int)
(declare-fun x301 () Bool)
(declare-fun x911 () Int)
(declare-fun x74 () Int)
(declare-fun x170 () Bool)
(declare-fun x144 () Int)
(declare-fun x1584 () Int)
(declare-fun x1421 () Bool)
(declare-fun x961 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x787 () Int)
(declare-fun x387 () Bool)
(declare-fun x1064 () Int)
(declare-fun x450 () Bool)
(declare-fun x1727 () Int)
(declare-fun x271 () Bool)
(declare-fun x339 () Int)
(declare-fun x1930 () Int)
(declare-fun x1816 () Bool)
(declare-fun x422 () Int)
(declare-fun x1723 () Bool)
(declare-fun x670 (x549) Int)
(declare-fun x752 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x775 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x349 () Bool)
(declare-fun x668 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x38 () Bool)
(declare-fun x113 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x2012 () Int)
(declare-fun x1645 () Int)
(declare-fun x909 () Bool)
(declare-fun x236 () Bool)
(declare-fun x1781 () Int)
(declare-fun x791 () Int)
(declare-fun x1503 () Int)
(declare-fun x138 () Int)
(declare-fun x369 () x549)
(declare-fun x1044 () Int)
(declare-fun x76 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x682 () Int)
(declare-fun x921 () Bool)
(declare-fun x1884 () Bool)
(declare-fun x527 () Int)
(declare-fun x1862 () Bool)
(declare-fun x104 (Int) Int)
(declare-fun x70 () Bool)
(declare-fun x28 () Bool)
(declare-fun x1246 () Int)
(declare-fun x308 () Bool)
(declare-fun x18 () Bool)
(declare-fun x97 () Bool)
(declare-fun x982 () Bool)
(declare-fun x1340 (Int) Int)
(declare-fun x228 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x1051 (Int) Int)
(declare-fun x33 () Bool)
(declare-fun x1488 (Int) Int)
(declare-fun x1047 () Bool)
(declare-fun x504 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x930 () Bool)
(declare-fun x985 () Bool)
(declare-fun x831 () Int)
(declare-fun x1953 () Int)
(declare-fun x1300 () Bool)
(declare-fun x2040 () Int)
(declare-fun x2047 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x1944 () Int)
(declare-fun x82 () Int)
(declare-fun x860 () Bool)
(declare-fun x1955 () Int)
(declare-fun x1323 () Bool)
(declare-fun x598 () Bool)
(declare-fun x995 () Int)
(declare-fun x1066 () Bool)
(declare-fun x698 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x226 () Bool)
(declare-fun x497 () Int)
(declare-fun x1138 () Int)
(declare-fun x190 () Int)
(declare-fun x1132 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x843 () Int)
(declare-fun x1273 () Int)
(declare-fun x636 () Int)
(declare-fun x532 () Int)
(declare-fun x1714 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x888 () Int)
(declare-fun x474 () Bool)
(declare-fun x205 () Bool)
(declare-fun x2132 () Int)
(declare-fun x1274 () Int)
(declare-fun x702 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x53 () Int)
(declare-fun x160 () Bool)
(declare-fun x1874 () Int)
(declare-fun x1554 () Int)
(declare-fun x955 () Bool)
(declare-fun x886 () Bool)
(declare-fun x427 () Int)
(declare-fun x585 () Bool)
(declare-fun x1861 () Int)
(declare-fun x2037 () Int)
(declare-fun x397 () Int)
(declare-fun x1986 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x1011 () x549)
(declare-fun x950 () Int)
(declare-fun x1079 () x549)
(declare-fun x1473 () Bool)
(declare-fun x1166 () Int)
(declare-fun x1957 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x1871 () Int)
(declare-fun x345 () Bool)
(declare-fun x1346 () Int)
(declare-fun x350 () Bool)
(declare-fun x880 () Int)
(declare-fun x310 () Int)
(declare-fun x1691 () Int)
(declare-fun x1994 () Int)
(declare-fun x2082 () Bool)
(declare-fun x108 () Bool)
(declare-fun x177 (Int) Int)
(declare-fun x912 () Bool)
(declare-fun x326 () Int)
(declare-fun x188 () Int)
(declare-fun x900 () Int)
(declare-fun x1640 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x303 () Int)
(declare-fun x919 () Int)
(declare-fun x14 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1114 () Int)
(declare-fun x1742 () Int)
(declare-fun x1767 () Int)
(declare-fun x1058 () Int)
(declare-fun x1458 () Int)
(declare-fun x1560 () Int)
(declare-fun x557 () Bool)
(declare-fun x43 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x1081 () Int)
(declare-fun x1151 () Int)
(declare-fun x87 () Bool)
(declare-fun x1282 () x549)
(declare-fun x1575 () x549)
(declare-fun x696 () Bool)
(declare-fun x844 () Bool)
(declare-fun x881 () Int)
(declare-fun x1582 () Int)
(declare-fun x8 () Int)
(declare-fun x145 () Int)
(declare-fun x922 () Bool)
(declare-fun x1757 () Int)
(declare-fun x1055 () Int)
(declare-fun x2092 (x549) Int)
(declare-fun x803 () Int)
(declare-fun x1250 () x549)
(declare-fun x2072 () Bool)
(declare-fun x999 () Bool)
(declare-fun x479 () Bool)
(declare-fun x964 () Bool)
(declare-fun x750 () Bool)
(declare-fun x1087 () Int)
(declare-fun x583 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x1744 () Int)
(declare-fun x2126 () Int)
(declare-fun x1202 () Int)
(declare-fun x1001 () Int)
(declare-fun x1676 () x549)
(declare-fun x1237 () Bool)
(declare-fun x563 () Int)
(declare-fun x1809 () Int)
(declare-fun x260 () Bool)
(declare-fun x186 () Bool)
(declare-fun x183 () Bool)
(declare-fun x447 () Bool)
(declare-fun x1444 () Int)
(declare-fun x1907 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x1069 () Int)
(declare-fun x2127 () Bool)
(declare-fun x639 () Int)
(declare-fun x1847 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x2086 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x558 () Int)
(declare-fun x1083 () Int)
(declare-fun x2024 () Int)
(declare-fun x756 () Bool)
(declare-fun x1528 () Int)
(declare-fun x391 () x549)
(declare-fun x295 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x1368 () Int)
(declare-fun x1035 () Bool)
(declare-fun x439 () x549)
(declare-fun x809 () Int)
(declare-fun x1659 () Int)
(declare-fun x599 () Bool)
(declare-fun x1120 () Int)
(declare-fun x460 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x1351 () Int)
(declare-fun x2078 () Int)
(declare-fun x320 () Int)
(declare-fun x52 () Bool)
(declare-fun x990 () Int)
(declare-fun x1438 () x549)
(declare-fun x1972 () Int)
(declare-fun x1124 () Int)
(declare-fun x2119 () Bool)
(declare-fun x773 () Bool)
(declare-fun x935 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1814 (Int) Int)
(declare-fun x1772 () Bool)
(declare-fun x782 () Int)
(declare-fun x1879 () Int)
(declare-fun x1761 () Int)
(declare-fun x2003 () Int)
(declare-fun x659 () Int)
(declare-fun x544 () Int)
(declare-fun x94 () Int)
(declare-fun x441 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x112 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x1229 () Int)
(declare-fun x771 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x507 () Bool)
(declare-fun x1916 () Int)
(declare-fun x708 () Int)
(declare-fun x30 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x1181 () Int)
(declare-fun x1060 () Int)
(declare-fun x245 () Int)
(declare-fun x1184 () Bool)
(declare-fun x272 () Bool)
(declare-fun x1872 () x549)
(declare-fun x973 () Int)
(declare-fun x456 () Bool)
(declare-fun x1566 () Int)
(declare-fun x196 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x574 () Bool)
(declare-fun x779 () Int)
(declare-fun x993 () Int)
(declare-fun x673 () x549)
(declare-fun x433 () Int)
(declare-fun x1922 () Int)
(declare-fun x2004 (Int) Int)
(declare-fun x2028 () Int)
(declare-fun x1748 () Int)
(declare-fun x1039 () Int)
(declare-fun x207 () Int)
(declare-fun x1890 () Int)
(declare-fun x794 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x81 () Int)
(declare-fun x1715 () Int)
(declare-fun x57 () Bool)
(declare-fun x342 () Int)
(declare-fun x184 (Int) Int)
(declare-fun x1435 () Int)
(declare-fun x1960 () Bool)
(declare-fun x657 () Bool)
(declare-fun x34 () Int)
(declare-fun x2001 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x778 () Int)
(declare-fun x1518 () Int)
(declare-fun x638 () Bool)
(declare-fun x1759 () Int)
(declare-fun x2061 () Int)
(declare-fun x663 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1285 () Int)
(declare-fun x336 () Int)
(declare-fun x148 () Int)
(declare-fun x2069 () Bool)
(declare-fun x1718 () Int)
(declare-fun x1008 () Bool)
(declare-fun x502 () Bool)
(declare-fun x675 () Int)
(declare-fun x745 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x806 () Int)
(declare-fun x1926 () Int)
(declare-fun x1307 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x945 () Bool)
(declare-fun x1882 () x549)
(declare-fun x1552 () Bool)
(declare-fun x401 () Int)
(declare-fun x746 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x1191 () x549)
(declare-fun x1450 () Int)
(declare-fun x853 () Int)
(declare-fun x1175 () Int)
(declare-fun x476 () Bool)
(declare-fun x6 () Int)
(declare-fun x2079 () Int)
(declare-fun x1262 () Int)
(declare-fun x1446 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x802 () Bool)
(declare-fun x330 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1325 (Int) Int)
(declare-fun x820 () Int)
(declare-fun x1255 () Int)
(declare-fun x313 () Int)
(declare-fun x152 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x913 () Bool)
(declare-fun x1013 () Int)
(declare-fun x1561 () Bool)
(declare-fun x2060 () Int)
(declare-fun x1818 () Int)
(declare-fun x1016 () Bool)
(declare-fun x774 () Int)
(declare-fun x1617 () Int)
(declare-fun x175 (x549) Int)
(declare-fun x1134 () Int)
(declare-fun x977 () Int)
(declare-fun x781 (x549) Int)
(declare-fun x800 () Bool)
(declare-fun x986 () Int)
(declare-fun x2018 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1898 () Int)
(declare-fun x1071 () Int)
(declare-fun x1440 () Int)
(declare-fun x1699 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x414 () Bool)
(declare-fun x685 () Bool)
(declare-fun x898 () Bool)
(declare-fun x1708 () Int)
(declare-fun x1936 () Int)
(declare-fun x1669 () Int)
(declare-fun x1466 (Int) Int)
(declare-fun x1372 () Int)
(declare-fun x3 () Int)
(declare-fun x1696 () Bool)
(declare-fun x1456 () Int)
(declare-fun x730 () Bool)
(declare-fun x622 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x426 () Int)
(declare-fun x1598 () x549)
(declare-fun x1695 () Int)
(declare-fun x732 () Bool)
(declare-fun x816 () Bool)
(declare-fun x208 () Int)
(declare-fun x265 () Int)
(declare-fun x1790 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x1205 () Int)
(declare-fun x2044 () Int)
(declare-fun x1592 () x549)
(declare-fun x845 () Int)
(declare-fun x191 () Bool)
(declare-fun x927 () Int)
(declare-fun x1448 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x235 () Bool)
(declare-fun x1192 () x549)
(declare-fun x979 () Int)
(declare-fun x1367 () Int)
(declare-fun x1848 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x1483 () Int)
(declare-fun x608 () Int)
(declare-fun x20 () Int)
(declare-fun x648 () Bool)
(declare-fun x535 () Int)
(declare-fun x1973 () Int)
(declare-fun x1728 () Int)
(declare-fun x920 () Int)
(declare-fun x1371 () Bool)
(declare-fun x172 () Int)
(declare-fun x2067 () Bool)
(declare-fun x506 () Int)
(declare-fun x1270 (Int) Int)
(declare-fun x1817 () Int)
(declare-fun x1769 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x948 () Bool)
(declare-fun x1527 () Int)
(declare-fun x1412 () Int)
(declare-fun x15 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x1160 () Int)
(declare-fun x2125 () Int)
(declare-fun x819 () Bool)
(declare-fun x606 () Bool)
(declare-fun x662 () Int)
(declare-fun x210 () Bool)
(declare-fun x1495 () Int)
(declare-fun x1289 () Int)
(declare-fun x1244 () Int)
(declare-fun x545 () Bool)
(declare-fun x933 () Bool)
(declare-fun x1991 () Bool)
(declare-fun x341 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x654 () Int)
(declare-fun x994 () Bool)
(declare-fun x1037 () Int)
(declare-fun x1052 () Int)
(declare-fun x1883 () Int)
(declare-fun x105 () Int)
(declare-fun x1271 () Bool)
(declare-fun x981 () Bool)
(declare-fun x1541 (Int) Int)
(declare-fun x1603 () Int)
(declare-fun x715 () Int)
(declare-fun x1866 () Bool)
(declare-fun x1469 () Int)
(declare-fun x2023 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x547 () Int)
(declare-fun x1787 () Int)
(declare-fun x1529 () x549)
(declare-fun x2015 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x90 (x549) Int)
(declare-fun x489 () Bool)
(declare-fun x1870 () Int)
(declare-fun x543 () Int)
(declare-fun x1551 () Bool)
(declare-fun x1512 () Int)
(declare-fun x649 () Int)
(declare-fun x69 () Int)
(declare-fun x2053 () Int)
(declare-fun x1377 () Int)
(declare-fun x866 () Int)
(declare-fun x2096 () Int)
(declare-fun x576 () Int)
(declare-fun x906 () Int)
(declare-fun x2105 () Bool)
(declare-fun x835 () Int)
(declare-fun x1556 () Bool)
(declare-fun x1449 () Int)
(declare-fun x220 () Int)
(declare-fun x1954 () x549)
(declare-fun x887 () Bool)
(declare-fun x1098 () Int)
(declare-fun x1156 () Int)
(declare-fun x334 () Bool)
(declare-fun x2088 () Int)
(declare-fun x1840 () Bool)
(declare-fun x1099 () x549)
(declare-fun x2099 () Int)
(declare-fun x1494 () Bool)
(declare-fun x281 () Int)
(declare-fun x242 () Int)
(declare-fun x434 () Bool)
(declare-fun x862 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x23 () Bool)
(declare-fun x1112 () Int)
(declare-fun x1217 () Bool)
(declare-fun x2000 () Int)
(declare-fun x373 () Int)
(declare-fun x617 () Bool)
(declare-fun x1447 () Int)
(declare-fun x1620 () Bool)
(declare-fun x464 () Bool)
(declare-fun x1381 () Int)
(declare-fun x147 () Int)
(declare-fun x217 () Int)
(declare-fun x619 () Bool)
(declare-fun x39 () Int)
(declare-fun x1077 () Int)
(declare-fun x597 () Int)
(declare-fun x1465 () Bool)
(declare-fun x288 () Int)
(declare-fun x562 () Bool)
(declare-fun x466 () Int)
(declare-fun x424 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x1521 () Int)
(declare-fun x1162 () Int)
(declare-fun x1484 () Bool)
(declare-fun x302 () Int)
(declare-fun x1236 () Int)
(declare-fun x1948 () Int)
(declare-fun x1912 () Bool)
(declare-fun x390 () Int)
(declare-fun x1729 () Int)
(declare-fun x400 () Bool)
(declare-fun x978 () Int)
(declare-fun x2109 () Int)
(declare-fun x1974 () Int)
(declare-fun x521 () Bool)
(declare-fun x924 () Bool)
(declare-fun x1133 () Int)
(declare-fun x680 () Int)
(declare-fun x1820 () Bool)
(declare-fun x582 () Bool)
(declare-fun x1292 () Int)
(declare-fun x691 () Int)
(declare-fun x1216 () Int)
(declare-fun x2120 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1443 () Int)
(declare-fun x351 () Int)
(declare-fun x233 () Int)
(declare-fun x1697 () Int)
(declare-fun x953 () x549)
(declare-fun x1522 () Int)
(declare-fun x1649 () Bool)
(declare-fun x726 () Int)
(declare-fun x1896 () Int)
(declare-fun x679 () Int)
(declare-fun x621 () Bool)
(declare-fun x1431 () Int)
(declare-fun x1009 () Int)
(declare-fun x849 () Int)
(declare-fun x1190 () Bool)
(declare-fun x338 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x1294 () Int)
(declare-fun x335 () Int)
(declare-fun x674 () Int)
(declare-fun x855 () Int)
(declare-fun x1939 () Int)
(declare-fun x757 () Bool)
(declare-fun x1526 () Int)
(declare-fun x202 () Int)
(declare-fun x871 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x826 () Int)
(declare-fun x2059 () Int)
(declare-fun x478 () Bool)
(declare-fun x1403 (x549) Int)
(declare-fun x1324 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x1531 () Int)
(declare-fun x293 () Int)
(declare-fun x431 () Bool)
(declare-fun x1909 () Int)
(declare-fun x1646 () Bool)
(declare-fun x1130 () Int)
(declare-fun x182 (Int) Int)
(declare-fun x612 () Int)
(declare-fun x681 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x1310 () Int)
(declare-fun x449 () Bool)
(declare-fun x634 () Bool)
(declare-fun x26 () Int)
(declare-fun x1963 () Bool)
(declare-fun x1548 () Int)
(declare-fun x1327 () Int)
(declare-fun x1222 () Bool)
(declare-fun x767 () Bool)
(declare-fun x1361 () Int)
(declare-fun x1358 () Int)
(declare-fun x158 () Int)
(declare-fun x834 () Bool)
(declare-fun x448 (x549) Int)
(declare-fun x783 () Bool)
(declare-fun x1320 () Int)
(declare-fun x102 () Int)
(declare-fun x2136 () x549)
(declare-fun x684 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1015 () Bool)
(declare-fun x841 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1239 () Int)
(declare-fun x1671 () Int)
(declare-fun x1404 () Int)
(declare-fun x850 () Int)
(declare-fun x1611 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x1835 () Bool)
(declare-fun x676 () Int)
(declare-fun x1658 () x549)
(declare-fun x1931 () Bool)
(declare-fun x566 () Int)
(declare-fun x2016 () Int)
(declare-fun x1572 () Bool)
(declare-fun x1938 () Int)
(declare-fun x1852 () Bool)
(declare-fun x765 () Int)
(declare-fun x1544 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x825 () Int)
(declare-fun x1185 () Bool)
(declare-fun x839 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x1068 () Int)
(declare-fun x1179 () Bool)
(declare-fun x1673 () Int)
(declare-fun x143 () Bool)
(declare-fun x306 () Int)
(declare-fun x154 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x153 () Int)
(declare-fun x84 () Bool)
(declare-fun x2107 () Bool)
(declare-fun x714 () Int)
(declare-fun x1565 () Bool)
(declare-fun x1964 () Int)
(declare-fun x1793 () Bool)
(declare-fun x46 () Bool)
(declare-fun x632 () x549)
(declare-fun x516 () Bool)
(declare-fun x1505 () Int)
(declare-fun x1065 () Int)
(declare-fun x1445 () Int)
(declare-fun x554 () x549)
(declare-fun x1439 () Int)
(declare-fun x173 () Int)
(declare-fun x1536 () Int)
(declare-fun x155 () Bool)
(declare-fun x59 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x1635 () Int)
(declare-fun x327 () Int)
(declare-fun x1952 () Int)
(declare-fun x36 () Bool)
(declare-fun x459 () Int)
(declare-fun x1004 () Bool)
(declare-fun x2139 () Bool)
(declare-fun x538 () Bool)
(declare-fun x2117 () Int)
(declare-fun x101 () Bool)
(declare-fun x644 () Int)
(declare-fun x1530 () Int)
(declare-fun x485 () Int)
(declare-fun x98 () Bool)
(declare-fun x1608 () Int)
(declare-fun x810 () Bool)
(declare-fun x1888 () Int)
(declare-fun x1690 () x549)
(declare-fun x867 () Int)
(declare-fun x701 () x549)
(declare-fun x949 () Bool)
(declare-fun x1061 (x549) Int)
(declare-fun x890 () Int)
(declare-fun x1641 () x549)
(declare-fun x294 () Int)
(declare-fun x1129 () Int)
(declare-fun x975 () Int)
(declare-fun x142 () Bool)
(declare-fun x1021 () Int)
(declare-fun x605 () x549)
(declare-fun x737 () Bool)
(declare-fun x79 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x828 () Int)
(declare-fun x1472 () Int)
(declare-fun x1684 () Int)
(declare-fun x1136 () Int)
(declare-fun x713 () Int)
(declare-fun x150 () x549)
(declare-fun x2048 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x212 () Bool)
(declare-fun x997 () Int)
(declare-fun x1600 () Int)
(declare-fun x31 () Bool)
(declare-fun x469 () Bool)
(declare-fun x1391 () Int)
(declare-fun x1988 () Int)
(declare-fun x1499 () Int)
(declare-fun x1743 () Bool)
(declare-fun x2045 () Bool)
(declare-fun x895 () x549)
(declare-fun x287 () Int)
(declare-fun x151 () Int)
(declare-fun x1038 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x324 () Bool)
(declare-fun x722 () Int)
(declare-fun x1523 () Bool)
(declare-fun x1198 () Int)
(declare-fun x797 () Bool)
(declare-fun x1345 () Int)
(declare-fun x1798 () Int)
(declare-fun x1583 () Int)
(declare-fun x297 () Bool)
(declare-fun x1785 () Bool)
(declare-fun x361 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1100 () Int)
(declare-fun x2033 () Bool)
(declare-fun x1296 () x549)
(declare-fun x299 () Bool)
(declare-fun x376 () Int)
(declare-fun x1850 () Int)
(declare-fun x1169 () Bool)
(declare-fun x686 () Bool)
(declare-fun x1057 () Int)
(declare-fun x2084 () Int)
(declare-fun x1218 () Int)
(declare-fun x2009 () Int)
(declare-fun x2021 () Bool)
(declare-fun x215 () Int)
(declare-fun x1756 () Int)
(declare-fun x706 () Int)
(declare-fun x5 () Bool)
(declare-fun x1074 () x549)
(declare-fun x596 () Int)
(declare-fun x1628 () Int)
(declare-fun x1328 () Bool)
(declare-fun x793 () Bool)
(declare-fun x1350 () x549)
(declare-fun x942 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x1956 () x549)
(declare-fun x168 () Bool)
(declare-fun x86 () Int)
(declare-fun x1992 () Bool)
(declare-fun x491 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x1394 () Int)
(declare-fun x1254 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1268 () Int)
(declare-fun x1851 () Int)
(declare-fun x755 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x2133 () Int)
(declare-fun x1877 () Int)
(declare-fun x573 () Bool)
(declare-fun x505 () Int)
(declare-fun x2011 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x29 () Bool)
(declare-fun x660 () Bool)
(declare-fun x1919 () Bool)
(declare-fun x907 () Bool)
(declare-fun x480 () Int)
(declare-fun x1754 () Bool)
(declare-fun x1189 () Int)
(declare-fun x1894 () Bool)
(declare-fun x1203 () Int)
(declare-fun x1735 () Int)
(declare-fun x1701 () Int)
(declare-fun x1984 () Bool)
(declare-fun x127 () Bool)
(declare-fun x915 () Bool)
(declare-fun x584 () Int)
(declare-fun x817 () x549)
(declare-fun x1534 () Bool)
(declare-fun x629 () Bool)
(declare-fun x123 () Int)
(declare-fun x332 () Int)
(declare-fun x1427 () Int)
(declare-fun x1165 () Int)
(declare-fun x1959 () Int)
(declare-fun x1228 () Bool)
(declare-fun x796 () Bool)
(declare-fun x2007 () Int)
(declare-fun x496 () Int)
(declare-fun x1241 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x7 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1018 () Int)
(declare-fun x1958 () Bool)
(declare-fun x354 () x549)
(declare-fun x928 () Bool)
(declare-fun x1125 () Int)
(declare-fun x874 () Int)
(declare-fun x1562 () Int)
(declare-fun x410 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x111 () Bool)
(declare-fun x446 () Bool)
(declare-fun x1533 () Int)
(declare-fun x854 () Bool)
(declare-fun x2032 () Int)
(declare-fun x1493 () Int)
(declare-fun x1275 () Int)
(declare-fun x1050 (x549) Int)
(declare-fun x10 () Int)
(declare-fun x1194 () Bool)
(declare-fun x840 () Int)
(declare-fun x761 () Int)
(declare-fun x904 () Int)
(declare-fun x1569 () Int)
(declare-fun x493 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x1823 () Int)
(declare-fun x1779 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x864 () Int)
(declare-fun x520 (Int) Int)
(declare-fun x223 () Int)
(declare-fun x692 () Int)
(declare-fun x1455 () Int)
(declare-fun x1860 () Int)
(declare-fun x91 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1141 () Int)
(declare-fun x645 () Int)
(declare-fun x307 () Int)
(declare-fun x1609 () Int)
(declare-fun x198 () Bool)
(declare-fun x2085 () Int)
(declare-fun x1090 () Int)
(declare-fun x1978 () Int)
(declare-fun x2035 () Int)
(declare-fun x494 () Int)
(declare-fun x1720 () Bool)
(declare-fun x970 () Int)
(declare-fun x1178 () Int)
(declare-fun x488 (x549) Int)
(declare-fun x868 () Bool)
(declare-fun x878 () Bool)
(declare-fun x693 () Int)
(declare-fun x1905 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x181 () Int)
(declare-fun x1196 () x549)
(declare-fun x1760 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1093 () Int)
(declare-fun x2064 () Int)
(declare-fun x672 () Int)
(declare-fun x664 () Bool)
(declare-fun x1689 () Int)
(declare-fun x1238 () x549)
(declare-fun x811 () Bool)
(declare-fun x960 () x549)
(declare-fun x120 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x966 () Int)
(declare-fun x115 () Bool)
(declare-fun x492 () Bool)
(declare-fun x725 () Int)
(declare-fun x164 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x253 () Bool)
(declare-fun x41 () Int)
(declare-fun x1187 () Bool)
(declare-fun x1003 () Int)
(declare-fun x635 () Int)
(declare-fun x1740 () Int)
(declare-fun x1468 () Int)
(declare-fun x1348 () Int)
(declare-fun x1810 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x753 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x55 () Int)
(declare-fun x383 () Int)
(declare-fun x1225 () Int)
(declare-fun x1116 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x9 () Int)
(declare-fun x1442 () Int)
(declare-fun x107 () Bool)
(declare-fun x309 () Int)
(declare-fun x524 (Int) Int)
(declare-fun x1942 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x821 () Int)
(declare-fun x719 () Int)
(declare-fun x748 () Int)
(declare-fun x987 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x473 () Bool)
(declare-fun x615 () Bool)
(declare-fun x37 () Bool)
(declare-fun x128 () x549)
(declare-fun x1803 () Int)
(declare-fun x785 () Int)
(declare-fun x89 () Int)
(declare-fun x268 () Int)
(declare-fun x1056 () x549)
(declare-fun x131 () Int)
(declare-fun x454 () Int)
(declare-fun x926 () Int)
(declare-fun x1220 () Int)
(declare-fun x362 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x548 () Int)
(declare-fun x1168 () Bool)
(declare-fun x1341 () Int)
(declare-fun x162 () Bool)
(declare-fun x32 () Int)
(declare-fun x1980 () Bool)
(declare-fun x1902 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x167 () Bool)
(declare-fun x221 () Bool)
(declare-fun x1550 () Int)
(declare-fun x1996 () Int)
(declare-fun x1043 () Int)
(declare-fun x1891 () Bool)
(declare-fun x273 () Int)
(declare-fun x418 () Int)
(declare-fun x1070 () Bool)
(declare-fun x1547 () Int)
(declare-fun x2020 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x1749 (Int) Int)
(declare-fun x63 () Bool)
(declare-fun x129 () Int)
(declare-fun x1591 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x1970 (x549) Int)
(declare-fun x214 () Bool)
(declare-fun x764 () Int)
(declare-fun x80 () Bool)
(declare-fun x727 () Bool)
(declare-fun x54 (x549) Int)
(declare-fun x801 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1824 (Int) Int)
(declare-fun x333 () Bool)
(declare-fun x1998 (Int) Int)
(declare-fun x1928 (Int) Int)
(declare-fun x1576 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x1378 () Int)
(declare-fun x1539 () Int)
(declare-fun x1040 () Int)
(declare-fun x19 () Int)
(declare-fun x889 () Int)
(declare-fun x894 () Int)
(declare-fun x2058 () x549)
(declare-fun x991 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x429 () Bool)
(declare-fun x565 (Int) Int)
(declare-fun x203 () Int)
(declare-fun x1283 (Int) Int)
(declare-fun x1207 () Int)
(declare-fun x117 () Bool)
(declare-fun x500 () Bool)
(declare-fun x1747 () Int)
(declare-fun x1384 () Int)
(declare-fun x1422 () Int)
(declare-fun x372 () Int)
(declare-fun x1915 () Int)
(declare-fun x1161 () Int)
(declare-fun x1137 () Int)
(declare-fun x149 () Int)
(declare-fun x389 () Bool)
(declare-fun x766 () Bool)
(declare-fun x1 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x499 () Int)
(declare-fun x1966 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x1048 () Int)
(declare-fun x68 () Bool)
(declare-fun x1887 () Int)
(declare-fun x1031 () Int)
(declare-fun x728 () Int)
(declare-fun x1588 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x731 () Bool)
(declare-fun x940 () Int)
(declare-fun x1045 () Int)
(declare-fun x851 () Int)
(declare-fun x1032 () Bool)
(declare-fun x1636 () Int)
(declare-fun x1685 () Bool)
(declare-fun x918 () Int)
(declare-fun x1106 () Bool)
(declare-fun x2038 () Int)
(declare-fun x1656 () Int)
(declare-fun x2010 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x724 () Int)
(declare-fun x1619 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x1396 (Int) Int)
(declare-fun x140 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x1589 () Int)
(declare-fun x1800 () Int)
(declare-fun x161 () Int)
(declare-fun x360 () x549)
(declare-fun x1889 () Bool)
(declare-fun x1796 () Bool)
(declare-fun x375 () Int)
(declare-fun x1794 () Int)
(declare-fun x1515 () Int)
(declare-fun x967 () Bool)
(declare-fun x1177 () Int)
(declare-fun x2041 () Int)
(declare-fun x2052 () Bool)
(declare-fun x179 () Int)
(declare-fun x705 (Int) Int)
(declare-fun x1563 () Bool)
(declare-fun x628 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x199 () Bool)
(declare-fun x432 () Bool)
(declare-fun x60 () x549)
(declare-fun x344 () Int)
(declare-fun x99 () Bool)
(declare-fun x833 () Int)
(declare-fun x2042 () x549)
(declare-fun x1000 () Int)
(declare-fun x1932 () Int)
(declare-fun x1687 () Bool)
(declare-fun x1776 () Int)
(declare-fun x1042 () Int)
(declare-fun x607 () Int)
(declare-fun x626 () Bool)
(declare-fun x1272 () Int)
(declare-fun x1415 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x1097 () x549)
(declare-fun x12 () Int)
(declare-fun x1006 () Int)
(declare-fun x1901 () Bool)
(declare-fun x2146 () Bool)
(declare-fun x178 () Bool)
(declare-fun x592 (x549) Int)
(declare-fun x1666 () Int)
(declare-fun x1333 (Int) Int)
(declare-fun x1664 () Int)
(declare-fun x1022 () x549)
(declare-fun x1549 () Int)
(declare-fun x2008 (x549) Int)
(declare-fun x577 () Int)
(declare-fun x251 () Bool)
(declare-fun x218 () Bool)
(declare-fun x185 () Int)
(declare-fun x176 () Bool)
(declare-fun x296 (Int) Int)
(declare-fun x829 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x865 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x1853 () Int)
(declare-fun x623 () Int)
(declare-fun x1713 () Bool)
(declare-fun x409 () Bool)
(declare-fun x872 () Bool)
(declare-fun x688 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x751 () Int)
(declare-fun x314 () Bool)
(declare-fun x1242 () Int)
(declare-fun x1865 (Int) Int)
(declare-fun x495 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x1971 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x1155 () Int)
(declare-fun x1247 () Int)
(declare-fun x667 () Bool)
(declare-fun x2065 () Int)
(declare-fun x465 () Int)
(declare-fun x484 () Int)
(declare-fun x624 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x2121 () Int)
(declare-fun x1452 () Bool)
(declare-fun x587 () Int)
(declare-fun x934 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x980 () Bool)
(declare-fun x134 () Int)
(declare-fun x515 () Int)
(declare-fun x1201 () Int)
(declare-fun x1426 () Bool)
(declare-fun x380 () x549)
(declare-fun x1596 () Bool)
(declare-fun x437 () Int)
(declare-fun x1227 () Bool)
(declare-fun x1750 () Int)
(declare-fun x530 () Int)
(declare-fun x347 () Int)
(declare-fun x1934 () x549)
(declare-fun x941 () Bool)
(declare-fun x712 () Int)
(declare-fun x951 () Int)
(declare-fun x1927 (x549) Int)
(declare-fun x453 () Int)
(declare-fun x610 () Bool)
(declare-fun x200 () Bool)
(declare-fun x96 () Int)
(declare-fun x798 () Bool)
(declare-fun x952 () Int)
(declare-fun x666 () Bool)
(declare-fun x415 () Int)
(declare-fun x1873 () Bool)
(declare-fun x262 () Int)
(declare-fun x1667 () Int)
(declare-fun x1682 () Int)
(declare-fun x1142 () Int)
(declare-fun x1028 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1799 () Int)
(declare-fun x1815 () Bool)
(declare-fun x747 () Bool)
(declare-fun x1967 () Int)
(declare-fun x209 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x1665 () Int)
(declare-fun x1059 () Int)
(declare-fun x1811 () Int)
(declare-fun x1574 () Bool)
(declare-fun x165 () Bool)
(declare-fun x270 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x419 () x549)
(declare-fun x1578 () Int)
(declare-fun x1707 () Int)
(declare-fun x1478 () Int)
(declare-fun x694 () Bool)
(declare-fun x1855 () Int)
(declare-fun x126 () Int)
(declare-fun x1812 () Int)
(declare-fun x603 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x292 () Int)
(declare-fun x541 () Int)
(declare-fun x1632 () Int)
(declare-fun x2017 () Int)
(declare-fun x1878 () Bool)
(declare-fun x1937 () Int)
(declare-fun x1892 () Int)
(declare-fun x1312 () Int)
(declare-fun x78 () Int)
(declare-fun x1311 () Bool)
(declare-fun x717 () Bool)
(declare-fun x588 () Int)
(declare-fun x1637 () Bool)
(declare-fun x1703 () Int)
(declare-fun x1843 (x549) Int)
(declare-fun x487 () Int)
(declare-fun x2005 () Int)
(declare-fun x1474 () Int)
(declare-fun x365 () Bool)
(declare-fun x359 () Int)
(declare-fun x652 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x620 () Int)
(declare-fun x567 () Bool)
(declare-fun x528 () Int)
(declare-fun x11 () Int)
(declare-fun x468 () Bool)
(declare-fun x956 () Bool)
(declare-fun x2129 () Int)
(declare-fun x1280 () Int)
(declare-fun x444 () Int)
(declare-fun x1180 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x875 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x370 () Bool)
(declare-fun x1067 () Int)
(declare-fun x2102 () Int)
(declare-fun x1108 () Int)
(declare-fun x1681 () Int)
(declare-fun x1104 () Bool)
(declare-fun x73 () Int)
(declare-fun x893 () Bool)
(declare-fun x285 () Int)
(declare-fun x589 () Int)
(declare-fun x1303 () Int)
(declare-fun x141 () Int)
(declare-fun x1833 () Bool)
(declare-fun x848 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x239 () Int)
(declare-fun x1117 () Int)
(declare-fun x879 () Bool)
(declare-fun x729 () Int)
(declare-fun x827 () Bool)
(declare-fun x1520 () Int)
(declare-fun x1245 () Int)
(declare-fun x1961 () Bool)
(declare-fun x50 () Bool)
(declare-fun x1470 () Int)
(declare-fun x593 () Bool)
(declare-fun x625 () Int)
(declare-fun x641 () Int)
(declare-fun x1599 () Bool)
(declare-fun x244 () Int)
(declare-fun x85 () Bool)
(declare-fun x254 () Int)
(declare-fun x2145 () Bool)
(declare-fun x1736 () Int)
(declare-fun x216 () Bool)
(declare-fun x1712 () Int)
(declare-fun x1849 () Bool)
(declare-fun x1694 () Int)
(declare-fun x1633 () Int)
(declare-fun x776 () Int)
(declare-fun x61 () Bool)
(declare-fun x1819 () Int)
(declare-fun x790 () Int)
(declare-fun x1293 () Int)
(declare-fun x124 () Int)
(declare-fun x1543 () Int)
(declare-fun x1398 () Int)
(declare-fun x1738 () Bool)
(declare-fun x976 () Int)
(declare-fun x1313 () Bool)
(declare-fun x533 () Int)
(declare-fun x1859 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x838 () Int)
(declare-fun x1243 () Bool)
(declare-fun x777 () Int)
(declare-fun x1813 () Int)
(declare-fun x227 () Int)
(declare-fun x1607 () x549)
(declare-fun x1049 () Int)
(declare-fun x2062 (Int) Int)
(declare-fun x689 () Int)
(declare-fun x550 () Bool)
(declare-fun x1801 () Int)
(declare-fun x1789 () Int)
(declare-fun x932 () Bool)
(declare-fun x1983 () Int)
(declare-fun x1084 () Int)
(declare-fun x1033 () Int)
(declare-fun x1385 () Int)
(declare-fun x1648 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x869 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x968 () Int)
(declare-fun x1987 () Int)
(declare-fun x992 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x1054 () x549)
(declare-fun x643 () Int)
(declare-fun x1256 () Int)
(declare-fun x1863 () x549)
(declare-fun x1702 () Int)
(declare-fun x1375 () x549)
(declare-fun x572 () Int)
(declare-fun x1476 () Int)
(declare-fun x1219 () Int)
(declare-fun x1430 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x282 () Bool)
(declare-fun x237 () Int)
(declare-fun x1577 () Int)
(declare-fun x337 () Int)
(declare-fun x531 () Int)
(declare-fun x1808 () Bool)
(declare-fun x2140 () Int)
(declare-fun x846 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x2147 () Int)
(declare-fun x1722 () Int)
(declare-fun x2030 () Bool)
(declare-fun x637 () Int)
(declare-fun x1146 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x118 () Bool)
(declare-fun x1409 (Int) Int)
(declare-fun x463 () Bool)
(declare-fun x1330 () Int)
(declare-fun x241 () Bool)
(declare-fun x2104 () Bool)
(declare-fun x736 () Int)
(declare-fun x600 () Int)
(declare-fun x1370 () Int)
(declare-fun x2014 () Bool)
(declare-fun x358 () Int)
(declare-fun x738 () Int)
(declare-fun x286 () Int)
(declare-fun x163 () Int)
(declare-fun x604 () Bool)
(declare-fun x382 () Int)
(declare-fun x1570 () x549)
(declare-fun x264 () Bool)
(declare-fun x971 () Int)
(declare-fun x897 () Int)
(declare-fun x2025 () Bool)
(declare-fun x353 () Int)
(declare-fun x171 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x21 () Int)
(declare-fun x1432 () Int)
(declare-fun x883 () Int)
(declare-fun x1477 () Bool)
(declare-fun x256 () Bool)
(declare-fun x230 () Int)
(declare-fun x1752 () x549)
(declare-fun x1148 () Int)
(declare-fun x1680 () Int)
(declare-fun x763 () Int)
(declare-fun x863 () Bool)
(declare-fun x132 () Bool)
(declare-fun x206 () Bool)
(declare-fun x116 () Int)
(declare-fun x305 () x549)
(declare-fun x814 () Bool)
(declare-fun x595 () Int)
(declare-fun x518 () Bool)
(declare-fun x1821 () x549)
(declare-fun x443 () Int)
(declare-fun x569 () Int)
(declare-fun x744 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x425 () Int)
(declare-fun x1504 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x442 () Bool)
(declare-fun x594 () Int)
(declare-fun x1007 () x549)
(declare-fun x2 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x263 () Int)
(declare-fun x423 () Int)
(declare-fun x818 () Bool)
(declare-fun x1208 () Int)
(declare-fun x45 () Int)
(declare-fun x472 () x549)
(declare-fun x1595 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x578 (Int) Int)
(declare-fun x1686 () Int)
(declare-fun x759 () Int)
(declare-fun x1969 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x1223 () Int)
(declare-fun x48 () Int)
(declare-fun x1613 () x549)
(declare-fun x1342 () Int)
(declare-fun x404 () Int)
(declare-fun x1388 () Int)
(declare-fun x2027 () Bool)
(declare-fun x1188 () Int)
(declare-fun x873 () Int)
(declare-fun x1981 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x830 () Bool)
(declare-fun x1741 () Int)
(declare-fun x700 () Int)
(declare-fun x1660 () Int)
(declare-fun x789 () Int)
(declare-fun x247 () Int)
(declare-fun x2103 () x549)
(declare-fun x799 () Bool)
(declare-fun x1214 () Int)
(declare-fun x1782 () Int)
(declare-fun x770 () Int)
(declare-fun x1700 () Int)
(declare-fun x1677 () Bool)
(declare-fun x852 () Bool)
(declare-fun x1355 () Int)
(declare-fun x1475 () Int)
(declare-fun x812 () Int)
(declare-fun x1026 () Int)
(declare-fun x655 () Bool)
(declare-fun x357 () Int)
(declare-fun x974 () Int)
(declare-fun x1568 () Int)
(declare-fun x1654 () Bool)
(declare-fun x392 () x549)
(declare-fun x47 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x146 () Bool)
(declare-fun x1290 () Int)
(declare-fun x1535 () Bool)
(declare-fun x703 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x559 () Int)
(declare-fun x808 () Int)
(declare-fun x988 () Int)
(declare-fun x2066 () Int)
(declare-fun x602 () Bool)
(declare-fun x2094 () Int)
(declare-fun x481 () x549)
(declare-fun x1621 () Int)
(declare-fun x477 () Bool)
(declare-fun x917 () Int)
(declare-fun x62 (x549) Int)
(declare-fun x458 () Bool)
(declare-fun x861 () Int)
(declare-fun x1751 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x743 () Bool)
(declare-fun x936 () Bool)
(declare-fun x2124 () Int)
(declare-fun x856 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x1822 () Int)
(declare-fun x1352 () Int)
(declare-fun x529 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1765 () Bool)
(declare-fun x537 () Bool)
(declare-fun x13 () Int)
(declare-fun x1540 () Int)
(declare-fun x1773 () Int)
(declare-fun x564 () Int)
(declare-fun x2022 () Int)
(declare-fun x1315 (Int) Int)
(declare-fun x618 () Int)
(declare-fun x328 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1053 () Int)
(declare-fun x1397 () Bool)
(declare-fun x1393 () x549)
(declare-fun x136 () Int)
(declare-fun x1343 () Int)
(declare-fun x1979 () Int)
(declare-fun x139 () Bool)
(declare-fun x248 () Int)
(declare-fun x1597 () Int)
(declare-fun x1545 () Bool)
(declare-fun x525 () Bool)
(declare-fun x581 () Bool)
(declare-fun x1807 (x549) Int)
(declare-fun x72 () Int)
(declare-fun x1199 () Int)
(declare-fun x503 () Bool)
(declare-fun x2115 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1867 () Int)
(declare-fun x114 () Bool)
(declare-fun x355 () Bool)
(declare-fun x2093 () Int)
(declare-fun x1519 () Int)
(declare-fun x1322 () Bool)
(declare-fun x1921 () Int)
(declare-fun x556 () Int)
(declare-fun x93 () Int)
(declare-fun x393 () Bool)
(declare-fun x1558 () Int)
(declare-fun x656 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x832 () Int)
(declare-fun x1762 () Bool)
(declare-fun x1826 () Int)
(declare-fun x1286 () Bool)
(declare-fun x671 () Int)
(declare-fun x2097 () x549)
(declare-fun x560 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x695 () Int)
(declare-fun x513 () Bool)
(declare-fun x1387 () Int)
(declare-fun x2057 () Int)
(declare-fun x1674 () Bool)
(declare-fun x1586 () Int)
(declare-fun x1856 () Int)
(declare-fun x452 () Int)
(declare-fun x1795 () Int)
(declare-fun x1480 (Int) Int)
(declare-fun x716 () Int)
(declare-fun x318 () Int)
(declare-fun x49 () Int)
(declare-fun x2108 () Bool)
(declare-fun x317 () Int)
(declare-fun x1506 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x197 () Int)
(declare-fun x322 () x549)
(declare-fun x1002 () Int)
(declare-fun x24 () Bool)
(declare-fun x534 () Int)
(declare-fun x106 () Bool)
(declare-fun x1128 () Int)
(declare-fun x1653 () Int)
(declare-fun x1481 () Int)
(declare-fun x939 () Int)
(declare-fun x511 () Int)
(declare-fun x836 () Int)
(declare-fun x1730 () Int)
(declare-fun x2116 () Bool)
(declare-fun x1314 () Int)
(declare-fun x278 (Int) Int)
(declare-fun x613 () Bool)
(declare-fun x754 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x1516 () Int)
(declare-fun x194 () Int)
(declare-fun x1316 () Bool)
(declare-fun x1498 () Int)
(declare-fun x710 () Int)
(declare-fun x384 () Int)
(declare-fun x709 () Int)
(declare-fun x2056 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1284 () Int)
(declare-fun x1601 () Bool)
(declare-fun x947 () Int)
(declare-fun x1995 () Int)
(declare-fun x561 () Bool)
(declare-fun x1204 () Int)
(declare-fun x762 () Int)
(declare-fun x1492 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1724 () Int)
(declare-fun x1186 () Bool)
(declare-fun x1875 () Int)
(declare-fun x1710 () Int)
(declare-fun x965 () Bool)
(declare-fun x1482 () Int)
(declare-fun x2135 (Int) Int)
(declare-fun x238 (Int) Int)
(declare-fun x420 () Int)
(declare-fun x267 () Int)
(declare-fun x1771 () Int)
(declare-fun x1400 () Int)
(declare-fun x733 () Int)
(declare-fun x1965 () Bool)
(declare-fun x923 () Int)
(declare-fun x88 () Int)
(declare-fun x647 () Bool)
(declare-fun x614 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x430 (Int) x549)
(declare-fun x683 () Bool)
(declare-fun x1376 () Int)
(declare-fun x1581 () Int)
(declare-fun x958 (Int) Int)
(declare-fun x1233 () Int)
(declare-fun x1392 () Int)
(declare-fun x571 () Int)
(declare-fun x742 () Int)
(declare-fun x1349 () Int)
(declare-fun x1147 () Int)
(declare-fun x75 () x549)
(declare-fun x66 () Int)
(declare-fun x157 () Bool)
(declare-fun x1386 () Int)
(declare-fun x523 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x2026 () Int)
(declare-fun x1868 () Bool)
(declare-fun x984 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x58 () Bool)
(declare-fun x1462 () Int)
(declare-fun x1374 () Bool)
(declare-fun x266 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x805 () Int)
(declare-fun x1780 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x768 () x549)
(declare-fun x1507 () Int)
(declare-fun x261 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x1920 () Int)
(declare-fun x201 () Int)
(declare-fun x749 () Int)
(declare-fun x678 () Bool)
(declare-fun x2080 () Bool)
(declare-fun x1164 () Int)
(declare-fun x193 () Bool)
(declare-fun x1091 () Int)
(declare-fun x325 () Bool)
(declare-fun x1353 () Int)
(declare-fun x156 () Int)
(declare-fun x1344 () Bool)
(declare-fun x896 () x549)
(declare-fun x1510 () Bool)
(declare-fun x640 () Bool)
(declare-fun x1321 () Int)
(declare-fun x1836 () x549)
(declare-fun x255 () Bool)
(declare-fun x510 () Int)
(declare-fun x631 () Int)
(declare-fun x1318 () Int)
(declare-fun x1240 () Int)
(declare-fun x1413 () Bool)
(declare-fun x910 () Bool)
(declare-fun x969 () Int)
(declare-fun x1072 () Bool)
(declare-fun x1063 () Int)
(declare-fun x1900 () Int)
(declare-fun x1975 () Int)
(declare-fun x540 () Bool)
(declare-fun x411 (Int) Int)
(declare-fun x1917 () Bool)
(declare-fun x403 () x549)
(declare-fun x609 (Int) Int)
(declare-fun x2049 () Bool)
(declare-fun x1193 () Int)
(declare-fun x65 () Bool)
(declare-fun x1338 () Int)
(declare-fun x1171 () Int)
(declare-fun x959 () Int)
(declare-fun x1173 (x549) Int)
(declare-fun x813 () Int)
(declare-fun x957 () Bool)
(declare-fun x290 () x549)
(declare-fun x180 () Int)
(declare-fun x1123 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1281 (x549) Int)
(declare-fun x972 () Bool)
(declare-fun x348 () Int)
(declare-fun x741 () Int)
(declare-fun x467 () Int)
(declare-fun x1828 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x1265 () Int)
(declare-fun x1845 () Bool)
(declare-fun x1778 () x549)
(declare-fun x1612 () Bool)
(declare-fun x323 () Bool)
(declare-fun x343 () Bool)
(declare-fun x316 () Int)
(declare-fun x1508 () Int)
(declare-fun x931 () Bool)
(declare-fun x1869 () Int)
(declare-fun x1145 () Int)
(declare-fun x1502 () Int)
(declare-fun x892 () Int)
(declare-fun x2137 () Bool)
(declare-fun x445 () Bool)
(declare-fun x1679 () Int)
(declare-fun x71 () Int)
(declare-fun x575 () Bool)
(declare-fun x1287 () Int)
(declare-fun x807 () Int)
(declare-fun x159 () Int)
(declare-fun x1830 () Bool)
(declare-fun x378 () Bool)
(declare-fun x17 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x734 () Int)
(declare-fun x2068 () Int)
(declare-fun x276 () Bool)
(declare-fun x396 () Bool)
(declare-fun x1260 (Int) Int)
(declare-fun x399 () Int)
(declare-fun x275 (x549) Int)
(declare-fun x1989 () Int)
(declare-fun x1732 () Int)
(declare-fun x1082 () x549)
(declare-fun x1278 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1806 () Bool)
(declare-fun x440 () Int)
(declare-fun x989 () Bool)
(declare-fun x962 () Int)
(declare-fun x512 () Int)
(declare-fun x461 () Bool)
(declare-fun x213 () Bool)
(declare-fun x195 () Int)
(declare-fun x1390 () Int)
(declare-fun x1457 () Bool)
(declare-fun x903 () Bool)
(declare-fun x232 () Bool)
(declare-fun x1837 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x27 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x2063 () Int)
(declare-fun x1854 () Bool)
(declare-fun x435 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x428 () Int)
(declare-fun x1924 () Int)
(declare-fun x1395 () Int)
(declare-fun x661 () x549)
(declare-fun x1706 () Bool)
(declare-fun x611 () Int)
(declare-fun x1929 () Int)
(declare-fun x1210 () Int)
(declare-fun x690 () Bool)
(declare-fun x551 () Bool)
(declare-fun x1893 () Int)
(declare-fun x1023 () Bool)
(declare-fun x331 () x549)
(declare-fun x42 () Int)
(declare-fun x291 () Int)
(declare-fun x1886 () Bool)
(declare-fun x2002 () Int)
(declare-fun x651 () Int)
(declare-fun x2101 () x549)
(declare-fun x665 () Int)
(declare-fun x2054 () Int)
(declare-fun x122 () Bool)
(declare-fun x368 () Int)
(declare-fun x1555 () Int)
(declare-fun x1277 () Int)
(declare-fun x1585 () Int)
(declare-fun x257 () Bool)
(declare-fun x498 () Bool)
(declare-fun x1332 () Int)
(declare-fun x944 () x549)
(declare-fun x394 () Int)
(declare-fun x1436 () Int)
(declare-fun x546 () x549)
(declare-fun x1471 () Int)
(declare-fun x1172 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x857 () Int)
(declare-fun x1950 () Int)
(declare-fun x2138 () Int)
(declare-fun x1159 () Int)
(declare-fun x769 () Int)
(declare-fun x1085 () Bool)
(declare-fun x133 (Int Int) Int)
(declare-fun x858 () Int)
(declare-fun x405 () Bool)
(declare-fun x377 () Int)
(declare-fun x1976 () Bool)
(declare-fun x455 () Int)
(declare-fun x517 () Int)
(declare-fun x1291 () Int)
(declare-fun x1434 () Bool)
(declare-fun x792 () Int)
(declare-fun x1885 () Bool)
(declare-fun x109 () Int)
(declare-fun x319 () Int)
(declare-fun x899 () Bool)
(declare-fun x100 () Int)
(declare-fun x1356 () Int)
(declare-fun x166 () Int)
(declare-fun x1224 () Int)
(declare-fun x1517 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x804 () Int)
(declare-fun x946 () Int)
(declare-fun x1454 () Int)
(declare-fun x590 () Int)
(declare-fun x352 () Bool)
(declare-fun x616 () x549)
(declare-fun x1831 () x549)
(declare-fun x570 (x549) Int)
(declare-fun x1935 () Int)
(declare-fun x1095 () Bool)
(declare-fun x1925 () Int)
(declare-fun x721 () Bool)
(declare-fun x92 () Bool)
(declare-fun x225 () Bool)
(declare-fun x174 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x250 () x549)
(declare-fun x1266 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x526 () Bool)
(declare-fun x1838 () x549)
(declare-fun x40 () x549)
(define-fun x815 ((x549 x549) (x1792 Int)) x549 (ite ((_ is x2070) x549) (x2070 (x1088 x549) (+ (x1029 x549) x1792)) (ite ((_ is x1899) x549) (x1899 (x25 x549) (x259 x549) (+ x1792 (x891 x549))) (x1829 (+ (x653 x549) x1792)))))
(define-fun x539 ((x95 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x95) (>= x95 0)) x95 (- x95 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1329 ((x95 Int)) Int (ite (and (< x95 0) (>= x95 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x95 115792089237316195423570985008687907853269984665640564039457584007913129639936) x95))
(define-fun x121 ((x1881 Int)) Bool (and (<= 0 x1881) (< x1881 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x591 ((x1881 Int)) Bool (and (= (x795 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1881) x1881) (= x1881 (x795 x1881 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x35 ((x1881 Int)) Bool (and (= (x795 0 x1881) 0) (= (x795 x1881 0) 0)))
(define-fun x249 ((x1881 Int)) Bool (= (x795 x1881 x1881) x1881))
(define-fun x687 ((x1881 Int)) Bool (and (x249 x1881) (x591 x1881) (x35 x1881)))
(define-fun x870 ((x1881 Int) (x1624 Int)) Bool (= (x795 x1624 x1881) (x795 x1881 x1624)))
(define-fun x1946 ((x1881 Int) (x1624 Int)) Bool (and (>= (x795 x1881 x1624) 0) (=> (>= x1624 0) (<= (x795 x1881 x1624) x1624)) (=> (<= 0 x1881) (<= (x795 x1881 x1624) x1881))))
(define-fun x1655 ((x1881 Int) (x1624 Int)) Bool (and (x1946 x1881 x1624) (x870 x1881 x1624)))
(define-fun x938 ((x1881 Int)) Bool (= (x795 x1881 1099511627775) (mod x1881 1099511627776)))
(define-fun x627 ((x1881 Int)) Bool (and (x938 x1881) (x1655 x1881 1099511627775)))
(define-fun x475 ((x1881 Int)) Bool (= (x795 x1881 255) (mod x1881 256)))
(define-fun x388 ((x1881 Int)) Bool (and (x475 x1881) (x1655 x1881 255)))
(define-fun x1122 ((x1881 Int)) Bool (= (x795 x1881 1461501637330902918203684832716283019655932542975) (mod x1881 1461501637330902918203684832716283019655932542976)))
(define-fun x381 ((x1881 Int)) Bool (and (x1655 x1881 1461501637330902918203684832716283019655932542975) (x1122 x1881)))
(define-fun x580 ((x1881 Int)) Bool (= (x795 x1881 340282366920938463463374607431768211455) (mod x1881 340282366920938463463374607431768211456)))
(define-fun x1331 ((x1881 Int)) Bool (and (x1655 x1881 340282366920938463463374607431768211455) (x580 x1881)))
(define-fun x2083 ((x1881 Int)) Bool (= (mod x1881 18446744073709551616) (x795 x1881 18446744073709551615)))
(define-fun x1109 ((x1881 Int)) Bool (and (x1655 x1881 18446744073709551615) (x2083 x1881)))
(define-fun x1276 ((x1881 Int)) Bool (= (mod x1881 20282409603651670423947251286016) (x795 x1881 20282409603651670423947251286015)))
(define-fun x1542 ((x1881 Int)) Bool (and (x1655 x1881 20282409603651670423947251286015) (x1276 x1881)))
(define-fun x1786 ((x1881 Int)) Bool (= (x278 x1881) (ite (< (x795 x1881 20282409603651670423947251286015) 10141204801825835211973625643008) (x795 x1881 20282409603651670423947251286015) (+ 115792089237316195423570985008687907853269984645358154435805913583965878353920 (x795 x1881 20282409603651670423947251286015)))))
(define-fun x1532 ((x1745 Int)) Int (ite (= 128 x1745) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x578 x1745)))
(define-fun x758 ((x1745 Int)) Int (ite (= 132 x1745) x1633 (x1532 x1745)))
(define-fun x1429 ((x1745 Int)) Int (ite (= x1745 0) x423 (x177 x1745)))
(define-fun x169 ((x1745 Int)) Int (ite (= x1745 128) x423 (x758 x1745)))
(define-fun x902 ((x1745 Int)) Int (ite (= x1745 0) x1874 (x177 x1745)))
(define-fun x1111 ((x1745 Int)) Int (ite (= 128 x1745) x1874 (x758 x1745)))
(define-fun x2091 ((x1745 Int)) Int (ite (= x1745 0) x1431 (x177 x1745)))
(define-fun x224 ((x1745 Int)) Int (ite (= x1745 128) x1431 (x758 x1745)))
(define-fun x412 ((x1745 Int)) Int (ite (= x533 x1745) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1270 x1745)))
(define-fun x586 ((x1745 Int)) Int (ite (= x1745 x1803) x482 (x412 x1745)))
(define-fun x905 ((x1745 Int)) Int (ite (= x291 x1745) x377 (x586 x1745)))
(define-fun x788 ((x1745 Int)) Int (ite (= x533 x1745) 1 (x905 x1745)))
(define-fun x1766 ((x1745 Int)) Int (ite x1847 (x905 x1745) (ite x1494 (x788 x1745) (x905 x1745))))
(define-fun x1418 ((x1745 Int)) Int (ite (= x1207 x1745) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1270 x1745)))
(define-fun x1144 ((x1745 Int)) Int (ite (= x1715 x1745) x482 (x1418 x1745)))
(define-fun x1739 ((x1745 Int)) Int (ite (= x1745 x1469) x287 (x1144 x1745)))
(define-fun x784 ((x1745 x549)) Int (ite (= x1745 x768) x161 (x90 x1745)))
(define-fun x2043 ((x1745 x549)) Int (ite (= x322 x1745) x1701 (x784 x1745)))
(define-fun x321 ((x1745 Int)) Int (ite (= 0 x1745) 1 (x1998 x1745)))
(define-fun x1573 ((x1745 Int)) Int (ite (= x1207 x1745) 1 (x1739 x1745)))
(define-fun x885 ((x1745 x549)) Int (ite (= x896 x1745) x284 (x298 x1745)))
(define-fun x189 ((x1745 x549)) Int (ite (= x1590 x1745) x1327 (x885 x1745)))
(define-fun x1997 ((x1745 Int)) Int (ite (= x1745 0) 1 (x1998 x1745)))
(define-fun x413 ((x1745 Int)) Int (ite (= x1207 x1745) 1 (x1739 x1745)))
(define-fun x937 ((x1745 x549)) Int (ite (= x817 x1745) x1284 (x1804 x1745)))
(define-fun x501 ((x1745 x549)) Int (ite (= x250 x1745) x1547 (x937 x1745)))
(define-fun x1406 ((x1745 Int)) Int (ite (= 0 x1745) 1 (x1998 x1745)))
(define-fun x367 ((x1745 Int)) Int (ite (= x1207 x1745) 1 (x1739 x1745)))
(define-fun x329 ((x1745 x549)) Int (ite (= x1745 x960) x2088 (x1403 x1745)))
(define-fun x2134 ((x1745 Int)) Int (ite (= x1745 640) x1147 (x1396 x1745)))
(define-fun x509 ((x1745 Int)) Int (ite (= x1745 672) x761 (x524 x1745)))
(define-fun x240 ((x1745 Int)) Int (ite (= x1745 704) x1290 (x1333 x1745)))
(define-fun x1036 ((x1745 Int)) Int (ite (= 736 x1745) x1346 (x1409 x1745)))
(define-fun x555 ((x1745 Int)) Int (ite (= x1745 768) x510 (x1865 x1745)))
(define-fun x451 ((x1745 Int)) Int (ite (= 800 x1745) x1502 (x705 x1745)))
(define-fun x398 ((x1745 Int)) Int (ite (= x1745 832) x1003 (x1325 x1745)))
(define-fun x1267 ((x1745 Int)) Int (ite (= 864 x1745) x751 (x1340 x1745)))
(define-fun x1726 ((x1745 Int)) Int (ite (= 544 x1745) x1853 (x1480 x1745)))
(define-fun x315 ((x1745 Int)) Int (ite (= x1745 576) x1493 (x296 x1745)))
(define-fun x1514 ((x1745 Int)) Int (ite (= 608 x1745) x2007 (x2004 x1745)))
(define-fun x2076 ((x1745 Int)) Int (ite (= 640 x1745) x692 (x1749 x1745)))
(define-fun x2074 ((x1745 Int)) Int (ite (= x1745 672) x729 (x1466 x1745)))
(define-fun x1876 ((x1745 Int)) Int (ite (= x1745 704) x1747 (x1914 x1745)))
(define-fun x677 ((x1745 Int)) Int (ite (= 736 x1745) x1744 (x104 x1745)))
(define-fun x416 ((x1745 Int)) Int (ite (= 768 x1745) x1125 (x2062 x1745)))
(define-fun x1308 ((x1745 Int)) Int (ite (= x1745 1152) x1255 (x1127 x1745)))
(define-fun x231 ((x1745 Int)) Int (ite (= 1184 x1745) x73 (x1399 x1745)))
(define-fun x1737 ((x1745 Int)) Int (ite (= x1745 1216) x1257 (x1541 x1745)))
(define-fun x2106 ((x1745 Int)) Int (ite (= x1745 1248) x2102 (x184 x1745)))
(define-fun x552 ((x1745 Int)) Int (ite (= 1280 x1745) x1679 (x1315 x1745)))
(define-fun x1014 ((x1745 Int)) Int (ite (= 1312 x1745) x1220 (x182 x1745)))
(define-fun x269 ((x1745 Int)) Int (ite (= x1745 1344) x1585 (x1260 x1745)))
(define-fun x1755 ((x1745 Int)) Int (ite (= x1745 1376) x762 (x565 x1745)))
(define-fun x2077 ((x1745 x549)) Int (ite x1266 (x298 x1745) (ite x101 (x298 x1745) (ite x638 (x885 x1745) (x298 x1745)))))
(define-fun x739 ((x1745 x549)) Int (ite x1806 (x2077 x1745) (x189 x1745)))
(define-fun x786 ((x1745 x549)) Int (ite x31 (x298 x1745) (ite x1504 (x298 x1745) (ite x108 (x739 x1745) (x298 x1745)))))
(define-fun x711 ((x1745 x549)) Int (ite x196 (x1804 x1745) (ite x1849 (x1804 x1745) (ite x613 (x937 x1745) (x1804 x1745)))))
(define-fun x366 ((x1745 x549)) Int (ite x1962 (x711 x1745) (x501 x1745)))
(define-fun x1336 ((x1745 x549)) Int (ite x31 (x1804 x1745) (ite x1504 (x1804 x1745) (ite x108 (x1804 x1745) (ite x1561 (x366 x1745) (x1804 x1745))))))
(define-fun x1977 ((x1745 x549)) Int (ite (= x1745 x1752) x2061 (x54 x1745)))
(define-fun x1024 ((x1745 x549)) Int (ite (= x2136 x1745) x970 (x54 x1745)))
(define-fun x536 ((x1745 x549)) Int (ite (= x1745 x1658) x630 (x1024 x1745)))
(define-fun x720 ((x1745 x549)) Int (ite x1183 (x54 x1745) (ite x1790 (x54 x1745) (ite x1295 (x54 x1745) (ite x1119 (x54 x1745) (ite x5 (x54 x1745) (ite x365 (x54 x1745) (ite x1630 (x54 x1745) (ite x1788 (x54 x1745) (ite x352 (x54 x1745) (ite x1517 (x536 x1745) (ite x1840 (x536 x1745) (ite x1638 (x1024 x1745) (ite x1509 (x1024 x1745) (ite x1614 (x54 x1745) (ite x681 (x54 x1745) (ite x1911 (x54 x1745) (ite x1685 (x54 x1745) (ite x1254 (x54 x1745) (ite x507 (x54 x1745) (ite x1777 (x1024 x1745) (ite x640 (x1024 x1745) (ite x1721 (x54 x1745) (ite x2013 (x54 x1745) (ite x1153 (x536 x1745) (ite x1347 (x54 x1745) (ite x370 (x54 x1745) (ite x634 (x536 x1745) (ite x1717 (x54 x1745) (ite x1848 (x54 x1745) (ite x844 (x54 x1745) (ite x441 (x54 x1745) (ite x863 (x1024 x1745) (ite x115 (x54 x1745) (ite x1104 (x1024 x1745) (ite x65 (x54 x1745) (ite x387 (x1024 x1745) (ite x1248 (x54 x1745) (ite x1696 (x54 x1745) (ite x1339 (x54 x1745) (ite x479 (x536 x1745) (ite x796 (x54 x1745) (ite x1086 (x54 x1745) (ite x819 (x54 x1745) (ite x1753 (x54 x1745) (ite x295 (x54 x1745) (ite x1300 (x54 x1745) (ite x2112 (x54 x1745) (ite x619 (x54 x1745) (ite x2087 (x54 x1745) (ite x421 (x54 x1745) (ite x1485 (x54 x1745) (ite x469 (x54 x1745) (ite x1810 (x54 x1745) (ite x450 (x54 x1745) (ite x1426 (x54 x1745) (ite x753 (x54 x1745) (ite x1102 (x54 x1745) (ite x1668 (x54 x1745) (ite x1716 (x54 x1745) (ite x91 (x54 x1745) (ite x261 (x54 x1745) (ite x1015 (x536 x1745) (ite x579 (x536 x1745) (ite x731 (x1024 x1745) (ite x1383 (x54 x1745) (ite x1588 (x1024 x1745) (ite x903 (x54 x1745) (ite x1132 (x1024 x1745) (ite x471 (x1024 x1745) (ite x257 (x54 x1745) (ite x1770 (x54 x1745) (ite x574 (x1024 x1745) (ite x915 (x1024 x1745) (ite x17 (x54 x1745) (ite x1731 (x54 x1745) (ite x743 (x54 x1745) (ite x142 (x54 x1745) (ite x2047 (x54 x1745) (ite x1796 (x54 x1745) (ite x1683 (x536 x1745) (ite x1652 (x54 x1745) (ite x1982 (x54 x1745) (ite x740 (x54 x1745) (ite x1918 (x54 x1745) (ite x2100 (x54 x1745) (ite x646 (x536 x1745) (ite x982 (x536 x1745) (ite x1969 (x536 x1745) (ite x122 (x54 x1745) (ite x1595 (x54 x1745) (ite x1452 (x54 x1745) (ite x694 (x54 x1745) (ite x2073 (x536 x1745) (ite x1319 (x54 x1745) (ite x1195 (x536 x1745) (ite x1605 (x54 x1745) (x536 x1745))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(define-fun x1546 ((x1745 x549)) Int (ite x1834 (x720 x1745) (x536 x1745)))
(define-fun x1805 ((x1745 x549)) Int (ite x31 (x1977 x1745) (ite x1504 (x54 x1745) (ite x108 (x54 x1745) (ite x1561 (x54 x1745) (x1546 x1745))))))
(define-fun x408 ((x1745 x549)) Int (ite (= x2097 x1745) x1887 (x90 x1745)))
(define-fun x364 ((x1745 x549)) Int (ite (= x701 x1745) x192 (x408 x1745)))
(define-fun x1858 ((x1745 x549)) Int (ite x1965 (x90 x1745) (ite x406 (x90 x1745) (ite x1298 (x784 x1745) (x90 x1745)))))
(define-fun x246 ((x1745 x549)) Int (ite x256 (x1858 x1745) (x2043 x1745)))
(define-fun x1212 ((x1745 x549)) Int (ite x31 (ite x1847 (x90 x1745) (ite x1494 (x364 x1745) (x90 x1745))) (ite x1504 (x246 x1745) (x90 x1745))))
(define-fun x1783 ((x1745 Int)) Int (ite (= x1745 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2135 x1745)))
(define-fun x822 ((x1745 Int)) Int (ite (= 132 x1745) x1633 (x1783 x1745)))
(define-fun x395 ((x1745 Int)) Int (ite (= 0 x1745) x782 (x609 x1745)))
(define-fun x847 ((x1745 Int)) Int (ite (= 128 x1745) x782 (x822 x1745)))
(define-fun x1501 ((x1745 Int)) Int (ite (= 0 x1745) x780 (x609 x1745)))
(define-fun x386 ((x1745 Int)) Int (ite (= 128 x1745) x780 (x822 x1745)))
(define-fun x568 ((x1745 Int)) Int (ite (= x1745 0) x444 (x609 x1745)))
(define-fun x1215 ((x1745 Int)) Int (ite (= x1745 128) x444 (x822 x1745)))
(define-fun x1827 ((x1745 x549)) Int (ite (= x1745 x1752) x1784 (x592 x1745)))
(define-fun x925 ((x1745 Int)) Int (ite (= x1745 x1207) 1 (x1739 x1745)))
(define-fun x436 ((x1745 Int)) Int (ite x1504 (ite x256 (x1739 x1745) (x1573 x1745)) (ite x108 (ite x1806 (x1739 x1745) (x413 x1745)) (ite x1561 (ite x1962 (x1739 x1745) (x367 x1745)) (ite x1834 (x1739 x1745) (x925 x1745))))))
(define-fun x1382 ((x1745 Int)) Int (ite (= x1745 0) 1 (x1928 x1745)))
(define-fun x1763 ((x1745 x549)) Int (ite (= x1745 x1641) x1600 (x592 x1745)))
(define-fun x300 ((x1745 x549)) Int (ite x657 (x1763 x1745) (x592 x1745)))
(define-fun x1103 ((x1745 Int)) Int (ite (= 128 x1745) x67 (x758 x1745)))
(define-fun x1163 ((x1745 Int)) Int (ite x1835 (ite x1313 (x758 x1745) (x169 x1745)) (ite x107 (ite x1369 (x758 x1745) (x1111 x1745)) (ite x1046 (ite x814 (x758 x1745) (x224 x1745)) (ite x1646 (x758 x1745) (x1103 x1745))))))
(define-fun x2071 ((x1745 Int)) Int (ite (= 128 x1745) x512 (x822 x1745)))
(define-fun x1170 ((x1745 Int)) Int (ite x393 (ite x276 (x822 x1745) (x847 x1745)) (ite x1616 (ite x1942 (x822 x1745) (x386 x1745)) (ite x1677 (ite x1126 (x822 x1745) (x1215 x1745)) (ite x1365 (x822 x1745) (x2071 x1745))))))
(define-fun x2006 ((x1745 Int)) Int (ite (= x1745 704) x1583 (x958 x1745)))
(define-fun x1041 ((x1745 Int)) Int (ite (= 736 x1745) x939 (x1488 x1745)))
(define-fun x44 ((x1745 Int)) Int (ite (= x1745 768) x864 (x520 x1745)))
(define-fun x1363 ((x1745 Int)) Int (ite (= x1745 800) x16 (x1824 x1745)))
(define-fun x954 ((x1745 Int)) Int (ite (= 832 x1745) x645 (x1051 x1745)))
(define-fun x2123 ((x1745 Int)) Int (ite (= x1745 864) x1009 (x238 x1745)))
(define-fun x1764 ((x1745 Int)) Int (ite (= 896 x1745) x494 (x411 x1745)))
(define-fun x1034 ((x1745 Int)) Int (ite (= x1745 928) x1285 (x884 x1745)))
(define-fun x1639 ((x1745 x549)) Int (ite (= x2136 x1745) x233 (x300 x1745)))
(define-fun x553 ((x1745 x549)) Int (ite (= x1745 x1658) x1741 (x1639 x1745)))
(define-fun x1150 ((x1745 Int)) Int (ite (= 0 x1745) 1 (x1998 x1745)))
(define-fun x1258 ((x1745 Int)) Int (ite (= 0 x1745) x67 (x177 x1745)))
(define-fun x1149 ((x1745 Int)) Int (ite (= x1745 0) x512 (x609 x1745)))
(define-fun x2034 ((x1881 Int)) Bool (=> (and (not (= x1881 18446744073709551616)) (not (= x1881 1000000000000000)) (not (= 10141204801825835211973625643007 x1881)) (not (= x1881 927746484)) (not (= x1881 1134440005)) (not (= 1176186698 x1881)) (not (= x1881 1747092918)) (not (= 3454435393 x1881)) (not (= 2031398087 x1881)) (not (= x1881 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= 2609461451 x1881)) (not (= 18446744073709551615 x1881)) (not (= x1881 3840337785)) (not (= x1881 2492599498)) (not (= x1881 2711744323)) (not (= 3833100637 x1881)) (< 10000 x1881) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1881)) (not (= x1881 1461501637330902918203684832716283019655932542976)) (not (= 1736444767 x1881)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1881)) (not (= 1099511627776 x1881)) (not (= 412857073 x1881)) (not (= 4072298103 x1881)) (not (= 3889878717 x1881)) (not (= x1881 2514000705)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1881)) (not (= 1752364190 x1881)) (not (= x1881 2834295333)) (not (= 599290589 x1881)) (not (= 340282366920938463463374607431768211455 x1881)) (not (= x1881 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (not (= 1844900739 x1881)) (not (= 3283311230 x1881)) (not (= 1153557995 x1881)) (not (= 826074471 x1881)) (not (= 20282409603651670423947251286015 x1881)) (not (= 1889567281 x1881)) (not (= 2758797371 x1881)) (not (= 65536 x1881)) (not (= x1881 1208925819614629174706175)) (not (= 1420740386 x1881)) (not (= 4093572003 x1881)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1881)) (not (= 1461501637330902918203684832716283019655932542975 x1881)) (not (= 1000000000000000000 x1881)) (not (= x1881 1116559274)) (not (= 4072275384 x1881)) (not (= x1881 404098525)) (not (= 1099511627775 x1881)) (not (= x1881 340282366920938463463374607431768211456)) (not (= x1881 1201997079)) (not (= 65535 x1881)) (not (= 468353030 x1881)) (not (= 20282409603651670423947251286016 x1881)) (not (= x1881 2780102521)) (not (= 2879910238 x1881)) (not (= 2835717307 x1881)) (not (= 1519696081 x1881))) (not ((_ is x1829) (x430 x1881)))))
(assert (= (and x2014 x945) x1753))
(assert (x121 x1242))
(assert (x121 x1059))
(assert (= x721 (and x143 x562)))
(assert (x121 x1555))
(assert (x687 x1013))
(assert (x121 x74))
(assert (= x1297 (and (not x1146) x984)))
(assert (x687 x1508))
(assert (= x1102 (and (not x1951) x1891)))
(assert (x121 x258))
(assert (= x1523 (and x717 x802)))
(assert (= (and (not x1992) x1713) x1241))
(assert (x121 x187))
(assert (= (and x775 x2025) x140))
(assert (x687 x517))
(assert (= x36 (and (not x473) x447)))
(assert (= (=> (and (and (< x294 256) (<= 0 x294) (<= x294 255) (= x1687 (= x294 0))) (or x1687 (not x1687))) x1746) x446))
(assert (x121 x779))
(assert (x121 x263))
(assert (x121 x1306))
(assert (x121 x1462))
(assert (x121 x1791))
(assert (= (x1829 1153557995) (x430 1153557995)))
(assert (x121 x1761))
(assert (x121 x1467))
(assert (= x1360 (and x1263 x2116)))
(assert (x2034 x597))
(assert (= 65536 (x570 (x1829 65536))))
(assert (= x1190 (=> (and (and (<= x1809 20282409603651670423947251286015) (= (and (< 0 x2036) (= true (<= x2036 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x2119) (>= x1809 0) (= x1007 (x1899 (x430 x1293) (x1829 5) 0)) (= x2036 (x278 x1809)) (= (x54 x1007) x1809) (> 20282409603651670423947251286016 x1809) (= (x795 1461501637330902918203684832716283019655932542975 x1471) x1293)) (or (and (= 0 x1842) (not x2119)) (and (and (not (or (and (= (<= x2036 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x2036)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2036))) (= x1842 x2036)) x2119))) x1610)))
(assert (x121 x631))
(assert (x1655 x1098 x2022))
(assert (x121 x588))
(assert (x121 x2007))
(assert (= x634 (and x178 (not x1579))))
(assert (= (and (not x1222) x1304) x1172))
(assert (= x491 (and x2072 (not x1844))))
(assert (x1542 x1314))
(assert (x121 x1310))
(assert (x121 x2041))
(assert (x121 x736))
(assert (x2034 x1442))
(assert (= x379 (and x462 x157)))
(assert (= x1397 (=> (and (and (not (= x141 x1818)) (>= 1461501637330902918203684832716283019655932542975 x141) (<= 0 x1440) (> x467 0) (>= 20282409603651670423947251286015 x1083) (>= x293 0) (= (x275 (x430 x1818)) x230) x362 (>= 1099511627775 x83) (>= x1124 0) (<= 0 x631) (not (= x1394 x986)) (not (= x986 x141)) (>= x103 0) (<= x103 1461501637330902918203684832716283019655932542975) (= x1016 (< 0 (x1173 (x430 x141)))) (< 0 x20) (>= 1208925819614629174706175 x2068) (>= 1461501637330902918203684832716283019655932542975 x1929) (not (= x986 x20)) (<= x153 18446744073709551615) (not (= 1747092918 x1435)) (>= x845 0) (<= x1353 20282409603651670423947251286015) (>= 1461501637330902918203684832716283019655932542975 x1633) (<= 0 x163) (= x1049 x559) (<= 0 x1083) (<= x163 255) (= (< 0 (x1173 (x430 x1929))) x698) (<= x1851 20282409603651670423947251286015) (not (= x1394 x1633)) (<= 0 x2068) (= (x275 (x430 x1394)) x293) (<= x845 1461501637330902918203684832716283019655932542975) (>= x153 0) (= (> (x1173 (x430 x1394)) 0) x46) (= (x275 (x430 x1929)) x1124) (not (= x1633 x986)) (not (= x1929 x1394)) (<= x1105 20282409603651670423947251286015) (>= x1851 0) (= x946 x1117) (< 0 x1818) (not (> 1176186698 x1435)) (= x1435 1844900739) x61 (<= x1440 1208925819614629174706175) (= x1633 x1351) (= x375 x845) (>= 18446744073709551615 x1349) (<= 0 x1900) (not (= x986 x1929)) x46 (>= 1461501637330902918203684832716283019655932542975 x986) (not (= x141 x20)) (<= x20 1461501637330902918203684832716283019655932542975) (<= 0 x208) (= (> (x1173 (x430 x1633)) 0) x1534) (<= 0 x1069) (= x1675 x1900) (<= x1280 255) (>= x1045 0) (>= 18446744073709551615 x53) (<= 0 x1349) x2033 (>= x1908 0) (not (= x1394 x141)) (= (x1173 (x430 x1633)) x467) (<= x1045 18446744073709551615) (>= x220 0) (<= 0 x153) (not (= x20 x1394)) (< 0 x1633) (<= 0 x918) (>= 255 x877) (< 0 x141) (not (= x1818 x20)) (<= x330 18446744073709551615) (<= 0 x1353) (<= 0 x1520) (<= x208 1208925819614629174706175) (<= 0 x973) (not (> 1519696081 x1435)) (<= x1049 1461501637330902918203684832716283019655932542975) x698 (>= 255 x1069) (= (> (x1173 (x430 x1818)) 0) x362) (> x1394 0) (<= x1908 18446744073709551615) (= x631 (x275 (x430 x1633))) (= x1789 x1633) (= (x275 (x430 x20)) x973) (> 18446744073709551616 x153) (= (< 0 (x1173 (x430 x20))) x1611) (<= x220 1461501637330902918203684832716283019655932542975) (not (= x1818 x1633)) (>= x164 0) (= (x275 (x430 x141)) x263) (not (= x1818 x986)) (<= 0 x83) (>= 1461501637330902918203684832716283019655932542975 x1818) (= x710 x153) (not (= x1929 x1818)) (= x129 (x275 (x430 x986))) (>= x230 0) (= (> (x1173 (x430 x986)) 0) x2033) (= x1117 x164) x1534 (not (= x1929 x141)) (>= x877 0) (>= 1461501637330902918203684832716283019655932542975 x164) (<= 0 x330) (= x1528 x420) (= x482 x1358) x1168 (<= 0 x129) (>= 1461501637330902918203684832716283019655932542975 x1520) (not (> 927746484 x1435)) (not (= x20 x1633)) (not (= x1435 1519696081)) x1016 (>= 1099511627775 x918) (>= x1280 0) (>= 255 x294) (<= 0 x1060) (<= 0 x66) (>= 18446744073709551615 x66) (not (= x1435 1736444767)) (>= x294 0) (not (= x1394 x1818)) (<= x1060 18446744073709551615) (>= x946 0) (< 0 x1929) (= x103 x482) (not (= x1435 1752364190)) (= x1168 (not (= x1358 x1789))) (<= x1900 1461501637330902918203684832716283019655932542975) (>= x263 0) (<= x1436 1208925819614629174706175) (>= x53 0) x1611 (not (= x1929 x20)) (<= x153 18446744073709551615) (= x974 0) (< x1435 2031398087) (> x986 0) (<= 0 x1436) (= (not (= x1351 x559)) x61) (not (= x141 x1633)) (>= x1049 0) (<= x946 1461501637330902918203684832716283019655932542975) (not (= x1633 x1929)) (>= 1461501637330902918203684832716283019655932542975 x1394) (<= 0 x1105) (= x1520 x1528) (= x974 x351)) (and (and (not (> 927746484 x1700)) (= (x1173 (x430 x1633)) x86) (<= x1177 1461501637330902918203684832716283019655932542975) (= x2017 x1117) (= 1000000000000000 x1531) (= x600 x420) (= 0 x1660) (<= 0 x1177) (= x351 x1660) (= x153 x1156) (= x600 x1618) (> 1176186698 x1700) (>= x1618 0) (>= x2017 0) (< x1700 2031398087) (= x1700 1116559274) (<= x1618 1461501637330902918203684832716283019655932542975) (< 0 x86) (not (< x1700 1116559274)) (>= 1461501637330902918203684832716283019655932542975 x2017)) (and (and (and (not (> 1116559274 x2035)) (>= 1461501637330902918203684832716283019655932542975 x530) (>= x892 0) (> x1025 0) (= x1921 x53) (= 1116559274 x2035) (= x637 1000000000000000) (= x420 x1566) (= x351 x1068) (= x1025 (x1173 (x430 x1633))) (>= x1939 0) (< x2035 1176186698) (<= x1939 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x892) (>= x530 0) (= x1939 x1566) (not (> 927746484 x2035)) (= x1117 x892) (= x1068 0) (> 2031398087 x2035)) (and (and (and (and (<= 0 x1936) (< x1710 2031398087) (< 0 x455) (not (= x1710 1176186698)) x343 (= x172 x12) (<= x158 1461501637330902918203684832716283019655932542975) (not (> 927746484 x1710)) (= x455 (x1173 (x430 x1633))) (>= 1461501637330902918203684832716283019655932542975 x1936) (= x724 1000000000000000000) (= x1117 x158) (= x332 x351) (= x1710 1420740386) (not (< x1710 1176186698)) (not (= x1710 1201997079)) (<= x234 1461501637330902918203684832716283019655932542975) (= x234 x2121) (= x332 0) (= x343 (= 1000000000000000000 x373)) (>= x158 0) (= x2121 x420) (< x1710 1519696081) (>= x234 0)) (and (and (< x1033 3454435393) (>= 1461501637330902918203684832716283019655932542975 x1378) (not (< x1033 2879910238)) (>= x947 0) (= x959 0) (< 0 x825) (= x79 (= x1913 1)) (>= 1461501637330902918203684832716283019655932542975 x947) x79 (= x1913 x172) (= x351 x959) (= 1 x1800) (= x774 x1378) (<= x837 1461501637330902918203684832716283019655932542975) (>= x1378 0) (= x1117 x837) (= x1875 x704) (= (x1173 (x430 x1633)) x825) (= x774 x420) (> 3283311230 x1033) (= x1033 2879910238) (not (> 2031398087 x1033)) (>= x837 0)) (and (not (> 404098525 x394)) x111 (= x1875 x64) (= x394 468353030) (< x394 599290589) (<= x1277 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1633) (= (= x1277 x20) x1) (< x394 2031398087) (< x394 927746484) (not (= 412857073 x394)) (= 1 x496) (= x1277 x1049) (= 128 x1391) (= x1496 (x1173 (x430 x1633))) (> x1496 0) (not (= x394 404098525)) (= (= 1 x64) x111)))) (and (>= 1461501637330902918203684832716283019655932542975 x831) (= x351 x159) (<= 0 x401) (< x138 2711744323) (not (= 2492599498 x138)) (= x2038 1000000000000000000) (>= 1461501637330902918203684832716283019655932542975 x401) (<= 0 x1412) (> 2879910238 x138) (= x138 2609461451) (= x1117 x401) (= (x1173 (x430 x1633)) x2138) (> x2138 0) (>= x831 0) (<= x1412 1461501637330902918203684832716283019655932542975) (= x499 x831) (= x499 x420) (not (> 2492599498 x138)) (not (> 2031398087 x138)) (= 0 x159) (= x373 x1548))) (and (<= 0 x1819) (= x317 x1057) (>= x317 0) (= x1057 x420) (not (> 1116559274 x1164)) (= x1548 x682) (<= x1819 1461501637330902918203684832716283019655932542975) (= x254 (x1173 (x430 x1633))) x85 (= x384 0) (not (= x1164 1134440005)) (<= 0 x787) (= x384 x351) (= x1952 1000000000000000) (> 1176186698 x1164) (= (= 1000000000000000 x1921) x85) (not (= x1164 1116559274)) (not (< x1164 927746484)) (<= x787 1461501637330902918203684832716283019655932542975) (= x1117 x1819) (< 0 x254) (= 1153557995 x1164) (> 2031398087 x1164) (<= x317 1461501637330902918203684832716283019655932542975)))) (and (= (= x1156 1000000000000000) x1335) (>= x564 0) (>= 1461501637330902918203684832716283019655932542975 x125) x1335 (= x420 x505) (= x1642 1747092918) (< x53 18446744073709551616) (>= 1461501637330902918203684832716283019655932542975 x202) (not (< x1642 1519696081)) (not (= 1519696081 x1642)) (= x268 (x1173 (x430 x1633))) (= x742 x53) (= 1000000000000000 x1659) (<= 0 x125) (= 0 x1656) (= x1656 x351) (not (> 927746484 x1642)) (>= 1461501637330902918203684832716283019655932542975 x564) (<= 0 x202) (= x1117 x125) (not (= x1642 1736444767)) (<= 0 x53) (> 2031398087 x1642) (= x564 x505) (not (> 1176186698 x1642)) (<= x53 18446744073709551615) (< 0 x268))))) (and (=> (and x1 (and (= x806 36) (= 36 x806) (= x909 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1091)) (< x1091 32)) (> x1091 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1329 (- x806 4)) x1091) (= x1633 x1424) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x368) (not (< x806 4)) (not (= x1411 826074471)) (not (< x1411 826074471)) (= (x1173 (x430 x20)) x983) (< 0 x983) (= x1411 1889567281))) (and (=> x909 x1572) (=> (and (= x2 (= x1633 x1424)) (not x909)) (and (=> (not x2) x1572) (=> (and (and (>= x423 0) (= x369 (x1899 (x430 x1633) (x1829 1) 0)) (= 1 x1401) (<= x423 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x90 x369) x423) (= 32 x1499)) x2) x1101))))) (=> (and (= (= x1277 x1818) x1649) (not x1)) (and (=> (and (not x1649) (= x622 (= x141 x1277))) (and (=> (and (and (and x1484 (and (= x342 (x1329 (- x672 4))) (not (> 927746484 x1983)) (= 1889567281 x1983) (not (= 1844900739 x1983)) (not (< x672 4)) (= x672 36) (= 36 x672) (not (> 1176186698 x1983)) (< x1983 2031398087) (not (= 1747092918 x1983)) (= (x1173 (x430 x1633)) x1553) (= x320 x1633) (not (> 1519696081 x1983)) (< 0 x1553) (= x1976 (or (and (< x342 32) (= (<= x342 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x342))) (not (= x1983 1736444767)) (not (= 1752364190 x1983)) (not (= 1519696081 x1983)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x832))) (= x1484 (= x1633 x1277))) (not x622)) (and (=> (and (= x1961 (= x320 x1633)) (not x1976)) (and (=> (and x1961 (and (>= 1099511627775 x83) (< x83 1099511627776) (<= 0 x83) (= x585 (< x904 1099511627776)))) (and (=> (and (= x1644 (< x904 x83)) x585) (and (=> x1644 x1200) (=> (and (not x1644) (and (and (= x545 (= x294 0)) (< x294 256) (>= x294 0) (= x1244 (x1329 (- x904 x83))) (>= 255 x294) (= (x795 1099511627775 x1244) x1707)) (or (and x545 (and (<= x153 18446744073709551615) (>= x153 0) (< x153 18446744073709551616) (= x1395 x53) (= x725 x153) (>= 18446744073709551615 x53) (< x53 18446744073709551616) (>= x53 0))) (and (and (= x1395 x53) (> 18446744073709551616 x153) (<= x53 18446744073709551615) (>= x153 0) (< x53 18446744073709551616) (<= 0 x53) (= x725 x153) (>= 18446744073709551615 x153)) (not x545))))) x2080))) (=> (not x585) x1200))) (=> (not x1961) x1200))) (=> x1976 x1200))) (=> (and (and (= (x1329 (- x203 4)) x1822) (not (< x971 826074471)) (= 36 x203) (= 1889567281 x971) (= x1633 x1689) (= (x1173 (x430 x141)) x1175) (= 36 x203) (= (or (> x1822 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1822) (= true (<= x1822 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1897) (not (= x971 826074471)) (< 0 x1175) (= x873 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (> 4 x203))) x622) (and (=> x1897 x1107) (=> (and (not x1897) (= (= x1633 x1689) x1785)) (and (=> (not x1785) x1107) (=> (and (and (= x966 1) (<= x1431 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1431) (= x1431 (x1804 x944)) (= x1686 32) (= x944 (x1899 (x430 x1633) (x1829 1) 0))) x1785) x989))))))) (=> (and x1649 (and (< 0 x344) (= (x1329 (- x671 4)) x528) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1761) (= x117 (or (and (> 32 x528) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x528))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x528))) (= x890 x1633) (not (= x625 826074471)) (= (x1173 (x430 x1818)) x344) (not (< x671 4)) (= 1889567281 x625) (= x671 36) (not (< x625 826074471)) (= x671 36))) (and (=> (and (= x1780 (= x890 x1633)) (not x117)) (and (=> (and (and (= x1575 (x1899 (x430 x1633) (x1829 1) 0)) (= 1 x1670) (= x1874 (x298 x1575)) (<= 0 x1874) (<= x1874 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1568 32)) x1780) x2039) (=> (not x1780) x409))) (=> x117 x409)))))))))
(assert (x121 x611))
(assert (x121 x1498))
(assert (x121 x1368))
(assert (= (x1829 2711744323) (x430 2711744323)))
(assert (x121 x1039))
(assert (x121 x382))
(assert (= (and (not x1) x522) x2069))
(assert (x121 x861))
(assert (x121 x459))
(assert (x121 x808))
(assert (x687 x239))
(assert (x121 x1378))
(assert (x121 x883))
(assert (= (and (not x431) x279) x2141))
(assert (x121 x1138))
(assert (x121 x268))
(assert (= (and x205 x942) x638))
(assert (= (and (not x617) x15) x417))
(assert (x121 x1220))
(assert (x121 x394))
(assert (x121 x1995))
(assert (= 1752364190 (x570 (x1829 1752364190))))
(assert (x121 x123))
(assert (=> (<= x770 10000) (= (x1829 x770) (x430 x770))))
(assert (= x1415 (=> (and (<= 0 x1174) (= x737 (and (> x763 0) (= true (<= x763 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (> 20282409603651670423947251286016 x1174) (= (x1899 (x430 x1633) (x1829 5) 0) x1056) (>= 20282409603651670423947251286015 x1174) (= x1174 (x54 x1056)) (= x763 (x278 x1174))) (and (=> (and x737 (= x1917 (or (> x763 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x763 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x763 0))))) (and (=> (and (not x1917) (= x763 x1870)) x767) (=> x1917 x2131))) (=> (and (not x737) (= 0 x1870)) x767)))))
(assert (x121 x2036))
(assert (x121 x637))
(assert (= x216 (=> (and (= x1021 x1048) (= x1813 0) (= 1 x1682) (= (x795 255 x346) x48) (= x874 (ite (> x1021 57896044618658097711785492504343953926634992332820282019728792003956564819967) 1 0)) (> x682 0) (= 0 x1705) (= x1813 (x795 x833 x874)) (= x1352 (ite (and (< x1021 57896044618658097711785492504343953926634992332820282019728792003956564819968) (= false (<= x1021 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x303 (ite (or (and (> 0 x1021) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1021))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1021)) 1 0)) (= x531 (ite (or (= x1048 0) (= x682 0)) 0 (ite (= (< x1048 57896044618658097711785492504343953926634992332820282019728792003956564819968) (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x682)) (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1048) x1048 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x1048 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x682) x682 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x682 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (< x1048 57896044618658097711785492504343953926634992332820282019728792003956564819968) x1048 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x1048 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x682 57896044618658097711785492504343953926634992332820282019728792003956564819968) x682 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x682 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= 0 x1787) (= x833 (ite (and (> x1021 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1021) true)) 1 0)) (= x675 1) (= x1261 (< 0 x48)) (= x1787 (x795 x303 x1352))) (and (=> (and (and (= x2120 896) (= x531 x1006)) (not x1261)) x87) (=> (and x1261 (and (>= 255 x709) (= x1250 (x1899 (x430 x1636) x211 0)) (< x709 256) (= x211 (x1899 (x430 x1989) (x1829 11) 0)) (= x1636 (x1050 x1778)) (> 1461501637330902918203684832716283019655932542976 x1636) (>= x1636 0) (= (x1899 (x1829 0) (x1829 9) 0) x1778) (>= 1461501637330902918203684832716283019655932542975 x1636) (= (= x709 0) x165) (= x709 (x1970 x1250)) (<= 0 x709))) (and (=> (and (= (or (> x531 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x531 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x531 0))) x1337) (not x165)) (and (=> (and (and (= x215 1) (= 896 x1207)) (not x1337)) x1186) (=> (and x1337 (and (<= x1220 18446744073709551615) (> 1461501637330902918203684832716283019655932542976 x73) (= x1000 1152) (> 18446744073709551616 x1585) (= (x1329 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531)) x1368) (= (x1737 1216) x1722) (= x1883 (div x881 x1178)) (< 0 x1178) (<= 0 x1151) (= x1729 (x2106 1248)) (= x1257 (x1843 x1607)) (= x1823 (x795 255 x484)) (= x838 0) (>= 18446744073709551615 x1585) (>= 18446744073709551615 x1679) (= x1178 (x795 18446744073709551615 x1729)) (< x1220 18446744073709551616) (= x1995 (x795 1461501637330902918203684832716283019655932542975 x1916)) (= 0 x1823) (= (x1899 (x1829 0) (x1829 9) 0) x1296) (> 1461501637330902918203684832716283019655932542976 x662) (<= x662 1461501637330902918203684832716283019655932542975) (>= 340282366920938463463374607431768211455 x762) (= x128 (x815 x1607 1)) (= (div x1152 1000000000000000000) x21) (= (x1899 (x430 x1449) x472 0) x1529) (<= 0 x762) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21)) (= 1408 x1137) (> 18446744073709551616 x1679) (= x1679 (x2008 x128)) (= x1757 (x1329 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x531))) (>= x662 0) (>= x1255 0) x1072 (= (x1050 x1296) x662) (= (x795 x1625 x1444) x1871) (= x762 (x2092 x60)) (= x662 x1995) (< x2102 18446744073709551616) (= (x795 18446744073709551615 x821) x201) (= x472 (x1899 (x430 x482) (x1829 6) 0)) (>= x1257 0) (= (* x201 x1883) x1152) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531) (and (> 0 x531) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531) true))) 1 0) x1625) (= x1444 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1757)) (> x1757 x21)) (and (> x21 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1757))) 1 0)) (= x1585 (x1927 x128)) (= (ite (not x1551) 1 0) x1138) (> 256 x1255) (= (x488 x1607) x2102) (= (x552 1280) x821) (= x1072 (= x2102 1)) (= x73 (x633 x1082)) (= (ite (or (and (> x1368 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21)) (and (< x1368 x21) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1368) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21)))) 1 0) x274) (= x1053 1) (= (x329 x1529) x1151) (<= x73 1461501637330902918203684832716283019655932542975) (= (x795 x1138 x274) x1233) (<= 0 x1220) (= (x795 1461501637330902918203684832716283019655932542975 x2140) x1449) (= x1916 (x231 1184)) (= x1151 x881) (= x1233 0) (>= 340282366920938463463374607431768211455 x1151) (= 0 x1871) (>= x73 0) (= (x781 x128) x1220) (= x1551 (or (> x531 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x531 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x531)))) (<= 0 x1679) (< x1151 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x762 340282366920938463463374607431768211456) (= x136 x596) (= x1607 (x815 x1082 1)) (<= 0 x1585) (>= x2102 0) (>= 1461501637330902918203684832716283019655932542975 x1257) (<= x1255 255) (= x1255 (x283 x1082)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x201 x1883)) (< x1257 1461501637330902918203684832716283019655932542976) (= x484 (x1308 1152)) (>= 18446744073709551615 x2102) (= (x539 (+ x531 x21)) x136) (= x60 (x815 x128 1)) (= (x231 1184) x2140) (= x1082 (x1899 (x1829 0) (x1829 10) 0)) (> 340282366920938463463374607431768211456 x1151))) x341))) (=> (and x165 (and (= x531 x596) (= 896 x1137))) x341)))))))
(assert (x121 x2012))
(assert (x1542 x1811))
(assert (= (and (not x1328) x435) x1884))
(assert (x687 x2037))
(assert (x381 x607))
(assert (x121 x1376))
(assert (x121 x194))
(assert (x121 x2026))
(assert (x121 x1617))
(assert (= x461 (and (not x1623) x2067)))
(assert (= (or x2055 x1185) x424))
(assert (= (and x1486 x1259) x1389))
(assert (x121 x1392))
(assert (= x982 (and x1169 x1960)))
(assert (x1542 x1204))
(assert (x687 x1811))
(assert (= x1305 (and (not x1373) x23)))
(assert (x687 x1975))
(assert (= (and x984 x1146) x936))
(assert (x121 x2003))
(assert (x121 x807))
(assert (x121 x725))
(assert (= x323 (and x1362 (not x666))))
(assert (x121 x348))
(assert (= (=> (and (= x116 0) (= x2117 x858)) x987) x235))
(assert (x121 x427))
(assert (= x1195 (and x80 (not x878))))
(assert (= 2031398087 (x570 (x1829 2031398087))))
(assert (= (and x1966 x280) x1640))
(assert (x121 x699))
(assert (x121 x1090))
(assert (= (and x1591 x614) x1213))
(assert (x1786 x1826))
(assert (x121 x832))
(assert (= x1604 (or x1677 x1616 x33 x393)))
(assert (=> (<= x20 10000) (= (x430 x20) (x1829 x20))))
(assert (= (and x583 x1323) x1500))
(assert (= (x430 1099511627776) (x1829 1099511627776)))
(assert (x121 x880))
(assert (= x33 (or x754 x1365)))
(assert (x121 x697))
(assert (x121 x1950))
(assert (= x861 (x570 (x430 x861))))
(assert (x1655 x45 x1013))
(assert (x121 x1064))
(assert (x121 x1105))
(assert (= (and x474 (not x930)) x1104))
(assert (x121 x1391))
(assert (= (and x1615 x400) x2144))
(assert (x1786 x643))
(assert (x121 x1445))
(assert (x687 x726))
(assert (x1542 x563))
(assert (x121 x1202))
(assert (= (x1829 3833100637) (x430 3833100637)))
(assert (x121 x641))
(assert (x121 x1924))
(assert (x121 x64))
(assert (x1655 x1456 x534))
(assert (x687 x1171))
(assert (x121 x2002))
(assert (x121 x1822))
(assert (x121 x192))
(assert (x121 x906))
(assert (= (=> (= x1774 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1727) (<= (x278 x337) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1727 (x278 x337))) (and (> (x278 x337) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and (and (= x1979 0) (= x2094 0)) x1774) x350) (=> (and (not x1774) (= (and (< 0 (x278 x337)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x337)))) x991)) (and (=> (and (and (= x1098 (ite (not x349) 1 0)) (= x1855 (x539 (+ x1727 115792089237316195423570985008687907853269984655499359237631748795939503996928))) (= (= x465 0) x1951) (= x2022 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1855) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x10)) (and (< x10 x1855) (= (<= x1855 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x10)))) 1 0)) (= (x795 x1098 x2022) x465) (= (or (and (= true (<= x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1727)) (> x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x349) (= x10 (x278 x337))) (not x991)) (and (=> (and x1951 (and (= x493 (= x923 0)) (= x923 (x795 x2029 x1332)) (= x990 (x539 (+ x1727 10141204801825835211973625643007))) (= (ite (or (and (> x10 x990) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x10) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x990))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x10) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x990))) 1 0) x1332) (= x2029 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1727) (and (= (<= x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x1727))) 1 0)))) (and (=> (not x493) x2131) (=> (and (and (= x2094 0) (= x1979 x1697) (= x1697 (x1329 (- x10 x1727)))) x493) x350))) (=> (not x1951) x2131))) (=> (and (= (or (and (> 0 x1727) (= true (<= x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x629) x991) (and (=> (and x629 (= x1334 (= x1727 115792089237316195423570985008687907853269984655499359237631748795939503996928))) (and (=> x1334 x2131) (=> (and (and (= (x1329 (- 0 x1727)) x2000) (= x2094 x337) (= x2000 x1979)) (not x1334)) x350))) (=> (and (and (= x1603 (x539 (+ x1727 115792089237316195423570985008687907853269984655499359237631748795939503996928))) (= (x278 x337) x1903) (= (ite (or (and (<= x1603 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1903 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1603 x1903) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1903) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1603)))) 1 0) x635) (= x2030 (= 0 x889)) (= (or (and (> 0 x1727) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1727) true)) (> x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2011) (= x1817 (ite (not x2011) 1 0)) (= (x795 x1817 x635) x889)) (not x629)) (and (=> (not x2030) x2131) (=> (and x2030 (and (= (= 0 x1377) x1654) (= x1562 (ite (or (and (> 0 x1727) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1727))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1727)) 1 0)) (= (x539 (+ x1727 10141204801825835211973625643007)) x560) (= x1377 (x795 x1562 x313)) (= (ite (or (and (> x1903 x560) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x560) (<= x1903 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x1903 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x560))) 1 0) x313))) (and (=> (and x1654 (and (= x2094 x2085) (= x2085 (x1329 (- x1903 x1727))) (= 0 x1979))) x350) (=> (not x1654) x2131))))))))))) x581))
(assert (= x1139 (=> (and (= x151 x1130) (= x1948 x2019)) x464)))
(assert (x1109 x738))
(assert (= x929 (and x1 x522)))
(assert (x121 x465))
(assert (x121 x1060))
(assert (= (and x490 (not x1593)) x2055))
(assert (x687 x833))
(assert (x1786 x1240))
(assert (x121 x1908))
(assert (x121 x1694))
(assert (x121 x1256))
(assert (x121 x181))
(assert (x121 x1636))
(assert (x2034 x141))
(assert (x121 x858))
(assert (x121 x665))
(assert (x121 x49))
(assert (x121 x454))
(assert (= (x570 (x430 x1293)) x1293))
(assert (= (=> (and (= x1253 (= 0 x74)) (= x2005 1) (= (ite (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x311) 1 0) x1145) (= (x795 x245 x1145) x74) (= x1768 1) (= (ite (and (= true (<= x311 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x311)) 1 0) x245)) (and (=> (and (and (= (ite (or (> x311 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x311)) (< x311 0))) 1 0) x1160) (= x1269 (= 0 x1802)) (= (x795 x1160 x588) x1802) (= x588 (ite (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x311) false) (< x311 57896044618658097711785492504343953926634992332820282019728792003956564819968)) 1 0))) x1253) (and (=> (not x1269) x2131) (=> (and x1269 (and (= x311 x1476) (= (< 0 x682) x1023))) (and (=> (and x1023 (and (= x572 (x795 255 x346)) (= 0 x223) (= (< 0 x572) x875) (= x2132 (ite (or (= x1476 0) (= 0 x682)) 0 (ite (= (< x682 57896044618658097711785492504343953926634992332820282019728792003956564819968) (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1476)) (div (ite (< x1476 57896044618658097711785492504343953926634992332820282019728792003956564819968) x1476 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x1476 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x682) x682 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x682 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1476) x1476 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x1476 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (< x682 57896044618658097711785492504343953926634992332820282019728792003956564819968) x682 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x682 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))) (and (=> (and (not x875) (= x281 x2132)) x1775) (=> (and (and (= (= x700 0) x730) (>= x1386 0) (>= x700 0) (= (x1899 (x1829 0) (x1829 9) 0) x481) (= (x1899 (x430 x1909) (x1829 11) 0) x1821) (< x1386 1461501637330902918203684832716283019655932542976) (= x1386 (x1050 x481)) (> 256 x700) (<= x1386 1461501637330902918203684832716283019655932542975) (<= x700 255) (= (x1970 x673) x700) (= (x1899 (x430 x1386) x1821 0) x673)) x875) (and (=> (and x730 (= x2132 x181)) x603) (=> (and (= x1490 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2132) (and (= true (<= x2132 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x2132)))) (not x730)) (and (=> (and (not x1490) (= x2065 1)) x1228) (=> (and x1490 (and (>= x494 0) (> 256 x1583) (= x16 (x488 x1054)) (= (x1927 x1592) x494) (>= 255 x1583) (= (x283 x1954) x1583) (= (x2092 x1074) x1285) (= x1954 (x1899 (x1829 0) (x1829 10) 0)) (= x1458 (x2006 704)) (<= x864 1461501637330902918203684832716283019655932542975) (<= x1285 340282366920938463463374607431768211455) (< x1009 18446744073709551616) (< x645 18446744073709551616) (= (x2008 x1592) x645) (= x1054 (x815 x1954 1)) (= (x1843 x1054) x864) (= (= 1 x16) x468) (= x49 0) (<= x16 18446744073709551615) (<= x1009 18446744073709551615) (<= 0 x939) (<= 0 x1583) (>= x1009 0) (>= x645 0) x468 (= x1074 (x815 x1592 1)) (<= x494 18446744073709551615) (<= x645 18446744073709551615) (> 18446744073709551616 x494) (= x1009 (x781 x1592)) (= (x815 x1054 1) x1592) (= (= 0 x611) x1992) (> 340282366920938463463374607431768211456 x1285) (= x611 (x795 255 x1458)) (< x939 1461501637330902918203684832716283019655932542976) (< x864 1461501637330902918203684832716283019655932542976) (>= x864 0) (>= x16 0) (>= x1285 0) (>= 1461501637330902918203684832716283019655932542975 x939) (> 18446744073709551616 x16) (= (x633 x1954) x939))) (and (=> (not x1992) x2131) (=> (and (and (> 1461501637330902918203684832716283019655932542976 x1100) (= x977 (x795 1461501637330902918203684832716283019655932542975 x689)) (<= 0 x1100) (= (x1899 (x1829 0) (x1829 9) 0) x1022) (= x1100 (x1050 x1022)) (= x878 (= x1100 x977)) (<= x1100 1461501637330902918203684832716283019655932542975) (= (x1041 736) x689)) x1992) (and (=> (not x878) x2131) (=> (and (and (= (x1899 (x430 x679) x1613 0) x439) (= x1613 (x1899 (x430 x1633) (x1829 6) 0)) (= (x1363 800) x608) (= (ite (> 1 x906) 1 0) x1771) (= (x795 1461501637330902918203684832716283019655932542975 x652) x679) (= x1765 (= 0 x1245)) (>= x1245 0) (= (ite (not x1765) 1 0) x32) (< x1245 340282366920938463463374607431768211456) (= x1527 704) (= (= 0 x26) x647) (= (x1041 736) x652) (= (x44 768) x855) (= (x329 x439) x1245) (<= x1245 340282366920938463463374607431768211455) (= (x795 18446744073709551615 x608) x244) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1245) x906) (= (x795 x32 x1771) x26) (= 1 x144)) x878) (and (=> (not x647) x2131) (=> (and x647 (and (= (> x244 0) x1413) (= x1245 x1303))) (and (=> (and x1413 (and (= (x795 x56 x849) x1193) (= x849 (ite (< x808 x1247) 1 0)) (= x1462 (x954 832)) (= x1247 (x795 18446744073709551615 x1462)) (= (= x1043 0) x1565) (= x1579 (= x1193 0)) (= (ite (not x1565) 1 0) x56) (= x1043 (div x1303 x244)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1043) x808))) (and (=> (not x1579) x2131) (=> (and (and (= (div x777 1000000000000000000) x1092) (= x777 (mod (* x1043 x1247) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1092) x1844)) x1579) (and (=> x1844 x2131) (=> (and (not x1844) (and (= x1052 (ite (not x174) 1 0)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2132) (and (= true (<= x2132 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2132 0))) x174) (= x716 (ite (or (and (< x734 x1092) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1092) (<= x734 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x734 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1092 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= (x1329 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2132)) x734) (= x292 (x795 x1052 x716)) (= x14 (= 0 x292)))) (and (=> (not x14) x2131) (=> (and x14 (and (= (ite (or (and (<= x1272 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1092 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1272 x1092) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1092) (<= x1272 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x726) (= x41 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2132) true) (< x2132 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2132)) 1 0)) (= (= x1037 0) x429) (= x1037 (x795 x41 x726)) (= x1272 (x1329 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2132))))) (and (=> (and x429 (and (= x181 x674) (= (x539 (+ x1092 x2132)) x674))) x603) (=> (not x429) x2131))))))))) (=> (not x1413) x2131))))))))))))))) (=> (not x1023) x2131))))) (=> (not x1253) x2131))) x1999))
(assert (x121 x12))
(assert (= (+ 1 (x570 x1082)) (x570 (x815 x1082 1))))
(assert (x1655 x93 x515))
(assert (= x2111 (or x907 x752)))
(assert (x1786 x765))
(assert (= x1266 (and x1688 (not x1906))))
(assert (x121 x1577))
(assert (x121 x1287))
(assert (x121 x1584))
(assert (x121 x804))
(assert (=> (<= x597 10000) (= (x430 x597) (x1829 x597))))
(assert (x121 x662))
(assert (x121 x1600))
(assert (x121 x347))
(assert (x121 x1386))
(assert (x121 x1499))
(assert (x1786 x1226))
(assert (= (and (not x282) x1837) x251))
(assert (= x442 (or x924 x1910)))
(assert (= (x430 2834295333) (x1829 2834295333)))
(assert (= (and x573 x1217) x2015))
(assert (= (or x1868 x1587) x1430))
(assert (x121 x1580))
(assert (x121 x1318))
(assert (= x2122 (or x1157 x92)))
(assert (x121 x1385))
(assert (x121 x371))
(assert (= (and (not x1227) x1017) x22))
(assert (x121 x357))
(assert (x121 x1419))
(assert (x121 x533))
(assert (=> (<= x843 10000) (= (x430 x843) (x1829 x843))))
(assert (x121 x1671))
(assert (x687 x812))
(assert (x121 x495))
(assert (x2034 x1636))
(assert (= (and x228 (not x1194)) x205))
(assert (x121 x338))
(assert (= x655 (and x575 (not x1261))))
(assert (= (x430 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1829 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (and (not x1672) x1845) x621))
(assert (x121 x708))
(assert (x121 x2120))
(assert (x121 x969))
(assert (= 1519696081 (x570 (x1829 1519696081))))
(assert (x121 x2147))
(assert (x121 x437))
(assert (x121 x372))
(assert (x121 x1381))
(assert (x1786 x326))
(assert (x121 x1932))
(assert (x121 x39))
(assert (x121 x1528))
(assert (x121 x1647))
(assert (= (and x449 (not x226)) x1885))
(assert (x1109 x1467))
(assert (x121 x1244))
(assert (x121 x397))
(assert (= (x430 404098525) (x1829 404098525)))
(assert (x121 x1920))
(assert (x121 x2133))
(assert (= x869 (and x996 x839)))
(assert (x121 x494))
(assert (x687 x1898))
(assert (= x1452 (and x1154 x1523)))
(assert (x1542 x267))
(assert (x121 x1679))
(assert (x121 x330))
(assert (= x65 (and x324 (not x361))))
(assert (x121 x1427))
(assert (x121 x558))
(assert (= x1494 (and (not x1085) x1619)))
(assert (x121 x719))
(assert (x1542 x765))
(assert (x687 x1138))
(assert (= 927746484 (x570 (x1829 927746484))))
(assert (x687 x1771))
(assert (= x1510 (and x57 x1711)))
(assert (x121 x1795))
(assert (x1655 x1242 x1376))
(assert (x121 x1321))
(assert (= x2052 (and x112 x943)))
(assert (x121 x589))
(assert (x687 x93))
(assert (= x992 (=> (and (= x1964 x851) (= 0 x2115)) x972)))
(assert (x121 x547))
(assert (= (and x218 x1490) x1713))
(assert (x121 x1108))
(assert (x121 x1632))
(assert (x1109 x1608))
(assert (x1655 x680 x1974))
(assert (x1786 x1801))
(assert (= x1796 (and (not x1421) x2015)))
(assert (x121 x245))
(assert (x121 x302))
(assert (x1542 x1826))
(assert (x1542 x1120))
(assert (x121 x1025))
(assert (= (and x842 x794) x2145))
(assert (= (and (not x1490) x218) x887))
(assert (= (and (not x1846) x389) x1596))
(assert (= x502 (and (not x2139) x707)))
(assert (= 2711744323 (x570 (x1829 2711744323))))
(assert (x121 x940))
(assert (x121 x716))
(assert (= (and x80 x878) x213))
(assert (x121 x1727))
(assert (x121 x927))
(assert (x121 x2129))
(assert (x121 x1741))
(assert (= x421 (and x23 x1373)))
(assert (x121 x1332))
(assert (x121 x1130))
(assert (x121 x674))
(assert (= x1094 (=> (and (= x1617 x1294) (= x335 x995)) x551)))
(assert (x121 x497))
(assert (x687 x427))
(assert (x687 x1562))
(assert (= (x430 1208925819614629174706175) (x1829 1208925819614629174706175)))
(assert (x687 x608))
(assert (= (=> (and (= (ite (not x504) 1 0) x719) (= x504 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586)) (< x1586 0)) (> x1586 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2108 (= 0 x644)) (= (ite (or (and (<= x1450 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x422 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1450 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x422)) (< x422 x1450))) 1 0) x1171) (= x1450 (x539 (+ x1586 57896044618658097711785492504343953926634992332820282019728792003956564819968))) (= (x795 x719 x1171) x644)) (and (=> (and (and (= x1355 (x539 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586))) (= x680 (ite (or (and (= true (<= x1586 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1586 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586)) 1 0)) (= x1974 (ite (or (and (> x1355 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x422 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x422 x1355) (= (<= x422 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1355)))) 1 0)) (= (= x577 0) x872) (= (x795 x680 x1974) x577)) x2108) (and (=> (and x872 (and (= x1483 (x1329 (- x422 x1586))) (= x68 (or (and (= (<= x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1727 0)) (> x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (and (and (>= 18446744073709551615 x153) (<= 0 x153) (> 18446744073709551616 x153) (= (> x1727 57896044618658097711785492504343953926634992332820282019728792003956564819967) x1846)) (not x68)) (and (=> x1846 x2131) (=> (and (not x1846) (= x1727 x1798)) x856))) (=> (and x68 (and (= x666 (= x1727 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (<= 0 x53) (> 18446744073709551616 x53) (>= 18446744073709551615 x53))) (and (=> x666 x2131) (=> (and (and (= x1209 (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1505)) (= x1505 (x1329 (- 0 x1727)))) (not x666)) (and (=> x1209 x2131) (=> (and (not x1209) (and (= (x1329 (- 0 x1505)) x1555) (= x1555 x1798))) x856))))))) (=> (not x872) x2131))) (=> (not x2108) x2131))) x27))
(assert (= (and x325 x800) x2027))
(assert (= 340282366920938463463374607431768211456 (x570 (x1829 340282366920938463463374607431768211456))))
(assert (= (and x707 x2139) x1513))
(assert (x687 x1224))
(assert (= x1716 (and x168 x869)))
(assert (x121 x1346))
(assert (x687 x1988))
(assert (x121 x1710))
(assert (= (and x1230 x1344) x1383))
(assert (x121 x1543))
(assert (x121 x1900))
(assert (= (=> (and (= x2124 x995) (= x1278 x1294)) x551) x598))
(assert (x121 x1431))
(assert (x121 x1145))
(assert (= (and x498 (not x750)) x1902))
(assert (x121 x1722))
(assert (= x1479 (=> (and (= x1748 1) (= 32 x813)) x2113)))
(assert (x121 x1948))
(assert (x121 x487))
(assert (x121 x1272))
(assert (=> (>= 10000 x679) (= (x430 x679) (x1829 x679))))
(assert (x121 x833))
(assert (x121 x2016))
(assert (x121 x71))
(assert (= x1365 (or (and (not x1416) x669) x135 (and x1557 x1808) x521 x1477)))
(assert (x121 x1909))
(assert (x121 x1080))
(assert (x121 x559))
(assert (= x1539 (x570 (x430 x1539))))
(assert (= x1962 (or x196 x1849 x684 x613)))
(assert (x121 x1114))
(assert (= x1837 (and (not x898) x253)))
(assert (= (or x120 x2090) x434))
(assert (x121 x515))
(assert (x121 x671))
(assert (x687 x1817))
(assert (= x961 (=> (and (and (= x2002 (x1766 x533)) (= (= x2002 0) x1552) (= x544 x2002) (not (= x237 0)) (= (x795 20282409603651670423947251286015 x859) x286) (> x2002 0) (not (or (> x55 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x55) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x55))))) (= x544 (ite x1487 1 0)) (= x783 (< 0 x286)) (= (not x1552) x1487)) (or (not x783) (and (and (< x883 18446744073709551616) (<= x883 18446744073709551615) (>= x883 0)) x783))) x678)))
(assert (= x1252 (=> (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1736) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1736)) (< x1736 0))) x839) (and (=> (and x839 (and (<= 0 x53) (<= x53 18446744073709551615) (= x168 (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1736)) (> 18446744073709551616 x53))) (and (=> (and (and (= (= x353 0) x525) (= (ite (not x106) 1 0) x1205) (= x1225 (x1329 (- 0 x1736))) (= (x795 x1205 x812) x353) (= x106 (= x1225 0)) (= x495 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1225)) (= x812 (ite (> 1000000000000000 x495) 1 0))) (not x168)) (and (=> (not x525) x2131) (=> (and (and (= (mod (* 1000000000000000 x1225) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1202) (= (x1329 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x53)) x1342) (= (> x1202 x1342) x1622)) x525) (and (=> x1622 x2131) (=> (and (not x1622) (and (= (x539 (+ x1202 x53)) x876) (= x617 (> 1 x876)))) (and (=> x617 x2131) (=> (and (and (= x358 (x1329 (- x876 1))) (= x1030 (> x53 0))) (not x617)) (and (=> (not x1030) x2131) (=> (and (and (= x1227 (< 20282409603651670423947251286015 x643)) (= (div x358 x53) x643)) x1030) (and (=> (and (not x1227) (= x2020 (> x643 10141204801825835211973625643007))) (and (=> (and (not x2020) (and (= (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1364) x1451) (= (x278 x643) x1364))) (and (=> x1451 x2131) (=> (and (not x1451) (and (= x337 x1370) (= x1370 (x1329 (- 0 x1364))))) x63))) (=> x2020 x2131))) (=> x1227 x2131))))))))))) (=> x168 x2131))) (=> (and (and (<= 0 x153) (<= x153 18446744073709551615) (= x1206 (= 0 x1920)) (= x38 (= 0 x1736)) (= (ite (not x38) 1 0) x148) (= (ite (> 1000000000000000 x1549) 1 0) x1988) (< x153 18446744073709551616) (= x1920 (x795 x148 x1988)) (= x1549 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1736))) (not x839)) (and (=> (not x1206) x2131) (=> (and (and (= x727 (> x153 0)) (= x1684 (mod (* 1000000000000000 x1736) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1206) (and (=> (not x727) x2131) (=> (and (and (= x945 (> x2063 20282409603651670423947251286015)) (= x2063 (div x1684 x153))) x727) (and (=> x945 x2131) (=> (and (= x1373 (> x2063 10141204801825835211973625643007)) (not x945)) (and (=> x1373 x2131) (=> (and (not x1373) (= x337 x2063)) x63)))))))))))))
(assert (= (x1829 20282409603651670423947251286015) (x430 20282409603651670423947251286015)))
(assert (x121 x1224))
(assert (= x1692 (=> (and (or (and (and (= 0 x1356) (= x859 0)) x898) (and (not x898) (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x765)) (and (> 0 (x278 x765)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x765))))) x282) (or (and (not x282) (and (= x1508 (ite (or (and (<= x790 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1695)) (and (< x1695 x790) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1695) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790)))) 1 0)) (= (x278 x765) x641) (= (x539 (+ x641 115792089237316195423570985008687907853269984655499359237631748795939503996928)) x1799) (= 0 x371) (= x1356 0) (= x1475 x859) (= (x1329 (- x790 x641)) x1475) (= x2037 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x641) true) (< x641 0)) (> x641 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0)) (= (x795 x1890 x239) x778) (= x1890 (ite (not x683) 1 0)) (= (or (and (> 0 x641) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x641))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x641)) x683) (= x778 0) (= x239 (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790) (<= x1799 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1799) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790)) (< x790 x1799))) 1 0)) (= (x795 x2037 x1508) x371) (= (x539 (+ x641 10141204801825835211973625643007)) x1695))) (and x282 (and (or (and x994 (and (= (x1329 (- 0 x1201)) x776) (= x859 x790) (not (= x1201 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x1356 x776) (= x1201 (x278 x765)))) (and (and (= x193 (or (> x840 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x840 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x840 0)))) (= x1673 0) (= x1898 (ite (not x193) 1 0)) (= x1326 (ite (or (and (= (<= x840 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x840)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x840)) 1 0)) (= x1860 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x715)) (> x790 x715)) (and (<= x790 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x715 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= (x278 x765) x840) (= x940 (x1329 (- x790 x840))) (= 0 x859) (= x715 (x539 (+ 10141204801825835211973625643007 x840))) (= x1645 (x539 (+ x840 115792089237316195423570985008687907853269984655499359237631748795939503996928))) (= x940 x1356) (= (ite (or (and (> x1645 x790) (= (<= x790 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1645 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1645))) 1 0) x764) (= (x795 x1326 x1860) x1673) (= 0 x71) (= x71 (x795 x1898 x764))) (not x994))) (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790) true) (> x790 0)) x994))))))) (= x898 (or (and (> (x278 x765) x790) (= (<= x790 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= (x278 x765) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x765)) (> x790 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) x52)))
(assert (= (x1829 599290589) (x430 599290589)))
(assert (x687 x665))
(assert (x121 x292))
(assert (x121 x1181))
(assert (x121 x1006))
(assert (= (or (and (not x757) x1816) x243) x7))
(assert (= (or x1990 x686) x98))
(assert (= x1984 (or x657 x1307)))
(assert (x121 x1987))
(assert (x687 x399))
(assert (x121 x1869))
(assert (x121 x813))
(assert (x121 x1273))
(assert (= (x430 2758797371) (x1829 2758797371)))
(assert (= x24 (and x628 (not x1693))))
(assert (=> (<= x2032 10000) (= (x430 x2032) (x1829 x2032))))
(assert (x121 x1682))
(assert (x121 x1284))
(assert (= (or x1179 x1651) x400))
(assert (x121 x358))
(assert (=> (<= x1953 10000) (= (x1829 x1953) (x430 x1953))))
(assert (= (or (and x7 (not x50)) x396) x1931))
(assert (x121 x138))
(assert (x687 x1120))
(assert (x121 x244))
(assert (x121 x1681))
(assert (x121 x359))
(assert (x687 x32))
(assert (= (and (not x998) x1958) x1119))
(assert (x121 x1756))
(assert (x121 x126))
(assert (= (and x865 x1626) x1652))
(assert (x121 x1052))
(assert (x121 x81))
(assert (= x152 (and x647 x213)))
(assert (x687 x849))
(assert (= (and x28 x29) x619))
(assert (x121 x920))
(assert (x121 x1888))
(assert (x1542 x1632))
(assert (x1655 x2029 x1332))
(assert (x121 x1665))
(assert (x121 x1890))
(assert (x121 x1353))
(assert (= (and x1180 x500) x928))
(assert (x121 x1832))
(assert (= (and (not x1030) x417) x1848))
(assert (x121 x265))
(assert (= (and x1430 (not x948)) x1698))
(assert (x121 x1526))
(assert (= (x570 (x1829 2492599498)) 2492599498))
(assert (x121 x742))
(assert (x121 x1001))
(assert (x1109 x1065))
(assert (= (and (not x68) x615) x389))
(assert (x687 x1052))
(assert (= x218 (and x550 (not x730))))
(assert (= x1186 (=> (and (= x697 (x539 (+ x1715 64))) (= (= x20 x770) x1830) (< 0 x215) (= x1715 (x539 (+ x1207 4))) (= x1469 (x539 (+ 32 x1715))) (= (x1329 (- x697 x1207)) x1893)) (and (=> (and (= (= x770 x1818) x1453) (not x1830)) (and (=> (and (and (not (= x1075 2514000705)) (not (< x1075 826074471)) (= (x1173 (x430 x1818)) x2142) (= 68 x1445) (= 2835717307 x1075) (not (= x1075 1889567281)) (= x766 (or (> x1879 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1879 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1879))))) (= x1489 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x229 x287) (= x880 x399) (not (> 4 x1445)) (= x1893 x1445) (< 0 x2142) (= (x1329 (- x1445 4)) x1879) (not (= x1075 826074471))) x1453) (and (=> (and (and (= (x795 1461501637330902918203684832716283019655932542975 x399) x69) (= (= x399 x69) x1906)) (not x766)) (and (=> (not x1906) x478) (=> (and x1906 (and (= (> x287 x2059) x1194) (= x1956 (x1899 (x430 x1633) (x1829 1) 0)) (<= 0 x2059) (<= x2059 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x298 x1956) x2059))) (and (=> (and (and (= (x1899 (x430 x1633) (x1829 1) 0) x896) (= x2042 (x1899 (x430 x1526) (x1829 1) 0)) (= (x885 x2042) x897) (= x1797 (x1329 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x287))) (<= x897 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1797 x897) x942) (= x284 (x1329 (- x2059 x287))) (>= x897 0) (= x1526 (x795 1461501637330902918203684832716283019655932542975 x880))) (not x1194)) (and (=> (and (and (= x1856 1) (= (x539 (+ x897 x287)) x1327) (= x1634 (x795 1461501637330902918203684832716283019655932542975 x880)) (= x1691 32) (= x1590 (x1899 (x430 x1634) (x1829 1) 0))) (not x942)) x1010) (=> x942 x478))) (=> x1194 x478))))) (=> x766 x478))) (=> (and (not x1453) (= (= x141 x770) x2116)) (and (=> (and x2116 (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x428) (= (x1173 (x430 x141)) x1495) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1759) (and (= true (<= x1759 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1759 64))) x957) (not (< x156 4)) (not (= x397 2514000705)) (not (= 826074471 x397)) (= x418 x399) (not (< x397 826074471)) (not (= 1889567281 x397)) (= x287 x1776) (= x156 x1893) (= 68 x156) (= x1759 (x1329 (- x156 4))) (= 2835717307 x397) (< 0 x1495))) (and (=> (and (and (= x1301 (= x399 x1229)) (= x1229 (x795 1461501637330902918203684832716283019655932542975 x399))) (not x957)) (and (=> (not x1301) x992) (=> (and (and (= x593 (> x287 x197)) (<= 0 x197) (= (x1804 x403) x197) (= (x1899 (x430 x1633) (x1829 1) 0) x403) (<= x197 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1301) (and (=> x593 x992) (=> (and (not x593) (and (= (x795 1461501637330902918203684832716283019655932542975 x418) x1953) (= x1380 (x1899 (x430 x1953) (x1829 1) 0)) (= x118 (> x1665 x188)) (= (x1899 (x430 x1633) (x1829 1) 0) x817) (= (x1329 (- x197 x287)) x1284) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1665) (>= x1665 0) (= (x1329 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x287)) x188) (= x1665 (x937 x1380)))) (and (=> (and (and (= 1 x2115) (= 32 x851) (= x250 (x1899 (x430 x597) (x1829 1) 0)) (= (x539 (+ x287 x1665)) x1547) (= (x795 1461501637330902918203684832716283019655932542975 x418) x597)) (not x118)) x972) (=> x118 x992))))))) (=> x957 x992))) (=> (and (and (and x794 (and (not (< x566 4)) (not (= 2711744323 x2026)) (not (> 2031398087 x2026)) (= x1388 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 2835717307 x2026) (> x1249 0) (= x735 (x1329 (- x566 4))) (not (= x2026 2758797371)) (= x1893 x566) (= x1249 (x1173 (x430 x1633))) (= x287 x1959) (not (= 2780102521 x2026)) (= x566 68) (not (> 2711744323 x2026)) (= x399 x1975) (= x2048 (or (and (< x735 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x735))) (> x735 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 2879910238 x2026) (not (> 2492599498 x2026)) (not (= x2026 2834295333)))) (= x794 (= x770 x1633))) (not x2116)) (and (=> x2048 x2131) (=> (and (and (= x124 (x795 1461501637330902918203684832716283019655932542975 x399)) (= x1975 x997) (= (= x124 x399) x2114)) (not x2048)) (and (=> (and (and (= x1723 x127) (= x127 x1371)) x2114) (and (=> x1371 x2131) (=> (and (and (= x964 true) (or (and (= (ite x964 1 0) x1857) x964) (and (not x964) (and (= x1238 (x1899 (x430 x1633) x1831 0)) (<= 0 x1734) (= (x1281 x1238) x1734) (= (x1899 (x430 x1633) (x1829 3) 0) x1831) (>= 255 x1734) (> 256 x1734) (= x1734 x1857))))) (not x1371)) x460))) (=> (not x2114) x2131))))))))) (=> (and x1830 (and (> x1341 0) (not (< x1198 4)) (not (> 826074471 x34)) (= x914 (x1329 (- x1198 4))) (= x1661 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x914)) (< x914 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x914))) (not (= 1889567281 x34)) (= 68 x1198) (not (= x34 2514000705)) (= x607 x399) (= x1198 x1893) (not (= x34 826074471)) (= 2835717307 x34) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1750) (= x287 x123) (= (x1173 (x430 x20)) x1341))) (and (=> (and (not x1661) (and (= x612 (x795 1461501637330902918203684832716283019655932542975 x399)) (= x518 (= x399 x612)))) (and (=> (and x518 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785) (>= x785 0) (= x785 (x90 x605)) (= x112 (< x785 x287)) (= (x1899 (x430 x1633) (x1829 1) 0) x605))) (and (=> (and (and (= x1328 (< x1482 x318)) (= x1482 (x1329 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x287))) (<= x318 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x161 (x1329 (- x785 x287))) (<= 0 x318) (= (x1899 (x430 x1633) (x1829 1) 0) x768) (= x150 (x1899 (x430 x1384) (x1829 1) 0)) (= (x795 1461501637330902918203684832716283019655932542975 x607) x1384) (= x318 (x784 x150))) (not x112)) (and (=> x1328 x834) (=> (and (not x1328) (and (= (x795 1461501637330902918203684832716283019655932542975 x607) x843) (= 32 x1948) (= (x1899 (x430 x843) (x1829 1) 0) x322) (= x151 1) (= (x539 (+ x318 x287)) x1701))) x1139))) (=> x112 x834))) (=> (not x518) x834))) (=> x1661 x834)))))))
(assert (= (and (not x1564) x232) x910))
(assert (= (x570 (x430 x986)) x986))
(assert (x687 x836))
(assert (x121 x1164))
(assert (= (and (not x818) x1457) x604))
(assert (x121 x713))
(assert (x121 x644))
(assert (x121 x1860))
(assert (x2034 x1394))
(assert (x121 x67))
(assert (x687 x1632))
(assert (x121 x1684))
(assert (x121 x997))
(assert (x121 x248))
(assert (= (and (not x1269) x1706) x1840))
(assert (= (and x1012 (not x429)) x479))
(assert (x121 x1667))
(assert (x121 x1355))
(assert (= (and x518 x1464) x943))
(assert (x1786 x1809))
(assert (= (+ (x570 x1954) 1) (x570 (x815 x1954 1))))
(assert (x121 x326))
(assert (= (and x985 x816) x2047))
(assert (x121 x971))
(assert (= x745 (and x154 (not x875))))
(assert (x121 x801))
(assert (= (or x1313 x59) x1835))
(assert (x121 x1691))
(assert (x121 x1092))
(assert (x381 x689))
(assert (x687 x1628))
(assert (x121 x759))
(assert (x121 x239))
(assert (x687 x689))
(assert (x121 x625))
(assert (x121 x1291))
(assert (x121 x467))
(assert (= (and (not x942) x205) x1197))
(assert (x2034 x2109))
(assert (x1542 x1809))
(assert (= x550 (and x154 x875)))
(assert (= x852 (and x176 x2021)))
(assert (x121 x1277))
(assert (x121 x1000))
(assert (= (and x1187 x1110) x1525))
(assert (x121 x1789))
(assert (x687 x659))
(assert (x121 x202))
(assert (= (and x1209 x323) x1918))
(assert (x2034 x20))
(assert (x121 x1915))
(assert (x121 x850))
(assert (= (=> (and (or x980 (not x980)) (= (= 0 x237) x980)) x961) x1140))
(assert (x121 x1142))
(assert (x121 x1527))
(assert (= (x570 (x1829 1736444767)) 1736444767))
(assert (= (or (and x2130 (not x1359)) x1760) x483))
(assert (= x1123 (and x1437 x994)))
(assert (= (x1829 18446744073709551615) (x430 18446744073709551615)))
(assert (x121 x1033))
(assert (= (x1829 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x430 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1542 x1001))
(assert (= (and (not x696) x1038) x91))
(assert (x121 x597))
(assert (x121 x564))
(assert (x687 x765))
(assert (= 1889567281 (x570 (x1829 1889567281))))
(assert (x121 x318))
(assert (x121 x1045))
(assert (=> (<= x131 10000) (= (x430 x131) (x1829 x131))))
(assert (= x2032 (x570 (x430 x2032))))
(assert (x121 x695))
(assert (x121 x1125))
(assert (x121 x1784))
(assert (=> (<= x1636 10000) (= (x1829 x1636) (x430 x1636))))
(assert (x121 x86))
(assert (x121 x866))
(assert (x121 x959))
(assert (= x1437 (and x1837 x282)))
(assert (= (and x516 x941) x340))
(assert (x121 x1916))
(assert (= x1643 (and x165 x1895)))
(assert (x2034 x1633))
(assert (= (and (not x794) x842) x827))
(assert (x121 x42))
(assert (x687 x2096))
(assert (= x1179 (and x1243 x1405)))
(assert (= (and (not x1943) x1604) x848))
(assert (x121 x1199))
(assert (x687 x652))
(assert (= x731 (and x272 x1714)))
(assert (x121 x1341))
(assert (= (x570 (x1829 3840337785)) 3840337785))
(assert (x121 x733))
(assert (x121 x1809))
(assert (= (and x2075 x766) x101))
(assert (x121 x6))
(assert (= (and x2104 (not x545)) x967))
(assert (= (or x928 (and (not x1545) x1854) x626) x1847))
(assert (x121 x66))
(assert (x121 x726))
(assert (= 1208925819614629174706175 (x570 (x1829 1208925819614629174706175))))
(assert (x121 x738))
(assert (x1655 x1850 x556))
(assert (= (x570 (x430 x1636)) x1636))
(assert (= x1711 (and (not x756) x2051)))
(assert (x121 x1759))
(assert (x121 x508))
(assert (= x843 (x570 (x430 x843))))
(assert (x2034 x770))
(assert (= (and x2030 x1408) x2110))
(assert (x121 x988))
(assert (x121 x1040))
(assert (=> (>= 10000 x1634) (= (x1829 x1634) (x430 x1634))))
(assert (x1331 x2089))
(assert (= (and x1334 x1904) x1426))
(assert (x121 x1044))
(assert (x121 x892))
(assert (= x597 (x570 (x430 x597))))
(assert (= (and (not x143) x562) x325))
(assert (x121 x1377))
(assert (= x256 (or x2052 x406 x1298 x1965)))
(assert (= x2075 (and x1066 x1453)))
(assert (x121 x1293))
(assert (x121 x1767))
(assert (= x1612 (and x1459 (not x1019))))
(assert (= (x570 (x1829 1420740386)) 1420740386))
(assert (= (x570 (x815 x1607 1)) (+ (x570 x1607) 1)))
(assert (= (and x1035 x783) x860))
(assert (x121 x2132))
(assert (= (x570 (x1829 4093572003)) 4093572003))
(assert (x121 x1922))
(assert (x121 x484))
(assert (x121 x1794))
(assert (x121 x20))
(assert (x121 x1669))
(assert (x121 x1553))
(assert (= (and x1070 x2144) x521))
(assert (= x1910 (and (not x771) x2111)))
(assert (= (x570 (x1829 3454435393)) 3454435393))
(assert (= (and x985 (not x816)) x1110))
(assert (x121 x1049))
(assert (=> (<= x861 10000) (= (x430 x861) (x1829 x861))))
(assert (= (x430 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1829 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x121 x56))
(assert (x121 x874))
(assert (=> (>= 10000 x385) (= (x1829 x385) (x430 x385))))
(assert (x1542 x790))
(assert (x121 x1395))
(assert (= (x1829 412857073) (x430 412857073)))
(assert (= (=> (and (or (and x50 (and (>= 18446744073709551615 x153) (<= 0 x153) (< x153 18446744073709551616))) (not x50)) (and (= (x795 20282409603651670423947251286015 x2094) x618) (= x50 (> x618 0)))) x1118) x70))
(assert (x121 x161))
(assert (x687 x1979))
(assert (x121 x676))
(assert (x121 x630))
(assert (x121 x790))
(assert (= x557 (and x545 x2104)))
(assert (x121 x1776))
(assert (x121 x336))
(assert (x627 x309))
(assert (x1655 x1817 x635))
(assert (x687 x2029))
(assert (x121 x560))
(assert (x121 x1002))
(assert (x121 x1518))
(assert (x121 x2064))
(assert (x121 x1656))
(assert (= (or x255 x1574) x146))
(assert (x687 x556))
(assert (= (x570 (x1829 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x1677 (or x1126 x981)))
(assert (x1655 x1390 x1176))
(assert (= (=> (and (and (or (and x1943 (and (= x1491 x1288) (= x433 (- x1256 x1381)) (= x1957 x355) (= x1288 (= x433 x1671)) (= x1265 x1256) (= x1994 x1381) (= x1671 x1439))) (and (and (= x1181 x306) (= (= x1181 x728) x2095) (= x1265 x1861) (= x1077 x1994) (= x355 x2095) (= x1627 x1491) (= (- x1861 x1077) x728)) (not x1943))) (and (= (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1474)) x1943) (= x1994 x1141) (= x1439 x1474) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1398))) (and (= x1141 x6) (not (= 0 x1294)) (not (or (and (> 32 x995) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x995))) (> x995 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1170 128) x6))) x221) x551))
(assert (x1109 x821))
(assert (x121 x1736))
(assert (x1542 x1226))
(assert (x121 x2085))
(assert (x121 x1188))
(assert (x121 x2037))
(assert (x121 x1609))
(assert (x121 x1757))
(assert (= (x570 (x1829 1000000000000000)) 1000000000000000))
(assert (x687 x821))
(assert (= x272 (and x2067 x1623)))
(assert (x121 x510))
(assert (x121 x1135))
(assert (= x1384 (x570 (x430 x1384))))
(assert (=> (>= 10000 x857) (= (x430 x857) (x1829 x857))))
(assert (x121 x643))
(assert (= (and (not x2025) x775) x1911))
(assert (= x1101 (=> (and (= x1401 x1059) (= x1385 x1499)) x702)))
(assert (x687 x1471))
(assert (x121 x164))
(assert (x121 x1558))
(assert (x121 x1938))
(assert (x121 x837))
(assert (x121 x134))
(assert (x121 x1151))
(assert (x121 x541))
(assert (x121 x530))
(assert (= x602 (and x1637 (not x622))))
(assert (= (and x1719 (not x1897)) x2107))
(assert (= (and (not x1557) x1808) x669))
(assert (x121 x1071))
(assert (x1655 x1160 x588))
(assert (= (x430 4072298103) (x1829 4072298103)))
(assert (= 1099511627776 (x570 (x1829 1099511627776))))
(assert (x1655 x719 x1171))
(assert (x121 x102))
(assert (x121 x1128))
(assert (x121 x1973))
(assert (x687 x346))
(assert (= x15 (and x2128 (not x1622))))
(assert (x687 x1326))
(assert (= x1828 (and x301 x2023)))
(assert (= (and (not x2119) x1754) x199))
(assert (x388 x415))
(assert (x1655 x1205 x812))
(assert (= x97 (and (not x839) x996)))
(assert (x687 18446744073709551615))
(assert (x121 x1875))
(assert (= x1107 (=> (and (= x966 0) (= x1686 x437)) x989)))
(assert (x121 x1511))
(assert (= x1218 (x570 (x430 x1218))))
(assert (= (and (not x1484) x602) x2010))
(assert (x121 x1493))
(assert (x121 x751))
(assert (=> (>= 10000 x19) (= (x430 x19) (x1829 x19))))
(assert (x121 x2094))
(assert (= (and x1264 x1815) x1982))
(assert (x121 x1081))
(assert (x121 x904))
(assert (= x324 (and (not x198) x1414)))
(assert (x121 x722))
(assert (x121 x867))
(assert (x121 x952))
(assert (x687 340282366920938463463374607431768211455))
(assert (x1655 x1052 x716))
(assert (= x17 (and x955 x1828)))
(assert (x121 x2102))
(assert (x121 x2061))
(assert (x121 x1597))
(assert (x121 x590))
(assert (= x844 (and x304 x51)))
(assert (x687 x2016))
(assert (x121 x741))
(assert (x687 x1974))
(assert (x627 x2024))
(assert (= x686 (and x1020 (not x1862))))
(assert (x121 x1953))
(assert (x687 x1204))
(assert (= x1668 (and x226 x449)))
(assert (= (x570 (x1829 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x121 x889))
(assert (x121 x652))
(assert (x687 x880))
(assert (x2034 x482))
(assert (= (x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x1829 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x121 x1618))
(assert (x121 x820))
(assert (= x2128 (and x525 x2045)))
(assert (= x435 (and x943 (not x112))))
(assert (x121 x32))
(assert (= x1912 (and x323 (not x1209))))
(assert (x2034 x1526))
(assert (x121 x812))
(assert (x121 x1189))
(assert (= (and x980 x1709) x1434))
(assert (x121 x1065))
(assert (x2034 x265))
(assert (x121 x1913))
(assert (= x1859 (or x502 x1513)))
(assert (= (x570 (x1829 2780102521)) 2780102521))
(assert (= (x430 10141204801825835211973625643007) (x1829 10141204801825835211973625643007)))
(assert (x121 x1549))
(assert (= (and x1619 x1085) x626))
(assert (x121 x1303))
(assert (= (=> (and (= x813 x2117) (= 0 x1748)) x2113) x660))
(assert (x121 x291))
(assert (=> (<= x1526 10000) (= (x1829 x1526) (x430 x1526))))
(assert (x687 x1669))
(assert (= (x570 (x1829 18446744073709551615)) 18446744073709551615))
(assert (= (and x602 x1484) x1286))
(assert (x121 x1201))
(assert (x121 x1245))
(assert (x687 x302))
(assert (x121 x188))
(assert (= (x430 2514000705) (x1829 2514000705)))
(assert (x121 x1136))
(assert (x381 x418))
(assert (x1655 x1326 x1860))
(assert (x121 x612))
(assert (= (=> (and (= x798 (not x99)) (= (ite x798 1 0) x215) (= x1207 x2120) (= x99 (or (and (= (<= x1006 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1006 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1006)))) x1186) x87))
(assert (x121 x273))
(assert (x121 x1280))
(assert (x121 x1798))
(assert (= 2514000705 (x570 (x1829 2514000705))))
(assert (x121 x672))
(assert (x687 x1625))
(assert (x121 x976))
(assert (x1655 x1625 x1444))
(assert (= (+ (x570 x128) 1) (x570 (x815 x128 1))))
(assert (x381 x2140))
(assert (x121 x514))
(assert (x121 x1275))
(assert (x121 x1469))
(assert (= (and (not x1371) x139) x1235))
(assert (= (and x1286 (not x1976)) x18))
(assert (x121 x1975))
(assert (x121 x180))
(assert (x121 x1398))
(assert (= (x570 (x430 x482)) x482))
(assert (x687 x1400))
(assert (x687 x303))
(assert (x121 x517))
(assert (x121 x692))
(assert (= (x1829 65535) (x430 65535)))
(assert (x121 x1537))
(assert (x381 x1916))
(assert (x687 x828))
(assert (= x462 (and x936 (not x405))))
(assert (x121 x129))
(assert (= (and (not x901) x171) x304))
(assert (= x628 (or x1663 x1835 x107 x1046)))
(assert (= x92 (and x1115 x137)))
(assert (x687 x719))
(assert (x121 x777))
(assert (x121 x284))
(assert (=> (>= 10000 x986) (= (x430 x986) (x1829 x986))))
(assert (x121 x1874))
(assert (x687 x1001))
(assert (= x1322 (and x186 (not x489))))
(assert (x1655 x1898 x764))
(assert (x121 x172))
(assert (x121 x651))
(assert (x121 x1443))
(assert (= (and x871 x266) x1121))
(assert (= (and (not x1451) x793) x513))
(assert (= x1354 (=> (and (= x237 0) (= x83 x173) (= x589 x294) (= x53 x993) (= x883 x153) (= x1540 x55)) x1140)))
(assert (= (and x1028 x1940) x471))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x570 (x1829 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x121 x769))
(assert (= x1046 (or x537 x814)))
(assert (= (and x498 x750) x912))
(assert (= x1472 (x570 (x430 x1472))))
(assert (x121 x130))
(assert (x121 x1370))
(assert (= x271 (and x1235 x964)))
(assert (=> (>= 10000 x2109) (= (x1829 x2109) (x430 x2109))))
(assert (= x811 (and x30 (not x1556))))
(assert (x121 x1642))
(assert (= (and (not x1563) x503) x681))
(assert (x121 x1855))
(assert (x121 x1634))
(assert (= (x1829 1461501637330902918203684832716283019655932542975) (x430 1461501637330902918203684832716283019655932542975)))
(assert (= x1630 (and x1402 x1182)))
(assert (x121 x1718))
(assert (= (=> (and (= (ite x1279 1 0) x2065) (= x1463 (or (> x281 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x281)) (< x281 0)))) (= (not x1463) x1279)) x1228) x1775))
(assert (x687 x1458))
(assert (= (or x663 x1902) x703))
(assert (= (or x862 x846) x1816))
(assert (= x1073 (and x1649 x2069)))
(assert (x121 x977))
(assert (x121 x1387))
(assert (= (x570 (x1829 1116559274)) 1116559274))
(assert (x121 x1680))
(assert (x121 x1361))
(assert (= x1685 (and (not x727) x1933)))
(assert (x121 x1068))
(assert (x121 x116))
(assert (= (or (and x2107 (not x1785)) (and x1719 x1897)) x814))
(assert (x687 x484))
(assert (x687 x195))
(assert (x121 x1799))
(assert (x121 x1582))
(assert (x121 x353))
(assert (x121 x426))
(assert (x121 x1063))
(assert (= (=> (and (= (x1899 (x430 x482) (x1829 5) 0) x419) (= (x54 x419) x1826) (< x1826 20282409603651670423947251286016) (= (x278 x1826) x440) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x440) true) (< x440 0)) (> x440 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1945) (>= x1826 0) (<= x1826 20282409603651670423947251286015)) (and (=> (and x1945 (and (or (and (and (= x1021 x1067) (= (x1329 (- 0 x1330)) x1067) (>= x53 0) (not (> x1330 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (>= 18446744073709551615 x53) (< x53 18446744073709551616) (not (= x440 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x1330 (x1329 (- 0 x440)))) x583) (and (and (not (> x440 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x153 18446744073709551616) (>= 18446744073709551615 x153) (= x1021 x440) (>= x153 0)) (not x583))) (and (>= 65535 x1989) (= x583 (or (and (= true (<= x440 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x440 0)) (> x440 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x300 x2058) x1989) (<= 0 x1989) (= (x1899 (x430 x482) (x1829 5) 0) x2058) (> 65536 x1989)))) x216) (=> (and (and (= 896 x1207) (= 1 x215)) (not x1945)) x1186))) x277))
(assert (= (and (not x1184) x718) x799))
(assert (x121 x1967))
(assert (x121 x2093))
(assert (x121 x368))
(assert (= (and x2072 x1844) x646))
(assert (= (and x1993 (not x1374)) x1868))
(assert (x121 x951))
(assert (x121 x197))
(assert (x1109 x402))
(assert (= x613 (and x1733 x118)))
(assert (x121 x1812))
(assert (x121 x724))
(assert (x388 x302))
(assert (= (x570 (x430 x1600)) x1600))
(assert (x121 x1133))
(assert (x121 x608))
(assert (x121 x1944))
(assert (= (and (not x1253) x1825) x690))
(assert (= x1719 (and x622 x1637)))
(assert (x121 x303))
(assert (x121 x1193))
(assert (x121 x1290))
(assert (= (=> (= x1591 (> x1857 0)) (and (=> (not x1591) x2131) (=> (and (and (= x1162 (x1329 (- x1633 x307))) (= x307 (x795 1461501637330902918203684832716283019655932542975 x1975)) (= (> x1162 0) x2018)) x1591) (and (=> (not x2018) x2131) (=> (and (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x287) x573) x2018) (and (=> (and (= x1586 x287) (not x573)) x446) (=> (and x573 (and (> 1099511627776 x83) (= x1421 (< x1558 1099511627776)) (>= x83 0) (<= x83 1099511627775))) (and (=> (and x1421 (and (= x816 (< x338 x83)) (= (x795 1099511627775 x1558) x338))) (and (=> x816 x2131) (=> (and (not x816) (and (or (and (and (= x53 x1581) (< x53 18446744073709551616) (<= 0 x53) (<= x153 18446744073709551615) (= x1740 x153) (> 18446744073709551616 x153) (<= x53 18446744073709551615) (<= 0 x153)) (not x1187)) (and x1187 (and (>= x153 0) (<= x153 18446744073709551615) (< x153 18446744073709551616) (= x1581 x53) (>= x53 0) (< x53 18446744073709551616) (>= 18446744073709551615 x53) (= x153 x1740)))) (and (> 256 x294) (<= x294 255) (= x1187 (= 0 x294)) (>= x294 0) (= (x1329 (- x338 x83)) x72) (= (x795 1099511627775 x72) x1422)))) x1415))) (=> (not x1421) x2131))))))))) x460))
(assert (x121 x215))
(assert (x121 x428))
(assert (x121 x201))
(assert (= (and x910 x1894) x1808))
(assert (x121 x2065))
(assert (x121 x2138))
(assert (x121 x2066))
(assert (x121 x1320))
(assert (x121 x1207))
(assert (x121 x689))
(assert (x121 x309))
(assert (= (and x1854 x1545) x1180))
(assert (x388 x1458))
(assert (x121 x1867))
(assert (x121 x1554))
(assert (x687 x1456))
(assert (x121 x1524))
(assert (= x409 (=> (and (= x1670 0) (= x1568 x437)) x2039)))
(assert (x121 x917))
(assert (x121 x1522))
(assert (x121 x141))
(assert (= (x570 (x1829 468353030)) 468353030))
(assert (x687 x738))
(assert (x121 x1935))
(assert (= x1969 (and x2141 x1309)))
(assert (x121 x1489))
(assert (x121 x1508))
(assert (x121 x415))
(assert (x121 x787))
(assert (= (x1829 2031398087) (x430 2031398087)))
(assert (= x458 (and x493 x1907)))
(assert (=> (>= 10000 x1929) (= (x430 x1929) (x1829 x1929))))
(assert (= (or x1884 x256) x1504))
(assert (x121 x596))
(assert (x121 x1566))
(assert (x121 x658))
(assert (= x1248 (and x198 x1414)))
(assert (= x490 (and (not x955) x1828)))
(assert (x1655 x659 x695))
(assert (= x1448 (and x253 x898)))
(assert (= x406 (and x526 x1661)))
(assert (x121 x2031))
(assert (x1655 x56 x849))
(assert (x121 x1989))
(assert (= x1873 (and x991 x299)))
(assert (x121 x1229))
(assert (= (or x893 x24) x1754))
(assert (x121 x1926))
(assert (=> (>= 10000 x482) (= (x430 x482) (x1829 x482))))
(assert (x121 x1246))
(assert (= (and (not x117) x1073) x410))
(assert (= (x570 (x1829 1201997079)) 1201997079))
(assert (x121 x1027))
(assert (x121 x2109))
(assert (= x63 (=> (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x326)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2099)) (> (x278 x326) x2099)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x326)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2099))) x624) (and (=> (and (and (= 0 x1348) (= x1782 0)) x624) x581) (=> (and (= x143 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x326)) (and (< (x278 x326) 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x326)))))) (not x624)) (and (=> (and (= (and (< 0 x2099) (= true (<= x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x582) x143) (and (=> (and (not x582) (and (= (x795 x217 x900) x1694) (= x772 (x278 x326)) (= x900 (ite (or (and (> x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x547)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x547) (<= x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x547 x2099))) 1 0)) (= x1379 (= x1694 0)) (= (ite (not x374) 1 0) x217) (= x547 (x539 (+ 115792089237316195423570985008687907853269984655499359237631748795939503996928 x772))) (= x374 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x772) (and (> 0 x772) (= (<= x772 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))))) (and (=> (and (and (= x517 (ite (or (and (<= x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1093 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1093 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2099)) (< x1093 x2099))) 1 0)) (= (= 0 x713) x998) (= x1143 (ite (or (> x772 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x772 0) (= true (<= x772 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= (x539 (+ x772 10141204801825835211973625643007)) x1093) (= (x795 x1143 x517) x713)) x1379) (and (=> (not x998) x2131) (=> (and (and (= x1348 x1973) (= (x1329 (- x2099 x772)) x1973) (= 0 x1782)) x998) x581))) (=> (not x1379) x2131))) (=> (and x582 (and (= (x278 x326) x1166) (= x2046 (= x1166 115792089237316195423570985008687907853269984655499359237631748795939503996928)))) (and (=> (and (not x2046) (and (= x2099 x1782) (= x1647 (x1329 (- 0 x1166))) (= x1647 x1348))) x581) (=> x2046 x2131))))) (=> (and (and (= x485 (x795 x1039 x1669)) (= x1441 (or (> x535 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x535) true) (> 0 x535)))) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2099) (<= x1468 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1468 x2099) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1468) (<= x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x1669) (= (ite (not x1441) 1 0) x1039) (= (= x485 0) x800) (= (x278 x326) x535) (= x1468 (x539 (+ 115792089237316195423570985008687907853269984655499359237631748795939503996928 x535)))) (not x143)) (and (=> (not x800) x2131) (=> (and x800 (and (= (ite (or (and (<= x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x649)) (and (> x2099 x649) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x649) (<= x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x1013) (= x328 (= 0 x1832)) (= x1832 (x795 x45 x1013)) (= x45 (ite (or (and (> 0 x535) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x535))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x535)) 1 0)) (= (x539 (+ 10141204801825835211973625643007 x535)) x649))) (and (=> (and x328 (and (= x976 (x1329 (- x2099 x535))) (= 0 x1348) (= x1782 x976))) x581) (=> (not x328) x2131)))))))))))
(assert (= x1298 (and x435 x1328)))
(assert (x381 x576))
(assert (x687 x1444))
(assert (x121 x849))
(assert (= x266 (or x1841 x1123 x1448 x251)))
(assert (x121 x496))
(assert (= x407 (and x1699 x2143)))
(assert (x121 x2096))
(assert (x2034 x679))
(assert (= (and (not x1115) x137) x1576))
(assert (x121 x571))
(assert (= (=> (= x506 x377) x1433) x656))
(assert (= x732 (and x1654 x2110)))
(assert (= x1486 (and x1985 (not x567))))
(assert (x121 x776))
(assert (x121 x966))
(assert (x121 x1265))
(assert (x1542 x1727))
(assert (= x232 (and (not x668) x1297)))
(assert (= x2081 (and (not x583) x1323)))
(assert (x121 x1715))
(assert (x121 x836))
(assert (x121 x499))
(assert (= (and x14 x491) x1012))
(assert (x687 x2089))
(assert (x121 x1686))
(assert (x121 x973))
(assert (x121 x2117))
(assert (x121 x1896))
(assert (= (and x1316 x1322) x1788))
(assert (= x167 (and x1780 x410)))
(assert (x121 x649))
(assert (= (and x585 x1366) x1410))
(assert (= x1446 (and x1113 x922)))
(assert (= x1442 (x570 (x430 x1442))))
(assert (= (and (not x1649) x2069) x1637))
(assert (= x1806 (or x101 x333 x1266 x638)))
(assert (x121 x873))
(assert (x121 x1892))
(assert (x121 x1768))
(assert (= x579 (and x718 x1184)))
(assert (x121 x826))
(assert (x121 x1803))
(assert (x121 x1432))
(assert (x121 x712))
(assert (= (and (not x2082) x667) x1717))
(assert (x687 x337))
(assert (= (and x948 x1430) x260))
(assert (x121 x1817))
(assert (= x450 (and x489 x186)))
(assert (= (and x561 (not x1301)) x196))
(assert (x121 x1481))
(assert (x121 x1516))
(assert (x121 x1670))
(assert (x121 x153))
(assert (x121 x1929))
(assert (= x610 (=> (and (= (x1329 (- x770 x20)) x2031) (= x756 (> x2031 0)) (> x1937 0)) (and (=> (and (not x756) (= x57 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x287))) (and (=> (and (and (or (and x314 (and (>= 18446744073709551615 x53) (> 18446744073709551616 x53) (>= 18446744073709551615 x153) (<= 0 x53) (= x1392 x53) (= x1289 x153) (<= 0 x153) (> 18446744073709551616 x153))) (and (and (> 18446744073709551616 x153) (<= x153 18446744073709551615) (>= 18446744073709551615 x53) (= x153 x1289) (= x1392 x53) (> 18446744073709551616 x53) (>= x53 0) (<= 0 x153)) (not x314))) (and (> 256 x294) (= (x795 1099511627775 x480) x1071) (> 1099511627776 x1133) (not (> x83 x1133)) (= (x1329 (- x1558 x83)) x480) (>= x83 0) (<= x294 255) (= (= 0 x294) x314) (<= 0 x294) (> 1099511627776 x83) (<= x83 1099511627775))) x57) x1674) (=> (and (= x377 x287) (not x57)) x1433))) (=> (and x756 (and (< x190 340282366920938463463374607431768211456) (= (+ x443 x316) x204) (< x1767 340282366920938463463374607431768211456) (= x1447 x1756) (<= 0 x1346) (= x1393 (x1899 (x430 x861) (x1829 9) 0)) (= x380 (x1899 (x430 x482) (x1829 6) 0)) (>= 1461501637330902918203684832716283019655932542975 x761) (= (x1329 (- x190 x287)) x2003) (>= x761 0) (<= x1767 340282366920938463463374607431768211455) (= x510 (x2008 x632)) (= x1199 640) (<= x510 18446744073709551615) (> 18446744073709551616 x1003) (<= x1502 18446744073709551615) (= (x1927 x632) x1003) (<= 0 x190) (>= 18446744073709551615 x1003) (= x382 (x795 255 x415)) (< x1147 256) (<= 0 x861) (= (x1899 (x430 x482) (x1829 5) 0) x1079) (= x770 x1481) (= (x488 x360) x1346) (= x415 (x2134 640)) (< x761 1461501637330902918203684832716283019655932542976) (= x285 x1492) x1116 (not (> x287 x190)) (= x1666 (x1283 x1609)) (= (x2092 x1690) x751) (= (x795 1461501637330902918203684832716283019655932542975 x1498) x2129) (= x1888 (x795 340282366920938463463374607431768211455 x2003)) (<= x751 340282366920938463463374607431768211455) (>= x1003 0) (= x761 (x633 x392)) (= x316 (- x1666 x285)) (= (x795 1461501637330902918203684832716283019655932542975 x1915) x1756) (<= 0 x1442) (<= 0 x1447) (= x1447 (x1050 x1393)) (>= x751 0) (<= x861 255) (= (x509 672) x1915) (<= x1290 1461501637330902918203684832716283019655932542975) (= (x1329 (- x1767 x287)) x2089) (> 18446744073709551616 x510) (<= 0 x1290) (= x2129 x770) (= x382 x861) (= (x509 672) x1498) (<= x1492 340282366920938463463374607431768211455) (<= 0 x1767) (>= x1502 0) (< x1442 65536) (<= 0 x510) (= (x781 x632) x1502) (= x1492 (x1403 x960)) (= (x670 x110) x190) (= x2088 x443) (< x1447 1461501637330902918203684832716283019655932542976) (>= x1147 0) (= x1116 (= 1 x1346)) (< x1290 1461501637330902918203684832716283019655932542976) (= x1290 (x1843 x360)) (not (< 340282366920938463463374607431768211455 x287)) (= x1609 x770) (>= 18446744073709551615 x1346) (= x648 (ite (= x1767 0) (not (= (x795 340282366920938463463374607431768211455 x2089) 0)) (= 0 x1767))) (> 256 x861) (>= 340282366920938463463374607431768211455 x190) (<= x1442 65535) (= (x815 x632 1) x1690) (>= 1461501637330902918203684832716283019655932542975 x1447) (> 18446744073709551616 x1346) (= (x1899 (x430 x770) (x1829 8) 0) x1282) (= (x815 x392 1) x360) (<= 0 x1492) (not (> x287 x1767)) (= 640 x1996) (= x2103 (x1899 (x430 x770) x380 0)) (= x1442 (x592 x1079)) (= (x1403 x2103) x1767) (= x40 (x1899 (x430 x482) (x1829 6) 0)) (< x1502 18446744073709551616) (= (x795 340282366920938463463374607431768211455 x2089) x2088) (= x861 (x448 x1282)) (= x1147 (x283 x392)) (= x632 (x815 x360 1)) (<= x1147 255) (= (x1899 (x430 x861) (x1829 10) 0) x392) (< x751 340282366920938463463374607431768211456) (= x960 (x1899 (x430 x770) x40 0)) (= (x1899 (x430 x770) (x1829 2) 0) x110))) (and (=> (and (and (= x212 (= 0 x1767)) (= x162 (ite (not x212) (= 0 (x795 340282366920938463463374607431768211455 x2089)) (not x212)))) (not x648)) (and (=> (not x162) x277) (=> (and x162 (= x968 0)) x334))) (=> (and x648 (= 1 x968)) x334)))))))
(assert (x687 x2024))
(assert (= (=> (and (= x1691 x1964) (= 0 x1856)) x1010) x478))
(assert (x121 x1880))
(assert (x1655 x833 x874))
(assert (= (x430 3840337785) (x1829 3840337785)))
(assert (= (and x1473 x1820) x1731))
(assert (x121 x809))
(assert (x687 x900))
(assert (x2034 x1293))
(assert (x121 x855))
(assert (x121 x2057))
(assert (x121 x1447))
(assert (x121 x1578))
(assert (= (x570 (x815 x632 1)) (+ (x570 x632) 1)))
(assert (x121 x1936))
(assert (= (and x490 x1593) x257))
(assert (x687 x480))
(assert (x121 x1589))
(assert (x121 x1502))
(assert (x1786 x1811))
(assert (x121 x384))
(assert (x121 x1842))
(assert (= (x430 1889567281) (x1829 1889567281)))
(assert (= (=> (and (= x116 x1294) (= x858 x995)) x551) x987))
(assert (x121 x1450))
(assert (= (or x1678 x1839 x1106 x1620) x445))
(assert (x687 20282409603651670423947251286015))
(assert (= x744 (=> (and (not (= x1128 826074471)) (= (x539 (+ x1803 64)) x1742) (= 2835717307 x1128) (= x857 x399) (= (x1329 (- x1318 4)) x791) (= (x1329 (- x1742 x533)) x1090) (= (x539 (+ x533 4)) x1803) (= x291 (x539 (+ x1803 32))) (= x1080 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x791) (and (> 64 x791) (= (<= x791 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1032) (not (= x1128 2514000705)) (= x1318 x1090) (not (> 4 x1318)) (> x1794 0) (not (= 1889567281 x1128)) (= x179 x377) (= 68 x1318) (not (< x1128 826074471)) (= x1794 (x1173 (x430 x20)))) (and (=> (and x1032 (and (= x1540 x55) (= x153 x883) (= x993 x53) (= x173 x83) (= 0 x237) (= x294 x589))) x1140) (=> (and (and (= true x1545) (= x857 x1580)) (not x1032)) (and (=> (and (and (= (x90 x1863) x348) (<= x348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x348 0) (= (x1899 (x430 x1633) (x1829 1) 0) x1863) (= x500 (< x348 x377))) x1545) (and (=> x500 x1354) (=> (and (and (= (x1329 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x179)) x1930) (>= x733 0) (<= x733 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1887 (x1329 (- x348 x179))) (= x1872 (x1899 (x430 x857) (x1829 1) 0)) (= x2097 (x1899 (x430 x1633) (x1829 1) 0)) (= x733 (x408 x1872)) (= (> x733 x1930) x1085)) (not x500)) (and (=> (and (not x1085) (and (= x237 1) (= x701 (x1899 (x430 x857) (x1829 1) 0)) (= x993 x53) (= x173 x83) (= x55 32) (= (x539 (+ x733 x179)) x192) (= x589 x294) (= x153 x883))) x1140) (=> x1085 x1354))))) (=> (not x1545) x1354)))))))
(assert (x121 x1547))
(assert (= (x430 1116559274) (x1829 1116559274)))
(assert (x121 x1057))
(assert (= x1237 (and x2144 (not x1070))))
(assert (x687 x695))
(assert (= x2105 (or x434 x745)))
(assert (= (x570 (x430 x265)) x265))
(assert (x2034 x2032))
(assert (x121 x55))
(assert (= (and x721 x582) x1738))
(assert (x687 x258))
(assert (= (x430 2780102521) (x1829 2780102521)))
(assert (x121 x1067))
(assert (x2034 x1386))
(assert (= (and x730 x550) x120))
(assert (x121 x242))
(assert (= (x1829 1099511627775) (x430 1099511627775)))
(assert (= x176 (and (not x477) x1889)))
(assert (= x2109 (x570 (x430 x2109))))
(assert (x1109 x853))
(assert (x1109 x1729))
(assert (x121 x131))
(assert (= (or (and x1889 x477) (and x176 (not x2021))) x1942))
(assert (= (=> (and (or x1359 (not x1359)) (= (= 0 x1130) x1359)) x1538) x464))
(assert (= x1230 (and x170 x1601)))
(assert (x121 x1964))
(assert (x687 x2094))
(assert (x121 x105))
(assert (= x1132 (and x1993 x1374)))
(assert (= x1509 (and x280 (not x1966))))
(assert (x121 x3))
(assert (= (=> (and (= x1059 x966) (= x1385 x1686)) x702) x989))
(assert (= x718 (and x1779 x1762)))
(assert (x121 x320))
(assert (= x743 (and x1213 (not x2018))))
(assert (x121 x639))
(assert (x121 x1455))
(assert (x121 x159))
(assert (= x1526 (x570 (x430 x1526))))
(assert (= x1167 (and (not x1095) x1576)))
(assert (x121 x399))
(assert (x121 x923))
(assert (x121 x1734))
(assert (= x214 (and x1446 (not x378))))
(assert (= (and (not x1571) x1859) x965))
(assert (= x1464 (and (not x1661) x526)))
(assert (x687 x563))
(assert (x121 x1384))
(assert (x687 x1143))
(assert (= x2100 (and x1846 x389)))
(assert (x121 x894))
(assert (= (or x1271 x1525) x1648))
(assert (=> (>= 10000 x1386) (= (x430 x1386) (x1829 x1386))))
(assert (= 18446744073709551616 (x570 (x1829 18446744073709551616))))
(assert (x121 x914))
(assert (x687 x1098))
(assert (x121 x1394))
(assert (x687 x874))
(assert (x121 x748))
(assert (= x1126 (or (and x1556 x30) (and (not x933) x811))))
(assert (x687 x459))
(assert (x2034 x857))
(assert (= x679 (x570 (x430 x679))))
(assert (x121 x1483))
(assert (= x1017 (and x417 x1030)))
(assert (= (and (not x865) x1626) x802))
(assert (x121 x2125))
(assert (= 2758797371 (x570 (x1829 2758797371))))
(assert (x687 x1242))
(assert (x121 x1240))
(assert (= (x1829 1420740386) (x430 1420740386)))
(assert (x687 x1608))
(assert (= x252 (=> (and (= x2061 (x795 20282409603651670423947251286015 x1632)) (>= 20282409603651670423947251286015 x11) (= x750 (or (and (< x1537 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1537))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1537))) (= x1752 (x1899 (x430 x482) (x1829 5) 0)) (= x11 (x54 x1752)) (<= 0 x11)) (and (=> (and (not x750) (= 288 x533)) x744) (=> (and (and (= x2001 (or (> x2028 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2028)) (< x2028 0)))) (= (x1977 x601) x1400) (= x601 (x1899 (x430 x482) (x1829 5) 0)) (< x1400 20282409603651670423947251286016) (= x2028 (x278 x1400)) (not (> x273 x749)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1537)) (>= 20282409603651670423947251286015 x1400) (<= 0 x1400) (= (x1329 (- x377 x741)) x749)) x750) (and (=> (and x2001 (and (and (< x2109 65536) (>= 65535 x2109) (= x2109 (x1827 x1676)) (= (x1899 (x430 x482) (x1829 5) 0) x1676) (>= x2109 0) (= (or (> x2028 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2028 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x2028))) x2139)) (or (and (and (= x1869 x658) (= (x1329 (- 0 x1292)) x658) (= (x1329 (- 0 x2028)) x1292) (<= 0 x53) (>= 18446744073709551615 x53) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1292)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x2028)) (> 18446744073709551616 x53)) x2139) (and (not x2139) (and (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2028)) (= x2028 x1869) (>= 18446744073709551615 x153) (>= x153 0) (< x153 18446744073709551616)))))) x1311) (=> (and (not x2001) (and (= 288 x1018) (= x288 1))) x1460)))))))
(assert (x121 x1539))
(assert (x121 x888))
(assert (= (x570 (x1829 10141204801825835211973625643007)) 10141204801825835211973625643007))
(assert (x121 x1857))
(assert (x121 x2078))
(assert (x121 x1205))
(assert (x121 x1141))
(assert (x121 x1939))
(assert (x121 x749))
(assert (= x1405 (and (not x1302) x1407)))
(assert (= (=> (and (= x437 x1499) (= 0 x1401)) x1101) x1572))
(assert (x687 x859))
(assert (x121 x1608))
(assert (x121 x1562))
(assert (x121 x1771))
(assert (= (x430 2879910238) (x1829 2879910238)))
(assert (=> (<= x1472 10000) (= (x1829 x1472) (x430 x1472))))
(assert (x121 x2053))
(assert (x121 x1083))
(assert (= x365 (and (not x1654) x2110)))
(assert (x687 x1332))
(assert (x121 x556))
(assert (x121 x1512))
(assert (x1655 x1224 x665))
(assert (= x1743 (and (not x1169) x1960)))
(assert (x1655 x1419 x1922))
(assert (x121 x1708))
(assert (x687 x1352))
(assert (= (or x1963 x199) x492))
(assert (x687 x309))
(assert (x687 x1219))
(assert (=> (<= x141 10000) (= (x1829 x141) (x430 x141))))
(assert (= x575 (or x2081 x1500)))
(assert (= (and x209 x1023) x154))
(assert (x121 x642))
(assert (x121 x1043))
(assert (x687 x1729))
(assert (= x1460 (=> (and (> x288 0) (= x1018 x533)) x744)))
(assert (= x2130 (or x1504 x1561 x1008 x108)))
(assert (x1542 x2094))
(assert (= (or x1596 x1912) x516))
(assert (x121 x2140))
(assert (x381 x1915))
(assert (=> (<= x1384 10000) (= (x1829 x1384) (x430 x1384))))
(assert (x687 x2140))
(assert (x121 x1625))
(assert (x121 x857))
(assert (x2034 x1472))
(assert (= (and x325 (not x800)) x1810))
(assert (= (x1829 1461501637330902918203684832716283019655932542976) (x430 1461501637330902918203684832716283019655932542976)))
(assert (x121 x1077))
(assert (x121 x335))
(assert (= x160 (or x214 x222)))
(assert (x121 x983))
(assert (x121 x531))
(assert (x121 x1994))
(assert (x1655 x427 x459))
(assert (x121 x1983))
(assert (x121 x877))
(assert (x1542 x1348))
(assert (= 1844900739 (x570 (x1829 1844900739))))
(assert (x687 1099511627775))
(assert (x121 x124))
(assert (x687 x988))
(assert (= x1323 (and x1945 x1984)))
(assert (x121 x926))
(assert (= 1134440005 (x570 (x1829 1134440005))))
(assert (= (and x648 x1599) x200))
(assert (x121 x485))
(assert (x121 x444))
(assert (x121 x53))
(assert (= x1394 (x570 (x430 x1394))))
(assert (x121 x455))
(assert (x121 x148))
(assert (x121 x274))
(assert (x687 x680))
(assert (x687 x1503))
(assert (= x1825 (or x1743 x1544)))
(assert (x121 x1568))
(assert (=> (<= x1218 10000) (= (x1829 x1218) (x430 x1218))))
(assert (x121 x2038))
(assert (x2034 x1539))
(assert (= (=> (and (= x2117 x335) (= 0 x1617)) x1094) x1158))
(assert (x121 x13))
(assert (= (and x461 x685) x1588))
(assert (= (and x2049 x1005) x2073))
(assert (x121 x1503))
(assert (x121 x761))
(assert (= (x570 (x1829 1747092918)) 1747092918))
(assert (= (and x68 x615) x1362))
(assert (x1542 x1522))
(assert (= x857 (x570 (x430 x857))))
(assert (= x1459 (and x802 (not x717))))
(assert (x2034 x1909))
(assert (= x1089 (and (not x1062) x492)))
(assert (=> (>= 10000 x1600) (= (x1829 x1600) (x430 x1600))))
(assert (x687 x1390))
(assert (x121 x2028))
(assert (= x1601 (and (not x1402) x1182)))
(assert (x121 x375))
(assert (x121 x791))
(assert (x121 x607))
(assert (= (and x1885 x1567) x171))
(assert (x121 x344))
(assert (x121 x1475))
(assert (x2034 x1600))
(assert (= x385 (x570 (x430 x385))))
(assert (= (and x2141 (not x1309)) x1544))
(assert (x121 x1117))
(assert (x121 x145))
(assert (= (=> (and (= x437 x39) (= x147 0)) x1919) x1200))
(assert (x121 x89))
(assert (x121 x1870))
(assert (x121 x1533))
(assert (= (and (not x1779) x1762) x846))
(assert (x687 x1343))
(assert (= x538 (and x1815 (not x1264))))
(assert (= x178 (and x1413 x152)))
(assert (x121 x1348))
(assert (= x447 (and x1172 (not x688))))
(assert (x121 x294))
(assert (x2034 x1929))
(assert (= (and x486 x2108) x899))
(assert (= x1449 (x570 (x430 x1449))))
(assert (= x1993 (and (not x356) x2146)))
(assert (= x1852 (and x1004 x424)))
(assert (x687 x402))
(assert (x121 x1177))
(assert (x121 x650))
(assert (= x934 (=> (and (= x2019 x2079) (= x1130 x826)) x464)))
(assert (= x2104 (and (not x1644) x1410)))
(assert (x381 x652))
(assert (x121 x2022))
(assert (= x1706 (and x1253 x1825)))
(assert (= x1965 (and x1464 (not x518))))
(assert (= x574 (and x356 x2146)))
(assert (x121 x1478))
(assert (x1655 x376 x2096))
(assert (= (and x155 (not x593)) x1733))
(assert (x121 x780))
(assert (= (and x1304 x1222) x796))
(assert (x1786 x1628))
(assert (x121 x227))
(assert (= (and x1873 (not x629)) x1408))
(assert (x1542 x1979))
(assert (= (and x912 x2001) x707))
(assert (= x985 (and x2015 x1421)))
(assert (x121 x1603))
(assert (x121 x1137))
(assert (x121 x83))
(assert (x121 x1401))
(assert (x121 x466))
(assert (x381 x1498))
(assert (x121 x986))
(assert (x1786 x1400))
(assert (x2034 x1818))
(assert (x121 x864))
(assert (= (and x2048 x2145) x1790))
(assert (x121 x2121))
(assert (= (and (not x236) x407) x640))
(assert (= (=> (and (or (and (and (not (< 10141204801825835211973625643007 x1628)) (<= 0 x53) (< (+ x53 x187) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x187 x390) (> x53 0) (= x714 x53) (= x248 x765) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x594)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000 x1635)) (not (> 1 x950)) (= x594 (x278 x1628)) (= (x1329 (- x377 x741)) x1635) (= (x1329 (- 0 x594)) x248) (= x950 (+ x1216 x714)) (= (x1329 (- x950 1)) x9) (= x1216 x187) (= (div x9 x53) x1628) (>= 18446744073709551615 x53) (= (* x1635 1000000000000000) x390) (> 18446744073709551616 x53) (not (< 20282409603651670423947251286015 x1628)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1537))) x113) (and (not x113) (and (not (< 20282409603651670423947251286015 x917)) (< x153 18446744073709551616) (= x917 (div x1148 x153)) (>= x153 0) (> x153 0) (= x765 x917) (< (* x1537 1000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* 1000000000000000 x1537) x1148) (<= x153 18446744073709551615) (not (< 10141204801825835211973625643007 x917))))) (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x377) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x377) true) (< x377 0))) x664) (= 0 x1165) (= x515 (ite (or (and (> x741 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x691 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x741 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x691)) (> x691 x741))) 1 0)) (= x1419 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x377) true) (> 0 x377)) (> x377 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0)) (= x1291 0) (= x1291 (x795 x93 x515)) (= (ite (not x664) 1 0) x93) (= x1922 (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1578) (<= x741 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1578 x741) (= (<= x741 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1578 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= (x539 (+ x377 57896044618658097711785492504343953926634992332820282019728792003956564819968)) x691) (= x113 (or (> x1537 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1537 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1537))))) (= (x795 x1419 x1922) x1165) (= (x539 (+ x377 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1578) (= (x1329 (- x741 x377)) x1537))) x1692) x1461))
(assert (= x1574 (and (not x737) x1648)))
(assert (x121 x1098))
(assert (x121 x2024))
(assert (x121 x1053))
(assert (x381 x693))
(assert (x121 x1689))
(assert (= (=> (and (= x147 1) (= 32 x39)) x1919) x1506))
(assert (x1655 x1143 x517))
(assert (x121 x1131))
(assert (x121 x975))
(assert (= (or x31 x483) x984))
(assert (x121 x149))
(assert (= (and x456 (not x921)) x1185))
(assert (x687 x1376))
(assert (= x253 (or x476 x1864)))
(assert (= (or x1911 x731 x796 x1614 x1086 x1605 x469 x1119 x1509 x1848 x1241 x640 x982 x1630 x1652 x1517 x1295 x352 x753 x1731 x261 x819 x646 x1132 x365 x65 x690 x1347 x681 x1319 x574 x2013 x2100 x634 x387 x1104 x1015 x1790 x1485 x1796 x1696 x1777 x1452 x295 x1588 x694 x1716 x579 x1153 x1595 x2047 x1339 x479 x91 x5 x471 x863 x1685 x450 x844 x122 x1788 x2073 x1772 x1195 x1300 x115 x1969 x507 x1982 x17 x915 x76 x1254 x1248 x1721 x441 x1918 x1683 x1770 x142 x421 x1183 x2112 x1753 x1810 x370 x1668 x1840 x1638 x740 x2087 x743 x903 x1102 x1426 x619 x257 x1383 x1717) x1834))
(assert (= (and (not x1299) x1078) x474))
(assert (x687 x515))
(assert (x121 x1628))
(assert (x121 x506))
(assert (x121 x2063))
(assert (= 1153557995 (x570 (x1829 1153557995))))
(assert (x121 x1159))
(assert (x388 x484))
(assert (x121 x968))
(assert (x687 255))
(assert (= (and (not x585) x1366) x241))
(assert (x121 x1042))
(assert (= 1099511627775 (x570 (x1829 1099511627775))))
(assert (x121 x41))
(assert (x121 x2084))
(assert (= x30 (and x232 x1564)))
(assert (x121 x422))
(assert (x121 x1166))
(assert (= (and x50 x7) x396))
(assert (= x1854 (and x703 (not x1032))))
(assert (= x913 (or x513 x1305)))
(assert (x121 x1550))
(assert (x687 x1922))
(assert (x687 x607))
(assert (= x261 (and (not x1206) x97)))
(assert (x121 x1877))
(assert (x121 x1428))
(assert (x121 x900))
(assert (x121 x470))
(assert (= x770 (x570 (x430 x770))))
(assert (x121 x1031))
(assert (x121 x1134))
(assert (= (x430 1134440005) (x1829 1134440005)))
(assert (x121 x1204))
(assert (x121 x1988))
(assert (= x519 (and (not x118) x1733)))
(assert (x121 x636))
(assert (x121 x2089))
(assert (x121 x1530))
(assert (x121 x1274))
(assert (x121 x1801))
(assert (x121 x935))
(assert (x121 x173))
(assert (= (=> (= x225 (ite x1943 x1491 x355)) x225) x221))
(assert (x121 x1923))
(assert (x121 x1730))
(assert (x1542 x1356))
(assert (= (and x2107 x1785) x537))
(assert (x1542 x1240))
(assert (x121 x1021))
(assert (= x694 (and x666 x1362)))
(assert (x121 x1262))
(assert (= (or x119 x655) x773))
(assert (= (=> (and (and (= x1584 (x795 20282409603651670423947251286015 x1782)) (= (< 0 x1584) x757)) (or (not x757) (and x757 (and (< x153 18446744073709551616) (<= x153 18446744073709551615) (<= 0 x153))))) x70) x829))
(assert (= (and x1012 x429) x2090))
(assert (x121 x1740))
(assert (x121 x1292))
(assert (= x1386 (x570 (x430 x1386))))
(assert (x121 x675))
(assert (= x108 (or x1806 x1197)))
(assert (x121 x2060))
(assert (= (x570 (x430 x1521)) x1521))
(assert (x1655 x1728 x836))
(assert (x121 x1013))
(assert (x121 x764))
(assert (= (x1829 2609461451) (x430 2609461451)))
(assert (= (=> (and (= (x795 20282409603651670423947251286015 x1518) x630) (= (x795 1461501637330902918203684832716283019655932542975 x1975) x636) (= (x1024 x1658) x1664) (>= x1664 0) (= x1658 (x1899 (x430 x636) (x1829 5) 0)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1483)) (> 0 x1483)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1483)) x1779) (>= 20282409603651670423947251286015 x1664)) (and (=> (not x1779) x829) (=> (and x1779 (= (= x1483 57896044618658097711785492504343953926634992332820282019728792003956564819968) x1184)) (and (=> x1184 x2131) (=> (and (not x1184) (and (= (> x273 x242) x797) (= x242 (x1329 (- x1586 x422))))) (and (=> (and (not x797) (and (<= 0 x1811) (>= 20282409603651670423947251286015 x1811) (= x1811 (x536 x895)) (> 20282409603651670423947251286016 x1811) (= x895 (x1899 (x430 x1633) (x1829 5) 0)) (= (x278 x1811) x372) (= x1672 (or (> x372 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x372)) (< x372 0)))))) (and (=> (and (= 1 x2065) (not x1672)) x1228) (=> (and x1672 (and (>= x1909 0) (>= 65535 x1909) (= x431 (or (and (> 0 x372) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x372) true)) (> x372 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x1909 65536) (= (x553 x1438) x1909) (= (x1899 (x430 x1633) (x1829 5) 0) x1438))) (and (=> (and (and (= x2049 (= x372 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (>= x53 0) (<= x53 18446744073709551615) (> 18446744073709551616 x53)) x431) (and (=> (and (not x2049) (and (= (x1329 (- 0 x372)) x1042) (= (> x1042 57896044618658097711785492504343953926634992332820282019728792003956564819967) x1169))) (and (=> (and (and (= x2086 (x1329 (- 0 x1042))) (= x311 x2086)) (not x1169)) x1999) (=> x1169 x2131))) (=> x2049 x2131))) (=> (and (and (<= x153 18446744073709551615) (<= 0 x153) (= x1309 (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x372)) (> 18446744073709551616 x153)) (not x431)) (and (=> (and (= x372 x311) (not x1309)) x1999) (=> x1309 x2131))))))) (=> x797 x2131))))))) x297))
(assert (x121 x307))
(assert (x121 x1349))
(assert (= x1300 (and x793 x1451)))
(assert (x627 x1558))
(assert (= x2067 (or x1497 x1852)))
(assert (x121 x569))
(assert (x121 x528))
(assert (x687 x1782))
(assert (= x606 (and x1410 x1644)))
(assert (x687 x415))
(assert (= (and x340 (not x1047)) x1339))
(assert (x121 x1129))
(assert (x121 x1560))
(assert (x121 x2099))
(assert (= x526 (and x1830 x529)))
(assert (= x5 (and (not x493) x1907)))
(assert (x121 x974))
(assert (x121 x1249))
(assert (x121 x851))
(assert (x121 x693))
(assert (x2034 x1449))
(assert (= x702 (=> (and (and (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1385) (and (< x1385 32) (= (<= x1385 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x759 (x1163 128)) (not (= 0 x1059)) (= x759 x1432)) (and (or (and (and (= x3 x153) (= x1967 x53) (>= 18446744073709551615 x53) (>= x153 0) (<= x153 18446744073709551615) (< x153 18446744073709551616) (< x53 18446744073709551616) (<= 0 x53)) (not x1693)) (and x1693 (and (>= x53 0) (> 18446744073709551616 x53) (<= x153 18446744073709551615) (= x153 x3) (= x53 x1967) (<= x53 18446744073709551615) (> 18446744073709551616 x153) (<= 0 x153)))) (and (= x532 x310) (= x89 x1667) (= (x1173 (x430 x1633)) x1543) (not (> 1519696081 x699)) (= x1265 x1432) (<= x83 1099511627775) (= 1889567281 x699) (< x699 2031398087) (not (> 927746484 x699)) (= x309 (x1329 (- x1558 x83))) (<= 0 x623) (= x482 x227) (= 0 x89) (not (> x83 x2040)) (= x1558 x2040) (>= x83 0) (>= 1461501637330902918203684832716283019655932542975 x227) (not (= 1844900739 x699)) (not (= x699 1747092918)) (not (= x699 1519696081)) (> 1099511627776 x83) (<= 0 x294) (= x310 x1657) (= x1693 (= x294 0)) (<= x1657 1461501637330902918203684832716283019655932542975) (> x1543 0) (= x1471 x482) (<= 0 x227) (>= 255 x294) (< x294 256) (>= 1461501637330902918203684832716283019655932542975 x623) (= (x795 1099511627775 x309) x1131) (<= x1471 1461501637330902918203684832716283019655932542975) (not (= 1736444767 x699)) (not (> 1176186698 x699)) (> 1099511627776 x2040) (not (= x699 1752364190)) (>= x1657 0)))) x1190)))
(assert (= (or x1324 x1167 x830) x663))
(assert (x121 x760))
(assert (x121 x947))
(assert (= x20 (x570 (x430 x20))))
(assert (x1542 x1518))
(assert (x121 x2115))
(assert (x121 x1496))
(assert (= (x1829 1736444767) (x430 1736444767)))
(assert (= x1010 (=> (and (= x1691 x2019) (= x1856 x1130)) x464)))
(assert (x121 x1219))
(assert (x121 x1472))
(assert (= (and x1563 x503) x1473))
(assert (x121 x234))
(assert (x121 x402))
(assert (= (x570 (x1829 3283311230)) 3283311230))
(assert (x1542 x1400))
(assert (= x341 (=> (and (= x868 (not (> x359 1))) (= x359 (x795 255 x346))) (and x868 (=> (and (= x1006 x596) (= x1137 x2120)) x87)))))
(assert (= (or x860 (and x1035 (not x783))) x31))
(assert (x121 x480))
(assert (x121 x342))
(assert (x687 x1801))
(assert (x121 x803))
(assert (x121 x1175))
(assert (= x603 (=> (and (= (not (> x1002 1)) x1423) (= (x795 255 x346) x1002)) (and (=> (= x181 x281) x1775) x1423))))
(assert (= (and x1606 x1096) x1211))
(assert (x687 x716))
(assert (= (and (not x1971) x1878) x1559))
(assert (= (or (and x1286 x1976) x241 x1991 (and (not x1961) x18) x606) x1646))
(assert (x121 x1586))
(assert (= (x570 (x430 x1818)) x1818))
(assert (x121 x1657))
(assert (x121 x1454))
(assert (x121 x1621))
(assert (= 20282409603651670423947251286016 (x570 (x1829 20282409603651670423947251286016))))
(assert (x121 x995))
(assert (= (and x2027 (not x328)) x1295))
(assert (x381 x1503))
(assert (x121 x918))
(assert (= (and x1940 (not x1028)) x1587))
(assert (x121 x532))
(assert (x121 x1937))
(assert (= x599 (and x1648 x737)))
(assert (x121 x792))
(assert (= (x430 1752364190) (x1829 1752364190)))
(assert (= (x430 927746484) (x1829 927746484)))
(assert (x121 x831))
(assert (x381 x1471))
(assert (x1655 x41 x726))
(assert (= x1619 (and (not x500) x1180)))
(assert (x121 x217))
(assert (=> (>= 10000 x1909) (= (x430 x1909) (x1829 x1909))))
(assert (x121 x939))
(assert (x121 x16))
(assert (x121 x723))
(assert (x1786 x1926))
(assert (x687 x853))
(assert (x121 x1505))
(assert (x121 x823))
(assert (= (and (not x2116) x1263) x842))
(assert (x121 x1112))
(assert (x1786 x1343))
(assert (= x1313 (or (and x909 x929) (and (not x2) x37))))
(assert (= (x570 (x1829 4072298103)) 4072298103))
(assert (= x1113 (or x557 x967)))
(assert (= x432 (and x445 x1774)))
(assert (x121 x1519))
(assert (x121 x1728))
(assert (x1542 x1926))
(assert (x121 x1979))
(assert (x687 x1554))
(assert (x121 x327))
(assert (x121 x453))
(assert (x121 x208))
(assert (x687 1461501637330902918203684832716283019655932542975))
(assert (x121 x1247))
(assert (= x1311 (=> (and (= x1681 1) (= x920 x1869) (> x682 0) (= x556 (ite (and (< x1869 57896044618658097711785492504343953926634992332820282019728792003956564819968) (= false (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1869))) 1 0)) (= x1850 (ite (or (> x1869 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1869 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1869 0))) 1 0)) (= x722 (x795 x1850 x556)) (= (ite (and (< 0 x1869) (= true (<= x1869 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1456) (= x722 0) (= 1 x109) (= x850 0) (= (> x1129 0) x1571) (= (x795 255 x346) x1129) (= x1533 (x795 x1456 x534)) (= x534 (ite (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1869) 1 0)) (= (ite (or (= 0 x920) (= x682 0)) 0 (ite (= (< x682 57896044618658097711785492504343953926634992332820282019728792003956564819968) (< x920 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (div (ite (< x920 57896044618658097711785492504343953926634992332820282019728792003956564819968) x920 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x920 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x682) x682 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x682 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x920) x920 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x920 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x682) x682 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1329 (- x682 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x339) (= x1533 0)) (and (=> (and (not x1571) (and (= x339 x1040) (= x2126 288))) x1232) (=> (and x1571 (and (= (x1899 (x1829 0) (x1829 9) 0) x1375) (<= 0 x779) (= x779 (x1970 x1934)) (<= x779 255) (> 1461501637330902918203684832716283019655932542976 x265) (= (x1899 (x430 x265) x616 0) x1934) (<= 0 x265) (>= 1461501637330902918203684832716283019655932542975 x265) (< x779 256) (= (x1899 (x430 x2109) (x1829 11) 0) x616) (= (= x779 0) x1115) (= x265 (x1050 x1375)))) (and (=> (and (= x1095 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x339)) (< x339 0)) (> x339 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x1115)) (and (=> (and (and (= (x633 x1968) x1493) (= (x1899 (x430 x2032) x305 0) x1011) (= 0 x1955) (= x1125 (x2092 x331)) (> 1461501637330902918203684832716283019655932542976 x1493) (<= 0 x2066) (>= x1744 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1287) (= x1390 (ite (not x999) 1 0)) (>= x1853 0) (< x729 18446744073709551616) (= x558 0) (= x2066 x1262) (= (x488 x1882) x692) (= (x1050 x290) x2066) (= (x795 1461501637330902918203684832716283019655932542975 x576) x1262) (>= 1461501637330902918203684832716283019655932542975 x2066) (<= x1747 18446744073709551615) (= x1932 x584) (> 340282366920938463463374607431768211456 x1287) (>= x729 0) (= (x1329 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x339)) x1026) (not (> x804 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x692 18446744073709551616) (= x760 (div x706 x1236)) (>= 340282366920938463463374607431768211455 x1125) (= x1065 (x2074 672)) (= x1608 (x2076 640)) (= (x1899 (x1829 0) (x1829 9) 0) x290) (<= x1287 340282366920938463463374607431768211455) (= x1208 1) (<= 0 x2007) (= x999 (or (> x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x339 0)))) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1026) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x804)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x804) (<= x1026 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x804 x1026))) 1 0) x1176) (<= 0 x1747) (= (x1899 (x1829 0) (x1829 10) 0) x1968) (= x1063 544) (= (x315 576) x404) (= x363 (= 1 x692)) (< x1747 18446744073709551616) (= (x1726 544) x302) (= x1287 x706) (= (x795 18446744073709551615 x1065) x247) (> 340282366920938463463374607431768211456 x1125) (= (x1403 x1011) x1287) (< (* x247 x760) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1493) (<= 0 x1125) (= (x815 x1357 1) x331) (= x1236 (x795 18446744073709551615 x1608)) (> 1461501637330902918203684832716283019655932542976 x2007) (<= x729 18446744073709551615) (= x1744 (x1927 x1357)) (> x1236 0) (> 1461501637330902918203684832716283019655932542976 x2066) (<= x1853 255) (= (x1514 608) x1925) (= 800 x894) (= x2007 (x1843 x1882)) (= (x315 576) x576) (= x305 (x1899 (x430 x482) (x1829 6) 0)) (= x1955 (x795 255 x302)) (= x1882 (x815 x1968 1)) (= x1081 (x1329 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x339))) (>= x692 0) (= (ite (or (and (> x804 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1081 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1081 x804) (= (<= x804 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1081 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x1376) (= x1853 (x283 x1968)) (< x1853 256) (= (x539 (+ x804 x339)) x584) (= x2032 (x795 1461501637330902918203684832716283019655932542975 x404)) (= (div x425 1000000000000000000) x804) (<= x2007 1461501637330902918203684832716283019655932542975) (= 0 x1511) (>= 18446744073709551615 x1744) (= (* x247 x760) x425) (= (ite (or (> x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x339)) (< x339 0))) 1 0) x1242) (= (x795 x1390 x1176) x620) (<= x692 18446744073709551615) x363 (= x620 0) (<= x1493 1461501637330902918203684832716283019655932542975) (= x729 (x2008 x1357)) (= x1357 (x815 x1882 1)) (= (x781 x1357) x1747) (<= 0 x1287) (= x1511 (x795 x1242 x1376)) (> 18446744073709551616 x1744)) x1095) x1758) (=> (and (and (= 288 x1018) (= 1 x288)) (not x1095)) x1460))) (=> (and x1115 (and (= x894 288) (= x1932 x339))) x1758)))))))
(assert (x2034 x1218))
(assert (x121 x351))
(assert (x121 x293))
(assert (x121 x645))
(assert (= (and x1706 x1269) x209))
(assert (x121 x1026))
(assert (= (=> (and (= x995 x813) (= x1748 x1294)) x551) x2113))
(assert (x121 x594))
(assert (= x23 (and x2014 (not x945))))
(assert (= x1886 (and x361 x324)))
(assert (x687 x1065))
(assert (= (x1829 1519696081) (x430 1519696081)))
(assert (x121 x1925))
(assert (x121 x1645))
(assert (= (x430 2492599498) (x1829 2492599498)))
(assert (= (and x628 x1693) x893))
(assert (= (x430 3283311230) (x1829 3283311230)))
(assert (x388 x346))
(assert (= x1960 (and (not x2049) x1005)))
(assert (x121 x1781))
(assert (x1655 x32 x1771))
(assert (= x1254 (and x171 x901)))
(assert (= (and x2118 x1640) x915))
(assert (x121 x618))
(assert (x121 x577))
(assert (x687 x1809))
(assert (x121 x151))
(assert (= x1118 (=> (and (= x826 1) (= x2079 32)) x934)))
(assert (x121 x2088))
(assert (x121 x1955))
(assert (= (and x328 x2027) x1678))
(assert (= (and (not x168) x869) x2045))
(assert (x121 x1091))
(assert (x121 x69))
(assert (x121 x835))
(assert (= x2072 (and x1579 x178)))
(assert (x121 x1787))
(assert (x121 x1856))
(assert (x121 x1226))
(assert (x121 x1747))
(assert (x121 x1633))
(assert (x1655 x217 x900))
(assert (= (or x1089 x183) x2051))
(assert (x121 x1351))
(assert (= (and x1017 x1227) x819))
(assert (x121 x482))
(assert (x121 x1343))
(assert (x121 x572))
(assert (= (x570 (x1829 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (= x793 (and (not x2020) x22)))
(assert (x121 x782))
(assert (= (and x1095 x1576) x1157))
(assert (x121 x1155))
(assert (x121 x136))
(assert (x121 x1364))
(assert (x121 x1289))
(assert (= x1721 (and x1886 (not x264))))
(assert (= (or x1465 x271) x614))
(assert (x121 x774))
(assert (x687 x319))
(assert (x121 x262))
(assert (= x1407 (and x1662 x523)))
(assert (x687 x1926))
(assert (x121 x1048))
(assert (x121 x457))
(assert (= x775 (and x1038 x696)))
(assert (x121 x285))
(assert (= x1561 (or x519 x1962)))
(assert (x121 x19))
(assert (x121 x237))
(assert (x121 x1314))
(assert (x121 x1294))
(assert (x121 x1003))
(assert (= x4 (and (not x2048) x2145)))
(assert (= (x570 (x1829 3833100637)) 3833100637))
(assert (x121 x1255))
(assert (x121 x1055))
(assert (= (and x431 x279) x1005))
(assert (= x141 (x570 (x430 x141))))
(assert (x121 x195))
(assert (x687 x1176))
(assert (= x29 (and (not x345) x140)))
(assert (x2034 x1989))
(assert (x1655 x303 x1352))
(assert (x121 x1703))
(assert (= (and x1301 x561) x155))
(assert (x121 x1412))
(assert (x121 x45))
(assert (x121 x1782))
(assert (x121 x1203))
(assert (= x183 (and x492 x1062)))
(assert (x687 x2003))
(assert (x121 x1327))
(assert (x121 x2079))
(assert (x121 x1120))
(assert (x121 x313))
(assert (x121 x1996))
(assert (= (and (not x51) x304) x667))
(assert (= x863 (and x1699 (not x2143))))
(assert (= x1901 (=> (and (or (and (and (<= 0 x53) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1524)) (= (x1329 (- 0 x790)) x1524) (= x741 x1795) (<= x53 18446744073709551615) (< x53 18446744073709551616) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x790)) (= x1795 (x1329 (- 0 x1524)))) x1862) (and (and (< x153 18446744073709551616) (<= x153 18446744073709551615) (= x741 x790) (>= x153 0) (not (> x790 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x1862))) (and (= (x1899 (x430 x482) (x1829 5) 0) x1196) (< x1455 18446744073709551616) (>= x1455 0) (>= 20282409603651670423947251286015 x1343) (> 65536 x1784) (<= 0 x1084) (< x126 256) (< x1343 20282409603651670423947251286016) (<= 0 x126) (>= 255 x126) (not (> x377 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (x62 x1196) x1084) (>= 18446744073709551615 x1084) (= (x278 x1343) x790) (>= 18446744073709551615 x1455) (<= x1784 65535) (< x1084 18446744073709551616) (= (or (and (> 0 x790) (= (<= x790 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x790 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1862) (= 128 x508) (= x1455 (x175 x1196)) (<= 0 x1784) (>= x1343 0) (= x1784 (x592 x1196)) (= (x54 x1196) x1343) (= (x1807 x1196) x126))) x1461)))
(assert (x121 x785))
(assert (x121 x1974))
(assert (= (and x1078 x1299) x387))
(assert (x687 x1916))
(assert (x121 x1675))
(assert (= (or x47 (and x1687 x312)) x1626))
(assert (x121 x534))
(assert (= x469 (and (not x1379) x956)))
(assert (x687 x1987))
(assert (= (x430 65536) (x1829 65536)))
(assert (x121 x1239))
(assert (= (and x913 x624) x1620))
(assert (= (x1829 340282366920938463463374607431768211456) (x430 340282366920938463463374607431768211456)))
(assert (x121 x1156))
(assert (= x486 (or x538 x1612)))
(assert (= x1907 (and x1891 x1951)))
(assert (= (or x932 x1494 x1847) x1709))
(assert (= (x1829 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x430 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (and x340 x1047) x1720))
(assert (= (and (not x1259) x1486) x115))
(assert (x121 x2032))
(assert (= (and x461 (not x685)) x1699))
(assert (x381 x399))
(assert (x121 x1818))
(assert (x121 x1750))
(assert (= x657 (or x200 x1602)))
(assert (x121 x78))
(assert (x687 x1467))
(assert (x121 x897))
(assert (x121 x317))
(assert (x121 x806))
(assert (x121 x1492))
(assert (x687 x588))
(assert (x1655 x1138 x274))
(assert (x121 x963))
(assert (x121 x1581))
(assert (x121 x1978))
(assert (x121 x93))
(assert (x121 x346))
(assert (x1542 x2099))
(assert (= (x430 1201997079) (x1829 1201997079)))
(assert (= (and (not x648) x1599) x1833))
(assert (x121 x96))
(assert (= x1517 (and x209 (not x1023))))
(assert (= x1985 (and (not x170) x1601)))
(assert (x1655 x1039 x1669))
(assert (x2034 x986))
(assert (x121 x385))
(assert (x381 x404))
(assert (x121 x1439))
(assert (x121 x1330))
(assert (= (x570 (x815 x392 1)) (+ (x570 x392) 1)))
(assert (x121 x443))
(assert (x121 x2009))
(assert (x121 x946))
(assert (x121 x1471))
(assert (= (and x998 x1958) x1106))
(assert (x1786 x267))
(assert (= 20282409603651670423947251286015 (x570 (x1829 20282409603651670423947251286015))))
(assert (x687 x245))
(assert (x121 x2044))
(assert (x687 x1941))
(assert (x687 x764))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x570 (x1829 57896044618658097711785492504343953926634992332820282019728792003956564819967))))
(assert (x121 x763))
(assert (=> (<= x1539 10000) (= (x430 x1539) (x1829 x1539))))
(assert (x121 x635))
(assert (= (x570 (x815 x1592 1)) (+ (x570 x1592) 1)))
(assert (x121 x1773))
(assert (x121 x527))
(assert (= x1217 (and x1213 x2018)))
(assert (x121 x1285))
(assert (= (+ (x570 x1882) 1) (x570 (x815 x1882 1))))
(assert (x121 x584))
(assert (= (x570 (x1829 404098525)) 404098525))
(assert (x687 x1850))
(assert (x687 x576))
(assert (x121 x1536))
(assert (= 599290589 (x570 (x1829 599290589))))
(assert (x2034 x1521))
(assert (x121 x691))
(assert (x687 x1915))
(assert (= (x570 (x1829 2834295333)) 2834295333))
(assert (x687 x274))
(assert (x1109 x1462))
(assert (x121 x1225))
(assert (= (x570 (x1829 2835717307)) 2835717307))
(assert (x121 x1388))
(assert (x121 x765))
(assert (x121 x762))
(assert (= x1271 (and x1110 (not x1187))))
(assert (x121 x1742))
(assert (= x1605 (and x1917 x599)))
(assert (= x2098 (and (not x28) x29)))
(assert (x121 x9))
(assert (x687 x1244))
(assert (x121 x950))
(assert (x121 x1444))
(assert (x121 x512))
(assert (x121 x77))
(assert (x121 x1171))
(assert (= x2056 (and x818 x1457)))
(assert (= x956 (and (not x582) x721)))
(assert (x121 x962))
(assert (x121 x979))
(assert (= x1770 (and x456 x921)))
(assert (x687 x376))
(assert (= (and (not x14) x491) x1683))
(assert (x121 x1411))
(assert (= (=> (and (= x1317 x883) (= x975 x993) (= x173 x792) (= x589 x166)) x1221) x678))
(assert (= x1324 (and (not x2001) x912)))
(assert (x121 x911))
(assert (=> (<= x1633 10000) (= (x430 x1633) (x1829 x1633))))
(assert (x121 x103))
(assert (x2034 x1634))
(assert (x121 x147))
(assert (x1655 x1562 x313))
(assert (= 65535 (x570 (x1829 65535))))
(assert (= (or x1629 x442) x1878))
(assert (= x754 (or x58 x1237)))
(assert (=> (<= x1818 10000) (= (x1829 x1818) (x430 x1818))))
(assert (x121 x2068))
(assert (x121 x1659))
(assert (x2034 x131))
(assert (= (and x2137 (not x1337)) x1751))
(assert (x121 x1712))
(assert (=> (<= x636 10000) (= (x430 x636) (x1829 x636))))
(assert (x121 x267))
(assert (x121 x704))
(assert (x121 x729))
(assert (x121 x2059))
(assert (x687 x635))
(assert (= x1221 (=> (and (not (< x1134 404098525)) (> 2031398087 x1134) (not (= 412857073 x1134)) (< x1134 599290589) (not (= x1134 404098525)) (< 0 x1135) (< x1134 927746484) (<= x1589 1461501637330902918203684832716283019655932542975) (= (x1173 (x430 x1633)) x1135) (= x1239 128) (>= 1461501637330902918203684832716283019655932542975 x1633) (= x1146 (= x20 x1589)) (= x1049 x1589) (= 468353030 x1134)) (and (=> (and (not x1146) (= (= x1589 x1818) x668)) (and (=> (and x668 (and (= x180 x1633) (= x867 (x1173 (x430 x1818))) (not (< x487 4)) (= 1889567281 x1773) (= x1507 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x262 (x1329 (- x487 4))) (= x487 36) (= x487 36) (< 0 x867) (not (= x1773 826074471)) (not (> 826074471 x1773)) (= x477 (or (> x262 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x262) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x262))))))) (and (=> x477 x1158) (=> (and (not x477) (= x2021 (= x1633 x180))) (and (=> (and x2021 (and (= x1617 1) (= x780 (x786 x2101)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x780) (<= 0 x780) (= x2101 (x1899 (x430 x1633) (x1829 1) 0)) (= x335 32))) x1094) (=> (not x2021) x1158))))) (=> (and (= (= x1589 x141) x1564) (not x668)) (and (=> (and x1564 (and (= x1680 (x1329 (- x676 4))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1724) (= 36 x676) (= 36 x676) (= (x1173 (x430 x141)) x1877) (not (< x2093 826074471)) (not (> 4 x676)) (= (or (> x1680 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1680 32) (= (<= x1680 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1556) (< 0 x1877) (not (= x2093 826074471)) (= 1889567281 x2093) (= x1923 x1633))) (and (=> (and (= x933 (= x1633 x1923)) (not x1556)) (and (=> (and x933 (and (<= x444 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x354 (x1899 (x430 x1633) (x1829 1) 0)) (= x858 32) (>= x444 0) (= x116 1) (= x444 (x1336 x354)))) x987) (=> (not x933) x235))) (=> x1556 x235))) (=> (and (and (= (= x1633 x1589) x1894) (and x1894 (and (= x2084 36) (> x185 0) (= (x1329 (- x2084 4)) x1892) (not (= 1519696081 x1621)) (< x1621 2031398087) (not (= x1621 1747092918)) (= x2084 36) (not (> 1519696081 x1621)) (not (> 1176186698 x1621)) (= x1633 x1924) (not (= x1621 1844900739)) (= x185 (x1173 (x430 x1633))) (not (< x1621 927746484)) (= x1621 1889567281) (not (= 1752364190 x1621)) (not (= x1621 1736444767)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x571) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1892) (and (< x1892 32) (= true (<= x1892 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1557) (not (< x2084 4))))) (not x1564)) (and (=> (and (not x1557) (= (= x1633 x1924) x1416)) (and (=> (not x1416) x660) (=> (and x1416 (and (> 1099511627776 x792) (<= 0 x792) (>= 1099511627775 x792) (= (< x962 1099511627776) x1662))) (and (=> (and (= x1302 (> x792 x962)) x1662) (and (=> (and (and (or (and x1243 (and (= x1317 x736) (<= x1317 18446744073709551615) (> 18446744073709551616 x975) (<= 0 x975) (= x975 x541) (>= 18446744073709551615 x975) (>= x1317 0) (< x1317 18446744073709551616))) (and (not x1243) (and (>= x975 0) (< x1317 18446744073709551616) (= x1317 x736) (= x541 x975) (>= 18446744073709551615 x1317) (>= x1317 0) (>= 18446744073709551615 x975) (> 18446744073709551616 x975)))) (and (= x2009 (x795 1099511627775 x2024)) (> 256 x166) (>= 255 x166) (= (= 0 x166) x1243) (>= x166 0) (= x2024 (x1329 (- x962 x792))))) (not x1302)) x308) (=> x1302 x660))) (=> (not x1662) x660))))) (=> x1557 x660))))))) (=> (and (and (= x1633 x1161) (not (< x2053 826074471)) (not (= 826074471 x2053)) (= x2053 1889567281) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1427) (= 36 x820) (not (< x820 4)) (< 0 x969) (= x969 (x1173 (x430 x20))) (= x405 (or (and (> 32 x1560) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1560) true)) (> x1560 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 36 x820) (= (x1329 (- x820 4)) x1560)) x1146) (and (=> x405 x1425) (=> (and (= (= x1633 x1161) x157) (not x405)) (and (=> (and (and (= x782 (x1212 x953)) (<= 0 x782) (= 1 x1278) (= x953 (x1899 (x430 x1633) (x1829 1) 0)) (= x2124 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x782)) x157) x598) (=> (not x157) x1425)))))))))
(assert (x687 x267))
(assert (x687 x1890))
(assert (= x1849 (and x957 x1360)))
(assert (x2034 x385))
(assert (x381 x880))
(assert (x121 x2005))
(assert (x121 x1456))
(assert (x121 x163))
(assert (= x1909 (x570 (x430 x1909))))
(assert (= x2013 (and x1389 (not x219))))
(assert (x627 x1244))
(assert (x121 x1087))
(assert (x121 x1744))
(assert (x1331 x2003))
(assert (x121 x1257))
(assert (x121 x1124))
(assert (= (and (not x964) x1235) x1465))
(assert (x121 x1084))
(assert (x687 x313))
(assert (x121 x890))
(assert (= x523 (and x669 x1416)))
(assert (x121 x970))
(assert (= true x522))
(assert (x121 x511))
(assert (= (x1829 1176186698) (x430 1176186698)))
(assert (x1655 x245 x1145))
(assert (x121 x203))
(assert (= x1076 (and x910 (not x1894))))
(assert (= (x430 1000000000000000000) (x1829 1000000000000000000)))
(assert (= (x430 3454435393) (x1829 3454435393)))
(assert (= x139 (and x2114 x4)))
(assert (= (=> (and (= x153 x1317) (not (= 0 x1130)) (= x2127 (not x84)) (= x53 x975) (= x83 x792) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2019) (and (< x2019 32) (= true (<= x2019 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (= x835 0) x84) (= (ite x2127 1 0) x105) (= x835 x105) (> x835 0) (= x166 x294) (= (x436 x1207) x835)) x1221) x1538))
(assert (= (and (not x1567) x1885) x1347))
(assert (x121 x1697))
(assert (x687 x1356))
(assert (x687 x326))
(assert (x121 x288))
(assert (= (x1829 340282366920938463463374607431768211455) (x430 340282366920938463463374607431768211455)))
(assert (= x191 (and (not x1945) x1984)))
(assert (x121 x156))
(assert (= x498 (or x604 x2056)))
(assert (= (and x1172 x688) x2112))
(assert (= (+ 1 (x570 x1968)) (x570 (x815 x1968 1))))
(assert (x1109 x319))
(assert (x121 x2029))
(assert (= (=> (and (or (and (and (= x336 (+ x207 x100)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2125 x1084)) (<= x330 18446744073709551615) (= x100 x1084) (<= 0 x330) (> 18446744073709551616 x330) (= x1064 (x795 18446744073709551615 x828)) (= x207 x2125) (= x2125 (div x595 x12)) (not (> x1455 x330)) (> x704 0) (= (* x590 x1064) x94) (= (x1329 (- x330 x1455)) x828) (= x1582 x336) (= x590 (x795 20282409603651670423947251286015 x790)) (not (< 18446744073709551615 x2125)) (< (* x590 x1064) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x595 (div x94 x704)) (< 0 x12) (<= x336 18446744073709551615)) (not x871)) (and (and (>= 18446744073709551615 x1349) (= x1582 x1214) (not (= x790 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (* x1310 x1536) x919) (not (> x1972 18446744073709551615)) (= (x1329 (- 0 x790)) x1120) (= x1536 (x795 20282409603651670423947251286015 x1120)) (= x134 (x1329 (- x1349 x1455))) (= x1428 (div x919 x704)) (< (* x1536 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x1972 x1084) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x704 0) (> 18446744073709551616 x1349) (not (> x1455 x1349)) (= x1058 x1972) (<= x1214 18446744073709551615) (= (+ x1058 x88) x1214) (>= x1349 0) (= x1310 (x795 18446744073709551615 x134)) (= x88 x1084) (> x12 0) (= (div x1428 x12) x1972)) x871)) (and (= x1204 (+ x1345 x1367)) (not (> x357 x1851)) (= x357 (x795 20282409603651670423947251286015 x859)) (= x871 (or (> x790 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x790 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790) true)))) (= x1367 x1083) (> 20282409603651670423947251286016 x1083) (<= 0 x1851) (> 20282409603651670423947251286016 x1851) (= x42 (x795 20282409603651670423947251286015 x1204)) (= x1345 x1896) (< (+ x1083 x1896) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1083 20282409603651670423947251286015) (>= 20282409603651670423947251286015 x1851) (= x1896 (x795 20282409603651670423947251286015 x1356)) (>= 20282409603651670423947251286015 x1204) (>= x1083 0) (= (x795 20282409603651670423947251286015 x563) x916) (= x563 (x1329 (- x1851 x357))) (= x1632 (x278 x765)))) x824) x52))
(assert (x1109 x828))
(assert (x121 x1903))
(assert (x121 x1352))
(assert (= x972 (=> (and (= x851 x2019) (= x1130 x2115)) x464)))
(assert (= 1176186698 (x570 (x1829 1176186698))))
(assert (x687 x1462))
(assert (x687 x217))
(assert (= x47 (and (not x1687) x312)))
(assert (= x1602 (and x1833 x162)))
(assert (x121 x420))
(assert (x121 x1312))
(assert (x1542 x1554))
(assert (= x119 (or x1420 x1643)))
(assert (x2034 x1384))
(assert (x121 x990))
(assert (x1655 x1890 x239))
(assert (x121 x710))
(assert (= (and (not x1004) x424) x1497))
(assert (x121 x1326))
(assert (x1542 x452))
(assert (= (x570 (x1829 1000000000000000000)) 1000000000000000000))
(assert (x121 x600))
(assert (= x1963 (and x2119 x1754)))
(assert (= (x570 (x430 x131)) x131))
(assert (x121 x659))
(assert (x121 x1748))
(assert (x121 x376))
(assert (x121 x2019))
(assert (= x830 (or x2122 x965)))
(assert (x121 x845))
(assert (= (and x155 x593) x684))
(assert (x2034 x843))
(assert (x687 x1522))
(assert (x121 x620))
(assert (= (and x899 x872) x615))
(assert (x121 x1162))
(assert (x687 x72))
(assert (= x1020 (or x1559 (and x1878 x1971))))
(assert (x121 x229))
(assert (=> (<= x1442 10000) (= (x1829 x1442) (x430 x1442))))
(assert (= x456 (and (not x1820) x1473)))
(assert (x121 x377))
(assert (= (x570 (x430 x1633)) x1633))
(assert (= (and x2020 x22) x2087))
(assert (=> (<= x1394 10000) (= (x430 x1394) (x1829 x1394))))
(assert (= (and x2045 (not x525)) x370))
(assert (x687 x2099))
(assert (x121 x1069))
(assert (= (x570 (x815 x1357 1)) (+ (x570 x1357) 1)))
(assert (= (x430 2835717307) (x1829 2835717307)))
(assert (= x636 (x570 (x430 x636))))
(assert (x1542 x326))
(assert (= (and (not x994) x1437) x1841))
(assert (= (and x2075 (not x766)) x1688))
(assert (x381 x1975))
(assert (x1542 x859))
(assert (= (=> (and (= x39 x1385) (= x1059 x147)) x702) x1919))
(assert (x121 x1160))
(assert (= x1610 (=> (and (and (and (= x650 4093572003) (= x1439 x287) (= x1667 x1516) (= x1133 x1558) (= x399 x482) (not (= x650 3840337785)) (not (= 4072298103 x650)) (= x949 x43) (not (= x650 3833100637)) (not (< x650 2879910238)) (<= 0 x1142) (= x43 x132) (not (< x650 3454435393)) (< 0 x1519) (<= x399 1461501637330902918203684832716283019655932542975) (not (< x650 3833100637)) (<= x1142 1461501637330902918203684832716283019655932542975) (>= x1812 0) (>= 1461501637330902918203684832716283019655932542975 x1812) (>= 1461501637330902918203684832716283019655932542975 x770) (= (x1173 (x430 x1633)) x1519) (<= 0 x399) (= x1062 true) (not (> 2031398087 x650)) (= x532 x1112) (not (= 3889878717 x650)) (not x43) (= x1812 x1112) (not (= 4072275384 x650)) (= 0 x1516) (= x770 x1049) (= x1155 x306)) (or (and (not x1062) (and (= (x1281 x554) x1718) (= (x1899 (x430 x482) (x1829 3) 0) x75) (<= 0 x1718) (<= x1718 255) (= x1718 x1937) (= x554 (x1899 (x430 x482) x75 0)) (> 256 x1718))) (and (= (ite x1062 1 0) x1937) x1062))) (= x1842 x1155)) x610)))
(assert (x121 x125))
(assert (x687 x1205))
(assert (x687 x1419))
(assert (= (=> (and (= x2124 x2117) (= x1278 0)) x598) x1425))
(assert (x121 x1468))
(assert (x121 x306))
(assert (x121 x840))
(assert (x121 x1233))
(assert (= (and x299 (not x991)) x1891))
(assert (x121 x1952))
(assert (x687 x1826))
(assert (= (and (not x1905) x931) x76))
(assert (x121 x247))
(assert (= (and x314 x1510) x907))
(assert (= x1035 (or (and x1709 (not x980)) x1434)))
(assert (= (and x1862 x1020) x1990))
(assert (= (and (not x1662) x523) x1477))
(assert (x121 x1075))
(assert (x121 x2054))
(assert (= (and x1206 x97) x1933))
(assert (x121 x1704))
(assert (x121 x1338))
(assert (x121 x339))
(assert (x121 x2017))
(assert (x121 x563))
(assert (x121 x623))
(assert (x121 x1695))
(assert (x121 x1436))
(assert (x121 x1520))
(assert (= x2080 (=> (and (>= x1226 0) (= x922 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1223) true) (> x1223 0))) (= x1223 (x278 x1226)) (= (x1899 (x430 x1633) (x1829 5) 0) x1191) (= x1226 (x54 x1191)) (>= 20282409603651670423947251286015 x1226) (< x1226 20282409603651670423947251286016)) (and (=> (and x922 (= (or (and (> 0 x1223) (= (<= x1223 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1223 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x378)) (and (=> (and (not x378) (= x1223 x67)) x1506) (=> x378 x1200))) (=> (and (not x922) (= 0 x67)) x1506)))))
(assert (x627 x72))
(assert (x687 x130))
(assert (= (=> (and (or (and x818 (and (>= x1349 0) (<= x1349 18446744073709551615) (= x1349 x1275) (> 18446744073709551616 x1349))) (and (not x818) (and (<= 0 x330) (> 18446744073709551616 x330) (<= x330 18446744073709551615) (= x330 x1275)))) (= (or (and (> 0 (x278 x765)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x765)))) (> (x278 x765) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x818)) x252) x824))
(assert (= (and x2111 x771) x924))
(assert (x121 x26))
(assert (= (=> (and (>= x1600 0) (>= 1461501637330902918203684832716283019655932542975 x19) (= (x509 672) x1503) (= x693 (x509 672)) (>= 255 x1044) (= x1641 (x1899 (x430 x482) (x1829 5) 0)) (<= x385 255) (> 256 x385) (< x1044 256) (<= x1087 255) (= (x1899 (x430 x1521) x1836 0) x1097) (= x1598 (x1899 (x430 x131) (x1829 8) 0)) (= x1539 (x795 1461501637330902918203684832716283019655932542975 x1944)) (< x19 1461501637330902918203684832716283019655932542976) (= x1947 (= 0 x968)) (> 256 x1087) (= (= 0 x1044) x1251) (= (x509 672) x1944) (= (not x1650) x289) (<= 0 x19) (<= x1600 65535) (= x131 (x795 1461501637330902918203684832716283019655932542975 x693)) (= (x1899 (x430 x1600) (x1829 11) 0) x542) (<= 0 x1044) (= (ite (not x210) 1 0) x1521) (= (x1899 (x430 x1218) x438 0) x1836) (= x1986 x114) (= x810 (not x1231)) (= (x1970 x391) x1044) (<= 0 x1087) (= (x1899 (x430 x1442) (x1829 12) 0) x438) (= (not x882) x210) (= (= x968 0) x1650) (= (= 0 x1087) x1231) (= (x1061 x1097) x1600) (= x289 x810) (= x879 (= x968 0)) (= x114 (not x879)) (= (x1899 (x430 x1600) (x1829 11) 0) x1099) (= (x448 x1598) x385) (= x391 (x1899 (x430 x1539) x1099 0)) (= (x1899 (x430 x19) x542 0) x1838) (= (x795 1461501637330902918203684832716283019655932542975 x1503) x1218) (= x882 (not x1947)) (= x1087 (x1970 x1838)) (> 65536 x1600) (>= x385 0) (= x1192 (x1899 (x430 x385) (x1829 9) 0)) (= (x1050 x1192) x19) (= (not x1251) x1986)) x277) x334))
(assert (= (x570 (x1829 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x121 x1165))
(assert (x121 x1811))
(assert (x1109 x2057))
(assert (= (x570 (x815 x1054 1)) (+ (x570 x1054) 1)))
(assert (x121 x1482))
(assert (x1542 x643))
(assert (= x2146 (and x886 x1211)))
(assert (x121 x1635))
(assert (x121 x48))
(assert (x121 x1342))
(assert (= (=> (and (= x1203 (x62 x661)) (>= x1203 0) (> 65536 x233) (= x1472 (x795 1461501637330902918203684832716283019655932542975 x1975)) (> 18446744073709551616 x1210) (< x194 256) (> 65536 x1741) (= x1210 (x175 x1350)) (= (x175 x661) x789) (>= 18446744073709551615 x1203) (<= x1210 18446744073709551615) (<= x1268 18446744073709551615) (<= 0 x1801) (<= 0 x789) (= (x1899 (x430 x1472) (x1829 5) 0) x1350) (>= x233 0) (>= x1268 0) (= x865 (> x1586 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x1801 (x54 x1350)) (>= x1926 0) (>= 20282409603651670423947251286015 x1926) (<= x194 255) (> 20282409603651670423947251286016 x1801) (>= x194 0) (< x1268 18446744073709551616) (= (x1899 (x430 x1633) (x1829 5) 0) x661) (= x1741 (x300 x1350)) (< x927 256) (>= 18446744073709551615 x789) (= (x62 x1350) x1268) (<= x1741 65535) (= (x278 x1801) x1727) (= x1926 (x54 x661)) (= x927 (x1807 x1350)) (> 18446744073709551616 x1203) (>= x1741 0) (= (x278 x1926) x2099) (= 128 x823) (< x789 18446744073709551616) (> 20282409603651670423947251286016 x1926) (= x194 (x1807 x661)) (<= 0 x927) (<= 0 x1210) (<= x927 255) (<= x233 65535) (= 288 x1188) (<= x1801 20282409603651670423947251286015) (= x233 (x300 x661))) (and (=> x865 x2131) (=> (and (not x865) (= (or (and (> 0 x2099) (= true (<= x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x717)) (and (=> (and (not x717) (and (> 18446744073709551616 x153) (= (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2099) x1019) (>= 18446744073709551615 x153) (<= 0 x153))) (and (=> x1019 x2131) (=> (and (= x422 x2099) (not x1019)) x27))) (=> (and (and (< x53 18446744073709551616) (>= x53 0) (= (= x2099 115792089237316195423570985008687907853269984655499359237631748795939503996928) x1154) (<= x53 18446744073709551615)) x717) (and (=> (and (and (= x82 (x1329 (- 0 x2099))) (= (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x82) x1264)) (not x1154)) (and (=> (and (not x1264) (and (= x383 x422) (= x383 (x1329 (- 0 x82))))) x27) (=> x1264 x2131))) (=> x1154 x2131))))))) x1746))
(assert (= (and x1720 x1949) x449))
(assert (= (=> (and (= x805 (x278 x1314)) (<= 0 x1314) (>= 20282409603651670423947251286015 x1314) (= x1615 (and (= (<= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 0 x805))) (= x1314 (x1805 x546)) (= (x1899 (x430 x1633) (x1829 5) 0) x546) (> 20282409603651670423947251286016 x1314)) (and (=> (and (not x1615) (= 0 x512)) x1479) (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x805) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x805) true) (> 0 x805))) x1070) x1615) (and (=> (and (not x1070) (= x805 x512)) x1479) (=> x1070 x660))))) x308))
(assert (x121 x1800))
(assert (x121 x1178))
(assert (= (=> (= x1870 x1586) x446) x767))
(assert (x1542 x337))
(assert (x121 x772))
(assert (= (x570 (x1829 412857073)) 412857073))
(assert (x121 x1458))
(assert (x121 x825))
(assert (x121 x679))
(assert (x121 x715))
(assert (x121 x1400))
(assert (= (and x1961 x18) x1366))
(assert (= (and (not x2030) x1408) x753))
(assert (= x1599 (and x2051 x756)))
(assert (x687 x639))
(assert (= x1696 (and x899 (not x872))))
(assert (x121 x190))
(assert (= (and (not x2118) x1640) x1940))
(assert (= (and x956 x1379) x1958))
(assert (= x1989 (x570 (x430 x1989))))
(assert (x121 x2086))
(assert (x1542 x258))
(assert (x121 x1883))
(assert (x687 x1348))
(assert (x687 x452))
(assert (x687 x2078))
(assert (x121 x876))
(assert (x121 x383))
(assert (= (x1829 826074471) (x430 826074471)))
(assert (= x740 (and x1459 x1019)))
(assert (= 2879910238 (x570 (x1829 2879910238))))
(assert (x627 x480))
(assert (x121 x1732))
(assert (= (or x1417 x848) x270))
(assert (= x280 (and x407 x236)))
(assert (x121 x1548))
(assert (= x255 (and (not x1917) x599)))
(assert (= x1839 (and (not x2046) x1738)))
(assert (x121 x1440))
(assert (x121 x1208))
(assert (x121 x1797))
(assert (= (x430 1844900739) (x1829 1844900739)))
(assert (x121 x1424))
(assert (x1542 x1628))
(assert (x121 x1660))
(assert (x121 x1214))
(assert (= (=> (and (or (not x1971) x1971) (and (< x294 256) (= x1971 (= 0 x294)) (<= x294 255) (<= 0 x294))) x1901) x1433))
(assert (= x1758 (=> (and (= x540 (not (> x708 1))) (= x708 (x795 255 x346))) (and x540 (=> (and (= x1932 x1040) (= x894 x2126)) x1232)))))
(assert (x687 x41))
(assert (x121 x166))
(assert (x121 x682))
(assert (x121 x1871))
(assert (x121 x1390))
(assert (x121 x1018))
(assert (= (and x1211 (not x886)) x1638))
(assert (x121 x310))
(assert (= x507 (and x2128 x1622)))
(assert (x121 x1093))
(assert (= (and (not x797) x799) x1845))
(assert (x121 x838))
(assert (x121 x287))
(assert (= (=> (and (= x151 0) (= x1948 x1964)) x1139) x834))
(assert (x687 x1174))
(assert (= x1815 (and x1523 (not x1154))))
(assert (x1655 x988 x195))
(assert (x2034 x1953))
(assert (= x503 (and x219 x1389)))
(assert (= x1153 (and x152 (not x1413))))
(assert (x121 x2142))
(assert (= x441 (and x15 x617)))
(assert (= x295 (and x473 x447)))
(assert (= x1417 (and x1943 x1604)))
(assert (= x1772 (and (not x647) x213)))
(assert (= x841 (and (not x573) x1217)))
(assert (x687 x643))
(assert (= (and (not x871) x266) x2050))
(assert (x121 x1495))
(assert (x121 x1404))
(assert (x121 x1143))
(assert (x1109 x134))
(assert (x121 x1700))
(assert (= x350 (=> (and (>= 20282409603651670423947251286015 x1851) (= x2044 (x1329 (- 20282409603651670423947251286015 x1569))) (= x1569 (x795 20282409603651670423947251286015 x2094)) (<= 0 x1851) (= x489 (> x1851 x2044)) (> 20282409603651670423947251286016 x1851)) (and (=> (and (and (= (< x1338 x81) x1316) (= (x795 20282409603651670423947251286015 x1782) x81) (= x1001 (x539 (+ x1569 x1851))) (= x1338 (x795 20282409603651670423947251286015 x1001))) (not x489)) (and (=> x1316 x2131) (=> (and (not x1316) (and (>= 20282409603651670423947251286015 x1083) (= x1108 (x795 20282409603651670423947251286015 x1348)) (< x1083 20282409603651670423947251286016) (>= x1083 0) (= (x795 20282409603651670423947251286015 x2078) x102) (= (x1329 (- x1338 x81)) x2078) (= x908 (< x347 x1083)) (= x347 (x1329 (- 20282409603651670423947251286015 x1108))))) (and (=> x908 x2131) (=> (and (and (= (x795 20282409603651670423947251286015 x2016) x952) (= (> x888 x952) x1402) (= (x795 20282409603651670423947251286015 x1979) x888) (= (x539 (+ x1108 x1083)) x2016)) (not x908)) (and (=> x1402 x2131) (=> (and (not x1402) (and (= (x795 20282409603651670423947251286015 x1522) x1702) (= x1522 (x1329 (- x952 x888))) (= (x278 x326) x452) (= (or (and (< x2099 0) (= (<= x2099 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2099)) x170))) (and (=> (and x170 (and (>= x1349 0) (<= x1349 18446744073709551615) (< x1349 18446744073709551616) (= (> x789 x1349) x1344))) (and (=> x1344 x2131) (=> (and (and (= x198 (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x2099)) (= (x795 18446744073709551615 x738) x2147) (= x738 (x1329 (- x1349 x789)))) (not x1344)) (and (=> x198 x2131) (=> (and (not x198) (and (= x712 (x795 x1867 x130)) (= (= 0 x712) x361) (= x651 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x569)) (= (ite (< x651 x2147) 1 0) x130) (= (x795 20282409603651670423947251286015 x1554) x569) (= x1867 (ite (not x414) 1 0)) (= x414 (= x569 0)) (= x1554 (x1329 (- 0 x2099))))) (and (=> (not x361) x2131) (=> (and x361 (and (= x264 (> x704 0)) (= x13 (mod (* x569 x2147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> (not x264) x2131) (=> (and x264 (and (= (> x12 0) x301) (= x911 (div x13 x704)))) (and (=> (not x301) x2131) (=> (and x301 (and (= x955 (> x1791 18446744073709551615)) (= x1791 (div x911 x12)))) (and (=> x955 x2131) (=> (and (and (= x1274 (x1329 (- 18446744073709551615 x1791))) (= x1593 (< x1274 x1203))) (not x955)) (and (=> (and (not x1593) (and (= x1597 x801) (= (x539 (+ x1791 x1203)) x1987) (= x801 (x795 18446744073709551615 x1987)))) x1981) (=> x1593 x2131))))))))))))))) (=> (and (and (= (> x789 x330) x567) (<= x330 18446744073709551615) (<= 0 x330) (< x330 18446744073709551616)) (not x170)) (and (=> (and (not x567) (and (= x1031 (x795 20282409603651670423947251286015 x2099)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1031) x426) (= x1259 (= 0 x1880)) (= x659 (ite (not x747) 1 0)) (= x1935 (x795 18446744073709551615 x1941)) (= x747 (= 0 x1031)) (= x1941 (x1329 (- x330 x789))) (= x1880 (x795 x659 x695)) (= (ite (< x426 x1935) 1 0) x695))) (and (=> (and x1259 (and (= x979 (mod (* x1031 x1935) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x704) x219))) (and (=> (and (and (= (div x979 x704) x466) (= (> x12 0) x1563)) x219) (and (=> (not x1563) x2131) (=> (and (and (= (> x145 18446744073709551615) x1820) (= (div x466 x12) x145)) x1563) (and (=> (and (not x1820) (and (= (> x1203 x1704) x921) (= x1704 (x1329 (- 18446744073709551615 x145))))) (and (=> (and (and (= x1597 x1735) (= x1467 (x539 (+ x145 x1203))) (= (x795 18446744073709551615 x1467) x1735)) (not x921)) x1981) (=> x921 x2131))) (=> x1820 x2131))))) (=> (not x219) x2131))) (=> (not x1259) x2131))) (=> x567 x2131))))))))))) (=> x489 x2131)))))
(assert (x121 x543))
(assert (x121 x311))
(assert (x121 x2035))
(assert (= (and x908 x1980) x352))
(assert (x121 x566))
(assert (x121 x1583))
(assert (x121 x1236))
(assert (= (x570 (x430 x19)) x19))
(assert (= (x1829 18446744073709551616) (x430 18446744073709551616)))
(assert (x121 x34))
(assert (= x1614 (and x2023 (not x301))))
(assert (x687 x1039))
(assert (x121 x2126))
(assert (= (and x667 x2082) x1304))
(assert (x1542 x1343))
(assert (x687 x1518))
(assert (x121 x789))
(assert (= (x570 (x815 x360 1)) (+ (x570 x360) 1)))
(assert (= (or x160 x1646) x1663))
(assert (x121 x319))
(assert (x121 x734))
(assert (x121 x82))
(assert (= (and (not x1453) x1066) x1263))
(assert (= (and x797 x799) x1015))
(assert (x121 x254))
(assert (=> (<= x1521 10000) (= (x1829 x1521) (x430 x1521))))
(assert (x687 x1160))
(assert (= (x430 20282409603651670423947251286016) (x1829 20282409603651670423947251286016)))
(assert (= (x430 468353030) (x1829 468353030)))
(assert (= x1991 (and x378 x1446)))
(assert (x121 x1100))
(assert (= x393 (or x276 x379)))
(assert (x121 x778))
(assert (x121 x452))
(assert (x121 x73))
(assert (x121 x8))
(assert (x1109 x1941))
(assert (= x2131 (=> (and (= x826 0) (= x1964 x2079)) x934)))
(assert (x121 x1930))
(assert (x121 x1893))
(assert (x121 x1664))
(assert (x1542 x1801))
(assert (= x122 (and (not x2108) x486)))
(assert (x121 x10))
(assert (x121 x1521))
(assert (x121 x735))
(assert (x687 x1498))
(assert (x121 x978))
(assert (x121 x993))
(assert (= (and x1322 (not x1316)) x1980))
(assert (= (and x1720 (not x1949)) x1038))
(assert (x121 x1435))
(assert (x687 x148))
(assert (x121 x843))
(assert (x121 x1879))
(assert (=> (<= x265 10000) (= (x1829 x265) (x430 x265))))
(assert (x1109 x608))
(assert (x121 x109))
(assert (x1109 x1987))
(assert (x121 x1176))
(assert (= x562 (and (not x624) x913)))
(assert (x121 x1317))
(assert (= (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1798) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1798) true) (< x1798 0))) x1769) (= x2096 (ite (or (and (> x1586 x1950) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1950) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586) (> x1950 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= x453 (x795 x376 x2096)) (= x376 (ite (not x1769) 1 0)) (= (x1329 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1798)) x1950) (= (= x453 0) x941)) (and (=> (and x941 (and (= (x1329 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1798)) x642) (= x459 (ite (or (and (< x1586 x642) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x642))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x642) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586))) 1 0)) (= x427 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1798) (and (= (<= x1798 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1798 0))) 1 0)) (= x78 (x795 x427 x459)) (= x1047 (= x78 0)))) (and (=> (not x1047) x2131) (=> (and x1047 (and (= (x539 (+ x1586 x1798)) x1736) (= (or (and (> 0 x1483) (= (<= x1483 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1483 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1949))) (and (=> (and (and (= x746 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1483)) (= x1219 (ite (not x1535) 1 0)) (= x696 (= 0 x1938)) (> 18446744073709551616 x153) (= (x795 x1219 x639) x1938) (= (= x1483 0) x1535) (= (ite (> 1000000000000000 x746) 1 0) x639) (>= x153 0) (<= x153 18446744073709551615)) (not x1949)) (and (=> (not x696) x2131) (=> (and x696 (and (= x543 (mod (* 1000000000000000 x1483) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x153) x2025))) (and (=> (not x2025) x2131) (=> (and x2025 (and (= x748 (div x543 x153)) (= (< 20282409603651670423947251286015 x748) x345))) (and (=> (and (= x28 (< 10141204801825835211973625643007 x748)) (not x345)) (and (=> (and (= x748 x326) (not x28)) x1252) (=> x28 x2131))) (=> x345 x2131))))))) (=> (and (and (<= 0 x53) (> 18446744073709551616 x53) (= x226 (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1483)) (<= x53 18446744073709551615)) x1949) (and (=> (and (not x226) (and (= (x795 x1224 x665) x149) (= (= x1512 0) x206) (= x1512 (x1329 (- x1586 x422))) (= x665 (ite (< x926 1000000000000000) 1 0)) (= x926 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1512)) (= (= 0 x149) x1567) (= (ite (not x206) 1 0) x1224))) (and (=> (not x1567) x2131) (=> (and (and (= x803 (x1329 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x53))) (= (< x803 x1404) x901) (= (mod (* x1512 1000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1404)) x1567) (and (=> (and (not x901) (and (= x2041 (x539 (+ x1404 x53))) (= x51 (< x2041 1)))) (and (=> (and (and (= (x1329 (- x2041 1)) x2133) (= (< 0 x53) x2082)) (not x51)) (and (=> (not x2082) x2131) (=> (and x2082 (and (= (< 20282409603651670423947251286015 x1240) x1222) (= x1240 (div x2133 x53)))) (and (=> (and (= (> x1240 10141204801825835211973625643007) x688) (not x1222)) (and (=> x688 x2131) (=> (and (not x688) (and (= x1478 (x278 x1240)) (= (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1478) x473))) (and (=> x473 x2131) (=> (and (not x473) (and (= x1320 (x1329 (- 0 x1478))) (= x1320 x326))) x1252))))) (=> x1222 x2131))))) (=> x51 x2131))) (=> x901 x2131))))) (=> x226 x2131))))))) (=> (not x941) x2131))) x856))
(assert (x121 x1161))
(assert (= x333 (and x228 x1194)))
(assert (x687 x1226))
(assert (= (and (not x941) x516) x1595))
(assert (x121 x1009))
(assert (= x1631 (=> (and (= x970 (x795 20282409603651670423947251286015 x452)) (= (x1899 (x430 x1633) (x1829 5) 0) x2136) (= x454 (x54 x2136)) (= x1623 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1727) (and (> 0 x1727) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1727) true)))) (>= 20282409603651670423947251286015 x454) (= x1518 (x278 x337)) (>= x454 0)) (and (=> (and (and (<= x330 18446744073709551615) (< x330 18446744073709551616) (<= 0 x330) (= (< x330 x1210) x685)) (not x1623)) (and (=> x685 x2131) (=> (and (not x685) (and (= x1515 (x795 x988 x195)) (= (ite (> x470 x1372) 1 0) x195) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1577) x1372) (= (x795 18446744073709551615 x319) x470) (= x2143 (= x1515 0)) (= x1577 (x795 20282409603651670423947251286015 x1727)) (= x988 (ite (not x463) 1 0)) (= x319 (x1329 (- x330 x1210))) (= (= 0 x1577) x463))) (and (=> (not x2143) x2131) (=> (and (and (= (< 0 x704) x236) (= x1273 (mod (* x470 x1577) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2143) (and (=> (and (and (= (div x1273 x704) x1387) (= x1966 (> x12 0))) x236) (and (=> (and x1966 (and (= x511 (div x1387 x12)) (= x2118 (< 18446744073709551615 x511)))) (and (=> (and (not x2118) (and (= (x1329 (- 18446744073709551615 x511)) x514) (= x1028 (< x514 x1268)))) (and (=> x1028 x2131) (=> (and (not x1028) (and (= x963 x587) (= (x795 18446744073709551615 x2057) x587) (= x2057 (x539 (+ x511 x1268))))) x1594))) (=> x2118 x2131))) (=> (not x1966) x2131))) (=> (not x236) x2131))))))) (=> (and (and (>= 18446744073709551615 x1349) (>= x1349 0) (= (< x1349 x1210) x1714) (> 18446744073709551616 x1349)) x1623) (and (=> x1714 x2131) (=> (and (and (= x402 (x1329 (- x1349 x1210))) (= x1299 (= x1727 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x795 18446744073709551615 x402) x1978)) (not x1714)) (and (=> x1299 x2131) (=> (and (and (= x836 (ite (< x2064 x1978) 1 0)) (= x1703 (x795 20282409603651670423947251286015 x258)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1703) x2064) (= (ite (not x1866) 1 0) x1728) (= (= x1443 0) x930) (= x1443 (x795 x1728 x836)) (= (x1329 (- 0 x1727)) x258) (= x1866 (= x1703 0))) (not x1299)) (and (=> (not x930) x2131) (=> (and (and (= x1055 (mod (* x1703 x1978) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1096 (< 0 x704))) x930) (and (=> (and x1096 (and (= x886 (< 0 x12)) (= x1530 (div x1055 x704)))) (and (=> (and x886 (and (= x356 (> x1653 18446744073709551615)) (= (div x1530 x12) x1653))) (and (=> x356 x2131) (=> (and (and (= (< x1136 x1268) x1374) (= (x1329 (- 18446744073709551615 x1653)) x1136)) (not x356)) (and (=> x1374 x2131) (=> (and (not x1374) (and (= x963 x1234) (= x853 (x539 (+ x1268 x1653))) (= (x795 18446744073709551615 x853) x1234))) x1594))))) (=> (not x886) x2131))) (=> (not x1096) x2131)))))))))))))
(assert (x121 x535))
(assert (=> (>= 10000 x1449) (= (x1829 x1449) (x430 x1449))))
(assert (= (and x629 x1873) x1904))
(assert (= (x430 3889878717) (x1829 3889878717)))
(assert (x121 x418))
(assert (x687 x56))
(assert (= x80 (and x1992 x1713)))
(assert (x121 x1442))
(assert (x121 x1850))
(assert (= (=> (and (or (and (and (<= x1349 18446744073709551615) (= x1349 x96) (> 18446744073709551616 x1349) (<= 0 x1349)) x948) (and (and (<= x330 18446744073709551615) (= x96 x330) (>= x330 0) (< x330 18446744073709551616)) (not x948))) (= x948 (or (> (x278 x337) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x278 x337)) true) (< (x278 x337) 0))))) x297) x1594))
(assert (x1786 x337))
(assert (x121 x1941))
(assert (= (or (and x936 x405) (and (not x157) x462)) x276))
(assert (x121 x1853))
(assert (x381 x1944))
(assert (= x529 (or x773 x1751 x191)))
(assert (= (and x474 x930) x1606))
(assert (x121 x821))
(assert (x687 x790))
(assert (x121 x709))
(assert (x121 x1210))
(assert (= (x570 (x430 x1634)) x1634))
(assert (= (and x1302 x1407) x135))
(assert (x121 x859))
(assert (= x243 (and x757 x1816)))
(assert (= (and x614 (not x1591)) x1319))
(assert (= x1981 (=> (and (or (and (and (>= 18446744073709551615 x330) (>= x330 0) (= x497 x330) (< x330 18446744073709551616)) (not x1004)) (and (and (>= x1349 0) (= x1349 x497) (< x1349 18446744073709551616) (>= 18446744073709551615 x1349)) x1004)) (= (or (and (> 0 (x278 x326)) (= true (<= (x278 x326) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> (x278 x326) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1004)) x1631)))
(assert (x687 x693))
(assert (x121 x595))
(assert (= (=> (and (and (= x771 (and (< 0 x8) (= (<= x8 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (<= x267 20282409603651670423947251286015) (= (x278 x267) x8) (>= x267 0) (< x267 20282409603651670423947251286016) (= (x1899 (x430 x482) (x1829 5) 0) x1570) (= x267 (x54 x1570))) (or (and x771 (and (= x8 x506) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8) (and (> 0 x8) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8))))))) (and (not x771) (= 0 x506)))) x656) x1674))
(assert (= x1182 (and x1980 (not x908))))
(assert (x121 x373))
(assert (= x228 (and x1688 x1906)))
(assert (x687 x404))
(assert (= x903 (and x1985 x567)))
(assert (x121 x1507))
(assert (x121 x404))
(assert (= x1086 (and x345 x140)))
(assert (= (and x1606 (not x1096)) x1777))
(assert (x121 x1702))
(assert (= x561 (and x1360 (not x957))))
(assert (x121 x1037))
(assert (= (and x1933 x727) x2014))
(assert (x121 x1422))
(assert (x1542 x2016))
(assert (x121 x286))
(assert (= x299 (and (not x1774) x445)))
(assert (x687 x134))
(assert (= (and x929 (not x909)) x37))
(assert (x1542 x2078))
(assert (x687 x418))
(assert (= (x570 (x1829 2609461451)) 2609461451))
(assert (= (x430 1000000000000000) (x1829 1000000000000000)))
(assert (x1786 x1314))
(assert (x121 x2040))
(assert (x121 x11))
(assert (x121 x1887))
(assert (x121 x1823))
(assert (= (and x1297 x668) x1889))
(assert (= (x430 4072275384) (x1829 4072275384)))
(assert (= x59 (and x37 x2)))
(assert (= x1369 (or (and x410 (not x1780)) (and x117 x1073))))
(assert (= x142 (and x139 x1371)))
(assert (= (and x1833 (not x162)) x1307))
(assert (x121 x281))
(assert (x687 x1944))
(assert (= (or x1931 x1834) x1008))
(assert (= (x430 1747092918) (x1829 1747092918)))
(assert (x121 x1802))
(assert (= (and x703 x1032) x932))
(assert (x121 x1921))
(assert (x121 x576))
(assert (= (x570 (x1829 3889878717)) 3889878717))
(assert (x121 x1198))
(assert (= (x570 (x1829 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (= (and x931 x1905) x862))
(assert (x121 x1725))
(assert (= x137 (and x1571 x1859)))
(assert (= (and x1845 x1672) x279))
(assert (x121 x1851))
(assert (= (x570 (x1829 4072275384)) 4072275384))
(assert (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 (x570 (x1829 115792089237316195423570985008687907853269984655499359237631748795939503996928))))
(assert (x687 x1727))
(assert (x1655 x1867 x130))
(assert (= (and (not x1714) x272) x1078))
(assert (x121 x21))
(assert (x121 x1147))
(assert (= (and x1261 x575) x1895))
(assert (x121 x1223))
(assert (= (and x2137 x1337) x1420))
(assert (x121 x1707))
(assert (x121 x1729))
(assert (= 826074471 (x570 (x1829 826074471))))
(assert (x121 x1234))
(assert (x121 x220))
(assert (= (and (not x1334) x1904) x755))
(assert (x121 x1653))
(assert (x121 x1531))
(assert (x121 x1268))
(assert (x121 x337))
(assert (= (or x1698 x260) x1762))
(assert (x121 x230))
(assert (= (or x167 x1369) x107))
(assert (= x1066 (and (not x1830) x529)))
(assert (x1655 x148 x1988))
(assert (= x1629 (and (not x57) x1711)))
(assert (x121 x853))
(assert (x121 x223))
(assert (= x1651 (and (not x1243) x1405)))
(assert (x121 x144))
(assert (x121 x654))
(assert (x687 x2022))
(assert (x121 x1735))
(assert (x121 x1705))
(assert (= (and x811 x933) x981))
(assert (= (and (not x2114) x4) x1183))
(assert (x121 x1673))
(assert (x121 x401))
(assert (= (or x36 x2098) x996))
(assert (x121 x1474))
(assert (= (or x146 x841) x312))
(assert (x121 x1449))
(assert (= x2137 (and (not x165) x1895)))
(assert (x121 x828))
(assert (= x1953 (x570 (x430 x1953))))
(assert (x121 x72))
(assert (x121 x587))
(assert (x121 x916))
(assert (= x476 (and x113 x98)))
(assert (x121 x332))
(assert (x687 x2057))
(assert (x687 x1145))
(assert (x2034 x636))
(assert (x121 x505))
(assert (x121 x1515))
(assert (= x1929 (x570 (x430 x1929))))
(assert (not x1397))
(assert (x121 x805))
(assert (x121 x1569))
(assert (x121 x1470))
(assert (x121 x1724))
(assert (x687 x1558))
(assert (x121 x1278))
(assert (x121 x1372))
(assert (x1542 x1174))
(assert (x1786 x1174))
(assert (= (or x1121 x2050) x1457))
(assert (= x1414 (and x1230 (not x1344))))
(assert (x1655 x1219 x639))
(assert (x121 x1898))
(assert (= (and (not x922) x1113) x222))
(assert (x687 x1314))
(assert (x121 x680))
(assert (x687 x1728))
(assert (x687 x45))
(assert (= x1232 (=> (and (= x2126 x1018) (= (ite x1793 1 0) x288) (= x854 (or (> x1040 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x1040) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1040) true)))) (= x1793 (not x854))) x1460)))
(assert (x121 x2000))
(assert (x121 x1174))
(assert (= x1616 (or x1942 x852)))
(assert (x121 x1218))
(assert (x121 x1819))
(assert (= x2023 (and x1886 x264)))
(assert (x1655 x2037 x1508))
(assert (x121 x1358))
(assert (x121 x1861))
(assert (x121 x440))
(assert (x121 x1540))
(assert (x121 x746))
(assert (x687 x1240))
(assert (x121 x179))
(assert (= x2039 (=> (and (= x1385 x1568) (= x1670 x1059)) x702)))
(assert (= x1228 (=> (= x1905 (> x2065 0)) (and (=> x1905 x829) (=> (not x1905) x2131)))))
(assert (= x1485 (and x2046 x1738)))
(assert (x121 x1701))
(assert (x121 x185))
(assert (= x1760 (and x2130 x1359)))
(assert (x121 x1826))
(assert (x121 x1476))
(assert (x687 x1867))
(assert (x121 x423))
(assert (= (and (not x113) x98) x1864))
(assert (x2034 x19))
(assert (x687 x534))
(assert (= x931 (or x2105 x621 x887)))
(assert (= (and (not x314) x1510) x752))
(assert (= (or x755 x458 x732 x432) x186))
(assert (x121 x544))
(assert (=> (<= x1989 10000) (= (x430 x1989) (x1829 x1989))))
(assert (x687 x1860))
(assert (x121 x700))
(assert (x121 x770))
(assert (= (x570 (x1829 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x121 x158))
(assert (x121 x1356))
(assert (x121 x1585))
(assert (x2034 x861))
(assert (= (x1829 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x430 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x121 x233))
(assert (= x58 (and x400 (not x1615))))
(assert (= (x1829 4093572003) (x430 4093572003)))
(assert (x121 x1813))
(assert (x121 x1959))
(assert (x1542 x1782))
(assert (=> (<= x1293 10000) (= (x430 x1293) (x1829 x1293))))
(assert (x121 x548))
(assert (x121 x2124))
(assert (x121 x1972))
(check-sat)
(exit)