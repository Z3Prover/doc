(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x472 0)) (((x1203 (x1749 x472) (x1585 x472) (x137 Int)) (x1802 (x1013 x472) (x254 Int)) (x1031 (x1756 Int)))))
(declare-fun x16 () Int)
(declare-fun x543 () Bool)
(declare-fun x922 () Bool)
(declare-fun x820 () Int)
(declare-fun x1870 () Int)
(declare-fun x813 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x89 () Bool)
(declare-fun x17 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x614 () x472)
(declare-fun x782 () Int)
(declare-fun x446 () Int)
(declare-fun x439 (x472) Int)
(declare-fun x699 () Bool)
(declare-fun x1526 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x364 () Int)
(declare-fun x471 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x1370 () Int)
(declare-fun x1568 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x241 () Int)
(declare-fun x745 () Int)
(declare-fun x91 () Bool)
(declare-fun x1579 () Int)
(declare-fun x133 () Bool)
(declare-fun x1139 () Int)
(declare-fun x1983 () Int)
(declare-fun x298 () Int)
(declare-fun x1829 () Bool)
(declare-fun x436 () Int)
(declare-fun x1674 () Int)
(declare-fun x618 () Int)
(declare-fun x1812 () Int)
(declare-fun x1273 () Int)
(declare-fun x621 () Bool)
(declare-fun x427 () Int)
(declare-fun x1307 () Bool)
(declare-fun x1864 () Int)
(declare-fun x1679 () Int)
(declare-fun x403 () Int)
(declare-fun x1839 () Bool)
(declare-fun x1766 () Bool)
(declare-fun x1541 () Int)
(declare-fun x1922 () Bool)
(declare-fun x1929 (x472) Int)
(declare-fun x294 () Int)
(declare-fun x448 () Int)
(declare-fun x1955 () Bool)
(declare-fun x809 () Int)
(declare-fun x1134 () Int)
(declare-fun x380 (x472) Int)
(declare-fun x794 () Int)
(declare-fun x33 () Int)
(declare-fun x1419 () Bool)
(declare-fun x147 () Int)
(declare-fun x991 () Int)
(declare-fun x84 () Bool)
(declare-fun x562 () Bool)
(declare-fun x270 () Int)
(declare-fun x1109 () Int)
(declare-fun x416 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x784 () Int)
(declare-fun x1439 () Bool)
(declare-fun x1235 () Int)
(declare-fun x124 () Int)
(declare-fun x1518 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x1112 () Int)
(declare-fun x391 () Int)
(declare-fun x293 () Int)
(declare-fun x396 () Int)
(declare-fun x1101 () Int)
(declare-fun x558 () Int)
(declare-fun x2043 () Bool)
(declare-fun x191 () Int)
(declare-fun x1572 () Int)
(declare-fun x853 () Int)
(declare-fun x565 () Int)
(declare-fun x2010 () Int)
(declare-fun x1826 () Bool)
(declare-fun x1916 () Int)
(declare-fun x51 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x1067 () Int)
(declare-fun x1632 () Int)
(declare-fun x1873 () Bool)
(declare-fun x1040 () Int)
(declare-fun x1937 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x487 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x67 () Int)
(declare-fun x692 () Bool)
(declare-fun x972 () Bool)
(declare-fun x1369 () Int)
(declare-fun x199 (Int) Int)
(declare-fun x1484 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x484 () Bool)
(declare-fun x1546 () Int)
(declare-fun x863 () Int)
(declare-fun x1059 () Bool)
(declare-fun x1378 () Int)
(declare-fun x600 () Int)
(declare-fun x504 () Int)
(declare-fun x167 () Int)
(declare-fun x667 () Bool)
(declare-fun x728 () Bool)
(declare-fun x45 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x893 () Int)
(declare-fun x1199 () Bool)
(declare-fun x1106 () Int)
(declare-fun x14 () Bool)
(declare-fun x597 () Int)
(declare-fun x56 () Int)
(declare-fun x546 () Bool)
(declare-fun x1280 () Int)
(declare-fun x315 () Int)
(declare-fun x521 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x1319 () Int)
(declare-fun x1975 () x472)
(declare-fun x239 () x472)
(declare-fun x1170 () Int)
(declare-fun x267 () Bool)
(declare-fun x115 () Int)
(declare-fun x1944 () Int)
(declare-fun x1283 () x472)
(declare-fun x1790 () Bool)
(declare-fun x671 () x472)
(declare-fun x1111 () Bool)
(declare-fun x865 () x472)
(declare-fun x1642 () x472)
(declare-fun x1010 () Int)
(declare-fun x500 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x230 () Int)
(declare-fun x1027 () x472)
(declare-fun x483 () x472)
(declare-fun x21 () Bool)
(declare-fun x808 () Bool)
(declare-fun x99 () Bool)
(declare-fun x362 () x472)
(declare-fun x753 () Int)
(declare-fun x566 () Int)
(declare-fun x69 () Bool)
(declare-fun x676 () x472)
(declare-fun x1557 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x1245 () x472)
(declare-fun x801 () Int)
(declare-fun x1550 () Bool)
(declare-fun x212 () Bool)
(declare-fun x52 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1962 () Int)
(declare-fun x1737 () Int)
(declare-fun x1647 () Bool)
(declare-fun x217 () Int)
(declare-fun x1002 () Int)
(declare-fun x1710 () Int)
(declare-fun x997 () Int)
(declare-fun x1430 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x583 (x472) Int)
(declare-fun x2007 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x182 () Int)
(declare-fun x1741 () Int)
(declare-fun x660 () Bool)
(declare-fun x2022 () Int)
(declare-fun x1195 () Int)
(declare-fun x1551 () Bool)
(declare-fun x815 () x472)
(declare-fun x43 () Bool)
(declare-fun x988 () Int)
(declare-fun x979 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x781 () Int)
(declare-fun x1734 () Int)
(declare-fun x149 () Int)
(declare-fun x1223 () Bool)
(declare-fun x987 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x590 () Int)
(declare-fun x638 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x1398 () Int)
(declare-fun x455 () Bool)
(declare-fun x126 () Bool)
(declare-fun x80 () Bool)
(declare-fun x662 () Int)
(declare-fun x1310 () Int)
(declare-fun x1380 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x470 () Int)
(declare-fun x1416 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x1818 () Int)
(declare-fun x1390 () Int)
(declare-fun x173 () Int)
(declare-fun x1393 () Bool)
(declare-fun x1029 () Int)
(declare-fun x1041 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x1597 () Int)
(declare-fun x1616 () Int)
(declare-fun x1592 () Int)
(declare-fun x1061 () x472)
(declare-fun x746 () Bool)
(declare-fun x425 () Int)
(declare-fun x1028 () Bool)
(declare-fun x1858 () Int)
(declare-fun x1259 () Int)
(declare-fun x1515 () Int)
(declare-fun x722 () Bool)
(declare-fun x186 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x442 () Bool)
(declare-fun x209 () Bool)
(declare-fun x48 () Int)
(declare-fun x261 () Int)
(declare-fun x1794 () Int)
(declare-fun x88 (Int) Int)
(declare-fun x1251 () Int)
(declare-fun x503 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x1465 () Int)
(declare-fun x1799 () Int)
(declare-fun x832 () Bool)
(declare-fun x1595 () Int)
(declare-fun x161 () Int)
(declare-fun x1125 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x1618 () Int)
(declare-fun x792 () Bool)
(declare-fun x656 () Int)
(declare-fun x340 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x392 () Bool)
(declare-fun x2023 () x472)
(declare-fun x1926 () Bool)
(declare-fun x1770 () Int)
(declare-fun x1574 () Int)
(declare-fun x1921 () Bool)
(declare-fun x271 () Int)
(declare-fun x1634 () Int)
(declare-fun x4 () Bool)
(declare-fun x189 () Int)
(declare-fun x977 (x472) Int)
(declare-fun x756 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x1777 () Int)
(declare-fun x1060 () Int)
(declare-fun x1762 () x472)
(declare-fun x648 () Int)
(declare-fun x1196 () Bool)
(declare-fun x1776 () Int)
(declare-fun x719 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x196 () Bool)
(declare-fun x32 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x695 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x512 () Bool)
(declare-fun x879 () x472)
(declare-fun x1615 () Int)
(declare-fun x376 () Bool)
(declare-fun x622 () x472)
(declare-fun x867 () Int)
(declare-fun x461 () Int)
(declare-fun x1787 () Int)
(declare-fun x1165 () Int)
(declare-fun x790 () Int)
(declare-fun x100 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x1435 (Int Int) Int)
(declare-fun x1116 () Int)
(declare-fun x740 () Int)
(declare-fun x1631 () Bool)
(declare-fun x1126 () Int)
(declare-fun x498 () Bool)
(declare-fun x153 () Int)
(declare-fun x327 (Int) Int)
(declare-fun x1533 () Bool)
(declare-fun x1675 () Int)
(declare-fun x1097 () Bool)
(declare-fun x320 () Bool)
(declare-fun x92 () Bool)
(declare-fun x553 () Bool)
(declare-fun x966 () Bool)
(declare-fun x649 () Int)
(declare-fun x1712 () Int)
(declare-fun x346 () Bool)
(declare-fun x838 () Int)
(declare-fun x598 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x237 () Bool)
(declare-fun x684 () Bool)
(declare-fun x468 () Bool)
(declare-fun x1233 () Int)
(declare-fun x1377 () Bool)
(declare-fun x693 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x605 () Bool)
(declare-fun x168 () Bool)
(declare-fun x812 () Bool)
(declare-fun x1733 () x472)
(declare-fun x616 () Int)
(declare-fun x1984 () Bool)
(declare-fun x758 () x472)
(declare-fun x804 () x472)
(declare-fun x236 () Int)
(declare-fun x1985 () Bool)
(declare-fun x918 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x444 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x1784 () Int)
(declare-fun x929 () Bool)
(declare-fun x1238 () x472)
(declare-fun x534 () Int)
(declare-fun x176 () x472)
(declare-fun x1265 () Int)
(declare-fun x607 () Bool)
(declare-fun x1272 () Int)
(declare-fun x2035 () Bool)
(declare-fun x474 () Bool)
(declare-fun x491 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x138 () Int)
(declare-fun x924 () Int)
(declare-fun x275 () Int)
(declare-fun x818 () Int)
(declare-fun x1498 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x527 () Int)
(declare-fun x1129 () Int)
(declare-fun x2039 () Int)
(declare-fun x314 () Int)
(declare-fun x983 () Bool)
(declare-fun x68 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x309 () Int)
(declare-fun x210 (Int) Int)
(declare-fun x1247 () Int)
(declare-fun x1845 () x472)
(declare-fun x417 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1861 () Int)
(declare-fun x759 () Bool)
(declare-fun x730 () Bool)
(declare-fun x7 () Int)
(declare-fun x1801 () Int)
(declare-fun x694 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x1457 () Int)
(declare-fun x114 () Bool)
(declare-fun x577 () Int)
(declare-fun x76 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x378 () Bool)
(declare-fun x405 () Bool)
(declare-fun x1092 () Int)
(declare-fun x1236 () Bool)
(declare-fun x1252 () Int)
(declare-fun x1148 () x472)
(declare-fun x169 () Bool)
(declare-fun x917 () x472)
(declare-fun x1874 () Int)
(declare-fun x463 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x686 () Int)
(declare-fun x1168 () x472)
(declare-fun x936 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x899 () Bool)
(declare-fun x19 () Int)
(declare-fun x904 () Int)
(declare-fun x1225 () Bool)
(declare-fun x1492 () Int)
(declare-fun x712 () Bool)
(declare-fun x587 () Bool)
(declare-fun x770 () Int)
(declare-fun x63 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x1487 () Int)
(declare-fun x1589 () Int)
(declare-fun x326 () Int)
(declare-fun x852 () Bool)
(declare-fun x835 () Bool)
(declare-fun x1904 () Int)
(declare-fun x1343 () Bool)
(declare-fun x1681 () Int)
(declare-fun x1875 () Int)
(declare-fun x233 () Int)
(declare-fun x259 () Bool)
(declare-fun x26 () Bool)
(declare-fun x1906 () Int)
(declare-fun x601 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x30 () Bool)
(declare-fun x1410 () Int)
(declare-fun x322 () Bool)
(declare-fun x1745 () Bool)
(declare-fun x197 () Int)
(declare-fun x837 (Int) Int)
(declare-fun x1467 () Bool)
(declare-fun x2050 () Int)
(declare-fun x826 () Int)
(declare-fun x198 () x472)
(declare-fun x1837 () Bool)
(declare-fun x523 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x785 () x472)
(declare-fun x2016 () x472)
(declare-fun x1803 () Bool)
(declare-fun x39 () Int)
(declare-fun x1249 () Bool)
(declare-fun x729 () Int)
(declare-fun x1709 () Bool)
(declare-fun x125 () Int)
(declare-fun x34 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x1637 () Int)
(declare-fun x1863 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x961 () Bool)
(declare-fun x951 () x472)
(declare-fun x1452 () Int)
(declare-fun x1149 () Int)
(declare-fun x1814 () Bool)
(declare-fun x633 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1729 () Bool)
(declare-fun x894 () Bool)
(declare-fun x1351 () Int)
(declare-fun x909 () Int)
(declare-fun x18 () Bool)
(declare-fun x698 () Int)
(declare-fun x394 () Bool)
(declare-fun x20 () Bool)
(declare-fun x775 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x229 () Int)
(declare-fun x1763 () Bool)
(declare-fun x155 () Int)
(declare-fun x2005 () Int)
(declare-fun x1633 () Bool)
(declare-fun x1966 () Int)
(declare-fun x492 () Int)
(declare-fun x2019 () Int)
(declare-fun x1697 () Bool)
(declare-fun x652 () x472)
(declare-fun x1036 () Bool)
(declare-fun x117 () Int)
(declare-fun x1274 () Int)
(declare-fun x1652 () Int)
(declare-fun x1594 () Bool)
(declare-fun x1077 () x472)
(declare-fun x1469 () Bool)
(declare-fun x397 () Bool)
(declare-fun x451 (x472) Int)
(declare-fun x933 () Int)
(declare-fun x1263 () Int)
(declare-fun x1728 () Bool)
(declare-fun x37 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1732 () Int)
(declare-fun x184 () x472)
(declare-fun x1810 () Int)
(declare-fun x901 () Int)
(declare-fun x1626 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x925 () Int)
(declare-fun x1164 () Bool)
(declare-fun x252 () Int)
(declare-fun x1415 () Int)
(declare-fun x1202 () Int)
(declare-fun x1623 (x472) Int)
(declare-fun x2002 () Bool)
(declare-fun x2027 () x472)
(declare-fun x496 () Int)
(declare-fun x1578 () Bool)
(declare-fun x635 () Bool)
(declare-fun x513 () Bool)
(declare-fun x347 () Bool)
(declare-fun x1071 () Int)
(declare-fun x1583 () Bool)
(declare-fun x409 () Int)
(declare-fun x944 () Bool)
(declare-fun x1094 () Int)
(declare-fun x195 () Bool)
(declare-fun x1363 () Int)
(declare-fun x71 () x472)
(declare-fun x854 () Int)
(declare-fun x620 () Bool)
(declare-fun x1340 () Int)
(declare-fun x389 () Int)
(declare-fun x896 () Int)
(declare-fun x262 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x178 () x472)
(declare-fun x1395 () Bool)
(declare-fun x797 () Int)
(declare-fun x1930 () Bool)
(declare-fun x70 () Int)
(declare-fun x685 () Bool)
(declare-fun x1840 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1485 () Int)
(declare-fun x907 () Int)
(declare-fun x1669 () Bool)
(declare-fun x342 () Bool)
(declare-fun x913 () Int)
(declare-fun x1774 () Bool)
(declare-fun x453 () Int)
(declare-fun x438 () Int)
(declare-fun x431 () Int)
(declare-fun x282 (x472) Int)
(declare-fun x284 () Int)
(declare-fun x1222 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x1530 () Int)
(declare-fun x1047 () Int)
(declare-fun x1269 () Int)
(declare-fun x185 () Bool)
(declare-fun x606 () Bool)
(declare-fun x1285 () Int)
(declare-fun x1278 () Bool)
(declare-fun x1646 () Int)
(declare-fun x387 () Bool)
(declare-fun x777 () x472)
(declare-fun x1773 () Int)
(declare-fun x1865 () Bool)
(declare-fun x780 () Int)
(declare-fun x219 () Int)
(declare-fun x344 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x228 () Int)
(declare-fun x1124 () Int)
(declare-fun x205 () Int)
(declare-fun x528 () Int)
(declare-fun x1602 () Int)
(declare-fun x302 () Int)
(declare-fun x519 () Bool)
(declare-fun x1287 () Int)
(declare-fun x795 () Bool)
(declare-fun x2001 () Int)
(declare-fun x1206 () Int)
(declare-fun x1100 () x472)
(declare-fun x1718 () Int)
(declare-fun x1629 () Int)
(declare-fun x101 () Int)
(declare-fun x1896 () Bool)
(declare-fun x348 () Int)
(declare-fun x194 () Int)
(declare-fun x1306 () Bool)
(declare-fun x1857 () Int)
(declare-fun x1388 () Int)
(declare-fun x645 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x845 () Int)
(declare-fun x1290 () x472)
(declare-fun x1752 () Bool)
(declare-fun x494 () Int)
(declare-fun x1191 () Bool)
(declare-fun x1113 () Int)
(declare-fun x395 () Int)
(declare-fun x1302 () Int)
(declare-fun x158 () Int)
(declare-fun x497 () Bool)
(declare-fun x171 () Int)
(declare-fun x1682 () Bool)
(declare-fun x673 () Int)
(declare-fun x520 () Bool)
(declare-fun x1905 () Int)
(declare-fun x949 () Bool)
(declare-fun x215 () Int)
(declare-fun x28 () Int)
(declare-fun x955 () Int)
(declare-fun x11 () Bool)
(declare-fun x218 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x948 () Bool)
(declare-fun x783 () Int)
(declare-fun x242 () Int)
(declare-fun x1946 () x472)
(declare-fun x1577 () Int)
(declare-fun x375 () Int)
(declare-fun x12 () Bool)
(declare-fun x46 () Int)
(declare-fun x967 () Int)
(declare-fun x418 () Int)
(declare-fun x793 () Bool)
(declare-fun x1354 () Int)
(declare-fun x1154 () Int)
(declare-fun x580 () Int)
(declare-fun x819 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x923 () Bool)
(declare-fun x360 () Int)
(declare-fun x903 (Int) Int)
(declare-fun x1542 () Bool)
(declare-fun x179 () Bool)
(declare-fun x94 () Int)
(declare-fun x943 () Bool)
(declare-fun x1483 () Int)
(declare-fun x1661 () x472)
(declare-fun x654 () x472)
(declare-fun x15 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x1982 () x472)
(declare-fun x1636 () Int)
(declare-fun x530 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x856 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x1366 () Int)
(declare-fun x1974 () Int)
(declare-fun x1253 () Bool)
(declare-fun x529 () Bool)
(declare-fun x981 () Bool)
(declare-fun x475 (x472) Int)
(declare-fun x131 () Int)
(declare-fun x1177 () x472)
(declare-fun x183 () Int)
(declare-fun x256 () x472)
(declare-fun x157 () x472)
(declare-fun x1654 () Int)
(declare-fun x1162 () Bool)
(declare-fun x926 () Bool)
(declare-fun x272 () Int)
(declare-fun x927 () Int)
(declare-fun x1605 () Bool)
(declare-fun x617 () Bool)
(declare-fun x939 () x472)
(declare-fun x1190 () x472)
(declare-fun x1411 () Bool)
(declare-fun x875 () Int)
(declare-fun x1573 () Int)
(declare-fun x1619 () Int)
(declare-fun x1219 () x472)
(declare-fun x1798 () x472)
(declare-fun x773 () Int)
(declare-fun x1082 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x1431 () Int)
(declare-fun x1239 () Bool)
(declare-fun x25 () Bool)
(declare-fun x1062 () Int)
(declare-fun x928 () Bool)
(declare-fun x549 () Int)
(declare-fun x743 () Int)
(declare-fun x1508 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x1912 () Int)
(declare-fun x716 () x472)
(declare-fun x1519 () Int)
(declare-fun x864 () Int)
(declare-fun x411 () Bool)
(declare-fun x307 () Bool)
(declare-fun x921 () Bool)
(declare-fun x1500 () x472)
(declare-fun x1173 () Bool)
(declare-fun x533 () Bool)
(declare-fun x2014 () Int)
(declare-fun x831 () Int)
(declare-fun x1021 () Bool)
(declare-fun x666 () x472)
(declare-fun x641 () Bool)
(declare-fun x2013 () Int)
(declare-fun x355 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x6 () Int)
(declare-fun x509 () Int)
(declare-fun x1958 () Bool)
(declare-fun x1821 () Int)
(declare-fun x77 () Int)
(declare-fun x825 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x222 () Int)
(declare-fun x889 () Bool)
(declare-fun x827 () Bool)
(declare-fun x724 () Bool)
(declare-fun x1850 () Int)
(declare-fun x1680 () x472)
(declare-fun x1295 () Int)
(declare-fun x220 () x472)
(declare-fun x1690 () Int)
(declare-fun x1301 () Bool)
(declare-fun x238 () Int)
(declare-fun x1005 () Bool)
(declare-fun x1507 () x472)
(declare-fun x1554 () Bool)
(declare-fun x393 () Bool)
(declare-fun x2044 () Int)
(declare-fun x335 () Bool)
(declare-fun x623 () Bool)
(declare-fun x441 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x800 () Int)
(declare-fun x310 () Int)
(declare-fun x958 () x472)
(declare-fun x619 () Bool)
(declare-fun x564 () Int)
(declare-fun x906 () Int)
(declare-fun x58 () Int)
(declare-fun x231 () Bool)
(declare-fun x1761 () Int)
(declare-fun x733 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x1293 () Int)
(declare-fun x651 () Bool)
(declare-fun x90 () Int)
(declare-fun x1403 () x472)
(declare-fun x579 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x731 () Int)
(declare-fun x591 () Int)
(declare-fun x935 () Bool)
(declare-fun x57 () x472)
(declare-fun x1211 () Bool)
(declare-fun x1475 () Int)
(declare-fun x1169 () Bool)
(declare-fun x806 () Bool)
(declare-fun x426 () Int)
(declare-fun x1015 () Bool)
(declare-fun x891 () x472)
(declare-fun x1468 () Int)
(declare-fun x400 () Bool)
(declare-fun x454 () Bool)
(declare-fun x129 () x472)
(declare-fun x482 () Int)
(declare-fun x1256 () Bool)
(declare-fun x1448 () Int)
(declare-fun x432 () Bool)
(declare-fun x1828 () Int)
(declare-fun x249 (x472) Int)
(declare-fun x2000 () Bool)
(declare-fun x768 () Int)
(declare-fun x848 () Bool)
(declare-fun x805 () Bool)
(declare-fun x107 () Bool)
(declare-fun x1714 () Int)
(declare-fun x946 () Bool)
(declare-fun x386 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x574 () Int)
(declare-fun x829 () Bool)
(declare-fun x246 () Bool)
(declare-fun x1070 () x472)
(declare-fun x774 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1311 () Int)
(declare-fun x1218 () Bool)
(declare-fun x130 () Bool)
(declare-fun x1324 () Int)
(declare-fun x398 () Int)
(declare-fun x53 () Bool)
(declare-fun x1232 () Int)
(declare-fun x480 () Int)
(declare-fun x1441 () x472)
(declare-fun x1757 () Int)
(declare-fun x3 () Int)
(declare-fun x1927 () Bool)
(declare-fun x473 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x61 () Int)
(declare-fun x113 () Int)
(declare-fun x1925 () x472)
(declare-fun x244 () Int)
(declare-fun x1769 () Int)
(declare-fun x945 () Int)
(declare-fun x1258 () x472)
(declare-fun x603 () Bool)
(declare-fun x424 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x718 () Int)
(declare-fun x850 () Bool)
(declare-fun x986 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x501 () x472)
(declare-fun x1834 () Int)
(declare-fun x296 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x627 () Int)
(declare-fun x1965 () Int)
(declare-fun x669 () x472)
(declare-fun x202 () Bool)
(declare-fun x1179 () Int)
(declare-fun x1887 () Int)
(declare-fun x814 () Bool)
(declare-fun x883 () Bool)
(declare-fun x292 () Bool)
(declare-fun x374 () Bool)
(declare-fun x1943 () Int)
(declare-fun x159 () Bool)
(declare-fun x655 () Int)
(declare-fun x204 () Int)
(declare-fun x1923 () Bool)
(declare-fun x78 () Bool)
(declare-fun x318 () Int)
(declare-fun x1644 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x1707 () Int)
(declare-fun x460 () Int)
(declare-fun x305 () Bool)
(declare-fun x128 () Bool)
(declare-fun x1536 () Int)
(declare-fun x1532 () Int)
(declare-fun x2052 () Bool)
(declare-fun x542 () Bool)
(declare-fun x1708 () Int)
(declare-fun x1420 () Bool)
(declare-fun x895 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x1421 () x472)
(declare-fun x1588 () Bool)
(declare-fun x1972 () Int)
(declare-fun x681 () x472)
(declare-fun x312 () x472)
(declare-fun x992 () Int)
(declare-fun x1194 () Int)
(declare-fun x224 () Bool)
(declare-fun x514 () Bool)
(declare-fun x1264 () Int)
(declare-fun x316 () Int)
(declare-fun x211 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1976 () Int)
(declare-fun x1529 () Int)
(declare-fun x2029 () Int)
(declare-fun x452 () Int)
(declare-fun x1607 () Bool)
(declare-fun x1353 () Bool)
(declare-fun x706 () Bool)
(declare-fun x415 () Int)
(declare-fun x382 () Int)
(declare-fun x119 (Int) Int)
(declare-fun x615 () Bool)
(declare-fun x1120 () Int)
(declare-fun x1104 () Bool)
(declare-fun x317 () Int)
(declare-fun x1567 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x36 () Int)
(declare-fun x1843 () Bool)
(declare-fun x1052 () Int)
(declare-fun x1447 () Int)
(declare-fun x711 () Int)
(declare-fun x751 () Bool)
(declare-fun x450 () Int)
(declare-fun x485 () Bool)
(declare-fun x164 () Int)
(declare-fun x2003 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x1539 () x472)
(declare-fun x982 () Bool)
(declare-fun x1511 () Int)
(declare-fun x560 () Bool)
(declare-fun x291 () Int)
(declare-fun x765 () x472)
(declare-fun x541 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x1046 () Int)
(declare-fun x1270 () Bool)
(declare-fun x331 () Bool)
(declare-fun x1778 () x472)
(declare-fun x1614 () Bool)
(declare-fun x44 () Int)
(declare-fun x1748 () Int)
(declare-fun x1175 () x472)
(declare-fun x31 () Int)
(declare-fun x81 () Bool)
(declare-fun x650 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x402 () Bool)
(declare-fun x1334 () Int)
(declare-fun x235 () Bool)
(declare-fun x410 () Int)
(declare-fun x343 () Bool)
(declare-fun x643 () Bool)
(declare-fun x2051 () Int)
(declare-fun x919 () x472)
(declare-fun x73 () x472)
(declare-fun x165 () Bool)
(declare-fun x877 () Int)
(declare-fun x1990 () Bool)
(declare-fun x359 () x472)
(declare-fun x1880 () Bool)
(declare-fun x303 () Int)
(declare-fun x1084 () Int)
(declare-fun x1367 () Bool)
(declare-fun x668 () Bool)
(declare-fun x1110 () Int)
(declare-fun x1792 () Int)
(declare-fun x1138 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x738 () Bool)
(declare-fun x980 () Bool)
(declare-fun x841 () Int)
(declare-fun x93 () Int)
(declare-fun x1671 () Int)
(declare-fun x1523 () Int)
(declare-fun x624 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x110 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x575 () Int)
(declare-fun x1145 () Int)
(declare-fun x1321 () Int)
(declare-fun x1228 () Bool)
(declare-fun x876 () Int)
(declare-fun x1496 () Bool)
(declare-fun x1130 () Int)
(declare-fun x585 () Bool)
(declare-fun x1024 () Int)
(declare-fun x1706 () Int)
(declare-fun x1603 () Int)
(declare-fun x1531 () Bool)
(declare-fun x66 () Bool)
(declare-fun x2028 () Int)
(declare-fun x255 () Bool)
(declare-fun x868 () Int)
(declare-fun x892 () Bool)
(declare-fun x596 () Int)
(declare-fun x1394 () Int)
(declare-fun x264 () Bool)
(declare-fun x880 () Bool)
(declare-fun x354 () Int)
(declare-fun x788 () Bool)
(declare-fun x332 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x2 () Int)
(declare-fun x796 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x166 () Int)
(declare-fun x1504 () x472)
(declare-fun x1765 () Bool)
(declare-fun x1444 () Int)
(declare-fun x548 () Int)
(declare-fun x1146 () Bool)
(declare-fun x406 () Int)
(declare-fun x35 () Int)
(declare-fun x631 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x97 () Bool)
(declare-fun x610 () Bool)
(declare-fun x2038 () Int)
(declare-fun x337 () Int)
(declare-fun x1651 () Int)
(declare-fun x1753 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x1213 () Int)
(declare-fun x1341 () Int)
(declare-fun x414 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x1505 () Int)
(declare-fun x1903 () Bool)
(declare-fun x104 () Bool)
(declare-fun x538 () x472)
(declare-fun x1331 () Int)
(declare-fun x306 () x472)
(declare-fun x665 () x472)
(declare-fun x551 () Int)
(declare-fun x1945 () Int)
(declare-fun x736 () Int)
(declare-fun x1867 () Int)
(declare-fun x134 () Int)
(declare-fun x1317 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x388 () Bool)
(declare-fun x190 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x445 () x472)
(declare-fun x1172 () Bool)
(declare-fun x95 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x459 () Int)
(declare-fun x1940 () Bool)
(declare-fun x1547 () Int)
(declare-fun x969 () Int)
(declare-fun x1316 () Bool)
(declare-fun x1808 () Int)
(declare-fun x181 () Int)
(declare-fun x1054 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x1422 () Int)
(declare-fun x1140 () Int)
(declare-fun x647 () Int)
(declare-fun x1033 () Int)
(declare-fun x1800 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1731 () Int)
(declare-fun x672 () Int)
(declare-fun x1387 () Int)
(declare-fun x866 () Bool)
(declare-fun x257 () x472)
(declare-fun x1076 () Int)
(declare-fun x1414 () Int)
(declare-fun x1147 () Bool)
(declare-fun x1847 () Int)
(declare-fun x1376 () Bool)
(declare-fun x844 () Bool)
(declare-fun x816 () Int)
(declare-fun x1764 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1759 () Int)
(declare-fun x1012 (Int) Int)
(declare-fun x385 () x472)
(declare-fun x290 () Int)
(declare-fun x1187 () Bool)
(declare-fun x1482 (x472) Int)
(declare-fun x1499 () Int)
(declare-fun x849 () Bool)
(declare-fun x283 () Int)
(declare-fun x1342 () Int)
(declare-fun x1931 () x472)
(declare-fun x373 () Int)
(declare-fun x64 () Bool)
(declare-fun x447 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1080 () Bool)
(declare-fun x304 () Bool)
(declare-fun x1201 () Int)
(declare-fun x1142 () Bool)
(declare-fun x399 () Bool)
(declare-fun x683 () Int)
(declare-fun x1096 () Bool)
(declare-fun x419 (x472) Int)
(declare-fun x1740 () Int)
(declare-fun x1548 () Int)
(declare-fun x1831 () Bool)
(declare-fun x857 () Int)
(declare-fun x365 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x5 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x379 () Int)
(declare-fun x1277 () Bool)
(declare-fun x1516 () Int)
(declare-fun x1151 () Bool)
(declare-fun x1262 () Int)
(declare-fun x1443 () Int)
(declare-fun x1902 () Int)
(declare-fun x1964 () Bool)
(declare-fun x65 () Bool)
(declare-fun x1402 () Int)
(declare-fun x571 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1924 () x472)
(declare-fun x1257 () Bool)
(declare-fun x437 () Int)
(declare-fun x1796 () Bool)
(declare-fun x135 () Int)
(declare-fun x1141 () Int)
(declare-fun x1780 () Int)
(declare-fun x1820 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x413 () Bool)
(declare-fun x941 () Int)
(declare-fun x1192 () Int)
(declare-fun x1189 (Int Int) Int)
(declare-fun x741 () Int)
(declare-fun x1703 () Int)
(declare-fun x495 () Int)
(declare-fun x744 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x702 () Int)
(declare-fun x1396 () Int)
(declare-fun x1932 () Int)
(declare-fun x704 () Int)
(declare-fun x1727 () Int)
(declare-fun x760 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x861 () Bool)
(declare-fun x456 () Int)
(declare-fun x996 () Int)
(declare-fun x572 () Bool)
(declare-fun x465 () Int)
(declare-fun x593 () Int)
(declare-fun x1524 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x1391 () x472)
(declare-fun x709 () Bool)
(declare-fun x1409 () Int)
(declare-fun x1356 () Int)
(declare-fun x1628 () x472)
(declare-fun x1596 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x833 () x472)
(declare-fun x890 () Int)
(declare-fun x1271 () Bool)
(declare-fun x573 () Bool)
(declare-fun x807 (Int) x472)
(declare-fun x308 () Bool)
(declare-fun x62 () Int)
(declare-fun x139 () Bool)
(declare-fun x384 () Bool)
(declare-fun x691 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x1544 () Int)
(declare-fun x1998 () x472)
(declare-fun x1074 () Int)
(declare-fun x1911 (Int) Int)
(declare-fun x1665 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x688 () Int)
(declare-fun x301 () Bool)
(declare-fun x1754 () Int)
(declare-fun x505 () Int)
(declare-fun x588 () Bool)
(declare-fun x934 () Int)
(declare-fun x2034 () Int)
(declare-fun x86 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x725 () Bool)
(declare-fun x477 () Bool)
(declare-fun x642 () Int)
(declare-fun x661 () Bool)
(declare-fun x1715 () Int)
(declare-fun x931 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x563 () Int)
(declare-fun x1560 () Int)
(declare-fun x1736 () Bool)
(declare-fun x569 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1565 () Int)
(declare-fun x1848 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1725 () Int)
(declare-fun x1913 () Int)
(declare-fun x1043 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x245 () Int)
(declare-fun x369 () Bool)
(declare-fun x1892 () Int)
(declare-fun x412 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x1538 () Int)
(declare-fun x594 () Int)
(declare-fun x1174 () Int)
(declare-fun x1103 () Int)
(declare-fun x639 () Bool)
(declare-fun x1918 () Int)
(declare-fun x1853 () Bool)
(declare-fun x1860 () x472)
(declare-fun x581 () Bool)
(declare-fun x604 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x905 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x1153 () Int)
(declare-fun x1956 () Int)
(declare-fun x1016 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x421 (x472) Int)
(declare-fun x703 () Int)
(declare-fun x232 () Bool)
(declare-fun x555 () Int)
(declare-fun x1601 () Int)
(declare-fun x1520 () Int)
(declare-fun x910 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x345 () Int)
(declare-fun x846 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x628 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x206 () Int)
(declare-fun x1221 () Int)
(declare-fun x1987 () Int)
(declare-fun x462 () Bool)
(declare-fun x1260 () Int)
(declare-fun x1389 () Bool)
(declare-fun x390 () x472)
(declare-fun x2046 () Int)
(declare-fun x1073 () x472)
(declare-fun x526 () Int)
(declare-fun x1401 () Bool)
(declare-fun x1804 () Int)
(declare-fun x1428 () Int)
(declare-fun x60 () Int)
(declare-fun x1368 () Bool)
(declare-fun x859 () Bool)
(declare-fun x1540 () Int)
(declare-fun x1486 () Int)
(declare-fun x1739 () Bool)
(declare-fun x1001 () Int)
(declare-fun x510 () Int)
(declare-fun x324 () Int)
(declare-fun x361 () x472)
(declare-fun x328 () Bool)
(declare-fun x160 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x914 () x472)
(declare-fun x1543 () Bool)
(declare-fun x1977 () x472)
(declare-fun x1136 () Int)
(declare-fun x356 () Bool)
(declare-fun x974 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x828 () Bool)
(declare-fun x613 () Int)
(declare-fun x336 () Bool)
(declare-fun x1662 (x472) Int)
(declare-fun x338 () Bool)
(declare-fun x1386 () Int)
(declare-fun x1358 () Bool)
(declare-fun x24 () Int)
(declare-fun x1898 () Int)
(declare-fun x1885 () Bool)
(declare-fun x634 () Int)
(declare-fun x1751 () x472)
(declare-fun x1185 () Int)
(declare-fun x1379 () Bool)
(declare-fun x803 () Bool)
(declare-fun x1050 () Int)
(declare-fun x1872 () Bool)
(declare-fun x1666 () Int)
(declare-fun x834 () Bool)
(declare-fun x568 () Int)
(declare-fun x750 () Int)
(declare-fun x612 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x1746 () Int)
(declare-fun x1053 () Int)
(declare-fun x602 () x472)
(declare-fun x1781 () Int)
(declare-fun x102 () Int)
(declare-fun x1098 () Int)
(declare-fun x735 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x632 () Int)
(declare-fun x1328 () Int)
(declare-fun x263 () Bool)
(declare-fun x1157 () Int)
(declare-fun x428 (x472) Int)
(declare-fun x887 () Int)
(declare-fun x2036 () Int)
(declare-fun x1928 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x973 () Int)
(declare-fun x225 () Bool)
(declare-fun x629 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x141 () Int)
(declare-fun x1917 () Bool)
(declare-fun x1920 () Int)
(declare-fun x1090 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x747 () Int)
(declare-fun x752 () Int)
(declare-fun x599 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x1476 () Int)
(declare-fun x535 () Bool)
(declare-fun x968 () x472)
(declare-fun x932 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1981 () Bool)
(declare-fun x511 () Int)
(declare-fun x1658 () Int)
(declare-fun x1907 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x690 () Bool)
(declare-fun x499 () Int)
(declare-fun x1510 () Bool)
(declare-fun x754 () Bool)
(declare-fun x677 () Bool)
(declare-fun x383 () x472)
(declare-fun x1375 () Int)
(declare-fun x1999 () Bool)
(declare-fun x582 () Int)
(declare-fun x1234 () Int)
(declare-fun x881 () Int)
(declare-fun x1640 () x472)
(declare-fun x1049 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x243 () Bool)
(declare-fun x584 () x472)
(declare-fun x1006 () Bool)
(declare-fun x486 () Int)
(declare-fun x1953 () x472)
(declare-fun x822 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x143 () Bool)
(declare-fun x998 () Int)
(declare-fun x1612 () Bool)
(declare-fun x142 () x472)
(declare-fun x1747 () x472)
(declare-fun x1312 () Int)
(declare-fun x1819 () Bool)
(declare-fun x930 () Int)
(declare-fun x2017 () Bool)
(declare-fun x1215 () Int)
(declare-fun x1220 () Bool)
(declare-fun x1724 () Int)
(declare-fun x109 () x472)
(declare-fun x358 () Int)
(declare-fun x734 () Int)
(declare-fun x285 () x472)
(declare-fun x1429 () Bool)
(declare-fun x41 () Int)
(declare-fun x1667 () Int)
(declare-fun x172 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x1968 (Int) Int)
(declare-fun x1405 () Int)
(declare-fun x466 () Bool)
(declare-fun x1521 () Int)
(declare-fun x1663 () Int)
(declare-fun x372 () Bool)
(declare-fun x339 () Bool)
(declare-fun x313 () Int)
(declare-fun x1188 () Bool)
(declare-fun x464 () Bool)
(declare-fun x1135 () Int)
(declare-fun x1525 () Bool)
(declare-fun x240 () Int)
(declare-fun x1131 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x855 () Int)
(declare-fun x1181 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x843 () Int)
(declare-fun x1384 () x472)
(declare-fun x1034 () Bool)
(declare-fun x1852 () Int)
(declare-fun x1869 () Int)
(declare-fun x1008 () Int)
(declare-fun x1895 () Int)
(declare-fun x2026 () Int)
(declare-fun x840 () Int)
(declare-fun x869 () Int)
(declare-fun x705 () Bool)
(declare-fun x1250 () Int)
(declare-fun x1719 () Bool)
(declare-fun x1593 () Int)
(declare-fun x1791 () Int)
(declare-fun x1009 () x472)
(declare-fun x321 () Bool)
(declare-fun x1055 () Int)
(declare-fun x823 () Int)
(declare-fun x434 () Bool)
(declare-fun x950 () Bool)
(declare-fun x1856 () x472)
(declare-fun x55 () Int)
(declare-fun x886 () Bool)
(declare-fun x1627 () Int)
(declare-fun x1549 () Int)
(declare-fun x333 () Int)
(declare-fun x136 () Bool)
(declare-fun x1849 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x330 () x472)
(declare-fun x1276 () x472)
(declare-fun x274 () Int)
(declare-fun x1425 () Bool)
(declare-fun x689 () Int)
(declare-fun x1303 () Int)
(declare-fun x851 () Bool)
(declare-fun x287 () x472)
(declare-fun x1805 () Bool)
(declare-fun x767 () Int)
(declare-fun x1349 () Bool)
(declare-fun x994 () Int)
(declare-fun x1119 () Int)
(declare-fun x366 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x1237 () Int)
(declare-fun x127 () Int)
(declare-fun x817 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1436 () Int)
(declare-fun x609 () Bool)
(declare-fun x1501 () Int)
(declare-fun x715 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x2025 () Int)
(declare-fun x1716 () Int)
(declare-fun x260 () Int)
(declare-fun x1788 () Bool)
(declare-fun x912 () Bool)
(declare-fun x799 () Bool)
(declare-fun x1645 () Int)
(declare-fun x2047 () Bool)
(declare-fun x1163 () Int)
(declare-fun x1424 () Bool)
(declare-fun x862 () Int)
(declare-fun x1760 () Int)
(declare-fun x749 () Int)
(declare-fun x952 () Int)
(declare-fun x273 () Int)
(declare-fun x742 () x472)
(declare-fun x325 () Int)
(declare-fun x1123 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1854 () Int)
(declare-fun x422 () Bool)
(declare-fun x847 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x1625 () Int)
(declare-fun x971 () Bool)
(declare-fun x755 () Bool)
(declare-fun x778 () Int)
(declare-fun x2055 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1823 () Bool)
(declare-fun x311 () Bool)
(declare-fun x1463 () Int)
(declare-fun x1758 () Int)
(declare-fun x1284 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x653 () Bool)
(declare-fun x188 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x479 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x772 () Int)
(declare-fun x193 () Int)
(declare-fun x42 () Int)
(declare-fun x1659 () Bool)
(declare-fun x885 () Bool)
(declare-fun x269 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x404 () Bool)
(declare-fun x811 () Int)
(declare-fun x280 () Bool)
(declare-fun x74 () Int)
(declare-fun x1478 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1298 () x472)
(declare-fun x1979 () Int)
(declare-fun x1693 () x472)
(declare-fun x85 () Bool)
(declare-fun x1768 () Int)
(declare-fun x1451 () Int)
(declare-fun x567 () Int)
(declare-fun x1426 () x472)
(declare-fun x2030 () Int)
(declare-fun x902 () Int)
(declare-fun x720 () Int)
(declare-fun x1057 () Bool)
(declare-fun x170 () Int)
(declare-fun x975 () Bool)
(declare-fun x177 () Bool)
(declare-fun x737 () Bool)
(declare-fun x1622 () Int)
(declare-fun x49 (x472) Int)
(declare-fun x723 () Bool)
(declare-fun x1582 () Int)
(declare-fun x174 () Bool)
(declare-fun x1315 () Int)
(declare-fun x1488 () Int)
(declare-fun x1835 () Int)
(declare-fun x1992 () Bool)
(declare-fun x1738 () Int)
(declare-fun x1035 () Int)
(declare-fun x1240 () Int)
(declare-fun x1406 () Int)
(declare-fun x481 () Bool)
(declare-fun x1687 () Int)
(declare-fun x200 () Bool)
(declare-fun x748 () x472)
(declare-fun x1286 () Int)
(declare-fun x942 () Int)
(declare-fun x1914 () Bool)
(declare-fun x1991 () Int)
(declare-fun x1635 () Int)
(declare-fun x1779 () Int)
(declare-fun x2031 () Int)
(declare-fun x586 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x457 () Int)
(declare-fun x145 () Bool)
(declare-fun x658 () Int)
(declare-fun x965 () x472)
(declare-fun x1032 () x472)
(declare-fun x830 () Bool)
(declare-fun x726 () Bool)
(declare-fun x908 () Int)
(declare-fun x657 () Int)
(declare-fun x1795 () Bool)
(declare-fun x938 () Bool)
(declare-fun x1209 () Int)
(declare-fun x531 () Bool)
(declare-fun x787 () Bool)
(declare-fun x1003 () Int)
(declare-fun x1584 () x472)
(declare-fun x1704 () Int)
(declare-fun x87 () Int)
(declare-fun x1244 () Int)
(declare-fun x1624 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1806 () Bool)
(declare-fun x1604 () Int)
(declare-fun x1347 () Int)
(declare-fun x98 () Int)
(declare-fun x1586 () Int)
(declare-fun x1553 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x757 () Bool)
(declare-fun x1963 () Int)
(declare-fun x1600 () Bool)
(declare-fun x1023 () Int)
(declare-fun x1197 () Int)
(declare-fun x954 () Bool)
(declare-fun x203 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x266 () Int)
(declare-fun x1650 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x2045 () Int)
(declare-fun x766 () Int)
(declare-fun x1702 () Int)
(declare-fun x508 () Bool)
(declare-fun x552 () Bool)
(declare-fun x371 () Int)
(declare-fun x1726 () Int)
(declare-fun x226 () Bool)
(declare-fun x522 () Bool)
(declare-fun x957 () Int)
(declare-fun x696 () Bool)
(declare-fun x407 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x1744 () x472)
(declare-fun x1522 () Int)
(declare-fun x595 () Int)
(declare-fun x1210 () Bool)
(declare-fun x1884 () Int)
(declare-fun x1517 () Int)
(declare-fun x764 () Bool)
(declare-fun x842 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x443 () Bool)
(declare-fun x1564 () Int)
(declare-fun x873 () x472)
(declare-fun x789 () Int)
(declare-fun x1951 () x472)
(declare-fun x1832 () Int)
(declare-fun x146 () x472)
(declare-fun x1797 () Bool)
(declare-fun x1782 () Int)
(declare-fun x1346 () Bool)
(declare-fun x1323 () Int)
(declare-fun x1676 () Int)
(declare-fun x547 () Int)
(declare-fun x1399 () Int)
(declare-fun x299 () Bool)
(declare-fun x47 () Int)
(declare-fun x1352 () Int)
(declare-fun x1014 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x1513 () Int)
(declare-fun x1827 () Int)
(declare-fun x878 () Int)
(declare-fun x208 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x1114 () x472)
(declare-fun x151 () Bool)
(declare-fun x2021 () x472)
(declare-fun x1152 () Bool)
(declare-fun x920 () Bool)
(declare-fun x960 () Bool)
(declare-fun x253 () Int)
(declare-fun x1494 () Int)
(declare-fun x279 () Int)
(declare-fun x2008 () Bool)
(declare-fun x630 () Int)
(declare-fun x1785 () Bool)
(declare-fun x1657 () x472)
(declare-fun x675 () Int)
(declare-fun x493 () Bool)
(declare-fun x1105 () Int)
(declare-fun x449 () Bool)
(declare-fun x680 () Bool)
(declare-fun x467 () Int)
(declare-fun x1899 () Bool)
(declare-fun x769 () Int)
(declare-fun x1620 () Bool)
(declare-fun x108 () Int)
(declare-fun x368 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1361 () Int)
(declare-fun x1230 () Bool)
(declare-fun x898 () x472)
(declare-fun x54 () x472)
(declare-fun x1048 () Int)
(declare-fun x1771 () Bool)
(declare-fun x458 () x472)
(declare-fun x995 () Bool)
(declare-fun x1445 () x472)
(declare-fun x1309 () Int)
(declare-fun x517 () Int)
(declare-fun x1039 () Int)
(declare-fun x2009 () Int)
(declare-fun x1326 () x472)
(declare-fun x247 () Int)
(declare-fun x539 () Int)
(declare-fun x578 () Bool)
(declare-fun x429 () Int)
(declare-fun x2041 () x472)
(declare-fun x1909 () Int)
(declare-fun x1957 () Int)
(declare-fun x984 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x367 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x625 () Int)
(declare-fun x1868 () Bool)
(declare-fun x1481 () Int)
(declare-fun x700 () Int)
(declare-fun x13 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x776 () Bool)
(declare-fun x300 () Bool)
(declare-fun x1291 () Int)
(declare-fun x824 () Int)
(declare-fun x779 () Int)
(declare-fun x836 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x341 () Int)
(declare-fun x1630 () Int)
(declare-fun x234 () Bool)
(declare-fun x433 () Int)
(declare-fun x40 () Bool)
(declare-fun x258 () Bool)
(declare-fun x363 () Bool)
(declare-fun x1434 () Int)
(declare-fun x103 () Int)
(declare-fun x1227 () Int)
(declare-fun x1825 () Bool)
(declare-fun x536 () Int)
(declare-fun x976 () Bool)
(declare-fun x963 () Bool)
(declare-fun x713 () Int)
(declare-fun x1042 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x144 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1678 () x472)
(declare-fun x23 () Int)
(declare-fun x710 () x472)
(declare-fun x214 () Int)
(declare-fun x771 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x175 () Bool)
(declare-fun x1830 () x472)
(declare-fun x1838 () Bool)
(declare-fun x940 () Bool)
(declare-fun x916 () Int)
(declare-fun x476 () Bool)
(declare-fun x27 () Bool)
(declare-fun x96 () x472)
(declare-fun x1502 () Bool)
(declare-fun x1038 () x472)
(declare-fun x469 () Int)
(declare-fun x1684 () Bool)
(declare-fun x105 () Int)
(declare-fun x401 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x163 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x295 () Bool)
(declare-fun x2018 () Int)
(declare-fun x154 () Bool)
(declare-fun x223 () Bool)
(declare-fun x8 () Bool)
(declare-fun x802 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x1971 () Int)
(declare-fun x659 () Bool)
(declare-fun x1300 () Int)
(declare-fun x1320 () Int)
(declare-fun x227 () Bool)
(declare-fun x911 () Bool)
(declare-fun x554 () Bool)
(declare-fun x1381 (Int) Int)
(declare-fun x708 () Bool)
(declare-fun x1997 () Int)
(declare-fun x83 () Bool)
(declare-fun x1961 () Bool)
(declare-fun x1915 () Int)
(declare-fun x1750 () Bool)
(declare-fun x670 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x216 () Bool)
(declare-fun x1571 (Int) Int)
(declare-fun x721 () Int)
(declare-fun x644 () Bool)
(declare-fun x152 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x251 () Int)
(declare-fun x1308 () Int)
(declare-fun x352 () Int)
(declare-fun x213 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x2048 () Int)
(declare-fun x678 () Int)
(declare-fun x1159 () Int)
(declare-fun x2037 () Int)
(declare-fun x1581 () Bool)
(declare-fun x525 () Bool)
(declare-fun x59 () Bool)
(declare-fun x248 () Int)
(declare-fun x112 () x472)
(declare-fun x884 () Bool)
(declare-fun x518 () Bool)
(declare-fun x1599 () Int)
(declare-fun x714 () Int)
(declare-fun x38 () Bool)
(declare-fun x334 () Bool)
(declare-fun x871 () Int)
(define-fun x72 ((x472 x472) (x611 Int)) x472 (ite ((_ is x1802) x472) (x1802 (x1013 x472) (+ (x254 x472) x611)) (ite ((_ is x1203) x472) (x1203 (x1749 x472) (x1585 x472) (+ x611 (x137 x472))) (x1031 (+ (x1756 x472) x611)))))
(define-fun x1811 ((x1846 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1846) (>= x1846 0)) x1846 (- x1846 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1786 ((x1846 Int)) Int (ite (and (< x1846 0) (>= x1846 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1846 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1846))
(define-fun x1423 ((x1297 Int)) Bool (and (<= 0 x1297) (< x1297 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x679 ((x1297 Int)) Bool (and (= (x1189 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1297) x1297) (= x1297 (x1189 x1297 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x515 ((x1297 Int)) Bool (and (= (x1189 0 x1297) 0) (= (x1189 x1297 0) 0)))
(define-fun x1948 ((x1297 Int)) Bool (= (x1189 x1297 x1297) x1297))
(define-fun x162 ((x1297 Int)) Bool (and (x1948 x1297) (x679 x1297) (x515 x1297)))
(define-fun x490 ((x1297 Int) (x1267 Int)) Bool (= (x1189 x1267 x1297) (x1189 x1297 x1267)))
(define-fun x1255 ((x1297 Int) (x1267 Int)) Bool (and (>= (x1189 x1297 x1267) 0) (=> (>= x1267 0) (<= (x1189 x1297 x1267) x1267)) (=> (<= 0 x1297) (<= (x1189 x1297 x1267) x1297))))
(define-fun x148 ((x1297 Int) (x1267 Int)) Bool (and (x1255 x1297 x1267) (x490 x1297 x1267)))
(define-fun x1877 ((x1297 Int)) Bool (= (x1189 x1297 1461501637330902918203684832716283019655932542975) (mod x1297 1461501637330902918203684832716283019655932542976)))
(define-fun x1894 ((x1297 Int)) Bool (and (x1877 x1297) (x148 x1297 1461501637330902918203684832716283019655932542975)))
(define-fun x123 ((x1297 Int)) Bool (= (mod x1297 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (x1189 x1297 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x1297 32))))
(define-fun x962 ((x1297 Int)) Bool (and (x123 x1297) (x148 x1297 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1427 ((x349 Int)) Int (ite (> x371 x349) (x327 x349) 0))
(define-fun x1464 ((x349 Int)) Int (x1571 x349))
(define-fun x1 ((x349 Int)) Int (ite (= x349 128) 61715998356568858511115630290676146828977781706927134410412890814919959642112 (x903 x349)))
(define-fun x1338 ((x349 Int)) Int (ite (= x349 132) x2026 (x1 x349)))
(define-fun x1339 ((x349 Int)) Int (ite (= 164 x349) 64 (x1338 x349)))
(define-fun x1108 ((x349 Int)) Int (ite (= 196 x349) x1707 (x1339 x349)))
(define-fun x1254 ((x349 Int)) Int (ite (= 228 x349) x863 (x1108 x349)))
(define-fun x540 ((x349 Int)) Int (ite x400 (x1108 x349) (x1254 x349)))
(define-fun x1081 ((x349 Int)) Int (ite (= 128 x349) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x88 x349)))
(define-fun x1026 ((x349 Int)) Int (ite (= 132 x349) x206 (x1081 x349)))
(define-fun x1226 ((x349 Int)) Int (ite (= 164 x349) x1194 (x1026 x349)))
(define-fun x1193 ((x349 Int)) Int (ite (= 128 x349) 1 (x1226 x349)))
(define-fun x1186 ((x349 Int)) Int (ite (= x349 128) 1 (x1226 x349)))
(define-fun x1299 ((x349 Int)) Int (ite (= 128 x349) 1 (x1226 x349)))
(define-fun x798 ((x349 Int)) Int (ite (= 128 x349) 1 (x1226 x349)))
(define-fun x122 ((x349 Int)) Int (ite (= x349 128) 1 (x1226 x349)))
(define-fun x1200 ((x349 Int)) Int (ite (= x349 128) 1 (x1226 x349)))
(define-fun x1246 ((x349 Int)) Int (ite (= x349 128) 1 (x1226 x349)))
(define-fun x1664 ((x349 Int)) Int (ite x525 (ite x1080 (x1226 x349) (x1193 x349)) (ite x771 (ite x1814 (x1226 x349) (x1186 x349)) (ite x1208 (ite x684 (x1226 x349) (x1299 x349)) (ite x1923 (ite x1594 (x1226 x349) (x798 x349)) (ite x693 (ite x1649 (x1226 x349) (x122 x349)) (ite x1992 (ite x760 (x1226 x349) (x1200 x349)) (ite x546 (x1226 x349) (x1246 x349)))))))))
(define-fun x545 ((x349 Int)) Int (ite (= x1003 x349) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1664 x349)))
(define-fun x289 ((x349 Int)) Int (ite (= x1875 x349) x206 (x545 x349)))
(define-fun x1282 ((x349 Int)) Int (ite (= x349 x1010) x997 (x289 x349)))
(define-fun x192 ((x349 Int)) Int (ite (= x1003 x349) 1 (x1282 x349)))
(define-fun x1672 ((x349 Int)) Int (ite (= x1003 x349) 1 (x1282 x349)))
(define-fun x1127 ((x349 Int)) Int (ite (= x349 x1003) 1 (x1282 x349)))
(define-fun x959 ((x349 Int)) Int (ite (= x349 x1003) 1 (x1282 x349)))
(define-fun x839 ((x349 Int)) Int (ite (= x1003 x349) 1 (x1282 x349)))
(define-fun x2020 ((x349 Int)) Int (ite (= x349 x1003) 1 (x1282 x349)))
(define-fun x1938 ((x349 Int)) Int (ite (= x349 x1003) 1 (x1282 x349)))
(define-fun x1910 ((x349 Int)) Int (ite x1473 (ite x1939 (x1282 x349) (x192 x349)) (ite x1490 (ite x960 (x1282 x349) (x1672 x349)) (ite x1284 (ite x13 (x1282 x349) (x1127 x349)) (ite x569 (ite x1826 (x1282 x349) (x959 x349)) (ite x378 (ite x755 (x1282 x349) (x839 x349)) (ite x1166 (ite x1876 (x1282 x349) (x2020 x349)) (ite x5 (x1282 x349) (x1938 x349)))))))))
(define-fun x120 ((x349 Int)) Int (ite (= x349 x1545) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1910 x349)))
(define-fun x1822 ((x349 Int)) Int (ite (= x349 x108) x206 (x120 x349)))
(define-fun x1950 ((x349 Int)) Int (ite (= x349 x480) x713 (x1822 x349)))
(define-fun x1527 ((x349 Int)) Int (ite (= x1545 x349) 1 (x1950 x349)))
(define-fun x1995 ((x349 Int)) Int (ite (= x349 x1545) 1 (x1950 x349)))
(define-fun x1855 ((x349 Int)) Int (ite (= x349 x1545) 1 (x1950 x349)))
(define-fun x1936 ((x349 Int)) Int (ite (= x1545 x349) 1 (x1950 x349)))
(define-fun x276 ((x349 Int)) Int (ite (= x1545 x349) 1 (x1950 x349)))
(define-fun x2033 ((x349 Int)) Int (ite (= x1545 x349) 1 (x1950 x349)))
(define-fun x937 ((x349 Int)) Int (ite (= x1545 x349) 1 (x1950 x349)))
(define-fun x180 ((x349 Int)) Int (ite x1359 (ite x424 (x1950 x349) (x1527 x349)) (ite x107 (ite x393 (x1950 x349) (x1995 x349)) (ite x844 (ite x1831 (x1950 x349) (x1855 x349)) (ite x1694 (ite x481 (x1950 x349) (x1936 x349)) (ite x1568 (ite x441 (x1950 x349) (x276 x349)) (ite x981 (ite x1365 (x1950 x349) (x2033 x349)) (ite x1420 (x1950 x349) (x937 x349)))))))))
(define-fun x1118 ((x349 Int)) Int (ite (= x349 x1529) x1309 (x180 x349)))
(define-fun x319 ((x349 Int)) Int (ite (= x349 x801) x703 (x1118 x349)))
(define-fun x381 ((x349 Int)) Int (ite (= x349 x1141) x87 (x319 x349)))
(define-fun x1772 ((x349 Int)) Int (ite (= x1546 x349) x58 (x381 x349)))
(define-fun x1289 ((x349 Int)) Int (ite (= x349 x1185) x1386 (x1772 x349)))
(define-fun x1357 ((x349 Int)) Int (ite (= x349 x1067) x509 (x1289 x349)))
(define-fun x524 ((x349 Int)) Int (ite x644 (x1289 x349) (ite x1128 (x1772 x349) (ite x99 (x381 x349) (ite x751 (x319 x349) (x1357 x349))))))
(define-fun x1497 ((x349 Int)) Int (ite (and (<= 128 x349) (> (+ (ite (< x1840 0) x1840 0) 128) x349)) (x524 (+ (- x349 128) x1529)) (x540 x349)))
(define-fun x435 ((x349 Int)) Int (ite x1162 (x540 x349) (ite x2024 (x1497 x349) (x540 x349))))
(define-fun x697 ((x349 Int)) Int (ite (= 128 x349) x1644 (x435 x349)))
(define-fun x79 ((x349 Int)) Int (ite (and (> (+ x1840 0) x349) (>= x349 0)) (x524 (+ (- x349 0) x1529)) (x837 x349)))
(define-fun x732 ((x349 Int)) Int (ite x1162 (x837 x349) (ite x2024 (x79 x349) (x837 x349))))
(define-fun x1919 ((x349 Int)) Int (ite (and (< x349 (+ 160 x1644)) (<= 160 x349)) (x732 (+ 0 (- x349 160))) (x697 x349)))
(define-fun x727 ((x349 Int)) Int (ite (= x349 x1625) x37 (x1919 x349)))
(define-fun x810 ((x349 Int)) Int (ite (= x349 x1602) x2005 (x727 x349)))
(define-fun x970 ((x349 Int)) Int (ite x795 (x727 x349) (x810 x349)))
(define-fun x1122 ((x349 Int)) Int (ite (= x349 x952) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x970 x349)))
(define-fun x351 ((x349 Int)) Int (ite (= x349 x1870) x102 (x1122 x349)))
(define-fun x29 ((x349 Int)) Int (ite (= x649 x349) x173 (x351 x349)))
(define-fun x1332 ((x349 Int)) Int (ite (= 0 x349) x23 (x29 x349)))
(define-fun x2040 ((x349 Int)) Int (ite (= x349 0) x1828 (x29 x349)))
(define-fun x1952 ((x349 Int)) Int (ite (= 0 x349) x1754 (x29 x349)))
(define-fun x140 ((x349 Int)) Int (ite (= 0 x349) x1232 (x29 x349)))
(define-fun x1314 ((x349 Int)) Int (ite (= 0 x349) x1170 (x29 x349)))
(define-fun x739 ((x349 Int)) Int (ite (= x349 0) x1636 (x29 x349)))
(define-fun x858 ((x349 Int)) Int (ite (= x349 0) x279 (x29 x349)))
(define-fun x1294 ((x349 Int)) Int (ite x972 (ite x59 (x29 x349) (x1332 x349)) (ite x1543 (ite x255 (x29 x349) (x2040 x349)) (ite x258 (ite x331 (x29 x349) (x1952 x349)) (ite x1526 (ite x1277 (x29 x349) (x140 x349)) (ite x691 (ite x1360 (x29 x349) (x1314 x349)) (ite x311 (ite x1187 (x29 x349) (x739 x349)) (ite x1115 (x29 x349) (x858 x349)))))))))
(define-fun x1673 ((x349 Int)) Int (ite (= x349 0) 1 (x210 x349)))
(define-fun x1335 ((x349 Int)) Int (ite x59 (x210 x349) (x1673 x349)))
(define-fun x1900 ((x349 Int)) Int (ite (= 0 x349) 1 (x210 x349)))
(define-fun x701 ((x349 Int)) Int (ite x255 (x210 x349) (x1900 x349)))
(define-fun x370 ((x349 Int)) Int (ite (= 0 x349) 1 (x210 x349)))
(define-fun x687 ((x349 Int)) Int (ite x331 (x210 x349) (x370 x349)))
(define-fun x329 ((x349 Int)) Int (ite (= x349 0) 1 (x210 x349)))
(define-fun x1866 ((x349 Int)) Int (ite x1277 (x210 x349) (x329 x349)))
(define-fun x608 ((x349 Int)) Int (ite (= 0 x349) 1 (x210 x349)))
(define-fun x1980 ((x349 Int)) Int (ite x1360 (x210 x349) (x608 x349)))
(define-fun x1063 ((x349 Int)) Int (ite (= 0 x349) 1 (x210 x349)))
(define-fun x1460 ((x349 Int)) Int (ite x1187 (x210 x349) (x1063 x349)))
(define-fun x1881 ((x349 Int)) Int (ite (= 0 x349) 1 (x210 x349)))
(define-fun x1688 ((x349 Int)) Int (ite x1115 (x210 x349) (x1881 x349)))
(define-fun x1261 ((x349 Int)) Int (ite x972 (x1335 x349) (ite x1543 (x701 x349) (ite x258 (x687 x349) (ite x1526 (x1866 x349) (ite x691 (x1980 x349) (ite x311 (x1460 x349) (x1688 x349))))))))
(define-fun x156 ((x349 Int)) Int (ite (and (< x349 (+ x840 0)) (<= 0 x349)) (x1261 (+ 0 (- x349 0))) (x1294 x349)))
(define-fun x1655 ((x349 Int)) Int (ite x1461 (x970 x349) (ite x397 (x1294 x349) (x156 x349))))
(define-fun x1691 ((x349 x472)) Int (x977 x349))
(define-fun x1385 ((x349 x472)) Int (x428 x349))
(define-fun x1988 ((x349 x472)) Int (x475 x349))
(define-fun x1404 ((x349 x472)) Int (x451 x349))
(define-fun x1701 ((x349 Int)) Int (ite (and (> (+ (x1786 (- x1965 100)) 100) x349) (<= 100 x349)) (x540 (+ 228 (- x349 100))) (x1427 x349)))
(define-fun x121 ((x349 x472)) Int (ite (= x349 x669) x1769 (x1662 x349)))
(define-fun x423 ((x349 x472)) Int (ite (= x1856 x349) x167 (x439 x349)))
(define-fun x1566 ((x349 x472)) Int (ite (= x349 x312) x1300 (x423 x349)))
(define-fun x1941 ((x349 Int)) Int (ite (= 0 x349) 1 (x199 x349)))
(define-fun x763 ((x349 x472)) Int (ite (= x349 x958) x1140 (x419 x349)))
(define-fun x1241 ((x349 x472)) Int (ite (= x1798 x349) x945 (x763 x349)))
(define-fun x2032 ((x349 Int)) Int (ite (= 0 x349) 1 (x199 x349)))
(define-fun x1890 ((x349 x472)) Int (ite (= x349 x1504) x704 (x1623 x349)))
(define-fun x1438 ((x349 x472)) Int (ite (= x349 x1925) x1634 (x1890 x349)))
(define-fun x1336 ((x349 Int)) Int (ite (= 0 x349) 1 (x199 x349)))
(define-fun x915 ((x349 x472)) Int (ite (= x833 x349) x1574 (x583 x349)))
(define-fun x570 ((x349 x472)) Int (ite (= x748 x349) x1202 (x915 x349)))
(define-fun x1807 ((x349 Int)) Int (ite (= 0 x349) 1 (x199 x349)))
(define-fun x1967 ((x349 x472)) Int (ite (= x349 x2027) x2019 (x380 x349)))
(define-fun x1373 ((x349 x472)) Int (ite (= x349 x306) x273 (x1967 x349)))
(define-fun x592 ((x349 Int)) Int (ite (= x349 0) 1 (x199 x349)))
(define-fun x1723 ((x349 x472)) Int (ite (= x361 x349) x1119 (x282 x349)))
(define-fun x502 ((x349 x472)) Int (ite (= x349 x1027) x233 (x1723 x349)))
(define-fun x1570 ((x349 Int)) Int (ite (= x349 0) 1 (x199 x349)))
(define-fun x1121 ((x349 x472)) Int (ite (= x146 x349) x942 (x249 x349)))
(define-fun x1648 ((x349 x472)) Int (ite (= x777 x349) x778 (x1121 x349)))
(define-fun x1466 ((x349 Int)) Int (ite (= 0 x349) 1 (x199 x349)))
(define-fun x1078 ((x349 x472)) Int (ite x892 (x423 x349) (ite x301 (x439 x349) (ite x277 (x439 x349) (ite x1057 (x439 x349) (ite x69 (x423 x349) (x439 x349)))))))
(define-fun x1537 ((x349 x472)) Int (ite x525 (ite x1080 (x1078 x349) (x1566 x349)) (x439 x349)))
(define-fun x900 ((x349 x472)) Int (ite (= x917 x349) x1861 (x1537 x349)))
(define-fun x664 ((x349 x472)) Int (ite x1606 (x900 x349) (ite x269 (x1537 x349) (ite x1419 (x1537 x349) (ite x723 (x1537 x349) (ite x775 (x900 x349) (x1537 x349)))))))
(define-fun x1453 ((x349 x472)) Int (ite (= x109 x349) x260 (x900 x349)))
(define-fun x288 ((x349 x472)) Int (ite x1473 (ite x1939 (x664 x349) (x1453 x349)) (x1537 x349)))
(define-fun x1815 ((x349 x472)) Int (ite (= x349 x602) x1812 (x288 x349)))
(define-fun x1886 ((x349 x472)) Int (ite x792 (x1815 x349) (ite x422 (x288 x349) (ite x1458 (x288 x349) (ite x940 (x288 x349) (ite x521 (x1815 x349) (x288 x349)))))))
(define-fun x278 ((x349 x472)) Int (ite (= x184 x349) x214 (x1815 x349)))
(define-fun x1598 ((x349 x472)) Int (ite x424 (x1886 x349) (x278 x349)))
(define-fun x989 ((x349 x472)) Int (ite x1162 (x439 x349) (ite x2024 (ite x1359 (x1598 x349) (x288 x349)) (x439 x349))))
(define-fun x1205 ((x349 x472)) Int (ite (= x349 x1640) x2010 (x989 x349)))
(define-fun x221 ((x349 x472)) Int (ite x1049 (x763 x349) (ite x1344 (x419 x349) (ite x320 (x419 x349) (ite x2035 (x419 x349) (ite x1711 (x763 x349) (x419 x349)))))))
(define-fun x250 ((x349 x472)) Int (ite x525 (x419 x349) (ite x771 (ite x1814 (x221 x349) (x1241 x349)) (x419 x349))))
(define-fun x637 ((x349 x472)) Int (ite (= x349 x1977) x406 (x250 x349)))
(define-fun x489 ((x349 x472)) Int (ite x1996 (x637 x349) (ite x598 (x250 x349) (ite x1605 (x250 x349) (ite x1397 (x250 x349) (ite x847 (x637 x349) (x250 x349)))))))
(define-fun x990 ((x349 x472)) Int (ite (= x383 x349) x433 (x637 x349)))
(define-fun x1722 ((x349 x472)) Int (ite x1473 (x250 x349) (ite x1490 (ite x960 (x489 x349) (x990 x349)) (x250 x349))))
(define-fun x1051 ((x349 x472)) Int (ite (= x257 x349) x1902 (x1722 x349)))
(define-fun x1836 ((x349 x472)) Int (ite x1947 (x1051 x349) (ite x1766 (x1722 x349) (ite x832 (x1722 x349) (ite x737 (x1722 x349) (ite x1533 (x1051 x349) (x1722 x349)))))))
(define-fun x559 ((x349 x472)) Int (ite (= x142 x349) x1976 (x1051 x349)))
(define-fun x1935 ((x349 x472)) Int (ite x393 (x1836 x349) (x559 x349)))
(define-fun x557 ((x349 x472)) Int (ite x1162 (x419 x349) (ite x2024 (ite x1359 (x1722 x349) (ite x107 (x1935 x349) (x1722 x349))) (x419 x349))))
(define-fun x1695 ((x349 x472)) Int (ite (= x785 x349) x1904 (x557 x349)))
(define-fun x1717 ((x349 x472)) Int (ite x1313 (x1890 x349) (ite x1624 (x1623 x349) (ite x1021 (x1623 x349) (ite x1813 (x1623 x349) (ite x432 (x1890 x349) (x1623 x349)))))))
(define-fun x106 ((x349 x472)) Int (ite x525 (x1623 x349) (ite x771 (x1623 x349) (ite x1208 (ite x684 (x1717 x349) (x1438 x349)) (x1623 x349)))))
(define-fun x589 ((x349 x472)) Int (ite (= x1148 x349) x613 (x106 x349)))
(define-fun x1182 ((x349 x472)) Int (ite x1111 (x589 x349) (ite x1408 (x106 x349) (ite x1742 (x106 x349) (ite x1934 (x106 x349) (ite x86 (x589 x349) (x106 x349)))))))
(define-fun x1960 ((x349 x472)) Int (ite (= x285 x349) x1352 (x589 x349)))
(define-fun x507 ((x349 x472)) Int (ite x1473 (x106 x349) (ite x1490 (x106 x349) (ite x1284 (ite x13 (x1182 x349) (x1960 x349)) (x106 x349)))))
(define-fun x2012 ((x349 x472)) Int (ite (= x1421 x349) x1110 (x507 x349)))
(define-fun x268 ((x349 x472)) Int (ite x806 (x2012 x349) (ite x756 (x507 x349) (ite x1993 (x507 x349) (ite x1774 (x507 x349) (ite x1407 (x2012 x349) (x507 x349)))))))
(define-fun x956 ((x349 x472)) Int (ite (= x1830 x349) x1157 (x2012 x349)))
(define-fun x964 ((x349 x472)) Int (ite x1831 (x268 x349) (x956 x349)))
(define-fun x1653 ((x349 x472)) Int (ite x1162 (x1623 x349) (ite x2024 (ite x1359 (x507 x349) (ite x107 (x507 x349) (ite x844 (x964 x349) (x507 x349)))) (x1623 x349))))
(define-fun x488 ((x349 x472)) Int (ite (= x349 x1953) x67 (x1653 x349)))
(define-fun x353 ((x349 x472)) Int (ite x812 (x915 x349) (ite x216 (x583 x349) (ite x1437 (x583 x349) (ite x444 (x583 x349) (ite x827 (x915 x349) (x583 x349)))))))
(define-fun x1559 ((x349 x472)) Int (ite x525 (x583 x349) (ite x771 (x583 x349) (ite x1208 (x583 x349) (ite x1923 (ite x1594 (x353 x349) (x570 x349)) (x583 x349))))))
(define-fun x786 ((x349 x472)) Int (ite (= x349 x1733) x1827 (x1559 x349)))
(define-fun x297 ((x349 x472)) Int (ite x931 (x786 x349) (ite x1229 (x1559 x349) (ite x1249 (x1559 x349) (ite x1217 (x1559 x349) (ite x1442 (x786 x349) (x1559 x349)))))))
(define-fun x1471 ((x349 x472)) Int (ite (= x349 x176) x1852 (x786 x349)))
(define-fun x506 ((x349 x472)) Int (ite x1473 (x1559 x349) (ite x1490 (x1559 x349) (ite x1284 (x1559 x349) (ite x569 (ite x1826 (x297 x349) (x1471 x349)) (x1559 x349))))))
(define-fun x1022 ((x349 x472)) Int (ite (= x349 x1258) x1240 (x506 x349)))
(define-fun x1641 ((x349 x472)) Int (ite x150 (x1022 x349) (ite x328 (x506 x349) (ite x2054 (x506 x349) (ite x1196 (x506 x349) (ite x464 (x1022 x349) (x506 x349)))))))
(define-fun x1018 ((x349 x472)) Int (ite (= x349 x330) x138 (x1022 x349)))
(define-fun x663 ((x349 x472)) Int (ite x481 (x1641 x349) (x1018 x349)))
(define-fun x791 ((x349 x472)) Int (ite x1162 (x583 x349) (ite x2024 (ite x1359 (x506 x349) (ite x107 (x506 x349) (ite x844 (x506 x349) (ite x1694 (x663 x349) (x506 x349))))) (x583 x349))))
(define-fun x821 ((x349 x472)) Int (ite (= x349 x2041) x403 (x791 x349)))
(define-fun x544 ((x349 x472)) Int (ite x159 (x1967 x349) (ite x880 (x380 x349) (ite x1411 (x380 x349) (ite x814 (x380 x349) (ite x722 (x1967 x349) (x380 x349)))))))
(define-fun x870 ((x349 x472)) Int (ite x525 (x380 x349) (ite x771 (x380 x349) (ite x1208 (x380 x349) (ite x1923 (x380 x349) (ite x693 (ite x1649 (x544 x349) (x1373 x349)) (x380 x349)))))))
(define-fun x978 ((x349 x472)) Int (ite (= x815 x349) x878 (x870 x349)))
(define-fun x1685 ((x349 x472)) Int (ite x1562 (x978 x349) (ite x1307 (x870 x349) (ite x1066 (x870 x349) (ite x468 (x870 x349) (ite x1659 (x978 x349) (x870 x349)))))))
(define-fun x1575 ((x349 x472)) Int (ite (= x716 x349) x1291 (x978 x349)))
(define-fun x1330 ((x349 x472)) Int (ite x1473 (x870 x349) (ite x1490 (x870 x349) (ite x1284 (x870 x349) (ite x569 (x870 x349) (ite x378 (ite x755 (x1685 x349) (x1575 x349)) (x870 x349)))))))
(define-fun x201 ((x349 x472)) Int (ite (= x349 x804) x1586 (x1330 x349)))
(define-fun x1372 ((x349 x472)) Int (ite x1973 (x201 x349) (ite x154 (x1330 x349) (ite x1146 (x1330 x349) (ite x1922 (x1330 x349) (ite x1985 (x201 x349) (x1330 x349)))))))
(define-fun x897 ((x349 x472)) Int (ite (= x349 x1951) x426 (x201 x349)))
(define-fun x430 ((x349 x472)) Int (ite x441 (x1372 x349) (x897 x349)))
(define-fun x1506 ((x349 x472)) Int (ite x1162 (x380 x349) (ite x2024 (ite x1359 (x1330 x349) (ite x107 (x1330 x349) (ite x844 (x1330 x349) (ite x1694 (x1330 x349) (ite x1568 (x430 x349) (x1330 x349)))))) (x380 x349))))
(define-fun x888 ((x349 x472)) Int (ite (= x1426 x349) x941 (x1506 x349)))
(define-fun x1025 ((x349 x472)) Int (ite x1371 (x1723 x349) (ite x1509 (x282 x349) (ite x641 (x282 x349) (ite x1587 (x282 x349) (ite x68 (x1723 x349) (x282 x349)))))))
(define-fun x408 ((x349 x472)) Int (ite x525 (x282 x349) (ite x771 (x282 x349) (ite x1208 (x282 x349) (ite x1923 (x282 x349) (ite x693 (x282 x349) (ite x1992 (ite x760 (x1025 x349) (x502 x349)) (x282 x349))))))))
(define-fun x1775 ((x349 x472)) Int (ite (= x359 x349) x1370 (x408 x349)))
(define-fun x1364 ((x349 x472)) Int (ite x1389 (x1775 x349) (ite x165 (x408 x349) (ite x91 (x408 x349) (ite x132 (x408 x349) (ite x1056 (x1775 x349) (x408 x349)))))))
(define-fun x265 ((x349 x472)) Int (ite (= x1445 x349) x1604 (x1775 x349)))
(define-fun x116 ((x349 x472)) Int (ite x1473 (x408 x349) (ite x1490 (x408 x349) (ite x1284 (x408 x349) (ite x569 (x408 x349) (ite x378 (x408 x349) (ite x1166 (ite x1876 (x1364 x349) (x265 x349)) (x408 x349))))))))
(define-fun x640 ((x349 x472)) Int (ite (= x1628 x349) x1522 (x116 x349)))
(define-fun x999 ((x349 x472)) Int (ite x26 (x640 x349) (ite x1439 (x116 x349) (ite x1665 (x116 x349) (ite x163 (x116 x349) (ite x52 (x640 x349) (x116 x349)))))))
(define-fun x111 ((x349 x472)) Int (ite (= x1982 x349) x293 (x640 x349)))
(define-fun x556 ((x349 x472)) Int (ite x1365 (x999 x349) (x111 x349)))
(define-fun x674 ((x349 x472)) Int (ite x1162 (x282 x349) (ite x2024 (ite x1359 (x116 x349) (ite x107 (x116 x349) (ite x844 (x116 x349) (ite x1694 (x116 x349) (ite x1568 (x116 x349) (ite x981 (x556 x349) (x116 x349))))))) (x282 x349))))
(define-fun x947 ((x349 x472)) Int (ite (= x538 x349) x1409 (x674 x349)))
(define-fun x682 ((x349 x472)) Int (ite x1325 (x1121 x349) (ite x1496 (x249 x349) (ite x535 (x249 x349) (ite x1456 (x249 x349) (ite x1820 (x1121 x349) (x249 x349)))))))
(define-fun x286 ((x349 x472)) Int (ite x525 (x249 x349) (ite x771 (x249 x349) (ite x1208 (x249 x349) (ite x1923 (x249 x349) (ite x693 (x249 x349) (ite x1992 (x249 x349) (ite x546 (x682 x349) (x1648 x349)))))))))
(define-fun x1859 ((x349 x472)) Int (ite (= x898 x349) x291 (x286 x349)))
(define-fun x550 ((x349 x472)) Int (ite x1692 (x1859 x349) (ite x512 (x286 x349) (ite x1885 (x286 x349) (ite x280 (x286 x349) (ite x394 (x1859 x349) (x286 x349)))))))
(define-fun x2015 ((x349 x472)) Int (ite (= x349 x1391) x574 (x1859 x349)))
(define-fun x1178 ((x349 x472)) Int (ite x1473 (x286 x349) (ite x1490 (x286 x349) (ite x1284 (x286 x349) (ite x569 (x286 x349) (ite x378 (x286 x349) (ite x1166 (x286 x349) (ite x5 (x550 x349) (x2015 x349)))))))))
(define-fun x516 ((x349 x472)) Int (ite (= x951 x349) x1565 (x1178 x349)))
(define-fun x478 ((x349 x472)) Int (ite x1844 (x516 x349) (ite x27 (x1178 x349) (ite x347 (x1178 x349) (ite x227 (x1178 x349) (ite x267 (x516 x349) (x1178 x349)))))))
(define-fun x350 ((x349 x472)) Int (ite (= x1326 x349) x153 (x516 x349)))
(define-fun x50 ((x349 x472)) Int (ite x1420 (x478 x349) (x350 x349)))
(define-fun x440 ((x349 x472)) Int (ite x1162 (x249 x349) (ite x2024 (ite x1359 (x1178 x349) (ite x107 (x1178 x349) (ite x844 (x1178 x349) (ite x1694 (x1178 x349) (ite x1568 (x1178 x349) (ite x981 (x1178 x349) (x50 x349))))))) (x249 x349))))
(define-fun x882 ((x349 x472)) Int (ite (= x1678 x349) x56 (x440 x349)))
(define-fun x1383 ((x349 x472)) Int (ite (= x865 x349) x19 (x121 x349)))
(define-fun x1503 ((x349 Int)) Int (ite (= x349 0) 1 (x1968 x349)))
(define-fun x357 ((x349 Int)) Int (ite (= x349 0) 1 (x1968 x349)))
(define-fun x1281 ((x349 Int)) Int (ite (= 0 x349) 1 (x1968 x349)))
(define-fun x1011 ((x349 Int)) Int (ite (= x349 0) 1 (x1968 x349)))
(define-fun x707 ((x349 Int)) Int (ite (= 0 x349) 1 (x1968 x349)))
(define-fun x561 ((x349 Int)) Int (ite (= x349 0) 1 (x1968 x349)))
(define-fun x1683 ((x349 Int)) Int (ite (= x349 0) 1 (x1968 x349)))
(define-fun x985 ((x349 x472)) Int (ite (= x676 x349) x470 (x1383 x349)))
(define-fun x1088 ((x349 Int)) Int (ite (= 0 x349) 1 (x119 x349)))
(define-fun x1296 ((x349 Int)) Int (ite (= x349 0) 1 (x119 x349)))
(define-fun x1020 ((x349 Int)) Int (ite (= x349 0) 1 (x119 x349)))
(define-fun x1413 ((x349 Int)) Int (ite (= x349 0) 1 (x119 x349)))
(define-fun x9 ((x349 Int)) Int (ite (= x349 0) 1 (x119 x349)))
(define-fun x1204 ((x349 Int)) Int (ite (= x349 0) 1 (x119 x349)))
(define-fun x82 ((x349 Int)) Int (ite (= 0 x349) 1 (x119 x349)))
(define-fun x537 ((x349 Int)) Int (ite (= x349 x62) x551 (x1381 x349)))
(define-fun x636 ((x349 Int)) Int (ite (= x893 x349) x1263 (x1911 x349)))
(define-fun x576 ((x349 Int)) Int (ite (= x555 x349) x618 (x636 x349)))
(define-fun x2011 ((x349 Int)) Int (ite x175 (x1911 x349) (ite x706 (x636 x349) (x576 x349))))
(define-fun x761 ((x349 Int)) Int (ite x1939 (x1968 x349) (x1503 x349)))
(define-fun x377 ((x349 Int)) Int (ite x960 (x1968 x349) (x357 x349)))
(define-fun x1888 ((x349 Int)) Int (ite x13 (x1968 x349) (x1281 x349)))
(define-fun x1883 ((x349 Int)) Int (ite x1826 (x1968 x349) (x1011 x349)))
(define-fun x1155 ((x349 Int)) Int (ite x755 (x1968 x349) (x707 x349)))
(define-fun x1556 ((x349 Int)) Int (ite x1876 (x1968 x349) (x561 x349)))
(define-fun x1132 ((x349 Int)) Int (ite x5 (x1968 x349) (x1683 x349)))
(define-fun x187 ((x349 Int)) Int (ite x1473 (x761 x349) (ite x1490 (x377 x349) (ite x1284 (x1888 x349) (ite x569 (x1883 x349) (ite x378 (x1155 x349) (ite x1166 (x1556 x349) (x1132 x349))))))))
(define-fun x1879 ((x349 Int)) Int (ite x424 (x119 x349) (x1088 x349)))
(define-fun x118 ((x349 Int)) Int (ite x393 (x119 x349) (x1296 x349)))
(define-fun x1817 ((x349 Int)) Int (ite x1831 (x119 x349) (x1020 x349)))
(define-fun x860 ((x349 Int)) Int (ite x481 (x119 x349) (x1413 x349)))
(define-fun x953 ((x349 Int)) Int (ite x441 (x119 x349) (x9 x349)))
(define-fun x1355 ((x349 Int)) Int (ite x1365 (x119 x349) (x1204 x349)))
(define-fun x1730 ((x349 Int)) Int (ite x1420 (x119 x349) (x82 x349)))
(define-fun x1143 ((x349 Int)) Int (ite x1359 (x1879 x349) (ite x107 (x118 x349) (ite x844 (x1817 x349) (ite x1694 (x860 x349) (ite x1568 (x953 x349) (ite x981 (x1355 x349) (x1730 x349))))))))
(define-fun x75 ((x1297 Int)) Bool (=> (and (not (= 2952933380 x1297)) (not (= 1889567281 x1297)) (not (= 1173398607 x1297)) (not (= x1297 3703996404)) (not (= 893399075 x1297)) (not (= 1083311676 x1297)) (not (= 2514000705 x1297)) (not (= x1297 2569309863)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1297)) (not (= x1297 3714247998)) (not (= 61715998356568858511115630290676146828977781706927134410412890814919959642112 x1297)) (not (= 1762712782 x1297)) (not (= x1297 2678909723)) (not (= 18446744073709551615 x1297)) (not (= 3645313523 x1297)) (not (= 2835717307 x1297)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1297)) (not (= 2376452955 x1297)) (not (= 1461501637330902918203684832716283019655932542975 x1297)) (> x1297 10000) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1297)) (not (= x1297 1195755010)) (not (= 1086394137 x1297)) (not (= 2289173607 x1297)) (not (= x1297 826074471)) (not (= 3065339685 x1297))) (not ((_ is x1031) (x807 x1297)))))
(assert (x162 x302))
(assert (x1423 x1309))
(assert (x1423 x1906))
(assert (= (+ 1 (x1482 x2021)) (x1482 (x72 x2021 1))))
(assert (x1423 x596))
(assert (= (x1911 x117) 0))
(assert (= (x1482 (x807 x1764)) x1764))
(assert (= (=> (and (= x2045 x505) (= x794 0)) x1188) x1994))
(assert (x1423 x333))
(assert (x162 x1538))
(assert (= (and x1225 (not x416)) x1462))
(assert (x1423 x517))
(assert (x75 x2038))
(assert (= x1393 (and x1871 (not x599))))
(assert (x1423 x1517))
(assert (x1423 x1828))
(assert (= (x1031 893399075) (x807 893399075)))
(assert (x1423 x1725))
(assert (x1423 x1912))
(assert (=> (>= 10000 x7) (= (x807 x7) (x1031 x7))))
(assert (= (and (not x2002) x1735) x65))
(assert (x1423 x1902))
(assert (= (=> (and (= x840 x1757) (= x1748 x1932)) x1999) x830))
(assert (= x413 (and x1608 x1689)))
(assert (= x1614 (and x603 x1430)))
(assert (x1423 x1291))
(assert (x1423 x1370))
(assert (x1423 x486))
(assert (x1423 x183))
(assert (x1423 x1592))
(assert (= x756 (and x1377 x1489)))
(assert (x1423 x593))
(assert (= (and (not x367) x1180) x1796))
(assert (= (=> (= (= 0 x77) x1608) (and (=> (and (and (= (or (and (> 32 x867) (= true (<= x867 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x867 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x950) (= x1003 (x1811 (+ 128 x437))) (= x1538 (x1811 (+ 31 x867))) (= (x1189 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1538) x437)) (not x1608)) (and (=> (and (and (= (> x6 1) x926) (= x1061 (x1203 (x807 x206) (x1031 0) 0))) (not x950)) (and (=> (and (and (= x1354 (x1189 1461501637330902918203684832716283019655932542975 x1741)) (= x1741 (x1701 132)) (= x586 (= x1354 x1741))) x926) (and (=> (and (= x60 0) (not x586)) x1581) (=> (and x586 (and (= (x1203 (x807 x1741) x1061 0) x1680) (= x19 (x1929 x1680)) (<= x19 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< 1 x551) x1819) (<= 0 x19))) (and (=> (and (not x1819) (= 0 x60)) x1581) (=> (and x1819 (and (= (x1701 132) x745) (= (x1802 (x1031 1) 0) x2021) (= x1455 (= x1120 x745)) (= x865 (x72 x2021 1)) (= x1120 (x1189 1461501637330902918203684832716283019655932542975 x745)))) (and (=> (and x1455 (= x416 (> x551 1))) (and (=> (and (not x416) (= 0 x60)) x1581) (=> (and (and (= (x1383 x501) x997) (= (x1811 (+ x1875 64)) x528) (= (x1802 (x1031 1) 0) x458) (= (x1811 (+ 4 x1003)) x1875) (= (= x571 x745) x650) (= (x72 x458 1) x501) (= x1165 (x1786 (- x528 x1003))) (>= x997 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x997) (= (x1811 (+ x1875 32)) x1010)) x416) (and (=> (and (not x650) (= x1367 (= x745 x113))) (and (=> (and (and (not (> 2376452955 x1963)) (= x134 68) (= x997 x789) (not (< x134 4)) (= x1165 x134) (= (x421 (x807 x113)) x1062) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1153) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1153)) (> 64 x1153))) x1696) (not (= x1963 2678909723)) (> 3065339685 x1963) (= x41 x457) (= 2835717307 x1963) (= (x1786 (- x134 4)) x1153) (not (> 2678909723 x1963)) (< 0 x1062) (= x890 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1367) (and (=> x1696 x1093) (=> (and (not x1696) (and (= (= x457 x41) x1430) (= x1486 x41))) (and (=> (and x1430 (and (= x239 (x1203 (x807 x1363) (x1031 2) 0)) (<= 0 x1195) (= x519 (> x997 x1195)) (<= x1195 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x789 x1516) (= x1195 (x250 x239)))) (and (=> (and (= x1007 (< x1195 x789)) (not x519)) (and (=> (and (and (= x96 (x1203 (x807 x41) (x1031 2) 0)) (= (x1786 (- x1195 x789)) x406) (<= x284 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x284 (x637 x96)) (= (x1203 (x807 x1363) (x1031 2) 0) x1977) (<= 0 x284) (= (> x284 x495) x32) (= x495 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x789)))) (not x1007)) (and (=> x32 x1093) (=> (and (not x32) (and (= (> x284 x433) x1518) (= (x1811 (+ x789 x284)) x433))) (and (=> x1518 x1093) (=> (and (not x1518) (and (= x1488 32) (= x1252 1) (= (x1203 (x807 x41) (x1031 2) 0) x383))) x1459))))) (=> x1007 x1093))) (=> x519 x1093))) (=> (not x1430) x1093))))) (=> (and (not x1367) (= (= x310 x745) x1167)) (and (=> (and x1167 (and (not (= x565 2514000705)) (not (< x517 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x772) (not (= 826074471 x565)) (= (x1786 (- x517 4)) x270) (not (< x565 826074471)) (= x997 x1732) (= x2038 x457) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x270) (and (= (<= x270 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x270))) x449) (not (= 1889567281 x565)) (not (= 2376452955 x565)) (< 0 x494) (= 68 x517) (= x565 2835717307) (= (x421 (x807 x310)) x494) (= x1165 x517))) (and (=> (and (and (= x1525 (= x457 x2038)) (= x2038 x595)) (not x449)) (and (=> (not x1525) x1156) (=> (and (and (= (x1203 (x807 x1363) (x1031 2) 0) x1032) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x42) (<= 0 x42) (= x42 (x106 x1032)) (= x177 (> x997 x42)) (= x1690 x1732)) x1525) (and (=> (and (not x177) (= x1236 (> x1732 x42))) (and (=> x1236 x1156) (=> (and (not x1236) (and (= (x1203 (x807 x1363) (x1031 2) 0) x1148) (= x1469 (< x1320 x700)) (<= 0 x700) (= x1320 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1732))) (<= x700 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x700 (x589 x1642)) (= x613 (x1786 (- x42 x1732))) (= (x1203 (x807 x2038) (x1031 2) 0) x1642))) (and (=> (and (not x1469) (and (= x1553 (> x700 x1352)) (= (x1811 (+ x1732 x700)) x1352))) (and (=> x1553 x1156) (=> (and (not x1553) (and (= x1874 32) (= x1215 1) (= (x1203 (x807 x2038) (x1031 2) 0) x285))) x136))) (=> x1469 x1156))))) (=> x177 x1156))))) (=> x449 x1156))) (=> (and (not x1167) (= (= x1269 x745) x1736)) (and (=> (and x1736 (and (= x453 x997) (not (= x240 2514000705)) (not (> 4 x862)) (= 68 x862) (= x240 2835717307) (= (x1786 (- x862 4)) x1369) (= x1145 x457) (= x496 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x240 2376452955)) (not (> 826074471 x240)) (= x588 (or (> x1369 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1369) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1369) true)))) (= x862 x1165) (= (x421 (x807 x1269)) x1046) (> x1046 0) (not (= x240 826074471)) (not (= x240 1889567281)))) (and (=> (and (not x588) (and (= x1349 (= x457 x1145)) (= x1905 x1145))) (and (=> (and x1349 (and (= x1519 x453) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1864) (>= x1864 0) (= x1677 (< x1864 x997)) (= x1864 (x1559 x914)) (= (x1203 (x807 x1363) (x1031 2) 0) x914))) (and (=> (and (not x1677) (= x533 (< x1864 x453))) (and (=> (and (not x533) (and (<= 0 x1328) (= x1827 (x1786 (- x1864 x453))) (= (x1203 (x807 x1363) (x1031 2) 0) x1733) (= (x1203 (x807 x1145) (x1031 2) 0) x1168) (= x356 (< x2039 x1328)) (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x453)) x2039) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1328) (= (x786 x1168) x1328))) (and (=> x356 x1131) (=> (and (not x356) (and (= (x1811 (+ x453 x1328)) x1852) (= (> x1328 x1852) x38))) (and (=> (and (and (= x809 32) (= x176 (x1203 (x807 x1145) (x1031 2) 0)) (= 1 x1710)) (not x38)) x1222) (=> x38 x1131))))) (=> x533 x1131))) (=> x1677 x1131))) (=> (not x1349) x1131))) (=> x588 x1131))) (=> (and (= x128 (= x1295 x745)) (not x1736)) (and (=> (and (and (> x1601 0) (= (x421 (x807 x1295)) x1601) (= x843 x1165) (= x997 x1443) (= x1072 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1962) (and (< x1962 64) (= (<= x1962 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= 1889567281 x1511)) (not (> 1086394137 x1511)) (not (= x1511 2376452955)) (= x824 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x149 x457) (not (= x1511 1086394137)) (= x1962 (x1786 (- x843 4))) (not (= 2514000705 x1511)) (= 2835717307 x1511) (not (< x843 4)) (= 68 x843)) x128) (and (=> x1072 x1028) (=> (and (not x1072) (and (= (= x457 x149) x1279) (= x820 x149))) (and (=> (not x1279) x1028) (=> (and x1279 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x74) (= (< x74 x997) x974) (<= 0 x74) (= (x870 x666) x74) (= (x1203 (x807 x1363) (x1031 2) 0) x666) (= x1209 x1443))) (and (=> (and (= (> x1443 x74) x1842) (not x974)) (and (=> x1842 x1028) (=> (and (and (= x1912 (x978 x1998)) (= x1998 (x1203 (x807 x149) (x1031 2) 0)) (= (x1203 (x807 x1363) (x1031 2) 0) x815) (= x1599 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1443))) (<= x1912 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1912 0) (= (x1786 (- x74 x1443)) x878) (= (> x1912 x1599) x1474)) (not x1842)) (and (=> x1474 x1028) (=> (and (and (= x1561 (< x1291 x1912)) (= (x1811 (+ x1443 x1912)) x1291)) (not x1474)) (and (=> x1561 x1028) (=> (and (not x1561) (and (= x1544 1) (= x716 (x1203 (x807 x149) (x1031 2) 0)) (= 32 x1619))) x754))))))) (=> x974 x1028))))))) (=> (and (= (= x745 x1674) x895) (not x128)) (and (=> (and (and (= (x1786 (- x563 4)) x702) (< 0 x1103) (not (= x1530 2514000705)) (= 68 x563) (not (= 2376452955 x1530)) (= x1402 x997) (= (x421 (x807 x1674)) x1103) (= x2022 x457) (= x1270 (or (and (< x702 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x702))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x702))) (not (> 4 x563)) (not (= x1530 1889567281)) (= x2 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1530 2835717307) (not (> 826074471 x1530)) (= x1165 x563) (not (= 826074471 x1530))) x895) (and (=> (and (and (= x628 (= x2022 x457)) (= x191 x2022)) (not x1270)) (and (=> (not x628) x578) (=> (and (and (= x1763 (< x2051 x997)) (= (x408 x390) x2051) (<= x2051 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1402 x164) (= x390 (x1203 (x807 x1363) (x1031 2) 0)) (<= 0 x2051)) x628) (and (=> (and (not x1763) (= (> x1402 x2051) x1305)) (and (=> (and (and (= (x1203 (x807 x1363) (x1031 2) 0) x359) (= (x1786 (- x2051 x1402)) x1370) (>= x1481 0) (= (x1775 x445) x1481) (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1402)) x1029) (<= x1481 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1203 (x807 x2022) (x1031 2) 0) x445) (= (> x1481 x1029) x1362)) (not x1305)) (and (=> x1362 x578) (=> (and (not x1362) (and (= x1144 (> x1481 x1604)) (= (x1811 (+ x1481 x1402)) x1604))) (and (=> (and (not x1144) (and (= x1834 32) (= (x1203 (x807 x2022) (x1031 2) 0) x1445) (= x591 1))) x1557) (=> x1144 x578))))) (=> x1305 x578))) (=> x1763 x578))))) (=> x1270 x578))) (=> (and (not x895) (and (= (= x745 x352) x21) (and x21 (and (not (> 826074471 x750)) (= 68 x294) (not (= x750 2376452955)) (not (= 1889567281 x750)) (not (< x294 4)) (not (= 2514000705 x750)) (> x1920 0) (= x997 x1983) (not (= 826074471 x750)) (= x294 x1165) (= 2835717307 x750) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1573) (and (< x1573 64) (= true (<= x1573 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1278) (= (x421 (x807 x352)) x1920) (= x1681 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x252 x457) (= (x1786 (- x294 4)) x1573))))) (and (=> (and (and (= x659 (= x252 x457)) (= x252 x1428)) (not x1278)) (and (=> (and (and (>= x1302 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1302) (= (x1203 (x807 x1363) (x1031 2) 0) x256) (= x1983 x838) (= (x286 x256) x1302) (= x560 (< x1302 x997))) x659) (and (=> x560 x1275) (=> (and (not x560) (= (< x1302 x1983) x223)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2029) (= (x1859 x1924) x2029) (= (x1786 (- x1302 x1983)) x291) (= x898 (x1203 (x807 x1363) (x1031 2) 0)) (= x1230 (> x2029 x2037)) (= x2037 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1983))) (= x1924 (x1203 (x807 x252) (x1031 2) 0)) (<= 0 x2029)) (not x223)) (and (=> (and (and (= (x1811 (+ x1983 x2029)) x574) (= (< x574 x2029) x1613)) (not x1230)) (and (=> x1613 x1275) (=> (and (not x1613) (and (= 1 x845) (= 32 x61) (= x1391 (x1203 (x807 x252) (x1031 2) 0)))) x1620))) (=> x1230 x1275))) (=> x223 x1275))))) (=> (not x659) x1275))) (=> x1278 x1275))))))))))))) (=> (and (and (= x253 x997) (not (< x567 4)) (= 2835717307 x1129) (= x28 (x421 (x807 x571))) (not (> 2376452955 x1129)) (> 3065339685 x1129) (< 0 x28) (= x241 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x567 68) (= x452 x457) (= x567 x1165) (= (x1786 (- x567 4)) x967) (not (= 2678909723 x1129)) (= x803 (or (and (< x967 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x967))) (not (< x1129 2678909723))) x650) (and (=> (and (not x803) (and (= (= x457 x452) x872) (= x452 x1135))) (and (=> (not x872) x1626) (=> (and x872 (and (= x253 x1451) (<= 0 x2048) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2048) (= (x1203 (x807 x1363) (x1031 2) 0) x665) (= x2048 (x1537 x665)) (= x623 (> x997 x2048)))) (and (=> x623 x1626) (=> (and (not x623) (= (< x2048 x253) x1416)) (and (=> (and (and (= x483 (x1203 (x807 x452) (x1031 2) 0)) (= x917 (x1203 (x807 x1363) (x1031 2) 0)) (= x1861 (x1786 (- x2048 x253))) (<= 0 x1310) (= x55 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x253))) (= (x900 x483) x1310) (<= x1310 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x246 (> x1310 x55))) (not x1416)) (and (=> (and (and (= (x1811 (+ x253 x1310)) x260) (= x1878 (< x260 x1310))) (not x246)) (and (=> x1878 x1626) (=> (and (and (= x109 (x1203 (x807 x452) (x1031 2) 0)) (= x1515 1) (= 32 x1366)) (not x1878)) x1317))) (=> x246 x1626))) (=> x1416 x1626))))))) (=> x803 x1626))))))) (=> (and (not x1455) (= 0 x60)) x1581))))))) (=> (and (= x60 0) (not x926)) x1581))) (=> (and x950 (= x60 0)) x1581))) (=> (and x1608 (= x60 0)) x1581))) x646))
(assert (x1423 x115))
(assert (= (and x1763 x196) x165))
(assert (= x1496 (and x1949 x1989)))
(assert (x1423 x496))
(assert (= x1876 (or x132 x165 x91 x1389 x1631 x1056)))
(assert (x1423 x279))
(assert (x1423 x1791))
(assert (=> (>= 10000 x571) (= (x1031 x571) (x807 x571))))
(assert (x1423 x1690))
(assert (x1894 x745))
(assert (x75 x48))
(assert (= x722 (and x2006 x1271)))
(assert (= (x807 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1031 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (or x52 x163 x1665 x1439 x26 x1643) x1365))
(assert (x1423 x658))
(assert (= x1647 (and x1896 (not x1596))))
(assert (= x1816 (and x680 x1842)))
(assert (= x1288 (and x1908 (not x64))))
(assert (x1423 x582))
(assert (= x1293 (x1482 (x807 x1293))))
(assert (= x1670 (and x601 x405)))
(assert (=> (>= 10000 x1654) (= (x807 x1654) (x1031 x1654))))
(assert (x1423 x1295))
(assert (= (x88 (+ (- x1113 160) x1529)) 0))
(assert (= (and x80 x1416) x139))
(assert (= (and x1510 (not x1169)) x1379))
(assert (= x498 (and (not x929) x1609)))
(assert (= (and x1400 (not x21)) x384))
(assert (x1423 x1352))
(assert (= x579 (=> (and (and (= x1394 x360) (not (= x2009 2514000705)) (= (x421 (x807 x352)) x1106) (>= x527 0) (not (= 1889567281 x2009)) (<= x527 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2376452955 x2009)) (= x996 x469) (= x1657 (x1203 (x807 x469) x178 0)) (= x1997 x527) (= (x1691 x1657) x527) (= x2009 3714247998) (not (< x2009 826074471)) (< 0 x1106) (= (x1203 (x807 x1394) (x1031 3) 0) x178) (not (= 826074471 x2009)) (not (= 2835717307 x2009)) (>= 1461501637330902918203684832716283019655932542975 x1394) (<= x469 1461501637330902918203684832716283019655932542975)) (and (and (and (>= 1461501637330902918203684832716283019655932542975 x1746) (= x217 x465) (= x1092 (x1988 x968)) (= (x1203 (x807 x1746) x1190 0) x968) (<= x1092 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1396 0) (= (x1203 (x807 x1139) (x1031 3) 0) x1190) (= x1746 x996) (>= 1461501637330902918203684832716283019655932542975 x1139) (= (x421 (x807 x1269)) x1396) (not (= 826074471 x1134)) (= x247 x1092) (= x1139 x360) (not (= x1134 2835717307)) (not (= x1134 1889567281)) (= x1134 3714247998) (not (= 2514000705 x1134)) (not (= x1134 2376452955)) (>= x1092 0) (not (< x1134 826074471))) (and (and (= x800 x1388) (= x35 x242) (= x1698 (= x1388 x1050)) (= x141 x1050)) (and (not (= x1630 2376452955)) (= x965 (x1203 (x807 x1764) (x1031 3) 0)) (= x996 x504) (<= x1764 1461501637330902918203684832716283019655932542975) (<= 0 x1109) (= 3714247998 x1630) (>= 1461501637330902918203684832716283019655932542975 x504) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1109) (= x1532 (x421 (x807 x1295))) (not (= x1630 2835717307)) (= x1675 x247) (> x1532 0) (= x242 x1109) (= x1764 x360) (not (> 1086394137 x1630)) (not (= x1630 1889567281)) (= (x1203 (x807 x504) x965 0) x220) (= x1109 (x1404 x220)) (not (= x1630 1086394137)) (not (= 2514000705 x1630))))) (and (= x1997 x800) (= (x421 (x807 x113)) x274) (not (> 2376452955 x1260)) (= 3714247998 x1260) (= x1584 (x1203 (x807 x183) x157 0)) (< 0 x274) (= x996 x183) (>= x1126 0) (not (= x1260 3645313523)) (>= 1461501637330902918203684832716283019655932542975 x7) (= x1126 (x1385 x1584)) (not (> 3065339685 x1260)) (<= x183 1461501637330902918203684832716283019655932542975) (not (< x1260 3645313523)) (= x360 x7) (<= x1126 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x465 x1126) (= (x1203 (x807 x7) (x1031 3) 0) x157) (not (= 3703996404 x1260))))) (and x1698 (=> (and (= x217 x1342) (= x1991 x1457) (= x471 (= x1342 x1991))) (and x471 (=> (and (= x1436 x1675) (= x467 x94) (= (= x467 x1436) x12)) (and x12 (=> (and (= x1857 x1760) (= x1884 x35) (= (= x1857 x1884) x905)) x905)))))))))
(assert (= x175 (and x670 x607)))
(assert (= (x807 3645313523) (x1031 3645313523)))
(assert (x1423 x245))
(assert (x1423 x124))
(assert (x1423 x19))
(assert (x1423 x1398))
(assert (x1423 x2029))
(assert (= x1739 (or x1243 x1420)))
(assert (= x1694 (or x481 x487)))
(assert (= (and x32 x1477) x847))
(assert (x75 x1654))
(assert (x1423 x166))
(assert (x1423 x47))
(assert (x1423 x127))
(assert (x1423 x555))
(assert (= (and x708 (not x1878)) x365))
(assert (= (or x331 x1133) x258))
(assert (= (and x1705 x629) x1016))
(assert (x1423 x272))
(assert (x1423 x1704))
(assert (= (and (not x532) x885) x1089))
(assert (x1423 x1323))
(assert (= (x1031 1889567281) (x807 1889567281)))
(assert (x1423 x998))
(assert (x1423 x1761))
(assert (x962 x1024))
(assert (= x938 (and (not x1677) x304)))
(assert (= (and x1903 x910) x443))
(assert (= x921 (and (not x744) x1147)))
(assert (= (=> (and (= 0 x391) (= x549 x672)) x1097) x1865))
(assert (x1423 x863))
(assert (x1423 x1409))
(assert (x75 x310))
(assert (x1423 x161))
(assert (x1423 x1635))
(assert (x1423 x453))
(assert (= x432 (and x463 x1720)))
(assert (x162 x1233))
(assert (= (x1031 1461501637330902918203684832716283019655932542975) (x807 1461501637330902918203684832716283019655932542975)))
(assert (x1423 x1287))
(assert (x1423 x1428))
(assert (= x16 (x1482 (x807 x16))))
(assert (= (and x725 x443) x1833))
(assert (= (and x817 (not x872)) x1419))
(assert (x1423 x1008))
(assert (= 826074471 (x1482 (x1031 826074471))))
(assert (= (=> (and (or (not x11) x11) (= x11 (= x683 0))) x1921) x262))
(assert (x1423 x1904))
(assert (= x759 (=> (and (or (and (not x126) (and (= x673 (ite x1152 1 0)) (= (not x899) x1152) (= x840 32) (= (= 0 x316) x899))) (and x126 (and (> x182 0) (= 1 x673) (= (x421 (x807 x913)) x182)))) (and (= x126 (= x840 0)) (< 0 x1748))) x1054)))
(assert (= x612 (and (not x1588) x145)))
(assert (= (and (not x407) x1868) x277))
(assert (x1423 x341))
(assert (=> (>= 10000 x1741) (= (x807 x1741) (x1031 x1741))))
(assert (x1423 x784))
(assert (= x1970 (and (not x211) x948)))
(assert (= (and x1531 x1160) x1853))
(assert (x75 x504))
(assert (x1423 x2026))
(assert (= x619 (and x1036 x1266)))
(assert (= x1131 (=> (and (= x809 x1603) (= 0 x1710)) x1222)))
(assert (= x1256 (and x1477 (not x32))))
(assert (= (=> (and (= x354 x867) (= x600 x77)) x1805) x604))
(assert (= (and x717 x705) x1000))
(assert (= x660 (and x498 x1607)))
(assert (= x1829 (and (not x1800) x1610)))
(assert (= (and x1897 x1382) x1432))
(assert (x1423 x1247))
(assert (= (and (not x850) x1528) x83))
(assert (= x1826 (or x931 x1249 x1217 x1442 x1318 x1229)))
(assert (x1423 x1529))
(assert (x1423 x1431))
(assert (x1423 x890))
(assert (= x1407 (and x1829 x802)))
(assert (= (x1482 (x1031 2952933380)) 2952933380))
(assert (x1423 x1024))
(assert (x1423 x630))
(assert (= (x1482 (x72 x458 1)) (+ 1 (x1482 x458))))
(assert (= x1269 (x1482 (x807 x1269))))
(assert (x1423 x1328))
(assert (x1423 x275))
(assert (x1423 x1094))
(assert (= (or x1970 x393) x107))
(assert (= x1813 (and x1004 x638)))
(assert (= x91 (and x651 (not x628))))
(assert (= (and x416 x1225) x195))
(assert (= (and x281 (not x667)) x1824))
(assert (x1423 x1103))
(assert (x1423 x41))
(assert (x75 x913))
(assert (x1423 x772))
(assert (x1423 x634))
(assert (= x1964 (and x1220 (not x987))))
(assert (x1423 x1197))
(assert (x1423 x1378))
(assert (= (x1482 (x1031 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1423 x729))
(assert (x75 x564))
(assert (x1423 x740))
(assert (x1423 x613))
(assert (=> (>= 10000 x721) (= (x1031 x721) (x807 x721))))
(assert (x1423 x1062))
(assert (x1423 x1810))
(assert (x1423 x48))
(assert (x1423 x1040))
(assert (x1423 x973))
(assert (x1423 x1044))
(assert (= (and x921 (not x1555)) x169))
(assert (= x1150 (and (not x609) x1393)))
(assert (= x1437 (and (not x1612) x1329)))
(assert (= x1844 (and x1552 x1034)))
(assert (x75 x590))
(assert (= x1509 (and x447 x724)))
(assert (= x168 (and (not x1059) x1173)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1482 (x1031 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x1423 x1515))
(assert (x1423 x431))
(assert (x1423 x1312))
(assert (x1423 x1475))
(assert (= (x1482 (x1031 18446744073709551615)) 18446744073709551615))
(assert (= (and (not x935) x1964) x1458))
(assert (= x296 (and x1978 x1068)))
(assert (= (and (not x1949) x1989) x629))
(assert (x1423 x2025))
(assert (= (and x1729 (not x1901)) x605))
(assert (x1423 x1895))
(assert (= (x1482 (x807 x1295)) x1295))
(assert (= (x1031 3065339685) (x807 3065339685)))
(assert (= x1789 (and (not x1198) x1785)))
(assert (= x1433 (=> (and (= x3 x1748) (= x1629 x840)) x1999)))
(assert (x1423 x2034))
(assert (=> (<= x41 10000) (= (x807 x41) (x1031 x41))))
(assert (= (and x1639 x1793) x159))
(assert (= (and (not x623) x2055) x80))
(assert (= x493 (and (not x1455) x1350)))
(assert (x1423 x1622))
(assert (x1423 x2018))
(assert (=> (>= 10000 x48) (= (x1031 x48) (x807 x48))))
(assert (x1423 x1687))
(assert (x962 x662))
(assert (x1423 x298))
(assert (= (and x1072 x661) x468))
(assert (= (and x1015 x1089) x1643))
(assert (x1423 x469))
(assert (= x1353 (and x1583 x414)))
(assert (x1423 x1511))
(assert (= x7 (x1482 (x807 x7))))
(assert (= (=> (and (= x77 x1854) (= x482 x867)) x1805) x920))
(assert (x1423 x1726))
(assert (x1423 x1987))
(assert (= (and x846 x338) x1049))
(assert (x1423 x1234))
(assert (= x1325 (and x667 x281)))
(assert (= x1587 (and x1450 x1449)))
(assert (= x1750 (and (not x610) x1065)))
(assert (x75 x183))
(assert (x1423 x1130))
(assert (x1423 x1402))
(assert (x1423 x878))
(assert (= x1117 (or (and (not x11) x1099) x1638)))
(assert (x1894 x1233))
(assert (x1423 x1116))
(assert (= (and x386 x168) x1752))
(assert (= x207 (and x130 (not x1839))))
(assert (= x63 (or x5 x677)))
(assert (= (=> (and (= 0 x1163) (= x749 x486)) x202) x81))
(assert (= x587 (and x1412 x712)))
(assert (x1423 x930))
(assert (x1423 x824))
(assert (= x150 (and x84 x726)))
(assert (x1423 x1602))
(assert (= (and x532 x885) x1439))
(assert (= (and (not x463) x1720) x699))
(assert (= (and x1322 x631) x477))
(assert (x1423 x470))
(assert (x1423 x1321))
(assert (x1423 x303))
(assert (x1423 x1029))
(assert (= (x1031 1083311676) (x807 1083311676)))
(assert (x1423 x1286))
(assert (x1423 x934))
(assert (= x1069 (and x143 (not x1684))))
(assert (x1423 x205))
(assert (= (x807 1086394137) (x1031 1086394137)))
(assert (=> (<= x1052 10000) (= (x807 x1052) (x1031 x1052))))
(assert (= (or x795 x372) x944))
(assert (x1423 x1818))
(assert (x1423 x1067))
(assert (x1423 x2019))
(assert (= (and x1535 x1007) x1043))
(assert (= x651 (and (not x1270) x151)))
(assert (= (or x1049 x1711 x1344 x320 x2035 x2008) x1814))
(assert (= x481 (or x328 x152 x464 x1196 x2054 x150)))
(assert (= x1579 (x1482 (x807 x1579))))
(assert (x75 x1943))
(assert (= x307 (and x21 x1400)))
(assert (x1423 x942))
(assert (x1423 x1915))
(assert (= x174 (or x972 x543 x258 x1543 x691 x1526 x311)))
(assert (= (and x1030 (not x2053)) x1729))
(assert (x1423 x450))
(assert (x1423 x766))
(assert (x1423 x1333))
(assert (= (x1482 (x807 x2026)) x2026))
(assert (= x1526 (or x1277 x1795)))
(assert (= (and x606 x1736) x401))
(assert (=> (>= 10000 x564) (= (x807 x564) (x1031 x564))))
(assert (x1423 x566))
(assert (x1423 x1194))
(assert (= x1790 (and x224 (not x160))))
(assert (=> (<= x1667 10000) (= (x1031 x1667) (x807 x1667))))
(assert (= (and x321 x1553) x1111))
(assert (= x1191 (=> (and (= x244 x448) (= x70 x896)) x218)))
(assert (x1423 x563))
(assert (x1423 x90))
(assert (x75 x302))
(assert (x1423 x1702))
(assert (x162 1461501637330902918203684832716283019655932542975))
(assert (= x961 (or x1633 x1461)))
(assert (x1423 x673))
(assert (= x737 (and x18 x295)))
(assert (=> (>= 10000 x161) (= (x807 x161) (x1031 x161))))
(assert (= (x1482 (x807 x1351)) x1351))
(assert (x75 x1858))
(assert (= x892 (and x605 x172)))
(assert (x1423 x1618))
(assert (x1423 x460))
(assert (x1423 x1300))
(assert (x1423 x1589))
(assert (= (and x643 (not x1223)) x414))
(assert (= (=> (and (= x1834 x46) (= x2001 x591)) x1164) x1557))
(assert (= x1166 (or x874 x1876)))
(assert (x1423 x438))
(assert (= x161 (x1482 (x807 x161))))
(assert (= (and (not x335) x17) x911))
(assert (= (x903 292) 0))
(assert (x1423 x896))
(assert (x1423 x504))
(assert (x1423 x1565))
(assert (x1423 x1334))
(assert (= (x1482 (x1031 2678909723)) 2678909723))
(assert (= x2042 (and x1558 (not x918))))
(assert (= (and x83 (not x1495)) x1558))
(assert (x1894 x901))
(assert (x1423 x42))
(assert (= x806 (and x1424 x43)))
(assert (x75 x1764))
(assert (= (and x1037 x1514) x1510))
(assert (x1423 x1654))
(assert (x1423 x44))
(assert (=> (>= 10000 x596) (= (x807 x596) (x1031 x596))))
(assert (x1423 x1658))
(assert (x1423 x155))
(assert (x1423 x1448))
(assert (= x1172 (and x78 (not x1502))))
(assert (x1423 x418))
(assert (x1423 x855))
(assert (= x1765 (and x1789 x1019)))
(assert (x1423 x1341))
(assert (= (=> (and (= x303 x244) (= x1850 x896)) x218) x1700))
(assert (x1423 x230))
(assert (= (=> (and (= x103 (x1811 (+ x1141 x1341))) (= x1333 (mod (* x703 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x714 x103) (= x1840 (x1786 (- x714 x1529))) (= x933 (x1811 (+ x893 x1333))) (= x1341 (mod (* 32 x703) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x683 1) (= x933 x930) (= x797 x703) (= x1840 x1644)) x262) x692))
(assert (=> (<= x396 10000) (= (x1031 x396) (x807 x396))))
(assert (x1423 x1202))
(assert (=> (>= 10000 x266) (= (x1031 x266) (x807 x266))))
(assert (x1423 x688))
(assert (x1423 x1779))
(assert (= x653 (and (not x223) x1151)))
(assert (x1423 x750))
(assert (= (and (not x1583) x414) x639))
(assert (x1423 x1540))
(assert (= x721 (x1482 (x807 x721))))
(assert (x1423 x291))
(assert (= (and x651 x628) x196))
(assert (x1423 x616))
(assert (x1423 x551))
(assert (x1423 x1463))
(assert (= (and (not x1699) x1150) x1889))
(assert (= (and x17 x335) x26))
(assert (x1423 x749))
(assert (x75 x1770))
(assert (= x1180 (and (not x212) x694)))
(assert (x1423 x1777))
(assert (= (and x987 x1220) x940))
(assert (= x2047 (and (not x1793) x1639)))
(assert (= x886 (and x984 x1580)))
(assert (= x1147 (and x946 (not x1788))))
(assert (x1423 x244))
(assert (= (x1482 (x807 x2038)) x2038))
(assert (x1423 x1870))
(assert (x1423 x618))
(assert (= (and (not x1512) x1848) x1993))
(assert (x1423 x371))
(assert (x1423 x549))
(assert (= (or x107 x1568 x844 x1694 x981 x1739 x1359) x1954))
(assert (x162 x1725))
(assert (= x1171 (and x2049 x1292)))
(assert (x1423 x1834))
(assert (x1423 x1787))
(assert (= 0 (x903 x1582)))
(assert (= (and x621 x1184) x68))
(assert (= (and x680 (not x1842)) x500))
(assert (x1423 x1644))
(assert (= x715 (and (not x1004) x638)))
(assert (= x1922 (and x1368 x477)))
(assert (x75 x1394))
(assert (x1423 x1250))
(assert (= (and x1304 (not x1349)) x1249))
(assert (x1423 x1781))
(assert (x1423 x360))
(assert (= x1535 (and x1614 (not x519))))
(assert (x1423 x1840))
(assert (= x1946 (x807 (x1482 x1946))))
(assert (= (x1482 (x72 x1845 2)) (+ (x1482 x1845) 2)))
(assert (x1423 x373))
(assert (x1423 x2045))
(assert (x1423 x62))
(assert (x1423 x241))
(assert (x1423 x909))
(assert (x1423 x197))
(assert (x1423 x997))
(assert (= (and (not x508) x1064) x1937))
(assert (= (x807 2376452955) (x1031 2376452955)))
(assert (x1423 x736))
(assert (x1423 x1625))
(assert (x1423 x55))
(assert (= x808 (and (not x1079) x342)))
(assert (= x590 (x1482 (x807 x590))))
(assert (= x2055 (and x817 x872)))
(assert (= x25 (and x1783 x523)))
(assert (x75 x2022))
(assert (= (and x615 x626) x585))
(assert (x1423 x1963))
(assert (x1423 x1577))
(assert (= x936 (and (not x51) x1668)))
(assert (x1423 x284))
(assert (x1423 x992))
(assert (x1423 x1972))
(assert (= x1709 (and x609 x1393)))
(assert (x1423 x389))
(assert (x1423 x240))
(assert (x1423 x31))
(assert (= (and x1167 x668) x1650))
(assert (=> (>= 10000 x1770) (= (x1031 x1770) (x807 x1770))))
(assert (= (and x518 (not x1236)) x1899))
(assert (= (and x866 x808) x1871))
(assert (x1423 x1956))
(assert (= x530 (=> (and (= x558 x896) (= x1663 x244)) x218)))
(assert (= (and x500 (not x1474)) x922))
(assert (= (or x1268 x1187) x311))
(assert (x1423 x656))
(assert (= x1939 (or x723 x269 x139 x775 x1419 x1606)))
(assert (= (x1482 (x1031 3703996404)) 3703996404))
(assert (x1423 x1634))
(assert (x1423 x1366))
(assert (x1423 x1136))
(assert (x1423 x1603))
(assert (=> (<= x302 10000) (= (x1031 x302) (x807 x302))))
(assert (x1423 x242))
(assert (= x59 (or (and x1735 x2002) x587 (and x1337 (not x1550)) x392 (and x1102 x466) (and x1348 x983))))
(assert (= (and x1474 x500) x1659))
(assert (x1423 x745))
(assert (x1423 x1854))
(assert (x1423 x575))
(assert (=> (<= x902 10000) (= (x807 x902) (x1031 x902))))
(assert (x1423 x1971))
(assert (= x1218 (and x1713 (not x1085))))
(assert (x1423 x672))
(assert (x1423 x1035))
(assert (x1423 x675))
(assert (=> (>= 10000 x252) (= (x807 x252) (x1031 x252))))
(assert (x1423 x1237))
(assert (x1423 x1414))
(assert (x1423 x893))
(assert (= (and x1670 (not x1142)) x799))
(assert (x1423 x103))
(assert (= (x1482 (x807 x511)) x511))
(assert (x1423 x426))
(assert (x1423 x1827))
(assert (x1423 x1679))
(assert (x1423 x767))
(assert (x1423 x534))
(assert (= x578 (=> (and (= x591 0) (= x1834 x1603)) x1557)))
(assert (= x931 (and x97 x38)))
(assert (x1423 x718))
(assert (= (or x1408 x1934 x1111 x323 x86 x1742) x13))
(assert (x1423 x1731))
(assert (= (=> (= (= 0 x2001) x1292) (and (=> (and (and (= (x1811 (+ x1003 x1174)) x1545) (= (x1189 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1024) x1174) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x46) true) (< x46 32)) (> x46 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x334) (= x1024 (x1811 (+ 31 x46)))) (not x1292)) (and (=> (and (not x334) (and (= (< 2 x6) x2017) (= (x1203 (x807 x206) (x1031 0) 0) x112))) (and (=> (and (and (= x302 (x1701 164)) (= x1390 (x1189 1461501637330902918203684832716283019655932542975 x302)) (= x1684 (= x302 x1390))) x2017) (and (=> (and (and (= (x1203 (x807 x302) x112 0) x1175) (>= x470 0) (= (x1929 x1175) x470) (= x455 (> x551 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x470)) x1684) (and (=> (and x455 (and (= (x1802 (x1031 1) 0) x1073) (= (x1701 164) x901) (= x676 (x72 x1073 2)) (= (x1189 1461501637330902918203684832716283019655932542975 x901) x731) (= x1591 (= x731 x901)))) (and (=> (and x1591 (= (< 2 x551) x793)) (and (=> (and x793 (and (= x713 (x985 x1283)) (= x1283 (x72 x1845 2)) (<= 0 x713) (= x1845 (x1802 (x1031 1) 0)) (= x480 (x1811 (+ x108 32))) (= x108 (x1811 (+ x1545 4))) (= x648 (x1811 (+ 64 x108))) (= x1788 (= x571 x901)) (= x864 (x1786 (- x648 x1545))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x713))) (and (=> (and x1788 (and (not (> 2678909723 x955)) (= x955 2835717307) (= 68 x1192) (not (< x1192 4)) (= x713 x752) (not (> 2376452955 x955)) (= x1055 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1786 (- x1192 4)) x1311) (< 0 x580) (= x457 x766) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1311) (and (= true (<= x1311 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1311 64))) x987) (not (= x955 2678909723)) (> 3065339685 x955) (= (x421 (x807 x571)) x580) (= x864 x1192))) (and (=> (and (and (= x766 x1331) (= (= x766 x457) x935)) (not x987)) (and (=> (not x935) x34) (=> (and x935 (and (= x1777 x752) (= (< x341 x713) x299) (<= 0 x341) (= x73 (x1203 (x807 x1363) (x1031 2) 0)) (= (x288 x73) x341) (<= x341 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x299 x34) (=> (and (= x442 (> x752 x341)) (not x299)) (and (=> (and (not x442) (and (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x752)) x925) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x309) (= (x1203 (x807 x766) (x1031 2) 0) x1507) (= (x1203 (x807 x1363) (x1031 2) 0) x602) (= x1239 (> x309 x925)) (<= 0 x309) (= x1812 (x1786 (- x341 x752))) (= x309 (x1815 x1507)))) (and (=> (and (and (= (> x309 x214) x434) (= x214 (x1811 (+ x752 x309)))) (not x1239)) (and (=> (and (and (= x448 32) (= 1 x70) (= x184 (x1203 (x807 x766) (x1031 2) 0))) (not x434)) x1191) (=> x434 x34))) (=> x1239 x34))) (=> x442 x34))))))) (=> x987 x34))) (=> (and (= x744 (= x113 x901)) (not x1788)) (and (=> (and (= x1555 (= x901 x310)) (not x744)) (and (=> (and (= x730 (= x1269 x901)) (not x1555)) (and (=> (and (not x730) (= (= x901 x1295) x631)) (and (=> (and (and (= 2835717307 x2044) (= x625 (x1786 (- x841 4))) (not (= x2044 1086394137)) (= x713 x711) (= x1334 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 1086394137 x2044)) (not (< x841 4)) (= (or (and (< x625 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x625) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x625)) x1368) (not (= x2044 1889567281)) (< 0 x368) (= x841 x864) (= (x421 (x807 x1295)) x368) (= 68 x841) (not (= x2044 2514000705)) (not (= x2044 2376452955)) (= x457 x16)) x631) (and (=> x1368 x343) (=> (and (and (= x2052 (= x457 x16)) (= x656 x16)) (not x1368)) (and (=> (not x2052) x343) (=> (and (and (<= 0 x729) (= x850 (< x729 x713)) (= (x1330 x1975) x729) (= (x1203 (x807 x1363) (x1031 2) 0) x1975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729) (= x711 x1465)) x2052) (and (=> x850 x343) (=> (and (not x850) (= (> x711 x729) x1495)) (and (=> x1495 x343) (=> (and (and (= (x1203 (x807 x16) (x1031 2) 0) x1539) (>= x630 0) (= x1586 (x1786 (- x729 x711))) (= x747 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x711))) (= (> x630 x747) x918) (= x630 (x201 x1539)) (<= x630 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x804 (x1203 (x807 x1363) (x1031 2) 0))) (not x1495)) (and (=> x918 x343) (=> (and (and (= x426 (x1811 (+ x711 x630))) (= (< x426 x630) x305)) (not x918)) (and (=> (and (and (= 32 x1398) (= 1 x1589) (= x1951 (x1203 (x807 x16) (x1031 2) 0))) (not x305)) x1928) (=> x305 x343))))))))))))) (=> (and (= x620 (= x901 x1674)) (not x631)) (and (=> (and (not x620) (and (= (= x901 x352) x1863) (and (and (= x1635 x864) (= x429 x713) (= x375 2835717307) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x734) (= x1635 68) (not (> 826074471 x375)) (not (= 826074471 x375)) (> x1523 0) (= (x1786 (- x1635 4)) x736) (not (= x375 2376452955)) (= x596 x457) (not (= 2514000705 x375)) (= (or (and (= (<= x736 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x736)) (> x736 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x929) (not (> 4 x1635)) (= (x421 (x807 x352)) x1523) (not (= x375 1889567281))) x1863))) (and (=> (and (not x929) (and (= x1738 x596) (= x1607 (= x596 x457)))) (and (=> (not x1607) x200) (=> (and x1607 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x854) (= x1434 x429) (= x54 (x1203 (x807 x1363) (x1031 2) 0)) (= x854 (x1178 x54)) (>= x854 0) (= (< x854 x713) x484))) (and (=> x484 x200) (=> (and (not x484) (= x1580 (> x429 x854))) (and (=> x1580 x200) (=> (and (and (= (> x1084 x1485) x1926) (= (x1203 (x807 x1363) (x1031 2) 0) x951) (= (x1203 (x807 x596) (x1031 2) 0) x652) (= x1485 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x429))) (= x1084 (x516 x652)) (<= 0 x1084) (= x1565 (x1786 (- x854 x429))) (<= x1084 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1580)) (and (=> x1926 x200) (=> (and (and (= (x1811 (+ x1084 x429)) x153) (= x1034 (< x153 x1084))) (not x1926)) (and (=> x1034 x200) (=> (and (and (= x558 1) (= 32 x1663) (= (x1203 (x807 x596) (x1031 2) 0) x1326)) (not x1034)) x530))))))))))) (=> x929 x200))) (=> (and x620 (and (= x115 (x421 (x807 x1674))) (= x746 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x577) true) (> 64 x577)) (> x577 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x457 x1712) (not (= x1572 1889567281)) (not (= 826074471 x1572)) (= x577 (x1786 (- x147 4))) (= x171 x713) (= x1572 2835717307) (= x864 x147) (= x627 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2514000705 x1572)) (= x147 68) (> x115 0) (not (= 2376452955 x1572)) (not (< x1572 826074471)) (not (< x147 4)))) (and (=> x746 x1865) (=> (and (and (= x1712 x1259) (= x757 (= x1712 x457))) (not x746)) (and (=> (not x757) x1865) (=> (and x757 (and (= (> x713 x314) x532) (= x879 (x1203 (x807 x1363) (x1031 2) 0)) (<= x314 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x116 x879) x314) (>= x314 0) (= x171 x831))) (and (=> (and (= (< x314 x171) x1015) (not x532)) (and (=> x1015 x1865) (=> (and (not x1015) (and (= (< x1759 x853) x1893) (<= x853 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1759 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x171))) (= x1628 (x1203 (x807 x1363) (x1031 2) 0)) (= x1751 (x1203 (x807 x1712) (x1031 2) 0)) (= x1522 (x1786 (- x314 x171))) (= x853 (x640 x1751)) (>= x853 0))) (and (=> x1893 x1865) (=> (and (and (= (x1811 (+ x853 x171)) x293) (= x335 (< x293 x853))) (not x1893)) (and (=> (and (and (= x1982 (x1203 (x807 x1712) (x1031 2) 0)) (= 32 x672) (= x391 1)) (not x335)) x1097) (=> x335 x1865))))))) (=> x532 x1865))))))))))) (=> (and (and (= x457 x1351) (= x864 x238) (= x131 (x421 (x807 x1269))) (= x238 68) (not (= x1676 2376452955)) (not (> 826074471 x1676)) (> x131 0) (= x610 (or (and (< x575 64) (= true (<= x575 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x575))) (= x1361 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 826074471 x1676)) (not (= 1889567281 x1676)) (= (x1786 (- x238 4)) x575) (not (= 2514000705 x1676)) (= x2018 x713) (= x1676 2835717307) (not (> 4 x238))) x730) (and (=> (and (and (= x1351 x1234) (= (= x457 x1351) x1767)) (not x610)) (and (=> (and (and (<= 0 x1201) (= (x506 x614) x1201) (= x1781 x2018) (= (x1203 (x807 x1363) (x1031 2) 0) x614) (<= x1201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1201 x713) x1480)) x1767) (and (=> (and (not x1480) (= x160 (< x1201 x2018))) (and (=> x160 x2000) (=> (and (not x160) (and (= x22 (> x1716 x770)) (= (x1022 x1114) x1716) (= x1114 (x1203 (x807 x1351) (x1031 2) 0)) (<= x1716 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1258 (x1203 (x807 x1363) (x1031 2) 0)) (= x1240 (x1786 (- x1201 x2018))) (>= x1716 0) (= x770 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2018))))) (and (=> x22 x2000) (=> (and (and (= (> x1716 x138) x84) (= (x1811 (+ x1716 x2018)) x138)) (not x22)) (and (=> (and (and (= 32 x101) (= x330 (x1203 (x807 x1351) (x1031 2) 0)) (= 1 x1035)) (not x84)) x1376) (=> x84 x2000))))))) (=> x1480 x2000))) (=> (not x1767) x2000))) (=> x610 x2000))))) (=> (and x1555 (and (= (or (and (< x1323 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1323))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1323)) x376) (not (= x155 826074471)) (< 0 x345) (= (x421 (x807 x310)) x345) (= x1415 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2376452955 x155)) (= x1040 x864) (not (> 4 x1040)) (= 2835717307 x155) (= (x1786 (- x1040 4)) x1323) (= 68 x1040) (not (= x155 2514000705)) (= x457 x1770) (not (= x155 1889567281)) (= x616 x713) (not (< x155 826074471)))) (and (=> (and (and (= x642 x1770) (= (= x1770 x457) x1512)) (not x376)) (and (=> (not x1512) x1880) (=> (and (and (<= x36 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1177 (x1203 (x807 x1363) (x1031 2) 0)) (= x36 (x507 x1177)) (<= 0 x36) (= x1489 (< x36 x713)) (= x988 x616)) x1512) (and (=> (and (not x1489) (= x1800 (> x616 x36))) (and (=> (and (and (= x1421 (x1203 (x807 x1363) (x1031 2) 0)) (= x1138 (x2012 x742)) (>= x1138 0) (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x616)) x127) (= x802 (< x127 x1138)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1138) (= x742 (x1203 (x807 x1770) (x1031 2) 0)) (= (x1786 (- x36 x616)) x1110)) (not x1800)) (and (=> x802 x1880) (=> (and (not x802) (and (= x1424 (> x1138 x1157)) (= (x1811 (+ x1138 x616)) x1157))) (and (=> (and (and (= x1830 (x1203 (x807 x1770) (x1031 2) 0)) (= x1703 1) (= x1312 32)) (not x1424)) x764) (=> x1424 x1880))))) (=> x1800 x1880))) (=> x1489 x1880))))) (=> x376 x1880))))) (=> (and x744 (and (= x864 x1340) (= x740 2835717307) (= x713 x1303) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x784) (> 3065339685 x740) (not (= x740 2678909723)) (not (> 4 x1340)) (not (< x740 2678909723)) (= (x1786 (- x1340 4)) x1410) (= x1667 x457) (= x1340 68) (= (x421 (x807 x113)) x1112) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1410)) (> 64 x1410)) (> x1410 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x18) (not (> 2376452955 x740)) (> x1112 0))) (and (=> (and (and (= x1221 x1667) (= (= x457 x1667) x601)) (not x18)) (and (=> (not x601) x114) (=> (and x601 (and (= (x1203 (x807 x1363) (x1031 2) 0) x710) (= (x1722 x710) x135) (= x1116 x1303) (<= x135 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1142 (> x713 x135)) (<= 0 x135))) (and (=> (and (not x1142) (= (< x135 x1303) x1395)) (and (=> (and (not x1395) (and (= (x1786 (- x135 x1303)) x1902) (>= x1375 0) (= x1375 (x1051 x758)) (= (< x1405 x1375) x1823) (= (x1203 (x807 x1667) (x1031 2) 0) x758) (<= x1375 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x257 (x1203 (x807 x1363) (x1031 2) 0)) (= x1405 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1303))))) (and (=> x1823 x114) (=> (and (and (= x1976 (x1811 (+ x1375 x1303))) (= (< x1976 x1375) x211)) (not x1823)) (and (=> x211 x114) (=> (and (not x211) (and (= 32 x303) (= x142 (x1203 (x807 x1667) (x1031 2) 0)) (= x1850 1))) x1700))))) (=> x1395 x114))) (=> x1142 x114))))) (=> x18 x114))))))) (=> (and (= 0 x60) (not x793)) x1581))) (=> (and (= x60 0) (not x1591)) x1581))) (=> (and (not x455) (= x60 0)) x1581))) (=> (and (not x1684) (= x60 0)) x1581))) (=> (and (= x60 0) (not x2017)) x1581))) (=> (and x334 (= x60 0)) x1581))) (=> (and (= x60 0) x1292) x1581))) x369))
(assert (= x827 (and x89 x1212)))
(assert (= x762 (and x1610 x1800)))
(assert (x1423 x1221))
(assert (x75 x1746))
(assert (x1423 x70))
(assert (x1423 x1759))
(assert (x1423 x266))
(assert (= (and (not x1144) x1621) x874))
(assert (= (and x1927 x926) x1107))
(assert (= x1054 (=> (> x673 0) x552)))
(assert (= (and x1917 x1239) x521))
(assert (x162 x1741))
(assert (x1423 x1141))
(assert (= x1742 (and (not x1525) x859)))
(assert (x1423 x1235))
(assert (x1423 x3))
(assert (= (x807 (x1482 x1931)) x1931))
(assert (x1423 x955))
(assert (= (x1482 (x1031 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= x1037 (and x1969 x1096)))
(assert (x75 x469))
(assert (= x1376 (=> (and (= x244 x101) (= x896 x1035)) x218)))
(assert (= (and x938 (not x533)) x1041))
(assert (=> (>= 10000 x913) (= (x807 x913) (x1031 x913))))
(assert (= x1093 (=> (and (= x1603 x1488) (= 0 x1252)) x1459)))
(assert (x1423 x574))
(assert (x1423 x39))
(assert (x1423 x247))
(assert (x1423 x74))
(assert (= (and x498 (not x1607)) x347))
(assert (= x1533 (and x1823 x954)))
(assert (x1423 x627))
(assert (= x1712 (x1482 (x807 x1712))))
(assert (= (x1482 (x72 x1073 2)) (+ (x1482 x1073) 2)))
(assert (x1423 x1244))
(assert (x1423 x1354))
(assert (x1423 x1310))
(assert (= (and x340 (not x126)) x514))
(assert (=> (>= 10000 x352) (= (x1031 x352) (x807 x352))))
(assert (= (and x921 x1555) x1981))
(assert (x1423 x1599))
(assert (= (and (not x1279) x1479) x1066))
(assert (x1423 x495))
(assert (= (x1031 2289173607) (x807 2289173607)))
(assert (x1423 x1812))
(assert (= (and (not x1306) x1478) x751))
(assert (x1423 x1174))
(assert (x1423 x316))
(assert (x1423 x853))
(assert (x1423 x28))
(assert (= (and x1374 (not x2017)) x573))
(assert (x1423 x233))
(assert (= (and x983 (not x1348)) x1337))
(assert (= x1284 (or x836 x13)))
(assert (= (and x455 x133) x835))
(assert (= (and x966 x300) x216))
(assert (= (=> (and (= x1398 x549) (= 0 x1589)) x1928) x343))
(assert (=> (<= x1858 10000) (= (x807 x1858) (x1031 x1858))))
(assert (= (and (not x1395) x799) x954))
(assert (x1423 x1124))
(assert (= x822 x387))
(assert (x75 x766))
(assert (= (and x709 (not x2043)) x1771))
(assert (x75 x2026))
(assert (= (x88 (+ (- x1113 128) x1529)) 0))
(assert (x1423 x206))
(assert (x1423 x1847))
(assert (= (and x346 x1907) x1783))
(assert (x1423 x941))
(assert (= x1184 (and (not x1392) x188)))
(assert (= (and x1479 x1279) x1231))
(assert (= (x1031 1173398607) (x807 1173398607)))
(assert (= x202 (=> (and (= x1163 x1748) (= x486 x840)) x1999)))
(assert (= (and x404 x813) x1176))
(assert (=> (<= x1293 10000) (= (x1031 x1293) (x807 x1293))))
(assert (x1423 x864))
(assert (= (and (not x22) x1790) x726))
(assert (= (and x2007 (not x334)) x1374))
(assert (= 0 (x1911 x548)))
(assert (= x1849 (=> (and (= (< 0 x1265) x1753) (= (x970 x1625) x1265)) (and (=> (and x1753 (and (> x655 0) (= x1593 (x970 x1113)) (= x1113 (x1811 (+ x1625 32))) (= (x970 x1625) x655) (= x705 (< 0 x1593)))) (and (=> (and x705 (and (= (x1811 (+ x1870 32)) x649) (= x222 x1060) (= x315 (x970 x1625)) (>= 1461501637330902918203684832716283019655932542975 x913) (< 0 x315) (= x102 (x1189 1461501637330902918203684832716283019655932542975 x969)) (= (x1571 x222) x913) (= x1870 (x1811 (+ x952 4))) (< 0 x1707) (= (x970 x1113) x173) (= (= x571 x913) x1440))) (and (=> (and (= (= x913 x113) x1160) (not x1440)) (and (=> (and (and (< 0 x1895) (= x492 x102) (= x645 (or (and (< x1726 64) (= true (<= x1726 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1726))) (= 2835717307 x869) (not (> 2678909723 x869)) (= (x421 (x807 x113)) x1895) (not (> 4 x593)) (= x1966 x173) (< x869 3065339685) (not (= x869 2678909723)) (= (x1786 (- x593 4)) x1726) (= 68 x593) (not (< x869 2376452955)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x290)) x1160) (and (=> (and (not x645) (and (= x492 x1810) (= x923 (= x492 x102)))) (and (=> (not x923) x1806) (=> (and x923 (and (= (x557 x1860) x1776) (= x259 (< x1776 x173)) (>= x1776 0) (= (x1203 (x807 x2026) (x1031 2) 0) x1860) (<= x1776 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1966 x272))) (and (=> x259 x1806) (=> (and (not x259) (= (< x1776 x1966) x1242)) (and (=> x1242 x1806) (=> (and (and (= x785 (x1203 (x807 x2026) (x1031 2) 0)) (= x1632 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1966))) (= (x1786 (- x1776 x1966)) x1904) (<= x1714 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1695 x1693) x1714) (>= x1714 0) (= x344 (> x1714 x1632)) (= x1693 (x1203 (x807 x492) (x1031 2) 0))) (not x1242)) (and (=> (and (and (= (< x1791 x1714) x64) (= (x1811 (+ x1714 x1966)) x1791)) (not x344)) (and (=> x64 x1806) (=> (and (not x64) (and (= x1818 1) (= x1828 x881) (= x1536 32))) x980))) (=> x344 x1806))))))))) (=> x645 x1806))) (=> (and (= x1897 (= x310 x913)) (not x1160)) (and (=> (and (= (= x1269 x913) x1472) (not x1897)) (and (=> (and (not x1472) (= x1125 (= x1295 x913))) (and (=> (and (= x2043 (= x913 x1674)) (not x1125)) (and (=> (and (and (and x1358 (and (= 68 x1782) (= x597 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1592 2835717307) (not (= 1889567281 x1592)) (< 0 x1658) (= x173 x1779) (not (= x1592 826074471)) (not (> 826074471 x1592)) (not (= x1592 2376452955)) (not (> 4 x1782)) (= x743 (x1786 (- x1782 4))) (= (x421 (x807 x352)) x1658) (= x102 x721) (= x834 (or (> x743 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x743 64) (= true (<= x743 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= x1592 2514000705)))) (= x1358 (= x913 x352))) (not x2043)) (and (=> (and (not x834) (and (= (= x102 x721) x728) (= x1666 x721))) (and (=> (not x728) x497) (=> (and (and (>= x1892 0) (<= x1892 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1298 (x1203 (x807 x2026) (x1031 2) 0)) (= x1773 x1779) (= (x440 x1298) x1892) (= (> x173 x1892) x1198)) x728) (and (=> x1198 x497) (=> (and (= x1019 (< x1892 x1779)) (not x1198)) (and (=> x1019 x497) (=> (and (and (<= x1044 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1779)) x461) (<= 0 x1044) (= (< x461 x1044) x1075) (= x1219 (x1203 (x807 x721) (x1031 2) 0)) (= x1044 (x882 x1219)) (= x56 (x1786 (- x1892 x1779))) (= (x1203 (x807 x2026) (x1031 2) 0) x1678)) (not x1019)) (and (=> x1075 x497) (=> (and (and (= x1611 (< x568 x1044)) (= x568 (x1811 (+ x1779 x1044)))) (not x1075)) (and (=> (and (not x1611) (and (= 1 x1932) (= x415 x279) (= x1757 32))) x830) (=> x1611 x497))))))))))) (=> x834 x497))) (=> (and (and (= x173 x767) (not (= x1071 1889567281)) (= x102 x511) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x720) (not (= x1071 2514000705)) (not (> 4 x1718)) (not (= 826074471 x1071)) (= (x421 (x807 x1674)) x818) (< 0 x818) (not (= 2376452955 x1071)) (= x1071 2835717307) (= (x1786 (- x1718 4)) x1847) (= x1059 (or (and (= true (<= x1847 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1847)) (> x1847 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 68 x1718) (not (< x1071 826074471))) x2043) (and (=> (and (and (= (= x102 x511) x386) (= x511 x1468)) (not x1059)) (and (=> (not x386) x1930) (=> (and x386 (and (>= x823 0) (= (x674 x681) x823) (= (x1203 (x807 x2026) (x1031 2) 0) x681) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x823) (= x166 x767) (= x894 (> x173 x823)))) (and (=> x894 x1930) (=> (and (not x894) (= x1551 (> x767 x823))) (and (=> x1551 x1930) (=> (and (not x1551) (and (= (< x994 x769) x1719) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x769) (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x767)) x994) (= (x1203 (x807 x511) (x1031 2) 0) x1276) (= (x1203 (x807 x2026) (x1031 2) 0) x538) (= (x947 x1276) x769) (= x1409 (x1786 (- x823 x767))) (<= 0 x769))) (and (=> x1719 x1930) (=> (and (not x1719) (and (= x1945 (x1811 (+ x767 x769))) (= (< x1945 x769) x336))) (and (=> (and (and (= x1262 x1636) (= 32 x158) (= 1 x1501)) (not x336)) x363) (=> x336 x1930))))))))))) (=> x1059 x1930))))) (=> (and x1125 (and (= x1206 68) (= (or (and (= true (<= x887 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x887 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x887)) x51) (= x1452 2835717307) (not (= x1452 2376452955)) (= x1560 x173) (not (= x1452 1889567281)) (= x1957 (x421 (x807 x1295))) (not (> 4 x1206)) (= x887 (x1786 (- x1206 4))) (> x1957 0) (not (= x1452 1086394137)) (not (< x1452 1086394137)) (= x102 x688) (not (= x1452 2514000705)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x326))) (and (=> x51 x971) (=> (and (not x51) (and (= x1324 x688) (= (= x688 x102) x856))) (and (=> (and x856 (and (<= x1541 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x584 (x1203 (x807 x2026) (x1031 2) 0)) (>= x1541 0) (= (x1506 x584) x1541) (= x1223 (< x1541 x173)) (= x1560 x125))) (and (=> x1223 x971) (=> (and (not x1223) (= x1583 (< x1541 x1560))) (and (=> (and (and (<= x379 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1560)) x1972) (= x379 (x888 x1009)) (= (< x1972 x379) x1158) (= x1426 (x1203 (x807 x2026) (x1031 2) 0)) (= (x1203 (x807 x688) (x1031 2) 0) x1009) (= (x1786 (- x1541 x1560)) x941) (>= x379 0)) (not x1583)) (and (=> x1158 x971) (=> (and (and (= (x1811 (+ x379 x1560)) x1548) (= x1085 (< x1548 x379))) (not x1158)) (and (=> x1085 x971) (=> (and (not x1085) (and (= 32 x1629) (= x251 x1170) (= 1 x3))) x1433))))) (=> x1583 x971))))) (=> (not x856) x971))))))) (=> (and x1472 (and (not (< x1387 4)) (not (= 2376452955 x1549)) (= x173 x248) (not (= x1549 2514000705)) (= (x1786 (- x1387 4)) x1616) (not (= x1549 1889567281)) (= x1579 x102) (< 0 x1499) (= x1549 2835717307) (= x1499 (x421 (x807 x1269))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1835) (= 68 x1387) (not (= 826074471 x1549)) (not (> 826074471 x1549)) (= x1079 (or (and (= true (<= x1616 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1616)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1616))))) (and (=> (and (and (= x1579 x189) (= x866 (= x102 x1579))) (not x1079)) (and (=> (and (and (= (x791 x1500) x2028) (= (< x2028 x173) x599) (>= x2028 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2028) (= x248 x1213) (= x1500 (x1203 (x807 x2026) (x1031 2) 0))) x866) (and (=> (and (= x609 (< x2028 x248)) (not x599)) (and (=> x609 x232) (=> (and (and (= (x821 x919) x24) (= (x1203 (x807 x2026) (x1031 2) 0) x2041) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x24) (>= x24 0) (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x248)) x1447) (= x1699 (< x1447 x24)) (= (x1786 (- x2028 x248)) x403) (= x919 (x1203 (x807 x1579) (x1031 2) 0))) (not x609)) (and (=> (and (and (= x520 (< x460 x24)) (= (x1811 (+ x248 x24)) x460)) (not x1699)) (and (=> x520 x232) (=> (and (not x520) (and (= x1232 x1540) (= 1 x1101) (= 32 x1867))) x1569))) (=> x1699 x232))))) (=> x599 x232))) (=> (not x866) x232))) (=> x1079 x232))))) (=> (and (and (< 0 x1285) (= (x421 (x807 x310)) x1285) (not (= 1889567281 x105)) (= x102 x266) (not (= x105 2514000705)) (not (= x105 2376452955)) (= x105 2835717307) (= (or (> x1645 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1645 64) (= (<= x1645 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x529) (= x1645 (x1786 (- x2036 4))) (= x2036 68) (= x173 x924) (= x438 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 826074471 x105)) (not (> 4 x2036)) (not (= 826074471 x105))) x1897) (and (=> (and (not x529) (and (= x266 x1869) (= (= x102 x266) x474))) (and (=> (and (and (= x889 (< x1008 x173)) (= (x1653 x873) x1008) (<= x1008 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1008 0) (= (x1203 (x807 x2026) (x1031 2) 0) x873) (= x924 x1001)) x474) (and (=> (and (not x889) (= x615 (> x924 x1008))) (and (=> x615 x1454) (=> (and (and (= (x1203 (x807 x2026) (x1031 2) 0) x1953) (<= x678 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x678 0) (= x1792 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x924))) (= (x488 x1778) x678) (= x1778 (x1203 (x807 x266) (x1031 2) 0)) (= (x1786 (- x1008 x924)) x67) (= x1036 (< x1792 x678))) (not x615)) (and (=> (and (not x1036) (and (= x1431 (x1811 (+ x924 x678))) (= x322 (> x678 x1431)))) (and (=> (and (not x322) (and (= x1754 x33) (= x1821 32) (= x1784 1))) x1656) (=> x322 x1454))) (=> x1036 x1454))))) (=> x889 x1454))) (=> (not x474) x1454))) (=> x529 x1454))))))) (=> (and (and (> x634 0) (= x1734 x102) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1913) (= x857 2835717307) (= x657 x173) (= (x421 (x807 x571)) x634) (= x1348 (or (> x1704 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1704) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1704) true)))) (= x197 68) (= (x1786 (- x197 4)) x1704) (not (> 2678909723 x857)) (< x857 3065339685) (not (> 4 x197)) (not (= x857 2678909723)) (not (< x857 2376452955))) x1440) (and (=> (and (not x1348) (and (= (= x102 x1734) x1550) (= x1971 x1734))) (and (=> (and (and (= x1102 (< x1244 x173)) (>= x1244 0) (<= x1244 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x657 x1280) (= (x989 x57) x1244) (= (x1203 (x807 x2026) (x1031 2) 0) x57)) x1550) (and (=> x1102 x81) (=> (and (not x1102) (= (< x1244 x657) x1873)) (and (=> (and (not x1873) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1098) (= x2010 (x1786 (- x1244 x657))) (<= 0 x1098) (= x1412 (> x1098 x317)) (= x1640 (x1203 (x807 x2026) (x1031 2) 0)) (= x362 (x1203 (x807 x1734) (x1031 2) 0)) (= x1098 (x1205 x362)) (= x317 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x657))))) (and (=> (and (not x1412) (and (= (> x1098 x1074) x2002) (= x1074 (x1811 (+ x657 x1098))))) (and (=> (and (and (= x23 x228) (= 1 x1163) (= x486 32)) (not x2002)) x202) (=> x2002 x81))) (=> x1412 x81))) (=> x1873 x81))))) (=> (not x1550) x81))) (=> x1348 x81))))) (=> (not x705) x552))) (=> (not x1753) x579)))))
(assert (x1423 x283))
(assert (x1423 x1418))
(assert (= x1014 (and (not x1358) x1771)))
(assert (= x1841 (and x984 (not x1580))))
(assert (x1423 x1703))
(assert (x1423 x1140))
(assert (= x1741 (x1482 (x807 x1741))))
(assert (= x1720 (and x186 (not x1524))))
(assert (= (x1482 (x807 x1139)) x1139))
(assert (x1423 x1340))
(assert (= x822 (=> (and (= (x1811 (+ 32 x801)) x1141) (= (x537 x62) x703) (= 32 x1309) (= (x1811 (+ x1529 32)) x801) (= x1306 (< 0 x703))) (and (=> (and (and (= x1141 x714) (= 0 x797) (= x893 x930)) (not x1306)) x692) (=> (and x1306 (and (= (< 1 x703) x1417) (= (x2011 x893) x87) (= x1546 (x1811 (+ x1141 32))) (= (x1811 (+ x893 32)) x1887))) (and (=> (and (and (= x714 x1546) (= x797 1) (= x930 x1887)) (not x1417)) x692) (=> (and (and (= x58 (x2011 x1887)) (= (x1811 (+ x1887 32)) x117) (= x346 (> x703 2)) (= x1185 (x1811 (+ 32 x1546)))) x1417) (and (=> (and (not x346) (and (= 2 x797) (= x714 x1185) (= x930 x117))) x692) (=> (and x346 (and (= x1386 (x2011 x117)) (= x523 (< 3 x703)) (= (x1811 (+ x117 32)) x548) (= (x1811 (+ 32 x1185)) x1067))) (and (=> x523 x1401) (=> (and (and (= x930 x548) (= 3 x797) (= x714 x1067)) (not x523)) x692)))))))))))
(assert (= (and x1210 (not x1719)) x231))
(assert (x1423 x1356))
(assert (= (and x89 (not x1212)) x776))
(assert (= (and x709 x2043) x1173))
(assert (x1423 x452))
(assert (= (or x441 x562) x1568))
(assert (x1423 x868))
(assert (x75 x161))
(assert (= (and x1907 (not x346)) x1128))
(assert (= x518 (and x796 (not x177))))
(assert (x1423 x436))
(assert (= (x1482 (x807 x1734)) x1734))
(assert (=> (<= x1295 10000) (= (x1031 x1295) (x807 x1295))))
(assert (= x104 (and x846 (not x338))))
(assert (x1423 x182))
(assert (= (and x212 x694) x332))
(assert (= x1563 (and x670 (not x607))))
(assert (x1423 x1887))
(assert (x1423 x1060))
(assert (x1423 x1714))
(assert (x1423 x1331))
(assert (= (and (not x1591) x835) x1891))
(assert (=> (<= x1943 10000) (= (x807 x1943) (x1031 x1943))))
(assert (x1423 x125))
(assert (= (or (and x174 (not x454)) x1042) x340))
(assert (= (and x412 x612) x1711))
(assert (x1423 x734))
(assert (= (x807 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1031 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1423 x1974))
(assert (x1423 x781))
(assert (x1423 x1272))
(assert (x1423 x214))
(assert (x75 x1052))
(assert (x1423 x840))
(assert (x1423 x1516))
(assert (=> (>= 10000 x149) (= (x1031 x149) (x807 x149))))
(assert (= x1576 (and (not x787) x1181)))
(assert (x1423 x101))
(assert (x1423 x1259))
(assert (x1423 x77))
(assert (x1423 x1898))
(assert (= (=> (and (or (not x76) x76) (= (= 0 x2001) x76)) x369) x1164))
(assert (x75 x452))
(assert (= x1838 (and x2053 x1030)))
(assert (x1423 x1192))
(assert (= x1459 (=> (and (= x2001 x1252) (= x46 x1488)) x1164)))
(assert (= x1633 (or x514 x397)))
(assert (x1423 x273))
(assert (x1423 x526))
(assert (x1423 x302))
(assert (x1423 x778))
(assert (x162 x1024))
(assert (x1423 x780))
(assert (=> (>= 10000 x113) (= (x807 x113) (x1031 x113))))
(assert (= (and (not x520) x1889) x1795))
(assert (x1423 x1347))
(assert (x1423 x933))
(assert (= x466 (and x1337 x1550)))
(assert (= x464 (and x1790 x22)))
(assert (x75 x1741))
(assert (= x2007 (and x2049 (not x1292))))
(assert (x1423 x1858))
(assert (= (and (not x1705) x629) x235))
(assert (x1423 x1732))
(assert (x1423 x1396))
(assert (= (x1482 (x807 x1758)) x1758))
(assert (x1423 x857))
(assert (x1423 x678))
(assert (x1423 x1773))
(assert (= (=> (and (= x549 x448) (= 0 x70)) x1191) x34))
(assert (x75 x511))
(assert (x1423 x1483))
(assert (x75 x1734))
(assert (= (x807 2514000705) (x1031 2514000705)))
(assert (x1423 x1574))
(assert (x1423 x23))
(assert (x1423 x446))
(assert (x1423 x248))
(assert (x962 x1347))
(assert (x1423 x876))
(assert (x1423 x2))
(assert (= (and (not x14) x1647) x1411))
(assert (= x814 (and x1596 x1896)))
(assert (x1423 x260))
(assert (= x1211 (and x185 x1954)))
(assert (=> (<= x2022 10000) (= (x807 x2022) (x1031 x2022))))
(assert (= x1862 (and x699 (not x10))))
(assert (= x366 (and x1927 (not x926))))
(assert (=> (<= x1394 10000) (= (x1031 x1394) (x807 x1394))))
(assert (x1423 x358))
(assert (= x1999 (=> (and (or x454 (not x454)) (= (= x1748 0) x454)) x759)))
(assert (x1423 x1770))
(assert (= x1805 (=> (and (= (= x77 0) x1248) (or x1248 (not x1248))) x646)))
(assert (= (x1482 (x1031 61715998356568858511115630290676146828977781706927134410412890814919959642112)) 61715998356568858511115630290676146828977781706927134410412890814919959642112))
(assert (x1423 x1784))
(assert (= (and x623 x2055) x269))
(assert (x1423 x994))
(assert (= x795 (and x1117 (not x982))))
(assert (x1423 x1821))
(assert (= (and x605 (not x172)) x1686))
(assert (= x976 (and x1942 x1833)))
(assert (= x145 (and x234 (not x1669))))
(assert (=> (>= 10000 x1734) (= (x807 x1734) (x1031 x1734))))
(assert (x1423 x820))
(assert (x1423 x117))
(assert (x1423 x15))
(assert (x1423 x689))
(assert (x1423 x1269))
(assert (x1423 x1135))
(assert (x1423 x171))
(assert (x1423 x1273))
(assert (= (x1482 (x1031 3645313523)) 3645313523))
(assert (= x1656 (=> (and (= x1784 x1748) (= x1821 x840)) x1999)))
(assert (= (and (not x299) x995) x462))
(assert (= (and (not x1736) x606) x476))
(assert (= (and (not x1933) x776) x479))
(assert (x1423 x1758))
(assert (=> (>= 10000 x1758) (= (x807 x1758) (x1031 x1758))))
(assert (x1423 x427))
(assert (= x1917 (and x462 (not x442))))
(assert (x1423 x769))
(assert (x1423 x991))
(assert (= x1346 (and x97 (not x38))))
(assert (x1894 x1637))
(assert (x1423 x642))
(assert (x1423 x403))
(assert (x1423 x1386))
(assert (= x861 (and x223 x1151)))
(assert (= x397 (and x340 x126)))
(assert (x1423 x2005))
(assert (x1423 x1206))
(assert (x1423 x236))
(assert (x1423 x499))
(assert (x1423 x1361))
(assert (= x504 (x1482 (x807 x504))))
(assert (x1423 x1468))
(assert (= true x404))
(assert (= (=> (and (= x1366 x46) (= x2001 x1515)) x1164) x1317))
(assert (x1423 x1324))
(assert (x1423 x252))
(assert (x1423 x1481))
(assert (= (and x963 x715) x66))
(assert (x1423 x1505))
(assert (= 2376452955 (x1482 (x1031 2376452955))))
(assert (= (or x1371 x1587 x641 x738 x68 x1509) x760))
(assert (= x1985 (and x918 x1558)))
(assert (= x531 (and x653 (not x1230))))
(assert (= x1253 (and x1743 (not x399))))
(assert (x1423 x482))
(assert (x1423 x425))
(assert (= 0 (x903 x1179)))
(assert (x1423 x811))
(assert (= x1567 (and x1767 x1750)))
(assert (x1423 x783))
(assert (x1423 x862))
(assert (= x1654 (x1482 (x807 x1654))))
(assert (x1423 x907))
(assert (x1423 x1875))
(assert (= x1820 (and x355 x235)))
(assert (= x1450 (and x986 x1796)))
(assert (x1423 x1799))
(assert (x1423 x945))
(assert (= x497 (=> (and (= x1932 0) (= x749 x1757)) x830)))
(assert (x1423 x395))
(assert (x1423 x1053))
(assert (= (x1482 (x807 x902)) x902))
(assert (= x1797 (=> (and (= x1197 x77) (= x1272 x867)) x1805)))
(assert (=> (>= 10000 x1145) (= (x1031 x1145) (x807 x1145))))
(assert (= (and x1304 x1349) x304))
(assert (x1423 x1663))
(assert (=> (>= 10000 x766) (= (x807 x766) (x1031 x766))))
(assert (= (and x1322 (not x631)) x208))
(assert (= x1266 (and x626 (not x615))))
(assert (= x1542 (and x196 (not x1763))))
(assert (x1423 x1003))
(assert (x75 x271))
(assert (x1423 x1616))
(assert (= (and (not x246) x1660) x708))
(assert (= x333 (x1482 (x807 x333))))
(assert (x1423 x1153))
(assert (= (and x1236 x518) x323))
(assert (x1423 x325))
(assert (= (and x712 (not x1412)) x1735))
(assert (x1423 x1265))
(assert (x1423 x461))
(assert (x1423 x87))
(assert (= x1442 (and x1041 x356)))
(assert (x1423 x916))
(assert (x1423 x843))
(assert (= x1080 (or x1838 x301 x1057 x69 x277 x892)))
(assert (= (and (not x45) x66) x186))
(assert (x1423 x789))
(assert (= x1005 (and x195 (not x650))))
(assert (= (x88 (+ x1529 (- x1179 160))) 0))
(assert (=> (<= x908 10000) (= (x807 x908) (x1031 x908))))
(assert (= x1196 (and x610 x1065)))
(assert (x1423 x1363))
(assert (= (and x1181 x787) x1045))
(assert (= x709 (and (not x1125) x828)))
(assert (x1423 x1601))
(assert (x1423 x632))
(assert (= (and (not x974) x1231) x680))
(assert (x1423 x1486))
(assert (x1423 x823))
(assert (= (x1482 (x72 x1946 1)) (+ 1 (x1482 x1946))))
(assert (= (and x979 (not x1819)) x993))
(assert (x1423 x310))
(assert (= x78 (and x1508 x420)))
(assert (x1423 x2031))
(assert (x1423 x1645))
(assert (x1423 x1920))
(assert (x1423 x173))
(assert (x1423 x1293))
(assert (= x908 (x1482 (x807 x908))))
(assert (x1423 x1488))
(assert (= (and (not x18) x295) x405))
(assert (x75 x409))
(assert (x1423 x135))
(assert (x1423 x988))
(assert (= x1473 (or x1939 x365)))
(assert (x162 x745))
(assert (x75 x1579))
(assert (x1423 x1852))
(assert (= x1123 (and x650 x195)))
(assert (x1423 x1145))
(assert (x1423 x261))
(assert (= (and x660 x484) x27))
(assert (x1423 x93))
(assert (x1423 x457))
(assert (= x280 (and x1278 x307)))
(assert (x1423 x743))
(assert (= x685 (and x1432 (not x529))))
(assert (x1423 x1681))
(assert (= (and x1096 (not x1969)) x1600))
(assert (x1423 x314))
(assert (x1423 x406))
(assert (= x1713 (and (not x1158) x639)))
(assert (= (x1482 (x1031 893399075)) 893399075))
(assert (x1423 x1560))
(assert (= x1229 (and x1677 x304)))
(assert (= (and x1045 (not x975)) x95))
(assert (= (or x960 x473) x1490))
(assert (= x1479 (and (not x1072) x661)))
(assert (x1423 x193))
(assert (= (=> (and (= 0 x1197) (= x1272 x505)) x1797) x8))
(assert (= x852 (and x40 (not x1242))))
(assert (= x1470 (and (not x793) x912)))
(assert (x1423 x1369))
(assert (x1423 x37))
(assert (= x670 (and (not x1803) x1253)))
(assert (= x52 (and x1893 x190)))
(assert (x1423 x564))
(assert (x1423 x1487))
(assert (x1423 x1737))
(assert (x1423 x1280))
(assert (x1423 x648))
(assert (x1423 x98))
(assert (= x1318 (and x533 x938)))
(assert (= x151 (and x1958 x895)))
(assert (= (x1031 1762712782) (x807 1762712782)))
(assert (x75 x1758))
(assert (= (and x635 (not x581)) x1030))
(assert (= (and x402 x1075) x1682))
(assert (= (and (not x1430) x603) x1605))
(assert (x1423 x181))
(assert (= (and x1064 x508) x1371))
(assert (= x441 (or x1146 x774 x154 x1922 x1973 x1985)))
(assert (= x596 (x1482 (x807 x596))))
(assert (x1423 x816))
(assert (x1423 x838))
(assert (x1423 x1832))
(assert (= (and (not x659) x308) x1885))
(assert (=> (>= 10000 x1712) (= (x1031 x1712) (x807 x1712))))
(assert (x1423 x913))
(assert (x1423 x409))
(assert (x1423 x1106))
(assert (x1423 x318))
(assert (= x473 (and x1256 (not x1518))))
(assert (= (x1482 (x807 x1667)) x1667))
(assert (= (x1482 (x807 x1943)) x1943))
(assert (x1423 x741))
(assert (= x552 (=> (and (= (not (< 1 x1149)) x884) (= (x1655 x1625) x1149)) (and x579 x884))))
(assert (x1423 x1966))
(assert (= (and x1512 x1848) x1377))
(assert (x1423 x548))
(assert (= (or x25 x644 x1128 x99 x751) x2024))
(assert (= (and (not x513) x819) x1903))
(assert (x1423 x56))
(assert (x1423 x1976))
(assert (= x1692 (and x1613 x531)))
(assert (= x394 (and x653 x1230)))
(assert (= x1151 (and x1467 (not x560))))
(assert (x1894 x302))
(assert (= (x807 3714247998) (x1031 3714247998)))
(assert (x1423 x752))
(assert (x1423 x1501))
(assert (= x17 (and (not x1893) x190)))
(assert (x1423 x1792))
(assert (x75 x571))
(assert (x1423 x1519))
(assert (x1423 x703))
(assert (x1423 x1101))
(assert (x1423 x1406))
(assert (= x1990 (=> (and (= 0 x1227) (= x505 x1595)) x1617)))
(assert (x1423 x1047))
(assert (= (and x1161 x1863) x1609))
(assert (= (and x145 x1588) x2008))
(assert (= 1173398607 (x1482 (x1031 1173398607))))
(assert (= (and x829 x522) x130))
(assert (= x932 (and (not x949) x374)))
(assert (= (=> (and (= x2001 x1544) (= x46 x1619)) x1164) x754))
(assert (x1423 x952))
(assert (=> (>= 10000 x183) (= (x807 x183) (x1031 x183))))
(assert (x1423 x925))
(assert (= x912 (and x1591 x835)))
(assert (x75 x992))
(assert (x1423 x1874))
(assert (= (and x1873 x237) x392))
(assert (=> (<= x409 10000) (= (x1031 x409) (x807 x409))))
(assert (x1423 x590))
(assert (= (and x53 (not x1362)) x1621))
(assert (x1423 x1536))
(assert (x1423 x194))
(assert (x1423 x594))
(assert (x1423 x1780))
(assert (= 0 (x903 160)))
(assert (x1423 x222))
(assert (x1423 x1572))
(assert (= x1162 (or x493 x1470 x1809 x1462 x1379 x263 x213 x1172 x976 x1095 x719 x413 x1216 x366 x1069 x1083 x1498 x1600 x993 x1891 x788 x573 x1086 x1171 x1959)))
(assert (x1423 x927))
(assert (= (x1482 (x1031 2569309863)) 2569309863))
(assert (x1423 x2014))
(assert (= x522 (and (not x986) x1796)))
(assert (x1423 x875))
(assert (x962 x1725))
(assert (= x89 (and (not x243) x1851)))
(assert (x1423 x2013))
(assert (= x1689 (or (and (not x1248) x1207) x842)))
(assert (= (x807 2569309863) (x1031 2569309863)))
(assert (= (and x588 x401) x1217))
(assert (= (and x225 x207) x1989))
(assert (x1423 x2048))
(assert (= (and (not x1767) x1750) x2054))
(assert (x1423 x877))
(assert (x1423 x1263))
(assert (x1423 x967))
(assert (= x1090 (and x208 x620)))
(assert (= (and x852 (not x344)) x1908))
(assert (x1423 x1179))
(assert (= (x1482 (x1031 1083311676)) 1083311676))
(assert (x1423 x1547))
(assert (= x452 (x1482 (x807 x452))))
(assert (= (and x522 (not x829)) x1228))
(assert (= (=> (and (= 0 x1854) (= x505 x482)) x920) x2004))
(assert (x1423 x1918))
(assert (x1423 x1544))
(assert (x1423 x753))
(assert (x1423 x1579))
(assert (x1423 x1764))
(assert (=> (<= x1139 10000) (= (x807 x1139) (x1031 x1139))))
(assert (x1423 x1039))
(assert (x1423 x908))
(assert (= x661 (and x476 x128)))
(assert (= (x1482 (x807 x1145)) x1145))
(assert (x1423 x1232))
(assert (x1423 x577))
(assert (x1423 x854))
(assert (= x771 (or x104 x1814)))
(assert (= (and x332 x203) x444))
(assert (= x1057 (and x695 x296)))
(assert (=> (>= 10000 x1832) (= (x807 x1832) (x1031 x1832))))
(assert (= x2049 (or (and x1493 (not x76)) x30)))
(assert (= x266 (x1482 (x807 x266))))
(assert (x1423 x818))
(assert (= x724 (and x85 x1697)))
(assert (x1423 x1593))
(assert (x1423 x375))
(assert (x1423 x16))
(assert (= (and x1117 x982) x372))
(assert (= (or x911 x1365) x981))
(assert (x1423 x1055))
(assert (= x487 (and x726 (not x84))))
(assert (= (x1482 (x1031 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (and (not x2006) x1271) x1639))
(assert (x1423 x867))
(assert (x1423 x1944))
(assert (x1423 x505))
(assert (x1423 x1597))
(assert (= (and x1377 (not x1489)) x1610))
(assert (x1423 x969))
(assert (x1423 x1109))
(assert (x1423 x1048))
(assert (x1423 x131))
(assert (x1423 x1319))
(assert (x1423 x547))
(assert (x1423 x1864))
(assert (= (and x639 x1158) x733))
(assert (x1423 x1546))
(assert (x75 x1832))
(assert (x1423 x293))
(assert (= x1429 (and x40 x1242)))
(assert (= x1028 (=> (and (= x1603 x1619) (= 0 x1544)) x754)))
(assert (x1423 x1943))
(assert (=> (>= 10000 x206) (= (x807 x206) (x1031 x206))))
(assert (=> (<= x1674 10000) (= (x1031 x1674) (x807 x1674))))
(assert (= x320 (and (not x1843) x95)))
(assert (= x1984 (=> (and (= x1747 (x1802 (x1031 1) 0)) (<= 0 x618) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x618) (= x618 (x985 x671)) (= (not (< x1715 x1804)) x624) (= x1715 (x1811 (+ x555 32))) (= (div (mod (- (x1482 x671) (x1482 x1747)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) x1987)) (and x624 x387))))
(assert (x1423 x1727))
(assert (x1423 x1023))
(assert (= x638 (and x209 x1576)))
(assert (x1423 x1652))
(assert (= x188 (and (not x447) x724)))
(assert (= (and x80 (not x1416)) x1660))
(assert (= x880 (and x949 x374)))
(assert (x1894 x1741))
(assert (x1423 x1619))
(assert (= x738 (and x1392 x188)))
(assert (=> (<= x504 10000) (= (x1031 x504) (x807 x504))))
(assert (= x264 (and (not x1611) x2003)))
(assert (= (and x1783 (not x523)) x644))
(assert (= x571 (x1482 (x807 x571))))
(assert (= (x1482 (x807 x564)) x564))
(assert (= (and (not x1167) x668) x606))
(assert (x1423 x1476))
(assert (x1423 x309))
(assert (x1423 x1746))
(assert (= (or (and x808 (not x866)) (and x1079 x342) x1345 x1709 (and x1871 x599) (and x1889 x520)) x1277))
(assert (= x1322 (and x169 (not x730))))
(assert (= (and x160 x224) x152))
(assert (=> (>= 10000 x2038) (= (x807 x2038) (x1031 x2038))))
(assert (x1423 x1615))
(assert (= (and (not x705) x717) x1461))
(assert (= x1498 (and (not x455) x133)))
(assert (= (x1482 (x807 x469)) x469))
(assert (= (x1482 (x807 x206)) x206))
(assert (x1423 x2028))
(assert (= (x1031 3703996404) (x807 3703996404)))
(assert (= x149 (x1482 (x807 x149))))
(assert (x1423 x773))
(assert (x1423 x1227))
(assert (= (x1482 (x807 x252)) x252))
(assert (x1423 x1962))
(assert (x1423 x326))
(assert (= (x1482 (x807 x492)) x492))
(assert (x1423 x1861))
(assert (= (and x922 (not x1561)) x144))
(assert (x1423 x996))
(assert (=> (<= x1746 10000) (= (x1031 x1746) (x807 x1746))))
(assert (x1423 x539))
(assert (= (and x1647 x14) x374))
(assert (= x1083 (and (not x725) x443)))
(assert (= (or x546 x1824) x92))
(assert (= (or (and (not x185) x1954) x1211) x1743))
(assert (= (and (not x1015) x1089) x190))
(assert (= (x1482 (x1031 1889567281)) 1889567281))
(assert (= x1216 (and (not x420) x1508)))
(assert (x1423 x324))
(assert (x1423 x294))
(assert (= (and (not x1034) x1552) x1243))
(assert (x1423 x704))
(assert (= x85 (and (not x1449) x1450)))
(assert (x1423 x396))
(assert (x1423 x1157))
(assert (x1423 x494))
(assert (x1423 x541))
(assert (x1423 x2030))
(assert (x1423 x1149))
(assert (= (=> (and (= x77 x1227) (= x867 x1595)) x1805) x1617))
(assert (x1423 x527))
(assert (= (and x819 x513) x735))
(assert (= x234 (and x1843 x95)))
(assert (x1423 x511))
(assert (= (or x512 x1692 x861 x1885 x394 x280) x5))
(assert (x1423 x1715))
(assert (x75 x396))
(assert (x75 x1674))
(assert (= x1837 (and x1752 (not x894))))
(assert (x1423 x1422))
(assert (x75 x41))
(assert (= x1928 (=> (and (= x1398 x244) (= x1589 x896)) x218)))
(assert (x1423 x290))
(assert (x1423 x698))
(assert (= (and (not x588) x401) x1304))
(assert (x1423 x456))
(assert (x1423 x647))
(assert (x1423 x1909))
(assert (x1423 x1520))
(assert (= (and x404 (not x813)) x400))
(assert (x1423 x1513))
(assert (= (and x1689 (not x1608)) x1590))
(assert (x1423 x881))
(assert (= (and x1958 (not x895)) x1400))
(assert (x1423 x558))
(assert (x1423 x1913))
(assert (= x693 (or x2047 x1649)))
(assert (x1423 x67))
(assert (x1423 x1252))
(assert (= x132 (and x1270 x151)))
(assert (= (=> (and (= x354 x505) (= 0 x600)) x604) x554))
(assert (= (or x1284 x1166 x569 x1490 x1473 x63 x378) x1493))
(assert (x1423 x1850))
(assert (= 2514000705 (x1482 (x1031 2514000705))))
(assert (x1423 x904))
(assert (x1423 x1443))
(assert (= x321 (and (not x1469) x1899)))
(assert (x1423 x1671))
(assert (= x308 (and x307 (not x1278))))
(assert (x1423 x565))
(assert (= (and x1005 (not x1367)) x668))
(assert (x1423 x382))
(assert (= x402 (and (not x1019) x1789)))
(assert (x1423 x655))
(assert (x1423 x809))
(assert (x1423 x600))
(assert (= x1973 (and x2042 x305)))
(assert (x1423 x1320))
(assert (= (x903 260) 0))
(assert (= (and x477 (not x1368)) x1578))
(assert (= (x1482 (x807 x1394)) x1394))
(assert (= (and x466 (not x1102)) x237))
(assert (x1423 x2050))
(assert (= x1091 (=> (and (= x505 x1801) (= x868 0)) x1327)))
(assert (= x1064 (and x1184 (not x621))))
(assert (x1423 x1399))
(assert (= (or (and x231 x336) x485 (and x1173 x1059) (and (not x386) x168) (and x894 x1752) x1721) x1187))
(assert (x1423 x1139))
(assert (x1423 x149))
(assert (x75 x1293))
(assert (= x1401 (=> (and (= x2031 (x1811 (+ 32 x1067))) (= x44 (x1811 (+ 32 x548))) (= (x2011 x548) x509) (= (not (> x703 4)) x226)) (and (=> (and (= 4 x797) (= x714 x2031) (= x930 x44)) x692) x226))))
(assert (= x1809 (and x2007 x334)))
(assert (x1423 x348))
(assert (= (or x722 x1411 x159 x4 x880 x814) x1649))
(assert (= (and x10 x699) x1313))
(assert (x1423 x1932))
(assert (= x1380 (and x344 x852)))
(assert (x1423 x2039))
(assert (x1423 x1451))
(assert (x1423 x1636))
(assert (= 0 (x1911 x893)))
(assert (x1423 x105))
(assert (=> (<= x1351 10000) (= (x1031 x1351) (x807 x1351))))
(assert (= x1755 (and x1382 (not x1897))))
(assert (x1423 x779))
(assert (= x113 (x1482 (x807 x113))))
(assert (= (x807 1195755010) (x1031 1195755010)))
(assert (x1423 x567))
(assert (x75 x596))
(assert (x1423 x1264))
(assert (x1423 x1754))
(assert (= x1638 (and x11 x1099)))
(assert (x1423 x253))
(assert (= x53 (and x1542 (not x1305))))
(assert (x1423 x1794))
(assert (= 0 (x88 (+ 32 x1529))))
(assert (= x846 (and (not x412) x612)))
(assert (x1423 x391))
(assert (x1423 x251))
(assert (= (=> (and (= x549 x1663) (= x558 0)) x530) x200))
(assert (x1423 x1710))
(assert (x1423 x1676))
(assert (= (and x531 (not x1613)) x677))
(assert (= x948 (and x954 (not x1823))))
(assert (= (and x1528 x850) x154))
(assert (= (or x1765 x1682 (and x2003 x1611) (and x1198 x1785) (and (not x728) x1343) (and x1914 x834)) x1115))
(assert (x1423 x747))
(assert (x1423 x1741))
(assert (x1423 x1071))
(assert (= x1770 (x1482 (x807 x1770))))
(assert (= (and x1590 (not x950)) x1927))
(assert (x1423 x1315))
(assert (= x99 (and x805 (not x1417))))
(assert (= (x1031 18446744073709551615) (x807 18446744073709551615)))
(assert (x162 x564))
(assert (x1423 x1163))
(assert (= x1307 (and x1231 x974)))
(assert (= (and x1578 x2052) x1528))
(assert (= x542 (and x685 x474)))
(assert (= (and x1142 x1670) x1766))
(assert (x1423 x158))
(assert (= (or x27 x227 x1844 x347 x267 x886) x1420))
(assert (x1423 x1586))
(assert (x1423 x1494))
(assert (= (=> (and (= (x727 x1582) x2005) (= x876 (x1811 (+ x1582 32))) (= x851 (not (> x90 x876)))) (and x851 x1849)) x1316))
(assert (= (and (not x803) x1123) x817))
(assert (x1423 x1532))
(assert (= x310 (x1482 (x807 x310))))
(assert (x1423 x1387))
(assert (x1423 x465))
(assert (= (and x208 (not x620)) x1161))
(assert (= (and x45 x66) x1624))
(assert (= (x1482 (x1031 1195755010)) 1195755010))
(assert (= x43 (and x1829 (not x802))))
(assert (= (and (not x746) x1090) x491))
(assert (= 2289173607 (x1482 (x1031 2289173607))))
(assert (= x603 (and x1183 (not x1696))))
(assert (x1423 x1074))
(assert (= x562 (and (not x305) x2042)))
(assert (= (=> (and (or x185 (not x185)) (= (= 0 x896) x185)) x1986) x218))
(assert (= x422 (and x995 x299)))
(assert (=> (<= x310 10000) (= (x807 x310) (x1031 x310))))
(assert (x1423 x571))
(assert (x1423 x1892))
(assert (= x267 (and x1926 x1841)))
(assert (x75 x333))
(assert (= x86 (and x1469 x1899)))
(assert (= (or x792 x1006 x1458 x521 x940 x422) x424))
(assert (= (or x1257 x175) x1478))
(assert (= x4 (and x932 x388)))
(assert (= x992 (x1482 (x807 x992))))
(assert (= (and x708 x1878) x1606))
(assert (= (or x264 x1115) x543))
(assert (x1423 x1945))
(assert (x1423 x1776))
(assert (= x302 (x1482 (x807 x302))))
(assert (x1423 x1213))
(assert (= (and (not x1873) x237) x712))
(assert (= (=> (and (= x1101 0) (= x749 x1867)) x1569) x232))
(assert (= (and x1833 (not x1942)) x1955))
(assert (= x1747 (x807 (x1482 x1747))))
(assert (x1423 x410))
(assert (=> (>= 10000 x16) (= (x1031 x16) (x807 x16))))
(assert (x1423 x1154))
(assert (=> (<= x452 10000) (= (x807 x452) (x1031 x452))))
(assert (= (and x1367 x1005) x1183))
(assert (x1423 x480))
(assert (= x1959 (and x1590 x950)))
(assert (x1423 x1209))
(assert (= (=> (and (= x1215 0) (= x1603 x1874)) x136) x1156))
(assert (x75 x1139))
(assert (x1423 x368))
(assert (x1423 x2038))
(assert (= (and x1000 x1440) x983))
(assert (x1423 x580))
(assert (= (=> (and (= 0 x1035) (= x101 x549)) x1376) x2000))
(assert (x162 x1347))
(assert (x1423 x1302))
(assert (= (and x367 x1180) x1896))
(assert (= (=> (and (= x158 x749) (= x1501 0)) x363) x1930))
(assert (x1423 x238))
(assert (= x1343 (and x1914 (not x834))))
(assert (= (or (and x259 x179) x1380 (and x1853 x645) (and (not x923) x1728) (and x1908 x64) x1429) x255))
(assert (=> (>= 10000 x492) (= (x807 x492) (x1031 x492))))
(assert (x1423 x1134))
(assert (= (and x1305 x1542) x1631))
(assert (x1423 x826))
(assert (x75 x908))
(assert (x75 x721))
(assert (x1423 x731))
(assert (= x1825 (=> (and (and (and (and (and (= x1002 x205) (not (< x906 3645313523)) (not (= 3645313523 x906)) (not (= x906 3703996404)) (>= x205 0) (<= x1858 1461501637330902918203684832716283019655932542975) (<= x205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1100 (x1203 (x807 x1858) (x1031 3) 0)) (> x427 0) (not (> 2376452955 x906)) (= x427 (x421 (x807 x113))) (>= 1461501637330902918203684832716283019655932542975 x271) (= x1858 x360) (= (x1203 (x807 x271) x1100 0) x622) (not (< x906 3065339685)) (= x1250 x141) (= x271 x996) (= x906 3714247998) (= (x428 x622) x205)) (and (and (and (<= 0 x382) (= x1483 x753) (not (> x1707 18446744073709551615)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x998) (and (= (<= x998 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x998 32)))) (not (< x371 x1671)) (not (< 18446744073709551615 x1618)) (= (x1571 x1517) x1707) (= x1520 x1915) (= x1760 x1048) (= x382 x1492) (<= x450 1461501637330902918203684832716283019655932542975) (= (> x1707 0) x813) (= x998 (x1786 (- x371 4))) (not (< x1286 893399075)) (>= x450 0) (= 1195755010 x1286) (not (< x371 4)) (= x450 x753) (not (= x1286 1083311676)) (= (x1811 (+ 4 x1944)) x1517) (<= x382 1461501637330902918203684832716283019655932542975) (= x1060 (x1811 (+ 32 x1517))) (or (and (> x371 x1418) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x371) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1418))) (and (<= x371 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1418))) (< x1286 1762712782) (<= x1794 1461501637330902918203684832716283019655932542975) (= (x421 (x807 x2026)) x594) (<= 0 x1794) (= x1671 (x1811 (+ x1060 x536))) (= x1618 x1944) (and (= (<= x371 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x371 35)) (= x1418 (x1811 (+ x1517 31))) (> x594 0) (not (= x1286 893399075)) (> 2376452955 x1286) (= (mod (* 32 x1707) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x536) (= x1520 0)) (and (not (= x1033 1889567281)) (> x446 0) (= (x1203 (x807 x1654) (x1031 3) 0) x1077) (= (x421 (x807 x1295)) x446) (not (= x1033 1086394137)) (= x1033 3714247998) (>= 1461501637330902918203684832716283019655932542975 x908) (= x996 x908) (= x1048 x855) (>= x855 0) (= (x451 x1070) x855) (= x230 x94) (not (> 1086394137 x1033)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x855) (not (= 2514000705 x1033)) (= (x1203 (x807 x908) x1077 0) x1070) (not (= x1033 2835717307)) (not (= 2376452955 x1033)) (>= 1461501637330902918203684832716283019655932542975 x1654) (= x1654 x360))) (and (> x1287 0) (not (= 2514000705 x1039)) (= (x1203 (x807 x1293) (x1031 3) 0) x1245) (<= x590 1461501637330902918203684832716283019655932542975) (= x1457 x1002) (not (= x1039 826074471)) (>= 1461501637330902918203684832716283019655932542975 x1293) (>= x1768 0) (= x1768 (x475 x129)) (= x996 x590) (= x1768 x230) (= x129 (x1203 (x807 x590) x1245 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1768) (not (= 2835717307 x1039)) (not (< x1039 826074471)) (= x1287 (x421 (x807 x1269))) (not (= x1039 1889567281)) (= x1293 x360) (not (= 2376452955 x1039)) (= 3714247998 x1039)))) (and (not (= x348 1889567281)) (>= x93 0) (not (= x348 2376452955)) (<= x1943 1461501637330902918203684832716283019655932542975) (>= x360 0) (>= 1461501637330902918203684832716283019655932542975 x360) (not (= x348 2514000705)) (<= x409 1461501637330902918203684832716283019655932542975) (= x93 x1250) (= x1554 (= x47 x1708)) (not (= 826074471 x348)) (= (or x1554 x1872) x1199) (= x996 x1943) (= x47 x459) (= x1687 (x421 (x807 x352))) (not (= x348 2835717307)) (= x1674 x1708) x1199 (<= x93 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x939 (x1203 (x807 x1943) x765 0)) (> x1687 0) (= x409 x360) (= 3714247998 x348) (= (x977 x939) x93) (not (> 826074471 x348)) (= (x1203 (x807 x409) (x1031 3) 0) x765) (>= 1461501637330902918203684832716283019655932542975 x996) (>= x996 0))) (and (= 2569309863 x2014) (= (x421 (x807 x2026)) x1251) (not (> 2376452955 x2014)) (< x2014 2952933380) (= x352 x124) (= x1627 (x1189 1461501637330902918203684832716283019655932542975 x1233)) (= x1627 x459) (not (< x2014 2569309863)) (= (= x124 x1378) x1872) (< 0 x1251) (= x1378 x1799))) (and (not (< x1615 2569309863)) (= x261 1) (<= 0 x1047) (>= x957 0) (< 0 x1295) (not (= x1295 x333)) (= x1295 x1154) (<= x1414 1461501637330902918203684832716283019655932542975) (not (= x352 x571)) (= x1058 (> (x421 (x807 x310)) 0)) (<= 0 x909) (<= 0 x1679) (>= 1461501637330902918203684832716283019655932542975 x1237) (<= x181 1461501637330902918203684832716283019655932542975) x1491 (<= x1154 1461501637330902918203684832716283019655932542975) (< 0 x1674) (>= 1461501637330902918203684832716283019655932542975 x1269) (= false x1961) (<= x1674 1461501637330902918203684832716283019655932542975) (not (= x571 x1674)) (<= 0 x1737) x100 (<= 0 x1476) (= x1414 x352) (>= 1461501637330902918203684832716283019655932542975 x877) (not (= x2026 x1363)) (not (= x1269 x571)) (= x15 (x49 (x807 x1269))) (not (= x902 x333)) (= x229 (x49 (x807 x333))) (not (= x2026 x333)) (>= 1461501637330902918203684832716283019655932542975 x1274) (<= x418 1461501637330902918203684832716283019655932542975) (= x1674 x1237) (= x1615 2569309863) (>= x877 0) (>= 1461501637330902918203684832716283019655932542975 x398) (< 0 x571) (not (= x2026 x1674)) (= (< 0 (x421 (x807 x1269))) x1491) (not (= x1674 x333)) (<= x1651 1461501637330902918203684832716283019655932542975) (not (= x1674 x1363)) (> x113 0) (= x928 (> (x421 (x807 x113)) 0)) (<= 0 x781) (not (= x571 x1295)) (<= 0 x773) (<= x1737 1461501637330902918203684832716283019655932542975) (= (< 0 (x421 (x807 x1295))) x572) (not (= x310 x113)) x1058 (= x943 (> (x421 (x807 x902)) 0)) (not (= x333 x1363)) (not (= x1363 x902)) (>= 1461501637330902918203684832716283019655932542975 x1295) (<= x781 1461501637330902918203684832716283019655932542975) (>= x418 0) (<= 0 x1702) (not (= x113 x571)) (>= x1237 0) (= (x49 (x807 x1363)) x909) (<= x1463 1461501637330902918203684832716283019655932542975) (= (x49 (x807 x310)) x790) (not (= x1674 x310)) (<= x582 1461501637330902918203684832716283019655932542975) (<= 0 x1487) (< 0 x1363) (= x1646 (x49 (x807 x571))) (<= x333 1461501637330902918203684832716283019655932542975) (not (= x113 x2026)) (= x1906 x1674) (not (= x310 x1269)) (= x1492 x1737) (not (= x1674 x1269)) (not (= x333 x310)) (= x194 (x1189 1461501637330902918203684832716283019655932542975 x1233)) (= false x1940) x1017 (not (= x2026 x352)) (not (= x113 x352)) (not (= x310 x571)) x1446 (> x310 0) (>= x1463 0) x553 (= x553 (> (x421 (x807 x571)) 0)) (= (x421 (x807 x2026)) x1521) (>= x927 0) (<= x352 1461501637330902918203684832716283019655932542975) x928 (not (= x352 x1674)) (>= x790 0) (not (= x1363 x1295)) (not (= x1363 x1269)) (>= x1646 0) (not (= x1295 x902)) (>= x1130 0) (not (= x902 x310)) (>= x582 0) (> x2026 0) (not (= x1363 x571)) x572 (<= 0 x398) (not (= x902 x1674)) (< 0 x1269) (>= 1461501637330902918203684832716283019655932542975 x957) (not (= x1269 x1295)) (= x1295 x181) (= x418 x352) (<= x113 1461501637330902918203684832716283019655932542975) (= x194 x1799) x1301 (= x1295 x781) (= (< 0 (x421 (x807 x1363))) x1446) (<= x658 1461501637330902918203684832716283019655932542975) (not (< x1615 2376452955)) (not (= x2026 x902)) (= (x49 (x807 x902)) x1130) x339 (= x1406 1195755010) (not (= x113 x1674)) (not (= x1674 x1295)) (= x1476 (x49 (x807 x352))) (not (= x1363 x310)) (>= x1414 0) (= (> (x421 (x807 x1674)) 0) x339) (= x1505 x98) (= x20 false) (>= 1461501637330902918203684832716283019655932542975 x571) (= x1425 false) (= x100 (> (x421 (x807 x2026)) 0)) (>= 1461501637330902918203684832716283019655932542975 x1363) (not (= x333 x113)) (not (= x352 x1269)) (<= x1702 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1906) (<= 0 x2013) (= x927 (x49 (x807 x2026))) (>= x1906 0) (not (= x352 x1363)) (not (= x113 x1295)) (>= 1461501637330902918203684832716283019655932542975 x310) (>= 1461501637330902918203684832716283019655932542975 x2026) (not (= x902 x571)) (not (= x1363 x113)) (not (= x310 x352)) (not (= x571 x333)) (<= 0 x658) (<= 0 x1154) (<= x1505 1461501637330902918203684832716283019655932542975) (< 0 x333) (not (= x1269 x2026)) (not (= x352 x333)) (<= 0 x1651) (not (= x571 x2026)) (<= x902 1461501637330902918203684832716283019655932542975) (<= x1487 1461501637330902918203684832716283019655932542975) (not (= x902 x352)) (not (= x113 x902)) (<= 0 x15) (>= x907 0) (<= x2013 1461501637330902918203684832716283019655932542975) (= x1679 (x49 (x807 x1295))) (= (x49 (x807 x113)) x907) (not (= x352 x1295)) (< 0 x902) (<= 0 x229) (<= 0 x1274) (not (= x310 x2026)) x943 (= x1047 (x49 (x807 x1674))) (not (= x1269 x902)) (< x1615 2952933380) (> x1521 0) (= x1301 (> (x421 (x807 x352)) 0)) (not (= x113 x1269)) (not (= x1269 x333)) (not (= x1295 x2026)) (>= 1461501637330902918203684832716283019655932542975 x773) (>= x1505 0) (< 0 x352) (= (> (x421 (x807 x333)) 0) x1017) (not (= x310 x1295)) (>= x181 0))) (and (=> x813 x292) (=> (and (not x813) (= x219 228)) x1534)))))
(assert (x1423 x768))
(assert (= (and (not x209) x1576) x694))
(assert (= (and x1567 x1480) x328))
(assert (= (and x1137 x1955) x1086))
(assert (x1423 x1651))
(assert (x1423 x147))
(assert (= (=> (and (= x46 x809) (= x1710 x2001)) x1164) x1222))
(assert (x1423 x797))
(assert (= x546 (or x1325 x535 x1496 x1016 x1820 x1456)))
(assert (= x706 (and x1563 (not x633))))
(assert (= (and x581 x635) x301))
(assert (= x292 (=> (and (= (not (> x1707 1)) x503) (>= 1461501637330902918203684832716283019655932542975 x863) (= (x1571 x1060) x863)) (and x503 (=> (= 260 x219) x1534)))))
(assert (x1423 x1595))
(assert (x1423 x417))
(assert (= x1668 (and x828 x1125)))
(assert (x1423 x1285))
(assert (= x1344 (and x234 x1669)))
(assert (= (x807 826074471) (x1031 826074471)))
(assert (= x1188 (=> (and (= x2045 x867) (= x794 x77)) x1805)))
(assert (= (and (not x1239) x1917) x1224))
(assert (x1423 x1052))
(assert (= x1914 (and x1358 x1771)))
(assert (= x1146 (and (not x2052) x1578)))
(assert (= x295 (and x744 x1147)))
(assert (x75 x1145))
(assert (= x1848 (and x1981 (not x376))))
(assert (x1423 x1573))
(assert (= x1207 (or x693 x1992 x92 x525 x1923 x771 x1208)))
(assert (= x227 (and x1609 x929)))
(assert (= (x1482 (x807 x1363)) x1363))
(assert (x1423 x700))
(assert (x1423 x1549))
(assert (x75 x1295))
(assert (x1423 x1740))
(assert (= x984 (and (not x484) x660)))
(assert (x1423 x108))
(assert (= x1467 (and x308 x659)))
(assert (x1423 x415))
(assert (= x1360 (or (and x1085 x1713) (and x1223 x643) (and x51 x1668) x733 x1353 (and x936 (not x856)))))
(assert (= x1208 (or x684 x1862)))
(assert (x1423 x1110))
(assert (= (=> (and (= x61 x1603) (= 0 x845)) x1620) x1275))
(assert (x1423 x1076))
(assert (x162 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x1268 (and (not x336) x231)))
(assert (x1423 x113))
(assert (= x1052 (x1482 (x807 x1052))))
(assert (x1423 x1185))
(assert (x1423 x1303))
(assert (= x1389 (and x1144 x1621)))
(assert (x1423 x801))
(assert (x1423 x270))
(assert (= x719 (and x399 x1743)))
(assert (x1423 x1630))
(assert (x1423 x1707))
(assert (x75 x1712))
(assert (x1423 x1564))
(assert (x1423 x429))
(assert (= (and x177 x796) x1408))
(assert (x75 x252))
(assert (= (and (not x695) x296) x1868))
(assert (x1423 x1126))
(assert (= x352 (x1482 (x807 x352))))
(assert (= x755 (or x1816 x1659 x468 x1562 x1066 x1307)))
(assert (=> (<= x2026 10000) (= (x807 x2026) (x1031 x2026))))
(assert (x1423 x352))
(assert (=> (<= x1363 10000) (= (x1031 x1363) (x807 x1363))))
(assert (x1423 x1033))
(assert (= x331 (or x585 x619 (and x542 x889) (and x685 (not x474)) (and x617 x322) (and x529 x1432))))
(assert (=> (<= x271 10000) (= (x1031 x271) (x807 x271))))
(assert (= (=> (and (= 0 x1818) (= x1536 x749)) x980) x1806))
(assert (= x1382 (and x1531 (not x1160))))
(assert (x1423 x625))
(assert (= x525 (or x1080 x1686)))
(assert (x1423 x2010))
(assert (= (and x143 x1684) x133))
(assert (x1423 x1002))
(assert (=> (<= x688 10000) (= (x807 x688) (x1031 x688))))
(assert (x1423 x1351))
(assert (= (and x235 (not x355)) x281))
(assert (x962 x1538))
(assert (=> (>= 10000 x1579) (= (x1031 x1579) (x807 x1579))))
(assert (x1423 x1522))
(assert (x1423 x1646))
(assert (= x1508 (and x1955 (not x1137))))
(assert (x1423 x1712))
(assert (= x97 (and (not x356) x1041)))
(assert (x1423 x1311))
(assert (x1423 x2044))
(assert (= (or x1605 x598 x1996 x847 x1397 x1043) x960))
(assert (x1423 x345))
(assert (= x393 (or x1766 x1533 x832 x696 x1947 x737)))
(assert (x1423 x902))
(assert (= (or x1288 x255) x1543))
(assert (x75 x492))
(assert (= x2035 (and x1045 x975)))
(assert (x1423 x1492))
(assert (x1423 x1262))
(assert (= (x1482 (x807 x183)) x183))
(assert (x75 x688))
(assert (x1423 x1499))
(assert (= x512 (and x560 x1467)))
(assert (= x1594 (or x216 x1882 x1437 x827 x812 x444)))
(assert (= x1096 (and x1502 x78)))
(assert (= x696 (and x1395 x799)))
(assert (x1423 x1706))
(assert (= x796 (and x1525 x859)))
(assert (x1423 x1629))
(assert (x1423 x134))
(assert (x1423 x459))
(assert (x1423 x1001))
(assert (x1423 x189))
(assert (x1423 x528))
(assert (x1423 x597))
(assert (= x1099 (or x735 x1162 x2024)))
(assert (x1423 x274))
(assert (x1423 x2022))
(assert (x1423 x2046))
(assert (= (x903 x1113) 0))
(assert (=> (>= 10000 x469) (= (x1031 x469) (x807 x469))))
(assert (x1423 x219))
(assert (x1423 x58))
(assert (= (and x491 x757) x885))
(assert (= x1562 (and x1561 x922)))
(assert (x75 x1363))
(assert (x1423 x1835))
(assert (= x1454 (=> (and (= x1821 x749) (= x1784 0)) x1656)))
(assert (x1423 x568))
(assert (= x643 (and x936 x856)))
(assert (x1423 x204))
(assert (x1423 x167))
(assert (= (and x1306 x1478) x805))
(assert (x1423 x662))
(assert (= x1785 (and x1343 x728)))
(assert (= (and x1563 x633) x1082))
(assert (x1423 x215))
(assert (= x972 (or x65 x59)))
(assert (= (and (not x1551) x1837) x1210))
(assert (x1423 x1538))
(assert (x1423 x509))
(assert (x1423 x1782))
(assert (x1423 x1545))
(assert (x1423 x702))
(assert (= (and (not x1926) x1841) x1552))
(assert (x1423 x595))
(assert (x1423 x1274))
(assert (x1423 x1632))
(assert (x1423 x1734))
(assert (x1423 x1637))
(assert (= x143 (and x2017 x1374)))
(assert (x1423 x1240))
(assert (= (or x1360 x1218) x691))
(assert (= x1851 (and (not x966) x300)))
(assert (= x598 (and x519 x1614)))
(assert (=> (<= x992 10000) (= (x1031 x992) (x807 x992))))
(assert (= x1921 (=> (and (= (ite x1745 1 0) x698) (= x849 (> x1625 x952)) (= (x1811 (+ 31 x1264)) x662) (= (x1811 (+ 31 x1644)) x1347) (= (x1811 (+ x431 32)) x1264) (= (or x849 x825) x1745) (= x1179 (x1811 (+ x2030 160))) (not (> x90 x1577)) (= (mod (* 32 x37) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1399) (not (> x37 18446744073709551615)) (= x982 (> x90 x1582)) (= x37 (x1919 x1179)) (= x825 (> x952 18446744073709551615)) (= 0 x698) (= (x1811 (+ x1582 x1399)) x90) (= x952 (x1811 (+ x1625 x1319))) (= (x1189 115792089237316195423570985008687907853269984665640564039457584007913129639904 x662) x1319) (= (x1189 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1347) x547) (= (x1811 (+ x1179 32)) x1582) (not (= x683 0)) (= (x1811 (+ x547 160)) x1625) (= (mod (* x37 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x431) (= x1577 (x1811 (+ 160 x1644))) (not (< 18446744073709551615 x2030)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1577) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x934)) (> x1577 x934)) (and (> x934 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1577 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (or (and (< x1644 32) (= (<= x1644 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1644 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1919 160) x2030) (= (x1811 (+ x1179 31)) x934) (= x1602 (x1811 (+ 32 x1625)))) (and (=> (not x982) x1849) (=> x982 x1316)))))
(assert (x1423 x46))
(assert (x1423 x1965))
(assert (x1423 x1010))
(assert (x1423 x7))
(assert (x1423 x1375))
(assert (= (and x617 (not x322)) x1133))
(assert (= (x1482 (x807 x409)) x409))
(assert (x1423 x1195))
(assert (x1423 x1415))
(assert (x1423 x1465))
(assert (x1423 x1604))
(assert (= (=> (and (= x2001 x1215) (= x46 x1874)) x1164) x136))
(assert (x1423 x1523))
(assert (x1423 x398))
(assert (= (x1482 (x807 x766)) x766))
(assert (x1423 x649))
(assert (= x1581 (=> (and (= x1644 x1918) (= x60 x683)) x262)))
(assert (= 2835717307 (x1482 (x1031 2835717307))))
(assert (= (x1031 2835717307) (x807 2835717307)))
(assert (x1423 x1801))
(assert (= (and x1696 x1183) x1397))
(assert (x1423 x536))
(assert (x1423 x510))
(assert (x1423 x1308))
(assert (x1423 x24))
(assert (x1423 x1748))
(assert (= x48 (x1482 (x807 x48))))
(assert (= (and (not x259) x179) x40))
(assert (= x1880 (=> (and (= x1703 0) (= x1312 x549)) x764)))
(assert (= (or x706 x1082) x1257))
(assert (= (and x1256 x1518) x1996))
(assert (=> (<= x1764 10000) (= (x807 x1764) (x1031 x1764))))
(assert (x1423 x1916))
(assert (= (=> (and (= x499 0) (= x1094 x505)) x1214) x883))
(assert (x1423 x1260))
(assert (x75 x352))
(assert (= (x1482 (x807 x1832)) x1832))
(assert (x1423 x1452))
(assert (x1423 x153))
(assert (= (and x586 x1107) x979))
(assert (x1423 x1666))
(assert (= (and x1803 x1253) x788))
(assert (x1423 x1201))
(assert (= (and x243 x1851) x1882))
(assert (x162 x901))
(assert (= (and x76 x1493) x30))
(assert (= (and x1839 x130) x1456))
(assert (x1423 x1808))
(assert (= x828 (and x1755 (not x1472))))
(assert (= x378 (or x144 x755)))
(assert (= x1534 (=> (and (not (= 1173398607 x215)) (= (x1786 (- x219 128)) x1965) x848 (= x2026 x206) (not (> 4 x686)) (<= 100 x686) (= x848 (= x1707 (x1427 68))) (= x358 128) (= (x421 (x807 x1363)) x782) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x566)) (< x566 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x566)) x513) (< 0 x782) (= x566 (x1786 (- x686 4))) (= x1965 x686) (= x215 2289173607) (= 61715998356568858511115630290676146828977781706927134410412890814919959642112 x1622)) (and (=> (and (and (= true x910) (= x457 x206)) (not x513)) (and (=> (and (= x60 0) (not x910)) x1581) (=> (and (= x725 (and (< 99 x686) (= true (<= x686 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x910) (and (=> (and (not x725) (= 0 x60)) x1581) (=> (and x725 (and (= x1942 (> x6 18446744073709551615)) (= x6 (x1701 68)))) (and (=> (and (and (= x1137 (> x1780 x686)) (= x1780 (x1811 (+ x1808 100))) (= (mod (* 32 x6) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1808)) (not x1942)) (and (=> (and (not x1137) (and (= (x1203 (x807 x206) (x1031 0) 0) x2023) (= (< 0 x6) x420))) (and (=> (and (not x420) (= 0 x60)) x1581) (=> (and (and (= x564 (x1701 100)) (= x1502 (= x564 x1513)) (= (x1189 1461501637330902918203684832716283019655932542975 x564) x1513)) x420) (and (=> (and x1502 (and (>= x1769 0) (<= x1769 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< 0 x551) x1969) (= (x1929 x1661) x1769) (= (x1203 (x807 x564) x2023 0) x1661))) (and (=> (and x1969 (and (= (x1701 100) x1637) (= (= x410 x1637) x1514) (= x669 (x1802 (x1031 1) 0)) (= x410 (x1189 1461501637330902918203684832716283019655932542975 x1637)))) (and (=> (and x1514 (= (> x551 0) x1169)) (and (=> (and (= x60 0) (not x1169)) x1581) (=> (and (and (= 128 x1475) (= (= x1637 x571) x1978) (= (x121 x1403) x1194) (<= x1194 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1802 (x1031 1) 0) x1403) (>= x1194 0)) x1169) (and (=> (and (not x1978) (= x787 (= x113 x1637))) (and (=> (and (and (> 3065339685 x871) (< 0 x689) (= x396 x457) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1444) (not (< x871 2376452955)) (= 68 x768) (= 2835717307 x871) (not (= 2678909723 x871)) (not (< x871 2678909723)) (not (< x768 4)) (= x975 (or (and (> 64 x2034) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2034))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2034))) (= x1273 x1194) (= 68 x768) (= x2034 (x1786 (- x768 4))) (= (x421 (x807 x113)) x689)) x787) (and (=> x975 x8) (=> (and (not x975) (and (= x783 x396) (= x1843 (= x396 x457)))) (and (=> (and (and (>= x534 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x534) (= x1669 (< x534 x1194)) (= x534 (x419 x654)) (= x654 (x1203 (x807 x1363) (x1031 2) 0)) (= x1273 x395)) x1843) (and (=> (and (not x1669) (= (> x1273 x534) x1588)) (and (=> (and (not x1588) (and (= x1140 (x1786 (- x534 x1273))) (= x1727 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1273))) (<= 0 x283) (= (x1203 (x807 x396) (x1031 2) 0) x287) (= x412 (> x283 x1727)) (= (x763 x287) x283) (= (x1203 (x807 x1363) (x1031 2) 0) x958) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x283))) (and (=> (and (not x412) (and (= (x1811 (+ x1273 x283)) x945) (= x338 (> x283 x945)))) (and (=> (and (and (= x1272 32) (= x1197 1) (= x1798 (x1203 (x807 x396) (x1031 2) 0))) (not x338)) x1797) (=> x338 x8))) (=> x412 x8))) (=> x1588 x8))) (=> x1669 x8))) (=> (not x1843) x8))))) (=> (and (not x787) (= (= x310 x1637) x209)) (and (=> (and x209 (and (= x1356 2835717307) (not (= 826074471 x1356)) (not (< x1356 826074471)) (= x337 68) (= x816 (x1786 (- x337 4))) (not (= 2514000705 x1356)) (= x457 x48) (= (x421 (x807 x310)) x916) (= x875 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x916 0) (= x1004 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x816) (and (= (<= x816 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x816)))) (not (= x1356 1889567281)) (= 68 x337) (not (< x337 4)) (not (= x1356 2376452955)) (= x991 x1194))) (and (=> (and (not x1004) (and (= x48 x647) (= x963 (= x48 x457)))) (and (=> (not x963) x554) (=> (and (and (= (< x1724 x1194) x45) (= (x1203 (x807 x1363) (x1031 2) 0) x1038) (= x991 x364) (<= x1724 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1724 (x1623 x1038)) (>= x1724 0)) x963) (and (=> x45 x554) (=> (and (= x1524 (< x1724 x991)) (not x45)) (and (=> (and (and (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x991)) x417) (<= 0 x1023) (= x1441 (x1203 (x807 x48) (x1031 2) 0)) (<= x1023 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1023 x417) x463) (= (x1890 x1441) x1023) (= (x1203 (x807 x1363) (x1031 2) 0) x1504) (= (x1786 (- x1724 x991)) x704)) (not x1524)) (and (=> x463 x554) (=> (and (and (= x10 (< x1634 x1023)) (= (x1811 (+ x991 x1023)) x1634)) (not x463)) (and (=> x10 x554) (=> (and (not x10) (and (= x354 32) (= 1 x600) (= x1925 (x1203 (x807 x48) (x1031 2) 0)))) x604))))) (=> x1524 x554))))))) (=> x1004 x554))) (=> (and (= x212 (= x1269 x1637)) (not x209)) (and (=> (and x212 (and (= x1484 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x421 (x807 x1269)) x425) (not (= x1652 2376452955)) (not (< x1652 826074471)) (= x457 x1052) (= x1194 x1315) (not (> 4 x1308)) (= x203 (or (and (> 64 x245) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x245) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x245))) (> x425 0) (not (= 826074471 x1652)) (= (x1786 (- x1308 4)) x245) (= 2835717307 x1652) (= x1308 68) (= x1308 68) (not (= x1652 2514000705)) (not (= x1652 1889567281)))) (and (=> x203 x883) (=> (and (and (= x526 x1052) (= (= x457 x1052) x1612)) (not x203)) (and (=> (not x1612) x883) (=> (and x1612 (and (= x1597 (x583 x385)) (= x1315 x2050) (= (< x1597 x1194) x966) (= (x1203 (x807 x1363) (x1031 2) 0) x385) (>= x1597 0) (<= x1597 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x966 x883) (=> (and (= x243 (< x1597 x1315)) (not x966)) (and (=> x243 x883) (=> (and (and (= x1212 (< x1564 x1731)) (<= x1731 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1203 (x807 x1363) (x1031 2) 0) x833) (= (x1786 (- x1597 x1315)) x1574) (= x1564 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1315))) (<= 0 x1731) (= x1731 (x915 x2016)) (= x2016 (x1203 (x807 x1052) (x1031 2) 0))) (not x243)) (and (=> (and (not x1212) (and (= x1933 (> x1731 x1202)) (= x1202 (x1811 (+ x1315 x1731))))) (and (=> x1933 x883) (=> (and (not x1933) (and (= 32 x1094) (= (x1203 (x807 x1052) (x1031 2) 0) x748) (= 1 x499))) x1214))) (=> x1212 x883))))))))))) (=> (and (= x367 (= x1637 x1295)) (not x212)) (and (=> (and (not x367) (= x986 (= x1674 x1637))) (and (=> (and (not x986) (and (= (= x352 x1637) x829) (and (and (= x325 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1194 x1124) (not (= x298 826074471)) (not (= 2376452955 x298)) (< 0 x1494) (= x1422 68) (not (< x298 826074471)) (= 2835717307 x298) (not (< x1422 4)) (= x1422 68) (= x1832 x457) (not (= x298 1889567281)) (= x1839 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x675) (and (< x675 64) (= (<= x675 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x1786 (- x1422 4)) x675) (not (= x298 2514000705)) (= x1494 (x421 (x807 x352)))) x829))) (and (=> x1839 x1091) (=> (and (and (= x1974 x1832) (= (= x457 x1832) x225)) (not x1839)) (and (=> (not x225) x1091) (=> (and (and (= x1949 (< x1787 x1194)) (= x1787 (x249 x71)) (= x1898 x1124) (= (x1203 (x807 x1363) (x1031 2) 0) x71) (>= x1787 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1787)) x225) (and (=> x1949 x1091) (=> (and (= (> x1124 x1787) x1705) (not x1949)) (and (=> (and (not x1705) (and (= (x1786 (- x1787 x1124)) x942) (= x355 (> x456 x1105)) (= x456 (x1121 x1238)) (= (x1203 (x807 x1832) (x1031 2) 0) x1238) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x456) (= (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1124)) x1105) (>= x456 0) (= x146 (x1203 (x807 x1363) (x1031 2) 0)))) (and (=> x355 x1091) (=> (and (not x355) (and (= (x1811 (+ x1124 x456)) x778) (= x667 (< x778 x456)))) (and (=> x667 x1091) (=> (and (and (= x1801 32) (= x777 (x1203 (x807 x1832) (x1031 2) 0)) (= x868 1)) (not x667)) x1327))))) (=> x1705 x1091))))))))) (=> (and (and (< 0 x373) (= x1909 2835717307) (not (> 826074471 x1909)) (= x1706 (x1786 (- x324 4))) (= x373 (x421 (x807 x1674))) (not (= 2514000705 x1909)) (= x1449 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1706) (and (< x1706 64) (= true (<= x1706 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= 2376452955 x1909)) (not (= 826074471 x1909)) (= x324 68) (not (> 4 x324)) (= x324 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x31) (= x992 x457) (not (= 1889567281 x1909)) (= x1194 x741)) x986) (and (=> x1449 x1994) (=> (and (and (= (= x457 x992) x1697) (= x1761 x992)) (not x1449)) (and (=> (not x1697) x1994) (=> (and (and (= (< x904 x1194) x447) (>= x904 0) (= x1744 (x1203 (x807 x1363) (x1031 2) 0)) (= x741 x539) (= x904 (x282 x1744)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x904)) x1697) (and (=> (and (not x447) (= x1392 (< x904 x741))) (and (=> x1392 x1994) (=> (and (not x1392) (and (<= 0 x1740) (= x318 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x741))) (= x621 (> x1740 x318)) (= x1119 (x1786 (- x904 x741))) (= x1762 (x1203 (x807 x992) (x1031 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1740) (= x1740 (x1723 x1762)) (= (x1203 (x807 x1363) (x1031 2) 0) x361))) (and (=> x621 x1994) (=> (and (not x621) (and (= (> x1740 x233) x508) (= (x1811 (+ x741 x1740)) x233))) (and (=> x508 x1994) (=> (and (and (= x794 1) (= x2045 32) (= x1027 (x1203 (x807 x992) (x1031 2) 0))) (not x508)) x1188))))))) (=> x447 x1994))))))))) (=> (and (and (= x632 x1194) (= x1448 68) (not (< x1448 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1159) (= (x1786 (- x1448 4)) x389) (= (or (and (> 64 x389) (= (<= x389 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x389)) x1596) (= x1448 68) (< 0 x541) (not (= x1076 2514000705)) (= 2835717307 x1076) (not (= 2376452955 x1076)) (= x457 x1758) (not (> 1086394137 x1076)) (not (= x1076 1086394137)) (= x541 (x421 (x807 x1295))) (not (= x1076 1889567281))) x367) (and (=> (and (and (= x1758 x510) (= (= x457 x1758) x14)) (not x1596)) (and (=> (and x14 (and (= x236 x632) (= x949 (< x1235 x1194)) (<= x1235 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x380 x1290) x1235) (<= 0 x1235) (= (x1203 (x807 x1363) (x1031 2) 0) x1290))) (and (=> (and (not x949) (= x388 (< x1235 x632))) (and (=> (and (and (= (< x826 x204) x2006) (= (x1786 (- x1235 x632)) x2019) (= x826 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x632))) (= x2027 (x1203 (x807 x1363) (x1031 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x204) (= x204 (x1967 x891)) (= x891 (x1203 (x807 x1758) (x1031 2) 0)) (>= x204 0)) (not x388)) (and (=> x2006 x1990) (=> (and (and (= (x1811 (+ x204 x632)) x273) (= x1793 (> x204 x273))) (not x2006)) (and (=> (and (and (= 1 x1227) (= x1595 32) (= x306 (x1203 (x807 x1758) (x1031 2) 0))) (not x1793)) x1617) (=> x1793 x1990))))) (=> x388 x1990))) (=> x949 x1990))) (=> (not x14) x1990))) (=> x1596 x1990))))))))))) (=> (and x1978 (and (= x1979 2835717307) (= x193 68) (not (= x1979 2678909723)) (not (> 2376452955 x1979)) (= x457 x161) (= x2046 (x421 (x807 x571))) (= x170 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x193 68) (= (x1786 (- x193 4)) x779) (= x1194 x1916) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x779) (and (> 64 x779) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x779) true))) x695) (< 0 x2046) (< x1979 3065339685) (not (< x193 4)) (not (> 2678909723 x1979)))) (and (=> x695 x2004) (=> (and (and (= x161 x718) (= x407 (= x161 x457))) (not x695)) (and (=> (and (and (>= x436 0) (<= x436 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1194 x436) x581) (= x1384 (x1203 (x807 x1363) (x1031 2) 0)) (= x39 x1916) (= (x439 x1384) x436)) x407) (and (=> x581 x2004) (=> (and (not x581) (= (< x436 x1916) x2053)) (and (=> x2053 x2004) (=> (and (and (= (x1786 (- x436 x1916)) x167) (= x198 (x1203 (x807 x161) (x1031 2) 0)) (= x780 (x1786 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1916))) (= (x423 x198) x1956) (<= 0 x1956) (= (x1203 (x807 x1363) (x1031 2) 0) x1856) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1956) (= (< x780 x1956) x1901)) (not x2053)) (and (=> x1901 x2004) (=> (and (and (= (> x1956 x1300) x172) (= (x1811 (+ x1916 x1956)) x1300)) (not x1901)) (and (=> (and (and (= x1854 1) (= (x1203 (x807 x161) (x1031 2) 0) x312) (= x482 32)) (not x172)) x920) (=> x172 x2004))))))))) (=> (not x407) x2004))))))))) (=> (and (not x1514) (= x60 0)) x1581))) (=> (and (= x60 0) (not x1969)) x1581))) (=> (and (not x1502) (= 0 x60)) x1581))))) (=> (and x1137 (= x60 0)) x1581))) (=> (and x1942 (= 0 x60)) x1581))))))) (=> (and (and (= x1644 x1918) (= x683 0)) x513) x262)))))
(assert (= (and x935 x1964) x995))
(assert (=> (<= x511 10000) (= (x807 x511) (x1031 x511))))
(assert (x1423 x1405))
(assert (= x1220 (and x946 x1788)))
(assert (x162 x662))
(assert (= (and x186 x1524) x1087))
(assert (= x396 (x1482 (x807 x396))))
(assert (x1423 x1804))
(assert (x1423 x1233))
(assert (x1423 x711))
(assert (x1423 x1957))
(assert (= x1986 (=> (= x399 (= 0 x896)) (and (=> (and (not x399) (and (= (or (> x244 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x244 32) (= (<= x244 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1803) (= x1725 (x1811 (+ x244 31))) (= x2025 (x1189 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1725)) (= (x1811 (+ x2025 x1545)) x62))) (and (=> (and (not x1803) (and (= x313 (mod (* x551 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1811 (+ 32 x313)) x1321) (= x607 (= 0 x551)) (= x893 (x1811 (+ x62 32))) (= x1529 (x1811 (+ x1321 x62))))) (and (=> (and (and (= (div (mod (- (x1482 x1946) (x1482 x1931)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) x1053) (= (x985 x1946) x1263) (= x1946 (x1802 (x1031 1) 0)) (>= x1263 0) (= x1136 (mod (* 32 x551) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1802 (x1031 1) 0) x1931) (= x1804 (x1811 (+ x893 x1136))) (= (< x555 x1804) x633) (= x555 (x1811 (+ x893 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1263) (= (x72 x1946 1) x671)) (not x607)) (and (=> (not x633) x387) (=> x633 x1984))) (=> x607 x822))) (=> (and x1803 (= x60 0)) x1581))) (=> (and (= x60 0) x399) x1581)))))
(assert (= 0 (x88 (+ (- x1582 128) x1529))))
(assert (x1423 x683))
(assert (x1423 x1724))
(assert (x75 x206))
(assert (= x1068 (and x1510 x1169)))
(assert (x1423 x782))
(assert (x1423 x1251))
(assert (x1423 x1098))
(assert (x1423 x869))
(assert (= (x1482 (x807 x1746)) x1746))
(assert (= (and x1901 x1729) x69))
(assert (= (or x1993 x1774 x762 x756 x806 x1407) x1831))
(assert (x1423 x191))
(assert (= x1104 (and x1224 (not x434))))
(assert (= x1907 (and x1417 x805)))
(assert (not x1825))
(assert (= x2003 (and x402 (not x1075))))
(assert (x1423 x1215))
(assert (x1423 x1410))
(assert (x162 x1637))
(assert (= (and x1472 x1755) x342))
(assert (= x1350 (and x1819 x979)))
(assert (x75 x1351))
(assert (x1423 x1769))
(assert (x1423 x102))
(assert (= x774 (and x1495 x83)))
(assert (x1423 x1667))
(assert (= x723 (and x803 x1123)))
(assert (x1423 x906))
(assert (x1423 x1170))
(assert (= x1477 (and (not x1007) x1535)))
(assert (= x690 (and (not x1863) x1161)))
(assert (= x775 (and x246 x1660)))
(assert (= x163 (and x746 x1090)))
(assert (= x684 (or x1021 x1813 x1313 x1624 x1087 x432)))
(assert (x1423 x1119))
(assert (= (=> (and (= x1312 x244) (= x896 x1703)) x218) x764))
(assert (= x271 (x1482 (x807 x271))))
(assert (= x836 (and (not x1553) x321)))
(assert (= x717 (and x944 x1753)))
(assert (= (and (not x1424) x43) x411))
(assert (x1423 x1112))
(assert (x1894 x969))
(assert (= 1086394137 (x1482 (x1031 1086394137))))
(assert (x1423 x1757))
(assert (x1423 x271))
(assert (x1423 x1046))
(assert (= (and x1037 (not x1514)) x1095))
(assert (= (x1031 2952933380) (x807 2952933380)))
(assert (x1423 x1434))
(assert (=> (>= 10000 x1269) (= (x807 x1269) (x1031 x1269))))
(assert (x1894 x564))
(assert (= (and (not x203) x332) x1329))
(assert (= x1181 (and (not x1978) x1068)))
(assert (x1423 x2051))
(assert (x1423 x1165))
(assert (x1423 x337))
(assert (x1423 x1869))
(assert (x1423 x2036))
(assert (= (and x1329 x1612) x300))
(assert (x1423 x1541))
(assert (x1423 x2009))
(assert (= (and x1933 x776) x812))
(assert (x1423 x2001))
(assert (= x485 (and x1210 x1719)))
(assert (x1423 x686))
(assert (x1423 x1867))
(assert (= (and (not x645) x1853) x1728))
(assert (= x1858 (x1482 (x807 x1858))))
(assert (= x1327 (=> (and (= x1801 x867) (= x868 x77)) x1805)))
(assert (x1423 x770))
(assert (x1423 x317))
(assert (x1423 x1129))
(assert (= (x807 2678909723) (x1031 2678909723)))
(assert (=> (>= 10000 x590) (= (x807 x590) (x1031 x590))))
(assert (x1423 x229))
(assert (= (and x1728 x923) x179))
(assert (= (x807 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1031 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1423 x313))
(assert (x1423 x1390))
(assert (x1423 x1979))
(assert (x1423 x1444))
(assert (x1423 x657))
(assert (x1423 x138))
(assert (x1423 x170))
(assert (x1423 x1447))
(assert (= 0 (x88 (+ (- x1582 160) x1529))))
(assert (= (and x1150 x1699) x1345))
(assert (x1423 x1582))
(assert (= x1214 (=> (and (= x1094 x867) (= x499 x77)) x1805)))
(assert (x1423 x1983))
(assert (= 3714247998 (x1482 (x1031 3714247998))))
(assert (x75 x1667))
(assert (x1423 x1138))
(assert (= (and x454 x174) x1042))
(assert (= (and (not x963) x715) x1021))
(assert (= x535 (and x207 (not x225))))
(assert (= (and x730 x169) x1065))
(assert (=> (<= x333 10000) (= (x807 x333) (x1031 x333))))
(assert (= x635 (and x407 x1868)))
(assert (x1423 x33))
(assert (x1423 x433))
(assert (= x832 (and x405 (not x601))))
(assert (= x1934 (and x449 x1650)))
(assert (= x859 (and x1650 (not x449))))
(assert (x1423 x790))
(assert (x75 x16))
(assert (= x913 (x1482 (x807 x913))))
(assert (= (and x1350 x1455) x1225))
(assert (= (and (not x757) x491) x1665))
(assert (= (=> (and (= x46 x61) (= x845 x2001)) x1164) x1620))
(assert (= (and x211 x948) x1947))
(assert (x75 x266))
(assert (= x1958 (and (not x128) x476)))
(assert (x1423 x1120))
(assert (= (and x1362 x53) x1056))
(assert (x1423 x437))
(assert (= (and x1207 x1248) x842))
(assert (= (and x793 x912) x946))
(assert (= 0 (x1911 x1887)))
(assert (x1423 x1530))
(assert (= x224 (and (not x1480) x1567)))
(assert (x1423 x1105))
(assert (x1423 x354))
(assert (= x1531 (and (not x1440) x1000)))
(assert (x1423 x61))
(assert (x1423 x713))
(assert (x1423 x1997))
(assert (x1423 x1674))
(assert (= (=> (and (= x1536 x840) (= x1818 x1748)) x1999) x980))
(assert (x1423 x1113))
(assert (= (and x462 x442) x1006))
(assert (= (x1482 (x807 x1674)) x1674))
(assert (x1423 x315))
(assert (x1423 x720))
(assert (= (and (not x1036) x1266) x617))
(assert (= x263 (and x1903 (not x910))))
(assert (= x819 (or x400 x1176)))
(assert (x1423 x924))
(assert (= (=> (and (= x840 x158) (= x1501 x1748)) x1999) x363))
(assert (= (and (not x388) x932) x1271))
(assert (x1423 x957))
(assert (x1423 x1627))
(assert (x1423 x794))
(assert (= (x1482 (x807 x2022)) x2022))
(assert (x1423 x448))
(assert (= (and x1981 x376) x1774))
(assert (x1423 x379))
(assert (= (and (not x1697) x85) x641))
(assert (x1423 x6))
(assert (= (x1031 61715998356568858511115630290676146828977781706927134410412890814919959642112) (x807 61715998356568858511115630290676146828977781706927134410412890814919959642112)))
(assert (= (x903 228) 0))
(assert (x75 x7))
(assert (x1423 x714))
(assert (x1423 x1718))
(assert (x1423 x60))
(assert (= x792 (and x1224 x434)))
(assert (x1423 x721))
(assert (= x971 (=> (and (= x3 0) (= x1629 x749)) x1433)))
(assert (= (=> (and (= x672 x244) (= x391 x896)) x218) x1097))
(assert (x1423 x1159))
(assert (= (or x411 x1831) x844))
(assert (= (x1482 (x807 x41)) x41))
(assert (x1423 x1394))
(assert (x1423 x228))
(assert (= (=> (and (= x840 x1867) (= x1101 x1748)) x1999) x1569))
(assert (x75 x149))
(assert (x1423 x901))
(assert (x1423 x1521))
(assert (x1423 x1485))
(assert (x1423 x492))
(assert (= x114 (=> (and (= x549 x303) (= x1850 0)) x1700)))
(assert (= x626 (and (not x889) x542)))
(assert (x1423 x1716))
(assert (x1423 x1092))
(assert (x75 x902))
(assert (x1423 x364))
(assert (x162 x969))
(assert (x1423 x1484))
(assert (x1423 x871))
(assert (= x1992 (or x760 x1937)))
(assert (= x569 (or x1346 x1826)))
(assert (= x688 (x1482 (x807 x688))))
(assert (x1423 x1084))
(assert (x1423 x1905))
(assert (= (and x1107 (not x586)) x213))
(assert (x1423 x164))
(assert (x1423 x841))
(assert (x1423 x1708))
(assert (= x671 (x807 (x1482 x671))))
(assert (= (or x424 x1104) x1359))
(assert (x1423 x591))
(assert (x1423 x1768))
(assert (= (x88 (+ (- x1179 128) x1529)) 0))
(assert (x75 x113))
(assert (= x1721 (and x1837 x1551)))
(assert (x1423 x1738))
(assert (= 3065339685 (x1482 (x1031 3065339685))))
(assert (x1423 x845))
(assert (= (x1482 (x1031 1762712782)) 1762712782))
(assert (x1423 x2037))
(assert (= (or x479 x1594) x1923))
(assert (= x110 (or (and x944 (not x1753)) x961)))
(assert (x1423 x36))
(assert (x1423 x1548))
(assert (x1423 x887))
(assert (= x1626 (=> (and (= x1366 x1603) (= x1515 0)) x1317)))
(assert (x1423 x831))
(assert (x75 x1269))
(check-sat)
(exit)