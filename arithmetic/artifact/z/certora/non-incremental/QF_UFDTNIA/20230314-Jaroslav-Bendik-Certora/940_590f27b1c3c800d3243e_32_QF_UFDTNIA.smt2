(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x976 0)) (((x267 (x1626 x976) (x323 x976) (x1057 Int)) (x278 (x433 x976) (x1456 Int)) (x141 (x762 Int)))))
(declare-fun x1509 (x976) Int)
(declare-fun x840 () Bool)
(declare-fun x687 () Bool)
(declare-fun x1189 () Int)
(declare-fun x1821 () Bool)
(declare-fun x347 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x206 () Bool)
(declare-fun x1647 () Int)
(declare-fun x1069 () Bool)
(declare-fun x469 () Bool)
(declare-fun x551 () Int)
(declare-fun x166 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x897 () Int)
(declare-fun x1560 () Int)
(declare-fun x1129 () Int)
(declare-fun x1307 () Int)
(declare-fun x537 () Int)
(declare-fun x1030 () Bool)
(declare-fun x869 () Bool)
(declare-fun x1483 () Int)
(declare-fun x1277 () Int)
(declare-fun x1551 () Int)
(declare-fun x1819 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x2070 () Int)
(declare-fun x1790 () Int)
(declare-fun x713 () Int)
(declare-fun x136 () Int)
(declare-fun x1169 () Int)
(declare-fun x1221 () Int)
(declare-fun x1190 () Int)
(declare-fun x404 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x1822 () Int)
(declare-fun x1391 (Int) Int)
(declare-fun x1159 () Bool)
(declare-fun x996 () Int)
(declare-fun x300 () Int)
(declare-fun x1061 () Int)
(declare-fun x705 () Bool)
(declare-fun x981 () Int)
(declare-fun x269 () Int)
(declare-fun x813 () Bool)
(declare-fun x1055 () Int)
(declare-fun x128 () Int)
(declare-fun x1352 () Int)
(declare-fun x810 () Int)
(declare-fun x344 () Int)
(declare-fun x941 () Bool)
(declare-fun x1837 () Int)
(declare-fun x889 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x1743 () Int)
(declare-fun x729 () Int)
(declare-fun x819 () Bool)
(declare-fun x125 () Bool)
(declare-fun x790 (x976) Int)
(declare-fun x204 () Int)
(declare-fun x2132 () Bool)
(declare-fun x785 () Int)
(declare-fun x1740 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x156 () Bool)
(declare-fun x1246 () Int)
(declare-fun x481 () Int)
(declare-fun x677 () Int)
(declare-fun x2172 () Int)
(declare-fun x1272 () Int)
(declare-fun x55 () Int)
(declare-fun x243 () Bool)
(declare-fun x170 () Int)
(declare-fun x164 () Int)
(declare-fun x159 () Int)
(declare-fun x1555 () Int)
(declare-fun x538 () Bool)
(declare-fun x535 () Bool)
(declare-fun x901 () Int)
(declare-fun x1854 (x976) Int)
(declare-fun x1351 () Int)
(declare-fun x174 () Int)
(declare-fun x1440 () Bool)
(declare-fun x458 () Int)
(declare-fun x1898 () Int)
(declare-fun x2020 () Bool)
(declare-fun x127 () Bool)
(declare-fun x1359 () Int)
(declare-fun x1121 () Bool)
(declare-fun x263 (x976) Int)
(declare-fun x596 () Int)
(declare-fun x1791 () Int)
(declare-fun x1281 () Int)
(declare-fun x632 () Int)
(declare-fun x579 () Bool)
(declare-fun x1329 () Int)
(declare-fun x188 () Int)
(declare-fun x2190 () Bool)
(declare-fun x828 () Int)
(declare-fun x863 () Int)
(declare-fun x1772 () Int)
(declare-fun x1684 () Int)
(declare-fun x1654 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1956 () Bool)
(declare-fun x1746 (x976) Int)
(declare-fun x1001 () Bool)
(declare-fun x1395 () Int)
(declare-fun x1606 () Int)
(declare-fun x975 () Int)
(declare-fun x219 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x839 () Bool)
(declare-fun x298 () Int)
(declare-fun x2050 () Int)
(declare-fun x133 () Int)
(declare-fun x928 () Int)
(declare-fun x1577 () Int)
(declare-fun x814 () Bool)
(declare-fun x1228 () Int)
(declare-fun x2021 () Int)
(declare-fun x735 () Int)
(declare-fun x2186 () Bool)
(declare-fun x1214 () Int)
(declare-fun x61 () Int)
(declare-fun x1711 () Int)
(declare-fun x181 () Int)
(declare-fun x232 () Int)
(declare-fun x1113 () Int)
(declare-fun x1665 () Bool)
(declare-fun x1233 () Int)
(declare-fun x673 () Int)
(declare-fun x1839 () Int)
(declare-fun x1580 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1031 () Int)
(declare-fun x1689 () Int)
(declare-fun x1625 () Int)
(declare-fun x1690 () Bool)
(declare-fun x2176 () Int)
(declare-fun x598 () Int)
(declare-fun x1402 () Bool)
(declare-fun x207 () Bool)
(declare-fun x611 () Bool)
(declare-fun x1274 () Int)
(declare-fun x670 () Bool)
(declare-fun x405 () Int)
(declare-fun x1080 () Int)
(declare-fun x1412 () Int)
(declare-fun x1724 () Int)
(declare-fun x769 () Int)
(declare-fun x1788 () Int)
(declare-fun x1227 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1196 () Int)
(declare-fun x2047 () Int)
(declare-fun x1232 () Int)
(declare-fun x1291 () Int)
(declare-fun x386 () Int)
(declare-fun x1681 () Int)
(declare-fun x1842 () Bool)
(declare-fun x586 () Int)
(declare-fun x1468 () Int)
(declare-fun x1813 () x976)
(declare-fun x179 () Int)
(declare-fun x755 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x2152 (x976) Int)
(declare-fun x665 () Int)
(declare-fun x519 () Bool)
(declare-fun x476 () Bool)
(declare-fun x620 () Int)
(declare-fun x368 () Bool)
(declare-fun x1856 () Int)
(declare-fun x1132 () Int)
(declare-fun x787 () x976)
(declare-fun x398 () Bool)
(declare-fun x38 () Int)
(declare-fun x325 () Int)
(declare-fun x2122 () Int)
(declare-fun x2140 () Bool)
(declare-fun x1097 () Int)
(declare-fun x1371 () Bool)
(declare-fun x681 () Bool)
(declare-fun x441 () Bool)
(declare-fun x87 () Int)
(declare-fun x692 (x976) Int)
(declare-fun x275 () Bool)
(declare-fun x56 () Bool)
(declare-fun x41 () Int)
(declare-fun x9 () Int)
(declare-fun x1906 () Bool)
(declare-fun x794 () Bool)
(declare-fun x194 () Int)
(declare-fun x1874 () Int)
(declare-fun x2104 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x817 () Bool)
(declare-fun x2014 () Int)
(declare-fun x1834 () Int)
(declare-fun x1634 () Int)
(declare-fun x473 () Int)
(declare-fun x102 () Bool)
(declare-fun x1847 () Int)
(declare-fun x1860 () Bool)
(declare-fun x753 () Bool)
(declare-fun x485 () Int)
(declare-fun x1000 () Bool)
(declare-fun x2114 () Int)
(declare-fun x902 () Int)
(declare-fun x413 () Int)
(declare-fun x605 () Int)
(declare-fun x1984 () Int)
(declare-fun x1719 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x1039 () Int)
(declare-fun x875 () Int)
(declare-fun x645 () Int)
(declare-fun x593 () Int)
(declare-fun x517 () Int)
(declare-fun x953 () Bool)
(declare-fun x88 () Int)
(declare-fun x758 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x292 () Bool)
(declare-fun x123 () Bool)
(declare-fun x609 () Int)
(declare-fun x991 () Int)
(declare-fun x210 () Bool)
(declare-fun x1043 () x976)
(declare-fun x1235 () Int)
(declare-fun x1838 () Bool)
(declare-fun x1700 () Int)
(declare-fun x2079 () Int)
(declare-fun x440 () Int)
(declare-fun x1046 () Bool)
(declare-fun x958 () Int)
(declare-fun x1115 () Int)
(declare-fun x1231 () Int)
(declare-fun x291 () Int)
(declare-fun x689 () Bool)
(declare-fun x2109 () Int)
(declare-fun x1022 () Int)
(declare-fun x313 () Bool)
(declare-fun x54 () Int)
(declare-fun x984 () Int)
(declare-fun x1709 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x544 () Bool)
(declare-fun x1677 () Int)
(declare-fun x320 () Bool)
(declare-fun x1605 () Int)
(declare-fun x407 () Int)
(declare-fun x381 () Bool)
(declare-fun x290 (Int) Int)
(declare-fun x804 () Bool)
(declare-fun x952 () Int)
(declare-fun x1961 () Bool)
(declare-fun x602 () Int)
(declare-fun x1363 () Int)
(declare-fun x454 () Int)
(declare-fun x382 () Bool)
(declare-fun x1759 () Int)
(declare-fun x1630 () Int)
(declare-fun x1152 () Int)
(declare-fun x583 () Bool)
(declare-fun x1408 () Int)
(declare-fun x260 () Int)
(declare-fun x1623 () Int)
(declare-fun x560 () Bool)
(declare-fun x1104 () Int)
(declare-fun x1867 () Int)
(declare-fun x1720 () Bool)
(declare-fun x909 () Bool)
(declare-fun x264 () Bool)
(declare-fun x1133 () Int)
(declare-fun x2001 () Int)
(declare-fun x1464 () Int)
(declare-fun x557 () Bool)
(declare-fun x1298 () Int)
(declare-fun x1320 () Int)
(declare-fun x709 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1894 () Int)
(declare-fun x1421 () Bool)
(declare-fun x2171 () Int)
(declare-fun x1986 () Int)
(declare-fun x533 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x740 () Int)
(declare-fun x1436 () Bool)
(declare-fun x362 () Bool)
(declare-fun x1528 () Int)
(declare-fun x2156 () Bool)
(declare-fun x1928 () Int)
(declare-fun x1584 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x1661 (Int) Int)
(declare-fun x1585 () Bool)
(declare-fun x2097 () x976)
(declare-fun x1831 () Int)
(declare-fun x117 () Int)
(declare-fun x301 () Int)
(declare-fun x1557 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x980 () Int)
(declare-fun x967 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x1093 () Int)
(declare-fun x2010 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x236 () Int)
(declare-fun x1462 () Int)
(declare-fun x147 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x1423 () Int)
(declare-fun x903 () Bool)
(declare-fun x683 () Int)
(declare-fun x638 () Int)
(declare-fun x295 () Bool)
(declare-fun x591 () Int)
(declare-fun x1771 () Int)
(declare-fun x122 () Int)
(declare-fun x27 () Bool)
(declare-fun x1946 () Int)
(declare-fun x1621 () Int)
(declare-fun x448 () Bool)
(declare-fun x40 () Int)
(declare-fun x1404 () Int)
(declare-fun x431 () Bool)
(declare-fun x2135 () Int)
(declare-fun x1467 () Bool)
(declare-fun x1592 () Int)
(declare-fun x1903 () Bool)
(declare-fun x447 () Int)
(declare-fun x1639 () Int)
(declare-fun x143 () Int)
(declare-fun x500 () Int)
(declare-fun x2202 (x976) Int)
(declare-fun x773 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x415 () Bool)
(declare-fun x1714 () Int)
(declare-fun x979 () Int)
(declare-fun x550 () Int)
(declare-fun x1242 () Bool)
(declare-fun x2123 () Int)
(declare-fun x482 () Int)
(declare-fun x1290 () Bool)
(declare-fun x2074 () Int)
(declare-fun x1260 () Int)
(declare-fun x2017 () Bool)
(declare-fun x2108 () Int)
(declare-fun x2031 () Int)
(declare-fun x1269 () Int)
(declare-fun x2044 () Int)
(declare-fun x1413 () Int)
(declare-fun x256 () Bool)
(declare-fun x1465 () Int)
(declare-fun x1552 () Int)
(declare-fun x1059 () Int)
(declare-fun x1865 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x400 () Int)
(declare-fun x2002 () Bool)
(declare-fun x1470 () Int)
(declare-fun x2083 () Bool)
(declare-fun x50 () Bool)
(declare-fun x352 () Bool)
(declare-fun x1731 (x976) Int)
(declare-fun x2028 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x1981 () Int)
(declare-fun x484 () Bool)
(declare-fun x2004 () Int)
(declare-fun x815 () x976)
(declare-fun x558 () x976)
(declare-fun x844 (Int) Int)
(declare-fun x647 () x976)
(declare-fun x392 () Bool)
(declare-fun x1524 () Int)
(declare-fun x2157 () Int)
(declare-fun x1358 () Bool)
(declare-fun x105 () Int)
(declare-fun x1444 () Int)
(declare-fun x1392 () Int)
(declare-fun x1835 () Int)
(declare-fun x139 () Int)
(declare-fun x2005 () Int)
(declare-fun x1182 () Int)
(declare-fun x1405 () Int)
(declare-fun x1144 () Int)
(declare-fun x1872 () Int)
(declare-fun x1381 () Bool)
(declare-fun x977 () Int)
(declare-fun x1718 () Int)
(declare-fun x1454 () Int)
(declare-fun x451 () Bool)
(declare-fun x2139 () Int)
(declare-fun x1807 () Int)
(declare-fun x274 () Int)
(declare-fun x1955 () Int)
(declare-fun x1183 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x52 () Int)
(declare-fun x926 () Int)
(declare-fun x1721 () Int)
(declare-fun x1374 () Bool)
(declare-fun x1587 () Int)
(declare-fun x34 () Bool)
(declare-fun x1569 () Int)
(declare-fun x1081 () Int)
(declare-fun x1793 () Int)
(declare-fun x351 (x976) Int)
(declare-fun x1176 () Bool)
(declare-fun x455 () Bool)
(declare-fun x931 () Int)
(declare-fun x178 () Bool)
(declare-fun x134 () Int)
(declare-fun x160 () Bool)
(declare-fun x1077 () Int)
(declare-fun x2034 () Int)
(declare-fun x95 () Bool)
(declare-fun x685 () Int)
(declare-fun x297 () Int)
(declare-fun x626 () Bool)
(declare-fun x1420 () Int)
(declare-fun x92 () Int)
(declare-fun x1769 () Bool)
(declare-fun x988 () Bool)
(declare-fun x1452 (x976) Int)
(declare-fun x553 () Int)
(declare-fun x486 () Bool)
(declare-fun x1050 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1546 (Int) x976)
(declare-fun x2131 () Int)
(declare-fun x1149 () Int)
(declare-fun x539 () Int)
(declare-fun x572 () Bool)
(declare-fun x2027 () Int)
(declare-fun x1036 () Int)
(declare-fun x1202 (Int) Int)
(declare-fun x287 () Int)
(declare-fun x1303 () Int)
(declare-fun x499 (x976) Int)
(declare-fun x899 () Bool)
(declare-fun x443 () Bool)
(declare-fun x1783 () Int)
(declare-fun x1262 () Int)
(declare-fun x2120 () Bool)
(declare-fun x1516 () Int)
(declare-fun x829 () Bool)
(declare-fun x802 () Int)
(declare-fun x348 (Int Int) Int)
(declare-fun x1949 () Int)
(declare-fun x1586 (x976) Int)
(declare-fun x962 () Int)
(declare-fun x1563 () Bool)
(declare-fun x1187 () Int)
(declare-fun x2060 () Int)
(declare-fun x2124 () Int)
(declare-fun x261 () Int)
(declare-fun x312 () Bool)
(declare-fun x272 () Bool)
(declare-fun x945 () Int)
(declare-fun x2072 () Int)
(declare-fun x2174 () Int)
(declare-fun x46 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1238 () Int)
(declare-fun x334 () Int)
(declare-fun x836 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x1885 () Int)
(declare-fun x1137 () Int)
(declare-fun x337 () Int)
(declare-fun x536 () Int)
(declare-fun x1694 () Int)
(declare-fun x845 (x976) Int)
(declare-fun x569 () Int)
(declare-fun x1715 () Bool)
(declare-fun x795 () Bool)
(declare-fun x1773 () Int)
(declare-fun x554 () Bool)
(declare-fun x1696 () Int)
(declare-fun x2187 () Int)
(declare-fun x1753 () Bool)
(declare-fun x2191 () Int)
(declare-fun x1005 () Int)
(declare-fun x217 () Int)
(declare-fun x1459 (x976) Int)
(declare-fun x599 () Bool)
(declare-fun x1455 () Int)
(declare-fun x1997 () Bool)
(declare-fun x2181 () Int)
(declare-fun x700 () Int)
(declare-fun x262 () Bool)
(declare-fun x803 () Bool)
(declare-fun x811 () Int)
(declare-fun x1312 () Bool)
(declare-fun x1284 () Int)
(declare-fun x1425 () Int)
(declare-fun x2107 () Int)
(declare-fun x1514 () Int)
(declare-fun x1380 () Int)
(declare-fun x1223 () Bool)
(declare-fun x745 () Bool)
(declare-fun x989 () Int)
(declare-fun x307 () Int)
(declare-fun x530 () Int)
(declare-fun x806 () Int)
(declare-fun x453 () Int)
(declare-fun x1447 () Int)
(declare-fun x430 () Int)
(declare-fun x1501 () Int)
(declare-fun x111 () Int)
(declare-fun x1083 () Bool)
(declare-fun x879 () Int)
(declare-fun x877 () Int)
(declare-fun x2128 () Bool)
(declare-fun x1692 () Int)
(declare-fun x852 () Bool)
(declare-fun x1914 () Int)
(declare-fun x722 () Int)
(declare-fun x646 () Int)
(declare-fun x1736 () Int)
(declare-fun x466 () Bool)
(declare-fun x16 () Int)
(declare-fun x1871 () Int)
(declare-fun x1614 () Bool)
(declare-fun x2180 () Int)
(declare-fun x1815 () Int)
(declare-fun x837 () Int)
(declare-fun x1390 () Int)
(declare-fun x242 () Bool)
(declare-fun x1435 () Int)
(declare-fun x904 () Int)
(declare-fun x495 () Bool)
(declare-fun x1547 () Int)
(declare-fun x1355 () Int)
(declare-fun x1288 () Int)
(declare-fun x1722 () Int)
(declare-fun x703 () Bool)
(declare-fun x938 () Int)
(declare-fun x1490 () Int)
(declare-fun x856 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x2003 () Int)
(declare-fun x1667 () Int)
(declare-fun x1286 () Bool)
(declare-fun x1106 () Int)
(declare-fun x436 () Int)
(declare-fun x822 () Bool)
(declare-fun x474 () Int)
(declare-fun x2025 () Bool)
(declare-fun x356 () Int)
(declare-fun x1826 () Int)
(declare-fun x1992 () Int)
(declare-fun x77 () Int)
(declare-fun x1225 () Bool)
(declare-fun x807 () Int)
(declare-fun x1511 () Int)
(declare-fun x370 () Bool)
(declare-fun x1599 () Int)
(declare-fun x633 () Int)
(declare-fun x725 () Int)
(declare-fun x1935 () Bool)
(declare-fun x642 () Int)
(declare-fun x2066 () Bool)
(declare-fun x112 () Bool)
(declare-fun x221 () Bool)
(declare-fun x246 () Int)
(declare-fun x450 () Bool)
(declare-fun x652 () Int)
(declare-fun x768 () Int)
(declare-fun x2130 () Int)
(declare-fun x257 () Int)
(declare-fun x1905 () x976)
(declare-fun x171 () Bool)
(declare-fun x1326 () Int)
(declare-fun x2117 () Bool)
(declare-fun x216 () Bool)
(declare-fun x1739 () Int)
(declare-fun x1263 () Int)
(declare-fun x782 () Int)
(declare-fun x1486 () Int)
(declare-fun x2019 () Bool)
(declare-fun x17 () Bool)
(declare-fun x589 () Bool)
(declare-fun x445 () Bool)
(declare-fun x515 () Int)
(declare-fun x876 () Int)
(declare-fun x846 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x33 () Int)
(declare-fun x2162 () Int)
(declare-fun x492 () Bool)
(declare-fun x555 () Int)
(declare-fun x776 () Int)
(declare-fun x525 () Int)
(declare-fun x342 () Int)
(declare-fun x176 () Int)
(declare-fun x1679 () Bool)
(declare-fun x1236 () Int)
(declare-fun x94 () Int)
(declare-fun x947 () Bool)
(declare-fun x2121 () Int)
(declare-fun x1171 () Int)
(declare-fun x438 () Int)
(declare-fun x354 () Int)
(declare-fun x1564 () Int)
(declare-fun x249 () Int)
(declare-fun x446 () Bool)
(declare-fun x693 () Bool)
(declare-fun x224 () Int)
(declare-fun x83 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x1271 () Int)
(declare-fun x414 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x1493 () Int)
(declare-fun x2018 (x976) Int)
(declare-fun x960 () Int)
(declare-fun x1554 () Int)
(declare-fun x11 () Int)
(declare-fun x259 () Int)
(declare-fun x723 () Int)
(declare-fun x1387 () Bool)
(declare-fun x959 () Int)
(declare-fun x597 () Int)
(declare-fun x1157 () Bool)
(declare-fun x857 () Int)
(declare-fun x1136 () Int)
(declare-fun x595 () Int)
(declare-fun x1732 () Int)
(declare-fun x508 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x746 () Int)
(declare-fun x1945 () Bool)
(declare-fun x113 () Bool)
(declare-fun x467 () Int)
(declare-fun x340 () Int)
(declare-fun x2126 () Int)
(declare-fun x548 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x707 () Int)
(declare-fun x1101 () Int)
(declare-fun x885 () Int)
(declare-fun x1495 () Int)
(declare-fun x270 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x391 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x1463 () Int)
(declare-fun x2030 () Bool)
(declare-fun x155 () Int)
(declare-fun x1631 () Int)
(declare-fun x872 () Int)
(declare-fun x201 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x98 () Bool)
(declare-fun x1304 () Int)
(declare-fun x724 () Int)
(declare-fun x950 () x976)
(declare-fun x1112 () Bool)
(declare-fun x1141 (Int) Int)
(declare-fun x93 () Int)
(declare-fun x1575 () Bool)
(declare-fun x992 () Int)
(declare-fun x1866 () Int)
(declare-fun x489 () Int)
(declare-fun x1508 () Int)
(declare-fun x2080 () x976)
(declare-fun x268 () Int)
(declare-fun x532 (x976) Int)
(declare-fun x212 () Int)
(declare-fun x697 () Int)
(declare-fun x308 () Bool)
(declare-fun x669 () Int)
(declare-fun x912 () Int)
(declare-fun x1293 () Int)
(declare-fun x1029 () x976)
(declare-fun x726 () Int)
(declare-fun x1933 () Int)
(declare-fun x702 () Int)
(declare-fun x401 () Int)
(declare-fun x501 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x30 () Int)
(declare-fun x562 () Bool)
(declare-fun x406 () Int)
(declare-fun x426 () x976)
(declare-fun x1457 () Bool)
(declare-fun x1862 () Int)
(declare-fun x1979 () Int)
(declare-fun x1636 () Bool)
(declare-fun x835 () Int)
(declare-fun x231 () Int)
(declare-fun x1023 () Int)
(declare-fun x1609 () Int)
(declare-fun x1851 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x202 () Int)
(declare-fun x522 () Int)
(declare-fun x1480 () Int)
(declare-fun x1342 () Bool)
(declare-fun x1597 () Int)
(declare-fun x1174 () Bool)
(declare-fun x177 () Bool)
(declare-fun x239 () Int)
(declare-fun x1795 () Int)
(declare-fun x1383 () Int)
(declare-fun x890 () Int)
(declare-fun x184 () Int)
(declare-fun x736 () Int)
(declare-fun x326 () Int)
(declare-fun x1818 () Bool)
(declare-fun x220 () Int)
(declare-fun x254 () Bool)
(declare-fun x158 () x976)
(declare-fun x946 () Int)
(declare-fun x2029 () Bool)
(declare-fun x2016 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x789 (Int) Int)
(declare-fun x1025 () Int)
(declare-fun x832 (x976) Int)
(declare-fun x145 () Int)
(declare-fun x1432 () Int)
(declare-fun x371 () Bool)
(declare-fun x1430 () Int)
(declare-fun x200 () Bool)
(declare-fun x435 () Bool)
(declare-fun x770 () Int)
(declare-fun x1590 () Bool)
(declare-fun x1911 () Int)
(declare-fun x1895 (x976) Int)
(declare-fun x169 () x976)
(declare-fun x1251 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1823 () x976)
(declare-fun x1608 () Int)
(declare-fun x808 () Int)
(declare-fun x680 (x976) Int)
(declare-fun x830 () Int)
(declare-fun x1142 () Int)
(declare-fun x247 () Int)
(declare-fun x477 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x2 () Int)
(declare-fun x1279 () Int)
(declare-fun x982 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x1541 () Int)
(declare-fun x1857 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x1512 () Int)
(declare-fun x490 () Bool)
(declare-fun x1870 () Int)
(declare-fun x2085 () Int)
(declare-fun x1210 () Bool)
(declare-fun x462 () Int)
(declare-fun x639 () Int)
(declare-fun x1313 () x976)
(declare-fun x1178 () Int)
(declare-fun x1809 () Bool)
(declare-fun x1249 () Int)
(declare-fun x1443 () Int)
(declare-fun x182 () Int)
(declare-fun x1782 (Int) Int)
(declare-fun x987 () Bool)
(declare-fun x676 () Int)
(declare-fun x2153 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1853 () Int)
(declare-fun x2053 () Bool)
(declare-fun x1926 () Int)
(declare-fun x1309 () Int)
(declare-fun x2161 () Int)
(declare-fun x727 () Int)
(declare-fun x2062 () Int)
(declare-fun x1883 () Int)
(declare-fun x865 () Int)
(declare-fun x948 () Int)
(declare-fun x1088 () Int)
(declare-fun x618 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x512 () Int)
(declare-fun x452 () Int)
(declare-fun x1 () Int)
(declare-fun x149 () Int)
(declare-fun x227 () Int)
(declare-fun x2164 () Int)
(declare-fun x529 () Bool)
(declare-fun x2046 () Int)
(declare-fun x1733 () Bool)
(declare-fun x1270 () Int)
(declare-fun x974 () Bool)
(declare-fun x2150 () Int)
(declare-fun x1285 () Int)
(declare-fun x578 () Int)
(declare-fun x888 () Int)
(declare-fun x1927 () Int)
(declare-fun x1109 () Int)
(declare-fun x1735 (x976) Int)
(declare-fun x1049 () Bool)
(declare-fun x1798 () Int)
(declare-fun x898 () Bool)
(declare-fun x882 () Int)
(declare-fun x1439 () Int)
(declare-fun x1170 () Bool)
(declare-fun x1925 () Int)
(declare-fun x1884 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x917 () Int)
(declare-fun x566 () Bool)
(declare-fun x1047 () Int)
(declare-fun x336 () Int)
(declare-fun x1160 () Int)
(declare-fun x456 () Int)
(declare-fun x2183 () Int)
(declare-fun x108 () Bool)
(declare-fun x1522 () Int)
(declare-fun x363 () Int)
(declare-fun x331 () Int)
(declare-fun x920 () Bool)
(declare-fun x1451 () Int)
(declare-fun x402 () Bool)
(declare-fun x1362 () Int)
(declare-fun x196 () Int)
(declare-fun x744 () Int)
(declare-fun x774 () Int)
(declare-fun x831 () Bool)
(declare-fun x280 () Int)
(declare-fun x1777 () Bool)
(declare-fun x2071 () Int)
(declare-fun x2143 () Bool)
(declare-fun x2138 () Int)
(declare-fun x1139 () Int)
(declare-fun x483 () Bool)
(declare-fun x636 () Int)
(declare-fun x1073 () Int)
(declare-fun x1324 () x976)
(declare-fun x527 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x1796 () Bool)
(declare-fun x2041 () Int)
(declare-fun x2134 () Int)
(declare-fun x965 () Int)
(declare-fun x118 () Bool)
(declare-fun x1891 () Int)
(declare-fun x1145 () Int)
(declare-fun x1558 () Int)
(declare-fun x1095 () Int)
(declare-fun x784 () Int)
(declare-fun x1936 () Int)
(declare-fun x1009 () Bool)
(declare-fun x1539 () Int)
(declare-fun x751 () Bool)
(declare-fun x273 () Int)
(declare-fun x1478 () Int)
(declare-fun x1418 () Int)
(declare-fun x1085 () Int)
(declare-fun x1573 (x976) Int)
(declare-fun x698 () Bool)
(declare-fun x379 () Int)
(declare-fun x1737 () Int)
(declare-fun x955 () Int)
(declare-fun x1314 () Int)
(declare-fun x1703 () Bool)
(declare-fun x387 () Bool)
(declare-fun x664 () Int)
(declare-fun x1154 () Int)
(declare-fun x1369 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x28 () Int)
(declare-fun x894 () Int)
(declare-fun x798 () Int)
(declare-fun x341 () Int)
(declare-fun x1814 () Int)
(declare-fun x1302 () Int)
(declare-fun x2096 () Bool)
(declare-fun x91 () Bool)
(declare-fun x567 () Bool)
(declare-fun x355 () Int)
(declare-fun x1962 () Bool)
(declare-fun x1852 () Int)
(declare-fun x731 () Bool)
(declare-fun x2015 () Int)
(declare-fun x935 () Bool)
(declare-fun x1038 () Int)
(declare-fun x1633 () Int)
(declare-fun x686 () Bool)
(declare-fun x503 () Int)
(declare-fun x613 (x976) Int)
(declare-fun x248 () Int)
(declare-fun x587 () Int)
(declare-fun x921 () Int)
(declare-fun x419 () Bool)
(declare-fun x1588 () Int)
(declare-fun x1651 () Int)
(declare-fun x1766 () Int)
(declare-fun x1613 () Int)
(declare-fun x192 (Int) Int)
(declare-fun x1052 () Int)
(declare-fun x1817 () Bool)
(declare-fun x799 () Int)
(declare-fun x1640 () Int)
(declare-fun x1481 () Bool)
(declare-fun x53 () Bool)
(declare-fun x585 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1415 () Int)
(declare-fun x1063 () Bool)
(declare-fun x253 () Int)
(declare-fun x913 () Int)
(declare-fun x1849 () Int)
(declare-fun x282 () Int)
(declare-fun x1438 () Int)
(declare-fun x1195 () Int)
(declare-fun x1723 () Int)
(declare-fun x528 () Int)
(declare-fun x812 () Int)
(declare-fun x15 () Int)
(declare-fun x1620 () Bool)
(declare-fun x905 () Bool)
(declare-fun x1287 () Int)
(declare-fun x1591 () Bool)
(declare-fun x1670 () Int)
(declare-fun x1728 () Int)
(declare-fun x854 () Int)
(declare-fun x1624 () Bool)
(declare-fun x1155 () Int)
(declare-fun x72 () Bool)
(declare-fun x1893 () Int)
(declare-fun x796 () Bool)
(declare-fun x783 () Int)
(declare-fun x1600 () Bool)
(declare-fun x997 () Bool)
(declare-fun x1494 () Int)
(declare-fun x2198 () Bool)
(declare-fun x321 () Bool)
(declare-fun x1318 () Int)
(declare-fun x286 () Int)
(declare-fun x1424 () Int)
(declare-fun x2090 () Int)
(declare-fun x827 () Bool)
(declare-fun x2086 () Int)
(declare-fun x1257 () Bool)
(declare-fun x1910 () Int)
(declare-fun x1259 () Bool)
(declare-fun x1836 () Int)
(declare-fun x502 () Int)
(declare-fun x1208 () Int)
(declare-fun x183 () Bool)
(declare-fun x767 () Int)
(declare-fun x1922 () Int)
(declare-fun x1482 () Int)
(declare-fun x1915 () Int)
(declare-fun x288 () Int)
(declare-fun x1776 () Int)
(declare-fun x1785 () Int)
(declare-fun x1525 () Int)
(declare-fun x154 () Int)
(declare-fun x10 () Int)
(declare-fun x1336 () Int)
(declare-fun x756 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x1500 () Int)
(declare-fun x1713 () Bool)
(declare-fun x289 () Int)
(declare-fun x1542 () Int)
(declare-fun x252 () Int)
(declare-fun x994 () Int)
(declare-fun x998 () Bool)
(declare-fun x2056 () Int)
(declare-fun x228 () Bool)
(declare-fun x910 () Bool)
(declare-fun x721 () Int)
(declare-fun x59 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x132 () Int)
(declare-fun x1389 () Int)
(declare-fun x1877 (x976) Int)
(declare-fun x487 () Int)
(declare-fun x607 () Int)
(declare-fun x129 () Bool)
(declare-fun x68 () Int)
(declare-fun x1148 () Int)
(declare-fun x1781 () Bool)
(declare-fun x594 () x976)
(declare-fun x245 () Int)
(declare-fun x1515 () Bool)
(declare-fun x820 () Int)
(declare-fun x1266 () Bool)
(declare-fun x907 () Int)
(declare-fun x1125 () Int)
(declare-fun x36 () Int)
(declare-fun x1612 () x976)
(declare-fun x523 () Bool)
(declare-fun x805 () Int)
(declare-fun x916 () Bool)
(declare-fun x561 () Int)
(declare-fun x1256 () Int)
(declare-fun x1064 () Bool)
(declare-fun x48 () Int)
(declare-fun x60 () Bool)
(declare-fun x498 () Int)
(declare-fun x1268 () Bool)
(declare-fun x1937 () Int)
(declare-fun x684 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x124 () Int)
(declare-fun x1337 () Bool)
(declare-fun x2048 () Int)
(declare-fun x335 () Int)
(declare-fun x186 () x976)
(declare-fun x1878 () Int)
(declare-fun x1434 () Bool)
(declare-fun x296 () Int)
(declare-fun x656 () Int)
(declare-fun x2159 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x218 () Bool)
(declare-fun x293 () Int)
(declare-fun x671 () Bool)
(declare-fun x1968 () Int)
(declare-fun x1967 () Int)
(declare-fun x601 () Bool)
(declare-fun x1799 () Int)
(declare-fun x1168 () Bool)
(declare-fun x929 () Int)
(declare-fun x2144 () Bool)
(declare-fun x1963 () Bool)
(declare-fun x577 () Int)
(declare-fun x140 () Int)
(declare-fun x1523 () Int)
(declare-fun x6 () Int)
(declare-fun x1089 () Int)
(declare-fun x2082 () Int)
(declare-fun x1012 () Bool)
(declare-fun x106 () Int)
(declare-fun x1167 () Bool)
(declare-fun x542 () Int)
(declare-fun x526 () Int)
(declare-fun x1192 () Bool)
(declare-fun x732 () Int)
(declare-fun x480 () Int)
(declare-fun x610 () Int)
(declare-fun x1417 () Int)
(declare-fun x349 () Bool)
(declare-fun x22 (x976) Int)
(declare-fun x203 () Int)
(declare-fun x1902 () Int)
(declare-fun x1845 (Int) Int)
(declare-fun x761 () Bool)
(declare-fun x843 () Int)
(declare-fun x1659 () Int)
(declare-fun x377 () Bool)
(declare-fun x1712 () Int)
(declare-fun x1904 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x1574 () Int)
(declare-fun x1143 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1566 () Int)
(declare-fun x1672 () Int)
(declare-fun x788 () Int)
(declare-fun x1471 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x1975 () Int)
(declare-fun x412 () Bool)
(declare-fun x1053 () Int)
(declare-fun x968 () Int)
(declare-fun x19 () x976)
(declare-fun x1316 () Int)
(declare-fun x1534 () Int)
(declare-fun x1243 () Int)
(declare-fun x850 () Bool)
(declare-fun x999 () Int)
(declare-fun x1188 () Int)
(declare-fun x1889 () Int)
(declare-fun x1431 () Int)
(declare-fun x672 (x976) Int)
(declare-fun x733 () Int)
(declare-fun x1850 () Bool)
(declare-fun x1998 () Int)
(declare-fun x1469 () Int)
(declare-fun x927 () Bool)
(declare-fun x96 () Int)
(declare-fun x1403 () Bool)
(declare-fun x1172 () Int)
(declare-fun x1204 () Int)
(declare-fun x2073 () Int)
(declare-fun x2033 () Bool)
(declare-fun x2154 () Int)
(declare-fun x47 () Int)
(declare-fun x1969 () Bool)
(declare-fun x153 () Int)
(declare-fun x146 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x1278 () Int)
(declare-fun x2151 () Int)
(declare-fun x1529 () x976)
(declare-fun x1082 () Bool)
(declare-fun x915 () Int)
(declare-fun x763 () Bool)
(declare-fun x1060 () Int)
(declare-fun x2102 () Bool)
(declare-fun x978 () x976)
(declare-fun x986 () Int)
(declare-fun x1062 () Int)
(declare-fun x1671 () Int)
(declare-fun x258 () Int)
(declare-fun x1918 () Bool)
(declare-fun x1186 () x976)
(declare-fun x1222 () Int)
(declare-fun x378 () Bool)
(declare-fun x1761 () Int)
(declare-fun x1015 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x718 () Int)
(declare-fun x1365 () Int)
(declare-fun x2201 () Bool)
(declare-fun x603 (x976) Int)
(declare-fun x643 () Int)
(declare-fun x2110 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1812 () Bool)
(declare-fun x786 () Int)
(declare-fun x2054 () Int)
(declare-fun x2032 () Int)
(declare-fun x1394 () Bool)
(declare-fun x97 () Int)
(declare-fun x2052 () Int)
(declare-fun x1757 () Int)
(declare-fun x479 () Int)
(declare-fun x1458 () Int)
(declare-fun x1099 () Bool)
(declare-fun x13 () Int)
(declare-fun x884 () Int)
(declare-fun x1156 () Int)
(declare-fun x1527 () Int)
(declare-fun x2063 () Int)
(declare-fun x439 () Int)
(declare-fun x1751 () Bool)
(declare-fun x628 () Int)
(declare-fun x1725 () Int)
(declare-fun x1122 () Int)
(declare-fun x375 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x416 () Int)
(declare-fun x2089 () Bool)
(declare-fun x1248 () Int)
(declare-fun x1426 () Bool)
(declare-fun x970 (x976) Int)
(declare-fun x1158 () Bool)
(declare-fun x954 () Bool)
(declare-fun x191 () Int)
(declare-fun x708 () Int)
(declare-fun x1797 () Int)
(declare-fun x1407 () Int)
(declare-fun x1794 () Int)
(declare-fun x849 () Bool)
(declare-fun x383 () Int)
(declare-fun x1811 () Bool)
(declare-fun x649 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x1944 () Int)
(declare-fun x1765 () Int)
(declare-fun x2125 () Int)
(declare-fun x380 () Int)
(declare-fun x668 () Int)
(declare-fun x281 () Int)
(declare-fun x328 () x976)
(declare-fun x1669 () Int)
(declare-fun x299 () Bool)
(declare-fun x167 () Int)
(declare-fun x1601 () Bool)
(declare-fun x1638 () Int)
(declare-fun x640 () Int)
(declare-fun x939 () Int)
(declare-fun x1742 () Bool)
(declare-fun x1648 () Int)
(declare-fun x1332 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x1784 () Int)
(declare-fun x82 () Int)
(declare-fun x389 () Int)
(declare-fun x223 () Int)
(declare-fun x1567 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1747 () Int)
(declare-fun x891 () Int)
(declare-fun x2094 () x976)
(declare-fun x2081 () Int)
(declare-fun x1987 () Int)
(declare-fun x1535 () Bool)
(declare-fun x1907 () Int)
(declare-fun x250 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x420 () Int)
(declare-fun x621 () Int)
(declare-fun x1787 () Int)
(declare-fun x468 () Bool)
(declare-fun x100 () Int)
(declare-fun x1086 () Int)
(declare-fun x58 () Bool)
(declare-fun x766 () Int)
(declare-fun x8 () Bool)
(declare-fun x1611 () Int)
(declare-fun x491 () Bool)
(declare-fun x271 () Int)
(declare-fun x1289 () Int)
(declare-fun x1117 () Int)
(declare-fun x2045 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x311 () Bool)
(declare-fun x165 () Int)
(declare-fun x427 () Bool)
(declare-fun x1475 () Int)
(declare-fun x1716 () Int)
(declare-fun x592 () Bool)
(declare-fun x2116 () Int)
(declare-fun x76 () Int)
(declare-fun x213 () Bool)
(declare-fun x1972 () Int)
(declare-fun x1576 () Int)
(declare-fun x2137 () Bool)
(declare-fun x2007 () Int)
(declare-fun x1767 () Bool)
(declare-fun x1319 () Int)
(declare-fun x1429 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x44 () Int)
(declare-fun x951 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1213 () Int)
(declare-fun x1774 () Int)
(declare-fun x622 () Int)
(declare-fun x1096 () Int)
(declare-fun x319 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x1107 () Int)
(declare-fun x1397 () Int)
(declare-fun x563 () Int)
(declare-fun x215 () Bool)
(declare-fun x674 () Int)
(declare-fun x1760 () Bool)
(declare-fun x107 () Int)
(declare-fun x279 () Bool)
(declare-fun x624 () Int)
(declare-fun x1646 () Int)
(declare-fun x1201 () Int)
(declare-fun x748 () Int)
(declare-fun x2133 () Int)
(declare-fun x238 () Int)
(declare-fun x2119 () Int)
(declare-fun x568 () Int)
(declare-fun x110 () Int)
(declare-fun x742 () Int)
(declare-fun x571 () Int)
(declare-fun x1460 () Int)
(declare-fun x1917 () Int)
(declare-fun x2189 () x976)
(declare-fun x2040 () Bool)
(declare-fun x712 () Int)
(declare-fun x516 () Int)
(declare-fun x148 () Bool)
(declare-fun x1027 () Int)
(declare-fun x2077 () Int)
(declare-fun x361 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1985 () Int)
(declare-fun x1428 () Bool)
(declare-fun x667 () Bool)
(declare-fun x114 () Bool)
(declare-fun x2011 () Int)
(declare-fun x1603 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x168 () Int)
(declare-fun x973 () Int)
(declare-fun x1816 () Bool)
(declare-fun x886 () Int)
(declare-fun x1916 () Int)
(declare-fun x834 () Bool)
(declare-fun x388 () Bool)
(declare-fun x1004 () Int)
(declare-fun x209 () Bool)
(declare-fun x2200 () Bool)
(declare-fun x966 () Int)
(declare-fun x627 () Int)
(declare-fun x1416 () Int)
(declare-fun x103 () Int)
(declare-fun x1858 () Int)
(declare-fun x115 () Int)
(declare-fun x1292 () Int)
(declare-fun x1846 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x900 () Int)
(declare-fun x1662 () Int)
(declare-fun x1130 () Int)
(declare-fun x1068 () Int)
(declare-fun x1506 () Bool)
(declare-fun x922 () Int)
(declare-fun x1448 () Int)
(declare-fun x1217 () Int)
(declare-fun x1398 () Bool)
(declare-fun x2105 () Int)
(declare-fun x1913 () Int)
(declare-fun x1676 () Int)
(declare-fun x1932 () Int)
(declare-fun x244 () Int)
(declare-fun x1280 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x121 () Bool)
(declare-fun x1406 () Int)
(declare-fun x1717 () Int)
(declare-fun x896 () Int)
(declare-fun x144 () Bool)
(declare-fun x365 () Bool)
(declare-fun x364 () Int)
(declare-fun x208 () Int)
(declare-fun x2173 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x1780 () Int)
(declare-fun x1294 () Bool)
(declare-fun x887 () Bool)
(declare-fun x2078 () Bool)
(declare-fun x956 () Bool)
(declare-fun x130 () Int)
(declare-fun x1531 () Int)
(declare-fun x1559 () Bool)
(declare-fun x240 () Int)
(declare-fun x1344 () Int)
(declare-fun x1745 () Int)
(declare-fun x833 () x976)
(declare-fun x1756 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x1800 () Int)
(declare-fun x893 () Int)
(declare-fun x104 () Int)
(declare-fun x853 () Int)
(declare-fun x878 () Int)
(declare-fun x883 () Int)
(declare-fun x1729 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1881 () Int)
(declare-fun x1267 (Int Int) Int)
(declare-fun x21 () Bool)
(declare-fun x1322 () Int)
(declare-fun x1173 () Bool)
(declare-fun x4 () Int)
(declare-fun x81 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1258 () Int)
(declare-fun x606 () Bool)
(declare-fun x329 () Int)
(declare-fun x1616 () Int)
(declare-fun x294 () Bool)
(declare-fun x1519 () Int)
(declare-fun x1966 () Int)
(declare-fun x1045 () Int)
(declare-fun x496 () Int)
(declare-fun x2038 () Bool)
(declare-fun x366 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x197 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x2043 () Int)
(declare-fun x1864 () Int)
(declare-fun x1218 () Int)
(declare-fun x266 () Bool)
(declare-fun x521 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x390 () Int)
(declare-fun x304 () Int)
(declare-fun x1135 () Int)
(declare-fun x211 () Int)
(declare-fun x180 () Int)
(declare-fun x1571 () Bool)
(declare-fun x23 () Bool)
(declare-fun x823 () Int)
(declare-fun x851 () Int)
(declare-fun x25 () Bool)
(declare-fun x1710 () Int)
(declare-fun x1348 (x976) Int)
(declare-fun x1124 () Bool)
(declare-fun x507 () Bool)
(declare-fun x1960 () Int)
(declare-fun x2012 () Int)
(declare-fun x1892 () Bool)
(declare-fun x1370 () Int)
(declare-fun x1825 () Int)
(declare-fun x715 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x682 () Int)
(declare-fun x868 () Int)
(declare-fun x488 () Bool)
(declare-fun x925 () Bool)
(declare-fun x1120 () Int)
(declare-fun x1466 () Int)
(declare-fun x185 () Int)
(declare-fun x1652 () Int)
(declare-fun x1338 () Int)
(declare-fun x138 () Int)
(declare-fun x1019 () Int)
(declare-fun x73 () Int)
(declare-fun x1345 () Bool)
(declare-fun x20 () Int)
(declare-fun x1948 () Bool)
(declare-fun x42 () Int)
(declare-fun x1708 (x976) Int)
(declare-fun x616 () Bool)
(declare-fun x151 () Bool)
(declare-fun x152 () Bool)
(declare-fun x1568 () Int)
(declare-fun x1198 () Int)
(declare-fun x464 () Int)
(declare-fun x2091 () Int)
(declare-fun x409 () Int)
(declare-fun x695 () Int)
(declare-fun x1565 () Int)
(declare-fun x2037 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x460 () Int)
(declare-fun x393 () Int)
(declare-fun x2147 () Int)
(declare-fun x1366 () Int)
(declare-fun x1748 () Bool)
(declare-fun x305 () Int)
(declare-fun x314 () Int)
(declare-fun x1570 () Int)
(declare-fun x1485 (x976) Int)
(declare-fun x255 () Bool)
(declare-fun x2058 () Int)
(declare-fun x775 (x976) Int)
(declare-fun x1492 () Int)
(declare-fun x1507 () Int)
(declare-fun x1556 () Int)
(declare-fun x1018 () Int)
(declare-fun x1707 () Int)
(declare-fun x78 () Int)
(declare-fun x739 () Int)
(declare-fun x2146 () Bool)
(declare-fun x1498 () Int)
(declare-fun x2042 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x493 () Bool)
(declare-fun x2008 () Int)
(declare-fun x932 () Int)
(declare-fun x1461 () Bool)
(declare-fun x137 () Int)
(declare-fun x478 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x1253 () Int)
(declare-fun x1003 () Int)
(declare-fun x1193 () Bool)
(declare-fun x870 () Int)
(declare-fun x1146 () Int)
(declare-fun x1958 () Int)
(declare-fun x222 () Int)
(declare-fun x2179 () Int)
(declare-fun x861 () Int)
(declare-fun x1411 () Int)
(declare-fun x1635 () Bool)
(declare-fun x608 () Bool)
(declare-fun x1607 () Int)
(declare-fun x1065 () Bool)
(declare-fun x924 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1749 () Int)
(declare-fun x1663 () Int)
(declare-fun x2023 () Int)
(declare-fun x993 () Bool)
(declare-fun x18 () Int)
(declare-fun x1861 () Int)
(declare-fun x1627 () Bool)
(declare-fun x801 () Int)
(declare-fun x765 (x976) Int)
(declare-fun x417 () Int)
(declare-fun x797 () Bool)
(declare-fun x1655 () Int)
(declare-fun x327 () Int)
(declare-fun x449 () Bool)
(declare-fun x648 () Int)
(declare-fun x704 () Int)
(declare-fun x1108 () Bool)
(declare-fun x434 () Bool)
(declare-fun x780 () Int)
(declare-fun x1806 () Int)
(declare-fun x1801 () Int)
(declare-fun x930 () Int)
(declare-fun x942 () Int)
(declare-fun x1409 () Bool)
(declare-fun x573 () Int)
(declare-fun x506 () Int)
(declare-fun x1377 () Int)
(declare-fun x1779 () Bool)
(declare-fun x1995 () Int)
(declare-fun x1988 () Int)
(declare-fun x690 (Int) Int)
(declare-fun x135 () Int)
(declare-fun x75 () Int)
(declare-fun x1013 () Bool)
(declare-fun x187 () Int)
(declare-fun x800 (x976) Int)
(declare-fun x1763 () Bool)
(declare-fun x225 () Bool)
(declare-fun x701 () Int)
(declare-fun x1598 () Int)
(declare-fun x792 () Int)
(declare-fun x1896 () Int)
(declare-fun x1863 () Int)
(declare-fun x1610 () Int)
(declare-fun x1593 () Bool)
(declare-fun x345 () Int)
(declare-fun x678 () Int)
(declare-fun x1123 () Bool)
(declare-fun x1990 () Int)
(declare-fun x444 () Int)
(declare-fun x1317 () Bool)
(declare-fun x470 () Int)
(declare-fun x1553 () Int)
(declare-fun x89 () Int)
(declare-fun x816 () Int)
(declare-fun x972 () Bool)
(declare-fun x1982 () Int)
(declare-fun x752 () Int)
(declare-fun x332 () Int)
(declare-fun x1583 (Int) Int)
(declare-fun x1697 () Int)
(declare-fun x1764 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x1203 () Int)
(declare-fun x772 () Int)
(declare-fun x590 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x650 () Int)
(declare-fun x1024 () Int)
(declare-fun x230 () Int)
(declare-fun x317 () Bool)
(declare-fun x728 () Int)
(declare-fun x1147 () Int)
(declare-fun x3 () Int)
(declare-fun x1441 () Int)
(declare-fun x760 (Int) Int)
(declare-fun x866 () Int)
(declare-fun x565 () Int)
(declare-fun x316 () Int)
(declare-fun x2160 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x195 () Bool)
(declare-fun x1589 () Int)
(declare-fun x57 () Int)
(declare-fun x510 () Bool)
(declare-fun x937 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x397 () Int)
(declare-fun x399 () Int)
(declare-fun x2203 () Bool)
(declare-fun x1941 () Int)
(declare-fun x1775 (x976) Int)
(declare-fun x324 () Bool)
(declare-fun x824 () Bool)
(declare-fun x777 () Int)
(declare-fun x2197 () Bool)
(declare-fun x1504 () Int)
(declare-fun x2057 () Int)
(declare-fun x37 () Bool)
(declare-fun x1393 () Int)
(declare-fun x1953 (Int) Int)
(declare-fun x862 () Int)
(declare-fun x1951 () Int)
(declare-fun x662 () Int)
(declare-fun x62 (Int) Int)
(declare-fun x617 () Int)
(declare-fun x1808 () Int)
(declare-fun x2195 () Bool)
(declare-fun x1701 () Int)
(declare-fun x1950 () Int)
(declare-fun x425 () Bool)
(declare-fun x949 () Int)
(declare-fun x961 () Bool)
(declare-fun x2168 () Int)
(declare-fun x564 () Int)
(declare-fun x2099 () Bool)
(declare-fun x2136 () Bool)
(declare-fun x908 (Int) Int)
(declare-fun x172 () x976)
(declare-fun x63 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1072 () Int)
(declare-fun x71 () Bool)
(declare-fun x1477 () Int)
(declare-fun x1386 () Bool)
(declare-fun x2092 () Int)
(declare-fun x1999 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x654 () Bool)
(declare-fun x1789 () Int)
(declare-fun x1693 () x976)
(declare-fun x1543 () Bool)
(declare-fun x251 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x1770 () Int)
(declare-fun x2051 () Bool)
(declare-fun x964 () Int)
(declare-fun x234 () Int)
(declare-fun x421 () Bool)
(declare-fun x2204 () Int)
(declare-fun x1367 () Int)
(declare-fun x934 (x976) Int)
(declare-fun x1361 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x343 () Int)
(declare-fun x1275 () Int)
(declare-fun x1673 () Bool)
(declare-fun x957 () Bool)
(declare-fun x2106 () Int)
(declare-fun x358 () Bool)
(declare-fun x580 () Int)
(declare-fun x711 () Int)
(declare-fun x333 () Bool)
(declare-fun x306 () Int)
(declare-fun x1241 () Int)
(declare-fun x2192 () Bool)
(declare-fun x1880 () Int)
(declare-fun x1974 () Int)
(declare-fun x2055 () Bool)
(declare-fun x936 () Bool)
(declare-fun x990 () Int)
(declare-fun x1100 () Int)
(declare-fun x1726 () Bool)
(declare-fun x847 () Bool)
(declare-fun x559 (Int) Int)
(declare-fun x2169 () Int)
(declare-fun x1350 () Int)
(declare-fun x2112 () Bool)
(declare-fun x277 () Int)
(declare-fun x86 () Bool)
(declare-fun x1596 () Int)
(declare-fun x710 () Int)
(declare-fun x84 () Bool)
(declare-fun x1041 () Int)
(declare-fun x1488 () Bool)
(declare-fun x1688 (x976) Int)
(declare-fun x1517 () Int)
(declare-fun x411 () Bool)
(declare-fun x825 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1705 () Bool)
(declare-fun x359 () Bool)
(declare-fun x2170 () Int)
(declare-fun x1205 () Int)
(declare-fun x895 () Bool)
(declare-fun x1513 () Int)
(declare-fun x1680 () Int)
(declare-fun x1675 () Bool)
(declare-fun x1695 () Int)
(declare-fun x2049 () Int)
(declare-fun x1066 () Int)
(declare-fun x1604 () Int)
(declare-fun x235 () Int)
(declare-fun x716 () Int)
(declare-fun x1959 () Bool)
(declare-fun x1177 () Int)
(declare-fun x1245 () Bool)
(declare-fun x1341 () Int)
(declare-fun x1996 () Bool)
(declare-fun x518 () Int)
(declare-fun x74 () Int)
(declare-fun x1446 () Bool)
(declare-fun x651 () Bool)
(declare-fun x1685 () Int)
(declare-fun x1252 () Int)
(declare-fun x1544 () Int)
(declare-fun x80 () Bool)
(declare-fun x1970 () Int)
(declare-fun x720 () Int)
(declare-fun x576 () Int)
(declare-fun x552 () Int)
(declare-fun x1890 () Int)
(declare-fun x69 () Int)
(declare-fun x923 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x1340 () Int)
(declare-fun x1666 () Bool)
(declare-fun x969 () Int)
(declare-fun x864 () Int)
(declare-fun x2103 () Bool)
(declare-fun x1678 () Int)
(declare-fun x2199 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x353 () Bool)
(declare-fun x1002 () Int)
(declare-fun x2175 () Bool)
(declare-fun x644 () Int)
(declare-fun x1209 () Int)
(declare-fun x199 () Bool)
(declare-fun x1869 (x976) Int)
(declare-fun x1118 () Int)
(declare-fun x1526 () Bool)
(declare-fun x1876 () Int)
(declare-fun x1971 () Int)
(declare-fun x471 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x1691 () Int)
(declare-fun x759 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x2155 () Int)
(declare-fun x764 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x1578 () Int)
(declare-fun x1802 () Int)
(declare-fun x116 () Int)
(declare-fun x394 () Int)
(declare-fun x540 () Int)
(declare-fun x32 () Int)
(declare-fun x1185 () Int)
(declare-fun x660 () Bool)
(declare-fun x1521 () x976)
(declare-fun x99 () Int)
(declare-fun x1533 () Bool)
(declare-fun x1075 () Int)
(declare-fun x2035 () Int)
(declare-fun x330 () Int)
(declare-fun x2088 () Int)
(declare-fun x376 () Int)
(declare-fun x109 () Bool)
(declare-fun x463 () x976)
(declare-fun x2061 () Bool)
(declare-fun x983 () Int)
(declare-fun x1419 () Int)
(declare-fun x1702 () Int)
(declare-fun x679 () Int)
(declare-fun x1754 () Int)
(declare-fun x1595 () Int)
(declare-fun x706 () Int)
(declare-fun x778 () Int)
(declare-fun x880 () Bool)
(declare-fun x505 () Int)
(declare-fun x637 () Int)
(declare-fun x1579 () Int)
(declare-fun x1977 () Bool)
(declare-fun x1730 (x976) Int)
(declare-fun x418 () Int)
(declare-fun x1020 () Bool)
(declare-fun x374 () Int)
(declare-fun x1206 () Bool)
(declare-fun x1414 () Int)
(declare-fun x1240 () Int)
(declare-fun x1983 () Bool)
(declare-fun x1674 () Int)
(declare-fun x2115 () Int)
(declare-fun x838 () Bool)
(declare-fun x1750 () Int)
(declare-fun x1619 () Int)
(declare-fun x855 () Bool)
(declare-fun x49 () Int)
(declare-fun x1297 () Bool)
(declare-fun x858 () Bool)
(declare-fun x395 () Bool)
(declare-fun x214 () Int)
(declare-fun x625 () Bool)
(declare-fun x7 () Bool)
(declare-fun x1311 () Int)
(declare-fun x918 () Bool)
(declare-fun x1051 () Int)
(declare-fun x504 () Int)
(declare-fun x1255 () Bool)
(declare-fun x367 () Bool)
(declare-fun x101 () Bool)
(declare-fun x12 () Int)
(declare-fun x465 () Int)
(declare-fun x1843 () Int)
(declare-fun x1897 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x1334 () Int)
(declare-fun x2148 () Bool)
(declare-fun x173 () Int)
(declare-fun x826 () Int)
(declare-fun x346 (Int) Int)
(declare-fun x549 () x976)
(declare-fun x1092 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1396 () Int)
(declare-fun x1044 () Bool)
(declare-fun x494 () Bool)
(declare-fun x1943 (x976) Int)
(declare-fun x226 () Int)
(declare-fun x1792 () Int)
(declare-fun x1207 () Int)
(declare-fun x475 () Int)
(declare-fun x754 () Int)
(declare-fun x511 () Int)
(declare-fun x1427 () Int)
(declare-fun x1103 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x2036 () Int)
(declare-fun x403 () Bool)
(declare-fun x162 () Int)
(declare-fun x1368 () x976)
(declare-fun x1762 (Int) Int)
(declare-fun x1282 () Bool)
(declare-fun x1687 () Int)
(declare-fun x1373 () Bool)
(declare-fun x541 () x976)
(declare-fun x1327 () Bool)
(declare-fun x26 () Int)
(declare-fun x350 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x1952 () Int)
(declare-fun x276 () Bool)
(declare-fun x2196 () Int)
(declare-fun x1379 () Int)
(declare-fun x384 () Int)
(declare-fun x2065 () Int)
(declare-fun x131 () Int)
(declare-fun x1011 () Int)
(declare-fun x1496 () Int)
(declare-fun x229 (x976) Int)
(declare-fun x2129 () Bool)
(declare-fun x318 () Int)
(declare-fun x29 () Int)
(declare-fun x940 () Int)
(declare-fun x1067 () Int)
(declare-fun x1058 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x575 () Int)
(declare-fun x1660 () Bool)
(declare-fun x442 () Int)
(declare-fun x2101 () Int)
(declare-fun x513 () Bool)
(declare-fun x1111 () Int)
(declare-fun x14 () Int)
(declare-fun x70 () Bool)
(declare-fun x67 () Int)
(declare-fun x547 () Bool)
(declare-fun x995 () Int)
(declare-fun x119 () x976)
(declare-fun x315 () Int)
(declare-fun x600 () Int)
(declare-fun x408 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x2059 () Int)
(declare-fun x422 () Bool)
(declare-fun x1449 () Int)
(declare-fun x1161 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x51 () Int)
(declare-fun x461 () Int)
(declare-fun x1938 () Int)
(declare-fun x339 () Int)
(declare-fun x1035 () Int)
(declare-fun x1644 (x976) Int)
(declare-fun x2185 () Bool)
(declare-fun x1347 () Int)
(declare-fun x205 () Int)
(declare-fun x372 () Int)
(declare-fun x43 () Int)
(declare-fun x1219 () Int)
(declare-fun x1163 () Bool)
(declare-fun x818 () Int)
(declare-fun x771 () Int)
(declare-fun x943 () Bool)
(define-fun x1184 ((x976 x976) (x285 Int)) x976 (ite ((_ is x278) x976) (x278 (x433 x976) (+ (x1456 x976) x285)) (ite ((_ is x267) x976) (x267 (x1626 x976) (x323 x976) (+ x285 (x1057 x976))) (x141 (+ (x762 x976) x285)))))
(define-fun x534 ((x971 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x971) (>= x971 0)) x971 (- x971 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x193 ((x971 Int)) Int (ite (and (< x971 0) (>= x971 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x971 115792089237316195423570985008687907853269984665640564039457584007913129639936) x971))
(define-fun x1920 ((x2145 Int)) Bool (and (<= 0 x2145) (< x2145 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1325 ((x2145 Int)) Bool (and (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2145) x2145) (= x2145 (x348 x2145 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1989 ((x2145 Int)) Bool (and (= (x348 0 x2145) 0) (= (x348 x2145 0) 0)))
(define-fun x867 ((x2145 Int)) Bool (= (x348 x2145 x2145) x2145))
(define-fun x1264 ((x2145 Int)) Bool (and (x867 x2145) (x1325 x2145) (x1989 x2145)))
(define-fun x1034 ((x2145 Int) (x1530 Int)) Bool (= (x348 x1530 x2145) (x348 x2145 x1530)))
(define-fun x1706 ((x2145 Int) (x1530 Int)) Bool (and (>= (x348 x2145 x1530) 0) (=> (>= x1530 0) (<= (x348 x2145 x1530) x1530)) (=> (<= 0 x2145) (<= (x348 x2145 x1530) x2145))))
(define-fun x1491 ((x2145 Int) (x1530 Int)) Bool (and (x1706 x2145 x1530) (x1034 x2145 x1530)))
(define-fun x1699 ((x2145 Int)) Bool (= (mod x2145 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (x348 x2145 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x2145 32))))
(define-fun x2075 ((x2145 Int)) Bool (and (x1699 x2145) (x1491 x2145 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x322 ((x2145 Int)) Bool (= (mod x2145 1099511627776) (x348 x2145 1099511627775)))
(define-fun x1339 ((x2145 Int)) Bool (and (x322 x2145) (x1491 x2145 1099511627775)))
(define-fun x2177 ((x2145 Int)) Bool (= (x348 x2145 1461501637330902918203684832716283019655932542975) (mod x2145 1461501637330902918203684832716283019655932542976)))
(define-fun x1126 ((x2145 Int)) Bool (and (x1491 x2145 1461501637330902918203684832716283019655932542975) (x2177 x2145)))
(define-fun x860 ((x2145 Int)) Bool (= (mod x2145 26959946667150639794667015087019630673637144422540572481103610249216) (x348 x2145 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1385 ((x2145 Int)) Bool (and (x1491 x2145 26959946667150639794667015087019630673637144422540572481103610249215) (x860 x2145)))
(define-fun x1622 ((x2145 Int)) Bool (= (mod x2145 18446744073709551616) (x348 x2145 18446744073709551615)))
(define-fun x1200 ((x2145 Int)) Bool (and (x1622 x2145) (x1491 x2145 18446744073709551615)))
(define-fun x1226 ((x2145 Int)) Bool (= (mod x2145 452312848583266388373324160190187140051835877600158453279131187530910662656) (x348 x2145 452312848583266388373324160190187140051835877600158453279131187530910662655)))
(define-fun x933 ((x2145 Int)) Bool (and (x1491 x2145 452312848583266388373324160190187140051835877600158453279131187530910662655) (x1226 x2145)))
(define-fun x1520 ((x2145 Int)) Bool (= (x348 x2145 255) (mod x2145 256)))
(define-fun x1323 ((x2145 Int)) Bool (and (x1520 x2145) (x1491 x2145 255)))
(define-fun x1191 ((x653 Int)) Int (x844 x653))
(define-fun x310 ((x653 Int)) Int (ite (= 288 x653) x1902 (x1762 x653)))
(define-fun x2141 ((x653 x976)) Int (x2152 x653))
(define-fun x1026 ((x653 x976)) Int (x800 x653))
(define-fun x142 ((x653 x976)) Int (x1573 x653))
(define-fun x1886 ((x653 x976)) Int (x2018 x653))
(define-fun x635 ((x653 x976)) Int (ite (= x653 x2097) 1 (x1886 x653)))
(define-fun x198 ((x653 Int)) Int (ite (= x43 x653) x1045 (x310 x653)))
(define-fun x360 ((x653 Int)) Int (ite (and (<= x1933 x653) (> (+ x1045 x1933) x653)) (x844 (+ (- x653 x1933) x2161)) (x198 x653)))
(define-fun x570 ((x653 Int)) Int (ite (= x217 x653) 0 (x360 x653)))
(define-fun x1649 ((x653 Int)) Int (ite (= x653 320) x43 (x570 x653)))
(define-fun x1923 ((x653 Int)) Int (ite x2112 (x310 x653) (x1649 x653)))
(define-fun x1250 ((x653 Int)) Int (ite (= x1455 x653) x1773 (x1923 x653)))
(define-fun x1602 ((x653 Int)) Int (ite (= x653 x1500) x9 (x1250 x653)))
(define-fun x373 ((x653 Int)) Int (ite (and (> (+ x9 x238) x653) (>= x653 x238)) (x844 (+ (- x653 x238) x617)) (x1602 x653)))
(define-fun x1510 ((x653 Int)) Int (ite (= x653 x736) 0 (x373 x653)))
(define-fun x781 ((x653 Int)) Int (ite (= x653 x1979) x1500 (x1510 x653)))
(define-fun x1211 ((x653 Int)) Int (ite (= x337 x653) x1511 (x781 x653)))
(define-fun x1489 ((x653 Int)) Int (ite (and (< x653 (+ x1511 x724)) (>= x653 x724)) (x844 (+ x1448 (- x653 x724))) (x1211 x653)))
(define-fun x524 ((x653 Int)) Int (ite (= x1466 x653) 0 (x1489 x653)))
(define-fun x1261 ((x653 Int)) Int (ite (= x653 x1717) x337 (x524 x653)))
(define-fun x546 ((x653 Int)) Int (ite (= x1721 x653) x1142 (x1261 x653)))
(define-fun x556 ((x653 Int)) Int (ite (= x1517 x653) x1893 (x546 x653)))
(define-fun x1453 ((x653 Int)) Int (ite (= x1648 x653) x245 (x556 x653)))
(define-fun x582 ((x653 Int)) Int (ite (= x1569 x653) x1917 (x1453 x653)))
(define-fun x1335 ((x653 Int)) Int (ite (= x1599 x653) x400 (x582 x653)))
(define-fun x779 ((x653 Int)) Int (ite (= x653 x1633) x1898 (x1335 x653)))
(define-fun x1499 ((x653 Int)) Int (ite (= x653 x1722) x969 (x779 x653)))
(define-fun x1472 ((x653 Int)) Int (ite (= x653 x187) x1979 (x1499 x653)))
(define-fun x1400 ((x653 Int)) Int (ite x1753 (x1250 x653) (x1472 x653)))
(define-fun x1768 ((x653 Int)) Int (ite (= x36 x653) x2124 (x1400 x653)))
(define-fun x2193 ((x653 Int)) Int (ite (= x653 x224) x202 (x1768 x653)))
(define-fun x1151 ((x653 Int)) Int (ite (= x1207 x653) x301 (x2193 x653)))
(define-fun x1479 ((x653 Int)) Int (ite (= x653 x1716) x1407 (x1151 x653)))
(define-fun x2026 ((x653 Int)) Int (ite (= x1639 x653) x1689 (x1479 x653)))
(define-fun x1505 ((x653 Int)) Int (ite (= x799 x653) x224 (x2026 x653)))
(define-fun x1375 ((x653 Int)) Int (ite x488 (x1768 x653) (x1505 x653)))
(define-fun x64 ((x653 Int)) Int (ite (= x732 x653) x1625 (x1375 x653)))
(define-fun x1042 ((x653 Int)) Int (ite (= x418 x653) x780 (x64 x653)))
(define-fun x1829 ((x653 Int)) Int (ite (and (<= x506 x653) (< x653 (+ x780 x506))) (x844 (+ x2081 (- x653 x506))) (x1042 x653)))
(define-fun x1628 ((x653 Int)) Int (ite (= x239 x653) 0 (x1829 x653)))
(define-fun x1887 ((x653 Int)) Int (ite (= x653 x1302) x418 (x1628 x653)))
(define-fun x189 ((x653 Int)) Int (ite x408 (x64 x653) (x1887 x653)))
(define-fun x1859 ((x653 Int)) Int (ite (= x653 x94) x913 (x189 x653)))
(define-fun x1357 ((x653 Int)) Int (ite (= x653 x417) x728 (x1859 x653)))
(define-fun x623 ((x653 Int)) Int (ite (and (> (+ x728 x1477) x653) (>= x653 x1477)) (x844 (+ (- x653 x1477) x994)) (x1357 x653)))
(define-fun x691 ((x653 Int)) Int (ite (= x653 x1808) 0 (x623 x653)))
(define-fun x302 ((x653 Int)) Int (ite (= x653 x1783) x417 (x691 x653)))
(define-fun x1110 ((x653 Int)) Int (ite (= x999 x653) x808 (x302 x653)))
(define-fun x385 ((x653 Int)) Int (ite (and (>= x653 x700) (> (+ x808 x700) x653)) (x844 (+ x389 (- x653 x700))) (x1110 x653)))
(define-fun x1102 ((x653 Int)) Int (ite (= x653 x2122) 0 (x385 x653)))
(define-fun x634 ((x653 Int)) Int (ite (= x1496 x653) x999 (x1102 x653)))
(define-fun x1487 ((x653 Int)) Int (ite (= x575 x653) x1271 (x634 x653)))
(define-fun x545 ((x653 Int)) Int (ite (= x653 x945) x103 (x1487 x653)))
(define-fun x1330 ((x653 Int)) Int (ite (= x390 x653) x1480 (x545 x653)))
(define-fun x35 ((x653 Int)) Int (ite (= x222 x653) x1576 (x1330 x653)))
(define-fun x1900 ((x653 Int)) Int (ite (= x653 x942) x253 (x35 x653)))
(define-fun x1165 ((x653 Int)) Int (ite (= x653 x2044) x2046 (x1900 x653)))
(define-fun x859 ((x653 Int)) Int (ite (= x1419 x653) x610 (x1165 x653)))
(define-fun x5 ((x653 Int)) Int (ite (= x653 x1293) x1783 (x859 x653)))
(define-fun x1594 ((x653 Int)) Int (ite x1299 (x1859 x653) (x5 x653)))
(define-fun x1940 ((x653 Int)) Int (ite (= x281 x653) x470 (x1594 x653)))
(define-fun x2039 ((x653 Int)) Int (ite (= x593 x653) x63 (x1940 x653)))
(define-fun x1581 ((x653 Int)) Int (ite (= x653 x44) x1995 (x2039 x653)))
(define-fun x520 ((x653 Int)) Int (ite (= x2073 x653) x1449 (x1581 x653)))
(define-fun x2127 ((x653 Int)) Int (ite (= x653 x47) x122 (x520 x653)))
(define-fun x514 ((x653 Int)) Int (ite (= x653 x1531) x593 (x2127 x653)))
(define-fun x2024 ((x653 Int)) Int (ite x53 (x1940 x653) (x514 x653)))
(define-fun x1410 ((x653 Int)) Int (ite (= x653 x991) 22140752835961941075817313386879028057460502132199729129551447365926944505856 (x2024 x653)))
(define-fun x963 ((x653 Int)) Int (ite (= x1291 x653) x706 (x1410 x653)))
(define-fun x793 ((x653 Int)) Int (ite (= x1757 x653) 320 (x963 x653)))
(define-fun x1664 ((x653 Int)) Int (ite (= x2021 x653) x1089 (x793 x653)))
(define-fun x688 ((x653 Int)) Int (ite (= x1692 x653) x89 (x1664 x653)))
(define-fun x631 ((x653 Int)) Int (ite (= x653 x602) x500 (x688 x653)))
(define-fun x457 ((x653 Int)) Int (ite (= x1104 x653) x1379 (x631 x653)))
(define-fun x1828 ((x653 Int)) Int (ite (= x653 x1451) x1745 (x457 x653)))
(define-fun x699 ((x653 Int)) Int (ite x431 (x457 x653) (ite x2195 (x631 x653) (ite x1327 (x688 x653) (ite x353 (x1664 x653) (x1828 x653))))))
(define-fun x1805 ((x653 Int)) Int (ite (= x989 x653) 0 (x699 x653)))
(define-fun x424 ((x653 Int)) Int (ite x358 (x699 x653) (x1805 x653)))
(define-fun x1582 ((x653 Int)) Int (ite (= x1146 x653) x955 (x424 x653)))
(define-fun x730 ((x653 Int)) Int (ite (= x653 x2147) x729 (x1582 x653)))
(define-fun x1230 ((x653 Int)) Int (ite (= x653 x1944) x1137 (x730 x653)))
(define-fun x658 ((x653 Int)) Int (ite (= x380 x653) x605 (x1230 x653)))
(define-fun x1078 ((x653 Int)) Int (ite (= x816 x653) 288 (x658 x653)))
(define-fun x629 ((x653 Int)) Int (ite (= x653 x504) x1396 (x1078 x653)))
(define-fun x1641 ((x653 Int)) Int (ite (= x653 x1678) x2134 (x629 x653)))
(define-fun x1331 ((x653 Int)) Int (ite (= x3 x653) x1946 (x1641 x653)))
(define-fun x944 ((x653 Int)) Int (ite (= x653 x1966) x1737 (x1331 x653)))
(define-fun x2118 ((x653 x976)) Int (ite x523 (x934 x653) (ite x689 (x1895 x653) (x934 x653))))
(define-fun x1755 ((x653 x976)) Int (ite x523 (x1452 x653) (ite x689 (x532 x653) (x1452 x653))))
(define-fun x1901 ((x653 x976)) Int (ite x523 (x499 x653) (ite x689 (x1509 x653) (x499 x653))))
(define-fun x675 ((x653 x976)) Int (ite x523 (x775 x653) (ite x689 (x1485 x653) (x775 x653))))
(define-fun x396 ((x653 x976)) Int (ite x523 (x1459 x653) (ite x689 (x692 x653) (x1459 x653))))
(define-fun x265 ((x653 x976)) Int (ite x523 (x765 x653) (ite x689 (x1735 x653) (x765 x653))))
(define-fun x1164 ((x653 x976)) Int (ite x523 (x1869 x653) (ite x689 (x1708 x653) (x1869 x653))))
(define-fun x303 ((x653 x976)) Int (ite x523 (x832 x653) (ite x689 (x970 x653) (x832 x653))))
(define-fun x1873 ((x653 Int)) Int (ite (= x452 x653) x1787 (x944 x653)))
(define-fun x1930 ((x653 Int)) Int (ite x1959 (x944 x653) (ite x918 (x1331 x653) (ite x221 (x1641 x653) (ite x421 (x629 x653) (x1873 x653))))))
(define-fun x497 ((x653 Int)) Int (ite (= x653 x553) 0 (x1930 x653)))
(define-fun x1637 ((x653 Int)) Int (ite x1342 (x1930 x653) (x497 x653)))
(define-fun x1116 ((x653 Int)) Int (ite (= x1525 x653) x695 (x1637 x653)))
(define-fun x1572 ((x653 Int)) Int (ite (= x2071 x653) x1147 (x1116 x653)))
(define-fun x1070 ((x653 Int)) Int (ite (= x1512 x653) x407 (x1572 x653)))
(define-fun x161 ((x653 Int)) Int (ite (= x2164 x653) x1541 (x1070 x653)))
(define-fun x2182 ((x653 Int)) Int (ite (= x653 x413) x280 (x161 x653)))
(define-fun x2064 ((x653 Int)) Int (ite (= x6 x653) x104 (x2182 x653)))
(define-fun x2113 ((x653 Int)) Int (ite x1666 (x2182 x653) (ite x1369 (x161 x653) (ite x1742 (x1070 x653) (ite x686 (x1572 x653) (x2064 x653))))))
(define-fun x584 ((x653 Int)) Int (ite (= x653 x864) 0 (x2113 x653)))
(define-fun x1450 ((x653 Int)) Int (ite x831 (x2113 x653) (x584 x653)))
(define-fun x1888 ((x653 Int)) Int (ite (= x653 x702) (ite x1778 1 0) (x1450 x653)))
(define-fun x1354 ((x653 Int)) Int (ite (= x515 x653) x537 (x1888 x653)))
(define-fun x1820 ((x653 Int)) Int (ite (= x653 x1060) x1311 (x1354 x653)))
(define-fun x459 ((x653 Int)) Int (ite (= x2091 x653) x1725 (x1820 x653)))
(define-fun x1138 ((x653 Int)) Int (ite (= x336 x653) x465 (x459 x653)))
(define-fun x233 ((x653 Int)) Int (ite (= x653 x110) x1233 (x1138 x653)))
(define-fun x985 ((x653 Int)) Int (ite (= x653 x1281) x154 (x233 x653)))
(define-fun x1618 ((x653 Int)) Int (ite (= x568 x653) x837 (x985 x653)))
(define-fun x841 ((x653 Int)) Int (ite (= x875 x653) x235 (x1618 x653)))
(define-fun x2163 ((x653 Int)) Int (ite (= x1508 x653) x1003 (x841 x653)))
(define-fun x1074 ((x653 Int)) Int (ite (= x179 x653) x1314 (x2163 x653)))
(define-fun x1360 ((x653 Int)) Int (ite (and (<= x991 x653) (< x653 (+ 0 x991))) (x1845 (+ 0 (- x653 x991))) (x1074 x653)))
(define-fun x45 ((x653 Int)) Int (ite x523 (x2024 x653) (ite x689 (x1360 x653) (x1074 x653))))
(define-fun x1033 ((x653 x976)) Int (ite x523 (x672 x653) (ite x689 (x1688 x653) (x672 x653))))
(define-fun x1921 ((x653 Int)) Int (ite (= x653 x289) x20 (x45 x653)))
(define-fun x39 ((x653 Int)) Int (ite (= x653 x1791) x966 (x1921 x653)))
(define-fun x1300 ((x653 Int)) Int (ite (and (<= x1766 x653) (< x653 (+ x1766 x966))) (x844 (+ x1439 (- x653 x1766))) (x39 x653)))
(define-fun x2084 ((x653 Int)) Int (ite (= x653 x806) 0 (x1300 x653)))
(define-fun x1016 ((x653 Int)) Int (ite (= x653 x627) x1791 (x2084 x653)))
(define-fun x615 ((x653 Int)) Int (ite x1656 (x1921 x653) (x1016 x653)))
(define-fun x1536 ((x653 Int)) Int (ite (= x1793 x653) x1922 (x615 x653)))
(define-fun x881 ((x653 Int)) Int (ite (= x653 x132) x184 (x1536 x653)))
(define-fun x1538 ((x653 Int)) Int (ite (and (> (+ x563 x184) x653) (<= x563 x653)) (x844 (+ (- x653 x563) x1470)) (x881 x653)))
(define-fun x1098 ((x653 Int)) Int (ite (= x1208 x653) 0 (x1538 x653)))
(define-fun x1561 ((x653 Int)) Int (ite (= x679 x653) x132 (x1098 x653)))
(define-fun x1091 ((x653 Int)) Int (ite (= x726 x653) x467 (x1561 x653)))
(define-fun x2087 ((x653 Int)) Int (ite (and (<= x133 x653) (< x653 (+ x467 x133))) (x844 (+ (- x653 x133) x979)) (x1091 x653)))
(define-fun x911 ((x653 Int)) Int (ite (= x653 x1318) 0 (x2087 x653)))
(define-fun x2166 ((x653 Int)) Int (ite (= x580 x653) x726 (x911 x653)))
(define-fun x1140 ((x653 Int)) Int (ite (= x1911 x653) x2035 (x2166 x653)))
(define-fun x423 ((x653 Int)) Int (ite (= x960 x653) x48 (x1140 x653)))
(define-fun x126 ((x653 Int)) Int (ite (= x653 x1799) x93 (x423 x653)))
(define-fun x741 ((x653 Int)) Int (ite (= x653 x1024) x204 (x126 x653)))
(define-fun x31 ((x653 Int)) Int (ite (= x458 x653) x1914 (x741 x653)))
(define-fun x175 ((x653 Int)) Int (ite (= x624 x653) x512 (x31 x653)))
(define-fun x604 ((x653 Int)) Int (ite (= x2151 x653) x405 (x175 x653)))
(define-fun x66 ((x653 Int)) Int (ite (= x1464 x653) x679 (x604 x653)))
(define-fun x791 ((x653 Int)) Int (ite x909 (x1536 x653) (x66 x653)))
(define-fun x1127 ((x653 Int)) Int (ite (= x2092 x653) x722 (x791 x653)))
(define-fun x1008 ((x653 Int)) Int (ite (= x1486 x653) x888 (x1127 x653)))
(define-fun x1076 ((x653 Int)) Int (ite (= x1878 x653) x1967 (x1008 x653)))
(define-fun x749 ((x653 Int)) Int (ite (= x653 x1367) x1395 (x1076 x653)))
(define-fun x1175 ((x653 Int)) Int (ite (= x653 x1984) x131 (x749 x653)))
(define-fun x630 ((x653 Int)) Int (ite (= x596 x653) x1486 (x1175 x653)))
(define-fun x2188 ((x653 Int)) Int (ite x1934 (x1127 x653) (x630 x653)))
(define-fun x666 ((x653 Int)) Int (ite (= x135 x653) x1462 (x2188 x653)))
(define-fun x1868 ((x653 Int)) Int (ite (= x1483 x653) 96 (x666 x653)))
(define-fun x1912 ((x653 Int)) Int (ite (= x325 x653) x1728 (x1868 x653)))
(define-fun x1224 ((x653 Int)) Int (ite (= x711 x653) x939 (x1912 x653)))
(define-fun x237 ((x653 Int)) Int (ite x1850 (x1912 x653) (x1224 x653)))
(define-fun x1683 ((x653 Int)) Int (ite (= x10 x653) 0 (x237 x653)))
(define-fun x429 ((x653 Int)) Int (ite x1752 (x237 x653) (x1683 x653)))
(define-fun x757 ((x653 Int)) Int (ite (= x176 x653) x1275 (x429 x653)))
(define-fun x663 ((x653 Int)) Int (ite (= x1051 x653) x1780 (x757 x653)))
(define-fun x1197 ((x653 Int)) Int (ite (= x653 x1613) x2180 (x663 x653)))
(define-fun x1939 ((x653 Int)) Int (ite (= x653 x1553) 13116146399946975302596254860212112502091447646307958763727216123866297401344 (x1197 x653)))
(define-fun x657 ((x653 Int)) Int (ite (= x76 x653) x1992 (x1939 x653)))
(define-fun x1562 ((x653 Int)) Int (ite (= x2135 x653) 64 (x657 x653)))
(define-fun x1503 ((x653 Int)) Int (ite (= x296 x653) x1836 (x1562 x653)))
(define-fun x1239 ((x653 Int)) Int (ite (= x697 x653) x1522 (x1503 x653)))
(define-fun x750 ((x653 Int)) Int (ite x1760 (x1503 x653) (x1239 x653)))
(define-fun x1484 ((x653 Int)) Int (ite (= x653 x1062) 0 (x750 x653)))
(define-fun x1079 ((x653 Int)) Int (ite x1961 (x750 x653) (x1484 x653)))
(define-fun x1744 ((x653 Int)) Int (ite (and (< x653 (+ x1553 0)) (>= x653 x1553)) (x1661 (+ 0 (- x653 x1553))) (x1079 x653)))
(define-fun x655 ((x653 Int)) Int (ite x566 (x1744 x653) (x1079 x653)))
(define-fun x190 ((x653 Int)) Int (ite (= x1553 x653) x2050 (x655 x653)))
(define-fun x369 ((x653 Int)) Int (ite (and (>= x653 x1853) (> (+ x2050 x1853) x653)) (x1661 (+ (- x653 x1853) 0)) (x190 x653)))
(define-fun x1929 ((x653 Int)) Int (ite (= x653 x482) x1344 (x369 x653)))
(define-fun x1642 ((x653 x976)) Int (ite x1245 (x396 x653) (ite x566 (x1854 x653) (x396 x653))))
(define-fun x661 ((x653 x976)) Int (ite x1245 (x2118 x653) (ite x566 (x1730 x653) (x2118 x653))))
(define-fun x283 ((x653 x976)) Int (ite x1245 (x1755 x653) (ite x566 (x229 x653) (x1755 x653))))
(define-fun x1229 ((x653 x976)) Int (ite x1245 (x265 x653) (ite x566 (x680 x653) (x265 x653))))
(define-fun x1040 ((x653 Int)) Int (ite (= x653 x723) x1883 (x1929 x653)))
(define-fun x65 ((x653 Int)) Int (ite x797 (x1929 x653) (x1040 x653)))
(define-fun x1244 ((x653 Int)) Int (ite (= x298 x653) 0 (x65 x653)))
(define-fun x309 ((x653 Int)) Int (ite x1245 (x2188 x653) (ite x1729 (x65 x653) (x1244 x653))))
(define-fun x574 ((x653 x976)) Int (ite x1245 (x1033 x653) (ite x566 (x603 x653) (x1033 x653))))
(define-fun x1909 ((x653 Int)) Int (ite (= x314 x653) 2428475159928928253380189918045730325133814103720850528466242065960167014400 (x309 x653)))
(define-fun x1247 ((x653 Int)) Int (ite (= x653 x1702) x2031 (x1909 x653)))
(define-fun x588 ((x653 Int)) Int (ite (= 128 x653) 89953063794570797914675343120038501642627609741519254829220540789936042803200 (x346 x653)))
(define-fun x1548 ((x653 Int)) Int (ite (= 132 x653) x1038 (x588 x653)))
(define-fun x612 ((x653 Int)) Int (ite (= x653 164) x946 (x1548 x653)))
(define-fun x1698 ((x653 Int)) Int (ite (= x653 x314) x542 (x1247 x653)))
(define-fun x743 ((x653 Int)) Int (ite (= x1406 x653) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1698 x653)))
(define-fun x432 ((x653 Int)) Int (ite (= x653 x1201) x2059 (x743 x653)))
(define-fun x163 ((x653 Int)) Int (ite (= x653 x1406) x1765 (x432 x653)))
(define-fun x1056 ((x653 Int)) Int (ite (= x653 x964) x662 (x163 x653)))
(define-fun x531 ((x653 Int)) Int (ite (= x653 x704) x1298 (x1056 x653)))
(define-fun x1054 ((x653 Int)) Int (ite (= x653 x1606) x1554 (x531 x653)))
(define-fun x738 ((x653 Int)) Int (ite (= x653 x882) x550 (x1054 x653)))
(define-fun x284 ((x653 Int)) Int (ite (= x653 x1790) 13116146399946975302596254860212112502091447646307958763727216123866297401344 (x738 x653)))
(define-fun x848 ((x653 Int)) Int (ite (= x30 x653) x1684 (x284 x653)))
(define-fun x1179 ((x653 Int)) Int (ite (= x653 x877) 64 (x848 x653)))
(define-fun x1965 ((x653 Int)) Int (ite (= x653 x174) x1631 (x1179 x653)))
(define-fun x1668 ((x653 Int)) Int (ite (= x653 x1177) x1881 (x1965 x653)))
(define-fun x1727 ((x653 Int)) Int (ite (= x653 x1974) x2072 (x1668 x653)))
(define-fun x737 ((x653 Int)) Int (ite (= x653 x1363) x1005 (x1727 x653)))
(define-fun x1540 ((x653 Int)) Int (ite (= x653 x1248) x2168 (x737 x653)))
(define-fun x157 ((x653 Int)) Int (ite x1734 (x737 x653) (ite x2017 (x1727 x653) (ite x920 (x1668 x653) (ite x381 (x1965 x653) (x1540 x653))))))
(define-fun x694 ((x653 Int)) Int (ite (= x258 x653) 0 (x157 x653)))
(define-fun x842 ((x653 Int)) Int (ite x435 (x157 x653) (x694 x653)))
(define-fun x1017 ((x653 Int)) Int (ite (and (< x653 (+ x1790 0)) (>= x653 x1790)) (x62 (+ 0 (- x653 x1790))) (x842 x653)))
(define-fun x892 ((x653 Int)) Int (ite x827 (x1017 x653) (x842 x653)))
(define-fun x1840 ((x653 Int)) Int (ite (= x1790 x653) x1154 (x892 x653)))
(define-fun x1804 ((x653 Int)) Int (ite (and (>= x653 x682) (< x653 (+ x682 x1154))) (x62 (+ (- x653 x682) 0)) (x1840 x653)))
(define-fun x581 ((x653 Int)) Int (ite (= x653 x259) x75 (x1804 x653)))
(define-fun x410 ((x653 Int)) Int (ite (= x653 x1621) x61 (x581 x653)))
(define-fun x1090 ((x653 Int)) Int (ite (= x528 x653) x884 (x410 x653)))
(define-fun x719 ((x653 Int)) Int (ite (= x1236 x653) x1672 (x1090 x653)))
(define-fun x1474 ((x653 x976)) Int (ite x827 (x1775 x653) (x661 x653)))
(define-fun x1305 ((x653 x976)) Int (ite (= (x1546 x662) x653) x2001 (x1474 x653)))
(define-fun x2013 ((x653 x976)) Int (ite (= x653 (x1546 x754)) x1785 (x1305 x653)))
(define-fun x509 ((x653 x976)) Int (ite (= (x1546 x754) x653) x143 (x2013 x653)))
(define-fun x1343 ((x653 x976)) Int (ite (= (x1546 x662) x653) x511 (x509 x653)))
(define-fun x2006 ((x653 x976)) Int (ite x1715 (x1474 x653) (ite x804 (ite x1044 (x1474 x653) (ite x1983 (x2013 x653) (x1343 x653))) (x1474 x653))))
(define-fun x1833 ((x653 Int)) Int (ite (= x653 x530) x2079 (x719 x653)))
(define-fun x734 ((x653 Int)) Int (ite x1065 (x719 x653) (ite x1268 (x1090 x653) (ite x1114 (x410 x653) (ite x925 (x581 x653) (x1833 x653))))))
(define-fun x1215 ((x653 Int)) Int (ite (= x653 x282) 0 (x734 x653)))
(define-fun x120 ((x653 Int)) Int (ite x585 (x734 x653) (x1215 x653)))
(define-fun x614 ((x653 Int)) Int (ite (= x653 x430) 63696388041471822930743579425831364866188647584567569692446183701643513561088 (x120 x653)))
(define-fun x821 ((x653 Int)) Int (ite (= x981 x653) x286 (x614 x653)))
(define-fun x874 ((x653 Int)) Int (ite (= x1776 x653) x1298 (x821 x653)))
(define-fun x1212 ((x653 Int)) Int (ite (= x653 x227) x436 (x874 x653)))
(define-fun x2098 ((x653 x976)) Int (ite x566 (x845 x653) (x675 x653)))
(define-fun x437 ((x653 x976)) Int (ite x827 (x1746 x653) (ite x1245 (x675 x653) (x2098 x653))))
(define-fun x1497 ((x653 Int)) Int (ite (= x653 128) 89953063794570797914675343120038501642627609741519254829220540789936042803200 (x690 x653)))
(define-fun x79 ((x653 Int)) Int (ite (= x653 132) x1619 (x1497 x653)))
(define-fun x1973 ((x653 Int)) Int (ite (= 164 x653) x185 (x79 x653)))
(define-fun x1827 ((x653 x976)) Int (ite x827 (x1644 x653) (x1229 x653)))
(define-fun x1924 ((x653 Int)) Int (ite (= 128 x653) x115 (x1973 x653)))
(define-fun x1919 ((x653 Int)) Int (ite x388 (x1973 x653) (x1924 x653)))
(define-fun x1010 ((x653 Int)) Int (ite (= x1671 x653) x1772 (x1919 x653)))
(define-fun x2069 ((x653 Int)) Int (ite (= x653 x1256) x231 (x1010 x653)))
(define-fun x1991 ((x653 Int)) Int (ite (= x653 x67) x522 (x2069 x653)))
(define-fun x696 ((x653 Int)) Int (ite (= x1075 x653) x273 (x1991 x653)))
(define-fun x1957 ((x653 Int)) Int (ite x849 (x1991 x653) (ite x434 (x2069 x653) (ite x2205 (x1010 x653) (ite x1374 (x1919 x653) (x696 x653))))))
(define-fun x1181 ((x653 Int)) Int (ite (= x1420 x653) 0 (x1957 x653)))
(define-fun x1686 ((x653 Int)) Int (ite x1237 (x1957 x653) (x1181 x653)))
(define-fun x1372 ((x653 x976)) Int (ite x827 (x263 x653) (x1642 x653)))
(define-fun x919 ((x653 x976)) Int (ite x566 (x790 x653) (x1901 x653)))
(define-fun x24 ((x653 x976)) Int (ite x827 (x1877 x653) (ite x1245 (x1901 x653) (x919 x653))))
(define-fun x357 ((x653 x976)) Int (ite (= x19 x653) x2077 (x24 x653)))
(define-fun x809 ((x653 x976)) Int (ite x566 (x22 x653) (x1164 x653)))
(define-fun x2149 ((x653 x976)) Int (ite x827 (x1943 x653) (ite x1245 (x1164 x653) (x809 x653))))
(define-fun x1786 ((x653 x976)) Int (ite (= x653 x549) x2016 (x2149 x653)))
(define-fun x914 ((x653 x976)) Int (ite x566 (x1731 x653) (x303 x653)))
(define-fun x747 ((x653 x976)) Int (ite x827 (x1586 x653) (ite x1245 (x303 x653) (x914 x653))))
(define-fun x873 ((x653 Int)) Int (ite (= x653 128) x1019 (x192 x653)))
(define-fun x906 ((x653 Int)) Int (ite (= 0 x653) x2023 (x1583 x653)))
(define-fun x641 ((x653 Int)) Int (ite x2040 (x1583 x653) (x906 x653)))
(define-fun x2184 ((x653 Int)) Int (ite x1044 (x1141 x653) (x641 x653)))
(define-fun x1976 ((x653 Int)) Int (ite (= x653 x1214) x2060 (x908 x653)))
(define-fun x150 ((x653 Int)) Int (ite (and (< x653 (+ x180 x2060)) (>= x653 x180)) (x2184 (+ 0 (- x653 x180))) (x789 x653)))
(define-fun x1094 ((x653 Int)) Int (ite x1445 (x789 x653) (x150 x653)))
(define-fun x241 ((x653 Int)) Int (ite x1445 (x908 x653) (x1976 x653)))
(define-fun x1518 ((x653 Int)) Int (ite (= x653 x1249) x456 (x760 x653)))
(define-fun x2167 ((x653 Int)) Int (ite (= x683 x653) x662 (x1518 x653)))
(define-fun x714 ((x653 Int)) Int (ite (= x653 x87) x1788 (x2167 x653)))
(define-fun x1376 ((x653 Int)) Int (ite (= x342 x653) x995 (x714 x653)))
(define-fun x659 ((x653 Int)) Int (ite (= 128 x653) x1188 (x612 x653)))
(define-fun x2000 ((x653 Int)) Int (ite x961 (x612 x653) (x659 x653)))
(define-fun x2009 ((x653 Int)) Int (ite (= x653 0) x542 (x290 x653)))
(define-fun x2194 ((x653 Int)) Int (ite (= 0 x653) x1765 (x1391 x653)))
(define-fun x1119 ((x653 Int)) Int (ite (= x653 0) x1188 (x559 x653)))
(define-fun x543 ((x653 Int)) Int (ite (= x653 0) x115 (x1953 x653)))
(define-fun x1353 ((x653 Int)) Int (ite x388 (x1953 x653) (x543 x653)))
(define-fun x1476 ((x653 Int)) Int (ite (= x1950 x653) x609 (x1782 x653)))
(define-fun x1994 ((x653 Int)) Int (ite x216 (x192 x653) (ite x2022 (x873 x653) (x192 x653))))
(define-fun x90 ((x653 x976)) Int (ite (= x653 x647) x1217 (x1372 x653)))
(define-fun x1549 ((x653 Int)) Int (ite (= x653 128) x100 (x1994 x653)))
(define-fun x2067 ((x653 Int)) Int (ite (= x653 128) (ite true 1 0) (x1549 x653)))
(define-fun x619 ((x2145 Int)) Bool (=> (and (not (= x2145 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x2145 55253086691344412491249731323735809531556945173834312332507302207468853002240)) (not (= 1008072988 x2145)) (not (= x2145 1889567281)) (not (= x2145 115792089237316195423570985008687907853269984665640)) (not (= 2835717307 x2145)) (not (= x2145 2428475159928928253380189918045730325133814103720850528466242065960167014400)) (not (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2145)) (not (= 1461501637330902918203684832716283019655932542975 x2145)) (not (= x2145 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x2145 428079936)) (not (= 1461501637330902918203684832716283019655932542976 x2145)) (not (= x2145 1000000000000000000000000000)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2145)) (not (= x2145 2307130307)) (not (= x2145 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x2145 265030696)) (not (= 599290589 x2145)) (not (= x2145 1099511627776)) (not (= x2145 3336544575)) (not (= 1099511627775 x2145)) (not (= x2145 63696388041471822930743579425831364866188647584567569692446183701643513561088)) (not (= x2145 1818647125)) (not (= 89953063794570797914675343120038501642627609741519254829220540789936042803200 x2145)) (not (= x2145 65535)) (> x2145 10000) (not (= 65536 x2145)) (not (= x2145 90077150)) (not (= 1631253430 x2145)) (not (= 18446744073709551615 x2145)) (not (= 13116146399946975302596254860212112502091447646307958763727216123866297401344 x2145)) (not (= 2362630343 x2145)) (not (= x2145 4294967296)) (not (= 404098525 x2145)) (not (= 1997499061 x2145)) (not (= 66268296141940672851042108147304593538321322149885339258387047461996478413388 x2145)) (not (= 31536000 x2145)) (not (= x2145 418493994)) (not (= x2145 1949782873)) (not (= x2145 2446411860)) (not (= 452312848583266388373324160190187140051835877600158453279131187530910662655 x2145)) (not (= 1703538655 x2145)) (not (= 33540519 x2145)) (not (= 22140752835961941075817313386879028057460502132199729129551447365926944505856 x2145)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2145)) (not (= x2145 791671133))) (not ((_ is x141) (x1546 x2145)))))
(assert (= (and (not x2159) x1591) x1065))
(assert (x1920 x1870))
(assert (x1920 x2023))
(assert (x1264 x1894))
(assert (x1920 x1975))
(assert (=> (>= 10000 x652) (= (x141 x652) (x1546 x652))))
(assert (x1920 x721))
(assert (x1920 x679))
(assert (x1920 x339))
(assert (= (or x381 x472 x920 x2017 x1734) x1954))
(assert (x1920 x52))
(assert (x1920 x2065))
(assert (x1920 x1527))
(assert (x1264 x2108))
(assert (x619 x662))
(assert (x1920 x922))
(assert (= (and x1614 x1436) x1758))
(assert (= (and x59 x311) x127))
(assert (= (and x1764 x1225) x382))
(assert (= (and x1402 (not x1535)) x1369))
(assert (x1920 x960))
(assert (x619 x1132))
(assert (x1264 x1589))
(assert (x1920 x591))
(assert (= (and (not x916) x411) x421))
(assert (x1920 x518))
(assert (x1920 x727))
(assert (x1920 x1458))
(assert (= (and x1502 x395) x2028))
(assert (= (and x1007 x507) x840))
(assert (x1920 x1640))
(assert (x1920 x107))
(assert (=> (>= 10000 x1320) (= (x141 x1320) (x1546 x1320))))
(assert (x1920 x965))
(assert (x1920 x496))
(assert (x1920 x1985))
(assert (x619 x1427))
(assert (x1920 x498))
(assert (x1920 x1449))
(assert (= (or x415 x689) x572))
(assert (= x1601 (=> (and (= (= x220 0) x1046) (or (and (and (= x2060 x15) (= x155 x220)) (not x1046)) (and x1046 (and (= (x2013 (x1546 x754)) x952) (= x952 x143) (= x2060 x15) (= x155 x220) (= x511 (x509 (x1546 x662))) (= 0 x748) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x748 x511)))))) x46)))
(assert (x1920 x18))
(assert (x1920 x958))
(assert (= x1948 (and x2095 x152)))
(assert (x1920 x15))
(assert (= (x141 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1546 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x1855 (=> (and (= 0 x1514) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x812) x1936) (not (> x777 x479)) (= (ite x997 1 0) x1514) (= (x534 (+ x2081 x780)) x777) (= x239 (x534 (+ x780 x506))) (= x1927 (x534 (+ x1493 x418))) (= (< x1927 x418) x1159) (= (x844 x1169) x780) (or (and (> x805 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x805) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479)) (< x805 x479))) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1564) x1493) (= (not (< x644 x843)) x1166) (not (> x1874 18446744073709551615)) (= x1564 (x534 (+ x1252 31))) (= x1169 (x534 (+ x1890 x1874))) (= x644 (x534 (+ x1890 32))) (= (x534 (+ x1169 32)) x2081) (= (x534 (+ x418 32)) x506) (= x1874 (x844 x1890)) (= x805 (x534 (+ 31 x1169))) (= x812 (x534 (+ x780 31))) (not (< 18446744073709551615 x780)) (= x272 (< 18446744073709551615 x1927)) (= (or x272 x1159) x997) (= (x534 (+ x1936 32)) x1252)) (and x1166 (=> (= x94 x1927) x2100)))))
(assert (x1920 x991))
(assert (x1920 x258))
(assert (x1920 x287))
(assert (x1920 x505))
(assert (= (and x1440 (not x590)) x822))
(assert (x2075 x1564))
(assert (x1264 1099511627775))
(assert (x1920 x1568))
(assert (= x935 (=> (and (= x771 x1092) (= x234 0)) x1543)))
(assert (= (and x1012 x1841) x95))
(assert (x1920 x1177))
(assert (x1920 x318))
(assert (= x1666 (and (not x1007) x507)))
(assert (x1920 x203))
(assert (x1920 x806))
(assert (x1920 x994))
(assert (= (x1762 x1160) 0))
(assert (x1920 x713))
(assert (= (=> (and (= (not (> x1147 128)) x1751) (= (x2182 x591) x104) (= x6 (x534 (+ 96 x992))) (= x591 (x534 (+ 96 x620)))) (and x1751 (=> (= x1389 128) x1153))) x1908))
(assert (x1920 x1093))
(assert (x1920 x489))
(assert (x1920 x1365))
(assert (x1920 x784))
(assert (x1920 x1023))
(assert (x1920 x1397))
(assert (x1920 x138))
(assert (= x1653 (and x1658 x1421)))
(assert (x1920 x341))
(assert (= (and (not x508) x599) x1838))
(assert (x1920 x2056))
(assert (= (x141 1461501637330902918203684832716283019655932542976) (x1546 1461501637330902918203684832716283019655932542976)))
(assert (x1920 x2091))
(assert (x1920 x153))
(assert (x1920 x2014))
(assert (= 0 (x1762 x1219)))
(assert (x1920 x337))
(assert (= (=> (and (= x1608 100) (= (x351 (x1546 x662)) x783) (= x891 (x193 (- x1608 4))) (not (= 1631253430 x1306)) (not (= 1949782873 x1306)) (= (or (> x891 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x891)) (< x891 96))) x2025) (> 2446411860 x1306) (= (x193 (- x1524 x430)) x1231) (= 63696388041471822930743579425831364866188647584567569692446183701643513561088 x1425) (= x1788 x1298) (= x1377 x436) (> x1825 0) (not (> 4 x1608)) (not (= x1306 1889567281)) (= (x534 (+ x430 4)) x981) (not (= x1306 1818647125)) (= x286 (x348 1461501637330902918203684832716283019655932542975 x212)) (= (x534 (+ 32 x981)) x1776) (= x1608 x1231) (= (x534 (+ x1776 32)) x227) (< x1306 2835717307) (= 2362630343 x1306) (not (< x1306 1631253430)) (not (= x783 0)) (= x456 x286) (= (x351 (x1546 x662)) x1825) (= (x534 (+ x981 96)) x1524)) (and (=> (and (not x2025) (and (= true x1756) (= x456 x38))) (and (=> (and x1756 (and (<= x868 255) (= x1368 (x267 (x1546 66268296141940672851042108147304593538321322149885339258387047461996478413388) (x141 0) 0)) (= x1747 x1788) (>= x868 0) (= x868 (x437 x1029)) (= (> x868 0) x218) (= (x267 (x1546 x652) x1368 0) x1029) (< x868 256) (= x685 x1377))) (and (=> (not x218) x71) (=> (and x218 (and (<= 0 x1277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277) (= (< x226 x1277) x370))) (and (=> (and (and (and (> 1461501637330902918203684832716283019655932542976 x55) (>= x1619 0) (= (x193 (- x226 x1277)) x316) (= 128 x399) (>= x55 0) (>= 1461501637330902918203684832716283019655932542975 x55) (<= x1619 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x17 (= x55 x1132)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x185) (>= x185 0)) (and x17 (and (< 0 x1750) (= 89953063794570797914675343120038501642627609741519254829220540789936042803200 x2049) (= 68 x721) (not (= 1997499061 x540)) (= 68 x721) (= 3336544575 x540) (= x1619 x1985) (= (x351 (x1546 x1132)) x1750) (= x1130 x185) (not (= 1008072988 x540)) (not (= x540 1703538655)) (= x1680 (x193 (- x721 4))) (= (or (> x1680 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1680 64) (= (<= x1680 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x905) (not (< x721 4))))) (not x370)) (and (=> (and (not x905) (= x312 (= 0 x1619))) (and (=> (and (= (< x1985 x1130) x508) (not x312)) (and (=> x508 x935) (=> (and (and (= (x193 (- x1985 x1130)) x712) (= x146 (< 115792089237316195423570985008687907853269984665640 x712)) (= x147 (= (ite x146 1 0) 0))) (not x508)) (and (=> (not x147) x935) (=> (and (and (= x1528 (mod (* x712 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x54 (div x1528 x1985)) (= (> x1393 x54) x477)) x147) (and (=> (and (= (> x334 x1463) x228) x477) (and (=> x228 x935) (=> (and (not x228) (and (= (x193 (- x1463 x334)) x293) (= x1796 (= x293 0)) (= x1701 (ite (< x1849 x54) 1 0)) (= (ite (not x1796) 1 0) x1050) (= x205 (x348 x1050 x1701)) (= x1849 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x293)) (= x1977 (= 0 x205)))) (and (=> (not x1977) x935) (=> (and x1977 (and (= x861 (mod (* x293 x54) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x1393 0) x671))) (and (=> (and x671 (and (= x152 (> x334 x1095)) (= x1095 (x193 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1238))) (= (div x861 x1393) x1238))) (and (=> (and (and (= x710 x115) (= (x534 (+ x334 x1238)) x710)) (not x152)) x1345) (=> x152 x935))) (=> (not x671) x935))))))) (=> (and (= (< 1000000000000000000000000000 x1393) x8) (not x477)) (and (=> x8 x935) (=> (and (and (= (> x1393 x54) x1615) (= x1481 (= 1000000000000000000000000000 x1393)) (= x1798 (x193 (- 1000000000000000000000000000 x1393)))) (not x8)) (and (=> x1615 x935) (=> (and (not x1615) (and (= x1651 (x193 (- x54 x1393))) (= (< x921 x1463) x1846))) (and (=> (and (and (= x83 (= 0 x1144)) (= (x348 x1712 x252) x539) (= (x193 (- x921 x1463)) x1144) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1144) x339) (= x252 (ite (< x339 x1651) 1 0)) (= (= x539 0) x292) (= x1712 (ite (not x83) 1 0))) (not x1846)) (and (=> (not x292) x935) (=> (and (= x1938 (mod (* x1651 x1144) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x292) (and (=> x1481 x935) (=> (and (not x1481) (and (= x1386 (< x1630 x1463)) (= x965 (div x1938 x1798)) (= x1630 (x193 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x965))))) (and (=> x1386 x935) (=> (and (not x1386) (and (= (x534 (+ x965 x1463)) x1523) (= x115 x1523))) x1345))))))) (=> x1846 x935))))))))))))) (=> (and x312 (= x115 x334)) x1345))) (=> x905 x935))) (=> (and (= 0 x223) x370) x183))))) (=> (and (= x223 0) (not x1756)) x183))) (=> (and x2025 (= 0 x517)) x2146))) x2020))
(assert (x1920 x1003))
(assert (x1920 x1862))
(assert (x1920 x74))
(assert (=> (<= x633 10000) (= (x141 x633) (x1546 x633))))
(assert (x1920 x1322))
(assert (x1264 x1588))
(assert (x1920 x1750))
(assert (x1920 x617))
(assert (x1920 x1710))
(assert (= x1860 (or x1103 (and x333 (not x1387)))))
(assert (= x1461 (or x2186 x1961)))
(assert (= (=> (and (= (> x1861 x1728) x880) (or (not x880) (and (= (x534 (+ x1728 x271)) x10) x880))) x936) x1963))
(assert (= x1128 (and x1058 x567)))
(assert (x1920 x863))
(assert (x1920 x1792))
(assert (x1920 x1463))
(assert (x1920 x1050))
(assert (x1920 x802))
(assert (=> (<= x456 10000) (= (x141 x456) (x1546 x456))))
(assert (= (and x1312 (not x2104)) x365))
(assert (x1920 x1005))
(assert (x1920 x248))
(assert (= (or x1882 x895 x121) x1559))
(assert (x619 x633))
(assert (= (and x2203 (not x1259)) x1382))
(assert (x1920 x1311))
(assert (x1920 x461))
(assert (x1920 x650))
(assert (x1920 x1639))
(assert (= (=> (and (= x478 (= 0 x304)) (or x478 (not x478))) x1227) x2033))
(assert (x2075 x1501))
(assert (x1920 x1933))
(assert (x2075 x52))
(assert (x1920 x907))
(assert (= (and x1020 (not x17)) x266))
(assert (x1920 x1396))
(assert (x1920 x340))
(assert (= 0 (x1762 x767)))
(assert (x2075 x828))
(assert (x1920 x1320))
(assert (x1920 x105))
(assert (= (and x1591 x2159) x705))
(assert (= x411 (or x358 x1629)))
(assert (x1920 x2106))
(assert (= (or x1065 x705 x1268 x925 x1114) x1614))
(assert (x1920 x820))
(assert (= x2185 (and x988 (not x80))))
(assert (= (and (not x684) x1980) x1044))
(assert (x1920 x2062))
(assert (x1920 x257))
(assert (x1920 x159))
(assert (= x731 (=> (and (= (x534 (+ 32 x1486)) x1878) (= x1984 (x534 (+ 32 x1367))) (= (x534 (+ x1296 32)) x1196) (= (< 18446744073709551615 x948) x871) (= x1367 (x534 (+ x1878 32))) (= x230 (x534 (+ x1771 32))) (= x898 (not (> x2074 x1187))) (= x1187 (x534 (+ x230 32))) (= x948 (x534 (+ x1486 128))) (= x1395 (x844 x1771)) (not (or (and (> 128 x1610) (= (<= x1610 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1610))) (= (x844 x1296) x888) (= x1771 (x534 (+ 32 x1196))) (= (or x361 x871) x2198) (= x1967 (x844 x1196)) (= x361 (< x948 x1486)) (= 0 x1399) (>= 255 x1967) (= (x844 x230) x131) (= x1610 (x193 (- x479 x1296))) (<= x888 452312848583266388373324160190187140051835877600158453279131187530910662655) (= x1399 (ite x2198 1 0))) (and x898 (=> (= x1051 x948) x839)))))
(assert (x2075 x1430))
(assert (x1920 x865))
(assert (= (and (not x1658) x1421) x1168))
(assert (x1920 x1492))
(assert (x1920 x1072))
(assert (x1920 x1198))
(assert (= 0 (x1762 x2063)))
(assert (x1920 x227))
(assert (x1920 x1794))
(assert (= x1657 (and x693 x1158)))
(assert (x1920 x1881))
(assert (= (=> (and (= x271 x711) (= (x1912 x1222) x939) (= (not (< 32 x1728)) x544) (= x1222 x1592)) (and x544 (=> (= 32 x1861) x1963))) x118))
(assert (x1920 x1204))
(assert (= x1049 (and x466 (not x477))))
(assert (x1920 x2176))
(assert (x1920 x1598))
(assert (x1920 x470))
(assert (x1920 x2021))
(assert (= (+ 1 (x1348 x950)) (x1348 (x1184 x950 1))))
(assert (= x1446 (and x422 (not x1457))))
(assert (x1920 x598))
(assert (x1920 x1662))
(assert (x1920 x1430))
(assert (x1920 x678))
(assert (x1920 x2174))
(assert (= x415 (and x60 (not x834))))
(assert (x1920 x812))
(assert (= x101 (or x1150 x1163)))
(assert (x1264 x307))
(assert (= (x1762 x882) 0))
(assert (x1920 x1772))
(assert (= x53 (and x1158 (not x693))))
(assert (x1920 x644))
(assert (= x1733 (=> (and (= x470 (x844 x733)) (= (or x2029 x1108) x606) (= (< x593 x281) x1108) (= x733 (x534 (+ x1915 x1287))) (= x1287 (x844 x1118)) (= x1431 (x534 (+ x1366 32))) (not (< x479 x1605)) (= x2029 (> x593 18446744073709551615)) (= (x534 (+ x281 32)) x1531) (= x1322 (ite x606 1 0)) (= (< x1468 x1605) x693) (= (x534 (+ x733 31)) x196) (= x1949 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x785)) (not (> x470 18446744073709551615)) (= x1061 (mod (* x470 128) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1366 (mod (* x470 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1468 (x534 (+ 32 x733))) (= (x534 (+ x1468 x1061)) x1605) (= (x534 (+ x1949 x281)) x593) (or (and (= (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x196)) (< x196 x479)) (and (> x196 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x785 (x534 (+ 31 x1431))) (not (< 18446744073709551615 x1287)) (= 0 x1322)) (and (=> x693 x445) (=> (and (= x991 x593) (not x693)) x1157)))))
(assert (x1920 x1578))
(assert (= x2019 (or x795 x1752)))
(assert (x1920 x1346))
(assert (x2075 x2139))
(assert (x1920 x43))
(assert (x1920 x61))
(assert (x1920 x2046))
(assert (x1920 x1118))
(assert (= (and x1537 x1255) x1624))
(assert (= (and x466 x477) x773))
(assert (x1264 x902))
(assert (x1920 x552))
(assert (x1920 x386))
(assert (= (x141 2428475159928928253380189918045730325133814103720850528466242065960167014400) (x1546 2428475159928928253380189918045730325133814103720850528466242065960167014400)))
(assert (= x577 (x1348 (x1546 x577))))
(assert (x1920 x1739))
(assert (x1920 x1205))
(assert (x1920 x580))
(assert (x1920 x2044))
(assert (= (=> (and (= x1223 (= 0 x2058)) (or x1223 (not x1223))) x2068) x1282))
(assert (x1920 x1592))
(assert (x1920 x632))
(assert (x1920 x1853))
(assert (x1920 x1258))
(assert (x1920 x977))
(assert (x1264 x2139))
(assert (x1920 x969))
(assert (x1920 x2071))
(assert (= (and x717 (not x751)) x1114))
(assert (x1264 18446744073709551615))
(assert (= (x1348 (x1184 x1186 1)) (+ 1 (x1348 x1186))))
(assert (x1264 x327))
(assert (x1920 x1547))
(assert (x1920 x2124))
(assert (x1920 x1866))
(assert (= (and (not x1557) x1371) x2129))
(assert (= x1001 (=> (and (= x1560 0) (= x50 (or x255 x443)) (= x1933 (x534 (+ x43 32))) (= (ite x50 1 0) x1560) (= (x534 (+ x1111 32)) x525) (= (< 18446744073709551615 x363) x255) (= x26 (x534 (+ x397 32))) (= (x844 x397) x393) (not (> x1045 18446744073709551615)) (= (x534 (+ x1933 x1045)) x217) (= (x534 (+ x1059 x43)) x363) (= x213 (not (> x940 x26))) (= x1059 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2057)) (or (and (= (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1243)) (> x479 x1243)) (and (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1243))) (not (> x1687 x479)) (not (> x393 18446744073709551615)) (= x1045 (x844 x2070)) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1430) x1111) (= x443 (< x363 x43)) (= x2057 (x534 (+ 31 x525))) (= (x534 (+ x1045 x2161)) x1687) (= (x534 (+ x393 x397)) x2070) (= (x534 (+ 31 x2070)) x1243) (= (x534 (+ x2070 32)) x2161) (= (x534 (+ 31 x1045)) x1430)) (and (=> (= x1455 x363) x366) x213))))
(assert (= x2030 (and x56 x2066)))
(assert (= (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x928 x1066)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x931) (= x344 (x1698 x314)) (not x1999) (<= 0 x1952) (= x475 x1454) (not x1084) (= x1905 (x1184 x541 1)) (< (+ 1000000000000000000000000000 x1454) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x193 (- x1292 x1406)) x798) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1952) (= (x1229 x1905) x931) (= (= x662 x364) x1225) (= (= 0 x1634) x1084) (<= 0 x931) (= x1454 (div x1341 31536000)) (< (* x931 x2054) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1341 (* x928 x1066)) (= x542 (div x1189 x57)) (= x1406 (x534 (+ x314 32))) (= x1189 (* x2054 x931)) (< (* x1952 x480) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x364 (x348 1461501637330902918203684832716283019655932542975 x12)) (= x480 (+ x384 x475)) (= (x534 (+ 4 x1406)) x1201) (= x1066 (x2000 128)) (= x116 (* x480 x1952)) (< 0 x57) (= (x534 (+ 32 x1201)) x1292) (= x2054 (div x116 1000000000000000000000000000)) (= x541 (x267 (x1546 x1427) (x141 15) 0)) (= x2059 (x348 1461501637330902918203684832716283019655932542975 x212)) (= x1999 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x770)) (< x770 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x770))) (= x384 1000000000000000000000000000)) (and x1225 (and (or (and (and (= x1298 x162) (= x968 x436) (= (x193 (- x344 x162)) x968) (not (< x344 x162))) x494) (and (not x494) (and (= 0 x436) (= x1298 x344)))) (and (= (x351 (x1546 x662)) x1) (not (= 1818647125 x1077)) (= x1077 1889567281) (= (x534 (+ 32 x1406)) x1606) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1765) (= x1739 x798) (= x2138 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x193 (- x1739 4)) x1093) (= x1765 (x1642 x186)) (< x1077 2835717307) (>= 1461501637330902918203684832716283019655932542975 x607) (not (> 4 x1739)) (= x1971 x607) (>= x1765 0) (= (x163 x1406) x162) (not (< x1077 1631253430)) (= (x267 (x1546 x607) (x141 1) 0) x186) (= x1739 36) (not (= 1631253430 x1077)) (= (< x162 x344) x494) (= x1567 (or (> x1093 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1093) true) (< x1093 32)))) (> x1 0) (> 2446411860 x1077) (= x607 x2059) (not x1567))))) x1942) x927))
(assert (x1920 x2035))
(assert (x619 x652))
(assert (= (=> (and (= x1092 32) (= x234 1)) x1543) x1345))
(assert (x1920 x51))
(assert (x1920 x132))
(assert (x1920 x1136))
(assert (= x988 (and x365 x796)))
(assert (= x633 (x1348 (x1546 x633))))
(assert (= x794 (and x910 x1273)))
(assert (= 2446411860 (x1348 (x141 2446411860))))
(assert (x1920 x191))
(assert (= (x141 63696388041471822930743579425831364866188647584567569692446183701643513561088) (x1546 63696388041471822930743579425831364866188647584567569692446183701643513561088)))
(assert (x1920 x1891))
(assert (x1264 x406))
(assert (x1920 x1988))
(assert (x1920 x1364))
(assert (= 66268296141940672851042108147304593538321322149885339258387047461996478413388 (x1348 (x1546 66268296141940672851042108147304593538321322149885339258387047461996478413388))))
(assert (= (x141 4294967296) (x1546 4294967296)))
(assert (x1920 x89))
(assert (x1920 x1525))
(assert (x2075 x1145))
(assert (x1920 x1448))
(assert (x1920 x2109))
(assert (= (x1348 (x141 1889567281)) 1889567281))
(assert (x1920 x776))
(assert (x1920 x1780))
(assert (x1920 x1208))
(assert (x1920 x1605))
(assert (x1920 x1519))
(assert (x1920 x854))
(assert (x1264 x29))
(assert (x1920 x55))
(assert (= (x141 1889567281) (x1546 1889567281)))
(assert (x1920 x1129))
(assert (x1920 x1187))
(assert (x1920 x1152))
(assert (x1491 x288 x984))
(assert (x1920 x877))
(assert (x1920 x1788))
(assert (x1920 x1995))
(assert (x1920 x1574))
(assert (x1920 x1431))
(assert (x1920 x2121))
(assert (x1920 x748))
(assert (x1920 x271))
(assert (x1920 x1253))
(assert (= (x1762 x1544) 0))
(assert (x1920 x716))
(assert (x1920 x1910))
(assert (x1920 x1246))
(assert (= (x1762 x1133) 0))
(assert (x1920 x1599))
(assert (= (x1762 x1136) 0))
(assert (x1920 x204))
(assert (= 0 (x1762 x1695)))
(assert (x1920 x36))
(assert (x1920 x885))
(assert (= x1882 (and x1030 (not x1918))))
(assert (= x1403 (and (not x1012) x1841)))
(assert (= x2195 (and (not x1265) x987)))
(assert (x1920 x728))
(assert (x1920 x1146))
(assert (= x1227 (=> (and (= x767 (x534 (+ x1822 x682))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x438) (<= x2027 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2027 x438)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x438) (> x2027 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x534 (+ 31 x75)) x637) (= x444 (x534 (+ x727 31))) (not (> x1272 x438)) (= (ite x548 1 0) x188) (= x778 (x534 (+ x259 32))) (= x349 (< 0 x75)) (not (< 18446744073709551615 x75)) (= 0 x188) (= x727 (x534 (+ x354 32))) (= (x534 (+ 32 x767)) x1031) (= x682 (x534 (+ 32 x1790))) (= x354 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x637)) (= (x534 (+ x767 31)) x2027) (not (> x1822 18446744073709551615)) (= x75 (x1804 x767)) (= (or x2153 x1824) x548) (= x430 (x534 (+ x673 x259))) (= (< x430 x259) x2153) (= x1824 (> x430 18446744073709551615)) (= x259 (x534 (+ x1694 x682))) (= (x534 (+ x75 x1031)) x1272) (= x1694 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x138)) (= (x534 (+ x682 x1154)) x438) (= x1822 (x1804 x682)) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x444) x673) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1154) (and (< x1154 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1154))))) (= (x534 (+ 31 x1154)) x138) (not (= x304 0))) (and (=> (and x349 (and (= (x581 x1611) x61) (= x1031 x1611) (= x1621 x778) (= x751 (< 32 x75)))) (and (=> (and x751 (and (= x884 (x410 x518)) (= x359 (< 64 x75)) (= (x534 (+ 32 x1031)) x518) (= x528 (x534 (+ x778 32))))) (and (=> (and x359 (and (= (> x75 96) x2159) (= (x1090 x1133) x1672) (= x1236 (x534 (+ 64 x778))) (= x1133 (x534 (+ x1031 64))))) (and (=> (and (not x2159) (= 96 x16)) x667) (=> x2159 x819))) (=> (and (not x359) (= 64 x16)) x667))) (=> (and (= x16 32) (not x751)) x667))) (=> (and (= x16 0) (not x349)) x667)))))
(assert (x1339 x226))
(assert (x1920 x736))
(assert (x1920 x986))
(assert (x1920 x607))
(assert (x1264 x853))
(assert (= (and x209 x478) x1818))
(assert (x1920 x1712))
(assert (= x686 (and x1384 (not x687))))
(assert (= (+ (x1348 x541) 1) (x1348 (x1184 x541 1))))
(assert (= (and x58 (not x1328)) x918))
(assert (x1920 x2154))
(assert (x1920 x837))
(assert (x1920 x949))
(assert (= (or x1445 x1709) x1013))
(assert (x1920 x754))
(assert (x1920 x106))
(assert (x1920 x329))
(assert (x1920 x467))
(assert (x1920 x739))
(assert (= x557 (and x312 x2142)))
(assert (x1920 x542))
(assert (= x2158 (=> (and (= x1495 (x348 x246 x1404)) (= (ite (not x608) 1 0) x246) (= (ite (> 1000000000000000000000000000 x386) 1 0) x1404) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1696) (>= x1696 0) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1788) x386) (= (= x1495 0) x1658) (= (= x1747 0) x608)) (and (=> (and x1658 (and (= (< 0 x1696) x1857) (= x1570 (mod (* x1788 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> (and (and (= (x193 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1866)) x720) (<= x2077 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2077) (= x1537 (< x720 x2077)) (= (div x1570 x1696) x1866)) x1857) (and (=> (and (not x1537) (and (<= 0 x1568) (= x1568 (x1827 x1813)) (= x172 (x267 (x1546 x456) (x141 15) 0)) (>= x1619 0) (= (> x1568 x1619) x1381) (= x818 (x534 (+ x2077 x1866))) (<= x1568 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1184 x172 1) x1813) (<= x1619 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and x1381 (= 0 x223)) x183) (=> (and (and (= x517 1) (= (x193 (- x1619 x1568)) x1465)) (not x1381)) x2146))) (=> (and x1537 (= x223 0)) x183))) (=> (and (= x223 0) (not x1857)) x183))) (=> (and (= x223 0) (not x1658)) x183)))))
(assert (x1920 x1447))
(assert (= x1934 (and (not x375) x579)))
(assert (= (x1546 115792089237316195423570985008687907853269984665640) (x141 115792089237316195423570985008687907853269984665640)))
(assert (x1920 x565))
(assert (x1920 x1555))
(assert (x1920 x1182))
(assert (x1920 x1379))
(assert (x1920 x2090))
(assert (x1920 x1493))
(assert (x1920 x1156))
(assert (x1920 x286))
(assert (= x1299 (and x814 (not x428))))
(assert (x1920 x2050))
(assert (x1920 x1018))
(assert (= (and x2019 x1428) x308))
(assert (x1920 x211))
(assert (x1920 x182))
(assert (x1920 x669))
(assert (x1920 x1987))
(assert (= x381 (and (not x1769) x101)))
(assert (= (x1762 x1101) 0))
(assert (x1920 x929))
(assert (x619 x754))
(assert (x1264 x246))
(assert (= (x1762 x1279) 0))
(assert (= x899 (and x80 x988)))
(assert (x1920 x992))
(assert (x2075 x40))
(assert (x1920 x413))
(assert (= 0 (x1762 x591)))
(assert (= x1371 (and x2200 x1332)))
(assert (x1920 x2086))
(assert (= (x1348 (x1546 x1132)) x1132))
(assert (= x333 (or x804 x1635 x1715)))
(assert (= (=> (and (or (and (= x282 (x534 (+ x778 x75))) x1436) (not x1436)) (= (< x75 x16) x1436)) x2020) x667))
(assert (= x1635 (and x2025 x352)))
(assert (= x2136 (and x1533 x370)))
(assert (= x1767 (and x803 x1193)))
(assert (x1920 x893))
(assert (x1920 x864))
(assert (x1920 x537))
(assert (= (=> (and (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x52) x2003) (= x2144 (or x1690 x195)) (= x638 (x534 (+ x926 32))) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x460) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479)) (and (> x479 x460) (= (<= x460 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x534 (+ x552 x926)) x1270) (= x966 (x844 x1270)) (= x1290 (not (< x638 x807))) (= (x534 (+ 31 x1270)) x460) (not (> x552 18446744073709551615)) (= (x534 (+ 32 x2003)) x416) (= x823 (x534 (+ x966 x1439))) (= x1492 (x534 (+ x416 31))) (not (> x966 18446744073709551615)) (= x487 (ite x2144 1 0)) (= x195 (< x442 x1791)) (= 0 x487) (= x1766 (x534 (+ 32 x1791))) (= x1690 (< 18446744073709551615 x442)) (= (x534 (+ x1791 x2155)) x442) (= x552 (x844 x926)) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1492) x2155) (= (x534 (+ x1766 x966)) x806) (= (x534 (+ x966 31)) x52) (not (< x479 x823)) (= x1439 (x534 (+ 32 x1270)))) (and x1290 (=> (= x1793 x442) x1997))) x160))
(assert (x1920 x480))
(assert (= x501 (=> (and (= x1634 0) (= x1107 x770)) x927)))
(assert (x1920 x732))
(assert (= (and x1615 x1032) x378))
(assert (x1920 x1419))
(assert (x1920 x1680))
(assert (x1920 x1911))
(assert (x1920 x894))
(assert (= (or x434 x2205 x660 x849 x1374) x513))
(assert (x1920 x1351))
(assert (x1920 x164))
(assert (x1920 x1539))
(assert (x1920 x1389))
(assert (x1920 x140))
(assert (= (x1762 x1611) 0))
(assert (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x1348 (x141 4238056678808933066457772256406219440718756300954938350892797929791311314944))))
(assert (= (x141 1818647125) (x1546 1818647125)))
(assert (x1920 x1314))
(assert (x1920 x879))
(assert (= (and (not x1809) x763) x1030))
(assert (x1920 x973))
(assert (x1920 x406))
(assert (x1920 x260))
(assert (x1920 x652))
(assert (= (and x834 x60) x689))
(assert (x1920 x1066))
(assert (x1264 x1701))
(assert (x1920 x665))
(assert (= x797 (and x2066 (not x56))))
(assert (x1920 x1272))
(assert (x1920 x896))
(assert (= (and x899 x1803) x887))
(assert (x1920 x297))
(assert (x1491 x1545 x1072))
(assert (= x128 (x1348 (x1546 x128))))
(assert (= 0 (x1762 x640)))
(assert (x1920 x913))
(assert (x1920 x78))
(assert (=> (<= x1447 10000) (= (x141 x1447) (x1546 x1447))))
(assert (x1920 x1825))
(assert (x1920 x1220))
(assert (= x827 (and x1259 x2203)))
(assert (x1920 x522))
(assert (x1920 x526))
(assert (x1920 x2082))
(assert (x1920 x769))
(assert (x1264 x1122))
(assert (x1491 x1122 x2125))
(assert (= (and x270 x218) x1533))
(assert (x1920 x1814))
(assert (= x1103 (and x1387 x333)))
(assert (= 0 (x1762 x1106)))
(assert (x1920 x1522))
(assert (x1920 x826))
(assert (x1920 x942))
(assert (x1920 x1498))
(assert (x1920 x1438))
(assert (x1920 x1619))
(assert (x1264 x18))
(assert (x1264 x785))
(assert (x1920 x1589))
(assert (= 90077150 (x1348 (x141 90077150))))
(assert (x1920 x75))
(assert (x1920 x1344))
(assert (x1920 x1837))
(assert (x1264 x820))
(assert (= (x141 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x1546 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x1920 x1350))
(assert (x1920 x2147))
(assert (= x1543 (=> (= x200 (= 0 x234)) (and (=> (and x200 (= 0 x223)) x183) (=> (and (and (= x18 (x534 (+ 31 x1092))) (= x2089 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1092) true) (< x1092 32)) (> x1092 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x18) x2041) (= x1950 (x534 (+ x2041 128)))) (not x200)) (and (=> (and (not x2089) (and (= x1575 (= 0 x2171)) (= x1308 (= 0 x1490)) (= x2171 (x348 x288 x984)) (= (ite (< x1754 x316) 1 0) x984) (= x1490 (x1919 128)) (= x1754 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1490)) (= (ite (not x1308) 1 0) x288))) (and (=> (and x1575 (and (= (mod (* x1490 x316) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x766) (= (x193 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1221)) x379) (= x1286 (< x379 1000000000000000000000000000)) (= (div x766 31536000) x1221))) (and (=> (and (= x223 0) x1286) x183) (=> (and (not x1286) (and (= x1125 (x348 x902 x1589)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x718) x96) (<= 0 x718) (= x902 (ite (not x313) 1 0)) (= (x534 (+ x1221 1000000000000000000000000000)) x725) (= x1589 (ite (> x725 x96) 1 0)) (<= x718 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x590 (= 0 x1125)) (= x313 (= 0 x718)))) (and (=> (and (and (= x609 (x193 (- x208 32))) (= x401 (x348 26959946667150639794667015087019630673637144422540572481103610249215 x536)) (= x886 (mod (* x718 x725) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x342 (x534 (+ x1950 32))) (= (div x886 1000000000000000000000000000) x713) (= (x348 1461501637330902918203684832716283019655932542975 x327) x754) (= x938 (x534 (+ x1249 96))) (= x1249 (x534 (+ x1950 36))) (= (x534 (+ x1249 32)) x683) (= (x193 (- x938 x1950)) x208) (= x538 (> x372 0)) (= x536 (x714 x342)) (= (x351 (x1546 x754)) x372) (= (x534 (+ x683 32)) x87) (= x1214 (x534 (+ x938 64))) (= (x534 (+ x401 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x995)) x590) (and (=> (and (= x223 0) (not x538)) x183) (=> (and (and (= x1409 (> x165 0)) (= (x1476 x1950) x165)) x538) (and (=> (and (and (= (x1376 x650) x1772) (= x1671 x1214) (= x347 (< 32 x165)) (= x650 x342)) x1409) (and (=> (and x347 (and (= x1636 (> x165 64)) (= (x1376 x1260) x231) (= (x534 (+ 32 x1214)) x1256) (= (x534 (+ 32 x342)) x1260))) (and (=> (and (not x1636) (= x1843 64)) x2190) (=> (and x1636 (and (= x522 (x1376 x1864)) (= (> x165 96) x1180) (= (x534 (+ x342 64)) x1864) (= (x534 (+ 64 x1214)) x67))) (and (=> x1180 x98) (=> (and (not x1180) (= x1843 96)) x2190))))) (=> (and (= x1843 32) (not x347)) x2190))) (=> (and (not x1409) (= x1843 0)) x2190))))) (=> (and (not x590) (= x223 0)) x183))))) (=> (and (not x1575) (= x223 0)) x183))) (=> (and (= 0 x223) x2089) x183)))))))
(assert (x1920 x1075))
(assert (= (x1348 (x141 115792089237316195423570985008687907853269984665640)) 115792089237316195423570985008687907853269984665640))
(assert (x1920 x454))
(assert (x1920 x782))
(assert (= (and (not x1386) x455) x761))
(assert (x1920 x595))
(assert (= x763 (and x450 x1446)))
(assert (x1920 x1689))
(assert (= (and (not x1046) x2201) x1983))
(assert (x1920 x778))
(assert (= (and x1481 x755) x2102))
(assert (x1920 x1144))
(assert (x1920 x586))
(assert (x1920 x1041))
(assert (x619 66268296141940672851042108147304593538321322149885339258387047461996478413388))
(assert (x1920 x851))
(assert (x1920 x901))
(assert (= x1665 (or x1753 x1819)))
(assert (x1920 x246))
(assert (x1920 x683))
(assert (x1920 x835))
(assert (x1920 x1894))
(assert (x1920 x1608))
(assert (= (x1348 (x1546 x1251)) x1251))
(assert (x1920 x938))
(assert (x1920 x1496))
(assert (x1920 x990))
(assert (x1920 x232))
(assert (x1920 x610))
(assert (x1920 x528))
(assert (= (and x1860 (not x956)) x1297))
(assert (x1920 x1231))
(assert (x1920 x2131))
(assert (x1920 x983))
(assert (x1920 x1122))
(assert (= 0 (x1762 x1347)))
(assert (x1920 x168))
(assert (= (x1762 x247) 0))
(assert (x1920 x966))
(assert (x1920 x447))
(assert (x1920 x16))
(assert (= 1997499061 (x1348 (x141 1997499061))))
(assert (= x1515 (and x1283 x1134)))
(assert (x1920 x1275))
(assert (x1920 x149))
(assert (x1264 x226))
(assert (x1920 x1681))
(assert (x1920 x97))
(assert (x2075 x1203))
(assert (x1920 x1196))
(assert (x1920 x1279))
(assert (x1920 x1240))
(assert (x1920 x179))
(assert (x1920 x1501))
(assert (x1920 x1024))
(assert (x1920 x1697))
(assert (x1920 x1815))
(assert (= x961 (or x943 x490 x412 x2185 x2078 x338 x1488 x887 x889 x1429 (and x1515 x1580) x1301 x493)))
(assert (x1920 x1864))
(assert (x1920 x593))
(assert (= (x1348 (x1546 x652)) x652))
(assert (x1920 x602))
(assert (x1920 x154))
(assert (= x1729 (and x2093 (not x1993))))
(assert (x1920 x883))
(assert (= 3336544575 (x1348 (x141 3336544575))))
(assert (= 65536 (x1348 (x141 65536))))
(assert (= (x1546 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x141 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1920 x888))
(assert (= x1752 (and (not x880) x446)))
(assert (x1920 x921))
(assert (x1920 x238))
(assert (= (=> (and (= (< 18446744073709551615 x792) x1467) (= (x534 (+ x593 128)) x792) (= x1278 (x534 (+ x1468 32))) (= (x844 x1468) x63) (= (x844 x1278) x1995) (= (x844 x810) x1449) (= x810 (x534 (+ x1278 32))) (<= x1995 255) (= (or x72 x1467) x1603) (= x44 (x534 (+ 32 x593))) (= (x844 x885) x122) (= x274 0) (<= x63 452312848583266388373324160190187140051835877600158453279131187530910662655) (= (x193 (- x479 x1468)) x1338) (= (x534 (+ x2073 32)) x47) (= (x534 (+ 32 x885)) x555) (= (ite x1603 1 0) x274) (= x885 (x534 (+ x810 32))) (= (> x593 x792) x72) (not (or (and (> 128 x1338) (= true (<= x1338 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1338))) (= x2073 (x534 (+ x44 32))) (= (not (> x1605 x555)) x1904)) (and (=> (= x792 x991) x1157) x1904)) x445))
(assert (x1920 x13))
(assert (x1920 x1207))
(assert (= 0 (x1762 x1937)))
(assert (x1920 x1021))
(assert (x1920 x49))
(assert (x1920 x1233))
(assert (= x1121 (and x2045 x1817)))
(assert (= x1629 (and x1563 x1192)))
(assert (x1920 x1142))
(assert (x1920 x487))
(assert (x1920 x1466))
(assert (x1920 x1967))
(assert (= (=> (and (and (not (= x1132 x577)) (= x404 false) (< 0 x1566) (>= x2062 0) (>= x1743 0) (= false x1087) (not (= x662 x652)) (= false x441) (= x1566 (x351 (x1546 x652))) (>= x1109 0) (not (= x652 x577)) (>= 1461501637330902918203684832716283019655932542975 x1320) (<= x2090 1461501637330902918203684832716283019655932542975) (> x662 0) (>= 1461501637330902918203684832716283019655932542975 x2062) (= x923 (> (x351 (x1546 x1132)) 0)) (>= x1565 0) (not (= x1132 x652)) (not (> x74 3)) (not (< x2015 418493994)) (= (> (x351 (x1546 x577)) 0) x123) (= x2062 x1195) (<= x652 1461501637330902918203684832716283019655932542975) (= (x1184 x1186 1) x1521) (<= 0 x1928) (= x2174 x74) (= 2 x1383) (not (= x662 x577)) (>= 1461501637330902918203684832716283019655932542975 x1870) (<= 0 x1870) (< 0 x577) (= (> (x351 (x1546 x652)) 0) x592) (<= x577 1461501637330902918203684832716283019655932542975) (< x74 256) x123 (>= x1309 0) (> 2307130307 x2015) (<= x1928 1461501637330902918203684832716283019655932542975) x592 (>= 1461501637330902918203684832716283019655932542975 x1132) (= x1870 x106) (>= 255 x1309) (<= 0 x645) (= false x197) (>= 255 x645) (= x153 (x934 (x1546 x577))) (= x2015 428079936) x923 (<= x1109 255) (not (= 418493994 x2015)) (= x1732 418493994) (= (x934 (x1546 x1132)) x1565) (<= x1405 1461501637330902918203684832716283019655932542975) (= x74 (x2018 x1521)) (= x1879 (> (x351 (x1546 x662)) 0)) (= x1320 x1928) (= x1186 (x267 (x1546 x1320) (x141 2) 0)) (> 791671133 x2015) (<= 0 x2090) (>= x1405 0) (not (= x1132 x662)) (<= x662 1461501637330902918203684832716283019655932542975) (>= x621 0) (>= x153 0) x1879 (= (x934 (x1546 x662)) x1743) (= x621 (x934 (x1546 x652))) (> x1132 0) (> x652 0)) (and (= (x1184 x815 1) x2189) (= 0 x1469) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1574) (and (> 160 x1574) (= true (<= x1574 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x594 (x267 (x1546 x212) (x141 2) 0)) (<= x212 1461501637330902918203684832716283019655932542975) (= x212 x2196) (= x917 (x2152 x2189)) (> 2307130307 x2011) (= (x534 (+ 31 x1326)) x1501) (or (and (> x479 x1551) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1551) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1551))) (= x226 x1835) (= x2162 3) (< x2011 791671133) (= x1806 x656) (= x1916 (x351 (x1546 x652))) (not (= x2082 2)) (= x1004 (x844 x1100)) (not (< x2011 418493994)) (not (< 18446744073709551615 x1711)) (= x1915 (x534 (+ 4 x1711))) (>= x917 0) (= x1195 x1073) (= x1986 (mod (* 32 x1902) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2018 x119) x2162) (not (< 3 x2162)) (= x257 x1638) (not (< x479 4)) (= (x844 x1915) x42) (= (x534 (+ x1039 32)) x1100) (<= x2119 1461501637330902918203684832716283019655932542975) (= x1558 x212) (= x397 (x534 (+ 32 x1023))) (= 128 x1792) (not (or (and (> 160 x1574) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1574) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1574))) (= x1326 (x534 (+ x173 32))) (= (x534 (+ x564 288)) x43) (< x917 1461501637330902918203684832716283019655932542976) (= (or x562 x276) x1584) (> x1916 0) (>= 1461501637330902918203684832716283019655932542975 x42) (>= 1461501637330902918203684832716283019655932542975 x917) (= (x193 (- x479 x1915)) x1574) (= x896 x257) (= x159 x212) (not (< x479 x940)) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1501) x564) (= (x534 (+ 31 x1023)) x1551) (<= x2082 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1469 (ite x1584 1 0)) (not (< 18446744073709551615 x1902)) (= x1902 (x844 x1023)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1998) (and (= (<= x1998 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1998)))) (< x2162 256) (= x1478 x2174) (= x815 (x267 (x1546 x212) (x141 2) 0)) (= 0 x656) (= x1023 (x534 (+ x1004 x1915))) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479) true) (> x479 195)) (<= 0 x1638) (not (> x1004 18446744073709551615)) (<= x1638 1461501637330902918203684832716283019655932542975) (>= x2082 0) (= x1875 (< x397 x940)) (= x173 (mod (* 32 x1902) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1039 (x534 (+ x1915 32))) (= x917 x1073) (<= 0 x1073) (>= x2119 0) (= x119 (x1184 x594 1)) (= 418493994 x2011) (= (x534 (+ x1986 x397)) x940) (= x1998 (x193 (- x479 4))) (= x562 (< x43 288)) (= (> x43 18446744073709551615) x276) (>= 1461501637330902918203684832716283019655932542975 x1073) (= x41 x212))) (and (=> (and (= x1455 x43) (not x1875)) x366) (=> x1875 x1001))) x589))
(assert (= (and x510 x1286) x1842))
(assert (= (and x449 x1349) x493))
(assert (x1920 x2088))
(assert (x1920 x2043))
(assert (= x1763 (and x1906 (not x225))))
(assert (x1920 x436))
(assert (= (=> (= (not (> x2109 1)) x2042) (and (=> (and (= x314 x139) (= x341 x1182) (= x946 x481) (= x2088 x1288) (= x51 x1038) (= x811 x240) (= x883 x1952) (= x975 x1390)) x533) x2042)) x1064))
(assert (x1920 x1928))
(assert (x1920 x786))
(assert (x1920 x1392))
(assert (= (or x1167 x523) x395))
(assert (= (x1348 (x141 2835717307)) 2835717307))
(assert (x1920 x252))
(assert (= x1947 (=> (and (= x770 32) (= x1634 1)) x927)))
(assert (x1264 x1507))
(assert (= x1082 (and x1020 x17)))
(assert (= x2038 (and x1049 x8)))
(assert (x1920 x1055))
(assert (x1920 x1915))
(assert (= (x141 65535) (x1546 65535)))
(assert (x1920 x1135))
(assert (= x1620 (=> (and (= (< x1396 x1380) x476) (or (not x476) (and x476 (= (x534 (+ x1396 x1880)) x553)))) x1071)))
(assert (= x166 (and (not x1537) x1255)))
(assert (x619 x1801))
(assert (x1920 x482))
(assert (x1920 x240))
(assert (x1920 x959))
(assert (x1920 x1105))
(assert (x1920 x462))
(assert (x1920 x1849))
(assert (x1920 x702))
(assert (x1264 x212))
(assert (x1920 x718))
(assert (x1920 x1444))
(assert (= x37 x1358))
(assert (= (x1762 x1609) 0))
(assert (x2075 x1359))
(assert (= x1174 (=> (and (= x1263 x15) (= x220 0)) x1601)))
(assert (x1920 x989))
(assert (= (=> (= (> x2109 0) x803) (and (=> (and (not x803) (and (= x1051 x314) (= x774 x2088) (= x341 x646) (= x975 x1329) (= x946 x922) (= x622 x1952) (= x811 x1113) (= x1038 x1319))) x533) (=> (and x803 (and (= x1483 (x534 (+ 32 x135))) (= (x534 (+ x1051 36)) x135) (= (x534 (+ 32 x289)) x394) (= x1552 (x2188 x394)) (= (x1868 x1552) x1728) (= x271 (x534 (+ x325 32))) (= (x2188 x289) x485) (= (x348 1461501637330902918203684832716283019655932542975 x212) x1801) (= (> x1728 0) x1337) (> x485 0) (= x1592 (x534 (+ x1552 32))) (= x325 (x534 (+ x135 96))))) (and (=> x1337 x118) (=> (and (not x1337) (= 0 x1861)) x1963))))) x839))
(assert (x1920 x137))
(assert (= (x1348 (x1184 x815 1)) (+ (x1348 x815) 1)))
(assert (= x1850 (and x1767 (not x1337))))
(assert (= x1402 (and x2061 x616)))
(assert (x1920 x808))
(assert (x1920 x511))
(assert (= x34 (and x554 x371)))
(assert (x1920 x1528))
(assert (x1920 x68))
(assert (x1920 x1302))
(assert (x1920 x330))
(assert (x1264 x107))
(assert (x1920 x1292))
(assert (x1200 x1507))
(assert (x1920 x1404))
(assert (x1920 x980))
(assert (= (x1546 65536) (x141 65536)))
(assert (x1920 x1937))
(assert (x1920 x2130))
(assert (x1920 x2107))
(assert (x1920 x1952))
(assert (= (and x2055 x317) x1445))
(assert (x1920 x2077))
(assert (= (+ 1 (x1348 x833)) (x1348 (x1184 x833 1))))
(assert (= x2095 (and x1037 x671)))
(assert (= (and x1403 x2083) x425))
(assert (x1920 x2161))
(assert (= 0 (x1762 x587)))
(assert (x1920 x224))
(assert (x1920 x444))
(assert (= x2111 (=> (and (= (x534 (+ x676 32)) x1623) (= (x534 (+ x133 x467)) x1318) (= (x534 (+ 32 x1024)) x458) (= x1131 (= 0 x2035)) (not (< 18446744073709551615 x184)) (= x580 (x534 (+ x679 32))) (= x1799 (x534 (+ x960 32))) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1285) x983) (= x960 (x534 (+ x1911 32))) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x496)) (< x496 288)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x496))) (<= x93 18446744073709551615) (= x242 (or x1617 x1183)) (= (x534 (+ x184 x563)) x1208) (not (< x479 x648)) (= x496 (x193 (- x479 x990))) (= x112 (< 18446744073709551615 x726)) (= x1426 (or x850 x324)) (= x355 (x534 (+ 32 x1423))) (= x1414 (x534 (+ x578 x330))) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x29) x1018) (= x1911 (x534 (+ 32 x580))) (= x744 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1516)) (not (> x1392 18446744073709551615)) (= x1024 (x534 (+ x1799 32))) (= (ite x242 1 0) x134) (= (x844 x1925) x405) (= x134 0) (= (x534 (+ 32 x69)) x1542) (not (> x1307 18446744073709551615)) (= (> x726 x1907) x850) (= (x534 (+ x132 32)) x563) (= (x534 (+ 31 x2007)) x29) (= (x534 (+ 31 x1414)) x1274) (<= x1914 18446744073709551615) (= x979 (x534 (+ x1414 32))) (= x439 (x534 (+ x1623 32))) (= (x534 (+ x355 32)) x862) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x932) x576) (= x1304 (ite x1426 1 0)) (= 0 x1304) (not (> x1362 x479)) (= (x844 x676) x330) (= (< 18446744073709551615 x132) x1617) (= x1814 (x534 (+ 32 x576))) (= (> x679 x132) x1183) (= x996 0) (>= 18446744073709551615 x405) (= (x534 (+ 31 x184)) x932) (= (> x1907 18446744073709551615) x324) (= (x534 (+ 31 x467)) x1285) (not (< 18446744073709551615 x330)) (<= x48 18446744073709551615) (= x1810 (< x726 x132)) (= x467 (x844 x1414)) (= x1362 (x534 (+ x1470 x184))) (= x1178 x2035) (= (x534 (+ x439 32)) x826) (= (x844 x439) x48) (= (x844 x355) x1914) (= x1925 (x534 (+ 32 x862))) (= x578 (x534 (+ x1392 x69))) (= x990 (x534 (+ x69 x1392))) (= x2007 (x534 (+ 32 x983))) (= (not (< x1542 x1534)) x102) (= (x534 (+ x979 x467)) x648) (= (x844 x826) x93) (= (x534 (+ 32 x636)) x1470) (= x512 (x844 x862)) (= (x534 (+ x578 x1307)) x636) (= x1516 (x534 (+ 31 x1814))) (= (x534 (+ x726 32)) x133) (= (x844 x69) x1392) (= (x534 (+ 288 x679)) x132) (= x1907 (x534 (+ x1018 x726))) (= (x534 (+ x636 31)) x13) (= x2035 (x844 x1623)) (>= 18446744073709551615 x204) (<= x512 18446744073709551615) (= (or x112 x1810) x1585) (or (and (> x479 x1274) (= (<= x1274 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479))) (and (> x1274 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (ite x1585 1 0) x996) (= (x534 (+ x578 32)) x676) (= (x844 x578) x1307) (= x2173 (not x1131)) (= (x534 (+ x624 32)) x2151) (= x1423 (x534 (+ x826 32))) (= (x844 x1423) x204) (not (< 18446744073709551615 x467)) (= x1178 (ite x2173 1 0)) (or (and (< x13 x479) (= (<= x13 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x13) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479))) (= x726 (x534 (+ x132 x744))) (= (x844 x636) x184) (= x624 (x534 (+ x458 32)))) (and (=> (= x2092 x1907) x1719) x102))))
(assert (x1920 x20))
(assert (x1920 x1836))
(assert (x1920 x1304))
(assert (x1920 x1411))
(assert (x1920 x173))
(assert (x1920 x401))
(assert (= (=> (and (and (= (x1618 x326) x1685) (= x1281 (x534 (+ 32 x110))) (= x1228 (x534 (+ x1253 32))) (= (x534 (+ 32 x1695)) x1101) (= x1060 (x534 (+ x515 32))) (= x1311 (x348 18446744073709551615 x474)) (= (x534 (+ 32 x1228)) x1695) (= (x348 255 x1685) x235) (= x568 (x534 (+ x380 32))) (= (x534 (+ x1525 32)) x702) (= x1871 (x1138 x1609)) (= (> x2058 0) x834) (= (x534 (+ 32 x1597)) x326) (= x515 (x534 (+ 32 x702))) (= (x348 18446744073709551615 x406) x465) (= x875 (x534 (+ 32 x568))) (= x110 (x534 (+ x336 32))) (= (x534 (+ 32 x716)) x1219) (= (x348 18446744073709551615 x1871) x1233) (= x959 (x534 (+ x1609 32))) (= x179 (x534 (+ 32 x1508))) (= (x841 x716) x1003) (= (x1354 x1101) x474) (= x1778 (not (= x1088 0))) (= x14 (x985 x1597)) (= (x348 452312848583266388373324160190187140051835877600158453279131187530910662655 x14) x837) (= (x348 18446744073709551615 x1507) x1725) (= x1508 (x534 (+ x875 32))) (not (= x315 0)) (= (x459 x915) x406) (= (x534 (+ 32 x1101)) x863) (= x1314 (x2163 x1219)) (= (x1450 x1228) x1088) (= (x233 x959) x1408) (= (x534 (+ 32 x915)) x1609) (= (x348 18446744073709551615 x1408) x154) (= (x1820 x863) x1507) (= x853 (x1888 x1695)) (= (x534 (+ x2091 32)) x336) (= (x348 18446744073709551615 x853) x537) (= (x534 (+ x326 32)) x716) (= x2091 (x534 (+ x1060 32))) (= x315 (x351 (x1546 x1839))) (= (x534 (+ x863 32)) x915)) (or (and (and (= x32 x1334) (= x598 x1352) (= x335 x1736) (= x1826 x99) (= x168 x2090) (= x1085 x489) (= x1697 x701)) (not x834)) (and x834 (and x2175 (= x335 x1053) (= x802 (x934 (x1546 x1839))) (= x287 x168) (= x598 x2170) (= x586 (x934 (x1546 x652))) (= x1411 x1085) (= (>= (x1895 (x1546 x652)) x586) x2175) (< x1958 4294967296) (= x409 x1334) (= x1185 x1826) x759 (= x759 (= x802 (x1895 (x1546 x1839)))) (= x701 x1640))))) x1282) x148))
(assert (x1264 x984))
(assert (= x879 (x1348 (x1546 x879))))
(assert (= 0 (x1762 x1552)))
(assert (x1920 x214))
(assert (x1920 x1616))
(assert (x1920 x289))
(assert (x1920 x928))
(assert (x1920 x1808))
(assert (= (=> (= (> x2109 0) x427) (and (=> (and (not x427) (and (= x646 x99) (= x922 x489) (= x1352 x622) (= x1329 x2090) (= x32 x1319) (= x774 x1736) (= x1113 x1697))) x1720) (=> (and x427 (and (= x872 (x534 (+ x94 32))) (= (x534 (+ 320 x1291)) x2021) (= x1941 (x2024 x732)) (= (x2024 x94) x1652) (= (x2024 x872) x1544) (= (> x1089 0) x1713) (> x1652 0) (= (x793 x830) x1089) (> x1941 0) (= (x348 1461501637330902918203684832716283019655932542975 x820) x1839) (= (x2024 x281) x1156) (= x305 (x534 (+ x732 32))) (= x830 (x2024 x305)) (= x1597 (x2024 x1815)) (= x1757 (x534 (+ x1291 32))) (= x706 (x348 1461501637330902918203684832716283019655932542975 x212)) (= x1815 (x534 (+ 32 x281))) (= (x534 (+ 32 x2021)) x1011) (< 0 x1156) (= (x534 (+ x830 32)) x776) (= x1291 (x534 (+ 4 x991))))) (and (=> (and (not x1713) (= x1926 0)) x756) (=> (and x1713 (and (= (> x1089 32) x1660) (= x973 x776) (= (x1664 x973) x89) (= x1011 x1692))) (and (=> (and (= 32 x1926) (not x1660)) x756) (=> (and x1660 (and (= (x534 (+ x776 32)) x2085) (= (x534 (+ 32 x1011)) x602) (= (< 64 x1089) x1265) (= x500 (x688 x2085)))) (and (=> (and x1265 (and (= x1892 (< 96 x1089)) (= x526 (x534 (+ 64 x776))) (= x1379 (x631 x526)) (= x1104 (x534 (+ 64 x1011))))) (and (=> x1892 x1099) (=> (and (not x1892) (= 96 x1926)) x756))) (=> (and (= 64 x1926) (not x1265)) x756))))))))) x1157))
(assert (= (x141 2307130307) (x1546 2307130307)))
(assert (x2075 x1588))
(assert (x1920 x810))
(assert (x1920 x1670))
(assert (= (x1348 (x1546 x1320)) x1320))
(assert (x1920 x553))
(assert (x1920 x390))
(assert (x1920 x1169))
(assert (x1920 x2041))
(assert (= (x1762 x326) 0))
(assert (= (=> (= (= 0 x155) x903) (and (=> (and (and (= x1738 (> x331 0)) (= (x241 x786) x331)) (not x903)) (and (=> (not x1738) x2158) (=> (and (and (= x2052 (x241 x786)) (= (or (and (= true (<= x2052 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2052)) (> x2052 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x910)) x1738) (and (=> (and (= x223 0) x910) x183) (=> (and (not x910) (and (= x876 (x534 (+ 32 x786))) (= (= 0 x1356) x206) (= x1550 (= x1356 (ite x1781 1 0))) (= (x1094 x876) x1356) (= (not x206) x1781))) (and (=> (and (= 0 x223) (not x1550)) x183) (=> (and x1550 (= x1643 (> x1356 0))) (and (=> (and (not x1643) (= 0 x223)) x183) (=> x1643 x2158))))))))) (=> x903 x71))) x1844))
(assert (= (x1348 (x141 65535)) 65535))
(assert (x1264 x637))
(assert (x1264 x977))
(assert (x1920 x1106))
(assert (= x1821 (and x411 x916)))
(assert (x1920 x1038))
(assert (x1920 x1717))
(assert (= 0 (x1762 x526)))
(assert (x1264 x444))
(assert (x1920 x1427))
(assert (= x352 (or x1758 x585)))
(assert (= 0 (x1762 x1815)))
(assert (x1920 x569))
(assert (x1264 x1285))
(assert (x1264 x2181))
(assert (x1920 x417))
(assert (not x589))
(assert (x1920 x1377))
(assert (= (and x1653 x1857) x1255))
(assert (x1920 x162))
(assert (x1920 x816))
(assert (x1920 x1172))
(assert (x1920 x1462))
(assert (x1920 x1623))
(assert (x1264 x929))
(assert (x1264 x14))
(assert (x1920 x891))
(assert (x1920 x886))
(assert (x1920 x1470))
(assert (x1920 x729))
(assert (= (=> (and (= x1027 (x534 (+ 96 x1031))) (= (not (< 128 x75)) x1590) (= x530 (x534 (+ 96 x778))) (= (x719 x1027) x2079)) (and (=> (= x16 128) x667) x1590)) x819))
(assert (x1920 x2155))
(assert (x1920 x117))
(assert (= (x1546 18446744073709551615) (x141 18446744073709551615)))
(assert (x1920 x1281))
(assert (x1920 x890))
(assert (= (or (and (not x218) x270) (and x903 x1013)) x86))
(assert (x1920 x1986))
(assert (x1920 x628))
(assert (x1920 x742))
(assert (x1920 x503))
(assert (= x987 (and x215 x1660)))
(assert (= x317 (or x1044 x1983 x1173)))
(assert (x1264 x291))
(assert (x2075 x1770))
(assert (x1920 x1960))
(assert (= (and (not x1286) x510) x1440))
(assert (x1920 x336))
(assert (= (x141 791671133) (x1546 791671133)))
(assert (x1920 x999))
(assert (= x2110 (and (not x1615) x1032)))
(assert (x1920 x2072))
(assert (= (and x763 x1809) x1429))
(assert (x1920 x1766))
(assert (= x1273 (and x1738 x1048)))
(assert (x1920 x1806))
(assert (x1920 x639))
(assert (x1920 x1700))
(assert (x1920 x315))
(assert (= x941 (and x225 x1906)))
(assert (= (and (not x796) x365) x1488))
(assert (x1920 x799))
(assert (= x1903 true))
(assert (= (or x1850 x403) x446))
(assert (= x599 (and x2142 (not x312))))
(assert (x1264 452312848583266388373324160190187140051835877600158453279131187530910662655))
(assert (x1920 x792))
(assert (x1920 x1723))
(assert (x1920 x1432))
(assert (x1920 x1149))
(assert (x1920 x930))
(assert (= (=> (and (= x684 (and (>= x1889 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1972))) (= x1889 (x1474 (x1546 x662))) (= x1972 (x1474 (x1546 x754))) (= x1105 x165)) (and (=> (and (and (and (= x1896 x2001) (= (x1305 (x1546 x754)) x1785) (= (= x662 x754) x1654) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1785) (= (x1474 (x1546 x662)) x1896)) (and (and (= x662 x1205) (< 0 x462) (not (= x1417 265030696)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x124) (< x1417 1631253430) (= x68 100) (> 791671133 x1417) (not (= x1417 404098525)) (not (> 4 x68)) (= (x351 (x1546 x662)) x462) (= x38 x1447) (= x419 (or (and (< x1498 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1498) true)) (> x1498 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x100 x1747) (= (x193 (- x68 4)) x1498) (= x1417 599290589) (= x1105 x68) (not (> 265030696 x1417))) x1654)) x684) (and (=> x419 x1174) (=> (and (and (= x368 (= x38 x1447)) (= x1447 x708)) (not x419)) (and (=> (and x368 (and (= x1123 (= x1205 x662)) (= x1460 x1205))) (and (=> (and x1123 (and (= (> x1432 x2077) x1012) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2077) (= (x267 (x1546 x1447) (x141 14) 0) x169) (>= x2077 0) (= x1823 (x267 (x1546 x1447) (x141 1) 0)) (>= x632 0) (<= x1432 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x632) (= x595 x100) (= x632 (x1372 x1823)) (>= x1432 0) (= x1432 (x24 x169)))) (and (=> x1012 x1174) (=> (and (not x1012) (and (= (ite (not x764) 1 0) x2108) (= x962 (ite (< x1674 x632) 1 0)) (= x1674 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1960)) (= (x348 x2108 x962) x2047) (= x1960 (x193 (- x2077 x1432))) (= x764 (= x1960 0)) (= (= 0 x2047) x2083))) (and (=> (not x2083) x1174) (=> (and x2083 (and (<= x788 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x267 (x1546 x1447) (x141 14) 0) x19) (= x1676 (x193 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1441))) (<= x2077 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2149 x549) x788) (<= 0 x2077) (= x1441 (div x1258 1000000000000000000000000000)) (= x549 (x1184 x833 1)) (= x833 (x267 (x1546 x1447) (x141 14) 0)) (= (mod (* x1960 x632) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1258) (<= 0 x788) (= (< x1676 x788) x654))) (and (=> x654 x1174) (=> (and (not x654) (and (= (x1372 x463) x1316) (<= x2077 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2077 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1190) (= (x267 (x1546 x1205) (x141 14) 0) x426) (<= 0 x1316) (= x463 (x267 (x1546 x1205) (x141 1) 0)) (= x2016 (x534 (+ x788 x1441))) (= x362 (< x2077 x1190)) (= x1190 (x357 x426)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1316) (>= x1190 0))) (and (=> (and (not x362) (and (= x567 (= x1807 0)) (= (ite (< x1513 x1316) 1 0) x2125) (= (ite (not x1398) 1 0) x1122) (= (= 0 x573) x1398) (= x1807 (x348 x1122 x2125)) (= x1513 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x573)) (= x573 (x193 (- x2077 x1190))))) (and (=> (not x567) x1174) (=> (and x567 (and (= (div x420 1000000000000000000000000000) x1149) (= (x1786 x1693) x1081) (= (> x1081 x136) x199) (>= x1081 0) (= x1693 (x1184 x1043 1)) (= (x267 (x1546 x1205) (x141 14) 0) x1043) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1081) (= x136 (x193 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1149))) (= (mod (* x573 x1316) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x420) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2077) (>= x2077 0))) (and (=> (and (not x199) (and (= (x534 (+ x1081 x1149)) x772) (= x2160 (= x662 x1447)))) (and (=> (and (and (= x1324 (x267 (x1546 x662) x2094 0)) (= x374 (x747 x1324)) (= (x267 (x1546 x1447) (x141 2) 0) x2094) (= (= x374 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2010) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x374) (<= 0 x374)) (not x2160)) (and (=> (and (not x2010) (= x371 (< x374 x100))) (and (=> (and (not x371) (and (= (= x1447 0) x1673) (= (x193 (- x374 x100)) x1019))) (and (=> x1673 x1174) (=> (and (not x1673) (= (= 0 x662) x1254)) (and (=> (not x1254) x37) (=> x1254 x1174))))) (=> x371 x1174))) (=> x2010 x37))) (=> x2160 x1358))) (=> x199 x1174))))) (=> x362 x1174))))))))) (=> (not x1123) x1174))) (=> (not x368) x1174))))) (=> (and (not x684) (and (= 0 x2060) (= x155 0))) x46))) x201))
(assert (x1920 x1109))
(assert (= x1342 (and (not x476) x1210)))
(assert (x1920 x2049))
(assert (x1920 x28))
(assert (x1920 x1732))
(assert (= (and (not x419) x2140) x1206))
(assert (x1920 x234))
(assert (= (x1546 90077150) (x141 90077150)))
(assert (= x387 (and x703 (not x1654))))
(assert (x1920 x1663))
(assert (x1920 x811))
(assert (= (x1348 (x1546 x607)) x607))
(assert (= x2186 (and x618 x2199)))
(assert (x1920 x1721))
(assert (x1920 x1531))
(assert (x1920 x1451))
(assert (x1200 x1408))
(assert (x1920 x1979))
(assert (= x1980 (or x2002 x1237)))
(assert (x1920 x12))
(assert (x1920 x573))
(assert (x1920 x1852))
(assert (= x566 (and x1461 x1935)))
(assert (= x585 (and (not x1436) x1614)))
(assert (= (x1348 (x141 55253086691344412491249731323735809531556945173834312332507302207468853002240)) 55253086691344412491249731323735809531556945173834312332507302207468853002240))
(assert (x1920 x1053))
(assert (= x1962 (and (not x448) x715)))
(assert (x1264 x52))
(assert (= x491 (and x2089 x1015)))
(assert (x1920 x145))
(assert (= 31536000 (x1348 (x141 31536000))))
(assert (x1920 x1898))
(assert (x1920 x830))
(assert (x1264 x664))
(assert (x1920 x1970))
(assert (x1920 x1512))
(assert (= x510 (and x1333 x1575)))
(assert (= x455 (and x755 (not x1481))))
(assert (x1920 x1737))
(assert (= (and x773 x228) x1816))
(assert (x1920 x624))
(assert (x1920 x1289))
(assert (x1920 x1))
(assert (x1920 x530))
(assert (= (and x375 x579) x1682))
(assert (x1920 x798))
(assert (x1920 x948))
(assert (x1920 x823))
(assert (x1920 x1966))
(assert (x1920 x239))
(assert (x1920 x1893))
(assert (x1920 x1443))
(assert (x1920 x1801))
(assert (= (x1762 x1853) 0))
(assert (x1920 x596))
(assert (x1920 x609))
(assert (x1920 x1412))
(assert (=> (<= x1205 10000) (= (x1546 x1205) (x141 x1205))))
(assert (x1264 x1408))
(assert (= x1176 (and x2093 x1993)))
(assert (x1920 x1992))
(assert (x1920 x1872))
(assert (x619 x128))
(assert (x1920 x167))
(assert (x1920 x912))
(assert (x1920 x1222))
(assert (x1920 x464))
(assert (x1920 x1701))
(assert (x1920 x1588))
(assert (x1920 x1326))
(assert (x1920 x440))
(assert (x1920 x1195))
(assert (x1920 x122))
(assert (x1200 x853))
(assert (x1920 x502))
(assert (x1920 x202))
(assert (x1920 x1480))
(assert (=> (>= 10000 x1427) (= (x1546 x1427) (x141 x1427))))
(assert (x1920 x1475))
(assert (= x209 (or x1382 x827)))
(assert (= x422 (and x1899 (not x1401))))
(assert (x1264 x812))
(assert (x1920 x82))
(assert (= x1312 (and x1557 x1371)))
(assert (= x343 (x1348 (x1546 x343))))
(assert (= (x1348 (x141 22140752835961941075817313386879028057460502132199729129551447365926944505856)) 22140752835961941075817313386879028057460502132199729129551447365926944505856))
(assert (x1920 x1790))
(assert (x1920 x1309))
(assert (= (and x2120 x427) x1996))
(assert (x1264 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (and x987 x1265) x1069))
(assert (x1920 x354))
(assert (x1920 x1867))
(assert (x1920 x438))
(assert (x1920 x1113))
(assert (x1920 x1408))
(assert (= (and x108 x745) x1832))
(assert (= (x141 2362630343) (x1546 2362630343)))
(assert (x1920 x1367))
(assert (= (x141 1949782873) (x1546 1949782873)))
(assert (= (=> (and (not (= 0 x2058)) (= x21 (not (< 1 x2109)))) (and (=> (and (= x168 x1329) (= x1085 x922) (= x1319 x1334) (= x774 x335) (= x1826 x646) (= x598 x622) (= x701 x1113)) x1720) x21)) x2068))
(assert (= (x1762 x1027) 0))
(assert (x1920 x1917))
(assert (x1920 x646))
(assert (= 2362630343 (x1348 (x141 2362630343))))
(assert (= x250 (=> (and (and (= x633 (x348 1461501637330902918203684832716283019655932542975 x212)) (= (x351 (x1546 x633)) x930) (not (= 0 x930)) (= x956 (> x1718 0)) (not (= x517 0))) (or (and (and x156 x1726 (= (= x1795 (x2202 (x1546 x633))) x156) (= (x2006 (x1546 x633)) x1795) (= x569 (x2006 (x1546 x652))) (> 4294967296 x261) (= (>= (x2202 (x1546 x652)) x569) x1726)) x956) (not x956))) x483)))
(assert (x2075 x18))
(assert (x1920 x1132))
(assert (x1920 x397))
(assert (x2075 x637))
(assert (x1920 x788))
(assert (x1920 x1695))
(assert (x1920 x2074))
(assert (x1920 x1968))
(assert (x1920 x1759))
(assert (= (and x1206 x368) x2143))
(assert (x1920 x752))
(assert (x1920 x637))
(assert (x1920 x165))
(assert (x1920 x578))
(assert (x1920 x1671))
(assert (x1920 x875))
(assert (= x2205 (and (not x347) x1956)))
(assert (= (x1141 (- x876 x180)) 0))
(assert (x1920 x1303))
(assert (x1920 x465))
(assert (x619 x577))
(assert (= (and x1903 x1875) x1532))
(assert (=> (>= 10000 x128) (= (x1546 x128) (x141 x128))))
(assert (= (and x1273 (not x910)) x1884))
(assert (x1920 x342))
(assert (x1920 x1633))
(assert (x1920 x1667))
(assert (x1264 x828))
(assert (= x681 (or x1009 x488)))
(assert (= (x141 265030696) (x1546 265030696)))
(assert (= 13116146399946975302596254860212112502091447646307958763727216123866297401344 (x1348 (x141 13116146399946975302596254860212112502091447646307958763727216123866297401344))))
(assert (x1920 x2139))
(assert (x1920 x1478))
(assert (x1920 x1252))
(assert (x1920 x379))
(assert (= x1028 (and x125 x1422)))
(assert (x1920 x2016))
(assert (x1920 x96))
(assert (x1920 x2196))
(assert (x1920 x1306))
(assert (x1920 x134))
(assert (x1920 x725))
(assert (= (and x1713 x1996) x215))
(assert (x1920 x640))
(assert (x1385 x597))
(assert (x1920 x1672))
(assert (x1920 x1424))
(assert (x1264 x597))
(assert (= (=> (and (or (not x114) (and x114 (= x1420 (x534 (+ x1214 x165))))) (= x114 (< x165 x1843))) x201) x2190))
(assert (x1920 x1776))
(assert (x1920 x1609))
(assert (x1920 x1455))
(assert (= (x141 1997499061) (x1546 1997499061)))
(assert (= (and x359 x817) x1591))
(assert (x1920 x1507))
(assert (x2075 x138))
(assert (x1920 x194))
(assert (x1920 x1420))
(assert (x1920 x1984))
(assert (= (and x1918 x1030) x1301))
(assert (x1920 x884))
(assert (x1264 x1359))
(assert (x1920 x1209))
(assert (x1920 x1500))
(assert (= x1283 (or x1245 x1848)))
(assert (x619 x343))
(assert (x1920 x1241))
(assert (x1920 x1490))
(assert (x1920 x327))
(assert (= (and x2099 x349) x717))
(assert (x1920 x1791))
(assert (x1920 x1441))
(assert (= (and x395 (not x1502)) x1656))
(assert (= (and x1403 (not x2083)) x813))
(assert (x1920 x1566))
(assert (= (and x1373 (not x1978)) x909))
(assert (x1920 x2115))
(assert (x1920 x940))
(assert (x1920 x280))
(assert (x1920 x1770))
(assert (x1920 x2081))
(assert (= x388 (or x2102 x611 x2038 x378 x953 x402 x1242 x836 x519 x1816 x1741 x1948 (and x1082 x905))))
(assert (x1264 x1350))
(assert (x2075 x664))
(assert (= (x1348 (x1184 x1612 1)) (+ 1 (x1348 x1612))))
(assert (x1920 x946))
(assert (x1920 x1972))
(assert (x1920 x577))
(assert (x1920 x277))
(assert (x1920 x1047))
(assert (x1920 x293))
(assert (x1920 x707))
(assert (x1920 x2032))
(assert (x1264 x932))
(assert (= (and (not x1756) x84) x625))
(assert (x1920 x326))
(assert (x1920 x1613))
(assert (x1920 x42))
(assert (= 0 (x760 x1864)))
(assert (x1920 x2015))
(assert (x1920 x676))
(assert (x1920 x785))
(assert (x1920 x627))
(assert (x1920 x1834))
(assert (x1920 x111))
(assert (x2075 x356))
(assert (x1920 x1659))
(assert (= x219 (and x1969 (not x2160))))
(assert (x1920 x517))
(assert (= 265030696 (x1348 (x141 265030696))))
(assert (= x1020 (and x1533 (not x370))))
(assert (x1920 x981))
(assert (x2075 x1894))
(assert (= (and (not x1673) x1632) x2132))
(assert (x1920 x115))
(assert (x1920 x430))
(assert (= x2066 (or x1388 (and x1394 (not x1945)))))
(assert (x1920 x1415))
(assert (x1920 x1793))
(assert (x1920 x1876))
(assert (x1920 x69))
(assert (= (=> (and (or (not x1387) x1387) (= x1387 (= 0 x517))) x250) x2146))
(assert (= (x1546 1703538655) (x141 1703538655)))
(assert (= (=> (and (= (> x304 0) x1259) (or (and (and (= x1038 x1619) (= x718 x1952) (= x341 x2077) (= x946 x185) (= x1277 x811) (= x55 x975) (= x1696 x2088)) (not x1259)) (and x1259 (and (= x185 x244) (= (x661 (x1546 x343)) x1951) (= x1096 x55) (= (x661 (x1546 x652)) x1036) x972 (> 4294967296 x1154) (= (<= x1036 (x1775 (x1546 x652))) x972) (= (= x1951 (x1775 (x1546 x343))) x521) (= x1504 x1277) x521 (= x1619 x1759) (= x718 x2121) (= x2077 x1596) (= x248 x1696))))) x2033) x1571))
(assert (x1920 x1068))
(assert (x1920 x700))
(assert (x1920 x2181))
(assert (= (x1348 (x141 1099511627776)) 1099511627776))
(assert (= (x1546 33540519) (x141 33540519)))
(assert (x1920 x253))
(assert (x1920 x479))
(assert (x1920 x1958))
(assert (= (and x1124 (not x538)) x251))
(assert (x1264 x288))
(assert (x1920 x674))
(assert (x1920 x1655))
(assert (x1920 x1218))
(assert (= (=> (and (or (and x560 (= (x534 (+ x992 x1147)) x864)) (not x560)) (= x560 (> x1389 x1147))) x148) x1153))
(assert (= (or x1276 x435) x2203))
(assert (x1920 x767))
(assert (x1920 x1081))
(assert (= (x1546 428079936) (x141 428079936)))
(assert (x1920 x1981))
(assert (x1920 x394))
(assert (x1920 x1460))
(assert (= (x1348 (x141 66268296141940672851042108147304593538321322149885339258387047461996478413388)) 66268296141940672851042108147304593538321322149885339258387047461996478413388))
(assert (x1920 x1765))
(assert (x1920 x1822))
(assert (= (x1762 x830) 0))
(assert (= 0 (x1762 x561)))
(assert (= x1715 (or x70 x1194 x1168 x469 x2156 x1842 x2136 x625 x279 x794 x822 x1624 x491 x251 x1161 x86)))
(assert (x1920 x393))
(assert (x1920 x1676))
(assert (x1920 x1761))
(assert (x1920 x1201))
(assert (x1920 x1551))
(assert (x1920 x282))
(assert (= (and x127 (not x207)) x2017))
(assert (= (and x880 x446) x795))
(assert (x1920 x1417))
(assert (= x838 (=> (and (= x1355 (x658 x1544)) (= (x534 (+ 32 x504)) x1880) (= x665 (x534 (+ x268 x1011))) (= (> x1396 0) x916) (= (x534 (+ 32 x1355)) x851) (= x1146 (x534 (+ x1757 32))) (= (x534 (+ x1291 x605)) x816) (= (x1078 x1355) x1396) (= (x534 (+ 288 x665)) x504) (= (x534 (+ x1944 32)) x380) (= x1944 (x534 (+ x2147 32))) (= (x193 (- x665 x1291)) x605) (= x2147 (x534 (+ x1146 32))) (= (x534 (+ 31 x1089)) x1588) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1588) x268)) (and (=> (and (and (= x177 (< 32 x1396)) (= x1880 x1678) (= x640 x851) (= x2134 (x629 x640))) x916) (and (=> (and (= x1380 32) (not x177)) x1620) (=> (and x177 (and (= (x1641 x1136) x1946) (= (x534 (+ x1880 32)) x3) (= (x534 (+ x851 32)) x1136) (= x1328 (< 64 x1396)))) (and (=> (and (not x1328) (= 64 x1380)) x1620) (=> (and x1328 (and (= x1966 (x534 (+ x1880 64))) (= (x534 (+ x851 64)) x247) (= (> x1396 96) x1748) (= x1737 (x1331 x247)))) (and (=> (and (= 96 x1380) (not x1748)) x1620) (=> x1748 x2128))))))) (=> (and (not x916) (= 0 x1380)) x1620)))))
(assert (x1920 x185))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1348 (x141 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (x1920 x1251))
(assert (x1920 x1576))
(assert (= (x1546 2446411860) (x141 2446411860)))
(assert (= (x1762 x872) 0))
(assert (x1920 x621))
(assert (= (and x1954 x1216) x1276))
(assert (x1920 x861))
(assert (x1920 x1243))
(assert (= x1421 (or (and (not x1738) x1048) x85)))
(assert (= x2103 (and x2110 (not x1846))))
(assert (= x1679 (and x425 (not x654))))
(assert (x1920 x1088))
(assert (x1920 x1178))
(assert (= (and x1860 x956) x1931))
(assert (= (x1348 (x141 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1920 x226))
(assert (x619 x607))
(assert (= (=> (and (= x1422 (= 0 x1718)) (or (not x1422) x1422)) x2076) x483))
(assert (x1920 x1221))
(assert (x1920 x1077))
(assert (= (x141 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1546 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= 0 (x1762 x973)))
(assert (x1920 x1318))
(assert (x1920 x962))
(assert (x1920 x1154))
(assert (x1920 x638))
(assert (x1920 x458))
(assert (= (x1546 1461501637330902918203684832716283019655932542975) (x141 1461501637330902918203684832716283019655932542975)))
(assert (= x1374 (and x847 (not x1409))))
(assert (=> (<= x343 10000) (= (x141 x343) (x1546 x343))))
(assert (x1920 x420))
(assert (x1264 x668))
(assert (= (x1762 x2085) 0))
(assert (x1920 x2122))
(assert (= (x1348 (x141 2428475159928928253380189918045730325133814103720850528466242065960167014400)) 2428475159928928253380189918045730325133814103720850528466242065960167014400))
(assert (x1264 x1501))
(assert (x1920 x1926))
(assert (x2075 x291))
(assert (x1920 x235))
(assert (= (and (not x152) x2095) x27))
(assert (x1920 x236))
(assert (x1920 x1826))
(assert (x1920 x697))
(assert (x1920 x1238))
(assert (x1920 x708))
(assert (x1920 x63))
(assert (x1920 x2047))
(assert (= x1048 (and (not x903) x1013)))
(assert (x1920 x2164))
(assert (x1920 x1263))
(assert (x1920 x1552))
(assert (x1920 x44))
(assert (x1920 x1483))
(assert (x1264 x12))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1348 (x141 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x1920 x1067))
(assert (x1920 x1096))
(assert (x1920 x722))
(assert (= x998 (and x814 x428)))
(assert (x1920 x104))
(assert (= x1632 (and x554 (not x371))))
(assert (x933 x14))
(assert (x1264 x138))
(assert (x1920 x872))
(assert (x1920 x1416))
(assert (x619 x1251))
(assert (x1920 x372))
(assert (x1920 x2027))
(assert (x1920 x1100))
(assert (x1920 x1514))
(assert (x1200 x406))
(assert (x1920 x1395))
(assert (x1920 x622))
(assert (= x1009 (and x698 x1665)))
(assert (x1920 x305))
(assert (= x1194 (and x1381 x166)))
(assert (x1920 x516))
(assert (x1920 x1011))
(assert (x1920 x1262))
(assert (= x1839 (x1348 (x1546 x1839))))
(assert (x1920 x1155))
(assert (x1920 x902))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1348 (x141 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x1920 x1235))
(assert (= (x1348 (x141 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (= 418493994 (x1348 (x141 418493994))))
(assert (x1920 x1508))
(assert (x1920 x4))
(assert (= 0 (x908 x786)))
(assert (x1920 x1340))
(assert (= (x1348 (x141 18446744073709551615)) 18446744073709551615))
(assert (= x488 (and (not x698) x1665)))
(assert (x1920 x1111))
(assert (x1920 x2151))
(assert (x1920 x1554))
(assert (x1264 x1712))
(assert (x1920 x1648))
(assert (x1920 x363))
(assert (= x1704 (and x715 x448)))
(assert (= x817 (and x717 x751)))
(assert (= x60 (or x451 x831)))
(assert (= (and x2010 x219) x7))
(assert (x1920 x230))
(assert (= (x1348 (x141 1631253430)) 1631253430))
(assert (=> (>= 10000 x1839) (= (x141 x1839) (x1546 x1839))))
(assert (x2075 x1852))
(assert (x1920 x2204))
(assert (= x1310 (=> (and (= x2101 (x534 (+ x1853 x2050))) (= (x534 (+ x1577 32)) x1002) (= x1856 (ite x495 1 0)) (= x897 (x534 (+ x1344 x1002))) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1172) x1527) (= (x534 (+ x1139 x1853)) x1577) (= 0 x1856) (= (x534 (+ 31 x2050)) x929) (= x1616 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x929)) (= x1139 (x369 x1853)) (= (x534 (+ x482 x1724)) x139) (= x1853 (x534 (+ x1553 32))) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1770) x1724) (= (< 18446744073709551615 x139) x1777) (= x56 (> x1344 0)) (not (> x897 x2101)) (= (or x1777 x367) x495) (not (> x1344 18446744073709551615)) (= (< x139 x482) x367) (= x1172 (x534 (+ x1344 31))) (= x1770 (x534 (+ 31 x345))) (not (= 0 x1714)) (= x345 (x534 (+ 32 x1527))) (= x503 (x534 (+ x482 32))) (not (> x1139 18446744073709551615)) (not (or (and (= (<= x2050 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2050 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2050))) (or (and (= (<= x1346 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2101)) (> x2101 x1346)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2101) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1346))) (= x1346 (x534 (+ 31 x1577))) (= (x369 x1577) x1344) (= (x534 (+ x1616 x1853)) x482)) (and (=> x56 x601) (=> (and (not x56) (= x2191 0)) x974)))))
(assert (x1920 x2060))
(assert (x1920 x1847))
(assert (x1920 x1465))
(assert (= (x1348 (x141 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1920 x2150))
(assert (= x1961 (and x618 (not x2199))))
(assert (x1920 x1787))
(assert (x1920 x1856))
(assert (= (and x560 x178) x451))
(assert (x1920 x1652))
(assert (x1920 x1880))
(assert (x1920 x1002))
(assert (x1920 x2012))
(assert (x1920 x1631))
(assert (= (x1762 x1253) 0))
(assert (x1920 x1560))
(assert (x1920 x205))
(assert (= x1037 (and x1977 x852)))
(assert (= (x1762 x1365) 0))
(assert (x1920 x2058))
(assert (= (x141 55253086691344412491249731323735809531556945173834312332507302207468853002240) (x1546 55253086691344412491249731323735809531556945173834312332507302207468853002240)))
(assert (x1920 x1725))
(assert (x619 x456))
(assert (x1920 x304))
(assert (= (or x1656 x2028) x1373))
(assert (= (=> (and (and (= x111 x1700) (> 1099511627776 x447) (< x340 791671133) (= x447 (x142 x2097)) (= (x267 (x1546 x879) (x141 2) 0) x950) (= x1928 x1251) (= x1700 (x635 x558)) (= x2097 (x1184 x950 1)) (< x1700 256) (>= x1834 0) (not (= x1718 0)) (not (> 418493994 x340)) (< x1120 1461501637330902918203684832716283019655932542976) (<= 0 x447) (= (x1184 x1612 1) x558) (> 65536 x1834) (<= x1834 65535) (<= x447 1099511627775) (= x340 428079936) (<= x1251 1461501637330902918203684832716283019655932542975) (= x1834 (x1026 x2097)) (<= x1120 1461501637330902918203684832716283019655932542975) (= (x348 1461501637330902918203684832716283019655932542975 x212) x879) (= (x2141 x2097) x1120) (= x1612 (x267 (x1546 x1251) (x141 2) 0)) (>= x1120 0) (not (= x340 418493994)) (< x340 2307130307) (= (x351 (x1546 x652)) x642) (not (< 3 x1700)) (< 0 x642) (= x1932 (x348 1099511627775 x226))) (and (and (= (= 3 x2123) x1817) (= x1478 x1218) (= x1891 x1478) (= x2123 x1218) (= (not (= x1891 x1578)) x109) (= x1080 x111) (= x1578 x1080) (= x1364 3)) (or (and (not x1817) (and (= x857 x865) (= x1303 1) (= x1218 x1723) x1650 (= x1817 x321) (= x1650 (not x321)) (= (x534 (+ 1 x1723)) x1646) (= x1987 x857) (= x865 x1646))) (and (and (= x232 1) (= x232 x1987) x377 (= x890 1) (= x1817 x377) (= x958 1)) x1817)))) x299) x2076))
(assert (= x953 (and x508 x599)))
(assert (x1920 x563))
(assert (x1920 x801))
(assert (= x831 (and (not x560) x178)))
(assert (x1920 x94))
(assert (x1920 x706))
(assert (= (x1348 (x1546 x1427)) x1427))
(assert (x1920 x1298))
(assert (x1920 x648))
(assert (x1920 x1651))
(assert (x1491 x1350 x2065))
(assert (= x403 (and x1767 x1337)))
(assert (x1920 x1092))
(assert (x1920 x1718))
(assert (x2075 x1172))
(assert (x1920 x712))
(assert (x1385 x536))
(assert (x1920 x30))
(assert (= x1593 (=> (and (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1203) x182) (= x1025 (x534 (+ x2130 x337))) (= (= 0 x1142) x1317) (= x33 x1142) (= (ite x392 1 0) x1885) (= (x534 (+ x1448 x1511)) x2154) (= (x534 (+ 32 x1067)) x1988) (= x2133 (x534 (+ 32 x2150))) (= x1717 (x534 (+ x1979 32))) (= (x534 (+ x739 31)) x502) (= x400 (x844 x1774)) (not (> x1351 18446744073709551615)) (not (> x1511 18446744073709551615)) (= (< x337 x1500) x1600) (= x1519 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x977)) (= x33 (ite x855 1 0)) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479) (> x502 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x502 x479) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x502)))) (= x1898 (x844 x2150)) (= x1152 (ite x262 1 0)) (= x1722 (x534 (+ 32 x1633))) (= x1351 (x844 x1067)) (= x649 (or x1964 x1897)) (= (x534 (+ x1863 32)) x1129) (= (x534 (+ 31 x1511)) x977) (= x337 (x534 (+ x1500 x1681))) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x674) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x479 x674) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x674)))) (>= 18446744073709551615 x1898) (= x9 (x844 x454)) (= 0 x1885) (= (x844 x739) x1511) (= x245 (x844 x1863)) (= x1203 (x534 (+ x9 31))) (= (x534 (+ x1979 288)) x1500) (= (x534 (+ 32 x1717)) x1721) (= (< x1025 x337) x350) (= (x534 (+ x1284 31)) x356) (= (x534 (+ x170 x1067)) x739) (= x454 (x534 (+ x1351 x1067))) (= (or x210 x1600) x392) (= x170 (x844 x1988)) (= (x534 (+ x238 x9)) x736) (<= x245 18446744073709551615) (not (< x479 x2154)) (= (x534 (+ x894 32)) x1863) (= (x534 (+ 32 x182)) x1220) (<= x400 18446744073709551615) (= (x534 (+ x1774 32)) x2150) (= x1598 (ite x649 1 0)) (= x210 (> x337 18446744073709551615)) (= (x534 (+ x9 x617)) x1155) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x356) x2130) (not (> x170 18446744073709551615)) (= (x844 x894) x1893) (= (x534 (+ 31 x1220)) x383) (not (or (and (< x214 288) (= true (<= x214 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x214 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x534 (+ x1599 32)) x1633) (= x617 (x534 (+ x454 32))) (= x91 (not (< x2126 x1669))) (<= x1893 18446744073709551615) (= x969 (x844 x2133)) (= (or x1257 x350) x262) (= (x534 (+ x739 32)) x1448) (= (x534 (+ 32 x1500)) x238) (= (x534 (+ 32 x1721)) x1517) (= x1257 (< 18446744073709551615 x1025)) (= (x534 (+ 32 x1517)) x1648) (= 0 x1152) (= (x534 (+ 32 x1129)) x1774) (not (< x479 x1155)) (= (x534 (+ x1988 32)) x746) (= x742 (x534 (+ x1913 x1412))) (= x1284 (x534 (+ x1519 32))) (= (x534 (+ 32 x746)) x894) (= (x534 (+ 32 x1648)) x1569) (= (x844 x1129) x1917) (= x855 (not x1317)) (= x674 (x534 (+ x454 31))) (not (< 18446744073709551615 x9)) (= x214 (x193 (- x479 x742))) (= x1913 (x844 x1412)) (= (x844 x746) x1142) (= x1964 (< x1500 x1979)) (<= x969 18446744073709551615) (= (x534 (+ x1412 32)) x2126) (= (x534 (+ 32 x337)) x724) (not (< 18446744073709551615 x1913)) (<= x1917 18446744073709551615) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x383) x1681) (= x1067 (x534 (+ x1913 x1412))) (= (< 18446744073709551615 x1500) x1897) (= x1599 (x534 (+ 32 x1569))) (= x1598 0) (= x1466 (x534 (+ x1511 x724)))) (and (=> (= x1025 x36) x1865) x91))))
(assert (= (and (not x1817) x2045) x846))
(assert (x1920 x335))
(assert (x1920 x1213))
(assert (x1920 x1932))
(assert (= x1734 (and (not x243) x937)))
(assert (= 452312848583266388373324160190187140051835877600158453279131187530910662655 (x1348 (x141 452312848583266388373324160190187140051835877600158453279131187530910662655))))
(assert (x1920 x1035))
(assert (x1920 x668))
(assert (x1920 x853))
(assert (x1920 x677))
(assert (x1920 x682))
(assert (x1920 x1747))
(assert (= (=> (and (and (not x264) (= x1022 90077150) (= (x1184 x1529 2) x328) (= x1413 (x534 (+ x1702 32))) (>= x975 0) (= (> x811 x1835) x264) (>= 1461501637330902918203684832716283019655932542975 x975) (<= x946 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2031 x1427) (< x1539 256) (= (x534 (+ x314 4)) x1702) (= x782 36) (>= x1038 0) (<= 0 x811) (< x1022 1631253430) (= x1529 (x267 (x1546 x1427) (x141 15) 0)) (not (= x1022 33540519)) (= (x193 (- x1413 x314)) x2204) (= x901 (x351 (x1546 x662))) (<= x1539 255) (= x1134 (= x1132 x975)) (not x2137) (<= 0 x1539) (= (x193 (- x782 4)) x167) (= (x574 x328) x57) (= 2428475159928928253380189918045730325133814103720850528466242065960167014400 x73) (= x2080 (x267 (x1546 x1427) (x141 15) 0)) (> x901 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x811) (= x928 (x193 (- x226 x811))) (<= x1038 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 791671133 x1022) (not (> 4 x782)) (= (x283 x2080) x1539) (= x28 128) (= x2204 x782) (> x1539 0) (> 1461501637330902918203684832716283019655932542976 x975) (>= x946 0) (= x2031 (x348 1461501637330902918203684832716283019655932542975 x212)) (= x769 x1427) (= x2137 (or (> x167 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x167 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x167)))) (< x1022 265030696) (<= x57 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x57)) (and x1134 (and (= 68 x82) (= x878 x1038) (= (x351 (x1546 x1132)) x1235) (not (= x1021 1997499061)) (= x82 68) (= x946 x2036) (= x1794 89953063794570797914675343120038501642627609741519254829220540789936042803200) (not (= 1703538655 x1021)) (not (= 1008072988 x1021)) (= 3336544575 x1021) (= x1580 (or (> x900 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x900) true) (> 64 x900)))) (< 0 x1235) (= x900 (x193 (- x82 4))) (not (> 4 x82))))) (and (=> x1580 x501) (=> (and (= (= 0 x1038) x1645) (not x1580)) (and (=> (and x1645 (= x1188 x334)) x1947) (=> (and (= (< x878 x2036) x1349) (not x1645)) (and (=> (and (not x1349) (and (= x2200 (= 0 (ite x709 1 0))) (= (x193 (- x878 x2036)) x1458) (= x709 (> x1458 115792089237316195423570985008687907853269984665640)))) (and (=> (and (and (= x2086 (div x1749 x878)) (= (mod (* x1458 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1749) (= x1557 (< x2086 x1393))) x2200) (and (=> (and (= x829 (> x1393 1000000000000000000000000000)) (not x1557)) (and (=> x829 x501) (=> (and (and (= x1809 (= x1393 1000000000000000000000000000)) (= (> x1393 x2086) x1401) (= (x193 (- 1000000000000000000000000000 x1393)) x164)) (not x829)) (and (=> (and (not x1401) (and (= x1457 (> x1463 x921)) (= x2157 (x193 (- x2086 x1393))))) (and (=> x1457 x501) (=> (and (and (= x1647 (x348 x1545 x1072)) (= (= x1647 0) x450) (= x527 (= x1416 0)) (= (ite (> x2157 x1797) 1 0) x1072) (= (x193 (- x921 x1463)) x1416) (= x1797 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1416)) (= x1545 (ite (not x527) 1 0))) (not x1457)) (and (=> (not x450) x501) (=> (and (= x297 (mod (* x1416 x2157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x450) (and (=> x1809 x501) (=> (and (and (= (x193 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x260)) x249) (= x1918 (> x1463 x249)) (= x260 (div x297 x164))) (not x1809)) (and (=> (and (not x1918) (and (= x949 (x534 (+ x1463 x260))) (= x949 x1188))) x1947) (=> x1918 x501))))))))) (=> x1401 x501))))) (=> (and x1557 (= x2104 (< x1463 x334))) (and (=> x2104 x501) (=> (and (and (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x571) x300) (= x2065 (ite (< x300 x2086) 1 0)) (= x1361 (= x571 0)) (= x571 (x193 (- x1463 x334))) (= (x348 x1350 x2065) x464) (= x1350 (ite (not x1361) 1 0)) (= x796 (= 0 x464))) (not x2104)) (and (=> (not x796) x501) (=> (and x796 (and (= x912 (mod (* x2086 x571) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x1393 0) x80))) (and (=> (not x80) x501) (=> (and (and (= (< x707 x334) x1803) (= x835 (div x912 x1393)) (= x707 (x193 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x835)))) x80) (and (=> (and (not x1803) (and (= x269 x1188) (= x269 (x534 (+ x835 x334))))) x1947) (=> x1803 x501))))))))))) (=> (not x2200) x501))) (=> x1349 x501))))))) x533))
(assert (x1920 x1863))
(assert (x1264 x962))
(assert (x1920 x1190))
(assert (= 63696388041471822930743579425831364866188647584567569692446183701643513561088 (x1348 (x141 63696388041471822930743579425831364866188647584567569692446183701643513561088))))
(assert (= x745 (and x1763 (not x1627))))
(assert (= (and x1332 (not x2200)) x2078))
(assert (x1920 x818))
(assert (= x1997 (=> (and (= 0 x2034) (= x1482 (x534 (+ x1547 x1915))) (= x1321 (< x679 x1793)) (= (ite x1295 1 0) x2034) (= (x534 (+ x2183 x1793)) x679) (not (< 18446744073709551615 x1922)) (= (< x69 x1534) x1978) (= (or x2197 x1321) x1295) (= (x534 (+ 32 x1793)) x1464) (= (x534 (+ x1482 31)) x1068) (= x639 (mod (* x1922 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1547 (x844 x1604)) (not (> x1547 18446744073709551615)) (or (and (> x479 x1068) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1068) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1068 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x534 (+ x639 x69)) x1534) (= x2183 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x664)) (= x69 (x534 (+ x1482 32))) (= (x844 x1482) x1922) (= (x534 (+ 31 x1171)) x664) (= x194 (mod (* 32 x1922) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x534 (+ 32 x194)) x1171) (= (> x679 18446744073709551615) x2197) (not (> x1534 x479))) (and (=> x1978 x2111) (=> (and (not x1978) (= x2092 x679)) x1719)))))
(assert (x1920 x771))
(assert (x1920 x77))
(assert (= (and (not x905) x1082) x2142))
(assert (x1920 x1271))
(assert (x1920 x1625))
(assert (x1920 x1542))
(assert (= x523 (and x2120 (not x427))))
(assert (x1920 x1541))
(assert (x1920 x1711))
(assert (= (=> (and (>= x1968 0) (not (or (and (< x1574 160) (= (<= x1574 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1574))) (<= x2115 1461501637330902918203684832716283019655932542975) (= (x2018 x1313) x2043) (= (mod (* 32 x2187) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1862) (= x677 (x1375 x1455)) (= x677 x1858) (not (< 18446744073709551615 x986)) (= (x844 x1915) x955) (= (< x732 x551) x2165) (not (> x2187 18446744073709551615)) (= (> x843 x1890) x1014) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1894) x907) (= x1313 (x1184 x978 1)) (= (x534 (+ x2116 32)) x49) (= (x534 (+ x551 160)) x732) (= (x2152 x1313) x2115) (= x1968 (x1573 x1313)) (= (x613 x978) x1137) (>= x2109 0) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1052) (> x854 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x854 x1052) (= (<= x854 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1052 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x729 (x844 x1039)) (= x1890 (x534 (+ x678 32))) (<= x1968 1099511627775) (< x2109 65536) (= x1894 (x534 (+ 31 x2106))) (= (x844 x2116) x2187) (= 0 x1438) (= 0 x1086) (or (and (< x2114 x479) (= (<= x2114 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2114) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479))) (= x2014 x1415) (= x1625 (x844 x678)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) (<= x137 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x137 x49)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x137) (<= x49 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x1415 (x1375 x36)) (<= x2109 65535) (= x1858 (x1375 288)) (= (x534 (+ 31 x678)) x2114) (= (ite x1779 1 0) x1086) (= x128 (x348 1461501637330902918203684832716283019655932542975 x212)) (>= x1137 0) (= (ite x824 1 0) x1438) (= x2131 (mod (* x1625 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 1461501637330902918203684832716283019655932542975 x955) (= x551 (x534 (+ 160 x1232))) (= x678 (x534 (+ x986 x1915))) (= (x844 x1100) x854) (= x1302 (x534 (+ 32 x732))) (= (< 18446744073709551615 x732) x414) (= (or x2165 x414) x1779) (= (> x418 18446744073709551615) x1083) (not (< 3 x2043)) (not (< 18446744073709551615 x1625)) (= x1162 (> x732 x418)) (= x2109 x2187) (> 256 x2043) (= (x534 (+ x1915 x854)) x2116) (= (x534 (+ x1890 x735)) x843) (>= x2115 0) (not (< x479 x843)) (= x2106 (x534 (+ x2131 32))) (= x986 (x844 x1100)) (= (x193 (- x479 x1862)) x137) (= (x534 (+ x907 x732)) x418) (= (x193 (- x1574 31)) x1052) (= x2109 (x800 x1313)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1137) (= (x1375 x1455) x2014) (< x1968 1099511627776) (= x978 (x267 (x1546 x128) (x141 2) 0)) (= (or x1162 x1083) x824) (> 1461501637330902918203684832716283019655932542976 x2115) (= (mod (* x1625 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x735)) (and (=> x1014 x1855) (=> (and (not x1014) (= x94 x418)) x2100))) x151))
(assert (x1920 x1938))
(assert (x1920 x1370))
(assert (x1920 x605))
(assert (x1920 x1214))
(assert (x1920 x1495))
(assert (x1920 x2105))
(assert (x1264 x536))
(assert (x1920 x170))
(assert (x1920 x1707))
(assert (= x1442 (and x1515 (not x1580))))
(assert (=> (>= 10000 x1801) (= (x1546 x1801) (x141 x1801))))
(assert (x1920 x131))
(assert (x1920 x301))
(assert (x1920 x48))
(assert (x1920 x1621))
(assert (= (x1546 1000000000000000000000000000) (x141 1000000000000000000000000000)))
(assert (= (x1546 1008072988) (x141 1008072988)))
(assert (x1920 x187))
(assert (x1920 x862))
(assert (x1920 x1858))
(assert (x1920 x1052))
(assert (= (or x2117 x566) x1394))
(assert (= x1742 (and (not x616) x2061)))
(assert (x1920 x996))
(assert (x1920 x1293))
(assert (x1920 x273))
(assert (= (x141 1099511627775) (x1546 1099511627775)))
(assert (x1920 x1504))
(assert (=> (>= 10000 x879) (= (x1546 x879) (x141 x879))))
(assert (x1920 x1319))
(assert (= (x141 89953063794570797914675343120038501642627609741519254829220540789936042803200) (x1546 89953063794570797914675343120038501642627609741519254829220540789936042803200)))
(assert (x1920 x2054))
(assert (x1920 x364))
(assert (x1920 x1524))
(assert (x1920 x568))
(assert (x1920 x964))
(assert (x1920 x1998))
(assert (x1920 x1728))
(assert (x1264 x1685))
(assert (x1920 x2126))
(assert (= (x1762 x682) 0))
(assert (x1920 x1380))
(assert (= 404098525 (x1348 (x141 404098525))))
(assert (x1920 x968))
(assert (x1920 x1946))
(assert (x1920 x1883))
(assert (x1920 x2157))
(assert (= (and x745 (not x108)) x715))
(assert (= (x1762 x1597) 0))
(assert (= 2307130307 (x1348 (x141 2307130307))))
(assert (x619 x212))
(assert (= (or x1297 x1931) x125))
(assert (= (=> (and (= (x1503 x1365) x1522) (= x1365 x1613) (= x982 (not (< 32 x1836))) (= x1847 x697)) (and (=> (= x181 32) x484) x982)) x1437))
(assert (x1920 x575))
(assert (= (and x1409 x847) x1956))
(assert (x1920 x564))
(assert (x1920 x1579))
(assert (= (and x1653 (not x1857)) x1161))
(assert (x1920 x300))
(assert (x1920 x383))
(assert (x1920 x1669))
(assert (x1920 x1874))
(assert (x2075 x2181))
(assert (=> (<= x1132 10000) (= (x1546 x1132) (x141 x1132))))
(assert (x1920 x2073))
(assert (x1920 x1147))
(assert (x1920 x1694))
(assert (= (x1546 3336544575) (x141 3336544575)))
(assert (= (x1348 (x141 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x1920 x1359))
(assert (x1920 x633))
(assert (x1920 x1743))
(assert (x1920 x515))
(assert (x1920 x1278))
(assert (x1920 x555))
(assert (x1920 x1587))
(assert (x1920 x452))
(assert (= x1266 (and x347 x1956)))
(assert (x1920 x1534))
(assert (x1920 x139))
(assert (x1920 x1435))
(assert (= (=> (and (or (not x1945) x1945) (= (= 0 x1714) x1945)) x1310) x1675))
(assert (x1920 x1137))
(assert (= (or x408 x1315) x814))
(assert (= (and x1373 x1978) x1006))
(assert (x1920 x1634))
(assert (x1920 x897))
(assert (x1920 x2007))
(assert (= x1032 (and x1049 (not x8))))
(assert (x1920 x1338))
(assert (x1264 x1203))
(assert (x2075 x977))
(assert (= (x760 x1260) 0))
(assert (x1920 x2057))
(assert (x1920 x744))
(assert (= (and x1851 (not x1180)) x849))
(assert (x1920 x92))
(assert (x1920 x1674))
(assert (= x579 (or x909 x1006)))
(assert (= (x1762 x305) 0))
(assert (x1920 x2171))
(assert (= x212 (x1348 (x1546 x212))))
(assert (x1920 x2123))
(assert (x1920 x1687))
(assert (x1920 x54))
(assert (x1920 x316))
(assert (x1920 x196))
(assert (x1920 x124))
(assert (x1920 x1347))
(assert (= (x1546 418493994) (x141 418493994)))
(assert (x1920 x540))
(assert (= (+ (x1348 x172) 1) (x1348 (x1184 x172 1))))
(assert (= 0 (x1762 x394)))
(assert (x1920 x1771))
(assert (x1920 x726))
(assert (= x490 (and (not x450) x1446)))
(assert (x1920 x1285))
(assert (= x889 (and x1401 x1899)))
(assert (= x1124 (and x1440 x590)))
(assert (x1920 x1916))
(assert (x1920 x1454))
(assert (x1920 x2116))
(assert (x1920 x1086))
(assert (x1920 x217))
(assert (= x2045 (or x1028 (and (not x1422) x125))))
(assert (= (x1762 x959) 0))
(assert (x1920 x1249))
(assert (= (=> (= (= 0 x1447) x225) (and (=> x225 x1174) (=> (and (= x1627 (= 0 x1205)) (not x225)) (and (=> x1627 x1174) (=> (and (and (<= 0 x516) (= x108 (> x100 x516)) (<= x516 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x516 (x1372 x787)) (= x787 (x267 (x1546 x1447) (x141 1) 0))) (not x1627)) (and (=> (and (and (= x105 (x193 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x100))) (>= x1837 0) (= (< x105 x1837) x448) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1837) (= (x193 (- x516 x100)) x1217) (= (x267 (x1546 x1447) (x141 1) 0) x647) (= (x267 (x1546 x1205) (x141 1) 0) x158) (= (x90 x158) x1837)) (not x108)) (and (=> x448 x1174) (=> (and (not x448) (and (= 1 x220) (= x15 32) (= (x2067 128) x2023) (= x2032 1) (= (x534 (+ x1837 x100)) x1981))) x1601))) (=> x108 x1174))))))) x1358))
(assert (= 0 (x1762 x863)))
(assert (x1323 x1685))
(assert (x1920 x746))
(assert (x1920 x1296))
(assert (x1920 x314))
(assert (= x2040 (or x468 x1812 x295 x947 x25 x951 (and x2143 (not x1123)) x941 x1832 x95 x993 (and x2140 x419) x1704 x813 x34 (and (not x368) x1206))))
(assert (= (x760 x2048) 0))
(assert (= x71 (=> (= 0 x223) x183)))
(assert (x1920 x1907))
(assert (=> (>= 10000 x754) (= (x1546 x754) (x141 x754))))
(assert (= x1740 (=> (and (= (x534 (+ 96 x1213)) x1248) (= x1063 (not (> x1631 128))) (= (x737 x1160) x2168) (= x1160 (x534 (+ x882 96)))) (and (=> (= 128 x1831) x1471) x1063))))
(assert (x1920 x407))
(assert (x1920 x99))
(assert (x1920 x2048))
(assert (x1920 x1523))
(assert (x1920 x1745))
(assert (= (x141 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x1546 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (= x1327 (and x215 (not x1660))))
(assert (= (x141 66268296141940672851042108147304593538321322149885339258387047461996478413388) (x1546 66268296141940672851042108147304593538321322149885339258387047461996478413388)))
(assert (x2075 x929))
(assert (x1920 x1544))
(assert (= (=> (and (= x2055 (= x2060 0)) (or (and (not x2055) (and (= x1214 x786) (= x180 (x534 (+ 32 x1214))))) (and (= x786 96) x2055))) x1844) x46))
(assert (= (x1348 (x1546 x662)) x662))
(assert (x1920 x1913))
(assert (= x1388 (and x1945 x1394)))
(assert (= (x1348 (x141 33540519)) 33540519))
(assert (= (x1348 (x1546 x456)) x456))
(assert (x1920 x1807))
(assert (= (=> (and (= x2180 (x534 (+ x2005 55253086691344412491249731323735809531556945173834312332507302207468853002240))) (= (x534 (+ x2105 x271)) x1553) (= (x534 (+ x1553 4)) x76) (= x1428 (> x1836 0)) (= x176 (x534 (+ 32 x1483))) (= x296 (x534 (+ 64 x76))) (= x1847 (x534 (+ x296 32))) (= (x348 26959946667150639794667015087019630673637144422540572481103610249215 x307) x2005) (= x1836 (x1562 x1051)) (= (x663 x1613) x307) (= x1992 (x348 1461501637330902918203684832716283019655932542975 x2012)) (= x2105 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2181)) (= x2181 (x534 (+ 31 x1728))) (= (x348 1461501637330902918203684832716283019655932542975 x212) x1275) (= x2135 (x534 (+ 32 x76))) (= x784 (x193 (- x1553 x1051))) (= (x534 (+ x1051 32)) x1613) (= (x193 (- x784 32)) x1780)) (and (=> x1428 x1437) (=> (and (not x1428) (= x181 0)) x484))) x936))
(assert (x1920 x389))
(assert (x1920 x662))
(assert (= (and x101 x1769) x311))
(assert (= (x1348 (x141 1000000000000000000000000000)) 1000000000000000000000000000))
(assert (x1920 x325))
(assert (x1920 x1878))
(assert (x1920 x1248))
(assert (x1920 x1060))
(assert (x1920 x1597))
(assert (x1920 x208))
(assert (= (x1348 (x1184 x1529 2)) (+ (x1348 x1529) 2)))
(assert (= x2120 (or x53 x1657)))
(assert (x1920 x2079))
(assert (x1920 x1925))
(assert (= x925 (and (not x349) x2099)))
(assert (x1920 x306))
(assert (= x1753 (and (not x529) x1526)))
(assert (x1920 x1277))
(assert (x1920 x331))
(assert (= (or x1962 x2040) x2201))
(assert (x1920 x343))
(assert (x1920 x710))
(assert (x1920 x1944))
(assert (x1920 x281))
(assert (x1920 x1148))
(assert (x1264 x1145))
(assert (x1920 x1685))
(assert (x1920 x1061))
(assert (= x216 (and x2160 x1969)))
(assert (x1920 x11))
(assert (x1920 x135))
(assert (x1920 x975))
(assert (x1920 x723))
(assert (x1920 x1139))
(assert (x1264 x1404))
(assert (x1920 x1362))
(assert (x1920 x2134))
(assert (= x967 (or x846 x1121)))
(assert (x1920 x900))
(assert (x1920 x1291))
(assert (x1920 x418))
(assert (x1920 x1971))
(assert (x1920 x1556))
(assert (= 4294967296 (x1348 (x141 4294967296))))
(assert (x1920 x1754))
(assert (x1920 x685))
(assert (= (and x1627 x1763) x25))
(assert (x1920 x2004))
(assert (= x1959 (and x1378 (not x1748))))
(assert (x1920 x188))
(assert (x1920 x1336))
(assert (x1920 x1270))
(assert (x1920 x2138))
(assert (x1264 x474))
(assert (= x2140 (and x703 x1654)))
(assert (x1920 x1950))
(assert (x1920 x212))
(assert (= (and (not x2025) x352) x84))
(assert (x1920 x1085))
(assert (x1920 x1334))
(assert (= x1071 (=> (and (= (x534 (+ x2071 32)) x992) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x828) x2008) (= (x1116 x1240) x1147) (= x2071 (x534 (+ x1880 x2008))) (= x1240 (x1637 x1253)) (= x695 (x193 (- x2071 x816))) (= (> x1147 0) x687) (= x1525 (x534 (+ x816 32))) (= (x534 (+ 31 x1396)) x828) (= (x534 (+ 32 x1544)) x1253) (= x620 (x534 (+ 32 x1240)))) (and (=> (and x687 (and (= x992 x1512) (= (x1572 x1106) x407) (= (< 32 x1147) x616) (= x620 x1106))) (and (=> (and x616 (and (= (x1070 x2063) x1541) (= (x534 (+ 32 x992)) x2164) (= x1535 (< 64 x1147)) (= (x534 (+ 32 x620)) x2063))) (and (=> (and (= x1389 64) (not x1535)) x1153) (=> (and x1535 (and (= (x534 (+ x620 64)) x1876) (= (< 96 x1147) x1007) (= x413 (x534 (+ x992 64))) (= (x161 x1876) x280))) (and (=> x1007 x1908) (=> (and (= 96 x1389) (not x1007)) x1153))))) (=> (and (= 32 x1389) (not x616)) x1153))) (=> (and (not x687) (= 0 x1389)) x1153)))))
(assert (x1920 x1927))
(assert (x1920 x571))
(assert (x1920 x334))
(assert (x1920 x474))
(assert (= (and (not x1575) x1333) x70))
(assert (x1920 x1494))
(assert (x1920 x356))
(assert (x1920 x1115))
(assert (x1920 x14))
(assert (x1920 x1288))
(assert (x1920 x439))
(assert (x1920 x1022))
(assert (x1920 x247))
(assert (x1920 x2070))
(assert (x1920 x525))
(assert (x1491 x246 x1404))
(assert (= (and (not x59) x311) x920))
(assert (x1920 x1922))
(assert (x1920 x1982))
(assert (x1920 x1363))
(assert (x1920 x416))
(assert (x1920 x774))
(assert (x1920 x269))
(assert (x1920 x1287))
(assert (= x449 (and x1442 (not x1645))))
(assert (x1264 x1492))
(assert (x1920 x1413))
(assert (= (x1762 x669) 0))
(assert (x1920 x9))
(assert (x1920 x244))
(assert (x1920 x733))
(assert (x1920 x1469))
(assert (= (and (not x494) x382) x1163))
(assert (= x1193 (or x1934 x1682)))
(assert (= (and (not x1254) x2132) x2022))
(assert (x1264 x1545))
(assert (x1920 x995))
(assert (x1920 x1045))
(assert (x1920 x453))
(assert (x1920 x1039))
(assert (x1920 x100))
(assert (= x670 (or x7 x2022)))
(assert (x1920 x551))
(assert (x1920 x1724))
(assert (x1920 x1284))
(assert (x1920 x274))
(assert (x1920 x643))
(assert (x1920 x1607))
(assert (= (or x856 x918 x421 x221 x1959) x1210))
(assert (= (x1348 (x1184 x1043 1)) (+ 1 (x1348 x1043))))
(assert (= x618 (or x1760 x308)))
(assert (x1920 x1405))
(assert (x1920 x1835))
(assert (x1920 x1871))
(assert (x2075 x1246))
(assert (x1920 x1031))
(assert (x1920 x1160))
(assert (x1920 x2125))
(assert (x1920 x1232))
(assert (x1920 x1757))
(assert (x1920 x1025))
(assert (x1920 x926))
(assert (x1920 x1390))
(assert (x1920 x47))
(assert (= (and x529 x1526) x1819))
(assert (= (=> (and (= x1080 x1370) (= (or x924 (not x109)) x957) (= x924 (= x1987 x1370))) x957) x299))
(assert (x1920 x1219))
(assert (x1920 x780))
(assert (x1920 x645))
(assert (= x1719 (=> (and (= x1595 (ite x1705 1 0)) (= (x534 (+ x2004 31)) x668) (= x1486 (x534 (+ x1204 x2092))) (not (< 18446744073709551615 x722)) (= x596 (x534 (+ 32 x2092))) (= x140 (x534 (+ x130 x1915))) (= x1595 0) (= (> x1486 18446744073709551615) x1170) (not (> x130 18446744073709551615)) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479) (> x191 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x191 x479) (= (<= x191 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479)))) (= x1705 (or x2192 x1170)) (= x375 (< x1296 x2074)) (= (x844 x1118) x130) (= (x534 (+ 32 x1970)) x2004) (= x1204 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x668)) (= (x534 (+ x140 31)) x191) (= (< x1486 x2092) x2192) (not (< x479 x2074)) (= (x534 (+ 32 x140)) x1296) (= (x844 x140) x722) (= x1970 (mod (* 32 x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2074 (x534 (+ x1655 x1296))) (= (mod (* 128 x722) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1655)) (and (=> (and (not x375) (= x1486 x1051)) x839) (=> x375 x731)))))
(assert (x1920 x561))
(assert (= (=> (and (= x1784 (x534 (+ 31 x2179))) (not (< 18446744073709551615 x498)) (= x904 0) (= x11 (mod (* x913 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> x913 18446744073709551615)) (= (> x453 x1047) x428) (= (x534 (+ 32 x94)) x1293) (= (mod (* 32 x913) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x236) (= (> x94 x1783) x753) (= (or x753 x1112) x825) (= x1112 (< 18446744073709551615 x1783)) (= (x534 (+ 31 x1340)) x107) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x107) x1269) (= (x534 (+ x1047 x11)) x453) (= (x844 x1604) x498) (= (ite x825 1 0) x904) (= (x534 (+ x94 x1269)) x1783) (= (x844 x2179) x913) (= (x534 (+ x498 x1915)) x2179) (not (> x453 x479)) (= x1340 (x534 (+ 32 x236))) (or (and (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1784)) (and (= (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1784)) (> x479 x1784))) (= (x534 (+ 32 x2179)) x1047)) (and (=> x428 x1506) (=> (and (not x428) (= x1783 x281)) x1733))) x2100))
(assert (= (and x199 x1128) x295))
(assert (x1920 x1117))
(assert (x1126 x212))
(assert (x1920 x220))
(assert (x1920 x259))
(assert (x1920 x1974))
(assert (= (=> (and (= (x534 (+ 96 x776)) x1937) (= (x534 (+ 96 x1011)) x1451) (= x1745 (x457 x1937)) (= x319 (not (> x1089 128)))) (and (=> (= 128 x1926) x756) x319)) x1099))
(assert (x1920 x1080))
(assert (x1920 x2135))
(assert (x619 x1447))
(assert (x2075 x444))
(assert (x1920 x400))
(assert (= (and x1645 x1442) x121))
(assert (x1920 x73))
(assert (x1920 x1949))
(assert (x1264 x1516))
(assert (= 0 (x1762 x1876)))
(assert (x1920 x1545))
(assert (= x366 (=> (and (or (and (= (<= x870 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479)) (> x479 x870)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x870) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x534 (+ 32 x1100)) x1604) (= (x844 x1677) x1773) (= (x534 (+ x1677 32)) x1412) (= (x534 (+ x1435 x1455)) x1979) (= x1677 (x534 (+ x1915 x77))) (= x187 (x534 (+ x1455 32))) (not (> x1669 x479)) (= (x534 (+ 31 x1677)) x870) (= (x534 (+ 31 x505)) x2139) (not (< 18446744073709551615 x77)) (= (x844 x1604) x77) (= x651 (> x1455 x1979)) (= x505 (x534 (+ 32 x1710))) (= (< 18446744073709551615 x1979) x1830) (= x1710 (mod (* 32 x1773) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> x1773 18446744073709551615)) (= (< x1412 x1669) x529) (= x1669 (x534 (+ x1412 x893))) (= x1761 0) (= x1761 (ite x294 1 0)) (= x1435 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2139)) (= (or x1830 x651) x294) (= x893 (mod (* 32 x1773) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (not x529) (= x1979 x36)) x1865) (=> x529 x1593)))))
(assert (x1920 x1716))
(assert (= (and (not x2010) x219) x554))
(assert (x1920 x176))
(assert (x1920 x1684))
(assert (= x519 (and (not x671) x1037)))
(assert (x1920 x2168))
(assert (x1920 x1355))
(assert (x1920 x442))
(assert (x1920 x868))
(assert (= 0 (x1762 x1613)))
(assert (= (and x681 (not x1014)) x408))
(assert (x1920 x1185))
(assert (x1920 x783))
(assert (x1920 x184))
(assert true)
(assert (x1920 x1553))
(assert (x1920 x2034))
(assert (x1920 x180))
(assert (= x2093 (or x2030 x797)))
(assert (x1920 x1677))
(assert (x1920 x1604))
(assert (x1920 x1120))
(assert (x1920 x828))
(assert (x1920 x1486))
(assert (x2075 x932))
(assert (= 1949782873 (x1348 (x141 1949782873))))
(assert (x1920 x1399))
(assert (= x270 (and x84 x1756)))
(assert (= (and x317 (not x2055)) x1709))
(assert (= (x1546 1631253430) (x141 1631253430)))
(assert (= (x1762 x1240) 0))
(assert (x1920 x882))
(assert (= x847 (and x1124 x538)))
(assert (x1920 x1749))
(assert (x1920 x1356))
(assert (x1920 x1059))
(assert (= x466 (and x147 x1838)))
(assert (x1920 x10))
(assert (x1920 x355))
(assert (= (and x1328 x58) x1378))
(assert (x1920 x1004))
(assert (= x583 (or x557 x761 x27)))
(assert (x1920 x1406))
(assert (= (or (and (not x1223) x572) x547) x1167))
(assert (= x2112 (and (not x1875) x1903)))
(assert (= x1384 (or x1342 x1811)))
(assert (x1920 x704))
(assert (= (and x1266 (not x1636)) x434))
(assert (= x402 (and (not x292) x2103)))
(assert (x1920 x380))
(assert (= (and x425 x654) x468))
(assert (= (x1348 (x141 1099511627775)) 1099511627775))
(assert (x1920 x2008))
(assert (x2075 x107))
(assert (x1920 x636))
(assert (x1920 x695))
(assert (x1920 x735))
(assert (x1264 x383))
(assert (x1264 x2065))
(assert (= (x141 2835717307) (x1546 2835717307)))
(assert (= x484 (=> (and (= (> x181 x1836) x2199) (or (not x2199) (and (= x1062 (x534 (+ x1847 x1836))) x2199))) x129)))
(assert (x1920 x1482))
(assert (x1920 x481))
(assert (= (x789 x876) 0))
(assert (x1920 x332))
(assert (x1920 x1407))
(assert (x1920 x155))
(assert (x1920 x1051))
(assert (x1920 x93))
(assert (x1920 x376))
(assert (x1920 x2036))
(assert (x1920 x1990))
(assert (x1920 x642))
(assert (x1920 x1797))
(assert (x1920 x1511))
(assert (= x1801 (x1348 (x1546 x1801))))
(assert (x1920 x536))
(assert (x1920 x724))
(assert (x1920 x720))
(assert (x1920 x32))
(assert (x1920 x1565))
(assert (x1920 x181))
(assert (x1920 x2179))
(assert (= (=> (and (= x1787 (x944 x669)) (= (x534 (+ 96 x851)) x669) (= x1473 (not (< 128 x1396))) (= (x534 (+ x1880 96)) x452)) (and x1473 (=> (= 128 x1380) x1620))) x2128))
(assert (x1920 x1646))
(assert (x1920 x772))
(assert (x1920 x506))
(assert (x1264 x1852))
(assert (x1920 x1095))
(assert (x1920 x33))
(assert (x2075 x383))
(assert (x1920 x1610))
(assert (x2075 x1285))
(assert (= 428079936 (x1348 (x141 428079936))))
(assert (x1920 x1722))
(assert (= (and x572 x1223) x547))
(assert (x1920 x57))
(assert (x1264 x252))
(assert (x1920 x1611))
(assert (x619 x1205))
(assert (x1920 x915))
(assert (x1920 x1595))
(assert (= (and x1535 x1402) x507))
(assert (= (x141 599290589) (x1546 599290589)))
(assert (x1920 x2183))
(assert (x1920 x1795))
(assert (x1920 x1936))
(assert (x1920 x1019))
(assert (x1920 x1414))
(assert (x1920 x1171))
(assert (x1920 x456))
(assert (= x1811 (and x476 x1210)))
(assert (x1491 x1050 x1701))
(assert (x1920 x807))
(assert (x1920 x932))
(assert (x1920 x288))
(assert (= x1471 (=> (and (= (< x1631 x1831) x1216) (or (and (= (x534 (+ x1213 x1631)) x258) x1216) (not x1216))) x1571)))
(assert (= x1741 (and x2110 x1846)))
(assert (x1920 x1941))
(assert (= x353 (and (not x1713) x1996)))
(assert (=> (>= 10000 x607) (= (x141 x607) (x1546 x607))))
(assert (= x1969 (and (not x199) x1128)))
(assert (= 1703538655 (x1348 (x141 1703538655))))
(assert (x1920 x268))
(assert (x1920 x1256))
(assert (= (x760 x342) 0))
(assert (x1920 x1217))
(assert (= (and x422 x1457) x338))
(assert (x1920 x88))
(assert (= (or x1299 x998) x1158))
(assert (= x1242 (and x1386 x455)))
(assert (= (x1762 x1355) 0))
(assert (x1920 x26))
(assert (x1920 x1089))
(assert (= (and x1851 x1180) x660))
(assert (= x856 (and x1748 x1378)))
(assert (x1920 x1839))
(assert (x1920 x1274))
(assert (= (or x1818 (and (not x478) x209)) x2099))
(assert (x1920 x952))
(assert (= (and x937 x243) x472))
(assert (= (and x513 x114) x2002))
(assert (= x1268 (and x817 (not x359))))
(assert (= x178 (or x686 x840 x1666 x1369 x1742)))
(assert (x1264 x2125))
(assert (x1920 x1861))
(assert (x1920 x307))
(assert (x1200 x1871))
(assert (x1920 x1439))
(assert (x1920 x1383))
(assert (x1920 x222))
(assert (= (x141 22140752835961941075817313386879028057460502132199729129551447365926944505856) (x1546 22140752835961941075817313386879028057460502132199729129551447365926944505856)))
(assert (x1920 x1914))
(assert (x1920 x740))
(assert (x1920 x1896))
(assert (x1920 x984))
(assert (= (and x127 x207) x937))
(assert (= (and x2019 (not x1428)) x1760))
(assert (x1920 x656))
(assert (x1920 x866))
(assert (x1920 x1307))
(assert (= (and x513 (not x114)) x1237))
(assert (x1920 x103))
(assert (x1920 x2187))
(assert (= (x1762 x1228) 0))
(assert (= 0 (x1762 x915)))
(assert (= (and (not x1134) x1283) x1703))
(assert (x1920 x405))
(assert (x1920 x1073))
(assert (x1920 x2092))
(assert (x1920 x843))
(assert (x1126 x2012))
(assert (x1920 x1638))
(assert (= (and x292 x2103) x755))
(assert (x1920 x1647))
(assert (x1920 x955))
(assert (x1920 x512))
(assert (x1264 x1246))
(assert (x1920 x664))
(assert (x619 x879))
(assert (x1920 x1418))
(assert (x1920 x711))
(assert (x1920 x1269))
(assert (x1920 x550))
(assert (x1920 x1097))
(assert (x1920 x620))
(assert (= x1942 (=> (and (= (x534 (+ x1790 4)) x30) (= (x193 (- x565 32)) x1554) (= (x348 1461501637330902918203684832716283019655932542975 x12) x1684) (= x1769 (< 0 x1631)) (= (x534 (+ x30 32)) x877) (= (x534 (+ 32 x964)) x704) (= x1631 (x1179 x1606)) (= (x534 (+ 64 x964)) x1790) (= x343 (x348 1461501637330902918203684832716283019655932542975 x212)) (= x882 (x534 (+ 32 x1606))) (= (x193 (- x1790 x1606)) x565) (= (x348 26959946667150639794667015087019630673637144422540572481103610249215 x597) x211) (= (x534 (+ x30 64)) x174) (= x1213 (x534 (+ x174 32))) (= x597 (x1054 x882)) (= x550 (x534 (+ 4238056678808933066457772256406219440718756300954938350892797929791311314944 x211))) (= x964 (x534 (+ x1606 36)))) (and (=> (and (= 0 x1831) (not x1769)) x1471) (=> (and (and (= x1881 (x1965 x587)) (= x59 (> x1631 32)) (= x882 x587) (= x1213 x1177)) x1769) (and (=> (and (= 32 x1831) (not x59)) x1471) (=> (and x59 (and (= (> x1631 64) x207) (= x1974 (x534 (+ x1213 32))) (= x1347 (x534 (+ x882 32))) (= x2072 (x1668 x1347)))) (and (=> (and x207 (and (= (> x1631 96) x243) (= x1363 (x534 (+ x1213 64))) (= (x534 (+ x882 64)) x1279) (= (x1727 x1279) x1005))) (and (=> (and (not x243) (= 96 x1831)) x1471) (=> x243 x1740))) (=> (and (= x1831 64) (not x207)) x1471)))))))))
(assert (x1126 x820))
(assert (= (and (not x362) x1679) x1058))
(assert (x1920 x1236))
(assert (x1920 x2108))
(assert (= (and (not x1349) x449) x1332))
(assert (= (=> (and (= x2148 (not (> x165 128))) (= x2048 (x534 (+ x342 96))) (= (x534 (+ 96 x1214)) x1075) (= x273 (x1376 x2048))) (and (=> (= x1843 128) x2190) x2148)) x98))
(assert (x1264 255))
(assert (x1920 x1783))
(assert (x1920 x1902))
(assert (x1920 x1516))
(assert (x1920 x1606))
(assert (x1385 x307))
(assert (= x943 (and x829 x2129)))
(assert (x1264 x356))
(assert (x1920 x374))
(assert (= (or x670 x216) x1906))
(assert (=> (>= 10000 x577) (= (x141 x577) (x1546 x577))))
(assert (x1920 x945))
(assert (x1491 x2108 x962))
(assert (= x1199 (and x1892 x1069)))
(assert (= (and x2104 x1312) x412))
(assert (x1126 x327))
(assert (x1920 x245))
(assert (x1920 x1468))
(assert (= (x1348 (x1546 x1205)) x1205))
(assert (x1920 x1564))
(assert (= (and x1821 x177) x58))
(assert (x1920 x2031))
(assert (= (or x961 x1559) x1764))
(assert (x1920 x1885))
(assert (x1920 x1570))
(assert (x619 x1839))
(assert (x1920 x485))
(assert (= x1526 (or x1532 x2112)))
(assert (x1920 x931))
(assert (x1920 x1352))
(assert (x1920 x1393))
(assert (x1920 x587))
(assert (x1920 x876))
(assert (= (and (not x2089) x1015) x1333))
(assert (x1920 x1464))
(assert (= x1234 (and x1550 x1884)))
(assert (= x951 (and x1673 x1632)))
(assert (x1126 x12))
(assert (x1491 x1712 x252))
(assert (x1920 x344))
(assert (= (=> (and (or (not x1563) (and (= x989 (x534 (+ x1089 x1011))) x1563)) (= x1563 (> x1926 x1089))) x838) x756))
(assert (x1920 x261))
(assert (x1920 x1774))
(assert (x1920 x1736))
(assert (x1920 x76))
(assert (= (x1348 (x141 89953063794570797914675343120038501642627609741519254829220540789936042803200)) 89953063794570797914675343120038501642627609741519254829220540789936042803200))
(assert (x1920 x345))
(assert (x1920 x1889))
(assert (x1920 x40))
(assert (= (x1348 (x1184 x594 1)) (+ (x1348 x594) 1)))
(assert (x1920 x701))
(assert (x1920 x1784))
(assert (x1920 x805))
(assert (= (x141 404098525) (x1546 404098525)))
(assert (x1920 x1366))
(assert (x1920 x1145))
(assert (x1920 x2180))
(assert (x1920 x576))
(assert (x1920 x1577))
(assert (= (and x1838 (not x147)) x836))
(assert (x1264 x1172))
(assert (x1920 x1425))
(assert (= x435 (and (not x1216) x1954)))
(assert (= (x1348 (x141 1818647125)) 1818647125))
(assert (= (x1348 (x1546 x1447)) x1447))
(assert (x1920 x1702))
(assert (x1920 x1951))
(assert (x1920 x1802))
(assert (= 0 (x1762 x518)))
(assert (= x1851 (and x1266 x1636)))
(assert (=> (<= x662 10000) (= (x1546 x662) (x141 x662))))
(assert (x1920 x2101))
(assert (x1920 x1773))
(assert (x1920 x1558))
(assert (= (and x1069 (not x1892)) x431))
(assert (= (x1546 26959946667150639794667015087019630673637144422540572481103610249215) (x141 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1920 x1188))
(assert (x2075 x29))
(assert (x1920 x2059))
(assert (x1920 x2063))
(assert (x1920 x870))
(assert (x1920 x857))
(assert (x1920 x2052))
(assert (= (x141 31536000) (x1546 31536000)))
(assert (= x2117 (and (not x1935) x1461)))
(assert (x1264 x40))
(assert (= x469 (and (not x1550) x1884)))
(assert (x2075 x1516))
(assert (x1920 x399))
(assert (x1920 x2172))
(assert (x1920 x2170))
(assert (x1920 x1798))
(assert (x1920 x249))
(assert (x1264 x2057))
(assert (= x754 (x1348 (x1546 x754))))
(assert (= (and x2201 x1046) x1173))
(assert (= x993 (and x362 x1679)))
(assert (= (and x2129 (not x829)) x1899))
(assert (= x183 (=> (= x517 x223) x2146)))
(assert (x1920 x2191))
(assert (x1920 x473))
(assert (x1920 x2085))
(assert (x1920 x3))
(assert (x1920 x1517))
(assert (x1920 x979))
(assert (x1920 x1678))
(assert (x1920 x777))
(assert (x1264 x1564))
(assert (= (and x858 (not x200)) x1015))
(assert (x1920 x1260))
(assert (= x974 (=> (and (= (> x2191 x1344) x1993) (or (and x1993 (= x298 (x534 (+ x503 x1344)))) (not x1993))) x1064)))
(assert (x1920 x1130))
(assert (= (x1348 (x1184 x978 1)) (+ 1 (x1348 x978))))
(assert (x1920 x770))
(assert (= (x1546 452312848583266388373324160190187140051835877600158453279131187530910662655) (x141 452312848583266388373324160190187140051835877600158453279131187530910662655)))
(assert (x1920 x904))
(assert (= x279 (and x1234 (not x1643))))
(assert (x1920 x768))
(assert (= (and x1764 (not x1225)) x1143))
(assert (x1920 x1329))
(assert (x1920 x1691))
(assert (x1920 x1800))
(assert (= (and x1193 (not x803)) x1245))
(assert (x1264 1461501637330902918203684832716283019655932542975))
(assert (x619 x1320))
(assert (x1920 x1955))
(assert (x1920 x1027))
(assert (x1920 x1125))
(assert (x1920 x2169))
(assert (x1920 x1843))
(assert (x1920 x409))
(assert (x1920 x174))
(assert (x1920 x29))
(assert (x1920 x67))
(assert (= (=> (and (= (x534 (+ x149 31)) x600) (= (> x807 x926) x1502) (>= 1461501637330902918203684832716283019655932542975 x1462) (= x1555 (x534 (+ 32 x1802))) (= (< 18446744073709551615 x289) x758) (= (> x991 x289) x869) (= x1462 (x844 x1915)) (= x2096 (or x1433 x398)) (= (> x1791 18446744073709551615) x1433) (= x627 (x534 (+ 32 x289))) (= (ite x2051 1 0) x1975) (or (and (> x600 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x600 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479)) (> x479 x600))) (not (> x807 x479)) (not (> x20 18446744073709551615)) (not (or (and (> 160 x1574) (= (<= x1574 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1574))) (= 0 x1982) (= x1982 (ite x2096 1 0)) (= x149 (x534 (+ x1198 x1915))) (= (or x869 x758) x2051) (= (x534 (+ x628 x289)) x1791) (= (mod (* x20 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1097) (= (x534 (+ x926 x1097)) x807) (= x1975 0) (= (x534 (+ x149 32)) x926) (= (mod (* x20 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1802) (= x628 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1246)) (= (x844 x149) x20) (= x1246 (x534 (+ x1555 31))) (not (> x1198 18446744073709551615)) (= (x844 x1100) x1198) (= x289 (x534 (+ 160 x991))) (= x398 (> x289 x1791))) (and (=> (and (= x1791 x1793) (not x1502)) x1997) (=> x1502 x160))) x1720))
(assert (x1920 x231))
(assert (x1920 x1714))
(assert (x1920 x1036))
(assert (x1920 x87))
(assert (= (x1348 (x141 791671133)) 791671133))
(assert (x1920 x1316))
(assert (x2075 x785))
(assert (x1920 x2114))
(assert (x1920 x539))
(assert (x1920 x128))
(assert (x1264 x1430))
(assert (x1920 x1596))
(assert (x1920 x2005))
(assert (= x129 (=> (and (or (and x1935 (and x626 (= x1587 x51) (< x2050 4294967296) (= x240 x1659) (= (x2118 (x1546 x652)) x1707) (= x1288 x1035) (= x1182 x88) (= (= (x1730 (x1546 x1801)) x801) x1294) (= x1115 x481) (= x883 x1055) (= (x2118 (x1546 x1801)) x801) (= (<= x1707 (x1730 (x1546 x652))) x626) x1294 (= x1390 x1789))) (and (not x1935) (and (= x1319 x51) (= x646 x1182) (= x1288 x774) (= x1113 x240) (= x481 x922) (= x883 x622) (= x1329 x1390)))) (= (> x1714 0) x1935)) x1675)))
(assert (x1920 x296))
(assert (= (x141 1099511627776) (x1546 1099511627776)))
(assert (x1920 x597))
(assert (= (and x166 (not x1381)) x804))
(assert (= x601 (=> (and (= x723 x503) (= x2178 (not (> x1344 32))) (= x1002 x561) (= (x1929 x561) x1883)) (and (=> (= x2191 32) x974) x2178))))
(assert (x1920 x1107))
(assert (= (and (not x1803) x899) x895))
(assert (=> (>= 10000 x1251) (= (x1546 x1251) (x141 x1251))))
(assert (x1920 x1133))
(assert (x1920 x1789))
(assert (x1920 x1785))
(assert (x1920 x1696))
(assert (x1920 x600))
(assert (= (x141 13116146399946975302596254860212112502091447646307958763727216123866297401344) (x1546 13116146399946975302596254860212112502091447646307958763727216123866297401344)))
(assert (= x611 (and (not x1977) x852)))
(assert (x1920 x2119))
(assert (x1920 x1569))
(assert (x1920 x2003))
(assert (x1920 x298))
(assert (x1264 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x703 (and x1980 x684)))
(assert (= (x1348 (x141 1008072988)) 1008072988))
(assert (= (and x1821 (not x177)) x221))
(assert (x1920 x1477))
(assert (= (=> (and (= (x844 x440) x1407) (= x117 (x534 (+ 32 x643))) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x752) true) (> 128 x752)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x752))) (= (x844 x643) x202) (= (x534 (+ 32 x440)) x376) (= (x534 (+ x376 32)) x1910) (= (x844 x376) x1689) (= x1579 (ite x23 1 0)) (= (x534 (+ x1207 32)) x1716) (>= 452312848583266388373324160190187140051835877600158453279131187530910662655 x202) (= x1207 (x534 (+ 32 x224))) (= (x534 (+ 32 x1716)) x1639) (= (> x1041 18446744073709551615) x954) (= x440 (x534 (+ 32 x117))) (= (or x535 x954) x23) (= x301 (x844 x117)) (= (x193 (- x479 x643)) x752) (= x535 (> x224 x1041)) (= (not (> x1556 x1910)) x171) (= x1041 (x534 (+ 128 x224))) (>= 255 x301) (= 0 x1579)) (and (=> (= x1232 x1041) x151) x171)) x391))
(assert (= 0 (x1762 x1222)))
(assert (= (=> (and (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x145) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x145 x479)) (and (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x145 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1262 (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1145)) (= (or x1434 x254) x2053) (= x2122 (x534 (+ x700 x808))) (= x1444 (x534 (+ x318 x306))) (= x700 (x534 (+ 32 x999))) (= (x534 (+ 32 x1424)) x1662) (= (x534 (+ x332 32)) x1670) (= x2046 (x844 x1424)) (= x1424 (x534 (+ 32 x1670))) (= (x534 (+ x1867 x306)) x2172) (= (x534 (+ x808 31)) x1852) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1359) x78) (= (x534 (+ x2172 32)) x994) (= (x534 (+ x1047 x4)) x306) (= x1280 (not (< x2 x453))) (= (or x113 x492) x471) (= x329 (ite x320 1 0)) (= x740 0) (= (x534 (+ x389 x808)) x1135) (<= x253 18446744073709551615) (= (x844 x1444) x808) (= 0 x1418) (= (x844 x1494) x103) (= x97 (x534 (+ 32 x306))) (= x2176 (x534 (+ 32 x1262))) (= x145 (x534 (+ x1444 31))) (= (x534 (+ 32 x2044)) x1419) (= x253 (x844 x1670)) (= (> x999 18446744073709551615) x1434) (>= 18446744073709551615 x103) (= x1496 (x534 (+ 32 x1783))) (= x1271 (x844 x473)) (not (< x479 x1135)) (= x575 (x534 (+ x1496 32))) (= x113 (> x1209 18446744073709551615)) (<= x1480 18446744073709551615) (not (< 18446744073709551615 x728)) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1852) x2169) (= x320 (not x275)) (= (x193 (- x479 x1955)) x866) (= (< x417 x1783) x81) (= (> x999 x1209) x492) (= x1289 (ite x2053 1 0)) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x40) x203) (= x2056 (x534 (+ x994 x728))) (= (x534 (+ 31 x728)) x1145) (= (x534 (+ 32 x222)) x942) (= x40 (x534 (+ x2176 31))) (= x486 (or x256 x81)) (= (x844 x2172) x728) (not (< x479 x2056)) (= x254 (> x417 x999)) (= x318 (x844 x97)) (or (and (> x1872 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1872 x479) (= (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1872)))) (>= 18446744073709551615 x2046) (= x1209 (x534 (+ x78 x999))) (= x329 x1271) (= x1494 (x534 (+ 32 x473))) (= x473 (x534 (+ 32 x97))) (= (x844 x1047) x4) (= (x844 x1662) x610) (= (= x1271 0) x275) (= (x534 (+ x1494 32)) x1117) (= x1359 (x534 (+ 31 x1990))) (not (or (and (< x866 288) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x866) true)) (> x866 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x844 x306) x1867) (not (> x4 18446744073709551615)) (not (< 18446744073709551615 x808)) (= x390 (x534 (+ 32 x945))) (= x256 (> x417 18446744073709551615)) (= x999 (x534 (+ x417 x203))) (= (ite x471 1 0) x1418) (= (x534 (+ 32 x942)) x2044) (= x332 (x534 (+ 32 x1117))) (= 0 x1289) (= x222 (x534 (+ 32 x390))) (= x1480 (x844 x1117)) (= (x534 (+ x1047 x4)) x1955) (= x1872 (x534 (+ x2172 31))) (= x417 (x534 (+ x1783 288))) (not (< 18446744073709551615 x318)) (= x1477 (x534 (+ x417 32))) (= (x534 (+ 32 x1047)) x2) (not (> x1867 18446744073709551615)) (= (x534 (+ 32 x575)) x945) (<= x610 18446744073709551615) (= (ite x486 1 0) x740) (= x1576 (x844 x332)) (= x389 (x534 (+ 32 x1444))) (= (x534 (+ x728 x1477)) x1808) (<= x1576 18446744073709551615) (= (x534 (+ x2169 32)) x1990)) (and (=> (= x1209 x281) x1733) x1280)) x1506))
(assert (=> (>= 10000 x212) (= (x1546 x212) (x141 x212))))
(assert (= (or x1176 x1729) x1848))
(assert (= 0 (x1762 x716)))
(assert (x1264 x2012))
(assert (x1920 x500))
(assert (x1264 x1072))
(assert (x1920 x2162))
(assert (x1920 x504))
(assert (x1920 x673))
(assert (x1920 x917))
(assert (x2075 x668))
(assert (x1920 x1228))
(assert (x1920 x223))
(assert (x1920 x2011))
(assert (x1920 x136))
(assert (x1920 x110))
(assert (x1920 x41))
(assert (x1920 x1104))
(assert (x1920 x1101))
(assert (x1920 x38))
(assert (x1264 x1050))
(assert (x1920 x130))
(assert (= x1192 (or x1327 x2195 x1199 x431 x353)))
(assert (x1920 x1831))
(assert (= (and (not x228) x773) x852))
(assert (x1920 x1423))
(assert (x1920 x1513))
(assert (= 0 (x760 x650)))
(assert (x1920 x6))
(assert (= (x1348 (x141 599290589)) 599290589))
(assert (x1920 x1799))
(assert (x1920 x1692))
(assert (x1920 x291))
(assert (x1920 x939))
(assert (x1920 x1062))
(assert (x1920 x878))
(assert (x2075 x1492))
(assert (= x2061 (and x1384 x687)))
(assert (= x1315 (and x1014 x681)))
(assert (x1920 x1630))
(assert (x1200 x474))
(assert (= x1865 (=> (and (= x1475 (mod (* x2124 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (> x479 x1397) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1397) (<= x479 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479) (> x1397 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x224 (x534 (+ x36 x1663))) (= x1000 (or x2037 x144)) (= x1397 (x534 (+ 31 x1800))) (= x1667 (x534 (+ x1475 32))) (= 0 x92) (= (x348 115792089237316195423570985008687907853269984665640564039457584007913129639904 x291) x1663) (= x144 (> x224 18446744073709551615)) (not (< x479 x1556)) (= (x534 (+ x1667 31)) x291) (= (ite x1000 1 0) x92) (= (x534 (+ x1604 32)) x1118) (= x1607 (mod (* x2124 128) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> x2107 18446744073709551615)) (= x2037 (< x224 x36)) (= (x534 (+ x1915 x2107)) x1800) (= (> x1556 x643) x698) (= (x844 x1800) x2124) (= x2107 (x844 x1118)) (= (x534 (+ x36 32)) x799) (= (x534 (+ x643 x1607)) x1556) (not (> x2124 18446744073709551615)) (= x643 (x534 (+ 32 x1800)))) (and (=> x698 x391) (=> (and (not x698) (= x1232 x224)) x151)))))
(assert (x2075 x2057))
(assert (x1264 x1871))
(assert (= (or x583 x388) x858))
(assert (x2075 x812))
(assert (x1920 x1890))
(assert (x1920 x2))
(assert (= x1812 (and x2132 x1254)))
(assert (x1264 x1770))
(assert (= 0 (x1762 x1577)))
(assert (= x85 (and x1234 x1643)))
(assert (= x2156 (and x858 x200)))
(assert (x1920 x2133))
(assert (= x1841 (and x1123 x2143)))
(assert (= (and x1058 (not x567)) x947))
(assert (x1920 x460))
(assert (= x1150 (and x382 x494)))
(assert (= x358 (and (not x1563) x1192)))
(assert (x1920 x133))
(assert (x1491 x902 x1589))
(assert (x1920 x1203))
(assert (x1920 x766))
(check-sat)
(exit)