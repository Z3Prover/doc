(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x4297 0)) (((x1460 (x4094 x4297) (x2235 x4297) (x4185 Int)) (x2486 (x123 Int)) (x3148 (x1334 x4297) (x460 Int)))))
(declare-fun x147 () Bool)
(declare-fun x2383 () Int)
(declare-fun x940 () Int)
(declare-fun x3483 () Int)
(declare-fun x2195 () Int)
(declare-fun x2363 () Bool)
(declare-fun x892 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x3450 () x4297)
(declare-fun x1948 () Bool)
(declare-fun x313 () Int)
(declare-fun x120 () Int)
(declare-fun x2253 () Bool)
(declare-fun x4317 () x4297)
(declare-fun x1669 () Int)
(declare-fun x2252 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x113 () Bool)
(declare-fun x3570 () Int)
(declare-fun x2633 () Int)
(declare-fun x1143 () Bool)
(declare-fun x3601 () Int)
(declare-fun x590 () Bool)
(declare-fun x2763 () Int)
(declare-fun x114 () Bool)
(declare-fun x2701 () x4297)
(declare-fun x3674 () Bool)
(declare-fun x2458 () x4297)
(declare-fun x2704 () Int)
(declare-fun x815 () Bool)
(declare-fun x364 () Int)
(declare-fun x1598 () Int)
(declare-fun x164 () Bool)
(declare-fun x2862 () Int)
(declare-fun x3671 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x3346 () Bool)
(declare-fun x1533 () Int)
(declare-fun x180 () Bool)
(declare-fun x558 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x3291 () x4297)
(declare-fun x2867 () Bool)
(declare-fun x82 () Bool)
(declare-fun x2646 () Int)
(declare-fun x1942 () Int)
(declare-fun x1249 () Bool)
(declare-fun x4335 () Int)
(declare-fun x1429 () Bool)
(declare-fun x740 () Bool)
(declare-fun x3233 () Int)
(declare-fun x3329 () Int)
(declare-fun x281 () Bool)
(declare-fun x3796 () x4297)
(declare-fun x1597 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x1665 () x4297)
(declare-fun x3204 () Int)
(declare-fun x1363 () Bool)
(declare-fun x1147 () Int)
(declare-fun x3202 () Bool)
(declare-fun x3313 () Int)
(declare-fun x574 () Int)
(declare-fun x1698 () x4297)
(declare-fun x3921 () Bool)
(declare-fun x3024 () Bool)
(declare-fun x2520 () Int)
(declare-fun x506 () Bool)
(declare-fun x2737 () Bool)
(declare-fun x124 () Int)
(declare-fun x3607 () Bool)
(declare-fun x2058 () Int)
(declare-fun x941 () Bool)
(declare-fun x3287 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x2870 () Int)
(declare-fun x534 () Bool)
(declare-fun x1485 () Int)
(declare-fun x1401 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x3260 () Int)
(declare-fun x1336 () Int)
(declare-fun x4050 () Int)
(declare-fun x2347 () Bool)
(declare-fun x2428 () Int)
(declare-fun x3766 () Int)
(declare-fun x3697 () Bool)
(declare-fun x3453 () Bool)
(declare-fun x864 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x1055 () Int)
(declare-fun x2014 () x4297)
(declare-fun x607 () Int)
(declare-fun x380 () Int)
(declare-fun x422 () Bool)
(declare-fun x342 () Int)
(declare-fun x1087 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x4024 () Int)
(declare-fun x4331 () Int)
(declare-fun x169 () Int)
(declare-fun x3540 () Bool)
(declare-fun x2877 () Int)
(declare-fun x2283 () Int)
(declare-fun x1754 () Bool)
(declare-fun x424 () Bool)
(declare-fun x58 () Int)
(declare-fun x2455 () Bool)
(declare-fun x3339 () Int)
(declare-fun x910 () Int)
(declare-fun x3395 () Int)
(declare-fun x2500 () Bool)
(declare-fun x2754 () Int)
(declare-fun x3791 () Bool)
(declare-fun x1900 () Int)
(declare-fun x842 () Int)
(declare-fun x2760 () Int)
(declare-fun x772 () Int)
(declare-fun x1090 () Int)
(declare-fun x1105 () Bool)
(declare-fun x3571 () x4297)
(declare-fun x2855 () Bool)
(declare-fun x385 () x4297)
(declare-fun x1726 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x3619 () Bool)
(declare-fun x420 () Bool)
(declare-fun x2922 () Bool)
(declare-fun x3583 () x4297)
(declare-fun x3555 () x4297)
(declare-fun x1274 () Int)
(declare-fun x3956 () Int)
(declare-fun x3134 () Bool)
(declare-fun x3818 () x4297)
(declare-fun x434 () Int)
(declare-fun x1052 () Bool)
(declare-fun x391 () Int)
(declare-fun x1511 () Int)
(declare-fun x3849 () Bool)
(declare-fun x3578 () Int)
(declare-fun x2736 () Bool)
(declare-fun x3792 () Bool)
(declare-fun x3629 () Int)
(declare-fun x2585 () Bool)
(declare-fun x2715 () Bool)
(declare-fun x182 () Bool)
(declare-fun x2586 () Bool)
(declare-fun x2425 () x4297)
(declare-fun x1017 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x2800 () Int)
(declare-fun x2700 () Int)
(declare-fun x3229 () Int)
(declare-fun x3288 () Bool)
(declare-fun x3092 () Bool)
(declare-fun x899 () Bool)
(declare-fun x1904 () Int)
(declare-fun x3809 () Int)
(declare-fun x1344 () x4297)
(declare-fun x490 () Bool)
(declare-fun x3896 () Bool)
(declare-fun x3506 () x4297)
(declare-fun x1018 () Int)
(declare-fun x3532 () Int)
(declare-fun x3123 () Bool)
(declare-fun x2004 () Int)
(declare-fun x1657 () Bool)
(declare-fun x2569 () Int)
(declare-fun x3767 () Int)
(declare-fun x4274 () Bool)
(declare-fun x4111 () Int)
(declare-fun x2900 () Bool)
(declare-fun x2229 () Int)
(declare-fun x3436 () Bool)
(declare-fun x384 () Int)
(declare-fun x4280 () Int)
(declare-fun x3207 () x4297)
(declare-fun x1394 () Bool)
(declare-fun x3863 () Bool)
(declare-fun x106 () x4297)
(declare-fun x1165 () Int)
(declare-fun x3716 () Int)
(declare-fun x350 () Bool)
(declare-fun x3019 () Bool)
(declare-fun x2625 () Bool)
(declare-fun x3664 () Bool)
(declare-fun x3230 () Bool)
(declare-fun x3181 () x4297)
(declare-fun x107 () Bool)
(declare-fun x370 () Bool)
(declare-fun x1193 () Int)
(declare-fun x1111 () Int)
(declare-fun x3190 () Int)
(declare-fun x1799 () Bool)
(declare-fun x1971 () Int)
(declare-fun x4191 () Int)
(declare-fun x461 () Bool)
(declare-fun x3954 () Int)
(declare-fun x539 () Bool)
(declare-fun x1573 () Int)
(declare-fun x774 () Bool)
(declare-fun x3692 () x4297)
(declare-fun x1544 () Int)
(declare-fun x1070 () Int)
(declare-fun x2018 () Bool)
(declare-fun x3399 () Bool)
(declare-fun x4009 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x308 () Bool)
(declare-fun x3228 () x4297)
(declare-fun x1723 () Int)
(declare-fun x660 () Bool)
(declare-fun x4350 () Int)
(declare-fun x3056 () Int)
(declare-fun x2771 () Bool)
(declare-fun x2679 () Int)
(declare-fun x4370 () Bool)
(declare-fun x3232 () Bool)
(declare-fun x3241 () Bool)
(declare-fun x1337 () Int)
(declare-fun x2288 () Int)
(declare-fun x71 () Bool)
(declare-fun x2699 () Bool)
(declare-fun x419 () Bool)
(declare-fun x4314 () Bool)
(declare-fun x3215 () Int)
(declare-fun x1975 () x4297)
(declare-fun x1465 () Bool)
(declare-fun x2338 () Int)
(declare-fun x1666 () x4297)
(declare-fun x1612 () Int)
(declare-fun x659 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x2530 () Bool)
(declare-fun x2638 () Int)
(declare-fun x598 () x4297)
(declare-fun x3514 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1071 () Bool)
(declare-fun x2574 () Bool)
(declare-fun x3358 () Int)
(declare-fun x2660 () Int)
(declare-fun x3547 () Bool)
(declare-fun x826 () Int)
(declare-fun x1920 () Bool)
(declare-fun x3482 () Int)
(declare-fun x2578 () Bool)
(declare-fun x303 () Bool)
(declare-fun x40 () x4297)
(declare-fun x964 () x4297)
(declare-fun x618 () Int)
(declare-fun x560 () Bool)
(declare-fun x187 () Bool)
(declare-fun x629 () Bool)
(declare-fun x4247 () Bool)
(declare-fun x4068 () x4297)
(declare-fun x2831 () Bool)
(declare-fun x223 () Int)
(declare-fun x423 () Bool)
(declare-fun x2588 () Int)
(declare-fun x3997 () Int)
(declare-fun x2567 () Bool)
(declare-fun x2010 () Int)
(declare-fun x1307 () Bool)
(declare-fun x1809 () Int)
(declare-fun x2407 () Int)
(declare-fun x517 () Int)
(declare-fun x3984 () x4297)
(declare-fun x1549 () Bool)
(declare-fun x3309 () Int)
(declare-fun x794 () Bool)
(declare-fun x3725 () Int)
(declare-fun x62 () Int)
(declare-fun x2480 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x2234 () Int)
(declare-fun x1667 () Int)
(declare-fun x3144 () Bool)
(declare-fun x3044 () Bool)
(declare-fun x3686 () x4297)
(declare-fun x3011 () Int)
(declare-fun x1770 () Int)
(declare-fun x915 () Int)
(declare-fun x2817 () Bool)
(declare-fun x3173 () Int)
(declare-fun x3048 () Bool)
(declare-fun x4035 () Int)
(declare-fun x3385 () Bool)
(declare-fun x2843 () Int)
(declare-fun x684 () Bool)
(declare-fun x1716 () Int)
(declare-fun x1281 () Int)
(declare-fun x1729 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x3404 () Int)
(declare-fun x2350 () Bool)
(declare-fun x3046 () Bool)
(declare-fun x2426 () Bool)
(declare-fun x3067 () Int)
(declare-fun x2827 () Bool)
(declare-fun x1574 () x4297)
(declare-fun x3761 () x4297)
(declare-fun x1033 () Int)
(declare-fun x3381 () Int)
(declare-fun x2766 () x4297)
(declare-fun x389 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x3492 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x890 () Bool)
(declare-fun x3888 () Bool)
(declare-fun x1318 () Int)
(declare-fun x3757 () Int)
(declare-fun x1889 () Bool)
(declare-fun x4077 () Int)
(declare-fun x486 () Int)
(declare-fun x1673 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x431 () Bool)
(declare-fun x2628 () Int)
(declare-fun x2409 () Int)
(declare-fun x4271 () Bool)
(declare-fun x841 () Int)
(declare-fun x1794 () Bool)
(declare-fun x446 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x4179 () Bool)
(declare-fun x3301 () Bool)
(declare-fun x1354 () Int)
(declare-fun x3119 () x4297)
(declare-fun x262 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x4225 () Bool)
(declare-fun x475 () Int)
(declare-fun x3498 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x3957 () x4297)
(declare-fun x4079 () Int)
(declare-fun x2438 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x1943 () Int)
(declare-fun x3018 () Bool)
(declare-fun x1488 () Int)
(declare-fun x3403 () Int)
(declare-fun x609 () Bool)
(declare-fun x3442 () Bool)
(declare-fun x721 () Int)
(declare-fun x1719 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x879 () Int)
(declare-fun x739 () Bool)
(declare-fun x30 () Bool)
(declare-fun x975 () Int)
(declare-fun x2233 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x274 () Int)
(declare-fun x3621 () Bool)
(declare-fun x2936 () Bool)
(declare-fun x2237 () Int)
(declare-fun x2765 () Bool)
(declare-fun x2566 () Bool)
(declare-fun x1498 () x4297)
(declare-fun x96 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x3764 () Int)
(declare-fun x1236 () Int)
(declare-fun x2672 () Int)
(declare-fun x337 () Int)
(declare-fun x2317 () Bool)
(declare-fun x2156 () Int)
(declare-fun x322 () Int)
(declare-fun x628 () Int)
(declare-fun x145 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x631 () Int)
(declare-fun x3188 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x2378 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x437 () Int)
(declare-fun x814 () Int)
(declare-fun x2804 () Int)
(declare-fun x3830 () Int)
(declare-fun x49 () Int)
(declare-fun x555 () Int)
(declare-fun x2718 () Int)
(declare-fun x4114 () Int)
(declare-fun x2539 () x4297)
(declare-fun x1785 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x3416 () Bool)
(declare-fun x3254 () Int)
(declare-fun x2299 () Int)
(declare-fun x2467 () Bool)
(declare-fun x3690 () Bool)
(declare-fun x700 () Bool)
(declare-fun x3446 () Int)
(declare-fun x167 () Bool)
(declare-fun x3124 () Bool)
(declare-fun x2254 () Int)
(declare-fun x967 () Int)
(declare-fun x4282 () Int)
(declare-fun x59 () Bool)
(declare-fun x3029 () Int)
(declare-fun x2776 (x4297) Int)
(declare-fun x2834 () Int)
(declare-fun x3902 () Int)
(declare-fun x43 () Int)
(declare-fun x2859 () Bool)
(declare-fun x887 () Bool)
(declare-fun x2177 () Int)
(declare-fun x1913 () Bool)
(declare-fun x315 () Int)
(declare-fun x2307 () Bool)
(declare-fun x3201 () Int)
(declare-fun x3243 () x4297)
(declare-fun x2820 () Bool)
(declare-fun x1467 () Int)
(declare-fun x401 () Int)
(declare-fun x1717 () Int)
(declare-fun x4089 () Bool)
(declare-fun x2545 () Int)
(declare-fun x604 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x1264 () Int)
(declare-fun x2904 () x4297)
(declare-fun x3333 () Bool)
(declare-fun x270 () Bool)
(declare-fun x3070 () Int)
(declare-fun x1463 () Bool)
(declare-fun x1231 () Int)
(declare-fun x4362 () Bool)
(declare-fun x190 () Bool)
(declare-fun x3050 () Int)
(declare-fun x2599 () x4297)
(declare-fun x2277 () Bool)
(declare-fun x2618 () Int)
(declare-fun x705 () Bool)
(declare-fun x1556 (Int) Int)
(declare-fun x3887 () Bool)
(declare-fun x1757 () Int)
(declare-fun x3441 () Bool)
(declare-fun x2183 () Int)
(declare-fun x990 () Int)
(declare-fun x3151 () Bool)
(declare-fun x908 () Bool)
(declare-fun x134 () Int)
(declare-fun x735 () Bool)
(declare-fun x4092 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x2490 () Int)
(declare-fun x196 () Int)
(declare-fun x2873 () Bool)
(declare-fun x1109 () Int)
(declare-fun x3929 () x4297)
(declare-fun x2902 () Int)
(declare-fun x2484 () Int)
(declare-fun x2801 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x644 () Int)
(declare-fun x2038 () Bool)
(declare-fun x1546 () x4297)
(declare-fun x2080 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x3423 () Int)
(declare-fun x2331 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x4285 () Bool)
(declare-fun x727 () Bool)
(declare-fun x3542 (x4297) Int)
(declare-fun x1359 () Int)
(declare-fun x1043 () Int)
(declare-fun x4166 () Bool)
(declare-fun x53 () Int)
(declare-fun x266 () Int)
(declare-fun x1106 () Int)
(declare-fun x1865 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x4310 () Int)
(declare-fun x3278 (Int Int) Int)
(declare-fun x805 () Int)
(declare-fun x1710 () Int)
(declare-fun x2366 () Int)
(declare-fun x1100 () Int)
(declare-fun x3400 () Bool)
(declare-fun x1813 () Int)
(declare-fun x398 () Bool)
(declare-fun x2360 () Int)
(declare-fun x2504 () Bool)
(declare-fun x1793 (x4297) Int)
(declare-fun x3106 () Int)
(declare-fun x2810 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x3342 () Int)
(declare-fun x3760 () Int)
(declare-fun x1400 () Bool)
(declare-fun x28 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x4052 () Int)
(declare-fun x2652 () Int)
(declare-fun x3303 () x4297)
(declare-fun x1063 () Int)
(declare-fun x2787 () Bool)
(declare-fun x2295 () Int)
(declare-fun x3304 () Int)
(declare-fun x3720 () Int)
(declare-fun x3115 (Int) Int)
(declare-fun x2419 () Bool)
(declare-fun x142 () Bool)
(declare-fun x3012 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x416 () x4297)
(declare-fun x4058 () Int)
(declare-fun x2992 () Int)
(declare-fun x4095 () Bool)
(declare-fun x2217 () Int)
(declare-fun x1772 () Int)
(declare-fun x3916 () Bool)
(declare-fun x4043 () Bool)
(declare-fun x3411 () x4297)
(declare-fun x666 () Bool)
(declare-fun x3141 () Int)
(declare-fun x4148 () Bool)
(declare-fun x1201 () x4297)
(declare-fun x1287 () Int)
(declare-fun x241 () Bool)
(declare-fun x702 () Bool)
(declare-fun x4141 () Bool)
(declare-fun x1627 () Int)
(declare-fun x3036 () Int)
(declare-fun x3282 () Int)
(declare-fun x139 () x4297)
(declare-fun x117 () Bool)
(declare-fun x633 () Bool)
(declare-fun x360 () Bool)
(declare-fun x195 () Int)
(declare-fun x3882 () Bool)
(declare-fun x129 () Int)
(declare-fun x642 () Bool)
(declare-fun x1073 () Int)
(declare-fun x3218 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x825 () Int)
(declare-fun x2007 () Bool)
(declare-fun x994 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x548 () Int)
(declare-fun x3455 () Bool)
(declare-fun x2493 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x1850 () Int)
(declare-fun x538 () x4297)
(declare-fun x3596 () x4297)
(declare-fun x2985 () Bool)
(declare-fun x3870 () Int)
(declare-fun x3752 () Bool)
(declare-fun x3013 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x4377 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x3142 () Int)
(declare-fun x1940 () Int)
(declare-fun x1994 () Int)
(declare-fun x912 () Bool)
(declare-fun x1317 () Int)
(declare-fun x212 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x563 () Bool)
(declare-fun x2284 () Int)
(declare-fun x2270 () Bool)
(declare-fun x4104 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x3935 () Int)
(declare-fun x2255 () Int)
(declare-fun x4294 () x4297)
(declare-fun x713 () Int)
(declare-fun x1624 () Bool)
(declare-fun x3459 () Int)
(declare-fun x2275 () Int)
(declare-fun x1272 () Int)
(declare-fun x3658 () Bool)
(declare-fun x809 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x529 () Bool)
(declare-fun x3598 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x2340 () Int)
(declare-fun x1293 () Bool)
(declare-fun x1822 () Int)
(declare-fun x2662 () Int)
(declare-fun x1580 () Int)
(declare-fun x4164 () Int)
(declare-fun x4307 () Int)
(declare-fun x433 () Bool)
(declare-fun x2081 () x4297)
(declare-fun x2053 () Int)
(declare-fun x1954 () Int)
(declare-fun x185 () Int)
(declare-fun x3591 () Int)
(declare-fun x3321 () Int)
(declare-fun x3549 () Bool)
(declare-fun x3028 () x4297)
(declare-fun x3414 () Int)
(declare-fun x2423 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x3526 () Int)
(declare-fun x2308 () Bool)
(declare-fun x3116 () Bool)
(declare-fun x2712 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x4336 () Bool)
(declare-fun x2122 () Int)
(declare-fun x3718 () Int)
(declare-fun x2276 () Bool)
(declare-fun x583 () Bool)
(declare-fun x1748 () Int)
(declare-fun x552 () Int)
(declare-fun x100 () Bool)
(declare-fun x1366 () Int)
(declare-fun x3127 () Bool)
(declare-fun x3689 () Bool)
(declare-fun x3999 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x4265 () Bool)
(declare-fun x1089 () x4297)
(declare-fun x741 () Bool)
(declare-fun x3295 () Int)
(declare-fun x468 () Int)
(declare-fun x2448 () Int)
(declare-fun x4233 () Int)
(declare-fun x21 () Int)
(declare-fun x3978 () Int)
(declare-fun x2885 () Bool)
(declare-fun x655 () Bool)
(declare-fun x3605 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x3084 () Bool)
(declare-fun x365 () x4297)
(declare-fun x2522 () Bool)
(declare-fun x507 () Int)
(declare-fun x3795 () Bool)
(declare-fun x4055 () Bool)
(declare-fun x2499 () Int)
(declare-fun x2742 () Bool)
(declare-fun x2304 () Int)
(declare-fun x69 () Bool)
(declare-fun x265 () Bool)
(declare-fun x1816 () x4297)
(declare-fun x51 () Int)
(declare-fun x1613 () Bool)
(declare-fun x647 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x3353 () Bool)
(declare-fun x4196 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x2927 () Int)
(declare-fun x3275 () Bool)
(declare-fun x2028 () Int)
(declare-fun x464 () Int)
(declare-fun x277 () Int)
(declare-fun x4287 () Bool)
(declare-fun x2549 (Int) Int)
(declare-fun x3409 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x787 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x2421 () Int)
(declare-fun x580 () Int)
(declare-fun x2485 () Bool)
(declare-fun x2416 () Int)
(declare-fun x777 () Int)
(declare-fun x869 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x2262 () Int)
(declare-fun x1439 () Int)
(declare-fun x1901 () Int)
(declare-fun x4278 () Int)
(declare-fun x388 () Int)
(declare-fun x3391 () Bool)
(declare-fun x298 () Int)
(declare-fun x2979 () Bool)
(declare-fun x1013 () x4297)
(declare-fun x2510 () Int)
(declare-fun x439 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1909 () x4297)
(declare-fun x3944 () Int)
(declare-fun x3864 () Bool)
(declare-fun x3657 () Int)
(declare-fun x2100 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x2743 () Int)
(declare-fun x3240 () Bool)
(declare-fun x3550 () Bool)
(declare-fun x6 () Bool)
(declare-fun x4252 () Bool)
(declare-fun x1965 () Int)
(declare-fun x4076 () x4297)
(declare-fun x1695 () Int)
(declare-fun x1253 () Int)
(declare-fun x3842 () Bool)
(declare-fun x1331 () Int)
(declare-fun x2926 () Int)
(declare-fun x3666 () Bool)
(declare-fun x1195 () x4297)
(declare-fun x4054 () x4297)
(declare-fun x3337 () Bool)
(declare-fun x1224 () Int)
(declare-fun x1270 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x613 () Bool)
(declare-fun x3531 () Bool)
(declare-fun x336 () Bool)
(declare-fun x3604 () Int)
(declare-fun x3853 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1945 () Bool)
(declare-fun x1104 () Int)
(declare-fun x1903 () Int)
(declare-fun x1711 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x2287 () Int)
(declare-fun x858 () Int)
(declare-fun x4034 () Bool)
(declare-fun x510 () Int)
(declare-fun x2705 () Bool)
(declare-fun x1142 () Int)
(declare-fun x26 () Bool)
(declare-fun x1030 () x4297)
(declare-fun x3280 () Int)
(declare-fun x1174 () Int)
(declare-fun x4040 () Int)
(declare-fun x2689 () Int)
(declare-fun x2145 () Bool)
(declare-fun x2076 () Int)
(declare-fun x2924 () Bool)
(declare-fun x2049 () Int)
(declare-fun x1283 () x4297)
(declare-fun x4090 () Bool)
(declare-fun x1416 () Int)
(declare-fun x1297 () Int)
(declare-fun x3930 () Bool)
(declare-fun x1060 () Int)
(declare-fun x1640 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1978 () Int)
(declare-fun x1682 () Int)
(declare-fun x1433 () Int)
(declare-fun x1979 () Int)
(declare-fun x3156 () Int)
(declare-fun x834 () Int)
(declare-fun x4147 () x4297)
(declare-fun x3943 () Int)
(declare-fun x2198 () Bool)
(declare-fun x348 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x74 () Bool)
(declare-fun x454 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x2669 () Bool)
(declare-fun x1976 () Int)
(declare-fun x1068 () Bool)
(declare-fun x455 () Int)
(declare-fun x3802 () Bool)
(declare-fun x2382 () Bool)
(declare-fun x3652 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x3587 () Int)
(declare-fun x402 () Int)
(declare-fun x874 () Bool)
(declare-fun x4286 () Int)
(declare-fun x3192 () Bool)
(declare-fun x592 () Int)
(declare-fun x3961 () Bool)
(declare-fun x515 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x3845 () Int)
(declare-fun x1507 () Bool)
(declare-fun x3708 () x4297)
(declare-fun x2780 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x3347 () Int)
(declare-fun x2734 () Int)
(declare-fun x3541 () Int)
(declare-fun x1968 () x4297)
(declare-fun x3919 () Bool)
(declare-fun x2468 () Int)
(declare-fun x1949 () Int)
(declare-fun x73 () x4297)
(declare-fun x2865 () Int)
(declare-fun x2479 () Bool)
(declare-fun x3726 () Bool)
(declare-fun x441 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x2682 () Bool)
(declare-fun x2562 () Int)
(declare-fun x3538 () Int)
(declare-fun x3636 () Bool)
(declare-fun x4143 () x4297)
(declare-fun x4167 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x2337 () Int)
(declare-fun x363 () Int)
(declare-fun x7 () Bool)
(declare-fun x524 () Bool)
(declare-fun x3481 () Bool)
(declare-fun x3630 () Int)
(declare-fun x498 () Bool)
(declare-fun x1569 () Int)
(declare-fun x673 () Bool)
(declare-fun x2944 () Bool)
(declare-fun x3846 () Int)
(declare-fun x4109 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x1635 () Int)
(declare-fun x1408 () x4297)
(declare-fun x2315 () Int)
(declare-fun x3594 () Bool)
(declare-fun x499 () Int)
(declare-fun x204 () Int)
(declare-fun x427 () Int)
(declare-fun x2123 () Int)
(declare-fun x2181 () Bool)
(declare-fun x3039 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x2045 () Bool)
(declare-fun x3466 () Bool)
(declare-fun x2236 () Int)
(declare-fun x718 () Bool)
(declare-fun x2306 () x4297)
(declare-fun x144 () Bool)
(declare-fun x3778 () Bool)
(declare-fun x1229 () Int)
(declare-fun x181 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x4250 () x4297)
(declare-fun x1761 () Int)
(declare-fun x1093 () Bool)
(declare-fun x2917 () Int)
(declare-fun x2167 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x2119 () Int)
(declare-fun x1715 () Bool)
(declare-fun x3625 () Int)
(declare-fun x35 () Bool)
(declare-fun x236 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x2576 () Int)
(declare-fun x3340 () x4297)
(declare-fun x1024 () Bool)
(declare-fun x1469 () Int)
(declare-fun x1792 () Bool)
(declare-fun x206 () Int)
(declare-fun x3848 () x4297)
(declare-fun x3529 () Int)
(declare-fun x3172 () Bool)
(declare-fun x2740 () Bool)
(declare-fun x3595 () Int)
(declare-fun x2624 () Bool)
(declare-fun x2654 () Int)
(declare-fun x4032 () x4297)
(declare-fun x3420 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x2301 () Int)
(declare-fun x1675 () Bool)
(declare-fun x2884 () Int)
(declare-fun x4157 () Int)
(declare-fun x3515 () Bool)
(declare-fun x668 () Int)
(declare-fun x299 () Int)
(declare-fun x1008 () Int)
(declare-fun x2909 () Bool)
(declare-fun x4288 () Bool)
(declare-fun x95 () Int)
(declare-fun x292 () Bool)
(declare-fun x2895 () Int)
(declare-fun x3733 () Int)
(declare-fun x1963 () Int)
(declare-fun x4129 () Int)
(declare-fun x708 () Int)
(declare-fun x2441 () Int)
(declare-fun x2176 () Bool)
(declare-fun x4358 () Bool)
(declare-fun x3723 () Int)
(declare-fun x2443 () Int)
(declare-fun x1728 () Bool)
(declare-fun x2875 () Int)
(declare-fun x798 () x4297)
(declare-fun x3946 () x4297)
(declare-fun x1591 () Bool)
(declare-fun x3324 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x3350 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x495 () Bool)
(declare-fun x2615 () x4297)
(declare-fun x597 () Int)
(declare-fun x963 () Bool)
(declare-fun x278 () Bool)
(declare-fun x942 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x4127 () Bool)
(declare-fun x930 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x2879 () x4297)
(declare-fun x2650 () Bool)
(declare-fun x1644 () Int)
(declare-fun x3003 () Int)
(declare-fun x614 () Bool)
(declare-fun x4290 () Bool)
(declare-fun x3768 () Int)
(declare-fun x3972 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x413 () Int)
(declare-fun x1009 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x719 () Int)
(declare-fun x1056 () Int)
(declare-fun x674 () Bool)
(declare-fun x3448 () x4297)
(declare-fun x1495 () Int)
(declare-fun x2133 () Bool)
(declare-fun x1535 () Int)
(declare-fun x4344 () Bool)
(declare-fun x4208 () Bool)
(declare-fun x796 () Int)
(declare-fun x304 () x4297)
(declare-fun x192 () Int)
(declare-fun x1003 () Int)
(declare-fun x711 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x3505 () Int)
(declare-fun x4321 () Bool)
(declare-fun x837 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x254 () x4297)
(declare-fun x1866 () Bool)
(declare-fun x2463 () Int)
(declare-fun x430 () Int)
(declare-fun x3113 () Bool)
(declare-fun x1937 () Int)
(declare-fun x1134 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x4006 () Bool)
(declare-fun x3950 () Int)
(declare-fun x2525 () Int)
(declare-fun x3646 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x1135 () Int)
(declare-fun x1277 () Int)
(declare-fun x22 () Int)
(declare-fun x3897 () Int)
(declare-fun x2978 () Int)
(declare-fun x3546 () Int)
(declare-fun x2068 () Int)
(declare-fun x1890 () Int)
(declare-fun x3424 () Bool)
(declare-fun x977 () Int)
(declare-fun x1671 () Bool)
(declare-fun x2272 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x1280 (Int) Int)
(declare-fun x2374 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x1939 () Int)
(declare-fun x2116 () Bool)
(declare-fun x754 () Bool)
(declare-fun x15 () Bool)
(declare-fun x2720 () Int)
(declare-fun x2815 () Bool)
(declare-fun x324 () Bool)
(declare-fun x2630 () Bool)
(declare-fun x1807 () x4297)
(declare-fun x2078 () Bool)
(declare-fun x688 () Int)
(declare-fun x1837 () Bool)
(declare-fun x1914 () Int)
(declare-fun x4150 () Int)
(declare-fun x381 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x3425 () Bool)
(declare-fun x2210 () Bool)
(declare-fun x2620 () Bool)
(declare-fun x1392 () Int)
(declare-fun x1678 () Bool)
(declare-fun x1828 () Int)
(declare-fun x4342 () Bool)
(declare-fun x4170 () x4297)
(declare-fun x1655 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x4027 () Int)
(declare-fun x4207 () Int)
(declare-fun x656 () Int)
(declare-fun x1360 () Int)
(declare-fun x3903 () Bool)
(declare-fun x536 () Bool)
(declare-fun x3922 () Bool)
(declare-fun x2653 () Bool)
(declare-fun x4106 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x4059 () Int)
(declare-fun x3568 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x559 () Bool)
(declare-fun x67 () Bool)
(declare-fun x3857 () x4297)
(declare-fun x3265 () Bool)
(declare-fun x3569 () Int)
(declare-fun x4230 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x2492 () Bool)
(declare-fun x2267 () Bool)
(declare-fun x3826 () Bool)
(declare-fun x2388 () Int)
(declare-fun x2726 () Int)
(declare-fun x1155 () Bool)
(declare-fun x581 () Int)
(declare-fun x2322 () Int)
(declare-fun x521 () Bool)
(declare-fun x3687 () Bool)
(declare-fun x3951 () Bool)
(declare-fun x3410 () Int)
(declare-fun x1810 () Int)
(declare-fun x2101 () Int)
(declare-fun x4369 () Bool)
(declare-fun x2635 () Bool)
(declare-fun x3261 () Int)
(declare-fun x608 () Int)
(declare-fun x3941 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x752 () x4297)
(declare-fun x4075 () Int)
(declare-fun x2604 () x4297)
(declare-fun x2686 () Int)
(declare-fun x3413 () Int)
(declare-fun x582 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x854 () Int)
(declare-fun x3824 () Bool)
(declare-fun x3055 () Int)
(declare-fun x90 () Int)
(declare-fun x104 () Bool)
(declare-fun x3493 () x4297)
(declare-fun x1480 () Bool)
(declare-fun x3064 () Int)
(declare-fun x2244 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x2475 () x4297)
(declare-fun x1005 () x4297)
(declare-fun x3709 () Bool)
(declare-fun x4197 () x4297)
(declare-fun x178 () Bool)
(declare-fun x545 () Bool)
(declare-fun x3286 () Bool)
(declare-fun x722 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x557 () Bool)
(declare-fun x2358 () Bool)
(declare-fun x1599 () Int)
(declare-fun x3821 () Bool)
(declare-fun x2702 () Int)
(declare-fun x1188 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x523 () Bool)
(declare-fun x2634 (x4297) Int)
(declare-fun x1171 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x3053 () Bool)
(declare-fun x3837 () Bool)
(declare-fun x2991 () Int)
(declare-fun x2670 () Bool)
(declare-fun x3502 () Int)
(declare-fun x1764 () Bool)
(declare-fun x210 () Int)
(declare-fun x3820 () Int)
(declare-fun x4044 () Int)
(declare-fun x325 () Bool)
(declare-fun x3528 () Int)
(declare-fun x4228 () x4297)
(declare-fun x3038 () Bool)
(declare-fun x3816 () Bool)
(declare-fun x4211 () Bool)
(declare-fun x4323 () Int)
(declare-fun x4041 () Bool)
(declare-fun x3075 () Int)
(declare-fun x2551 () Int)
(declare-fun x1791 () Int)
(declare-fun x148 () Bool)
(declare-fun x952 (Int) Int)
(declare-fun x516 () Bool)
(declare-fun x1389 () Int)
(declare-fun x2494 () Int)
(declare-fun x219 () Bool)
(declare-fun x3314 () Bool)
(declare-fun x310 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x258 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x1821 () Int)
(declare-fun x3315 () x4297)
(declare-fun x1342 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x2716 () Int)
(declare-fun x2413 () Bool)
(declare-fun x161 () Int)
(declare-fun x2584 () Int)
(declare-fun x390 () Bool)
(declare-fun x1753 () Int)
(declare-fun x38 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x911 () Int)
(declare-fun x611 () Bool)
(declare-fun x3208 () Bool)
(declare-fun x137 () Bool)
(declare-fun x3236 () Bool)
(declare-fun x756 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x2806 () Int)
(declare-fun x4083 () x4297)
(declare-fun x652 () Bool)
(declare-fun x1820 () Int)
(declare-fun x1290 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x2930 () Bool)
(declare-fun x193 () Bool)
(declare-fun x881 () Bool)
(declare-fun x2851 () Int)
(declare-fun x610 () Int)
(declare-fun x1879 () Int)
(declare-fun x4098 () Bool)
(declare-fun x838 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x662 () Int)
(declare-fun x1373 () Bool)
(declare-fun x4022 () Bool)
(declare-fun x512 () Bool)
(declare-fun x311 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x18 () Bool)
(declare-fun x340 () Bool)
(declare-fun x3702 () Int)
(declare-fun x850 () Int)
(declare-fun x2981 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x492 () Bool)
(declare-fun x119 () Bool)
(declare-fun x3981 () Int)
(declare-fun x925 () Bool)
(declare-fun x2193 () Bool)
(declare-fun x679 () Bool)
(declare-fun x901 () Bool)
(declare-fun x3428 () Bool)
(declare-fun x469 () Bool)
(declare-fun x2606 () Int)
(declare-fun x2559 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x4302 () Int)
(declare-fun x2054 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x2129 () Bool)
(declare-fun x3362 () Int)
(declare-fun x2072 () x4297)
(declare-fun x949 () x4297)
(declare-fun x709 () Int)
(declare-fun x3737 () Int)
(declare-fun x2497 () Bool)
(declare-fun x3098 () Int)
(declare-fun x3166 () Bool)
(declare-fun x920 () Int)
(declare-fun x1981 () Int)
(declare-fun x4214 () Bool)
(declare-fun x3360 () Bool)
(declare-fun x1641 () Int)
(declare-fun x868 () Int)
(declare-fun x376 () Int)
(declare-fun x1219 () x4297)
(declare-fun x2730 () Bool)
(declare-fun x2918 () Int)
(declare-fun x1912 () Int)
(declare-fun x4337 () x4297)
(declare-fun x3544 () Int)
(declare-fun x4063 () Bool)
(declare-fun x3829 () Int)
(declare-fun x3627 (x4297) Int)
(declare-fun x2099 () Bool)
(declare-fun x60 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x3225 () Bool)
(declare-fun x909 () Bool)
(declare-fun x4112 () Int)
(declare-fun x1454 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x2240 () Bool)
(declare-fun x3518 () Bool)
(declare-fun x1319 () Int)
(declare-fun x1501 () Bool)
(declare-fun x4289 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x3639 () Bool)
(declare-fun x3274 () Bool)
(declare-fun x969 () Int)
(declare-fun x173 () Bool)
(declare-fun x601 () Bool)
(declare-fun x458 () Int)
(declare-fun x2065 () Int)
(declare-fun x1486 () Int)
(declare-fun x2303 () x4297)
(declare-fun x1202 () Bool)
(declare-fun x54 () Int)
(declare-fun x335 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x387 () x4297)
(declare-fun x3536 () Int)
(declare-fun x2954 () Bool)
(declare-fun x1199 () Int)
(declare-fun x4351 () Bool)
(declare-fun x3712 () Bool)
(declare-fun x3222 () Int)
(declare-fun x1967 () Bool)
(declare-fun x57 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x2554 () x4297)
(declare-fun x3516 () Bool)
(declare-fun x1563 () Int)
(declare-fun x188 (x4297) Int)
(declare-fun x715 () Bool)
(declare-fun x3610 () Bool)
(declare-fun x1848 () x4297)
(declare-fun x1091 () Bool)
(declare-fun x4376 () x4297)
(declare-fun x1553 () Int)
(declare-fun x1513 () Int)
(declare-fun x3421 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x2258 () Bool)
(declare-fun x997 () Bool)
(declare-fun x2352 (Int) Int)
(declare-fun x2335 () Int)
(declare-fun x3378 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x2661 () Int)
(declare-fun x88 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x671 () x4297)
(declare-fun x3467 () Int)
(declare-fun x1522 () Bool)
(declare-fun x1808 () Int)
(declare-fun x3976 () Bool)
(declare-fun x184 () Int)
(declare-fun x2881 () Int)
(declare-fun x3936 () Int)
(declare-fun x108 () Int)
(declare-fun x3527 () Bool)
(declare-fun x1834 () Int)
(declare-fun x3685 () Int)
(declare-fun x3107 () x4297)
(declare-fun x895 () Int)
(declare-fun x3799 () x4297)
(declare-fun x3884 () Bool)
(declare-fun x1955 () Int)
(declare-fun x1079 () Int)
(declare-fun x4243 () Int)
(declare-fun x757 () Bool)
(declare-fun x984 () Int)
(declare-fun x2281 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x1855 () x4297)
(declare-fun x2286 () Int)
(declare-fun x1406 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x485 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x885 () Int)
(declare-fun x2150 () Bool)
(declare-fun x3623 () Int)
(declare-fun x2912 () Bool)
(declare-fun x3660 () Bool)
(declare-fun x3622 () Int)
(declare-fun x2132 () Bool)
(declare-fun x551 () Bool)
(declare-fun x3231 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x971 () Int)
(declare-fun x1176 () Bool)
(declare-fun x2609 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x701 () Bool)
(declare-fun x2444 () Bool)
(declare-fun x493 () Int)
(declare-fun x1840 () Int)
(declare-fun x1883 () Bool)
(declare-fun x2478 () x4297)
(declare-fun x3620 () Int)
(declare-fun x1510 () Bool)
(declare-fun x2677 () Bool)
(declare-fun x3642 () Bool)
(declare-fun x862 () Int)
(declare-fun x4073 () Int)
(declare-fun x1315 () Int)
(declare-fun x158 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x4212 () Bool)
(declare-fun x2619 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x1745 () Int)
(declare-fun x4096 () Bool)
(declare-fun x623 () Int)
(declare-fun x2498 () Int)
(declare-fun x283 () x4297)
(declare-fun x1950 () Bool)
(declare-fun x2876 () Int)
(declare-fun x3458 () Bool)
(declare-fun x4283 () Bool)
(declare-fun x3277 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x3093 () Int)
(declare-fun x77 () Int)
(declare-fun x2508 () Int)
(declare-fun x3616 () Bool)
(declare-fun x3721 () Bool)
(declare-fun x2995 () Bool)
(declare-fun x2532 () Int)
(declare-fun x1083 () Bool)
(declare-fun x3273 () Bool)
(declare-fun x3656 () Int)
(declare-fun x2390 () Bool)
(declare-fun x3836 () Bool)
(declare-fun x3683 () x4297)
(declare-fun x1458 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x3054 () Bool)
(declare-fun x2410 () x4297)
(declare-fun x1648 () Bool)
(declare-fun x3322 () Int)
(declare-fun x1607 () Bool)
(declare-fun x3564 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x4074 () x4297)
(declare-fun x3868 () Bool)
(declare-fun x505 () Bool)
(declare-fun x2529 () Bool)
(declare-fun x36 () Bool)
(declare-fun x1119 () Int)
(declare-fun x2546 () Int)
(declare-fun x3613 () Int)
(declare-fun x3426 () Bool)
(declare-fun x4144 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x2915 () Int)
(declare-fun x2543 () Bool)
(declare-fun x1125 () Int)
(declare-fun x2950 () Int)
(declare-fun x1587 () Bool)
(declare-fun x927 () Bool)
(declare-fun x928 () Int)
(declare-fun x1554 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x903 () Bool)
(declare-fun x866 () Int)
(declare-fun x1000 () Int)
(declare-fun x1431 () Bool)
(declare-fun x318 () Bool)
(declare-fun x3058 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x1714 () Int)
(declare-fun x220 () Int)
(declare-fun x3136 () Bool)
(declare-fun x2603 () x4297)
(declare-fun x1470 () Bool)
(declare-fun x2092 (Int) Int)
(declare-fun x48 () Bool)
(declare-fun x2218 () Int)
(declare-fun x3934 () Bool)
(declare-fun x3869 () Bool)
(declare-fun x3834 () Int)
(declare-fun x1157 () Bool)
(declare-fun x352 () Int)
(declare-fun x1588 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x3072 () Int)
(declare-fun x3479 () x4297)
(declare-fun x3196 () x4297)
(declare-fun x3675 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x3266 () Bool)
(declare-fun x3145 () Bool)
(declare-fun x2223 () Int)
(declare-fun x3162 () Bool)
(declare-fun x982 () Bool)
(declare-fun x690 () x4297)
(declare-fun x3071 () Int)
(declare-fun x1985 () Bool)
(declare-fun x3998 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x851 () Bool)
(declare-fun x786 () Bool)
(declare-fun x3773 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x4171 () Int)
(declare-fun x530 () Bool)
(declare-fun x3363 () x4297)
(declare-fun x503 () Bool)
(declare-fun x2519 () Bool)
(declare-fun x3751 () Int)
(declare-fun x2796 () Bool)
(declare-fun x2365 () Int)
(declare-fun x4168 () Int)
(declare-fun x1604 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x3390 () Bool)
(declare-fun x3806 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x1452 () Int)
(declare-fun x3508 () Int)
(declare-fun x2986 () Int)
(declare-fun x2512 () Int)
(declare-fun x330 () Bool)
(declare-fun x1298 () Int)
(declare-fun x2050 () Bool)
(declare-fun x1291 () Int)
(declare-fun x2998 () Bool)
(declare-fun x4268 () x4297)
(declare-fun x2573 () Int)
(declare-fun x1521 () Bool)
(declare-fun x1646 () Int)
(declare-fun x2471 () Int)
(declare-fun x3512 () Int)
(declare-fun x2256 () Bool)
(declare-fun x1738 () Int)
(declare-fun x2869 () Bool)
(declare-fun x938 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x3263 () Int)
(declare-fun x1548 () Bool)
(declare-fun x293 () Bool)
(declare-fun x1951 () Int)
(declare-fun x1805 () Int)
(declare-fun x2622 () Bool)
(declare-fun x3211 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x1930 () Int)
(declare-fun x3212 () Bool)
(declare-fun x317 () Bool)
(declare-fun x4026 () Bool)
(declare-fun x1044 () Int)
(declare-fun x4224 () Bool)
(declare-fun x1818 (x4297) Int)
(declare-fun x692 () Int)
(declare-fun x3223 () Int)
(declare-fun x4123 () x4297)
(declare-fun x2222 () Bool)
(declare-fun x1768 () Int)
(declare-fun x2368 () Bool)
(declare-fun x3990 () Int)
(declare-fun x3875 () Bool)
(declare-fun x3310 () Bool)
(declare-fun x3995 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x176 () Int)
(declare-fun x1633 () x4297)
(declare-fun x4325 () Bool)
(declare-fun x140 () Int)
(declare-fun x2953 () Int)
(declare-fun x2989 () Bool)
(declare-fun x2082 () Bool)
(declare-fun x2201 () Int)
(declare-fun x2611 () Int)
(declare-fun x1265 () Bool)
(declare-fun x491 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x2901 () Int)
(declare-fun x697 () Int)
(declare-fun x1442 () Bool)
(declare-fun x13 () Int)
(declare-fun x496 () Bool)
(declare-fun x4295 () Bool)
(declare-fun x417 () Bool)
(declare-fun x4327 () Int)
(declare-fun x2393 () Int)
(declare-fun x3963 () Bool)
(declare-fun x3091 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x399 () Bool)
(declare-fun x748 () x4297)
(declare-fun x264 () Int)
(declare-fun x1440 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x2933 () x4297)
(declare-fun x3851 () Bool)
(declare-fun x3862 () Int)
(declare-fun x1693 () Bool)
(declare-fun x122 () Int)
(declare-fun x1121 () Int)
(declare-fun x3079 () Int)
(declare-fun x2961 () Bool)
(declare-fun x200 () Int)
(declare-fun x2964 () Bool)
(declare-fun x3320 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1796 () Bool)
(declare-fun x1449 () Int)
(declare-fun x4031 () Int)
(declare-fun x2680 () Bool)
(declare-fun x3283 () Int)
(declare-fun x577 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x3993 () Bool)
(declare-fun x3114 () Bool)
(declare-fun x3186 () Bool)
(declare-fun x3005 () Bool)
(declare-fun x3007 () Bool)
(declare-fun x4158 () Bool)
(declare-fun x24 () x4297)
(declare-fun x587 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x3495 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x132 () Int)
(declare-fun x978 () Int)
(declare-fun x2239 () Int)
(declare-fun x2457 () Bool)
(declare-fun x2291 () Int)
(declare-fun x440 () Bool)
(declare-fun x149 () Bool)
(declare-fun x3268 () Bool)
(declare-fun x1815 () Int)
(declare-fun x3267 () Bool)
(declare-fun x923 () Bool)
(declare-fun x3955 () x4297)
(declare-fun x1139 () Bool)
(declare-fun x3445 () Int)
(declare-fun x3182 () Int)
(declare-fun x3747 () Bool)
(declare-fun x2025 () Int)
(declare-fun x2202 () x4297)
(declare-fun x1977 () Int)
(declare-fun x1683 () Int)
(declare-fun x4201 () Bool)
(declare-fun x1892 () Int)
(declare-fun x165 () Int)
(declare-fun x3457 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x2829 () Int)
(declare-fun x1158 () Bool)
(declare-fun x3394 () Int)
(declare-fun x922 () Int)
(declare-fun x75 () Bool)
(declare-fun x4260 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x2668 () Int)
(declare-fun x3964 () Bool)
(declare-fun x4313 () Int)
(declare-fun x2641 () x4297)
(declare-fun x63 () Bool)
(declare-fun x936 () Bool)
(declare-fun x4149 () Int)
(declare-fun x125 () Bool)
(declare-fun x3140 () Int)
(declare-fun x4244 () Int)
(declare-fun x2750 () Int)
(declare-fun x2491 () Bool)
(declare-fun x730 () Bool)
(declare-fun x2319 () x4297)
(declare-fun x1214 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x2194 () Int)
(declare-fun x272 () Int)
(declare-fun x1906 () Bool)
(declare-fun x3759 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x3565 () x4297)
(declare-fun x1539 () Int)
(declare-fun x435 () Int)
(declare-fun x1340 () Int)
(declare-fun x564 () Int)
(declare-fun x1461 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x2544 () Int)
(declare-fun x201 () x4297)
(declare-fun x2060 () Int)
(declare-fun x764 () Bool)
(declare-fun x1430 () Int)
(declare-fun x2553 () Int)
(declare-fun x3758 () x4297)
(declare-fun x1639 () Bool)
(declare-fun x1532 () Int)
(declare-fun x2684 () Bool)
(declare-fun x1468 () Int)
(declare-fun x2321 () Bool)
(declare-fun x4051 () Int)
(declare-fun x394 () Bool)
(declare-fun x934 () Bool)
(declare-fun x1034 () Int)
(declare-fun x3146 () Bool)
(declare-fun x1140 () Int)
(declare-fun x1120 () Int)
(declare-fun x2866 () Int)
(declare-fun x761 () Int)
(declare-fun x4065 () x4297)
(declare-fun x4238 () x4297)
(declare-fun x3205 () Bool)
(declare-fun x3269 () Bool)
(declare-fun x2977 () Int)
(declare-fun x17 () Bool)
(declare-fun x4140 () Int)
(declare-fun x3566 () Int)
(declare-fun x3701 () Int)
(declare-fun x2675 () x4297)
(declare-fun x3335 () Bool)
(declare-fun x703 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x2476 () Bool)
(declare-fun x2850 () Int)
(declare-fun x3195 () Bool)
(declare-fun x3804 () Int)
(declare-fun x1558 () Int)
(declare-fun x11 () Int)
(declare-fun x1835 () Int)
(declare-fun x2687 () x4297)
(declare-fun x1437 () x4297)
(declare-fun x1046 () Bool)
(declare-fun x2838 () Int)
(declare-fun x4311 () Int)
(declare-fun x1353 () Int)
(declare-fun x742 () Int)
(declare-fun x3782 (x4297) Int)
(declare-fun x2110 () x4297)
(declare-fun x2199 () Int)
(declare-fun x1268 () Bool)
(declare-fun x3306 () Bool)
(declare-fun x3471 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x2596 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x584 () Bool)
(declare-fun x2921 () Int)
(declare-fun x3041 () Bool)
(declare-fun x372 () Int)
(declare-fun x1743 () Int)
(declare-fun x2168 () Bool)
(declare-fun x3239 () Bool)
(declare-fun x4216 () Int)
(declare-fun x2556 () Bool)
(declare-fun x2251 () Int)
(declare-fun x4118 () Bool)
(declare-fun x3645 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x2863 () x4297)
(declare-fun x3530 () Int)
(declare-fun x504 () x4297)
(declare-fun x3047 () Bool)
(declare-fun x109 () Int)
(declare-fun x2517 () Int)
(declare-fun x242 () Bool)
(declare-fun x2929 () x4297)
(declare-fun x1137 () Bool)
(declare-fun x3318 () x4297)
(declare-fun x3715 () Bool)
(declare-fun x3673 () Bool)
(declare-fun x602 () Bool)
(declare-fun x4048 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x528 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x4206 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x101 () Int)
(declare-fun x3814 () Int)
(declare-fun x827 () Bool)
(declare-fun x3559 () Int)
(declare-fun x2015 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x3292 () Int)
(declare-fun x2753 () Int)
(declare-fun x2209 () Bool)
(declare-fun x3276 () Bool)
(declare-fun x2489 () x4297)
(declare-fun x4319 () Int)
(declare-fun x1551 () Bool)
(declare-fun x2434 () x4297)
(declare-fun x3374 () Bool)
(declare-fun x3959 () Bool)
(declare-fun x4100 () x4297)
(declare-fun x2182 () Bool)
(declare-fun x676 () Int)
(declare-fun x2993 () Bool)
(declare-fun x3302 () Bool)
(declare-fun x481 () Bool)
(declare-fun x2400 () x4297)
(declare-fun x309 () Int)
(declare-fun x1077 () Int)
(declare-fun x3299 () Int)
(declare-fun x2172 () Bool)
(declare-fun x347 () Int)
(declare-fun x2297 () Bool)
(declare-fun x3247 () Bool)
(declare-fun x3080 () Int)
(declare-fun x3454 () Bool)
(declare-fun x1731 () Int)
(declare-fun x3238 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x526 () Bool)
(declare-fun x4330 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x160 () Int)
(declare-fun x4021 () Bool)
(declare-fun x3227 () Int)
(declare-fun x445 () Int)
(declare-fun x2135 () Int)
(declare-fun x2808 () Bool)
(declare-fun x3365 () Int)
(declare-fun x3654 () Bool)
(declare-fun x734 () x4297)
(declare-fun x1718 () Int)
(declare-fun x4038 () Int)
(declare-fun x3328 () Bool)
(declare-fun x2271 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x3331 () Bool)
(declare-fun x2273 () Int)
(declare-fun x646 () Int)
(declare-fun x1329 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x2030 () x4297)
(declare-fun x810 () Int)
(declare-fun x2 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x2528 () Bool)
(declare-fun x2185 () x4297)
(declare-fun x1163 () Bool)
(declare-fun x931 () Int)
(declare-fun x4023 () Bool)
(declare-fun x367 () Int)
(declare-fun x619 () Int)
(declare-fun x3742 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x4003 () Int)
(declare-fun x981 () Bool)
(declare-fun x141 () Bool)
(declare-fun x561 () Int)
(declare-fun x3494 () Bool)
(declare-fun x2983 () Int)
(declare-fun x2797 () Bool)
(declare-fun x1782 () Int)
(declare-fun x3589 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x763 () Bool)
(declare-fun x4169 () Bool)
(declare-fun x3677 () Int)
(declare-fun x2980 () Bool)
(declare-fun x870 () Int)
(declare-fun x2710 () Bool)
(declare-fun x2437 () Bool)
(declare-fun x1328 () x4297)
(declare-fun x3224 () Int)
(declare-fun x2089 () Bool)
(declare-fun x3513 () x4297)
(declare-fun x3883 () Int)
(declare-fun x4301 () Bool)
(declare-fun x1404 () x4297)
(declare-fun x343 () Bool)
(declare-fun x3918 () x4297)
(declare-fun x1275 () Bool)
(declare-fun x406 () Bool)
(declare-fun x3586 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x4299 () Int)
(declare-fun x4103 (x4297) Int)
(declare-fun x1899 () Bool)
(declare-fun x84 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x2880 () x4297)
(declare-fun x3588 () Bool)
(declare-fun x2061 () Int)
(declare-fun x3659 (Int) Int)
(declare-fun x1230 () Int)
(declare-fun x4152 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x3429 () Int)
(declare-fun x500 () Int)
(declare-fun x2033 () Int)
(declare-fun x4326 () Int)
(declare-fun x2098 () Bool)
(declare-fun x4371 () Int)
(declare-fun x916 () Bool)
(declare-fun x2949 () x4297)
(declare-fun x4200 () Bool)
(declare-fun x2916 () Int)
(declare-fun x356 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x658 () Bool)
(declare-fun x3940 () Int)
(declare-fun x3444 () Int)
(declare-fun x2052 () Bool)
(declare-fun x121 () Int)
(declare-fun x865 () Int)
(declare-fun x3344 () Bool)
(declare-fun x1875 () Int)
(declare-fun x1699 () Bool)
(declare-fun x29 () Bool)
(declare-fun x3300 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x2313 () Bool)
(declare-fun x410 () Int)
(declare-fun x332 () Int)
(declare-fun x3551 () Bool)
(declare-fun x2784 () x4297)
(declare-fun x19 () Int)
(declare-fun x2137 () Bool)
(declare-fun x477 () x4297)
(declare-fun x2169 () Bool)
(declare-fun x3942 () Bool)
(declare-fun x937 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x728 () Bool)
(declare-fun x3777 () Bool)
(declare-fun x3488 () Bool)
(declare-fun x707 () Int)
(declare-fun x2259 () Int)
(declare-fun x847 () Bool)
(declare-fun x3895 () x4297)
(declare-fun x4304 () x4297)
(declare-fun x2460 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x3170 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x3965 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x1742 () Int)
(declare-fun x3901 () Bool)
(declare-fun x396 () Bool)
(declare-fun x1701 () Int)
(declare-fun x2535 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1867 () Bool)
(declare-fun x2666 () Int)
(declare-fun x886 () x4297)
(declare-fun x2064 () Int)
(declare-fun x4203 () Int)
(declare-fun x3023 () Bool)
(declare-fun x2778 () Bool)
(declare-fun x2773 () Bool)
(declare-fun x2914 () Bool)
(declare-fun x765 () Bool)
(declare-fun x3122 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x1679 () Bool)
(declare-fun x2762 () Bool)
(declare-fun x4359 () Bool)
(declare-fun x4046 () Bool)
(declare-fun x2324 () Int)
(declare-fun x444 () Bool)
(declare-fun x3850 () Bool)
(declare-fun x2883 () Int)
(declare-fun x747 () Bool)
(declare-fun x1992 () Int)
(declare-fun x2445 () Int)
(declare-fun x2987 () Bool)
(declare-fun x3171 () Bool)
(declare-fun x4042 () Bool)
(declare-fun x4178 () Bool)
(declare-fun x302 () Int)
(declare-fun x344 () Int)
(declare-fun x1045 () x4297)
(declare-fun x3668 () Bool)
(declare-fun x966 () x4297)
(declare-fun x1141 () Int)
(declare-fun x4334 () Bool)
(declare-fun x1242 () Int)
(declare-fun x2124 () Bool)
(declare-fun x3510 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1405 () Int)
(declare-fun x3272 () Bool)
(declare-fun x80 () Bool)
(declare-fun x935 () Bool)
(declare-fun x4192 () Int)
(declare-fun x2017 () Int)
(declare-fun x520 () Int)
(declare-fun x1585 () Int)
(declare-fun x34 () Int)
(declare-fun x2721 () Int)
(declare-fun x452 () Int)
(declare-fun x1529 () Int)
(declare-fun x497 () Int)
(declare-fun x3567 () Bool)
(declare-fun x4189 () Int)
(declare-fun x725 () Int)
(declare-fun x2356 () Int)
(declare-fun x1066 () Bool)
(declare-fun x3332 () Int)
(declare-fun x1471 () Bool)
(declare-fun x884 () Int)
(declare-fun x778 () Bool)
(declare-fun x3572 () Int)
(declare-fun x3740 () Bool)
(declare-fun x2789 () Bool)
(declare-fun x327 () Int)
(declare-fun x194 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x3769 () x4297)
(declare-fun x4004 () Bool)
(declare-fun x3739 () Bool)
(declare-fun x2744 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x3249 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x405 () Int)
(declare-fun x2046 () Bool)
(declare-fun x4266 () Bool)
(declare-fun x3199 () Bool)
(declare-fun x3631 () Int)
(declare-fun x1845 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x1831 () Int)
(declare-fun x3910 () Bool)
(declare-fun x640 (x4297) Int)
(declare-fun x3087 () x4297)
(declare-fun x4093 () Bool)
(declare-fun x1780 () x4297)
(declare-fun x1451 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x1234 () Int)
(declare-fun x2507 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x788 () Bool)
(declare-fun x2951 (x4297) Int)
(declare-fun x4018 () Int)
(declare-fun x4173 (Int) Int)
(declare-fun x2160 () x4297)
(declare-fun x762 () Int)
(declare-fun x3490 () Int)
(declare-fun x2840 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x965 () Int)
(declare-fun x2779 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x1696 () x4297)
(declare-fun x2265 () Bool)
(declare-fun x216 () Int)
(declare-fun x2868 () Bool)
(declare-fun x3704 () Int)
(declare-fun x3987 () Bool)
(declare-fun x1179 () Int)
(declare-fun x2149 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x821 () Int)
(declare-fun x1853 () Int)
(declare-fun x1082 () Bool)
(declare-fun x280 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x3928 () Int)
(declare-fun x2381 () Int)
(declare-fun x3859 () Bool)
(declare-fun x745 () Bool)
(declare-fun x637 () Int)
(declare-fun x1746 () Bool)
(declare-fun x3139 () Bool)
(declare-fun x3085 () Int)
(declare-fun x4264 () x4297)
(declare-fun x409 () Int)
(declare-fun x3206 () Bool)
(declare-fun x2369 () Int)
(declare-fun x904 () Int)
(declare-fun x2774 () Int)
(declare-fun x1387 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x2591 () Int)
(declare-fun x1905 () Int)
(declare-fun x4047 () Bool)
(declare-fun x3486 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x2878 () Bool)
(declare-fun x1589 () Int)
(declare-fun x3174 () Int)
(declare-fun x1061 () Int)
(declare-fun x1663 () Int)
(declare-fun x2908 () Int)
(declare-fun x1455 () Bool)
(declare-fun x4105 () Bool)
(declare-fun x4255 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x2614 () Int)
(declare-fun x3996 () Int)
(declare-fun x3775 () x4297)
(declare-fun x1209 () Bool)
(declare-fun x4318 () Bool)
(declare-fun x4332 () Bool)
(declare-fun x328 () Bool)
(declare-fun x3244 () Bool)
(declare-fun x1884 () Int)
(declare-fun x2391 () Bool)
(declare-fun x939 () Bool)
(declare-fun x2527 () Int)
(declare-fun x2179 () Int)
(declare-fun x687 () Bool)
(declare-fun x4072 () Bool)
(declare-fun x3727 () x4297)
(declare-fun x3787 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x3354 () Bool)
(declare-fun x4338 () Int)
(declare-fun x816 () Bool)
(declare-fun x2332 () Int)
(declare-fun x898 () Bool)
(declare-fun x263 () Bool)
(declare-fun x3753 () x4297)
(declare-fun x1674 () Bool)
(declare-fun x664 () Bool)
(declare-fun x1102 () Int)
(declare-fun x1960 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x2724 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x3297 () Bool)
(declare-fun x723 () Int)
(declare-fun x4116 () Int)
(declare-fun x1771 () Bool)
(declare-fun x3065 () Bool)
(declare-fun x1497 () Int)
(declare-fun x2216 () Bool)
(declare-fun x2495 () Int)
(declare-fun x1987 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x4160 () Int)
(declare-fun x832 () Bool)
(declare-fun x1876 () Int)
(declare-fun x1038 () Int)
(declare-fun x282 () Bool)
(declare-fun x2070 () Bool)
(declare-fun x4303 () Bool)
(declare-fun x52 () Bool)
(declare-fun x1069 () Int)
(declare-fun x2631 () x4297)
(declare-fun x3296 () Bool)
(declare-fun x105 () x4297)
(declare-fun x1685 () Int)
(declare-fun x4316 () Bool)
(declare-fun x4002 () Bool)
(declare-fun x168 () Bool)
(declare-fun x244 () Int)
(declare-fun x2714 () Bool)
(declare-fun x4113 () Bool)
(declare-fun x3745 () Bool)
(declare-fun x3059 () Bool)
(declare-fun x487 () Bool)
(declare-fun x27 () Bool)
(declare-fun x1982 () Int)
(declare-fun x3097 () Bool)
(declare-fun x3911 () x4297)
(declare-fun x2735 () Int)
(declare-fun x2968 () Int)
(declare-fun x1932 () Int)
(declare-fun x1 () Bool)
(declare-fun x792 () Int)
(declare-fun x3819 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x3561 () Int)
(declare-fun x4067 () Int)
(declare-fun x4008 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x2932 () Int)
(declare-fun x3014 () Bool)
(declare-fun x2342 () Int)
(declare-fun x2186 () Bool)
(declare-fun x3983 () Bool)
(declare-fun x1907 () Int)
(declare-fun x1335 () Bool)
(declare-fun x2433 () Int)
(declare-fun x2067 () Int)
(declare-fun x706 () Int)
(declare-fun x3679 () Int)
(declare-fun x3823 () Bool)
(declare-fun x2849 () Bool)
(declare-fun x3246 () Bool)
(declare-fun x368 () Bool)
(declare-fun x624 () x4297)
(declare-fun x1778 () Int)
(declare-fun x1035 () Int)
(declare-fun x2351 () Bool)
(declare-fun x1923 () Int)
(declare-fun x4366 () Int)
(declare-fun x2659 () Int)
(declare-fun x1285 () Int)
(declare-fun x4246 () Bool)
(declare-fun x4210 () Bool)
(declare-fun x2931 () Int)
(declare-fun x2758 () Bool)
(declare-fun x151 () Int)
(declare-fun x1775 () Int)
(declare-fun x1415 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x4061 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x749 () Int)
(declare-fun x2044 () Int)
(declare-fun x4082 () Bool)
(declare-fun x2027 () x4297)
(declare-fun x225 () x4297)
(declare-fun x463 () Bool)
(declare-fun x3158 () Int)
(declare-fun x4190 () Int)
(declare-fun x2047 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x917 () Int)
(declare-fun x1962 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x2893 () Int)
(declare-fun x1628 () Bool)
(declare-fun x2071 () Int)
(declare-fun x4146 () Int)
(declare-fun x1367 () Bool)
(declare-fun x4221 () Int)
(declare-fun x2674 () Bool)
(declare-fun x3548 () Int)
(declare-fun x2536 () Bool)
(declare-fun x4180 (x4297) Int)
(declare-fun x1877 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x3892 () Bool)
(declare-fun x4234 () Int)
(declare-fun x4019 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x4000 () Bool)
(declare-fun x1846 () Int)
(declare-fun x2747 () Bool)
(declare-fun x1562 () Int)
(declare-fun x2898 () Int)
(declare-fun x3871 () Int)
(declare-fun x3168 () Int)
(declare-fun x1946 () Bool)
(declare-fun x2290 () Int)
(declare-fun x3543 () Int)
(declare-fun x996 () Bool)
(declare-fun x3628 () Int)
(declare-fun x2404 () Bool)
(declare-fun x699 () Bool)
(declare-fun x3361 () Bool)
(declare-fun x3949 () Int)
(declare-fun x2577 () Bool)
(declare-fun x1786 () Int)
(declare-fun x3562 () x4297)
(declare-fun x2021 () Int)
(declare-fun x483 () Bool)
(declare-fun x569 () Bool)
(declare-fun x596 () Bool)
(declare-fun x2548 () Int)
(declare-fun x65 () Int)
(declare-fun x861 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x232 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x527 () Int)
(declare-fun x2211 () x4297)
(declare-fun x155 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x116 () Bool)
(declare-fun x3985 () Bool)
(declare-fun x2513 () Int)
(declare-fun x1997 () Bool)
(declare-fun x758 () Int)
(declare-fun x1189 () x4297)
(declare-fun x3643 () x4297)
(declare-fun x3086 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x2846 () Int)
(declare-fun x3503 () Int)
(declare-fun x944 () Int)
(declare-fun x519 () Bool)
(declare-fun x3843 () Int)
(declare-fun x1170 () Int)
(declare-fun x3150 () Bool)
(declare-fun x575 () Int)
(declare-fun x3032 () Int)
(declare-fun x1372 () x4297)
(declare-fun x3154 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x2643 () Int)
(declare-fun x2397 () Int)
(declare-fun x3989 () Int)
(declare-fun x269 () Bool)
(declare-fun x479 (Int) Int)
(declare-fun x1422 () Int)
(declare-fun x2947 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x4348 () x4297)
(declare-fun x2417 () Bool)
(declare-fun x639 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x802 () Bool)
(declare-fun x3803 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x3680 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x2022 () Int)
(declare-fun x397 () Bool)
(declare-fun x844 () Int)
(declare-fun x3460 () Bool)
(declare-fun x4322 () x4297)
(declare-fun x3132 () Bool)
(declare-fun x33 () Bool)
(declare-fun x2738 () Int)
(declare-fun x768 () Int)
(declare-fun x1623 () Int)
(declare-fun x789 () Int)
(declare-fun x907 () Bool)
(declare-fun x2200 () Int)
(declare-fun x3858 () Int)
(declare-fun x651 () Int)
(declare-fun x3724 () Int)
(declare-fun x2971 () Bool)
(declare-fun x386 () Bool)
(declare-fun x1571 () Int)
(declare-fun x1578 () Bool)
(declare-fun x2511 () Int)
(declare-fun x1352 () Int)
(declare-fun x2094 () Bool)
(declare-fun x3497 () Bool)
(declare-fun x2408 () x4297)
(declare-fun x331 () Bool)
(declare-fun x136 () Bool)
(declare-fun x4049 () x4297)
(declare-fun x3325 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x1758 (Int) Int)
(declare-fun x1749 () Int)
(declare-fun x4248 () Int)
(declare-fun x404 () Int)
(declare-fun x146 () Bool)
(declare-fun x3517 () Int)
(declare-fun x1246 () Int)
(declare-fun x4163 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x1116 () Int)
(declare-fun x1351 () Int)
(declare-fun x645 () Int)
(declare-fun x957 () Bool)
(declare-fun x776 () Int)
(declare-fun x3369 () Int)
(declare-fun x2923 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x989 () Bool)
(declare-fun x1296 () x4297)
(declare-fun x1659 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x636 () Int)
(declare-fun x3357 () Bool)
(declare-fun x2864 () Int)
(declare-fun x1514 () Bool)
(declare-fun x1503 () Int)
(declare-fun x2446 () Int)
(declare-fun x775 () Bool)
(declare-fun x3861 () Int)
(declare-fun x1564 () Int)
(declare-fun x2798 () Int)
(declare-fun x993 () Int)
(declare-fun x2768 () Int)
(declare-fun x2293 () Bool)
(declare-fun x3443 () Int)
(declare-fun x4066 () Bool)
(declare-fun x4367 () Int)
(declare-fun x3907 () Int)
(declare-fun x1049 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x3878 () Bool)
(declare-fun x349 () Bool)
(declare-fun x3015 () Int)
(declare-fun x1178 () Int)
(declare-fun x3352 () Bool)
(declare-fun x3838 () x4297)
(declare-fun x2999 () Bool)
(declare-fun x45 () Bool)
(declare-fun x4253 () Bool)
(declare-fun x14 () Bool)
(declare-fun x543 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x2000 () Int)
(declare-fun x89 () Bool)
(declare-fun x2008 () Int)
(declare-fun x1537 () Int)
(declare-fun x1369 () Bool)
(declare-fun x2792 () Int)
(declare-fun x3655 () Int)
(declare-fun x3037 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x1484 () Int)
(declare-fun x3348 () Int)
(declare-fun x3368 () Int)
(declare-fun x3585 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x12 () Bool)
(declare-fun x128 () Bool)
(declare-fun x2157 () Bool)
(declare-fun x2711 () Int)
(declare-fun x3611 () Int)
(declare-fun x2481 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x541 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1382 () Bool)
(declare-fun x3470 () Bool)
(declare-fun x1829 () Int)
(declare-fun x2890 () Int)
(declare-fun x2973 () Bool)
(declare-fun x2341 () Int)
(declare-fun x3669 () Bool)
(declare-fun x1183 () Int)
(declare-fun x3648 () Bool)
(declare-fun x4251 () Bool)
(declare-fun x3094 () Bool)
(declare-fun x2952 () Int)
(declare-fun x3312 () Bool)
(declare-fun x570 () Bool)
(declare-fun x1399 () Int)
(declare-fun x731 () x4297)
(declare-fun x1862 () Int)
(declare-fun x2226 () Int)
(declare-fun x4340 () x4297)
(declare-fun x1411 () Int)
(declare-fun x3783 () Bool)
(declare-fun x3298 () Bool)
(declare-fun x828 () Int)
(declare-fun x1704 () Int)
(declare-fun x3877 () x4297)
(declare-fun x3214 () x4297)
(declare-fun x793 () Int)
(declare-fun x2405 () Bool)
(declare-fun x1658 () Int)
(declare-fun x753 () Bool)
(declare-fun x3035 () Int)
(declare-fun x3653 () Bool)
(declare-fun x4365 () x4297)
(declare-fun x3189 () Bool)
(declare-fun x782 () Bool)
(declare-fun x3872 () Bool)
(declare-fun x2807 () Bool)
(declare-fun x3152 () Int)
(declare-fun x2708 () Int)
(declare-fun x2260 () Int)
(declare-fun x987 () Bool)
(declare-fun x2887 () Int)
(declare-fun x698 () Bool)
(declare-fun x2673 () Int)
(declare-fun x50 () Bool)
(declare-fun x1477 () Int)
(declare-fun x2161 () Int)
(declare-fun x1664 () Bool)
(declare-fun x4235 () Int)
(declare-fun x3043 () Bool)
(declare-fun x2853 () Bool)
(declare-fun x4091 () Int)
(declare-fun x1661 () Int)
(declare-fun x361 () Bool)
(declare-fun x840 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x296 () Bool)
(declare-fun x1737 () Int)
(declare-fun x4281 () Bool)
(declare-fun x3487 () Bool)
(declare-fun x275 () Bool)
(declare-fun x2090 () Int)
(declare-fun x905 () Bool)
(declare-fun x1414 () Int)
(declare-fun x2803 () Bool)
(declare-fun x891 () Int)
(declare-fun x3641 () Bool)
(declare-fun x366 () Int)
(declare-fun x273 () Bool)
(declare-fun x781 () Int)
(declare-fun x2104 () Bool)
(declare-fun x4186 () Int)
(declare-fun x790 () Bool)
(declare-fun x1361 () Int)
(declare-fun x4108 () Int)
(declare-fun x2334 () Bool)
(declare-fun x3833 () Bool)
(declare-fun x3800 () Bool)
(declare-fun x553 () Int)
(declare-fun x300 () Bool)
(declare-fun x2077 () Int)
(declare-fun x127 () Bool)
(declare-fun x3614 () Int)
(declare-fun x1023 () Int)
(declare-fun x2706 () Int)
(declare-fun x4088 () Int)
(declare-fun x3603 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x875 () Bool)
(declare-fun x1014 () Int)
(declare-fun x2589 () Int)
(declare-fun x547 () Bool)
(declare-fun x683 () Int)
(declare-fun x2623 () Int)
(declare-fun x4175 () Int)
(declare-fun x2326 () Bool)
(declare-fun x4033 () Bool)
(declare-fun x240 () Int)
(declare-fun x289 () Bool)
(declare-fun x1162 () Int)
(declare-fun x806 () Bool)
(declare-fun x4069 () x4297)
(declare-fun x1184 () Bool)
(declare-fun x3577 () Int)
(declare-fun x1579 () Int)
(declare-fun x849 () Bool)
(declare-fun x2346 () Int)
(declare-fun x246 () Int)
(declare-fun x3180 () Bool)
(declare-fun x1418 (Int) Int)
(declare-fun x3749 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x717 () Bool)
(declare-fun x2140 () Int)
(declare-fun x235 () Bool)
(declare-fun x1769 (x4297) Int)
(declare-fun x3730 () Bool)
(declare-fun x2891 () Bool)
(declare-fun x3477 () Bool)
(declare-fun x4296 () x4297)
(declare-fun x2247 () Int)
(declare-fun x3252 () Bool)
(declare-fun x153 () Bool)
(declare-fun x2691 () Int)
(declare-fun x2550 () Bool)
(declare-fun x3489 () x4297)
(declare-fun x2942 () Bool)
(declare-fun x1505 () Int)
(declare-fun x382 () Bool)
(declare-fun x3271 () Bool)
(declare-fun x3026 () Bool)
(declare-fun x1534 () Int)
(declare-fun x3813 () Int)
(declare-fun x3828 () Bool)
(declare-fun x2148 () Int)
(declare-fun x2745 () Bool)
(declare-fun x3078 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x3262 () Int)
(declare-fun x2442 () Int)
(declare-fun x1803 () Bool)
(declare-fun x1435 () x4297)
(declare-fun x2555 () Int)
(declare-fun x2563 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x4375 () Int)
(declare-fun x518 () Bool)
(declare-fun x3780 () Bool)
(declare-fun x159 () Int)
(declare-fun x1279 () x4297)
(declare-fun x1881 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1969 () Int)
(declare-fun x2305 () Int)
(declare-fun x8 () Int)
(declare-fun x3351 () Int)
(declare-fun x897 () Int)
(declare-fun x3947 () Int)
(declare-fun x3112 () Int)
(declare-fun x882 () Bool)
(declare-fun x2146 () Bool)
(declare-fun x2626 () Int)
(declare-fun x1557 () Bool)
(declare-fun x3090 () Int)
(declare-fun x345 () x4297)
(declare-fun x4128 () Int)
(declare-fun x1053 () Int)
(declare-fun x1266 () Int)
(declare-fun x1204 () Bool)
(declare-fun x3284 () Bool)
(declare-fun x1160 () Int)
(declare-fun x143 () Int)
(declare-fun x1131 () Int)
(declare-fun x2012 () x4297)
(declare-fun x2348 () Int)
(declare-fun x859 () Bool)
(declare-fun x4219 () Int)
(declare-fun x3 () Bool)
(declare-fun x3713 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x2213 () Int)
(declare-fun x3917 () Bool)
(declare-fun x1232 () x4297)
(declare-fun x2811 () Bool)
(declare-fun x4138 () Bool)
(declare-fun x663 () Int)
(declare-fun x720 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x1566 () x4297)
(declare-fun x4277 () Int)
(declare-fun x3434 () Int)
(declare-fun x3765 () Bool)
(declare-fun x471 () Bool)
(declare-fun x1654 () Int)
(declare-fun x2729 (Int) Int)
(declare-fun x250 () Int)
(declare-fun x1804 () Int)
(declare-fun x2845 () Int)
(declare-fun x1444 () Bool)
(declare-fun x2106 () Int)
(declare-fun x1895 () Int)
(declare-fun x4005 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x3986 () Int)
(declare-fun x2896 () Bool)
(declare-fun x1864 () Int)
(declare-fun x1596 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1316 () Bool)
(declare-fun x3010 (Int) x4297)
(declare-fun x544 () Int)
(declare-fun x41 () Int)
(declare-fun x2280 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x1489 () Int)
(declare-fun x403 () Int)
(declare-fun x2975 () Int)
(declare-fun x400 () Bool)
(declare-fun x4117 () x4297)
(declare-fun x3316 () Bool)
(declare-fun x976 () Bool)
(declare-fun x946 () Bool)
(declare-fun x3678 () Bool)
(declare-fun x2450 () Int)
(declare-fun x3155 () Int)
(declare-fun x2663 () Bool)
(declare-fun x247 () Bool)
(declare-fun x3617 () Bool)
(declare-fun x214 () Int)
(declare-fun x945 () Int)
(declare-fun x1672 (Int) Int)
(declare-fun x1622 () x4297)
(declare-fun x3504 () Bool)
(declare-fun x70 () Bool)
(declare-fun x4153 () Int)
(declare-fun x3599 () Bool)
(declare-fun x661 () Bool)
(declare-fun x733 () Bool)
(declare-fun x746 () Bool)
(declare-fun x514 () Bool)
(declare-fun x1149 () x4297)
(declare-fun x1368 () Bool)
(declare-fun x678 () Int)
(declare-fun x3221 () Int)
(declare-fun x1206 () Int)
(declare-fun x1374 () Int)
(declare-fun x2175 () Bool)
(declare-fun x769 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x3519 () Int)
(declare-fun x3004 () Int)
(declare-fun x1421 () Bool)
(declare-fun x800 () Bool)
(declare-fun x4099 () Bool)
(declare-fun x632 () Bool)
(declare-fun x1759 () Int)
(declare-fun x2671 () Int)
(declare-fun x1341 () x4297)
(declare-fun x3927 () Bool)
(declare-fun x955 () Bool)
(declare-fun x2882 () Int)
(declare-fun x2910 () x4297)
(declare-fun x1688 () Int)
(declare-fun x4162 () Bool)
(declare-fun x896 () Int)
(declare-fun x449 () Int)
(declare-fun x2165 () x4297)
(declare-fun x2261 () Bool)
(declare-fun x1811 () x4297)
(declare-fun x2359 () Bool)
(declare-fun x3741 () x4297)
(declare-fun x1620 () Int)
(declare-fun x1436 () Int)
(declare-fun x3167 () Bool)
(declare-fun x797 () Int)
(declare-fun x1222 () Bool)
(declare-fun x4261 () Bool)
(declare-fun x1751 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x3187 () Int)
(declare-fun x1039 () Bool)
(declare-fun x594 () Int)
(declare-fun x2310 () Int)
(declare-fun x3563 () Bool)
(declare-fun x429 () Int)
(declare-fun x2956 () Int)
(declare-fun x3355 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x2657 () Int)
(declare-fun x2790 () Bool)
(declare-fun x4025 () x4297)
(declare-fun x1304 () Bool)
(declare-fun x2695 () Int)
(declare-fun x572 () Int)
(declare-fun x951 () Bool)
(declare-fun x425 () Bool)
(declare-fun x2533 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x889 () Bool)
(declare-fun x4209 () Bool)
(declare-fun x2957 () Bool)
(declare-fun x152 () Int)
(declare-fun x2344 () Int)
(declare-fun x20 () Int)
(declare-fun x759 () Int)
(declare-fun x750 () Bool)
(declare-fun x3966 () Int)
(declare-fun x846 () Int)
(declare-fun x1472 () Bool)
(declare-fun x3000 () Bool)
(declare-fun x533 () Bool)
(declare-fun x186 () Int)
(declare-fun x494 () Int)
(declare-fun x918 () Bool)
(declare-fun x3581 () Bool)
(declare-fun x845 () Int)
(declare-fun x16 () Int)
(declare-fun x3285 () Bool)
(declare-fun x2580 () Bool)
(declare-fun x1902 () Int)
(declare-fun x2516 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x23 () Int)
(declare-fun x933 () Bool)
(declare-fun x3397 () Int)
(declare-fun x3632 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x1146 () Int)
(declare-fun x234 () Bool)
(declare-fun x189 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x3063 () Bool)
(declare-fun x2249 () Bool)
(declare-fun x3854 () Int)
(declare-fun x1611 () Int)
(declare-fun x672 () Int)
(declare-fun x1181 () Int)
(declare-fun x3380 () Int)
(declare-fun x2856 () Bool)
(declare-fun x732 () Int)
(declare-fun x2719 () Int)
(declare-fun x1310 () Bool)
(declare-fun x3185 () x4297)
(declare-fun x4193 () Bool)
(declare-fun x2647 () Int)
(declare-fun x1326 () Bool)
(declare-fun x888 () Int)
(declare-fun x972 () Bool)
(declare-fun x4347 () Int)
(declare-fun x894 () Int)
(declare-fun x4373 () Bool)
(declare-fun x3729 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x3584 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x1032 (x4297) Int)
(declare-fun x2814 () Bool)
(declare-fun x1042 () Int)
(declare-fun x2294 () Int)
(declare-fun x2982 () Bool)
(declare-fun x3226 () Int)
(declare-fun x1760 () Bool)
(declare-fun x822 () Int)
(declare-fun x4124 () Bool)
(declare-fun x818 () Bool)
(declare-fun x448 () Int)
(declare-fun x878 () Int)
(declare-fun x2617 () Bool)
(declare-fun x3175 () Int)
(declare-fun x4187 () Bool)
(declare-fun x1694 () Int)
(declare-fun x2440 () Int)
(declare-fun x2938 () Bool)
(declare-fun x447 () Bool)
(declare-fun x374 () Int)
(declare-fun x1502 () Bool)
(declare-fun x5 () Bool)
(declare-fun x4198 () Bool)
(declare-fun x1423 () Int)
(declare-fun x473 () Bool)
(declare-fun x202 () x4297)
(declare-fun x573 () x4297)
(declare-fun x2678 () Int)
(declare-fun x3068 () Bool)
(declare-fun x4272 () Bool)
(declare-fun x3125 () Bool)
(declare-fun x3258 () Bool)
(declare-fun x1605 () Int)
(declare-fun x1258 () Bool)
(declare-fun x3706 () Int)
(declare-fun x355 () Int)
(declare-fun x415 () Bool)
(declare-fun x689 () Int)
(declare-fun x2263 () Int)
(declare-fun x2023 () Int)
(declare-fun x600 () Int)
(declare-fun x1255 () Int)
(declare-fun x1725 () Bool)
(declare-fun x4231 () Bool)
(declare-fun x4291 () Int)
(declare-fun x2844 () Int)
(declare-fun x921 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x3831 () Int)
(declare-fun x2333 () Int)
(declare-fun x586 () Int)
(declare-fun x2788 () Bool)
(declare-fun x341 () Int)
(declare-fun x1133 () Int)
(declare-fun x4217 () Bool)
(declare-fun x4011 () Bool)
(declare-fun x2764 () Bool)
(declare-fun x4354 () Int)
(declare-fun x1922 () Int)
(declare-fun x893 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x1540 () x4297)
(declare-fun x3393 () Int)
(declare-fun x2819 () Int)
(declare-fun x863 () Bool)
(declare-fun x230 () Bool)
(declare-fun x4 () Int)
(declare-fun x103 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x4134 () Int)
(declare-fun x992 () Bool)
(declare-fun x665 () Bool)
(declare-fun x484 () Int)
(declare-fun x3608 () Int)
(declare-fun x667 () Bool)
(declare-fun x2385 (Int) Int)
(declare-fun x92 () Int)
(declare-fun x1812 () Bool)
(declare-fun x3251 () Int)
(declare-fun x1842 () Int)
(declare-fun x428 () Int)
(declare-fun x4361 () Int)
(declare-fun x1830 () Bool)
(declare-fun x3264 () Int)
(declare-fun x2451 () Bool)
(declare-fun x3375 () Int)
(declare-fun x712 () Bool)
(declare-fun x714 () Int)
(declare-fun x3356 () Int)
(declare-fun x79 () Bool)
(declare-fun x2741 () Bool)
(declare-fun x3770 () Int)
(declare-fun x197 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x3120 () Int)
(declare-fun x2107 () Int)
(declare-fun x1487 () Bool)
(declare-fun x237 () Bool)
(declare-fun x2057 () Int)
(declare-fun x226 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x1251 () Int)
(declare-fun x1084 () Int)
(declare-fun x1868 () Bool)
(declare-fun x873 () Int)
(declare-fun x3900 () Int)
(declare-fun x1208 (x4297) Int)
(declare-fun x1619 () Int)
(declare-fun x138 () Int)
(declare-fun x929 () Bool)
(declare-fun x3974 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x4155 () Int)
(declare-fun x3009 () Int)
(declare-fun x3975 () Bool)
(declare-fun x2372 () Int)
(declare-fun x1132 () Int)
(declare-fun x4154 () Int)
(declare-fun x426 () Bool)
(declare-fun x3693 () Bool)
(declare-fun x3746 () Bool)
(declare-fun x638 () Bool)
(declare-fun x3034 () Int)
(declare-fun x3088 () Bool)
(declare-fun x131 () Bool)
(declare-fun x4309 () Int)
(declare-fun x2232 () Int)
(declare-fun x2681 () x4297)
(declare-fun x962 () Int)
(declare-fun x565 () Int)
(declare-fun x1871 () Bool)
(declare-fun x686 () Bool)
(declare-fun x3433 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x4097 () Int)
(declare-fun x1980 () Bool)
(declare-fun x2153 () Int)
(declare-fun x3169 () x4297)
(declare-fun x3031 () Int)
(declare-fun x3638 () Bool)
(declare-fun x3711 () Bool)
(declare-fun x3698 () Bool)
(declare-fun x2795 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x3889 () x4297)
(declare-fun x3866 () Int)
(declare-fun x3511 () Int)
(declare-fun x261 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x1482 () Int)
(declare-fun x1873 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x3200 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x373 () Bool)
(declare-fun x411 () x4297)
(declare-fun x2872 () Bool)
(declare-fun x3647 () Int)
(declare-fun x1101 () Int)
(declare-fun x4229 () x4297)
(declare-fun x1054 () Int)
(declare-fun x1998 () Bool)
(declare-fun x4142 () Bool)
(declare-fun x267 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x2835 () Int)
(declare-fun x1148 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x3317 () Bool)
(declare-fun x2889 () x4297)
(declare-fun x3437 () Int)
(declare-fun x3089 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x3994 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x2683 () Bool)
(declare-fun x1413 () Int)
(declare-fun x1314 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x2785 () Bool)
(declare-fun x2969 () Int)
(declare-fun x61 () Bool)
(declare-fun x1370 () Int)
(declare-fun x2105 () Int)
(declare-fun x1953 () Bool)
(declare-fun x432 () Bool)
(declare-fun x1026 () x4297)
(declare-fun x3609 () Bool)
(declare-fun x3691 () Int)
(declare-fun x2170 () Bool)
(declare-fun x589 () Bool)
(declare-fun x867 () Bool)
(declare-fun x3235 () Int)
(declare-fun x1375 () Bool)
(declare-fun x1826 () Int)
(declare-fun x32 () Bool)
(declare-fun x3099 () Int)
(declare-fun x3076 () Int)
(declare-fun x3349 () Bool)
(declare-fun x2523 () Bool)
(declare-fun x251 () Bool)
(declare-fun x3933 () Int)
(declare-fun x2395 () Int)
(declare-fun x1593 () Int)
(declare-fun x359 () Bool)
(declare-fun x1371 () x4297)
(declare-fun x585 () Int)
(declare-fun x779 () Int)
(declare-fun x2439 () Bool)
(declare-fun x9 () Int)
(declare-fun x1766 () Int)
(declare-fun x716 () Bool)
(declare-fun x2769 () Bool)
(declare-fun x1966 () Bool)
(declare-fun x2472 () x4297)
(declare-fun x259 () Bool)
(declare-fun x960 () Bool)
(declare-fun x3345 () Bool)
(declare-fun x508 () Int)
(declare-fun x2126 () Bool)
(declare-fun x2828 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1857 () Int)
(declare-fun x1355 () Bool)
(declare-fun x1156 () Int)
(declare-fun x4241 () Int)
(declare-fun x531 () Int)
(declare-fun x268 () Bool)
(declare-fun x2848 () Bool)
(declare-fun x3462 () Bool)
(declare-fun x2692 () Bool)
(declare-fun x2503 () Int)
(declare-fun x3417 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x1152 () Int)
(declare-fun x2777 () x4297)
(declare-fun x222 () Int)
(declare-fun x4215 () Int)
(declare-fun x2960 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x1050 () Int)
(declare-fun x2399 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x1630 (x4297) Int)
(declare-fun x3376 () Int)
(declare-fun x3774 () Int)
(declare-fun x3402 () Int)
(declare-fun x1524 () Int)
(declare-fun x670 () Int)
(declare-fun x1838 () Bool)
(declare-fun x371 () Int)
(declare-fun x3812 () Bool)
(declare-fun x4333 () Int)
(declare-fun x3177 () Int)
(declare-fun x1376 () Int)
(declare-fun x4202 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x228 () x4297)
(declare-fun x1259 () Bool)
(declare-fun x2858 () x4297)
(declare-fun x205 () Int)
(declare-fun x2386 () Bool)
(declare-fun x2782 () x4297)
(declare-fun x3030 () Int)
(declare-fun x3958 (Int) Int)
(declare-fun x2854 () Bool)
(declare-fun x3451 () Bool)
(declare-fun x2575 () Bool)
(declare-fun x3967 () Bool)
(declare-fun x1302 () Int)
(declare-fun x3338 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x983 () Bool)
(declare-fun x830 () Bool)
(declare-fun x3415 () Int)
(declare-fun x1653 () Int)
(declare-fun x3027 () Bool)
(declare-fun x3840 () x4297)
(declare-fun x593 () Int)
(declare-fun x2354 () Int)
(declare-fun x3808 () Int)
(declare-fun x4343 () Int)
(declare-fun x3480 () Int)
(declare-fun x4057 () Int)
(declare-fun x980 () x4297)
(declare-fun x4300 () Bool)
(declare-fun x358 () Int)
(declare-fun x1935 () Bool)
(declare-fun x3852 () Int)
(declare-fun x3710 () x4297)
(declare-fun x554 () Int)
(declare-fun x783 () Int)
(declare-fun x2084 () Bool)
(declare-fun x4275 () Int)
(declare-fun x472 () Bool)
(declare-fun x211 () Int)
(declare-fun x1681 () Bool)
(declare-fun x2727 () Bool)
(declare-fun x634 () Int)
(declare-fun x3695 () Bool)
(declare-fun x3522 () Int)
(declare-fun x25 () Int)
(declare-fun x314 () Int)
(declare-fun x362 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x2173 () Int)
(declare-fun x2379 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x3855 () Bool)
(declare-fun x1306 () Int)
(declare-fun x675 () x4297)
(declare-fun x2833 () Int)
(declare-fun x3468 () Int)
(declare-fun x3308 () Bool)
(declare-fun x1616 () Int)
(declare-fun x2327 () Int)
(declare-fun x379 () Int)
(declare-fun x3165 () Int)
(declare-fun x2269 () Int)
(declare-fun x641 () Int)
(declare-fun x729 () Bool)
(declare-fun x3815 () Int)
(declare-fun x2728 () Int)
(declare-fun x3110 () Int)
(declare-fun x4013 () Bool)
(declare-fun x3977 () Bool)
(declare-fun x2188 () Int)
(declare-fun x542 () x4297)
(declare-fun x2725 () Bool)
(declare-fun x1894 () Int)
(declare-fun x3327 () Int)
(declare-fun x2039 () Bool)
(declare-fun x2318 () Int)
(declare-fun x171 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x1097 () x4297)
(declare-fun x4176 () Bool)
(declare-fun x3405 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x617 () Bool)
(declare-fun x172 () Int)
(declare-fun x81 () Int)
(declare-fun x3449 () Bool)
(declare-fun x2059 () Int)
(declare-fun x2289 () Bool)
(declare-fun x958 () Bool)
(declare-fun x2842 () Bool)
(declare-fun x369 () x4297)
(declare-fun x848 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x4249 () Int)
(declare-fun x3198 () Bool)
(declare-fun x2353 () Bool)
(declare-fun x2279 () Int)
(declare-fun x704 () Int)
(declare-fun x1860 () Int)
(declare-fun x4085 () Bool)
(declare-fun x1601 () x4297)
(declare-fun x4355 () Bool)
(declare-fun x1012 () Int)
(declare-fun x456 () Int)
(declare-fun x2786 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x2147 () Int)
(declare-fun x3811 () Bool)
(declare-fun x3573 () Int)
(declare-fun x2621 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x3915 () Int)
(declare-fun x2238 () Bool)
(declare-fun x3525 () x4297)
(declare-fun x1670 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x476 () Int)
(declare-fun x438 () Int)
(declare-fun x2542 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x3807 () Int)
(declare-fun x2230 () Bool)
(declare-fun x605 () Bool)
(declare-fun x876 () Int)
(declare-fun x3138 () Int)
(declare-fun x2016 () Bool)
(declare-fun x2897 () x4297)
(declare-fun x3736 () Int)
(declare-fun x1732 () Bool)
(declare-fun x42 () Int)
(declare-fun x780 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x3886 () Bool)
(declare-fun x3576 () x4297)
(declare-fun x566 () Bool)
(declare-fun x3575 () Int)
(declare-fun x2925 () Int)
(declare-fun x988 () Bool)
(declare-fun x4159 () Bool)
(declare-fun x248 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x112 () Int)
(declare-fun x150 () Int)
(declare-fun x2454 () Bool)
(declare-fun x737 () Int)
(declare-fun x2836 () Int)
(declare-fun x4269 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1301 () Bool)
(declare-fun x2860 () x4297)
(declare-fun x3533 () Int)
(declare-fun x2540 () Bool)
(declare-fun x3474 () Bool)
(declare-fun x2113 () x4297)
(declare-fun x412 () Bool)
(declare-fun x1832 () x4297)
(declare-fun x4182 () Int)
(declare-fun x1709 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x170 () Int)
(declare-fun x3430 () Bool)
(declare-fun x1925 () Bool)
(declare-fun x3694 (x4297) Int)
(declare-fun x2818 () Bool)
(declare-fun x3096 () Bool)
(declare-fun x1861 () Int)
(declare-fun x3431 () Bool)
(declare-fun x4320 () Bool)
(declare-fun x4232 () x4297)
(declare-fun x4257 () Int)
(declare-fun x1990 () Bool)
(declare-fun x2034 () Int)
(declare-fun x1448 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x4036 () Int)
(declare-fun x4081 () Int)
(declare-fun x3452 () Bool)
(declare-fun x4084 () x4297)
(declare-fun x2581 () Bool)
(declare-fun x1122 () Int)
(declare-fun x489 () Int)
(declare-fun x1518 () Int)
(declare-fun x4107 () Int)
(declare-fun x2920 () Bool)
(declare-fun x2749 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x3590 () Bool)
(declare-fun x3412 () Int)
(declare-fun x115 () Int)
(declare-fun x3744 () Int)
(declare-fun x1570 () Bool)
(declare-fun x2048 () Int)
(declare-fun x395 () x4297)
(declare-fun x2174 () Int)
(declare-fun x2482 () Bool)
(declare-fun x4102 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x2414 () Bool)
(declare-fun x2430 () Int)
(declare-fun x724 () Bool)
(declare-fun x995 () Bool)
(declare-fun x2655 () Int)
(declare-fun x4292 () Bool)
(declare-fun x3763 () Bool)
(declare-fun x924 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x1227 () x4297)
(declare-fun x622 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x1256 () Int)
(declare-fun x249 () Int)
(declare-fun x83 () x4297)
(declare-fun x1594 () Int)
(declare-fun x3908 () Int)
(declare-fun x2227 () Int)
(declare-fun x1705 () Int)
(declare-fun x3255 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x2783 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x4045 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x606 () Int)
(declare-fun x3924 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x2600 () Int)
(declare-fun x1851 () Bool)
(declare-fun x2805 () Int)
(declare-fun x3728 () Bool)
(declare-fun x166 () Bool)
(declare-fun x3250 () Int)
(declare-fun x3463 () Bool)
(declare-fun x877 () Int)
(declare-fun x766 () Int)
(declare-fun x2118 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x2389 () Bool)
(declare-fun x3634 () Int)
(declare-fun x985 () Bool)
(declare-fun x1006 () Int)
(declare-fun x829 () Int)
(declare-fun x1358 () Int)
(declare-fun x3762 () Bool)
(declare-fun x3128 () Int)
(declare-fun x3798 () Int)
(declare-fun x3524 () Bool)
(declare-fun x1151 () Int)
(declare-fun x2802 () Int)
(declare-fun x97 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x3794 () Int)
(declare-fun x1041 () Bool)
(declare-fun x568 () Bool)
(declare-fun x1874 () Int)
(declare-fun x156 () Bool)
(declare-fun x346 () Bool)
(declare-fun x3379 () Bool)
(declare-fun x47 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x93 () Bool)
(declare-fun x853 () Bool)
(declare-fun x835 () Int)
(declare-fun x102 () Bool)
(declare-fun x2825 () Bool)
(declare-fun x1991 () Int)
(declare-fun x291 () Bool)
(declare-fun x3867 () Bool)
(declare-fun x2688 () Int)
(declare-fun x1891 () Bool)
(declare-fun x2816 () Bool)
(declare-fun x1211 () Int)
(declare-fun x2120 () Bool)
(declare-fun x421 () Bool)
(declare-fun x2009 () Int)
(declare-fun x2667 () Int)
(declare-fun x215 () x4297)
(declare-fun x1136 () Int)
(declare-fun x2136 () Bool)
(declare-fun x179 () Int)
(declare-fun x3002 () x4297)
(declare-fun x4132 () Int)
(declare-fun x2772 () Int)
(declare-fun x2159 () Int)
(declare-fun x3772 () x4297)
(declare-fun x2380 () Int)
(declare-fun x813 () Bool)
(declare-fun x3418 () Bool)
(declare-fun x2066 () Int)
(declare-fun x3160 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x3469 () Bool)
(declare-fun x2557 () Int)
(declare-fun x3970 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x256 () Int)
(declare-fun x625 () Int)
(declare-fun x2026 () x4297)
(declare-fun x407 () Int)
(declare-fun x1984 () Bool)
(declare-fun x2775 () Bool)
(declare-fun x94 () Int)
(declare-fun x1938 () Int)
(declare-fun x451 () Bool)
(declare-fun x3661 () Int)
(declare-fun x1896 () Int)
(declare-fun x3979 () Int)
(declare-fun x883 () Int)
(declare-fun x1908 () Int)
(declare-fun x3856 () Int)
(declare-fun x3980 () Bool)
(declare-fun x3237 () Int)
(declare-fun x3366 () Int)
(declare-fun x599 () Int)
(declare-fun x2703 () Int)
(declare-fun x3456 () Int)
(declare-fun x3633 () Bool)
(declare-fun x3500 () Int)
(declare-fun x3242 () Bool)
(declare-fun x4101 () Bool)
(declare-fun x46 () Bool)
(declare-fun x351 () Int)
(declare-fun x2329 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x970 () Int)
(declare-fun x3973 () Bool)
(declare-fun x3143 () Bool)
(declare-fun x502 () Bool)
(declare-fun x4204 (Int) Int)
(declare-fun x3289 () Bool)
(declare-fun x3194 () x4297)
(declare-fun x3969 () x4297)
(declare-fun x3890 () Int)
(declare-fun x2422 () Bool)
(declare-fun x1602 () Int)
(declare-fun x4339 () Int)
(declare-fun x1660 () Bool)
(declare-fun x3523 () Bool)
(declare-fun x3279 () Bool)
(declare-fun x3133 () Bool)
(declare-fun x3281 () Bool)
(declare-fun x2431 () x4297)
(declare-fun x1512 () Bool)
(declare-fun x1490 () Int)
(declare-fun x3553 () x4297)
(declare-fun x301 () Bool)
(declare-fun x3810 () Bool)
(declare-fun x760 () x4297)
(declare-fun x3637 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x3925 () Bool)
(declare-fun x1288 () Int)
(declare-fun x2477 () Int)
(declare-fun x3373 () Bool)
(declare-fun x2401 () Bool)
(declare-fun x571 () Bool)
(declare-fun x3789 () Int)
(declare-fun x4119 () Bool)
(declare-fun x3938 () Bool)
(declare-fun x4131 () x4297)
(declare-fun x807 () Bool)
(declare-fun x2302 () Int)
(declare-fun x329 () Bool)
(declare-fun x991 () Bool)
(declare-fun x2841 () Bool)
(declare-fun x1031 () Int)
(declare-fun x2069 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x4174 () x4297)
(declare-fun x457 () Bool)
(declare-fun x3100 () Int)
(declare-fun x229 () Int)
(declare-fun x3319 () Int)
(declare-fun x4372 () Bool)
(declare-fun x3040 () Int)
(declare-fun x3135 () Bool)
(declare-fun x2644 () Int)
(declare-fun x3597 () Bool)
(declare-fun x288 () Bool)
(declare-fun x4064 () Bool)
(declare-fun x3582 () x4297)
(declare-fun x4181 () Int)
(declare-fun x1931 () Bool)
(declare-fun x4151 () Int)
(declare-fun x2781 () Bool)
(declare-fun x3579 () Int)
(declare-fun x339 (Int) Int)
(declare-fun x2632 () Int)
(declare-fun x562 () x4297)
(declare-fun x3738 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x2246 () Int)
(declare-fun x1880 () Int)
(declare-fun x657 () x4297)
(declare-fun x3371 () Int)
(declare-fun x3509 () Int)
(declare-fun x1897 () Bool)
(declare-fun x488 () Int)
(declare-fun x856 () Bool)
(declare-fun x3635 () Bool)
(declare-fun x1926 () Int)
(declare-fun x3153 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x2292 () Bool)
(declare-fun x1988 () Int)
(declare-fun x2336 () Int)
(declare-fun x3682 () x4297)
(declare-fun x295 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x2582 () Int)
(declare-fun x4012 () Bool)
(declare-fun x1022 () Int)
(declare-fun x3209 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x2755 () Int)
(declare-fun x4263 () x4297)
(declare-fun x1526 () Bool)
(declare-fun x4324 () Int)
(declare-fun x3534 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x459 () Int)
(declare-fun x326 () x4297)
(declare-fun x3191 () Bool)
(declare-fun x3560 () x4297)
(declare-fun x2664 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x3427 () x4297)
(declare-fun x3914 () Int)
(declare-fun x852 () Bool)
(declare-fun x2514 () Bool)
(declare-fun x1910 () Int)
(declare-fun x2552 () Bool)
(declare-fun x2412 () Int)
(declare-fun x2966 () Bool)
(declare-fun x4345 () Bool)
(declare-fun x4017 () Bool)
(declare-fun x743 () Int)
(declare-fun x135 () Bool)
(declare-fun x3885 () Bool)
(declare-fun x1801 () Int)
(declare-fun x1333 () Int)
(declare-fun x2398 () Bool)
(declare-fun x1210 () Int)
(declare-fun x2509 () Bool)
(declare-fun x3841 () Bool)
(declare-fun x1186 () Int)
(declare-fun x2830 () Int)
(declare-fun x808 () Bool)
(declare-fun x1410 () Int)
(declare-fun x1464 () Int)
(declare-fun x2616 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x627 () Bool)
(declare-fun x4328 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x414 () Bool)
(declare-fun x2164 () x4297)
(declare-fun x654 () Bool)
(declare-fun x3016 () Int)
(declare-fun x199 () Bool)
(declare-fun x2367 () Bool)
(declare-fun x4007 () Bool)
(declare-fun x2031 () Bool)
(declare-fun x174 () Bool)
(declare-fun x1823 () Int)
(declare-fun x1215 () Int)
(declare-fun x738 () x4297)
(declare-fun x2809 () Int)
(declare-fun x3754 () Int)
(declare-fun x578 () Int)
(declare-fun x1237 () Int)
(declare-fun x3937 () Bool)
(declare-fun x3602 () Int)
(declare-fun x1844 () Int)
(declare-fun x177 () Bool)
(declare-fun x2371 () Int)
(declare-fun x478 () Int)
(declare-fun x1250 () Bool)
(declare-fun x392 () Bool)
(declare-fun x4188 () Int)
(declare-fun x1800 () Bool)
(declare-fun x3419 () Bool)
(declare-fun x2462 () Int)
(declare-fun x1040 () Int)
(declare-fun x162 () Bool)
(declare-fun x2959 () Int)
(declare-fun x2187 () Int)
(declare-fun x4078 () Int)
(declare-fun x1783 () Int)
(declare-fun x2564 () Bool)
(declare-fun x3382 () Int)
(declare-fun x2583 () Bool)
(declare-fun x3485 () Bool)
(declare-fun x85 () Int)
(declare-fun x4360 () Int)
(declare-fun x3786 () Bool)
(declare-fun x3439 () x4297)
(declare-fun x3696 () Bool)
(declare-fun x3256 () Bool)
(declare-fun x3021 () Bool)
(declare-fun x2214 () Int)
(declare-fun x2461 () Int)
(declare-fun x2988 () x4297)
(declare-fun x3891 () Int)
(declare-fun x1508 () Int)
(declare-fun x1175 () Bool)
(declare-fun x961 () Bool)
(declare-fun x3083 () Bool)
(declare-fun x3939 () Bool)
(declare-fun x2095 () Int)
(declare-fun x353 () Int)
(declare-fun x175 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x3440 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x612 () Int)
(declare-fun x1572 () Bool)
(declare-fun x833 () Bool)
(declare-fun x1582 () Int)
(declare-fun x1385 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x1584 () Int)
(declare-fun x1308 () x4297)
(declare-fun x999 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x3592 () Int)
(declare-fun x2888 () Bool)
(declare-fun x556 () Bool)
(declare-fun x3105 () x4297)
(declare-fun x1643 () Bool)
(declare-fun x1051 () Int)
(declare-fun x525 () Bool)
(declare-fun x2524 () Bool)
(declare-fun x3435 () Int)
(declare-fun x1964 () Int)
(declare-fun x3020 () Bool)
(declare-fun x208 () Bool)
(declare-fun x823 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x1744 (x4297) Int)
(declare-fun x3832 () Bool)
(declare-fun x3755 () Bool)
(declare-fun x1339 () x4297)
(declare-fun x537 () Int)
(declare-fun x1999 () Bool)
(declare-fun x2676 (x4297) Int)
(declare-fun x418 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x511 () Bool)
(declare-fun x1185 () Int)
(declare-fun x2892 () Bool)
(declare-fun x1172 () Int)
(declare-fun x546 () Int)
(declare-fun x3398 () Bool)
(declare-fun x2196 () Bool)
(declare-fun x1057 () Int)
(declare-fun x4368 () Int)
(declare-fun x4071 () Int)
(declare-fun x252 (x4297) Int)
(declare-fun x1110 () Bool)
(declare-fun x902 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x4110 () Bool)
(declare-fun x4060 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x1763 () x4297)
(declare-fun x3137 () Bool)
(declare-fun x1917 () Int)
(declare-fun x1565 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x110 () Int)
(declare-fun x4254 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x3825 () Bool)
(declare-fun x1303 () x4297)
(declare-fun x751 () Int)
(declare-fun x603 () Int)
(declare-fun x3904 () Bool)
(declare-fun x1583 () Int)
(declare-fun x2861 () x4297)
(declare-fun x1878 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x843 () Bool)
(declare-fun x914 () Int)
(declare-fun x1427 () Bool)
(declare-fun x710 () Int)
(declare-fun x677 () Bool)
(declare-fun x2020 () Int)
(declare-fun x2074 () Int)
(declare-fun x3129 () Bool)
(declare-fun x3558 () Bool)
(declare-fun x974 () Bool)
(declare-fun x64 () Int)
(declare-fun x307 () Bool)
(declare-fun x1491 () x4297)
(declare-fun x1397 () Int)
(declare-fun x1933 () Int)
(declare-fun x1787 () Int)
(declare-fun x98 () Bool)
(declare-fun x1047 () Int)
(declare-fun x3640 () Bool)
(declare-fun x1218 () Int)
(declare-fun x1092 () Int)
(declare-fun x799 () x4297)
(declare-fun x2506 () Bool)
(declare-fun x1795 () Int)
(declare-fun x1273 () Bool)
(declare-fun x2648 () Int)
(declare-fun x3827 () Int)
(declare-fun x3554 () Int)
(declare-fun x2561 () x4297)
(declare-fun x926 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x1271 () Int)
(declare-fun x2940 () Bool)
(declare-fun x685 () Int)
(declare-fun x1774 () Bool)
(declare-fun x2605 () Int)
(declare-fun x3147 () Bool)
(declare-fun x4329 () Bool)
(declare-fun x1311 () Int)
(declare-fun x2115 () Bool)
(declare-fun x3447 () Bool)
(declare-fun x3644 () Int)
(declare-fun x4165 () Int)
(declare-fun x2224 () Int)
(declare-fun x3847 () Int)
(declare-fun x549 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x2658 (x4297) Int)
(declare-fun x1727 () Int)
(declare-fun x4156 () Bool)
(declare-fun x3893 () Bool)
(declare-fun x1241 () Int)
(declare-fun x2592 () Bool)
(declare-fun x4183 () Bool)
(declare-fun x217 () Bool)
(declare-fun x3535 () Int)
(declare-fun x3700 () Bool)
(declare-fun x2832 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x3407 () x4297)
(declare-fun x2225 () Bool)
(declare-fun x2296 () Int)
(declare-fun x872 () x4297)
(declare-fun x1420 () Int)
(declare-fun x650 () Bool)
(declare-fun x3626 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x1543 () Int)
(declare-fun x4205 () Int)
(declare-fun x3992 () Int)
(declare-fun x2717 () Bool)
(declare-fun x2163 () Bool)
(declare-fun x3618 () Bool)
(declare-fun x2935 () Bool)
(declare-fun x133 () Int)
(declare-fun x3790 () Int)
(declare-fun x2435 () Int)
(declare-fun x3184 () Bool)
(declare-fun x321 () Int)
(declare-fun x3676 () Bool)
(declare-fun x3876 () Int)
(declare-fun x227 () Bool)
(declare-fun x855 () Bool)
(declare-fun x3377 () x4297)
(declare-fun x66 () Bool)
(declare-fun x820 () Int)
(declare-fun x470 () Int)
(declare-fun x2937 () Int)
(declare-fun x1915 () Bool)
(declare-fun x4279 () Int)
(declare-fun x1689 () Int)
(declare-fun x3117 () Int)
(declare-fun x1788 () Bool)
(declare-fun x4122 () Int)
(declare-fun x1733 () Bool)
(declare-fun x2822 () Int)
(declare-fun x4364 () Int)
(declare-fun x1108 () Bool)
(declare-fun x913 () Int)
(declare-fun x4357 () Int)
(declare-fun x377 () x4297)
(declare-fun x4120 () Bool)
(declare-fun x3259 () x4297)
(declare-fun x87 () Bool)
(declare-fun x2899 () x4297)
(declare-fun x2257 () Int)
(declare-fun x2102 () Bool)
(declare-fun x1827 () Int)
(declare-fun x231 () Bool)
(declare-fun x4070 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x450 () Int)
(declare-fun x2114 () x4297)
(declare-fun x2733 () Bool)
(declare-fun x509 () Bool)
(declare-fun x99 () x4297)
(declare-fun x1305 () Int)
(declare-fun x1843 () Int)
(declare-fun x3860 () Bool)
(declare-fun x3081 () Bool)
(declare-fun x2602 () Bool)
(declare-fun x3220 () Int)
(declare-fun x1321 () Int)
(declare-fun x744 () Int)
(declare-fun x3061 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x2732 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x4346 () Int)
(declare-fun x2088 () x4297)
(declare-fun x1483 () Bool)
(declare-fun x4276 () Bool)
(declare-fun x2837 () Bool)
(declare-fun x906 () Int)
(declare-fun x4341 () Int)
(declare-fun x1036 () Int)
(declare-fun x2096 () Bool)
(declare-fun x3501 () Bool)
(declare-fun x3217 () x4297)
(declare-fun x785 () Bool)
(declare-fun x696 () Int)
(declare-fun x2905 () x4297)
(declare-fun x1958 () Bool)
(declare-fun x1898 () Int)
(declare-fun x3126 () Int)
(declare-fun x4115 () Bool)
(declare-fun x2639 () Int)
(declare-fun x770 () x4297)
(declare-fun x4298 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x812 () Int)
(declare-fun x3667 () Bool)
(declare-fun x767 () Bool)
(declare-fun x4016 () Int)
(declare-fun x2518 () x4297)
(declare-fun x3945 () Bool)
(declare-fun x694 () x4297)
(declare-fun x1961 () Bool)
(declare-fun x2456 () Int)
(declare-fun x3624 () x4297)
(declare-fun x1213 () Int)
(declare-fun x973 () Int)
(declare-fun x880 () x4297)
(declare-fun x3545 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x726 (Int) Int)
(declare-fun x4293 () Int)
(declare-fun x857 () Int)
(declare-fun x1446 () Int)
(declare-fun x630 () Int)
(declare-fun x1456 () Int)
(declare-fun x4226 () Bool)
(declare-fun x959 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x1721 () Int)
(declare-fun x3164 () Bool)
(declare-fun x954 () Int)
(declare-fun x2056 () Bool)
(declare-fun x968 () Int)
(declare-fun x3600 () Bool)
(declare-fun x3719 () Int)
(declare-fun x3722 () Int)
(declare-fun x1166 () Int)
(declare-fun x1928 () Int)
(declare-fun x3484 () Int)
(declare-fun x465 () Bool)
(declare-fun x467 (Int) Int)
(declare-fun x68 () Bool)
(declare-fun x3183 () Int)
(declare-fun x255 () Bool)
(declare-fun x2595 () Int)
(declare-fun x1541 () Int)
(declare-fun x550 () x4297)
(declare-fun x3176 () Bool)
(declare-fun x871 () Bool)
(declare-fun x375 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x393 () Bool)
(declare-fun x3422 () Bool)
(declare-fun x1450 () Int)
(declare-fun x3118 () Int)
(declare-fun x2963 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x4062 () Bool)
(declare-fun x3817 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x4220 () Bool)
(declare-fun x3103 () Int)
(declare-fun x4218 () Int)
(declare-fun x319 () Int)
(declare-fun x44 () Bool)
(declare-fun x3432 () Int)
(declare-fun x811 () Bool)
(declare-fun x2488 () Bool)
(declare-fun x2375 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x3270 () x4297)
(declare-fun x1095 () Bool)
(declare-fun x306 () Bool)
(declare-fun x2357 () Bool)
(declare-fun x1228 () x4297)
(declare-fun x3045 () Bool)
(declare-fun x2330 () Int)
(declare-fun x1500 () Int)
(declare-fun x3066 () Bool)
(declare-fun x320 () Int)
(declare-fun x2453 () Int)
(declare-fun x3881 () Int)
(declare-fun x3367 () Int)
(declare-fun x1676 () Int)
(declare-fun x2974 () Int)
(declare-fun x2593 () Bool)
(declare-fun x3108 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x4315 () Bool)
(declare-fun x72 () Int)
(declare-fun x2694 () Bool)
(declare-fun x3913 () Bool)
(declare-fun x1294 () Int)
(declare-fun x2558 () Bool)
(declare-fun x3074 () Int)
(declare-fun x1806 () Bool)
(declare-fun x2613 () Int)
(declare-fun x2191 () Bool)
(declare-fun x333 () Bool)
(declare-fun x3612 () Bool)
(declare-fun x643 () Int)
(declare-fun x3370 () Bool)
(declare-fun x55 () Bool)
(declare-fun x919 () Bool)
(declare-fun x4240 () Int)
(declare-fun x2075 () Int)
(declare-fun x635 () Bool)
(declare-fun x3537 () Bool)
(declare-fun x243 () Bool)
(declare-fun x620 () Bool)
(declare-fun x3822 () Bool)
(define-fun x4245 ((x4297 x4297) (x1144 Int)) x4297 (ite ((_ is x3148) x4297) (x3148 (x1334 x4297) (+ (x460 x4297) x1144)) (ite ((_ is x1460) x4297) (x1460 (x4094 x4297) (x2235 x4297) (+ (x4185 x4297) x1144)) (x2486 (+ x1144 (x123 x4297))))))
(define-fun x203 ((x2103 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103) (>= x2103 0)) x2103 (- x2103 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3057 ((x2103 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2103) (> 0 x2103)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2103) x2103))
(define-fun x1417 ((x3008 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3008) (>= x3008 0)))
(define-fun x1019 ((x3008 Int)) Bool (and (= (x3278 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3008) x3008) (= x3008 (x3278 x3008 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x4374 ((x3008 Int)) Bool (and (= (x3278 0 x3008) 0) (= 0 (x3278 x3008 0))))
(define-fun x3971 ((x3008 Int)) Bool (= (x3278 x3008 x3008) x3008))
(define-fun x1124 ((x3008 Int)) Bool (and (x3971 x3008) (x1019 x3008) (x4374 x3008)))
(define-fun x2242 ((x3008 Int) (x3163 Int)) Bool (= (x3278 x3163 x3008) (x3278 x3008 x3163)))
(define-fun x1919 ((x3008 Int) (x3163 Int)) Bool (and (>= (x3278 x3008 x3163) 0) (=> (>= x3163 0) (>= x3163 (x3278 x3008 x3163))) (=> (<= 0 x3008) (>= x3008 (x3278 x3008 x3163)))))
(define-fun x2812 ((x3008 Int) (x3163 Int)) Bool (and (x2242 x3008 x3163) (x1919 x3008 x3163)))
(define-fun x2005 ((x3008 Int)) Bool (= (mod x3008 1461501637330902918203684832716283019655932542976) (x3278 x3008 1461501637330902918203684832716283019655932542975)))
(define-fun x1798 ((x3008 Int)) Bool (and (x2812 x3008 1461501637330902918203684832716283019655932542975) (x2005 x3008)))
(define-fun x1217 ((x3008 Int)) Bool (= (mod x3008 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x3008 32) (x3278 x3008 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x2452 ((x3008 Int)) Bool (and (x2812 x3008 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1217 x3008)))
(define-fun x2627 ((x10 Int)) Int (ite (= x10 128) 76402721711080721455099699717775724453355902399574518144543212547937138638848 (x3659 x10)))
(define-fun x4133 ((x10 Int)) Int (ite (= x10 132) x3572 (x2627 x10)))
(define-fun x3663 ((x10 Int)) Int (ite (= 128 x10) x475 (x4133 x10)))
(define-fun x4172 ((x10 Int)) Int (ite (= x10 x2679) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x3663 x10)))
(define-fun x2316 ((x10 Int)) Int (ite (= x10 x4107) x878 (x4172 x10)))
(define-fun x1730 ((x10 Int)) Int (ite (= x10 x2679) x4122 (x2316 x10)))
(define-fun x621 ((x10 Int)) Int (ite (= x10 x2679) x766 (x2316 x10)))
(define-fun x1085 ((x10 Int)) Int (ite (= x2679 x10) x2557 (x2316 x10)))
(define-fun x1244 ((x10 Int)) Int (ite (= x10 x2679) x4 (x2316 x10)))
(define-fun x276 ((x10 Int)) Int (ite (= x10 x2679) x455 (x2316 x10)))
(define-fun x2939 ((x10 Int)) Int (ite (= x10 x2679) x1331 (x2316 x10)))
(define-fun x3988 ((x10 Int)) Int (ite (= x10 x2679) x3263 (x2316 x10)))
(define-fun x1781 ((x10 Int)) Int (ite x3833 (ite x874 (x2316 x10) (x1730 x10)) (ite x1651 (ite x1164 (x2316 x10) (x621 x10)) (ite x788 (ite x2537 (x2316 x10) (x1085 x10)) (ite x2042 (ite x2426 (x2316 x10) (x1244 x10)) (ite x1167 (ite x2277 (x2316 x10) (x276 x10)) (ite x262 (ite x465 (x2316 x10) (x2939 x10)) (ite x1335 (x2316 x10) (x3988 x10)))))))))
(define-fun x3874 ((x10 Int)) Int (ite (= x636 x10) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x1781 x10)))
(define-fun x3750 ((x10 Int)) Int (ite (= x3809 x10) x3577 (x3874 x10)))
(define-fun x948 ((x10 Int)) Int (ite (= x10 x636) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x3750 x10)))
(define-fun x1180 ((x10 Int)) Int (ite (= x1254 x10) x845 (x948 x10)))
(define-fun x1817 ((x10 Int)) Int (ite (= x10 x2294) 0 (x1180 x10)))
(define-fun x540 ((x10 x4297)) Int (ite (= x4263 x10) 0 (x3627 x10)))
(define-fun x2685 ((x10 Int)) Int (ite (= x10 0) 1 (x1556 x10)))
(define-fun x2946 ((x10 Int)) Int (ite (= x10 x636) 1 (x1817 x10)))
(define-fun x3001 ((x10 x4297)) Int (ite (= x3796 x10) 0 (x640 x10)))
(define-fun x900 ((x10 Int)) Int (ite (= x10 0) 1 (x1556 x10)))
(define-fun x1614 ((x10 Int)) Int (ite (= x10 x636) 1 (x1817 x10)))
(define-fun x1629 ((x10 x4297)) Int (ite (= x4069 x10) 0 (x4103 x10)))
(define-fun x1020 ((x10 Int)) Int (ite (= x10 0) 1 (x1556 x10)))
(define-fun x2538 ((x10 Int)) Int (ite (= x10 x636) 1 (x1817 x10)))
(define-fun x1506 ((x10 x4297)) Int (ite (= x10 x3969) 0 (x3542 x10)))
(define-fun x2757 ((x10 Int)) Int (ite (= x10 0) 1 (x1556 x10)))
(define-fun x3305 ((x10 Int)) Int (ite (= x10 x636) 1 (x1817 x10)))
(define-fun x3912 ((x10 x4297)) Int (ite (= x10 x598) 0 (x2676 x10)))
(define-fun x1493 ((x10 Int)) Int (ite (= x10 0) 1 (x1556 x10)))
(define-fun x4284 ((x10 Int)) Int (ite (= x636 x10) 1 (x1817 x10)))
(define-fun x4139 ((x10 x4297)) Int (ite (= x10 x504) 0 (x3782 x10)))
(define-fun x3401 ((x10 Int)) Int (ite (= x10 0) 1 (x1556 x10)))
(define-fun x2751 ((x10 Int)) Int (ite (= x10 x636) 1 (x1817 x10)))
(define-fun x408 ((x10 x4297)) Int (ite (= x3259 x10) 0 (x1744 x10)))
(define-fun x1115 ((x10 Int)) Int (ite (= x10 0) 1 (x1556 x10)))
(define-fun x1380 ((x10 Int)) Int (ite (= x10 x636) 1 (x1817 x10)))
(define-fun x2086 ((x10 x4297)) Int (ite (= x10 x1303) x3725 (x4180 x10)))
(define-fun x3392 ((x10 Int)) Int (ite x392 (ite x4325 (x1817 x10) (x2946 x10)) (ite x909 (ite x890 (x1817 x10) (x1614 x10)) (ite x3431 (ite x496 (x1817 x10) (x2538 x10)) (ite x3102 (ite x2507 (x1817 x10) (x3305 x10)) (ite x1475 (ite x481 (x1817 x10) (x4284 x10)) (ite x1082 (ite x3698 (x1817 x10) (x2751 x10)) (ite x330 (x1817 x10) (x1380 x10)))))))))
(define-fun x1094 ((x10 Int)) Int (ite (= x4299 x10) 85927964219764727760667161919810921830953265369826564066086284937368273158144 (x3392 x10)))
(define-fun x213 ((x10 Int)) Int (ite (= x165 x10) x1242 (x1094 x10)))
(define-fun x2665 ((x10 Int)) Int (ite (= x10 x4299) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x213 x10)))
(define-fun x1722 ((x10 Int)) Int (ite (= x1047 x10) x1266 (x2665 x10)))
(define-fun x3539 ((x10 Int)) Int (ite (= x1436 x10) 0 (x1722 x10)))
(define-fun x4306 ((x10 x4297)) Int (ite x392 (ite x4325 (x3627 x10) (x540 x10)) (x3627 x10)))
(define-fun x3651 ((x10 x4297)) Int (ite (= x2518 x10) 0 (x4306 x10)))
(define-fun x305 ((x10 Int)) Int (ite (= 0 x10) 1 (x2729 x10)))
(define-fun x1802 ((x10 Int)) Int (ite (= x4299 x10) 1 (x3539 x10)))
(define-fun x3384 ((x10 x4297)) Int (ite x392 (x640 x10) (ite x909 (ite x890 (x640 x10) (x3001 x10)) (x640 x10))))
(define-fun x3873 ((x10 x4297)) Int (ite (= x2072 x10) 0 (x3384 x10)))
(define-fun x795 ((x10 Int)) Int (ite (= x10 0) 1 (x2729 x10)))
(define-fun x3178 ((x10 Int)) Int (ite (= x4299 x10) 1 (x3539 x10)))
(define-fun x130 ((x10 x4297)) Int (ite x392 (x4103 x10) (ite x909 (x4103 x10) (ite x3431 (ite x496 (x4103 x10) (x1629 x10)) (x4103 x10)))))
(define-fun x3962 ((x10 x4297)) Int (ite (= x1968 x10) 0 (x130 x10)))
(define-fun x3161 ((x10 Int)) Int (ite (= 0 x10) 1 (x2729 x10)))
(define-fun x3672 ((x10 Int)) Int (ite (= x10 x4299) 1 (x3539 x10)))
(define-fun x4195 ((x10 x4297)) Int (ite x392 (x3542 x10) (ite x909 (x3542 x10) (ite x3431 (x3542 x10) (ite x3102 (ite x2507 (x3542 x10) (x1506 x10)) (x3542 x10))))))
(define-fun x1205 ((x10 x4297)) Int (ite (= x10 x4170) 0 (x4195 x10)))
(define-fun x1536 ((x10 Int)) Int (ite (= x10 0) 1 (x2729 x10)))
(define-fun x1409 ((x10 Int)) Int (ite (= x10 x4299) 1 (x3539 x10)))
(define-fun x616 ((x10 x4297)) Int (ite x392 (x2676 x10) (ite x909 (x2676 x10) (ite x3431 (x2676 x10) (ite x3102 (x2676 x10) (ite x1475 (ite x481 (x2676 x10) (x3912 x10)) (x2676 x10)))))))
(define-fun x669 ((x10 x4297)) Int (ite (= x10 x1201) 0 (x616 x10)))
(define-fun x2139 ((x10 Int)) Int (ite (= x10 0) 1 (x2729 x10)))
(define-fun x3968 ((x10 Int)) Int (ite (= x4299 x10) 1 (x3539 x10)))
(define-fun x3926 ((x10 x4297)) Int (ite x392 (x3782 x10) (ite x909 (x3782 x10) (ite x3431 (x3782 x10) (ite x3102 (x3782 x10) (ite x1475 (x3782 x10) (ite x1082 (ite x3698 (x3782 x10) (x4139 x10)) (x3782 x10))))))))
(define-fun x1267 ((x10 x4297)) Int (ite (= x2014 x10) 0 (x3926 x10)))
(define-fun x78 ((x10 Int)) Int (ite (= x10 0) 1 (x2729 x10)))
(define-fun x1327 ((x10 Int)) Int (ite (= x10 x4299) 1 (x3539 x10)))
(define-fun x4305 ((x10 x4297)) Int (ite x392 (x1744 x10) (ite x909 (x1744 x10) (ite x3431 (x1744 x10) (ite x3102 (x1744 x10) (ite x1475 (x1744 x10) (ite x1082 (x1744 x10) (ite x330 (x1744 x10) (x408 x10)))))))))
(define-fun x2767 ((x10 x4297)) Int (ite (= x10 x3955) 0 (x4305 x10)))
(define-fun x2651 ((x10 Int)) Int (ite (= x10 0) 1 (x2729 x10)))
(define-fun x2402 ((x10 Int)) Int (ite (= x10 x4299) 1 (x3539 x10)))
(define-fun x2002 ((x10 Int)) Int (ite x4315 (ite x715 (x3539 x10) (x1802 x10)) (ite x3652 (ite x446 (x3539 x10) (x3178 x10)) (ite x187 (ite x177 (x3539 x10) (x3672 x10)) (ite x3776 (ite x2722 (x3539 x10) (x1409 x10)) (ite x3234 (ite x1260 (x3539 x10) (x3968 x10)) (ite x2987 (ite x3671 (x3539 x10) (x1327 x10)) (ite x3851 (x3539 x10) (x2402 x10)))))))))
(define-fun x2756 ((x10 Int)) Int (ite (= x829 x10) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x2002 x10)))
(define-fun x191 ((x10 Int)) Int (ite (= x10 x341) x2600 (x2756 x10)))
(define-fun x3520 ((x10 Int)) Int (ite (= x10 x3820) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x191 x10)))
(define-fun x3042 ((x10 x4297)) Int (ite x4315 (ite x715 (x4306 x10) (x3651 x10)) (x4306 x10)))
(define-fun x2418 ((x10 x4297)) Int (ite (= x10 x105) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3042 x10)))
(define-fun x3257 ((x10 Int)) Int (ite (= 0 x10) 1 (x2352 x10)))
(define-fun x2343 ((x10 Int)) Int (ite (= x10 x829) 1 (x3520 x10)))
(define-fun x2111 ((x10 x4297)) Int (ite x4315 (x3384 x10) (ite x3652 (ite x446 (x3384 x10) (x3873 x10)) (x3384 x10))))
(define-fun x2824 ((x10 x4297)) Int (ite (= x1219 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2111 x10)))
(define-fun x3784 ((x10 Int)) Int (ite (= x10 0) 1 (x2352 x10)))
(define-fun x4227 ((x10 Int)) Int (ite (= x829 x10) 1 (x3520 x10)))
(define-fun x3899 ((x10 x4297)) Int (ite x4315 (x130 x10) (ite x3652 (x130 x10) (ite x187 (ite x177 (x130 x10) (x3962 x10)) (x130 x10)))))
(define-fun x979 ((x10 x4297)) Int (ite (= x10 x4264) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3899 x10)))
(define-fun x784 ((x10 Int)) Int (ite (= x10 0) 1 (x2352 x10)))
(define-fun x3496 ((x10 Int)) Int (ite (= x829 x10) 1 (x3520 x10)))
(define-fun x1212 ((x10 x4297)) Int (ite x4315 (x4195 x10) (ite x3652 (x4195 x10) (ite x187 (x4195 x10) (ite x3776 (ite x2722 (x4195 x10) (x1205 x10)) (x4195 x10))))))
(define-fun x2943 ((x10 x4297)) Int (ite (= x2861 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1212 x10)))
(define-fun x2590 ((x10 Int)) Int (ite (= 0 x10) 1 (x2352 x10)))
(define-fun x4029 ((x10 Int)) Int (ite (= x829 x10) 1 (x3520 x10)))
(define-fun x804 ((x10 x4297)) Int (ite x4315 (x616 x10) (ite x3652 (x616 x10) (ite x187 (x616 x10) (ite x3776 (x616 x10) (ite x3234 (ite x1260 (x616 x10) (x669 x10)) (x616 x10)))))))
(define-fun x3077 ((x10 x4297)) Int (ite (= x1097 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x804 x10)))
(define-fun x1159 ((x10 Int)) Int (ite (= 0 x10) 1 (x2352 x10)))
(define-fun x1538 ((x10 Int)) Int (ite (= x829 x10) 1 (x3520 x10)))
(define-fun x2501 ((x10 x4297)) Int (ite x4315 (x3926 x10) (ite x3652 (x3926 x10) (ite x187 (x3926 x10) (ite x3776 (x3926 x10) (ite x3234 (x3926 x10) (ite x2987 (ite x3671 (x3926 x10) (x1267 x10)) (x3926 x10))))))))
(define-fun x1357 ((x10 x4297)) Int (ite (= x3214 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2501 x10)))
(define-fun x2204 ((x10 Int)) Int (ite (= 0 x10) 1 (x2352 x10)))
(define-fun x2474 ((x10 Int)) Int (ite (= x10 x829) 1 (x3520 x10)))
(define-fun x591 ((x10 x4297)) Int (ite x4315 (x4305 x10) (ite x3652 (x4305 x10) (ite x187 (x4305 x10) (ite x3776 (x4305 x10) (ite x3234 (x4305 x10) (ite x2987 (x4305 x10) (ite x3851 (x4305 x10) (x2767 x10)))))))))
(define-fun x1239 ((x10 x4297)) Int (ite (= x3439 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x591 x10)))
(define-fun x2906 ((x10 Int)) Int (ite (= 0 x10) 1 (x2352 x10)))
(define-fun x2629 ((x10 Int)) Int (ite (= x10 x829) 1 (x3520 x10)))
(define-fun x2919 ((x10 Int)) Int (ite x1384 (ite x2624 (x3520 x10) (x2343 x10)) (ite x1434 (ite x2093 (x3520 x10) (x4227 x10)) (ite x113 (ite x1024 (x3520 x10) (x3496 x10)) (ite x2423 (ite x96 (x3520 x10) (x4029 x10)) (ite x2656 (ite x889 (x3520 x10) (x1538 x10)) (ite x3149 (ite x1660 (x3520 x10) (x2474 x10)) (ite x3302 (x3520 x10) (x2629 x10)))))))))
(define-fun x334 ((x10 Int)) Int (ite (= x10 x3928) 82641394424300342035733052706735002277943222088490025348945809093694544936960 (x2919 x10)))
(define-fun x163 ((x10 Int)) Int (ite (= x10 x4168) x3577 (x334 x10)))
(define-fun x287 ((x10 x4297)) Int (ite (= x10 x2114) x2371 (x1630 x10)))
(define-fun x1284 ((x10 x4297)) Int (ite (= x10 x675) x2218 (x287 x10)))
(define-fun x4184 ((x10 x4297)) Int (ite x1719 (x1284 x10) (ite x722 (x287 x10) (ite x1459 (x287 x10) (ite x2705 (x287 x10) (ite x3442 (x1284 x10) (x287 x10)))))))
(define-fun x1833 ((x10 x4297)) Int (ite (= x377 x10) x1894 (x1284 x10)))
(define-fun x1756 ((x10 x4297)) Int (ite x1647 (ite x3202 (x4184 x10) (x1833 x10)) (x287 x10)))
(define-fun x1645 ((x10 x4297)) Int (ite x2169 (x1756 x10) (ite x2037 (x1630 x10) (ite x3285 (x1630 x10) (ite x1471 (x1630 x10) (ite x144 (x1630 x10) (ite x3590 (x1630 x10) (ite x1712 (x1630 x10) (x1756 x10)))))))))
(define-fun x1888 ((x10 x4297)) Int (ite (= x1909 x10) x250 (x1630 x10)))
(define-fun x3290 ((x10 x4297)) Int (ite x1735 (x1888 x10) (ite x3241 (x1630 x10) (ite x50 (x1630 x10) (ite x147 (x1630 x10) (ite x4202 (x1888 x10) (x1630 x10)))))))
(define-fun x1576 ((x10 x4297)) Int (ite (= x10 x225) x1486 (x1888 x10)))
(define-fun x2572 ((x10 x4297)) Int (ite x2488 (ite x3878 (x3290 x10) (x1576 x10)) (x1630 x10)))
(define-fun x37 ((x10 x4297)) Int (ite x1432 (x2572 x10) (ite x2609 (x1630 x10) (ite x3123 (x1630 x10) (ite x3748 (x1630 x10) (ite x3917 (x1630 x10) (ite x1755 (x1630 x10) (ite x3043 (x1630 x10) (x2572 x10)))))))))
(define-fun x233 ((x10 x4297)) Int (ite (= x10 x3217) x4191 (x1630 x10)))
(define-fun x1736 ((x10 x4297)) Int (ite (= x3087 x10) x1285 (x233 x10)))
(define-fun x2571 ((x10 x4297)) Int (ite x3598 (x1736 x10) (ite x2439 (x233 x10) (ite x1800 (x233 x10) (ite x80 (x233 x10) (ite x3610 (x1736 x10) (x233 x10)))))))
(define-fun x3670 ((x10 x4297)) Int (ite (= x10 x3028) x3766 (x1736 x10)))
(define-fun x4136 ((x10 x4297)) Int (ite x1268 (ite x3122 (x2571 x10) (x3670 x10)) (x233 x10)))
(define-fun x1474 ((x10 x4297)) Int (ite x2256 (x4136 x10) (ite x3296 (x1630 x10) (ite x4033 (x1630 x10) (ite x2920 (x1630 x10) (ite x2334 (x1630 x10) (ite x981 (x1630 x10) (ite x3810 (x1630 x10) (x4136 x10)))))))))
(define-fun x3593 ((x10 x4297)) Int (ite (= x3643 x10) x1772 (x1630 x10)))
(define-fun x3476 ((x10 x4297)) Int (ite x2282 (x3593 x10) (ite x328 (x1630 x10) (ite x3549 (x1630 x10) (ite x2936 (x1630 x10) (ite x957 (x3593 x10) (x1630 x10)))))))
(define-fun x221 ((x10 x4297)) Int (ite (= x10 x2306) x2623 (x3593 x10)))
(define-fun x2526 ((x10 x4297)) Int (ite x3463 (ite x902 (x3476 x10) (x221 x10)) (x1630 x10)))
(define-fun x1402 ((x10 x4297)) Int (ite x577 (x2526 x10) (ite x1715 (x1630 x10) (ite x1776 (x1630 x10) (ite x1956 (x1630 x10) (ite x226 (x1630 x10) (ite x2144 (x1630 x10) (ite x741 (x1630 x10) (x2526 x10)))))))))
(define-fun x2062 ((x10 x4297)) Int (ite x1999 (ite x47 (x1474 x10) (x4136 x10)) (ite x2523 (ite x2115 (x1402 x10) (x2526 x10)) (x1630 x10))))
(define-fun x2138 ((x10 x4297)) Int (ite (= x10 x2211) x2105 (x2062 x10)))
(define-fun x2266 ((x10 x4297)) Int (ite x1741 (x2138 x10) (ite x2205 (x2062 x10) (ite x137 (x2062 x10) (ite x1176 (x2062 x10) (ite x3497 (x2138 x10) (x2062 x10)))))))
(define-fun x3330 ((x10 x4297)) Int (ite (= x3686 x10) x3227 (x2138 x10)))
(define-fun x1621 ((x10 x4297)) Int (ite x3739 (ite x942 (x2266 x10) (x3330 x10)) (x2062 x10)))
(define-fun x4256 ((x10 x4297)) Int (ite x67 (x1630 x10) (ite x2891 (x1630 x10) (ite x3977 (x1621 x10) (ite x547 (x1621 x10) (ite x3531 (x1621 x10) (ite x2961 (x1621 x10) (ite x4096 (x2062 x10) (x1630 x10)))))))))
(define-fun x4087 ((x10 x4297)) Int (ite x2396 (ite x3206 (x1645 x10) (x1756 x10)) (ite x1819 (ite x4082 (x37 x10) (x2572 x10)) (ite x1514 (x4256 x10) (x1621 x10)))))
(define-fun x1289 ((x10 x4297)) Int (ite (= x10 x2113) x4361 (x4087 x10)))
(define-fun x1836 ((x10 Int)) Int (ite (= x10 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1758 x10)))
(define-fun x2990 ((x10 Int)) Int (ite (= 132 x10) x878 (x1836 x10)))
(define-fun x2130 ((x10 Int)) Int (ite (= 164 x10) x4186 (x2990 x10)))
(define-fun x1220 ((x10 Int)) Int (ite (= x10 196) x603 (x2130 x10)))
(define-fun x39 ((x10 x4297)) Int (ite (= x10 x2030) x494 (x1289 x10)))
(define-fun x2748 ((x10 x4297)) Int (ite x1384 (ite x2624 (x3042 x10) (x2418 x10)) (x3042 x10)))
(define-fun x3688 ((x10 Int)) Int (ite (= 0 x10) 1 (x1280 x10)))
(define-fun x1004 ((x10 x4297)) Int (ite (= x2681 x10) x2691 (x188 x10)))
(define-fun x1642 ((x10 x4297)) Int (ite x840 (x1004 x10) (ite x4272 (x188 x10) (ite x3086 (x188 x10) (ite x3095 (x188 x10) (ite x1015 (x1004 x10) (x188 x10)))))))
(define-fun x1750 ((x10 x4297)) Int (ite (= x10 x3427) x1294 (x1004 x10)))
(define-fun x3491 ((x10 x4297)) Int (ite x1647 (x188 x10) (ite x2225 (ite x1192 (x1642 x10) (x1750 x10)) (x188 x10))))
(define-fun x1257 ((x10 x4297)) Int (ite x2169 (x3491 x10) (ite x2037 (x188 x10) (ite x3285 (x188 x10) (ite x1471 (x188 x10) (ite x144 (x188 x10) (ite x3590 (x188 x10) (ite x1712 (x188 x10) (x3491 x10)))))))))
(define-fun x1530 ((x10 x4297)) Int (ite (= x2319 x10) x3395 (x188 x10)))
(define-fun x3880 ((x10 x4297)) Int (ite (= x365 x10) x1619 (x1530 x10)))
(define-fun x3197 ((x10 x4297)) Int (ite x1531 (x3880 x10) (ite x530 (x1530 x10) (ite x974 (x1530 x10) (ite x4023 (x1530 x10) (ite x3135 (x3880 x10) (x1530 x10)))))))
(define-fun x2534 ((x10 x4297)) Int (ite (= x283 x10) x1535 (x3880 x10)))
(define-fun x501 ((x10 x4297)) Int (ite x2488 (x1530 x10) (ite x2797 (ite x4095 (x3197 x10) (x2534 x10)) (x1530 x10))))
(define-fun x3383 ((x10 x4297)) Int (ite x1432 (x501 x10) (ite x2609 (x188 x10) (ite x3123 (x188 x10) (ite x3748 (x188 x10) (ite x3917 (x188 x10) (ite x1755 (x188 x10) (ite x3043 (x188 x10) (x501 x10)))))))))
(define-fun x91 ((x10 x4297)) Int (ite (= x3692 x10) x4218 (x188 x10)))
(define-fun x2373 ((x10 x4297)) Int (ite x1009 (x91 x10) (ite x3626 (x188 x10) (ite x3941 (x188 x10) (ite x3053 (x188 x10) (ite x2820 (x91 x10) (x188 x10)))))))
(define-fun x2826 ((x10 x4297)) Int (ite (= x2641 x10) x2902 (x91 x10)))
(define-fun x3703 ((x10 x4297)) Int (ite x1268 (x188 x10) (ite x3143 (ite x2405 (x2373 x10) (x2826 x10)) (x188 x10))))
(define-fun x2696 ((x10 x4297)) Int (ite x2256 (x3703 x10) (ite x3296 (x188 x10) (ite x4033 (x188 x10) (ite x2920 (x188 x10) (ite x2334 (x188 x10) (ite x981 (x188 x10) (ite x3810 (x188 x10) (x3703 x10)))))))))
(define-fun x4242 ((x10 x4297)) Int (ite (= x10 x748) x888 (x188 x10)))
(define-fun x4262 ((x10 x4297)) Int (ite (= x10 x201) x20 (x4242 x10)))
(define-fun x1235 ((x10 x4297)) Int (ite x4179 (x4262 x10) (ite x3660 (x4242 x10) (ite x3841 (x4242 x10) (ite x775 (x4242 x10) (ite x1391 (x4262 x10) (x4242 x10)))))))
(define-fun x3707 ((x10 x4297)) Int (ite (= x10 x3838) x3502 (x4262 x10)))
(define-fun x4363 ((x10 x4297)) Int (ite x3463 (x4242 x10) (ite x3059 (ite x422 (x1235 x10) (x3707 x10)) (x4242 x10))))
(define-fun x31 ((x10 x4297)) Int (ite x577 (x4363 x10) (ite x1715 (x188 x10) (ite x1776 (x188 x10) (ite x1956 (x188 x10) (ite x226 (x188 x10) (ite x2144 (x188 x10) (ite x741 (x188 x10) (x4363 x10)))))))))
(define-fun x4236 ((x10 x4297)) Int (ite x1999 (ite x47 (x2696 x10) (x3703 x10)) (ite x2523 (ite x2115 (x31 x10) (x4363 x10)) (x188 x10))))
(define-fun x3364 ((x10 x4297)) Int (ite (= x10 x1848) x1508 (x4236 x10)))
(define-fun x2761 ((x10 x4297)) Int (ite x1472 (x3364 x10) (ite x2267 (x4236 x10) (ite x1548 (x4236 x10) (ite x3266 (x4236 x10) (ite x303 (x3364 x10) (x4236 x10)))))))
(define-fun x693 ((x10 x4297)) Int (ite (= x10 x1698) x1770 (x3364 x10)))
(define-fun x2903 ((x10 x4297)) Int (ite x3739 (x4236 x10) (ite x1796 (ite x1552 (x2761 x10) (x693 x10)) (x4236 x10))))
(define-fun x4039 ((x10 x4297)) Int (ite x67 (x188 x10) (ite x2891 (x188 x10) (ite x3977 (x2903 x10) (ite x547 (x2903 x10) (ite x3531 (x2903 x10) (ite x2961 (x2903 x10) (ite x4096 (x4236 x10) (x188 x10)))))))))
(define-fun x2505 ((x10 x4297)) Int (ite x2396 (ite x3206 (x1257 x10) (x3491 x10)) (ite x1819 (ite x4082 (x3383 x10) (x501 x10)) (ite x1514 (x4039 x10) (x2903 x10)))))
(define-fun x3311 ((x10 x4297)) Int (ite (= x538 x10) x3679 (x2505 x10)))
(define-fun x2231 ((x10 x4297)) Int (ite (= x2880 x10) x2194 (x3311 x10)))
(define-fun x1496 ((x10 x4297)) Int (ite x1384 (x2111 x10) (ite x1434 (ite x2093 (x2111 x10) (x2824 x10)) (x2111 x10))))
(define-fun x4356 ((x10 Int)) Int (ite (= 0 x10) 1 (x1280 x10)))
(define-fun x3248 ((x10 x4297)) Int (ite (= x3624 x10) x3156 (x1208 x10)))
(define-fun x4352 ((x10 x4297)) Int (ite x2849 (x3248 x10) (ite x1086 (x1208 x10) (ite x684 (x1208 x10) (ite x2770 (x1208 x10) (ite x892 (x3248 x10) (x1208 x10)))))))
(define-fun x2155 ((x10 x4297)) Int (ite (= x2165 x10) x3935 (x3248 x10)))
(define-fun x3797 ((x10 x4297)) Int (ite x1647 (x1208 x10) (ite x2225 (x1208 x10) (ite x1567 (ite x45 (x4352 x10) (x2155 x10)) (x1208 x10)))))
(define-fun x682 ((x10 x4297)) Int (ite x2169 (x3797 x10) (ite x2037 (x1208 x10) (ite x3285 (x1208 x10) (ite x1471 (x1208 x10) (ite x144 (x1208 x10) (ite x3590 (x1208 x10) (ite x1712 (x1208 x10) (x3797 x10)))))))))
(define-fun x648 ((x10 x4297)) Int (ite (= x10 x1816) x2686 (x1208 x10)))
(define-fun x4258 ((x10 x4297)) Int (ite x1931 (x648 x10) (ite x265 (x1208 x10) (ite x3044 (x1208 x10) (ite x3124 (x1208 x10) (ite x985 (x648 x10) (x1208 x10)))))))
(define-fun x4020 ((x10 x4297)) Int (ite (= x10 x3493) x21 (x648 x10)))
(define-fun x1668 ((x10 x4297)) Int (ite x2488 (x1208 x10) (ite x2797 (x1208 x10) (ite x867 (ite x1247 (x4258 x10) (x4020 x10)) (x1208 x10)))))
(define-fun x224 ((x10 x4297)) Int (ite x1432 (x1668 x10) (ite x2609 (x1208 x10) (ite x3123 (x1208 x10) (ite x3748 (x1208 x10) (ite x3917 (x1208 x10) (ite x1755 (x1208 x10) (ite x3043 (x1208 x10) (x1668 x10)))))))))
(define-fun x1656 ((x10 x4297)) Int (ite (= x10 x2410) x2700 (x1208 x10)))
(define-fun x1779 ((x10 x4297)) Int (ite x1697 (x1656 x10) (ite x3127 (x1208 x10) (ite x960 (x1208 x10) (ite x1478 (x1208 x10) (ite x650 (x1656 x10) (x1208 x10)))))))
(define-fun x4137 ((x10 x4297)) Int (ite (= x10 x2863) x3173 (x1656 x10)))
(define-fun x3472 ((x10 x4297)) Int (ite x1268 (x1208 x10) (ite x3143 (x1208 x10) (ite x234 (ite x1691 (x1779 x10) (x4137 x10)) (x1208 x10)))))
(define-fun x1560 ((x10 x4297)) Int (ite x2256 (x3472 x10) (ite x3296 (x1208 x10) (ite x4033 (x1208 x10) (ite x2920 (x1208 x10) (ite x2334 (x1208 x10) (ite x981 (x1208 x10) (ite x3810 (x1208 x10) (x3472 x10)))))))))
(define-fun x2117 ((x10 x4297)) Int (ite (= x949 x10) x2421 (x1208 x10)))
(define-fun x1762 ((x10 x4297)) Int (ite x1989 (x2117 x10) (ite x1347 (x1208 x10) (ite x3825 (x1208 x10) (ite x3523 (x1208 x10) (ite x3281 (x2117 x10) (x1208 x10)))))))
(define-fun x4349 ((x10 x4297)) Int (ite (= x10 x1013) x1050 (x2117 x10)))
(define-fun x86 ((x10 x4297)) Int (ite x3463 (x1208 x10) (ite x3059 (x1208 x10) (ite x1137 (ite x800 (x1762 x10) (x4349 x10)) (x1208 x10)))))
(define-fun x257 ((x10 x4297)) Int (ite x577 (x86 x10) (ite x1715 (x1208 x10) (ite x1776 (x1208 x10) (ite x1956 (x1208 x10) (ite x226 (x1208 x10) (ite x2144 (x1208 x10) (ite x741 (x1208 x10) (x86 x10)))))))))
(define-fun x1707 ((x10 x4297)) Int (ite x1999 (ite x47 (x1560 x10) (x3472 x10)) (ite x2523 (ite x2115 (x257 x10) (x86 x10)) (x1208 x10))))
(define-fun x2228 ((x10 x4297)) Int (ite (= x10 x3228) x841 (x1707 x10)))
(define-fun x4080 ((x10 x4297)) Int (ite x4372 (x2228 x10) (ite x1984 (x1707 x10) (ite x3338 (x1707 x10) (ite x622 (x1707 x10) (ite x1962 (x2228 x10) (x1707 x10)))))))
(define-fun x1941 ((x10 x4297)) Int (ite (= x10 x1807) x272 (x2228 x10)))
(define-fun x297 ((x10 x4297)) Int (ite x3739 (x1707 x10) (ite x1796 (x1707 x10) (ite x3556 (ite x2816 (x4080 x10) (x1941 x10)) (x1707 x10)))))
(define-fun x3389 ((x10 x4297)) Int (ite x67 (x1208 x10) (ite x2891 (x1208 x10) (ite x3977 (x297 x10) (ite x547 (x297 x10) (ite x3531 (x297 x10) (ite x2961 (x297 x10) (ite x4096 (x1707 x10) (x1208 x10)))))))))
(define-fun x118 ((x10 x4297)) Int (ite x2396 (ite x3206 (x682 x10) (x3797 x10)) (ite x1819 (ite x4082 (x224 x10) (x1668 x10)) (ite x1514 (x3389 x10) (x297 x10)))))
(define-fun x3953 ((x10 x4297)) Int (ite (= x10 x799) x678 (x118 x10)))
(define-fun x3465 ((x10 x4297)) Int (ite x1384 (x3899 x10) (ite x1434 (x3899 x10) (ite x113 (ite x1024 (x3899 x10) (x979 x10)) (x3899 x10)))))
(define-fun x695 ((x10 Int)) Int (ite (= x10 0) 1 (x1280 x10)))
(define-fun x2055 ((x10 x4297)) Int (ite (= x10 x4268) x911 (x2951 x10)))
(define-fun x480 ((x10 x4297)) Int (ite x2197 (x2055 x10) (ite x571 (x2951 x10) (ite x4252 (x2951 x10) (ite x3297 (x2951 x10) (ite x4377 (x2055 x10) (x2951 x10)))))))
(define-fun x3388 ((x10 x4297)) Int (ite (= x10 x4340) x2262 (x2055 x10)))
(define-fun x3923 ((x10 x4297)) Int (ite x1647 (x2951 x10) (ite x2225 (x2951 x10) (ite x1567 (x2951 x10) (ite x2248 (ite x48 (x480 x10) (x3388 x10)) (x2951 x10))))))
(define-fun x1203 ((x10 x4297)) Int (ite x2169 (x3923 x10) (ite x2037 (x2951 x10) (ite x3285 (x2951 x10) (ite x1471 (x2951 x10) (ite x144 (x2951 x10) (ite x3590 (x2951 x10) (ite x1712 (x2951 x10) (x3923 x10)))))))))
(define-fun x3130 ((x10 x4297)) Int (ite (= x10 x3576) x822 (x2951 x10)))
(define-fun x2245 ((x10 x4297)) Int (ite x2326 (x3130 x10) (ite x611 (x2951 x10) (ite x164 (x2951 x10) (ite x193 (x2951 x10) (ite x3965 (x3130 x10) (x2951 x10)))))))
(define-fun x1680 ((x10 x4297)) Int (ite (= x3185 x10) x2107 (x3130 x10)))
(define-fun x474 ((x10 x4297)) Int (ite x2488 (x2951 x10) (ite x2797 (x2951 x10) (ite x867 (x2951 x10) (ite x2808 (ite x3792 (x2245 x10) (x1680 x10)) (x2951 x10))))))
(define-fun x1893 ((x10 x4297)) Int (ite x1432 (x474 x10) (ite x2609 (x2951 x10) (ite x3123 (x2951 x10) (ite x3748 (x2951 x10) (ite x3917 (x2951 x10) (ite x1755 (x2951 x10) (ite x3043 (x2951 x10) (x474 x10)))))))))
(define-fun x2447 ((x10 x4297)) Int (ite (= x1491 x10) x427 (x2951 x10)))
(define-fun x3684 ((x10 x4297)) Int (ite x2157 (x2447 x10) (ite x1557 (x2951 x10) (ite x1733 (x2951 x10) (ite x2357 (x2951 x10) (ite x2712 (x2447 x10) (x2951 x10)))))))
(define-fun x3615 ((x10 x4297)) Int (ite (= x1232 x10) x2075 (x2447 x10)))
(define-fun x860 ((x10 x4297)) Int (ite x1268 (x2951 x10) (ite x3143 (x2951 x10) (ite x234 (x2951 x10) (ite x1952 (ite x4201 (x3684 x10) (x3615 x10)) (x2951 x10))))))
(define-fun x2608 ((x10 x4297)) Int (ite x2256 (x860 x10) (ite x3296 (x2951 x10) (ite x4033 (x2951 x10) (ite x2920 (x2951 x10) (ite x2334 (x2951 x10) (ite x981 (x2951 x10) (ite x3810 (x2951 x10) (x860 x10)))))))))
(define-fun x1547 ((x10 x4297)) Int (ite (= x10 x1696) x1231 (x2951 x10)))
(define-fun x1072 ((x10 x4297)) Int (ite x263 (x1547 x10) (ite x3860 (x2951 x10) (ite x514 (x2951 x10) (ite x3336 (x2951 x10) (ite x3212 (x1547 x10) (x2951 x10)))))))
(define-fun x736 ((x10 x4297)) Int (ite (= x10 x1227) x1620 (x1547 x10)))
(define-fun x338 ((x10 x4297)) Int (ite x3463 (x2951 x10) (ite x3059 (x2951 x10) (ite x1137 (x2951 x10) (ite x3745 (ite x2793 (x1072 x10) (x736 x10)) (x2951 x10))))))
(define-fun x3408 ((x10 x4297)) Int (ite x577 (x338 x10) (ite x1715 (x2951 x10) (ite x1776 (x2951 x10) (ite x1956 (x2951 x10) (ite x226 (x2951 x10) (ite x2144 (x2951 x10) (ite x741 (x2951 x10) (x338 x10)))))))))
(define-fun x2345 ((x10 x4297)) Int (ite x1999 (ite x47 (x2608 x10) (x860 x10)) (ite x2523 (ite x2115 (x3408 x10) (x338 x10)) (x2951 x10))))
(define-fun x3307 ((x10 x4297)) Int (ite (= x10 x1339) x644 (x2345 x10)))
(define-fun x2349 ((x10 x4297)) Int (ite x79 (x3307 x10) (ite x1944 (x2345 x10) (ite x2888 (x2345 x10) (ite x1929 (x2345 x10) (ite x2821 (x3307 x10) (x2345 x10)))))))
(define-fun x932 ((x10 x4297)) Int (ite (= x385 x10) x3004 (x3307 x10)))
(define-fun x2215 ((x10 x4297)) Int (ite x3739 (x2345 x10) (ite x1796 (x2345 x10) (ite x3556 (x2345 x10) (ite x149 (ite x3832 (x2349 x10) (x932 x10)) (x2345 x10))))))
(define-fun x383 ((x10 x4297)) Int (ite x67 (x2951 x10) (ite x2891 (x2951 x10) (ite x3977 (x2215 x10) (ite x547 (x2215 x10) (ite x3531 (x2215 x10) (ite x2961 (x2215 x10) (ite x4096 (x2345 x10) (x2951 x10)))))))))
(define-fun x4237 ((x10 x4297)) Int (ite x2396 (ite x3206 (x1203 x10) (x3923 x10)) (ite x1819 (ite x4082 (x1893 x10) (x474 x10)) (ite x1514 (x383 x10) (x2215 x10)))))
(define-fun x2268 ((x10 x4297)) Int (ite (= x2408 x10) x897 (x4237 x10)))
(define-fun x3714 ((x10 x4297)) Int (ite (= x2164 x10) x4058 (x2268 x10)))
(define-fun x3898 ((x10 x4297)) Int (ite x1384 (x1212 x10) (ite x1434 (x1212 x10) (ite x113 (x1212 x10) (ite x2423 (ite x96 (x1212 x10) (x2943 x10)) (x1212 x10))))))
(define-fun x2839 ((x10 Int)) Int (ite (= 0 x10) 1 (x1280 x10)))
(define-fun x4015 ((x10 x4297)) Int (ite (= x10 x3929) x1809 (x1032 x10)))
(define-fun x1777 ((x10 x4297)) Int (ite x2827 (x4015 x10) (ite x3972 (x1032 x10) (ite x2536 (x1032 x10) (ite x2427 (x1032 x10) (ite x864 (x4015 x10) (x1032 x10)))))))
(define-fun x2087 ((x10 x4297)) Int (ite (= x1540 x10) x327 (x4015 x10)))
(define-fun x354 ((x10 x4297)) Int (ite x1647 (x1032 x10) (ite x2225 (x1032 x10) (ite x1567 (x1032 x10) (ite x2248 (x1032 x10) (ite x3842 (ite x301 (x1777 x10) (x2087 x10)) (x1032 x10)))))))
(define-fun x462 ((x10 x4297)) Int (ite x2169 (x354 x10) (ite x2037 (x1032 x10) (ite x3285 (x1032 x10) (ite x1471 (x1032 x10) (ite x144 (x1032 x10) (ite x3590 (x1032 x10) (ite x1712 (x1032 x10) (x354 x10)))))))))
(define-fun x4130 ((x10 x4297)) Int (ite (= x2561 x10) x3578 (x1032 x10)))
(define-fun x2502 ((x10 x4297)) Int (ite x2149 (x4130 x10) (ite x4158 (x1032 x10) (ite x3786 (x1032 x10) (ite x3249 (x1032 x10) (ite x3312 (x4130 x10) (x1032 x10)))))))
(define-fun x3574 ((x10 x4297)) Int (ite (= x3758 x10) x179 (x4130 x10)))
(define-fun x3216 ((x10 x4297)) Int (ite x2488 (x1032 x10) (ite x2797 (x1032 x10) (ite x867 (x1032 x10) (ite x2808 (x1032 x10) (ite x181 (ite x1515 (x2502 x10) (x3574 x10)) (x1032 x10)))))))
(define-fun x154 ((x10 x4297)) Int (ite x1432 (x3216 x10) (ite x2609 (x1032 x10) (ite x3123 (x1032 x10) (ite x3748 (x1032 x10) (ite x3917 (x1032 x10) (ite x1755 (x1032 x10) (ite x3043 (x1032 x10) (x3216 x10)))))))))
(define-fun x1662 ((x10 x4297)) Int (ite (= x10 x4174) x1319 (x1032 x10)))
(define-fun x953 ((x10 x4297)) Int (ite x2444 (x1662 x10) (ite x3337 (x1032 x10) (ite x104 (x1032 x10) (ite x2610 (x1032 x10) (ite x863 (x1662 x10) (x1032 x10)))))))
(define-fun x986 ((x10 x4297)) Int (ite (= x2929 x10) x710 (x1662 x10)))
(define-fun x3650 ((x10 x4297)) Int (ite x1268 (x1032 x10) (ite x3143 (x1032 x10) (ite x234 (x1032 x10) (ite x1952 (x1032 x10) (ite x2707 (ite x929 (x953 x10) (x986 x10)) (x1032 x10)))))))
(define-fun x535 ((x10 x4297)) Int (ite x2256 (x3650 x10) (ite x3296 (x1032 x10) (ite x4033 (x1032 x10) (ite x2920 (x1032 x10) (ite x2334 (x1032 x10) (ite x981 (x1032 x10) (ite x3810 (x1032 x10) (x3650 x10)))))))))
(define-fun x1243 ((x10 x4297)) Int (ite (= x10 x4229) x3120 (x1032 x10)))
(define-fun x3521 ((x10 x4297)) Int (ite x492 (x1243 x10) (ite x4022 (x1032 x10) (ite x534 (x1032 x10) (ite x1946 (x1032 x10) (ite x1041 (x1243 x10) (x1032 x10)))))))
(define-fun x4270 ((x10 x4297)) Int (ite (= x10 x886) x3322 (x1243 x10)))
(define-fun x791 ((x10 x4297)) Int (ite x3463 (x1032 x10) (ite x3059 (x1032 x10) (ite x1137 (x1032 x10) (ite x3745 (x1032 x10) (ite x3058 (ite x3844 (x3521 x10) (x4270 x10)) (x1032 x10)))))))
(define-fun x279 ((x10 x4297)) Int (ite x577 (x791 x10) (ite x1715 (x1032 x10) (ite x1776 (x1032 x10) (ite x1956 (x1032 x10) (ite x226 (x1032 x10) (ite x2144 (x1032 x10) (ite x741 (x1032 x10) (x791 x10)))))))))
(define-fun x209 ((x10 x4297)) Int (ite x1999 (ite x47 (x535 x10) (x3650 x10)) (ite x2523 (ite x2115 (x279 x10) (x791 x10)) (x1032 x10))))
(define-fun x4199 ((x10 x4297)) Int (ite (= x10 x2905) x1661 (x209 x10)))
(define-fun x3109 ((x10 x4297)) Int (ite x4166 (x4199 x10) (ite x1636 (x209 x10) (ite x71 (x209 x10) (ite x545 (x209 x10) (ite x4351 (x4199 x10) (x209 x10)))))))
(define-fun x2698 ((x10 x4297)) Int (ite (= x1811 x10) x4339 (x4199 x10)))
(define-fun x1118 ((x10 x4297)) Int (ite x3739 (x209 x10) (ite x1796 (x209 x10) (ite x3556 (x209 x10) (ite x149 (x209 x10) (ite x3129 (ite x2413 (x3109 x10) (x2698 x10)) (x209 x10)))))))
(define-fun x3580 ((x10 x4297)) Int (ite x67 (x1032 x10) (ite x2891 (x1032 x10) (ite x3977 (x1118 x10) (ite x547 (x1118 x10) (ite x3531 (x1118 x10) (ite x2961 (x1118 x10) (ite x4096 (x209 x10) (x1032 x10)))))))))
(define-fun x453 ((x10 x4297)) Int (ite x2396 (ite x3206 (x462 x10) (x354 x10)) (ite x1819 (ite x4082 (x154 x10) (x3216 x10)) (ite x1514 (x3580 x10) (x1118 x10)))))
(define-fun x3649 ((x10 x4297)) Int (ite (= x10 x4250) x363 (x453 x10)))
(define-fun x436 ((x10 x4297)) Int (ite (= x10 x3775) x531 (x3649 x10)))
(define-fun x2300 ((x10 x4297)) Int (ite x1384 (x804 x10) (ite x1434 (x804 x10) (ite x113 (x804 x10) (ite x2423 (x804 x10) (ite x2656 (ite x889 (x804 x10) (x3077 x10)) (x804 x10)))))))
(define-fun x1350 ((x10 Int)) Int (ite (= 0 x10) 1 (x1280 x10)))
(define-fun x3049 ((x10 x4297)) Int (ite (= x562 x10) x3625 (x2776 x10)))
(define-fun x3732 ((x10 x4297)) Int (ite x3211 (x3049 x10) (ite x3436 (x2776 x10) (ite x924 (x2776 x10) (ite x3721 (x2776 x10) (ite x728 (x3049 x10) (x2776 x10)))))))
(define-fun x2967 ((x10 x4297)) Int (ite (= x10 x1855) x4207 (x3049 x10)))
(define-fun x4308 ((x10 x4297)) Int (ite x1647 (x2776 x10) (ite x2225 (x2776 x10) (ite x1567 (x2776 x10) (ite x2248 (x2776 x10) (ite x3842 (x2776 x10) (ite x4211 (ite x2124 (x3732 x10) (x2967 x10)) (x2776 x10))))))))
(define-fun x956 ((x10 x4297)) Int (ite x2169 (x4308 x10) (ite x2037 (x2776 x10) (ite x3285 (x2776 x10) (ite x1471 (x2776 x10) (ite x144 (x2776 x10) (ite x3590 (x2776 x10) (ite x1712 (x2776 x10) (x4308 x10)))))))))
(define-fun x316 ((x10 x4297)) Int (ite (= x3448 x10) x458 (x2776 x10)))
(define-fun x1854 ((x10 x4297)) Int (ite x4295 (x316 x10) (ite x97 (x2776 x10) (ite x3116 (x2776 x10) (ite x68 (x2776 x10) (ite x664 (x316 x10) (x2776 x10)))))))
(define-fun x1127 ((x10 x4297)) Int (ite (= x2784 x10) x4367 (x316 x10)))
(define-fun x4010 ((x10 x4297)) Int (ite x2488 (x2776 x10) (ite x2797 (x2776 x10) (ite x867 (x2776 x10) (ite x2808 (x2776 x10) (ite x181 (x2776 x10) (ite x398 (ite x933 (x1854 x10) (x1127 x10)) (x2776 x10))))))))
(define-fun x3253 ((x10 x4297)) Int (ite x1432 (x4010 x10) (ite x2609 (x2776 x10) (ite x3123 (x2776 x10) (ite x3748 (x2776 x10) (ite x3917 (x2776 x10) (ite x1755 (x2776 x10) (ite x3043 (x2776 x10) (x4010 x10)))))))))
(define-fun x2469 ((x10 x4297)) Int (ite (= x3489 x10) x1354 (x2776 x10)))
(define-fun x4353 ((x10 x4297)) Int (ite x295 (x2469 x10) (ite x3236 (x2776 x10) (ite x617 (x2776 x10) (ite x3819 (x2776 x10) (ite x1428 (x2469 x10) (x2776 x10)))))))
(define-fun x2006 ((x10 x4297)) Int (ite (= x10 x2160) x2695 (x2469 x10)))
(define-fun x3159 ((x10 x4297)) Int (ite x1268 (x2776 x10) (ite x3143 (x2776 x10) (ite x234 (x2776 x10) (ite x1952 (x2776 x10) (ite x2707 (x2776 x10) (ite x3886 (ite x926 (x4353 x10) (x2006 x10)) (x2776 x10))))))))
(define-fun x3839 ((x10 x4297)) Int (ite x2256 (x3159 x10) (ite x3296 (x2776 x10) (ite x4033 (x2776 x10) (ite x2920 (x2776 x10) (ite x2334 (x2776 x10) (ite x981 (x2776 x10) (ite x3810 (x2776 x10) (x3159 x10)))))))))
(define-fun x626 ((x10 x4297)) Int (ite (= x10 x4068) x2484 (x2776 x10)))
(define-fun x3785 ((x10 x4297)) Int (ite x2593 (x626 x10) (ite x2399 (x2776 x10) (ite x425 (x2776 x10) (ite x764 (x2776 x10) (ite x3910 (x626 x10) (x2776 x10)))))))
(define-fun x3193 ((x10 x4297)) Int (ite (= x10 x752) x1234 (x626 x10)))
(define-fun x3771 ((x10 x4297)) Int (ite x3463 (x2776 x10) (ite x3059 (x2776 x10) (ite x1137 (x2776 x10) (ite x3745 (x2776 x10) (ite x3058 (x2776 x10) (ite x84 (ite x66 (x3785 x10) (x3193 x10)) (x2776 x10))))))))
(define-fun x3717 ((x10 x4297)) Int (ite x577 (x3771 x10) (ite x1715 (x2776 x10) (ite x1776 (x2776 x10) (ite x1956 (x2776 x10) (ite x226 (x2776 x10) (ite x2144 (x2776 x10) (ite x741 (x2776 x10) (x3771 x10)))))))))
(define-fun x1773 ((x10 x4297)) Int (ite x1999 (ite x47 (x3839 x10) (x3159 x10)) (ite x2523 (ite x2115 (x3717 x10) (x3771 x10)) (x2776 x10))))
(define-fun x1332 ((x10 x4297)) Int (ite (= x395 x10) x3220 (x1773 x10)))
(define-fun x3131 ((x10 x4297)) Int (ite x2298 (x1332 x10) (ite x33 (x1773 x10) (ite x837 (x1773 x10) (ite x3803 (x1773 x10) (ite x2098 (x1332 x10) (x1773 x10)))))))
(define-fun x2948 ((x10 x4297)) Int (ite (= x3363 x10) x3031 (x1332 x10)))
(define-fun x1395 ((x10 x4297)) Int (ite x3739 (x1773 x10) (ite x1796 (x1773 x10) (ite x3556 (x1773 x10) (ite x149 (x1773 x10) (ite x3129 (x1773 x10) (ite x509 (ite x2841 (x3131 x10) (x2948 x10)) (x1773 x10))))))))
(define-fun x2212 ((x10 x4297)) Int (ite x67 (x2776 x10) (ite x2891 (x2776 x10) (ite x3977 (x1395 x10) (ite x547 (x1395 x10) (ite x3531 (x1395 x10) (ite x2961 (x1395 x10) (ite x4096 (x1773 x10) (x2776 x10)))))))))
(define-fun x1575 ((x10 x4297)) Int (ite x2396 (ite x3206 (x956 x10) (x4308 x10)) (ite x1819 (ite x4082 (x3253 x10) (x4010 x10)) (ite x1514 (x2212 x10) (x1395 x10)))))
(define-fun x1058 ((x10 x4297)) Int (ite (= x3194 x10) x3503 (x1575 x10)))
(define-fun x1103 ((x10 x4297)) Int (ite x1384 (x2501 x10) (ite x1434 (x2501 x10) (ite x113 (x2501 x10) (ite x2423 (x2501 x10) (ite x2656 (x2501 x10) (ite x3149 (ite x1660 (x2501 x10) (x1357 x10)) (x2501 x10))))))))
(define-fun x1187 ((x10 Int)) Int (ite (= x10 0) 1 (x1280 x10)))
(define-fun x2314 ((x10 x4297)) Int (ite (= x10 x2027) x3299 (x2658 x10)))
(define-fun x2487 ((x10 x4297)) Int (ite x1764 (x2314 x10) (ite x1382 (x2658 x10) (ite x1001 (x2658 x10) (ite x29 (x2658 x10) (ite x2818 (x2314 x10) (x2658 x10)))))))
(define-fun x3731 ((x10 x4297)) Int (ite (= x2603 x10) x4293 (x2314 x10)))
(define-fun x271 ((x10 x4297)) Int (ite x1647 (x2658 x10) (ite x2225 (x2658 x10) (ite x1567 (x2658 x10) (ite x2248 (x2658 x10) (ite x3842 (x2658 x10) (ite x4211 (x2658 x10) (ite x454 (x2487 x10) (x3731 x10)))))))))
(define-fun x3326 ((x10 x4297)) Int (ite x2169 (x271 x10) (ite x2037 (x2658 x10) (ite x3285 (x2658 x10) (ite x1471 (x2658 x10) (ite x144 (x2658 x10) (ite x3590 (x2658 x10) (ite x1712 (x2658 x10) (x271 x10)))))))))
(define-fun x576 ((x10 x4297)) Int (ite (= x10 x3761) x3118 (x2658 x10)))
(define-fun x443 ((x10 x4297)) Int (ite x843 (x576 x10) (ite x4043 (x2658 x10) (ite x4187 (x2658 x10) (ite x2873 (x2658 x10) (ite x1075 (x576 x10) (x2658 x10)))))))
(define-fun x245 ((x10 x4297)) Int (ite (= x10 x550) x2445 (x576 x10)))
(define-fun x1445 ((x10 x4297)) Int (ite x2488 (x2658 x10) (ite x2797 (x2658 x10) (ite x867 (x2658 x10) (ite x2808 (x2658 x10) (ite x181 (x2658 x10) (ite x398 (x2658 x10) (ite x3963 (x443 x10) (x245 x10)))))))))
(define-fun x1345 ((x10 x4297)) Int (ite x1432 (x1445 x10) (ite x2609 (x2658 x10) (ite x3123 (x2658 x10) (ite x3748 (x2658 x10) (ite x3917 (x2658 x10) (ite x1755 (x2658 x10) (ite x3043 (x2658 x10) (x1445 x10)))))))))
(define-fun x2945 ((x10 x4297)) Int (ite (= x1228 x10) x3075 (x2658 x10)))
(define-fun x3788 ((x10 x4297)) Int (ite x1143 (x2945 x10) (ite x2810 (x2658 x10) (ite x1681 (x2658 x10) (ite x3147 (x2658 x10) (ite x1961 (x2945 x10) (x2658 x10)))))))
(define-fun x2278 ((x10 x4297)) Int (ite (= x1005 x10) x3575 (x2945 x10)))
(define-fun x3006 ((x10 x4297)) Int (ite x1268 (x2658 x10) (ite x3143 (x2658 x10) (ite x234 (x2658 x10) (ite x1952 (x2658 x10) (ite x2707 (x2658 x10) (ite x3886 (x2658 x10) (ite x2769 (x3788 x10) (x2278 x10)))))))))
(define-fun x4126 ((x10 x4297)) Int (ite x2256 (x3006 x10) (ite x3296 (x2658 x10) (ite x4033 (x2658 x10) (ite x2920 (x2658 x10) (ite x2334 (x2658 x10) (ite x981 (x2658 x10) (ite x3810 (x2658 x10) (x3006 x10)))))))))
(define-fun x2001 ((x10 x4297)) Int (ite (= x542 x10) x2512 (x2658 x10)))
(define-fun x3894 ((x10 x4297)) Int (ite x3208 (x2001 x10) (ite x3756 (x2658 x10) (ite x2853 (x2658 x10) (ite x1966 (x2658 x10) (ite x141 (x2001 x10) (x2658 x10)))))))
(define-fun x3245 ((x10 x4297)) Int (ite (= x10 x2675) x192 (x2001 x10)))
(define-fun x2649 ((x10 x4297)) Int (ite x3463 (x2658 x10) (ite x3059 (x2658 x10) (ite x1137 (x2658 x10) (ite x3745 (x2658 x10) (ite x3058 (x2658 x10) (ite x84 (x2658 x10) (ite x686 (x3894 x10) (x3245 x10)))))))))
(define-fun x1029 ((x10 x4297)) Int (ite x577 (x2649 x10) (ite x1715 (x2658 x10) (ite x1776 (x2658 x10) (ite x1956 (x2658 x10) (ite x226 (x2658 x10) (ite x2144 (x2658 x10) (ite x741 (x2658 x10) (x2649 x10)))))))))
(define-fun x824 ((x10 x4297)) Int (ite x1999 (ite x47 (x4126 x10) (x3006 x10)) (ite x2523 (ite x2115 (x1029 x10) (x2649 x10)) (x2658 x10))))
(define-fun x1010 ((x10 x4297)) Int (ite (= x3270 x10) x3544 (x824 x10)))
(define-fun x950 ((x10 x4297)) Int (ite x4271 (x1010 x10) (ite x739 (x824 x10) (ite x4274 (x824 x10) (ite x2116 (x824 x10) (ite x1046 (x1010 x10) (x824 x10)))))))
(define-fun x1074 ((x10 x4297)) Int (ite (= x1149 x10) x4324 (x1010 x10)))
(define-fun x239 ((x10 x4297)) Int (ite x3739 (x824 x10) (ite x1796 (x824 x10) (ite x3556 (x824 x10) (ite x149 (x824 x10) (ite x3129 (x824 x10) (ite x509 (x824 x10) (ite x3581 (x950 x10) (x1074 x10)))))))))
(define-fun x3734 ((x10 x4297)) Int (ite x67 (x2658 x10) (ite x2891 (x2658 x10) (ite x3977 (x239 x10) (ite x547 (x239 x10) (ite x3531 (x239 x10) (ite x2961 (x239 x10) (ite x4096 (x824 x10) (x2658 x10)))))))))
(define-fun x111 ((x10 x4297)) Int (ite x2396 (ite x3206 (x3326 x10) (x271 x10)) (ite x1819 (ite x4082 (x1345 x10) (x1445 x10)) (ite x1514 (x3734 x10) (x239 x10)))))
(define-fun x4121 ((x10 x4297)) Int (ite (= x10 x1780) x1991 (x111 x10)))
(define-fun x1098 ((x10 x4297)) Int (ite (= x10 x3506) x2527 (x4121 x10)))
(define-fun x286 ((x10 x4297)) Int (ite x1384 (x591 x10) (ite x1434 (x591 x10) (ite x113 (x591 x10) (ite x2423 (x591 x10) (ite x2656 (x591 x10) (ite x3149 (x591 x10) (ite x3302 (x591 x10) (x1239 x10)))))))))
(define-fun x3805 ((x10 Int)) Int (ite (= x10 0) 1 (x1280 x10)))
(define-fun x2464 ((x10 x4297)) Int (ite (= x3769 x10) x1875 (x2505 x10)))
(define-fun x755 ((x10 Int)) Int (ite (= x10 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2092 x10)))
(define-fun x2690 ((x10 Int)) Int (ite (= x10 132) x878 (x755 x10)))
(define-fun x253 ((x10 Int)) Int (ite (= 164 x10) x4031 (x2690 x10)))
(define-fun x2208 ((x10 Int)) Int (ite (= 196 x10) x2671 (x253 x10)))
(define-fun x4053 ((x10 x4297)) Int (ite (= x10 x4123) x2059 (x4087 x10)))
(define-fun x1276 ((x10 Int)) Int (ite (= 0 x10) 1 (x1672 x10)))
(define-fun x290 ((x10 x4297)) Int (ite (= x10 x4032) x1912 (x2464 x10)))
(define-fun x1638 ((x10 x4297)) Int (ite (= x10 x4025) x2819 (x290 x10)))
(define-fun x803 ((x10 Int)) Int (ite (= x10 0) 1 (x1672 x10)))
(define-fun x157 ((x10 x4297)) Int (ite (= x10 x3002) x2702 (x118 x10)))
(define-fun x2521 ((x10 Int)) Int (ite (= x10 0) 1 (x1672 x10)))
(define-fun x2189 ((x10 x4297)) Int (ite (= x10 x3340) x1571 (x4237 x10)))
(define-fun x4267 ((x10 x4297)) Int (ite (= x3710 x10) x683 (x2189 x10)))
(define-fun x1388 ((x10 Int)) Int (ite (= x10 0) 1 (x1672 x10)))
(define-fun x595 ((x10 x4297)) Int (ite (= x3583 x10) x1579 (x453 x10)))
(define-fun x2403 ((x10 x4297)) Int (ite (= x10 x1437) x1000 (x595 x10)))
(define-fun x2962 ((x10 Int)) Int (ite (= 0 x10) 1 (x1672 x10)))
(define-fun x2752 ((x10 x4297)) Int (ite (= x694 x10) x222 (x1575 x10)))
(define-fun x312 ((x10 Int)) Int (ite (= 0 x10) 1 (x1672 x10)))
(define-fun x2394 ((x10 x4297)) Int (ite (= x10 x1089) x1737 (x111 x10)))
(define-fun x2579 ((x10 x4297)) Int (ite (= x304 x10) x552 (x2394 x10)))
(define-fun x2913 ((x10 Int)) Int (ite (= x10 0) 1 (x1672 x10)))
(define-fun x839 ((x10 x4297)) Int (ite x3462 (x1098 x10) (ite x869 (x4121 x10) (ite x1390 (x111 x10) (ite x261 (x111 x10) (ite x2780 (x111 x10) (ite x2825 (x111 x10) (ite x3045 (x4121 x10) (ite x2370 (x1098 x10) (x111 x10))))))))))
(define-fun x801 ((x10 x4297)) Int (ite x4138 (x111 x10) (ite x1609 (x111 x10) (ite x811 (x111 x10) (ite x3244 (x111 x10) (ite x605 (x111 x10) (ite x2358 (x111 x10) (ite x2630 (x839 x10) (x1098 x10)))))))))
(define-fun x2250 ((x10 x4297)) Int (ite x3551 (x801 x10) (ite x1520 (x111 x10) (ite x1897 (x111 x10) (ite x3853 (x801 x10) (x111 x10))))))
(define-fun x3343 ((x10 x4297)) Int (ite x521 (x2579 x10) (ite x3025 (x2394 x10) (ite x2682 (x111 x10) (ite x1913 (x111 x10) (ite x269 (x111 x10) (ite x3646 (x111 x10) (ite x2084 (x2394 x10) (ite x853 (x2579 x10) (x111 x10))))))))))
(define-fun x1634 ((x10 x4297)) Int (ite x2126 (x111 x10) (ite x102 (x111 x10) (ite x217 (x111 x10) (ite x3111 (x111 x10) (ite x3828 (x111 x10) (ite x3903 (x111 x10) (ite x1369 (x3343 x10) (x2579 x10)))))))))
(define-fun x1527 ((x10 x4297)) Int (ite x35 (x1634 x10) (ite x36 (x111 x10) (ite x1650 (x111 x10) (ite x3091 (x1634 x10) (x111 x10))))))
(define-fun x2713 ((x10 x4297)) Int (ite x4007 (ite x166 (x2250 x10) (x801 x10)) (ite x587 (x1527 x10) (x1634 x10))))
(define-fun x3906 ((x10 x4297)) Int (ite x4224 (x2231 x10) (ite x1899 (x3311 x10) (ite x3188 (x2505 x10) (ite x2289 (x2505 x10) (ite x2744 (x2505 x10) (ite x3026 (x2505 x10) (ite x1713 (x3311 x10) (ite x1700 (x2231 x10) (x2505 x10))))))))))
(define-fun x3464 ((x10 x4297)) Int (ite x4138 (x2505 x10) (ite x1609 (ite x1906 (x3906 x10) (x2231 x10)) (x2505 x10))))
(define-fun x773 ((x10 x4297)) Int (ite x3551 (x3464 x10) (ite x1520 (x2505 x10) (ite x1897 (x2505 x10) (ite x3853 (x3464 x10) (x2505 x10))))))
(define-fun x2083 ((x10 x4297)) Int (ite x1559 (x1638 x10) (ite x2040 (x290 x10) (ite x158 (x2464 x10) (ite x983 (x2464 x10) (ite x3869 (x2464 x10) (ite x995 (x2464 x10) (ite x3425 (x290 x10) (ite x609 (x1638 x10) (x2464 x10))))))))))
(define-fun x285 ((x10 x4297)) Int (ite x2126 (x2464 x10) (ite x102 (ite x4255 (x2083 x10) (x1638 x10)) (x2464 x10))))
(define-fun x2587 ((x10 x4297)) Int (ite x35 (x285 x10) (ite x36 (x2505 x10) (ite x1650 (x2505 x10) (ite x3091 (x285 x10) (x2505 x10))))))
(define-fun x681 ((x10 x4297)) Int (ite x4007 (ite x166 (x773 x10) (x3464 x10)) (ite x587 (x2587 x10) (x285 x10))))
(define-fun x3069 ((x10 x4297)) Int (ite x2693 (x3714 x10) (ite x2238 (x2268 x10) (ite x3139 (x4237 x10) (ite x4104 (x4237 x10) (ite x2872 (x4237 x10) (ite x3470 (x4237 x10) (ite x1128 (x2268 x10) (ite x1017 (x3714 x10) (x4237 x10))))))))))
(define-fun x378 ((x10 x4297)) Int (ite x4138 (x4237 x10) (ite x1609 (x4237 x10) (ite x811 (x4237 x10) (ite x3244 (ite x3469 (x3069 x10) (x3714 x10)) (x4237 x10))))))
(define-fun x2141 ((x10 x4297)) Int (ite x3551 (x378 x10) (ite x1520 (x4237 x10) (ite x1897 (x4237 x10) (ite x3853 (x378 x10) (x4237 x10))))))
(define-fun x1299 ((x10 x4297)) Int (ite x2868 (x4267 x10) (ite x3033 (x2189 x10) (ite x1525 (x4237 x10) (ite x2504 (x4237 x10) (ite x17 (x4237 x10) (ite x3017 (x4237 x10) (ite x976 (x2189 x10) (ite x3597 (x4267 x10) (x4237 x10))))))))))
(define-fun x3905 ((x10 x4297)) Int (ite x2126 (x4237 x10) (ite x102 (x4237 x10) (ite x217 (x4237 x10) (ite x3111 (ite x937 (x1299 x10) (x4267 x10)) (x4237 x10))))))
(define-fun x294 ((x10 x4297)) Int (ite x35 (x3905 x10) (ite x36 (x4237 x10) (ite x1650 (x4237 x10) (ite x3091 (x3905 x10) (x4237 x10))))))
(define-fun x4030 ((x10 x4297)) Int (ite x4007 (ite x166 (x2141 x10) (x378 x10)) (ite x587 (x294 x10) (x3905 x10))))
(define-fun x2036 ((x10 x4297)) Int (ite x1878 (x436 x10) (ite x362 (x3649 x10) (ite x155 (x453 x10) (ite x899 (x453 x10) (ite x52 (x453 x10) (ite x3023 (x453 x10) (ite x426 (x3649 x10) (ite x1838 (x436 x10) (x453 x10))))))))))
(define-fun x2874 ((x10 x4297)) Int (ite x4138 (x453 x10) (ite x1609 (x453 x10) (ite x811 (x453 x10) (ite x3244 (x453 x10) (ite x605 (ite x2528 (x2036 x10) (x436 x10)) (x453 x10)))))))
(define-fun x819 ((x10 x4297)) Int (ite x3551 (x2874 x10) (ite x1520 (x453 x10) (ite x1897 (x453 x10) (ite x3853 (x2874 x10) (x453 x10))))))
(define-fun x4086 ((x10 x4297)) Int (ite x2938 (x2403 x10) (ite x1995 (x595 x10) (ite x3826 (x453 x10) (ite x687 (x453 x10) (ite x4318 (x453 x10) (ite x55 (x453 x10) (ite x1481 (x595 x10) (ite x2167 (x2403 x10) (x453 x10))))))))))
(define-fun x1028 ((x10 x4297)) Int (ite x2126 (x453 x10) (ite x102 (x453 x10) (ite x217 (x453 x10) (ite x3111 (x453 x10) (ite x3828 (ite x2617 (x4086 x10) (x2403 x10)) (x453 x10)))))))
(define-fun x2415 ((x10 x4297)) Int (ite x35 (x1028 x10) (ite x36 (x453 x10) (ite x1650 (x453 x10) (ite x3091 (x1028 x10) (x453 x10))))))
(define-fun x2449 ((x10 x4297)) Int (ite x4007 (ite x166 (x819 x10) (x2874 x10)) (ite x587 (x2415 x10) (x1028 x10))))
(define-fun x3478 ((x10 Int)) Int (ite (= 128 x10) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x339 x10)))
(define-fun x522 ((x10 Int)) Int (ite (= 132 x10) x878 (x3478 x10)))
(define-fun x2131 ((x10 Int)) Int (ite (= 164 x10) x759 (x522 x10)))
(define-fun x2079 ((x10 Int)) Int (ite (= 0 x10) 1 (x467 x10)))
(define-fun x649 ((x10 Int)) Int (ite (= x10 0) 1 (x467 x10)))
(define-fun x3879 ((x10 Int)) Int (ite (= 0 x10) 1 (x467 x10)))
(define-fun x357 ((x10 Int)) Int (ite (= 0 x10) 1 (x467 x10)))
(define-fun x1027 ((x10 Int)) Int (ite (= 0 x10) 1 (x467 x10)))
(define-fun x442 ((x10 Int)) Int (ite (= x10 0) 1 (x467 x10)))
(define-fun x1590 ((x10 Int)) Int (ite (= x10 0) 1 (x467 x10)))
(define-fun x2928 ((x10 Int)) Int (ite (= 128 x10) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x3958 x10)))
(define-fun x836 ((x10 Int)) Int (ite (= 132 x10) x878 (x2928 x10)))
(define-fun x1789 ((x10 Int)) Int (ite (= x10 164) x4221 (x836 x10)))
(define-fun x1957 ((x10 Int)) Int (ite (= 0 x10) 1 (x479 x10)))
(define-fun x4135 ((x10 Int)) Int (ite (= 0 x10) 1 (x479 x10)))
(define-fun x1702 ((x10 Int)) Int (ite (= x10 0) 1 (x479 x10)))
(define-fun x126 ((x10 Int)) Int (ite (= x10 0) 1 (x479 x10)))
(define-fun x3334 ((x10 Int)) Int (ite (= x10 0) 1 (x479 x10)))
(define-fun x3082 ((x10 Int)) Int (ite (= x10 0) 1 (x479 x10)))
(define-fun x3387 ((x10 Int)) Int (ite (= x10 0) 1 (x479 x10)))
(define-fun x56 ((x10 Int)) Int (ite (= x10 128) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x726 x10)))
(define-fun x1473 ((x10 Int)) Int (ite (= x10 132) x3376 (x56 x10)))
(define-fun x4028 ((x10 Int)) Int (ite (= 128 x10) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2385 x10)))
(define-fun x3473 ((x10 Int)) Int (ite (= x10 132) x878 (x4028 x10)))
(define-fun x947 ((x10 Int)) Int (ite (= 164 x10) x1902 (x3473 x10)))
(define-fun x2162 ((x10 Int)) Int (ite (= 0 x10) 1 (x1418 x10)))
(define-fun x2565 ((x10 Int)) Int (ite (= x10 0) 1 (x1418 x10)))
(define-fun x691 ((x10 Int)) Int (ite (= x10 0) 1 (x1418 x10)))
(define-fun x513 ((x10 Int)) Int (ite (= x10 0) 1 (x1418 x10)))
(define-fun x2362 ((x10 Int)) Int (ite (= 0 x10) 1 (x1418 x10)))
(define-fun x1686 ((x10 Int)) Int (ite (= 0 x10) 1 (x1418 x10)))
(define-fun x2361 ((x10 Int)) Int (ite (= x10 0) 1 (x1418 x10)))
(define-fun x3705 ((x10 Int)) Int (ite (= x10 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x3115 x10)))
(define-fun x4312 ((x10 Int)) Int (ite (= x10 132) x878 (x3705 x10)))
(define-fun x831 ((x10 Int)) Int (ite (= x10 164) x723 (x4312 x10)))
(define-fun x2723 ((x10 Int)) Int (ite (= x10 0) 1 (x4204 x10)))
(define-fun x1993 ((x10 Int)) Int (ite (= x10 0) 1 (x4204 x10)))
(define-fun x2636 ((x10 Int)) Int (ite (= 0 x10) 1 (x4204 x10)))
(define-fun x1849 ((x10 Int)) Int (ite (= 0 x10) 1 (x4204 x10)))
(define-fun x2109 ((x10 Int)) Int (ite (= 0 x10) 1 (x4204 x10)))
(define-fun x1262 ((x10 Int)) Int (ite (= x10 0) 1 (x4204 x10)))
(define-fun x2886 ((x10 Int)) Int (ite (= x10 0) 1 (x4204 x10)))
(define-fun x2894 ((x10 Int)) Int (ite (= 128 x10) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1473 x10)))
(define-fun x1466 ((x10 Int)) Int (ite (= x10 132) x878 (x2894 x10)))
(define-fun x1059 ((x10 Int)) Int (ite (= 164 x10) x3376 (x1466 x10)))
(define-fun x2376 ((x10 Int)) Int (ite (= x10 0) 1 (x2549 x10)))
(define-fun x2970 ((x10 Int)) Int (ite (= x10 0) 1 (x2549 x10)))
(define-fun x183 ((x10 Int)) Int (ite (= 0 x10) 1 (x2549 x10)))
(define-fun x1190 ((x10 Int)) Int (ite (= x10 0) 1 (x2549 x10)))
(define-fun x2328 ((x10 Int)) Int (ite (= 0 x10) 1 (x2549 x10)))
(define-fun x3438 ((x10 Int)) Int (ite (= 0 x10) 1 (x2549 x10)))
(define-fun x653 ((x10 Int)) Int (ite (= x10 0) 1 (x2549 x10)))
(define-fun x2739 ((x10 Int)) Int (ite x942 (x2549 x10) (x2376 x10)))
(define-fun x1523 ((x10 Int)) Int (ite x1552 (x2549 x10) (x2970 x10)))
(define-fun x1555 ((x10 Int)) Int (ite x2816 (x2549 x10) (x183 x10)))
(define-fun x4145 ((x10 Int)) Int (ite x3832 (x2549 x10) (x1190 x10)))
(define-fun x466 ((x10 Int)) Int (ite x2413 (x2549 x10) (x2328 x10)))
(define-fun x2219 ((x10 Int)) Int (ite x2841 (x2549 x10) (x3438 x10)))
(define-fun x3219 ((x10 Int)) Int (ite x3581 (x2549 x10) (x653 x10)))
(define-fun x218 ((x10 Int)) Int (ite x3739 (x2739 x10) (ite x1796 (x1523 x10) (ite x3556 (x1555 x10) (ite x149 (x4145 x10) (ite x3129 (x466 x10) (ite x509 (x2219 x10) (x3219 x10))))))))
(define-fun x284 ((x10 Int)) Int (ite x3878 (x479 x10) (x1957 x10)))
(define-fun x1684 ((x10 Int)) Int (ite x4095 (x479 x10) (x4135 x10)))
(define-fun x3406 ((x10 Int)) Int (ite x1247 (x479 x10) (x1702 x10)))
(define-fun x4194 ((x10 Int)) Int (ite x3792 (x479 x10) (x126 x10)))
(define-fun x3052 ((x10 Int)) Int (ite x1515 (x479 x10) (x3334 x10)))
(define-fun x1586 ((x10 Int)) Int (ite x933 (x479 x10) (x3082 x10)))
(define-fun x2601 ((x10 Int)) Int (ite x3963 (x479 x10) (x3387 x10)))
(define-fun x1313 ((x10 Int)) Int (ite x2488 (x284 x10) (ite x2797 (x1684 x10) (ite x867 (x3406 x10) (ite x2808 (x4194 x10) (ite x181 (x3052 x10) (ite x398 (x1586 x10) (x2601 x10))))))))
(define-fun x3606 ((x10 Int)) Int (ite x3202 (x467 x10) (x2079 x10)))
(define-fun x1173 ((x10 Int)) Int (ite x1192 (x467 x10) (x649 x10)))
(define-fun x567 ((x10 Int)) Int (ite x45 (x467 x10) (x3879 x10)))
(define-fun x1479 ((x10 Int)) Int (ite x48 (x467 x10) (x357 x10)))
(define-fun x3920 ((x10 Int)) Int (ite x301 (x467 x10) (x1027 x10)))
(define-fun x4259 ((x10 Int)) Int (ite x2124 (x467 x10) (x442 x10)))
(define-fun x4037 ((x10 Int)) Int (ite x454 (x467 x10) (x1590 x10)))
(define-fun x1153 ((x10 Int)) Int (ite x1647 (x3606 x10) (ite x2225 (x1173 x10) (ite x1567 (x567 x10) (ite x2248 (x1479 x10) (ite x3842 (x3920 x10) (ite x4211 (x4259 x10) (x4037 x10))))))))
(define-fun x615 ((x10 Int)) Int (ite x2056 (x1672 x10) (x1276 x10)))
(define-fun x1752 ((x10 Int)) Int (ite x4255 (x1672 x10) (x803 x10)))
(define-fun x3101 ((x10 Int)) Int (ite x1440 (x1672 x10) (x2521 x10)))
(define-fun x4125 ((x10 Int)) Int (ite x937 (x1672 x10) (x1388 x10)))
(define-fun x3073 ((x10 Int)) Int (ite x2617 (x1672 x10) (x2962 x10)))
(define-fun x4177 ((x10 Int)) Int (ite x3674 (x1672 x10) (x312 x10)))
(define-fun x1338 ((x10 Int)) Int (ite x1369 (x1672 x10) (x2913 x10)))
(define-fun x3801 ((x10 Int)) Int (ite x2126 (x615 x10) (ite x102 (x1752 x10) (ite x217 (x3101 x10) (ite x3111 (x4125 x10) (ite x3828 (x3073 x10) (ite x3903 (x4177 x10) (x1338 x10))))))))
(define-fun x1887 ((x10 Int)) Int (ite x3335 (x1280 x10) (x3688 x10)))
(define-fun x2063 ((x10 Int)) Int (ite x1906 (x1280 x10) (x4356 x10)))
(define-fun x4001 ((x10 Int)) Int (ite x3618 (x1280 x10) (x695 x10)))
(define-fun x943 ((x10 Int)) Int (ite x3469 (x1280 x10) (x2839 x10)))
(define-fun x1114 ((x10 Int)) Int (ite x2528 (x1280 x10) (x1350 x10)))
(define-fun x3552 ((x10 Int)) Int (ite x1049 (x1280 x10) (x1187 x10)))
(define-fun x3982 ((x10 Int)) Int (ite x2630 (x1280 x10) (x3805 x10)))
(define-fun x2731 ((x10 Int)) Int (ite x4138 (x1887 x10) (ite x1609 (x2063 x10) (ite x811 (x4001 x10) (ite x3244 (x943 x10) (ite x605 (x1114 x10) (ite x2358 (x3552 x10) (x3982 x10))))))))
(define-fun x1002 ((x10 Int)) Int (ite x902 (x4204 x10) (x2723 x10)))
(define-fun x2911 ((x10 Int)) Int (ite x422 (x4204 x10) (x1993 x10)))
(define-fun x1381 ((x10 Int)) Int (ite x800 (x4204 x10) (x2636 x10)))
(define-fun x2547 ((x10 Int)) Int (ite x2793 (x4204 x10) (x1849 x10)))
(define-fun x998 ((x10 Int)) Int (ite x3844 (x4204 x10) (x2109 x10)))
(define-fun x2171 ((x10 Int)) Int (ite x66 (x4204 x10) (x1262 x10)))
(define-fun x3396 ((x10 Int)) Int (ite x686 (x4204 x10) (x2886 x10)))
(define-fun x1592 ((x10 Int)) Int (ite x3463 (x1002 x10) (ite x3059 (x2911 x10) (ite x1137 (x1381 x10) (ite x3745 (x2547 x10) (ite x3058 (x998 x10) (ite x84 (x2171 x10) (x3396 x10))))))))
(define-fun x817 ((x10 Int)) Int (ite x3122 (x1418 x10) (x2162 x10)))
(define-fun x3779 ((x10 Int)) Int (ite x2405 (x1418 x10) (x2565 x10)))
(define-fun x2759 ((x10 Int)) Int (ite x1691 (x1418 x10) (x691 x10)))
(define-fun x482 ((x10 Int)) Int (ite x4201 (x1418 x10) (x513 x10)))
(define-fun x1856 ((x10 Int)) Int (ite x929 (x1418 x10) (x2362 x10)))
(define-fun x1924 ((x10 Int)) Int (ite x926 (x1418 x10) (x1686 x10)))
(define-fun x588 ((x10 Int)) Int (ite x2769 (x1418 x10) (x2361 x10)))
(define-fun x198 ((x10 Int)) Int (ite x1268 (x817 x10) (ite x3143 (x3779 x10) (ite x234 (x2759 x10) (ite x1952 (x482 x10) (ite x2707 (x1856 x10) (ite x3886 (x1924 x10) (x588 x10))))))))
(define-fun x4273 ((x10 Int)) Int (ite (= x10 0) x4122 (x4173 x10)))
(define-fun x4056 ((x10 Int)) Int (ite (= x10 0) x766 (x4173 x10)))
(define-fun x579 ((x10 Int)) Int (ite (= x10 0) x2557 (x4173 x10)))
(define-fun x2432 ((x10 Int)) Int (ite (= x10 0) x4 (x4173 x10)))
(define-fun x260 ((x10 Int)) Int (ite (= x10 0) x455 (x4173 x10)))
(define-fun x4213 ((x10 Int)) Int (ite (= 0 x10) x1331 (x4173 x10)))
(define-fun x1724 ((x10 Int)) Int (ite (= x10 0) x3263 (x4173 x10)))
(define-fun x3931 ((x3008 Int)) Bool (=> (and (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3008)) (not (= x3008 82641394424300342035733052706735002277943222088490025348945809093694544936960)) (not (= x3008 1461501637330902918203684832716283019655932542975)) (not (= 2514000705 x3008)) (not (= 2678909723 x3008)) (not (= 2766140528 x3008)) (not (= x3008 872247156)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3008)) (not (= x3008 3645313523)) (not (= x3008 3065339685)) (not (= 2835717307 x3008)) (not (= x3008 649617121)) (not (= x3008 76402721711080721455099699717775724453355902399574518144543212547937138638848)) (not (= 545886713 x3008)) (not (= 579358252 x3008)) (not (= x3008 2753274959)) (not (= 404098525 x3008)) (not (= x3008 1889567281)) (not (= 2952933380 x3008)) (not (= 3187245334 x3008)) (not (= 2376452955 x3008)) (not (= 599290589 x3008)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x3008)) (not (= x3008 157198259)) (> x3008 10000) (not (= x3008 1422172137)) (not (= x3008 4238056678808933066457772256406219440718756300954938350892797929791311314944)) (not (= x3008 85927964219764727760667161919810921830953265369826564066086284937368273158144)) (not (= x3008 117300739)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3008)) (not (= 1461501637330902918203684832716283019655932542976 x3008)) (not (= x3008 826074471)) (not (= 773487949 x3008)) (not (= x3008 893399075)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3008)) (not (= 2569309863 x3008)) (not (= x3008 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= 2737736067 x3008)) (not (= 1086394137 x3008))) (not ((_ is x2486) (x3010 x3008)))))
(assert (= x3922 (and x3791 (not x757))))
(assert (x1417 x124))
(assert (x1417 x1907))
(assert (= x3987 (and (not x1386) x551)))
(assert (x1417 x1917))
(assert (x1417 x4347))
(assert (= (and (not x2411) x1223) x4008))
(assert (x1417 x1908))
(assert (x1417 x1003))
(assert (x1417 x3915))
(assert (= x2100 (or (and x1362 (not x3398)) x3800)))
(assert (= (and x1088 x368) x1487))
(assert (x1417 x3075))
(assert (x1417 x3737))
(assert (= (and (not x59) x4330) x4124))
(assert (= x992 (and (not x2470) x3961)))
(assert (= x3793 (and x1130 x300)))
(assert (= (x1769 (x2486 85927964219764727760667161919810921830953265369826564066086284937368273158144)) 85927964219764727760667161919810921830953265369826564066086284937368273158144))
(assert (x2452 x1994))
(assert (= x2348 (x1769 (x3010 x2348))))
(assert (x1417 x2503))
(assert (x1417 x2512))
(assert (= x3160 (and (not x288) x4222)))
(assert (x1417 x688))
(assert (x1417 x437))
(assert (x1417 x1513))
(assert (x1417 x751))
(assert (x1417 x1584))
(assert (x1417 x3309))
(assert (x1417 x663))
(assert (x1417 x4371))
(assert (x1417 x1251))
(assert (= x2120 (and (not x3092) x1324)))
(assert (= x893 (and x763 x1314)))
(assert (x1417 x1142))
(assert (=> (<= x437 10000) (= (x3010 x437) (x2486 x437))))
(assert (x1417 x133))
(assert (x1417 x3190))
(assert (x1417 x186))
(assert (x1417 x3538))
(assert (= x1439 (x1769 (x3010 x1439))))
(assert (x1417 x3445))
(assert (x1417 x1840))
(assert (= x4351 (and x2190 x3424)))
(assert (= (and (not x3747) x275) x4214))
(assert (= x2828 (=> (and (= x2862 x3736) (= 0 x3914)) x3864)))
(assert (= x3584 (and x1071 x2221)))
(assert (=> (>= 10000 x4186) (= (x2486 x4186) (x3010 x4186))))
(assert (= (x1769 (x3010 x3403)) x3403))
(assert (= x3648 (=> (and (= 0 x732) (= x2917 x1287)) x3428)))
(assert (x1417 x3319))
(assert (x1417 x759))
(assert (= x261 (and (not x827) x5)))
(assert (= (and x2198 x2786) x1011))
(assert (=> (>= 10000 x1876) (= (x2486 x1876) (x3010 x1876))))
(assert (x1417 x2229))
(assert (= (and x3258 (not x2078)) x1383))
(assert (x1417 x1663))
(assert (x1417 x1598))
(assert (x3931 x1787))
(assert (= x3372 (and x4017 x938)))
(assert (=> (>= 10000 x1084) (= (x2486 x1084) (x3010 x1084))))
(assert (x1417 x3004))
(assert (x1417 x2421))
(assert (x1417 x4191))
(assert (= x1561 (and x1373 (not x2580))))
(assert (x1417 x1033))
(assert (x1417 x372))
(assert (x1417 x578))
(assert (= (and x2133 x1438) x3594))
(assert (= x2035 (and x2909 x2132)))
(assert (not x999))
(assert (= (and x3746 x560) x559))
(assert (x1417 x2471))
(assert (x3931 x358))
(assert (x1417 x944))
(assert (= (and (not x3728) x1112) x397))
(assert (= x3477 (=> (and (= x2448 x1537) (= x298 x4277)) x1076)))
(assert (x3931 x1084))
(assert (x1417 x4077))
(assert (= (and (not x1130) x300) x4265))
(assert (= (and x6 x935) x1347))
(assert (x1417 x2798))
(assert (x1417 x3657))
(assert (x1417 x850))
(assert (x1417 x2553))
(assert (= (=> (and (= x1186 x3415) (= x2915 x499)) x3474) x3612))
(assert (= x1292 (and x3350 (not x2645))))
(assert (=> (<= x1932 10000) (= (x2486 x1932) (x3010 x1932))))
(assert (x1417 x1092))
(assert (= x164 (and (not x3534) x2325)))
(assert (x1417 x1949))
(assert (x1417 x1446))
(assert (= (and x3637 x63) x2466))
(assert (x1417 x3530))
(assert (= x3014 (and (not x2281) x4085)))
(assert (x1417 x1620))
(assert (x1417 x401))
(assert (x1417 x906))
(assert (= x2311 (and (not x2172) x3885)))
(assert (x1417 x64))
(assert (= (=> (and (= 0 x3100) (= x3915 x1524)) x3585) x1454))
(assert (= (or (and x2803 x3636) (and x1421 (not x1996))) x1260))
(assert (x3931 x3351))
(assert (=> (<= x353 10000) (= (x3010 x353) (x2486 x353))))
(assert (= x2854 (and x3359 (not x1877))))
(assert (= (or x1764 x29 x3755 x1001 x1382 x2818) x454))
(assert (= (and x4012 x1221) x2149))
(assert (x1417 x704))
(assert (= x2511 (x1769 (x3010 x2511))))
(assert (= (and x4320 (not x1480)) x816))
(assert (x1417 x1757))
(assert (x3931 x561))
(assert (= (=> (and (= x3382 x2284) (= x42 0)) x718) x1754))
(assert (x1417 x3085))
(assert (x1417 x1254))
(assert (x1417 x2755))
(assert (= x4005 (=> (and (= 0 x1757) (= x1860 x2626)) x848)))
(assert (= x3640 (and x1967 (not x1690))))
(assert (x1417 x1439))
(assert (= x960 (and (not x541) x3284)))
(assert (= (and x3301 (not x268)) x2280))
(assert (= x220 (x1769 (x3010 x220))))
(assert (x1417 x820))
(assert (x1417 x2257))
(assert (x1417 x2916))
(assert (x1417 x2851))
(assert (= (and x1852 (not x1304)) x2831))
(assert (= x1465 (or x1369 x2837)))
(assert (= (or x2496 x1335) x3540))
(assert (= x424 (and (not x199) x1990)))
(assert (x1417 x1860))
(assert (= (and x1 x855) x3166))
(assert (=> (<= x1422 10000) (= (x3010 x1422) (x2486 x1422))))
(assert (= (and x667 x809) x1771))
(assert (= (=> (and (= 0 x1302) (= x3382 x1644)) x2420) x2524))
(assert (x1417 x4233))
(assert (= 157198259 (x1769 (x2486 157198259))))
(assert (= x1102 (x1769 (x3010 x1102))))
(assert (x1417 x4175))
(assert (x1417 x2743))
(assert (x1417 x3570))
(assert (= x2876 (x1769 (x3010 x2876))))
(assert (= (and x3137 x2699) x2444))
(assert (= x1504 (or x2240 x509 x3129 x149 x3556 x1796 x3739)))
(assert (x1417 x2719))
(assert (= (and x2186 (not x3027)) x1948))
(assert (= (and x1273 x1196) x2936))
(assert (= (and x2817 x2293) x3819))
(assert (x1417 x574))
(assert (= (x2486 3187245334) (x3010 3187245334)))
(assert (x1417 x592))
(assert (x1417 x2201))
(assert (= x2648 (x1769 (x3010 x2648))))
(assert (x1417 x2294))
(assert (= (and x4014 x4101) x3590))
(assert (x1417 x910))
(assert (x1417 x2021))
(assert (= (or x50 x3241 x147 x4202 x3039 x1735) x3878))
(assert (x1417 x4186))
(assert (= (and x3344 x2764) x263))
(assert (= x2398 (=> (and (= x3072 x2927) (= x1778 x405)) x2620)))
(assert (x1417 x58))
(assert (x1417 x2010))
(assert (x1417 x1937))
(assert (x1417 x3440))
(assert (x1417 x110))
(assert (x1417 x313))
(assert (= (=> (and (= x1860 x152) (= 0 x1111)) x3494) x2947))
(assert (= (and x38 x1885) x764))
(assert (= x1424 (and x539 (not x4290))))
(assert (=> (<= x2809 10000) (= (x3010 x2809) (x2486 x2809))))
(assert (= (and (not x2963) x2013) x3687))
(assert (= x3269 (and x3616 (not x2015))))
(assert (x3931 x220))
(assert (= (=> (and (= x1782 (x3278 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1298)) (not (or (> x4040 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4040 32) (= true (<= x4040 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= 0 x3138)) (= x1298 (x203 (+ 31 x4040))) (= x2570 (= x845 x4186)) (= (x3057 (- x1183 x636)) x4112) (= (x252 (x3010 x845)) x3138) (= x3809 (x203 (+ 4 x636))) (= x3577 (x1781 x2679)) (= x636 (x203 (+ x2679 x1782))) (not (= 0 x1563)) (= (x203 (+ 32 x3809)) x1183)) (and (=> (and x2570 (and (= x4311 20853193852723734048814770637610870652489083209607696777694672748161462697984) (= x3890 (x252 (x3010 x4186))) (< 0 x3890) (< x2887 2376452955) (= x2740 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1215)) (< x1215 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1215))) (< x2887 872247156) (not (= 649617121 x2887)) (= x2887 773487949) (= 36 x1791) (= x1791 x4112) (= x759 x3577) (not (< x2887 649617121)) (= x1215 (x3057 (- x1791 4))) (not (< x1791 4)))) (and (=> (and x2740 (= x2247 x990)) x1068) (=> (and (not x2740) (and (<= 0 x1905) (= (= x1905 x878) x3913) (> 1461501637330902918203684832716283019655932542976 x1905) (>= 1461501637330902918203684832716283019655932542975 x1905) (= x2064 (div x3577 2)) (= x1861 x759))) (and (=> (and (not x3913) (= x2247 x990)) x1068) (=> (and x3913 (= (= 0 x878) x4101)) (and (=> (and (= x990 x2247) x4101) x1068) (=> (and (not x4101) (= (= x2064 0) x2935)) (and (=> (and (= x990 x2247) x2935) x1068) (=> (and (not x2935) (and (>= x2247 0) (<= x2247 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2406 (< x2247 x2064)))) (and (=> (and (not x2406) (and (= (x3057 (- x2247 x2064)) x1333) (<= x1694 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3168 (x3057 (- x2247 x2064))) (>= x1694 0) (= x433 (< x1694 x2064)) (= x1694 (x1630 x4083)) (= x4083 (x1460 (x3010 x878) (x2486 2) 0)))) (and (=> (and x433 (= x1333 x990)) x1068) (=> (and (and (= x2371 (x3057 (- x1694 x2064))) (< x2463 1461501637330902918203684832716283019655932542976) (= 128 x572) (= x2773 (= x2463 x4186)) (= x2114 (x1460 (x3010 x878) (x2486 2) 0)) (<= 0 x2463) (>= 1461501637330902918203684832716283019655932542975 x2463)) (not x433)) (and (=> (and (= x3859 (= x2463 x4031)) (not x2773)) (and (=> (and (= (= x170 x2463) x2616) (not x3859)) (and (=> (and (= x1458 (= x2648 x2463)) (not x2616)) (and (=> (and x1458 (and (< 0 x3944) (not (= x2768 826074471)) (= x878 x1174) (= x3944 (x252 (x3010 x2648))) (not (= 2376452955 x2768)) (= (x3057 (- x4366 4)) x3512) (= x2768 2835717307) (not (= 1889567281 x2768)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3947) (= x1386 (or (and (< x3512 64) (= true (<= x3512 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3512 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4182 x1861) (= 68 x4366) (not (> 826074471 x2768)) (= 68 x4366) (not (= x2768 2514000705)) (not (< x4366 4)))) (and (=> x1386 x2997) (=> (and (not x1386) (and (= x3293 (= x1174 x878)) (= x1133 x1174))) (and (=> (and x3293 (and (>= x3224 0) (<= x3224 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3224 (x2951 x4049)) (= (> x1861 x3224) x3515) (= x4114 x4182) (= (x1460 (x3010 x4186) (x2486 2) 0) x4049))) (and (=> x3515 x2997) (=> (and (not x3515) (= (< x3224 x4182) x1412)) (and (=> x1412 x2997) (=> (and (and (= x4268 (x1460 (x3010 x4186) (x2486 2) 0)) (= x701 (< x2908 x2974)) (= (x3057 (- x3224 x4182)) x911) (= x2908 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4182))) (<= x2974 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2974 0) (= (x2055 x2425) x2974) (= (x1460 (x3010 x1174) (x2486 2) 0) x2425)) (not x1412)) (and (=> x701 x2997) (=> (and (and (= x2262 (x203 (+ x2974 x4182))) (= x2015 (< x2262 x2974))) (not x701)) (and (=> (and (and (= x159 32) (= 1 x2318) (= x4340 (x1460 (x3010 x1174) (x2486 2) 0))) (not x2015)) x3247) (=> x2015 x2997))))))))) (=> (not x3293) x2997))))) (=> (and (not x1458) (= x3433 (= x2463 x1376))) (and (=> (and (= x2677 (= x2463 x1864)) (not x3433)) (and (=> (and (and (< 0 x4350) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1890) (= (x252 (x3010 x1864)) x4350) (= x497 68) (= x497 68) (= x2606 2835717307) (= x1861 x4171) (= (x3057 (- x497 4)) x1359) (= x878 x3098) (not (= x2606 1889567281)) (not (= x2606 826074471)) (not (> 826074471 x2606)) (not (= x2606 2376452955)) (= x2389 (or (> x1359 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1359) (= (<= x1359 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (< x497 4)) (not (= x2606 2514000705))) x2677) (and (=> x2389 x2783) (=> (and (and (= x3098 x3480) (= x1915 (= x878 x3098))) (not x2389)) (and (=> (and x1915 (and (= x2023 (x2776 x1404)) (= x1404 (x1460 (x3010 x4186) (x2486 2) 0)) (= x489 x4171) (<= x2023 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2023) (= x3084 (< x2023 x1861)))) (and (=> x3084 x2783) (=> (and (not x3084) (= x3081 (> x4171 x2023))) (and (=> (and (not x3081) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2453) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4171)) x143) (= x3205 (< x143 x2453)) (= x562 (x1460 (x3010 x4186) (x2486 2) 0)) (= (x3049 x2431) x2453) (= (x1460 (x3010 x3098) (x2486 2) 0) x2431) (<= 0 x2453) (= (x3057 (- x2023 x4171)) x3625))) (and (=> (and (not x3205) (and (= x2963 (< x4207 x2453)) (= x4207 (x203 (+ x4171 x2453))))) (and (=> (and (and (= 1 x2805) (= x1855 (x1460 (x3010 x3098) (x2486 2) 0)) (= 32 x384)) (not x2963)) x1330) (=> x2963 x2783))) (=> x3205 x2783))) (=> x3081 x2783))))) (=> (not x1915) x2783))))) (=> (and (not x2677) (and (and (and (= x1861 x2834) (not (= x438 1889567281)) (not (= x438 826074471)) (not (< x438 826074471)) (= (or (and (< x4360 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4360) true)) (> x4360 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x148) (> x404 0) (not (> 4 x4338)) (not (= x438 2376452955)) (= x1147 x878) (not (= x438 2514000705)) (= x4360 (x3057 (- x4338 4))) (= x4338 68) (= (x252 (x3010 x1358)) x404) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2668) (= 2835717307 x438) (= 68 x4338)) x3689) (= x3689 (= x1358 x2463)))) (and (=> x148 x3599) (=> (and (and (= (= x1147 x878) x2129) (= x1147 x1683)) (not x148)) (and (=> (and x2129 (and (= x2061 (x2658 x2478)) (<= 0 x2061) (= x2299 x2834) (= x2506 (> x1861 x2061)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2061) (= (x1460 (x3010 x4186) (x2486 2) 0) x2478))) (and (=> x2506 x3599) (=> (and (= (> x2834 x2061) x100) (not x2506)) (and (=> (and (and (<= 0 x1979) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1979) (= x2631 (x1460 (x3010 x1147) (x2486 2) 0)) (= x3294 (> x1979 x2953)) (= x2953 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2834))) (= (x3057 (- x2061 x2834)) x3299) (= (x2314 x2631) x1979) (= (x1460 (x3010 x4186) (x2486 2) 0) x2027)) (not x100)) (and (=> (and (and (= (x203 (+ x2834 x1979)) x4293) (= (> x1979 x4293) x583)) (not x3294)) (and (=> (and (and (= 1 x2296) (= x1006 32) (= x2603 (x1460 (x3010 x1147) (x2486 2) 0))) (not x583)) x4321) (=> x583 x3599))) (=> x3294 x3599))) (=> x100 x3599))))) (=> (not x2129) x3599))))))) (=> (and (and (not (= 2514000705 x1599)) (= x2735 (x3057 (- x3720 4))) (= x1861 x2678) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1901) (not (= 2376452955 x1599)) (not (= 1889567281 x1599)) (> x352 0) (= x1439 x878) (not (< x3720 4)) (= x1403 (or (and (= (<= x2735 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2735 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2735))) (= x352 (x252 (x3010 x1376))) (not (= 1086394137 x1599)) (= 68 x3720) (= 68 x3720) (not (> 1086394137 x1599)) (= x1599 2835717307)) x3433) (and (=> (and (not x1403) (and (= (= x1439 x878) x1873) (= x1439 x3604))) (and (=> (not x1873) x2823) (=> (and (and (= x3456 (x1032 x2110)) (<= x3456 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x3456 x1861) x136) (= x3543 x2678) (>= x3456 0) (= (x1460 (x3010 x4186) (x2486 2) 0) x2110)) x1873) (and (=> x136 x2823) (=> (and (= x3386 (< x3456 x2678)) (not x136)) (and (=> x3386 x2823) (=> (and (and (= x964 (x1460 (x3010 x1439) (x2486 2) 0)) (= (x3057 (- x3456 x2678)) x1809) (= x3929 (x1460 (x3010 x4186) (x2486 2) 0)) (>= x781 0) (= x3405 (< x1156 x781)) (<= x781 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x781 (x4015 x964)) (= x1156 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2678)))) (not x3386)) (and (=> x3405 x2823) (=> (and (not x3405) (and (= x602 (> x781 x327)) (= x327 (x203 (+ x2678 x781))))) (and (=> (and (and (= x405 32) (= x2927 1) (= x1540 (x1460 (x3010 x1439) (x2486 2) 0))) (not x602)) x2398) (=> x602 x2823))))))))))) (=> x1403 x2823))))))) (=> (and x2616 (and (= x575 (x252 (x3010 x170))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3804) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3804)) (> 64 x3804))) x2367) (= 2835717307 x1073) (= x3996 x878) (= (x3057 (- x4134 4)) x3804) (not (= x1073 2376452955)) (= x4134 68) (not (= 1889567281 x1073)) (not (> 826074471 x1073)) (not (> 4 x4134)) (not (= x1073 2514000705)) (= x1051 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x575 0) (= x4134 68) (not (= 826074471 x1073)) (= x1861 x1277))) (and (=> x2367 x2828) (=> (and (not x2367) (and (= x2585 (= x3996 x878)) (= x967 x3996))) (and (=> (and x2585 (and (<= x72 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x72 x1861) x1155) (>= x72 0) (= x3918 (x1460 (x3010 x4186) (x2486 2) 0)) (= x3768 x1277) (= x72 (x1208 x3918)))) (and (=> x1155 x2828) (=> (and (= x2378 (> x1277 x72)) (not x1155)) (and (=> x2378 x2828) (=> (and (not x2378) (and (= (x3248 x3450) x894) (= x3624 (x1460 (x3010 x4186) (x2486 2) 0)) (= x3662 (> x894 x3592)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x894) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277)) x3592) (<= 0 x894) (= x3450 (x1460 (x3010 x3996) (x2486 2) 0)) (= x3156 (x3057 (- x72 x1277))))) (and (=> (and (not x3662) (and (= x3935 (x203 (+ x1277 x894))) (= (> x894 x3935) x3121))) (and (=> (and (not x3121) (and (= 1 x3914) (= 32 x3736) (= x2165 (x1460 (x3010 x3996) (x2486 2) 0)))) x3864) (=> x3121 x2828))) (=> x3662 x2828))))))) (=> (not x2585) x2828))))))) (=> (and x3859 (and (= 2835717307 x2792) (= x879 68) (= x2135 (x252 (x3010 x4031))) (= x3071 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x2792 2678909723)) (not (< x879 4)) (= x878 x2327) (= x1861 x2513) (= x879 68) (= (x3057 (- x879 4)) x4203) (not (> 2376452955 x2792)) (= x1588 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4203) (and (> 64 x4203) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4203) true)))) (< 0 x2135) (not (= x2792 2678909723)) (< x2792 3065339685))) (and (=> x1588 x4141) (=> (and (and (= x3603 (= x878 x2327)) (= x3744 x2327)) (not x1588)) (and (=> (and x3603 (and (= (x188 x2897) x1982) (<= x1982 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1982 0) (= (x1460 (x3010 x4186) (x2486 2) 0) x2897) (= x914 x2513) (= x3024 (< x1982 x1861)))) (and (=> x3024 x4141) (=> (and (= (< x1982 x2513) x613) (not x3024)) (and (=> x613 x4141) (=> (and (and (>= x3126 0) (= (< x1464 x3126) x3817) (= x2691 (x3057 (- x1982 x2513))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3126) (= x4296 (x1460 (x3010 x2327) (x2486 2) 0)) (= x1464 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2513))) (= (x1460 (x3010 x4186) (x2486 2) 0) x2681) (= (x1004 x4296) x3126)) (not x613)) (and (=> x3817 x4141) (=> (and (and (= x3454 (< x1294 x3126)) (= (x203 (+ x2513 x3126)) x1294)) (not x3817)) (and (=> (and (and (= (x1460 (x3010 x2327) (x2486 2) 0) x3427) (= 1 x1142) (= 32 x3397)) (not x3454)) x1037) (=> x3454 x4141))))))))) (=> (not x3603) x4141))))))) (=> (and x2773 (and (= (x252 (x3010 x4186)) x4081) (not (= 2678909723 x3446)) (= x1042 (x3057 (- x1808 4))) (< x3446 3065339685) (> x4081 0) (= 68 x1808) (not (> 2376452955 x3446)) (= x3446 2835717307) (not (< x1808 4)) (= (or (> x1042 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1042 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1042)))) x4223) (= x546 x1861) (= x2161 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2678909723 x3446)) (= x878 x240) (= x1808 68))) (and (=> x4223 x3195) (=> (and (not x4223) (and (= x3952 (= x240 x878)) (= x240 x2952))) (and (=> (and x3952 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1874) (= (x287 x880) x1874) (= (> x1861 x1874) x268) (<= 0 x1874) (= x2667 x546) (= x880 (x1460 (x3010 x4186) (x2486 2) 0)))) (and (=> (and (= x76 (> x546 x1874)) (not x268)) (and (=> (and (and (= (x1460 (x3010 x4186) (x2486 2) 0) x675) (= (x1460 (x3010 x240) (x2486 2) 0) x4143) (= x2218 (x3057 (- x1874 x546))) (= x430 (x1284 x4143)) (>= x430 0) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x546)) x593) (<= x430 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x593 x430) x1463)) (not x76)) (and (=> x1463 x3195) (=> (and (not x1463) (and (= (x203 (+ x546 x430)) x1894) (= (< x1894 x430) x2476))) (and (=> x2476 x3195) (=> (and (not x2476) (and (= x377 (x1460 (x3010 x240) (x2486 2) 0)) (= x1251 1) (= 32 x3647))) x2230))))) (=> x76 x3195))) (=> x268 x3195))) (=> (not x3952) x3195))))))))) (=> (and (= x2247 x990) x2406) x1068))))))))))) (=> (and (not x2570) (= x1841 (= x4031 x845))) (and (=> (and (and (= 773487949 x2969) (= (x252 (x3010 x4031)) x3829) (not (= 649617121 x2969)) (= x4092 (or (and (> 32 x586) (= (<= x586 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x586 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x2969 872247156) (= x4112 x3339) (< 0 x3829) (not (< x3339 4)) (< x2969 2376452955) (= 36 x3339) (not (< x2969 649617121)) (= x586 (x3057 (- x3339 4))) (= x3577 x4221) (= x749 20853193852723734048814770637610870652489083209607696777694672748161462697984)) x1841) (and (=> (and (not x4092) (and (>= x610 0) (= x1321 (div x3577 2)) (= x4221 x2179) (= x3274 (= x610 x878)) (> 1461501637330902918203684832716283019655932542976 x610) (<= x610 1461501637330902918203684832716283019655932542975))) (and (=> (and x3274 (= x340 (= x878 0))) (and (=> (and (not x340) (= x306 (= 0 x1321))) (and (=> (and (= x1813 x3798) x306) x4208) (=> (and (and (= (> x1321 x3798) x2771) (>= x3798 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3798)) (not x306)) (and (=> (and (= x3798 x1813) x2771) x4208) (=> (and (not x2771) (and (>= x3319 0) (= (x3057 (- x3798 x1321)) x3997) (= (x3057 (- x3798 x1321)) x2066) (= (x1460 (x3010 x878) (x2486 2) 0) x1026) (<= x3319 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x188 x1026) x3319) (= (> x1321 x3319) x1349))) (and (=> (and (= x1813 x3997) x1349) x4208) (=> (and (not x1349) (and (<= 0 x3381) (<= x3381 1461501637330902918203684832716283019655932542975) (= (x3057 (- x3319 x1321)) x3395) (= x59 (= x3381 x4186)) (> 1461501637330902918203684832716283019655932542976 x3381) (= 128 x1553) (= (x1460 (x3010 x878) (x2486 2) 0) x2319))) (and (=> (and x59 (and (= x878 x1165) (= x402 68) (= x402 68) (= (x252 (x3010 x4186)) x264) (= x90 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< x1879 3065339685) (not (> 2376452955 x1879)) (not (< x402 4)) (= x4362 (or (> x2028 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2028)) (< x2028 64)))) (not (= x1879 2678909723)) (= 2835717307 x1879) (= x2179 x2647) (not (< x1879 2678909723)) (= x2028 (x3057 (- x402 4))) (> x264 0))) (and (=> (and (and (= x885 x1165) (= (= x878 x1165) x1071)) (not x4362)) (and (=> (not x1071) x1747) (=> (and x1071 (and (= (x1460 (x3010 x4031) (x2486 2) 0) x3169) (<= 0 x1131) (= x367 x2647) (= x1131 (x1630 x3169)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1131) (= x174 (< x1131 x2179)))) (and (=> x174 x1747) (=> (and (= (> x2647 x1131) x3711) (not x174)) (and (=> x3711 x1747) (=> (and (not x3711) (and (= x3357 (< x1843 x3511)) (= x1909 (x1460 (x3010 x4031) (x2486 2) 0)) (= x657 (x1460 (x3010 x1165) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3511) (= x250 (x3057 (- x1131 x2647))) (>= x3511 0) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2647)) x1843) (= (x1888 x657) x3511))) (and (=> (and (not x3357) (and (= (> x3511 x1486) x3621) (= (x203 (+ x2647 x3511)) x1486))) (and (=> x3621 x1747) (=> (and (not x3621) (and (= x3141 1) (= x2829 32) (= (x1460 (x3010 x1165) (x2486 2) 0) x225))) x2736))) (=> x3357 x1747))))))))) (=> x4362 x1747))) (=> (and (= x3134 (= x4031 x3381)) (not x59)) (and (=> (and (and (= x1908 x878) (= (or (> x1988 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1988)) (> 64 x1988))) x2150) (not (> 2376452955 x1392)) (not (> 4 x1827)) (= x2179 x1904) (= 2835717307 x1392) (= 68 x1827) (= x3482 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1988 (x3057 (- x1827 4))) (< x1392 3065339685) (not (< x1392 2678909723)) (> x2441 0) (= x2441 (x252 (x3010 x4031))) (not (= 2678909723 x1392)) (= 68 x1827)) x3134) (and (=> (and (not x2150) (and (= x1908 x3807) (= (= x878 x1908) x4200))) (and (=> (and (and (= x1666 (x1460 (x3010 x4031) (x2486 2) 0)) (= x632 (> x2179 x2446)) (= x2446 (x1530 x1666)) (= x1413 x1904) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2446) (>= x2446 0)) x4200) (and (=> (and (not x632) (= x3787 (> x1904 x2446))) (and (=> (and (not x3787) (and (<= x1820 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1619 (x3057 (- x2446 x1904))) (>= x1820 0) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1904)) x2633) (= x365 (x1460 (x3010 x4031) (x2486 2) 0)) (= x2473 (< x2633 x1820)) (= x1820 (x3880 x1372)) (= x1372 (x1460 (x3010 x1908) (x2486 2) 0)))) (and (=> (and (and (= x1535 (x203 (+ x1904 x1820))) (= (> x1820 x1535) x989)) (not x2473)) (and (=> (and (not x989) (and (= 32 x1685) (= x283 (x1460 (x3010 x1908) (x2486 2) 0)) (= 1 x1714))) x3083) (=> x989 x331))) (=> x2473 x331))) (=> x3787 x331))) (=> x632 x331))) (=> (not x4200) x331))) (=> x2150 x331))) (=> (and (= (= x170 x3381) x2198) (not x3134)) (and (=> (and x2198 (and (> x205 0) (= (x252 (x3010 x170)) x205) (= (x3057 (- x2851 4)) x3956) (= 2835717307 x3467) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x792) (not (= x3467 826074471)) (not (= x3467 2514000705)) (= x4128 x878) (not (> 4 x2851)) (= 68 x2851) (not (> 826074471 x3467)) (= (or (and (> 64 x3956) (= (<= x3956 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x3956 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2594) (not (= 2376452955 x3467)) (= 68 x2851) (not (= x3467 1889567281)) (= x3691 x2179))) (and (=> (and (not x2594) (and (= x3103 x4128) (= x75 (= x4128 x878)))) (and (=> (and (and (= x3691 x2866) (= x315 (x1208 x2458)) (= (< x315 x2179) x153) (= (x1460 (x3010 x4031) (x2486 2) 0) x2458) (<= x315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x315 0)) x75) (and (=> x153 x3022) (=> (and (= x1639 (< x315 x3691)) (not x153)) (and (=> x1639 x3022) (=> (and (not x1639) (and (= (x3057 (- x315 x3691)) x2686) (= (x1460 (x3010 x4031) (x2486 2) 0) x1816) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58) (= (> x58 x3631) x1025) (<= 0 x58) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3691)) x3631) (= (x1460 (x3010 x4128) (x2486 2) 0) x3207) (= (x648 x3207) x58))) (and (=> (and (not x1025) (and (= x21 (x203 (+ x58 x3691))) (= (> x58 x21) x2368))) (and (=> (and (not x2368) (and (= x3493 (x1460 (x3010 x4128) (x2486 2) 0)) (= x1141 1) (= 32 x917))) x529) (=> x2368 x3022))) (=> x1025 x3022))))))) (=> (not x75) x3022))) (=> x2594 x3022))) (=> (and (= (= x2648 x3381) x699) (not x2198)) (and (=> (and (and (= 2835717307 x2060) (not (= x2060 2376452955)) (= x2607 (or (and (= true (<= x1823 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1823 64)) (> x1823 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3509) (= x3936 x878) (= x3522 x2179) (not (= 826074471 x2060)) (not (= 1889567281 x2060)) (= 68 x4052) (not (= x2060 2514000705)) (> x476 0) (= x1823 (x3057 (- x4052 4))) (not (< x2060 826074471)) (= (x252 (x3010 x2648)) x476) (= x4052 68) (not (> 4 x4052))) x699) (and (=> x2607 x1970) (=> (and (and (= x2341 x3936) (= (= x878 x3936) x3534)) (not x2607)) (and (=> (and x3534 (and (= x738 (x1460 (x3010 x4031) (x2486 2) 0)) (<= 0 x3861) (= x3522 x464) (= x3861 (x2951 x738)) (<= x3861 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x3861 x2179) x1177))) (and (=> (and (= x3948 (< x3861 x3522)) (not x1177)) (and (=> (and (and (= (> x3423 x2772) x18) (= x3423 (x3130 x1622)) (>= x3423 0) (<= x3423 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x822 (x3057 (- x3861 x3522))) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3522)) x2772) (= (x1460 (x3010 x3936) (x2486 2) 0) x1622) (= (x1460 (x3010 x4031) (x2486 2) 0) x3576)) (not x3948)) (and (=> (and (and (= x2107 (x203 (+ x3423 x3522))) (= x3179 (< x2107 x3423))) (not x18)) (and (=> x3179 x1970) (=> (and (and (= x244 1) (= (x1460 (x3010 x3936) (x2486 2) 0) x3185) (= 32 x2666)) (not x3179)) x1238))) (=> x18 x1970))) (=> x3948 x1970))) (=> x1177 x1970))) (=> (not x3534) x1970))))) (=> (and (= x2791 (= x3381 x1376)) (not x699)) (and (=> (and (not x2791) (= x2509 (= x1864 x3381))) (and (=> (and (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1356) (and (= (<= x1356 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1356))) x4045) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x527) (not (= x3435 1889567281)) (= 68 x548) (= (x3057 (- x548 4)) x1356) (not (= x3435 826074471)) (> x1206 0) (= x184 x2179) (not (= x3435 2514000705)) (= x1206 (x252 (x3010 x1864))) (not (> 4 x548)) (= x878 x3490) (= 2835717307 x3435) (not (= 2376452955 x3435)) (not (< x3435 826074471)) (= 68 x548)) x2509) (and (=> (and (and (= x4281 (= x3490 x878)) (= x1723 x3490)) (not x4045)) (and (=> (and x4281 (and (= (< x608 x2179) x3352) (<= 0 x608) (= (x2776 x1189) x608) (= x138 x184) (= x1189 (x1460 (x3010 x4031) (x2486 2) 0)) (<= x608 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x3352) (= x757 (< x608 x184))) (and (=> (and (not x757) (and (= (x316 x3840) x1490) (= x3448 (x1460 (x3010 x4031) (x2486 2) 0)) (= (x3057 (- x608 x184)) x458) (>= x1490 0) (= x1353 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x184))) (= x325 (< x1353 x1490)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1490) (= x3840 (x1460 (x3010 x3490) (x2486 2) 0)))) (and (=> x325 x1936) (=> (and (not x325) (and (= (> x1490 x4367) x3697) (= x4367 (x203 (+ x184 x1490))))) (and (=> (and (and (= (x1460 (x3010 x3490) (x2486 2) 0) x2784) (= x3183 32) (= x3871 1)) (not x3697)) x3471) (=> x3697 x1936))))) (=> x757 x1936))) (=> x3352 x1936))) (=> (not x4281) x1936))) (=> x4045 x1936))) (=> (and (not x2509) (and (and x368 (and (= (x3057 (- x1170 4)) x3716) (not (> 4 x1170)) (= 2835717307 x3035) (= x878 x1160) (< 0 x1743) (= x2719 x2179) (not (= x3035 826074471)) (not (= 2376452955 x3035)) (not (< x3035 826074471)) (not (= x3035 2514000705)) (= x1743 (x252 (x3010 x1358))) (= (or (and (> 64 x3716) (= (<= x3716 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3716)) x1509) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2049) (= 68 x1170) (not (= 1889567281 x3035)) (= 68 x1170))) (= (= x1358 x3381) x368))) (and (=> x1509 x753) (=> (and (not x1509) (and (= x1160 x1976) (= (= x878 x1160) x1134))) (and (=> (and x1134 (and (= x2719 x1306) (= (x2658 x760) x2010) (= (> x2179 x2010) x15) (= (x1460 (x3010 x4031) (x2486 2) 0) x760) (<= x2010 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2010))) (and (=> x15 x753) (=> (and (= (< x2010 x2719) x485) (not x15)) (and (=> x485 x753) (=> (and (and (= x4078 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2719))) (= (x1460 (x3010 x1160) (x2486 2) 0) x1601) (= x1949 (x576 x1601)) (<= 0 x1949) (= (< x4078 x1949) x227) (= x3761 (x1460 (x3010 x4031) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1949) (= x3118 (x3057 (- x2010 x2719)))) (not x485)) (and (=> x227 x753) (=> (and (and (= x3759 (> x1949 x2445)) (= x2445 (x203 (+ x2719 x1949)))) (not x227)) (and (=> (and (not x3759) (and (= x637 32) (= 1 x4071) (= x550 (x1460 (x3010 x1160) (x2486 2) 0)))) x1182) (=> x3759 x753))))))))) (=> (not x1134) x753))))))) (=> (and (and (= x744 68) (= (or (> x3393 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3393 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3393)))) x3426) (= x3393 (x3057 (- x744 4))) (not (> 4 x744)) (= x2802 (x252 (x3010 x1376))) (= x4140 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 1086394137 x2140)) (> x2802 0) (= x1090 x2179) (not (= 2514000705 x2140)) (not (> 1086394137 x2140)) (= x878 x2876) (= 68 x744) (= x2140 2835717307) (not (= 2376452955 x2140)) (not (= 1889567281 x2140))) x2791) (and (=> x3426 x4261) (=> (and (and (= (= x2876 x878) x2653) (= x4333 x2876)) (not x3426)) (and (=> (and (and (= (x1460 (x3010 x4031) (x2486 2) 0) x980) (= x1090 x697) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2532) (= x2532 (x1032 x980)) (= x1851 (> x2179 x2532)) (<= 0 x2532)) x2653) (and (=> x1851 x4261) (=> (and (not x1851) (= x1233 (< x2532 x1090))) (and (=> x1233 x4261) (=> (and (not x1233) (and (= (x1460 (x3010 x4031) (x2486 2) 0) x2561) (= (x3057 (- x2532 x1090)) x3578) (>= x43 0) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1090)) x2462) (= (x4130 x2400) x43) (= (x1460 (x3010 x2876) (x2486 2) 0) x2400) (= (> x43 x2462) x3974) (<= x43 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x3974 x4261) (=> (and (and (= (> x43 x179) x1221) (= (x203 (+ x43 x1090)) x179)) (not x3974)) (and (=> x1221 x4261) (=> (and (not x1221) (and (= 1 x656) (= (x1460 (x3010 x2876) (x2486 2) 0) x3758) (= x4347 32))) x655))))))))) (=> (not x2653) x4261))))))))))))))))))))) (=> (and (= x3798 x1813) x340) x4208))) (=> (and (not x3274) (= x1813 x3798)) x4208))) (=> (and (= x3798 x1813) x4092) x4208))) (=> (and (and (and x2871 (and (= x3376 x3577) (not (> 4 x3532)) (not (= x3365 545886713)) (= (x3057 (- x3532 4)) x1140) (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x1582) (> 893399075 x3365) (< x3365 2376452955) (= (x252 (x3010 x878)) x3767) (= x3532 x4112) (not (> 545886713 x3365)) (= x3365 773487949) (= x3532 36) (not (= x3365 579358252)) (= x660 (or (and (= (<= x1140 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1140 32)) (> x1140 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3767 0))) (= (= x845 x878) x2871)) (not x1841)) (and (=> (and (and x46 (>= x876 0) (<= x876 1461501637330902918203684832716283019655932542975) (= x3727 (x1460 (x3010 x878) (x2486 3) 0)) (= x46 (or x131 x2811)) (= (= x876 0) x1314) (= (x1793 x3727) x876) (= x3376 x1745) (= x131 (= x170 x876)) (= (= x2648 x876) x2811) (> 1461501637330902918203684832716283019655932542976 x876)) (not x660)) (and (=> (and (not x1314) (and (= x2923 (= x3808 0)) (= (x4245 x1283 1) x1408) (= x3808 (x252 (x3010 x380))) (= 128 x1181) (= x1283 (x1460 (x3010 x878) (x2486 3) 0)) (> 1461501637330902918203684832716283019655932542976 x380) (= x293 (or x4115 x4102)) (<= 0 x380) (>= 1461501637330902918203684832716283019655932542975 x380) (= (= x4186 x380) x4115) (= x4102 (= x4031 x380)) x293 (= x380 (x2086 x1408)))) (and (=> (and (not x2923) (= x359 (= x380 x4186))) (and (=> (and x359 (and (= x1940 36) (= x1940 36) (< x204 2376452955) (= x2234 (x252 (x3010 x4186))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x668) (and (< x668 32) (= (<= x668 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2364) (not (= 649617121 x204)) (not (< x204 649617121)) (< x204 872247156) (= 773487949 x204) (= (x3057 (- x1940 4)) x668) (= x2044 20853193852723734048814770637610870652489083209607696777694672748161462697984) (= x1902 x1745) (< 0 x2234) (not (< x1940 4)))) (and (=> (and x2364 (= x1727 x2247)) x1973) (=> (and (not x2364) (and (= x1902 x2033) (= (= x1905 x878) x2663) (= (div x1745 2) x3410) (>= 1461501637330902918203684832716283019655932542975 x1905) (>= x1905 0) (> 1461501637330902918203684832716283019655932542976 x1905))) (and (=> (and x2663 (= (= 0 x878) x3192)) (and (=> (and (= (= x3410 0) x3385) (not x3192)) (and (=> (and x3385 (= x1727 x2247)) x1973) (=> (and (not x3385) (and (= (> x3410 x2247) x3180) (>= x2247 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247))) (and (=> (and x3180 (= x2247 x1727)) x1973) (=> (and (and (= (x1630 x3513) x884) (= x3513 (x1460 (x3010 x878) (x2486 2) 0)) (= x662 (x3057 (- x2247 x3410))) (= x4019 (< x884 x3410)) (<= 0 x884) (<= x884 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x969 (x3057 (- x2247 x3410)))) (not x3180)) (and (=> (and (= x1727 x662) x4019) x1973) (=> (and (and (<= 0 x2463) (< x2463 1461501637330902918203684832716283019655932542976) (= x2991 128) (<= x2463 1461501637330902918203684832716283019655932542975) (= (x1460 (x3010 x878) (x2486 2) 0) x3217) (= (x3057 (- x884 x3410)) x4191) (= x2220 (= x2463 x4186))) (not x4019)) (and (=> (and x2220 (and (not (< x1721 4)) (= x2033 x3858) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3029) (and (< x3029 64) (= (<= x3029 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x881) (= 2835717307 x592) (= (x252 (x3010 x4186)) x3016) (= 68 x1721) (not (> 2678909723 x592)) (= x2643 x878) (= x3029 (x3057 (- x1721 4))) (= x4059 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< 0 x3016) (not (< x592 2376452955)) (< x592 3065339685) (= 68 x1721) (not (= 2678909723 x592)))) (and (=> x881 x3276) (=> (and (not x881) (and (= x802 (= x878 x2643)) (= x2643 x4038))) (and (=> (and x802 (and (= x3003 (x233 x2687)) (= x2864 x3858) (= (x1460 (x3010 x4186) (x2486 2) 0) x2687) (<= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3003 0) (= (< x3003 x2033) x3225))) (and (=> x3225 x3276) (=> (and (not x3225) (= (> x3858 x3003) x951)) (and (=> x951 x3276) (=> (and (not x951) (and (= x1285 (x3057 (- x3003 x3858))) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3858)) x1701) (= (x1460 (x3010 x4186) (x2486 2) 0) x3087) (= (< x1701 x3182) x3092) (<= x3182 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3182 (x1736 x4131)) (= x4131 (x1460 (x3010 x2643) (x2486 2) 0)) (>= x3182 0))) (and (=> x3092 x3276) (=> (and (not x3092) (and (= x3164 (> x3182 x3766)) (= x3766 (x203 (+ x3182 x3858))))) (and (=> x3164 x3276) (=> (and (and (= x4371 1) (= x3028 (x1460 (x3010 x2643) (x2486 2) 0)) (= x150 32)) (not x3164)) x1431))))))))) (=> (not x802) x3276))))) (=> (and (= (= x4031 x2463) x955) (not x2220)) (and (=> (and (and (not (> 2678909723 x743)) (= x1230 x878) (not (> 2376452955 x743)) (= x1783 x2033) (= x1804 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x743 2678909723)) (= (x252 (x3010 x4031)) x3414) (> x3414 0) (not (> 4 x3445)) (= (x3057 (- x3445 4)) x1125) (= x3445 68) (= 2835717307 x743) (= 68 x3445) (= x2317 (or (> x1125 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1125) (= true (<= x1125 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (< x743 3065339685)) x955) (and (=> (and (and (= x2258 (= x878 x1230)) (= x1230 x2721)) (not x2317)) (and (=> (not x2258) x2947) (=> (and (and (= x875 (> x2033 x3313)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3313) (= x1783 x266) (= x3313 (x188 x3772)) (<= 0 x3313) (= (x1460 (x3010 x4186) (x2486 2) 0) x3772)) x2258) (and (=> (and (not x875) (= (< x3313 x1783) x566)) (and (=> x566 x2947) (=> (and (not x566) (and (= x2303 (x1460 (x3010 x1230) (x2486 2) 0)) (= x1534 (x91 x2303)) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1783)) x2846) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1534) (>= x1534 0) (= x103 (> x1534 x2846)) (= x3692 (x1460 (x3010 x4186) (x2486 2) 0)) (= (x3057 (- x3313 x1783)) x4218))) (and (=> (and (and (= x997 (> x1534 x2902)) (= x2902 (x203 (+ x1783 x1534)))) (not x103)) (and (=> (and (and (= (x1460 (x3010 x1230) (x2486 2) 0) x2641) (= 32 x152) (= x1111 1)) (not x997)) x3494) (=> x997 x2947))) (=> x103 x2947))))) (=> x875 x2947))))) (=> x2317 x2947))) (=> (and (not x955) (= x3993 (= x2463 x170))) (and (=> (and (= (= x2648 x2463) x503) (not x3993)) (and (=> (and (not x503) (= (= x1376 x2463) x3783)) (and (=> (and (= (= x1864 x2463) x2244) (not x3783)) (and (=> (and (not x2244) (and (= (= x1358 x2463) x3802) (and x3802 (and (= 68 x670) (> x2659 0) (not (< x670 4)) (= x3634 x2033) (not (= 1889567281 x2290)) (= (or (> x3834 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3834)) (> 64 x3834))) x912) (= x4116 x878) (= x2659 (x252 (x3010 x1358))) (not (= x2290 2514000705)) (= x670 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x713) (= x3834 (x3057 (- x670 4))) (not (= 2376452955 x2290)) (not (= x2290 826074471)) (= x2290 2835717307) (not (> 826074471 x2290)))))) (and (=> x912 x3157) (=> (and (and (= (= x4116 x878) x569) (= x692 x4116)) (not x912)) (and (=> (not x569) x3157) (=> (and x569 (and (= x108 x3634) (= x456 (x2658 x573)) (<= x456 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x456 0) (= (x1460 (x3010 x4186) (x2486 2) 0) x573) (= x2971 (< x456 x2033)))) (and (=> x2971 x3157) (=> (and (not x2971) (= x4276 (< x456 x3634))) (and (=> x4276 x3157) (=> (and (and (<= 0 x3677) (<= x3677 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2945 x734) x3677) (= x2249 (> x3677 x413)) (= (x3057 (- x456 x3634)) x3075) (= (x1460 (x3010 x4186) (x2486 2) 0) x1228) (= x734 (x1460 (x3010 x4116) (x2486 2) 0)) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3634)) x413)) (not x4276)) (and (=> (and (and (= (> x3677 x3575) x280) (= (x203 (+ x3677 x3634)) x3575)) (not x2249)) (and (=> x280 x3157) (=> (and (not x280) (and (= (x1460 (x3010 x4116) (x2486 2) 0) x1005) (= x1423 1) (= x1880 32))) x3186))) (=> x2249 x3157))))))))))) (=> (and (and (not (= x3309 1889567281)) (not (= x3309 826074471)) (not (> 4 x4240)) (> x4286 0) (not (< x3309 826074471)) (not (= x3309 2376452955)) (= x619 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2033 x565) (= 68 x4240) (= x878 x607) (= (x252 (x3010 x1864)) x4286) (= x1057 (x3057 (- x4240 4))) (= 2835717307 x3309) (= x2817 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1057) true) (> 64 x1057)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1057))) (= x4240 68) (not (= 2514000705 x3309))) x2244) (and (=> x2817 x1081) (=> (and (and (= (= x878 x607) x4178) (= x3201 x607)) (not x2817)) (and (=> (not x4178) x1081) (=> (and x4178 (and (= x751 (x2776 x2933)) (= x4358 (< x751 x2033)) (= x2933 (x1460 (x3010 x4186) (x2486 2) 0)) (>= x751 0) (<= x751 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x206 x565))) (and (=> (and (not x4358) (= x3210 (> x565 x751))) (and (=> (and (and (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x565)) x630) (= x1498 (x1460 (x3010 x607) (x2486 2) 0)) (<= x3595 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1595 (> x3595 x630)) (= (x1460 (x3010 x4186) (x2486 2) 0) x3489) (= (x3057 (- x751 x565)) x1354) (= (x2469 x1498) x3595) (>= x3595 0)) (not x3210)) (and (=> (and (not x1595) (and (= (< x2695 x3595) x1480) (= (x203 (+ x3595 x565)) x2695))) (and (=> x1480 x1081) (=> (and (not x1480) (and (= (x1460 (x3010 x607) (x2486 2) 0) x2160) (= x3601 32) (= 1 x2510))) x4064))) (=> x1595 x1081))) (=> x3210 x1081))) (=> x4358 x1081))))))))) (=> (and (and (= x2269 (x3057 (- x449 4))) (not (= x2844 2376452955)) (= 2835717307 x2844) (= x2008 x2033) (not (= 2514000705 x2844)) (= 68 x449) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x4364) (= x4099 (or (and (< x2269 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2269))) (> x2269 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1658 x878) (= 68 x449) (not (> 1086394137 x2844)) (not (= 1889567281 x2844)) (= x805 (x252 (x3010 x1376))) (> x805 0) (not (= x2844 1086394137)) (not (< x449 4))) x3783) (and (=> x4099 x3735) (=> (and (and (= x2374 (= x878 x1658)) (= x2754 x1658)) (not x4099)) (and (=> (and (and (= (< x2950 x2033) x3892) (= x2950 (x1032 x671)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2950) (<= 0 x2950) (= x858 x2008) (= (x1460 (x3010 x4186) (x2486 2) 0) x671)) x2374) (and (=> x3892 x3735) (=> (and (= (> x2008 x2950) x1225) (not x3892)) (and (=> (and (and (= x1319 (x3057 (- x2950 x2008))) (= x2379 (> x1116 x970)) (<= 0 x1116) (= x1116 (x1662 x1030)) (= (x1460 (x3010 x4186) (x2486 2) 0) x4174) (= x970 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2008))) (<= x1116 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1460 (x3010 x1658) (x2486 2) 0) x1030)) (not x1225)) (and (=> (and (and (= (x203 (+ x1116 x2008)) x710) (= (< x710 x1116) x2699)) (not x2379)) (and (=> x2699 x3735) (=> (and (and (= (x1460 (x3010 x1658) (x2486 2) 0) x2929) (= x2365 1) (= x2688 32)) (not x2699)) x1587))) (=> x2379 x3735))) (=> x1225 x3735))))) (=> (not x2374) x3735))))))) (=> (and x503 (and (= (x3057 (- x1786 4)) x249) (= x4189 x878) (= x4000 (or (> x249 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x249 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x249)))) (not (= x3724 2514000705)) (not (< x1786 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1291) (= x1786 68) (= x1786 68) (not (= 826074471 x3724)) (not (= 2376452955 x3724)) (< 0 x3559) (= x3724 2835717307) (= x3223 x2033) (not (< x3724 826074471)) (= x3559 (x252 (x3010 x2648))) (not (= x3724 1889567281)))) (and (=> (and (and (= x3112 x4189) (= (= x4189 x878) x3061)) (not x4000)) (and (=> (and x3061 (and (<= x1898 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3213 (> x2033 x1898)) (= (x2951 x731) x1898) (>= x1898 0) (= (x1460 (x3010 x4186) (x2486 2) 0) x731) (= x3986 x3223))) (and (=> x3213 x2271) (=> (and (not x3213) (= (< x1898 x3223) x1692)) (and (=> x1692 x2271) (=> (and (and (= x4147 (x1460 (x3010 x4189) (x2486 2) 0)) (= x134 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3223))) (= x372 (x2447 x4147)) (= (> x372 x134) x2732) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x372) (= x1491 (x1460 (x3010 x4186) (x2486 2) 0)) (= x427 (x3057 (- x1898 x3223))) (>= x372 0)) (not x1692)) (and (=> (and (and (= x12 (< x2075 x372)) (= (x203 (+ x3223 x372)) x2075)) (not x2732)) (and (=> (and (and (= x229 1) (= 32 x707) (= (x1460 (x3010 x4189) (x2486 2) 0) x1232)) (not x12)) x1953) (=> x12 x2271))) (=> x2732 x2271))))))) (=> (not x3061) x2271))) (=> x4000 x2271))))) (=> (and (and (= x719 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x758 2514000705)) (= 2835717307 x758) (not (= x758 1889567281)) (= x2009 68) (= x2009 68) (= x1162 (x252 (x3010 x170))) (= x2822 x878) (not (= 826074471 x758)) (not (= x758 2376452955)) (not (< x2009 4)) (= (x3057 (- x2009 4)) x810) (= x1516 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x810) (and (> 64 x810) (= (<= x810 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x2517 x2033) (< 0 x1162) (not (> 826074471 x758))) x3993) (and (=> (and (not x1516) (and (= x2646 x2822) (= x541 (= x878 x2822)))) (and (=> (and (and (= x3656 x2517) (<= x3704 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1633 (x1460 (x3010 x4186) (x2486 2) 0)) (>= x3704 0) (= x82 (< x3704 x2033)) (= (x1208 x1633) x3704)) x541) (and (=> (and (= x1869 (> x2517 x3704)) (not x82)) (and (=> (and (and (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2517)) x1361) (<= 0 x160) (= x2700 (x3057 (- x3704 x2517))) (= x83 (x1460 (x3010 x2822) (x2486 2) 0)) (= x3027 (< x1361 x160)) (= x160 (x1656 x83)) (<= x160 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1460 (x3010 x4186) (x2486 2) 0) x2410)) (not x1869)) (and (=> x3027 x4005) (=> (and (and (= x3173 (x203 (+ x2517 x160))) (= (> x160 x3173) x3927)) (not x3027)) (and (=> x3927 x4005) (=> (and (not x3927) (and (= (x1460 (x3010 x2822) (x2486 2) 0) x2863) (= 32 x2626) (= 1 x1757))) x848))))) (=> x1869 x4005))) (=> x82 x4005))) (=> (not x541) x4005))) (=> x1516 x4005))))))))))))))) (=> (and x3192 (= x1727 x2247)) x1973))) (=> (and (= x1727 x2247) (not x2663)) x1973))))) (=> (and (= (= x4031 x380) x296) (not x359)) (and (=> (and (and (= x1891 (= x380 x878)) x1891) (not x296)) x2070) (=> (and (and (= x2090 36) (not (< x2490 649617121)) (= x1745 x723) (> 872247156 x2490) (< 0 x2388) (= x4370 (or (> x1844 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1844) (= (<= x1844 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= 649617121 x2490)) (< x2490 2376452955) (= x2490 773487949) (= 36 x2090) (= x1844 (x3057 (- x2090 4))) (not (> 4 x2090)) (= x2388 (x252 (x3010 x4031))) (= x797 20853193852723734048814770637610870652489083209607696777694672748161462697984)) x296) (and (=> (and (not x4370) (and (= x121 x723) (= (div x1745 2) x3190) (<= 0 x610) (> 1461501637330902918203684832716283019655932542976 x610) (= (= x878 x610) x3060) (<= x610 1461501637330902918203684832716283019655932542975))) (and (=> (and x3060 (= x1728 (= 0 x878))) (and (=> (and (= (= x3190 0) x1572) (not x1728)) (and (=> (and (not x1572) (and (= (> x3190 x3798) x3821) (<= x3798 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3798))) (and (=> (and x3821 (= x3798 x3613)) x941) (=> (and (not x3821) (and (= (> x3190 x4249) x2411) (= (x3057 (- x3798 x3190)) x3883) (<= x4249 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x188 x106) x4249) (>= x4249 0) (= x1034 (x3057 (- x3798 x3190))) (= (x1460 (x3010 x878) (x2486 2) 0) x106))) (and (=> (and (and (= (x3057 (- x4249 x3190)) x888) (>= 1461501637330902918203684832716283019655932542975 x3381) (= x1031 128) (>= x3381 0) (= (x1460 (x3010 x878) (x2486 2) 0) x748) (> 1461501637330902918203684832716283019655932542976 x3381) (= (= x4186 x3381) x958)) (not x2411)) (and (=> (and (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2217) (= 2835717307 x3222) (= 68 x1452) (= x1452 68) (= (x3057 (- x1452 4)) x51) (= x4341 x121) (not (< x3222 2376452955)) (< x3222 3065339685) (not (< x1452 4)) (not (> 2678909723 x3222)) (< 0 x3500) (not (= x3222 2678909723)) (= x3500 (x252 (x3010 x4186))) (= (or (> x51 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x51) (= true (<= x51 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1273) (= x2201 x878)) x958) (and (=> (and (and (= x631 x2201) (= (= x878 x2201) x1814)) (not x1273)) (and (=> (and (and (<= x776 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x776 (x1630 x4065)) (>= x776 0) (= (x1460 (x3010 x4031) (x2486 2) 0) x4065) (= x1106 x4341) (= (< x776 x121) x856)) x1814) (and (=> (and (= (< x776 x4341) x3995) (not x856)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2893) (= x3187 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4341))) (= x2893 (x3593 x690)) (>= x2893 0) (= x690 (x1460 (x3010 x2201) (x2486 2) 0)) (= (x3057 (- x776 x4341)) x1772) (= (> x2893 x3187) x390) (= x3643 (x1460 (x3010 x4031) (x2486 2) 0))) (not x3995)) (and (=> x390 x1655) (=> (and (and (= x393 (< x2623 x2893)) (= (x203 (+ x4341 x2893)) x2623)) (not x390)) (and (=> x393 x1655) (=> (and (not x393) (and (= x2306 (x1460 (x3010 x2201) (x2486 2) 0)) (= x3434 32) (= 1 x3036))) x1453))))) (=> x3995 x1655))) (=> x856 x1655))) (=> (not x1814) x1655))) (=> x1273 x1655))) (=> (and (not x958) (= x4290 (= x4031 x3381))) (and (=> (and x4290 (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3902) (= 2835717307 x2004) (= x1224 (x3057 (- x1056 4))) (= (or (and (> 64 x1224) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1224) true)) (> x1224 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1670) (not (> 2678909723 x2004)) (not (> 4 x1056)) (not (= x2004 2678909723)) (< x2004 3065339685) (= x1056 68) (> x2728 0) (= x121 x3622) (= x2728 (x252 (x3010 x4031))) (= x878 x737) (not (< x2004 2376452955)) (= 68 x1056))) (and (=> x1670 x2531) (=> (and (and (= (= x878 x737) x3998) (= x737 x2804)) (not x1670)) (and (=> (and x3998 (and (>= x2720 0) (= x254 (x1460 (x3010 x4031) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2720) (= x3622 x2508) (= x2720 (x4242 x254)) (= x3203 (< x2720 x121)))) (and (=> x3203 x2531) (=> (and (= x614 (< x2720 x3622)) (not x3203)) (and (=> (and (and (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3622)) x3554) (= x2554 (x1460 (x3010 x737) (x2486 2) 0)) (= x201 (x1460 (x3010 x4031) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2199) (>= x2199 0) (= x20 (x3057 (- x2720 x3622))) (= (< x3554 x2199) x1974) (= (x4262 x2554) x2199)) (not x614)) (and (=> x1974 x2531) (=> (and (and (= (x203 (+ x3622 x2199)) x3502) (= (> x2199 x3502) x1760)) (not x1974)) (and (=> (and (and (= 1 x388) (= (x1460 (x3010 x737) (x2486 2) 0) x3838) (= 32 x1930)) (not x1760)) x769) (=> x1760 x2531))))) (=> x614 x2531))))) (=> (not x3998) x2531))))) (=> (and (= x702 (= x3381 x170)) (not x4290)) (and (=> (and (= x727 (= x2648 x3381)) (not x702)) (and (=> (and x727 (and (= x3533 68) (not (= x2618 2514000705)) (not (> 4 x3533)) (> x3966 0) (= x812 (x3057 (- x3533 4))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1605) (= x3966 (x252 (x3010 x2648))) (not (= 1889567281 x2618)) (not (= 826074471 x2618)) (= x1705 x121) (not (< x2618 826074471)) (= x1626 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x812)) (< x812 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x812))) (= 68 x3533) (= 2835717307 x2618) (= x200 x878) (not (= 2376452955 x2618)))) (and (=> x1626 x2127) (=> (and (not x1626) (and (= x2753 x200) (= x2136 (= x200 x878)))) (and (=> (not x2136) x2127) (=> (and x2136 (and (= x916 (< x1938 x121)) (= (x1460 (x3010 x4031) (x2486 2) 0) x3957) (= (x2951 x3957) x1938) (>= x1938 0) (<= x1938 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1705 x3614))) (and (=> x916 x2127) (=> (and (not x916) (= x785 (> x1705 x1938))) (and (=> x785 x2127) (=> (and (not x785) (and (= (> x1014 x2657) x3991) (= (x3057 (- x1938 x1705)) x1231) (= (x1460 (x3010 x200) (x2486 2) 0) x4322) (= x1696 (x1460 (x3010 x4031) (x2486 2) 0)) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1705)) x2657) (>= x1014 0) (<= x1014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1014 (x1547 x4322)))) (and (=> x3991 x2127) (=> (and (and (= (x203 (+ x1705 x1014)) x1620) (= (< x1620 x1014) x2764)) (not x3991)) (and (=> (and (and (= x1227 (x1460 (x3010 x200) (x2486 2) 0)) (= x913 1) (= x2383 32)) (not x2764)) x4329) (=> x2764 x2127))))))))))))) (=> (and (= (= x3381 x1376) x4127) (not x727)) (and (=> (and (and (= x2346 2835717307) (not (< x928 4)) (not (= x2346 1889567281)) (not (= 1086394137 x2346)) (= x928 68) (= x928 68) (= x3548 (x252 (x3010 x1376))) (not (= x2346 2514000705)) (< 0 x3548) (= (or (> x4057 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4057 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4057)))) x2437) (not (> 1086394137 x2346)) (not (= 2376452955 x2346)) (= x223 x121) (= x878 x651) (= x4057 (x3057 (- x928 4))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3235)) x4127) (and (=> (and (and (= x651 x1903) (= (= x878 x651) x3354)) (not x2437)) (and (=> (not x3354) x2815) (=> (and x3354 (and (= x2021 x223) (>= x1419 0) (= (< x1419 x121) x3960) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1419) (= x1435 (x1460 (x3010 x4031) (x2486 2) 0)) (= x1419 (x1032 x1435)))) (and (=> x3960 x2815) (=> (and (= x778 (> x223 x1419)) (not x3960)) (and (=> x778 x2815) (=> (and (not x778) (and (= x768 (x1243 x3708)) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x223)) x3655) (= (x1460 (x3010 x4031) (x2486 2) 0) x4229) (= x601 (< x3655 x768)) (= (x3057 (- x1419 x223)) x3120) (>= x768 0) (<= x768 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1460 (x3010 x651) (x2486 2) 0) x3708))) (and (=> x601 x2815) (=> (and (not x601) (and (= (x203 (+ x768 x223)) x3322) (= x1889 (> x768 x3322)))) (and (=> x1889 x2815) (=> (and (not x1889) (and (= 32 x1397) (= x886 (x1460 (x3010 x651) (x2486 2) 0)) (= 1 x663))) x698))))))))))) (=> x2437 x2815))) (=> (and (not x4127) (= x2493 (= x3381 x1864))) (and (=> (and (not x2493) (and (= (= x3381 x1358) x336) (and x336 (and (not (< x2305 4)) (= x2305 68) (not (= 2514000705 x1063)) (= x915 x121) (< 0 x1038) (= x3106 (x3057 (- x2305 4))) (= (x252 (x3010 x1358)) x1038) (not (= x1063 1889567281)) (= 68 x2305) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3106) true) (> 64 x3106)) (> x3106 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1790) (not (> 826074471 x1063)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2283) (= 2835717307 x1063) (not (= 2376452955 x1063)) (= x1876 x878) (not (= x1063 826074471)))))) (and (=> x1790 x1269) (=> (and (not x1790) (and (= x2986 x1876) (= (= x878 x1876) x343))) (and (=> (not x343) x1269) (=> (and x343 (and (= x1279 (x1460 (x3010 x4031) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2716) (= (x2658 x1279) x2716) (= (> x121 x2716) x3267) (= x1185 x915) (>= x2716 0))) (and (=> (and (= x1526 (< x2716 x915)) (not x3267)) (and (=> (and (not x1526) (and (= (< x623 x1467) x1927) (= (x1460 (x3010 x4031) (x2486 2) 0) x542) (= x1467 (x2001 x3243)) (= x2512 (x3057 (- x2716 x915))) (>= x1467 0) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x915)) x623) (= (x1460 (x3010 x1876) (x2486 2) 0) x3243) (<= x1467 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1927) (and (= x192 (x203 (+ x1467 x915))) (= x1632 (< x192 x1467)))) (and (=> x1632 x1269) (=> (and (and (= x2520 1) (= x3591 32) (= x2675 (x1460 (x3010 x1876) (x2486 2) 0))) (not x1632)) x2598))) (=> x1927 x1269))) (=> x1526 x1269))) (=> x3267 x1269))))))) (=> (and (and (= x1253 x121) (not (= 2514000705 x2295)) (not (= x2295 826074471)) (= x2798 (x3057 (- x2322 4))) (= x878 x2494) (= 68 x2322) (= (x252 (x3010 x1864)) x1731) (= 2835717307 x2295) (not (< x2322 4)) (< 0 x1731) (not (= 1889567281 x2295)) (not (= x2295 2376452955)) (not (< x2295 826074471)) (= x2279 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2322 68) (= x1885 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2798) (and (> 64 x2798) (= (<= x2798 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) x2493) (and (=> (and (and (= x3536 x2494) (= x3048 (= x2494 x878))) (not x1885)) (and (=> (and (and (= (> x121 x3079) x1278) (= x1253 x2582) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3079) (<= 0 x3079) (= (x1460 (x3010 x4031) (x2486 2) 0) x2904) (= x3079 (x2776 x2904))) x3048) (and (=> x1278 x754) (=> (and (= x1021 (> x1253 x3079)) (not x1278)) (and (=> (and (not x1021) (and (<= x2916 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x770 (x1460 (x3010 x2494) (x2486 2) 0)) (>= x2916 0) (= x4068 (x1460 (x3010 x4031) (x2486 2) 0)) (= x2484 (x3057 (- x3079 x1253))) (= x2916 (x626 x770)) (= x3065 (< x2310 x2916)) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1253)) x2310))) (and (=> x3065 x754) (=> (and (and (= x1234 (x203 (+ x1253 x2916))) (= x2050 (> x2916 x1234))) (not x3065)) (and (=> (and (and (= 1 x109) (= x752 (x1460 (x3010 x2494) (x2486 2) 0)) (= x2870 32)) (not x2050)) x3964) (=> x2050 x754))))) (=> x1021 x754))))) (=> (not x3048) x754))) (=> x1885 x754))))))))) (=> (and (and (not (= 2514000705 x3040)) (not (> 826074471 x3040)) (not (= 2376452955 x3040)) (= x1044 (x3057 (- x450 4))) (= x4323 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x3040 826074471)) (not (> 4 x450)) (not (= x3040 1889567281)) (= x450 68) (= x3040 2835717307) (= (x252 (x3010 x170)) x2890) (= x4181 x878) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1044) (and (= (<= x1044 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1044 64))) x2094) (= x121 x34) (> x2890 0) (= 68 x450)) x702) (and (=> x2094 x1150) (=> (and (not x2094) (and (= (= x4181 x878) x2029) (= x277 x4181))) (and (=> (and x2029 (and (>= x2614 0) (= x2614 (x1208 x4228)) (= (x1460 (x3010 x4031) (x2486 2) 0) x4228) (= x4077 x34) (= (< x2614 x121) x935) (<= x2614 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x935 x1150) (=> (and (not x935) (= x2979 (< x2614 x34))) (and (=> (and (and (<= 0 x16) (= x735 (> x16 x597)) (= (x3057 (- x2614 x34)) x2421) (= x16 (x2117 x3181)) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x34)) x597) (<= x16 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1460 (x3010 x4181) (x2486 2) 0) x3181) (= x949 (x1460 (x3010 x4031) (x2486 2) 0))) (not x2979)) (and (=> (and (not x735) (and (= x3046 (> x16 x1050)) (= (x203 (+ x34 x16)) x1050))) (and (=> x3046 x1150) (=> (and (not x3046) (and (= x2895 32) (= x1013 (x1460 (x3010 x4181) (x2486 2) 0)) (= x825 1))) x2852))) (=> x735 x1150))) (=> x2979 x1150))))) (=> (not x2029) x1150))))))))))) (=> (and x2411 (= x3883 x3613)) x941))))) (=> (and (= x3613 x3798) x1572) x941))) (=> (and (= x3798 x3613) x1728) x941))) (=> (and (= x3613 x3798) (not x3060)) x941))) (=> (and (= x3798 x3613) x4370) x941))))))) (=> (and (and (= x3798 x3541) (= x2247 x2613)) x2923) x3400))) (=> (and x1314 (and (= x2247 x2613) (= x3798 x3541))) x3400))) (=> (and x660 (and (= x3798 x3541) (= x2613 x2247))) x3400))))))) x2307))
(assert (x1417 x1881))
(assert (= (=> (and (= x1541 x612) (= x676 x977)) x3078) x2697))
(assert (x1417 x3572))
(assert (= x777 (x1769 (x3010 x777))))
(assert (= x2325 (and (not x2607) x1323)))
(assert (= x2814 (and x1169 (not x1617))))
(assert (x1417 x464))
(assert (x1417 x2689))
(assert (= (and x3812 x343) x1448))
(assert (= x231 (and x125 x3678)))
(assert (x1417 x1880))
(assert (x1417 x1518))
(assert (x3931 x607))
(assert (x1417 x2754))
(assert (= x3738 (and x3020 (not x1692))))
(assert (= x1986 (and x2586 x4253)))
(assert (x1417 x4241))
(assert (x1417 x1305))
(assert (= x3475 (and (not x1703) x3458)))
(assert (= (and x570 x3324) x3266))
(assert (x1417 x2123))
(assert (x1417 x1955))
(assert (x1417 x2726))
(assert (=> (<= x1864 10000) (= (x3010 x1864) (x2486 x1864))))
(assert (= (or x1017 x2872 x1128 x2693 x3139 x2238 x3470 x1640 x4104) x3469))
(assert (= (and x3961 x2470) x1652))
(assert (= x3693 (and x4085 x2281)))
(assert (= (and x1545 (not x421)) x2780))
(assert (x1417 x1511))
(assert (x1417 x3071))
(assert (x1417 x1178))
(assert (= (and x3314 x3937) x622))
(assert (x1417 x1060))
(assert (= x4336 (=> (and (= x1524 x4165) (= x3250 0)) x589)))
(assert (= x4031 (x1769 (x3010 x4031))))
(assert (x1417 x1185))
(assert (x1417 x151))
(assert (x1417 x3978))
(assert (= x3017 (and x794 x3836)))
(assert (x1417 x1297))
(assert (= x525 (and x2078 x3258)))
(assert (x1417 x1012))
(assert (x1417 x749))
(assert (x1417 x2700))
(assert (= x3740 (and (not x4101) x4014)))
(assert (= (and (not x1216) x3136) x469))
(assert (= (x1769 (x3010 x2201)) x2201))
(assert (= x47 (or x3810 x2920 x3296 x2256 x981 x4033 x3780 x2334)))
(assert (x1417 x2662))
(assert (= x3129 (or x1329 x2413)))
(assert (x1417 x2882))
(assert (x1417 x4282))
(assert (= x1164 (or (and x1304 x1852) (and x2831 (not x4163)))))
(assert (x1417 x1759))
(assert (x3931 x3936))
(assert (= x3018 (or x234 x1952 x128 x3143 x1268 x2707 x3886)))
(assert (= x1247 (or x985 x4303 x265 x3044 x3124 x1931)))
(assert (= (and x720 (not x532)) x838))
(assert (= x1715 (and x4370 x282)))
(assert (x1417 x43))
(assert (x1417 x4192))
(assert (= (and x4223 x3378) x2705))
(assert (= (or (and x568 x3399) (and x4161 (not x3527))) x3904))
(assert (x1417 x3229))
(assert (= x2744 (and x4183 (not x3089))))
(assert (= x3284 (and x2429 (not x1516))))
(assert (x1417 x713))
(assert (x1417 x1895))
(assert (=> (<= x4181 10000) (= (x3010 x4181) (x2486 x4181))))
(assert (= x3350 (and x3640 x1918)))
(assert (x3931 x1641))
(assert (= (or x2528 x162) x605))
(assert (= (and x3333 (not x4332)) x3288))
(assert (x1417 x2179))
(assert (= x1117 (and x642 x3018)))
(assert (x1417 x3943))
(assert (= x1565 (and x251 (not x1613))))
(assert (x1417 x204))
(assert (= (and (not x1648) x127) x1078))
(assert (x3931 x3949))
(assert (x1417 x2059))
(assert (=> (<= x777 10000) (= (x2486 x777) (x3010 x777))))
(assert (= (and (not x1867) x61) x1329))
(assert (= (and x3454 x2694) x840))
(assert (= x589 (=> (and (= x1954 x3250) (= x9 x4165)) x2715)))
(assert (= x1505 (x1769 (x3010 x1505))))
(assert (x1417 x2227))
(assert (= x3310 (and x1123 (not x3967))))
(assert (= (and x1674 x3024) x4272))
(assert (= x1265 (and x2575 x2457)))
(assert (x1417 x1862))
(assert (= (and x936 (not x2957)) x1123))
(assert (x1417 x2623))
(assert (x1417 x894))
(assert (= x3749 (=> (and (and (and (not (< x2883 872247156)) (not (= x2883 872247156)) (= x2555 x3404) (>= 1461501637330902918203684832716283019655932542975 x429) (<= x2555 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1012 (x252 (x3010 x4031))) (> 2376452955 x2883) (> x1012 0) (= x3570 x429) (not (< x2883 649617121)) (= (x681 x4117) x2555) (not (= x2883 1422172137)) (>= x2555 0) (= x81 x1716) (not (= 1086394137 x2883)) (= x4117 (x1460 (x3010 x429) (x2486 2) 0)) (= x2883 1889567281)) (and (and (= x1593 (x4030 x215)) (>= 1461501637330902918203684832716283019655932542975 x3862) (= 1889567281 x3517) (<= 0 x1593) (= x4075 x1593) (= (x1460 (x3010 x3862) (x2486 2) 0) x215) (not (= x3517 826074471)) (> x742 0) (= x3570 x3862) (= (x252 (x3010 x2648)) x742) (not (> 826074471 x3517)) (= x3404 x835) (<= x1593 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (and (= x3468 x1420) (> x2546 0) (= x2546 (x252 (x3010 x1376))) (= x3830 x4075) (= x1420 (x2449 x2777)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420) (<= 0 x1420) (= x3570 x1477) (>= 1461501637330902918203684832716283019655932542975 x1477) (not (< x2660 1086394137)) (= 1889567281 x2660) (= (x1460 (x3010 x1477) (x2486 2) 0) x2777) (not (= x2660 1086394137))) (and (= x921 (= x1627 x2251)) (= x1018 x3468) (= x1627 x1484) (= x1716 x2251))))) (and (<= 0 x2183) (< x3629 1461501637330902918203684832716283019655932542976) (= x101 x3570) (= x2392 (or x4021 x247)) (> x3891 0) (= x2183 (x2713 x2202)) (not (< x216 826074471)) (= x247 (= x3629 x4031)) (not (= x3368 0)) (not (= x216 826074471)) (<= x2183 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1889567281 x216) (= x3891 (x252 (x3010 x1358))) (>= 1461501637330902918203684832716283019655932542975 x101) (= (x2086 x1303) x3629) x2392 (= x2183 x81) (= (x1460 (x3010 x101) (x2486 2) 0) x2202) (>= 1461501637330902918203684832716283019655932542975 x3629) (<= 0 x3629) (= (= x4186 x3629) x4021))) (and (=> (and (= x3034 x407) (= x835 x2074) (= (= x407 x2074) x3199)) (and (=> (and (= (= x3719 x1978) x3658) (= x1978 x3830) (= x3719 x2332)) (and x3658 (=> (and (= x1850 x1023) (= x1018 x1533) (= (= x1533 x1023) x3867)) x3867))) x3199)) x921))))
(assert (x1417 x1211))
(assert (= (and x558 x3884) x3091))
(assert (= x432 (and (not x4369) x1706)))
(assert (x1417 x3158))
(assert (x1417 x1737))
(assert (= x2386 (and x2775 (not x1728))))
(assert (= (or x267 x177) x187))
(assert (x3931 x4067))
(assert (x1417 x1277))
(assert (x1417 x2667))
(assert (= x1268 (or x871 x3122)))
(assert (x1417 x1469))
(assert (= (=> (and (= x302 x2257) (= x2430 x3754)) x491) x441))
(assert (= (=> (and (= x3620 x3434) (= x3036 x1926)) x1461) x1453))
(assert (x1417 x2830))
(assert (x1417 x969))
(assert (x1417 x1423))
(assert (x1417 x3944))
(assert (x1417 x2461))
(assert (x1417 x3156))
(assert (= (and x1312 x2842) x2256))
(assert (= (and x2958 (not x2896)) x2795))
(assert (x1417 x2611))
(assert (x1417 x1160))
(assert (= (and x2436 (not x2773)) x3063))
(assert (= (and x4169 x2814) x2084))
(assert (x1417 x4335))
(assert (x1417 x200))
(assert (= (x2486 2737736067) (x3010 2737736067)))
(assert (x1417 x1162))
(assert (x1417 x2177))
(assert (x1417 x3528))
(assert (x1417 x3222))
(assert (= (x3010 2569309863) (x2486 2569309863)))
(assert (= x4023 (and x1678 x2150)))
(assert (x1417 x23))
(assert (x1417 x3744))
(assert (x3931 x618))
(assert (= (x1769 (x2486 826074471)) 826074471))
(assert (x1417 x2548))
(assert (=> (<= x1477 10000) (= (x2486 x1477) (x3010 x1477))))
(assert (= x3816 (and (not x2363) x4062)))
(assert (x1417 x211))
(assert (= (and x4089 (not x3550)) x4061))
(assert (x1417 x42))
(assert (x1417 x3529))
(assert (x3931 x429))
(assert (= (and x1521 x1385) x1792))
(assert (x1417 x1116))
(assert (x1417 x1874))
(assert (x1417 x3622))
(assert (= (or x816 x926) x3886))
(assert (x1417 x3468))
(assert (x1417 x2304))
(assert (= (or (and x3277 (not x1168)) (and x495 x2989)) x446))
(assert (x1417 x507))
(assert (= (and x2168 (not x3515)) x2558))
(assert (= (and x2473 x3308) x3135))
(assert (x1417 x1036))
(assert (x1417 x452))
(assert (x1417 x2381))
(assert (= (and x1863 x3824) x291))
(assert (x3931 x3538))
(assert (x1417 x159))
(assert (x3931 x1488))
(assert (x3931 x1908))
(assert (x1417 x4203))
(assert (= x1776 (and x2411 x1223)))
(assert (x1417 x3099))
(assert (= x2715 (=> (and (= x230 (= x1954 0)) (or (not x230) x230)) x3485)))
(assert (= x2221 (and (not x4362) x2102)))
(assert (= x3136 (and x2847 x2297)))
(assert (= x2370 (and x1163 x2180)))
(assert (x1417 x2236))
(assert (x1417 x3443))
(assert (= (=> (and (or x1551 (not x1551)) (= (= x2430 0) x1551)) x3298) x491))
(assert (x1417 x3722))
(assert (= x270 (=> (and (= x676 x3459) (= x612 x2461)) x3078)))
(assert (= (and x2437 x2320) x1946))
(assert (x1417 x497))
(assert (x3931 x1842))
(assert (= (and x3653 (not x1597)) x373))
(assert (x1417 x3404))
(assert (= (and x190 x340) x1755))
(assert (x1417 x2284))
(assert (x1417 x3056))
(assert (x1417 x475))
(assert (x1417 x2075))
(assert (x1417 x143))
(assert (= (and x2207 (not x3669)) x4046))
(assert (= (x2486 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x3010 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1417 x2286))
(assert (= x2173 (x1769 (x3010 x2173))))
(assert (x1417 x776))
(assert (= 599290589 (x1769 (x2486 599290589))))
(assert (= x3312 (and x3974 x1355)))
(assert (= (=> (and (= x2336 x2247) (= x3158 x1311) (= x4073 x1033)) x747) x674))
(assert (= (and (not x3689) x1732) x582))
(assert (= x4041 (=> (and (= x4269 (or x2046 x1065)) (= x3379 (= x1266 x4186)) (= x1436 (x203 (+ 32 x1047))) (<= x3847 1461501637330902918203684832716283019655932542975) (= x2046 (= x170 x3847)) (= x2158 (= x4186 x3847)) (>= x1266 0) (>= 1461501637330902918203684832716283019655932542975 x1266) (= (x203 (+ 4 x4299)) x1047) (= x1266 (x2086 x1303)) (= (= x4031 x1266) x2485) (>= x3847 0) (= x3847 (x1793 x3753)) (= (= x3847 x2648) x1065) (not (= 0 x2025)) (= x23 (x3057 (- x3907 x4299))) x4269 (= (or x2485 x3379) x3696) (< x1266 1461501637330902918203684832716283019655932542976) (> 1461501637330902918203684832716283019655932542976 x3847) (= x3907 (x203 (+ 64 x1047))) x3696) (and (=> (and (= x1648 (= x4031 x3847)) (not x2158)) (and (=> (and (and (= (or (and (> 64 x1828) (= true (<= x1828 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1828 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x495) (not (> 4 x332)) (< x19 649617121) (= x3260 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= (x252 (x3010 x4031)) x3177) (< 0 x3177) (= x332 x23) (< x19 2376452955) (= x19 157198259) (= (x3057 (- x332 4)) x1828) (= 68 x332) (not (< x19 157198259)) (= x1266 x2544)) x1648) (and (=> x495 x1643) (=> (and (and (= x1168 (= x2544 x1266)) (= x1495 x2544)) (not x495)) (and (=> (not x1168) x1643) (=> (and (and (= (x1460 (x3010 x878) (x2486 3) 0) x2475) (= x2072 (x1460 (x3010 x2544) x2475 0)) (= x94 32) (= 1 x65)) x1168) x4120))))) (=> (and (not x1648) (= (= x3847 x170) x2264)) (and (=> (and (not x2264) (= x3054 (= x3847 x2648))) (and (=> (and (= (= x3847 x1376) x4316) (not x3054)) (and (=> (and (and (= x2803 (or (and (> 64 x11) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x11) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x11))) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2159) (not (= x22 117300739)) (= x3661 (x252 (x3010 x1376))) (= x22 157198259) (> x3661 0) (not (> 4 x581)) (= (x3057 (- x581 4)) x11) (= x1266 x618) (> 1086394137 x22) (= x581 68) (= x581 x23)) x4316) (and (=> x2803 x3699) (=> (and (and (= x1996 (= x618 x1266)) (= x618 x645)) (not x2803)) (and (=> (and (and (= 1 x3140) (= (x1460 (x3010 x878) (x2486 3) 0) x326) (= x1201 (x1460 (x3010 x618) x326 0)) (= x4091 32)) x1996) x2451) (=> (not x1996) x3699))))) (=> (and (= (= x3847 x1864) x560) (not x4316)) (and (=> (and (and (= x1977 x1266) (= (or (and (> 64 x1942) (= (<= x1942 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1942)) x4142) (not (= 117300739 x965)) (not (< x993 4)) (= x993 68) (> x3429 0) (= 157198259 x965) (< x965 826074471) (= x3429 (x252 (x3010 x1864))) (= x1942 (x3057 (- x993 4))) (= x23 x993) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x772)) x560) (and (=> (and (and (= (= x1266 x1977) x3430) (= x2022 x1977)) (not x4142)) (and (=> (not x3430) x815) (=> (and (and (= 32 x2338) (= (x1460 (x3010 x1977) x3555 0) x2014) (= x3555 (x1460 (x3010 x878) (x2486 3) 0)) (= 1 x714)) x3430) x2417))) (=> x4142 x815))) (=> (and (not x560) (and (= x2137 (= x3847 x1358)) (and x2137 (and (> 826074471 x580) (= (or (and (> 64 x403) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x403))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x403)) x2184) (= x580 157198259) (not (= x580 117300739)) (= x2348 x1266) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x896) (> x3751 0) (= (x3057 (- x1917 4)) x403) (not (< x1917 4)) (= (x252 (x3010 x1358)) x3751) (= x1917 x23) (= 68 x1917))))) (and (=> x2184 x1393) (=> (and (and (= x850 x2348) (= x3654 (= x2348 x1266))) (not x2184)) (and (=> (not x3654) x1393) (=> (and (and (= x2910 (x1460 (x3010 x878) (x2486 3) 0)) (= (x1460 (x3010 x2348) x2910 0) x3955) (= 32 x1197) (= 1 x3760)) x3654) x1492))))))))) (=> (and x3054 (and (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2156) (= x1202 (or (> x3718 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3718 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3718 64)))) (not (> 4 x186)) (= (x252 (x3010 x2648)) x4108) (= x1266 x3538) (= x1831 157198259) (> x4108 0) (< x1831 826074471) (= 68 x186) (not (= 117300739 x1831)) (= x23 x186) (= (x3057 (- x186 4)) x3718))) (and (=> (and (and (= x2112 (= x3538 x1266)) (= x2836 x3538)) (not x1202)) (and (=> (not x2112) x1091) (=> (and x2112 (and (= (x1460 (x3010 x878) (x2486 3) 0) x3107) (= x1766 1) (= x4170 (x1460 (x3010 x3538) x3107 0)) (= x4326 32))) x3481))) (=> x1202 x1091))))) (=> (and x2264 (and (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1237)) (> 64 x1237)) (> x1237 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4009) (not (= 117300739 x3155)) (< x3155 826074471) (= (x252 (x3010 x170)) x4097) (= x23 x2875) (= 157198259 x3155) (not (< x2875 4)) (= x1266 x2703) (> x4097 0) (= x1237 (x3057 (- x2875 4))) (= x2806 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x2875 68))) (and (=> x4009 x2602) (=> (and (and (= x2789 (= x1266 x2703)) (= x1416 x2703)) (not x4009)) (and (=> (not x2789) x2602) (=> (and (and (= x1923 1) (= x1968 (x1460 (x3010 x2703) x3682 0)) (= x2246 32) (= x3682 (x1460 (x3010 x878) (x2486 3) 0))) x2789) x27))))))))) (=> (and (and (= x2456 x1266) (= x1104 157198259) (not (< x1271 4)) (> x1352 0) (= x23 x1271) (= (x252 (x3010 x4186)) x1352) (< x1104 649617121) (< x1104 2376452955) (= (or (and (= (<= x1951 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1951)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1951)) x934) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2354) (= x1271 68) (not (< x1104 157198259)) (= x1951 (x3057 (- x1271 4)))) x2158) (and (=> x934 x2982) (=> (and (not x934) (and (= (= x2456 x1266) x901) (= x374 x2456))) (and (=> (and (and (= x3754 1) (= (x1460 (x3010 x878) (x2486 3) 0) x3553) (= (x1460 (x3010 x2456) x3553 0) x2518) (= x2257 32)) x901) x441) (=> (not x901) x2982)))))))))
(assert (= (=> (and (= x2915 x3356) (= x1186 x1834)) x3474) x2801))
(assert (x1417 x2106))
(assert (x1417 x3620))
(assert (= x4208 (=> (and (= x3158 0) (= x1813 x4073)) x674)))
(assert (x1417 x2372))
(assert (x1417 x3566))
(assert (= x437 (x1769 (x3010 x437))))
(assert (= (=> (and (= x2917 x3332) (= x176 0)) x3641) x259))
(assert (x1417 x3595))
(assert (= (and x2329 (not x3773)) x2840))
(assert (x1417 x2588))
(assert (x1417 x3862))
(assert (x1417 x2691))
(assert (x3931 x1422))
(assert (= x1746 (and (not x1572) x2386)))
(assert (= x3996 (x1769 (x3010 x3996))))
(assert (= x1966 (and x523 x1790)))
(assert (x1417 x2443))
(assert (= x869 (and x3919 x4034)))
(assert (= x2982 (=> (and (= x3754 0) (= x2257 x3110)) x441)))
(assert (= x3095 (and x703 x1588)))
(assert (= (and x2377 x1204) x349))
(assert (x1417 x3432))
(assert (= x864 (and x3405 x3286)))
(assert (x1417 x2613))
(assert (x1417 x3767))
(assert (=> (<= x200 10000) (= (x3010 x200) (x2486 x200))))
(assert (= (x2486 1461501637330902918203684832716283019655932542976) (x3010 1461501637330902918203684832716283019655932542976)))
(assert (x1417 x2388))
(assert (x1417 x984))
(assert (=> (>= 10000 x1963) (= (x3010 x1963) (x2486 x1963))))
(assert (x1417 x1676))
(assert (= (and x1674 (not x3024)) x3272))
(assert (= (x2486 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x3010 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (= (and (not x3952) x712) x1459))
(assert (x1417 x4058))
(assert (= (and x2923 x1406) x67))
(assert (= (and x3054 x3453) x472))
(assert (= (=> (and (= x3620 x1397) (= x1926 x663)) x1461) x698))
(assert (x1417 x3112))
(assert (x3931 x2800))
(assert (x1417 x2161))
(assert (x1417 x1768))
(assert (x1417 x1413))
(assert (= (=> (and (= x1748 x1397) (= 0 x663)) x698) x2815))
(assert (= (and x3084 x4210) x3436))
(assert (= (and (not x556) x3547) x1312))
(assert (x1417 x1206))
(assert (= (and (not x925) x2674) x1711))
(assert (x1417 x3798))
(assert (= x2070 false))
(assert (x1417 x2843))
(assert (x1417 x3313))
(assert (x1417 x3304))
(assert (x1417 x2875))
(assert (x1417 x1787))
(assert (x1417 x3482))
(assert (x1417 x1843))
(assert (= (or x2253 (and x2516 x2955) (and x2082 x1265) (and x1625 x2976) x512 (and x2459 x882) (and x3171 (not x1837)) x3795 (and (not x3498) x423)) x3674))
(assert (x1417 x2301))
(assert (x1417 x4165))
(assert (= x1365 (and x659 (not x2244))))
(assert (x1417 x2076))
(assert (= x635 (=> (= 0 x2393) x1959)))
(assert (= (or x1494 x800) x1137))
(assert (x1417 x4216))
(assert (= (and x1788 (not x735)) x2912))
(assert (x1417 x3142))
(assert (= x936 (and x2099 (not x1980))))
(assert (= (x1769 (x3010 x1573)) x1573))
(assert (x1417 x1829))
(assert (= (and x412 x3811) x609))
(assert (x1417 x2232))
(assert (x1417 x3546))
(assert (x1417 x2239))
(assert (= x2390 (and x2329 x3773)))
(assert (= x392 (or x2747 x4325)))
(assert (x1417 x2195))
(assert (x1417 x1898))
(assert (x1417 x3321))
(assert (= x2593 (and x1677 x2050)))
(assert (x1417 x1055))
(assert (x1417 x4112))
(assert (=> (>= 10000 x2648) (= (x3010 x2648) (x2486 x2648))))
(assert (= x3589 (and (not x306) x2855)))
(assert (= x3461 (=> (and (= x1717 x612) (= x676 x1054)) x3078)))
(assert (x1417 x1688))
(assert (x3931 x3856))
(assert (= (and (not x1751) x318) x394))
(assert (= x114 (and (not x1310) x4214)))
(assert (=> (<= x3369 10000) (= (x3010 x3369) (x2486 x3369))))
(assert (= x6 (and x2684 x2029)))
(assert (= x3333 (or (and (not x2191) x740) x3664)))
(assert (= x2867 (=> (and (= x1971 x1537) (= x1320 x298)) x1076)))
(assert (= x1440 (or x292 x666 (and x1911 x3507) (and x2216 x3062) (and x1400 x2350) (and x1275 x1866) (and x729 (not x2108)) (and x3712 (not x524)) x3166)))
(assert (= x874 (or (and (not x1618) x3510) (and x1830 x2984))))
(assert (x3931 x2611))
(assert (x1417 x3897))
(assert (= x2124 (or x728 x2401 x924 x3436 x3721 x3211)))
(assert (x1417 x911))
(assert (= (or x3202 x4196) x1647))
(assert (x1417 x2956))
(assert (= (and x912 x3125) x3147))
(assert (= x2610 (and x4099 x235)))
(assert (= x1839 (and x1083 (not x3081))))
(assert (= (and (not x386) x3153) x1286))
(assert (= x2222 (and x394 x1812)))
(assert (x1417 x4207))
(assert (= x3976 (and (not x2923) x1406)))
(assert (= (=> (and (= x1256 x891) (= x85 x1922) (= x2247 x4088)) x1934) x1608))
(assert (= (and x4198 x3752) x1713))
(assert (= (and x1396 x1596) x1483))
(assert (= x3471 (=> (and (= x3871 x3954) (= x3183 x2229)) x2779)))
(assert (= x2944 (and (not x3697) x1401)))
(assert (= (or (and x1550 (not x1551)) x4066) x3665))
(assert (= x2481 (and (not x3096) x3256)))
(assert (x3931 x1210))
(assert (= (and x905 x1113) x2018))
(assert (x1417 x1356))
(assert (= x2404 (and x3887 x3995)))
(assert (= x1293 (and (not x2749) x4013)))
(assert (= x1733 (and (not x3061) x1415)))
(assert (x1417 x2545))
(assert (x1417 x3011))
(assert (= x2143 (and x1171 x2121)))
(assert (x1417 x1810))
(assert (= (x1769 (x3010 x3067)) x3067))
(assert (x1417 x581))
(assert (= (=> (and (= x2895 x3620) (= x1926 x825)) x1461) x2852))
(assert (x1417 x41))
(assert (= (x1769 (x3010 x1376)) x1376))
(assert (= x2942 (and x1996 x1421)))
(assert (x1417 x1125))
(assert (= x3600 (=> (and (<= x3725 1461501637330902918203684832716283019655932542975) (>= 255 x3623) (= x2254 (x203 (+ 32 x4107))) (= (x3694 x1344) x3623) (= (x203 (+ x2679 4)) x4107) (= (= x4031 x845) x1175) (not (= x1119 0)) (= (x4245 x3753 1) x1303) (= (= x2648 x3142) x1441) (not (= x3725 0)) (= x3142 (x1793 x3753)) (>= x3142 0) x1600 (<= 0 x845) (= (x203 (+ x4233 128)) x2679) (< x3623 256) (< x3142 1461501637330902918203684832716283019655932542976) (= (x1460 (x3010 x3725) (x2486 4) 0) x1344) x117 (= (not x7) x2522) (= (or x2619 x1441) x1600) (> 1461501637330902918203684832716283019655932542976 x845) (= x1119 1) (= x2522 false) (= x7 (= 0 x3623)) (= (x3278 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1456) x4233) (= x578 32) (= (= x4186 x845) x1803) (>= x3623 0) (not (or (and (= true (<= x578 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x578 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x578))) (= x3080 (x3057 (- x2254 x2679))) (<= x845 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3142) (= (x4180 x1303) x845) (= x2619 (= x170 x3142)) (= x1456 63) (= (x3663 128) x3725) (= (= x845 x4186) x2635) (not (= 0 x3142)) (= (or x2635 x1175) x117)) (and (=> (and x1803 (and (not (= x1374 872247156)) (not (= 1086394137 x1374)) (= x2984 (or (> x3444 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3444) true) (> 32 x3444)))) (= x3444 (x3057 (- x978 4))) (< x1374 2376452955) (not (< x1374 649617121)) (= x777 x878) (= x4302 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x978 x3080) (> x3989 0) (not (= 1422172137 x1374)) (= 1889567281 x1374) (not (< x978 4)) (= x978 36) (= (x252 (x3010 x4186)) x3989) (not (< x1374 872247156)))) (and (=> (and (and (= (= x878 x777) x1618) (= x313 x777)) (not x2984)) (and (=> (and (and (= (x1630 x3683) x4122) (<= 0 x4122) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4122) (= (x1460 (x3010 x777) (x2486 2) 0) x3683) (= x3076 1) (= x641 32)) x1618) x396) (=> (not x1618) x4226))) (=> x2984 x4226))) (=> (and (not x1803) (= x1720 (= x845 x4031))) (and (=> (and (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3602) (and (= (<= x3602 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3602 32))) x1304) (= x3369 x878) (= x793 1889567281) (not (< x793 872247156)) (= x4354 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x517 36) (not (= 1422172137 x793)) (not (= x793 872247156)) (= x3080 x517) (< x793 2376452955) (= (x3057 (- x517 4)) x3602) (not (< x517 4)) (< 0 x3261) (= x3261 (x252 (x3010 x4031))) (not (= 1086394137 x793)) (not (< x793 649617121))) x1720) (and (=> (and (and (= x834 x3369) (= x4163 (= x878 x3369))) (not x1304)) (and (=> (not x4163) x3648) (=> (and (and (= 32 x1287) (<= x766 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x766) (= x3818 (x1460 (x3010 x3369) (x2486 2) 0)) (= (x188 x3818) x766) (= x732 1)) x4163) x3428))) (=> x1304 x3648))) (=> (and (= (= x845 x170) x2847) (not x1720)) (and (=> (and (and (= x3080 x3854) (not (> 826074471 x3770)) (= x3394 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x252 (x3010 x170)) x984) (not (< x3854 4)) (= x3854 36) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2877) (and (= true (<= x2877 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2877 32))) x1216) (not (= 826074471 x3770)) (> x984 0) (= x878 x3535) (= x3770 1889567281) (= (x3057 (- x3854 4)) x2877)) x2847) (and (=> (and (not x1216) (and (= x3329 x3535) (= x1603 (= x878 x3535)))) (and (=> (not x1603) x959) (=> (and x1603 (and (<= 0 x2557) (<= x2557 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1460 (x3010 x3535) (x2486 2) 0) x3105) (= x1564 32) (= x2557 (x1208 x3105)) (= 1 x3030))) x4285))) (=> x1216 x959))) (=> (and (= x590 (= x845 x2648)) (not x2847)) (and (=> (and (= x1130 (= x845 x1376)) (not x590)) (and (=> (and (not x1130) (= x4288 (= x1864 x845))) (and (=> (and x4288 (and (not (> 4 x857)) (= 36 x857) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3546)) (< x3546 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3546)) x2799) (> x1753 0) (not (= 826074471 x1795)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3846) (= x1795 1889567281) (= x878 x1488) (= x3546 (x3057 (- x857 4))) (not (< x1795 826074471)) (= x1753 (x252 (x3010 x1864))) (= x3080 x857))) (and (=> x2799 x2097) (=> (and (not x2799) (and (= x2391 (= x1488 x878)) (= x2711 x1488))) (and (=> (and x2391 (and (= x4024 1) (>= x1331 0) (= x2344 32) (= x1331 (x2776 x2782)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1331) (= x2782 (x1460 (x3010 x1488) (x2486 2) 0)))) x3320) (=> (not x2391) x2097))))) (=> (and (not x4288) (and (and x2460 (and (= x2605 x3080) (> x1146 0) (= x878 x4051) (= x2597 (or (and (< x2978 32) (= (<= x2978 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x2978 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x133 826074471)) (= x133 1889567281) (not (< x133 826074471)) (not (> 4 x2605)) (= x1146 (x252 (x3010 x1358))) (= 36 x2605) (= x2978 (x3057 (- x2605 4))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2708))) (= x2460 (= x845 x1358)))) (and (=> (and (and (= x2213 x4051) (= x679 (= x4051 x878))) (not x2597)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3263) (= 1 x176) (= x3332 32) (= (x1460 (x3010 x4051) (x2486 2) 0) x2858) (= (x2658 x2858) x3263) (>= x3263 0)) x679) x3641) (=> (not x679) x259))) (=> x2597 x259))))) (=> (and (and (not (> 1086394137 x2937)) (= x3080 x1389) (= (x252 (x3010 x1376)) x2774) (= x2956 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (> 4 x1389)) (< 0 x2774) (= x1558 (x3057 (- x1389 4))) (= x4035 x878) (not (= 1086394137 x2937)) (= 36 x1389) (= 1889567281 x2937) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1558) true) (> 32 x1558)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1558)) x3713)) x1130) (and (=> x3713 x1870) (=> (and (and (= x4035 x4111) (= x3781 (= x4035 x878))) (not x3713)) (and (=> (not x3781) x1870) (=> (and x3781 (and (= x2591 32) (= (x1032 x3895) x455) (= 1 x459) (= (x1460 (x3010 x4035) (x2486 2) 0) x3895) (<= x455 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x455 0))) x1316))))))) (=> (and (and (not (= 826074471 x366)) (not (> 4 x1305)) (= x2588 (x3057 (- x1305 4))) (= x3080 x1305) (= (x252 (x3010 x2648)) x1101) (> x1101 0) (= 36 x1305) (= x366 1889567281) (= x3390 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2588) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2588)) (< x2588 32)))) (= x878 x2830) (not (> 826074471 x366)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2760)) x590) (and (=> x3390 x1052) (=> (and (not x3390) (and (= x2830 x4129) (= x938 (= x878 x2830)))) (and (=> (not x938) x1052) (=> (and (and (<= x4 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x796 1) (= x4 (x2951 x4238)) (= (x1460 (x3010 x2830) (x2486 2) 0) x4238) (<= 0 x4) (= 32 x2255)) x938) x14)))))))))))))))
(assert (= x3826 (and x3939 x3449)))
(assert (= (and x614 x3676) x3374))
(assert (x1417 x3263))
(assert (x1417 x184))
(assert (= (or x3269 x48) x2248))
(assert (= (or x974 x3135 x530 x2210 x4023 x1531) x4095))
(assert (= x3273 (and x2491 (not x18))))
(assert (x1417 x4240))
(assert (x1417 x593))
(assert (x1417 x2838))
(assert (x1417 x1287))
(assert (x1417 x1231))
(assert (= (and x3170 x60) x87))
(assert (x1417 x1236))
(assert (= (and x3279 (not x2136)) x514))
(assert (x1417 x857))
(assert (= x570 (and x1561 x399)))
(assert (= (and x3089 x4183) x1528))
(assert (x1417 x4114))
(assert (x1417 x634))
(assert (x1417 x2876))
(assert (x1417 x842))
(assert (= (or x4318 x2938 x3826 x3823 x55 x687 x2167 x1481 x1995) x2617))
(assert (= (and x1095 x3151) x528))
(assert (= x238 (and (not x1463) x119)))
(assert (=> (<= x101 10000) (= (x3010 x101) (x2486 x101))))
(assert (x1417 x1991))
(assert (x1417 x3322))
(assert (x1417 x2643))
(assert (x1417 x13))
(assert (x1417 x4044))
(assert (= (=> (and (= x2227 x646) (= x3852 x13)) x1501) x243))
(assert (= x1326 (and (not x4342) x806)))
(assert (x1417 x1562))
(assert (= (and x2724 x3430) x1935))
(assert (= x1415 (and (not x4000) x1348)))
(assert (x1417 x3613))
(assert (=> (<= x2188 10000) (= (x3010 x2188) (x2486 x2188))))
(assert (=> (<= x1079 10000) (= (x2486 x1079) (x3010 x1079))))
(assert (= (and x2052 (not x2272)) x1945))
(assert (= x3149 (or x1660 x167)))
(assert (= (and x3882 x3991) x3212))
(assert (x1417 x834))
(assert (= x3501 (=> (and (= 0 x2461) (= x2638 x3459)) x270)))
(assert (= (and x2771 x3589) x3748))
(assert (x1798 x2360))
(assert (x1417 x2354))
(assert (= x396 (=> (and (= x1563 x3076) (= x4040 x641)) x2307)))
(assert (= (or x3581 x2592) x2240))
(assert (x1417 x1801))
(assert (x3931 x651))
(assert (= (and x1677 (not x2050)) x3317))
(assert (=> (<= x321 10000) (= (x2486 x321) (x3010 x321))))
(assert (= (and x375 (not x2725)) x3418))
(assert (x1417 x1317))
(assert (= (=> (and (= x2706 x13) (= x2227 x2673)) x1501) x3419))
(assert (x1417 x1302))
(assert (x1417 x1543))
(assert (x1417 x877))
(assert (= x146 (and x2574 (not x4009))))
(assert (x1417 x1809))
(assert (x1417 x2049))
(assert (= x4285 (=> (and (= x1564 x4040) (= x3030 x1563)) x2307)))
(assert (x1417 x2678))
(assert (x1417 x9))
(assert (= (x1769 (x3010 x2188)) x2188))
(assert (= x3209 (and x2758 (not x100))))
(assert (x1417 x1109))
(assert (x1417 x2734))
(assert (= x1577 (and (not x400) x525)))
(assert (x1417 x3368))
(assert (= (and x1259 x148) x29))
(assert (= x2327 (x1769 (x3010 x2327))))
(assert (= (and x431 x785) x4260))
(assert (= (x1769 (x3010 x3856)) x3856))
(assert (=> (>= 10000 x1439) (= (x2486 x1439) (x3010 x1439))))
(assert (x1417 x489))
(assert (= x447 (and x3584 (not x174))))
(assert (x1417 x3794))
(assert (x1417 x2448))
(assert (x1417 x1294))
(assert (= (and (not x4169) x2814) x4230))
(assert (= (=> (and (= x2454 (= 0 x1926)) (or x2454 (not x2454))) x1194) x1461))
(assert (x1417 x2668))
(assert (x1417 x3736))
(assert (x1417 x427))
(assert (= (and x4178 x1671) x1858))
(assert (x1417 x332))
(assert (x1124 x2442))
(assert (= x2133 (and x3240 x2261)))
(assert (x1417 x1904))
(assert (x1417 x1271))
(assert (= x1076 (=> (and (= (= 0 x298) x3013) (or (not x3013) x3013)) x3353)))
(assert (= (and x1394 x3310) x2693))
(assert (x1417 x3569))
(assert (= (and x461 x2374) x2985))
(assert (x1417 x1933))
(assert (=> (<= x380 10000) (= (x3010 x380) (x2486 x380))))
(assert (x1417 x1102))
(assert (x1417 x2704))
(assert (= (and x310 (not x1615)) x2745))
(assert (= x1167 (or x2277 x2051)))
(assert (= (and x1108 x1841) x994))
(assert (x1417 x3856))
(assert (= (and x469 x1603) x3896))
(assert (= (or x3268 (and x1504 (not x230))) x767))
(assert (= (x1769 (x3010 x353)) x353))
(assert (x1417 x844))
(assert (= x2995 (and x3793 (not x3713))))
(assert (= (and x1678 (not x2150)) x89))
(assert (= x807 (and (not x4045) x236)))
(assert (= (and (not x699) x2241) x1447))
(assert (x3931 x101))
(assert (x1417 x2442))
(assert (x3931 x2595))
(assert (= (and (not x4253) x2586) x3458))
(assert (x1417 x409))
(assert (x1417 x11))
(assert (= x2146 (and x4004 x3638)))
(assert (x1417 x2066))
(assert (= x45 (or x2770 x892 x1086 x2849 x684 x2196)))
(assert (x1417 x1585))
(assert (= (and x2790 x3385) x2334))
(assert (= x4067 (x1769 (x3010 x4067))))
(assert (x1417 x1051))
(assert (= (=> (and (= x9 x3915) (= x1954 x3100)) x2715) x3585))
(assert (= (and x2125 x2497) x426))
(assert (x1417 x1685))
(assert (x1417 x2584))
(assert (= x3978 (x1769 (x3010 x3978))))
(assert (= x1161 (=> (and (= x507 x1537) (= x298 x3011)) x1076)))
(assert (x1417 x4280))
(assert (x1417 x1414))
(assert (= (and x832 (not x3331)) x4090))
(assert (=> (<= x3733 10000) (= (x3010 x3733) (x2486 x3733))))
(assert (x1417 x435))
(assert (x1417 x2844))
(assert (= x4189 (x1769 (x3010 x4189))))
(assert (= x1863 (and (not x639) x2387)))
(assert (x1417 x3329))
(assert (x1417 x940))
(assert (= (and x3144 x711) x4096))
(assert (= (x1769 (x3010 x2800)) x2800))
(assert (= (and x2129 x3639) x808))
(assert (x1417 x1063))
(assert (x1417 x3138))
(assert (= (or x3297 x4252 x4377 x2197 x571 x2192) x48))
(assert (= (and x2714 x2391) x2313))
(assert (x1417 x743))
(assert (=> (>= 10000 x4031) (= (x3010 x4031) (x2486 x4031))))
(assert (x1417 x3936))
(assert (= x1343 (and x3325 x3557)))
(assert (=> (>= 10000 x1022) (= (x3010 x1022) (x2486 x1022))))
(assert (= (or x2396 x1819 x4231) x3170))
(assert (x1417 x4309))
(assert (x1417 x1971))
(assert (x1417 x1122))
(assert (= x1545 (and (not x69) x908)))
(assert (= x3597 (and x2265 x281)))
(assert (=> (>= 10000 x4035) (= (x3010 x4035) (x2486 x4035))))
(assert (x1417 x363))
(assert (x3931 x2884))
(assert (= (x1769 (x3010 x1136)) x1136))
(assert (=> (>= 10000 x2703) (= (x3010 x2703) (x2486 x2703))))
(assert (= x1226 (and x3675 (not x2367))))
(assert (=> (>= 10000 x3856) (= (x3010 x3856) (x2486 x3856))))
(assert (= (=> (and (= 0 x696) (= x410 x3774)) x2781) x2730))
(assert (= (x3010 2753274959) (x2486 2753274959)))
(assert (x1417 x2833))
(assert (= x3610 (and x1324 x3092)))
(assert (= x2868 (and x1983 x2274)))
(assert (= x1947 (and x199 x1990)))
(assert (= (and x3171 x1837) x423))
(assert (x1417 x2763))
(assert (=> (>= 10000 x1505) (= (x2486 x1505) (x3010 x1505))))
(assert (= (and x918 x1207) x584))
(assert (x1417 x1594))
(assert (= (and x3712 x524) x1911))
(assert (=> (<= x2726 10000) (= (x2486 x2726) (x3010 x2726))))
(assert (x1417 x2067))
(assert (x1417 x2218))
(assert (= (and x3121 x3176) x2849))
(assert (= x2093 (or (and x400 x525) (and (not x2128) x1577))))
(assert (= (and x2120 x3164) x3598))
(assert (x1417 x85))
(assert (x1417 x552))
(assert (= (and (not x1278) x1427) x939))
(assert (x1417 x49))
(assert (x1417 x4091))
(assert (= (and x3668 (not x1803)) x1426))
(assert (x1417 x3369))
(assert (= (x1769 (x2486 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (= x2920 (and x3180 x4105)))
(assert (= x2417 (=> (and (= x302 x2338) (= x2430 x714)) x491)))
(assert (= (and x1110 (not x601)) x1066))
(assert (= (and x1664 x2311) x3108))
(assert (= x2709 (or x2018 (and x1113 (not x905)))))
(assert (x1417 x1905))
(assert (x1417 x2774))
(assert (x1417 x4333))
(assert (= x451 (and x3980 (not x2857))))
(assert (x1417 x4057))
(assert (= (and x4060 (not x660)) x763))
(assert (= x3564 (=> (and (= x4335 x9) (= x1810 x1954)) x2715)))
(assert (= x3836 (and x3617 x2209)))
(assert (x1417 x1928))
(assert (= (and x1062 (not x4127)) x654))
(assert (x1417 x2463))
(assert (= x3823 (and x2233 x3066)))
(assert (x1417 x3754))
(assert (x1417 x3226))
(assert (x3931 x1102))
(assert (= x1865 (and x3308 (not x2473))))
(assert (x1417 x3902))
(assert (= (=> (and (= x676 x3093) (= x612 x906)) x3078) x3242))
(assert (= (x1769 (x3010 x3949)) x3949))
(assert (x1417 x1844))
(assert (x1417 x1969))
(assert (= x3851 (or (and x673 x2184) (and x2096 (not x3654)))))
(assert (= x1973 (=> (and (= x2407 0) (= x1727 x1992)) x2351)))
(assert (x1417 x1900))
(assert (= x2387 (and (not x32) x3160)))
(assert (= x976 (and x1184 x3849)))
(assert (x1417 x2517))
(assert (= (and x2914 (not x2368)) x2154))
(assert (= x2954 (and x3921 (not x171))))
(assert (x1417 x606))
(assert (x1417 x2477))
(assert (x1417 x3029))
(assert (=> (>= 10000 x2443) (= (x3010 x2443) (x2486 x2443))))
(assert (x1417 x4))
(assert (= x3639 (and (not x148) x1259)))
(assert (=> (<= x4189 10000) (= (x2486 x4189) (x3010 x4189))))
(assert (x3931 x3978))
(assert (x1417 x1229))
(assert (=> (>= 10000 x2381) (= (x2486 x2381) (x3010 x2381))))
(assert (x3931 x2503))
(assert (= (and x346 x3433) x4148))
(assert (= x733 (and x1624 (not x255))))
(assert (= x1007 (and x2203 x2145)))
(assert (= x2099 (and x2533 (not x658))))
(assert (x1417 x2718))
(assert (= (or x617 x295 x3236 x1709 x1428 x3819) x926))
(assert (= x2176 (and x923 x2996)))
(assert (= (and x1760 x3680) x4179))
(assert (= x66 (or x425 x3910 x1462 x2399 x2593 x764)))
(assert (= x3558 (and (not x3927) x1948)))
(assert (= x3098 (x1769 (x3010 x3098))))
(assert (x1124 x1298))
(assert (x1417 x1156))
(assert (x1417 x1661))
(assert (x1417 x1256))
(assert (x1417 x1616))
(assert (x1417 x3561))
(assert (x1417 x1743))
(assert (x1417 x2508))
(assert (= (and x2972 (not x988)) x1275))
(assert (=> (<= x2456 10000) (= (x3010 x2456) (x2486 x2456))))
(assert (= x3791 (and (not x3352) x519)))
(assert (x1417 x3949))
(assert (= (and x4026 x1767) x3023))
(assert (x1417 x1876))
(assert (x1417 x572))
(assert (x1417 x1132))
(assert (= x3841 (and (not x3998) x1322)))
(assert (= (and x1088 (not x368)) x505))
(assert (x1417 x1264))
(assert (= x2818 (and x3294 x3209)))
(assert (= x2670 (and x3310 (not x1394))))
(assert (x1417 x2200))
(assert (x1417 x3055))
(assert (= x3633 (and (not x57) x2709)))
(assert (= x5 (and x421 x1545)))
(assert (= (and x3568 x701) x4377))
(assert (= (and x1618 x3510) x2650))
(assert (= (and (not x3104) x3154) x972))
(assert (x1417 x3774))
(assert (= (or x328 x957 x2404 x2936 x2282 x3549) x902))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1769 (x2486 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (= (and x461 (not x2374)) x104))
(assert (x1417 x3227))
(assert (= x563 (=> (and (= 0 x2926) (= x2260 x1524)) x1443)))
(assert (x1417 x4188))
(assert (= (and x740 x2191) x3664))
(assert (x1417 x4111))
(assert (= x1552 (or x2267 x1548 x3266 x303 x1472 x3114)))
(assert (= (=> (and (= x3870 x1757) (= x2626 x4205)) x1729) x848))
(assert (= x2516 (and (not x1625) x2976)))
(assert (= x419 (and (not x2377) x1204)))
(assert (= (=> (= x3295 x3368) x887) x3875))
(assert (= x919 (and x1198 x991)))
(assert (= (x2486 117300739) (x3010 117300739)))
(assert (= x3154 (and (not x1799) x2934)))
(assert (= x4226 (=> (and (= x641 x2917) (= 0 x3076)) x396)))
(assert (x1417 x1246))
(assert (= x358 (x1769 (x3010 x358))))
(assert (x1417 x165))
(assert (= (and x4287 (not x1407)) x242))
(assert (= x2126 (or x2056 x2907)))
(assert (x3931 x3843))
(assert (= (and x3665 x1282) x1624))
(assert (= x1307 (=> (= 0 x1092) x3545)))
(assert (= (and x712 x3952) x3301))
(assert (x1417 x4108))
(assert (= (and x4156 x3837) x1847))
(assert (= (or x1989 x1347 x1673 x3523 x3281 x3825) x800))
(assert (= (and (not x1885) x38) x471))
(assert (x3931 x2809))
(assert (x1417 x1778))
(assert (x1417 x1215))
(assert (= x2559 (and x3341 x3354)))
(assert (x1417 x544))
(assert (= x1451 (and x3094 x1126)))
(assert (x1417 x2655))
(assert (x1417 x2412))
(assert (x1417 x891))
(assert (=> (<= x4146 10000) (= (x3010 x4146) (x2486 x4146))))
(assert (= x2381 (x1769 (x3010 x2381))))
(assert (= (and x1011 (not x2594)) x3420))
(assert (x1417 x931))
(assert (= (and x3607 x3603) x1674))
(assert (x2452 x1585))
(assert (x1417 x3544))
(assert (x1417 x499))
(assert (= (and (not x2581) x1945) x4013))
(assert (x1417 x3260))
(assert (= x3746 (and (not x4316) x2794)))
(assert (x1417 x3076))
(assert (x1417 x3009))
(assert (= (x1769 (x3010 x3369)) x3369))
(assert (= (and x1412 x2558) x2192))
(assert (= (and x3516 x2500) x745))
(assert (x1417 x1489))
(assert (= x398 (or x2944 x933)))
(assert (x1417 x1331))
(assert (= x406 (and x939 (not x1021))))
(assert (= (x1769 (x3010 x651)) x651))
(assert (= x1171 (and x197 (not x4167))))
(assert (= x3586 (and x2981 (not x934))))
(assert (= (or (and (not x938) x4017) (and x3390 x2787)) x2426))
(assert (= (or x135 x96) x2423))
(assert (x1417 x3233))
(assert (x1417 x4277))
(assert (x1417 x1745))
(assert (x1417 x2360))
(assert (= (and x717 x3416) x2533))
(assert (x1417 x3035))
(assert (= (and (not x82) x3645) x2577))
(assert (= (or (and x2597 x2424) (and (not x679) x1398)) x1335))
(assert (x1417 x266))
(assert (= x2000 (x1769 (x3010 x2000))))
(assert (= x3133 (and x1233 x2542)))
(assert (x1417 x366))
(assert (= (=> (= x3938 (> x1954 0)) (and (=> (and (and (= x2613 x4088) (= x3541 x891)) (not x3938)) x3400) (=> (and x3938 (= x4070 (= 0 x9))) (and (=> (and (not x4070) (= (= 32 x9) x3051)) (and (=> (and (and (= x3541 x891) (= x4088 x2613)) (not x3051)) x3400) (=> (and x3051 (and (= x688 (ite x4106 1 0)) (= (not x1606) x4106) (= (= 0 x878) x1606))) x765))) (=> (and (and (= x3813 (x252 (x3010 x1505))) (= (< 0 x3813) x44)) x4070) (and (=> (and (= 1 x688) x44) x765) (=> (and (not x44) (and (= x2613 x4088) (= x3541 x891))) x3400))))))) x3485))
(assert (= (x1769 (x3010 x3862)) x3862))
(assert (= (and x3697 x1401) x4295))
(assert (= (=> (and (= x1860 x1880) (= x1423 0)) x3186) x3157))
(assert (= (and x1915 x543) x4210))
(assert (= (=> (and (= x13 x410) (= x696 x2227)) x1501) x2781))
(assert (x1417 x1786))
(assert (= x530 (and x632 x1309)))
(assert (x1417 x4219))
(assert (x3931 x4051))
(assert (x1417 x101))
(assert (x1417 x2441))
(assert (= x2541 (and (not x583) x356)))
(assert (= (or (and x180 (not x1825)) x2999) x2848))
(assert (= 2678909723 (x1769 (x2486 2678909723))))
(assert (= x212 (and (not x3763) x2375)))
(assert (= (and (not x1509) x1487) x661))
(assert (x1417 x3751))
(assert (= x666 (and x2038 x787)))
(assert (x1417 x3295))
(assert (=> (>= 10000 x1573) (= (x2486 x1573) (x3010 x1573))))
(assert (x1417 x3526))
(assert (x1417 x376))
(assert (x1417 x3332))
(assert (x1417 x3204))
(assert (x1417 x858))
(assert (= x61 (and x2190 (not x3424))))
(assert (x1417 x3347))
(assert (x3931 x2456))
(assert (= (and (not x1517) x2019) x3346))
(assert (= x3462 (and x1429 x1442)))
(assert (x1417 x779))
(assert (= x2993 (and x4026 (not x1767))))
(assert (x1417 x870))
(assert (x1417 x2409))
(assert (= (=> (and (= 0 x1320) (= x1246 x1971)) x2867) x1610))
(assert (x1417 x2273))
(assert (x1417 x697))
(assert (= x1675 (and (not x2121) x1171)))
(assert (= (and x2265 (not x281)) x473))
(assert (x1417 x1988))
(assert (x1417 x3575))
(assert (= x2052 (and x3066 (not x2233))))
(assert (x1417 x92))
(assert (= (and x1528 (not x3460)) x2289))
(assert (= x3497 (and x275 x3747)))
(assert (= (and x1087 x1105) x4118))
(assert (x1417 x1006))
(assert (= x3335 (or (and x394 (not x1812)) x2384 (and x633 x3198) x1771 (and x194 x1581) x1652 (and x2222 (not x3893)) (and x457 x992) (and x318 x1751))))
(assert (x1417 x3625))
(assert (x1417 x352))
(assert (= (and x1355 (not x3974)) x4012))
(assert (= (and x677 x2094) x3523))
(assert (x1417 x54))
(assert (x1417 x1416))
(assert (x1417 x3423))
(assert (= x996 (and x1519 (not x596))))
(assert (= (=> (and (= x109 0) (= x1748 x2870)) x3964) x754))
(assert (= (and (not x802) x440) x1800))
(assert (= x2853 (and x3812 (not x343))))
(assert (= x1390 (and x4254 x278)))
(assert (x1417 x814))
(assert (x3931 x2726))
(assert (= (and x3924 x647) x1883))
(assert (x1417 x2991))
(assert (x1417 x4107))
(assert (x1417 x1723))
(assert (= x2312 (and (not x4070) x2737)))
(assert (= x2907 (and x3637 (not x63))))
(assert (=> (<= x2201 10000) (= (x2486 x2201) (x3010 x2201))))
(assert (x1417 x796))
(assert (x1417 x1529))
(assert (x1417 x668))
(assert (= (and x3200 x861) x2998))
(assert (= (or x1935 x3671) x2987))
(assert (= (and (not x136) x3167) x248))
(assert (x1417 x4035))
(assert (x1417 x3519))
(assert (= (and x700 (not x2054)) x1548))
(assert (= x4017 (and (not x3390) x2787)))
(assert (x1417 x1488))
(assert (= (or x3249 x3786 x2149 x3133 x3312 x4158) x1515))
(assert (= (and x3609 x189) x1559))
(assert (x1417 x3861))
(assert (= x3208 (and x1632 x4247)))
(assert (x1417 x2569))
(assert (x1417 x885))
(assert (x1417 x2809))
(assert (= x2596 (and x2941 x2663)))
(assert (x1417 x865))
(assert (x1417 x3221))
(assert (x1417 x2440))
(assert (x1417 x897))
(assert (= x1747 (=> (and (= x4241 x2829) (= x3141 0)) x2736)))
(assert (x1417 x3720))
(assert (= (x2486 1461501637330902918203684832716283019655932542975) (x3010 1461501637330902918203684832716283019655932542975)))
(assert (= (and x2292 x3695) x2253))
(assert (= (or x745 x1650 x1007 x35 x439 x36 x3091 x3373) x587))
(assert (x3931 x895))
(assert (x1417 x4122))
(assert (x1417 x2340))
(assert (x1417 x3376))
(assert (= x687 (and x1145 (not x1252))))
(assert (= x3618 (or (and x219 x26) x2163 (and (not x859) x2118) (and x1615 x310) x93 (and x1886 x1960) x3239 (and x4144 x3806) (and (not x1774) x982))))
(assert (x1417 x2226))
(assert (= (=> (and (= x3183 x4241) (= 0 x3871)) x3471) x1936))
(assert (= x511 (and (not x4254) x278)))
(assert (x1417 x1358))
(assert (x3931 x2058))
(assert (= (x3010 545886713) (x2486 545886713)))
(assert (= (or x587 x258) x1249))
(assert (x1417 x404))
(assert (= (and x1403 x4148) x2427))
(assert (x1417 x3456))
(assert (x1417 x3141))
(assert (x1417 x2008))
(assert (x1417 x2562))
(assert (x1417 x2335))
(assert (= x2339 (or x1451 x330)))
(assert (= (and x1444 x3418) x577))
(assert (x1417 x4343))
(assert (= x2241 (and (not x2198) x2786)))
(assert (= x2891 (and x4060 x660)))
(assert (= x420 (and x4298 x44)))
(assert (= (x2486 649617121) (x3010 649617121)))
(assert (x3931 x1230))
(assert (x1417 x3098))
(assert (x3931 x845))
(assert (x1417 x2632))
(assert (x1417 x3070))
(assert (=> (<= x878 10000) (= (x2486 x878) (x3010 x878))))
(assert (x1417 x3577))
(assert (= (+ 1 (x1769 x1283)) (x1769 (x4245 x1283 1))))
(assert (= (and (not x3960) x2559) x3563))
(assert (= (x2486 3065339685) (x3010 3065339685)))
(assert (x1417 x1040))
(assert (x1417 x1376))
(assert (= x1657 (=> (and (= x3984 (x4245 x1303 1)) x3132 (= (x203 (+ x4357 x636)) x4299) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x676) (and (> 32 x676) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x676))))) (not (= x2584 0)) (= x1242 (x2634 x3984)) (>= x1242 0) (= (= x4067 x4186) x2924) (= x1261 (= x4067 x4186)) (>= x4067 0) (= (x203 (+ 4 x4299)) x165) (> 1461501637330902918203684832716283019655932542976 x4067) (= x4067 (x2086 x1303)) (= x3262 (x3057 (- x1077 x4299))) (<= x4067 1461501637330902918203684832716283019655932542975) (= x4357 (x3278 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1166)) (= (= x4067 x4031) x2170) (= x3132 (or x1261 x2170)) (= (x203 (+ 31 x676)) x1166) (= x1077 (x203 (+ x165 32))) (> 1461501637330902918203684832716283019655932542976 x1242) (<= x1242 1461501637330902918203684832716283019655932542975) (= (x252 (x3010 x4067)) x2584) (not (= 0 x612))) (and (=> (and (not x2924) (and (and (and (= x672 (x3057 (- x129 4))) (< 0 x628) (not (< x2644 2376452955)) (= 3187245334 x2644) (= (x252 (x3010 x4031)) x628) (< x2644 3645313523) (= 36 x129) (= x2568 (or (and (= true (<= x672 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x672)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x672))) (= x2628 x1242) (not (> 3065339685 x2644)) (not (= 3065339685 x2644)) (= x129 x3262) (= 85927964219764727760667161919810921830953265369826564066086284937368273158144 x2071) (not (> 4 x129))) x851) (= x851 (= x4031 x4067)))) (and (=> x2568 x1307) (=> (and (not x2568) (and (= (= x2628 x1242) x927) (= x4018 x2628))) (and (=> (not x927) x1307) (=> (and x927 (= 1 x1092)) x3545))))) (=> (and (and (= x1242 x3845) (= (x3057 (- x2440 4)) x3229) (> 3645313523 x3701) (not (< x3701 2376452955)) (= 3187245334 x3701) (= x3399 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3229)) (< x3229 32)) (> x3229 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3262 x2440) (= 85927964219764727760667161919810921830953265369826564066086284937368273158144 x4244) (not (< x3701 3065339685)) (> x2639 0) (not (< x2440 4)) (= x2440 36) (not (= x3701 3065339685)) (= (x252 (x3010 x4186)) x2639)) x2924) (and (=> x3399 x88) (=> (and (not x3399) (and (= (= x1242 x3845) x3527) (= x2119 x3845))) (and (=> (not x3527) x88) (=> (and x3527 (= x685 1)) x3605)))))))))
(assert (= x4158 (and x1512 x1851)))
(assert (x1417 x2953))
(assert (x1417 x2445))
(assert (x1417 x3996))
(assert (=> (<= x1174 10000) (= (x2486 x1174) (x3010 x1174))))
(assert (x1417 x2628))
(assert (x1417 x1558))
(assert (x1417 x1186))
(assert (= x3258 (and x3665 (not x1282))))
(assert (x1417 x2672))
(assert (= x318 (and x3019 x652)))
(assert (= x1290 (and x2359 (not x336))))
(assert (= (and x1945 x2581) x1995))
(assert (x1417 x962))
(assert (x1417 x4360))
(assert (x1417 x3760))
(assert (= x1764 (and x356 x583)))
(assert (= (and x2007 (not x3370)) x3637))
(assert (x1417 x1298))
(assert (x1417 x1669))
(assert (x1417 x625))
(assert (= (and (not x1866) x1275) x2350))
(assert (x1417 x2246))
(assert (x1417 x1031))
(assert (= (and (not x296) x1425) x1067))
(assert (x1417 x1573))
(assert (=> (>= 10000 x1805) (= (x3010 x1805) (x2486 x1805))))
(assert (x1417 x2986))
(assert (x1417 x3623))
(assert (= x3638 (and x2308 (not x1191))))
(assert (x1417 x1272))
(assert (x1417 x240))
(assert (= x275 (and x3 (not x1200))))
(assert (= x4193 (and x2670 (not x4359))))
(assert (x1417 x4361))
(assert (= (or x853 x269 x2 x2682 x1913 x2084 x521 x3646 x3025) x1369))
(assert (= x4291 (x1769 (x3010 x4291))))
(assert (x1417 x1641))
(assert (=> (<= x3996 10000) (= (x3010 x3996) (x2486 x3996))))
(assert (= (and x3153 x386) x4372))
(assert (x1417 x3789))
(assert (x3931 x1864))
(assert (= (and x654 x2493) x38))
(assert (=> (<= x2327 10000) (= (x2486 x2327) (x3010 x2327))))
(assert (= x2494 (x1769 (x3010 x2494))))
(assert (= x1587 (=> (and (= x2365 x3870) (= x2688 x4205)) x1729)))
(assert (x1417 x3935))
(assert (= (and x2831 x4163) x361))
(assert (x3931 x2348))
(assert (x1417 x689))
(assert (= x957 (and x329 x390)))
(assert (= (and x2003 x3777) x303))
(assert (x1417 x4299))
(assert (= (x1769 (x3010 x737)) x737))
(assert (x1417 x2295))
(assert (= (=> (and (= x1360 0) (= x1524 x3831)) x1872) x3271))
(assert (x1417 x2804))
(assert (x1417 x714))
(assert (x1417 x1605))
(assert (= x1977 (x1769 (x3010 x1977))))
(assert (= x2186 (and x2577 (not x1869))))
(assert (x1417 x2495))
(assert (x1417 x4016))
(assert (x1417 x456))
(assert (= (and (not x2653) x3492) x3786))
(assert (x1417 x4164))
(assert (x1417 x1411))
(assert (x1417 x3845))
(assert (x1417 x2639))
(assert (= x3167 (and x4072 x1873)))
(assert (x1417 x1890))
(assert (x1417 x555))
(assert (= x3045 (and x1502 x1379)))
(assert (x1417 x16))
(assert (= x3453 (and x1078 (not x2264))))
(assert (= (and x703 (not x1588)) x3607))
(assert (= (or (and x2568 x498) (and (not x927) x487)) x3495))
(assert (= (or x2426 x3372) x2042))
(assert (= x14 (=> (and (= x2255 x4040) (= x796 x1563)) x2307)))
(assert (x1417 x1532))
(assert (= x3765 (and (not x2924) x3150)))
(assert (= (x1769 (x3010 x2443)) x2443))
(assert (= (and x2583 (not x2733)) x3088))
(assert (x3931 x200))
(assert (x1417 x2606))
(assert (= x3409 (or x2042 x3540 x262 x1651 x788 x3833 x1167)))
(assert (x1417 x364))
(assert (= x3351 (x1769 (x3010 x3351))))
(assert (= (x3010 1889567281) (x2486 1889567281)))
(assert (=> (<= x2000 10000) (= (x3010 x2000) (x2486 x2000))))
(assert (= x4318 (and x987 (not x2382))))
(assert (x1417 x978))
(assert (= (and x4276 x705) x2031))
(assert (= (and x1572 x2386) x226))
(assert (x1417 x1318))
(assert (x3931 x2494))
(assert (=> (<= x1136 10000) (= (x2486 x1136) (x3010 x1136))))
(assert (= (and x1788 x735) x3281))
(assert (x1417 x1770))
(assert (= (and x3104 x3154) x3256))
(assert (= x1309 (and x4200 x89)))
(assert (= (x1769 (x2486 2514000705)) 2514000705))
(assert (x1417 x3661))
(assert (x1417 x1456))
(assert (= x4116 (x1769 (x3010 x4116))))
(assert (x1417 x3989))
(assert (= (=> (and (= x3870 x1423) (= x4205 x1880)) x1729) x3186))
(assert (= (and x1613 x251) x1899))
(assert (x1417 x2009))
(assert (= x3230 (and x2142 (not x4206))))
(assert (= x3556 (or x1286 x2816)))
(assert (= (x1769 (x3010 x1174)) x1174))
(assert (= (and x325 x3922) x664))
(assert (=> (>= 10000 x3128) (= (x3010 x3128) (x2486 x3128))))
(assert (= x440 (and x3265 (not x881))))
(assert (= (or x506 x2630) x3850))
(assert (x1417 x2661))
(assert (x1417 x1612))
(assert (x1417 x3016))
(assert (x2452 x1298))
(assert (= x3910 (and x406 x3065)))
(assert (= x1984 (and x3983 x1554)))
(assert (x1417 x1181))
(assert (= x568 (and x3150 x2924)))
(assert (= (=> (and (= x3591 x3620) (= x1926 x2520)) x1461) x2598))
(assert (= x2497 (and (not x923) x2996)))
(assert (x1417 x3079))
(assert (x1417 x3966))
(assert (x1417 x72))
(assert (= 117300739 (x1769 (x2486 117300739))))
(assert (= x1876 (x1769 (x3010 x1876))))
(assert (x1417 x3237))
(assert (= (and (not x3314) x3937) x1240))
(assert (x1417 x4052))
(assert (x1417 x185))
(assert (x1417 x3757))
(assert (= (and x3607 (not x3603)) x3086))
(assert (x1417 x3490))
(assert (=> (<= x3978 10000) (= (x3010 x3978) (x2486 x3978))))
(assert (x1417 x608))
(assert (= (=> (and (= x2430 x65) (= x94 x302)) x491) x4120))
(assert (= x3298 (=> (and (= (= x510 x4186) x1282) (< x510 1461501637330902918203684832716283019655932542976) (= (x3057 (- x1688 x829)) x2661) (not (= 0 x2430)) (= (x2086 x1303) x2600) (= (= x510 x2648) x2419) (<= x510 1461501637330902918203684832716283019655932542975) (= x1994 (x203 (+ 31 x302))) (not (or (> x302 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x302 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x302)))) (= x3055 (x3278 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1994)) (>= x510 0) (= (x203 (+ x829 4)) x341) (= x510 (x1793 x3753)) x3306 (= (or x2419 x1726) x3306) (= (= x4031 x2600) x3537) (= (= x510 x170) x1726) x3619 (<= x2600 1461501637330902918203684832716283019655932542975) (= (= x4186 x2600) x370) (= (x203 (+ x4299 x3055)) x829) (= (x203 (+ 32 x341)) x3820) (= x3619 (or x3537 x370)) (< x2600 1461501637330902918203684832716283019655932542976) (>= x2600 0) (= x1688 (x203 (+ x341 64)))) (and (=> (and (not x1282) (= (= x510 x4031) x2078)) (and (=> (and (not x2078) (= (= x170 x510) x2560)) (and (=> (and (and (= 157198259 x709) (= x2661 x2226) (< 0 x870) (not (> 4 x2226)) (= (x3057 (- x2226 4)) x172) (< x709 826074471) (= x1079 x2600) (= 68 x2226) (not (= x709 117300739)) (= x1900 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x870 (x252 (x3010 x170))) (= x1107 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x172) true) (< x172 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x172)))) x2560) (and (=> (and (and (= x1295 (= x2600 x1079)) (= x3706 x1079)) (not x1107)) (and (=> (and x1295 (and (= x4264 (x1460 (x3010 x1079) x3911 0)) (= (x1460 (x3010 x878) (x2486 3) 0) x3911) (= 1 x1862) (= x2569 32))) x1591) (=> (not x1295) x3865))) (=> x1107 x3865))) (=> (and (= x1765 (= x510 x2648)) (not x2560)) (and (=> (and (and (not (< x4190 4)) (< 0 x351) (= x2661 x4190) (= x2600 x2884) (= x1654 (x3057 (- x4190 4))) (= x2369 157198259) (not (= x2369 117300739)) (= 68 x4190) (= x351 (x252 (x3010 x2648))) (> 826074471 x2369) (= x1151 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= (or (and (= true (<= x1654 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1654 64)) (> x1654 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4342)) x1765) (and (=> x4342 x1754) (=> (and (not x4342) (and (= x2884 x3215) (= (= x2884 x2600) x1637))) (and (=> (not x1637) x1754) (=> (and (and (= 1 x42) (= x2284 32) (= x3560 (x1460 (x3010 x878) (x2486 3) 0)) (= (x1460 (x3010 x2884) x3560 0) x2861)) x1637) x718))))) (=> (and (= x604 (= x1376 x510)) (not x1765)) (and (=> (and (= (= x1864 x510) x3325) (not x604)) (and (=> (and (and (and (and (= x2661 x3722) (= x3722 68) (not (= 117300739 x1511)) (= x2600 x561) (= (x252 (x3010 x1358)) x3897) (> x3897 0) (= x826 (x3057 (- x3722 4))) (> 826074471 x1511) (= (or (and (> 64 x826) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x826))) (> x826 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4113) (not (> 4 x3722)) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x4307) (= x1511 157198259)) x3773) (= x3773 (= x1358 x510))) (not x3325)) (and (=> (and (and (= (= x2600 x561) x1105) (= x561 x1594)) (not x4113)) (and (=> (and (and (= x1179 32) (= x3439 (x1460 (x3010 x561) x477 0)) (= x1933 1) (= x477 (x1460 (x3010 x878) (x2486 3) 0))) x1105) x502) (=> (not x1105) x4301))) (=> x4113 x4301))) (=> (and x3325 (and (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x124) (= x2661 x2412) (= (x3057 (- x2412 4)) x2718) (= x2600 x2195) (= x2412 68) (< x2304 826074471) (= x3990 (x252 (x3010 x1864))) (= (or (> x2718 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2718 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2718)))) x2892) (= x2304 157198259) (not (> 4 x2412)) (< 0 x3990) (not (= 117300739 x2304)))) (and (=> (and (and (= x2195 x1178) (= x1998 (= x2195 x2600))) (not x2892)) (and (=> (and x1998 (and (= 32 x376) (= (x1460 (x3010 x2195) x2026 0) x3214) (= x3304 1) (= (x1460 (x3010 x878) (x2486 3) 0) x2026))) x3447) (=> (not x1998) x2543))) (=> x2892 x2543))))) (=> (and (and (= x842 x2661) (< x4151 1086394137) (= x1543 4238056678808933066457772256406219440718756300954938350892797929791311314944) (> x322 0) (= (x3057 (- x842 4)) x1109) (= x2600 x1842) (= x444 (or (> x1109 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1109 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1109 64)))) (not (= 117300739 x4151)) (= x4151 157198259) (not (> 4 x842)) (= x322 (x252 (x3010 x1376))) (= 68 x842)) x604) (and (=> (and (and (= x3505 x1842) (= (= x2600 x1842) x3924)) (not x444)) (and (=> (and x3924 (and (= x411 (x1460 (x3010 x878) (x2486 3) 0)) (= 1 x1302) (= x1097 (x1460 (x3010 x1842) x411 0)) (= 32 x1644))) x2420) (=> (not x3924) x2524))) (=> x444 x2524))))))))) (=> (and x2078 (and (not (< x246 157198259)) (= x2600 x2726) (< x246 649617121) (= (x3057 (- x1450 4)) x2932) (= 157198259 x246) (= x2661 x1450) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x3221) (= x2068 (x252 (x3010 x4031))) (= 68 x1450) (= (or (> x2932 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2932)) (> 64 x2932))) x400) (< x246 2376452955) (> x2068 0) (not (> 4 x1450)))) (and (=> (and (not x400) (and (= (= x2600 x2726) x2128) (= x2726 x1500))) (and (=> (not x2128) x4328) (=> (and (and (= (x1460 (x3010 x878) (x2486 3) 0) x1328) (= x3356 32) (= x1219 (x1460 (x3010 x2726) x1328 0)) (= x1834 1)) x2128) x2801))) (=> x400 x4328))))) (=> (and (and (= x2661 x3794) (not (> 4 x3794)) (= x3443 (x252 (x3010 x4186))) (= x3794 68) (> 2376452955 x3375) (= x721 (x3057 (- x3794 4))) (> 649617121 x3375) (not (> 157198259 x3375)) (< 0 x3443) (= (or (> x721 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x721 64) (= true (<= x721 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x255) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x585) (= x3128 x2600) (= x3375 157198259)) x1282) (and (=> (and (and (= (= x3128 x2600) x3942) (= x3128 x3737)) (not x255)) (and (=> (not x3942) x107) (=> (and (and (= x499 32) (= x105 (x1460 (x3010 x3128) x2879 0)) (= x3415 1) (= (x1460 (x3010 x878) (x2486 3) 0) x2879)) x3942) x3612))) (=> x255 x107)))))))
(assert (x1417 x531))
(assert (= x3605 (=> (= x2025 x685) x1476)))
(assert (= (and x4046 x308) x289))
(assert (x1417 x1795))
(assert (x3931 x1573))
(assert (= (and x1447 x2791) x2270))
(assert (= (x1769 (x3010 x1805)) x1805))
(assert (x1417 x391))
(assert (x1417 x586))
(assert (x1417 x1352))
(assert (= (and x2481 x1679) x2878))
(assert (=> (<= x2494 10000) (= (x2486 x2494) (x3010 x2494))))
(assert (= (or x3149 x1384 x1434 x113 x2656 x2423 x4006) x1596))
(assert (x1417 x3907))
(assert (= (and x2491 x18) x3965))
(assert (= (and (not x1765) x1806) x1950))
(assert (x1417 x1241))
(assert (x1417 x341))
(assert (= (or (and x2481 (not x1679)) (and x3096 x3256)) x496))
(assert (= (and x3300 x1927) x141))
(assert (= x3490 (x1769 (x3010 x3490))))
(assert (x1417 x656))
(assert (x3931 x2643))
(assert (= (and x1386 x551) x3297))
(assert (= (and x3492 x2653) x1512))
(assert (x1417 x2022))
(assert (x1417 x1571))
(assert (= x667 (and x633 (not x3198))))
(assert (= (and x248 (not x3386)) x3286))
(assert (= (and x1387 x1048) x995))
(assert (x1417 x4218))
(assert (= (=> (and (= x1141 x3954) (= x2229 x917)) x2779) x529))
(assert (x1417 x3876))
(assert (= x1990 (and (not x3252) x3108)))
(assert (x1417 x430))
(assert (= (and (not x3811) x412) x2206))
(assert (x1417 x8))
(assert (x1417 x3815))
(assert (= x2823 (=> (and (= 0 x2927) (= x405 x2862)) x2398)))
(assert (= (and x12 x3999) x2157))
(assert (x1417 x1101))
(assert (= (and x3350 x2645) x3470))
(assert (= x35 (and x3005 x1375)))
(assert (x1417 x77))
(assert (= x4166 (and x61 x1867)))
(assert (= (and x1258 x2785) x1525))
(assert (x1417 x2927))
(assert (x1417 x2792))
(assert (x1417 x561))
(assert (= x3735 (=> (and (= x1860 x2688) (= 0 x2365)) x1587)))
(assert (x1417 x2305))
(assert (x1417 x4357))
(assert (x1417 x2695))
(assert (= (and x673 (not x2184)) x2096))
(assert (= x3113 (and x424 (not x418))))
(assert (= x1963 (x1769 (x3010 x1963))))
(assert (x1417 x1433))
(assert (x1417 x2153))
(assert (= (=> (and (= x714 0) (= x2338 x3110)) x2417) x815))
(assert (= (and x4212 x3709) x832))
(assert (= (and x3203 x4373) x3660))
(assert (x1417 x1288))
(assert (= (or x4082 x629) x1819))
(assert (x1417 x2060))
(assert (x1417 x374))
(assert (= (x2486 157198259) (x3010 157198259)))
(assert (x1417 x2188))
(assert (x1417 x1255))
(assert (x1417 x112))
(assert (= (and (not x3837) x4156) x137))
(assert (= (x1769 (x2486 4238056678808933066457772256406219440718756300954938350892797929791311314944)) 4238056678808933066457772256406219440718756300954938350892797929791311314944))
(assert (x1417 x53))
(assert (x1417 x1813))
(assert (x1417 x1014))
(assert (= (and x2788 x2134) x1154))
(assert (x1417 x2057))
(assert (x1417 x1667))
(assert (=> (<= x1160 10000) (= (x2486 x1160) (x3010 x1160))))
(assert (= (x1769 (x3010 x3538)) x3538))
(assert (= (and x972 (not x2552)) x3673))
(assert (x1417 x1930))
(assert (x1417 x2330))
(assert (x1417 x1346))
(assert (= (and (not x4223) x3378) x712))
(assert (x1417 x1689))
(assert (= x686 (or x3756 x237 x2853 x1966 x3208 x141)))
(assert (x3931 x878))
(assert (x1417 x3685))
(assert (= x331 (=> (and (= x4241 x1685) (= 0 x1714)) x3083)))
(assert (x1417 x1069))
(assert (= (and x1925 (not x1568)) x4274))
(assert (x3931 x868))
(assert (x1417 x603))
(assert (= (or x2550 x47) x1999))
(assert (x1417 x459))
(assert (x1417 x2716))
(assert (= (and x3225 x2859) x2439))
(assert (x1417 x1224))
(assert (= x2578 (and x1577 x2128)))
(assert (= x2144 (and x2775 x1728)))
(assert (= (=> (and (= x1141 0) (= x917 x4241)) x529) x3022))
(assert (x1417 x3723))
(assert (x1417 x1922))
(assert (x1417 x3533))
(assert (x1417 x1405))
(assert (x1417 x3064))
(assert (= (=> (and (= x298 x1562) (= x1537 x4343)) x1076) x1607))
(assert (= (or x2987 x3652 x3234 x4315 x187 x74 x3776) x1550))
(assert (= x2195 (x1769 (x3010 x2195))))
(assert (= x181 (or x2016 x1515)))
(assert (x1417 x732))
(assert (x3931 x3067))
(assert (= (and x3822 x2112) x2182))
(assert (x1417 x2969))
(assert (= (and x3673 x930) x2640))
(assert (= (and x3046 x2912) x1989))
(assert (x1417 x379))
(assert (x1417 x1210))
(assert (x1417 x2703))
(assert (= (or x1708 x1906) x1609))
(assert (= x4072 (and x4148 (not x1403))))
(assert (x1417 x4244))
(assert (x1417 x1174))
(assert (x1417 x2147))
(assert (x1417 x878))
(assert (x3931 x2498))
(assert (x1417 x692))
(assert (x3931 x2173))
(assert (x1417 x4257))
(assert (= x28 (and x830 x1871)))
(assert (x3931 x1977))
(assert (= x3666 (and (not x2069) x838)))
(assert (x1417 x1306))
(assert (= x3645 (and x3284 x541)))
(assert (= x2595 (x1769 (x3010 x2595))))
(assert (x1417 x2510))
(assert (= (and (not x2158) x2848) x127))
(assert (= (=> (and (and (< 0 x170) (<= x4186 1461501637330902918203684832716283019655932542975) (= x2301 (x1818 (x3010 x1358))) (= (x252 (x3010 x878)) x1598) (>= x1905 0) (<= 0 x2901) (>= x4234 0) (not (= x1376 x878)) (<= 0 x3032) (= false x771) (= x1358 x862) (not (= x4186 x1864)) (not (= x437 x2595)) (not (= x1864 x1358)) (>= x1853 0) x4292 (= (x1818 (x3010 x170)) x1584) (not (= x2648 x170)) (> x878 0) (<= 0 x3117) (not (> 2569309863 x4313)) (<= 0 x299) (not (= x2595 x170)) (>= x862 0) (<= 0 x54) (>= x704 0) x903 x3455 (<= x1864 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2020) (<= x299 1461501637330902918203684832716283019655932542975) (= x4042 (> (x252 (x3010 x4031)) 0)) (<= x878 1461501637330902918203684832716283019655932542975) (< 0 x1598) (= (> (x252 (x3010 x4186)) 0) x2515) (not (= x4031 x4186)) (<= x2648 1461501637330902918203684832716283019655932542975) (not (= x4186 x1376)) (not (= x1358 x878)) (< 0 x4186) (< 0 x2595) (not (= x3530 x2595)) (not (= x3530 x878)) (not (= x4031 x3530)) (>= 1461501637330902918203684832716283019655932542975 x1826) (<= x1376 1461501637330902918203684832716283019655932542975) (not (= x4186 x3530)) (not (= x4031 x1358)) (not (> 2376452955 x4313)) (not (= x2648 x4186)) (not (= x1376 x3530)) (= (x1818 (x3010 x878)) x544) (= x4292 (< 0 (x252 (x3010 x1358)))) (not (= x1358 x4186)) (>= x2224 0) (>= 1461501637330902918203684832716283019655932542975 x922) (= (x1818 (x3010 x2648)) x1264) (>= x564 0) (not (= x170 x878)) (= x3916 false) (not (= x2648 x1376)) (>= x544 0) (>= 1461501637330902918203684832716283019655932542975 x3381) (> x4031 0) (>= x1667 0) (<= x4031 1461501637330902918203684832716283019655932542975) (not (= x4031 x1376)) x4042 x2642 (> x3530 0) (not (= x437 x4186)) (not (= x170 x3530)) (>= 1461501637330902918203684832716283019655932542975 x564) (= x1376 x3412) (<= x3117 1461501637330902918203684832716283019655932542975) (not (= x2648 x437)) (= x1358 x1826) (>= x610 0) (not (= x4186 x2595)) x2152 (not (= x2595 x1864)) (not (= x1358 x437)) (<= x2224 1461501637330902918203684832716283019655932542975) (= (> (x252 (x3010 x878)) 0) x2642) (not (= x170 x4031)) (<= x3412 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x437) (>= 1461501637330902918203684832716283019655932542975 x1853) (<= x2463 1461501637330902918203684832716283019655932542975) (< x4313 2952933380) (not (= x1376 x437)) (<= x4164 1461501637330902918203684832716283019655932542975) (= (x1818 (x3010 x4031)) x54) (>= x379 0) (not (= x2648 x3530)) (<= 0 x922) (< 0 x1376) (= 1 x1281) (>= 1461501637330902918203684832716283019655932542975 x2881) (not (= x1864 x878)) (<= 0 x1584) (not (= x1358 x3530)) (not (= x1864 x170)) (= x1376 x2224) (= x903 (> (x252 (x3010 x170)) 0)) (not (= x437 x170)) (= 2569309863 x4313) (<= x3530 1461501637330902918203684832716283019655932542975) x4011 (not (= x437 x4031)) (not (= x437 x1864)) (not (= x1376 x2595)) (= (x1818 (x3010 x437)) x3881) (<= x2595 1461501637330902918203684832716283019655932542975) (not (= x1358 x170)) (= x2073 (> (x252 (x3010 x2595)) 0)) (>= x3381 0) (= x337 x2360) (= 2766140528 x877) (not (= x170 x1376)) (= x2236 x1446) (= false x3316) (>= x2689 0) (<= 0 x1826) (not (= x878 x4031)) (>= 1461501637330902918203684832716283019655932542975 x2689) (= false x2535) (= (x1818 (x3010 x3530)) x704) (not (= x3530 x1864)) (not (= x2595 x1358)) (<= 0 x1264) (= x1864 x2020) (not (= x878 x2648)) (>= x3881 0) (= (x1818 (x3010 x1376)) x2901) (<= x610 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x4157) (> x1864 0) (not (= x2648 x4031)) (<= 0 x2463) (= x4157 x1376) x2353 (>= x3644 0) (not (= x878 x4186)) (= x3455 (< 0 (x252 (x3010 x1376)))) (<= 0 x3412) (>= 1461501637330902918203684832716283019655932542975 x862) (not (= x1864 x2648)) (>= x4157 0) (= x2080 (< 0 (x252 (x3010 x3530)))) (= x379 (x1818 (x3010 x2595))) (>= x2301 0) (<= 0 x2881) (= x3032 (x1818 (x3010 x1864))) (not (= x1376 x1358)) (= x2545 x564) (<= x3644 1461501637330902918203684832716283019655932542975) (<= x170 1461501637330902918203684832716283019655932542975) (not (= x2595 x878)) (< 0 x2648) (= (x1818 (x3010 x4186)) x4234) (= (< 0 (x252 (x3010 x437))) x2353) (<= x1905 1461501637330902918203684832716283019655932542975) (not (= x170 x4186)) (< 0 x437) (not (= x1864 x4031)) (>= 1461501637330902918203684832716283019655932542975 x1358) (>= x337 0) (= x4011 (> (x252 (x3010 x2648)) 0)) (not (= x1358 x2648)) (>= x4164 0) (= x1864 x922) x2080 (= x2152 (< 0 (x252 (x3010 x1864)))) x2073 (<= x337 1461501637330902918203684832716283019655932542975) x2515 (< 0 x1358) (not (= x437 x3530)) (not (= x4031 x2595)) (>= 1461501637330902918203684832716283019655932542975 x1667) (not (= x2595 x2648)) (<= 0 x2020) (= (x3278 1461501637330902918203684832716283019655932542975 x2442) x2236) (not (= x1376 x1864)) (not (= x437 x878))) (and (and (= x4215 x1446) (= 2569309863 x2148) (= x1433 x783) (= x1676 (x252 (x3010 x878))) (= x1589 x1358) (= (= x1589 x4215) x4239) (not (> 2376452955 x2148)) (< 0 x1676) (< x2148 2952933380) (not (< x2148 2569309863)) (= x1433 (x3278 1461501637330902918203684832716283019655932542975 x2442))) (and (and (and (and (and (and (= x3573 x2058) (not (= x1580 2737736067)) (not (< x931 4)) (>= 1461501637330902918203684832716283019655932542975 x3117) x2669 (= (or x3287 x1958) x2669) (not (= 2569309863 x1580)) (> 2952933380 x1580) (= x1749 x3572) (= x4248 x2360) (= x3287 (= x3572 x2648)) (<= x3572 1461501637330902918203684832716283019655932542975) (= x4319 x364) (> x1318 0) (>= x4248 0) (>= x299 0) (>= x3117 0) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1430) (and (< x1430 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1430) true)))) (> 1461501637330902918203684832716283019655932542976 x299) (= (x252 (x3010 x878)) x1318) (> 1461501637330902918203684832716283019655932542976 x3572) (<= 0 x364) (= x41 (x3278 1461501637330902918203684832716283019655932542975 x2360)) (= x2704 x3566) (= x3975 x2377) (not (= x1580 2753274959)) (= 0 x3566) (and (= true (<= x931 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 35 x931)) (= x2291 x4319) (= (x3057 (- x931 4)) x1430) (<= x2058 1461501637330902918203684832716283019655932542975) (<= x364 1461501637330902918203684832716283019655932542975) (= x2058 x2898) (<= x4275 1461501637330902918203684832716283019655932542975) (= (x1460 (x3010 x2058) (x2486 3) 0) x3753) (= x1850 x3009) (<= 0 x4275) (not (> 2376452955 x1580)) (< x3117 1461501637330902918203684832716283019655932542976) (<= x299 1461501637330902918203684832716283019655932542975) (= x41 x299) (<= x4248 1461501637330902918203684832716283019655932542975) (= x3572 (x1793 x3753)) (= x1958 (= x170 x3572)) (>= x3572 0) (not (> 2569309863 x1580)) (= 2766140528 x1580)) (or (and (and (= x2377 x2683) (= x4186 x1544) (= x1544 x475) x3762 (= (not x2683) x3762)) (not x2377)) (and x2377 (and x2377 (= x4031 x4150) (= x4150 x475))))) (and (= x2332 x625) (= x2237 (x1032 x4304)) (not (> 1086394137 x1513)) (<= 0 x2237) (>= 1461501637330902918203684832716283019655932542975 x1573) (= (x1460 (x3010 x1573) (x2486 2) 0) x4304) (= x1573 x3570) (= (x252 (x3010 x1376)) x4346) (not (= 1086394137 x1513)) (< 0 x4346) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2237) (= x1513 1889567281) (= x3009 x2237))) (and (not (< x342 826074471)) (>= x1211 0) (< 0 x904) (= x625 x1211) (<= x4146 1461501637330902918203684832716283019655932542975) (not (= x342 826074471)) (= 1889567281 x342) (= (x1460 (x3010 x4146) (x2486 2) 0) x3889) (= x3702 x3034) (= x1211 (x2951 x3889)) (= x3570 x4146) (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x904 (x252 (x3010 x2648))))) (and (= (x252 (x3010 x4031)) x4235) (= x3570 x3978) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1742) (= (x1460 (x3010 x3978) (x2486 2) 0) x966) (not (> 649617121 x3226)) (= x3226 1889567281) (< 0 x4235) (not (= 1422172137 x3226)) (= x1742 (x188 x966)) (>= x1742 0) (= x2662 x1484) (not (< x3226 872247156)) (not (= x3226 1086394137)) (> 2376452955 x3226) (not (= x3226 872247156)) (= x1742 x3702) (<= x3978 1461501637330902918203684832716283019655932542975))) (and x4152 (= x2778 (= x4279 x3174)) (= x1272 x2662) (<= x1272 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3174 x1864) (= x2147 1889567281) (= x3570 x1805) (<= x3570 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1805) (>= x1272 0) (= (x2658 x2489) x1272) (= x4279 x783) (<= 0 x3570) (> x1120 0) (not (= x2147 826074471)) (= x1120 (x252 (x3010 x1358))) (= (or x4239 x2778) x4152) (not (< x2147 826074471)) (= (x1460 (x3010 x1805) (x2486 2) 0) x2489))))) x3600) x999))
(assert (x1417 x2983))
(assert (= (=> (and (= x1179 x2915) (= x1933 x1186)) x3474) x502))
(assert (x1417 x4368))
(assert (x1417 x1242))
(assert (= x673 (and x2137 x2043)))
(assert (x1417 x309))
(assert (x1417 x612))
(assert (x1417 x619))
(assert (= (and x306 x2855) x3917))
(assert (= (and x2577 x1869) x2832))
(assert (x1417 x1701))
(assert (= x861 (and (not x1510) x3594)))
(assert (x1417 x3914))
(assert (= (and x3868 x1458) x551))
(assert (=> (>= 10000 x2830) (= (x2486 x2830) (x3010 x2830))))
(assert (= x2351 (=> (and (= x3798 x891) (= x2407 x1922) (= x1992 x4088)) x1934)))
(assert (= (=> (and (= x656 x3954) (= x4347 x2229)) x2779) x655))
(assert (= x1324 (and (not x951) x2039)))
(assert (= x3053 (and x2317 x350)))
(assert (= x3451 (or x420 x907)))
(assert (x1417 x1497))
(assert (= (and x2438 x2677) x1300))
(assert (= x3888 (=> (and (not (= 0 x1311)) (= (x3057 (- x574 x636)) x2992) (= x1254 (x203 (+ 4 x636))) (= (or x2514 x1604) x3959) (>= 1461501637330902918203684832716283019655932542975 x1040) (< x1040 1461501637330902918203684832716283019655932542976) (= x574 (x203 (+ x1254 64))) (= (= x2648 x1040) x1604) (= x2294 (x203 (+ 32 x1254))) (= x2514 (= x170 x1040)) x3959 (= x1040 (x1793 x3753)) (= (= x1040 x4186) x3681) (<= 0 x1040)) (and (=> (and (and (= (x3057 (- x643 4)) x3657) (= x171 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3657) true) (> 64 x3657)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3657))) (= x643 x2992) (> 2376452955 x435) (not (> 157198259 x435)) (= x973 x845) (< x435 649617121) (not (> 4 x643)) (= 68 x643) (= x3358 (x252 (x3010 x4186))) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x401) (= x435 157198259) (> x3358 0)) x3681) (and (=> x171 x1824) (=> (and (not x171) (and (= (= x973 x845) x1739) (= x3484 x973))) (and (=> (not x1739) x1824) (=> (and (and (= (x1460 (x3010 x878) (x2486 3) 0) x3571) (= x634 1) (= x553 32) (= (x1460 (x3010 x973) x3571 0) x4263)) x1739) x1784))))) (=> (and (= (= x4031 x1040) x1799) (not x3681)) (and (=> (and (not x1799) (= x3104 (= x170 x1040))) (and (=> (and x3104 (and (= x3015 x2992) (= 157198259 x1060) (= x3015 68) (= x2372 (x3057 (- x3015 4))) (> 826074471 x1060) (not (< x3015 4)) (< 0 x3608) (= (or (> x2372 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2372 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2372 64))) x3096) (= x762 4238056678808933066457772256406219440718756300954938350892797929791311314944) (not (= x1060 117300739)) (= (x252 (x3010 x170)) x3608) (= x1963 x845))) (and (=> x3096 x2807) (=> (and (not x3096) (and (= x1679 (= x845 x1963)) (= x4188 x1963))) (and (=> (and (and (= x4069 (x1460 (x3010 x1963) x4074 0)) (= 32 x1054) (= x1717 1) (= (x1460 (x3010 x878) (x2486 3) 0) x4074)) x1679) x3461) (=> (not x1679) x2807))))) (=> (and (= x2552 (= x1040 x2648)) (not x3104)) (and (=> (and (and (= x2573 4238056678808933066457772256406219440718756300954938350892797929791311314944) (not (= x854 117300739)) (= x3524 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1738) true) (< x1738 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1738))) (= x2173 x845) (< x854 826074471) (= x1738 (x3057 (- x2983 4))) (= x2983 68) (= x2983 x2992) (= 157198259 x854) (= (x252 (x3010 x2648)) x2342) (not (< x2983 4)) (< 0 x2342)) x2552) (and (=> x3524 x3097) (=> (and (not x3524) (and (= x4160 x2173) (= x2563 (= x845 x2173)))) (and (=> (not x2563) x3097) (=> (and (and (= 1 x1135) (= 32 x1346) (= x3582 (x1460 (x3010 x878) (x2486 3) 0)) (= (x1460 (x3010 x2173) x3582 0) x3969)) x2563) x3457))))) (=> (and (not x2552) (= (= x1040 x1376) x930)) (and (=> (and (= x4253 (= x1864 x1040)) (not x930)) (and (=> (and (and (> 826074471 x3371) (= x725 (x3057 (- x968 4))) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x725) true) (> 64 x725)) (> x725 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1093) (= 157198259 x3371) (= (x252 (x3010 x1864)) x1896) (not (= x3371 117300739)) (= x845 x220) (not (> 4 x968)) (= 68 x968) (< 0 x1896) (= x2992 x968) (= x2931 4238056678808933066457772256406219440718756300954938350892797929791311314944)) x4253) (and (=> (and (not x1093) (and (= x518 (= x220 x845)) (= x220 x2551))) (and (=> (not x518) x3191) (=> (and x518 (and (= x2766 (x1460 (x3010 x878) (x2486 3) 0)) (= x504 (x1460 (x3010 x220) x2766 0)) (= x906 1) (= x3093 32))) x3242))) (=> x1093 x3191))) (=> (and (not x4253) (and (= x1703 (= x1040 x1358)) (and x1703 (and (= 68 x1199) (= x2992 x1199) (= 157198259 x95) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x309) true) (> 64 x309)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x309)) x1470) (= (x3057 (- x1199 4)) x309) (< x95 826074471) (= x49 4238056678808933066457772256406219440718756300954938350892797929791311314944) (< 0 x1061) (= x845 x3403) (= (x252 (x3010 x1358)) x1061) (not (= x95 117300739)) (not (> 4 x1199)))))) (and (=> x1470 x4334) (=> (and (not x1470) (and (= x3094 (= x845 x3403)) (= x1964 x3403))) (and (=> (not x3094) x4334) (=> (and x3094 (and (= x1541 1) (= (x1460 (x3010 x3403) x3196 0) x3259) (= 32 x977) (= (x1460 (x3010 x878) (x2486 3) 0) x3196))) x2697))))))) (=> (and (and (> x1704 0) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x344) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x344)) (> 64 x344))) x898) (= x2992 x1646) (not (< x1646 4)) (not (= x1822 117300739)) (> 1086394137 x1822) (= x1822 157198259) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x1669) (= (x3057 (- x1646 4)) x344) (= (x252 (x3010 x1376)) x1704) (= x845 x1102) (= 68 x1646)) x930) (and (=> x898 x3501) (=> (and (not x898) (and (= x1102 x1801) (= x1207 (= x1102 x845)))) (and (=> (not x1207) x3501) (=> (and x1207 (and (= x3459 32) (= x598 (x1460 (x3010 x1102) x228 0)) (= (x1460 (x3010 x878) (x2486 3) 0) x228) (= 1 x2461))) x270))))))))))) (=> (and x1799 (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x954) (and (< x954 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x954) true))) x2857) (not (< x4257 4)) (= x4257 x2992) (= x845 x3351) (not (> 157198259 x3757)) (= x1297 (x252 (x3010 x4031))) (> 2376452955 x3757) (< 0 x1297) (= x954 (x3057 (- x4257 4))) (= x3757 157198259) (= x4257 68) (< x3757 649617121) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x3876))) (and (=> x2857 x2964) (=> (and (and (= (= x845 x3351) x2692) (= x1821 x3351)) (not x2857)) (and (=> (and (and (= 32 x2918) (= 1 x428) (= (x1460 (x3010 x878) (x2486 3) 0) x345) (= (x1460 (x3010 x3351) x345 0) x3796)) x2692) x2960) (=> (not x2692) x2964)))))))))))
(assert (= x811 (or x3618 x3730)))
(assert (= x3447 (=> (and (= x2915 x376) (= x3304 x1186)) x3474)))
(assert (x1417 x1450))
(assert (= (and x733 x3942) x3488))
(assert (= x3111 (or x473 x937)))
(assert (x1417 x2720))
(assert (x1417 x3541))
(assert (= x3557 (and (not x604) x1950)))
(assert (= (x1769 (x3010 x380)) x380))
(assert (x1417 x3679))
(assert (= (=> (and (= x13 x1623) (= x120 x2227)) x1501) x750))
(assert (= (=> (and (= x4205 x150) (= x3870 x4371)) x1729) x1431))
(assert (x1417 x342))
(assert (=> (<= x607 10000) (= (x2486 x607) (x3010 x607))))
(assert (=> (>= 10000 x1236) (= (x2486 x1236) (x3010 x1236))))
(assert (x1417 x3846))
(assert (x1417 x3381))
(assert (= x4055 (and (not x3872) x1129)))
(assert (= (or x1883 x889) x2656))
(assert (= x1567 (or x45 x3421)))
(assert (x1417 x971))
(assert (=> (>= 10000 x220) (= (x3010 x220) (x2486 x220))))
(assert (x1417 x1579))
(assert (= x1970 (=> (and (= x244 0) (= x2666 x4241)) x1238)))
(assert (x1417 x2061))
(assert (x1417 x1047))
(assert (= x461 (and (not x4099) x235)))
(assert (= x3238 (and x3765 (not x851))))
(assert (x1417 x1022))
(assert (x1417 x1963))
(assert (x1417 x914))
(assert (= (or (and x3170 (not x60)) x87) x2465))
(assert (= x3033 (and x173 x1570)))
(assert (=> (>= 10000 x4149) (= (x3010 x4149) (x2486 x4149))))
(assert (=> (>= 10000 x3098) (= (x2486 x3098) (x3010 x3098))))
(assert (x1417 x628))
(assert (= x1269 (=> (and (= 0 x2520) (= x1748 x3591)) x2598)))
(assert (= (and x346 (not x3433)) x2438))
(assert (= x234 (or x1691 x3558)))
(assert (x3931 x4291))
(assert (x1417 x2065))
(assert (= (and x174 x3584) x3241))
(assert (= (or x3486 x3053 x3941 x2820 x3626 x1009) x2405))
(assert (= x4162 (or x1999 x946 x2523)))
(assert (= (x1769 (x3010 x845)) x845))
(assert (=> (>= 10000 x737) (= (x3010 x737) (x2486 x737))))
(assert (= x3123 (and x1349 x3047)))
(assert (x1417 x434))
(assert (= (or x1247 x2154) x867))
(assert (= x1385 (and (not x794) x3836)))
(assert (x1417 x1731))
(assert (x1417 x1875))
(assert (= x1245 (and x2454 x333)))
(assert (= (and x3301 x268) x722))
(assert (= x4328 (=> (and (= x3356 x3382) (= x1834 0)) x2801)))
(assert (x1417 x1467))
(assert (= (and (not x2622) x1240) x3338))
(assert (x1417 x1827))
(assert (x1417 x1079))
(assert (x1417 x4116))
(assert (x3931 x3403))
(assert (x1417 x2279))
(assert (x1417 x2156))
(assert (= (and x2795 x2024) x2298))
(assert (= x1897 (and x1248 x3666)))
(assert (x1417 x322))
(assert (x1417 x3702))
(assert (x1417 x781))
(assert (x1417 x4040))
(assert (= x180 (or x3635 x324)))
(assert (= (and x238 (not x2476)) x4196))
(assert (= (and x3048 x471) x1427))
(assert (x1417 x2532))
(assert (= (=> (= 0 x3295) x3875) x774))
(assert (x1417 x3168))
(assert (x1417 x3843))
(assert (x1417 x2673))
(assert (x1417 x3235))
(assert (= x4247 (and x3300 (not x1927))))
(assert (x1417 x2679))
(assert (x1417 x708))
(assert (x1417 x1635))
(assert (x1417 x2275))
(assert (= x787 (and (not x3507) x1911)))
(assert (x1417 x1939))
(assert (x1417 x575))
(assert (= (and x273 x852) x1176))
(assert (= (=> (and (or (not x60) x60) (= x60 (= x1311 0))) x3888) x747))
(assert (= (and x3976 x359) x1882))
(assert (x1417 x4189))
(assert (x1417 x1553))
(assert (= x265 (and x153 x2742)))
(assert (= x1052 (=> (and (= x2255 x2917) (= x796 0)) x14)))
(assert (x1417 x1281))
(assert (x1417 x121))
(assert (= (and x2120 (not x3164)) x871))
(assert (=> (<= x2544 10000) (= (x3010 x2544) (x2486 x2544))))
(assert (= (and x3213 x627) x1557))
(assert (= (=> (and (= x4154 0) (= x1246 x2302)) x4300) x2414))
(assert (x1417 x2371))
(assert (= x942 (or x2205 x137 x1741 x3441 x3497 x1176)))
(assert (x1417 x2338))
(assert (x1417 x3375))
(assert (= (and x3209 (not x3294)) x356))
(assert (= (and x2957 x936) x1128))
(assert (= (or (and x2574 x4009) (and (not x2789) x146)) x177))
(assert (x1417 x3110))
(assert (x1124 x1994))
(assert (x1417 x1820))
(assert (= (and x3146 x2727) x2243))
(assert (= x4144 (and x982 x1774)))
(assert (x1417 x1864))
(assert (= (x1769 (x3010 x878)) x878))
(assert (x1417 x2135))
(assert (= x3 (and (not x178) x1847)))
(assert (x1417 x1923))
(assert (= x97 (and x3352 x519)))
(assert (= (=> (= (= 0 x3870) x556) (and (=> (and (= x1727 x662) x556) x1973) (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4205) (and (= (<= x4205 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4205 32))) x2842) (not x556)) (and (=> (and (and (= 1 x2407) (= x662 x1992)) (not x2842)) x2351) (=> (and (= x1727 x662) x2842) x1973))))) x716))
(assert (x1417 x1333))
(assert (x3931 x2000))
(assert (x1417 x1056))
(assert (= (and x1967 x1690) x219))
(assert (x1417 x3808))
(assert (= x3699 (=> (and (= x4091 x3110) (= 0 x3140)) x2451)))
(assert (=> (<= x2498 10000) (= (x3010 x2498) (x2486 x2498))))
(assert (x1417 x737))
(assert (= (=> (and (= x3072 x1251) (= x1778 x3647)) x2620) x2230))
(assert (x1417 x3429))
(assert (= (and x2390 (not x4113)) x1087))
(assert (x3931 x3535))
(assert (= x1145 (and x2382 x987)))
(assert (= x1655 (=> (and (= x3036 0) (= x1748 x3434)) x1453)))
(assert (= x2941 (and x1882 (not x2364))))
(assert (x3931 x2822))
(assert (x1417 x4157))
(assert (x1417 x4286))
(assert (x1417 x1940))
(assert (= (x3010 2376452955) (x2486 2376452955)))
(assert (x3931 x2703))
(assert (= 872247156 (x1769 (x2486 872247156))))
(assert (x1417 x2234))
(assert (x1417 x2053))
(assert (= (=> (and (= x1564 x2917) (= 0 x3030)) x4285) x959))
(assert (x1417 x854))
(assert (x1417 x510))
(assert (= x278 (and x827 x5)))
(assert (x1417 x1705))
(assert (x1417 x3554))
(assert (= x1507 (and x3458 x1703)))
(assert (= x74 (or x3851 x1845)))
(assert (x3931 x2648))
(assert (x1417 x3950))
(assert (= x889 (or (and x444 x2973) (and x647 (not x3924)))))
(assert (=> (>= 10000 x1165) (= (x2486 x1165) (x3010 x1165))))
(assert (= (and x3938 x767) x2737))
(assert (= (and x2364 x1882) x3296))
(assert (x1417 x3182))
(assert (x1417 x920))
(assert (= (=> (and (= x905 (= x3954 0)) (or (not x905) x905)) x4176) x2779))
(assert (x1417 x3809))
(assert (x3931 x1053))
(assert (= x3810 (and (not x2663) x2941)))
(assert (= (x1769 (x2486 545886713)) 545886713))
(assert (x1417 x3505))
(assert (= x3581 (or x2116 x4271 x1046 x2922 x739 x4274)))
(assert (= x4287 (and (not x2003) x3777)))
(assert (= x3020 (and (not x3213) x627)))
(assert (x1417 x1183))
(assert (x1417 x2895))
(assert (x1417 x2648))
(assert (x1417 x192))
(assert (= (and x4092 x994) x2609))
(assert (x1417 x4275))
(assert (x1417 x1503))
(assert (x1417 x2017))
(assert (x1417 x4079))
(assert (= x381 (and x2089 (not x2740))))
(assert (x1417 x4307))
(assert (= x4161 (and x568 (not x3399))))
(assert (= (and x1839 (not x3205)) x2013))
(assert (= (and x3835 x3567) x1048))
(assert (= (and x1312 (not x2842)) x2550))
(assert (= x3675 (and x1378 x2616)))
(assert (=> (<= x3862 10000) (= (x2486 x3862) (x3010 x3862))))
(assert (x3931 x4368))
(assert (x1417 x1133))
(assert (= (and x3802 x1365) x3125))
(assert (x1417 x478))
(assert (x1417 x1695))
(assert (= (or x715 x70) x4315))
(assert (= (and x2047 (not x1626)) x3279))
(assert (= (and (not x1760) x3680) x3349))
(assert (x1417 x2544))
(assert (x1417 x828))
(assert (x1417 x1822))
(assert (x3931 x4149))
(assert (= x3457 (=> (and (= x612 x1135) (= x676 x1346)) x3078)))
(assert (= x3360 (and (not x1734) x291)))
(assert (x1417 x3437))
(assert (x1417 x2199))
(assert (x1417 x3656))
(assert (x1417 x3030))
(assert (x1417 x873))
(assert (x3931 x3530))
(assert (= x1706 (and x3218 (not x317))))
(assert (= (x1769 (x3010 x1658)) x1658))
(assert (= x3739 (or x942 x114)))
(assert (= x2885 (and (not x3180) x4105)))
(assert (= x740 (or x605 x1609 x4138 x2358 x811 x3244 x3850)))
(assert (= x3865 (=> (and (= 0 x1862) (= x2569 x3382)) x1591)))
(assert (x1417 x438))
(assert (= x1842 (x1769 (x3010 x1842))))
(assert (= (x1769 (x2486 76402721711080721455099699717775724453355902399574518144543212547937138638848)) 76402721711080721455099699717775724453355902399574518144543212547937138638848))
(assert (= x2467 (=> (and (= x1246 x2448) (= x4277 0)) x3477)))
(assert (x1417 x2887))
(assert (= (and x230 x1504) x3268))
(assert (x1417 x3366))
(assert (x1417 x3500))
(assert (x1417 x2023))
(assert (x1417 x2932))
(assert (x1417 x1321))
(assert (x1417 x527))
(assert (x1417 x1903))
(assert (x1417 x4243))
(assert (= (and (not x3192) x2596) x2790))
(assert (= x1700 (and x2045 x1158)))
(assert (x1417 x2462))
(assert (= x2961 (and x767 (not x3938))))
(assert (= (and (not x3859) x3063) x1378))
(assert (x1417 x4327))
(assert (= x1062 (and x782 (not x727))))
(assert (= (and x4288 x4265) x4119))
(assert (x1417 x4181))
(assert (= (or (and x1343 x2892) (and (not x1998) x4048)) x1660))
(assert (x1417 x195))
(assert (x1417 x3522))
(assert (= x4303 (and x780 x1639)))
(assert (x1417 x2287))
(assert (= x1650 (and x2308 x1191)))
(assert (x1417 x2753))
(assert (x1417 x1237))
(assert (x1417 x3655))
(assert (x1417 x3155))
(assert (= x3641 (=> (and (= x1563 x176) (= x3332 x4040)) x2307)))
(assert (= (x1769 (x3010 x2611)) x2611))
(assert (= (=> (and (= x1197 x3110) (= x3760 0)) x1492) x1393))
(assert (= (x1769 (x3010 x1236)) x1236))
(assert (= x2758 (and (not x2506) x808)))
(assert (= (and x847 (not x3817)) x2694))
(assert (= (or x1514 x175) x4231))
(assert (x1417 x1234))
(assert (= (=> (= (= 0 x3954) x57) (and (=> (and (= x1813 x3997) x57) x4208) (=> (and (= (or (> x2229 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2229) (= (<= x2229 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x4110) (not x57)) (and (=> (and (and (= 1 x3158) (= x4073 x3997)) (not x4110)) x674) (=> (and x4110 (= x1813 x3997)) x4208))))) x4176))
(assert (x1417 x1050))
(assert (= x175 (and x1797 x3451)))
(assert (x1417 x3502))
(assert (x1417 x1914))
(assert (= x4187 (and x661 (not x1134))))
(assert (= x2451 (=> (and (= x3140 x2430) (= x4091 x302)) x491)))
(assert (x1417 x222))
(assert (=> (<= x4067 10000) (= (x3010 x4067) (x2486 x4067))))
(assert (= x70 (and x901 x3586)))
(assert (= (or (and x2799 x4119) (and x2714 (not x2391))) x465))
(assert (x1417 x4354))
(assert (x1417 x1537))
(assert (x1417 x2846))
(assert (= (and (not x1177) x4217) x307))
(assert (x1417 x744))
(assert (x1417 x4311))
(assert (x3931 x1236))
(assert (x1417 x2336))
(assert (=> (<= x274 10000) (= (x2486 x274) (x3010 x274))))
(assert (x1417 x2333))
(assert (= x1095 (and x652 (not x3019))))
(assert (x1417 x3871))
(assert (x1417 x2159))
(assert (= x715 (or (and x3586 (not x901)) (and x934 x2981))))
(assert (x1417 x315))
(assert (= (and (not x3948) x307) x2491))
(assert (= 1461501637330902918203684832716283019655932542975 (x1769 (x2486 1461501637330902918203684832716283019655932542975))))
(assert (= (and x596 x1519) x2674))
(assert (x1417 x2772))
(assert (= x765 (=> (= x1797 (> x688 0)) (and (=> (and (not x1797) (and (= x891 x3541) (= x4088 x2613))) x3400) (=> (and (and (= x4088 x371) (= x1449 1) (= x891 x594)) x1797) x2323)))))
(assert (x1417 x2819))
(assert (x1417 x2283))
(assert (= (and x2375 x3763) x2384))
(assert (= x3863 (and x2930 (not x227))))
(assert (x1417 x1468))
(assert (x1417 x3342))
(assert (x1417 x3412))
(assert (= x946 (and x1891 x1067)))
(assert (= (and x3987 (not x3293)) x4252))
(assert (x1417 x2058))
(assert (x1417 x1753))
(assert (= (and x2622 x1240) x3983))
(assert (= (and x724 (not x2276)) x4220))
(assert (= (or (and x3524 x1921) (and (not x2563) x3514)) x2507))
(assert (= (and x2193 (not x280)) x3994))
(assert (= x1015 (and x3817 x847)))
(assert (= (and x3037 (not x590)) x300))
(assert (x1417 x792))
(assert (x1417 x2950))
(assert (= (=> (and (= x4071 x3954) (= x2229 x637)) x2779) x1182))
(assert (= (and x3563 x778) x2530))
(assert (= x1053 (x1769 (x3010 x1053))))
(assert (x1417 x2688))
(assert (x1417 x2187))
(assert (= (x1769 (x3010 x3733)) x3733))
(assert (=> (>= 10000 x868) (= (x2486 x868) (x3010 x868))))
(assert (= x3635 (or x3904 x1148)))
(assert (x1417 x3250))
(assert (x1417 x2802))
(assert (= x3653 (and x3743 x1457)))
(assert (x1417 x1828))
(assert (x1417 x2028))
(assert (= x2181 (and x730 (not x3930))))
(assert (x3931 x3490))
(assert (x1417 x3183))
(assert (= (and x2047 x1626) x3336))
(assert (x1417 x4140))
(assert (= x2503 (x1769 (x3010 x2503))))
(assert (= x2602 (=> (and (= x1923 0) (= x2246 x3110)) x27)))
(assert (x1417 x4134))
(assert (= x1740 (and (not x3621) x1016)))
(assert (= x2277 (or (and x3793 x3713) (and (not x3781) x2995))))
(assert (= (x1769 (x3010 x1477)) x1477))
(assert (x1417 x1611))
(assert (= x2496 (and x1398 x679)))
(assert (x1417 x2247))
(assert (= (and (not x1342) x4090) x2019))
(assert (= x4202 (and x2796 x3357)))
(assert (x3931 x2830))
(assert (= (and x1711 (not x1138)) x439))
(assert (= (and x336 x2359) x523))
(assert (= (and x3037 x590) x2787))
(assert (x1417 x3608))
(assert (= (=> (and (= 0 x3064) (= x3413 x1524)) x1263) x3642))
(assert (= x1406 (and x763 (not x1314))))
(assert (= x2037 (and x2089 x2740)))
(assert (= x3825 (and (not x2029) x2684)))
(assert (= (x3010 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x2486 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= x1953 (=> (and (= x3870 x229) (= x707 x4205)) x1729)))
(assert (x1417 x4075))
(assert (= x4211 (or x2124 x3687)))
(assert (= x3188 (and x3669 x2207)))
(assert (x1417 x4078))
(assert (= (and (not x2274) x1983) x2265))
(assert (x1417 x1315))
(assert (= (or (and (not x642) x3018) x1117) x3547))
(assert (= x3909 (or x1475 x2339 x909 x392 x1082 x3102 x3431)))
(assert (x1417 x2446))
(assert (x1417 x4291))
(assert (x1417 x3940))
(assert (x1417 x2525))
(assert (x1417 x494))
(assert (x1417 x772))
(assert (x1417 x3090))
(assert (x1417 x3036))
(assert (x3931 x2544))
(assert (= (and x994 (not x4092)) x3246))
(assert (= (x1769 (x4245 x3753 1)) (+ (x1769 x3753) 1)))
(assert (x1417 x488))
(assert (x1417 x3691))
(assert (= x769 (=> (and (= x1926 x388) (= x3620 x1930)) x1461)))
(assert (= (and x780 (not x1639)) x3323))
(assert (= (and (not x1188) x2011) x3617))
(assert (x1417 x3414))
(assert (= (or x2536 x2827 x3972 x864 x2717 x2427) x301))
(assert (= x3652 (or x2321 x446)))
(assert (x1417 x841))
(assert (x1417 x3820))
(assert (= x3972 (and x3167 x136)))
(assert (=> (<= x4291 10000) (= (x3010 x4291) (x2486 x4291))))
(assert (x1417 x2657))
(assert (x1417 x866))
(assert (x1417 x1218))
(assert (= (and x566 x4098) x3486))
(assert (= (=> (and (or x1396 (not x1396)) (= x1396 (= 0 x1186))) x2900) x3474))
(assert (x1417 x3807))
(assert (x1417 x299))
(assert (= x2504 (and (not x3328) x1792)))
(assert (x1417 x2890))
(assert (= (and x32 x3160) x3885))
(assert (x1417 x685))
(assert (x3931 x3098))
(assert (= x2323 (=> (and (= x1311 x1449) (= x371 x2336) (= x1033 x594)) x747)))
(assert (x3931 x2201))
(assert (x1417 x1500))
(assert (= (or x1440 x2151) x217))
(assert (= (=> (and (= x3613 x1256) (= 0 x85)) x1608) x941))
(assert (= (and x2118 x859) x982))
(assert (= x295 (and x4320 x1480)))
(assert (x1417 x1857))
(assert (x1417 x1166))
(assert (x1417 x945))
(assert (= (and x288 x4222) x3937))
(assert (= 404098525 (x1769 (x2486 404098525))))
(assert (x1417 x2959))
(assert (= x498 (and x3765 x851)))
(assert (x1417 x915))
(assert (x3931 x1079))
(assert (= x3026 (and x1099 x528)))
(assert (x1417 x3981))
(assert (x1417 x637))
(assert (x1417 x1965))
(assert (x1417 x2557))
(assert (x1417 x1399))
(assert (x1417 x825))
(assert (= x156 (and x1383 x2560)))
(assert (x1417 x580))
(assert (x1417 x486))
(assert (x1417 x3201))
(assert (x1417 x3126))
(assert (x1417 x4324))
(assert (= x2531 (=> (and (= x1748 x1930) (= 0 x388)) x769)))
(assert (= (and (not x3681) x2465) x2934))
(assert (= x2420 (=> (and (= x1644 x2915) (= x1302 x1186)) x3474)))
(assert (= x849 (and (not x2791) x1447)))
(assert (= (=> (and (= 0 x906) (= x3093 x2638)) x3242) x3191))
(assert (= x3176 (and (not x3662) x1080)))
(assert (= (and x2871 x1363) x4060))
(assert (= x1088 (and x849 (not x2509))))
(assert (x1417 x4375))
(assert (x1417 x2407))
(assert (= x1192 (or x4272 x1015 x840 x4251 x3086 x3095)))
(assert (= (and x1509 x1487) x2873))
(assert (x3931 x1805))
(assert (x1417 x122))
(assert (x1417 x1043))
(assert (x1417 x429))
(assert (x1417 x2660))
(assert (= x55 (and x28 x4355)))
(assert (= (=> (and (= x612 x428) (= x676 x2918)) x3078) x2960))
(assert (x1417 x793))
(assert (= x2592 (and x432 (not x1064))))
(assert (= x1641 (x1769 (x3010 x1641))))
(assert (= (=> (and (= x612 x634) (= x676 x553)) x3078) x1784))
(assert (= x2051 (and x2995 x3781)))
(assert (x1417 x4018))
(assert (= x3162 (and x1365 (not x3802))))
(assert (x1417 x3434))
(assert (x1417 x2768))
(assert (= (and (not x189) x3609) x412))
(assert (x1417 x517))
(assert (x1417 x1782))
(assert (x1417 x1564))
(assert (x1417 x1896))
(assert (x1417 x1464))
(assert (x1417 x347))
(assert (= (or x1483 (and (not x1396) x1596)) x1457))
(assert (x1417 x3990))
(assert (= (or x1719 x3442 x2705 x1157 x1459 x722) x3202))
(assert (= x1681 (and x1868 (not x569))))
(assert (= (and (not x989) x1865) x1301))
(assert (= x1956 (and x1746 x3821)))
(assert (= (and x236 x4045) x68))
(assert (x1417 x428))
(assert (=> (>= 10000 x4051) (= (x2486 x4051) (x3010 x4051))))
(assert (x1417 x2302))
(assert (x1417 x115))
(assert (x1417 x2324))
(assert (= (=> (and (= x3601 x4205) (= x2510 x3870)) x1729) x4064))
(assert (x1417 x2122))
(assert (= x3083 (=> (and (= x1685 x2229) (= x3954 x1714)) x2779)))
(assert (x1417 x2706))
(assert (= (and x2011 x1188) x2216))
(assert (x1417 x2711))
(assert (x1417 x789))
(assert (= (and x76 x2280) x1157))
(assert (x1417 x214))
(assert (= (=> (and (= x2862 x3647) (= 0 x1251)) x2230) x3195))
(assert (= x2047 (and x727 x782)))
(assert (= x4329 (=> (and (= x913 x1926) (= x2383 x3620)) x1461)))
(assert (= (and x3999 (not x12)) x3452))
(assert (x1417 x2576))
(assert (x1417 x150))
(assert (x1417 x1710))
(assert (x1417 x4326))
(assert (= (=> (and (= x1142 x3072) (= x3397 x1778)) x2620) x1037))
(assert (x1417 x1449))
(assert (x1417 x1152))
(assert (x1417 x888))
(assert (= (and x2186 x3027) x650))
(assert (x3931 x1174))
(assert (x1417 x3118))
(assert (=> (<= x1376 10000) (= (x2486 x1376) (x3010 x1376))))
(assert (= (and x2640 (not x898)) x918))
(assert (= x1348 (and x3518 x503)))
(assert (x1417 x3459))
(assert (x1417 x758))
(assert (x1417 x1170))
(assert (= x3341 (and (not x2437) x2320)))
(assert (=> (>= 10000 x1230) (= (x2486 x1230) (x3010 x1230))))
(assert (x1417 x2977))
(assert (x1417 x3480))
(assert (x1417 x388))
(assert (x1417 x2310))
(assert (= x166 (or x3551 x1897 x3853 x3667 x2243 x833 x1520 x1549)))
(assert (= (and x2625 x3993) x2429))
(assert (= (and x1889 x1066) x492))
(assert (x1417 x548))
(assert (= (and (not x2746) x3985) x3487))
(assert (= x746 (and (not x2966) x1364)))
(assert (= (and x1803 x3668) x1830))
(assert (x1417 x826))
(assert (x1417 x3435))
(assert (x1417 x2638))
(assert (x1417 x2918))
(assert (x1417 x2659))
(assert (= (and (not x1502) x1379) x3919))
(assert (x1417 x1199))
(assert (= x3044 (and (not x75) x3420)))
(assert (= (x1769 (x3010 x3128)) x3128))
(assert (x1417 x1111))
(assert (x1417 x3768))
(assert (x1417 x3015))
(assert (x3931 x1477))
(assert (=> (<= x2595 10000) (= (x3010 x2595) (x2486 x2595))))
(assert (= x4138 (or x3335 x212)))
(assert (= (x3010 599290589) (x2486 599290589)))
(assert (x1417 x1319))
(assert (= (x1769 (x3010 x2498)) x2498))
(assert (= (or x2444 x3337 x2610 x863 x3172 x104) x929))
(assert (= (and (not x1429) x1442) x2180))
(assert (x3931 x240))
(assert (= (=> (and (= x1884 x13) (= x2227 x789)) x1501) x2540))
(assert (x1417 x672))
(assert (= (and x604 x1950) x2973))
(assert (= (or x3832 x620) x149))
(assert (x1124 x1585))
(assert (= 2753274959 (x1769 (x2486 2753274959))))
(assert (x1417 x3827))
(assert (x1417 x4235))
(assert (= (and x3293 x3987) x2168))
(assert (= (and x3360 (not x2529)) x837))
(assert (= (and (not x3038) x2104) x2958))
(assert (= (=> (and (= x4079 x1246) (= x706 0)) x415) x3932))
(assert (= (and x1083 x3081) x2401))
(assert (x1417 x2644))
(assert (x1417 x3415))
(assert (x1417 x2380))
(assert (x1417 x3103))
(assert (x1417 x3847))
(assert (x1417 x3446))
(assert (= (or (and (not x1198) x991) (and x3370 x2007) x4063 (and (not x2556) x919) x2466 (and x2940 x3778) (and x3690 x2146) (and x3189 x1675) x2143) x2056))
(assert (x1417 x337))
(assert (x1417 x120))
(assert (= (and x3134 x4124) x1678))
(assert (= x2142 (and x4266 (not x2482))))
(assert (x1417 x2921))
(assert (x1417 x1589))
(assert (= (and x549 x3901) x1455))
(assert (= x1068 (=> (and (= 0 x3981) (= x4016 x990)) x3145)))
(assert (= (and x282 (not x4370)) x2252))
(assert (= x3025 (and x3588 x4230)))
(assert (x1417 x2864))
(assert (= x2207 (and x3460 x1528)))
(assert (= (and x2594 x1011) x3124))
(assert (x1417 x3327))
(assert (x1417 x3403))
(assert (= x1794 (and (not x15) x207)))
(assert (= x1363 (and (not x1841) x1108)))
(assert (= (and x559 (not x4142)) x2724))
(assert (x1417 x3128))
(assert (x1417 x1861))
(assert (x1417 x4279))
(assert (x1417 x783))
(assert (= x3308 (and x533 (not x3787))))
(assert (= (and x2389 x1300) x3721))
(assert (= x3725 (x1769 (x3010 x3725))))
(assert (x1417 x3578))
(assert (x1417 x2829))
(assert (x3931 x737))
(assert (x1417 x1197))
(assert (= x1806 (and (not x2560) x1383)))
(assert (x1417 x1842))
(assert (= (and x2954 x1739) x2747))
(assert (= (and x2519 x1526) x237))
(assert (x1417 x1815))
(assert (x3931 x2327))
(assert (= (and x1407 x4287) x1472))
(assert (x1417 x19))
(assert (x1417 x1721))
(assert (= (and x1129 x3872) x3646))
(assert (= (x3010 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x2486 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (= 2766140528 (x1769 (x2486 2766140528))))
(assert (= (and x238 x2476) x1719))
(assert (= (and x4265 (not x4288)) x2492))
(assert (= x863 (and x2379 x3726)))
(assert (x1417 x2048))
(assert (= (and (not x3925) x511) x1379))
(assert (x1417 x876))
(assert (= x3934 (and x3418 (not x1444))))
(assert (= (and x471 (not x3048)) x425))
(assert (= x2267 (and x3985 x2746)))
(assert (= (and x3346 (not x818)) x3609))
(assert (= (and x30 (not x2406)) x1096))
(assert (x1417 x2835))
(assert (x1417 x4129))
(assert (x1417 x1361))
(assert (x1417 x2260))
(assert (= (and x350 (not x2317)) x3700))
(assert (= x3285 (and x1096 x433)))
(assert (= (x1769 (x3010 x429)) x429))
(assert (= (x1769 (x3010 x274)) x274))
(assert (= x2196 (and x2378 x3729)))
(assert (x3931 x1160))
(assert (= x2097 (=> (and (= x2917 x2344) (= x4024 0)) x3320)))
(assert (= x782 (and x1424 (not x702))))
(assert (= x2785 (and x1792 x3328)))
(assert (x1417 x4350))
(assert (x1417 x1541))
(assert (= 3645313523 (x1769 (x2486 3645313523))))
(assert (= (and x182 x360) x512))
(assert (= x422 (or x3660 x775 x3841 x4179 x1391 x3374)))
(assert (x1417 x1121))
(assert (= x4266 (and (not x2125) x2497)))
(assert (x1417 x2546))
(assert (x1417 x3604))
(assert (x3931 x4146))
(assert (x1417 x1486))
(assert (x1417 x4132))
(assert (x1417 x3947))
(assert (x1417 x1539))
(assert (= x711 (or x1631 (and x4162 (not x1628)))))
(assert (= (or x1838 x2176 x426 x52 x899 x362 x3023 x155 x1878) x2528))
(assert (= x323 (and x156 (not x1107))))
(assert (= x780 (and x2742 (not x153))))
(assert (= (and x3518 (not x503)) x3970))
(assert (x1417 x109))
(assert (= (and x4072 (not x1873)) x2536))
(assert (x1417 x1653))
(assert (= x1864 (x1769 (x3010 x1864))))
(assert (x1417 x4153))
(assert (= (or x2537 x3896) x788))
(assert (x1417 x3395))
(assert (x1417 x3718))
(assert (x1417 x94))
(assert (= (and (not x1258) x2785) x2788))
(assert (x1417 x367))
(assert (= (and (not x3151) x1095) x1967))
(assert (x1417 x3814))
(assert (= x1194 (=> (= (= x1926 0) x2725) (and (=> (and (not x2725) (= (or (> x3620 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3620 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3620 32))) x1444)) (and (=> (and x1444 (= x3883 x3613)) x941) (=> (and (and (= 1 x85) (= x3883 x1256)) (not x1444)) x1608))) (=> (and (= x3883 x3613) x2725) x941)))))
(assert (x1417 x2428))
(assert (= (and x2350 (not x1400)) x855))
(assert (= x1712 (and x381 (not x3913))))
(assert (x1417 x2845))
(assert (= (and x2270 x3426) x3249))
(assert (x1417 x2494))
(assert (= (and x4289 (not x997)) x4209))
(assert (= (and x1226 (not x2585)) x684))
(assert (= x4271 (and x1064 x432)))
(assert (= x2976 (and x2292 (not x3695))))
(assert (= (and x3534 x2325) x4217))
(assert (= (or (and x1624 x255) (and x733 (not x3942))) x2624))
(assert (= (=> (and (= x109 x1926) (= x2870 x3620)) x1461) x3964))
(assert (= x1677 (and x406 (not x3065))))
(assert (= (and x241 x955) x350))
(assert (= (and x2220 x2567) x3265))
(assert (x1417 x970))
(assert (x1417 x2224))
(assert (= (and x75 x3420) x2742))
(assert (x1417 x1831))
(assert (= (or x995 x3425 x2040 x1559 x3869 x158 x609 x3041 x983) x4255))
(assert (x1417 x2033))
(assert (x3931 x1147))
(assert (= (and x3487 x1997) x3114))
(assert (= (=> (and (= x1933 0) (= x1179 x3382)) x502) x4301))
(assert (x1417 x1714))
(assert (x1417 x1853))
(assert (x1417 x2107))
(assert (x1417 x138))
(assert (= x2007 (and x1675 (not x3189))))
(assert (x1417 x4155))
(assert (= (or x4022 x2530 x1041 x1946 x534 x492) x3844))
(assert (x1417 x623))
(assert (x1417 x402))
(assert (= x3289 (and x3288 (not x1649))))
(assert (= x1210 (x1769 (x3010 x1210))))
(assert (x1417 x3956))
(assert (x1417 x476))
(assert (= x1494 (and x2912 (not x3046))))
(assert (= (=> (and (= x1846 x1524) (= x2416 0)) x3232) x463))
(assert (x1417 x3074))
(assert (x1417 x1821))
(assert (= (x3010 2952933380) (x2486 2952933380)))
(assert (x1417 x1084))
(assert (= (and x3346 x818) x2040))
(assert (x1417 x210))
(assert (= x4098 (and (not x875) x4225)))
(assert (x1124 x2360))
(assert (= x2841 (or x33 x2298 x3275 x837 x3803 x2098)))
(assert (= (or x1192 x2175) x2225))
(assert (x1417 x2223))
(assert (= (or x2888 x1929 x2821 x1947 x79 x1944) x3832))
(assert (x1417 x2004))
(assert (= (and x2564 x786) x3345))
(assert (= (and x447 x3711) x3039))
(assert (=> (<= x1102 10000) (= (x2486 x1102) (x3010 x1102))))
(assert (= (and (not x3783) x3970) x659))
(assert (= (and x1292 (not x1916)) x2872))
(assert (= x3676 (and x4373 (not x3203))))
(assert (= x4224 (and x1565 x98)))
(assert (= (=> (and (= x9 x2260) (= x2926 x1954)) x2715) x1443))
(assert (= (x1769 (x3010 x2830)) x2830))
(assert (= (and (not x930) x3673) x2586))
(assert (= (and x4110 x3633) x1432))
(assert (x1417 x3866))
(assert (= x170 (x1769 (x3010 x170))))
(assert (x1417 x223))
(assert (= x240 (x1769 (x3010 x240))))
(assert (x1417 x179))
(assert (x1417 x3251))
(assert (x1417 x4339))
(assert (x1417 x34))
(assert (x1417 x1772))
(assert (= (=> (and (= x3774 x1884) (= 0 x789)) x2540) x2091))
(assert (= (and x1925 x1568) x1687))
(assert (=> (<= x3843 10000) (= (x3010 x3843) (x2486 x3843))))
(assert (= (x1769 (x3010 x2822)) x2822))
(assert (x1417 x670))
(assert (= (and x916 x3499) x3860))
(assert (x1417 x1994))
(assert (x1417 x4088))
(assert (= x543 (and (not x2389) x1300)))
(assert (x1417 x2881))
(assert (x1417 x3254))
(assert (x1417 x20))
(assert (= (and x2455 x3007) x3709))
(assert (x1417 x2262))
(assert (= x1024 (or (and x323 (not x1295)) (and x1107 x156))))
(assert (=> (>= 10000 x1955) (= (x3010 x1955) (x2486 x1955))))
(assert (x1417 x4338))
(assert (x1417 x1120))
(assert (x1417 x1992))
(assert (= x974 (and x89 (not x4200))))
(assert (= (x1769 (x3010 x1022)) x1022))
(assert (= x3882 (and x431 (not x785))))
(assert (x1417 x3704))
(assert (x1417 x1646))
(assert (= (=> (and (= x2638 x2918) (= x428 0)) x2960) x2964))
(assert (= (and x2166 x3345) x2682))
(assert (=> (>= 10000 x2348) (= (x3010 x2348) (x2486 x2348))))
(assert (x1417 x3813))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1769 (x2486 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= (and x207 x15) x4043))
(assert (=> (<= x3530 10000) (= (x3010 x3530) (x2486 x3530))))
(assert (x1417 x1230))
(assert (x1417 x1360))
(assert (x1417 x678))
(assert (x1417 x2269))
(assert (= (and x1326 x1637) x135))
(assert (x1417 x2344))
(assert (x1417 x4036))
(assert (=> (>= 10000 x2058) (= (x2486 x2058) (x3010 x2058))))
(assert (= x1049 (or x1325 (and x3594 x1510) (and (not x1438) x2133) (and x2035 x2965) (and x3240 (not x2261)) x3693 (and x4089 x3550) (and x4061 x3000) x2998)))
(assert (= x3137 (and x3726 (not x2379))))
(assert (x1417 x2416))
(assert (x1417 x3120))
(assert (x1417 x2600))
(assert (x1417 x2346))
(assert (= x3102 (or x1367 x2507)))
(assert (=> (>= 10000 x1641) (= (x3010 x1641) (x2486 x1641))))
(assert (= (x1769 (x2486 20853193852723734048814770637610870652489083209607696777694672748161462697984)) 20853193852723734048814770637610870652489083209607696777694672748161462697984))
(assert (= (x1769 (x3010 x1955)) x1955))
(assert (x1417 x2931))
(assert (= (=> (and (<= x1210 1461501637330902918203684832716283019655932542975) (= (x203 (+ x3928 4)) x4168) (<= 0 x1210) (= (x3278 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1585) x1815) (= (x203 (+ 32 x4168)) x4375) (not (= x2273 0)) (= x3743 (= x4186 x1210)) (> 1461501637330902918203684832716283019655932542976 x1210) (= (or x2680 x4283) x961) (= x2273 (x252 (x3010 x1210))) (= x2680 (= x4186 x1210)) (= (x3057 (- x4375 x3928)) x1366) x961 (= x1585 (x203 (+ 31 x2915))) (= (x2086 x1303) x1210) (= (x203 (+ x1815 x829)) x3928) (= x4283 (= x1210 x4031)) (not (= x1186 0)) (not (or (> x2915 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2915 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2915) true))))) (and (=> (and (and (= x596 (= x1210 x4031)) (and (and (not (< x1611 4)) (not (> 3065339685 x132)) (= (or (and (= true (<= x1482 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1482 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1482)) x925) (= x2671 x3577) (= 36 x1611) (= (x252 (x3010 x4031)) x1710) (= (x3057 (- x1611 4)) x1482) (= x132 3065339685) (= x448 82641394424300342035733052706735002277943222088490025348945809093694544936960) (> 3645313523 x132) (= x1366 x1611) (< 0 x1710) (not (> 2376452955 x132))) x596)) (not x3743)) (and (=> (and (and (<= 0 x610) (= x2738 x2671) (= (div x3577 2) x962) (<= x610 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x610) (= (= x610 x878) x1138)) (not x925)) (and (=> (and (= (= x878 0) x2145) x1138) (and (=> x2145 x635) (=> (and (not x2145) (= (= 0 x962) x335)) (and (=> (and (not x335) (and (<= x1033 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x962)) x3402) (= (< x3402 x1033) x3516) (<= 0 x1033))) (and (=> (and (not x3516) (and (= x3848 (x1460 (x3010 x878) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2865) (= (x203 (+ x1033 x962)) x2095) (>= x2865 0) (= x2865 (x2505 x3848)) (= x1191 (> x2865 x3402)))) (and (=> (and (not x1191) (and (<= 0 x3381) (<= x3381 1461501637330902918203684832716283019655932542975) (= (= x3381 x4186) x4004) (= 1 x3508) (= 128 x1829) (= (x1460 (x3010 x878) (x2486 2) 0) x3769) (= (x203 (+ x2865 x962)) x1875) (< x3381 1461501637330902918203684832716283019655932542976))) (and (=> (and (= (= x3381 x4031) x3835) (not x4004)) (and (=> (and (= x1188 (= x170 x3381)) (not x3835)) (and (=> (and (not x1188) (= x2209 (= x2648 x3381))) (and (=> (and (and (= (x3057 (- x1840 4)) x122) (= x1840 100) (= x878 x4368) (not (= x347 117300739)) (> 826074471 x347) (= x3367 (x252 (x3010 x2648))) (not (= 157198259 x347)) (= x2738 x195) (= 100 x1840) (> x3367 0) (not (= 404098525 x347)) (= x347 599290589) (not (> 4 x1840)) (= x3843 x4031) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x319) (= x794 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x122)) (< x122 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x122)))) x2209) (and (=> (and (and (= (= x4368 x878) x1521) (= x4368 x1718)) (not x794)) (and (=> (and (and (= (= x3843 x4031) x3328) (= x3843 x110)) x1521) (and (=> (not x3328) x1610) (=> (and (and (= x3628 (x4237 x416)) (<= x3628 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3628 0) (= (> x2738 x3628) x1258) (= x416 (x1460 (x3010 x4368) (x2486 2) 0)) (= x195 x151)) x3328) (and (=> (and (= (> x195 x3628) x2134) (not x1258)) (and (=> (and (and (= x1571 (x3057 (- x3628 x195))) (= (> x3440 x1768) x3849) (= (x2189 x4317) x3440) (= x3340 (x1460 (x3010 x4368) (x2486 2) 0)) (= (x1460 (x3010 x3843) (x2486 2) 0) x4317) (<= 0 x3440) (<= x3440 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x195)) x1768)) (not x2134)) (and (=> x3849 x1610) (=> (and (and (= (> x3440 x683) x1570) (= (x203 (+ x3440 x195)) x683)) (not x3849)) (and (=> (and (not x1570) (and (= (x3898 x2599) x2122) (= x2599 (x1460 (x3010 x4031) x4365 0)) (>= x2122 0) (= x4365 (x1460 (x3010 x4368) (x2486 3) 0)) (= (< x2122 x195) x2274) (<= x2122 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3710 (x1460 (x3010 x3843) (x2486 2) 0)))) (and (=> x2274 x1610) (=> (and (not x2274) (= x281 (< x2122 x195))) (and (=> x281 x1610) (=> (and (and (= x1971 32) (= x2223 (x3057 (- x2122 x195))) (= 1 x1320)) (not x281)) x2867))))) (=> x1570 x1610))))) (=> x2134 x1610))) (=> x1258 x1610))))) (=> (not x1521) x1610))) (=> x794 x1610))) (=> (and (= x1871 (= x1376 x3381)) (not x2209)) (and (=> (and (and (not (= x1069 117300739)) (= x2738 x1218) (= (x3057 (- x2763 4)) x112) (= x2763 100) (= x2337 (x252 (x3010 x1376))) (= x2288 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x878 x1022) (not (< x2763 4)) (= x2763 100) (= x4355 (or (and (< x112 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x112))) (> x112 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 599290589 x1069) (> 1086394137 x1069) (= x4031 x2498) (not (= 157198259 x1069)) (> x2337 0) (not (= 404098525 x1069))) x1871) (and (=> (and (and (= x2315 x1022) (= x2382 (= x1022 x878))) (not x4355)) (and (=> (and (and (= x1172 x2498) (= x1252 (= x2498 x4031))) x2382) (and (=> (and x1252 (and (= x1218 x4036) (= (< x3526 x2738) x3449) (= x3526 (x453 x3946)) (= (x1460 (x3010 x1022) (x2486 2) 0) x3946) (>= x3526 0) (<= x3526 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x3449 x2414) (=> (and (not x3449) (= (< x3526 x1218) x2233)) (and (=> (and (not x2233) (and (= x1579 (x3057 (- x3526 x1218))) (= x1832 (x1460 (x3010 x2498) (x2486 2) 0)) (= x2053 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1218))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2076) (= x2076 (x595 x1832)) (= x3583 (x1460 (x3010 x1022) (x2486 2) 0)) (= (< x2053 x2076) x2272) (<= 0 x2076))) (and (=> (and (and (= x2581 (< x1000 x2076)) (= x1000 (x203 (+ x2076 x1218)))) (not x2272)) (and (=> x2581 x2414) (=> (and (not x2581) (and (<= x2576 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2576 (x2300 x2088)) (= (x1460 (x3010 x4031) x624 0) x2088) (= x2749 (< x2576 x1218)) (= x624 (x1460 (x3010 x1022) (x2486 3) 0)) (= x1437 (x1460 (x3010 x2498) (x2486 2) 0)) (<= 0 x2576))) (and (=> (and (= x1725 (< x2576 x1218)) (not x2749)) (and (=> (and (not x1725) (and (= x8 (x3057 (- x2576 x1218))) (= 1 x4154) (= 32 x2302))) x4300) (=> x1725 x2414))) (=> x2749 x2414))))) (=> x2272 x2414))) (=> x2233 x2414))))) (=> (not x1252) x2414))) (=> (not x2382) x2414))) (=> x4355 x2414))) (=> (and (= (= x1864 x3381) x2457) (not x1871)) (and (=> (and (and (= (= x3381 x1358) x3930) (and x3930 (and (= x53 (x252 (x3010 x1358))) (= x1399 (x3057 (- x2048 4))) (= (or (> x1399 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1399)) (< x1399 96))) x3872) (< x2263 826074471) (= 100 x2048) (not (= x2263 157198259)) (= x1932 x878) (= x4031 x2381) (not (= 404098525 x2263)) (not (> 4 x2048)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2750) (= x2263 599290589) (> x53 0) (not (= 117300739 x2263)) (= 100 x2048) (= x2330 x2738)))) (not x2457)) (and (=> (and (not x3872) (and (= x680 (= x1932 x878)) (= x1602 x1932))) (and (=> (and x680 (and (= x2381 x2214) (= x2564 (= x4031 x2381)))) (and (=> (not x2564) x823) (=> (and x2564 (and (= x2330 x2499) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x883) (= x1975 (x1460 (x3010 x1932) (x2486 2) 0)) (= (x111 x1975) x883) (>= x883 0) (= x2166 (> x2738 x883)))) (and (=> x2166 x823) (=> (and (not x2166) (= (> x2330 x883) x1617)) (and (=> x1617 x823) (=> (and (and (<= 0 x3979) (= (x1460 (x3010 x1932) (x2486 2) 0) x1089) (<= x3979 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4169 (> x3979 x3933)) (= x3933 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2330))) (= (x2394 x3877) x3979) (= x3877 (x1460 (x3010 x2381) (x2486 2) 0)) (= (x3057 (- x883 x2330)) x1737)) (not x1617)) (and (=> x4169 x823) (=> (and (and (= x3588 (> x3979 x552)) (= x552 (x203 (+ x2330 x3979)))) (not x4169)) (and (=> x3588 x823) (=> (and (and (= (x286 x40) x3237) (<= x3237 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x3237 x2330) x2276) (= (x1460 (x3010 x4031) x1566 0) x40) (= (x1460 (x3010 x2381) (x2486 2) 0) x304) (= (x1460 (x3010 x1932) (x2486 3) 0) x1566) (>= x3237 0)) (not x3588)) (and (=> (and (not x2276) (= (> x2330 x3237) x515)) (and (=> x515 x823) (=> (and (not x515) (and (= 1 x3366) (= x1122 (x3057 (- x3237 x2330))) (= 32 x3630))) x756))) (=> x2276 x823))))))))))))) (=> (not x680) x823))) (=> x3872 x823))) (=> (and (and (= (x3057 (- x1497 4)) x844) (= x2187 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2738 x4282) (not (= 117300739 x1377)) (not (> 4 x1497)) (= 100 x1497) (= x2082 (or (and (= true (<= x844 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x844)) (> x844 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x274 x878) (> x445 0) (= x445 (x252 (x3010 x1864))) (not (= 157198259 x1377)) (not (= x1377 404098525)) (= 100 x1497) (= x1377 599290589) (> 826074471 x1377) (= x1422 x4031)) x2457) (and (=> (and (and (= (= x878 x274) x1837) (= x3908 x274)) (not x2082)) (and (=> (and x1837 (and (= x3498 (= x4031 x1422)) (= x1422 x1881))) (and (=> (not x3498) x2467) (=> (and (and (= x3741 (x1460 (x3010 x274) (x2486 2) 0)) (= x4192 x4282) (<= x1340 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1340 (x1575 x3741)) (= x2459 (< x1340 x2738)) (>= x1340 0)) x3498) (and (=> (and (= x182 (< x1340 x4282)) (not x2459)) (and (=> (and (not x182) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x599) (= x694 (x1460 (x3010 x274) (x2486 2) 0)) (= (x3057 (- x1340 x4282)) x222) (= (< x1121 x599) x3695) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4282)) x1121) (<= 0 x599) (= x599 (x2752 x1308)) (= (x1460 (x3010 x1422) (x2486 2) 0) x1308))) (and (=> x3695 x2467) (=> (and (and (= (x203 (+ x599 x4282)) x3579) (= (< x3579 x599) x1625)) (not x3695)) (and (=> (and (not x1625) (and (= x2955 (> x4282 x3789)) (= x3479 (x1460 (x3010 x274) (x2486 3) 0)) (<= x3789 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3789 0) (= (x1103 x3318) x3789) (= (x1460 (x3010 x4031) x3479 0) x3318))) (and (=> x2955 x2467) (=> (and (not x2955) (= (< x3789 x4282) x2966)) (and (=> x2966 x2467) (=> (and (not x2966) (and (= 32 x2448) (= (x3057 (- x3789 x4282)) x2548) (= 1 x4277))) x3477))))) (=> x1625 x2467))))) (=> x182 x2467))) (=> x2459 x2467))))) (=> (not x1837) x2467))) (=> x2082 x2467))))))))) (=> (and (and (= x3062 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1411) true) (< x1411 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1411))) (= 599290589 x1132) (= x2800 x878) (not (< x2959 4)) (= x2959 100) (> 826074471 x1132) (= x4031 x868) (not (= x1132 404098525)) (not (= x1132 117300739)) (not (= x1132 157198259)) (= (x252 (x3010 x170)) x2477) (= 100 x2959) (= x1411 (x3057 (- x2959 4))) (= x500 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1928 x2738) (> x2477 0)) x1188) (and (=> (and (not x3062) (and (= x2108 (= x2800 x878)) (= x1414 x2800))) (and (=> (not x2108) x3973) (=> (and x2108 (and (= x524 (= x4031 x868)) (= x868 x2331))) (and (=> (not x524) x3973) (=> (and x524 (and (= x1928 x3790) (<= 0 x1583) (= (< x1583 x2738) x3507) (= x1583 (x118 x387)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1583) (= (x1460 (x3010 x2800) (x2486 2) 0) x387))) (and (=> (and (not x3507) (= (< x1583 x1928) x2038)) (and (=> (and (and (= x988 (< x2850 x2435)) (= x2702 (x3057 (- x1583 x1928))) (= (x157 x1763) x2435) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2435) (= (x1460 (x3010 x868) (x2486 2) 0) x1763) (= x2850 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1928))) (= (x1460 (x3010 x2800) (x2486 2) 0) x3002) (>= x2435 0)) (not x2038)) (and (=> (and (not x988) (and (= (> x2435 x4219) x1866) (= (x203 (+ x1928 x2435)) x4219))) (and (=> x1866 x3973) (=> (and (not x1866) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2553) (= (> x1928 x2553) x1400) (= x3525 (x1460 (x3010 x4031) x4294 0)) (= (x1460 (x3010 x2800) (x2486 3) 0) x4294) (= (x3465 x3525) x2553) (>= x2553 0))) (and (=> x1400 x3973) (=> (and (= (< x2553 x1928) x1) (not x1400)) (and (=> x1 x3973) (=> (and (and (= x1562 1) (= x3292 (x3057 (- x2553 x1928))) (= 32 x4343)) (not x1)) x1607))))))) (=> x988 x3973))) (=> x2038 x3973))) (=> x3507 x3973))))))) (=> x3062 x3973))))) (=> (and x3835 (and (< x2287 649617121) (= (x252 (x3010 x4031)) x2921) (< x2287 2376452955) (= 100 x1761) (> x2921 0) (not (= 404098525 x2287)) (= x2287 599290589) (not (> 157198259 x2287)) (= x1761 100) (= x828 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2443 x4031) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3992) (and (= (<= x3992 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x3992))) x1387) (not (> 4 x1761)) (= x2034 x2738) (= x3992 (x3057 (- x1761 4))) (= x1641 x878) (not (= 157198259 x2287)))) (and (=> x1387 x3932) (=> (and (not x1387) (and (= x3007 (= x1641 x878)) (= x1641 x2562))) (and (=> (not x3007) x3932) (=> (and (and (= x161 x2443) (= x4212 (= x2443 x4031))) x3007) (and (=> (and x4212 (and (= x99 (x1460 (x3010 x1641) (x2486 2) 0)) (= (x2464 x99) x3099) (= (< x3099 x2738) x3331) (= x1100 x2034) (<= x3099 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3099))) (and (=> (and (not x3331) (= x1342 (> x2034 x3099))) (and (=> x1342 x3932) (=> (and (not x1342) (and (<= x3815 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3799 (x1460 (x3010 x2443) (x2486 2) 0)) (= x4032 (x1460 (x3010 x1641) (x2486 2) 0)) (= x1912 (x3057 (- x3099 x2034))) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2034)) x600) (= (x290 x3799) x3815) (= (> x3815 x600) x1517) (<= 0 x3815))) (and (=> x1517 x3932) (=> (and (not x1517) (and (= (x203 (+ x3815 x2034)) x2819) (= (> x3815 x2819) x818))) (and (=> x818 x3932) (=> (and (and (= x2949 (x1460 (x3010 x1641) (x2486 3) 0)) (= x1503 (x1496 x798)) (= (x1460 (x3010 x4031) x2949 0) x798) (= x189 (< x1503 x2034)) (= x4025 (x1460 (x3010 x2443) (x2486 2) 0)) (<= x1503 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1503 0)) (not x818)) (and (=> (and (= (< x1503 x2034) x3811) (not x189)) (and (=> (and (and (= x4079 32) (= x2428 (x3057 (- x1503 x2034))) (= 1 x706)) (not x3811)) x415) (=> x3811 x3932))) (=> x189 x3932))))))))) (=> x3331 x3932))) (=> (not x4212) x3932))))))))) (=> (and x4004 (and (= (x3057 (- x2077 4)) x470) (= x2503 x4031) (= x2738 x2395) (not (> 157198259 x4280)) (not (= x4280 157198259)) (= (x252 (x3010 x4186)) x2882) (= x2077 100) (> x2882 0) (= x3690 (or (> x470 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x470) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x470) true)))) (not (< x2077 4)) (= x1053 x878) (= x555 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4280 599290589) (< x4280 2376452955) (= 100 x2077) (> 649617121 x4280) (not (= x4280 404098525)))) (and (=> x3690 x3742) (=> (and (and (= x1053 x1229) (= x1198 (= x878 x1053))) (not x3690)) (and (=> (not x1198) x3742) (=> (and x1198 (and (= x1892 x2503) (= x2556 (= x4031 x2503)))) (and (=> (and x2556 (and (= x1532 (x4087 x73)) (= (> x2738 x1532) x2940) (= x2101 x2395) (= (x1460 (x3010 x1053) (x2486 2) 0) x73) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1532) (>= x1532 0))) (and (=> x2940 x3742) (=> (and (= (> x2395 x1532) x4167) (not x2940)) (and (=> x4167 x3742) (=> (and (not x4167) (and (<= 0 x1943) (= x4123 (x1460 (x3010 x1053) (x2486 2) 0)) (= (x4053 x2604) x1943) (= x2059 (x3057 (- x1532 x2395))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1943) (= (< x3280 x1943) x2121) (= x3280 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2395))) (= x2604 (x1460 (x3010 x2503) (x2486 2) 0)))) (and (=> (and (and (= x3189 (< x2471 x1943)) (= (x203 (+ x2395 x1943)) x2471)) (not x2121)) (and (=> x3189 x3742) (=> (and (not x3189) (and (= x3370 (> x2395 x1835)) (= (x2748 x4054) x1835) (= (x1460 (x3010 x1053) (x2486 3) 0) x24) (<= 0 x1835) (= x4054 (x1460 (x3010 x4031) x24 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1835))) (and (=> x3370 x3742) (=> (and (= x63 (> x2395 x1835)) (not x3370)) (and (=> (and (not x63) (and (= x3011 1) (= 32 x507) (= x3348 (x3057 (- x1835 x2395))))) x1161) (=> x63 x3742))))))) (=> x2121 x3742))))))) (=> (not x2556) x3742))))))))) (=> x1191 x635))) (=> x3516 x635))) (=> x335 x635))))) (=> (not x1138) x635))) (=> x925 x635))) (=> (and x3743 (and (= x1070 82641394424300342035733052706735002277943222088490025348945809093694544936960) (= x2177 x1366) (= x3577 x603) (> x1315 0) (= (x3057 (- x2177 4)) x940) (= x1315 (x252 (x3010 x4186))) (= x4331 3065339685) (not (< x4331 3065339685)) (= (or (> x940 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x940) (= true (<= x940 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1597) (= 36 x2177) (> 3645313523 x4331) (not (> 2376452955 x4331)) (not (> 4 x2177)))) (and (=> (and (and (<= x1905 1461501637330902918203684832716283019655932542975) (= (div x3577 2) x2495) (= x603 x2525) (>= x1905 0) (< x1905 1461501637330902918203684832716283019655932542976) (= x3417 (= x1905 x878))) (not x1597)) (and (=> (not x3417) x774) (=> (and (= x3146 (= x878 0)) x3417) (and (=> (and (= x532 (= x2495 0)) (not x3146)) (and (=> (and (not x532) (and (<= 0 x2336) (<= x2336 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2495)) x2366) (= (< x2366 x2336) x2069))) (and (=> x2069 x774) (=> (and (and (= x1248 (< x2366 x3152)) (= (x4087 x3291) x3152) (= x3291 (x1460 (x3010 x878) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3152) (= (x203 (+ x2495 x2336)) x3587) (<= 0 x3152)) (not x2069)) (and (=> (and (and (= 128 x3380) (= (= x2463 x4186) x3019) (>= 1461501637330902918203684832716283019655932542975 x2463) (= x2113 (x1460 (x3010 x878) (x2486 2) 0)) (<= 0 x2463) (= (x203 (+ x3152 x2495)) x4361) (> 1461501637330902918203684832716283019655932542976 x2463) (= x391 1)) (not x1248)) (and (=> (and (not x3019) (= (= x2463 x4031) x3151)) (and (=> (and x3151 (and (= x878 x3856) (= x1787 x4186) (= x1099 (or (> x3611 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x3611) (= (<= x3611 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (< x2333 649617121) (not (= x2333 157198259)) (= 100 x821) (= x3085 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x821 4)) (= (x252 (x3010 x4031)) x1035) (> x1035 0) (= x2525 x1542) (> 2376452955 x2333) (= (x3057 (- x821 4)) x3611) (= x821 100) (not (= 404098525 x2333)) (= 599290589 x2333) (not (> 157198259 x2333)))) (and (=> (and (and (= x3856 x2977) (= (= x3856 x878) x3089)) (not x1099)) (and (=> (not x3089) x3021) (=> (and x3089 (and (= x3460 (= x1787 x4186)) (= x2843 x1787))) (and (=> (not x3460) x3021) (=> (and x3460 (and (= (x1460 (x3010 x3856) (x2486 2) 0) x4337) (= (x2505 x4337) x920) (<= x920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x920 x2525) x3669) (= x1542 x2275) (<= 0 x920))) (and (=> (and (not x3669) (= x308 (< x920 x1542))) (and (=> (and (not x308) (and (= x1371 (x1460 (x3010 x1787) (x2486 2) 0)) (<= x3528 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2975 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1542))) (= (x1460 (x3010 x3856) (x2486 2) 0) x538) (= (x3311 x1371) x3528) (= x3752 (> x3528 x2975)) (= x3679 (x3057 (- x920 x1542))) (<= 0 x3528))) (and (=> (and (not x3752) (and (= x2194 (x203 (+ x1542 x3528))) (= x1613 (< x2194 x3528)))) (and (=> (and (and (= x98 (< x3204 x1542)) (= x369 (x1460 (x3010 x3856) (x2486 3) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3204) (= (x1460 (x3010 x4186) x369 0) x2434) (<= 0 x3204) (= x3204 (x1496 x2434)) (= x2880 (x1460 (x3010 x1787) (x2486 2) 0))) (not x1613)) (and (=> (and (not x98) (= (> x1542 x3204) x2045)) (and (=> x2045 x3021) (=> (and (not x2045) (and (= x646 1) (= x3852 32) (= x409 (x3057 (- x3204 x1542))))) x243))) (=> x98 x3021))) (=> x1613 x3021))) (=> x3752 x3021))) (=> x308 x3021))) (=> x3669 x3021))))))) (=> x1099 x3021))) (=> (and (not x3151) (= x1690 (= x2463 x170))) (and (=> (and x1690 (and (= x26 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4243) true) (< x4243 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4243))) (= x4050 100) (= x1910 (x252 (x3010 x170))) (not (= 404098525 x211)) (= x878 x1084) (= x4243 (x3057 (- x4050 4))) (= x211 599290589) (not (> 4 x4050)) (= x4050 100) (= x3251 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 157198259 x211)) (not (= 117300739 x211)) (< x211 826074471) (> x1910 0) (= x4186 x486) (= x2525 x3362))) (and (=> (and (not x26) (and (= x859 (= x878 x1084)) (= x1084 x1689))) (and (=> (not x859) x483) (=> (and x859 (and (= x2123 x486) (= x1774 (= x486 x4186)))) (and (=> (and x1774 (and (<= 0 x1036) (= x3362 x452) (<= x1036 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x118 x2472) x1036) (= (x1460 (x3010 x1084) (x2486 2) 0) x2472) (= x3806 (< x1036 x2525)))) (and (=> (and (= (> x3362 x1036) x2363) (not x3806)) (and (=> x2363 x483) (=> (and (not x2363) (and (= x3411 (x1460 (x3010 x486) (x2486 2) 0)) (>= x2324 0) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3362)) x355) (= x3855 (< x355 x2324)) (= x2324 (x3953 x3411)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2324) (= x799 (x1460 (x3010 x1084) (x2486 2) 0)) (= x678 (x3057 (- x1036 x3362))))) (and (=> x3855 x483) (=> (and (and (= x1886 (> x2324 x3254)) (= x3254 (x203 (+ x3362 x2324)))) (not x3855)) (and (=> (and (not x1886) (and (= (x1460 (x3010 x4186) x4232 0) x4348) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1682) (= (< x1682 x3362) x1615) (>= x1682 0) (= (x3465 x4348) x1682) (= (x1460 (x3010 x1084) (x2486 3) 0) x4232))) (and (=> x1615 x483) (=> (and (not x1615) (= (> x3362 x1682) x1139)) (and (=> (and (not x1139) (and (= 1 x2673) (= (x3057 (- x1682 x3362)) x1965) (= x2706 32))) x3419) (=> x1139 x483))))) (=> x1886 x483))))))) (=> x3806 x483))) (=> (not x1774) x483))))) (=> x26 x483))) (=> (and (= x1918 (= x2648 x2463)) (not x1690)) (and (=> (and x1918 (and (= 100 x1008) (not (= x3282 157198259)) (< x3282 826074471) (= 100 x1008) (= x210 (x252 (x3010 x2648))) (= x4186 x2188) (= x1969 (x3057 (- x1008 4))) (= x3282 599290589) (< 0 x210) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1969) (and (< x1969 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1969)))) x2645) (= x2525 x3940) (not (> 4 x1008)) (= x878 x2511) (not (= 117300739 x3282)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2468) (not (= x3282 404098525)))) (and (=> (and (not x2645) (and (= x2511 x1981) (= (= x878 x2511) x1916))) (and (=> (not x1916) x2730) (=> (and (and (= x4153 x2188) (= (= x2188 x4186) x3416)) x1916) (and (=> (and (and (= (< x3327 x2525) x658) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3327) (= x3303 (x1460 (x3010 x2511) (x2486 2) 0)) (<= 0 x3327) (= (x4237 x3303) x3327) (= x2174 x3940)) x3416) (and (=> (and (= (< x3327 x3940) x1980) (not x658)) (and (=> (and (not x1980) (and (= x2957 (> x4310 x3900)) (<= x4310 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1460 (x3010 x2511) (x2486 2) 0) x2408) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3940)) x3900) (= x4310 (x2268 x1546)) (<= 0 x4310) (= x897 (x3057 (- x3327 x3940))) (= x1546 (x1460 (x3010 x2188) (x2486 2) 0)))) (and (=> (and (not x2957) (and (= (< x4058 x4310) x3967) (= x4058 (x203 (+ x3940 x4310))))) (and (=> x3967 x2730) (=> (and (and (= x1695 (x3898 x1574)) (>= x1695 0) (<= x1695 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1394 (> x3940 x1695)) (= (x1460 (x3010 x2188) (x2486 2) 0) x2164) (= (x1460 (x3010 x2511) (x2486 3) 0) x1045) (= x1574 (x1460 (x3010 x4186) x1045 0))) (not x3967)) (and (=> (and (not x1394) (= x4359 (< x1695 x3940))) (and (=> x4359 x2730) (=> (and (and (= x696 1) (= (x3057 (- x1695 x3940)) x62) (= 32 x410)) (not x4359)) x2781))) (=> x1394 x2730))))) (=> x2957 x2730))) (=> x1980 x2730))) (=> x658 x2730))) (=> (not x3416) x2730))))) (=> x2645 x2730))) (=> (and (= x4109 (= x1376 x2463)) (not x1918)) (and (=> (and (= (= x2463 x1864) x2132) (not x4109)) (and (=> (and (not x2132) (and (and x1877 (and (= x2809 x4186) (= x1043 x2525) (= (x252 (x3010 x1358)) x2755) (= 100 x169) (= (x3057 (- x169 4)) x508) (= 100 x169) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x508) (and (> 96 x508) (= true (<= x508 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x69) (= 599290589 x4155) (not (= 157198259 x4155)) (> 826074471 x4155) (not (= 117300739 x4155)) (> x2755 0) (not (= 404098525 x4155)) (= x1485 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x878 x3067) (not (> 4 x169)))) (= (= x2463 x1358) x1877))) (and (=> x69 x2091) (=> (and (not x69) (and (= x421 (= x3067 x878)) (= x3067 x820))) (and (=> (not x421) x2091) (=> (and (and (= x2809 x3764) (= x827 (= x2809 x4186))) x421) (and (=> (and (and (= x3119 (x1460 (x3010 x3067) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2259) (= x4254 (< x2259 x2525)) (<= 0 x2259) (= x2259 (x111 x3119)) (= x140 x1043)) x827) (and (=> (and (not x4254) (= (< x2259 x1043) x3925)) (and (=> (and (not x3925) (and (= (x1460 (x3010 x3067) (x2486 2) 0) x1780) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1043)) x2968) (<= x3165 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1991 (x3057 (- x2259 x1043))) (>= x3165 0) (= x3165 (x4121 x1195)) (= x1502 (< x2968 x3165)) (= x1195 (x1460 (x3010 x2809) (x2486 2) 0)))) (and (=> (and (not x1502) (and (= x2527 (x203 (+ x1043 x3165))) (= (> x3165 x2527) x4034))) (and (=> (and (not x4034) (and (<= x814 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x286 x3315) x814) (= (x1460 (x3010 x4186) x3565 0) x3315) (= x3506 (x1460 (x3010 x2809) (x2486 2) 0)) (= x3565 (x1460 (x3010 x3067) (x2486 3) 0)) (<= 0 x814) (= (< x814 x1043) x1429))) (and (=> x1429 x2091) (=> (and (= x1163 (< x814 x1043)) (not x1429)) (and (=> (and (and (= x1055 (x3057 (- x814 x1043))) (= 1 x789) (= 32 x1884)) (not x1163)) x2540) (=> x1163 x2091))))) (=> x4034 x2091))) (=> x1502 x2091))) (=> x3925 x2091))) (=> x4254 x2091))) (=> (not x827) x2091))))))) (=> (and (and (= x2525 x77) (< 0 x2380) (> 826074471 x1213) (not (< x196 4)) (not (= x1213 157198259)) (= x2380 (x252 (x3010 x1864))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3569) (and (= (<= x3569 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x3569))) x2965) (= x878 x1236) (= x4186 x1136) (= x196 100) (not (= x1213 117300739)) (= x196 100) (not (= 404098525 x1213)) (= x3569 (x3057 (- x196 4))) (= 599290589 x1213) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x866)) x2132) (and (=> x2965 x1987) (=> (and (not x2965) (and (= x2261 (= x1236 x878)) (= x4309 x1236))) (and (=> (not x2261) x1987) (=> (and x2261 (and (= x1136 x1469) (= x1438 (= x1136 x4186)))) (and (=> (not x1438) x1987) (=> (and (and (= x1510 (< x910 x2525)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x910) (= (x1575 x4076) x910) (>= x910 0) (= x4076 (x1460 (x3010 x1236) (x2486 2) 0)) (= x2654 x77)) x1438) (and (=> x1510 x1987) (=> (and (= x3200 (< x910 x77)) (not x1510)) (and (=> x3200 x1987) (=> (and (and (<= 0 x1857) (= (> x1857 x484) x3255) (= x1857 (x1058 x2012)) (= (x1460 (x3010 x1236) (x2486 2) 0) x3194) (= x2012 (x1460 (x3010 x1136) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1857) (= (x3057 (- x910 x77)) x3503) (= x484 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x77)))) (not x3200)) (and (=> (and (not x3255) (and (= (x203 (+ x1857 x77)) x1939) (= (> x1857 x1939) x3550))) (and (=> x3550 x1987) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x434) (= x434 (x1103 x4197)) (= (x1460 (x3010 x4186) x1341 0) x4197) (= (x1460 (x3010 x1236) (x2486 3) 0) x1341) (<= 0 x434) (= x3000 (< x434 x77))) (not x3550)) (and (=> x3000 x1987) (=> (and (= (< x434 x77) x2281) (not x3000)) (and (=> (and (and (= 1 x3685) (= 32 x2433) (= x2845 (x3057 (- x434 x77)))) (not x2281)) x2762) (=> x2281 x1987))))))) (=> x3255 x1987))))))))))))))) (=> (and (and (not (= x3347 117300739)) (< 0 x1907) (not (= 404098525 x3347)) (= x2067 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1663 100) (= x878 x3949) (not (= 157198259 x3347)) (= x2286 x2525) (= x3347 599290589) (< x3347 1086394137) (= x1907 (x252 (x3010 x1376))) (= x1767 (or (and (= true (<= x1759 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1759 96)) (> x1759 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1759 (x3057 (- x1663 4))) (= x1663 100) (not (> 4 x1663)) (= x4186 x4149)) x4109) (and (=> x1767 x1209) (=> (and (and (= x2835 x3949) (= (= x878 x3949) x2741)) (not x1767)) (and (=> (and (and (= x779 x4149) (= (= x4186 x4149) x549)) x2741) (and (=> (and (and (= x2286 x1612) (>= x3321 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3321) (= x3951 (> x2525 x3321)) (= (x453 x139) x3321) (= x139 (x1460 (x3010 x3949) (x2486 2) 0))) x549) (and (=> (and (= x923 (< x3321 x2286)) (not x3951)) (and (=> x923 x1209) (=> (and (not x923) (and (<= 0 x314) (= (> x314 x493) x2125) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2286)) x493) (<= x314 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x314 (x3649 x3377)) (= x3377 (x1460 (x3010 x4149) (x2486 2) 0)) (= (x1460 (x3010 x3949) (x2486 2) 0) x4250) (= x363 (x3057 (- x3321 x2286))))) (and (=> (and (not x2125) (and (= x531 (x203 (+ x2286 x314))) (= x2482 (< x531 x314)))) (and (=> x2482 x1209) (=> (and (not x2482) (and (= x606 (x2300 x202)) (= (x1460 (x3010 x4149) (x2486 2) 0) x3775) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x606) (<= 0 x606) (= (> x2286 x606) x4206) (= x3562 (x1460 (x3010 x3949) (x2486 3) 0)) (= (x1460 (x3010 x4186) x3562 0) x202))) (and (=> (and (not x4206) (= (> x2286 x606) x2710)) (and (=> (and (and (= 1 x120) (= (x3057 (- x606 x2286)) x3814) (= 32 x1623)) (not x2710)) x750) (=> x2710 x1209))) (=> x4206 x1209))))) (=> x2125 x1209))))) (=> x3951 x1209))) (=> (not x549) x1209))) (=> (not x2741) x1209))))))))))))) (=> (and (and (= x2525 x3432) (= x878 x353) (= x2672 100) (not (> 4 x2672)) (> 649617121 x3056) (= x4278 (x3057 (- x2672 4))) (= (x252 (x3010 x4186)) x4327) (= x895 x4186) (not (< x3056 157198259)) (not (= x3056 157198259)) (not (= 404098525 x3056)) (= x1751 (or (and (< x4278 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4278) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4278))) (> 2376452955 x3056) (= 599290589 x3056) (= 100 x2672) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x537) (< 0 x4327)) x3019) (and (=> x1751 x2856) (=> (and (not x1751) (and (= (= x353 x878) x1812) (= x353 x3943))) (and (=> (and (and (= x3529 x895) (= x3893 (= x895 x4186))) x1812) (and (=> (not x3893) x2856) (=> (and x3893 (and (= (x1289 x4084) x971) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x971) (= (> x2525 x971) x3198) (<= 0 x971) (= x4084 (x1460 (x3010 x353) (x2486 2) 0)) (= x689 x3432))) (and (=> x3198 x2856) (=> (and (not x3198) (= (< x971 x3432) x809)) (and (=> x809 x2856) (=> (and (and (= (x3057 (- x971 x3432)) x494) (= x2030 (x1460 (x3010 x353) (x2486 2) 0)) (<= x2734 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2734 (x39 x2860)) (<= 0 x2734) (= x1616 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3432))) (= (x1460 (x3010 x895) (x2486 2) 0) x2860) (= (< x1616 x2734) x2470)) (not x809)) (and (=> x2470 x2856) (=> (and (not x2470) (and (= x457 (> x2734 x1895)) (= (x203 (+ x3432 x2734)) x1895))) (and (=> (and (not x457) (and (= x1914 (x2748 x3596)) (= x3857 (x1460 (x3010 x353) (x2486 3) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1914) (= (x1460 (x3010 x4186) x3857 0) x3596) (>= x1914 0) (= (< x1914 x3432) x1581))) (and (=> (and (= (< x1914 x3432) x3763) (not x1581)) (and (=> x3763 x2856) (=> (and (not x3763) (and (= x478 1) (= x3283 (x3057 (- x1914 x3432))) (= x1775 32))) x116))) (=> x1581 x2856))) (=> x457 x2856))))))))))) (=> (not x1812) x2856))))))) (=> x1248 x774))))) (=> x532 x774))) (=> x3146 x774))))) (=> x1597 x774))))) x2900))
(assert (x1417 x3559))
(assert (= (and x1278 x1427) x2399))
(assert (x1417 x2044))
(assert (x1417 x922))
(assert (x3931 x777))
(assert (= (and x3922 (not x325)) x1401))
(assert (= (=> (= x1985 (= x3072 0)) (and (=> (and (= x414 (or (and (< x1778 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1778) true)) (> x1778 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x1985)) (and (=> (and (= x990 x1333) x414) x1068) (=> (and (and (= 1 x3981) (= x1333 x4016)) (not x414)) x3145))) (=> (and (= x1333 x990) x1985) x1068))) x3945))
(assert (= x1428 (and x1785 x1595)))
(assert (x1417 x3283))
(assert (x1417 x2183))
(assert (= (x3010 82641394424300342035733052706735002277943222088490025348945809093694544936960) (x2486 82641394424300342035733052706735002277943222088490025348945809093694544936960)))
(assert (= (or x1522 x2841) x509))
(assert (x3931 x2381))
(assert (= (and x569 x1868) x4345))
(assert (x1417 x256))
(assert (x1417 x904))
(assert (= x262 (or x2313 x465)))
(assert (= x1081 (=> (and (= x3601 x1860) (= 0 x2510)) x4064)))
(assert (x1417 x455))
(assert (= (and x2563 x3514) x1367))
(assert (= (and x3681 x2465) x3921))
(assert (x1417 x676))
(assert (x1417 x2194))
(assert (x1417 x2348))
(assert (= x4300 (=> (and (= x4154 x298) (= x1537 x2302)) x1076)))
(assert (= (and x2725 x375) x3632))
(assert (= x107 (=> (and (= x3415 0) (= x3382 x499)) x3612)))
(assert (x1417 x1377))
(assert (x1417 x2499))
(assert (= (and x1225 x1368) x3172))
(assert (x3931 x380))
(assert (= x3812 (and (not x1790) x523)))
(assert (x1417 x196))
(assert (x1417 x2618))
(assert (= (x1769 (x2486 3065339685)) 3065339685))
(assert (= (and x2516 (not x2955)) x1364))
(assert (= (and x3882 (not x3991)) x3344))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1769 (x2486 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= x907 (and x2312 x3051)))
(assert (x1417 x3512))
(assert (x1417 x2836))
(assert (= (and x125 (not x3678)) x2190))
(assert (= (and x1426 x1720) x1852))
(assert (x1417 x4221))
(assert (x1417 x990))
(assert (= x1113 (or x389 x181 x2488 x2808 x398 x867 x2797)))
(assert (x1417 x1738))
(assert (= x194 (and (not x457) x992)))
(assert (x1417 x353))
(assert (x1417 x762))
(assert (x1417 x1410))
(assert (x1417 x3509))
(assert (= x3143 (or x4209 x2405)))
(assert (x1417 x594))
(assert (x1417 x1000))
(assert (= (x1769 (x2486 1889567281)) 1889567281))
(assert (x1417 x2450))
(assert (x1417 x2721))
(assert (= x2102 (and x4330 x59)))
(assert (= x1184 (and (not x2134) x2788)))
(assert (x1417 x22))
(assert (x1417 x355))
(assert (x1417 x410))
(assert (= x1160 (x1769 (x3010 x1160))))
(assert (x1417 x1053))
(assert (=> (>= 10000 x2511) (= (x2486 x2511) (x3010 x2511))))
(assert (= x2543 (=> (and (= x376 x3382) (= x3304 0)) x3447)))
(assert (x1417 x3630))
(assert (= x1384 (or x3488 x2624)))
(assert (x1417 x152))
(assert (= (x3010 1086394137) (x2486 1086394137)))
(assert (x1417 x2937))
(assert (= (and x2429 x1516) x1478))
(assert (x1417 x2322))
(assert (= x2938 (and x2749 x4013)))
(assert (x1417 x371))
(assert (x1417 x2090))
(assert (= (and (not x3005) x1375) x258))
(assert (x1417 x2095))
(assert (x1417 x1359))
(assert (x1417 x777))
(assert (= x1824 (=> (and (= x553 x2638) (= x634 0)) x1784)))
(assert (= x2909 (and x813 (not x4109))))
(assert (= (and (not x614) x3676) x3068))
(assert (x1417 x3050))
(assert (x1417 x4097))
(assert (= x4033 (and x2885 x4019)))
(assert (= x545 (and x2583 x2733)))
(assert (x1417 x321))
(assert (= (and (not x3690) x2146) x991))
(assert (= x2193 (and (not x2249) x1920)))
(assert (x1417 x3351))
(assert (x1417 x3852))
(assert (x1417 x2647))
(assert (x1417 x4302))
(assert (x1417 x405))
(assert (x1417 x1042))
(assert (x1417 x264))
(assert (= x346 (and (not x1458) x3868)))
(assert (x1417 x742))
(assert (x1417 x2834))
(assert (= x3822 (and x472 (not x1202))))
(assert (x1417 x1563))
(assert (x1417 x600))
(assert (= (and x882 (not x2459)) x360))
(assert (= (or x2126 x3903 x217 x3828 x1465 x3111 x102) x2085))
(assert (= (and x2758 x100) x3755))
(assert (x1417 x1038))
(assert (= x3494 (=> (and (= x152 x4205) (= x3870 x1111)) x1729)))
(assert (= x490 (and (not x3759) x3863)))
(assert (x1417 x1061))
(assert (= (and x3273 x3179) x2326))
(assert (= x547 (and x2312 (not x3051))))
(assert (x1417 x1846))
(assert (= (and x1512 (not x1851)) x2542))
(assert (= x973 (x1769 (x3010 x973))))
(assert (x3931 x1963))
(assert (x1417 x380))
(assert (= (=> (and (= x2430 x1923) (= x2246 x302)) x491) x27))
(assert (=> (<= x2884 10000) (= (x2486 x2884) (x3010 x2884))))
(assert (= (and x57 x2709) x1039))
(assert (= x2869 (and x3925 x511)))
(assert (=> (<= x170 10000) (= (x3010 x170) (x2486 x170))))
(assert (= (or x4118 x3302) x4006))
(assert (x1417 x1580))
(assert (= (and x1670 x1222) x775))
(assert (= x1962 (and x397 x2041)))
(assert (x1417 x2468))
(assert (x1417 x968))
(assert (x3931 x1505))
(assert (x1417 x129))
(assert (x1417 x3986))
(assert (= x2736 (=> (and (= x3141 x3954) (= x2829 x2229)) x2779)))
(assert (x1417 x845))
(assert (= x1009 (and x4289 x997)))
(assert (= (=> (and (= x4040 x1287) (= x732 x1563)) x2307) x3428))
(assert (= x155 (and x3951 x1455)))
(assert (x1417 x2925))
(assert (= (=> (and (= x3630 x1537) (= x3366 x298)) x1076) x756))
(assert (x3931 x4128))
(assert (x1417 x2430))
(assert (x1417 x2595))
(assert (= (and (not x3179) x3273) x2994))
(assert (= (x1769 (x3010 x2809)) x2809))
(assert (x1417 x3677))
(assert (= (and (not x98) x1565) x1158))
(assert (x1417 x319))
(assert (=> (<= x1908 10000) (= (x2486 x1908) (x3010 x1908))))
(assert (= x1075 (and x227 x2930)))
(assert (x1417 x977))
(assert (= x2820 (and x2480 x103)))
(assert (x1417 x3933))
(assert (x1417 x1682))
(assert (= x3599 (=> (and (= x1006 x2862) (= 0 x2296)) x4321)))
(assert (= (and x3816 x3855) x2163))
(assert (=> (>= 10000 x2643) (= (x3010 x2643) (x2486 x2643))))
(assert (x1417 x3484))
(assert (= (and (not x2209) x3617) x830))
(assert (x1417 x1644))
(assert (x1417 x4168))
(assert (x1417 x4248))
(assert (= x102 (or x4255 x2206)))
(assert (x1124 x1456))
(assert (x1417 x2654))
(assert (x1417 x1508))
(assert (= x2859 (and x440 x802)))
(assert (= (and x638 x1972) x2116))
(assert (x3931 x321))
(assert (= x328 (and x417 x856)))
(assert (= (and x2102 x4362) x147))
(assert (= x909 (or x311 x890)))
(assert (= (and (not x2082) x1265) x3171))
(assert (x1417 x470))
(assert (x1417 x2527))
(assert (= x2320 (and x1062 x4127)))
(assert (x1417 x630))
(assert (= (and x360 (not x182)) x2292))
(assert (x1417 x1136))
(assert (= x833 (and x373 (not x3417))))
(assert (= (and (not x76) x2280) x119))
(assert (=> (>= 10000 x1842) (= (x3010 x1842) (x2486 x1842))))
(assert (x1417 x1100))
(assert (= (and x2052 x2272) x1481))
(assert (x1417 x2498))
(assert (x1417 x2291))
(assert (= (and (not x1221) x4012) x2016))
(assert (= (x1769 (x2486 3187245334)) 3187245334))
(assert (= (and x2790 (not x3385)) x4105))
(assert (= (and x4061 (not x3000)) x4085))
(assert (= x2726 (x1769 (x3010 x2726))))
(assert (= x3828 (or x2617 x2621)))
(assert (= x2712 (and x3738 x2732)))
(assert (x1417 x585))
(assert (x1417 x565))
(assert (= x4289 (and x2480 (not x103))))
(assert (x1417 x1951))
(assert (x1417 x2288))
(assert (= x1868 (and x3125 (not x912))))
(assert (= (x1769 (x3010 x3936)) x3936))
(assert (= x3425 (and x2019 x1517)))
(assert (x1417 x1805))
(assert (= (or (and x1202 x472) (and (not x2112) x3822)) x2722))
(assert (x1417 x3483))
(assert (x1417 x973))
(assert (x1417 x3591))
(assert (x1417 x1892))
(assert (= x1270 (and (not x2764) x3344)))
(assert (= 2737736067 (x1769 (x2486 2737736067))))
(assert (x1417 x1623))
(assert (= (=> (and (= x3774 x1775) (= 0 x478)) x116) x2856))
(assert (x1417 x719))
(assert (= (and x2796 (not x3357)) x1016))
(assert (= (and x2607 x1323) x193))
(assert (= x2625 (and x241 (not x955))))
(assert (= (and (not x4004) x3638) x3567))
(assert (x1417 x1141))
(assert (x1417 x2884))
(assert (= x1913 (and x786 (not x2564))))
(assert (= (and x3791 x757) x963))
(assert (= x382 (and x329 (not x390))))
(assert (= (and x1177 x4217) x611))
(assert (= x1492 (=> (and (= x3760 x2430) (= x1197 x302)) x491)))
(assert (x1417 x1213))
(assert (=> (<= x240 10000) (= (x2486 x240) (x3010 x240))))
(assert (x1417 x2865))
(assert (x1417 x1070))
(assert (= x981 (and x3192 x2596)))
(assert (= x2796 (and (not x3711) x447)))
(assert (= x533 (and (not x632) x1309)))
(assert (= (x1769 (x3010 x2456)) x2456))
(assert (x1417 x2978))
(assert (= x144 (and x2935 x3740)))
(assert (= x282 (and x1425 x296)))
(assert (= x2357 (and x4000 x1348)))
(assert (x1417 x1683))
(assert (= (and x2519 (not x1526)) x3300))
(assert (= x1787 (x1769 (x3010 x1787))))
(assert (= (and x875 x4225) x3626))
(assert (x1417 x1119))
(assert (x1417 x1419))
(assert (= 2835717307 (x1769 (x2486 2835717307))))
(assert (x1417 x161))
(assert (= (and x729 x2108) x3712))
(assert (x1417 x4059))
(assert (= (and x2438 (not x2677)) x1732))
(assert (= (and (not x1273) x1196) x1659))
(assert (x1417 x3072))
(assert (x1417 x1718))
(assert (= (and x2216 (not x3062)) x729))
(assert (x1417 x710))
(assert (x1417 x607))
(assert (= (x1769 (x2486 579358252)) 579358252))
(assert (x1417 x2589))
(assert (x1417 x108))
(assert (= (=> (and (= x3954 x244) (= x2666 x2229)) x2779) x1238))
(assert (x1417 x172))
(assert (= x125 (and (not x142) x3355)))
(assert (x1417 x1253))
(assert (x1417 x4313))
(assert (=> (<= x651 10000) (= (x3010 x651) (x2486 x651))))
(assert (x1417 x3766))
(assert (= x415 (=> (and (= x298 x706) (= x1537 x4079)) x1076)))
(assert (x1417 x1044))
(assert (= (and x2692 x451) x311))
(assert (x1417 x884))
(assert (x1417 x1694))
(assert (= x3518 (and (not x3993) x2625)))
(assert (= (x1769 (x3010 x2703)) x2703))
(assert (x1417 x493))
(assert (= (and (not x1886) x1960) x310))
(assert (x1417 x448))
(assert (= x700 (and (not x3324) x570)))
(assert (x1417 x1654))
(assert (x1417 x810))
(assert (x1417 x1034))
(assert (= (and x2567 (not x2220)) x241))
(assert (x3931 x3733))
(assert (x1417 x3997))
(assert (= (x2486 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x3010 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (and x4070 x2737) x4298))
(assert (= x3961 (and (not x809) x667)))
(assert (x1417 x1910))
(assert (= (x1769 (x3010 x1488)) x1488))
(assert (= x116 (=> (and (= x13 x1775) (= x2227 x478)) x1501)))
(assert (x1417 x1982))
(assert (= x3466 (and x2039 x951)))
(assert (= x2762 (=> (and (= x2227 x3685) (= x2433 x13)) x1501)))
(assert (= (and x3640 (not x1918)) x813))
(assert (= (and x532 x720) x3667))
(assert (x3931 x1136))
(assert (= x2375 (and (not x1581) x194)))
(assert (x3931 x1022))
(assert (= (or x526 x929) x2707))
(assert (= x3963 (or x843 x2637 x4187 x1075 x2873 x4043)))
(assert (=> (<= x2611 10000) (= (x3010 x2611) (x2486 x2611))))
(assert (= x3378 (and x2436 x2773)))
(assert (= (and x1794 x485) x2637))
(assert (= x985 (and x3323 x1025)))
(assert (x1417 x1146))
(assert (x1417 x3299))
(assert (= (and x4161 x3527) x1148))
(assert (= x1382 (and x808 x2506)))
(assert (= (and x3113 x2566) x79))
(assert (= x2238 (and x3967 x1123)))
(assert (x1417 x1392))
(assert (x1417 x4038))
(assert (x1417 x25))
(assert (= (and x3267 x1448) x3756))
(assert (x1417 x1619))
(assert (= (and x3487 (not x1997)) x3777))
(assert (= x1987 (=> (and (= x2433 x3774) (= 0 x3685)) x2762)))
(assert (= (and (not x3325) x3557) x2329))
(assert (= x168 (and x861 (not x3200))))
(assert (x1417 x205))
(assert (x1417 x1374))
(assert (= (and x927 x487) x3184))
(assert (= (and (not x1889) x1066) x3361))
(assert (= (x3010 1422172137) (x2486 1422172137)))
(assert (=> (>= 10000 x3936) (= (x3010 x3936) (x2486 x3936))))
(assert (= x3999 (and x3738 (not x2732))))
(assert (= x2783 (=> (and (= x384 x2862) (= x2805 0)) x1330)))
(assert (x1417 x3511))
(assert (= x720 (and x2727 (not x3146))))
(assert (x1417 x954))
(assert (= (=> (and (= x3072 x2318) (= x159 x1778)) x2620) x3247))
(assert (x1417 x3067))
(assert (= x2282 (and x382 x393)))
(assert (= (=> (and (= x120 0) (= x3774 x1623)) x750) x1209))
(assert (x1417 x249))
(assert (x3931 x2876))
(assert (x1417 x3831))
(assert (= x1729 (=> (and (or (not x642) x642) (= (= 0 x3870) x642)) x716)))
(assert (=> (>= 10000 x1658) (= (x3010 x1658) (x2486 x1658))))
(assert (= x3939 (and x1145 x1252)))
(assert (x1417 x4367))
(assert (= x1699 (and x2203 (not x2145))))
(assert (x1417 x564))
(assert (x1417 x3725))
(assert (= (and (not x3121) x3176) x3421))
(assert (x1417 x4149))
(assert (x1417 x4366))
(assert (x1417 x358))
(assert (x1417 x3587))
(assert (x1417 x1761))
(assert (= x2011 (and (not x3835) x3567)))
(assert (= x924 (and x543 (not x1915))))
(assert (x1417 x216))
(assert (= x1499 (=> (= (= x2227 0) x4332) (and (=> (and (= x1649 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x13) (and (< x13 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x13))))) (not x4332)) (and (=> (and (not x1649) (= 1 x3295)) x3875) (=> x1649 x774))) (=> x4332 x774)))))
(assert (= (and (not x2493) x654) x2359))
(assert (x1417 x1902))
(assert (x1417 x3040))
(assert (= (and x3231 x3210) x1709))
(assert (x1417 x2573))
(assert (= (or x4351 x71 x231 x545 x1636 x4166) x2413))
(assert (=> (>= 10000 x3949) (= (x3010 x3949) (x2486 x3949))))
(assert (x1417 x1791))
(assert (= x1522 (and x2795 (not x2024))))
(assert (x3931 x2195))
(assert (= (and x3783 x3970) x235))
(assert (x1417 x3365))
(assert (= (and (not x2129) x3639) x1001))
(assert (= x197 (and x3778 (not x2940))))
(assert (= (and x830 (not x1871)) x2575))
(assert (= 2376452955 (x1769 (x2486 2376452955))))
(assert (x1124 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1417 x2877))
(assert (x1417 x2974))
(assert (= (x2486 3645313523) (x3010 3645313523)))
(assert (x1417 x206))
(assert (= (and x1692 x3020) x2664))
(assert (x3931 x1876))
(assert (x1417 x2397))
(assert (= (and x1448 (not x3267)) x2519))
(assert (x1417 x1742))
(assert (x3931 x3996))
(assert (= x1196 (and x4008 x958)))
(assert (= x647 (and x2973 (not x444))))
(assert (= x4141 (=> (and (= x2862 x3397) (= 0 x1142)) x1037)))
(assert (x1417 x272))
(assert (x1417 x1766))
(assert (= (and (not x638) x1972) x1925))
(assert (x1417 x3928))
(assert (= x2197 (and x2015 x3616)))
(assert (= x1082 (or x3698 x1859)))
(assert (= x1906 (or x1899 x1713 x289 x1700 x3188 x2744 x4224 x2289 x3026)))
(assert (x1417 x1602))
(assert (= (x1769 (x3010 x607)) x607))
(assert (x1417 x2456))
(assert (= x4089 (and x168 (not x3255))))
(assert (x1417 x1420))
(assert (= x330 (or (and x1507 x1470) (and (not x3094) x1126))))
(assert (= (or x2609 x3123 x1039 x1755 x3917 x3043 x3748 x1432) x4082))
(assert (= x3150 (or (and x3909 (not x1250)) x557)))
(assert (x1417 x2356))
(assert (= (or x3469 x4193) x3244))
(assert (= x1080 (and (not x2378) x3729)))
(assert (= x267 (and x146 x2789)))
(assert (= (and x1998 x4048) x167))
(assert (= x4246 (and x1067 (not x1891))))
(assert (x1417 x1658))
(assert (= (and x3113 (not x2566)) x620))
(assert (x1417 x829))
(assert (x1417 x3881))
(assert (x3931 x4031))
(assert (= (and x4062 x2363) x93))
(assert (= x2355 (and (not x393) x382)))
(assert (= x2544 (x1769 (x3010 x2544))))
(assert (= (and (not x1155) x232) x3729))
(assert (x1417 x631))
(assert (x3931 x3128))
(assert (x1417 x3187))
(assert (x1417 x1340))
(assert (= (or x3466 x80 x2439 x1800 x3598 x3610) x3122))
(assert (x1417 x4215))
(assert (= (x1769 (x3010 x1358)) x1358))
(assert (= x1591 (=> (and (= x1862 x1186) (= x2915 x2569)) x3474)))
(assert (= x806 (and x1765 x1806)))
(assert (= x2089 (and x3409 x2570)))
(assert (x1417 x413))
(assert (= x2769 (or x1143 x2031 x1681 x1961 x2810 x3147)))
(assert (x1417 x3080))
(assert (= x3545 (=> (= x2025 x1092) x1476)))
(assert (= (x1769 (x3010 x4051)) x4051))
(assert (x1417 x3264))
(assert (x1417 x2893))
(assert (x1417 x1569))
(assert (x1417 x975))
(assert (x1417 x4067))
(assert (= x534 (and (not x3354) x3341)))
(assert (x1417 x644))
(assert (x1417 x4050))
(assert (= (=> (and (= 0 x656) (= x4241 x4347)) x655) x4261))
(assert (x1417 x445))
(assert (= x1091 (=> (and (= 0 x1766) (= x4326 x3110)) x3481)))
(assert (= x3234 (or x2942 x1260)))
(assert (x1417 x1320))
(assert (= x1549 (and x838 x2069)))
(assert (= (and x1916 x1292) x717))
(assert (= x1150 (=> (and (= x825 0) (= x2895 x1748)) x2852)))
(assert (x1417 x3224))
(assert (x1417 x3174))
(assert (= (x2486 404098525) (x3010 404098525)))
(assert (x1417 x21))
(assert (= x2821 (and x418 x424)))
(assert (= x2884 (x1769 (x3010 x2884))))
(assert (x1417 x2237))
(assert (= (=> (and (= x4024 x1563) (= x2344 x4040)) x2307) x3320))
(assert (= (x1769 (x3010 x3530)) x3530))
(assert (= x2775 (and x2252 x3060)))
(assert (= x1475 (or x481 x584)))
(assert (x1417 x4128))
(assert (= x4007 (or x3289 x166)))
(assert (x1417 x4323))
(assert (x1417 x965))
(assert (= x2567 (and x2885 (not x4019))))
(assert (x1417 x2883))
(assert (x1417 x229))
(assert (= (and x3892 x2985) x3337))
(assert (x1417 x3031))
(assert (= x3058 (or x3844 x3361)))
(assert (x1417 x3362))
(assert (= (and x1250 x3909) x557))
(assert (x1417 x1717))
(assert (= x232 (and x2585 x1226)))
(assert (= (and (not x1349) x3047) x4330))
(assert (x1417 x2263))
(assert (= (=> (and (= 0 x1717) (= x2638 x1054)) x3461) x2807))
(assert (= x3800 (and x3398 x1362)))
(assert (= x1960 (and x3816 (not x3855))))
(assert (x1417 x4341))
(assert (x1417 x2702))
(assert (x1417 x4249))
(assert (= x3359 (and (not x2132) x2909)))
(assert (= (and x1858 (not x4358)) x3231))
(assert (= x2808 (or x3792 x2994)))
(assert (x1417 x3517))
(assert (x1417 x2217))
(assert (= x665 (and x4093 x1985)))
(assert (x2452 x1456))
(assert (x1417 x917))
(assert (x1417 x2255))
(assert (= x4026 (and x813 x4109)))
(assert (x1417 x2331))
(assert (x1417 x3467))
(assert (x1417 x768))
(assert (x1417 x766))
(assert (x1417 x3100))
(assert (= x2621 (and (not x1725) x1293)))
(assert (x1417 x1977))
(assert (x1417 x4234))
(assert (x1417 x1179))
(assert (x3931 x3725))
(assert (= (or (and x469 (not x1603)) (and x1216 x3136)) x2537))
(assert (x1417 x2614))
(assert (= x987 (and x28 (not x4355))))
(assert (x1417 x1901))
(assert (= x50 (and (not x1071) x2221)))
(assert (= x1391 (and x3068 x1974)))
(assert (x1417 x3890))
(assert (x1417 x4331))
(assert (= (and x556 x3547) x3780))
(assert (= (and x1711 x1138) x2203))
(assert (x1417 x2926))
(assert (x1417 x3724))
(assert (= (and x3255 x168) x1325))
(assert (= (x3010 2514000705) (x2486 2514000705)))
(assert (= (and x3286 (not x3405)) x2980))
(assert (= (and x601 x1110) x1041))
(assert (= x2175 (and x2694 (not x3454))))
(assert (= x3353 (=> (= (= 0 x298) x558) (and (=> (and (= x3005 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1537)) (> 32 x1537)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1537))) (not x558)) (and (=> (and (= x2393 1) (not x3005)) x1959) (=> x3005 x635))) (=> x558 x635)))))
(assert (= x899 (and x3901 (not x549))))
(assert (x1417 x2366))
(assert (= x1531 (and x1865 x989)))
(assert (= x933 (or x3116 x963 x97 x68 x664 x4295)))
(assert (x3931 x1955))
(assert (= x790 (and x1363 (not x2871))))
(assert (x1417 x2728))
(assert (= (or (and (not x2692) x451) (and x3980 x2857)) x890))
(assert (= (and x3137 (not x2699)) x526))
(assert (x1417 x65))
(assert (x1417 x3220))
(assert (x1417 x2511))
(assert (x1417 x1943))
(assert (= (x1769 (x3010 x1147)) x1147))
(assert (x1124 1461501637330902918203684832716283019655932542975))
(assert (= (and x3108 x3252) x1944))
(assert (= x200 (x1769 (x3010 x200))))
(assert (x1417 x2296))
(assert (= x1673 (and x3391 x2979)))
(assert (x1417 x862))
(assert (= (x2486 76402721711080721455099699717775724453355902399574518144543212547937138638848) (x3010 76402721711080721455099699717775724453355902399574518144543212547937138638848)))
(assert (= (and x4144 (not x3806)) x4062))
(assert (= (and x1699 x335) x3373))
(assert (=> (>= 10000 x1053) (= (x2486 x1053) (x3010 x1053))))
(assert (x1417 x2901))
(assert (= x1788 (and x3391 (not x2979))))
(assert (= (x3010 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x2486 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x1417 x484))
(assert (x3931 x1376))
(assert (x3931 x353))
(assert (x1417 x597))
(assert (= (and (not x1814) x1659) x3549))
(assert (= (and x1847 x178) x2205))
(assert (x1417 x2738))
(assert (x1417 x1389))
(assert (= x1442 (and x3919 (not x4034))))
(assert (x1417 x4031))
(assert (x1417 x1727))
(assert (x1417 x2077))
(assert (x1417 x618))
(assert (= x3514 (and (not x3524) x1921)))
(assert (x1417 x1370))
(assert (x1417 x314))
(assert (= (and x849 x2509) x236))
(assert (= (and x3272 x613) x4251))
(assert (= (and x2479 x1687) x739))
(assert (= x618 (x1769 (x3010 x618))))
(assert (= x4146 (x1769 (x3010 x4146))))
(assert (= x2396 (or x3206 x4002)))
(assert (x1417 x1979))
(assert (x1417 x1775))
(assert (x1417 x2806))
(assert (x1417 x327))
(assert (= (and x2158 x2848) x2981))
(assert (x3931 x4186))
(assert (x1417 x812))
(assert (x1417 x3532))
(assert (= x4063 (and x4167 x197)))
(assert (x1417 x1140))
(assert (=> (<= x3535 10000) (= (x3010 x3535) (x2486 x3535))))
(assert (= (and (not x4110) x3633) x629))
(assert (= x843 (and x3863 x3759)))
(assert (x1417 x2020))
(assert (x1417 x805))
(assert (= (=> (and (= x3630 x1246) (= 0 x3366)) x756) x823))
(assert (x1417 x2068))
(assert (= (or x3033 x3597 x2868 x17 x1154 x3017 x1525 x2504 x976) x937))
(assert (= (x1769 (x3010 x1908)) x1908))
(assert (x1417 x1165))
(assert (= (and x3063 x3859) x703))
(assert (= (and x2309 x4344) x33))
(assert (= x2930 (and x1794 (not x485))))
(assert (= (and x832 x3331) x158))
(assert (x1417 x3716))
(assert (x1417 x1535))
(assert (x1417 x2105))
(assert (x1417 x2259))
(assert (= (and x1222 (not x1670)) x1322))
(assert (x1417 x3177))
(assert (= (and x2492 (not x2460)) x536))
(assert (= x1519 (and x1457 (not x3743))))
(assert (= (x3010 893399075) (x2486 893399075)))
(assert (x1417 x2064))
(assert (= x96 (or (and x1326 (not x1637)) (and x4342 x806))))
(assert (x1417 x3444))
(assert (= (and x142 x3355) x1636))
(assert (= x3021 (=> (and (= x3774 x3852) (= x646 0)) x243)))
(assert (= x321 (x1769 (x3010 x321))))
(assert (= x3211 (and x2963 x2013)))
(assert (x1417 x2605))
(assert (x1417 x2119))
(assert (x1417 x3770))
(assert (= x3232 (=> (and (= x9 x1846) (= x2416 x1954)) x2715)))
(assert (= x4066 (and x1550 x1551)))
(assert (= (x3010 579358252) (x2486 579358252)))
(assert (= x2039 (and x2859 (not x3225))))
(assert (= (x2486 2766140528) (x3010 2766140528)))
(assert (x1417 x320))
(assert (= (and x3939 (not x3449)) x3066))
(assert (= (and x1373 x2580) x273))
(assert (= (x1769 (x2486 1086394137)) 1086394137))
(assert (= (x2486 872247156) (x3010 872247156)))
(assert (= x2630 (or x1390 x3462 x2869 x3045 x261 x2780 x2370 x2825 x869)))
(assert (= x895 (x1769 (x3010 x895))))
(assert (x1417 x1583))
(assert (= (or x1049 x3014) x2358))
(assert (x1417 x3804))
(assert (x1417 x2750))
(assert (x1417 x2917))
(assert (x1417 x1704))
(assert (x1417 x1054))
(assert (x1417 x3410))
(assert (x1417 x2337))
(assert (= x1330 (=> (and (= x2805 x3072) (= x1778 x384)) x2620)))
(assert (x1417 x2071))
(assert (= (and x2993 (not x2741)) x52))
(assert (x1417 x4278))
(assert (= x3431 (or x496 x2878)))
(assert (x1417 x2582))
(assert (x3931 x274))
(assert (= x730 (and (not x2457) x2575)))
(assert (x1417 x3634))
(assert (x1417 x2484))
(assert (= x561 (x1769 (x3010 x561))))
(assert (= x1084 (x1769 (x3010 x1084))))
(assert (= x539 (and (not x958) x4008)))
(assert (x1417 x1964))
(assert (= x3884 (or (and x2085 (not x3013)) x2347)))
(assert (x1417 x3647))
(assert (x1417 x2862))
(assert (= x1643 (=> (and (= x94 x3110) (= 0 x65)) x4120)))
(assert (x1417 x2213))
(assert (x1417 x3834))
(assert (= x1959 (=> (= x3368 x2393) x887)))
(assert (= (and (not x1797) x3451) x3531))
(assert (= (and x3360 x2529) x4344))
(assert (x1417 x2327))
(assert (= x4014 (and x381 x3913)))
(assert (x3931 x2188))
(assert (= (and x702 x1424) x677))
(assert (x1417 x403))
(assert (= (x2486 773487949) (x3010 773487949)))
(assert (= (and x3246 x3274) x190))
(assert (= (and x3893 x2222) x633))
(assert (= (=> (and (= x42 x1186) (= x2284 x2915)) x3474) x718))
(assert (x1417 x645))
(assert (x1417 x1834))
(assert (x1417 x723))
(assert (= x3745 (or x1270 x2793)))
(assert (x1417 x3280))
(assert (= x2210 (and x533 x3787)))
(assert (x1417 x2365))
(assert (x1417 x1172))
(assert (x1417 x2968))
(assert (= (and (not x1) x855) x2151))
(assert (x1417 x1534))
(assert (= x868 (x1769 (x3010 x868))))
(assert (x1417 x2708))
(assert (= x173 (and x1184 (not x3849))))
(assert (x1417 x4073))
(assert (= (and (not x2258) x3700) x3941))
(assert (x1417 x3790))
(assert (x1417 x2341))
(assert (x1417 x2101))
(assert (x1417 x277))
(assert (= (and (not x3060) x2252) x741))
(assert (x1417 x1505))
(assert (= x4321 (=> (and (= x2296 x3072) (= x1006 x1778)) x2620)))
(assert (x1417 x1147))
(assert (x1417 x3371))
(assert (= (x2486 85927964219764727760667161919810921830953265369826564066086284937368273158144) (x3010 85927964219764727760667161919810921830953265369826564066086284937368273158144)))
(assert (= x2178 (and x307 x3948)))
(assert (= x2765 (and x1863 (not x3824))))
(assert (x1417 x4346))
(assert (= (and x4332 x3333) x3853))
(assert (= (or x902 x2355) x3463))
(assert (x1417 x4205))
(assert (= (=> (and (= x1311 x3981) (= x1033 x3798) (= x2336 x4016)) x747) x3145))
(assert (x1417 x1104))
(assert (= (and x2054 x700) x3985))
(assert (x1417 x1748))
(assert (x1417 x1582))
(assert (= x101 (x1769 (x3010 x101))))
(assert (x1417 x2173))
(assert (x1417 x1485))
(assert (x1417 x2591))
(assert (= x1708 (and (not x2045) x1158)))
(assert (= x2058 (x1769 (x3010 x2058))))
(assert (= x1845 (and x2096 x3654)))
(assert (= (or (and x918 (not x1207)) (and x2640 x898)) x481))
(assert (x1417 x646))
(assert (x1417 x3592))
(assert (= (and (not x2094) x677) x2684))
(assert (= x3116 (and (not x4281) x807)))
(assert (= x4186 (x1769 (x3010 x4186))))
(assert (x1417 x3382))
(assert (= (and x705 (not x4276)) x1920))
(assert (= x30 (and (not x2935) x3740)))
(assert (x1417 x2034))
(assert (x1417 x4319))
(assert (x1417 x1422))
(assert (x1417 x95))
(assert (x1417 x913))
(assert (= x3843 (x1769 (x3010 x3843))))
(assert (x1417 x458))
(assert (x1417 x2866))
(assert (= (and x2168 x3515) x571))
(assert (x1417 x662))
(assert (x1417 x1884))
(assert (= x3441 (and x3 x1200)))
(assert (= (and x2896 x2958) x2098))
(assert (= x4225 (and x3700 x2258)))
(assert (= x2825 (and x908 x69)))
(assert (= x84 (or x66 x3317)))
(assert (x1417 x721))
(assert (= (=> (and (= x4371 0) (= x1860 x150)) x1431) x3276))
(assert (x1417 x1366))
(assert (=> (>= 10000 x1358) (= (x3010 x1358) (x2486 x1358))))
(assert (x1417 x4310))
(assert (= x3864 (=> (and (= x1778 x3736) (= x3914 x3072)) x2620)))
(assert (= (and (not x2971) x4345) x705))
(assert (x1417 x3548))
(assert (x1417 x3858))
(assert (x1417 x2686))
(assert (= x3792 (or x164 x2178 x3965 x193 x2326 x611)))
(assert (x1417 x3356))
(assert (x3931 x1439))
(assert (= x486 (x1769 (x3010 x486))))
(assert (x1417 x1090))
(assert (= x4373 (and x1322 x3998)))
(assert (x1417 x2671))
(assert (= (and x3038 x2104) x3275))
(assert (x1417 x883))
(assert (x1417 x2992))
(assert (=> (<= x2800 10000) (= (x3010 x2800) (x2486 x2800))))
(assert (= (or x2182 x2722) x3776))
(assert (= (=> (and (= 0 x2673) (= x2706 x3774)) x3419) x483))
(assert (= (and (not x335) x1699) x2500))
(assert (x1417 x2490))
(assert (= (=> (and (= x1563 x459) (= x4040 x2591)) x2307) x1316))
(assert (= x2727 (and x373 x3417)))
(assert (x1417 x1351))
(assert (= x2972 (and (not x2038) x787)))
(assert (x1417 x993))
(assert (= (and (not x3588) x4230) x724))
(assert (= (and x4055 (not x680)) x269))
(assert (x1798 x2442))
(assert (= x3218 (and (not x2479) x1687)))
(assert (x1417 x1879))
(assert (x1417 x2435))
(assert (=> (<= x1977 10000) (= (x2486 x1977) (x3010 x1977))))
(assert (x3931 x486))
(assert (= x4222 (and (not x399) x1561)))
(assert (= x1671 (and (not x2817) x2293)))
(assert (= x71 (and x3088 (not x3012))))
(assert (=> (>= 10000 x3725) (= (x3010 x3725) (x2486 x3725))))
(assert (= (and x1455 (not x3951)) x2996))
(assert (= (or x3674 x746) x3903))
(assert (= 649617121 (x1769 (x2486 649617121))))
(assert (= x2574 (and x1078 x2264)))
(assert (=> (<= x3067 10000) (= (x2486 x3067) (x3010 x3067))))
(assert (= (x1769 (x4245 x1303 1)) (+ (x1769 x1303) 1)))
(assert (x1417 x3543))
(assert (= (and x291 x1734) x3803))
(assert (= x2837 (and x4220 (not x515))))
(assert (x1417 x1336))
(assert (= x1859 (and x518 x1693)))
(assert (x1417 x554))
(assert (x1417 x4293))
(assert (x1417 x244))
(assert (x1417 x2290))
(assert (x3931 x4189))
(assert (= x2285 (and x4093 (not x1985))))
(assert (x1417 x1354))
(assert (x1417 x2318))
(assert (x1417 x3829))
(assert (= x2827 (and x2980 x602)))
(assert (x1417 x4182))
(assert (x1417 x2383))
(assert (x1417 x2315))
(assert (= (and (not x2568) x498) x487))
(assert (= (and x1016 x3621) x1735))
(assert (x1417 x3614))
(assert (x1417 x3908))
(assert (x1417 x4190))
(assert (= x1952 (or x4201 x3452)))
(assert (= x2483 (and x1295 x323)))
(assert (= (and x1830 (not x2984)) x3510))
(assert (x1417 x2214))
(assert (= (x1769 (x2486 2952933380)) 2952933380))
(assert (= (x3010 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2486 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x3931 x437))
(assert (x1417 x3215))
(assert (x1417 x2453))
(assert (= (and x3884 (not x558)) x1375))
(assert (x1417 x3854))
(assert (x1417 x1826))
(assert (= x4022 (and x3960 x2559)))
(assert (x1417 x1942))
(assert (x1417 x4171))
(assert (x1417 x1938))
(assert (x3931 x1165))
(assert (= x3973 (=> (and (= x4343 x1246) (= x1562 0)) x1607)))
(assert (=> (<= x3538 10000) (= (x3010 x3538) (x2486 x3538))))
(assert (x1417 x1337))
(assert (x1417 x3508))
(assert (= (and (not x701) x3568) x3616))
(assert (= (and x3887 (not x3995)) x329))
(assert (x1417 x169))
(assert (= (and (not x1163) x2180) x506))
(assert (x1417 x4160))
(assert (= (=> (and (= x3398 (= 0 x3368)) (or x3398 (not x3398))) x3749) x887))
(assert (= (and x1814 x1659) x417))
(assert (x1417 x707))
(assert (= x3206 (or x3590 x1471 x144 x3285 x2169 x2037 x1712 x665)))
(assert (x1417 x2520))
(assert (x1417 x1823))
(assert (x1417 x1135))
(assert (= x3442 (and x1463 x119)))
(assert (= x3671 (or (and x2724 (not x3430)) (and x559 x4142))))
(assert (x1417 x3152))
(assert (x1417 x3223))
(assert (x1417 x928))
(assert (x1417 x384))
(assert (= (=> (and (or x1628 (not x1628)) (= x1628 (= 0 x1922))) x2612) x1934))
(assert (= x1929 (and x2172 x3885)))
(assert (= x1697 (and x3927 x1948)))
(assert (x1417 x1452))
(assert (=> (>= 10000 x3490) (= (x3010 x3490) (x2486 x3490))))
(assert (= (or (and x2390 x4113) (and x1087 (not x1105))) x3302))
(assert (x1417 x1266))
(assert (= x2104 (and (not x2309) x4344)))
(assert (x1417 x450))
(assert (= true x1204))
(assert (x1417 x1477))
(assert (= (and x4214 x1310) x1741))
(assert (=> (>= 10000 x1147) (= (x2486 x1147) (x3010 x1147))))
(assert (= x2321 (and x3277 x1168)))
(assert (= (and x3930 x730) x1129))
(assert (= (or x2093 x2578) x1434))
(assert (x1417 x1397))
(assert (= x3139 (and x2533 x658)))
(assert (x1417 x3644))
(assert (= x333 (or x145 x3463 x1137 x3745 x3058 x3059 x84)))
(assert (= (and x659 x2244) x2293))
(assert (= x128 (or x3994 x2769)))
(assert (= (and (not x414) x2285) x4002))
(assert (= (or x874 x2650) x3833))
(assert (x1417 x1073))
(assert (= (and x2249 x1920) x1961))
(assert (= (and (not x1595) x1785) x4320))
(assert (x1417 x2148))
(assert (= (x1769 (x2486 893399075)) 893399075))
(assert (x1417 x351))
(assert (= (and (not x1570) x173) x1983))
(assert (= x1578 (and x2980 (not x602))))
(assert (x1417 x344))
(assert (= (and x4266 x2482) x362))
(assert (x1417 x3380))
(assert (x1417 x4071))
(assert (= (and x3205 x1839) x728))
(assert (= x4183 (and (not x1099) x528)))
(assert (x1417 x2626))
(assert (= (and x4369 x1706) x1046))
(assert (= x3499 (and x3279 x2136)))
(assert (= (x1769 (x3010 x1165)) x1165))
(assert (= (and (not x4178) x1671) x617))
(assert (x1417 x4051))
(assert (= (and (not x1554) x3983) x1112))
(assert (= (and x1597 x3653) x1520))
(assert (= x2922 (and x3218 x317)))
(assert (= (or x3878 x1740) x2488))
(assert (= (x1769 (x3010 x4368)) x4368))
(assert (= (or x4095 x1301) x2797))
(assert (x1417 x706))
(assert (x1417 x3003))
(assert (x1417 x62))
(assert (= (=> (and (= (= x3072 0) x3715) (or (not x3715) x3715)) x3945) x2620))
(assert (x1417 x2646))
(assert (= (=> (and (= x3831 x9) (= x1954 x1360)) x2715) x1872))
(assert (x1417 x508))
(assert (= (and x3976 (not x359)) x1425))
(assert (= x3868 (and (not x2616) x1378)))
(assert (= x3127 (and x82 x3645)))
(assert (= x1651 (or x361 x1164)))
(assert (x1417 x3165))
(assert (= (and (not x1387) x1048) x2455))
(assert (x1417 x2254))
(assert (= x753 (=> (and (= x4241 x637) (= 0 x4071)) x1182)))
(assert (x1417 x1926))
(assert (=> (<= x4368 10000) (= (x2486 x4368) (x3010 x4368))))
(assert (=> (<= x429 10000) (= (x3010 x429) (x2486 x429))))
(assert (= (and x4359 x2670) x1017))
(assert (x1417 x3629))
(assert (= x1476 (=> (and (= x1825 (= x2025 0)) (or (not x1825) x1825)) x4041)))
(assert (x1417 x3631))
(assert (= x2793 (or x263 x4260 x3212 x3860 x3336 x514)))
(assert (= (and (not x2166) x3345) x1169))
(assert (=> (>= 10000 x973) (= (x2486 x973) (x3010 x973))))
(assert (= x3097 (=> (and (= x1346 x2638) (= x1135 0)) x3457)))
(assert (x1417 x1057))
(assert (= (and x3230 (not x2710)) x162))
(assert (x1417 x2760))
(assert (x1417 x3292))
(assert (= x17 (and (not x1521) x1385)))
(assert (= x4325 (or (and (not x1739) x2954) (and x3921 x171))))
(assert (x1417 x3954))
(assert (x3931 x2511))
(assert (x1417 x140))
(assert (= 1422172137 (x1769 (x2486 1422172137))))
(assert (= (and x3728 x1112) x2422))
(assert (= (and x2406 x30) x1471))
(assert (x1417 x4027))
(assert (x1417 x610))
(assert (x1417 x1285))
(assert (= x88 (=> (= 0 x685) x3605)))
(assert (= (and x423 x3498) x882))
(assert (=> (>= 10000 x4128) (= (x3010 x4128) (x2486 x4128))))
(assert (x1417 x725))
(assert (x1417 x246))
(assert (= (or x3184 x3495) x324))
(assert (=> (<= x2173 10000) (= (x3010 x2173) (x2486 x2173))))
(assert (=> (>= 10000 x561) (= (x2486 x561) (x3010 x561))))
(assert (x1417 x4146))
(assert (= (=> (and (= x977 x2638) (= x1541 0)) x2697) x4334))
(assert (= x2271 (=> (and (= x707 x1860) (= 0 x229)) x1953)))
(assert (x3931 x4035))
(assert (= x2888 (and x2311 (not x1664))))
(assert (= (or x2115 x3934) x2523))
(assert (x1417 x761))
(assert (x1417 x2898))
(assert (x3931 x3862))
(assert (x1417 x1804))
(assert (= (and x2765 (not x4159)) x1214))
(assert (= x1373 (and x711 (not x3144))))
(assert (x1417 x3358))
(assert (x1417 x3032))
(assert (x3931 x4116))
(assert (= (and x414 x2285) x2169))
(assert (x1417 x3535))
(assert (x1417 x967))
(assert (= x3726 (and x1368 (not x1225))))
(assert (x1417 x895))
(assert (x1417 x2952))
(assert (x1417 x1482))
(assert (= (and x4247 (not x1632)) x4047))
(assert (= (x2486 826074471) (x3010 826074471)))
(assert (x1417 x797))
(assert (= (or x1249 x4007) x1362))
(assert (x1417 x868))
(assert (= x1785 (and (not x3210) x3231)))
(assert (= (=> (and (= x4335 x1524) (= x1810 0)) x3564) x3422))
(assert (= x1462 (and x1021 x939)))
(assert (x3931 x3369))
(assert (x1417 x636))
(assert (=> (>= 10000 x895) (= (x2486 x895) (x3010 x895))))
(assert (= (or x4211 x2225 x2248 x2032 x1567 x1647 x3842) x2813))
(assert (=> (>= 10000 x1210) (= (x3010 x1210) (x2486 x1210))))
(assert (= x207 (and x1134 x661)))
(assert (x1417 x821))
(assert (x1417 x1981))
(assert (x1417 x1495))
(assert (x1417 x896))
(assert (x1417 x537))
(assert (= x389 (or x3963 x490)))
(assert (x3931 x170))
(assert (x1417 x90))
(assert (=> (>= 10000 x618) (= (x3010 x618) (x2486 x618))))
(assert (x3931 x973))
(assert (x1417 x1954))
(assert (x1417 x302))
(assert (x1417 x449))
(assert (= x2717 (and x3386 x248)))
(assert (x1417 x1430))
(assert (x1417 x1311))
(assert (= (x1769 (x3010 x1079)) x1079))
(assert (= (or (and (not x3715) x2813) x3504) x4093))
(assert (= (and x4090 x1342) x3041))
(assert (x1417 x3394))
(assert (= x3730 (and x2745 (not x1139))))
(assert (= (and x4119 (not x2799)) x2714))
(assert (x1417 x3733))
(assert (= x2167 (and x1293 x1725)))
(assert (= (and x1617 x1169) x2))
(assert (x1417 x1035))
(assert (= (=> (= (= x1922 0) x3144) (and (=> (and (and (= x891 x3541) (= x2613 x4088)) x3144) x3400) (=> (and (not x3144) (and (= (= x1505 x4186) x2580) (<= 0 x1505) (= x1505 (x1793 x1283)) (<= x1505 1461501637330902918203684832716283019655932542975) (= x516 (= x1505 x170)) (> 1461501637330902918203684832716283019655932542976 x1505) (= x348 (= x2648 x1505)) (= (or x516 x348) x4314) x4314 (= 128 x865))) (and (=> (and x2580 (and (< 0 x1635) (< x3483 3065339685) (not (< x3483 2678909723)) (= x1635 (x252 (x3010 x4186))) (= x944 (x3057 (- x2833 4))) (= x878 x2611) (not (< x2833 4)) (= x1274 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x3483 2835717307) (= 68 x2833) (not (= x3483 2678909723)) (= x1745 x4044) (not (> 2376452955 x3483)) (= (or (and (< x944 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x944))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x944)) x852))) (and (=> x852 x3642) (=> (and (and (= x3837 (= x878 x2611)) (= x554 x2611)) (not x852)) (and (=> (and x3837 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3233) (= x3233 (x2062 x4376)) (>= x3233 0) (= x4376 (x1460 (x3010 x878) (x2486 2) 0)) (= (> x1745 x3233) x178) (= x4044 x3074))) (and (=> (and (not x178) (= (> x4044 x3233) x1200)) (and (=> (and (and (<= 0 x1255) (= (x2138 x1296) x1255) (= x1296 (x1460 (x3010 x2611) (x2486 2) 0)) (= (< x3342 x1255) x3747) (= (x3057 (- x3233 x4044)) x2105) (= (x1460 (x3010 x878) (x2486 2) 0) x2211) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1255) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4044)) x3342)) (not x1200)) (and (=> x3747 x3642) (=> (and (and (= x1310 (> x1255 x3227)) (= (x203 (+ x1255 x4044)) x3227)) (not x3747)) (and (=> x1310 x3642) (=> (and (and (= (x1460 (x3010 x2611) (x2486 2) 0) x3686) (= x3413 32) (= 1 x3064)) (not x1310)) x1263))))) (=> x1200 x3642))) (=> x178 x3642))) (=> (not x3837) x3642))))) (=> (and (= (= x4031 x1505) x399) (not x2580)) (and (=> (and (not x399) (= (= x1505 x170) x288)) (and (=> (and (and (not (= 826074471 x2450)) (= x2450 2835717307) (= x468 (x3057 (- x214 4))) (not (= x2450 2376452955)) (not (= x2450 1889567281)) (not (< x2450 826074471)) (= 68 x214) (< 0 x975) (= x3314 (or (and (= true (<= x468 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x468)) (> x468 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x2450 2514000705)) (= x1745 x1288) (= x975 (x252 (x3010 x170))) (not (< x214 4)) (= x1351 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2000 x878)) x288) (and (=> (and (and (= x2000 x2232) (= (= x878 x2000) x2622)) (not x3314)) (and (=> (not x2622) x463) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3264) (= (x1707 x872) x3264) (<= 0 x3264) (= (x1460 (x3010 x878) (x2486 2) 0) x872) (= (< x3264 x1745) x1554) (= x1288 x92)) x2622) (and (=> x1554 x463) (=> (and (= (< x3264 x1288) x3728) (not x1554)) (and (=> (and (not x3728) (and (= (x3057 (- x3264 x1288)) x841) (= (x1460 (x3010 x878) (x2486 2) 0) x3228) (= x2041 (< x2397 x3175)) (<= x3175 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4100 (x1460 (x3010 x2000) (x2486 2) 0)) (>= x3175 0) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1288)) x2397) (= x3175 (x2228 x4100)))) (and (=> x2041 x463) (=> (and (not x2041) (and (= (> x3175 x272) x386) (= x272 (x203 (+ x3175 x1288))))) (and (=> (and (and (= (x1460 (x3010 x2000) (x2486 2) 0) x1807) (= x1846 32) (= x2416 1)) (not x386)) x3232) (=> x386 x463))))) (=> x3728 x463))))))) (=> x3314 x463))) (=> (and (= (= x1505 x2648) x32) (not x288)) (and (=> (and (= (= x1505 x1376) x639) (not x32)) (and (=> (and (and (= x1745 x1518) (> x488 0) (not (= 1086394137 x3561)) (not (= x3561 2514000705)) (= x1410 68) (= (x3057 (- x1410 4)) x115) (not (> 4 x1410)) (not (= 1889567281 x3561)) (= x2733 (or (and (= (<= x115 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x115)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x115))) (= x3733 x878) (= x488 (x252 (x3010 x1376))) (= x3561 2835717307) (= x1529 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 1086394137 x3561)) (not (= x3561 2376452955))) x639) (and (=> (and (and (= x3733 x256) (= x3012 (= x3733 x878))) (not x2733)) (and (=> (and (and (= (< x1468 x1745) x142) (<= 0 x1468) (= x1468 (x209 x2899)) (= x1518 x2239) (= x2899 (x1460 (x3010 x878) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1468)) x3012) (and (=> (and (not x142) (= x3678 (< x1468 x1518))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3519) (= (< x1569 x3519) x3424) (= (x3057 (- x1468 x1518)) x1661) (= x2889 (x1460 (x3010 x3733) (x2486 2) 0)) (= x1569 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1518))) (= x3519 (x4199 x2889)) (<= 0 x3519) (= (x1460 (x3010 x878) (x2486 2) 0) x2905)) (not x3678)) (and (=> (and (and (= (x203 (+ x1518 x3519)) x4339) (= x1867 (> x3519 x4339))) (not x3424)) (and (=> x1867 x563) (=> (and (and (= x2260 32) (= x1811 (x1460 (x3010 x3733) (x2486 2) 0)) (= 1 x2926)) (not x1867)) x1443))) (=> x3424 x563))) (=> x3678 x563))) (=> x142 x563))) (=> (not x3012) x563))) (=> x2733 x563))) (=> (and (= x3824 (= x1864 x1505)) (not x639)) (and (=> (and (and (= x4159 (= x1505 x1358)) (and (and (= x4291 x878) (not (= 1889567281 x1241)) (= x3070 68) (= (x252 (x3010 x1358)) x708) (< 0 x708) (not (> 4 x3070)) (not (= x1241 2514000705)) (= x1317 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 826074471 x1241)) (not (= 826074471 x1241)) (= x1241 2835717307) (= x64 x1745) (= x638 (or (> x761 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x761 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x761)))) (= x761 (x3057 (- x3070 4))) (not (= x1241 2376452955))) x4159)) (not x3824)) (and (=> (and (not x638) (and (= x4291 x2652) (= x1568 (= x878 x4291)))) (and (=> (not x1568) x1454) (=> (and x1568 (and (= (> x1745 x945) x2479) (= (x1460 (x3010 x878) (x2486 2) 0) x2988) (= x945 (x824 x2988)) (<= x945 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x945) (= x64 x2106))) (and (=> (and (= x317 (< x945 x64)) (not x2479)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1337) (>= x1337 0) (= x3270 (x1460 (x3010 x878) (x2486 2) 0)) (= x1337 (x1010 x2615)) (= x3544 (x3057 (- x945 x64))) (= (x1460 (x3010 x4291) (x2486 2) 0) x2615) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x64)) x4175) (= x4369 (> x1337 x4175))) (not x317)) (and (=> x4369 x1454) (=> (and (not x4369) (and (= x4324 (x203 (+ x1337 x64))) (= (> x1337 x4324) x1064))) (and (=> (and (and (= x3100 1) (= 32 x3915) (= (x1460 (x3010 x4291) (x2486 2) 0) x1149)) (not x1064)) x3585) (=> x1064 x1454))))) (=> x317 x1454))) (=> x2479 x1454))))) (=> x638 x1454))) (=> (and x3824 (and (not (= x4027 826074471)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1370) (not (= x4027 2514000705)) (not (= 1889567281 x4027)) (not (> 4 x2335)) (= 2835717307 x4027) (= (x3057 (- x2335 4)) x1336) (not (= x4027 2376452955)) (= x878 x321) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1336) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1336)) (< x1336 64))) x1734) (= x2340 x1745) (not (> 826074471 x4027)) (= x2335 68) (= x4132 (x252 (x3010 x1864))) (< 0 x4132))) (and (=> x1734 x3271) (=> (and (not x1734) (and (= x321 x2200) (= x2529 (= x321 x878)))) (and (=> (and x2529 (and (= x2309 (< x4003 x1745)) (= x2925 x2340) (<= x4003 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4003 0) (= (x1460 (x3010 x878) (x2486 2) 0) x2081) (= (x1773 x2081) x4003))) (and (=> x2309 x3271) (=> (and (not x2309) (= (> x2340 x4003) x3038)) (and (=> x3038 x3271) (=> (and (and (= x395 (x1460 (x3010 x878) (x2486 2) 0)) (>= x185 0) (= (x1332 x2539) x185) (= x2743 (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2340))) (<= x185 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2743 x185) x2896) (= x3220 (x3057 (- x4003 x2340))) (= x2539 (x1460 (x3010 x321) (x2486 2) 0))) (not x3038)) (and (=> (and (and (= x3031 (x203 (+ x185 x2340))) (= (> x185 x3031) x2024)) (not x2896)) (and (=> x2024 x3271) (=> (and (not x2024) (and (= x1360 1) (= x3831 32) (= x3363 (x1460 (x3010 x321) (x2486 2) 0)))) x1872))) (=> x2896 x3271))))))) (=> (not x2529) x3271))))))))) (=> (and (and (= x1003 x1745) (not (= x4216 1889567281)) (= x878 x358) (= (x252 (x3010 x2648)) x1489) (not (= 2514000705 x4216)) (= 2835717307 x4216) (not (> 4 x3827)) (not (= x4216 2376452955)) (= (x3057 (- x3827 4)) x2632) (< 0 x1489) (= 68 x3827) (= (or (and (= true (<= x2632 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x2632)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2632)) x2172) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1193) (not (< x4216 826074471)) (not (= x4216 826074471))) x32) (and (=> (and (and (= x358 x3050) (= x1664 (= x358 x878))) (not x2172)) (and (=> (not x1664) x4336) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3950) (= x1003 x2655) (= x3252 (< x3950 x1745)) (<= 0 x3950) (= x3950 (x2345 x3407)) (= (x1460 (x3010 x878) (x2486 2) 0) x3407)) x1664) (and (=> (and (not x3252) (= x199 (> x1003 x3950))) (and (=> x199 x4336) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2589) (>= x2589 0) (= (> x2589 x520) x418) (= x2589 (x3307 x1665)) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1003)) x520) (= x1339 (x1460 (x3010 x878) (x2486 2) 0)) (= (x1460 (x3010 x358) (x2486 2) 0) x1665) (= x644 (x3057 (- x3950 x1003)))) (not x199)) (and (=> (and (not x418) (and (= x3004 (x203 (+ x2589 x1003))) (= x2566 (< x3004 x2589)))) (and (=> x2566 x4336) (=> (and (not x2566) (and (= x385 (x1460 (x3010 x358) (x2486 2) 0)) (= x4165 32) (= 1 x3250))) x589))) (=> x418 x4336))))) (=> x3252 x4336))))) (=> x2172 x4336))))))) (=> (and x399 (and (< x2409 3065339685) (= x3437 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2376452955 x2409)) (= x1152 (x3057 (- x2065 4))) (= x1955 x878) (< 0 x1937) (= x2017 x1745) (= x2065 68) (not (> 2678909723 x2409)) (= x1937 (x252 (x3010 x4031))) (= x3324 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1152) (and (= true (<= x1152 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1152)))) (= x2409 2835717307) (not (< x2065 4)) (not (= x2409 2678909723)))) (and (=> (and (and (= x1955 x846) (= (= x1955 x878) x2054)) (not x3324)) (and (=> (not x2054) x3422) (=> (and x2054 (and (<= 0 x25) (= x25 (x4236 x2701)) (= x320 x2017) (<= x25 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2746 (> x1745 x25)) (= (x1460 (x3010 x878) (x2486 2) 0) x2701))) (and (=> x2746 x3422) (=> (and (not x2746) (= x1997 (> x2017 x25))) (and (=> (and (not x1997) (and (= x2057 (x3364 x2185)) (= x1848 (x1460 (x3010 x878) (x2486 2) 0)) (= x2185 (x1460 (x3010 x1955) (x2486 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2057) (= (x3057 (- x25 x2017)) x1508) (= (< x3723 x2057) x2003) (= (x3057 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2017)) x3723) (<= 0 x2057))) (and (=> x2003 x3422) (=> (and (and (= (< x1770 x2057) x1407) (= (x203 (+ x2057 x2017)) x1770)) (not x2003)) (and (=> x1407 x3422) (=> (and (and (= x1698 (x1460 (x3010 x1955) (x2486 2) 0)) (= x1810 1) (= x4335 32)) (not x1407)) x3564))))) (=> x1997 x3422))))))) (=> x3324 x3422))))))))) x2612))
(assert (= (or x349 x419) x3668))
(assert (= (and (not x3821) x1746) x1223))
(assert (x1417 x2902))
(assert (= (x1769 (x3010 x1230)) x1230))
(assert (= (x1769 (x3010 x4128)) x4128))
(assert (= (and x2297 (not x2847)) x3037))
(assert (=> (<= x2822 10000) (= (x2486 x2822) (x3010 x2822))))
(assert (x1417 x3883))
(assert (= (and x2424 (not x2597)) x1398))
(assert (x1417 x3282))
(assert (=> (>= 10000 x486) (= (x3010 x486) (x2486 x486))))
(assert (x1417 x2805))
(assert (= (and x190 (not x340)) x2855))
(assert (= x375 (or (and (not x2454) x333) x1245)))
(assert (= x853 (and x4220 x515)))
(assert (x1417 x3891))
(assert (x1417 x3413))
(assert (= (and x3013 x2085) x2347))
(assert (= x3391 (and x6 (not x935))))
(assert (x1417 x2908))
(assert (=> (>= 10000 x4116) (= (x3010 x4116) (x2486 x4116))))
(assert (x1417 x51))
(assert (= (=> (and (= x2383 x1748) (= x913 0)) x4329) x2127))
(assert (=> (<= x2195 10000) (= (x2486 x2195) (x3010 x2195))))
(assert (x1417 x4003))
(assert (= x2115 (or x2144 x1715 x3632 x226 x577 x741 x1956 x1776)))
(assert (x2452 x1166))
(assert (x1417 x274))
(assert (= (or x686 x4047) x145))
(assert (x1417 x2395))
(assert (= (and x988 x2972) x292))
(assert (x1417 x3397))
(assert (= x3504 (and x2813 x3715)))
(assert (x1417 x3764))
(assert (=> (>= 10000 x1488) (= (x2486 x1488) (x3010 x1488))))
(assert (x1417 x2000))
(assert (=> (<= x3403 10000) (= (x2486 x3403) (x3010 x3403))))
(assert (= (and x1877 x3359) x908))
(assert (x1417 x4154))
(assert (x1417 x2393))
(assert (x1417 x3106))
(assert (=> (<= x845 10000) (= (x2486 x845) (x3010 x845))))
(assert (= x208 (and (not x2137) x2043)))
(assert (x1417 x1131))
(assert (= (x1769 (x3010 x4181)) x4181))
(assert (= x1838 (and x2710 x3230)))
(assert (x1417 x2555))
(assert (= (x1769 (x3010 x4149)) x4149))
(assert (= (x1769 (x3010 x3535)) x3535))
(assert (= x847 (and x3272 (not x613))))
(assert (= (=> (and (= x1954 x3064) (= x9 x3413)) x2715) x1263))
(assert (x1417 x2652))
(assert (= (and (not x1720) x1426) x2297))
(assert (= x627 (and x3061 x1415)))
(assert (= x3698 (or (and (not x518) x1693) (and x1093 x1986))))
(assert (= x4048 (and (not x2892) x1343)))
(assert (x1417 x599))
(assert (x1417 x696))
(assert (= x1355 (and x2542 (not x1233))))
(assert (x1417 x3992))
(assert (= x3400 (=> (and (= x2613 x371) (= x594 x3541) (= x1449 0)) x2323)))
(assert (x3931 x1658))
(assert (x1417 x1593))
(assert (x1417 x2822))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1769 (x2486 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (=> (>= 10000 x2876) (= (x2486 x2876) (x3010 x2876))))
(assert (x1417 x1008))
(assert (x1417 x2433))
(assert (= (and x2455 (not x3007)) x3869))
(assert (= x2480 (and (not x566) x4098)))
(assert (x1417 x3628))
(assert (x1417 x250))
(assert (x1417 x4024))
(assert (= x1931 (and x2368 x2914)))
(assert (= x1640 (and x1980 x2099)))
(assert (= (and (not x856) x417) x3887))
(assert (x1417 x1783))
(assert (= x2816 (or x2422 x3338 x622 x1984 x4372 x1962)))
(assert (x1417 x1274))
(assert (= x1368 (and x2985 (not x3892))))
(assert (= (or x1552 x242) x1796))
(assert (= x3043 (and (not x3274) x3246)))
(assert (= (and (not x3084) x4210) x1083))
(assert (= (and (not x26) x219) x2118))
(assert (x1417 x1291))
(assert (= (and x280 x2193) x1143))
(assert (x1417 x1808))
(assert (x1417 x176))
(assert (x1417 x1106))
(assert (= (and x3012 x3088) x3355))
(assert (x1417 x2299))
(assert (x1417 x1835))
(assert (= x2794 (and x3453 (not x3054))))
(assert (= (and (not x44) x4298) x3977))
(assert (= (and (not x4212) x3709) x983))
(assert (= x2997 (=> (and (= 0 x2318) (= x159 x2862)) x3247)))
(assert (= x3568 (and x2558 (not x1412))))
(assert (x1417 x4151))
(assert (x1417 x3601))
(assert (= (x1769 (x3010 x1932)) x1932))
(assert (x1417 x3175))
(assert (x3931 x1358))
(assert (= (=> (and (= (= 0 x2227) x2191) (or x2191 (not x2191))) x1499) x1501))
(assert (= x4035 (x1769 (x3010 x4035))))
(assert (= (or x547 x3531 x2891 x4096 x67 x2961 x893 x3977) x1514))
(assert (x1417 x500))
(assert (x1417 x1077))
(assert (= (or x2483 x1024) x113))
(assert (= x2770 (and x2367 x3675)))
(assert (x1417 x1976))
(assert (=> (>= 10000 x3351) (= (x3010 x3351) (x2486 x3351))))
(assert (= x3239 (and x1139 x2745)))
(assert (= (=> (and (= 0 x459) (= x2917 x2591)) x1316) x1870))
(assert (= x2989 (and x1648 x127)))
(assert (x1417 x2025))
(assert (x1417 x3367))
(assert (x1417 x1490))
(assert (x1417 x1524))
(assert (= x4156 (and x273 (not x852))))
(assert (= x3636 (and x2794 x4316)))
(assert (= x2583 (and x2387 x639)))
(assert (=> (>= 10000 x1787) (= (x3010 x1787) (x2486 x1787))))
(assert (x1417 x3348))
(assert (x1417 x3402))
(assert (x1417 x3870))
(assert (x1417 x3503))
(assert (= x1110 (and (not x778) x3563)))
(assert (= (x1769 (x2486 82641394424300342035733052706735002277943222088490025348945809093694544936960)) 82641394424300342035733052706735002277943222088490025348945809093694544936960))
(assert (= x652 (and x3666 (not x1248))))
(assert (x1417 x220))
(assert (x1417 x683))
(assert (x1417 x3900))
(assert (x1417 x2513))
(assert (= (and (not x1025) x3323) x2914))
(assert (x1417 x160))
(assert (x1417 x2975))
(assert (= (or x301 x1578) x3842))
(assert (x3931 x2443))
(assert (x1417 x2850))
(assert (= x1222 (and x539 x4290)))
(assert (= (x1769 (x2486 773487949)) 773487949))
(assert (= (and x925 x2674) x36))
(assert (= x1323 (and x2241 x699)))
(assert (x1417 x553))
(assert (x1417 x298))
(assert (x1417 x3261))
(assert (x1417 x2915))
(assert (x1417 x520))
(assert (x1417 x1894))
(assert (= (and (not x560) x3746) x2043))
(assert (= (and x1507 (not x1470)) x1126))
(assert (= (and x724 x2276) x521))
(assert (x1417 x3579))
(assert (x1417 x3979))
(assert (x1417 x81))
(assert (= x1693 (and x1986 (not x1093))))
(assert (= x3277 (and (not x495) x2989)))
(assert (x1417 x3393))
(assert (x1417 x1544))
(assert (x1417 x2174))
(assert (x1417 x1151))
(assert (x1417 x3706))
(assert (x1417 x651))
(assert (= x1421 (and x3636 (not x2803))))
(assert (x1417 x3339))
(assert (= (=> (and (= 0 x3011) (= x1246 x507)) x1161) x3742))
(assert (x1417 x1912))
(assert (= x3236 (and x4358 x1858)))
(assert (x1417 x134))
(assert (x1417 x1749))
(assert (x1417 x1599))
(assert (= x2032 (or x2541 x454)))
(assert (= x3492 (and x2270 (not x3426))))
(assert (= (and x2934 x1799) x3980))
(assert (x1417 x546))
(assert (x1417 x709))
(assert (x1417 x2140))
(assert (= 2569309863 (x1769 (x2486 2569309863))))
(assert (x1417 x822))
(assert (x1417 x3117))
(assert (x1417 x1932))
(assert (x1417 x1353))
(assert (x1417 x4081))
(assert (= x1691 (or x1478 x1697 x3127 x650 x2832 x960)))
(assert (= x3795 (and x1364 x2966)))
(assert (x1417 x1193))
(assert (= x1086 (and x232 x1155)))
(assert (x1417 x170))
(assert (= x2643 (x1769 (x3010 x2643))))
(assert (= (x1769 (x3010 x1422)) x1422))
(assert (x1417 x3573))
(assert (x1417 x2633))
(assert (x1417 x3611))
(assert (x1417 x4364))
(assert (x1124 x1166))
(assert (= x4104 (and (not x3416) x717)))
(assert (x1417 x1436))
(assert (= 1461501637330902918203684832716283019655932542976 (x1769 (x2486 1461501637330902918203684832716283019655932542976))))
(assert (= (and x2993 x2741) x3901))
(assert (=> (<= x2503 10000) (= (x2486 x2503) (x3010 x2503))))
(assert (x1417 x468))
(assert (= x3153 (and x397 (not x2041))))
(assert (x1417 x641))
(assert (= x1259 (and x3689 x1732)))
(assert (= x1108 (and (not x2570) x3409)))
(assert (= x2786 (and (not x3134) x4124)))
(assert (x1417 x3093))
(assert (x1417 x2800))
(assert (x1417 x2551))
(assert (= (x3010 2835717307) (x2486 2835717307)))
(assert (= x2436 (and (not x433) x1096)))
(assert (x1417 x643))
(assert (x1417 x3262))
(assert (x1417 x132))
(assert (x1417 x879))
(assert (x1417 x2666))
(assert (x1417 x3140))
(assert (= (and (not x308) x4046) x4198))
(assert (x1417 x3173))
(assert (x1417 x2870))
(assert (x1417 x3602))
(assert (= (and (not x2965) x2035) x3240))
(assert (= x431 (and x3499 (not x916))))
(assert (x1417 x1542))
(assert (=> (>= 10000 x358) (= (x2486 x358) (x3010 x358))))
(assert (= (x3010 2678909723) (x2486 2678909723)))
(assert (= (and x2971 x4345) x2810))
(assert (= (and (not x3516) x2500) x2308))
(assert (= x1921 (and x2552 x972)))
(assert (x1417 x3536))
(assert (= x786 (and x680 x4055)))
(assert (= x2999 (and x180 x1825)))
(assert (= x1631 (and x4162 x1628)))
(assert (= x3047 (and (not x2771) x3589)))
(assert (= (or x1733 x2712 x1557 x2357 x2664 x2157) x4201))
(assert (x1417 x2369))
(assert (x1417 x4150))
(assert (x3931 x4181))
(assert (= (and x1080 x3662) x892))
(assert (x1417 x3701))
(assert (x1417 x2342))
(assert (= x1972 (and x2765 x4159)))
(assert (= x3778 (and x919 x2556)))
(assert (= (or x422 x3349) x3059))
(assert (= (and x2460 x2492) x2424))
(assert (= (=> (and (= x302 x4326) (= x1766 x2430)) x491) x3481))
(assert (= (and x4198 (not x3752)) x251))
(assert (x1417 x2735))
(assert (= x1878 (and x2142 x4206)))
(assert (x1417 x846))
(assert (= x519 (and x4281 x807)))
(assert (= (and x3265 x881) x80))
(assert (= (and x1649 x3288) x3551))
(assert (x3931 x1932))
(assert (= (and (not x1974) x3068) x3680))
(assert (= x3078 (=> (and (or x1250 (not x1250)) (= (= x612 0) x1250)) x1657)))
(check-sat)
(exit)