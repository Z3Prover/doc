(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x3476 0)) (((x2828 (x3399 x3476) (x3564 x3476) (x3720 Int)) (x956 (x4343 Int)) (x1833 (x4067 x3476) (x2039 Int)))))
(declare-fun x2676 () Int)
(declare-fun x1178 () Bool)
(declare-fun x4594 () Bool)
(declare-fun x3135 () Bool)
(declare-fun x3534 () Int)
(declare-fun x5273 () Int)
(declare-fun x2983 () Bool)
(declare-fun x798 () Int)
(declare-fun x1334 () x3476)
(declare-fun x3291 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x64 () Bool)
(declare-fun x4327 (Int) Int)
(declare-fun x619 () Bool)
(declare-fun x3650 () Int)
(declare-fun x2354 () Int)
(declare-fun x4634 () Bool)
(declare-fun x3446 () Int)
(declare-fun x248 () Bool)
(declare-fun x2069 () Int)
(declare-fun x2194 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x3456 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x280 () Bool)
(declare-fun x4547 () Int)
(declare-fun x2597 () Bool)
(declare-fun x4300 () Bool)
(declare-fun x3805 () Int)
(declare-fun x989 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x635 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x3385 () Bool)
(declare-fun x4254 () Int)
(declare-fun x673 () Bool)
(declare-fun x5029 () Bool)
(declare-fun x1751 () Int)
(declare-fun x3003 () x3476)
(declare-fun x1820 () Bool)
(declare-fun x2604 () Int)
(declare-fun x3140 () Int)
(declare-fun x2020 () Int)
(declare-fun x4885 () Int)
(declare-fun x4617 () Bool)
(declare-fun x1545 () Int)
(declare-fun x369 () Int)
(declare-fun x2993 () Bool)
(declare-fun x499 () Int)
(declare-fun x2831 () Int)
(declare-fun x3054 () Bool)
(declare-fun x250 () Bool)
(declare-fun x3310 () Bool)
(declare-fun x5307 () Bool)
(declare-fun x364 () Bool)
(declare-fun x4200 () Int)
(declare-fun x146 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x3522 () Bool)
(declare-fun x4705 () Bool)
(declare-fun x5185 () Bool)
(declare-fun x1886 () Int)
(declare-fun x955 () Int)
(declare-fun x3281 () Bool)
(declare-fun x190 () Int)
(declare-fun x1581 () Bool)
(declare-fun x1952 () Int)
(declare-fun x5264 () Int)
(declare-fun x4106 () Bool)
(declare-fun x3148 () Bool)
(declare-fun x384 () Int)
(declare-fun x4394 () Int)
(declare-fun x5022 () Int)
(declare-fun x4342 () x3476)
(declare-fun x4195 () Bool)
(declare-fun x2146 () Bool)
(declare-fun x3424 () Bool)
(declare-fun x2462 () Bool)
(declare-fun x4085 () Bool)
(declare-fun x2255 () Int)
(declare-fun x4516 () Bool)
(declare-fun x4590 () Bool)
(declare-fun x4926 () Int)
(declare-fun x2598 () Bool)
(declare-fun x1385 () Int)
(declare-fun x870 () Bool)
(declare-fun x44 () Int)
(declare-fun x4972 () Bool)
(declare-fun x192 () Int)
(declare-fun x4357 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x802 () Bool)
(declare-fun x3702 (x3476) Int)
(declare-fun x4087 () Int)
(declare-fun x1726 () Bool)
(declare-fun x4712 () Bool)
(declare-fun x2995 () Int)
(declare-fun x104 () Bool)
(declare-fun x2869 () Int)
(declare-fun x3670 () Bool)
(declare-fun x2402 () Int)
(declare-fun x1963 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x3342 () Int)
(declare-fun x787 () Int)
(declare-fun x3747 () Int)
(declare-fun x4856 () Bool)
(declare-fun x4128 () Int)
(declare-fun x1273 () Int)
(declare-fun x3508 () Int)
(declare-fun x3092 () Int)
(declare-fun x5365 () Int)
(declare-fun x2495 () Bool)
(declare-fun x3124 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x611 () Bool)
(declare-fun x3635 () Int)
(declare-fun x2976 () Int)
(declare-fun x2526 () Bool)
(declare-fun x2602 () Bool)
(declare-fun x2847 () Int)
(declare-fun x2806 () Bool)
(declare-fun x3686 () Bool)
(declare-fun x5177 () Int)
(declare-fun x4091 () Bool)
(declare-fun x332 () Int)
(declare-fun x3057 () Int)
(declare-fun x5019 () Bool)
(declare-fun x2742 () Int)
(declare-fun x2743 () x3476)
(declare-fun x5346 () Int)
(declare-fun x2437 () Int)
(declare-fun x1765 () Int)
(declare-fun x2623 () Int)
(declare-fun x4586 () Int)
(declare-fun x2230 () Int)
(declare-fun x1926 () Bool)
(declare-fun x3988 () Bool)
(declare-fun x4519 () Int)
(declare-fun x4068 () Int)
(declare-fun x4706 () Int)
(declare-fun x5062 () Int)
(declare-fun x748 () Int)
(declare-fun x2244 () Bool)
(declare-fun x862 () Bool)
(declare-fun x3110 () Bool)
(declare-fun x5317 () Bool)
(declare-fun x451 () Int)
(declare-fun x3162 () Bool)
(declare-fun x3942 () Int)
(declare-fun x123 () Int)
(declare-fun x2177 () Int)
(declare-fun x1572 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x5238 () Bool)
(declare-fun x2120 () Int)
(declare-fun x1932 () Int)
(declare-fun x2014 () Int)
(declare-fun x1136 () x3476)
(declare-fun x2798 () Bool)
(declare-fun x2621 () x3476)
(declare-fun x1081 () x3476)
(declare-fun x3757 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x1361 () Int)
(declare-fun x3605 () Bool)
(declare-fun x1716 () Int)
(declare-fun x709 () Bool)
(declare-fun x2932 () Bool)
(declare-fun x2139 () Bool)
(declare-fun x3617 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x52 () Int)
(declare-fun x1553 (Int) Int)
(declare-fun x1238 () Bool)
(declare-fun x1968 () Int)
(declare-fun x4452 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x5056 () Bool)
(declare-fun x896 () Bool)
(declare-fun x705 () x3476)
(declare-fun x2851 () Bool)
(declare-fun x2581 () Int)
(declare-fun x845 () Int)
(declare-fun x3504 () Int)
(declare-fun x819 () Bool)
(declare-fun x4554 () x3476)
(declare-fun x5058 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x946 () Bool)
(declare-fun x730 () Int)
(declare-fun x503 () Int)
(declare-fun x3153 () Int)
(declare-fun x5127 () Int)
(declare-fun x1852 () Bool)
(declare-fun x3063 () Int)
(declare-fun x3613 () Int)
(declare-fun x3452 () Int)
(declare-fun x3383 () Int)
(declare-fun x1018 () Int)
(declare-fun x1002 () x3476)
(declare-fun x3845 () Bool)
(declare-fun x1162 () Int)
(declare-fun x4913 () Bool)
(declare-fun x4965 () Int)
(declare-fun x2408 () Bool)
(declare-fun x1 () Bool)
(declare-fun x409 () Bool)
(declare-fun x1196 () x3476)
(declare-fun x2208 () Bool)
(declare-fun x4642 () Bool)
(declare-fun x4139 () Int)
(declare-fun x1122 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x664 () Int)
(declare-fun x4376 () Bool)
(declare-fun x4434 () x3476)
(declare-fun x3728 () Bool)
(declare-fun x4685 () x3476)
(declare-fun x2646 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x3062 () Int)
(declare-fun x227 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x3361 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x3349 () Bool)
(declare-fun x4479 () Bool)
(declare-fun x718 () Bool)
(declare-fun x3768 () Bool)
(declare-fun x1965 () x3476)
(declare-fun x4310 () Bool)
(declare-fun x3895 () Int)
(declare-fun x1135 () Int)
(declare-fun x531 () x3476)
(declare-fun x2103 () Bool)
(declare-fun x4548 (x3476) Int)
(declare-fun x4792 () x3476)
(declare-fun x3295 () Bool)
(declare-fun x3243 () Int)
(declare-fun x795 () Bool)
(declare-fun x286 () Int)
(declare-fun x4297 () Int)
(declare-fun x349 () x3476)
(declare-fun x1665 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x200 () x3476)
(declare-fun x1825 () Int)
(declare-fun x4309 () Bool)
(declare-fun x666 () Int)
(declare-fun x1621 () Int)
(declare-fun x4739 () Bool)
(declare-fun x3871 () Bool)
(declare-fun x182 () Bool)
(declare-fun x3224 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x4992 () Bool)
(declare-fun x4767 () Bool)
(declare-fun x3113 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1986 () Bool)
(declare-fun x22 () Bool)
(declare-fun x2966 () Int)
(declare-fun x1810 () Int)
(declare-fun x2497 () Int)
(declare-fun x1785 () x3476)
(declare-fun x735 () Bool)
(declare-fun x3847 () Bool)
(declare-fun x3517 () Bool)
(declare-fun x2718 () x3476)
(declare-fun x1176 () Int)
(declare-fun x292 () Int)
(declare-fun x2316 () Bool)
(declare-fun x4332 () Int)
(declare-fun x4861 () Bool)
(declare-fun x4817 () Bool)
(declare-fun x4279 () Bool)
(declare-fun x2757 () Bool)
(declare-fun x3290 () Int)
(declare-fun x3846 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x3207 () Int)
(declare-fun x5032 () Int)
(declare-fun x1634 () Int)
(declare-fun x1202 () Bool)
(declare-fun x948 () Int)
(declare-fun x1378 () Int)
(declare-fun x325 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x2148 () Int)
(declare-fun x1513 () Bool)
(declare-fun x3714 () Int)
(declare-fun x917 () Bool)
(declare-fun x4766 () Bool)
(declare-fun x4960 () Bool)
(declare-fun x3370 () Int)
(declare-fun x1793 () Bool)
(declare-fun x3833 () Bool)
(declare-fun x4378 () x3476)
(declare-fun x100 () Bool)
(declare-fun x3465 () Int)
(declare-fun x2029 () Int)
(declare-fun x634 () x3476)
(declare-fun x2913 () Int)
(declare-fun x1842 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x4439 () Bool)
(declare-fun x1199 () x3476)
(declare-fun x1463 () Int)
(declare-fun x2317 () Bool)
(declare-fun x860 () x3476)
(declare-fun x1500 () Bool)
(declare-fun x2628 () Bool)
(declare-fun x2842 () Bool)
(declare-fun x4783 () Bool)
(declare-fun x1694 () Int)
(declare-fun x314 () Int)
(declare-fun x1857 () Int)
(declare-fun x5096 () Int)
(declare-fun x2982 () Int)
(declare-fun x1194 () Int)
(declare-fun x2463 () Bool)
(declare-fun x4720 () Int)
(declare-fun x1996 () Bool)
(declare-fun x4089 () Int)
(declare-fun x2839 () Int)
(declare-fun x1302 () Int)
(declare-fun x1415 () Int)
(declare-fun x1399 () Int)
(declare-fun x3328 () Bool)
(declare-fun x2942 () Int)
(declare-fun x789 () Int)
(declare-fun x1159 () Int)
(declare-fun x621 () Int)
(declare-fun x1439 () Int)
(declare-fun x3466 () Bool)
(declare-fun x541 () Bool)
(declare-fun x507 () Bool)
(declare-fun x3827 () Int)
(declare-fun x3441 () Int)
(declare-fun x4474 () Int)
(declare-fun x2939 () Int)
(declare-fun x4953 () Int)
(declare-fun x1367 (x3476) Int)
(declare-fun x1702 () Int)
(declare-fun x5060 () Bool)
(declare-fun x2125 (Int) Int)
(declare-fun x4688 () Int)
(declare-fun x258 () Int)
(declare-fun x222 () Bool)
(declare-fun x2733 () Int)
(declare-fun x3849 () Int)
(declare-fun x3417 () Bool)
(declare-fun x620 () Bool)
(declare-fun x2780 () Int)
(declare-fun x33 () Int)
(declare-fun x933 () Bool)
(declare-fun x4582 () Bool)
(declare-fun x2176 () Int)
(declare-fun x5035 () Int)
(declare-fun x4435 () Bool)
(declare-fun x4569 () Int)
(declare-fun x536 () Bool)
(declare-fun x2627 () Int)
(declare-fun x1369 () Bool)
(declare-fun x4274 () Int)
(declare-fun x644 () Int)
(declare-fun x5271 () Bool)
(declare-fun x3917 () Int)
(declare-fun x1267 () Int)
(declare-fun x797 () x3476)
(declare-fun x2777 () Bool)
(declare-fun x3268 () Int)
(declare-fun x2749 () Bool)
(declare-fun x636 (Int) x3476)
(declare-fun x3334 () Int)
(declare-fun x2655 () Bool)
(declare-fun x2879 () Int)
(declare-fun x5118 () Bool)
(declare-fun x4005 () Int)
(declare-fun x3838 () Bool)
(declare-fun x4552 () Bool)
(declare-fun x4907 () x3476)
(declare-fun x1999 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x4272 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x1435 () Int)
(declare-fun x846 () Bool)
(declare-fun x4533 () Bool)
(declare-fun x4756 () x3476)
(declare-fun x1609 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x3152 () Bool)
(declare-fun x575 () Bool)
(declare-fun x358 () Bool)
(declare-fun x668 () Int)
(declare-fun x5042 () Bool)
(declare-fun x3614 () Bool)
(declare-fun x3077 () Bool)
(declare-fun x1618 () Int)
(declare-fun x4527 () Int)
(declare-fun x4307 () Bool)
(declare-fun x3104 () Int)
(declare-fun x2137 () x3476)
(declare-fun x139 () Bool)
(declare-fun x203 () x3476)
(declare-fun x4740 () Bool)
(declare-fun x3590 () Bool)
(declare-fun x977 () Int)
(declare-fun x121 () Bool)
(declare-fun x4951 () Int)
(declare-fun x2245 () Bool)
(declare-fun x2383 () Int)
(declare-fun x3396 () x3476)
(declare-fun x4797 () Bool)
(declare-fun x2359 () Bool)
(declare-fun x3492 () Int)
(declare-fun x3931 () Bool)
(declare-fun x540 () Int)
(declare-fun x1366 () Int)
(declare-fun x1131 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x3236 () Bool)
(declare-fun x2530 () Bool)
(declare-fun x2466 () x3476)
(declare-fun x1328 () Bool)
(declare-fun x633 () Int)
(declare-fun x5061 () Bool)
(declare-fun x4883 () Bool)
(declare-fun x3306 () Bool)
(declare-fun x460 () Int)
(declare-fun x4057 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x420 () Bool)
(declare-fun x4187 () Int)
(declare-fun x3674 (Int) Int)
(declare-fun x450 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x3974 () Int)
(declare-fun x4184 () Bool)
(declare-fun x738 () Bool)
(declare-fun x4119 () Bool)
(declare-fun x1802 () x3476)
(declare-fun x5242 () Bool)
(declare-fun x5353 () Bool)
(declare-fun x4929 () Bool)
(declare-fun x4360 () Bool)
(declare-fun x2217 () x3476)
(declare-fun x5048 () Bool)
(declare-fun x4427 () Bool)
(declare-fun x2133 () Int)
(declare-fun x4820 () Bool)
(declare-fun x3779 () Bool)
(declare-fun x5037 () Int)
(declare-fun x197 () Int)
(declare-fun x2324 () Int)
(declare-fun x2109 () Bool)
(declare-fun x3257 () x3476)
(declare-fun x3505 () x3476)
(declare-fun x3619 () Bool)
(declare-fun x87 () Int)
(declare-fun x3120 () Bool)
(declare-fun x2082 () Bool)
(declare-fun x2744 () Int)
(declare-fun x702 () Int)
(declare-fun x2569 () Bool)
(declare-fun x5325 () Bool)
(declare-fun x2696 () Bool)
(declare-fun x2601 (x3476) Int)
(declare-fun x984 () Bool)
(declare-fun x4124 () Int)
(declare-fun x3876 () x3476)
(declare-fun x2700 (Int) Int)
(declare-fun x3857 () Bool)
(declare-fun x3809 () Int)
(declare-fun x5020 () Int)
(declare-fun x1048 () Bool)
(declare-fun x4958 () Int)
(declare-fun x5404 () Bool)
(declare-fun x2353 () x3476)
(declare-fun x5017 () Int)
(declare-fun x5084 (Int) Int)
(declare-fun x1704 () Bool)
(declare-fun x5225 () Bool)
(declare-fun x4042 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x5098 () Int)
(declare-fun x5198 () Bool)
(declare-fun x3664 () Int)
(declare-fun x3036 () Int)
(declare-fun x5076 () Bool)
(declare-fun x1943 () x3476)
(declare-fun x2370 () Int)
(declare-fun x2606 () Int)
(declare-fun x449 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x2000 () Int)
(declare-fun x2759 () x3476)
(declare-fun x4865 () Bool)
(declare-fun x3078 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x4071 () Int)
(declare-fun x1082 () Int)
(declare-fun x3070 () Bool)
(declare-fun x1004 () Int)
(declare-fun x175 () Bool)
(declare-fun x2114 () Int)
(declare-fun x4608 () Bool)
(declare-fun x3489 () Int)
(declare-fun x5398 () Bool)
(declare-fun x1022 () Int)
(declare-fun x1436 () Int)
(declare-fun x4152 () Bool)
(declare-fun x3669 () Int)
(declare-fun x3956 () Bool)
(declare-fun x1692 () Int)
(declare-fun x4467 () Bool)
(declare-fun x4214 () Int)
(declare-fun x3973 () Bool)
(declare-fun x4143 () Int)
(declare-fun x3602 () Int)
(declare-fun x4849 () Int)
(declare-fun x3899 () Bool)
(declare-fun x1766 () Bool)
(declare-fun x4668 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x4602 () Int)
(declare-fun x5396 () Bool)
(declare-fun x2287 () Int)
(declare-fun x1332 () Int)
(declare-fun x3976 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x5116 () Bool)
(declare-fun x605 () Bool)
(declare-fun x726 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x3044 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x769 () Bool)
(declare-fun x3854 () Int)
(declare-fun x1143 () x3476)
(declare-fun x1460 () x3476)
(declare-fun x2266 () Int)
(declare-fun x288 () Bool)
(declare-fun x3804 () Int)
(declare-fun x780 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x3795 () Int)
(declare-fun x4794 () Bool)
(declare-fun x1917 () Int)
(declare-fun x4266 () Bool)
(declare-fun x418 () Bool)
(declare-fun x4841 () Bool)
(declare-fun x425 () Bool)
(declare-fun x5290 () Int)
(declare-fun x3523 () Int)
(declare-fun x5164 () x3476)
(declare-fun x941 () Int)
(declare-fun x5087 () Bool)
(declare-fun x3503 (x3476) Int)
(declare-fun x2815 () Int)
(declare-fun x5004 () Bool)
(declare-fun x3963 () Bool)
(declare-fun x1679 () Int)
(declare-fun x4051 () Int)
(declare-fun x4853 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x4333 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x2456 () Int)
(declare-fun x3893 () Int)
(declare-fun x2797 () Bool)
(declare-fun x3712 () Int)
(declare-fun x1655 () Int)
(declare-fun x3339 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x205 () Bool)
(declare-fun x3389 () Bool)
(declare-fun x2592 () Int)
(declare-fun x3169 () Int)
(declare-fun x2975 () Bool)
(declare-fun x2259 () Bool)
(declare-fun x3742 () Int)
(declare-fun x4362 () Int)
(declare-fun x4894 () Int)
(declare-fun x3856 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x4646 () Int)
(declare-fun x4391 (Int) Int)
(declare-fun x1818 () x3476)
(declare-fun x3822 () Bool)
(declare-fun x4444 () Bool)
(declare-fun x4455 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x474 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x2376 () Int)
(declare-fun x5094 () Bool)
(declare-fun x4702 () Int)
(declare-fun x3114 () x3476)
(declare-fun x2228 () Int)
(declare-fun x5028 () Bool)
(declare-fun x2413 () Int)
(declare-fun x4337 () Bool)
(declare-fun x1468 () Int)
(declare-fun x1568 () Int)
(declare-fun x880 () Int)
(declare-fun x2110 () Bool)
(declare-fun x5293 () x3476)
(declare-fun x1635 () Bool)
(declare-fun x4432 () Bool)
(declare-fun x2498 () Int)
(declare-fun x1556 () Bool)
(declare-fun x3265 () x3476)
(declare-fun x149 () Bool)
(declare-fun x68 () Bool)
(declare-fun x3519 () Int)
(declare-fun x2321 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x3107 () Bool)
(declare-fun x2510 () Bool)
(declare-fun x490 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x1641 () Int)
(declare-fun x4508 () Int)
(declare-fun x415 () Int)
(declare-fun x1403 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x3500 () Int)
(declare-fun x3367 () x3476)
(declare-fun x3234 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x1283 () x3476)
(declare-fun x3647 () Int)
(declare-fun x1849 () Bool)
(declare-fun x1612 () Int)
(declare-fun x1864 () Int)
(declare-fun x3623 () Int)
(declare-fun x32 () Bool)
(declare-fun x2893 () Int)
(declare-fun x138 () Bool)
(declare-fun x1712 () Int)
(declare-fun x5312 () Bool)
(declare-fun x518 () Int)
(declare-fun x5043 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x3267 () Int)
(declare-fun x1487 () x3476)
(declare-fun x3042 () Bool)
(declare-fun x742 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x1636 () Int)
(declare-fun x1344 () Bool)
(declare-fun x3080 () Int)
(declare-fun x3959 () Int)
(declare-fun x2987 () Int)
(declare-fun x2784 () Bool)
(declare-fun x1871 () Int)
(declare-fun x3025 () Bool)
(declare-fun x4983 () Int)
(declare-fun x5168 () Bool)
(declare-fun x4769 () Int)
(declare-fun x3158 () Bool)
(declare-fun x2143 () Int)
(declare-fun x1085 () x3476)
(declare-fun x2286 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x4123 () Bool)
(declare-fun x4869 () Int)
(declare-fun x1770 () Bool)
(declare-fun x5334 () Int)
(declare-fun x4369 () Int)
(declare-fun x1014 () Int)
(declare-fun x2077 () Int)
(declare-fun x4928 () Bool)
(declare-fun x4956 () Int)
(declare-fun x4275 () x3476)
(declare-fun x3009 () Bool)
(declare-fun x5253 () x3476)
(declare-fun x3414 () Bool)
(declare-fun x3278 () Bool)
(declare-fun x4017 () Bool)
(declare-fun x3231 () Bool)
(declare-fun x4166 () Int)
(declare-fun x2509 () Int)
(declare-fun x2351 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x3999 () Bool)
(declare-fun x4666 () Int)
(declare-fun x2204 () Bool)
(declare-fun x53 () x3476)
(declare-fun x1854 () Int)
(declare-fun x4719 () Bool)
(declare-fun x4542 () Bool)
(declare-fun x2611 () x3476)
(declare-fun x1544 () Int)
(declare-fun x920 () Bool)
(declare-fun x3898 () Bool)
(declare-fun x913 () Bool)
(declare-fun x1905 () Int)
(declare-fun x2116 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x3144 () Bool)
(declare-fun x4937 () Int)
(declare-fun x1752 () Int)
(declare-fun x4407 () Bool)
(declare-fun x2792 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x4114 () Int)
(declare-fun x1957 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x4162 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x297 () Bool)
(declare-fun x5 () Bool)
(declare-fun x538 () x3476)
(declare-fun x4141 () Int)
(declare-fun x699 () Bool)
(declare-fun x935 () Bool)
(declare-fun x2241 () Int)
(declare-fun x1073 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x4156 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x4734 () Bool)
(declare-fun x4159 () Int)
(declare-fun x4252 () Bool)
(declare-fun x2161 (x3476) Int)
(declare-fun x212 () Bool)
(declare-fun x5128 () x3476)
(declare-fun x4185 () Bool)
(declare-fun x1534 () Int)
(declare-fun x931 () x3476)
(declare-fun x1220 () Int)
(declare-fun x3600 () Int)
(declare-fun x283 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x14 () Int)
(declare-fun x4023 () Bool)
(declare-fun x2808 () Int)
(declare-fun x30 () Bool)
(declare-fun x3088 () Bool)
(declare-fun x5006 () Int)
(declare-fun x2147 () Bool)
(declare-fun x1809 () Int)
(declare-fun x3181 () Int)
(declare-fun x3780 () Bool)
(declare-fun x2214 () Int)
(declare-fun x28 () Bool)
(declare-fun x2587 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x4116 () Int)
(declare-fun x908 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x4103 () Int)
(declare-fun x3338 () Bool)
(declare-fun x3470 () Int)
(declare-fun x3241 () Bool)
(declare-fun x3199 () Bool)
(declare-fun x4626 () Int)
(declare-fun x5309 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x3609 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x3638 () Bool)
(declare-fun x47 () Bool)
(declare-fun x5144 () Bool)
(declare-fun x2867 () x3476)
(declare-fun x4580 () Bool)
(declare-fun x4969 () Bool)
(declare-fun x141 () Bool)
(declare-fun x1927 () Int)
(declare-fun x482 () Int)
(declare-fun x2366 () Bool)
(declare-fun x1274 () Int)
(declare-fun x5132 () Bool)
(declare-fun x2603 () Int)
(declare-fun x3164 () Int)
(declare-fun x4136 () Bool)
(declare-fun x3653 () Bool)
(declare-fun x3511 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x1824 () Int)
(declare-fun x938 () Bool)
(declare-fun x3739 () Int)
(declare-fun x1359 () Bool)
(declare-fun x1127 () Int)
(declare-fun x3258 () Int)
(declare-fun x1509 () Int)
(declare-fun x4679 () Int)
(declare-fun x3486 () Int)
(declare-fun x1884 () x3476)
(declare-fun x5074 () Int)
(declare-fun x3682 () Bool)
(declare-fun x4850 () Int)
(declare-fun x2291 () Bool)
(declare-fun x4773 () Int)
(declare-fun x2449 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x772 () Bool)
(declare-fun x3344 () Int)
(declare-fun x676 () Int)
(declare-fun x3308 () x3476)
(declare-fun x484 () Int)
(declare-fun x25 () Bool)
(declare-fun x4419 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x3545 () Int)
(declare-fun x4696 () Int)
(declare-fun x1708 () x3476)
(declare-fun x2737 () Int)
(declare-fun x2654 () Bool)
(declare-fun x1459 () Int)
(declare-fun x3311 () x3476)
(declare-fun x641 () Bool)
(declare-fun x5315 () Int)
(declare-fun x1035 () Bool)
(declare-fun x2046 () Int)
(declare-fun x2755 () x3476)
(declare-fun x5000 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x4825 () Bool)
(declare-fun x4990 () x3476)
(declare-fun x4513 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x5338 () Bool)
(declare-fun x3837 () Bool)
(declare-fun x3834 () x3476)
(declare-fun x2518 () Bool)
(declare-fun x1805 () Bool)
(declare-fun x3332 () Int)
(declare-fun x2765 () Int)
(declare-fun x3819 () Bool)
(declare-fun x2954 () Int)
(declare-fun x1718 () Bool)
(declare-fun x164 () Bool)
(declare-fun x4464 () Int)
(declare-fun x2191 () Bool)
(declare-fun x5241 () Int)
(declare-fun x2491 () x3476)
(declare-fun x2805 () x3476)
(declare-fun x2019 () x3476)
(declare-fun x4363 () Int)
(declare-fun x273 () Bool)
(declare-fun x544 () x3476)
(declare-fun x4859 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x3373 () Bool)
(declare-fun x1626 () x3476)
(declare-fun x3556 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x2952 () Int)
(declare-fun x372 () Bool)
(declare-fun x245 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x2746 () Int)
(declare-fun x354 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x3459 () x3476)
(declare-fun x216 () x3476)
(declare-fun x1113 () Int)
(declare-fun x3233 () Int)
(declare-fun x4289 () Int)
(declare-fun x458 () Int)
(declare-fun x2171 () Bool)
(declare-fun x4167 () Bool)
(declare-fun x4925 () Bool)
(declare-fun x4611 () x3476)
(declare-fun x3797 () Bool)
(declare-fun x5067 () Int)
(declare-fun x818 () Int)
(declare-fun x1317 () Int)
(declare-fun x4100 () Int)
(declare-fun x485 () Bool)
(declare-fun x319 () Int)
(declare-fun x4537 () Int)
(declare-fun x794 () x3476)
(declare-fun x2154 () Bool)
(declare-fun x4060 () Int)
(declare-fun x1877 () Int)
(declare-fun x4624 () Int)
(declare-fun x3784 () Int)
(declare-fun x2074 () Bool)
(declare-fun x548 () Int)
(declare-fun x1423 () Int)
(declare-fun x2550 () Bool)
(declare-fun x3882 () Int)
(declare-fun x2197 () Int)
(declare-fun x1910 () Int)
(declare-fun x2722 () Int)
(declare-fun x4540 () Int)
(declare-fun x154 () Bool)
(declare-fun x5123 () Bool)
(declare-fun x2267 () Int)
(declare-fun x3554 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x2768 () Int)
(declare-fun x1980 () Int)
(declare-fun x1129 () Int)
(declare-fun x4737 () Bool)
(declare-fun x2373 () Int)
(declare-fun x3394 () Bool)
(declare-fun x2378 () Int)
(declare-fun x4962 () Int)
(declare-fun x5355 () Bool)
(declare-fun x5210 () Bool)
(declare-fun x4934 () Int)
(declare-fun x2311 () Int)
(declare-fun x3416 () Int)
(declare-fun x1357 () Bool)
(declare-fun x2232 () Int)
(declare-fun x3380 () Bool)
(declare-fun x4875 () Int)
(declare-fun x5397 () Bool)
(declare-fun x4161 () Int)
(declare-fun x2729 () Int)
(declare-fun x2380 () Bool)
(declare-fun x5211 () Bool)
(declare-fun x350 () x3476)
(declare-fun x3011 () Int)
(declare-fun x2709 () Int)
(declare-fun x2629 () x3476)
(declare-fun x54 () Bool)
(declare-fun x4910 () Int)
(declare-fun x4148 () Int)
(declare-fun x17 () Bool)
(declare-fun x219 () Int)
(declare-fun x4205 () Bool)
(declare-fun x4599 () Bool)
(declare-fun x4505 () Bool)
(declare-fun x5008 () Int)
(declare-fun x2142 () Int)
(declare-fun x3179 () Int)
(declare-fun x2683 () Bool)
(declare-fun x1318 () Int)
(declare-fun x5010 () Bool)
(declare-fun x112 () x3476)
(declare-fun x3593 () Int)
(declare-fun x3588 () Bool)
(declare-fun x3666 () Bool)
(declare-fun x4065 () Int)
(declare-fun x1215 () Int)
(declare-fun x4276 () Bool)
(declare-fun x3587 () Bool)
(declare-fun x778 () Bool)
(declare-fun x768 () Bool)
(declare-fun x1846 () x3476)
(declare-fun x1282 () Bool)
(declare-fun x3431 () Int)
(declare-fun x2157 () Int)
(declare-fun x3343 () Int)
(declare-fun x333 () Bool)
(declare-fun x4564 (Int) Int)
(declare-fun x4968 () Int)
(declare-fun x3473 () Bool)
(declare-fun x206 () Int)
(declare-fun x2126 () Bool)
(declare-fun x2853 () Bool)
(declare-fun x4987 () Bool)
(declare-fun x4430 () x3476)
(declare-fun x1725 (x3476) Int)
(declare-fun x2763 () Bool)
(declare-fun x156 () Int)
(declare-fun x268 () Int)
(declare-fun x5244 () Bool)
(declare-fun x4170 () x3476)
(declare-fun x19 () Int)
(declare-fun x89 () x3476)
(declare-fun x937 () Bool)
(declare-fun x884 () Bool)
(declare-fun x3890 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1565 () Int)
(declare-fun x96 () Int)
(declare-fun x50 () Int)
(declare-fun x4950 () Bool)
(declare-fun x3212 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x3190 () Int)
(declare-fun x270 () Bool)
(declare-fun x2492 () x3476)
(declare-fun x1995 () Int)
(declare-fun x3558 () Int)
(declare-fun x1503 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x3371 () Int)
(declare-fun x5142 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x4571 () Int)
(declare-fun x1206 () Bool)
(declare-fun x4952 () Bool)
(declare-fun x2478 () Bool)
(declare-fun x1104 () Int)
(declare-fun x584 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x1278 () Int)
(declare-fun x2507 () Bool)
(declare-fun x467 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x3289 () Int)
(declare-fun x1773 () Int)
(declare-fun x1157 () Bool)
(declare-fun x2138 () Int)
(declare-fun x5304 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x116 () Int)
(declare-fun x4341 () Int)
(declare-fun x5262 () Bool)
(declare-fun x3108 () Bool)
(declare-fun x4565 () Int)
(declare-fun x563 () x3476)
(declare-fun x2135 () Bool)
(declare-fun x381 () Int)
(declare-fun x3418 () x3476)
(declare-fun x3855 () Int)
(declare-fun x3185 () Bool)
(declare-fun x1664 () Int)
(declare-fun x4979 () Bool)
(declare-fun x588 () Int)
(declare-fun x5182 () Int)
(declare-fun x4637 () Bool)
(declare-fun x491 () Int)
(declare-fun x2889 () Bool)
(declare-fun x2136 () x3476)
(declare-fun x2438 () x3476)
(declare-fun x4628 () Bool)
(declare-fun x3870 () Int)
(declare-fun x1972 () Int)
(declare-fun x266 () Bool)
(declare-fun x717 () Bool)
(declare-fun x4153 () Bool)
(declare-fun x4316 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x3468 () Bool)
(declare-fun x903 (x3476) Int)
(declare-fun x2407 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x863 () Bool)
(declare-fun x3915 () Int)
(declare-fun x3195 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x1354 (Int) Int)
(declare-fun x2412 () Int)
(declare-fun x805 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x435 () Bool)
(declare-fun x5143 () Int)
(declare-fun x1058 () Int)
(declare-fun x556 () Int)
(declare-fun x5268 () Bool)
(declare-fun x2537 () Int)
(declare-fun x4704 () Bool)
(declare-fun x3967 () Int)
(declare-fun x4397 () Int)
(declare-fun x643 () Int)
(declare-fun x3167 () x3476)
(declare-fun x907 () Int)
(declare-fun x658 () Int)
(declare-fun x3763 (Int) Int)
(declare-fun x1731 () x3476)
(declare-fun x221 () Bool)
(declare-fun x2505 () Int)
(declare-fun x4504 () Int)
(declare-fun x4938 () Bool)
(declare-fun x4157 () Bool)
(declare-fun x4257 () Bool)
(declare-fun x2818 () Bool)
(declare-fun x2639 () Int)
(declare-fun x3786 () Int)
(declare-fun x2081 () Int)
(declare-fun x345 () x3476)
(declare-fun x1844 () Int)
(declare-fun x1413 () Bool)
(declare-fun x5252 () Int)
(declare-fun x1164 () Int)
(declare-fun x2004 () Bool)
(declare-fun x1424 () Int)
(declare-fun x5081 () Int)
(declare-fun x213 () x3476)
(declare-fun x653 () Bool)
(declare-fun x4909 () Bool)
(declare-fun x4459 () Bool)
(declare-fun x3990 () x3476)
(declare-fun x1287 () Int)
(declare-fun x274 () Int)
(declare-fun x763 () Bool)
(declare-fun x4528 () Bool)
(declare-fun x3541 () Int)
(declare-fun x5013 () Bool)
(declare-fun x2487 (x3476) Int)
(declare-fun x1937 (Int) Int)
(declare-fun x2293 () Int)
(declare-fun x5289 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x3853 () Int)
(declare-fun x2724 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x2656 () Int)
(declare-fun x3920 () x3476)
(declare-fun x161 () Int)
(declare-fun x5320 () Int)
(declare-fun x542 () x3476)
(declare-fun x844 () Int)
(declare-fun x4991 () x3476)
(declare-fun x2838 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x5350 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x506 () Bool)
(declare-fun x142 () Int)
(declare-fun x3027 () Bool)
(declare-fun x3493 () Int)
(declare-fun x796 () x3476)
(declare-fun x3369 () x3476)
(declare-fun x1801 () x3476)
(declare-fun x2897 () Int)
(declare-fun x1727 () Bool)
(declare-fun x4247 () Int)
(declare-fun x4900 () Int)
(declare-fun x4086 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x3755 () Bool)
(declare-fun x5322 () Bool)
(declare-fun x5226 () Int)
(declare-fun x401 () Bool)
(declare-fun x4273 () Bool)
(declare-fun x747 () Int)
(declare-fun x1823 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x677 () Bool)
(declare-fun x3430 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x4468 () Int)
(declare-fun x3821 () Int)
(declare-fun x302 () Int)
(declare-fun x4711 () Int)
(declare-fun x4839 () Bool)
(declare-fun x2368 () x3476)
(declare-fun x3685 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x5175 () Bool)
(declare-fun x2634 () Int)
(declare-fun x3261 () Bool)
(declare-fun x3069 () Bool)
(declare-fun x4050 () Int)
(declare-fun x5192 () Int)
(declare-fun x4212 (Int) Int)
(declare-fun x2682 () Bool)
(declare-fun x3264 () Bool)
(declare-fun x2265 () Bool)
(declare-fun x4396 () Bool)
(declare-fun x316 () Bool)
(declare-fun x3580 () Bool)
(declare-fun x225 () Int)
(declare-fun x3579 () Int)
(declare-fun x1288 () Int)
(declare-fun x1584 () Bool)
(declare-fun x1419 () Int)
(declare-fun x2382 () Bool)
(declare-fun x1747 () Int)
(declare-fun x4265 () Int)
(declare-fun x3296 () Int)
(declare-fun x4291 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x3204 () Bool)
(declare-fun x383 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x2180 () x3476)
(declare-fun x234 () Int)
(declare-fun x178 () Int)
(declare-fun x4703 () Bool)
(declare-fun x3528 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x5186 () Bool)
(declare-fun x5282 () Int)
(declare-fun x1276 () Bool)
(declare-fun x303 () Int)
(declare-fun x352 () Int)
(declare-fun x3806 () Bool)
(declare-fun x5059 () Bool)
(declare-fun x756 () Bool)
(declare-fun x2104 () Bool)
(declare-fun x905 () Bool)
(declare-fun x4889 () Bool)
(declare-fun x4863 () Int)
(declare-fun x90 () Int)
(declare-fun x1396 () Int)
(declare-fun x4329 () Int)
(declare-fun x4975 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x3398 () Int)
(declare-fun x4700 (x3476) Int)
(declare-fun x4709 () Bool)
(declare-fun x4488 () Bool)
(declare-fun x2691 () Int)
(declare-fun x2580 () Bool)
(declare-fun x4335 () Int)
(declare-fun x2500 () Bool)
(declare-fun x231 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1817 () Int)
(declare-fun x2878 () Int)
(declare-fun x2822 () Bool)
(declare-fun x2231 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x1922 () Int)
(declare-fun x2018 () Int)
(declare-fun x4154 () Bool)
(declare-fun x380 () Int)
(declare-fun x310 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x3694 () Int)
(declare-fun x4259 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x5021 () Bool)
(declare-fun x2360 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x2970 () Int)
(declare-fun x3312 () Bool)
(declare-fun x2292 () x3476)
(declare-fun x24 () Bool)
(declare-fun x4485 () Bool)
(declare-fun x3129 () Bool)
(declare-fun x5007 () Bool)
(declare-fun x5205 () Int)
(declare-fun x4203 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x4133 () Bool)
(declare-fun x3351 () Bool)
(declare-fun x4507 () Int)
(declare-fun x404 () Int)
(declare-fun x1890 () x3476)
(declare-fun x2788 (Int Int) Int)
(declare-fun x2393 () Bool)
(declare-fun x2153 () Int)
(declare-fun x1651 (Int) Int)
(declare-fun x1587 () Bool)
(declare-fun x4016 () Bool)
(declare-fun x3073 () Bool)
(declare-fun x2801 () Bool)
(declare-fun x3237 () Int)
(declare-fun x3719 () Int)
(declare-fun x4216 () Int)
(declare-fun x3582 () Int)
(declare-fun x1537 () Int)
(declare-fun x3583 () Bool)
(declare-fun x2723 () Int)
(declare-fun x4383 () Int)
(declare-fun x1602 () x3476)
(declare-fun x887 () Int)
(declare-fun x4514 (x3476) Int)
(declare-fun x2899 () Bool)
(declare-fun x951 () Bool)
(declare-fun x4591 () Int)
(declare-fun x4730 () Bool)
(declare-fun x5297 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x5159 () Int)
(declare-fun x4879 (Int) Int)
(declare-fun x708 () Int)
(declare-fun x3716 () Int)
(declare-fun x2614 () Bool)
(declare-fun x2486 () Int)
(declare-fun x4659 () Int)
(declare-fun x985 () Int)
(declare-fun x1068 () Int)
(declare-fun x2193 () Bool)
(declare-fun x3599 () Int)
(declare-fun x2558 () Bool)
(declare-fun x2330 () Int)
(declare-fun x5356 () Bool)
(declare-fun x5155 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x4198 () Int)
(declare-fun x2677 () Bool)
(declare-fun x5296 () x3476)
(declare-fun x3983 () x3476)
(declare-fun x4108 () Int)
(declare-fun x2559 () x3476)
(declare-fun x3194 () Bool)
(declare-fun x3200 () Bool)
(declare-fun x136 () Int)
(declare-fun x3327 () Bool)
(declare-fun x2844 (Int) Int)
(declare-fun x1446 () Int)
(declare-fun x4567 () x3476)
(declare-fun x289 () Int)
(declare-fun x4618 () Bool)
(declare-fun x4092 () Bool)
(declare-fun x4221 () Bool)
(declare-fun x1632 () Int)
(declare-fun x5003 () Int)
(declare-fun x4944 () Int)
(declare-fun x1141 () Bool)
(declare-fun x2872 () Bool)
(declare-fun x477 () Int)
(declare-fun x4977 () Int)
(declare-fun x1087 () Bool)
(declare-fun x4867 () Int)
(declare-fun x498 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x1195 () x3476)
(declare-fun x4346 () Bool)
(declare-fun x3260 () Int)
(declare-fun x159 () Bool)
(declare-fun x3335 () Int)
(declare-fun x4616 () Bool)
(declare-fun x4433 () Bool)
(declare-fun x3331 () Int)
(declare-fun x3132 () Bool)
(declare-fun x284 () x3476)
(declare-fun x12 () Int)
(declare-fun x2094 () Bool)
(declare-fun x1649 () Int)
(declare-fun x3792 (x3476) Int)
(declare-fun x2386 () Int)
(declare-fun x215 () Int)
(declare-fun x517 () Int)
(declare-fun x1689 (x3476) Int)
(declare-fun x4727 () Bool)
(declare-fun x4663 () Int)
(declare-fun x5374 () Bool)
(declare-fun x4478 () Bool)
(declare-fun x2624 () Int)
(declare-fun x1853 () Int)
(declare-fun x3402 () Int)
(declare-fun x1646 () Int)
(declare-fun x2468 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x374 () Bool)
(declare-fun x2921 () Int)
(declare-fun x2480 () Int)
(declare-fun x3604 () Bool)
(declare-fun x5295 () Bool)
(declare-fun x2052 () Int)
(declare-fun x5375 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x1799 () Bool)
(declare-fun x4437 () Bool)
(declare-fun x3384 () Bool)
(declare-fun x4670 () Bool)
(declare-fun x1783 () Int)
(declare-fun x1422 () Int)
(declare-fun x4827 () Bool)
(declare-fun x4828 () Int)
(declare-fun x4891 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x886 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x2546 () Int)
(declare-fun x2934 () Int)
(declare-fun x4677 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x4321 () x3476)
(declare-fun x3496 () Bool)
(declare-fun x4009 () Int)
(declare-fun x4791 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x3340 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x4623 () Int)
(declare-fun x211 () Int)
(declare-fun x5158 () Int)
(declare-fun x2887 () Bool)
(declare-fun x731 () Bool)
(declare-fun x4854 () Bool)
(declare-fun x963 () Bool)
(declare-fun x5203 () Bool)
(declare-fun x1564 () Int)
(declare-fun x1893 () Int)
(declare-fun x3041 () Bool)
(declare-fun x982 () Int)
(declare-fun x2042 () Bool)
(declare-fun x1484 () Int)
(declare-fun x4389 () Int)
(declare-fun x1000 () Int)
(declare-fun x294 () Bool)
(declare-fun x2615 () Int)
(declare-fun x2289 () Int)
(declare-fun x2988 () Bool)
(declare-fun x497 () Int)
(declare-fun x3161 () Bool)
(declare-fun x5057 () Int)
(declare-fun x1416 () Int)
(declare-fun x3762 () Int)
(declare-fun x23 () Bool)
(declare-fun x2084 () Int)
(declare-fun x3892 () Int)
(declare-fun x3357 () Bool)
(declare-fun x3785 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x3939 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x2446 () Bool)
(declare-fun x3061 () x3476)
(declare-fun x1025 () Int)
(declare-fun x5136 () Bool)
(declare-fun x479 () Bool)
(declare-fun x1076 () Int)
(declare-fun x4472 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x1740 () Int)
(declare-fun x92 () Int)
(declare-fun x3559 () Bool)
(declare-fun x2752 () Int)
(declare-fun x1706 () Bool)
(declare-fun x1570 () Int)
(declare-fun x2377 () Bool)
(declare-fun x628 () x3476)
(declare-fun x1316 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x4657 () Bool)
(declare-fun x3760 () x3476)
(declare-fun x2186 () Int)
(declare-fun x109 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x131 () x3476)
(declare-fun x3121 () Bool)
(declare-fun x2502 () Bool)
(declare-fun x599 () Bool)
(declare-fun x4980 () Int)
(declare-fun x4261 () Bool)
(declare-fun x2107 () Int)
(declare-fun x869 () Int)
(declare-fun x2068 () Bool)
(declare-fun x1894 () Bool)
(declare-fun x4895 () Bool)
(declare-fun x1398 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x2476 () Bool)
(declare-fun x125 () Int)
(declare-fun x875 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x5306 () Int)
(declare-fun x2903 () x3476)
(declare-fun x4512 () Int)
(declare-fun x2619 () Bool)
(declare-fun x1912 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x375 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x532 () Bool)
(declare-fun x3087 () Bool)
(declare-fun x2430 () Int)
(declare-fun x734 () x3476)
(declare-fun x1277 (Int) Int)
(declare-fun x4804 () Int)
(declare-fun x5234 () Bool)
(declare-fun x964 () Int)
(declare-fun x3761 () Bool)
(declare-fun x5153 () Int)
(declare-fun x4754 () x3476)
(declare-fun x407 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x4651 () x3476)
(declare-fun x2704 () Int)
(declare-fun x1307 (x3476) Int)
(declare-fun x3216 () Int)
(declare-fun x579 () Int)
(declare-fun x1772 () Bool)
(declare-fun x304 () Bool)
(declare-fun x3038 () Int)
(declare-fun x1640 () Bool)
(declare-fun x5169 () Int)
(declare-fun x1520 () Bool)
(declare-fun x2944 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x1954 () Int)
(declare-fun x3347 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x3488 () Bool)
(declare-fun x4633 () Bool)
(declare-fun x2552 () x3476)
(declare-fun x1406 () Bool)
(declare-fun x2453 () Int)
(declare-fun x3949 () Int)
(declare-fun x1947 () Int)
(declare-fun x4921 () Bool)
(declare-fun x4753 () Int)
(declare-fun x1719 () x3476)
(declare-fun x382 () Bool)
(declare-fun x1930 () Int)
(declare-fun x5024 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x1228 () Int)
(declare-fun x1356 () Bool)
(declare-fun x4424 () Bool)
(declare-fun x2035 (Int) Int)
(declare-fun x4718 () Bool)
(declare-fun x1984 () Int)
(declare-fun x4630 () Bool)
(declare-fun x4030 () Int)
(declare-fun x1938 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x942 () Int)
(declare-fun x5223 () x3476)
(declare-fun x3193 () Int)
(declare-fun x3029 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x3995 () Int)
(declare-fun x5119 () Bool)
(declare-fun x945 () x3476)
(declare-fun x2246 () Int)
(declare-fun x2451 () Int)
(declare-fun x2951 () Int)
(declare-fun x3778 () Bool)
(declare-fun x4350 () Bool)
(declare-fun x4155 () Bool)
(declare-fun x3687 () Int)
(declare-fun x2858 () Int)
(declare-fun x5045 () Int)
(declare-fun x2384 () Bool)
(declare-fun x2664 () Int)
(declare-fun x1292 () Int)
(declare-fun x4414 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x3532 () Int)
(declare-fun x77 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x466 () Bool)
(declare-fun x210 () Bool)
(declare-fun x732 () x3476)
(declare-fun x4271 () Int)
(declare-fun x1152 () Bool)
(declare-fun x3551 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x3509 () Int)
(declare-fun x4113 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x4776 () Int)
(declare-fun x5302 () Bool)
(declare-fun x4417 () Int)
(declare-fun x84 () Bool)
(declare-fun x5305 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x2561 () Bool)
(declare-fun x553 () Bool)
(declare-fun x186 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x4319 () Int)
(declare-fun x4762 () Int)
(declare-fun x2846 () Bool)
(declare-fun x1873 () Int)
(declare-fun x3189 () Bool)
(declare-fun x5287 () Bool)
(declare-fun x618 () Bool)
(declare-fun x2641 () x3476)
(declare-fun x3632 () Int)
(declare-fun x1929 () Int)
(declare-fun x631 () Bool)
(declare-fun x4142 () Bool)
(declare-fun x547 () Bool)
(declare-fun x4955 () Int)
(declare-fun x3495 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x5146 () Bool)
(declare-fun x4149 () Bool)
(declare-fun x2159 () Int)
(declare-fun x296 () Int)
(declare-fun x3790 () Bool)
(declare-fun x3271 () Int)
(declare-fun x483 () Int)
(declare-fun x4672 (Int) Int)
(declare-fun x3058 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x1355 () Int)
(declare-fun x569 () Bool)
(declare-fun x1498 () Int)
(declare-fun x1400 () Bool)
(declare-fun x4496 () Bool)
(declare-fun x2776 () Bool)
(declare-fun x2374 () Bool)
(declare-fun x2865 () x3476)
(declare-fun x1257 () Int)
(declare-fun x2506 () Bool)
(declare-fun x3400 () Bool)
(declare-fun x1836 () Int)
(declare-fun x656 () Int)
(declare-fun x3330 () Bool)
(declare-fun x829 () Bool)
(declare-fun x4941 () Int)
(declare-fun x98 () Int)
(declare-fun x1488 () Bool)
(declare-fun x430 () Bool)
(declare-fun x15 () Bool)
(declare-fun x505 () Bool)
(declare-fun x3116 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x1306 (x3476) Int)
(declare-fun x5386 () Int)
(declare-fun x3391 () Int)
(declare-fun x2481 () Bool)
(declare-fun x3843 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x853 () Int)
(declare-fun x5278 () Bool)
(declare-fun x3676 () Int)
(declare-fun x5099 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x5405 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x5220 () Bool)
(declare-fun x5137 () x3476)
(declare-fun x1365 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x3553 () x3476)
(declare-fun x1033 () Bool)
(declare-fun x120 () Bool)
(declare-fun x3156 () Bool)
(declare-fun x4877 () Int)
(declare-fun x2820 () Bool)
(declare-fun x4788 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x3969 () Int)
(declare-fun x2343 () Bool)
(declare-fun x2271 () Int)
(declare-fun x58 () Bool)
(declare-fun x2565 () Int)
(declare-fun x1762 () Bool)
(declare-fun x3607 () Bool)
(declare-fun x1374 () Int)
(declare-fun x1885 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x4190 () x3476)
(declare-fun x2347 () Int)
(declare-fun x897 () Bool)
(declare-fun x3701 () Int)
(declare-fun x1101 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x4821 () Bool)
(declare-fun x2891 () Int)
(declare-fun x1678 () Int)
(declare-fun x1542 () Int)
(declare-fun x5162 () Bool)
(declare-fun x492 () Bool)
(declare-fun x2739 () Int)
(declare-fun x3071 () Bool)
(declare-fun x617 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x5102 () Bool)
(declare-fun x4717 () Int)
(declare-fun x4919 () Bool)
(declare-fun x3168 () Bool)
(declare-fun x4551 () Bool)
(declare-fun x3210 () x3476)
(declare-fun x5033 () Bool)
(declare-fun x4454 () Bool)
(declare-fun x3884 () Bool)
(declare-fun x3527 () Int)
(declare-fun x3016 () Bool)
(declare-fun x4177 () Int)
(declare-fun x1148 () Bool)
(declare-fun x3731 () Bool)
(declare-fun x318 () x3476)
(declare-fun x2900 () Bool)
(declare-fun x5083 () Bool)
(declare-fun x4458 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x800 () Int)
(declare-fun x3206 () Int)
(declare-fun x2021 () Bool)
(declare-fun x4314 () Int)
(declare-fun x590 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x3877 () Int)
(declare-fun x4163 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x2931 () Int)
(declare-fun x4725 () Bool)
(declare-fun x5160 () Bool)
(declare-fun x5354 () x3476)
(declare-fun x79 () Bool)
(declare-fun x1021 () x3476)
(declare-fun x1631 () Int)
(declare-fun x2775 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x3862 () Bool)
(declare-fun x3443 () Int)
(declare-fun x2824 () Bool)
(declare-fun x2635 () x3476)
(declare-fun x2827 () Bool)
(declare-fun x893 () Bool)
(declare-fun x1755 () Int)
(declare-fun x2336 () Int)
(declare-fun x2593 () Bool)
(declare-fun x5069 () Bool)
(declare-fun x3859 () Bool)
(declare-fun x2946 () Int)
(declare-fun x4556 () Int)
(declare-fun x4405 () Int)
(declare-fun x3767 () Bool)
(declare-fun x2679 () Bool)
(declare-fun x1295 () Int)
(declare-fun x2834 () Int)
(declare-fun x3868 () Int)
(declare-fun x3001 () x3476)
(declare-fun x3451 () Int)
(declare-fun x4031 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x4936 () Int)
(declare-fun x1948 () Int)
(declare-fun x299 () Int)
(declare-fun x2542 () x3476)
(declare-fun x5292 () Int)
(declare-fun x1465 () Int)
(declare-fun x3905 () x3476)
(declare-fun x3006 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x240 () Int)
(declare-fun x233 () Bool)
(declare-fun x2216 () Bool)
(declare-fun x133 () Int)
(declare-fun x2196 (x3476) Int)
(declare-fun x5245 () Bool)
(declare-fun x4099 () Int)
(declare-fun x2400 () Int)
(declare-fun x135 () Int)
(declare-fun x370 () Bool)
(declare-fun x26 () Int)
(declare-fun x4368 () Bool)
(declare-fun x1343 () Int)
(declare-fun x5183 () Int)
(declare-fun x1041 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x2596 () Int)
(declare-fun x4562 () Int)
(declare-fun x4631 () Bool)
(declare-fun x4814 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x4523 () Int)
(declare-fun x2534 () Int)
(declare-fun x2835 () Bool)
(declare-fun x4973 () Int)
(declare-fun x1453 () Bool)
(declare-fun x799 () Bool)
(declare-fun x218 (Int) Int)
(declare-fun x1311 () Int)
(declare-fun x1737 () x3476)
(declare-fun x1676 () Bool)
(declare-fun x4902 () Bool)
(declare-fun x5050 () x3476)
(declare-fun x2933 () Bool)
(declare-fun x910 () Bool)
(declare-fun x715 () Int)
(declare-fun x5038 () Bool)
(declare-fun x4409 () Bool)
(declare-fun x2017 () x3476)
(declare-fun x2540 () Bool)
(declare-fun x4420 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x6 () x3476)
(declare-fun x2047 () Int)
(declare-fun x4731 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x4073 () x3476)
(declare-fun x411 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x976 () Int)
(declare-fun x4876 () Bool)
(declare-fun x530 () Bool)
(declare-fun x308 (Int) Int)
(declare-fun x1652 () Int)
(declare-fun x3251 () Int)
(declare-fun x3591 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x4104 () Int)
(declare-fun x2640 () Bool)
(declare-fun x4813 () Int)
(declare-fun x4901 () Int)
(declare-fun x3906 () Bool)
(declare-fun x4448 () Bool)
(declare-fun x5135 () Bool)
(declare-fun x4915 () Int)
(declare-fun x4115 () x3476)
(declare-fun x5174 () Int)
(declare-fun x1611 () Bool)
(declare-fun x4749 () Bool)
(declare-fun x55 () Int)
(declare-fun x2918 () Int)
(declare-fun x4606 () Int)
(declare-fun x2523 () Int)
(declare-fun x403 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x2666 () Int)
(declare-fun x1569 () Bool)
(declare-fun x2471 () Int)
(declare-fun x5270 () Int)
(declare-fun x3397 () Bool)
(declare-fun x2816 () Int)
(declare-fun x1680 () Bool)
(declare-fun x5105 () Bool)
(declare-fun x2367 () Int)
(declare-fun x5097 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x4012 () Bool)
(declare-fun x609 () Int)
(declare-fun x1168 () Int)
(declare-fun x616 () Bool)
(declare-fun x2648 () Int)
(declare-fun x330 () Bool)
(declare-fun x3100 () Int)
(declare-fun x892 () Bool)
(declare-fun x5384 () x3476)
(declare-fun x2956 () Bool)
(declare-fun x1991 () x3476)
(declare-fun x2185 () Int)
(declare-fun x5248 () Int)
(declare-fun x1599 () Int)
(declare-fun x4447 () Int)
(declare-fun x707 () Bool)
(declare-fun x2625 () Int)
(declare-fun x2361 () Bool)
(declare-fun x840 () Int)
(declare-fun x193 () Bool)
(declare-fun x5110 () Int)
(declare-fun x4896 () Int)
(declare-fun x3065 () Bool)
(declare-fun x994 () Bool)
(declare-fun x4076 () Bool)
(declare-fun x3631 () Int)
(declare-fun x3363 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x5104 () Int)
(declare-fun x1373 () Int)
(declare-fun x2417 () Bool)
(declare-fun x3993 () x3476)
(declare-fun x3159 () Bool)
(declare-fun x4317 () Bool)
(declare-fun x2809 () Int)
(declare-fun x86 () x3476)
(declare-fun x3066 () Int)
(declare-fun x1080 () Int)
(declare-fun x930 () Bool)
(declare-fun x660 () x3476)
(declare-fun x2225 () Int)
(declare-fun x3215 () Bool)
(declare-fun x118 () Int)
(declare-fun x680 () Int)
(declare-fun x4165 () Int)
(declare-fun x3034 () Int)
(declare-fun x173 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x321 () Int)
(declare-fun x1888 () Bool)
(declare-fun x2250 () Bool)
(declare-fun x496 () Bool)
(declare-fun x781 () Bool)
(declare-fun x4084 () Bool)
(declare-fun x1941 () Bool)
(declare-fun x3736 () Bool)
(declare-fun x4916 () Bool)
(declare-fun x3840 () x3476)
(declare-fun x4001 () Bool)
(declare-fun x191 () Int)
(declare-fun x1264 () Bool)
(declare-fun x3095 () Int)
(declare-fun x1586 () Int)
(declare-fun x183 () Bool)
(declare-fun x3018 () Int)
(declare-fun x4985 (x3476) Int)
(declare-fun x1119 () Int)
(declare-fun x4415 () Int)
(declare-fun x57 () Bool)
(declare-fun x110 () Int)
(declare-fun x3235 () Bool)
(declare-fun x3718 () Bool)
(declare-fun x3269 () Int)
(declare-fun x1660 () Bool)
(declare-fun x2339 () Int)
(declare-fun x3302 () Int)
(declare-fun x3724 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x4069 () Bool)
(declare-fun x595 () Int)
(declare-fun x593 () x3476)
(declare-fun x4713 () Int)
(declare-fun x1901 () Int)
(declare-fun x1270 () Int)
(declare-fun x3103 () Bool)
(declare-fun x5090 () Bool)
(declare-fun x2536 () Bool)
(declare-fun x3697 () Bool)
(declare-fun x3421 () Bool)
(declare-fun x2392 () x3476)
(declare-fun x3749 () Bool)
(declare-fun x282 () x3476)
(declare-fun x916 () x3476)
(declare-fun x4576 () Bool)
(declare-fun x4639 () Int)
(declare-fun x2061 () Bool)
(declare-fun x5178 () Int)
(declare-fun x3955 () Int)
(declare-fun x4416 () Int)
(declare-fun x3406 () Bool)
(declare-fun x2025 () Int)
(declare-fun x1913 () Bool)
(declare-fun x5086 () Int)
(declare-fun x5009 () Bool)
(declare-fun x4868 () Int)
(declare-fun x1671 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x5207 () Bool)
(declare-fun x1861 () Bool)
(declare-fun x2703 () Int)
(declare-fun x3861 () Int)
(declare-fun x4218 () Int)
(declare-fun x1505 () Bool)
(declare-fun x129 () Int)
(declare-fun x344 () Bool)
(declare-fun x1019 () Int)
(declare-fun x3627 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x5156 () Bool)
(declare-fun x2426 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x4078 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x3390 () Bool)
(declare-fun x971 () Bool)
(declare-fun x657 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x4083 () Bool)
(declare-fun x2092 () Int)
(declare-fun x445 () Bool)
(declare-fun x465 () Int)
(declare-fun x1321 () x3476)
(declare-fun x1728 () Bool)
(declare-fun x850 () Bool)
(declare-fun x727 () Int)
(declare-fun x1753 () Int)
(declare-fun x2239 () Bool)
(declare-fun x2651 () x3476)
(declare-fun x3214 () Int)
(declare-fun x3284 () Bool)
(declare-fun x4255 () Bool)
(declare-fun x4175 () Bool)
(declare-fun x2055 (Int Int) Int)
(declare-fun x4543 () Int)
(declare-fun x2990 () Int)
(declare-fun x421 () x3476)
(declare-fun x1800 () Bool)
(declare-fun x4687 () Int)
(declare-fun x3019 () Int)
(declare-fun x1471 () Bool)
(declare-fun x5379 () Bool)
(declare-fun x1536 () Int)
(declare-fun x1497 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x3766 () x3476)
(declare-fun x1977 () x3476)
(declare-fun x2711 () x3476)
(declare-fun x1333 () x3476)
(declare-fun x3960 () Bool)
(declare-fun x4238 () Bool)
(declare-fun x5235 () Bool)
(declare-fun x3510 () Bool)
(declare-fun x2472 () Int)
(declare-fun x4062 () x3476)
(declare-fun x1258 () Int)
(declare-fun x2057 () Bool)
(declare-fun x1669 () Bool)
(declare-fun x13 () Int)
(declare-fun x2062 () Bool)
(declare-fun x2414 () Int)
(declare-fun x1062 () Bool)
(declare-fun x4147 () Int)
(declare-fun x1803 () Bool)
(declare-fun x2338 () x3476)
(declare-fun x5232 () Bool)
(declare-fun x4484 () Bool)
(declare-fun x4781 () Bool)
(declare-fun x366 () x3476)
(declare-fun x3122 () Int)
(declare-fun x3171 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x459 () Int)
(declare-fun x478 () Int)
(declare-fun x60 () Bool)
(declare-fun x3317 () Bool)
(declare-fun x4855 () Int)
(declare-fun x4224 () Int)
(declare-fun x4680 () Bool)
(declare-fun x31 () Bool)
(declare-fun x453 () Bool)
(declare-fun x5036 () Bool)
(declare-fun x5138 () Bool)
(declare-fun x3230 () Int)
(declare-fun x513 () Int)
(declare-fun x940 () Int)
(declare-fun x2337 () Bool)
(declare-fun x2532 () Bool)
(declare-fun x155 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x960 () Bool)
(declare-fun x3678 () x3476)
(declare-fun x1272 () x3476)
(declare-fun x347 () Int)
(declare-fun x2919 () Bool)
(declare-fun x3337 () Bool)
(declare-fun x4374 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x3256 () Bool)
(declare-fun x4188 () Bool)
(declare-fun x1252 () Int)
(declare-fun x1994 () Bool)
(declare-fun x2539 () Int)
(declare-fun x1554 () Bool)
(declare-fun x4441 () Int)
(declare-fun x4808 () Int)
(declare-fun x578 () Bool)
(declare-fun x3253 () Bool)
(declare-fun x5055 () Bool)
(declare-fun x2200 () Int)
(declare-fun x3753 () Int)
(declare-fun x4585 (x3476) Int)
(declare-fun x614 () Int)
(declare-fun x511 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x2058 () x3476)
(declare-fun x1591 () Bool)
(declare-fun x4622 () Bool)
(declare-fun x2419 () Int)
(declare-fun x3494 () Int)
(declare-fun x901 () Bool)
(declare-fun x4779 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x348 () Int)
(declare-fun x4500 () Bool)
(declare-fun x1662 (x3476) Int)
(declare-fun x4531 () Bool)
(declare-fun x4521 () x3476)
(declare-fun x2633 () Int)
(declare-fun x5266 () Bool)
(declare-fun x5161 () Bool)
(declare-fun x4805 () Bool)
(declare-fun x5249 () Bool)
(declare-fun x4561 () x3476)
(declare-fun x3173 () Int)
(declare-fun x1707 () Bool)
(declare-fun x4318 () Bool)
(declare-fun x1826 () Int)
(declare-fun x3287 () Int)
(declare-fun x1808 () Int)
(declare-fun x1815 () Int)
(declare-fun x4678 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x3611 () Int)
(declare-fun x4654 () x3476)
(declare-fun x398 () Bool)
(declare-fun x3221 () Bool)
(declare-fun x4912 () Bool)
(declare-fun x1786 () Int)
(declare-fun x2856 () Int)
(declare-fun x1181 () Int)
(declare-fun x2242 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x3254 () Int)
(declare-fun x2331 () Int)
(declare-fun x1382 () Int)
(declare-fun x1330 () Bool)
(declare-fun x5112 () Bool)
(declare-fun x1186 () Int)
(declare-fun x662 () Int)
(declare-fun x838 () Int)
(declare-fun x630 () Int)
(declare-fun x2473 () Int)
(declare-fun x3255 () Bool)
(declare-fun x4840 () Int)
(declare-fun x3175 () Bool)
(declare-fun x3245 () Int)
(declare-fun x546 () Bool)
(declare-fun x1959 () x3476)
(declare-fun x4866 () Int)
(declare-fun x921 () Bool)
(declare-fun x678 () Int)
(declare-fun x2454 () Bool)
(declare-fun x379 (x3476) Int)
(declare-fun x2761 () Bool)
(declare-fun x5147 () Bool)
(declare-fun x4632 () Int)
(declare-fun x4278 () Bool)
(declare-fun x519 () x3476)
(declare-fun x4886 () Int)
(declare-fun x4428 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1193 () Int)
(declare-fun x839 () Int)
(declare-fun x2943 () Int)
(declare-fun x3471 () Bool)
(declare-fun x1960 () Bool)
(declare-fun x767 (Int) Int)
(declare-fun x1103 (x3476) Int)
(declare-fun x765 () Int)
(declare-fun x220 () Int)
(declare-fun x725 () Bool)
(declare-fun x4495 () Bool)
(declare-fun x4059 () Int)
(declare-fun x2173 () Bool)
(declare-fun x2747 () Bool)
(declare-fun x992 () Bool)
(declare-fun x4179 () Int)
(declare-fun x3752 () Int)
(declare-fun x214 () Bool)
(declare-fun x3165 () Bool)
(declare-fun x1855 () x3476)
(declare-fun x1225 () x3476)
(declare-fun x3921 () x3476)
(declare-fun x1120 () Int)
(declare-fun x1308 () Bool)
(declare-fun x827 () Int)
(declare-fun x1284 () x3476)
(declare-fun x1997 () Bool)
(declare-fun x4463 () Bool)
(declare-fun x2708 () Bool)
(declare-fun x1709 () Int)
(declare-fun x3903 (x3476) Int)
(declare-fun x3703 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x692 () Bool)
(declare-fun x721 () Bool)
(declare-fun x744 () Bool)
(declare-fun x3927 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x792 () Bool)
(declare-fun x2741 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x3765 (x3476) Int)
(declare-fun x3706 () Int)
(declare-fun x3428 () Int)
(declare-fun x5359 () Bool)
(declare-fun x2236 () Int)
(declare-fun x2914 () Bool)
(declare-fun x1953 () Int)
(declare-fun x4752 () x3476)
(declare-fun x137 () Bool)
(declare-fun x3434 () Bool)
(declare-fun x3477 () Int)
(declare-fun x521 () Bool)
(declare-fun x4036 () Int)
(declare-fun x3096 () Bool)
(declare-fun x1297 () Int)
(declare-fun x1684 () Int)
(declare-fun x5180 () Bool)
(declare-fun x959 () Bool)
(declare-fun x3570 () Int)
(declare-fun x1172 () Bool)
(declare-fun x3208 () Int)
(declare-fun x5063 () Int)
(declare-fun x2223 () Int)
(declare-fun x4723 () Int)
(declare-fun x4763 () Bool)
(declare-fun x1034 () Int)
(declare-fun x1850 () Bool)
(declare-fun x833 () Int)
(declare-fun x3157 () Bool)
(declare-fun x4722 () Bool)
(declare-fun x4110 () Int)
(declare-fun x1749 () Bool)
(declare-fun x2631 () Int)
(declare-fun x2127 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x1209 () Int)
(declare-fun x3651 () Int)
(declare-fun x2485 () Bool)
(declare-fun x4471 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x43 () Int)
(declare-fun x642 () Int)
(declare-fun x1299 () Int)
(declare-fun x3320 () Int)
(declare-fun x3408 () Int)
(declare-fun x4418 () Int)
(declare-fun x5358 () Bool)
(declare-fun x4283 () Int)
(declare-fun x3563 () Int)
(declare-fun x4777 () Int)
(declare-fun x1950 () Int)
(declare-fun x2221 () Bool)
(declare-fun x5337 () Bool)
(declare-fun x4258 () Bool)
(declare-fun x4665 () Bool)
(declare-fun x5352 () Int)
(declare-fun x861 () Bool)
(declare-fun x4999 () Bool)
(declare-fun x4311 () Bool)
(declare-fun x5366 () x3476)
(declare-fun x1607 () Int)
(declare-fun x2155 () Bool)
(declare-fun x2978 () Int)
(declare-fun x3480 () Int)
(declare-fun x1838 () Bool)
(declare-fun x1795 () x3476)
(declare-fun x894 () x3476)
(declare-fun x2644 () Int)
(declare-fun x3262 () Int)
(declare-fun x4888 () Bool)
(declare-fun x3848 () Bool)
(declare-fun x3106 () Int)
(declare-fun x4423 () Bool)
(declare-fun x2365 () x3476)
(declare-fun x1057 () Int)
(declare-fun x1190 () Bool)
(declare-fun x376 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x255 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x279 () Bool)
(declare-fun x1243 () Int)
(declare-fun x3536 () Bool)
(declare-fun x4780 () Int)
(declare-fun x2284 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x1898 () Int)
(declare-fun x596 () Int)
(declare-fun x4772 () Int)
(declare-fun x4112 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x3667 () Bool)
(declare-fun x3172 () x3476)
(declare-fun x5344 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x3301 () Int)
(declare-fun x3886 () Int)
(declare-fun x5034 () Bool)
(declare-fun x3561 () Bool)
(declare-fun x4243 () Int)
(declare-fun x3839 () Bool)
(declare-fun x3286 (Int) Int)
(declare-fun x5243 () Int)
(declare-fun x2115 () Bool)
(declare-fun x3935 () Int)
(declare-fun x3791 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x2096 () Int)
(declare-fun x2199 () Bool)
(declare-fun x5031 () Int)
(declare-fun x2175 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x4196 () x3476)
(declare-fun x342 () Bool)
(declare-fun x2357 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x2439 () Int)
(declare-fun x4010 () x3476)
(declare-fun x1064 () Int)
(declare-fun x607 () x3476)
(declare-fun x93 () Bool)
(declare-fun x4493 () Bool)
(declare-fun x63 () Bool)
(declare-fun x2660 () x3476)
(declare-fun x4381 () Int)
(declare-fun x1670 () Int)
(declare-fun x5280 () Int)
(declare-fun x3737 () Int)
(declare-fun x1774 () Bool)
(declare-fun x899 () Int)
(declare-fun x94 () Bool)
(declare-fun x356 () Bool)
(declare-fun x5387 () Bool)
(declare-fun x1831 () Int)
(declare-fun x3353 () Bool)
(declare-fun x4122 () Bool)
(declare-fun x4942 () Bool)
(declare-fun x3774 () Bool)
(declare-fun x2886 () Int)
(declare-fun x749 () Bool)
(declare-fun x3679 () Bool)
(declare-fun x8 () x3476)
(declare-fun x3425 () Bool)
(declare-fun x3355 () Bool)
(declare-fun x1867 () Int)
(declare-fun x4509 () Int)
(declare-fun x1769 () Bool)
(declare-fun x3238 () Int)
(declare-fun x667 () Int)
(declare-fun x2432 () Bool)
(declare-fun x3272 () Bool)
(declare-fun x811 () Int)
(declare-fun x2875 () x3476)
(declare-fun x3405 () Int)
(declare-fun x2102 () Int)
(declare-fun x3985 () Bool)
(declare-fun x2105 () x3476)
(declare-fun x1494 () Bool)
(declare-fun x4299 () Int)
(declare-fun x433 () x3476)
(declare-fun x4490 () Int)
(declare-fun x2541 () Bool)
(declare-fun x300 () Bool)
(declare-fun x3501 (Int) Int)
(declare-fun x719 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2841 () Int)
(declare-fun x4160 () Bool)
(declare-fun x3691 () Int)
(declare-fun x5121 () Bool)
(declare-fun x755 () Int)
(declare-fun x2300 () Int)
(declare-fun x639 () Bool)
(declare-fun x441 () Bool)
(declare-fun x5212 () Bool)
(declare-fun x1256 () x3476)
(declare-fun x4998 () Int)
(declare-fun x4908 () Int)
(declare-fun x1514 () Int)
(declare-fun x926 () x3476)
(declare-fun x2275 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x3781 () Int)
(declare-fun x3836 () Bool)
(declare-fun x3364 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x1622 () x3476)
(declare-fun x2482 () Int)
(declare-fun x4240 () Bool)
(declare-fun x3318 () Int)
(declare-fun x423 () Bool)
(declare-fun x646 () Bool)
(declare-fun x5311 () Int)
(declare-fun x3101 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x3740 () Bool)
(declare-fun x4796 () Bool)
(declare-fun x237 () Int)
(declare-fun x5261 () Int)
(declare-fun x20 () Bool)
(declare-fun x3944 () Bool)
(declare-fun x4380 () Int)
(declare-fun x5204 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x4251 () Bool)
(declare-fun x2247 () Int)
(declare-fun x1105 () Bool)
(declare-fun x4803 () x3476)
(declare-fun x881 () Bool)
(declare-fun x5046 () Bool)
(declare-fun x3618 () Bool)
(declare-fun x1262 (Int) Int)
(declare-fun x4860 () Int)
(declare-fun x5092 () Bool)
(declare-fun x5012 () Bool)
(declare-fun x1242 () x3476)
(declare-fun x3911 () Int)
(declare-fun x2460 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x5152 () Int)
(declare-fun x2210 () Int)
(declare-fun x2298 () Int)
(declare-fun x4945 () Bool)
(declare-fun x4330 () Int)
(declare-fun x1681 () Bool)
(declare-fun x5163 (Int) Int)
(declare-fun x990 () Int)
(declare-fun x663 () Int)
(declare-fun x338 () Int)
(declare-fun x4285 () Int)
(declare-fun x291 () Bool)
(declare-fun x712 () Int)
(declare-fun x3965 () Bool)
(declare-fun x1153 () Int)
(declare-fun x5229 () Int)
(declare-fun x5073 () Bool)
(declare-fun x5171 () Int)
(declare-fun x2051 () x3476)
(declare-fun x1724 () Bool)
(declare-fun x4724 () Int)
(declare-fun x3850 () Bool)
(declare-fun x3028 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x2745 () Bool)
(declare-fun x4538 () Bool)
(declare-fun x4385 () Int)
(declare-fun x2960 () Bool)
(declare-fun x184 () Int)
(declare-fun x856 () Bool)
(declare-fun x3537 () x3476)
(declare-fun x2040 () Int)
(declare-fun x3422 () Int)
(declare-fun x2268 () Bool)
(declare-fun x2464 () Bool)
(declare-fun x2649 () Int)
(declare-fun x1987 () Int)
(declare-fun x4201 () Int)
(declare-fun x134 () Int)
(declare-fun x2557 () x3476)
(declare-fun x4077 () Bool)
(declare-fun x684 () Bool)
(declare-fun x2863 () Int)
(declare-fun x4451 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x2852 () Int)
(declare-fun x413 () x3476)
(declare-fun x3045 () Int)
(declare-fun x4336 () Bool)
(declare-fun x3573 () Bool)
(declare-fun x2356 () Int)
(declare-fun x4028 () Bool)
(declare-fun x855 () x3476)
(declare-fun x3392 () Int)
(declare-fun x4217 () x3476)
(declare-fun x147 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x543 () Int)
(declare-fun x3615 () Bool)
(declare-fun x883 () Bool)
(declare-fun x3454 () Bool)
(declare-fun x4361 () Bool)
(declare-fun x4760 () x3476)
(declare-fun x512 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x177 () Bool)
(declare-fun x4392 () Bool)
(declare-fun x3067 () Int)
(declare-fun x5263 () Bool)
(declare-fun x4627 () Int)
(declare-fun x2101 () Bool)
(declare-fun x5286 () Bool)
(declare-fun x2348 () x3476)
(declare-fun x3134 () Int)
(declare-fun x2772 () Int)
(declare-fun x2675 () Bool)
(declare-fun x3832 () Bool)
(declare-fun x4231 () Int)
(declare-fun x528 () Int)
(declare-fun x5385 () Bool)
(declare-fun x602 () Bool)
(declare-fun x1038 () Int)
(declare-fun x4826 () Bool)
(declare-fun x130 () Int)
(declare-fun x1043 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x5126 () Bool)
(declare-fun x48 () Bool)
(declare-fun x70 () Int)
(declare-fun x363 () Int)
(declare-fun x4515 () Int)
(declare-fun x970 () Int)
(declare-fun x1110 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x4402 () x3476)
(declare-fun x419 () x3476)
(declare-fun x943 () Bool)
(declare-fun x2190 () x3476)
(declare-fun x436 (x3476) Int)
(declare-fun x2050 () Bool)
(declare-fun x3266 () Int)
(declare-fun x1538 () Bool)
(declare-fun x3437 () Int)
(declare-fun x1904 () Int)
(declare-fun x2524 () Int)
(declare-fun x4615 () x3476)
(declare-fun x1528 () Int)
(declare-fun x72 () Int)
(declare-fun x4199 () Bool)
(declare-fun x3926 () Bool)
(declare-fun x475 () Int)
(declare-fun x4535 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x1138 () Int)
(declare-fun x1524 () x3476)
(declare-fun x3661 () Int)
(declare-fun x3624 () Int)
(declare-fun x4823 () Bool)
(declare-fun x5197 () Int)
(declare-fun x3954 () Int)
(declare-fun x4742 () x3476)
(declare-fun x1866 () Int)
(declare-fun x555 () Bool)
(declare-fun x4619 () x3476)
(declare-fun x2278 () Bool)
(declare-fun x3520 () Int)
(declare-fun x2470 () Int)
(declare-fun x550 () Int)
(declare-fun x2031 () Bool)
(declare-fun x1962 () Int)
(declare-fun x3606 () Bool)
(declare-fun x2730 () Bool)
(declare-fun x919 () Bool)
(declare-fun x3696 () Int)
(declare-fun x2026 () Int)
(declare-fun x4898 () Int)
(declare-fun x4004 () Bool)
(declare-fun x4236 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x463 () Int)
(declare-fun x251 () Bool)
(declare-fun x5368 () Bool)
(declare-fun x710 () Bool)
(declare-fun x5190 () Int)
(declare-fun x751 () Int)
(declare-fun x4721 () Bool)
(declare-fun x807 () Int)
(declare-fun x2198 () Bool)
(declare-fun x3621 () Int)
(declare-fun x4320 () Bool)
(declare-fun x2097 () x3476)
(declare-fun x3467 () Bool)
(declare-fun x560 () Bool)
(declare-fun x3082 () Int)
(declare-fun x2591 () Bool)
(declare-fun x3663 () Int)
(declare-fun x523 () Bool)
(declare-fun x4174 () Bool)
(declare-fun x1907 () Int)
(declare-fun x822 (x3476) Int)
(declare-fun x1161 () Int)
(declare-fun x3447 () Int)
(declare-fun x2513 () Int)
(declare-fun x1668 () Bool)
(declare-fun x1779 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x539 () Int)
(declare-fun x242 () Bool)
(declare-fun x2474 () Bool)
(declare-fun x73 () Int)
(declare-fun x3097 () Int)
(declare-fun x2738 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x4347 () x3476)
(declare-fun x1254 () Int)
(declare-fun x4690 () Bool)
(declare-fun x1993 () Int)
(declare-fun x2967 () Bool)
(declare-fun x1266 () x3476)
(declare-fun x3567 () Bool)
(declare-fun x2836 () x3476)
(declare-fun x3595 () Bool)
(declare-fun x1066 () Int)
(declare-fun x9 () Int)
(declare-fun x114 () Bool)
(declare-fun x1137 () Int)
(declare-fun x1312 () Bool)
(declare-fun x1700 () Int)
(declare-fun x4924 () Bool)
(declare-fun x3888 () Int)
(declare-fun x4598 (x3476) Int)
(declare-fun x3894 () Bool)
(declare-fun x4232 () Int)
(declare-fun x589 () Int)
(declare-fun x1053 () x3476)
(declare-fun x4145 () Int)
(declare-fun x4664 () Int)
(declare-fun x3225 () Bool)
(declare-fun x2543 () Int)
(declare-fun x2638 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x3292 () Int)
(declare-fun x4802 () Bool)
(declare-fun x526 () Bool)
(declare-fun x386 () Bool)
(declare-fun x3549 () Int)
(declare-fun x3239 () Bool)
(declare-fun x4578 () Bool)
(declare-fun x2307 () Int)
(declare-fun x1109 () Int)
(declare-fun x2106 () Bool)
(declare-fun x127 () Int)
(declare-fun x281 () Int)
(declare-fun x4404 () x3476)
(declare-fun x516 () Bool)
(declare-fun x1107 () Int)
(declare-fun x733 () Int)
(declare-fun x5181 () Int)
(declare-fun x1573 () Bool)
(declare-fun x5089 () Int)
(declare-fun x3758 () Bool)
(declare-fun x4530 () Int)
(declare-fun x1693 () x3476)
(declare-fun x4787 () Bool)
(declare-fun x3133 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x56 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x4403 () Bool)
(declare-fun x3540 () Bool)
(declare-fun x979 () Int)
(declare-fun x1840 () Int)
(declare-fun x148 () Bool)
(declare-fun x4978 () Int)
(declare-fun x3922 () Int)
(declare-fun x3982 () Int)
(declare-fun x3881 () Int)
(declare-fun x1620 () Bool)
(declare-fun x4237 () x3476)
(declare-fun x2850 () x3476)
(declare-fun x3072 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x813 () Int)
(declare-fun x3277 () x3476)
(declare-fun x3729 () x3476)
(declare-fun x4774 () Bool)
(declare-fun x1438 () Int)
(declare-fun x2240 () Bool)
(declare-fun x4348 (x3476) Int)
(declare-fun x2299 () Bool)
(declare-fun x5319 () Bool)
(declare-fun x4871 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x4097 () Int)
(declare-fun x1116 () x3476)
(declare-fun x3695 () Int)
(declare-fun x3274 () Bool)
(declare-fun x1426 () x3476)
(declare-fun x4577 () Bool)
(declare-fun x4593 () Bool)
(declare-fun x3550 () Bool)
(declare-fun x4202 () Bool)
(declare-fun x2443 () Int)
(declare-fun x2774 () Int)
(declare-fun x957 () Bool)
(declare-fun x3873 () Int)
(declare-fun x4812 () x3476)
(declare-fun x3145 () Int)
(declare-fun x4609 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x4733 () x3476)
(declare-fun x3896 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x5191 () Bool)
(declare-fun x3987 () Int)
(declare-fun x3420 () Int)
(declare-fun x4056 () Bool)
(declare-fun x4135 () Int)
(declare-fun x4390 () Int)
(declare-fun x4793 () Int)
(declare-fun x3998 () Bool)
(declare-fun x4233 () Int)
(declare-fun x143 () Bool)
(declare-fun x4375 () Bool)
(declare-fun x3249 () Int)
(declare-fun x2276 () Bool)
(declare-fun x21 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x3711 () Bool)
(declare-fun x874 () Bool)
(declare-fun x217 () Int)
(declare-fun x2769 () Int)
(declare-fun x3972 () Int)
(declare-fun x150 () Bool)
(declare-fun x3923 () Int)
(declare-fun x246 () Bool)
(declare-fun x88 () Bool)
(declare-fun x2938 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x854 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x4248 () Bool)
(declare-fun x947 () Bool)
(declare-fun x101 () Int)
(declare-fun x2073 () Int)
(declare-fun x3598 () Bool)
(declare-fun x5016 () x3476)
(declare-fun x4225 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x2963 () Bool)
(declare-fun x5108 () Int)
(declare-fun x462 () Int)
(declare-fun x1060 () Bool)
(declare-fun x4994 () Int)
(declare-fun x967 () Int)
(declare-fun x434 () Int)
(declare-fun x1071 () Int)
(declare-fun x4220 () Bool)
(declare-fun x4353 () Bool)
(declare-fun x1269 () Int)
(declare-fun x196 () Int)
(declare-fun x2854 () Bool)
(declare-fun x2736 () Int)
(declare-fun x698 () Bool)
(declare-fun x3633 () Bool)
(declare-fun x3395 () Int)
(declare-fun x1633 () Int)
(declare-fun x4735 () Int)
(declare-fun x360 () Int)
(declare-fun x2605 () Int)
(declare-fun x2011 () Bool)
(declare-fun x2578 () x3476)
(declare-fun x46 () Int)
(declare-fun x1047 () Int)
(declare-fun x454 () Int)
(declare-fun x2318 () Bool)
(declare-fun x2971 () Bool)
(declare-fun x5339 () Bool)
(declare-fun x4939 () Int)
(declare-fun x3725 () Bool)
(declare-fun x4295 () Bool)
(declare-fun x2134 () Int)
(declare-fun x1713 () x3476)
(declare-fun x1151 () Bool)
(declare-fun x207 () Bool)
(declare-fun x37 () Int)
(declare-fun x4963 () Bool)
(declare-fun x3052 () Int)
(declare-fun x4446 () x3476)
(declare-fun x106 () Bool)
(declare-fun x3393 () x3476)
(declare-fun x1507 () Bool)
(declare-fun x3910 () Bool)
(declare-fun x5216 () Bool)
(declare-fun x5403 (Int Int) Int)
(declare-fun x3794 () x3476)
(declare-fun x5363 () Bool)
(declare-fun x4338 () Int)
(declare-fun x1623 () Int)
(declare-fun x4436 () Bool)
(declare-fun x410 () Bool)
(declare-fun x4833 () Bool)
(declare-fun x1958 () Int)
(declare-fun x3775 () Int)
(declare-fun x4573 () Int)
(declare-fun x2616 () Bool)
(declare-fun x285 () Bool)
(declare-fun x3798 () Int)
(declare-fun x4927 () Bool)
(declare-fun x3127 () Bool)
(declare-fun x3776 () Int)
(declare-fun x1386 () Bool)
(declare-fun x493 () x3476)
(declare-fun x3259 () Bool)
(declare-fun x4843 () Bool)
(declare-fun x3981 () Bool)
(declare-fun x4395 () Int)
(declare-fun x871 () Bool)
(declare-fun x3083 () Bool)
(declare-fun x2273 () x3476)
(declare-fun x3426 () Int)
(declare-fun x2467 () Int)
(declare-fun x711 () Bool)
(declare-fun x5373 () Bool)
(declare-fun x2905 () Bool)
(declare-fun x586 () Int)
(declare-fun x4655 () Int)
(declare-fun x3074 () Int)
(declare-fun x2930 () Int)
(declare-fun x741 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x5267 () Int)
(declare-fun x4025 () Int)
(declare-fun x4029 () Int)
(declare-fun x3460 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x4094 () Int)
(declare-fun x2582 () Int)
(declare-fun x1470 (x3476) Int)
(declare-fun x3336 (x3476) Int)
(declare-fun x10 () Int)
(declare-fun x4824 () Int)
(declare-fun x4899 () x3476)
(declare-fun x632 () Bool)
(declare-fun x3246 () x3476)
(declare-fun x3064 () Int)
(declare-fun x1042 () Bool)
(declare-fun x1443 (x3476) Int)
(declare-fun x885 () Int)
(declare-fun x2748 () Bool)
(declare-fun x687 () Int)
(declare-fun x1688 () x3476)
(declare-fun x4638 (x3476) Int)
(declare-fun x1777 () Bool)
(declare-fun x158 () Int)
(declare-fun x5382 () Bool)
(declare-fun x2720 () Int)
(declare-fun x311 () Int)
(declare-fun x140 () Int)
(declare-fun x85 () Bool)
(declare-fun x4692 () Int)
(declare-fun x4034 () Bool)
(declare-fun x2442 () Int)
(declare-fun x2686 () Int)
(declare-fun x3796 () x3476)
(declare-fun x1533 () Int)
(declare-fun x841 () Bool)
(declare-fun x3933 () x3476)
(declare-fun x1982 () Bool)
(declare-fun x2882 () x3476)
(declare-fun x3568 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x1604 () Int)
(declare-fun x1992 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x4037 () Int)
(declare-fun x3305 () x3476)
(declare-fun x4268 () Bool)
(declare-fun x1012 () x3476)
(declare-fun x5093 () Int)
(declare-fun x1891 () Bool)
(declare-fun x4649 () Bool)
(declare-fun x561 () Bool)
(declare-fun x2379 () Bool)
(declare-fun x2403 () x3476)
(declare-fun x848 () Bool)
(declare-fun x922 () Int)
(declare-fun x2305 () Bool)
(declare-fun x4595 () Bool)
(declare-fun x4364 () Int)
(declare-fun x2661 () Int)
(declare-fun x3438 () Bool)
(declare-fun x3977 () Bool)
(declare-fun x4366 () Bool)
(declare-fun x5237 () x3476)
(declare-fun x1335 () Bool)
(declare-fun x4244 () Bool)
(declare-fun x4288 () Bool)
(declare-fun x759 () Int)
(declare-fun x737 () Bool)
(declare-fun x2168 () Int)
(declare-fun x2667 () Bool)
(declare-fun x2001 () Int)
(declare-fun x4286 () Bool)
(declare-fun x4964 () Bool)
(declare-fun x4673 () Int)
(declare-fun x1966 () Int)
(declare-fun x3453 () Int)
(declare-fun x1529 () Bool)
(declare-fun x3538 () Int)
(declare-fun x4008 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x4280 () Int)
(declare-fun x3346 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x3610 () x3476)
(declare-fun x3048 () Bool)
(declare-fun x4765 () Int)
(declare-fun x1126 () Bool)
(declare-fun x3961 () Bool)
(declare-fun x674 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x4605 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x59 () x3476)
(declare-fun x1313 () x3476)
(declare-fun x340 (Int) Int)
(declare-fun x4063 () Bool)
(declare-fun x5380 () Int)
(declare-fun x4993 () x3476)
(declare-fun x1437 () Bool)
(declare-fun x1782 () x3476)
(declare-fun x2328 () Bool)
(declare-fun x4691 () Int)
(declare-fun x4334 () Bool)
(declare-fun x278 () Int)
(declare-fun x3808 () Int)
(declare-fun x1310 () Int)
(declare-fun x2793 () x3476)
(declare-fun x1798 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x1730 () Bool)
(declare-fun x4785 () Bool)
(declare-fun x3075 () Int)
(declare-fun x5285 () Int)
(declare-fun x1259 () Bool)
(declare-fun x3656 () x3476)
(declare-fun x3953 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1222 () x3476)
(declare-fun x2098 () Bool)
(declare-fun x4290 () Bool)
(declare-fun x3644 () Bool)
(declare-fun x2790 () Int)
(declare-fun x4492 () Bool)
(declare-fun x1729 () Int)
(declare-fun x4269 () Bool)
(declare-fun x4502 () Bool)
(declare-fun x395 () Bool)
(declare-fun x2715 () Bool)
(declare-fun x4208 () Int)
(declare-fun x3379 () Bool)
(declare-fun x4529 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x3533 () Int)
(declare-fun x4241 () Int)
(declare-fun x4745 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x1881 () Int)
(declare-fun x4629 () Bool)
(declare-fun x2833 () Int)
(declare-fun x1074 () Int)
(declare-fun x1924 () Bool)
(declare-fun x4487 () Bool)
(declare-fun x209 () Bool)
(declare-fun x5027 () Bool)
(declare-fun x821 () Int)
(declare-fun x1546 () x3476)
(declare-fun x1856 () Bool)
(declare-fun x3858 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x988 () Bool)
(declare-fun x2789 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x3345 () x3476)
(declare-fun x5348 (x3476) Int)
(declare-fun x5335 () Bool)
(declare-fun x2811 () x3476)
(declare-fun x4736 () Int)
(declare-fun x2322 () Bool)
(declare-fun x368 () Int)
(declare-fun x1090 () Int)
(declare-fun x1229 () Bool)
(declare-fun x1218 () Int)
(declare-fun x2023 () Bool)
(declare-fun x3919 () Bool)
(declare-fun x3825 () Int)
(declare-fun x3026 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x2514 () x3476)
(declare-fun x3324 () Bool)
(declare-fun x816 () Int)
(declare-fun x3086 () Bool)
(declare-fun x4151 () Int)
(declare-fun x1510 () Bool)
(declare-fun x3713 () Bool)
(declare-fun x1376 () x3476)
(declare-fun x76 () Int)
(declare-fun x2314 () Int)
(declare-fun x1870 () Int)
(declare-fun x2760 () Int)
(declare-fun x456 () Int)
(declare-fun x5072 () x3476)
(declare-fun x2479 () x3476)
(declare-fun x160 () Bool)
(declare-fun x5011 () Int)
(declare-fun x4738 () Bool)
(declare-fun x2680 () x3476)
(declare-fun x1381 () Int)
(declare-fun x371 () Bool)
(declare-fun x2205 () Int)
(declare-fun x1735 () Bool)
(declare-fun x2710 () Bool)
(declare-fun x4970 () Bool)
(declare-fun x3700 () Bool)
(declare-fun x4245 () Int)
(declare-fun x4422 () Int)
(declare-fun x3620 () x3476)
(declare-fun x2936 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x2563 () Int)
(declare-fun x2888 () Bool)
(declare-fun x4893 () Bool)
(declare-fun x5193 () Bool)
(declare-fun x3188 () x3476)
(declare-fun x670 () Bool)
(declare-fun x3879 () x3476)
(declare-fun x5394 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x3182 () Int)
(declare-fun x2883 () Bool)
(declare-fun x3514 () Bool)
(declare-fun x4282 () Int)
(declare-fun x4653 () Int)
(declare-fun x1049 () Bool)
(declare-fun x675 () Bool)
(declare-fun x3031 () Int)
(declare-fun x746 () Int)
(declare-fun x4296 () Bool)
(declare-fun x3143 () Int)
(declare-fun x2269 () Bool)
(declare-fun x1698 () Int)
(declare-fun x2613 () Bool)
(declare-fun x2218 () Bool)
(declare-fun x1896 () Int)
(declare-fun x2589 () Bool)
(declare-fun x4560 () Int)
(declare-fun x2089 () Bool)
(declare-fun x2948 () Int)
(declare-fun x2181 () Int)
(declare-fun x5088 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x3940 () Int)
(declare-fun x766 () Bool)
(declare-fun x4239 () Int)
(declare-fun x1020 () Bool)
(declare-fun x4510 () Bool)
(declare-fun x62 () Bool)
(declare-fun x4074 () Int)
(declare-fun x2553 () Bool)
(declare-fun x4851 () Bool)
(declare-fun x4445 () Bool)
(declare-fun x4494 () Int)
(declare-fun x4837 () Bool)
(declare-fun x2533 () Bool)
(declare-fun x153 () Int)
(declare-fun x1112 () Bool)
(declare-fun x5343 () Int)
(declare-fun x3675 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x4046 () Int)
(declare-fun x4359 () Int)
(declare-fun x3401 () Int)
(declare-fun x573 () Bool)
(declare-fun x2669 () x3476)
(declare-fun x3094 () Bool)
(declare-fun x3891 () x3476)
(declare-fun x67 () Int)
(declare-fun x1227 () x3476)
(declare-fun x3329 () Bool)
(declare-fun x3506 () Int)
(declare-fun x3799 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x1134 () Int)
(declare-fun x414 () Bool)
(declare-fun x4967 () Int)
(declare-fun x4306 () Bool)
(declare-fun x2277 () Int)
(declare-fun x4778 () x3476)
(declare-fun x2972 () Bool)
(declare-fun x924 () Bool)
(declare-fun x4643 () Bool)
(declare-fun x580 () Bool)
(declare-fun x3548 () x3476)
(declare-fun x3413 () Int)
(declare-fun x2344 () Bool)
(declare-fun x144 () x3476)
(declare-fun x928 () Int)
(declare-fun x3043 () x3476)
(declare-fun x1156 () Bool)
(declare-fun x5218 () Int)
(declare-fun x4070 () Bool)
(declare-fun x3813 () Int)
(declare-fun x128 () Bool)
(declare-fun x4920 () x3476)
(declare-fun x3362 () Int)
(declare-fun x5340 () Bool)
(declare-fun x2884 () Bool)
(declare-fun x442 () Int)
(declare-fun x1768 () Bool)
(declare-fun x4304 () Int)
(declare-fun x1837 () Bool)
(declare-fun x4557 () Int)
(declare-fun x367 () Bool)
(declare-fun x3883 () Int)
(declare-fun x761 () Int)
(declare-fun x4440 () Bool)
(declare-fun x5272 () Bool)
(declare-fun x107 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x4933 () Bool)
(declare-fun x4844 () Bool)
(declare-fun x4292 () Bool)
(declare-fun x3912 () Bool)
(declare-fun x3429 () x3476)
(declare-fun x4118 () Bool)
(declare-fun x4532 () Int)
(declare-fun x2892 () Bool)
(declare-fun x2684 () Int)
(declare-fun x4873 () Int)
(declare-fun x4323 () Bool)
(declare-fun x3244 () Bool)
(declare-fun x3049 () Bool)
(declare-fun x4949 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x1935 () Int)
(declare-fun x3801 () Int)
(declare-fun x2947 () Int)
(declare-fun x329 () Int)
(declare-fun x866 () Bool)
(declare-fun x4931 () Int)
(declare-fun x1914 () Bool)
(declare-fun x298 () Bool)
(declare-fun x1683 () Int)
(declare-fun x783 () Int)
(declare-fun x3984 (x3476) Int)
(declare-fun x2706 () x3476)
(declare-fun x3746 () Bool)
(declare-fun x929 () Bool)
(declare-fun x2663 () Int)
(declare-fun x890 () Int)
(declare-fun x1659 () Bool)
(declare-fun x4475 () Int)
(declare-fun x5256 () Int)
(declare-fun x3263 () Int)
(declare-fun x4832 () Int)
(declare-fun x3744 () x3476)
(declare-fun x4197 () Int)
(declare-fun x4052 () Int)
(declare-fun x4457 () Int)
(declare-fun x2998 () x3476)
(declare-fun x1654 () Bool)
(declare-fun x3076 () Bool)
(declare-fun x592 () Bool)
(declare-fun x4024 () Bool)
(declare-fun x1092 () Int)
(declare-fun x235 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x1337 (x3476) Int)
(declare-fun x2647 () Bool)
(declare-fun x271 () Bool)
(declare-fun x4235 () Bool)
(declare-fun x261 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x306 () Int)
(declare-fun x2957 () x3476)
(declare-fun x1501 () Bool)
(declare-fun x706 () Bool)
(declare-fun x2038 () Bool)
(declare-fun x3033 () Int)
(declare-fun x5129 () Int)
(declare-fun x4093 () Int)
(declare-fun x1451 () Int)
(declare-fun x5052 () x3476)
(declare-fun x1345 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x5328 () Bool)
(declare-fun x2304 () Int)
(declare-fun x1491 () Int)
(declare-fun x4393 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x2423 () Int)
(declare-fun x3375 () Int)
(declare-fun x810 () Bool)
(declare-fun x2906 () Int)
(declare-fun x2874 () Bool)
(declare-fun x4957 () Int)
(declare-fun x3526 () Bool)
(declare-fun x5202 () Bool)
(declare-fun x387 () Bool)
(declare-fun x2422 () Int)
(declare-fun x724 () Int)
(declare-fun x4681 () Bool)
(declare-fun x166 () Int)
(declare-fun x1829 () Bool)
(declare-fun x4469 () Bool)
(declare-fun x2609 () Int)
(declare-fun x3968 () Bool)
(declare-fun x4370 () Bool)
(declare-fun x809 () Int)
(declare-fun x426 () Bool)
(declare-fun x5228 () x3476)
(declare-fun x343 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x5053 () Bool)
(declare-fun x3270 () Int)
(declare-fun x3490 () Bool)
(declare-fun x2388 () Int)
(declare-fun x1951 () Bool)
(declare-fun x3569 () Bool)
(declare-fun x4660 () Bool)
(declare-fun x1046 () Int)
(declare-fun x4815 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x4834 () x3476)
(declare-fun x4701 () Int)
(declare-fun x788 () Bool)
(declare-fun x4365 () Int)
(declare-fun x1590 () Int)
(declare-fun x1364 () Bool)
(declare-fun x4281 () Int)
(declare-fun x1863 () Bool)
(declare-fun x4603 () Bool)
(declare-fun x2261 () Int)
(declare-fun x776 () Int)
(declare-fun x2078 () Bool)
(declare-fun x4997 () Bool)
(declare-fun x774 () Int)
(declare-fun x4293 () Bool)
(declare-fun x2590 () Bool)
(declare-fun x75 () Bool)
(declare-fun x95 () Int)
(declare-fun x3925 () Bool)
(declare-fun x4486 () Bool)
(declare-fun x5172 () Bool)
(declare-fun x5362 () Bool)
(declare-fun x1146 () Int)
(declare-fun x2705 () Int)
(declare-fun x1183 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x3829 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x3482 () Bool)
(declare-fun x226 () Int)
(declare-fun x1945 () Int)
(declare-fun x3093 () Bool)
(declare-fun x2728 () Int)
(declare-fun x1032 () Int)
(declare-fun x4517 () x3476)
(declare-fun x5283 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x978 () Int)
(declare-fun x2295 () Int)
(declare-fun x615 () Int)
(declare-fun x2643 () Int)
(declare-fun x2490 () Int)
(declare-fun x914 () Bool)
(declare-fun x4880 () Int)
(declare-fun x185 () Int)
(declare-fun x5184 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x784 () Int)
(declare-fun x3084 () Bool)
(declare-fun x2953 () Bool)
(declare-fun x3831 () Int)
(declare-fun x3803 () Bool)
(declare-fun x3641 () Bool)
(declare-fun x2566 () Int)
(declare-fun x3213 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x5130 () Bool)
(declare-fun x3671 () Int)
(declare-fun x396 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x5257 () Bool)
(declare-fun x3126 () Int)
(declare-fun x4954 () Int)
(declare-fun x4501 () Bool)
(declare-fun x1630 () Int)
(declare-fun x786 () Bool)
(declare-fun x2535 () Int)
(declare-fun x1592 () x3476)
(declare-fun x2859 () Bool)
(declare-fun x1481 () Int)
(declare-fun x1132 () Bool)
(declare-fun x4801 () Int)
(declare-fun x3079 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x1550 () Int)
(declare-fun x1874 () Int)
(declare-fun x686 (Int) Int)
(declare-fun x1746 () Int)
(declare-fun x1192 () Int)
(declare-fun x3950 () x3476)
(declare-fun x4476 () Bool)
(declare-fun x2009 () Int)
(declare-fun x2444 () Bool)
(declare-fun x2753 () Bool)
(declare-fun x1280 () Int)
(declare-fun x1563 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x1923 () Int)
(declare-fun x4075 () Int)
(declare-fun x305 () Bool)
(declare-fun x987 () x3476)
(declare-fun x2781 () Bool)
(declare-fun x4018 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x2773 () Int)
(declare-fun x2085 () Bool)
(declare-fun x4581 () Int)
(declare-fun x2549 () Int)
(declare-fun x817 () Int)
(declare-fun x3112 () Int)
(declare-fun x2870 () Bool)
(declare-fun x5389 () Bool)
(declare-fun x5213 () Int)
(declare-fun x2056 () Int)
(declare-fun x4729 () Bool)
(declare-fun x5323 () Bool)
(declare-fun x5139 () Bool)
(declare-fun x3218 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x1711 () Int)
(declare-fun x2071 () Int)
(declare-fun x2229 () Bool)
(declare-fun x2895 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x815 () x3476)
(declare-fun x950 () Bool)
(declare-fun x66 () Int)
(declare-fun x4253 () Int)
(declare-fun x4845 () Int)
(declare-fun x3864 () x3476)
(declare-fun x851 () Int)
(declare-fun x2767 () Bool)
(declare-fun x4302 () Int)
(declare-fun x5331 () Int)
(declare-fun x4940 () Int)
(declare-fun x4326 () Int)
(declare-fun x3902 () Int)
(declare-fun x2980 () Int)
(declare-fun x3639 () Int)
(declare-fun x3793 (x3476) Int)
(declare-fun x4583 () Int)
(declare-fun x4816 () Bool)
(declare-fun x3783 () Int)
(declare-fun x925 () Bool)
(declare-fun x972 () x3476)
(declare-fun x2528 () Int)
(declare-fun x1653 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x3812 () Int)
(declare-fun x2570 () Bool)
(declare-fun x11 () Int)
(declare-fun x3007 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x3219 () x3476)
(declare-fun x3090 () x3476)
(declare-fun x625 () Bool)
(declare-fun x4887 () Bool)
(declare-fun x1597 () Int)
(declare-fun x2398 () Bool)
(declare-fun x346 () Bool)
(declare-fun x2187 () Bool)
(declare-fun x3211 () Bool)
(declare-fun x3589 () Int)
(declare-fun x4757 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x5145 () x3476)
(declare-fun x397 () Bool)
(declare-fun x3404 () Bool)
(declare-fun x2469 () x3476)
(declare-fun x3657 () Bool)
(declare-fun x837 () Int)
(declare-fun x3530 () Int)
(declare-fun x3645 () x3476)
(declare-fun x2517 () Bool)
(declare-fun x2959 () Bool)
(declare-fun x4429 () x3476)
(declare-fun x3319 () Int)
(declare-fun x1410 () Bool)
(declare-fun x3689 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x3759 () Bool)
(declare-fun x3462 () Bool)
(declare-fun x4101 () Int)
(declare-fun x481 () Int)
(declare-fun x4986 () Bool)
(declare-fun x269 () Int)
(declare-fun x1732 () Int)
(declare-fun x2617 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x3869 () Bool)
(declare-fun x1001 () x3476)
(declare-fun x2868 () Bool)
(declare-fun x4579 () Bool)
(declare-fun x5047 () Bool)
(declare-fun x4726 () Bool)
(declare-fun x576 () Int)
(declare-fun x2167 () Bool)
(declare-fun x567 () Int)
(declare-fun x4105 () Bool)
(declare-fun x2112 () Int)
(declare-fun x126 () Int)
(declare-fun x1574 () Int)
(declare-fun x480 () x3476)
(declare-fun x2007 () x3476)
(declare-fun x4134 () Int)
(declare-fun x2327 () Int)
(declare-fun x1421 () Bool)
(declare-fun x36 () Bool)
(declare-fun x4194 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x3521 () Bool)
(declare-fun x1887 () x3476)
(declare-fun x3166 () Bool)
(declare-fun x4322 () Bool)
(declare-fun x4411 () Bool)
(declare-fun x3448 () Bool)
(declare-fun x3630 () Bool)
(declare-fun x4107 () Bool)
(declare-fun x5165 () Int)
(declare-fun x4183 () Bool)
(declare-fun x3738 () x3476)
(declare-fun x923 () Bool)
(declare-fun x638 () Int)
(declare-fun x3035 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x5018 () Int)
(declare-fun x1998 () Bool)
(declare-fun x267 () Int)
(declare-fun x2111 () Bool)
(declare-fun x4759 () x3476)
(declare-fun x5001 () Int)
(declare-fun x4111 () Bool)
(declare-fun x5401 () Int)
(declare-fun x4204 () Bool)
(declare-fun x1051 () Int)
(declare-fun x4264 () Int)
(declare-fun x392 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x1701 () Int)
(declare-fun x3717 () Bool)
(declare-fun x295 () Bool)
(declare-fun x2584 () x3476)
(declare-fun x2334 () Int)
(declare-fun x257 () Int)
(declare-fun x5236 () Int)
(declare-fun x3115 () Bool)
(declare-fun x5383 () Int)
(declare-fun x4088 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x1205 () Int)
(declare-fun x1059 () Bool)
(declare-fun x3030 () Int)
(declare-fun x2657 (x3476) Int)
(declare-fun x849 () Int)
(declare-fun x180 () Bool)
(declare-fun x5030 () Bool)
(declare-fun x469 () x3476)
(declare-fun x4095 () Bool)
(declare-fun x4399 () x3476)
(declare-fun x2301 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x4755 () Bool)
(declare-fun x5091 () Bool)
(declare-fun x4674 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x4305 () Bool)
(declare-fun x1352 () Int)
(declare-fun x1644 () x3476)
(declare-fun x447 () Int)
(declare-fun x2189 () Bool)
(declare-fun x432 () Bool)
(declare-fun x4443 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x263 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x4689 () Int)
(declare-fun x3013 () x3476)
(declare-fun x3975 () x3476)
(declare-fun x4144 () Int)
(declare-fun x91 () Int)
(declare-fun x2254 () Int)
(declare-fun x2693 () Int)
(declare-fun x3000 () Bool)
(declare-fun x2397 () Bool)
(declare-fun x4117 () Bool)
(declare-fun x4401 () Int)
(declare-fun x2766 () Int)
(declare-fun x3957 () Bool)
(declare-fun x4150 () Bool)
(declare-fun x2555 (x3476) Int)
(declare-fun x2034 () Int)
(declare-fun x3946 () Bool)
(declare-fun x4137 () Bool)
(declare-fun x3994 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x4038 () Bool)
(declare-fun x3059 () Int)
(declare-fun x2544 (Int) Int)
(declare-fun x5400 () Int)
(declare-fun x5217 () Int)
(declare-fun x457 () Bool)
(declare-fun x4881 () Bool)
(declare-fun x3117 () Int)
(declare-fun x4818 () Int)
(declare-fun x4372 () Bool)
(declare-fun x4789 () Int)
(declare-fun x975 () Int)
(declare-fun x1055 () Int)
(declare-fun x5246 () Int)
(declare-fun x1577 () Bool)
(declare-fun x2950 () Bool)
(declare-fun x3163 () Int)
(declare-fun x5131 () Bool)
(declare-fun x4456 () Bool)
(declare-fun x1067 () Int)
(declare-fun x2140 () Bool)
(declare-fun x2448 () Int)
(declare-fun x2568 () x3476)
(declare-fun x5390 () Bool)
(declare-fun x5209 () x3476)
(declare-fun x4032 () Int)
(declare-fun x1814 (x3476) Int)
(declare-fun x2881 () Int)
(declare-fun x1748 () Int)
(declare-fun x568 () Int)
(declare-fun x444 () x3476)
(declare-fun x2012 () x3476)
(declare-fun x3971 () Int)
(declare-fun x647 () Bool)
(declare-fun x2689 () Int)
(declare-fun x5240 () x3476)
(declare-fun x5109 () Int)
(declare-fun x3196 (x3476) Int)
(declare-fun x427 () Int)
(declare-fun x5393 () Bool)
(declare-fun x2702 () Int)
(declare-fun x2434 () Int)
(declare-fun x229 () Bool)
(declare-fun x1240 () Int)
(declare-fun x2548 () Int)
(declare-fun x3934 () Bool)
(declare-fun x5392 () Int)
(declare-fun x115 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x1461 () Int)
(declare-fun x2206 () Bool)
(declare-fun x2908 () Bool)
(declare-fun x293 () Bool)
(declare-fun x4539 () x3476)
(declare-fun x3709 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x2849 () Bool)
(declare-fun x1449 () x3476)
(declare-fun x4181 () Int)
(declare-fun x1232 () x3476)
(declare-fun x515 () Int)
(declare-fun x1583 () Int)
(declare-fun x1450 () Bool)
(declare-fun x1036 () Int)
(declare-fun x1750 () Int)
(declare-fun x4211 () x3476)
(declare-fun x2927 () Bool)
(declare-fun x253 () Bool)
(declare-fun x2385 () Int)
(declare-fun x2786 () Bool)
(declare-fun x2861 () Int)
(declare-fun x3202 () Bool)
(declare-fun x4345 () Int)
(declare-fun x5025 () Bool)
(declare-fun x1940 () Int)
(declare-fun x34 () Bool)
(declare-fun x2326 () Int)
(declare-fun x2864 () x3476)
(declare-fun x1741 () Int)
(declare-fun x650 () Int)
(declare-fun x3513 () Bool)
(declare-fun x5115 () Int)
(declare-fun x577 (x3476) Int)
(declare-fun x5326 () Bool)
(declare-fun x3594 () Int)
(declare-fun x4482 () Bool)
(declare-fun x4858 () Bool)
(declare-fun x2940 () Int)
(declare-fun x954 () Int)
(declare-fun x41 () Bool)
(declare-fun x3297 (Int) Int)
(declare-fun x3648 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1397 () x3476)
(declare-fun x1758 () Int)
(declare-fun x3348 () Int)
(declare-fun x4714 () Bool)
(declare-fun x4020 () Bool)
(declare-fun x5005 () Bool)
(declare-fun x5371 () x3476)
(declare-fun x4234 () Bool)
(declare-fun x764 () Int)
(declare-fun x2695 () Int)
(declare-fun x1875 () Bool)
(declare-fun x779 () Bool)
(declare-fun x1493 () Int)
(declare-fun x1519 () x3476)
(declare-fun x594 () Bool)
(declare-fun x4652 () Int)
(declare-fun x4140 () Int)
(declare-fun x5314 () Bool)
(declare-fun x4048 () Int)
(declare-fun x5299 (x3476) Int)
(declare-fun x5231 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x2714 () Int)
(declare-fun x195 () Bool)
(declare-fun x2672 () Int)
(declare-fun x1535 () Bool)
(declare-fun x3435 () Bool)
(declare-fun x5041 () Bool)
(declare-fun x3543 () Int)
(declare-fun x1523 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x1294 () Int)
(declare-fun x1394 () Bool)
(declare-fun x775 () Int)
(declare-fun x1147 () Int)
(declare-fun x3584 () x3476)
(declare-fun x1203 () Bool)
(declare-fun x2804 () Int)
(declare-fun x4460 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x704 () x3476)
(declare-fun x2323 () Bool)
(declare-fun x1291 () Int)
(declare-fun x2272 () Int)
(declare-fun x4961 () Int)
(declare-fun x2955 () Int)
(declare-fun x5125 () Bool)
(declare-fun x464 () Int)
(declare-fun x5133 () Bool)
(declare-fun x385 () Bool)
(declare-fun x1095 () Int)
(declare-fun x1776 () Bool)
(declare-fun x1915 () Bool)
(declare-fun x3474 () Int)
(declare-fun x842 () Int)
(declare-fun x3789 () Bool)
(declare-fun x2459 () Int)
(declare-fun x4587 () x3476)
(declare-fun x4600 () x3476)
(declare-fun x4354 () Int)
(declare-fun x3937 () Bool)
(declare-fun x5167 () Bool)
(declare-fun x2132 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x3481 () Bool)
(declare-fun x2762 () x3476)
(declare-fun x1353 () Bool)
(declare-fun x4822 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x2253 () Int)
(declare-fun x2911 () Bool)
(declare-fun x365 () x3476)
(declare-fun x3316 () x3476)
(declare-fun x5254 () Int)
(declare-fun x3203 () Int)
(declare-fun x2674 () Bool)
(declare-fun x5395 () Bool)
(declare-fun x3333 () Int)
(declare-fun x2877 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x1434 () Int)
(declare-fun x3484 (x3476) Int)
(declare-fun x3748 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x5341 () Bool)
(declare-fun x4550 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x4520 () Int)
(declare-fun x2424 () Int)
(declare-fun x944 () Bool)
(declare-fun x4082 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x3683 () Int)
(declare-fun x1475 () Bool)
(declare-fun x2848 () Int)
(declare-fun x3403 () Bool)
(declare-fun x412 () Int)
(declare-fun x2529 () Int)
(declare-fun x4795 () Bool)
(declare-fun x4636 () Int)
(declare-fun x1925 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x4193 () Bool)
(declare-fun x5351 () x3476)
(declare-fun x1370 (Int) Int)
(declare-fun x801 () Bool)
(declare-fun x2890 () Int)
(declare-fun x806 () Int)
(declare-fun x3457 () Int)
(declare-fun x581 () Int)
(declare-fun x4003 () Bool)
(declare-fun x448 () Int)
(declare-fun x879 () Bool)
(declare-fun x598 () x3476)
(declare-fun x3788 () Int)
(declare-fun x4379 () Bool)
(declare-fun x1775 () Int)
(declare-fun x42 () Bool)
(declare-fun x3733 () Int)
(declare-fun x2410 () Bool)
(declare-fun x4635 () Bool)
(declare-fun x1690 () Int)
(declare-fun x2249 () Bool)
(declare-fun x2807 () Int)
(declare-fun x4536 () Int)
(declare-fun x1213 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x4173 () Bool)
(declare-fun x1956 () Int)
(declare-fun x5276 () Int)
(declare-fun x3581 () Int)
(declare-fun x3136 () x3476)
(declare-fun x2281 () Bool)
(declare-fun x3358 () Bool)
(declare-fun x3085 () Int)
(declare-fun x2418 () Bool)
(declare-fun x5080 () Int)
(declare-fun x1185 () Int)
(declare-fun x3715 () Bool)
(declare-fun x108 () Bool)
(declare-fun x3119 () x3476)
(declare-fun x2024 () Bool)
(declare-fun x2149 () Int)
(declare-fun x1214 () Int)
(declare-fun x4072 () Int)
(declare-fun x3616 () Bool)
(declare-fun x2726 () Bool)
(declare-fun x1237 () Int)
(declare-fun x537 () Int)
(declare-fun x3625 () Bool)
(declare-fun x262 () Int)
(declare-fun x2575 () Bool)
(declare-fun x1973 () Int)
(declare-fun x2064 () Bool)
(declare-fun x2045 () Bool)
(declare-fun x152 () Int)
(declare-fun x5151 () Int)
(declare-fun x309 () Bool)
(declare-fun x169 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x858 () Bool)
(declare-fun x2985 () Int)
(declare-fun x1455 () Int)
(declare-fun x5122 () Int)
(declare-fun x3928 () Int)
(declare-fun x3810 () Bool)
(declare-fun x4607 () Bool)
(declare-fun x3228 () Int)
(declare-fun x1217 () Int)
(declare-fun x1124 () Int)
(declare-fun x3014 () Int)
(declare-fun x1187 () Bool)
(declare-fun x3276 () Int)
(declare-fun x406 () Int)
(declare-fun x2562 () Bool)
(declare-fun x232 () Int)
(declare-fun x623 () Bool)
(declare-fun x1121 () Int)
(declare-fun x3180 () x3476)
(declare-fun x2333 () x3476)
(declare-fun x2612 () Bool)
(declare-fun x2087 () Int)
(declare-fun x1250 () Bool)
(declare-fun x4138 () Int)
(declare-fun x1301 () Bool)
(declare-fun x3636 () Bool)
(declare-fun x334 () Int)
(declare-fun x4995 () Int)
(declare-fun x3680 () x3476)
(declare-fun x1401 () Int)
(declare-fun x743 () Int)
(declare-fun x551 () Int)
(declare-fun x3815 () Bool)
(declare-fun x3710 () Int)
(declare-fun x912 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x4930 () Bool)
(declare-fun x3279 () Bool)
(declare-fun x3376 () Int)
(declare-fun x2202 () Bool)
(declare-fun x2599 () x3476)
(declare-fun x843 () x3476)
(declare-fun x1477 () Int)
(declare-fun x2576 () x3476)
(declare-fun x3555 () Bool)
(declare-fun x4477 () Int)
(declare-fun x4098 () Int)
(declare-fun x4230 () Int)
(declare-fun x603 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1472 () Int)
(declare-fun x4846 () Bool)
(declare-fun x3901 () Int)
(declare-fun x1643 (x3476) Int)
(declare-fun x3433 () Bool)
(declare-fun x3851 () Bool)
(declare-fun x4035 () Bool)
(declare-fun x2843 () x3476)
(declare-fun x431 () Bool)
(declare-fun x3487 () Int)
(declare-fun x2894 () Bool)
(declare-fun x672 () Int)
(declare-fun x3475 () Bool)
(declare-fun x3250 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x597 () Int)
(declare-fun x265 () Int)
(declare-fun x1241 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x820 () Bool)
(declare-fun x648 () Bool)
(declare-fun x3515 () x3476)
(declare-fun x4019 () Bool)
(declare-fun x4007 () Int)
(declare-fun x2195 () Bool)
(declare-fun x1010 () Int)
(declare-fun x3608 (Int) Int)
(declare-fun x1393 () Int)
(declare-fun x3844 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x111 () Int)
(declare-fun x1816 () Bool)
(declare-fun x5308 () Bool)
(declare-fun x891 () Int)
(declare-fun x2855 () Int)
(declare-fun x1348 () Int)
(declare-fun x335 () Bool)
(declare-fun x4324 () Bool)
(declare-fun x2896 () Int)
(declare-fun x3962 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x4661 () Bool)
(declare-fun x256 () Int)
(declare-fun x4176 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x3139 () Int)
(declare-fun x171 () Int)
(declare-fun x3450 () Bool)
(declare-fun x4126 () Bool)
(declare-fun x5316 () Bool)
(declare-fun x201 () Int)
(declare-fun x3996 () Int)
(declare-fun x2694 () Bool)
(declare-fun x2832 () Int)
(declare-fun x2916 () Bool)
(declare-fun x4425 () Int)
(declare-fun x4400 () Bool)
(declare-fun x3479 () Int)
(declare-fun x2387 () Int)
(declare-fun x3155 () Int)
(declare-fun x2375 () Int)
(declare-fun x3654 () Bool)
(declare-fun x4373 () Int)
(declare-fun x3282 () x3476)
(declare-fun x4481 () Int)
(declare-fun x847 () Int)
(declare-fun x876 () x3476)
(declare-fun x78 () Int)
(declare-fun x4518 () x3476)
(declare-fun x2475 () Bool)
(declare-fun x961 () Int)
(declare-fun x4246 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1608 () Int)
(declare-fun x3252 () Int)
(declare-fun x275 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x2501 () Bool)
(declare-fun x4555 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x2450 () Int)
(declare-fun x4682 () Int)
(declare-fun x3980 () Bool)
(declare-fun x2504 () Int)
(declare-fun x2787 () Bool)
(declare-fun x1897 () Int)
(declare-fun x1184 () Int)
(declare-fun x239 () x3476)
(declare-fun x1734 () Bool)
(declare-fun x3472 () Int)
(declare-fun x1028 () Int)
(declare-fun x2121 () Bool)
(declare-fun x2912 () Int)
(declare-fun x3769 () Bool)
(declare-fun x3458 () Bool)
(declare-fun x1130 () Int)
(declare-fun x906 () x3476)
(declare-fun x3309 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x2734 () Int)
(declare-fun x1639 (Int) Int)
(declare-fun x4027 () Int)
(declare-fun x3516 () Bool)
(declare-fun x2435 () Bool)
(declare-fun x3015 () Int)
(declare-fun x4227 () Bool)
(declare-fun x2783 () x3476)
(declare-fun x5188 () Bool)
(declare-fun x4809 () Bool)
(declare-fun x3047 () x3476)
(declare-fun x2681 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x1848 () x3476)
(declare-fun x3432 () Int)
(declare-fun x1575 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x3571 () Bool)
(declare-fun x3150 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x934 () Bool)
(declare-fun x1919 () Bool)
(declare-fun x2922 () Bool)
(declare-fun x4904 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x1841 () x3476)
(declare-fun x3958 () x3476)
(declare-fun x194 () Bool)
(declare-fun x208 () Bool)
(declare-fun x3183 () x3476)
(declare-fun x4549 () Bool)
(declare-fun x4996 () Int)
(declare-fun x167 () Int)
(declare-fun x2732 () Int)
(declare-fun x1540 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x4906 () Bool)
(declare-fun x5342 () x3476)
(declare-fun x2688 () Int)
(declare-fun x3539 () Int)
(declare-fun x4905 () Bool)
(declare-fun x377 () Bool)
(declare-fun x3787 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x3874 () x3476)
(declare-fun x3811 () Int)
(declare-fun x2845 () Int)
(declare-fun x2653 () Int)
(declare-fun x4039 () Bool)
(declare-fun x4947 (x3476) Int)
(declare-fun x486 () Int)
(declare-fun x2152 () Int)
(declare-fun x3313 () Bool)
(declare-fun x4525 () x3476)
(declare-fun x4589 () Int)
(declare-fun x701 () Bool)
(declare-fun x3455 () Bool)
(declare-fun x2279 () Int)
(declare-fun x2735 () Bool)
(declare-fun x3750 () Bool)
(declare-fun x4574 () Int)
(declare-fun x2499 () Bool)
(declare-fun x2369 () x3476)
(declare-fun x2079 () x3476)
(declare-fun x4049 () Int)
(declare-fun x4553 () Int)
(declare-fun x2572 () Bool)
(declare-fun x909 () Int)
(declare-fun x5224 () Bool)
(declare-fun x4013 () Bool)
(declare-fun x3693 () Bool)
(declare-fun x3008 () Bool)
(declare-fun x527 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x524 () Int)
(declare-fun x2678 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x3626 () Int)
(declare-fun x1585 () x3476)
(declare-fun x5101 () Bool)
(declare-fun x4250 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x2779 () Int)
(declare-fun x241 () Int)
(declare-fun x3878 () Bool)
(declare-fun x882 () Int)
(declare-fun x5070 () Int)
(declare-fun x5078 () Bool)
(declare-fun x900 () Bool)
(declare-fun x2091 () Int)
(declare-fun x1715 () Int)
(declare-fun x803 () Bool)
(declare-fun x5111 () x3476)
(declare-fun x4786 () Bool)
(declare-fun x5002 () Int)
(declare-fun x3566 () Bool)
(declare-fun x1595 () x3476)
(declare-fun x1899 () Bool)
(declare-fun x1780 () x3476)
(declare-fun x2909 () Bool)
(declare-fun x3352 () Int)
(declare-fun x2817 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x3497 () Bool)
(declare-fun x3118 () Int)
(declare-fun x1495 () Int)
(declare-fun x5388 () Bool)
(declare-fun x5370 () Int)
(declare-fun x4371 () Bool)
(declare-fun x4601 () Int)
(declare-fun x1418 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x703 () Bool)
(declare-fun x3904 () Bool)
(declare-fun x4406 () Bool)
(declare-fun x504 () x3476)
(declare-fun x2516 () Int)
(declare-fun x2583 () Int)
(declare-fun x1371 () Int)
(declare-fun x2129 () Bool)
(declare-fun x1368 () Int)
(declare-fun x4033 () Int)
(declare-fun x1797 () Bool)
(declare-fun x4026 () Int)
(declare-fun x4546 () Bool)
(declare-fun x2520 () Bool)
(declare-fun x3773 () Bool)
(declare-fun x864 () Bool)
(declare-fun x4596 () Bool)
(declare-fun x224 () Bool)
(declare-fun x5288 () Bool)
(declare-fun x2687 () Int)
(declare-fun x168 () x3476)
(declare-fun x2979 () Bool)
(declare-fun x2725 () Int)
(declare-fun x4506 () Bool)
(declare-fun x5369 () Int)
(declare-fun x452 () Bool)
(declare-fun x3544 () Bool)
(declare-fun x4807 () Bool)
(declare-fun x4641 () Int)
(declare-fun x1189 () x3476)
(declare-fun x4750 () Bool)
(declare-fun x4597 () Int)
(declare-fun x2329 () Int)
(declare-fun x3005 () Int)
(declare-fun x4882 () Bool)
(declare-fun x1624 () Int)
(declare-fun x1552 () Int)
(declare-fun x2941 () Bool)
(declare-fun x3889 () Int)
(declare-fun x4408 () Bool)
(declare-fun x328 () Bool)
(declare-fun x4125 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x4836 () Bool)
(declare-fun x2072 () Int)
(declare-fun x2258 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x770 () Bool)
(declare-fun x911 () Bool)
(declare-fun x969 () Int)
(declare-fun x2692 () Int)
(declare-fun x1560 () Int)
(declare-fun x693 () Bool)
(declare-fun x2313 () Int)
(declare-fun x2421 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x3560 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x2920 () Int)
(declare-fun x2671 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x4946 () x3476)
(declare-fun x3350 () Int)
(declare-fun x1075 () Bool)
(declare-fun x2750 () Bool)
(declare-fun x5251 () Bool)
(declare-fun x878 () Bool)
(declare-fun x2222 () Int)
(declare-fun x471 () Bool)
(declare-fun x1255 () Int)
(declare-fun x2712 () Int)
(declare-fun x4215 () Int)
(declare-fun x40 () Int)
(declare-fun x3668 () Bool)
(declare-fun x4948 () Int)
(declare-fun x4716 () Int)
(declare-fun x373 () Bool)
(declare-fun x4260 () Bool)
(declare-fun x857 () Int)
(declare-fun x3012 () Bool)
(declare-fun x1720 () Int)
(declare-fun x1098 () Bool)
(declare-fun x4303 () Bool)
(declare-fun x260 () Bool)
(declare-fun x3964 () Int)
(declare-fun x1054 () Bool)
(declare-fun x2795 () Int)
(declare-fun x1804 () x3476)
(declare-fun x1177 () Int)
(declare-fun x688 () Int)
(declare-fun x313 () Bool)
(declare-fun x1787 () x3476)
(declare-fun x3708 () Int)
(declare-fun x4770 () Int)
(declare-fun x323 () Bool)
(declare-fun x671 () Int)
(declare-fun x2618 () Int)
(declare-fun x1325 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x4771 () x3476)
(declare-fun x2630 () Int)
(declare-fun x4790 () Int)
(declare-fun x4862 () Int)
(declare-fun x1696 () Bool)
(declare-fun x4168 () Int)
(declare-fun x1736 () Bool)
(declare-fun x2015 () Int)
(declare-fun x3322 () Int)
(declare-fun x1588 () Int)
(declare-fun x5260 () Bool)
(declare-fun x4658 () Bool)
(declare-fun x3137 () Int)
(declare-fun x2234 () Bool)
(declare-fun x804 () Bool)
(declare-fun x4732 () Int)
(declare-fun x4799 (Int) Int)
(declare-fun x3770 () Int)
(declare-fun x4572 () Int)
(declare-fun x2802 () Int)
(declare-fun x2041 (x3476) Int)
(declare-fun x757 () Int)
(declare-fun x3658 () Int)
(declare-fun x4675 () Int)
(declare-fun x4045 () Int)
(declare-fun x1872 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x3412 () Bool)
(declare-fun x103 () Int)
(declare-fun x1023 () Int)
(declare-fun x2005 () Bool)
(declare-fun x2652 () Int)
(declare-fun x1483 () Bool)
(declare-fun x1830 () Int)
(declare-fun x3612 () x3476)
(declare-fun x5233 () x3476)
(declare-fun x1504 () x3476)
(declare-fun x2968 () Int)
(declare-fun x3176 () x3476)
(declare-fun x394 () Int)
(declare-fun x4312 () Bool)
(declare-fun x272 () Int)
(declare-fun x4563 () Bool)
(declare-fun x2782 () Int)
(declare-fun x3907 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x2519 () Bool)
(declare-fun x3726 () x3476)
(declare-fun x1412 () Bool)
(declare-fun x254 () Int)
(declare-fun x554 () x3476)
(declare-fun x793 () Bool)
(declare-fun x4775 () Int)
(declare-fun x4943 () x3476)
(declare-fun x973 () Bool)
(declare-fun x1745 () Int)
(declare-fun x601 () Int)
(declare-fun x4022 () Int)
(declare-fun x35 () x3476)
(declare-fun x4313 () x3476)
(declare-fun x1077 () Int)
(declare-fun x758 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x3151 () x3476)
(declare-fun x4164 () Bool)
(declare-fun x170 () Bool)
(declare-fun x176 () x3476)
(declare-fun x2564 () Bool)
(declare-fun x823 () Bool)
(declare-fun x3754 () Int)
(declare-fun x1061 () Bool)
(declare-fun x690 () Bool)
(declare-fun x470 () Bool)
(declare-fun x2751 () x3476)
(declare-fun x1091 () Bool)
(declare-fun x3863 () Int)
(declare-fun x1492 () Int)
(declare-fun x3642 () Bool)
(declare-fun x626 () Int)
(declare-fun x566 () Int)
(declare-fun x5103 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x1969 () Int)
(declare-fun x2698 () Bool)
(declare-fun x4262 () Bool)
(declare-fun x610 () Bool)
(declare-fun x2803 () Int)
(declare-fun x3897 () Int)
(declare-fun x3485 () Bool)
(declare-fun x2885 () Bool)
(declare-fun x689 () Bool)
(declare-fun x3943 () x3476)
(declare-fun x495 () Bool)
(declare-fun x2118 () Int)
(declare-fun x2945 () Int)
(declare-fun x2036 () Int)
(declare-fun x353 () Int)
(declare-fun x438 () Int)
(declare-fun x3442 () Bool)
(declare-fun x61 () Bool)
(declare-fun x2117 () x3476)
(declare-fun x2871 () Int)
(declare-fun x501 () Int)
(declare-fun x508 () Bool)
(declare-fun x244 () Bool)
(declare-fun x2915 (x3476) Int)
(declare-fun x1629 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x3360 () x3476)
(declare-fun x585 () Int)
(declare-fun x145 () Bool)
(declare-fun x5107 () Bool)
(declare-fun x2937 () Int)
(declare-fun x4892 () Int)
(declare-fun x326 () Int)
(declare-fun x1619 () Bool)
(declare-fun x3209 () Bool)
(declare-fun x287 () Int)
(declare-fun x665 () Bool)
(declare-fun x4811 () Int)
(declare-fun x4130 () Bool)
(declare-fun x3111 () x3476)
(declare-fun x5333 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x2577 () Int)
(declare-fun x3986 () Int)
(declare-fun x320 () x3476)
(declare-fun x995 () Bool)
(declare-fun x904 () Bool)
(declare-fun x357 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x3381 () Int)
(declare-fun x2458 () Bool)
(declare-fun x4683 () Int)
(declare-fun x3640 () Int)
(declare-fun x1230 () Bool)
(declare-fun x189 () Int)
(declare-fun x3160 () Bool)
(declare-fun x5360 () Bool)
(declare-fun x1275 () x3476)
(declare-fun x4090 () Bool)
(declare-fun x4358 () Bool)
(declare-fun x2235 () Int)
(declare-fun x868 () x3476)
(declare-fun x4695 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x4829 () Bool)
(declare-fun x5214 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x2571 () Bool)
(declare-fun x4081 () Int)
(declare-fun x4604 () Int)
(declare-fun x4377 () Bool)
(declare-fun x1862 () Int)
(declare-fun x4301 () Bool)
(declare-fun x4328 () Int)
(declare-fun x2690 () Int)
(declare-fun x5120 (x3476) Int)
(declare-fun x4923 () Bool)
(declare-fun x2758 () x3476)
(declare-fun x3830 () Bool)
(declare-fun x3552 () Int)
(declare-fun x3730 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x3677 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x5357 () Bool)
(declare-fun x889 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x2457 () Int)
(declare-fun x2924 () Bool)
(declare-fun x736 () Bool)
(declare-fun x4249 () Int)
(declare-fun x1260 () x3476)
(declare-fun x1377 () Int)
(declare-fun x4694 () Int)
(declare-fun x2560 () Int)
(declare-fun x2362 () Bool)
(declare-fun x613 () x3476)
(declare-fun x2670 () Int)
(declare-fun x4382 () Int)
(declare-fun x952 () Int)
(declare-fun x3032 () Int)
(declare-fun x3951 () Bool)
(declare-fun x4613 () Bool)
(declare-fun x932 () Bool)
(declare-fun x3525 () x3476)
(declare-fun x557 () Bool)
(declare-fun x446 () Int)
(declare-fun x1880 (x3476) Int)
(declare-fun x574 () Bool)
(declare-fun x4667 () Bool)
(declare-fun x4761 () Int)
(declare-fun x2586 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x915 () Int)
(declare-fun x3366 () Bool)
(declare-fun x3880 () Bool)
(declare-fun x5258 () Bool)
(declare-fun x3872 () x3476)
(declare-fun x429 () Int)
(declare-fun x1300 () x3476)
(declare-fun x5113 () Int)
(declare-fun x4465 () Bool)
(declare-fun x867 () Bool)
(declare-fun x2862 () Int)
(declare-fun x65 () Int)
(declare-fun x4872 () Bool)
(declare-fun x3248 () Int)
(declare-fun x535 () Bool)
(declare-fun x4857 () Bool)
(declare-fun x3535 () Int)
(declare-fun x1637 () Int)
(declare-fun x3655 () x3476)
(declare-fun x991 () Int)
(declare-fun x264 () Bool)
(declare-fun x2431 () Int)
(declare-fun x3102 () Bool)
(declare-fun x2923 () Bool)
(declare-fun x3637 () Int)
(declare-fun x3130 () Int)
(declare-fun x4914 () Bool)
(declare-fun x753 () Bool)
(declare-fun x2556 () x3476)
(declare-fun x4410 () Bool)
(declare-fun x1902 () Int)
(declare-fun x2992 () Int)
(declare-fun x4449 () Int)
(declare-fun x4256 () Bool)
(declare-fun x3565 () Bool)
(declare-fun x1026 () Int)
(declare-fun x3684 () Bool)
(declare-fun x3326 () Bool)
(declare-fun x3449 () Int)
(declare-fun x3916 () Int)
(declare-fun x1625 () Int)
(declare-fun x2297 () Int)
(declare-fun x2764 () Bool)
(declare-fun x97 () Bool)
(declare-fun x3945 () Bool)
(declare-fun x3727 () Bool)
(declare-fun x4438 () Bool)
(declare-fun x5039 () Bool)
(declare-fun x1271 () Int)
(declare-fun x949 () x3476)
(declare-fun x4339 () Bool)
(declare-fun x4748 () Bool)
(declare-fun x4064 () Int)
(declare-fun x3979 () Bool)
(declare-fun x3184 () Bool)
(declare-fun x2371 () Bool)
(declare-fun x2917 () Int)
(declare-fun x51 () Bool)
(declare-fun x4043 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x509 () Bool)
(declare-fun x5327 () Int)
(declare-fun x2826 () x3476)
(declare-fun x1454 () Int)
(declare-fun x3992 () Bool)
(declare-fun x2220 () Int)
(declare-fun x4219 () Int)
(declare-fun x1598 () Bool)
(declare-fun x3321 () Int)
(declare-fun x389 () Bool)
(declare-fun x510 () Bool)
(declare-fun x3463 () Bool)
(declare-fun x2926 () Int)
(declare-fun x468 () Bool)
(declare-fun x71 () Bool)
(declare-fun x5051 () Bool)
(declare-fun x2857 () Int)
(declare-fun x2925 () Int)
(declare-fun x2409 () Bool)
(declare-fun x198 () Int)
(declare-fun x2429 () Int)
(declare-fun x2212 () x3476)
(declare-fun x1158 () Int)
(declare-fun x5347 () x3476)
(declare-fun x2632 () Bool)
(declare-fun x3178 () Int)
(declare-fun x494 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x1414 () Int)
(declare-fun x4884 () Int)
(declare-fun x238 () x3476)
(declare-fun x4442 () x3476)
(declare-fun x337 () Bool)
(declare-fun x2977 () Int)
(declare-fun x3147 () Int)
(declare-fun x3936 () Bool)
(declare-fun x1543 () Int)
(declare-fun x1341 () Bool)
(declare-fun x3201 () Int)
(declare-fun x3841 () Int)
(declare-fun x5291 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x2294 () Int)
(declare-fun x5200 () Int)
(declare-fun x3415 () Bool)
(declare-fun x2812 () Int)
(declare-fun x312 (Int) Int)
(declare-fun x1188 () Bool)
(declare-fun x3860 () Int)
(declare-fun x2756 () x3476)
(declare-fun x5332 () Bool)
(declare-fun x3125 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x2306 () Int)
(declare-fun x4470 () Bool)
(declare-fun x570 () Bool)
(declare-fun x713 () Bool)
(declare-fun x2119 () Int)
(declare-fun x1667 (x3476) Int)
(declare-fun x3524 () Int)
(declare-fun x3068 () Bool)
(declare-fun x974 () Bool)
(declare-fun x996 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x5195 () Int)
(declare-fun x4570 () x3476)
(declare-fun x2531 () Bool)
(declare-fun x4684 () Bool)
(declare-fun x378 () Bool)
(declare-fun x2522 () Int)
(declare-fun x1589 () Int)
(declare-fun x2211 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x4387 () Bool)
(declare-fun x7 () Bool)
(declare-fun x3307 () Int)
(declare-fun x2088 () Int)
(declare-fun x1562 () Bool)
(declare-fun x2158 () Int)
(declare-fun x3586 () Bool)
(declare-fun x669 () Int)
(declare-fun x1979 () Bool)
(declare-fun x4610 () Int)
(declare-fun x4707 () Bool)
(declare-fun x4002 () Bool)
(declare-fun x259 () Int)
(declare-fun x696 () Int)
(declare-fun x1331 () x3476)
(declare-fun x2257 () Int)
(declare-fun x4061 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x223 () Int)
(declare-fun x4614 () Int)
(declare-fun x3053 () Bool)
(declare-fun x3377 () Int)
(declare-fun x5054 (x3476) Int)
(declare-fun x2256 () x3476)
(declare-fun x2716 () Int)
(declare-fun x5277 () Int)
(declare-fun x1395 () x3476)
(declare-fun x4242 () Bool)
(declare-fun x2901 () Int)
(declare-fun x1293 () x3476)
(declare-fun x4903 () Bool)
(declare-fun x2332 () x3476)
(declare-fun x2719 () Int)
(declare-fun x1944 () Bool)
(declare-fun x2620 () Bool)
(declare-fun x393 () Int)
(declare-fun x3240 () x3476)
(declare-fun x3578 () Bool)
(declare-fun x4848 () Int)
(declare-fun x1743 () Bool)
(declare-fun x4132 () Bool)
(declare-fun x4699 () Bool)
(declare-fun x2144 () Int)
(declare-fun x3824 () x3476)
(declare-fun x1685 () Bool)
(declare-fun x3283 () x3476)
(declare-fun x2721 () Int)
(declare-fun x3741 () Bool)
(declare-fun x3055 () Bool)
(declare-fun x5023 () Int)
(declare-fun x1175 () Bool)
(declare-fun x2873 (Int) Int)
(declare-fun x5206 () Bool)
(declare-fun x163 () Bool)
(declare-fun x351 () Bool)
(declare-fun x629 () Bool)
(declare-fun x659 () Bool)
(declare-fun x999 () Bool)
(declare-fun x3089 () Int)
(declare-fun x5148 () Bool)
(declare-fun x4489 () Bool)
(declare-fun x1892 () Int)
(declare-fun x762 () Bool)
(declare-fun x3229 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x5040 () x3476)
(declare-fun x4544 () Bool)
(declare-fun x4021 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x2658 () x3476)
(declare-fun x2778 () Bool)
(declare-fun x4109 () Bool)
(declare-fun x826 () Int)
(declare-fun x5330 () Bool)
(declare-fun x489 () Int)
(declare-fun x2796 () x3476)
(declare-fun x1710 () Bool)
(declare-fun x2754 () Int)
(declare-fun x2364 () Int)
(declare-fun x3924 () Bool)
(declare-fun x4541 () x3476)
(declare-fun x1425 () x3476)
(declare-fun x3298 () Int)
(declare-fun x888 () Int)
(declare-fun x4426 () Bool)
(declare-fun x4189 () Bool)
(declare-fun x3704 () Bool)
(declare-fun x1721 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1086 () Int)
(declare-fun x739 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x4835 () Bool)
(declare-fun x4080 () Int)
(declare-fun x2262 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x327 () Int)
(declare-fun x859 () Bool)
(declare-fun x558 () Bool)
(declare-fun x4421 () Bool)
(declare-fun x4054 (Int) Int)
(declare-fun x4806 () Bool)
(declare-fun x4741 () Bool)
(declare-fun x4819 () Int)
(declare-fun x4932 () Bool)
(declare-fun x4284 () Int)
(declare-fun x4213 () Int)
(declare-fun x2455 () Int)
(declare-fun x2394 () x3476)
(declare-fun x5150 () Bool)
(declare-fun x2123 () Int)
(declare-fun x3354 () Int)
(declare-fun x5075 () Int)
(declare-fun x3091 () Bool)
(declare-fun x3596 () Bool)
(declare-fun x3299 () Bool)
(declare-fun x3966 () Int)
(declare-fun x4584 () Bool)
(declare-fun x3198 () Int)
(declare-fun x3010 () Bool)
(declare-fun x3273 () Bool)
(declare-fun x5239 () Int)
(declare-fun x4698 () Int)
(declare-fun x3359 () Bool)
(declare-fun x661 () x3476)
(declare-fun x3826 () Bool)
(declare-fun x773 () Int)
(declare-fun x4044 () Bool)
(declare-fun x157 () Int)
(declare-fun x3021 () Bool)
(declare-fun x624 () x3476)
(declare-fun x4053 () Bool)
(declare-fun x2080 () Int)
(declare-fun x2512 () Bool)
(declare-fun x4462 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x400 () Int)
(declare-fun x5141 () Bool)
(declare-fun x2551 () Bool)
(declare-fun x5065 () Bool)
(declare-fun x2124 () Int)
(declare-fun x2346 () x3476)
(declare-fun x1895 () Bool)
(declare-fun x720 () Int)
(declare-fun x5199 () Bool)
(declare-fun x3546 () Int)
(declare-fun x2131 () Bool)
(declare-fun x5259 () Bool)
(declare-fun x1417 () Int)
(declare-fun x390 () Bool)
(declare-fun x4497 () x3476)
(declare-fun x4526 () Bool)
(declare-fun x3734 () Int)
(declare-fun x2172 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x502 () Int)
(declare-fun x1781 () Bool)
(declare-fun x204 () x3476)
(declare-fun x3800 () Bool)
(declare-fun x5219 () Bool)
(declare-fun x1499 (Int) Int)
(declare-fun x74 () Int)
(declare-fun x455 () Bool)
(declare-fun x5313 () Int)
(declare-fun x5300 () x3476)
(declare-fun x534 () Bool)
(declare-fun x5372 () Int)
(declare-fun x4014 () Int)
(declare-fun x525 () Int)
(declare-fun x424 () Int)
(declare-fun x1469 () Int)
(declare-fun x2002 () Int)
(declare-fun x399 () Int)
(declare-fun x2349 () Int)
(declare-fun x2866 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x3875 () x3476)
(declare-fun x1601 () Int)
(declare-fun x124 () Bool)
(declare-fun x4686 () x3476)
(declare-fun x1806 () Int)
(declare-fun x3387 () Bool)
(declare-fun x4650 () Int)
(declare-fun x3220 () Bool)
(declare-fun x714 () Int)
(declare-fun x2813 () Int)
(declare-fun x290 () Int)
(declare-fun x5324 () Bool)
(declare-fun x1695 () Int)
(declare-fun x1661 () Int)
(declare-fun x2251 () Bool)
(declare-fun x1606 () x3476)
(declare-fun x2904 () Bool)
(declare-fun x1860 () x3476)
(declare-fun x1822 () x3476)
(declare-fun x1408 () Int)
(declare-fun x5378 () Int)
(declare-fun x277 () Bool)
(declare-fun x983 () Int)
(declare-fun x3690 () Bool)
(declare-fun x2800 () x3476)
(declare-fun x4450 () Bool)
(declare-fun x4298 () Int)
(declare-fun x4206 () Int)
(declare-fun x691 () Int)
(declare-fun x1479 () Bool)
(declare-fun x1466 () Int)
(declare-fun x3542 () Bool)
(declare-fun x4522 () Int)
(declare-fun x2799 () Int)
(declare-fun x572 () Bool)
(declare-fun x522 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x700 () Bool)
(declare-fun x422 () Bool)
(declare-fun x5124 () Bool)
(declare-fun x5066 () Int)
(declare-fun x4764 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x4102 () x3476)
(declare-fun x5336 () Int)
(declare-fun x3300 () Int)
(declare-fun x1402 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x4982 () Bool)
(declare-fun x834 () Bool)
(declare-fun x627 () Bool)
(declare-fun x4784 () Int)
(declare-fun x1233 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x2358 () Bool)
(declare-fun x5310 () Bool)
(declare-fun x4127 () Bool)
(declare-fun x83 () Bool)
(declare-fun x3407 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x777 (x3476) Int)
(declare-fun x3105 () Bool)
(declare-fun x3154 () Bool)
(declare-fun x3802 () Int)
(declare-fun x4864 () Int)
(declare-fun x2740 () Int)
(declare-fun x5085 () Bool)
(declare-fun x2296 () Bool)
(declare-fun x3205 () Int)
(declare-fun x45 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x679 () Int)
(declare-fun x918 () Bool)
(define-fun x5250 ((x3476 x3476) (x4223 Int)) x3476 (ite ((_ is x1833) x3476) (x1833 (x4067 x3476) (+ x4223 (x2039 x3476))) (ite ((_ is x2828) x3476) (x2828 (x3399 x3476) (x3564 x3476) (+ x4223 (x3720 x3476))) (x956 (+ (x4343 x3476) x4223)))))
(define-fun x2989 ((x4693 Int)) Int (ite (and (>= x4693 0) (< x4693 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4693 (- x4693 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1843 ((x4693 Int)) Int (ite (and (< x4693 0) (>= x4693 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4693) x4693))
(define-fun x4842 ((x3603 Int)) Bool (and (<= 0 x3603) (< x3603 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1268 ((x3603 Int)) Bool (and (= (x5403 x3603 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3603) (= (x5403 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3603) x3603)))
(define-fun x1883 ((x3603 Int)) Bool (and (= (x5403 x3603 0) 0) (= (x5403 0 x3603) 0)))
(define-fun x174 ((x3603 Int)) Bool (= x3603 (x5403 x3603 x3603)))
(define-fun x645 ((x3603 Int)) Bool (and (x174 x3603) (x1268 x3603) (x1883 x3603)))
(define-fun x3885 ((x3603 Int) (x3138 Int)) Bool (= (x5403 x3603 x3138) (x5403 x3138 x3603)))
(define-fun x2 ((x3603 Int) (x3138 Int)) Bool (and (=> (>= x3138 0) (<= (x5403 x3603 x3138) x3138)) (<= 0 (x5403 x3603 x3138)) (=> (>= x3603 0) (>= x3603 (x5403 x3603 x3138)))))
(define-fun x2961 ((x3603 Int) (x3138 Int)) Bool (and (x2 x3603 x3138) (x3885 x3603 x3138)))
(define-fun x4367 ((x3603 Int)) Bool (= (x5403 x3603 1461501637330902918203684832716283019655932542975) (mod x3603 1461501637330902918203684832716283019655932542976)))
(define-fun x5391 ((x3603 Int)) Bool (and (x2961 x3603 1461501637330902918203684832716283019655932542975) (x4367 x3603)))
(define-fun x583 ((x3603 Int)) Bool (= (x5403 x3603 26959946667150639794667015087019630673637144422540572481103610249215) (mod x3603 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x4831 ((x3603 Int)) Bool (and (x2961 x3603 26959946667150639794667015087019630673637144422540572481103610249215) (x583 x3603)))
(define-fun x1687 ((x3603 Int)) Bool (and (= (x2055 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3603) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2055 x3603 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x39 ((x3603 Int)) Bool (and (= (x2055 x3603 0) x3603) (= x3603 (x2055 0 x3603))))
(define-fun x1666 ((x3603 Int)) Bool (= (x2055 x3603 x3603) x3603))
(define-fun x5194 ((x3603 Int)) Bool (and (x1666 x3603) (x1687 x3603) (x39 x3603)))
(define-fun x247 ((x3603 Int) (x3138 Int)) Bool (= (x2055 x3603 x3138) (x2055 x3138 x3603)))
(define-fun x5117 ((x3603 Int) (x3138 Int)) Bool (and (=> (<= 0 x3138) (<= x3138 (x2055 x3603 x3138))) (>= (+ x3603 x3138) (x2055 x3603 x3138)) (=> (<= 0 x3603) (<= x3603 (x2055 x3603 x3138)))))
(define-fun x29 ((x3603 Int) (x3138 Int)) Bool (and (x247 x3603 x3138) (x5117 x3603 x3138)))
(define-fun x4315 ((x3603 Int)) Bool (= (+ (x5403 x3603 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x3603 32)) (mod x3603 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3529 ((x3603 Int)) Bool (and (x2961 x3603 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x4315 x3603)))
(define-fun x2363 ((x2445 Int)) Int (ite (= 128 x2445) (ite x1102 1 0) (x4391 x2445)))
(define-fun x5015 ((x2445 Int)) Int (ite (= 160 x2445) (ite x1816 1 0) (x2363 x2445)))
(define-fun x2395 ((x2445 Int)) Int (ite (= x2445 192) (ite x4817 1 0) (x5015 x2445)))
(define-fun x405 ((x2445 Int)) Int (ite (= x2445 224) (ite x4488 1 0) (x2395 x2445)))
(define-fun x1988 ((x2445 Int)) Int (ite (= 256 x2445) (ite x657 1 0) (x405 x2445)))
(define-fun x5284 ((x2445 Int)) Int (ite (= x2445 288) (ite x1942 1 0) (x1988 x2445)))
(define-fun x3131 ((x2445 Int)) Int (ite (= x2445 320) (ite x392 1 0) (x5284 x2445)))
(define-fun x2312 ((x2445 Int)) Int (ite (= x2445 352) (ite x2208 1 0) (x3131 x2445)))
(define-fun x716 ((x2445 Int)) Int (ite (= 128 x2445) (ite x1778 1 0) (x3674 x2445)))
(define-fun x3388 ((x2445 Int)) Int (ite (= 160 x2445) (ite x3596 1 0) (x716 x2445)))
(define-fun x2427 ((x2445 Int)) Int (ite (= x2445 192) (ite x298 1 0) (x3388 x2445)))
(define-fun x3577 ((x2445 Int)) Int (ite (= 224 x2445) (ite x2308 1 0) (x2427 x2445)))
(define-fun x3947 ((x2445 Int)) Int (ite (= x2445 256) (ite x2854 1 0) (x3577 x2445)))
(define-fun x2054 ((x2445 Int)) Int (ite (= 288 x2445) (ite x5198 1 0) (x3947 x2445)))
(define-fun x4918 ((x2445 Int)) Int (ite (= 320 x2445) (ite x277 1 0) (x2054 x2445)))
(define-fun x966 ((x2445 Int)) Int (ite (= 352 x2445) (ite x5405 1 0) (x4918 x2445)))
(define-fun x1045 ((x2445 Int)) Int (ite (= 420 x2445) x2716 (x966 x2445)))
(define-fun x832 ((x2445 Int)) Int (ite (= x2445 384) 36 (x1045 x2445)))
(define-fun x4129 ((x2445 Int)) Int (ite (= 416 x2445) x4474 (x832 x2445)))
(define-fun x1964 ((x2445 x3476)) Int (ite (= x2445 x3824) 0 (x3792 x2445)))
(define-fun x4592 ((x2445 x3476)) Int (ite (= x2445 x3824) x5331 (x3792 x2445)))
(define-fun x3411 ((x2445 x3476)) Int (ite x1386 (x1964 x2445) (x4592 x2445)))
(define-fun x2252 ((x2445 Int)) Int (ite (= 452 x2445) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x4129 x2445)))
(define-fun x2048 ((x2445 Int)) Int (ite (= x2445 452) x1368 (x2252 x2445)))
(define-fun x651 ((x2445 Int)) Int (ite (= x2445 452) x3917 (x2252 x2445)))
(define-fun x69 ((x2445 Int)) Int (ite (= x2445 452) x5246 (x2252 x2445)))
(define-fun x4625 ((x2445 Int)) Int (ite x2872 (x2048 x2445) (ite x1390 (x651 x2445) (x69 x2445))))
(define-fun x162 ((x2445 Int)) Int (ite x1388 (x4625 x2445) (x4129 x2445)))
(define-fun x3410 ((x2445 Int)) Int (ite (= x2445 x380) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x162 x2445)))
(define-fun x3574 ((x2445 Int)) Int (ite (= x556 x2445) x4804 (x3410 x2445)))
(define-fun x722 ((x2445 Int)) Int (ite (= x2287 x2445) x3494 (x3574 x2445)))
(define-fun x4171 ((x2445 Int)) Int (ite (= x1765 x2445) x2072 (x722 x2445)))
(define-fun x2785 ((x2445 Int)) Int (ite (= x2445 0) 1 (x4171 x2445)))
(define-fun x1496 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x4171 x2445)))
(define-fun x2207 ((x2445 Int)) Int (ite (= x2445 0) 1 (x4171 x2445)))
(define-fun x2282 ((x2445 Int)) Int (ite (= x2445 0) 1 (x4171 x2445)))
(define-fun x230 ((x2445 Int)) Int (ite x1141 (ite x3012 (x4171 x2445) (x2785 x2445)) (ite x3619 (ite x5112 (x4171 x2445) (x1496 x2445)) (ite x5083 (ite x1341 (x4171 x2445) (x2207 x2445)) (ite x2106 (x4171 x2445) (x2282 x2445))))))
(define-fun x549 ((x2445 Int)) Int (ite (= x2445 x2803) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x230 x2445)))
(define-fun x5064 ((x2445 Int)) Int (ite (= x2803 x2445) x2893 (x549 x2445)))
(define-fun x1961 ((x2445 Int)) Int (ite (= x2445 x2803) x456 (x549 x2445)))
(define-fun x697 ((x2445 Int)) Int (ite (= x2803 x2445) x4365 (x549 x2445)))
(define-fun x1223 ((x2445 Int)) Int (ite x1312 (x5064 x2445) (ite x3340 (x1961 x2445) (x697 x2445))))
(define-fun x559 ((x2445 Int)) Int (ite (= x2445 x3716) x589 (x1223 x2445)))
(define-fun x1329 ((x2445 Int)) Int (ite x2885 (x1223 x2445) (x559 x2445)))
(define-fun x2342 ((x2445 Int)) Int (ite (= x1568 x2445) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x1329 x2445)))
(define-fun x4897 ((x2445 Int)) Int (ite (= x2445 0) x2893 (x2844 x2445)))
(define-fun x2727 ((x2445 Int)) Int (ite (= x2445 x1568) x2893 (x2342 x2445)))
(define-fun x4131 ((x2445 Int)) Int (ite (= 0 x2445) x456 (x2844 x2445)))
(define-fun x782 ((x2445 Int)) Int (ite (= x1568 x2445) x456 (x2342 x2445)))
(define-fun x3659 ((x2445 Int)) Int (ite (= x2445 0) x4365 (x2844 x2445)))
(define-fun x391 ((x2445 Int)) Int (ite (= x1568 x2445) x4365 (x2342 x2445)))
(define-fun x3128 ((x2445 Int)) Int (ite x333 (x2727 x2445) (ite x874 (x782 x2445) (x391 x2445))))
(define-fun x4058 ((x2445 Int)) Int (ite (= x2445 x3321) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x3128 x2445)))
(define-fun x416 ((x2445 Int)) Int (ite (= x2445 x451) x4134 (x4058 x2445)))
(define-fun x2164 ((x2445 Int)) Int (ite (= x1854 x2445) x2716 (x416 x2445)))
(define-fun x4743 ((x2445 Int)) Int (ite (= x2445 x3375) x691 (x2164 x2445)))
(define-fun x4294 ((x2445 Int)) Int (ite (and (>= x2445 x3321) (> (+ 0 x3321) x2445)) (x1937 (+ (- x2445 x3321) 0)) (x4743 x2445)))
(define-fun x5208 ((x2445 Int)) Int (ite x3896 (x3128 x2445) (x4294 x2445)))
(define-fun x3585 ((x2445 Int)) Int (ite (= x3321 x2445) x2686 (x5208 x2445)))
(define-fun x2554 ((x2445 Int)) Int (ite (= x2445 x4363) x2509 (x3585 x2445)))
(define-fun x228 ((x2445 Int)) Int (ite x2753 (x2554 x2445) (x3128 x2445)))
(define-fun x2545 ((x2445 Int)) Int (ite x1096 (x1329 x2445) (ite x3704 (x228 x2445) (x1329 x2445))))
(define-fun x3918 ((x2445 x3476)) Int (ite (= x5351 x2445) x3428 (x4947 x2445)))
(define-fun x2401 ((x2445 x3476)) Int (ite x1096 (x4947 x2445) (ite x2310 (x4947 x2445) (x3918 x2445))))
(define-fun x4453 ((x2445 x3476)) Int (ite (= x1331 x2445) x1661 (x4638 x2445)))
(define-fun x4612 ((x2445 x3476)) Int (ite (= x3043 x2445) x1905 (x2196 x2445)))
(define-fun x1835 ((x2445 Int)) Int (ite (= x669 x2445) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x2545 x2445)))
(define-fun x1380 ((x2445 Int)) Int (ite (= x952 x2445) x3494 (x1835 x2445)))
(define-fun x1811 ((x2445 Int)) Int (ite (= x2445 0) x3206 (x4564 x2445)))
(define-fun x461 ((x2445 Int)) Int (ite (= x2445 x669) x3206 (x1380 x2445)))
(define-fun x5189 ((x2445 Int)) Int (ite (= 0 x2445) x4422 (x4564 x2445)))
(define-fun x3721 ((x2445 Int)) Int (ite (= x2445 x669) x4422 (x1380 x2445)))
(define-fun x3149 ((x2445 Int)) Int (ite (= 0 x2445) x581 (x4564 x2445)))
(define-fun x564 ((x2445 Int)) Int (ite (= x669 x2445) x581 (x1380 x2445)))
(define-fun x1154 ((x2445 x3476)) Int (ite (= x2445 (x636 x3494)) x2926 (x1880 x2445)))
(define-fun x1024 ((x2445 x3476)) Int (ite (= (x636 x2716) x2445) x2769 (x1154 x2445)))
(define-fun x3628 ((x2445 x3476)) Int (ite (= (x636 x2716) x2445) x2773 (x1024 x2445)))
(define-fun x4277 ((x2445 x3476)) Int (ite (= x2445 (x636 x3494)) x226 (x3628 x2445)))
(define-fun x4852 ((x2445 x3476)) Int (ite x3324 (x1024 x2445) (ite x58 (x1880 x2445) (x4277 x2445))))
(define-fun x533 ((x2445 x3476)) Int (ite x1020 (x1880 x2445) (x4852 x2445)))
(define-fun x5303 ((x2445 x3476)) Int (ite x1345 (x1880 x2445) (ite x264 (x1880 x2445) (x533 x2445))))
(define-fun x3997 ((x2445 x3476)) Int (ite (= x2445 x1449) x2326 (x3336 x2445)))
(define-fun x1114 ((x2445 x3476)) Int (ite x3605 (x3336 x2445) (ite x4248 (x3336 x2445) (ite x4608 (x3336 x2445) (ite x4825 (x3336 x2445) (ite x2022 (x3997 x2445) (x3336 x2445)))))))
(define-fun x243 ((x2445 x3476)) Int (ite (= x2445 x3369) x4773 (x3997 x2445)))
(define-fun x728 ((x2445 x3476)) Int (ite x1141 (x3336 x2445) (ite x3619 (x3336 x2445) (ite x5083 (x3336 x2445) (ite x2106 (x1114 x2445) (x243 x2445))))))
(define-fun x2160 ((x2445 x3476)) Int (ite (= x2445 x926) x272 (x728 x2445)))
(define-fun x980 ((x2445 x3476)) Int (ite x4734 (x728 x2445) (ite x1131 (x728 x2445) (ite x1914 (x728 x2445) (ite x3878 (x728 x2445) (ite x3779 (x2160 x2445) (x728 x2445)))))))
(define-fun x3649 ((x2445 x3476)) Int (ite (= x2445 x3311) x4965 (x2160 x2445)))
(define-fun x2969 ((x2445 x3476)) Int (ite x2682 (x728 x2445) (ite x2694 (x728 x2445) (ite x2500 (x728 x2445) (ite x5344 (x980 x2445) (x3649 x2445))))))
(define-fun x4534 ((x2445 x3476)) Int (ite x2919 (x2969 x2445) (ite x145 (x728 x2445) (ite x1330 (x728 x2445) (ite x3156 (x728 x2445) (ite x1911 (x2969 x2445) (x728 x2445)))))))
(define-fun x1691 ((x2445 x3476)) Int (ite x3630 (x4534 x2445) (x2969 x2445)))
(define-fun x3592 ((x2445 x3476)) Int (ite (= x2445 x2368) x3300 (x728 x2445)))
(define-fun x654 ((x2445 x3476)) Int (ite x2083 (x728 x2445) (ite x1979 (x728 x2445) (ite x5330 (x728 x2445) (ite x177 (x728 x2445) (ite x2260 (x3592 x2445) (x728 x2445)))))))
(define-fun x3223 ((x2445 x3476)) Int (ite (= x3176 x2445) x2442 (x3592 x2445)))
(define-fun x2819 ((x2445 x3476)) Int (ite x710 (x728 x2445) (ite x1175 (x728 x2445) (ite x4310 (x728 x2445) (ite x4038 (x654 x2445) (x3223 x2445))))))
(define-fun x5321 ((x2445 x3476)) Int (ite x2275 (x2819 x2445) (ite x4678 (x728 x2445) (ite x5161 (x728 x2445) (ite x3951 (x728 x2445) (ite x4450 (x2819 x2445) (x728 x2445)))))))
(define-fun x4647 ((x2445 x3476)) Int (ite x2010 (x5321 x2445) (x2819 x2445)))
(define-fun x562 ((x2445 x3476)) Int (ite (= x894 x2445) x2968 (x728 x2445)))
(define-fun x202 ((x2445 x3476)) Int (ite x1500 (x728 x2445) (ite x3560 (x728 x2445) (ite x3607 (x728 x2445) (ite x5141 (x728 x2445) (ite x246 (x562 x2445) (x728 x2445)))))))
(define-fun x655 ((x2445 x3476)) Int (ite (= x2445 x3993) x630 (x562 x2445)))
(define-fun x3242 ((x2445 x3476)) Int (ite x793 (x728 x2445) (ite x5088 (x728 x2445) (ite x4738 (x728 x2445) (ite x4681 (x202 x2445) (x655 x2445))))))
(define-fun x4566 ((x2445 x3476)) Int (ite x4725 (x3242 x2445) (ite x810 (x728 x2445) (ite x3236 (x728 x2445) (ite x3079 (x728 x2445) (ite x763 (x3242 x2445) (x728 x2445)))))))
(define-fun x1975 ((x2445 x3476)) Int (ite x2932 (x4566 x2445) (x3242 x2445)))
(define-fun x5345 ((x2445 x3476)) Int (ite x159 (x1691 x2445) (ite x879 (x4647 x2445) (x1975 x2445))))
(define-fun x4830 ((x2445 x3476)) Int (ite (= x2445 x4991) x1107 (x728 x2445)))
(define-fun x814 ((x2445 x3476)) Int (ite x2301 (x728 x2445) (ite x602 (x728 x2445) (ite x431 (x728 x2445) (ite x2764 (x728 x2445) (ite x4631 (x4830 x2445) (x728 x2445)))))))
(define-fun x5114 ((x2445 x3476)) Int (ite (= x213 x2445) x2549 (x4830 x2445)))
(define-fun x3828 ((x2445 x3476)) Int (ite x5024 (x728 x2445) (ite x2465 (x728 x2445) (ite x5004 (x728 x2445) (ite x1529 (x814 x2445) (x5114 x2445))))))
(define-fun x4000 ((x2445 x3476)) Int (ite x3774 (x3828 x2445) (ite x4599 (x728 x2445) (ite x2820 (x728 x2445) (ite x2880 (x3828 x2445) (x728 x2445))))))
(define-fun x3941 ((x2445 x3476)) Int (ite x169 (x4000 x2445) (x3828 x2445)))
(define-fun x962 ((x2445 x3476)) Int (ite (= x2651 x2445) x1583 (x728 x2445)))
(define-fun x587 ((x2445 x3476)) Int (ite x701 (x728 x2445) (ite x1101 (x728 x2445) (ite x4856 (x728 x2445) (ite x4357 (x728 x2445) (ite x3084 (x962 x2445) (x728 x2445)))))))
(define-fun x1405 ((x2445 x3476)) Int (ite (= x2445 x4561) x3524 (x962 x2445)))
(define-fun x1182 ((x2445 x3476)) Int (ite x3768 (x728 x2445) (ite x374 (x728 x2445) (ite x5094 (x728 x2445) (ite x3819 (x587 x2445) (x1405 x2445))))))
(define-fun x102 ((x2445 x3476)) Int (ite x288 (x1182 x2445) (ite x4300 (x728 x2445) (ite x1072 (x728 x2445) (ite x4963 (x1182 x2445) (x728 x2445))))))
(define-fun x1525 ((x2445 x3476)) Int (ite x4594 (x102 x2445) (x1182 x2445)))
(define-fun x4461 ((x2445 x3476)) Int (ite (= x2445 x2438) x5122 (x728 x2445)))
(define-fun x3823 ((x2445 x3476)) Int (ite x5340 (x728 x2445) (ite x3010 (x728 x2445) (ite x1609 (x728 x2445) (ite x3511 (x728 x2445) (ite x1502 (x4461 x2445) (x728 x2445)))))))
(define-fun x3469 ((x2445 x3476)) Int (ite (= x2445 x4073) x759 (x4461 x2445)))
(define-fun x188 ((x2445 x3476)) Int (ite x64 (x728 x2445) (ite x498 (x728 x2445) (ite x68 (x728 x2445) (ite x1178 (x3823 x2445) (x3469 x2445))))))
(define-fun x1705 ((x2445 x3476)) Int (ite x173 (x188 x2445) (ite x2749 (x728 x2445) (ite x3456 (x728 x2445) (ite x2910 (x188 x2445) (x728 x2445))))))
(define-fun x1807 ((x2445 x3476)) Int (ite x255 (x1705 x2445) (x188 x2445)))
(define-fun x4169 ((x2445 x3476)) Int (ite x2650 (x3941 x2445) (ite x2405 (x1525 x2445) (x1807 x2445))))
(define-fun x2381 ((x2445 x3476)) Int (ite x3324 (x4169 x2445) (ite x58 (x728 x2445) (x4169 x2445))))
(define-fun x2016 ((x2445 x3476)) Int (ite x1020 (x5345 x2445) (x2381 x2445)))
(define-fun x3707 ((x2445 x3476)) Int (ite x1345 (x728 x2445) (ite x264 (x728 x2445) (x2016 x2445))))
(define-fun x831 ((x2445 Int)) Int (ite x1847 (ite x1212 (x1380 x2445) (x461 x2445)) (ite x1473 (ite x3421 (x1380 x2445) (x3721 x2445)) (ite x4783 (x1380 x2445) (x564 x2445)))))
(define-fun x1166 ((x2445 Int)) Int (ite (= x2385 x2445) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x831 x2445)))
(define-fun x5349 ((x2445 Int)) Int (ite (= x2445 x3320) x2716 (x1166 x2445)))
(define-fun x681 ((x2445 Int)) Int (ite (= x3318 x2445) x1954 (x5349 x2445)))
(define-fun x2525 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x681 x2445)))
(define-fun x2070 ((x2445 Int)) Int (ite x4821 (x681 x2445) (x2525 x2445)))
(define-fun x4662 ((x2445 Int)) Int (ite (= x2445 x2385) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x2070 x2445)))
(define-fun x4226 ((x2445 Int)) Int (ite (= x2445 x5031) x1954 (x4662 x2445)))
(define-fun x3929 ((x2445 Int)) Int (ite (= x2385 x2445) 0 (x4226 x2445)))
(define-fun x5298 ((x2445 Int)) Int (ite (= x2445 x2385) 0 (x4226 x2445)))
(define-fun x4412 ((x2445 Int)) Int (ite (= x2445 x2385) 0 (x4226 x2445)))
(define-fun x898 ((x2445 Int)) Int (ite x159 (ite x3630 (x4226 x2445) (x3929 x2445)) (ite x879 (ite x2010 (x4226 x2445) (x5298 x2445)) (ite x2932 (x4226 x2445) (x4412 x2445)))))
(define-fun x2215 ((x2445 Int)) Int (ite (= x2385 x2445) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x831 x2445)))
(define-fun x3304 ((x2445 Int)) Int (ite (= x4724 x2445) x1954 (x2215 x2445)))
(define-fun x4746 ((x2445 Int)) Int (ite (and (< x2445 (+ 0 x2385)) (<= x2385 x2445)) (x5163 (+ (- x2445 x2385) 0)) (x3304 x2445)))
(define-fun x4911 ((x2445 Int)) Int (ite (= x2385 x2445) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x4746 x2445)))
(define-fun x2494 ((x2445 Int)) Int (ite (= x2385 x2445) x4664 (x4911 x2445)))
(define-fun x552 ((x2445 Int)) Int (ite x169 (x4911 x2445) (x2494 x2445)))
(define-fun x2991 ((x2445 Int)) Int (ite (= x2445 x2385) x1824 (x4911 x2445)))
(define-fun x339 ((x2445 Int)) Int (ite x4594 (x4911 x2445) (x2991 x2445)))
(define-fun x760 ((x2445 Int)) Int (ite (= x2385 x2445) x2214 (x4911 x2445)))
(define-fun x5170 ((x2445 Int)) Int (ite x255 (x4911 x2445) (x760 x2445)))
(define-fun x4040 ((x2445 Int)) Int (ite x2650 (x552 x2445) (ite x2405 (x339 x2445) (x5170 x2445))))
(define-fun x487 ((x2445 Int)) Int (ite x3324 (x4040 x2445) (ite x58 (x4911 x2445) (x4040 x2445))))
(define-fun x2179 ((x2445 Int)) Int (ite x264 (x831 x2445) (ite x1020 (x898 x2445) (x487 x2445))))
(define-fun x4524 ((x2445 Int)) Int (ite (= x585 x2445) x3064 (x2179 x2445)))
(define-fun x1516 ((x2445 Int)) Int (ite (= x4520 x2445) x2020 (x4524 x2445)))
(define-fun x4645 ((x2445 Int)) Int (ite x1345 (x2545 x2445) (x1516 x2445)))
(define-fun x4172 ((x2445 x3476)) Int (ite (= x1300 x2445) x2687 (x1103 x2445)))
(define-fun x5301 ((x2445 x3476)) Int (ite x512 (x1103 x2445) (ite x2562 (x1103 x2445) (ite x496 (x1103 x2445) (ite x5175 (x1103 x2445) (ite x2842 (x4172 x2445) (x1103 x2445)))))))
(define-fun x276 ((x2445 x3476)) Int (ite (= x3219 x2445) x2565 (x4172 x2445)))
(define-fun x695 ((x2445 x3476)) Int (ite x1141 (x1103 x2445) (ite x3619 (x1103 x2445) (ite x5083 (ite x1341 (x5301 x2445) (x276 x2445)) (x1103 x2445)))))
(define-fun x3498 ((x2445 x3476)) Int (ite (= x1841 x2445) x2267 (x695 x2445)))
(define-fun x5294 ((x2445 x3476)) Int (ite x4113 (x695 x2445) (ite x4500 (x695 x2445) (ite x4306 (x695 x2445) (ite x619 (x695 x2445) (ite x4336 (x3498 x2445) (x695 x2445)))))))
(define-fun x729 ((x2445 x3476)) Int (ite (= x4321 x2445) x4449 (x3498 x2445)))
(define-fun x3444 ((x2445 x3476)) Int (ite x2682 (x695 x2445) (ite x2694 (x695 x2445) (ite x2500 (ite x870 (x5294 x2445) (x729 x2445)) (x695 x2445)))))
(define-fun x3423 ((x2445 x3476)) Int (ite x2919 (x3444 x2445) (ite x145 (x695 x2445) (ite x1330 (x695 x2445) (ite x3156 (x695 x2445) (ite x1911 (x3444 x2445) (x695 x2445)))))))
(define-fun x4976 ((x2445 x3476)) Int (ite x3630 (x3423 x2445) (x3444 x2445)))
(define-fun x1452 ((x2445 x3476)) Int (ite (= x1487 x2445) x696 (x695 x2445)))
(define-fun x3374 ((x2445 x3476)) Int (ite x378 (x695 x2445) (ite x4786 (x695 x2445) (ite x3679 (x695 x2445) (ite x2547 (x695 x2445) (ite x1340 (x1452 x2445) (x695 x2445)))))))
(define-fun x4798 ((x2445 x3476)) Int (ite (= x2445 x4943) x140 (x1452 x2445)))
(define-fun x5166 ((x2445 x3476)) Int (ite x710 (x695 x2445) (ite x1175 (x695 x2445) (ite x4310 (ite x5356 (x3374 x2445) (x4798 x2445)) (x695 x2445)))))
(define-fun x1506 ((x2445 x3476)) Int (ite x2275 (x5166 x2445) (ite x4678 (x695 x2445) (ite x5161 (x695 x2445) (ite x3951 (x695 x2445) (ite x4450 (x5166 x2445) (x695 x2445)))))))
(define-fun x4751 ((x2445 x3476)) Int (ite x2010 (x1506 x2445) (x5166 x2445)))
(define-fun x824 ((x2445 x3476)) Int (ite (= x2445 x2556) x1692 (x695 x2445)))
(define-fun x4270 ((x2445 x3476)) Int (ite x146 (x695 x2445) (ite x1497 (x695 x2445) (ite x1829 (x695 x2445) (ite x2325 (x695 x2445) (ite x4851 (x824 x2445) (x695 x2445)))))))
(define-fun x315 ((x2445 x3476)) Int (ite (= x2445 x3933) x4218 (x824 x2445)))
(define-fun x4800 ((x2445 x3476)) Int (ite x793 (x695 x2445) (ite x5088 (x695 x2445) (ite x4738 (ite x5234 (x4270 x2445) (x315 x2445)) (x695 x2445)))))
(define-fun x4971 ((x2445 x3476)) Int (ite x4725 (x4800 x2445) (ite x810 (x695 x2445) (ite x3236 (x695 x2445) (ite x3079 (x695 x2445) (ite x763 (x4800 x2445) (x695 x2445)))))))
(define-fun x5179 ((x2445 x3476)) Int (ite x2932 (x4971 x2445) (x4800 x2445)))
(define-fun x4810 ((x2445 x3476)) Int (ite x159 (x4976 x2445) (ite x879 (x4751 x2445) (x5179 x2445))))
(define-fun x993 ((x2445 x3476)) Int (ite (= x216 x2445) x4074 (x695 x2445)))
(define-fun x81 ((x2445 x3476)) Int (ite x5058 (x695 x2445) (ite x780 (x695 x2445) (ite x3682 (x695 x2445) (ite x4350 (x695 x2445) (ite x4526 (x993 x2445) (x695 x2445)))))))
(define-fun x3817 ((x2445 x3476)) Int (ite (= x5366 x2445) x5174 (x993 x2445)))
(define-fun x1170 ((x2445 x3476)) Int (ite x5024 (x695 x2445) (ite x2465 (x695 x2445) (ite x5004 (ite x1777 (x81 x2445) (x3817 x2445)) (x695 x2445)))))
(define-fun x5215 ((x2445 x3476)) Int (ite x3774 (x1170 x2445) (ite x4599 (x695 x2445) (ite x2820 (x695 x2445) (ite x2880 (x1170 x2445) (x695 x2445))))))
(define-fun x1970 ((x2445 x3476)) Int (ite x169 (x5215 x2445) (x1170 x2445)))
(define-fun x2876 ((x2445 x3476)) Int (ite (= x2445 x1284) x1825 (x695 x2445)))
(define-fun x3445 ((x2445 x3476)) Int (ite x1208 (x695 x2445) (ite x4379 (x695 x2445) (ite x4301 (x695 x2445) (ite x4173 (x695 x2445) (ite x3279 (x2876 x2445) (x695 x2445)))))))
(define-fun x355 ((x2445 x3476)) Int (ite (= x3136 x2445) x4380 (x2876 x2445)))
(define-fun x1859 ((x2445 x3476)) Int (ite x3768 (x695 x2445) (ite x374 (x695 x2445) (ite x5094 (ite x692 (x3445 x2445) (x355 x2445)) (x695 x2445)))))
(define-fun x4728 ((x2445 x3476)) Int (ite x288 (x1859 x2445) (ite x4300 (x695 x2445) (ite x1072 (x695 x2445) (ite x4963 (x1859 x2445) (x695 x2445))))))
(define-fun x4503 ((x2445 x3476)) Int (ite x4594 (x4728 x2445) (x1859 x2445)))
(define-fun x1578 ((x2445 x3476)) Int (ite (= x2338 x2445) x1871 (x695 x2445)))
(define-fun x1834 ((x2445 x3476)) Int (ite x3648 (x695 x2445) (ite x3709 (x695 x2445) (ite x3820 (x695 x2445) (ite x1309 (x695 x2445) (ite x5048 (x1578 x2445) (x695 x2445)))))))
(define-fun x5361 ((x2445 x3476)) Int (ite (= x2445 x2105) x4652 (x1578 x2445)))
(define-fun x685 ((x2445 x3476)) Int (ite x64 (x695 x2445) (ite x498 (x695 x2445) (ite x68 (ite x3925 (x1834 x2445) (x5361 x2445)) (x695 x2445)))))
(define-fun x4263 ((x2445 x3476)) Int (ite x173 (x685 x2445) (ite x2749 (x695 x2445) (ite x3456 (x695 x2445) (ite x2910 (x685 x2445) (x695 x2445))))))
(define-fun x1234 ((x2445 x3476)) Int (ite x255 (x4263 x2445) (x685 x2445)))
(define-fun x3909 ((x2445 x3476)) Int (ite x2650 (x1970 x2445) (ite x2405 (x4503 x2445) (x1234 x2445))))
(define-fun x3419 ((x2445 x3476)) Int (ite x3324 (x3909 x2445) (ite x58 (x695 x2445) (x3909 x2445))))
(define-fun x5318 ((x2445 x3476)) Int (ite x1020 (x4810 x2445) (x3419 x2445)))
(define-fun x683 ((x2445 x3476)) Int (ite x1345 (x695 x2445) (ite x264 (x695 x2445) (x5318 x2445))))
(define-fun x2626 ((x2445 x3476)) Int (ite (= x2445 x3891) x982 (x3984 x2445)))
(define-fun x5014 ((x2445 x3476)) Int (ite x1141 (ite x3012 (x3984 x2445) (x2626 x2445)) (x3984 x2445)))
(define-fun x1016 ((x2445 x3476)) Int (ite (= x5164 x2445) x2897 (x5014 x2445)))
(define-fun x132 ((x2445 x3476)) Int (ite x4821 (x5014 x2445) (x1016 x2445)))
(define-fun x1675 ((x2445 x3476)) Int (ite (= x2576 x2445) x5008 (x132 x2445)))
(define-fun x1261 ((x2445 x3476)) Int (ite x2682 (ite x2784 (x132 x2445) (x1675 x2445)) (x132 x2445)))
(define-fun x2067 ((x2445 x3476)) Int (ite x2919 (x1261 x2445) (ite x145 (x132 x2445) (ite x1330 (x132 x2445) (ite x3156 (x132 x2445) (ite x1911 (x1261 x2445) (x132 x2445)))))))
(define-fun x2461 ((x2445 x3476)) Int (ite x3630 (x2067 x2445) (x1261 x2445)))
(define-fun x1928 ((x2445 x3476)) Int (ite (= x2445 x2584) x257 (x132 x2445)))
(define-fun x582 ((x2445 x3476)) Int (ite x710 (ite x1346 (x132 x2445) (x1928 x2445)) (x132 x2445)))
(define-fun x1920 ((x2445 x3476)) Int (ite x2275 (x582 x2445) (ite x4678 (x132 x2445) (ite x5161 (x132 x2445) (ite x3951 (x132 x2445) (ite x4450 (x582 x2445) (x132 x2445)))))))
(define-fun x3764 ((x2445 x3476)) Int (ite x2010 (x1920 x2445) (x582 x2445)))
(define-fun x2428 ((x2445 x3476)) Int (ite (= x2445 x3061) x4329 (x132 x2445)))
(define-fun x440 ((x2445 x3476)) Int (ite x793 (ite x3617 (x132 x2445) (x2428 x2445)) (x132 x2445)))
(define-fun x4935 ((x2445 x3476)) Int (ite x4725 (x440 x2445) (ite x810 (x132 x2445) (ite x3236 (x132 x2445) (ite x3079 (x132 x2445) (ite x763 (x440 x2445) (x132 x2445)))))))
(define-fun x3782 ((x2445 x3476)) Int (ite x2932 (x4935 x2445) (x440 x2445)))
(define-fun x4413 ((x2445 x3476)) Int (ite x159 (x2461 x2445) (ite x879 (x3764 x2445) (x3782 x2445))))
(define-fun x2665 ((x2445 x3476)) Int (ite (= x5016 x2445) x638 (x5014 x2445)))
(define-fun x3547 ((x2445 x3476)) Int (ite x5024 (ite x5148 (x5014 x2445) (x2665 x2445)) (x5014 x2445)))
(define-fun x443 ((x2445 x3476)) Int (ite x3774 (x3547 x2445) (ite x4599 (x5014 x2445) (ite x2820 (x5014 x2445) (ite x2880 (x3547 x2445) (x5014 x2445))))))
(define-fun x4228 ((x2445 x3476)) Int (ite x169 (x443 x2445) (x3547 x2445)))
(define-fun x2538 ((x2445 x3476)) Int (ite (= x1002 x2445) x2220 (x5014 x2445)))
(define-fun x2178 ((x2445 x3476)) Int (ite x3768 (ite x3822 (x5014 x2445) (x2538 x2445)) (x5014 x2445)))
(define-fun x5222 ((x2445 x3476)) Int (ite x288 (x2178 x2445) (ite x4300 (x5014 x2445) (ite x1072 (x5014 x2445) (ite x4963 (x2178 x2445) (x5014 x2445))))))
(define-fun x236 ((x2445 x3476)) Int (ite x4594 (x5222 x2445) (x2178 x2445)))
(define-fun x3807 ((x2445 x3476)) Int (ite (= x2445 x3360) x3971 (x5014 x2445)))
(define-fun x5227 ((x2445 x3476)) Int (ite x64 (ite x4695 (x5014 x2445) (x3807 x2445)) (x5014 x2445)))
(define-fun x3186 ((x2445 x3476)) Int (ite x173 (x5227 x2445) (ite x2749 (x5014 x2445) (ite x3456 (x5014 x2445) (ite x2910 (x5227 x2445) (x5014 x2445))))))
(define-fun x428 ((x2445 x3476)) Int (ite x255 (x3186 x2445) (x5227 x2445)))
(define-fun x3378 ((x2445 x3476)) Int (ite x2650 (x4228 x2445) (ite x2405 (x236 x2445) (x428 x2445))))
(define-fun x4708 ((x2445 x3476)) Int (ite x3324 (x3378 x2445) (ite x58 (x5014 x2445) (x3378 x2445))))
(define-fun x1171 ((x2445 x3476)) Int (ite x1020 (x4413 x2445) (x4708 x2445)))
(define-fun x4267 ((x2445 x3476)) Int (ite x1345 (x5014 x2445) (ite x264 (x5014 x2445) (x1171 x2445))))
(define-fun x1029 ((x2445 x3476)) Int (ite (= x2445 x1977) x2378 (x4348 x2445)))
(define-fun x3692 ((x2445 x3476)) Int (ite (= x3905 x2445) x332 (x1029 x2445)))
(define-fun x5329 ((x2445 x3476)) Int (ite x3288 (x3692 x2445) (ite x781 (x1029 x2445) (ite x3175 (x4348 x2445) (ite x3417 (x4348 x2445) (ite x4078 (x4348 x2445) (ite x1888 (x4348 x2445) (ite x1445 (x1029 x2445) (ite x2218 (x3692 x2445) (x4348 x2445))))))))))
(define-fun x5381 ((x2445 x3476)) Int (ite x1141 (ite x3012 (x5329 x2445) (x3692 x2445)) (x4348 x2445)))
(define-fun x1480 ((x2445 x3476)) Int (ite (= x3316 x2445) x568 (x5381 x2445)))
(define-fun x1044 ((x2445 x3476)) Int (ite (= x2445 x2755) x2848 (x1480 x2445)))
(define-fun x3771 ((x2445 x3476)) Int (ite x1151 (x1044 x2445) (ite x2993 (x1480 x2445) (ite x1686 (x5381 x2445) (ite x3006 (x5381 x2445) (ite x5060 (x5381 x2445) (ite x3750 (x5381 x2445) (ite x2038 (x1480 x2445) (ite x4337 (x1044 x2445) (x5381 x2445))))))))))
(define-fun x1967 ((x2445 x3476)) Int (ite x2682 (ite x2784 (x3771 x2445) (x1044 x2445)) (x5381 x2445)))
(define-fun x3341 ((x2445 x3476)) Int (ite x2919 (x1967 x2445) (ite x145 (x5381 x2445) (ite x1330 (x5381 x2445) (ite x3156 (x5381 x2445) (ite x1911 (x1967 x2445) (x5381 x2445)))))))
(define-fun x1163 ((x2445 x3476)) Int (ite x3630 (x3341 x2445) (x1967 x2445)))
(define-fun x4308 ((x2445 x3476)) Int (ite (= x2445 x239) x4026 (x5381 x2445)))
(define-fun x4922 ((x2445 x3476)) Int (ite (= x2180 x2445) x3747 (x4308 x2445)))
(define-fun x723 ((x2445 x3476)) Int (ite x3157 (x4922 x2445) (ite x2366 (x4308 x2445) (ite x1281 (x5381 x2445) (ite x1673 (x5381 x2445) (ite x4895 (x5381 x2445) (ite x4846 (x5381 x2445) (ite x4225 (x4308 x2445) (ite x2049 (x4922 x2445) (x5381 x2445))))))))))
(define-fun x600 ((x2445 x3476)) Int (ite x710 (ite x1346 (x723 x2445) (x4922 x2445)) (x5381 x2445)))
(define-fun x4006 ((x2445 x3476)) Int (ite x2275 (x600 x2445) (ite x4678 (x5381 x2445) (ite x5161 (x5381 x2445) (ite x3951 (x5381 x2445) (ite x4450 (x600 x2445) (x5381 x2445)))))))
(define-fun x2673 ((x2445 x3476)) Int (ite x2010 (x4006 x2445) (x600 x2445)))
(define-fun x5269 ((x2445 x3476)) Int (ite (= x2445 x3151) x2676 (x5381 x2445)))
(define-fun x3409 ((x2445 x3476)) Int (ite (= x2445 x3990) x3392 (x5269 x2445)))
(define-fun x4480 ((x2445 x3476)) Int (ite x4242 (x3409 x2445) (ite x4643 (x5269 x2445) (ite x731 (x5381 x2445) (ite x1089 (x5381 x2445) (ite x3799 (x5381 x2445) (ite x4674 (x5381 x2445) (ite x2462 (x5269 x2445) (ite x530 (x3409 x2445) (x5381 x2445))))))))))
(define-fun x1522 ((x2445 x3476)) Int (ite x793 (ite x3617 (x4480 x2445) (x3409 x2445)) (x5381 x2445)))
(define-fun x361 ((x2445 x3476)) Int (ite x4725 (x1522 x2445) (ite x810 (x5381 x2445) (ite x3236 (x5381 x2445) (ite x3079 (x5381 x2445) (ite x763 (x1522 x2445) (x5381 x2445)))))))
(define-fun x2814 ((x2445 x3476)) Int (ite x2932 (x361 x2445) (x1522 x2445)))
(define-fun x4210 ((x2445 x3476)) Int (ite x159 (x1163 x2445) (ite x879 (x2673 x2445) (x2814 x2445))))
(define-fun x1039 ((x2445 x3476)) Int (ite (= x2445 x4313) x289 (x5381 x2445)))
(define-fun x4782 ((x2445 x3476)) Int (ite (= x2491 x2445) x5334 (x1039 x2445)))
(define-fun x4182 ((x2445 x3476)) Int (ite x932 (x4782 x2445) (ite x2801 (x1039 x2445) (ite x2495 (x5381 x2445) (ite x1094 (x5381 x2445) (ite x344 (x5381 x2445) (ite x4185 (x5381 x2445) (ite x1206 (x1039 x2445) (ite x3250 (x4782 x2445) (x5381 x2445))))))))))
(define-fun x2415 ((x2445 x3476)) Int (ite x5024 (ite x5148 (x4182 x2445) (x4782 x2445)) (x5381 x2445)))
(define-fun x5196 ((x2445 x3476)) Int (ite x3774 (x2415 x2445) (ite x4599 (x5381 x2445) (ite x2820 (x5381 x2445) (ite x2880 (x2415 x2445) (x5381 x2445))))))
(define-fun x1742 ((x2445 x3476)) Int (ite x169 (x5196 x2445) (x2415 x2445)))
(define-fun x5187 ((x2445 x3476)) Int (ite (= x2445 x2800) x4071 (x5381 x2445)))
(define-fun x4545 ((x2445 x3476)) Int (ite (= x1266 x2445) x942 (x5187 x2445)))
(define-fun x5044 ((x2445 x3476)) Int (ite x224 (x4545 x2445) (ite x2916 (x5187 x2445) (ite x4496 (x5381 x2445) (ite x354 (x5381 x2445) (ite x4501 (x5381 x2445) (ite x1793 (x5381 x2445) (ite x905 (x5187 x2445) (ite x616 (x4545 x2445) (x5381 x2445))))))))))
(define-fun x5201 ((x2445 x3476)) Int (ite x3768 (ite x3822 (x5044 x2445) (x4545 x2445)) (x5381 x2445)))
(define-fun x1717 ((x2445 x3476)) Int (ite x288 (x5201 x2445) (ite x4300 (x5381 x2445) (ite x1072 (x5381 x2445) (ite x4963 (x5201 x2445) (x5381 x2445))))))
(define-fun x4 ((x2445 x3476)) Int (ite x4594 (x1717 x2445) (x5201 x2445)))
(define-fun x694 ((x2445 x3476)) Int (ite (= x2445 x2292) x644 (x5381 x2445)))
(define-fun x4011 ((x2445 x3476)) Int (ite (= x2445 x5240) x679 (x694 x2445)))
(define-fun x5367 ((x2445 x3476)) Int (ite x3194 (x4011 x2445) (ite x553 (x694 x2445) (ite x94 (x5381 x2445) (ite x7 (x5381 x2445) (ite x5390 (x5381 x2445) (ite x5051 (x5381 x2445) (ite x4149 (x694 x2445) (ite x3127 (x4011 x2445) (x5381 x2445))))))))))
(define-fun x3142 ((x2445 x3476)) Int (ite x64 (ite x4695 (x5367 x2445) (x4011 x2445)) (x5381 x2445)))
(define-fun x336 ((x2445 x3476)) Int (ite x173 (x3142 x2445) (ite x2749 (x5381 x2445) (ite x3456 (x5381 x2445) (ite x2910 (x3142 x2445) (x5381 x2445))))))
(define-fun x3046 ((x2445 x3476)) Int (ite x255 (x336 x2445) (x3142 x2445)))
(define-fun x1383 ((x2445 x3476)) Int (ite x2650 (x1742 x2445) (ite x2405 (x4 x2445) (x3046 x2445))))
(define-fun x1279 ((x2445 x3476)) Int (ite x3324 (x1383 x2445) (ite x58 (x5381 x2445) (x1383 x2445))))
(define-fun x4158 ((x2445 x3476)) Int (ite x1020 (x4210 x2445) (x1279 x2445)))
(define-fun x1647 ((x2445 x3476)) Int (ite x1345 (x5381 x2445) (ite x264 (x5381 x2445) (x4158 x2445))))
(define-fun x4710 ((x2445 x3476)) Int (ite (= x2445 x3167) x5383 (x4548 x2445)))
(define-fun x1221 ((x2445 x3476)) Int (ite x841 (x4548 x2445) (ite x3666 (x4548 x2445) (ite x960 (x4548 x2445) (ite x3491 (x4548 x2445) (ite x4035 (x4710 x2445) (x4548 x2445)))))))
(define-fun x5255 ((x2445 x3476)) Int (ite (= x3876 x2445) x2985 (x4710 x2445)))
(define-fun x4120 ((x2445 x3476)) Int (ite x1141 (x4548 x2445) (ite x3619 (ite x5112 (x1221 x2445) (x5255 x2445)) (x4548 x2445))))
(define-fun x1580 ((x2445 x3476)) Int (ite (= x2445 x613) x2419 (x4120 x2445)))
(define-fun x4384 ((x2445 x3476)) Int (ite x2715 (x4120 x2445) (ite x3337 (x4120 x2445) (ite x2132 (x4120 x2445) (ite x2377 (x4120 x2445) (ite x3353 (x1580 x2445) (x4120 x2445)))))))
(define-fun x4047 ((x2445 x3476)) Int (ite (= x2445 x3680) x4087 (x1580 x2445)))
(define-fun x754 ((x2445 x3476)) Int (ite x2682 (x4120 x2445) (ite x2694 (ite x2750 (x4384 x2445) (x4047 x2445)) (x4120 x2445))))
(define-fun x1512 ((x2445 x3476)) Int (ite x2919 (x754 x2445) (ite x145 (x4120 x2445) (ite x1330 (x4120 x2445) (ite x3156 (x4120 x2445) (ite x1911 (x754 x2445) (x4120 x2445)))))))
(define-fun x936 ((x2445 x3476)) Int (ite x3630 (x1512 x2445) (x754 x2445)))
(define-fun x3938 ((x2445 x3476)) Int (ite (= x2445 x1085) x489 (x4120 x2445)))
(define-fun x3146 ((x2445 x3476)) Int (ite x4142 (x4120 x2445) (ite x3514 (x4120 x2445) (ite x4396 (x4120 x2445) (ite x3912 (x4120 x2445) (ite x1674 (x3938 x2445) (x4120 x2445)))))))
(define-fun x4355 ((x2445 x3476)) Int (ite (= x3875 x2445) x4646 (x3938 x2445)))
(define-fun x1486 ((x2445 x3476)) Int (ite x710 (x4120 x2445) (ite x1175 (ite x2184 (x3146 x2445) (x4355 x2445)) (x4120 x2445))))
(define-fun x997 ((x2445 x3476)) Int (ite x2275 (x1486 x2445) (ite x4678 (x4120 x2445) (ite x5161 (x4120 x2445) (ite x3951 (x4120 x2445) (ite x4450 (x1486 x2445) (x4120 x2445)))))))
(define-fun x1084 ((x2445 x3476)) Int (ite x2010 (x997 x2445) (x1486 x2445)))
(define-fun x437 ((x2445 x3476)) Int (ite (= x2445 x4899) x887 (x4120 x2445)))
(define-fun x3187 ((x2445 x3476)) Int (ite x4933 (x4120 x2445) (ite x3732 (x4120 x2445) (ite x725 (x4120 x2445) (ite x4680 (x4120 x2445) (ite x4730 (x437 x2445) (x4120 x2445)))))))
(define-fun x3867 ((x2445 x3476)) Int (ite (= x2445 x1426) x1068 (x437 x2445)))
(define-fun x4644 ((x2445 x3476)) Int (ite x793 (x4120 x2445) (ite x5088 (ite x209 (x3187 x2445) (x3867 x2445)) (x4120 x2445))))
(define-fun x3365 ((x2445 x3476)) Int (ite x4725 (x4644 x2445) (ite x810 (x4120 x2445) (ite x3236 (x4120 x2445) (ite x3079 (x4120 x2445) (ite x763 (x4644 x2445) (x4120 x2445)))))))
(define-fun x3722 ((x2445 x3476)) Int (ite x2932 (x3365 x2445) (x4644 x2445)))
(define-fun x408 ((x2445 x3476)) Int (ite x159 (x936 x2445) (ite x879 (x1084 x2445) (x3722 x2445))))
(define-fun x105 ((x2445 x3476)) Int (ite (= x2445 x4525) x3348 (x4120 x2445)))
(define-fun x2770 ((x2445 x3476)) Int (ite x4174 (x4120 x2445) (ite x5053 (x4120 x2445) (ite x5046 (x4120 x2445) (ite x3598 (x4120 x2445) (ite x1474 (x105 x2445) (x4120 x2445)))))))
(define-fun x812 ((x2445 x3476)) Int (ite (= x1189 x2445) x76 (x105 x2445)))
(define-fun x3464 ((x2445 x3476)) Int (ite x5024 (x4120 x2445) (ite x2465 (ite x1535 (x2770 x2445) (x812 x2445)) (x4120 x2445))))
(define-fun x3315 ((x2445 x3476)) Int (ite x3774 (x3464 x2445) (ite x4599 (x4120 x2445) (ite x2820 (x4120 x2445) (ite x2880 (x3464 x2445) (x4120 x2445))))))
(define-fun x2150 ((x2445 x3476)) Int (ite x169 (x3315 x2445) (x3464 x2445)))
(define-fun x3672 ((x2445 x3476)) Int (ite (= x2445 x2332) x3969 (x4120 x2445)))
(define-fun x4180 ((x2445 x3476)) Int (ite x4709 (x4120 x2445) (ite x4807 (x4120 x2445) (ite x4317 (x4120 x2445) (ite x893 (x4120 x2445) (ite x154 (x3672 x2445) (x4120 x2445)))))))
(define-fun x2699 ((x2445 x3476)) Int (ite (= x2445 x1713) x4201 (x3672 x2445)))
(define-fun x836 ((x2445 x3476)) Int (ite x3768 (x4120 x2445) (ite x374 (ite x2569 (x4180 x2445) (x2699 x2445)) (x4120 x2445))))
(define-fun x2033 ((x2445 x3476)) Int (ite x288 (x836 x2445) (ite x4300 (x4120 x2445) (ite x1072 (x4120 x2445) (ite x4963 (x836 x2445) (x4120 x2445))))))
(define-fun x3652 ((x2445 x3476)) Int (ite x4594 (x2033 x2445) (x836 x2445)))
(define-fun x27 ((x2445 x3476)) Int (ite (= x4497 x2445) x5169 (x4120 x2445)))
(define-fun x2095 ((x2445 x3476)) Int (ite x3200 (x4120 x2445) (ite x77 (x4120 x2445) (ite x1723 (x4120 x2445) (ite x109 (x4120 x2445) (ite x2662 (x27 x2445) (x4120 x2445)))))))
(define-fun x500 ((x2445 x3476)) Int (ite (= x2445 x519) x4780 (x27 x2445)))
(define-fun x2340 ((x2445 x3476)) Int (ite x64 (x4120 x2445) (ite x498 (ite x1328 (x2095 x2445) (x500 x2445)) (x4120 x2445))))
(define-fun x1978 ((x2445 x3476)) Int (ite x173 (x2340 x2445) (ite x2749 (x4120 x2445) (ite x3456 (x4120 x2445) (ite x2910 (x2340 x2445) (x4120 x2445))))))
(define-fun x3123 ((x2445 x3476)) Int (ite x255 (x1978 x2445) (x2340 x2445)))
(define-fun x3970 ((x2445 x3476)) Int (ite x2650 (x2150 x2445) (ite x2405 (x3652 x2445) (x3123 x2445))))
(define-fun x1338 ((x2445 x3476)) Int (ite x3324 (x3970 x2445) (ite x58 (x4120 x2445) (x3970 x2445))))
(define-fun x3818 ((x2445 x3476)) Int (ite x1020 (x408 x2445) (x1338 x2445)))
(define-fun x1756 ((x2445 x3476)) Int (ite x1345 (x4120 x2445) (ite x264 (x4120 x2445) (x3818 x2445))))
(define-fun x3814 ((x2445 x3476)) Int (ite x1345 (x2196 x2445) (x4612 x2445)))
(define-fun x2163 ((x2445 Int)) Int (ite (= x483 x2445) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x4645 x2445)))
(define-fun x165 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x4054 x2445)))
(define-fun x439 ((x2445 Int)) Int (ite (= x483 x2445) 1 (x2163 x2445)))
(define-fun x2008 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x4054 x2445)))
(define-fun x3314 ((x2445 Int)) Int (ite (= x483 x2445) 1 (x2163 x2445)))
(define-fun x606 ((x2445 Int)) Int (ite (= x2445 0) 1 (x4054 x2445)))
(define-fun x808 ((x2445 Int)) Int (ite (= x483 x2445) 1 (x2163 x2445)))
(define-fun x591 ((x2445 x3476)) Int (ite (= x3525 x2445) x4481 (x3484 x2445)))
(define-fun x331 ((x2445 x3476)) Int (ite x4273 (x3484 x2445) (x591 x2445)))
(define-fun x529 ((x2445 x3476)) Int (ite (= x2445 x4275) 0 (x331 x2445)))
(define-fun x2567 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x4879 x2445)))
(define-fun x3978 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x4879 x2445)))
(define-fun x1971 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x4879 x2445)))
(define-fun x5134 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x4879 x2445)))
(define-fun x1017 ((x2445 Int)) Int (ite x4806 (x1499 x2445) (x4327 x2445)))
(define-fun x4558 ((x2445 Int)) Int (ite x3253 (x439 x2445) (ite x912 (x3314 x2445) (x808 x2445))))
(define-fun x622 ((x2445 Int)) Int (ite (= x2780 x2445) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x4558 x2445)))
(define-fun x5275 ((x2445 Int)) Int (ite (= x2445 x3821) x2716 (x622 x2445)))
(define-fun x4974 ((x2445 Int)) Int (ite (= x2445 x90) x3712 (x5275 x2445)))
(define-fun x4981 ((x2445 Int)) Int (ite (= x2445 0) 1 (x4974 x2445)))
(define-fun x2390 ((x2445 Int)) Int (ite x742 (x4974 x2445) (x4981 x2445)))
(define-fun x750 ((x2445 Int)) Int (ite (= x2445 x2780) 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x2390 x2445)))
(define-fun x2113 ((x2445 Int)) Int (ite (= x880 x2445) x3712 (x750 x2445)))
(define-fun x3622 ((x2445 Int)) Int (ite (= x2445 x2780) 0 (x2113 x2445)))
(define-fun x3673 ((x2445 Int)) Int (ite (= x2445 x2780) 0 (x2113 x2445)))
(define-fun x2227 ((x2445 Int)) Int (ite (= x2780 x2445) 0 (x2113 x2445)))
(define-fun x2981 ((x2445 Int)) Int (ite x4311 (ite x4312 (x2113 x2445) (x3622 x2445)) (ite x1303 (ite x1587 (x2113 x2445) (x3673 x2445)) (ite x4427 (x2113 x2445) (x2227 x2445)))))
(define-fun x3512 ((x2445 Int)) Int (ite (= 0 x2445) x1368 (x5084 x2445)))
(define-fun x998 ((x2445 Int)) Int (ite (= 0 x2445) x3917 (x5084 x2445)))
(define-fun x5157 ((x2445 Int)) Int (ite (= x2445 0) x5246 (x5084 x2445)))
(define-fun x4287 ((x2445 Int)) Int (ite (= x2445 0) x2893 (x3286 x2445)))
(define-fun x82 ((x2445 Int)) Int (ite (= 0 x2445) x456 (x3286 x2445)))
(define-fun x5079 ((x2445 Int)) Int (ite (= 0 x2445) x4365 (x3286 x2445)))
(define-fun x4388 ((x2445 x3476)) Int (ite (= x531 x2445) x2686 (x2915 x2445)))
(define-fun x4186 ((x2445 x3476)) Int (ite (= x2445 x3872) 0 (x4388 x2445)))
(define-fun x652 ((x2445 x3476)) Int (ite x1803 (x4186 x2445) (x4388 x2445)))
(define-fun x2389 ((x2445 x3476)) Int (ite (= x2445 x4754) x2509 (x1725 x2445)))
(define-fun x3816 ((x2445 x3476)) Int (ite (= x2445 x2117) 0 (x2389 x2445)))
(define-fun x1596 ((x2445 x3476)) Int (ite x535 (x3816 x2445) (x2389 x2445)))
(define-fun x1349 ((x2445 x3476)) Int (ite (= x1272 x2445) x2388 (x652 x2445)))
(define-fun x5071 ((x2445 x3476)) Int (ite (= x2445 x5384) x4254 (x1596 x2445)))
(define-fun x2810 ((x2445 x3476)) Int (ite (= x2445 x2903) 0 (x2487 x2445)))
(define-fun x1448 ((x2445 x3476)) Int (ite x3482 (x2487 x2445) (x2810 x2445)))
(define-fun x2488 ((x2445 x3476)) Int (ite (= x2019 x2445) x837 (x1448 x2445)))
(define-fun x3913 ((x2445 x3476)) Int (ite (= x1143 x2445) x837 (x1448 x2445)))
(define-fun x4431 ((x2445 x3476)) Int (ite (= x2445 x3678) x837 (x1448 x2445)))
(define-fun x4096 ((x2445 x3476)) Int (ite (= x2445 x3013) x837 (x1448 x2445)))
(define-fun x865 ((x2445 x3476)) Int (ite x2089 (x2488 x2445) (ite x124 (x3913 x2445) (ite x5055 (x4431 x2445) (x4096 x2445)))))
(define-fun x2399 ((x2445 x3476)) Int (ite x992 (x2487 x2445) (ite x2446 (x1448 x2445) (x865 x2445))))
(define-fun x5068 ((x2445 x3476)) Int (ite (= x86 x2445) 0 (x903 x2445)))
(define-fun x2496 ((x2445 x3476)) Int (ite x3956 (x903 x2445) (x5068 x2445)))
(define-fun x4878 ((x2445 x3476)) Int (ite (= x2445 x168) x4663 (x2496 x2445)))
(define-fun x5281 ((x2445 x3476)) Int (ite (= x2445 x3983) x4663 (x2496 x2445)))
(define-fun x520 ((x2445 x3476)) Int (ite (= x2445 x4517) x4663 (x2496 x2445)))
(define-fun x3382 ((x2445 x3476)) Int (ite (= x2097 x2445) x4663 (x2496 x2445)))
(define-fun x5377 ((x2445 x3476)) Int (ite x5308 (x4878 x2445) (ite x432 (x5281 x2445) (ite x342 (x520 x2445) (x3382 x2445)))))
(define-fun x4870 ((x2445 x3476)) Int (ite x2416 (x903 x2445) (ite x4371 (x2496 x2445) (x5377 x2445))))
(define-fun x4466 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x767 x2445)))
(define-fun x3039 ((x2445 Int)) Int (ite (= x2445 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2873 x2445)))
(define-fun x3174 ((x2445 Int)) Int (ite (= x2445 132) x3494 (x3039 x2445)))
(define-fun x1433 ((x2445 Int)) Int (ite (= x2445 164) x4735 (x3174 x2445)))
(define-fun x4066 ((x2445 Int)) Int (ite (= x2445 196) x70 (x1433 x2445)))
(define-fun x2636 ((x2445 Int)) Int (ite (= x2445 0) 1 (x3763 x2445)))
(define-fun x5106 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x3763 x2445)))
(define-fun x2701 ((x2445 Int)) Int (ite (= x2445 0) 1 (x3763 x2445)))
(define-fun x2508 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x3763 x2445)))
(define-fun x2600 ((x2445 Int)) Int (ite (= 128 x2445) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3608 x2445)))
(define-fun x3914 ((x2445 Int)) Int (ite (= x2445 132) x3494 (x2600 x2445)))
(define-fun x476 ((x2445 Int)) Int (ite (= 164 x2445) x1972 (x3914 x2445)))
(define-fun x4758 ((x2445 Int)) Int (ite (= 196 x2445) x851 (x476 x2445)))
(define-fun x3698 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x1553 x2445)))
(define-fun x1387 ((x2445 Int)) Int (ite (= x2445 0) 1 (x1553 x2445)))
(define-fun x99 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x1553 x2445)))
(define-fun x3629 ((x2445 Int)) Int (ite (= x2445 0) 1 (x1553 x2445)))
(define-fun x3576 ((x2445 Int)) Int (ite (= 128 x2445) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2035 x2445)))
(define-fun x790 ((x2445 Int)) Int (ite (= 132 x2445) x3494 (x3576 x2445)))
(define-fun x852 ((x2445 Int)) Int (ite (= x2445 164) x2102 (x790 x2445)))
(define-fun x902 ((x2445 Int)) Int (ite (= 196 x2445) x3520 (x852 x2445)))
(define-fun x1204 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x1639 x2445)))
(define-fun x825 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x1639 x2445)))
(define-fun x1558 ((x2445 Int)) Int (ite (= x2445 0) 1 (x1639 x2445)))
(define-fun x199 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x1639 x2445)))
(define-fun x965 ((x2445 Int)) Int (ite (= x2445 0) 0 (x686 x2445)))
(define-fun x4191 ((x2445 Int)) Int (ite x169 (x686 x2445) (x965 x2445)))
(define-fun x4838 ((x2445 Int)) Int (ite (= 0 x2445) 0 (x686 x2445)))
(define-fun x4984 ((x2445 Int)) Int (ite x4594 (x686 x2445) (x4838 x2445)))
(define-fun x1559 ((x2445 Int)) Int (ite (= 0 x2445) 0 (x686 x2445)))
(define-fun x5230 ((x2445 Int)) Int (ite x255 (x686 x2445) (x1559 x2445)))
(define-fun x830 ((x2445 Int)) Int (ite x2650 (x4191 x2445) (ite x2405 (x4984 x2445) (x5230 x2445))))
(define-fun x3170 ((x2445 Int)) Int (ite x3324 (x830 x2445) (ite x58 (x2125 x2445) (x830 x2445))))
(define-fun x4847 ((x2445 x3476)) Int (ite x3481 (x529 x2445) (x331 x2445)))
(define-fun x1990 ((x2445 x3476)) Int (ite (= x2445 x2212) x2548 (x3765 x2445)))
(define-fun x18 ((x2445 x3476)) Int (ite (= x2333 x2445) x2548 (x3503 x2445)))
(define-fun x1582 ((x2445 x3476)) Int (ite x4028 (x3765 x2445) (ite x507 (x1990 x2445) (x3765 x2445))))
(define-fun x4015 ((x2445 x3476)) Int (ite (= x2445 x131) 0 (x5120 x2445)))
(define-fun x4917 ((x2445 x3476)) Int (ite x4028 (x5120 x2445) (x4015 x2445)))
(define-fun x2493 ((x2445 x3476)) Int (ite (= x2445 x4237) x2739 (x5299 x2445)))
(define-fun x472 ((x2445 x3476)) Int (ite x4028 (x5299 x2445) (ite x1359 (x2493 x2445) (x5299 x2445))))
(define-fun x4178 ((x2445 x3476)) Int (ite (= x3796 x2445) x2739 (x1307 x2445)))
(define-fun x1169 ((x2445 x3476)) Int (ite x1359 (x1307 x2445) (x4178 x2445)))
(define-fun x2183 ((x2445 x3476)) Int (ite (= x2445 x607) 0 (x1169 x2445)))
(define-fun x981 ((x2445 x3476)) Int (ite x4028 (x1307 x2445) (x2183 x2445)))
(define-fun x1248 ((x2445 x3476)) Int (ite x507 (x3503 x2445) (x18 x2445)))
(define-fun x1909 ((x2445 x3476)) Int (ite (= x2017 x2445) 0 (x1248 x2445)))
(define-fun x4483 ((x2445 x3476)) Int (ite x4028 (x3503 x2445) (x1909 x2445)))
(define-fun x2452 ((x2445 x3476)) Int (ite (= x2445 x2621) 0 (x3814 x2445)))
(define-fun x2986 ((x2445 x3476)) Int (ite x4003 (x2452 x2445) (x3814 x2445)))
(define-fun x1794 ((x2445 x3476)) Int (ite (= x855 x2445) x1601 (x436 x2445)))
(define-fun x5095 ((x2445 x3476)) Int (ite (= x320 x2445) x1601 (x2555 x2445)))
(define-fun x4669 ((x2445 x3476)) Int (ite x1450 (x436 x2445) (ite x2476 (x1794 x2445) (x436 x2445))))
(define-fun x2420 ((x2445 x3476)) Int (ite (= x2445 x3656) x4948 (x4700 x2445)))
(define-fun x1869 ((x2445 x3476)) Int (ite x1450 (x4700 x2445) (ite x950 (x2420 x2445) (x4700 x2445))))
(define-fun x4671 ((x2445 x3476)) Int (ite (= x1334 x2445) 0 (x2041 x2445)))
(define-fun x1430 ((x2445 x3476)) Int (ite x1450 (x2041 x2445) (x4671 x2445)))
(define-fun x1548 ((x2445 x3476)) Int (ite x2476 (x2555 x2445) (x5095 x2445)))
(define-fun x640 ((x2445 x3476)) Int (ite (= x5293 x2445) 0 (x1548 x2445)))
(define-fun x4511 ((x2445 x3476)) Int (ite x1450 (x2555 x2445) (x640 x2445)))
(define-fun x4640 ((x2445 x3476)) Int (ite (= x504 x2445) x4948 (x3903 x2445)))
(define-fun x3247 ((x2445 x3476)) Int (ite x950 (x3903 x2445) (x4640 x2445)))
(define-fun x1201 ((x2445 x3476)) Int (ite (= x2445 x4733) 0 (x3247 x2445)))
(define-fun x1011 ((x2445 x3476)) Int (ite x1450 (x3903 x2445) (x1201 x2445)))
(define-fun x5376 ((x2445 x3476)) Int (ite (= x2445 x797) x4030 (x4514 x2445)))
(define-fun x3141 ((x2445 x3476)) Int (ite x829 (x4514 x2445) (x5376 x2445)))
(define-fun x2003 ((x2445 x3476)) Int (ite (= x2445 x1196) 0 (x3141 x2445)))
(define-fun x1253 ((x2445 x3476)) Int (ite x3482 (x4514 x2445) (x2003 x2445)))
(define-fun x5364 ((x2445 x3476)) Int (ite (= x2445 x876) x4941 (x1253 x2445)))
(define-fun x3020 ((x2445 x3476)) Int (ite (= x2445 x2392) 0 (x1253 x2445)))
(define-fun x4568 ((x2445 x3476)) Int (ite (= x3001 x2445) x1422 (x1253 x2445)))
(define-fun x3191 ((x2445 x3476)) Int (ite (= x2867 x2445) x4134 (x4568 x2445)))
(define-fun x2028 ((x2445 x3476)) Int (ite (= x2445 x204) 0 (x1253 x2445)))
(define-fun x3887 ((x2445 x3476)) Int (ite (= x2445 x4446) x4134 (x2028 x2445)))
(define-fun x1682 ((x2445 x3476)) Int (ite x2089 (x5364 x2445) (ite x124 (x3020 x2445) (ite x5055 (x3191 x2445) (x3887 x2445)))))
(define-fun x1358 ((x2445 x3476)) Int (ite x992 (x4514 x2445) (ite x2446 (x1253 x2445) (x1682 x2445))))
(define-fun x4325 ((x2445 x3476)) Int (ite (= x2445 x3111) x3691 (x4985 x2445)))
(define-fun x4620 ((x2445 x3476)) Int (ite x3517 (x4985 x2445) (x4325 x2445)))
(define-fun x2898 ((x2445 x3476)) Int (ite (= x2445 x59) 0 (x4620 x2445)))
(define-fun x1322 ((x2445 x3476)) Int (ite x3482 (x4985 x2445) (x2898 x2445)))
(define-fun x682 ((x2445 x3476)) Int (ite (= x2445 x1397) 0 (x1322 x2445)))
(define-fun x1197 ((x2445 x3476)) Int (ite (= x4907 x2445) x4134 (x682 x2445)))
(define-fun x1792 ((x2445 x3476)) Int (ite (= x598 x2445) 0 (x1322 x2445)))
(define-fun x785 ((x2445 x3476)) Int (ite (= x2445 x1626) x4954 (x1322 x2445)))
(define-fun x1407 ((x2445 x3476)) Int (ite (= x2445 x444) x4134 (x785 x2445)))
(define-fun x3723 ((x2445 x3476)) Int (ite (= x563 x2445) x4954 (x1322 x2445)))
(define-fun x2345 ((x2445 x3476)) Int (ite x2089 (x1197 x2445) (ite x124 (x1792 x2445) (ite x5055 (x1407 x2445) (x3723 x2445)))))
(define-fun x2248 ((x2445 x3476)) Int (ite x992 (x4985 x2445) (ite x2446 (x1322 x2445) (x2345 x2445))))
(define-fun x1247 ((x2445 x3476)) Int (ite (= x1780 x2445) x3691 (x822 x2445)))
(define-fun x4498 ((x2445 x3476)) Int (ite x3482 (x822 x2445) (ite x3517 (x1247 x2445) (x822 x2445))))
(define-fun x2090 ((x2445 x3476)) Int (ite (= x2706 x2445) x4134 (x4498 x2445)))
(define-fun x4398 ((x2445 x3476)) Int (ite (= x2445 x2706) x4134 (x4498 x2445)))
(define-fun x4874 ((x2445 x3476)) Int (ite x2089 (x4498 x2445) (ite x124 (x2090 x2445) (ite x5055 (x4498 x2445) (x4398 x2445)))))
(define-fun x4352 ((x2445 x3476)) Int (ite x992 (x822 x2445) (ite x2446 (x4498 x2445) (x4874 x2445))))
(define-fun x968 ((x2445 x3476)) Int (ite (= x4619 x2445) x393 (x4352 x2445)))
(define-fun x2825 ((x2445 x3476)) Int (ite (= x4521 x2445) x393 (x2248 x2445)))
(define-fun x939 ((x2445 x3476)) Int (ite x5034 (x2248 x2445) (x2825 x2445)))
(define-fun x5100 ((x2445 x3476)) Int (ite (= x1622 x2445) 0 (x939 x2445)))
(define-fun x5399 ((x2445 x3476)) Int (ite x3053 (x2248 x2445) (x5100 x2445)))
(define-fun x2574 ((x2445 x3476)) Int (ite (= x2445 x3308) 0 (x2399 x2445)))
(define-fun x3572 ((x2445 x3476)) Int (ite x3053 (x2399 x2445) (x2574 x2445)))
(define-fun x488 ((x2445 x3476)) Int (ite (= x3210 x2445) x4030 (x5054 x2445)))
(define-fun x3930 ((x2445 x3476)) Int (ite x3482 (x5054 x2445) (ite x829 (x488 x2445) (x5054 x2445))))
(define-fun x2731 ((x2445 x3476)) Int (ite (= x2445 x1795) x4134 (x3930 x2445)))
(define-fun x4768 ((x2445 x3476)) Int (ite (= x2660 x2445) x4134 (x3930 x2445)))
(define-fun x1858 ((x2445 x3476)) Int (ite x2089 (x2731 x2445) (ite x124 (x4768 x2445) (x3930 x2445))))
(define-fun x3303 ((x2445 x3476)) Int (ite x992 (x5054 x2445) (ite x2446 (x3930 x2445) (x1858 x2445))))
(define-fun x5176 ((x2445 x3476)) Int (ite (= x2445 x2669) x126 (x3303 x2445)))
(define-fun x4575 ((x2445 x3476)) Int (ite x3053 (x3303 x2445) (ite x3294 (x5176 x2445) (x3303 x2445))))
(define-fun x5265 ((x2445 x3476)) Int (ite (= x1595 x2445) x126 (x1358 x2445)))
(define-fun x2830 ((x2445 x3476)) Int (ite x3294 (x1358 x2445) (x5265 x2445)))
(define-fun x3866 ((x2445 x3476)) Int (ite (= x1199 x2445) 0 (x2830 x2445)))
(define-fun x249 ((x2445 x3476)) Int (ite x3053 (x1358 x2445) (x3866 x2445)))
(define-fun x1432 ((x2445 x3476)) Int (ite x3053 (x4352 x2445) (ite x5034 (x968 x2445) (x4352 x2445))))
(define-fun x3280 ((x2445 x3476)) Int (ite (= x1425 x2445) x5159 (x4598 x2445)))
(define-fun x3660 ((x2445 x3476)) Int (ite x1960 (x4598 x2445) (x3280 x2445)))
(define-fun x1210 ((x2445 x3476)) Int (ite (= x5128 x2445) 0 (x3660 x2445)))
(define-fun x608 ((x2445 x3476)) Int (ite x3956 (x4598 x2445) (x1210 x2445)))
(define-fun x402 ((x2445 x3476)) Int (ite (= x2658 x2445) x311 (x608 x2445)))
(define-fun x4989 ((x2445 x3476)) Int (ite (= x2445 x144) 0 (x608 x2445)))
(define-fun x2928 ((x2445 x3476)) Int (ite (= x2190 x2445) x1721 (x608 x2445)))
(define-fun x4988 ((x2445 x3476)) Int (ite (= x2445 x4812) x4134 (x2928 x2445)))
(define-fun x3098 ((x2445 x3476)) Int (ite (= x4342 x2445) 0 (x608 x2445)))
(define-fun x2622 ((x2445 x3476)) Int (ite (= x634 x2445) x4134 (x3098 x2445)))
(define-fun x2063 ((x2445 x3476)) Int (ite x5308 (x402 x2445) (ite x432 (x4989 x2445) (ite x342 (x4988 x2445) (x2622 x2445)))))
(define-fun x1744 ((x2445 x3476)) Int (ite x2416 (x4598 x2445) (ite x4371 (x608 x2445) (x2063 x2445))))
(define-fun x151 ((x2445 x3476)) Int (ite (= x4651 x2445) x869 (x379 x2445)))
(define-fun x4356 ((x2445 x3476)) Int (ite x1996 (x379 x2445) (x151 x2445)))
(define-fun x4209 ((x2445 x3476)) Int (ite (= x2445 x3738) 0 (x4356 x2445)))
(define-fun x4079 ((x2445 x3476)) Int (ite x3956 (x379 x2445) (x4209 x2445)))
(define-fun x4331 ((x2445 x3476)) Int (ite (= x945 x2445) 0 (x4079 x2445)))
(define-fun x2595 ((x2445 x3476)) Int (ite (= x2445 x2348) x4134 (x4331 x2445)))
(define-fun x3705 ((x2445 x3476)) Int (ite (= x4615 x2445) 0 (x4079 x2445)))
(define-fun x2441 ((x2445 x3476)) Int (ite (= x1136 x2445) x1311 (x4079 x2445)))
(define-fun x2771 ((x2445 x3476)) Int (ite (= x433 x2445) x4134 (x2441 x2445)))
(define-fun x5247 ((x2445 x3476)) Int (ite (= x4654 x2445) x1311 (x4079 x2445)))
(define-fun x3478 ((x2445 x3476)) Int (ite x5308 (x2595 x2445) (ite x432 (x3705 x2445) (ite x342 (x2771 x2445) (x5247 x2445)))))
(define-fun x3024 ((x2445 x3476)) Int (ite x2416 (x379 x2445) (ite x4371 (x4079 x2445) (x3478 x2445))))
(define-fun x179 ((x2445 x3476)) Int (ite (= x542 x2445) x869 (x3702 x2445)))
(define-fun x2935 ((x2445 x3476)) Int (ite x3956 (x3702 x2445) (ite x1996 (x179 x2445) (x3702 x2445))))
(define-fun x341 ((x2445 x3476)) Int (ite (= x3840 x2445) x4134 (x2935 x2445)))
(define-fun x4349 ((x2445 x3476)) Int (ite (= x2445 x3840) x4134 (x2935 x2445)))
(define-fun x3502 ((x2445 x3476)) Int (ite x5308 (x2935 x2445) (ite x432 (x341 x2445) (ite x342 (x2935 x2445) (x4349 x2445)))))
(define-fun x4959 ((x2445 x3476)) Int (ite x2416 (x3702 x2445) (ite x4371 (x2935 x2445) (x3502 x2445))))
(define-fun x4192 ((x2445 x3476)) Int (ite (= x2445 x1602) x223 (x4959 x2445)))
(define-fun x1056 ((x2445 x3476)) Int (ite (= x554 x2445) x223 (x3024 x2445)))
(define-fun x545 ((x2445 x3476)) Int (ite (= x1001 x2445) 0 (x4870 x2445)))
(define-fun x1133 ((x2445 x3476)) Int (ite x2474 (x4870 x2445) (x545 x2445)))
(define-fun x4473 ((x2445 x3476)) Int (ite x3919 (x3024 x2445) (x1056 x2445)))
(define-fun x388 ((x2445 x3476)) Int (ite (= x2445 x8) 0 (x4473 x2445)))
(define-fun x5154 ((x2445 x3476)) Int (ite x2474 (x3024 x2445) (x388 x2445)))
(define-fun x4229 ((x2445 x3476)) Int (ite (= x2635 x2445) x4691 (x1744 x2445)))
(define-fun x4386 ((x2445 x3476)) Int (ite x3000 (x1744 x2445) (x4229 x2445)))
(define-fun x3507 ((x2445 x3476)) Int (ite (= x2445 x4587) 0 (x4386 x2445)))
(define-fun x1656 ((x2445 x3476)) Int (ite x2474 (x1744 x2445) (x3507 x2445)))
(define-fun x1767 ((x2445 x3476)) Int (ite (= x2445 x2762) x5159 (x1643 x2445)))
(define-fun x181 ((x2445 x3476)) Int (ite x3956 (x1643 x2445) (ite x1960 (x1767 x2445) (x1643 x2445))))
(define-fun x2685 ((x2445 x3476)) Int (ite (= x3180 x2445) x4134 (x181 x2445)))
(define-fun x473 ((x2445 x3476)) Int (ite (= x3396 x2445) x4134 (x181 x2445)))
(define-fun x986 ((x2445 x3476)) Int (ite x5308 (x2685 x2445) (ite x432 (x473 x2445) (x181 x2445))))
(define-fun x4648 ((x2445 x3476)) Int (ite x2416 (x1643 x2445) (ite x4371 (x181 x2445) (x986 x2445))))
(define-fun x3531 ((x2445 x3476)) Int (ite (= x3729 x2445) x4691 (x4648 x2445)))
(define-fun x4744 ((x2445 x3476)) Int (ite x2474 (x4648 x2445) (ite x3000 (x3531 x2445) (x4648 x2445))))
(define-fun x1521 ((x2445 x3476)) Int (ite x2474 (x4959 x2445) (ite x3919 (x4192 x2445) (x4959 x2445))))
(define-fun x4676 ((x2445 Int)) Int (ite (= x2445 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4799 x2445)))
(define-fun x637 ((x2445 Int)) Int (ite (= x2445 132) x3494 (x4676 x2445)))
(define-fun x80 ((x2445 Int)) Int (ite (= x2445 164) x4735 (x637 x2445)))
(define-fun x3777 ((x2445 Int)) Int (ite (= 196 x2445) x2734 (x80 x2445)))
(define-fun x953 ((x2445 Int)) Int (ite (= x2445 0) 1 (x3501 x2445)))
(define-fun x1315 ((x2445 Int)) Int (ite (= x2445 0) 1 (x3501 x2445)))
(define-fun x873 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x3501 x2445)))
(define-fun x3056 ((x2445 Int)) Int (ite (= x2445 0) 1 (x3501 x2445)))
(define-fun x117 ((x2445 Int)) Int (ite (= 128 x2445) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1354 x2445)))
(define-fun x3989 ((x2445 Int)) Int (ite (= x2445 132) x3494 (x117 x2445)))
(define-fun x2713 ((x2445 Int)) Int (ite (= 164 x2445) x1972 (x3989 x2445)))
(define-fun x2182 ((x2445 Int)) Int (ite (= x2445 196) x4655 (x2713 x2445)))
(define-fun x1610 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x308 x2445)))
(define-fun x4499 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x308 x2445)))
(define-fun x3643 ((x2445 Int)) Int (ite (= x2445 0) 1 (x308 x2445)))
(define-fun x3440 ((x2445 Int)) Int (ite (= x2445 0) 1 (x308 x2445)))
(define-fun x1485 ((x2445 Int)) Int (ite (= 128 x2445) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1370 x2445)))
(define-fun x4588 ((x2445 Int)) Int (ite (= x2445 132) x3494 (x1485 x2445)))
(define-fun x3232 ((x2445 Int)) Int (ite (= 164 x2445) x2102 (x4588 x2445)))
(define-fun x835 ((x2445 Int)) Int (ite (= 196 x2445) x4059 (x3232 x2445)))
(define-fun x4747 ((x2445 Int)) Int (ite (= x2445 0) 1 (x2544 x2445)))
(define-fun x872 ((x2445 Int)) Int (ite (= x2445 0) 1 (x2544 x2445)))
(define-fun x1088 ((x2445 Int)) Int (ite (= x2445 0) 1 (x2544 x2445)))
(define-fun x1511 ((x2445 Int)) Int (ite (= x2445 0) 1 (x2544 x2445)))
(define-fun x1760 ((x2445 Int)) Int (ite (= 128 x2445) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1262 x2445)))
(define-fun x38 ((x2445 Int)) Int (ite (= 132 x2445) x3494 (x1760 x2445)))
(define-fun x895 ((x2445 Int)) Int (ite (= 164 x2445) x4735 (x38 x2445)))
(define-fun x16 ((x2445 Int)) Int (ite (= 196 x2445) x3712 (x895 x2445)))
(define-fun x359 ((x2445 x3476)) Int (ite (= x2850 x2445) x4284 (x1647 x2445)))
(define-fun x4344 ((x2445 x3476)) Int (ite (= x2012 x2445) x2942 (x4267 x2445)))
(define-fun x301 ((x2445 x3476)) Int (ite x742 (x4267 x2445) (x4344 x2445)))
(define-fun x2837 ((x2445 Int)) Int (ite (= x2445 0) 1 (x1277 x2445)))
(define-fun x649 ((x2445 x3476)) Int (ite (= x5228 x2445) x3137 (x1756 x2445)))
(define-fun x5077 ((x2445 x3476)) Int (ite (= x2445 x3305) x4005 (x649 x2445)))
(define-fun x1900 ((x2445 Int)) Int (ite (= x2445 0) 1 (x1277 x2445)))
(define-fun x2303 ((x2445 x3476)) Int (ite (= x2445 x5072) x1565 (x683 x2445)))
(define-fun x5149 ((x2445 Int)) Int (ite (= x2445 0) 1 (x1277 x2445)))
(define-fun x3325 ((x2445 x3476)) Int (ite (= x2445 x5300) x2704 (x3707 x2445)))
(define-fun x4559 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x1277 x2445)))
(define-fun x1934 ((x2445 Int)) Int (ite (= x2445 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3297 x2445)))
(define-fun x1263 ((x2445 Int)) Int (ite (= x2445 132) x3494 (x1934 x2445)))
(define-fun x3842 ((x2445 Int)) Int (ite (= x2445 164) x1972 (x1263 x2445)))
(define-fun x5140 ((x2445 Int)) Int (ite (= x2445 196) x3712 (x3842 x2445)))
(define-fun x3227 ((x2445 x3476)) Int (ite (= x2445 x350) x2523 (x1647 x2445)))
(define-fun x3177 ((x2445 Int)) Int (ite (= x2445 0) 1 (x218 x2445)))
(define-fun x4041 ((x2445 x3476)) Int (ite (= x2445 x3975) x1947 (x1756 x2445)))
(define-fun x565 ((x2445 Int)) Int (ite (= x2445 0) 1 (x218 x2445)))
(define-fun x3017 ((x2445 x3476)) Int (ite (= x421 x2445) x1176 (x683 x2445)))
(define-fun x1614 ((x2445 x3476)) Int (ite (= x1801 x2445) x1120 (x3017 x2445)))
(define-fun x2270 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x218 x2445)))
(define-fun x172 ((x2445 x3476)) Int (ite (= x2445 x660) x381 (x3707 x2445)))
(define-fun x5406 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x218 x2445)))
(define-fun x5082 ((x2445 Int)) Int (ite (= 128 x2445) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4212 x2445)))
(define-fun x3 ((x2445 Int)) Int (ite (= x2445 132) x3494 (x5082 x2445)))
(define-fun x3436 ((x2445 Int)) Int (ite (= x2445 164) x2102 (x3 x2445)))
(define-fun x322 ((x2445 Int)) Int (ite (= x2445 196) x3712 (x3436 x2445)))
(define-fun x1155 ((x2445 x3476)) Int (ite (= x2445 x1708) x2754 (x1647 x2445)))
(define-fun x4890 ((x2445 Int)) Int (ite (= x2445 0) 1 (x340 x2445)))
(define-fun x514 ((x2445 x3476)) Int (ite (= x2445 x3921) x5127 (x1756 x2445)))
(define-fun x604 ((x2445 Int)) Int (ite (= 0 x2445) 1 (x340 x2445)))
(define-fun x307 ((x2445 x3476)) Int (ite (= x4920 x2445) x991 (x683 x2445)))
(define-fun x3634 ((x2445 Int)) Int (ite (= x2445 0) 1 (x340 x2445)))
(define-fun x4351 ((x2445 x3476)) Int (ite (= x3794 x2445) x4688 (x3707 x2445)))
(define-fun x1198 ((x2445 x3476)) Int (ite (= x5354 x2445) x4052 (x4351 x2445)))
(define-fun x2280 ((x2445 Int)) Int (ite (= x2445 0) 1 (x340 x2445)))
(define-fun x317 ((x2445 x3476)) Int (ite x3083 (x5399 x2445) (x1322 x2445)))
(define-fun x4697 ((x2445 x3476)) Int (ite x490 (x5154 x2445) (x4079 x2445)))
(define-fun x3575 ((x2445 Int)) Int (ite (= 0 x2445) 0 (x4672 x2445)))
(define-fun x2169 ((x2445 Int)) Int (ite x3630 (x4672 x2445) (x3575 x2445)))
(define-fun x2237 ((x2445 Int)) Int (ite (= 0 x2445) 0 (x4672 x2445)))
(define-fun x5173 ((x2445 Int)) Int (ite x2010 (x4672 x2445) (x2237 x2445)))
(define-fun x2791 ((x2445 Int)) Int (ite (= x2445 0) 0 (x4672 x2445)))
(define-fun x612 ((x2445 Int)) Int (ite x2932 (x4672 x2445) (x2791 x2445)))
(define-fun x5402 ((x2445 Int)) Int (ite x159 (x2169 x2445) (ite x879 (x5173 x2445) (x612 x2445))))
(define-fun x113 ((x2445 Int)) Int (ite (= x2445 0) 0 (x312 x2445)))
(define-fun x571 ((x2445 Int)) Int (ite x4312 (x312 x2445) (x113 x2445)))
(define-fun x4715 ((x2445 Int)) Int (ite (= 0 x2445) 0 (x312 x2445)))
(define-fun x5274 ((x2445 Int)) Int (ite x1587 (x312 x2445) (x4715 x2445)))
(define-fun x5026 ((x2445 Int)) Int (ite (= 0 x2445) 0 (x312 x2445)))
(define-fun x791 ((x2445 Int)) Int (ite x4427 (x312 x2445) (x5026 x2445)))
(define-fun x927 ((x2445 Int)) Int (ite x4311 (x571 x2445) (ite x1303 (x5274 x2445) (x791 x2445))))
(define-fun x417 ((x2445 Int)) Int (ite x1212 (x4564 x2445) (x1811 x2445)))
(define-fun x2320 ((x2445 Int)) Int (ite x3421 (x4564 x2445) (x5189 x2445)))
(define-fun x1981 ((x2445 Int)) Int (ite x4783 (x4564 x2445) (x3149 x2445)))
(define-fun x877 ((x2445 Int)) Int (ite x1847 (x417 x2445) (ite x1473 (x2320 x2445) (x1981 x2445))))
(define-fun x2585 ((x2445 x3476)) Int (ite x1075 (x3707 x2445) (ite x2927 (x3707 x2445) (ite x2485 (x3707 x2445) (ite x3937 (x3707 x2445) (ite x15 (x4351 x2445) (x3707 x2445)))))))
(define-fun x2440 ((x2445 x3476)) Int (ite x5302 (x3707 x2445) (ite x3587 (x3707 x2445) (ite x629 (x3707 x2445) (ite x3299 (x2585 x2445) (x1198 x2445))))))
(define-fun x4146 ((x2445 x3476)) Int (ite x3385 (x683 x2445) (ite x1126 (x683 x2445) (ite x2221 (x683 x2445) (ite x4188 (x683 x2445) (ite x1389 (x3017 x2445) (x683 x2445)))))))
(define-fun x2030 ((x2445 x3476)) Int (ite x1453 (x683 x2445) (ite x4531 (x683 x2445) (ite x1402 (ite x3551 (x4146 x2445) (x1614 x2445)) (x683 x2445)))))
(define-fun x324 ((x2445 x3476)) Int (ite x4164 (x1756 x2445) (ite x4827 (x1756 x2445) (ite x505 (x1756 x2445) (ite x396 (x1756 x2445) (ite x1868 (x649 x2445) (x1756 x2445)))))))
(define-fun x1796 ((x2445 x3476)) Int (ite x1645 (x1756 x2445) (ite x924 (ite x422 (x324 x2445) (x5077 x2445)) (x1756 x2445))))
(define-fun x1576 ((x2445 Int)) Int (ite x4695 (x1639 x2445) (x1204 x2445)))
(define-fun x1530 ((x2445 Int)) Int (ite x1328 (x1639 x2445) (x825 x2445)))
(define-fun x1298 ((x2445 Int)) Int (ite x3925 (x1639 x2445) (x1558 x2445)))
(define-fun x1006 ((x2445 Int)) Int (ite x1178 (x1639 x2445) (x199 x2445)))
(define-fun x740 ((x2445 Int)) Int (ite x64 (x1576 x2445) (ite x498 (x1530 x2445) (ite x68 (x1298 x2445) (x1006 x2445)))))
(define-fun x1235 ((x2445 Int)) Int (ite x3822 (x1553 x2445) (x3698 x2445)))
(define-fun x362 ((x2445 Int)) Int (ite x2569 (x1553 x2445) (x1387 x2445)))
(define-fun x2929 ((x2445 Int)) Int (ite x692 (x1553 x2445) (x99 x2445)))
(define-fun x1447 ((x2445 Int)) Int (ite x3819 (x1553 x2445) (x3629 x2445)))
(define-fun x1106 ((x2445 Int)) Int (ite x3768 (x1235 x2445) (ite x374 (x362 x2445) (ite x5094 (x2929 x2445) (x1447 x2445)))))
(define-fun x3518 ((x2445 Int)) Int (ite x5148 (x3763 x2445) (x2636 x2445)))
(define-fun x3772 ((x2445 Int)) Int (ite x1535 (x3763 x2445) (x5106 x2445)))
(define-fun x3852 ((x2445 Int)) Int (ite x1777 (x3763 x2445) (x2701 x2445)))
(define-fun x3081 ((x2445 Int)) Int (ite x1529 (x3763 x2445) (x2508 x2445)))
(define-fun x187 ((x2445 Int)) Int (ite x5024 (x3518 x2445) (ite x2465 (x3772 x2445) (ite x5004 (x3852 x2445) (x3081 x2445)))))
(define-fun x49 ((x2445 Int)) Int (ite x3617 (x2544 x2445) (x4747 x2445)))
(define-fun x1149 ((x2445 Int)) Int (ite x209 (x2544 x2445) (x872 x2445)))
(define-fun x3745 ((x2445 Int)) Int (ite x5234 (x2544 x2445) (x1088 x2445)))
(define-fun x4491 ((x2445 Int)) Int (ite x4681 (x2544 x2445) (x1511 x2445)))
(define-fun x752 ((x2445 Int)) Int (ite x793 (x49 x2445) (ite x5088 (x1149 x2445) (ite x4738 (x3745 x2445) (x4491 x2445)))))
(define-fun x745 ((x2445 Int)) Int (ite x1346 (x308 x2445) (x1610 x2445)))
(define-fun x4207 ((x2445 Int)) Int (ite x2184 (x308 x2445) (x4499 x2445)))
(define-fun x5279 ((x2445 Int)) Int (ite x5356 (x308 x2445) (x3643 x2445)))
(define-fun x2174 ((x2445 Int)) Int (ite x4038 (x308 x2445) (x3440 x2445)))
(define-fun x4055 ((x2445 Int)) Int (ite x710 (x745 x2445) (ite x1175 (x4207 x2445) (ite x4310 (x5279 x2445) (x2174 x2445)))))
(define-fun x5221 ((x2445 Int)) Int (ite x2784 (x3501 x2445) (x953 x2445)))
(define-fun x1115 ((x2445 Int)) Int (ite x2750 (x3501 x2445) (x1315 x2445)))
(define-fun x3050 ((x2445 Int)) Int (ite x870 (x3501 x2445) (x873 x2445)))
(define-fun x1526 ((x2445 Int)) Int (ite x5344 (x3501 x2445) (x3056 x2445)))
(define-fun x2962 ((x2445 Int)) Int (ite x2682 (x5221 x2445) (ite x2694 (x1115 x2445) (ite x2500 (x3050 x2445) (x1526 x2445)))))
(define-fun x2425 ((x2445 Int)) Int (ite x3253 (x165 x2445) (ite x912 (x2008 x2445) (x606 x2445))))
(define-fun x119 ((x2445 Int)) Int (ite (= x2445 0) 1 (x2700 x2445)))
(define-fun x4966 ((x2445 x3476)) Int (ite (= x2445 (x636 x3494)) x4314 (x5303 x2445)))
(define-fun x1191 ((x2445 Int)) Int (ite x2872 (x3512 x2445) (ite x1390 (x998 x2445) (x5157 x2445))))
(define-fun x3217 ((x2445 Int)) Int (ite x1312 (x4287 x2445) (ite x3340 (x82 x2445) (x5079 x2445))))
(define-fun x1458 ((x2445 Int)) Int (ite x333 (x4897 x2445) (ite x874 (x4131 x2445) (x3659 x2445))))
(define-fun x4621 ((x3603 Int)) Bool (=> (and (not (= x3603 988262939)) (not (= 2796547477 x3603)) (not (= 2134560854 x3603)) (not (= x3603 157198259)) (not (= x3603 77053863734975077137548456399560439977311721439096602559221323163398253314048)) (not (= 1466279372 x3603)) (not (= x3603 2362143243)) (not (= 2023533118 x3603)) (not (= 405663989 x3603)) (not (= x3603 2929553584)) (not (= x3603 72570022874062638528011751457397263716769196454539065078543251854057308946432)) (not (= 547091486 x3603)) (not (= 178855970 x3603)) (not (= 2835717307 x3603)) (not (= 1461501637330902918203684832716283019655932542975 x3603)) (not (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x3603)) (not (= 989455977 x3603)) (not (= 115792089237316195423570985008687907853269984665640564039457 x3603)) (not (= x3603 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x3603 20853193852723734048814770637610870652489083209607696777694672748161462697984)) (not (= 2236579515 x3603)) (not (= x3603 2030502250)) (not (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x3603)) (not (= 1865448899 x3603)) (not (= x3603 117300739)) (not (= x3603 2678788150)) (not (= x3603 2245473101)) (not (= 3842108676 x3603)) (not (= x3603 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x3603 2691771752)) (not (= 599290589 x3603)) (not (= 1856199391 x3603)) (not (= x3603 1000000000000000000)) (not (= 75483562 x3603)) (not (= 1313710058 x3603)) (not (= x3603 2217467699)) (not (= 1038142104 x3603)) (> x3603 10000) (not (= 1461501637330902918203684832716283019655932542976 x3603)) (not (= 242558722 x3603)) (not (= x3603 398450620)) (not (= 2858086653 x3603)) (not (= x3603 10936679508223583803006762266923565500374401145016910147028117655998246682624)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3603)) (not (= x3603 1857877511)) (not (= x3603 4238056678808933066457772256406219440718756300954938350892797929791311314944)) (not (= 18446744073709551615 x3603)) (not (= 4294967296 x3603)) (not (= 24044834009420335638544845215851342251227478490780828673611325350056707489792 x3603)) (not (= x3603 35417553099779373699389112480655434059402432070290151981503827724506945814528)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3603)) (not (= x3603 3583811254)) (not (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 x3603)) (not (= x3603 6539370208772218570076773595062200405109424842860869254164860851635934461952))) (not ((_ is x956) (x636 x3603)))))
(assert (x4842 x3877))
(assert (x4842 x319))
(assert (x4842 x429))
(assert (x4842 x1258))
(assert (= (or x4905 x1529) x5123))
(assert (= x1916 (and x4505 (not x2013))))
(assert (x4621 x1137))
(assert (= x180 (and x263 x917)))
(assert (= x3083 (and x1770 x4767)))
(assert (= x4410 (and x4858 x2284)))
(assert (= (and x3907 x2860) x950))
(assert (= x4531 (or x4596 x4916)))
(assert (= x1073 (and x4703 x920)))
(assert (= x913 (and x684 (not x1677))))
(assert (x4842 x127))
(assert (= (and x1479 (not x3461)) x2198))
(assert (x4842 x5236))
(assert (= x3815 (and (not x1494) x3125)))
(assert (=> (<= x4030 10000) (= (x636 x4030) (x956 x4030))))
(assert (= x828 (and x3107 x801)))
(assert (x4842 x4896))
(assert (= x2231 (and x3800 x2396)))
(assert (= (and x4820 (not x5259)) x4599))
(assert (= x3843 (=> (and (= x2670 x1896) (= x4639 x241)) x4677)))
(assert (x4842 x2020))
(assert (= (and x97 x509) x4004))
(assert (x4842 x3063))
(assert (= (and x3073 (not x231)) x3272))
(assert (= x1363 (or x2162 x1096)))
(assert (x4842 x87))
(assert (= (and (not x2122) x4667) x2321))
(assert (x4842 x2714))
(assert (x4842 x3581))
(assert (x4842 x4723))
(assert (= (x636 10742207464693106059581744854972325794081737850190833080250671788038469713920) (x956 10742207464693106059581744854972325794081737850190833080250671788038469713920)))
(assert (x645 x4101))
(assert (= x4750 (and x5238 (not x2745))))
(assert (= (or x1359 x30) x2444))
(assert (x4842 x1901))
(assert (= x3542 (=> (and (= x4093 x3966) (= x3955 0)) x409)))
(assert (x4842 x1218))
(assert (x4842 x4449))
(assert (= (x4585 (x636 x4168)) x4168))
(assert (= (and x4353 x918) x2263))
(assert (x4842 x2300))
(assert (= x79 (and x137 (not x2242))))
(assert (x4842 x368))
(assert (x4842 x66))
(assert (x4842 x4804))
(assert (x4842 x3243))
(assert (= x648 (and (not x1065) x3686)))
(assert (= x2209 (and x5394 (not x1722))))
(assert (= (x4585 (x636 x5195)) x5195))
(assert (x4842 x1574))
(assert (= x1839 (and x1079 x3016)))
(assert (= (and x4622 x5076) x3832))
(assert (x4842 x1193))
(assert (x4842 x2752))
(assert (x4842 x241))
(assert (x4842 x4253))
(assert (= x834 (and x5350 (not x4506))))
(assert (= (+ 2 (x4585 x1283)) (x4585 (x5250 x1283 2))))
(assert (= x2128 (=> (and (or (not x3580) x3580) (= (= 0 x821) x3580)) x1850)))
(assert (x4842 x1158))
(assert (x4842 x3270))
(assert (= (or x4709 x893 x4807 x4372 x4317 x154) x2569))
(assert (x4842 x1637))
(assert (= (x4585 (x636 x1952)) x1952))
(assert (= x4039 (=> (and (= x5129 x1240) (= x2014 x3492)) x4833)))
(assert (= (and x5118 x555) x512))
(assert (= x4737 (or x3000 x2411)))
(assert (= x3995 (x4585 (x636 x3995))))
(assert (= (and x1457 x4130) x900))
(assert (= (and x5147 x3384) x3565))
(assert (x4842 x1064))
(assert (x4842 x2893))
(assert (x4842 x2367))
(assert (x4842 x3298))
(assert (= (and x3697 x532) x619))
(assert (x4842 x2543))
(assert (= x3566 (and (not x4157) x2021)))
(assert (x4842 x2537))
(assert (x4842 x3954))
(assert (x4621 x5401))
(assert (x4842 x1415))
(assert (= (and x3255 x56) x3225))
(assert (x4842 x3855))
(assert (= (=> (and (= x486 x3538) (= x3431 x1036) (= x3710 x4033) (= x5320 x4394)) x4854) x646))
(assert (= x1557 (=> (and (= (ite (< x3201 x3271) (not (= 0 x4954)) (> x3271 x3201)) x3309) (or (and (and (or (and (and (= (x2828 (x636 x4134) x2058 0) x3001) (= x1626 (x5250 x3001 1)) (>= x1422 0) (= x3678 (x5250 x1626 1)) (= x5237 (x2828 (x636 x1422) x2058 0)) (= x1422 (x1253 x2599)) (= (x2828 (x636 x4954) x2058 0) x2867) (= (x2989 (+ x5336 96)) x687) (>= 1461501637330902918203684832716283019655932542975 x1422) (> 1461501637330902918203684832716283019655932542976 x1422) (= (x5250 x5237 1) x444) (= (x2828 (x636 x4954) x2058 0) x2599) (= x4114 x687)) x2667) (and (and (= x204 (x2828 (x636 x4134) x2058 0)) (= x4446 (x2828 (x636 x4954) x2058 0)) (= x4114 x116) (= x116 (x2989 (+ x5336 96))) (= x3013 (x5250 x563 1)) (= (x5250 x204 1) x563)) (not x2667))) (and (<= 0 x3798) (<= x3798 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x3798) (= x2667 (> x5327 0)) (= x3798 (x4498 x2706)) (= x5327 (x1843 (- x4954 x3798))))) x3309) (and (and (and (<= x1698 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1698) (= (= x1698 0) x4749) (>= x1698 0) (= x1698 (x4498 x2706))) (or (and (not x4749) (and (= (x5250 x2706 1) x1795) (>= 1461501637330902918203684832716283019655932542975 x4941) (= x4907 (x5250 x4554 1)) (= x4941 (x3930 x1795)) (= (x2828 (x636 x4134) x2058 0) x876) (= x1138 x4114) (= (x5250 x1397 1) x2019) (= x4554 (x2828 (x636 x4941) x2058 0)) (= (x2989 (+ x5336 96)) x1138) (= x1397 (x5250 x876 1)) (< x4941 1461501637330902918203684832716283019655932542976) (>= x4941 0))) (and x4749 (and (= x1143 (x5250 x598 1)) (= x4114 x2977) (= x2392 (x2828 (x636 x4134) x2058 0)) (= (x5250 x2392 1) x598) (= (x2989 (+ 96 x5336)) x2977) (= (x5250 x2706 1) x2660))))) (not x3309)))) x1648)))
(assert (= (x4585 (x636 x5226)) x5226))
(assert (x4842 x380))
(assert (x4842 x3248))
(assert (x4842 x2505))
(assert (= x4797 (and x2350 x4119)))
(assert (= x1561 (and (not x2911) x5341)))
(assert (x4842 x2498))
(assert (x4842 x658))
(assert (= (and (not x867) x2761) x3359))
(assert (x4621 x5195))
(assert (= x3779 (and x2923 x3060)))
(assert (x4842 x3558))
(assert (= x4942 (and x5061 x4368)))
(assert (x4842 x3398))
(assert (= (x956 1466279372) (x636 1466279372)))
(assert (= (and x4774 x3961) x1681))
(assert (= (x4585 (x636 x5159)) x5159))
(assert (= x2597 (and x3094 (not x4903))))
(assert (x4842 x4050))
(assert (x4842 x1159))
(assert (x4621 x5311))
(assert (= (+ 1 (x4585 x144)) (x4585 (x5250 x144 1))))
(assert (= (and x866 x3562) x4337))
(assert (=> (<= x2307 10000) (= (x636 x2307) (x956 x2307))))
(assert (= x4596 (or (and x2131 (not x2243)) (and x779 x2464) x71 (and x3261 (not x2588)) x573 (and x1790 x1992))))
(assert (= x1766 (or x1473 x233 x1847)))
(assert (x4842 x3245))
(assert (x4842 x2861))
(assert (= (=> (and (= x1484 x3106) (= x2149 x4415)) x4538) x3991))
(assert (x4842 x4776))
(assert (= 4294967296 (x4585 (x956 4294967296))))
(assert (x4842 x2769))
(assert (x4842 x2228))
(assert (= x3926 (and x4670 x2379)))
(assert (= (and x3588 (not x1404)) x846))
(assert (x4842 x3783))
(assert (= x4837 (and x3184 (not x1437))))
(assert (= x4987 (and x280 x758)))
(assert (= x3454 (and x4605 (not x5211))))
(assert (= (and x1219 x471) x5353))
(assert (x4842 x869))
(assert (x4842 x464))
(assert (x4842 x5276))
(assert (= (and x5105 (not x3488)) x3514))
(assert (x4842 x2739))
(assert (= (x4585 (x956 2362143243)) 2362143243))
(assert (= x2391 (and (not x214) x901)))
(assert (x4842 x3268))
(assert (x4842 x638))
(assert (= x3356 (and x4126 x738)))
(assert (= x3323 (and (not x618) x418)))
(assert (= (and (not x641) x2642) x264))
(assert (x4621 x326))
(assert (= (and x2797 x2251) x175))
(assert (x4842 x2831))
(assert (= x445 (and x1236 x5168)))
(assert (x4842 x798))
(assert (x4842 x4509))
(assert (x4842 x3333))
(assert (x4842 x482))
(assert (x4842 x2733))
(assert (= x2551 (and (not x108) x4438)))
(assert (= (+ 2 (x4585 x794)) (x4585 (x5250 x794 2))))
(assert (x4842 x783))
(assert (x4842 x3631))
(assert (x4842 x4900))
(assert (= x717 (and x2501 x2110)))
(assert (= x3185 (and (not x2996) x3890)))
(assert (= (and x2707 (not x1063)) x273))
(assert (= (x4585 (x636 x4776)) x4776))
(assert (x4842 x4606))
(assert (x645 x4639))
(assert (x4842 x3263))
(assert (x4842 x1603))
(assert (x4842 x2254))
(assert (x4842 x4597))
(assert (= (+ 1 (x4585 x2392)) (x4585 (x5250 x2392 1))))
(assert (x4842 x1536))
(assert (x4842 x2656))
(assert (x4842 x3292))
(assert (x4842 x98))
(assert (x4842 x1588))
(assert (x4842 x2419))
(assert (x4842 x4052))
(assert (= x4785 (and (not x1805) x883)))
(assert (x4842 x942))
(assert (x4842 x1929))
(assert (= (+ 1 (x4585 x628)) (x4585 (x5250 x628 1))))
(assert (= (and x4479 x2245) x242))
(assert (x4842 x3632))
(assert (=> (>= 10000 x3733) (= (x956 x3733) (x636 x3733))))
(assert (x2961 x2107 x4926))
(assert (x4842 x3683))
(assert (x4842 x2214))
(assert (x4842 x3011))
(assert (= (and x3846 x3166) x3962))
(assert (= x3813 (x4585 (x636 x3813))))
(assert (= (and x820 (not x2698)) x5268))
(assert (= 1856199391 (x4585 (x956 1856199391))))
(assert (= x1686 (and x1681 x4660)))
(assert (x4842 x198))
(assert (x4842 x3420))
(assert (x4842 x3019))
(assert (x4842 x4216))
(assert (x4842 x5159))
(assert (x4842 x4775))
(assert (x4842 x2253))
(assert (= (and x2579 (not x4544)) x2956))
(assert (x4842 x2716))
(assert (x4842 x2897))
(assert (x4842 x4937))
(assert (x4842 x5280))
(assert (x4842 x2925))
(assert (x4621 x4416))
(assert (= x5004 (or x770 x1777)))
(assert (=> (<= x1952 10000) (= (x956 x1952) (x636 x1952))))
(assert (x4842 x5292))
(assert (x4842 x4390))
(assert (x4842 x5109))
(assert (x4842 x1381))
(assert (x4842 x5192))
(assert (=> (<= x2723 10000) (= (x956 x2723) (x636 x2723))))
(assert (= x325 (and x1314 (not x4912))))
(assert (= x2859 (and x3654 x5206)))
(assert (x4842 x14))
(assert (x4842 x5267))
(assert (= (and x4785 (not x1791)) x2797))
(assert (= (and (not x1078) x5036) x2082))
(assert (= x4577 (and (not x2517) x5387)))
(assert (= x4020 (=> (and (= x1318 x2254) (= x171 x167)) x3904)))
(assert (x4842 x626))
(assert (= (and (not x4426) x5) x2269))
(assert (= x4719 (or x2288 x4273)))
(assert (x4842 x26))
(assert (= x4296 (and x3488 x5105)))
(assert (= (and x1160 x4891) x3040))
(assert (x4842 x597))
(assert (= (x4585 (x956 18446744073709551615)) 18446744073709551615))
(assert (= (x636 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x956 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (x4842 x4977))
(assert (= (or x4318 x5344) x5258))
(assert (x4621 x1618))
(assert (= (+ (x4585 x1860) 1) (x4585 (x5250 x1860 1))))
(assert (= x5401 (x4585 (x636 x5401))))
(assert (x4842 x503))
(assert (x4842 x4441))
(assert (= x3065 (and x1547 (not x4550))))
(assert (= x1793 (and x2139 x4256)))
(assert (= (and x995 x1054) x4428))
(assert (= (and x884 x3757) x4069))
(assert (x4842 x4793))
(assert (x4842 x1815))
(assert (= (and (not x2840) x4276) x3839))
(assert (x4842 x2304))
(assert (x4842 x135))
(assert (x4842 x3302))
(assert (= x858 (and x3559 x3284)))
(assert (x4842 x679))
(assert (= x3951 (and x2006 x61)))
(assert (x4842 x2376))
(assert (x4842 x3974))
(assert (= x2011 x3667))
(assert (= x395 (and x3256 x3550)))
(assert (x4842 x140))
(assert (= x4127 (and x4767 (not x1770))))
(assert (= (and x2193 x3102) x346))
(assert (=> (<= x4875 10000) (= (x636 x4875) (x956 x4875))))
(assert (=> (>= 10000 x2808) (= (x956 x2808) (x636 x2808))))
(assert (= x1339 (=> (and (= x607 (x2828 (x636 x3801) x4778 0)) (= x3801 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= (x5250 x2017 1) x131) (= (x5250 x607 1) x2017)) x1264)))
(assert (x4842 x74))
(assert (x2961 x5017 x4639))
(assert (x4842 x4955))
(assert (= (and x4137 x3979) x205))
(assert (x645 x4926))
(assert (= (or x293 x4695) x64))
(assert (x4842 x2630))
(assert (= (and x3152 (not x3366)) x1803))
(assert (x4842 x1371))
(assert (=> (>= 10000 x434) (= (x956 x434) (x636 x434))))
(assert (x4842 x2890))
(assert (x645 x2144))
(assert (x4842 x2279))
(assert (= (and x3565 x2086) x2005))
(assert (x4842 x1910))
(assert (= (or x4633 x3704) x768))
(assert (x4842 x4724))
(assert (x4621 x1952))
(assert (x4842 x3179))
(assert (= x3510 (and x3998 (not x41))))
(assert (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x4585 (x956 10742207464693106059581744854972325794081737850190833080250671788038469713920))))
(assert (= (and (not x4017) x2638) x2550))
(assert (x4842 x656))
(assert (x4842 x1817))
(assert (x4842 x1217))
(assert (= x4416 (x4585 (x636 x4416))))
(assert (= (and x3339 (not x1771)) x5390))
(assert (x4842 x2120))
(assert (x4842 x4032))
(assert (x4842 x4626))
(assert (= 3583811254 (x4585 (x956 3583811254))))
(assert (= x497 (x4585 (x636 x497))))
(assert (= x5350 (and (not x744) x3327)))
(assert (x4842 x3716))
(assert (x4842 x1586))
(assert (x645 x1892))
(assert (= (and x385 x5249) x2416))
(assert (x4842 x2815))
(assert (x4842 x103))
(assert (= x3699 (and x1363 x5389)))
(assert (x4842 x1396))
(assert (x4842 x1608))
(assert (= (=> (and (= x1574 x171) (= x2254 x2863)) x3904) x1776))
(assert (= x1882 (and (not x5085) x2216)))
(assert (x4842 x2471))
(assert (= x1591 (=> (= (= x5239 0) x1464) (and (=> (and (and (= (x2989 (+ x3145 31)) x1630) (= x1254 (x2989 (+ 452 x3600))) (= (or (and (< x3145 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3145))) (> x3145 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4261) (= x3600 (x5403 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1630))) (not x1464)) (and (=> (and x4261 (= true x580)) x305) (=> (and (and (= x309 (= x1866 x2144)) (= x1866 (x5403 1461501637330902918203684832716283019655932542975 x2144)) (= (x4625 452) x2144)) (not x4261)) (and (=> (and (and (= x2144 x1004) (= x380 x1254)) x309) x4883) (=> (and (not x309) (= true x580)) x305))))) (=> x1464 x1008)))))
(assert (= (and x1464 x3690) x3536))
(assert (x4842 x5081))
(assert (= x62 (and (not x2573) x2249)))
(assert (x4842 x157))
(assert (= x1985 (and x4797 (not x3583))))
(assert (x4842 x664))
(assert (= x3571 (and (not x4593) x2659)))
(assert (= (or x4839 x4003) x3102))
(assert (x4621 x3233))
(assert (x4842 x2114))
(assert (= (and x4549 x2994) x1627))
(assert (x645 x3262))
(assert (x4842 x4143))
(assert (= (and x1462 x2974) x4881))
(assert (=> (>= 10000 x5205) (= (x636 x5205) (x956 x5205))))
(assert (x4842 x2025))
(assert (x4621 x265))
(assert (= (=> (and (= x5098 x1560) (= 0 x1104)) x3192) x1420))
(assert (x4842 x1014))
(assert (x4842 x223))
(assert (= x1327 (and (not x951) x1111)))
(assert (x4842 x197))
(assert (= (x4585 (x636 x3805)) x3805))
(assert (= (and (not x3559) x3284) x4266))
(assert (x4842 x116))
(assert (= x4945 (and x1539 x222)))
(assert (x4842 x2976))
(assert (= (x4585 (x636 x326)) x326))
(assert (= (+ 2 (x4585 x2353)) (x4585 (x5250 x2353 2))))
(assert (= x2062 (and x2924 x2763)))
(assert (= (and x163 x4136) x4164))
(assert (= (x4585 (x636 x4200)) x4200))
(assert (x4842 x1956))
(assert (= (and x1743 x4268) x3148))
(assert (= (and (not x803) x2380) x1821))
(assert (= (+ 2 (x4585 x4778)) (x4585 (x5250 x4778 2))))
(assert (x4842 x4098))
(assert (= x820 (and x5156 (not x3715))))
(assert (x4842 x4761))
(assert (= x4594 (or x1072 x4963 x4300 x242 x288)))
(assert (x4842 x5327))
(assert (x4842 x4104))
(assert (x4842 x1162))
(assert (= x5304 (=> (and (= x2294 0) (= x4967 x3901)) x5393)))
(assert (= (and x5059 x4175) x516))
(assert (= x5295 (=> (and (= x2695 0) (= x5098 x676)) x4904)))
(assert (= x1476 (and x3389 x5231)))
(assert (x4842 x1870))
(assert (= (and x1041 x455) x3157))
(assert (= x4003 (and x4305 (not x1156))))
(assert (= (and (not x896) x1211) x1986))
(assert (x4621 x2723))
(assert (x4842 x1940))
(assert (x4621 x3691))
(assert (= (and (not x1539) x222) x137))
(assert (=> (<= x3494 10000) (= (x636 x3494) (x956 x3494))))
(assert (x4842 x1287))
(assert (x4842 x513))
(assert (= x2032 (and x711 (not x24))))
(assert (x4842 x4636))
(assert (= x3127 (and x273 x3234)))
(assert (x4621 x978))
(assert (x4842 x4218))
(assert (x4842 x2833))
(assert (x4842 x3095))
(assert (= (and x2640 (not x93)) x1246))
(assert (x4842 x2618))
(assert (= (and x3124 (not x5124)) x7))
(assert (x4842 x4623))
(assert (=> (>= 10000 x813) (= (x636 x813) (x956 x813))))
(assert (= x1478 (=> (and (= 0 x1164) (= x1134 x2482)) x2521)))
(assert (= x4433 (and (not x4555) x4781)))
(assert (= x5105 (and x5291 x1989)))
(assert (x4842 x4941))
(assert (= (and x471 (not x1219)) x3215))
(assert (x4842 x4298))
(assert (=> (>= 10000 x1408) (= (x636 x1408) (x956 x1408))))
(assert (=> (<= x3737 10000) (= (x636 x3737) (x956 x3737))))
(assert (x4842 x909))
(assert (x4842 x857))
(assert (= (and x4411 x3580) x283))
(assert (x4842 x2782))
(assert (x4621 x4030))
(assert (= x2366 (and x4582 x470)))
(assert (x4842 x3479))
(assert (= (=> (= x2618 x1228) x1308) x2710))
(assert (x645 x2367))
(assert (= x4794 (and x575 x4999)))
(assert (= x3006 (and x4774 (not x3961))))
(assert (= (x4585 (x956 1857877511)) 1857877511))
(assert (= x1392 (and (not x3386) x1819)))
(assert (x4842 x167))
(assert (x4842 x43))
(assert (x4842 x3074))
(assert (x4842 x46))
(assert (x4842 x3691))
(assert (= (and (not x3212) x3199) x4895))
(assert (= (or x5356 x3026) x4310))
(assert (= (=> (and (= x5063 x3391) (= x4148 0)) x3636) x2908))
(assert (x4842 x5311))
(assert (x4621 x1396))
(assert (= (and x861 x5131) x762))
(assert (= (and x4865 x3960) x4368))
(assert (= x5358 (and x435 (not x3241))))
(assert (x4842 x773))
(assert (x4842 x4869))
(assert (x4842 x787))
(assert (= (and x1013 x846) x5097))
(assert (x4842 x885))
(assert (x4621 x4168))
(assert (x4842 x3249))
(assert (x4842 x3260))
(assert (x4842 x2424))
(assert (= (or x2099 x3567) x996))
(assert (x4842 x3237))
(assert (=> (<= x1601 10000) (= (x636 x1601) (x956 x1601))))
(assert (x4842 x5006))
(assert (x4842 x237))
(assert (x4842 x4144))
(assert (= x1360 (and x4533 x2767)))
(assert (= x639 (or x4853 x4038)))
(assert (= x4305 (or x4056 x2975)))
(assert (= (and x1276 (not x248)) x3483))
(assert (x4621 x811))
(assert (= (x4585 (x636 x4097)) x4097))
(assert (x4842 x4694))
(assert (= x1819 (and x2478 x3749)))
(assert (x4842 x2765))
(assert (x4842 x890))
(assert (= (x4585 (x636 x1721)) x1721))
(assert (x4621 x3805))
(assert (= x4317 (and x3016 (not x1079))))
(assert (= (and (not x4199) x5325) x1515))
(assert (= (or x3127 x4149 x3573 x5051 x7 x94 x5390 x553 x3194) x4695))
(assert (x4842 x517))
(assert (x4842 x272))
(assert (= x3797 (and x5049 x1566)))
(assert (x4842 x3543))
(assert (= x3417 (and (not x5172) x4303)))
(assert (= 2796547477 (x4585 (x956 2796547477))))
(assert (= x407 (and x4982 x494)))
(assert (= x2249 (and (not x210) x1936)))
(assert (= (x636 989455977) (x956 989455977)))
(assert (x4842 x3661))
(assert (x4842 x1153))
(assert (=> (<= x1721 10000) (= (x636 x1721) (x956 x1721))))
(assert (x4842 x589))
(assert (= (and x5049 (not x1566)) x944))
(assert (x4842 x4682))
(assert (x4842 x817))
(assert (= (or x1386 x2594) x2357))
(assert (x5391 x2951))
(assert (x4842 x2987))
(assert (= x989 x84))
(assert (x4842 x1399))
(assert (= (and (not x994) x4324) x2309))
(assert (= x26 (x4585 (x636 x26))))
(assert (x4842 x1836))
(assert (= x2779 (x4585 (x636 x2779))))
(assert (x4842 x669))
(assert (x4842 x2524))
(assert (=> (<= x4245 10000) (= (x636 x4245) (x956 x4245))))
(assert (= x4729 (and x3934 x3037)))
(assert (= x2258 (or x912 x3253 x4471)))
(assert (x4842 x5115))
(assert (x4842 x2813))
(assert (= (and x285 x1938) x992))
(assert (= (x4585 (x5250 x1196 1)) (+ (x4585 x1196) 1)))
(assert (= (and x884 (not x3757)) x5136))
(assert (= (and (not x1676) x2708) x3221))
(assert (= (x4585 (x5250 x2058 2)) (+ 2 (x4585 x2058))))
(assert (x4842 x192))
(assert (x4842 x4868))
(assert (x4842 x4769))
(assert (= (=> (and (= x1896 x4880) (= x503 x4639)) x4677) x479))
(assert (=> (<= x4289 10000) (= (x956 x4289) (x636 x4289))))
(assert (x4842 x2954))
(assert (= x989 x3329))
(assert (x4842 x525))
(assert (= x3774 (and x3202 x261)))
(assert (x4842 x153))
(assert (x4842 x4581))
(assert (x4842 x1954))
(assert (= (and x834 x54) x930))
(assert (= x4316 (or x2268 x4463)))
(assert (= x3054 (or (and x4400 x3968) (and (not x3209) x1360) x4950 (and x974 x971) (and x2767 (not x4533)) x450)))
(assert (= x4195 (and x753 x485)))
(assert (x4842 x4784))
(assert (x4842 x515))
(assert (= x3022 (and x4432 (not x1165))))
(assert (= x3819 (or x1101 x4856 x4357 x701 x4930 x3084)))
(assert (= (and (not x163) x4136) x3829))
(assert (x4842 x2324))
(assert (= (and x356 (not x309)) x1148))
(assert (x4842 x1465))
(assert (= x5051 (and x2953 x1172)))
(assert (x4842 x1690))
(assert (= x2362 (and (not x5288) x2597)))
(assert (= x710 (or x1346 x1190)))
(assert (x4842 x184))
(assert (= x2775 (and x4484 (not x1726))))
(assert (= (+ (x4585 x1021) 2) (x4585 (x5250 x1021 2))))
(assert (= x1175 (or x5360 x2184)))
(assert (x4842 x1161))
(assert (x4842 x2686))
(assert (x4842 x1215))
(assert (= (and x1650 x4292) x333))
(assert (x4842 x2153))
(assert (x4842 x267))
(assert (= (and x410 x2337) x4185))
(assert (x4842 x3140))
(assert (x4842 x601))
(assert (x4621 x78))
(assert (x4842 x4282))
(assert (x4842 x2719))
(assert (= (x956 1461501637330902918203684832716283019655932542975) (x636 1461501637330902918203684832716283019655932542975)))
(assert (x4621 x528))
(assert (= (+ 1 (x4585 x345)) (x4585 (x5250 x345 1))))
(assert (x4842 x1423))
(assert (x4842 x4365))
(assert (= x510 x2406))
(assert (= x2318 (and x4927 (not x141))))
(assert (x3529 x3579))
(assert (= (x3674 416) 0))
(assert (x4842 x2847))
(assert (= (or x3517 x2274) x4432))
(assert (x4842 x3917))
(assert (=> (<= x2733 10000) (= (x956 x2733) (x636 x2733))))
(assert (x5391 x13))
(assert (x4842 x2297))
(assert (x4842 x1438))
(assert (= x3324 (and (not x914) x3099)))
(assert (= (and (not x138) x3168) x4258))
(assert (x4842 x3254))
(assert (= (and x5260 x4454) x1510))
(assert (= (or x2570 x5136 x325 x4069) x120))
(assert (x4842 x1694))
(assert (x4842 x5270))
(assert (x4842 x1545))
(assert (= (+ (x4585 x5296) 2) (x4585 (x5250 x5296 2))))
(assert (= (and x1554 x60) x3890))
(assert (x4842 x3995))
(assert (= x2343 (and x4387 x5142)))
(assert (= (or x1450 x3725) x3448))
(assert (= (x4585 (x5250 x4733 1)) (+ 1 (x4585 x4733))))
(assert (= (and (not x1885) x3218) x496))
(assert (x4842 x4139))
(assert (x4842 x5113))
(assert (x4842 x3449))
(assert (x4842 x746))
(assert (= (x4585 (x5250 x1331 1)) (+ 1 (x4585 x1331))))
(assert (x4842 x621))
(assert (= x3218 (and (not x2589) x572)))
(assert (=> (>= 10000 x4143) (= (x636 x4143) (x956 x4143))))
(assert (x4842 x3916))
(assert (= x2965 (and (not x300) x5130)))
(assert (x4842 x4931))
(assert (x4842 x2939))
(assert (x4842 x1750))
(assert (= (and x245 x2024) x4992))
(assert (= x3330 (and x2126 x2675)))
(assert (x4842 x4701))
(assert (x4621 x3289))
(assert (x4842 x4179))
(assert (= (and x1788 x2206) x534))
(assert (= (x4585 (x5250 x1524 1)) (+ 1 (x4585 x1524))))
(assert (= (x4585 (x5250 x1395 2)) (+ (x4585 x1395) 2)))
(assert (x4842 x2516))
(assert (x4842 x5213))
(assert (= (and x3390 (not x3309)) x2786))
(assert (= x1265 (=> (and (and (>= x4840 0) (not (= x1343 x4606)) (<= x4264 255) (not (= x3494 x1972)) (= (< 0 (x1306 (x636 x1972))) x2141) (= (> (x1306 (x636 x1299)) 0) x2140) x2238 (>= 255 x2018) (= (x2312 352) x1446) (>= 18446744073709551615 x4281) (= (x1443 x4402) x1625) (<= 0 x3447) (= (x2312 320) x5343) (not (= x4606 x4735)) x3458 x25 (<= 0 x1368) (< x2026 256) (<= x1670 255) (not (= x1972 x4606)) (not (= x3708 x1972)) (= x2616 (< 0 (x1306 (x636 x4735)))) (> x1299 0) (>= x3504 0) (not (= x4735 x4298)) (>= x3982 0) (< 0 x4735) (>= x475 0) (<= 0 x1451) (<= 0 x4383) (not (= x2102 x3708)) (<= 0 x566) (not (= x3708 x4735)) (<= x1291 255) (not (< x5096 3583811254)) (not (= x4735 x2102)) (= x1816 (not (= x3075 0))) (>= x1509 0) (<= x215 1461501637330902918203684832716283019655932542975) (= (> (x1306 (x636 x3494)) 0) x2598) (>= 18446744073709551615 x3635) (= x2238 (> (x1306 (x636 x4606)) 0)) (= (x1880 (x636 x4298)) x327) (not (= x4298 x1343)) (>= x3097 0) (= (x1880 (x636 x4735)) x3982) (>= 255 x2537) (<= x1773 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3917) (>= 1461501637330902918203684832716283019655932542975 x2102) (not (= x1972 x2102)) (not (= x3494 x1299)) (>= x4264 0) (<= 0 x3416) (<= x447 1461501637330902918203684832716283019655932542975) (not (= x1343 x3494)) (<= 0 x2537) (>= 1461501637330902918203684832716283019655932542975 x1451) (<= 0 x1773) (<= 0 x1652) (not (= x4298 x1299)) (= x2744 (x1880 (x636 x3708))) (= x3416 (x1880 (x636 x2102))) (not (= x1972 x1343)) (> x2102 0) (<= 0 x5246) (< x1670 256) (not (= x1299 x3708)) (= (x2828 (x636 x3193) (x956 168) 0) x4402) (= x4488 (not (= 0 x1806))) (>= 18446744073709551615 x2644) (= (x3793 x4402) x2537) (<= 0 x3479) (= x1870 (x2312 192)) (= x4068 (x1880 (x636 x3494))) (<= 0 x215) (< x3075 256) (= x4602 (x2657 x4402)) (>= x4100 0) (>= x4504 0) (<= x4328 1461501637330902918203684832716283019655932542975) (> 256 x2225) (>= x4601 0) (>= x4297 0) (>= 1461501637330902918203684832716283019655932542975 x4298) (>= 1461501637330902918203684832716283019655932542975 x2881) (<= 0 x1968) (not (= x1972 x4298)) (< 0 x220) (>= 1461501637330902918203684832716283019655932542975 x5246) (<= x3097 1461501637330902918203684832716283019655932542975) (<= 0 x258) (<= 0 x4789) (>= 1461501637330902918203684832716283019655932542975 x1968) (<= 0 x327) (<= x4789 255) (<= 0 x3163) (<= 0 x5352) (<= x2862 255) (<= x2815 18446744073709551615) (<= x3494 1461501637330902918203684832716283019655932542975) x2598 (> x1972 0) (<= 0 x1625) (>= x2744 0) (<= 0 x2018) (<= x1652 255) (= (not (= x2537 0)) x392) (not (= x4298 x3708)) x4121 (not (= x1972 x4735)) (>= 255 x5236) x4629 (<= x1368 1461501637330902918203684832716283019655932542975) (<= x4602 255) (<= 0 x4602) (<= x3708 1461501637330902918203684832716283019655932542975) (>= x3917 0) (>= 255 x1806) (<= 0 x4869) (> 3842108676 x5096) (<= x475 1461501637330902918203684832716283019655932542975) (not (= x4606 x3708)) (= x4298 x798) (>= x3446 0) (>= 18446744073709551615 x4265) x2616 (>= x3964 0) (<= x4100 255) (= (x1337 x4402) x3075) (>= x2834 0) (<= 0 x2026) (>= x1670 0) (not (= x3708 x1343)) (= (not (= 0 x4602)) x1102) (>= 1461501637330902918203684832716283019655932542975 x5178) (= x446 (x1880 (x636 x1972))) (not (= x1299 x4735)) (= (x2312 128) x2925) (not (= x1299 x1972)) (= x1874 (x2312 256)) (= (< 0 (x1306 (x636 x2102))) x3458) (= x1942 (not (= 0 x2225))) (= (x2312 160) x2841) (>= x2644 0) (<= x3504 1461501637330902918203684832716283019655932542975) (>= x3635 0) (<= x189 255) (= (> (x1306 (x636 x4298)) 0) x4629) (= x3447 (x1880 (x636 x1299))) (not (> 2678788150 x5096)) (<= 0 x5236) (>= x4265 0) (< 0 x4298) (= (x1880 (x636 x4606)) x4383) (>= 1461501637330902918203684832716283019655932542975 x1972) (<= 0 x1291) (< 0 x1343) (<= 0 x5178) (<= x1509 1461501637330902918203684832716283019655932542975) (< x4602 256) (>= 255 x3479) (not (= x2102 x3494)) (<= x550 1461501637330902918203684832716283019655932542975) (<= 0 x4281) (> 256 x1625) (<= x2225 255) (>= 1461501637330902918203684832716283019655932542975 x4840) (= x1968 x1343) (= x2026 (x777 x4402)) (>= x798 0) (<= x258 1461501637330902918203684832716283019655932542975) (= x25 (> (x1306 (x636 x3708)) 0)) (not (= x1343 x1299)) (<= x1625 255) (>= 1461501637330902918203684832716283019655932542975 x5352) (= x4121 (> (x1306 (x636 x1343)) 0)) (<= 0 x3075) (= (x2312 288) x4885) (<= 0 x446) (= x4181 x3193) (not (= x4298 x4606)) (>= x189 0) x2140 (>= 1461501637330902918203684832716283019655932542975 x4869) (< 0 x4606) (<= 0 x1806) (<= x1269 18446744073709551615) (not (= x3708 x3494)) (< 0 x3708) (<= 0 x1966) (<= x4297 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x4168) (>= x2804 0) (= x1670 (x2601 x4402)) (>= 18446744073709551615 x4504) (= x5096 3583811254) (>= 1461501637330902918203684832716283019655932542975 x1299) (>= 1461501637330902918203684832716283019655932542975 x3446) (<= x2026 255) (> 256 x2537) (< x1806 256) (<= x3193 1461501637330902918203684832716283019655932542975) (>= x2862 0) (>= 255 x3075) (= x220 (x1306 (x636 x3494))) (= x5089 x1966) (<= x3964 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x4181) (<= x2834 1461501637330902918203684832716283019655932542975) (not (= x3494 x4298)) (>= x702 0) (<= 0 x1269) (>= x4168 0) (< 0 x3494) (<= x4606 1461501637330902918203684832716283019655932542975) x2141 (not (= x1343 x2102)) (>= x4068 0) (>= 1461501637330902918203684832716283019655932542975 x2886) (not (= x4735 x3494)) (not (= x3494 x4606)) (<= x4735 1461501637330902918203684832716283019655932542975) (<= 0 x2774) (>= 1461501637330902918203684832716283019655932542975 x798) (= (x3196 x4402) x1806) (not (= x1299 x4606)) (<= 0 x2225) (<= 0 x4181) (>= x2886 0) (= x1022 x1509) (<= 0 x2815) (>= x447 0) (not (= x2102 x4298)) (<= x702 1461501637330902918203684832716283019655932542975) (>= x4328 0) (= (x1662 x4402) x2225) (>= x2881 0) (>= 18446744073709551615 x2804) (not (= x4606 x2102)) (= (not (= 0 x1625)) x2208) (not (= x1299 x2102)) (= (not (= x2026 0)) x4817) (>= 1461501637330902918203684832716283019655932542975 x1343) (>= 255 x3163) (= (x2312 224) x196) (>= 1461501637330902918203684832716283019655932542975 x2774) (<= x4601 255) (>= 1461501637330902918203684832716283019655932542975 x1966) (<= 0 x550) (= x657 (not (= 0 x1670))) (= x566 (x1880 (x636 x1343))) (not (= x1343 x4735))) (and (= (not (= x1870 0)) x2655) (= x2655 x4815) (= x262 x2652) (= x1118 (not (= 0 x1874))) (= x2286 x1061) (> x1015 0) (>= 1461501637330902918203684832716283019655932542975 x2742) (= x2716 x484) (<= 0 x2742) (= x1022 x2995) (= x3775 x429) (= x2511 x2558) (= x886 (not (= x4885 0))) (= x2468 x1238) (= x2339 x3775) (= x4181 x484) (= x4397 0) (= x984 x3894) (= x1451 x579) (= x262 x1067) (= x1270 x3203) (>= x2995 0) (= x3295 x3894) x2960 (= x1963 (not (= 0 x196))) (<= 0 x2339) (= x1118 x3836) (= x2960 (or x377 x2533)) (= x2558 (not (= x1446 0))) (= x3295 (not (= 0 x2841))) (= x2133 x2774) (<= x2339 1461501637330902918203684832716283019655932542975) (= x579 x3203) (= (= 0 x267) x328) (= x1451 x267) (= x3981 x1963) (= x384 0) (= x1467 x886) (= x2072 x2652) (= (x1306 (x636 x3494)) x1015) (= x2468 (not (= 0 x2925))) (= x4804 x3262) (= x4706 x463) (= x2533 (= x2235 0)) (<= x2995 1461501637330902918203684832716283019655932542975) (= (not (= 0 x5343)) x1061) (= x1410 (not x5398)) (= x2235 x1067) (= x1238 x5398) (= (= 0 x4753) x4439) (= x3670 (or x984 x1410)) (= x463 x406) (= x3262 x2133) (= x377 (or x328 x3670)) (= x2080 x4706))) (and (=> (and (= true x580) (not x4439)) x305) (=> (and (and (not (= x4995 2030502250)) (= x370 (= x484 x2716)) (not (= x4995 2023533118)) (not (= x4995 2236579515)) (= 2245473101 x4995) (< x4995 2362143243) (< x4995 2678788150) (= x1716 x2716) (not (= x4995 2134560854)) (not (> 2023533118 x4995))) x4439) (and (=> (and x370 (and (= x4804 x4101) (= x5404 (= x5081 x3262)) (= (x5403 1461501637330902918203684832716283019655932542975 x3262) x5081))) (and (=> (and (= x580 true) (not x5404)) x305) (=> (and (and (= x3116 (= x3203 x412)) (= x412 (x5403 1461501637330902918203684832716283019655932542975 x3203))) x5404) (and (=> (and (= true x580) (not x3116)) x305) (=> (and (and (= x818 x2080) (= x2072 x2002) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x1910) (= (= 0 x1910) x4112)) x3116) (and (=> (and (not x4112) (= x2593 (= x2072 0))) (and (=> x2593 x1008) (=> (and (and (>= 255 x2832) (= x2053 (< 0 x2336)) (>= 255 x3080) (= x1193 (x1443 x5050)) (> 256 x4532) (= x2283 (= 0 x4532)) (>= x3080 0) (= (= 0 x1193) x2057) (= x3544 x5198) (= x1454 (x2601 x5050)) (= (x3793 x5050) x2832) (<= 0 x4532) (= x3080 (x1662 x5050)) (= (x2657 x5050) x4032) (>= x4230 0) (<= 0 x1193) (= x3159 (= x3080 0)) (= (x777 x5050) x4532) (= x121 (= 0 x1633)) (< x4230 256) (>= x2832 0) (= (not x3473) x4409) (= (x966 128) x2336) (= x4914 (= x4230 0)) (<= 0 x1454) (= (= x1454 0) x3473) (= x298 x4613) (= x4613 (not x2283)) (>= 255 x4032) (= x4616 (not x5375)) (= x2308 x453) (= (not x2057) x3946) (= (x3196 x5050) x4230) (= x2076 (not x1501)) (< x2832 256) (<= 0 x4032) (>= 255 x4230) (= (not x121) x2290) (< x3080 256) (< x1454 256) (= x277 x4616) (= x3946 x5405) (>= 255 x1193) (= x2076 x1778) (= x1633 (x1337 x5050)) (= x4409 x2854) (<= x4532 255) (= x5050 (x2828 (x636 x2716) (x956 168) 0)) (> 256 x1193) (<= 0 x1633) (= (not x4914) x453) (= x1501 (= x4032 0)) (> 256 x4032) (<= x1633 255) (< x1633 256) (= x2290 x3596) (>= 255 x1454) (= (not x3159) x3544) (= (= 0 x2832) x5375)) (not x2593)) (and (=> (not x2053) x1008) (=> (and x2053 (and (= (= x5074 0) x2745) (= (x966 160) x5074))) (and (=> (not x2745) x1008) (=> (and (and (and (= x5365 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= x3009 (< 0 x890)) (= x4824 (x832 416)) (> 256 x890) (= (x2828 (x636 x2716) (x956 160) 0) x2875) (>= 255 x890) (>= x890 0) (= (x2989 (+ 24044834009420335638544845215851342251227478490780828673611325350056707489792 x98)) x4474) (= x98 (x5403 26959946667150639794667015087019630673637144422540572481103610249215 x4824)) (= (x2828 (x636 x5365) x2875 0) x3240) (= x890 (x1667 x3240))) (or (and x3009 (= (x636 x5365) x1965)) (and (and (= (x1367 x366) x491) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x2920) (= x366 x1965) (= x1302 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= (x2989 (+ x491 1)) x4241) (= x366 (x2828 (x636 x1302) (x956 161) 0))) (not x3009)))) x2745) x3862))))))) (=> x4112 x1008))))))) (=> (and (not x370) (= x580 true)) x305)))))))
(assert (x4621 x3371))
(assert (= x3244 (and x3096 x1122)))
(assert (= x1912 (and x3497 (not x522))))
(assert (x4842 x761))
(assert (x4842 x4586))
(assert (= x2967 (and x3384 (not x5147))))
(assert (x4842 x537))
(assert (x4842 x2177))
(assert (x4842 x5031))
(assert (x4842 x4074))
(assert (= (and (not x4152) x4057) x4452))
(assert (= x1868 (and x231 x3073)))
(assert (= x2614 (and (not x2053) x5317)))
(assert (= x3662 (and (not x4722) x570)))
(assert (= (or x4427 x2965) x4123))
(assert (= (x4585 (x5250 x1737 1)) (+ 1 (x4585 x1737))))
(assert (x4842 x1439))
(assert (x4842 x2634))
(assert (= (and x2360 (not x4125)) x1797))
(assert (= (and x677 x2849) x2337))
(assert (= (and (not x3116) x4465) x5263))
(assert (x4842 x2430))
(assert (= (and (not x1837) x1241) x1188))
(assert (= (=> (= x4717 x3776) x5091) x4829))
(assert (= (or x5141 x3607 x1500 x468 x246 x3560) x4681))
(assert (= x4357 (and x457 x1394)))
(assert (= (x4585 (x636 x4845)) x4845))
(assert (=> (>= 10000 x2729) (= (x636 x2729) (x956 x2729))))
(assert (= (and x1681 (not x4660)) x441))
(assert (= (x956 2217467699) (x636 2217467699)))
(assert (x4842 x3579))
(assert (= x3070 (or (and x3025 x2135) x858 (and x1276 x248) (and x2551 (not x766)) x1356 (and x108 x4438) (and x5324 x244) (and x1369 (not x4665)) x1503)))
(assert (= x3844 x526))
(assert (x645 x5017))
(assert (x4842 x1984))
(assert (= (or x395 (and (not x3550) x3256)) x883))
(assert (= x5126 (and x3390 x3309)))
(assert (= x1474 (and x3434 x4467)))
(assert (= (and (not x3846) x3166) x799))
(assert (x4842 x2102))
(assert (=> (<= x2197 10000) (= (x636 x2197) (x956 x2197))))
(assert (= (x4585 (x956 242558722)) 242558722))
(assert (x4842 x3097))
(assert (= x1098 (and x1245 x5379)))
(assert (=> (<= x4948 10000) (= (x956 x4948) (x636 x4948))))
(assert (=> (<= x1137 10000) (= (x636 x1137) (x956 x1137))))
(assert (= (x4585 (x956 547091486)) 547091486))
(assert (x4842 x2149))
(assert (= (x4585 (x636 x3155)) x3155))
(assert (= x5144 (and (not x1462) x2974)))
(assert (= x4781 (or x721 x4456)))
(assert (=> (<= x5190 10000) (= (x636 x5190) (x956 x5190))))
(assert (= (x636 398450620) (x956 398450620)))
(assert (= (+ 1 (x4585 x2641)) (x4585 (x5250 x2641 1))))
(assert (x4842 x2143))
(assert (x4842 x1995))
(assert (= (=> (= (= x4138 x2497) x4555) (and (=> (and (= x4012 (< 0 x4138)) (not x4555)) (and (=> (and (and (<= x4691 1461501637330902918203684832716283019655932542975) (<= x4790 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x223) (= (x1744 x4010) x4691) (= x1785 (x5250 x2578 1)) (= x4790 (x4870 x1785)) (= x3035 (= 0 x4790)) (>= 1461501637330902918203684832716283019655932542975 x223) (= x2578 (x5250 x4010 1)) (= x223 (x3024 x2578)) (> 1461501637330902918203684832716283019655932542976 x4691) (> 1461501637330902918203684832716283019655932542976 x223) (<= 0 x4691) (= x4010 (x2828 (x636 x746) x1688 0)) (>= x4790 0)) x4012) (and (=> x3035 x1908) (=> (and (and (or (and (= x1602 (x5250 x1688 1)) x4859) (and (not x4859) (and (= x4211 (x2828 (x636 x4691) x1688 0)) (= x554 (x5250 x4211 1))))) (= x4859 (= x4691 0))) (not x3035)) x2192))) (=> (not x4012) x2145))) (=> x4555 x2988))) x3675))
(assert (= (x4585 (x5250 x972 1)) (+ (x4585 x972) 1)))
(assert (= (and x1083 (not x4205)) x1400))
(assert (x4842 x4397))
(assert (= (and x2761 x867) x560))
(assert (x4621 x2370))
(assert (= (=> (and (= x4395 x5110) (= x5252 x1711)) x3980) x4024))
(assert (x4842 x3348))
(assert (x4842 x4134))
(assert (x4842 x10))
(assert (=> (<= x4144 10000) (= (x956 x4144) (x636 x4144))))
(assert (= (=> (and (or (and (and (and (= x3734 (x2935 x3840)) (= (= x3734 0) x3597) (>= x3734 0) (> 1461501637330902918203684832716283019655932542976 x3734) (>= 1461501637330902918203684832716283019655932542975 x3734)) (or (and (not x3597) (and (= x1459 (x2989 (+ 96 x3827))) (= x2348 (x5250 x3246 1)) (<= 0 x311) (= (x2828 (x636 x311) x624 0) x3246) (= x2658 (x2828 (x636 x4134) x624 0)) (= x3180 (x5250 x3840 1)) (> 1461501637330902918203684832716283019655932542976 x311) (<= x311 1461501637330902918203684832716283019655932542975) (= (x181 x3180) x311) (= (x5250 x945 1) x168) (= (x5250 x2658 1) x945) (= x1459 x3776))) (and (and (= x4615 (x5250 x144 1)) (= (x2828 (x636 x4134) x624 0) x144) (= (x5250 x3840 1) x3396) (= x3983 (x5250 x4615 1)) (= x278 (x2989 (+ 96 x3827))) (= x278 x3776)) x3597))) (not x4891)) (and (and (and (= x499 (x2935 x3840)) (= (x1843 (- x1311 x499)) x1469) (> 1461501637330902918203684832716283019655932542976 x499) (= (> x1469 0) x3945) (<= 0 x499) (<= x499 1461501637330902918203684832716283019655932542975)) (or (and (and (<= 0 x1721) (= x3776 x1117) (= x4812 (x2828 (x636 x1311) x624 0)) (= (x5250 x1136 1) x4517) (= (x2828 (x636 x4134) x624 0) x2190) (= x1117 (x2989 (+ 96 x3827))) (< x1721 1461501637330902918203684832716283019655932542976) (= (x608 x868) x1721) (= x433 (x5250 x2641 1)) (= (x2828 (x636 x1311) x624 0) x868) (= (x2828 (x636 x1721) x624 0) x2641) (= (x5250 x2190 1) x1136) (>= 1461501637330902918203684832716283019655932542975 x1721)) x3945) (and (not x3945) (and (= (x2828 (x636 x1311) x624 0) x634) (= (x5250 x4342 1) x4654) (= x3776 x970) (= (x2989 (+ x3827 96)) x970) (= x2097 (x5250 x4654 1)) (= x4342 (x2828 (x636 x4134) x624 0)))))) x4891)) (= x4891 (ite (< x2714 x3271) (not (= x1311 0)) (< x2714 x3271)))) x4829) x3758))
(assert (= (=> (and (or (and (= (x5250 x2058 2) x3210) x1165) (and (not x1165) (= x797 (x2828 (x636 x3691) x2058 0)))) (= (= 0 x3691) x1165)) x1738) x4236))
(assert (x4842 x4602))
(assert (= (=> (and (= (< 0 x3342) x32) (< x215 1461501637330902918203684832716283019655932542976) (= (x1843 (- x2716 x215)) x3342) (<= x215 1461501637330902918203684832716283019655932542975) (<= 0 x215)) (and (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x3964) (>= x3964 0) (< x3964 1461501637330902918203684832716283019655932542976) (= x380 452) (= x1004 x3964)) (not x32)) x4883) (=> (and x32 (and (or (and (and (= x5239 1) (> 1461501637330902918203684832716283019655932542976 x1368) (not (= 1857877511 x515)) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x2034) (= x19 (x1306 (x636 x4735))) (< 0 x19) (= 4 x5002) (<= 0 x1368) (>= 1461501637330902918203684832716283019655932542975 x1368) (= x5002 4) (= x3145 32) (not (= 1856199391 x515)) (> 2217467699 x515) (not (> 4 x5002)) (not (> 988262939 x515)) (not (< x515 1856199391)) (= x515 1865448899)) x1736) (and (and (= (= x1972 x2716) x4132) (or (and (not x4132) (and (and x1245 (and (>= x5246 0) (> 2217467699 x2799) (not (= x2799 1856199391)) (= x3145 32) (= 4 x3038) (= (x1306 (x636 x2102)) x3602) (= 1865448899 x2799) (not (< x3038 4)) (<= x5246 1461501637330902918203684832716283019655932542975) (not (< x2799 988262939)) (not (> 1856199391 x2799)) (= 4 x3038) (> 1461501637330902918203684832716283019655932542976 x5246) (= x12 50292402827334880472107169365697159231523039388532301717704428044325102813184) (< 0 x3602) (= 1 x5239) (not (= x2799 1857877511)))) (= x1245 (= x2102 x2716)))) (and x4132 (and (= x4124 4) (= x5239 1) (= x3145 32) (not (< x3100 988262939)) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x2241) (< x3100 2217467699) (< x3917 1461501637330902918203684832716283019655932542976) (= x4818 (x1306 (x636 x1972))) (not (< x4124 4)) (= 4 x4124) (<= x3917 1461501637330902918203684832716283019655932542975) (= x3100 1865448899) (< 0 x4818) (<= 0 x3917) (not (< x3100 1856199391)) (not (= x3100 1856199391)) (not (= x3100 1857877511)))))) (not x1736))) (and (= (= x4735 x2716) x1736) (= 452 x839)))) x1591))) x3862))
(assert (= x2288 (or x1173 x175)))
(assert (x4842 x3198))
(assert (x4842 x3788))
(assert (= x2851 (and x4924 (not x1353))))
(assert (= x4340 (and x1037 x1527)))
(assert (x4842 x3271))
(assert (= (and x1054 (not x995)) x3952))
(assert (x4842 x3307))
(assert (x4842 x3532))
(assert (= x4126 (and (not x4861) x3259)))
(assert (= (x4585 (x636 x4289)) x4289))
(assert (= (x4585 (x636 x915)) x915))
(assert (x4842 x2746))
(assert (= (and x4407 x1327) x3517))
(assert (= (and x5379 (not x1245)) x4704))
(assert (x4842 x4543))
(assert (x4842 x1095))
(assert (= (and x3638 x1561) x2993))
(assert (x4842 x4813))
(assert (x4842 x2712))
(assert (x4842 x1436))
(assert (x4842 x1701))
(assert (= (and x1350 x2678) x3000))
(assert (x4842 x1127))
(assert (= (and x4424 x1440) x3041))
(assert (x4842 x2720))
(assert (x4842 x851))
(assert (x4842 x3719))
(assert (= x989 x5271))
(assert (= x2500 (or x495 x870)))
(assert (x4842 x696))
(assert (x4621 x4556))
(assert (= (or x4835 x1842) x1179))
(assert (x4842 x1066))
(assert (= x4478 (=> (= x4393 (= 0 x1809)) (and (=> (and (not x4393) (and (= (x5403 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3579) x2725) (= (x2989 (+ x2385 x2725)) x1127) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1377) (and (> 32 x1377) (= true (<= x1377 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x97) (= x3579 (x2989 (+ 31 x1377))))) (and (=> (and (and (= x1215 (x898 x2385)) (= x3275 (= x1215 0))) (not x97)) (and (=> (and x3275 (and (= x4319 x1127) (= x747 x2210) (= x5086 x3581) (= x1214 x2236))) x2165) (=> (not x3275) x1008))) (=> (and (= true x580) x97) x305))) (=> x4393 x1008)))))
(assert (x4842 x1786))
(assert (x645 x2001))
(assert (=> (>= 10000 x4845) (= (x956 x4845) (x636 x4845))))
(assert (x4842 x101))
(assert (= (+ (x4585 x4754) 1) (x4585 (x5250 x4754 1))))
(assert (= x4302 (x4585 (x636 x4302))))
(assert (= x526 x2435))
(assert (= (and (not x2892) x1997) x5135))
(assert (= x1403 (and (not x4462) x937)))
(assert (= (and x3160 x910) x2167))
(assert (x4842 x3996))
(assert (= x2021 (and x4126 (not x738))))
(assert (= (and (not x5119) x4195) x3973))
(assert (= (and x2224 (not x5337)) x1048))
(assert (x4842 x2702))
(assert (x4842 x4948))
(assert (= x4757 (=> (and (= x1205 x1864) (= x1831 x3632)) x2155)))
(assert (x4842 x2001))
(assert (= (and x1781 x182) x1110))
(assert (x4621 x3147))
(assert (= (and x1845 (not x1933)) x4443))
(assert (= x5394 (and x372 x2384)))
(assert (x4842 x5037))
(assert (x4842 x438))
(assert (x4842 x1935))
(assert (= x3731 (=> (and (= x4033 x2015) (= x486 x3538) (= x1036 x4271) (= x3437 x5320)) x4854)))
(assert (= x208 (and x2259 (not x2747))))
(assert (x645 x2688))
(assert (x4842 x3593))
(assert (x4842 x1302))
(assert (x4842 x3143))
(assert (x4842 x311))
(assert (= x1328 (or x2662 x77 x109 x4516 x3200 x1723)))
(assert (= x2132 (and (not x2104) x1100)))
(assert (= x3799 (and (not x252) x3372)))
(assert (x645 x4772))
(assert (= x4916 (and (not x4156) x2874)))
(assert (x4842 x4036))
(assert (=> (>= 10000 x1317) (= (x636 x1317) (x956 x1317))))
(assert (x4842 x3487))
(assert (= (=> (and (= 0 x2504) (= x2955 x4849)) x4929) x387))
(assert (x645 x3546))
(assert (= (or x4657 x1246) x1733))
(assert (x4842 x1670))
(assert (= (+ (x4585 x3584) 1) (x4585 (x5250 x3584 1))))
(assert (= (or x3150 x5148) x5024))
(assert (x4842 x4720))
(assert (= (x4585 (x5250 x598 1)) (+ (x4585 x598) 1)))
(assert (x4842 x2009))
(assert (= (and (not x5286) x5309) x1518))
(assert (x4842 x2848))
(assert (= x3197 (and (not x3727) x3148)))
(assert (=> (<= x1311 10000) (= (x636 x1311) (x956 x1311))))
(assert (= (x4585 (x956 2858086653)) 2858086653))
(assert (x4842 x5020))
(assert (x4842 x2456))
(assert (= x1593 (and x5319 (not x3803))))
(assert (= (and x925 (not x3414)) x1037))
(assert (x4842 x477))
(assert (= x2983 (and x3435 (not x2949))))
(assert (x4842 x33))
(assert (x4842 x5372))
(assert (x4842 x807))
(assert (= (and x2884 x5242) x2226))
(assert (= (or x1474 x5046 x4174 x3598 x5053 x5312) x1535))
(assert (x4842 x1184))
(assert (x4842 x142))
(assert (x4842 x1382))
(assert (x4842 x2912))
(assert (x4842 x4280))
(assert (= (=> (and (= x4271 x4009) (= 0 x3437)) x3731) x2323))
(assert (= x335 (and (not x3058) x3681)))
(assert (= (x4585 (x636 x1343)) x1343))
(assert (x4842 x1026))
(assert (= x1402 (or x3566 x3551)))
(assert (x4842 x256))
(assert (= x4921 (and x4125 x2360)))
(assert (= (or x763 x4725 x3079 x810 x2561 x3236) x2932))
(assert (= x3718 (or x4577 x2647)))
(assert (= x4035 (and x2191 x3351)))
(assert (x4621 x5037))
(assert (x4842 x178))
(assert (=> (>= 10000 x2548) (= (x636 x2548) (x956 x2548))))
(assert (x4842 x3395))
(assert (x4842 x1209))
(assert (= x2899 (and x1323 x3898)))
(assert (x4842 x2442))
(assert (= x3953 (and x3495 (not x1365))))
(assert (x4621 x4948))
(assert (x4842 x2087))
(assert (= (x4585 (x5250 x1397 1)) (+ 1 (x4585 x1397))))
(assert (= x973 (and (not x1727) x2817)))
(assert (x4621 x3092))
(assert (= (or x4783 x2154) x233))
(assert (x4842 x4624))
(assert (x4621 x3949))
(assert (= (and x2617 x3483) x1503))
(assert (= (and (not x47) x4160) x3326))
(assert (= (and x4334 x603) x4485))
(assert (= (and (not x749) x2004) x3730))
(assert (= (x4585 (x5250 x3043 1)) (+ (x4585 x3043) 1)))
(assert (= x3124 (and x1771 x3339)))
(assert (x4842 x5165))
(assert (= x1673 (and (not x2408) x3561)))
(assert (= (=> (= x3160 (= x1632 0)) (and (=> (and (and (= x3716 (x2989 (+ x586 x2803))) (= x3893 (x2989 (+ x3182 31))) (= (x5403 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3893) x586) (= x3023 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3182)) (< x3182 32)) (> x3182 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (not x3160)) (and (=> (and (and (= (x5250 x3610 1) x3824) (= (x3792 x3824) x2816) (>= x2816 0) (= (x1223 x2803) x3599) (= x3133 (> x2816 0)) (<= x2816 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3023)) (and (=> (and (and (= (= x1411 0) x4906) (= x5206 (= 0 x4562)) (= x4562 (x5403 x96 x1700)) (= x96 (ite (not x4906) 1 0)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1411) x1930) (= (x3792 x3824) x1411) (<= x1411 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1700 (ite (> x3599 x1930) 1 0)) (<= 0 x1411)) x3133) (and (=> (and (and (= (mod (* x3599 x1411) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4636) (= x4723 (div x4636 1000000000000000000)) (= x3586 (< x2072 x4723))) x5206) (and (=> (and x3586 (and (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2072)) x1623) (= x1828 (< x1623 0)))) (and (=> x1828 x989) (=> (and (not x1828) (and (= (= 0 (ite x1125 1 0)) x4731) (= x1125 (< 115792089237316195423570985008687907853269984665640564039457 x2002)))) (and (=> (and x4731 (and (= (x5403 x1401 x2052) x595) (= x1401 (ite (not x3703) 1 0)) (= x4955 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3882)) (= (= x3882 0) x3703) (= (ite (< x4955 1000000000000000000) 1 0) x2052) (= (mod (* x2072 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3882) (= x4358 (= x595 0)))) (and (=> (not x4358) x989) (=> (and x4358 (and (= (mod (* 1000000000000000000 x3882) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2581) (= x4235 (> x3599 0)))) (and (=> (not x4235) x526) (=> (and (and (= x4389 (div x4775 1000000000000000000)) (= x4775 (div x2581 x3599)) (<= x2158 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3792 x3824) x2158) (= (< x2158 x4389) x2463) (>= x2158 0)) x4235) (and (=> x2463 x989) (=> (and (and (= x2072 x2347) (= 0 x4573) (= (x1843 (- x2158 x4389)) x5331)) (not x2463)) x4603))))))) (=> (not x4731) x989))))) (=> (and (and (= (> 0 x1694) x2763) (= x1694 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4723)))) (not x3586)) (and (=> x2763 x989) (=> (and (not x2763) (= x2110 (> x4723 x2072))) (and (=> x2110 x989) (=> (and (and (= (x1843 (- x2072 x4723)) x4468) (= x4723 x2347) (= x4573 x4468)) (not x2110)) x4603))))))) (=> (not x5206) x989))) (=> (and (not x3133) (and (= 0 x256) (= x2072 x1472))) x251))) (=> (and x3023 (= true x580)) x305))) (=> x3160 x1008))) x4444))
(assert (x3529 x3532))
(assert (x4842 x5143))
(assert (x4842 x2546))
(assert (= (and x5333 x2564) x5087))
(assert (= (and x1997 x2892) x4256))
(assert (= x1211 (and x1944 x1724)))
(assert (= x485 (or x3956 x2203)))
(assert (= x2037 (and x1926 (not x2777))))
(assert (= (and (not x1763) x547) x2646))
(assert (= (x4585 (x5250 x3459 1)) (+ 1 (x4585 x3459))))
(assert (x4621 x1995))
(assert (x4842 x2451))
(assert (= (and x904 x4791) x154))
(assert (x4842 x2799))
(assert (= (and x4542 x1187) x17))
(assert (= (and x4578 x3154) x145))
(assert (= (x4585 (x636 x2623)) x2623))
(assert (x4842 x1962))
(assert (x4842 x96))
(assert (x4842 x3153))
(assert (x4842 x381))
(assert (x4842 x2124))
(assert (=> (<= x4081 10000) (= (x636 x4081) (x956 x4081))))
(assert (x4842 x5080))
(assert (= x650 (x4585 (x636 x650))))
(assert (= (and x2121 x4393) x3229))
(assert (=> (>= 10000 x5280) (= (x956 x5280) (x636 x5280))))
(assert (x4842 x3897))
(assert (x4842 x2056))
(assert (= (and x1562 x370) x1774))
(assert (= (and x4279 (not x22)) x2335))
(assert (x4842 x1740))
(assert (= x177 (and x2941 x5328)))
(assert (x4842 x2467))
(assert (= (and x2846 (not x3988)) x398))
(assert (=> (<= x2205 10000) (= (x956 x2205) (x636 x2205))))
(assert (= x2824 (and (not x2341) x648)))
(assert (=> (>= 10000 x3420) (= (x956 x3420) (x636 x3420))))
(assert (= x297 (and (not x4844) x2671)))
(assert (= x4056 (and x3204 x3235)))
(assert (= x2010 (or x2275 x4450 x3951 x5184 x4678 x5161)))
(assert (= x4086 (and (not x3028) x1351)))
(assert (x4842 x2736))
(assert (x4842 x5200))
(assert (=> (<= x2370 10000) (= (x956 x2370) (x636 x2370))))
(assert (x4842 x4145))
(assert (x4842 x5057))
(assert (= (and (=> (and x5211 (and (and (= x3058 (ite (< 1 x3271) (not (= 0 x915)) (< 1 x3271))) (>= 1461501637330902918203684832716283019655932542975 x915) (= x35 (x5250 x1504 1)) (= x1504 (x2828 (x636 x3860) x2058 0)) (< x915 1461501637330902918203684832716283019655932542976) (>= x915 0) (= (x1322 x35) x915)) (or (and x3058 (and (= (x1448 x3172) x809) (= x704 (x2828 (x636 x915) x2058 0)) (<= x809 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5185 (< x809 x837)) (<= 0 x809) (= (x5250 x704 2) x3172) (= x1027 (not x5185)))) (and (= x3058 x1027) (not x3058))))) x4952) (=> (and (not x5211) (and (= x3860 x4954) (= x3201 0))) x1557)) x1409))
(assert (= (=> (= (= 0 x4996) x2264) (and (=> (and (= x5392 x5270) x2264) x2741) (=> (and (= x5368 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x111) (and (> 32 x111) (= (<= x111 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not x2264)) (and (=> (and (= x5270 x5392) x5368) x2741) (=> (and (and (= 32 x4457) (= 1 x3530) (= x3996 x5270)) (not x5368)) x1680))))) x1903))
(assert (= x4107 false))
(assert (= x2184 (or x3912 x1674 x828 x4142 x4396 x3514)))
(assert (x4842 x4394))
(assert (= (and x4044 x390) x3858))
(assert (= (and x641 x2642) x304))
(assert (x4842 x4967))
(assert (x4842 x5153))
(assert (x4842 x2663))
(assert (x4621 x4776))
(assert (x4842 x2138))
(assert (x4842 x2473))
(assert (= x3976 (and x3988 x2846)))
(assert (=> (>= 10000 x2102) (= (x636 x2102) (x956 x2102))))
(assert (x4842 x12))
(assert (x645 x217))
(assert (x4842 x1273))
(assert (= x403 x4346))
(assert (= x1601 (x4585 (x636 x1601))))
(assert (= x1513 x4440))
(assert (x4842 x3206))
(assert (x4842 x4691))
(assert (= true x3838))
(assert (= (or x535 x2590) x385))
(assert (= x2111 (=> (= x1805 (= x4395 0)) (and (=> x1805 x1008) (=> (and (= (or (and (> 32 x1711) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1711) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1711)) x1791) (not x1805)) (and (=> (and (= true x580) x1791) x305) (=> (and (and (= (x2981 x2780) x2630) (= (= 0 x2630) x2251)) (not x1791)) (and (=> (not x2251) x1008) (=> x2251 x510)))))))))
(assert (= x5048 (and x769 x5033)))
(assert (x4842 x265))
(assert (= x4552 (and x4542 (not x1187))))
(assert (x4842 x3694))
(assert (x4842 x4940))
(assert (x4842 x3392))
(assert (x4842 x348))
(assert (x4842 x614))
(assert (x4842 x579))
(assert (x4842 x3853))
(assert (x645 x1381))
(assert (x4842 x3057))
(assert (x4842 x3964))
(assert (= (=> (and (= x2189 (= 0 x4996)) (or (not x2189) x2189)) x1903) x3627))
(assert (x4842 x2931))
(assert (x4842 x4886))
(assert (= x1849 (and x2659 x4593)))
(assert (= x1894 (and (not x1703) x397)))
(assert (= x4309 (and (not x229) x2591)))
(assert (= x3355 (and (not x1994) x3222)))
(assert (= (x4585 (x636 x1302)) x1302))
(assert (= x5101 (=> (and (= x4394 0) (= x3710 x1536)) x646)))
(assert (= x1429 (and (not x3008) x85)))
(assert (x4842 x2092))
(assert (x4842 x3331))
(assert (= x467 (and x4019 x4235)))
(assert (x4842 x2293))
(assert (= x3617 (or x530 x4643 x4674 x1089 x4242 x731 x2170 x3799 x2462)))
(assert (= x1901 (x4585 (x636 x1901))))
(assert (x4842 x2560))
(assert (x4621 x3036))
(assert (= (+ 1 (x4585 x4010)) (x4585 (x5250 x4010 1))))
(assert (x4842 x400))
(assert (x2961 x3959 x5109))
(assert (= (and x5146 (not x3049)) x4791))
(assert (x4621 x4845))
(assert (x4842 x4845))
(assert (= (and x2586 x4419) x2099))
(assert (= (+ (x4585 x1136) 1) (x4585 (x5250 x1136 1))))
(assert (x4842 x4051))
(assert (x4842 x70))
(assert (x4842 x2606))
(assert (= (and x2645 x2902) x570))
(assert (= (x4585 (x636 x1408)) x1408))
(assert (x4842 x3809))
(assert (x4842 x2220))
(assert (= x5278 (and x3102 (not x2193))))
(assert (x4842 x2356))
(assert (= x63 (and x2100 x323)))
(assert (x4842 x434))
(assert (= x471 (and x5387 x2517)))
(assert (= (x4585 (x5250 x4654 1)) (+ 1 (x4585 x4654))))
(assert (x5391 x2144))
(assert (= (and x2191 (not x3351)) x411))
(assert (x4842 x4574))
(assert (x4842 x4652))
(assert (= (and x1812 x1696) x5034))
(assert (= (and x4921 x3790) x2075))
(assert (x4842 x588))
(assert (x4842 x1451))
(assert (x4842 x4007))
(assert (x4842 x2676))
(assert (x4842 x2081))
(assert (x4842 x1343))
(assert (x645 x13))
(assert (x4842 x3849))
(assert (x4842 x3870))
(assert (x4842 x4664))
(assert (= x3166 (and x3858 (not x4448))))
(assert (= (+ 1 (x4585 x4778)) (x4585 (x5250 x4778 1))))
(assert (= x1619 (and x756 x3225)))
(assert (= (x4585 (x636 x1618)) x1618))
(assert (x4842 x4994))
(assert (x4842 x2287))
(assert (x4842 x774))
(assert (x4842 x299))
(assert (x4842 x2977))
(assert (=> (>= 10000 x1396) (= (x636 x1396) (x956 x1396))))
(assert (x4842 x2247))
(assert (= (and (not x2904) x4617) x4276))
(assert (x4842 x3342))
(assert (= (or x1581 (and (not x4460) x2717)) x4635))
(assert (x4842 x3658))
(assert (x4842 x65))
(assert (x4842 x2581))
(assert (= x5340 (and x3497 x522)))
(assert (x4842 x1177))
(assert (x4621 x746))
(assert (x4842 x2294))
(assert (=> (<= x3267 10000) (= (x636 x3267) (x956 x3267))))
(assert (= (x4585 (x956 1466279372)) 1466279372))
(assert (= x574 (=> (and (= x2077 x2236) (= x747 x3431) (= x3631 x1809) (= x5086 x3538) (= x4060 x1377)) x4085)))
(assert (= (x4585 (x636 x3671)) x3671))
(assert (x4842 x4166))
(assert (= (or x4053 x4919) x4889))
(assert (= (x4585 (x956 2691771752)) 2691771752))
(assert (x4842 x2413))
(assert (=> (<= x528 10000) (= (x956 x528) (x636 x528))))
(assert (= (+ 1 (x4585 x3824)) (x4585 (x5250 x3824 1))))
(assert (= x88 (and (not x1788) x2206)))
(assert (= x1549 (and (not x4176) x5092)))
(assert (x4842 x907))
(assert (x4842 x5174))
(assert (= (or x2932 x3830) x558))
(assert (x4842 x2431))
(assert (x4842 x3203))
(assert (= x3573 (and x711 x24)))
(assert (= (x956 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x636 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (=> (<= x746 10000) (= (x956 x746) (x636 x746))))
(assert (= (and x2211 x5335) x4930))
(assert (= (and x4791 (not x904)) x929))
(assert (= (=> (and (or x4106 (not x4106)) (= x4106 (= 0 x4253))) x1611) x3653))
(assert (= (and x2463 x467) x1042))
(assert (= (and (not x5249) x385) x4150))
(assert (= x4496 (and x1575 x647)))
(assert (x4842 x5400))
(assert (x4842 x4382))
(assert (= x311 (x4585 (x636 x311))))
(assert (= x5317 (and x1180 (not x2593))))
(assert (x4842 x4898))
(assert (= (and (not x4420) x3837) x344))
(assert (= (x636 1000000000000000000) (x956 1000000000000000000)))
(assert (x4842 x4589))
(assert (= (or x2309 x1341) x5083))
(assert (x4842 x4639))
(assert (= x3607 (and x3960 (not x4865))))
(assert (= x4795 (and (not x1030) x3448)))
(assert (x4842 x586))
(assert (= (or x960 x3491 x3569 x841 x4035 x3666) x5112))
(assert (= (=> (and (= x5098 x4880) (= 0 x503)) x479) x699))
(assert (= (or x675 x944 x3985 x3797) x1629))
(assert (x4842 x1269))
(assert (x4842 x2639))
(assert (= (and (not x2085) x4529) x4324))
(assert (x4842 x4124))
(assert (x4842 x5070))
(assert (= (and x5224 x5021) x490))
(assert (x4842 x4504))
(assert (= (and x3076 x4841) x150))
(assert (= x305 (=> (or (not x580) x580) x4887)))
(assert (= (and x5199 (not x4435)) x3053))
(assert (= x2849 (and x1316 (not x2889))))
(assert (= (and (not x5155) x4414) x2638))
(assert (=> (>= 10000 x650) (= (x636 x650) (x956 x650))))
(assert (x4621 x783))
(assert (x4842 x1034))
(assert (x4842 x201))
(assert (= (and (not x1251) x4163) x2846))
(assert (= (x4585 (x5250 x4554 1)) (+ (x4585 x4554) 1)))
(assert (= x4809 (=> (and (= x800 x4591) (= x2376 x807)) x5203)))
(assert (x4842 x2583))
(assert (= (+ (x4585 x1884) 2) (x4585 (x5250 x1884 2))))
(assert (= (+ (x4585 x3610) 1) (x4585 (x5250 x3610 1))))
(assert (x4842 x2742))
(assert (x4842 x3443))
(assert (x4842 x1434))
(assert (= x1531 (=> (and (= x2118 x4025) (= x4253 x5346)) x3653)))
(assert (= x21 (or (and x1188 x2023) (and x749 x2004))))
(assert (x4842 x1806))
(assert (x4842 x296))
(assert (= x3368 (and x2351 x104)))
(assert (x4842 x2623))
(assert (= x5374 (=> (and (= x2254 x2327) (= x171 x3694)) x3904)))
(assert (x4842 x566))
(assert (= (and x2835 (not x2066)) x3094))
(assert (x4842 x1032))
(assert (= (and x2194 x3759) x4590))
(assert (= (and x5333 (not x2564)) x1131))
(assert (x4842 x2176))
(assert (x4842 x3370))
(assert (= x988 (and x2344 (not x5065))))
(assert (x4842 x3770))
(assert (x4842 x2434))
(assert (= (or x346 x536) x3556))
(assert (x4842 x76))
(assert (x4621 x434))
(assert (x4621 x3155))
(assert (= (x636 405663989) (x956 405663989)))
(assert (= (and x5231 (not x3389)) x3732))
(assert (= (x4585 (x636 x3267)) x3267))
(assert (x4842 x1368))
(assert (x4842 x3949))
(assert (x4842 x314))
(assert (x4842 x4116))
(assert (= (and x1183 x875) x5188))
(assert (x2961 x967 x95))
(assert (= x2205 (x4585 (x636 x2205))))
(assert (= (or (and (not x4238) x3789) x930 (and x2580 x51) (and x4377 (not x2213)) x1800 (and x3327 x744)) x1842))
(assert (x4842 x2772))
(assert (x4842 x524))
(assert (= (+ 1 (x4585 x945)) (x4585 (x5250 x945 1))))
(assert (x4842 x585))
(assert (x4842 x2670))
(assert (= x474 (and x1659 (not x3132))))
(assert (x4842 x849))
(assert (= (=> (and (= (> x1472 0) x575) (or (and x575 (and (> 256 x3621) (<= 0 x3621) (>= 255 x3621) (= x3621 (x1470 x1227)) (= x3109 (= x3621 0)) (= x1227 (x2828 (x636 x2716) (x956 163) 0)))) (and (= x3109 x575) (not x575)))) x3948) x251))
(assert (= x742 (or (and (not x1259) x4258) (and x3168 x138))))
(assert (= x227 (and (=> (and (and (= x4144 x1311) (= x2714 1)) (not x4888)) x3758) (=> (and (and (= x712 x4144) (= x732 x624) (= x4232 x2716)) x4888) x1216))))
(assert (= x989 x492))
(assert (= (and (not x719) x3463) x611))
(assert (= (=> (and (= x1318 x3901) (= x167 0)) x4020) x2173))
(assert (x4842 x2690))
(assert (= x2953 (and x2632 x511)))
(assert (x4842 x2443))
(assert (x4842 x1652))
(assert (= x1008 x1908))
(assert (x4842 x3169))
(assert (= x371 (and (not x494) x4982)))
(assert (= (x4585 (x636 x268)) x268))
(assert (x4842 x3408))
(assert (= x3147 (x4585 (x636 x3147))))
(assert (= (and (not x3736) x1483) x2351))
(assert (x4842 x4537))
(assert (= (and x611 (not x2530)) x960))
(assert (= x3636 (=> (and (= x4253 x4148) (= x5063 x4025)) x3653)))
(assert (x4842 x4711))
(assert (x4621 x4941))
(assert (= x4245 (x4585 (x636 x4245))))
(assert (x4842 x3193))
(assert (= (and x4150 (not x2108)) x3956))
(assert (= (and x4154 x2526) x4438))
(assert (x4842 x2980))
(assert (x4842 x2649))
(assert (= x2197 (x4585 (x636 x2197))))
(assert (x4842 x3085))
(assert (x4842 x5315))
(assert (= (and (not x3490) x3684) x2884))
(assert (x4842 x5252))
(assert (x4842 x3064))
(assert (x4842 x609))
(assert (= x4155 (and x4986 (not x4189))))
(assert (x4842 x4962))
(assert (= x507 (and x2224 x5337)))
(assert (= x5344 (or x1914 x4734 x2352 x3878 x1131 x3779)))
(assert (= (=> (and (= x5011 x3333) (= x1950 0)) x3496) x778))
(assert (= (x4585 (x5250 x5384 1)) (+ (x4585 x5384) 1)))
(assert (= x5 (and x736 (not x698))))
(assert (x4842 x5152))
(assert (x4842 x666))
(assert (x4842 x528))
(assert (x4842 x2945))
(assert (x4842 x2721))
(assert (x4842 x4717))
(assert (= (or x115 x5007) x23))
(assert (x4842 x3066))
(assert (= (and (not x5103) x973) x295))
(assert (x4842 x5008))
(assert (= x3068 (and x3644 x1828)))
(assert (x4842 x1864))
(assert (x4842 x3637))
(assert (= x3619 (or x411 x5112)))
(assert (= x3753 (x4585 (x636 x3753))))
(assert (= (and x1031 (not x2050)) x5289))
(assert (x4842 x667))
(assert (=> (<= x1618 10000) (= (x636 x1618) (x956 x1618))))
(assert (x4621 x1408))
(assert (x4842 x4663))
(assert (x4842 x2891))
(assert (= x2610 (and (not x3455) x3110)))
(assert (= (=> (and (or (not x1336) x1336) (= x1336 (= 0 x3632))) x1431) x2155))
(assert (= (x956 117300739) (x636 117300739)))
(assert (= (or x2922 (and x4320 x1976) (and x913 x871) x4788 x5097) x4312))
(assert (= x810 (and x397 x1703)))
(assert (x4842 x5001))
(assert (x645 x2422))
(assert (= (and x2175 (not x4642)) x4445))
(assert (= x864 (and (not x610) x1532)))
(assert (= x2512 (and (=> (and x3115 (and (and (> 1461501637330902918203684832716283019655932542976 x4736) (>= 1461501637330902918203684832716283019655932542975 x4736) (<= 0 x4736) (= x1757 (ite (< 1 x3271) (not (= x4736 0)) (< 1 x3271))) (= x3879 (x5250 x1860 1)) (= x4736 (x4511 x3879)) (= (x2828 (x636 x3949) x1283 0) x1860)) (or (and (and (= x2455 (x1430 x1890)) (= x1890 (x5250 x4217 2)) (= (not x4423) x2050) (<= x2455 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4217 (x2828 (x636 x4736) x1283 0)) (<= 0 x2455) (= (> x4931 x2455) x4423)) x1757) (and (= x1757 x2050) (not x1757))))) x735) (=> (and (not x3115) (and (= 0 x2661) (= x3949 x1618))) x5332))))
(assert (=> (<= x2702 10000) (= (x636 x2702) (x956 x2702))))
(assert (x4842 x4093))
(assert (x4842 x1809))
(assert (x4842 x2400))
(assert (x4842 x3901))
(assert (= x4300 (and (not x3231) x3977)))
(assert (x4621 x2266))
(assert (=> (>= 10000 x1901) (= (x956 x1901) (x636 x1901))))
(assert (x4842 x4522))
(assert (= x4291 (and (not x4731) x3113)))
(assert (x4621 x2197))
(assert (= (or x829 x3022) x4366))
(assert (= x1059 (and x3526 (not x1391))))
(assert (= (and x3677 (not x1112)) x1249))
(assert (= x584 (and x1849 (not x508))))
(assert (= x4835 (and (not x54) x834)))
(assert (x645 1461501637330902918203684832716283019655932542975))
(assert (= x1101 (and (not x863) x5188)))
(assert (= (or x3617 x1734) x793))
(assert (x4842 x484))
(assert (= x2221 (and x4445 (not x5212))))
(assert (= (and x2944 x3101) x3200))
(assert (x4621 x3019))
(assert (= x3526 (and (not x449) x357)))
(assert (x4842 x2236))
(assert (= (+ (x4585 x5137) 1) (x4585 (x5250 x5137 1))))
(assert (= (x956 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x636 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (x4842 x2609))
(assert (= x1999 (and x4443 (not x160))))
(assert (= (=> (and (or (not x3550) x3550) (= (= 0 x4395) x3550)) x2111) x3980))
(assert (= x1800 (and x4506 x5350)))
(assert (= x5262 (or (and x3848 x1428) x63 (and x4485 x1919) (and (not x3029) x4909) (and (not x947) x266) x2458)))
(assert (= (and (not x2632) x511) x3495))
(assert (x4842 x2119))
(assert (= (and x3736 x1483) x1699))
(assert (= x4694 (x4585 (x636 x4694))))
(assert (x4842 x3647))
(assert (x4842 x687))
(assert (x4842 x3589))
(assert (x4842 x969))
(assert (= x1974 (and (not x2938) x4729)))
(assert (= (and (not x1620) x5363) x1556))
(assert (x4842 x1564))
(assert (= x4482 (and x1849 x508)))
(assert (x4842 x990))
(assert (= (or x4451 x924 x1645 x3618) x4082))
(assert (= x3289 (x4585 (x636 x3289))))
(assert (= (and (not x1668) x445) x703))
(assert (x4842 x1721))
(assert (x4842 x1146))
(assert (x4842 x1015))
(assert (x4621 x3753))
(assert (x4842 x1695))
(assert (= (x4585 (x636 x1317)) x1317))
(assert (x4842 x4389))
(assert (= x3192 (=> (and (= x1896 x1560) (= x1104 x4639)) x4677)))
(assert (= (and x3129 x3347) x2590))
(assert (= (and x5019 (not x4261)) x356))
(assert (= x5231 (and x4259 x4913)))
(assert (= x4788 (and x684 x1677)))
(assert (= x3239 (or x726 x4755)))
(assert (x4842 x4304))
(assert (x4842 x4632))
(assert (= (and (not x3434) x4467) x999))
(assert (= x3648 (and x3583 x4797)))
(assert (= x2325 (and x3211 x709)))
(assert (x4842 x3432))
(assert (x4842 x1311))
(assert (x4842 x352))
(assert (x4842 x2978))
(assert (= x5001 (x4585 (x636 x5001))))
(assert (= (and x2328 (not x4712)) x2642))
(assert (x4842 x4332))
(assert (x4842 x4601))
(assert (= (and (not x2674) x4595) x1230))
(assert (x4842 x3300))
(assert (x4842 x3287))
(assert (=> (>= 10000 x2917) (= (x956 x2917) (x636 x2917))))
(assert (= (and x271 (not x1878)) x805))
(assert (= (and x3372 x252) x100))
(assert (= (and x4435 x5199) x4492))
(assert (= x5029 (or x703 x5116)))
(assert (= (and x2082 (not x3364)) x1594))
(assert (x4842 x4094))
(assert (= (or x1048 x507) x75))
(assert (x4842 x1076))
(assert (x4842 x2437))
(assert (x4842 x399))
(assert (x4842 x1491))
(assert (= (and (not x2262) x5087) x2484))
(assert (x4621 x1468))
(assert (= x5316 (and (not x3009) x3724)))
(assert (= x426 (and x3513 x802)))
(assert (x4842 x3207))
(assert (= x2436 (and x3087 x3221)))
(assert (x4842 x303))
(assert (=> (>= 10000 x4298) (= (x956 x4298) (x636 x4298))))
(assert (x4842 x1631))
(assert (x4842 x3710))
(assert (= (and x100 (not x5056)) x1089))
(assert (= (and (not x632) x3689) x5219))
(assert (x4842 x1361))
(assert (x4842 x2841))
(assert (x4842 x1252))
(assert (= (x4585 (x956 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x4842 x4319))
(assert (= x2106 (or x1174 x4825 x2022 x4248 x4608 x3605)))
(assert (=> (<= x3801 10000) (= (x956 x3801) (x636 x3801))))
(assert (= x2454 (and (not x5028) x88)))
(assert (x4842 x3018))
(assert (= (x4585 (x5250 x1606 2)) (+ 2 (x4585 x1606))))
(assert (x4842 x3376))
(assert (x4842 x4099))
(assert (= (and x253 (not x3313)) x4853))
(assert (= x5038 (or x3407 x4371)))
(assert (x4842 x4604))
(assert (x4842 x2643))
(assert (x4842 x2812))
(assert (x4842 x3362))
(assert (= (and x4618 (not x4403)) x547))
(assert (x4842 x3753))
(assert (= (and (not x1941) x4076) x1100))
(assert (= x1174 (and x3856 x1392)))
(assert (x4842 x5011))
(assert (= x5360 (and x3614 (not x1669))))
(assert (= x3904 (=> (and (or (not x920) x920) (= x920 (= x171 0))) x1707)))
(assert (= (and x4482 x2322) x3642))
(assert (= (=> (= (= 0 x399) x4221) (and (=> (and x4221 (= x299 x2459)) x2792) (=> (and (not x4221) (= (or (> x427 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x427 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x427 32))) x2146)) (and (=> (and (= x2459 x299) x2146) x2792) (=> (and (not x2146) (and (= 1 x3631) (= x4060 32) (= x2459 x2077))) x574))))) x5287))
(assert (x4842 x2072))
(assert (x4842 x708))
(assert (= x3439 (and x41 x3998)))
(assert (=> (<= x955 10000) (= (x636 x955) (x956 x955))))
(assert (x4842 x5035))
(assert (= x4851 (and x4176 x5092)))
(assert (= (and (not x3264) x689) x3010))
(assert (= (and (=> (and (not x2798) (and (= x4527 x3624) (= x3868 0))) x2936) (=> (and x2798 (and (>= x1752 0) (= (x2828 (x636 x4134) x1293 0) x4754) (= x4836 (= 0 x1752)) (= x4508 (x5403 x2091 x3030)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1752) x2722) (= (x5250 x4754 1) x531) (= x3030 (ite (< x2722 x3254) 1 0)) (= x1293 (x2828 (x636 x2716) (x956 159) 0)) (= x1752 (x2915 x531)) (= x114 (= x4508 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1752) (= x2091 (ite (not x4836) 1 0)))) (and (=> (and (and (= x4364 (mod (* x3254 x1752) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1287 (div x4364 1000000000000000000)) (= x1727 (> 0 x1472))) x114) (and (=> (and (not x1727) (and (= x4165 x1472) (= (> x1287 x4165) x5103))) (and (=> (and x5103 (and (= x4175 (= (ite x3430 1 0) 0)) (= (< 115792089237316195423570985008687907853269984665640564039457 x4165) x3430))) (and (=> (and (and (= x1555 (= x3034 0)) (= (= x2931 0) x561) (= (mod (* 1000000000000000000 x4165) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3034) (= x2931 (x5403 x3959 x5109)) (= x3959 (ite (not x1555) 1 0)) (= x3687 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3034)) (= (ite (< x3687 1000000000000000000) 1 0) x5109)) x4175) (and (=> (and x561 (and (= x1320 (< 0 x3254)) (= (mod (* 1000000000000000000 x3034) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2625))) (and (=> (and x1320 (and (<= 0 x3033) (<= x3033 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3033 (x2915 x531)) (= x2738 (> x3169 x3033)) (= (div x2625 x3254) x1817) (= x3169 (div x1817 1000000000000000000)))) (and (=> x2738 x3069) (=> (and (and (= x1584 (= 0 (ite x3606 1 0))) (= x3432 (x1843 (- x3033 x3169))) (= x3606 (> x4165 115792089237316195423570985008687907853269984665640564039457))) (not x2738)) (and (=> (not x1584) x3425) (=> (and x1584 (and (= x4772 (ite (< x609 1000000000000000000) 1 0)) (= x609 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5108)) (= x4335 (ite (not x4042) 1 0)) (= (x5403 x4335 x4772) x2740) (= (mod (* x4165 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5108) (= (= x5108 0) x4042) (= (= 0 x2740) x2517))) (and (=> (not x2517) x492) (=> (and (and (= (> x3500 0) x1219) (= (mod (* 1000000000000000000 x5108) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1746)) x2517) (and (=> (not x1219) x3844) (=> (and x1219 (and (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2148)) x5400) (= x4801 (div x1746 x3500)) (<= 0 x5292) (= (> x5292 x5400) x1456) (= x2148 (div x4801 1000000000000000000)) (= x5292 (x1725 x4754)) (<= x5292 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1456) (and (= x2509 x5070) (= x1472 x152) (= (x2989 (+ x2148 x5292)) x5070) (= x2686 x3432))) x665) (=> x1456 x2572))))))))))) (=> (not x1320) x2789))) (=> (not x561) x1087))) (=> (not x4175) x3103))) (=> (and (and (= x2778 (< 115792089237316195423570985008687907853269984665640564039457 x1287)) (= x4269 (= (ite x2778 1 0) 0))) (not x5103)) (and (=> (not x4269) x2483) (=> (and (and (= (ite (> 1000000000000000000 x1076) 1 0) x2954) (= (= 0 x680) x2407) (= x1076 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x680)) (= (ite (not x2407) 1 0) x1892) (= x292 (x5403 x1892 x2954)) (= (= x292 0) x4593) (= x680 (mod (* 1000000000000000000 x1287) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x4269) (and (=> (and (and (= x508 (< 0 x3500)) (= (mod (* 1000000000000000000 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2719)) x4593) (and (=> (and (and (= (div x5370 1000000000000000000) x3045) (>= x671 0) (= x671 (x1725 x4754)) (= x5370 (div x2719 x3500)) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3045)) x2364) (<= x671 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2364 x671) x2322)) x508) (and (=> x2322 x659) (=> (and (and (= x5080 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1287))) (= (< x5080 0) x263) (= (x2989 (+ x3045 x671)) x2634)) (not x2322)) (and (=> (and (not x263) (and (= x2509 x2634) (= x4936 x1287) (= 0 x2686) (= x4936 x152))) x665) (=> x263 x84))))) (=> (not x508) x2435))) (=> (not x4593) x5069))))))) (=> x1727 x3329))) (=> (not x114) x4779)))) x1957))
(assert (x4842 x3301))
(assert (x4842 x4215))
(assert (x4842 x4231))
(assert (x4842 x5075))
(assert (x4842 x1747))
(assert (x4842 x3549))
(assert (= x854 (and x3556 x1779)))
(assert (= (and x2115 (not x4234)) x5060))
(assert (= x3259 (and x1043 x373)))
(assert (= x2540 (and x4012 x4433)))
(assert (x4842 x5226))
(assert (x4842 x289))
(assert (= (or x2885 x2357) x4999))
(assert (x4842 x1632))
(assert (= (or x3340 x1312 x1005) x910))
(assert (= (=> (= (< 0 x837) x739) (and (=> (and (and (= (= x4134 0) x4670) (<= x3271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3271)) x739) (and (=> (and (not x4670) (and (<= 0 x65) (= (x1448 x3548) x65) (= (x2828 (x636 x4134) x2058 0) x5296) (<= x65 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3548 (x5250 x5296 2)) (= x1878 (= x65 0)))) (and (=> (not x1878) x351) (=> (and x1878 (and (or (and (= x2973 x5211) (not x2973)) (and x2973 (and (= x5223 (x5250 x1606 2)) (>= x668 0) (= (not x2281) x5211) (= (x1448 x5223) x668) (= x2281 (> x837 x668)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x668) (= x1606 (x2828 (x636 x3860) x2058 0))))) (and (<= 0 x3860) (= x2973 (ite (< 0 x3271) (not (= x3860 0)) (< 0 x3271))) (> 1461501637330902918203684832716283019655932542976 x3860) (<= x3860 1461501637330902918203684832716283019655932542975) (= x3860 (x4498 x2706)) (= (x5250 x2058 1) x2706)))) x1409))) (=> x4670 x5207))) (=> (and (= x2618 x5336) (not x739)) x2710))) x523))
(assert (x4842 x2863))
(assert (= (and x4309 (not x2031)) x770))
(assert (x4842 x302))
(assert (= (+ 1 (x4585 x1333)) (x4585 (x5250 x1333 1))))
(assert (x4842 x3942))
(assert (= x946 (and x2671 x4844)))
(assert (x4842 x78))
(assert (x4842 x3437))
(assert (= x3481 (and x4719 (not x1203))))
(assert (= x5319 (and (not x4392) x2899)))
(assert (= (and (not x3160) x910) x1213))
(assert (= x4551 (and x4437 x3007)))
(assert (= (=> (and (or (not x2677) x2677) (= x2677 (= x95 0))) x1789) x1224))
(assert (= x2145 (=> (= (> x2497 0) x4607) (and (=> (not x4607) x4440) (=> (and x4607 (and (>= x3271 0) (<= x3271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x746 0) x330))) (and (=> (and (and (<= x3477 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x746) x1688 0) x1395) (<= 0 x3477) (= (x5250 x1395 2) x2217) (= (= x3477 0) x4544) (= (x1133 x2217) x3477)) (not x330)) (and (=> (not x4544) x4705) (=> (and (and (or (and x164 (and (<= x2157 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2157 0) (= x203 (x5250 x3874 2)) (= (not x4260) x1895) (= x3874 (x2828 (x636 x2623) x1688 0)) (= (x1133 x203) x2157) (= (< x2157 x2497) x4260))) (and (= x1895 x164) (not x164))) (and (= (x1521 x4115) x2623) (>= x2623 0) (= x164 (ite (< 0 x3271) (not (= 0 x2623)) (< 0 x3271))) (<= x2623 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2623) (= (x5250 x1688 1) x4115))) x4544) x2103))) (=> x330 x569)))))))
(assert (x4842 x1896))
(assert (x5194 x66))
(assert (= (or x4070 x4184) x3384))
(assert (x4842 x3831))
(assert (x4842 x4049))
(assert (= (and x799 x4656) x2571))
(assert (= x4306 (and x466 (not x3785))))
(assert (= x4034 (and (not x2541) x850)))
(assert (= (and x799 (not x4656)) x1326))
(assert (= (or x4631 x3906 x2301 x602 x431 x2764) x1529))
(assert (=> (>= 10000 x5311) (= (x636 x5311) (x956 x5311))))
(assert (= (x4585 (x956 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x4842 x152))
(assert (= (and x3072 (not x4221)) x4250))
(assert (= 1461501637330902918203684832716283019655932542976 (x4585 (x956 1461501637330902918203684832716283019655932542976))))
(assert (x4842 x499))
(assert (= x1237 (x4585 (x636 x1237))))
(assert (x4842 x2486))
(assert (=> (>= 10000 x5365) (= (x636 x5365) (x956 x5365))))
(assert (x4621 x2690))
(assert (x4842 x1416))
(assert (= x3420 (x4585 (x636 x3420))))
(assert (x4842 x3352))
(assert (= (and x4785 x1791) x1657))
(assert (= (and x2840 x4276) x1357))
(assert (= (x956 988262939) (x636 988262939)))
(assert (x4842 x891))
(assert (x4842 x3233))
(assert (=> (>= 10000 x2779) (= (x636 x2779) (x956 x2779))))
(assert (= (or x929 x2569) x374))
(assert (x4621 x650))
(assert (x4842 x5017))
(assert (= (=> (= true x580) x305) x5005))
(assert (x4842 x2688))
(assert (= x1938 (or x1803 x2894)))
(assert (x4842 x882))
(assert (x4621 x4144))
(assert (= x653 (=> (and (= x2772 x4696) (= x4098 x3376)) x3462)))
(assert (= (and (not x32) x3908) x2426))
(assert (= x3226 (and x1099 x235)))
(assert (x4842 x3238))
(assert (x4842 x3509))
(assert (x4842 x5383))
(assert (x4842 x1702))
(assert (= (x4585 (x636 x4850)) x4850))
(assert (x4842 x226))
(assert (x4842 x3599))
(assert (= x3060 (and (not x107) x2484)))
(assert (= (and x1955 x2398) x3084))
(assert (= x3830 (and (not x5368) x2794)))
(assert (= (and (not x3945) x3040) x4814))
(assert (x4842 x2577))
(assert (x4842 x447))
(assert (x4842 x446))
(assert (= x3216 (x4585 (x636 x3216))))
(assert (=> (>= 10000 x314) (= (x636 x314) (x956 x314))))
(assert (= x1350 (or x5107 x3919)))
(assert (= (and x1188 (not x2023)) x4919))
(assert (x4842 x4033))
(assert (=> (>= 10000 x1683) (= (x636 x1683) (x956 x1683))))
(assert (= x221 (=> (and (or (and (= x2497 0) (not x1891)) (and x1891 (= x2497 x5229))) (and (<= x773 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1891 (> x5229 x773)) (<= 0 x773))) x3675)))
(assert (x4842 x424))
(assert (= x78 (x4585 (x636 x78))))
(assert (= x3787 (=> (and (= (> x1366 0) x5389) (= x2297 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= (x2828 (x636 x2297) x5040 0) x3043) (= (x2828 (x636 x2716) (x956 158) 0) x5040)) (and (=> (and (not x5389) (and (= x2015 x663) (= x483 x669) (= x3538 x1090) (= x2861 x3431) (= x4536 x2297))) x2094) (=> (and (and (= (< 115792089237316195423570985008687907853269984665640564039457 x1366) x1324) (= x1804 (x2828 (x636 x2716) (x956 164) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2790) (<= 0 x2790) (= (= 0 (ite x1324 1 0)) x2043) (= x2790 (x1814 x1804))) x5389) (and (=> (not x2043) x989) (=> (and x2043 (and (= x494 (= 0 x1271)) (= (x5403 x217 x2277) x1271) (= (ite (not x3071) 1 0) x217) (= x3071 (= x3669 0)) (= x2277 (ite (< x3018 1000000000000000000) 1 0)) (= (mod (* x1366 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3669) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3669) x3018))) (and (=> (and x494 (and (= (< 0 x2790) x1615) (= (mod (* x3669 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x133))) (and (=> (and (and (= (< x969 x727) x3274) (<= x727 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x501 (div x133 x2790)) (= (div x501 1000000000000000000) x1466) (= (x4638 x1331) x727) (= x1331 (x5250 x3824 1)) (<= 0 x727) (= x969 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1466)))) x1615) (and (=> (and (not x3274) (and (= (x2989 (+ x727 x1466)) x1661) (<= x303 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x303) (= (> x303 x969) x3132) (= x303 (x2196 x3043)))) (and (=> x3132 x989) (=> (and (not x3132) (and (= x952 (x2989 (+ x669 4))) (= (x2989 (+ x303 x1466)) x1905) (= x1599 (x2989 (+ x952 32))) (= x1047 (x1843 (- x1599 x669))) (= x963 (= x2716 x4735)))) (and (=> (and x963 (and (not (= x1026 178855970)) (= x776 36) (= x2298 10742207464693106059581744854972325794081737850190833080250671788038469713920) (not (= x1026 242558722)) (> x3611 0) (= x1047 x776) (not (= x1026 75483562)) (> 405663989 x1026) (> 988262939 x1026) (> 2217467699 x1026) (not (> 4 x776)) (= (x1843 (- x776 4)) x3923) (= x3490 (or (and (= true (<= x3923 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3923)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3923))) (= x1026 398450620) (= x3371 x3494) (= (x1306 (x636 x4735)) x3611))) (and (=> (and (not x3490) (and (= x5242 (= x3494 x3371)) (= x3371 x2490))) (and (=> (not x5242) x3578) (=> (and x5242 (and (>= x3206 0) (= 1 x4219) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3206) (= (x2828 (x636 x3371) (x956 6) 0) x3047) (= x1940 32) (= (x2161 x3047) x3206))) x707))) (=> x3490 x3578))) (=> (and (= x3028 (= x2716 x1972)) (not x963)) (and (=> (and (and (= x5022 (x1306 (x636 x1972))) (= x3915 10742207464693106059581744854972325794081737850190833080250671788038469713920) (= x4563 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x672)) (< x672 32)) (> x672 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x1621 988262939) (= x1621 398450620) (not (= x1621 75483562)) (= x3085 x1047) (< x1621 2217467699) (= x3494 x4245) (not (= 178855970 x1621)) (= x672 (x1843 (- x3085 4))) (not (< x3085 4)) (> x5022 0) (= x3085 36) (not (= x1621 242558722)) (< x1621 405663989)) x3028) (and (=> x4563 x375) (=> (and (not x4563) (and (= x4245 x4868) (= x4841 (= x3494 x4245)))) (and (=> (not x4841) x375) (=> (and (and (= (x2828 (x636 x4245) (x956 6) 0) x1855) (= x4422 (x5348 x1855)) (= x2087 1) (<= 0 x4422) (= 32 x2524) (<= x4422 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x4841) x4932))))) (=> (and (not x3028) (and (= x183 (= x2102 x2716)) (and x183 (and (> 2217467699 x5003) (= x3494 x3754) (= x5067 x1047) (= (or (> x3613 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3613)) (> 32 x3613))) x214) (= 36 x5067) (= x5003 398450620) (< x5003 405663989) (not (= 242558722 x5003)) (not (= 178855970 x5003)) (> 988262939 x5003) (= x1243 (x1306 (x636 x2102))) (= (x1843 (- x5067 4)) x3613) (= x4761 10742207464693106059581744854972325794081737850190833080250671788038469713920) (not (= 75483562 x5003)) (> x1243 0) (not (< x5067 4)))))) (and (=> (and (and (= x881 (= x3754 x3494)) (= x688 x3754)) (not x214)) (and (=> (not x881) x2202) (=> (and (and (= x1693 (x2828 (x636 x3754) (x956 6) 0)) (= 1 x800) (= 32 x2376) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x581) (= (x577 x1693) x581) (<= 0 x581)) x881) x4809))) (=> x214 x2202))))))))) (=> x3274 x989))) (=> (not x1615) x526))) (=> (not x494) x989)))))))))
(assert (= x2172 (and x5135 (not x4375))))
(assert (= x3036 (x4585 (x636 x3036))))
(assert (x4842 x2816))
(assert (x4842 x3062))
(assert (= x4887 x580))
(assert (= x4875 (x4585 (x636 x4875))))
(assert (= (or (and x1305 (not x1336)) x1226) x1739))
(assert (x4842 x844))
(assert (= (and (not x4288) x3952) x736))
(assert (= x3906 (and x3803 x5319)))
(assert (x4621 x2529))
(assert (= x3759 (and x1918 x3927)))
(assert (x4842 x2596))
(assert (= (=> (and (= (= x5320 0) x914) (or (and (not x914) (and (= x232 x486) (= x4956 x1036) (= x4033 x3519) (= x5320 x5306))) (and x914 (and (= x2773 (- x2261 x2807)) (= (x2989 (+ x2807 x5277)) x226) (= x2807 (ite (= x5320 0) x1954 0)) (= (x3628 (x636 x3494)) x5277) (= x232 x486) (= x2261 (x1024 (x636 x2716))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5277 x2807)) (= x4033 x3519) (= x5306 x5320) (= x4956 x1036))))) x5283) x4854))
(assert (x4621 x3193))
(assert (= (and x4485 (not x1919)) x266))
(assert (= (and x466 x3785) x452))
(assert (x4842 x2535))
(assert (= x4595 (and x2305 x2506)))
(assert (= x244 (and (not x959) x4266)))
(assert (=> (>= 10000 x126) (= (x636 x126) (x956 x126))))
(assert (= x3848 (and x3029 x4909)))
(assert (x4842 x384))
(assert (= (and x4630 x1202) x1660))
(assert (= (=> (and (= x3106 x4675) (= x4415 x4940)) x4538) x2515))
(assert (= 2236579515 (x4585 (x956 2236579515))))
(assert (= (=> (and (or (and (= x1425 (x2828 (x636 x869) x624 0)) (not x670)) (and x670 (= x2762 (x5250 x624 2)))) (= (= 0 x869) x670)) x1097) x3004))
(assert (= x5021 (or x1642 x4374)))
(assert (not x1265))
(assert (x4842 x4329))
(assert (= (or x1502 x5340 x3010 x1609 x2914 x3511) x1178))
(assert (x4842 x4009))
(assert (x4842 x1543))
(assert (x4842 x1692))
(assert (x4842 x3676))
(assert (x4621 x3426))
(assert (x4842 x1147))
(assert (x4842 x4475))
(assert (x4842 x3147))
(assert (x645 x2277))
(assert (x4842 x4302))
(assert (= x4500 (and (not x4584) x452)))
(assert (x4842 x1765))
(assert (x4842 x5261))
(assert (x4842 x4801))
(assert (x4842 x4087))
(assert (=> (<= x4679 10000) (= (x956 x4679) (x636 x4679))))
(assert (x4842 x3228))
(assert (= x4502 (and x3115 x5029)))
(assert (x4842 x290))
(assert (= (x636 3842108676) (x956 3842108676)))
(assert (x4842 x3492))
(assert (= (and (not x1832) x4077) x1635))
(assert (= (and x3859 (not x3755)) x4487))
(assert (= x2195 (and x1403 x3746)))
(assert (= x3590 (and x3221 (not x3087))))
(assert (= (and x4712 x2328) x5204))
(assert (x4842 x2439))
(assert (= (and x23 x4888) x5202))
(assert (= x2570 (and x4912 x1314)))
(assert (= (and (not x4439) x3838) x1517))
(assert (x2961 x217 x2277))
(assert (= x859 (and x3662 x4031)))
(assert (x4842 x2768))
(assert (x4842 x2069))
(assert (= x1418 (and x358 (not x4117))))
(assert (= x3494 (x4585 (x636 x3494))))
(assert (x4842 x5277))
(assert (x4842 x4081))
(assert (x4842 x4232))
(assert (= (or x1520 x3557 x1882 x958) x3880))
(assert (= x1523 (or x5362 x1798)))
(assert (x4842 x518))
(assert (x4842 x3335))
(assert (= x2748 (and x3397 x3357)))
(assert (=> (<= x783 10000) (= (x636 x783) (x956 x783))))
(assert (= (x4585 (x636 x1972)) x1972))
(assert (x4842 x1185))
(assert (= x3456 (and x4252 x34)))
(assert (x4621 x497))
(assert (x4842 x2450))
(assert (x4621 x4735))
(assert (= (and (not x4204) x4942) x1479))
(assert (x4842 x2077))
(assert (x4842 x4072))
(assert (x4621 x4850))
(assert (= x275 (or x5395 x31)))
(assert (x4842 x2653))
(assert (= (and x4261 x5019) x1939))
(assert (x4842 x630))
(assert (x4621 x543))
(assert (x4842 x1636))
(assert (= (=> (and (= x2955 x1864) (= x3632 x2504)) x2155) x4929))
(assert (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x4585 (x956 6539370208772218570076773595062200405109424842860869254164860851635934461952))))
(assert (= (or x3044 x4872) x4605))
(assert (x4842 x1080))
(assert (= (and (not x3204) x3235) x1918))
(assert (x4842 x3431))
(assert (= (and (not x1375) x1821) x1734))
(assert (= (and x2536 (not x4714)) x1314))
(assert (x4842 x1192))
(assert (= (and x1998 x2172) x3435))
(assert (= (and x2032 (not x1899)) x4925))
(assert (x4842 x5108))
(assert (= (and (=> (and x1895 (and (or (and (and (= x5224 (not x1490)) (= x4110 (x1133 x3183)) (= (x5250 x2256 2) x3183) (= x1490 (< x4110 x2497)) (= (x2828 (x636 x4441) x1688 0) x2256) (<= 0 x4110) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4110)) x3091) (and (not x3091) (= x5224 x3091))) (and (<= 0 x4441) (= x4441 (x5154 x1256)) (<= x4441 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x4441) (= (x5250 x628 1) x1256) (= x3091 (ite (> x3271 1) (not (= 0 x4441)) (> x3271 1))) (= (x2828 (x636 x2623) x1688 0) x628)))) x3120) (=> (and (and (= 0 x4732) (= x268 x2623)) (not x1895)) x2276)) x2103))
(assert (x4842 x775))
(assert (= (or x4881 x1009 x376 x718 x5030 x2062 x3992 x5099 x2042 x426 x717 x3871 x5027 x5139 x1042 x3068 x371 x3826 x2997 x4637 x1523 x3693 x996 x2250 x3595 x3442 x1471 x5388 x1510 x1797 x3718 x4291 x1733) x2503))
(assert (x4842 x3940))
(assert (x4842 x4965))
(assert (x4842 x4956))
(assert (x645 x3140))
(assert (= x2109 (and x1915 x2553)))
(assert (= (or x490 x5202) x2933))
(assert (= (or x2226 x1212) x1847))
(assert (x4842 x838))
(assert (= (x4585 (x5250 x3738 1)) (+ (x4585 x3738) 1)))
(assert (x4842 x5104))
(assert (x4842 x1181))
(assert (x4842 x1109))
(assert (= (and (not x2199) x4987) x397))
(assert (x4842 x1130))
(assert (= x629 (or x3054 x3394)))
(assert (x4842 x3811))
(assert (x4842 x4553))
(assert (x4842 x4075))
(assert (= (and (not x4043) x2851) x5130))
(assert (= (and x3152 x3366) x2894))
(assert (= (x4585 (x636 x2603)) x2603))
(assert (x4842 x3889))
(assert (x4842 x2906))
(assert (= (and x4816 x4764) x2127))
(assert (x645 x5109))
(assert (x4842 x2364))
(assert (= (and x4400 (not x3968)) x4376))
(assert (x4842 x4230))
(assert (x3529 x4050))
(assert (= x706 (and x3171 x4837)))
(assert (= (x4585 (x636 x2548)) x2548))
(assert (= (or x5024 x2465 x5004 x5123) x1305))
(assert (=> (>= 10000 x3122) (= (x636 x3122) (x956 x3122))))
(assert (= x5309 (and (not x2078) x3540)))
(assert (= x1050 (and x3042 (not x5167))))
(assert (= x1060 (and (not x280) x758)))
(assert (= (and x418 x618) x4450))
(assert (= (and x389 x4893) x934))
(assert (x4842 x3080))
(assert (= x2192 (=> (and (= (= 0 x223) x2678) (or (and (not x2678) (= (x2828 (x636 x223) x1688 0) x2635)) (and x2678 (= x3729 (x5250 x1688 2))))) x3522)))
(assert (= (+ 1 (x4585 x3001)) (x4585 (x5250 x3001 1))))
(assert (= x932 (and x1231 x1040)))
(assert (x645 x4335))
(assert (= x4019 (and x4358 x1033)))
(assert (x4842 x2808))
(assert (= (x4585 (x956 398450620)) 398450620))
(assert (= (and x5307 x3055) x572))
(assert (= (and x1167 x4133) x4225))
(assert (= (+ 1 (x4585 x204)) (x4585 (x5250 x204 1))))
(assert (x4842 x3447))
(assert (x4842 x225))
(assert (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x4585 (x956 4238056678808933066457772256406219440718756300954938350892797929791311314944))))
(assert (x4842 x2168))
(assert (x4842 x4213))
(assert (x4842 x4224))
(assert (= (and x2031 x4309) x4526))
(assert (= 3842108676 (x4585 (x956 3842108676))))
(assert (x4842 x1715))
(assert (x4842 x4359))
(assert (x4842 x1274))
(assert (=> (>= 10000 x2716) (= (x956 x2716) (x636 x2716))))
(assert (=> (>= 10000 x5159) (= (x956 x5159) (x636 x5159))))
(assert (x4842 x539))
(assert (= x4657 (and (not x1584) x771)))
(assert (= x1007 (and x908 x270)))
(assert (= (x4585 (x636 x2370)) x2370))
(assert (x4842 x2052))
(assert (x4842 x1205))
(assert (= x5393 (=> (and (= x171 x2294) (= x4967 x2254)) x3904)))
(assert (= (x636 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x956 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= x1475 (or x3083 x3555)))
(assert (= (and x4013 x2983) x3641))
(assert (x4842 x11))
(assert (= (x4585 (x636 x5365)) x5365))
(assert (x4842 x4243))
(assert (x4842 x2349))
(assert (= (x956 115792089237316195423570985008687907853269984665640564039457) (x636 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (or x1613 x3460) x5027))
(assert (= (and x3264 x689) x3497))
(assert (= (and x1392 (not x3856)) x850))
(assert (=> (>= 10000 x3019) (= (x956 x3019) (x636 x3019))))
(assert (= x5257 (=> (= (= x540 x4931) x2193) (and (=> x2193 x3806) (=> (and (= x5180 (> x540 0)) (not x2193)) (and (=> (not x5180) x3924) (=> (and (and (<= x4948 1461501637330902918203684832716283019655932542975) (< x4948 1461501637330902918203684832716283019655932542976) (= x4764 (= 0 x4282)) (= (x5250 x1782 1) x4429) (= (x2041 x4429) x4282) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x4081) (= x4760 (x2828 (x636 x4081) x1283 0)) (= (x2555 x1782) x1601) (>= x4948 0) (= (x5250 x4760 1) x1782) (<= 0 x4282) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4282) (= (x3903 x4760) x4948) (<= 0 x1601) (>= 1461501637330902918203684832716283019655932542975 x1601) (> 1461501637330902918203684832716283019655932542976 x1601)) x5180) (and (=> (and (and (= x4649 (= x4948 0)) (or (and x4649 (= (x5250 x1283 1) x855)) (and (and (= x320 (x5250 x3584 1)) (= (x2828 (x636 x4948) x1283 0) x3584)) (not x4649)))) (not x4764)) x3088) (=> x4764 x1008)))))))))
(assert (= (and x5065 x2344) x109))
(assert (x4842 x215))
(assert (x4842 x1824))
(assert (= (and x3040 x3945) x342))
(assert (= x3078 (and x194 (not x425))))
(assert (= x1390 (and x2883 x4132)))
(assert (= (and (not x143) x2507) x1609))
(assert (x4842 x4926))
(assert (x4842 x4474))
(assert (x4842 x888))
(assert (x4842 x2695))
(assert (x4842 x2970))
(assert (= (and x3212 x3199) x3561))
(assert (= (x4585 (x956 2030502250)) 2030502250))
(assert (= (and (not x4257) x1003) x4924))
(assert (x4842 x954))
(assert (x4842 x4583))
(assert (= (and x2064 x2823) x5141))
(assert (= x2126 (and x3556 (not x1779))))
(assert (x4842 x4562))
(assert (x5391 x1270))
(assert (= (=> (= x580 true) x305) x989))
(assert (= x1997 (and (not x3865) x2171)))
(assert (x4842 x258))
(assert (= (=> (and (= x399 x1023) (= x2176 x427)) x2827) x1579))
(assert (x4842 x691))
(assert (= x1160 (or x4857 x20)))
(assert (= x4479 (and x3977 x3231)))
(assert (x4842 x2948))
(assert (x4842 x4161))
(assert (x4842 x257))
(assert (x4842 x3714))
(assert (= x2527 (and x36 x546)))
(assert (= x28 (and x1594 (not x1706))))
(assert (x4842 x4702))
(assert (x4842 x4824))
(assert (= x4044 (and x1572 x878)))
(assert (x4621 x1299))
(assert (= (and (not x1851) x5355) x4578))
(assert (= x4246 (=> (and (= x4589 x4025) (= x4253 x1897)) x3653)))
(assert (= x2374 (and x3009 x3724)))
(assert (x4842 x3453))
(assert (= x3002 (and x620 x2984)))
(assert (x4842 x3541))
(assert (x4842 x2453))
(assert (= (and x1100 x2104) x4183))
(assert (= x1685 (=> (and (= x882 x4713) (= x2071 x2386) (= 0 x319)) x2358)))
(assert (= (=> (= (= 0 x4253) x618) (and (=> (and (not x618) (= (or (and (= true (<= x4025 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x4025)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4025)) x5310)) (and (=> (and (and (= x1987 x2071) (= x4713 32) (= x319 1)) (not x5310)) x2358) (=> (and (= x2386 x1987) x5310) x1685))) (=> (and x618 (= x1987 x2386)) x1685))) x1611))
(assert (x4842 x2383))
(assert (=> (>= 10000 x2603) (= (x636 x2603) (x956 x2603))))
(assert (= x509 (and (not x4393) x2121)))
(assert (= x1241 (or x2971 x2361)))
(assert (= (x4585 (x636 x4049)) x4049))
(assert (x4842 x2774))
(assert (= (and x3713 (not x2730)) x3998))
(assert (=> (<= x543 10000) (= (x636 x543) (x956 x543))))
(assert (= (or x4123 x4311 x1303) x3256))
(assert (= (and x3973 x2074) x2671))
(assert (= x4142 (and x4296 x4979)))
(assert (x4842 x1904))
(assert (x645 x2134))
(assert (= (=> (= x1442 (= x1709 x1310)) (and (=> (and (not x1442) (= (> x1310 0) x4435)) (and (=> (not x4435) x1108) (=> (and x4435 (and (< x393 1461501637330902918203684832716283019655932542976) (= (= 0 x2546) x3373) (= (x2248 x3459) x393) (= x3459 (x5250 x1524 1)) (<= x393 1461501637330902918203684832716283019655932542975) (<= x126 1461501637330902918203684832716283019655932542975) (>= x2546 0) (= (x2828 (x636 x746) x734 0) x1524) (>= x126 0) (= (x2399 x1222) x2546) (= (x1358 x1524) x126) (= x1222 (x5250 x3459 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2546) (< x126 1461501637330902918203684832716283019655932542976) (<= 0 x393))) (and (=> x3373 x4227) (=> (and (not x3373) (and (= x1812 (= 0 x126)) (or (and (and (= (x5250 x4541 1) x4521) (= x4541 (x2828 (x636 x126) x734 0))) (not x1812)) (and (= x4619 (x5250 x734 1)) x1812)))) x1925))))) (=> x1442 x221))) x106))
(assert (x4842 x1393))
(assert (x4842 x1840))
(assert (x4842 x3350))
(assert (x4842 x3334))
(assert (= x5311 (x4585 (x636 x5311))))
(assert (= (or x17 x874 x333) x861))
(assert (x4842 x2347))
(assert (= (and (not x4031) x3662) x5092))
(assert (x645 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (and x516 x561) x2870))
(assert (= (x4585 (x5250 x5128 1)) (+ 1 (x4585 x5128))))
(assert (x4842 x581))
(assert (x4842 x1950))
(assert (x4842 x4330))
(assert (x4842 x3474))
(assert (= x3491 (and x3463 x719)))
(assert (= (and (not x2322) x4482) x917))
(assert (x4842 x663))
(assert (x4621 x2702))
(assert (= (and x5278 x5180) x4816))
(assert (=> (>= 10000 x2623) (= (x636 x2623) (x956 x2623))))
(assert (= x4725 (and x5368 x2794)))
(assert (x4621 x4606))
(assert (= x5009 (and x2963 x4082)))
(assert (x4842 x3825))
(assert (= x3616 (and (not x42) x673)))
(assert (x4842 x2222))
(assert (= (and x1180 x2593) x3665))
(assert (x4842 x1830))
(assert (x4842 x321))
(assert (= x3103 x989))
(assert (= (and x4257 x1003) x5078))
(assert (x4842 x3290))
(assert (x4842 x540))
(assert (x4842 x2018))
(assert (= x4322 (and x3218 x1885)))
(assert (= x3851 (and x4106 x4202)))
(assert (= (=> (and (= 0 x2480) (= x1477 x4627)) x2950) x4928))
(assert (x645 x2052))
(assert (x4842 x2423))
(assert (x4842 x1092))
(assert (= (and (not x4893) x389) x1083))
(assert (= x3463 (and x3162 x594)))
(assert (x4842 x4713))
(assert (= (x636 6539370208772218570076773595062200405109424842860869254164860851635934461952) (x956 6539370208772218570076773595062200405109424842860869254164860851635934461952)))
(assert (= (x4585 (x636 x4144)) x4144))
(assert (x4842 x369))
(assert (= x721 (and (not x1891) x3685)))
(assert (x4842 x2225))
(assert (x2961 x2091 x3030))
(assert (= (and x766 x2551) x1369))
(assert (x4842 x5129))
(assert (x4842 x3470))
(assert (x4842 x90))
(assert (x645 x1270))
(assert (x2961 x2422 x821))
(assert (x4842 x3663))
(assert (= (or x3778 x5083 x3619 x1141) x2717))
(assert (= (and x892 (not x617)) x866))
(assert (x4842 x5306))
(assert (x4842 x4848))
(assert (x4842 x4249))
(assert (x4842 x232))
(assert (= (=> (and (= x5372 x4515) (= 0 x2583)) x4634) x2520))
(assert (x4842 x4341))
(assert (x4842 x4939))
(assert (x4842 x747))
(assert (= x3340 (and x2787 x3815)))
(assert (= (or x3475 x4681) x364))
(assert (x4842 x2370))
(assert (= x2922 (and x1404 x3588)))
(assert (x4842 x3535))
(assert (x4842 x3966))
(assert (x4842 x1542))
(assert (x4842 x4326))
(assert (x4842 x2354))
(assert (= x1389 (and x4157 x2021)))
(assert (= (and x1571 x1249) x2984))
(assert (x4842 x4507))
(assert (= x889 (=> (and (= x5017 (x2055 x3935 x909)) (= x940 (x5403 x5017 x4639)) (= x3935 (x5403 x2688 x1153)) (= x4286 (> x940 0)) (= (ite (= 0 x1896) 1 0) x909) (= x2688 (ite (= x1965 (x956 1)) 1 0)) (= (ite (> x1896 31) 1 0) x1153)) (and (=> (and (and (or (and (not x1494) (and (= (= x1972 x2716) x2787) (or (and (and (and x1697 (and (not (> 2691771752 x91)) (= x91 2858086653) (<= 0 x4365) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4365) (not (= 2796547477 x91)) (= x5153 x2498) (< x91 2929553584) (= 4 x5153) (not (= 2691771752 x91)) (= x3182 32) (> x567 0) (not (< x5153 4)) (= x567 (x1306 (x636 x2102))) (not (> 2217467699 x91)) (= x2978 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= 1 x1632) (not (= x91 2835717307)))) (= (= x2102 x2716) x1697)) (not x2787)) (and (and (< x5264 2929553584) (= 4 x3663) (not (> 4 x3663)) (not (= x5264 2796547477)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x2522) (<= x456 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5264 2858086653) (= 1 x1632) (= x3182 32) (not (= 2835717307 x5264)) (not (= 2691771752 x5264)) (> x2871 0) (not (> 2691771752 x5264)) (not (< x5264 2217467699)) (= x3663 x2498) (>= x456 0) (= x2871 (x1306 (x636 x1972)))) x2787)))) (and x1494 (and (= x4632 x2498) (> 2929553584 x4401) (= x4632 4) (not (> 2217467699 x4401)) (= 2858086653 x4401) (not (< x4401 2691771752)) (not (= x4401 2796547477)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2893) (= 32 x3182) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x4326) (< 0 x5248) (not (< x4632 4)) (<= 0 x2893) (= 1 x1632) (= (x1306 (x636 x4735)) x5248) (not (= x4401 2835717307)) (not (= x4401 2691771752))))) (and (= (= x4735 x2716) x1494) (= x2498 4) (= x2803 (x2989 (+ 96 x380))) (= (x2828 (x636 x2716) (x956 169) 0) x3610))) x4286) x4444) (=> (not x4286) x1008)))))
(assert (x4621 x1901))
(assert (= (+ 1 (x4585 x2706)) (x4585 (x5250 x2706 1))))
(assert (x4621 x3801))
(assert (x4842 x161))
(assert (=> (<= x869 10000) (= (x956 x869) (x636 x869))))
(assert (x4842 x847))
(assert (=> (<= x1294 10000) (= (x636 x1294) (x956 x1294))))
(assert (= x3567 (and x1456 x5353)))
(assert (= x573 (and x4156 x2874)))
(assert (= (x4585 (x956 2929553584)) 2929553584))
(assert (= (x956 2691771752) (x636 2691771752)))
(assert (x4842 x2921))
(assert (= x3822 (or x4496 x1793 x1250 x224 x616 x2916 x905 x4501 x354)))
(assert (= x4290 (and x4057 x4152)))
(assert (= (and x1628 (not x164)) x250))
(assert (x4842 x4808))
(assert (x4842 x2267))
(assert (x4842 x3446))
(assert (= x68 (or x1427 x3925)))
(assert (= (x4585 (x5250 x1688 1)) (+ (x4585 x1688) 1)))
(assert (x4621 x1194))
(assert (= x1659 (and x3944 (not x3274))))
(assert (= (and x4077 x1832) x194))
(assert (x4842 x1036))
(assert (= (=> (and (= x3863 x4098) (= x2772 x360)) x3462) x2853))
(assert (x4842 x2652))
(assert (= x255 (or x592 x173 x3456 x2749 x2910)))
(assert (x4842 x977))
(assert (x4842 x3928))
(assert (x4621 x4081))
(assert (= (or x1244 x3590) x4451))
(assert (x4842 x1038))
(assert (= x2924 (and (not x3586) x2859)))
(assert (= (and x3686 x1065) x3977))
(assert (x4842 x3122))
(assert (x4842 x970))
(assert (x4842 x2732))
(assert (= (and x1774 (not x5404)) x2410))
(assert (= x3691 (x4585 (x636 x3691))))
(assert (= x4637 (or x3571 x4718)))
(assert (= (and x4787 (not x1616)) x2874))
(assert (= (x4585 (x636 x4679)) x4679))
(assert (= (and (not x4741) x2296) x2116))
(assert (= x2895 (=> (and (= x1574 0) (= x3901 x2863)) x1776)))
(assert (= x396 (and x541 x4802)))
(assert (= (and x3865 x2171) x1072))
(assert (= (and (not x1551) x1128) x4334))
(assert (= x2941 (and x3042 x5167)))
(assert (x4842 x3892))
(assert (= x2885 (and (not x3133) x3312)))
(assert (= (and x2198 (not x4823)) x3475))
(assert (x4842 x4005))
(assert (x4842 x2563))
(assert (= x2268 (and x2972 x923)))
(assert (= x376 (and x3944 x3274)))
(assert (= (x636 2245473101) (x956 2245473101)))
(assert (= (and x3839 (not x1879)) x4484))
(assert (x4842 x2388))
(assert (= (and x5156 x3715) x4489))
(assert (x645 x2107))
(assert (x4842 x985))
(assert (x4842 x2901))
(assert (x4842 x459))
(assert (x4842 x3546))
(assert (x4842 x1495))
(assert (x4842 x1121))
(assert (= x4707 (and (not x4891) x1160)))
(assert (x4842 x3640))
(assert (x4842 x811))
(assert (= (+ (x4585 x5237) 1) (x4585 (x5250 x5237 1))))
(assert (= x1345 (and (not x5389) x1363)))
(assert (x4842 x3451))
(assert (x4842 x486))
(assert (x4842 x1825))
(assert (x4842 x2529))
(assert (= (or x946 x297) x4546))
(assert (x645 x2091))
(assert (= (and (not x4913) x4259) x725))
(assert (= (and x3688 x2502) x912))
(assert (x4842 x129))
(assert (= (and x2726 x4016) x3700))
(assert (x4842 x2241))
(assert (x4842 x2497))
(assert (x4842 x4490))
(assert (=> (<= x2297 10000) (= (x956 x2297) (x636 x2297))))
(assert (x4842 x1090))
(assert (x4842 x4206))
(assert (= x5205 (x4585 (x636 x5205))))
(assert (x4842 x3205))
(assert (= (or x1672 x2958) x3685))
(assert (= (and x700 x1986) x3963))
(assert (x4842 x1055))
(assert (= (x4585 (x5250 x4342 1)) (+ 1 (x4585 x4342))))
(assert (=> (>= 10000 x712) (= (x956 x712) (x636 x712))))
(assert (= (or x1207 x2753) x802))
(assert (x4842 x2490))
(assert (= (and x610 x1532) x3027))
(assert (= (x4585 (x956 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (= x36 (and (not x1441) x128)))
(assert (x4621 x4477))
(assert (x4842 x4508))
(assert (= x955 (x4585 (x636 x955))))
(assert (= x3426 (x4585 (x636 x3426))))
(assert (x4842 x3139))
(assert (x4842 x4819))
(assert (x4842 x5256))
(assert (x4842 x67))
(assert (x4842 x4364))
(assert (= x746 (x4585 (x636 x746))))
(assert (x4842 x776))
(assert (x4842 x4996))
(assert (= x892 (and (not x3638) x1561)))
(assert (x4842 x91))
(assert (= x5037 (x4585 (x636 x5037))))
(assert (x4842 x4159))
(assert (x4842 x326))
(assert (= (and x2231 x788) x3253))
(assert (=> (>= 10000 x4302) (= (x956 x4302) (x636 x4302))))
(assert (=> (<= x811 10000) (= (x636 x811) (x956 x811))))
(assert (x4842 x1641))
(assert (x4842 x3413))
(assert (x4842 x3067))
(assert (=> (<= x3092 10000) (= (x956 x3092) (x636 x3092))))
(assert (x5194 x3935))
(assert (=> (>= 10000 x615) (= (x956 x615) (x636 x615))))
(assert (= (=> (and (and (<= 0 x773) (= (> x1028 x773) x3347) (<= x773 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and (= x4663 x1028) x3347) (and (not x3347) (= x4663 0)))) x367) x1308))
(assert (= (and (not x4622) x5076) x1852))
(assert (x4842 x743))
(assert (x4842 x955))
(assert (= x2579 (and (not x330) x4109)))
(assert (= x718 (and x4997 x560)))
(assert (x4842 x2307))
(assert (x4842 x240))
(assert (x4842 x4283))
(assert (x4842 x2205))
(assert (x4842 x3696))
(assert (= (or x4661 x854) x1344))
(assert (x4842 x789))
(assert (x4842 x3052))
(assert (= x3235 (or x4949 x3481)))
(assert (= (and x3241 x435) x2188))
(assert (x4842 x156))
(assert (= (x4585 (x956 35417553099779373699389112480655434059402432070290151981503827724506945814528)) 35417553099779373699389112480655434059402432070290151981503827724506945814528))
(assert (= 1461501637330902918203684832716283019655932542975 (x4585 (x956 1461501637330902918203684832716283019655932542975))))
(assert (x4842 x1857))
(assert (x4842 x3500))
(assert (x4842 x1082))
(assert (x4842 x2951))
(assert (x4842 x3318))
(assert (x4842 x818))
(assert (=> (<= x4556 10000) (= (x956 x4556) (x636 x4556))))
(assert (= (and x1335 (not x4293)) x2781))
(assert (x4621 x393))
(assert (x4842 x4855))
(assert (= x423 (and (not x193) x3002)))
(assert (x4842 x2084))
(assert (=> (<= x3147 10000) (= (x636 x3147) (x956 x3147))))
(assert (x4842 x4901))
(assert (= x2776 (and x2866 x5144)))
(assert (x2961 x3546 x3014))
(assert (= x933 (and x4063 x2116)))
(assert (= x1330 (and x5355 x1851)))
(assert (= x386 (and x3273 x3953)))
(assert (= (x4585 (x636 x4948)) x4948))
(assert (x4842 x2940))
(assert (x4842 x4089))
(assert (x4842 x2802))
(assert (x4842 x481))
(assert (= x4076 (and x4426 x5)))
(assert (x4842 x211))
(assert (= (and x1819 x3386) x3605))
(assert (= (+ 1 (x4585 x1504)) (x4585 (x5250 x1504 1))))
(assert (x4842 x5336))
(assert (= (and x1 x1577) x1206))
(assert (= (x4585 (x5250 x987 2)) (+ 2 (x4585 x987))))
(assert (x4621 x5190))
(assert (= x2757 (=> (and (= x1023 0) (= x2176 x2230)) x1579)))
(assert (x4842 x3708))
(assert (x645 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (>= 10000 x3964) (= (x956 x3964) (x636 x3964))))
(assert (x4842 x2565))
(assert (x4842 x2913))
(assert (= (and x3939 x2188) x4825))
(assert (= x4459 (not (and (= x4347 (x2828 (x636 x4736) x1283 0)) (<= x3886 1461501637330902918203684832716283019655932542975) (= (x4511 x4742) x3886) (<= 0 x3886) (< x3886 1461501637330902918203684832716283019655932542976) (= x4742 (x5250 x4347 1))))))
(assert (x4842 x2289))
(assert (= (x4585 (x5250 x2836 1)) (+ 1 (x4585 x2836))))
(assert (x4842 x4641))
(assert (= x1356 (and x959 x4266)))
(assert (x4842 x4536))
(assert (= x2958 (or x2610 x1629)))
(assert (x4842 x1966))
(assert (x4842 x1408))
(assert (= x4677 (=> (and (or x4460 (not x4460)) (= (= 0 x4639) x4460)) x889)))
(assert (= x1628 (and x4544 x2579)))
(assert (x4842 x1472))
(assert (= x1875 (and x425 x194)))
(assert (x4842 x3882))
(assert (= x2502 (and x2231 (not x788))))
(assert (= x737 (=> (and (= x4696 0) (= x3376 x1134)) x653)))
(assert (= x2820 (and x1316 x2889)))
(assert (= (and x1876 x3406) x1563))
(assert (x4842 x1550))
(assert (x4842 x1255))
(assert (x4842 x1917))
(assert (= (x636 1865448899) (x956 1865448899)))
(assert (= x5244 (=> (and (= x4627 x1586) (= x1113 0)) x631)))
(assert (= (and (not x4749) x2786) x2089))
(assert (= (=> (and (= (= x2772 0) x3357) (or (not x3357) x3357)) x2059) x3462))
(assert (x4842 x4828))
(assert (x4842 x1113))
(assert (x4842 x928))
(assert (= x3761 (and x3048 x1444)))
(assert (= x989 x2483))
(assert (= (and (not x5206) x3654) x2250))
(assert (= (and (not x5010) x823) x4458))
(assert (= x819 (=> (and (= x3966 x2980) (= 0 x4064)) x4193)))
(assert (= x731 (and x2078 x3540)))
(assert (= x3686 (and (not x1658) x1856)))
(assert (x4842 x95))
(assert (x4842 x3014))
(assert (= x528 (x4585 (x636 x528))))
(assert (= x2397 (=> (and (= x985 x368) (= x1953 x347)) x3711)))
(assert (x4621 x2603))
(assert (= (or (and x4462 x937) (and x4160 x47) x3281 (and x62 x5266) (and (not x3121) x3326) x4023 x2195 (and x2249 x2573) (and (not x294) x5193)) x1379))
(assert (x4842 x1366))
(assert (= x3073 (and x3829 (not x2613))))
(assert (x4842 x2306))
(assert (= x4960 (and x3455 x3110)))
(assert (= (or x3926 x5125) x3165))
(assert (x645 x2615))
(assert (x4842 x1993))
(assert (= x2519 (and (not x1895) x862)))
(assert (= (x4585 (x5250 x2758 2)) (+ 2 (x4585 x2758))))
(assert (x4842 x4417))
(assert (x4842 x3319))
(assert (x4842 x4285))
(assert (x5194 x2752))
(assert (= x1915 (or x5094 x3768 x374 x943)))
(assert (= x2154 (and x2391 x881)))
(assert (= (and x5325 x4199) x1502))
(assert (= (and (not x4012) x4433) x2474))
(assert (x4842 x765))
(assert (= (and x5085 x2216) x3557))
(assert (= x5036 (and (not x3048) x1444)))
(assert (= x4787 (and (not x779) x2464)))
(assert (= (and (not x2086) x3565) x2166))
(assert (= x122 (and (not x3109) x5133)))
(assert (= x4174 (and x4595 x2674)))
(assert (= x2507 (and x4361 (not x5225))))
(assert (= (and x1007 x4938) x4419))
(assert (x4842 x633))
(assert (x4842 x4863))
(assert (x4842 x1969))
(assert (= (and x632 x3689) x1105))
(assert (= (x636 26959946667150639794667015087019630673637144422540572481103610249215) (x956 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x5039 (=> (and (= x1334 (x5250 x5293 1)) (= x4733 (x2828 (x636 x2205) x1283 0)) (= (x5250 x4733 1) x5293) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x2205)) x3924)))
(assert (= (+ 2 (x4585 x624)) (x4585 (x5250 x624 2))))
(assert (= x4755 (and (not x1122) x3096)))
(assert (= (and (not x2110) x2501) x1386))
(assert (=> (<= x103 10000) (= (x956 x103) (x636 x103))))
(assert (x4842 x2142))
(assert (x4842 x1844))
(assert (= (and (not x3999) x423) x2239))
(assert (x4842 x720))
(assert (x4842 x1751))
(assert (= (and (not x3697) x532) x466))
(assert (x4842 x3036))
(assert (x4842 x5218))
(assert (x4842 x1023))
(assert (= x5396 (and (not x4220) x3769)))
(assert (= x1421 (and x3848 (not x1428))))
(assert (= x4549 (and (not x2139) x4256)))
(assert (x4842 x2795))
(assert (x4842 x2804))
(assert (= x5382 (=> (and (= x789 x5372) (= x2582 0)) x1931)))
(assert (= (and x235 (not x1099)) x2360))
(assert (x4842 x2235))
(assert (x4842 x2314))
(assert (x4842 x353))
(assert (x4842 x1907))
(assert (x4842 x360))
(assert (= x4608 (and (not x4964) x3427)))
(assert (= (=> (and (= x2077 x299) (= 0 x3631) (= x882 x4060)) x574) x2792))
(assert (= (=> (and (= (= 0 x4168) x1779) (> 1461501637330902918203684832716283019655932542976 x4168) (<= x4168 1461501637330902918203684832716283019655932542975) (<= 0 x4168)) (and (=> x1779 x1759) (=> (and (not x1779) (and (= x2675 (= x5113 0)) (> 1461501637330902918203684832716283019655932542976 x4168) (<= 0 x4168) (= (x1306 (x636 x4168)) x5113) (<= x4168 1461501637330902918203684832716283019655932542975))) (and (=> (and (> 4294967296 x5104) (not x2675)) x1759) (=> (and (= true x580) x2675) x305))))) x3806))
(assert (= (+ (x4585 x4541) 1) (x4585 (x5250 x4541 1))))
(assert (x4842 x4037))
(assert (= x1696 (and x4492 (not x3373))))
(assert (x4842 x1022))
(assert (=> (>= 10000 x4441) (= (x956 x4441) (x636 x4441))))
(assert (x4842 x4840))
(assert (x4842 x4457))
(assert (= (+ 1 (x4585 x2058)) (x4585 (x5250 x2058 1))))
(assert (x4842 x2026))
(assert (= x5302 (or x2321 x1379)))
(assert (= (and x1722 x5394) x1888))
(assert (x4842 x4849))
(assert (x4842 x2780))
(assert (x4842 x4958))
(assert (x4842 x1422))
(assert (= (and x772 x3936) x616))
(assert (= (+ 2 (x4585 x2557)) (x4585 (x5250 x2557 2))))
(assert (= x2679 (or x2065 x2608)))
(assert (x4842 x2779))
(assert (x4621 x1237))
(assert (x4842 x676))
(assert (x4621 x3860))
(assert (x4842 x158))
(assert (x4842 x1892))
(assert (x4842 x133))
(assert (= x1406 (=> (= x1677 (= 0 x5129)) (and (=> (and (= x871 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2014) (and (< x2014 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2014) true)))) (not x1677)) (and (=> x871 x5160) (=> (and (not x871) (and (>= x663 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x663) (= x1404 (> x663 x2736)) (= x2736 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1786))))) (and (=> x1404 x5160) (=> (and (not x1404) (and (= x4116 (x2989 (+ x663 x1786))) (<= x3205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3205 0) (= (x1796 x2611) x3205) (= (x2828 (x636 x3494) (x956 5) 0) x2611) (= x1013 (< x2736 x3205)))) (and (=> (and (not x1013) (and (= (x2989 (+ x1786 x3205)) x990) (= 1 x849) (= x2672 32))) x2044) (=> x1013 x5160))))))) (=> x1677 x5160)))))
(assert (x4842 x2839))
(assert (x4842 x827))
(assert (= (and x3641 (not x3810)) x4379))
(assert (= x223 (x4585 (x636 x223))))
(assert (= (and x988 x5132) x919))
(assert (x4842 x4683))
(assert (x4842 x2803))
(assert (= (and x1736 x4088) x2872))
(assert (x4842 x2412))
(assert (= x1926 (or (and (not x3580) x4411) x283)))
(assert (x4842 x2627))
(assert (x4842 x1466))
(assert (= (+ 1 (x4585 x4347)) (x4585 (x5250 x4347 1))))
(assert (= (+ (x4585 x2621) 1) (x4585 (x5250 x2621 1))))
(assert (= x314 (x4585 (x636 x314))))
(assert (= (and x4649 x2421) x2476))
(assert (= (x4585 (x956 24044834009420335638544845215851342251227478490780828673611325350056707489792)) 24044834009420335638544845215851342251227478490780828673611325350056707489792))
(assert (x4842 x2790))
(assert (x4842 x3986))
(assert (= x4963 (and x4279 x22)))
(assert (= x4933 (and x1476 x2233)))
(assert (= (and x1584 x771) x5387))
(assert (= (and x1282 x1627) x647))
(assert (= x2129 (and x1839 x1762)))
(assert (x4842 x3754))
(assert (x4842 x4540))
(assert (x4842 x662))
(assert (= (and x2591 x229) x2822))
(assert (= (and x1895 x862) x3554))
(assert (=> (>= 10000 x1343) (= (x636 x1343) (x956 x1343))))
(assert (= (and x1037 (not x1527)) x4505))
(assert (x4842 x2071))
(assert (x4842 x1634))
(assert (= (=> (and (= (= x347 0) x2553) (or x2553 (not x2553))) x5322) x3711))
(assert (= (or x4340 x4379 x4301 x1208 x4173 x3279) x692))
(assert (= x2307 (x4585 (x636 x2307))))
(assert (x4842 x1633))
(assert (x4621 x3216))
(assert (x4842 x2257))
(assert (= (or (and x957 x1110) x4105 (and (not x1781) x182) (and x2628 (not x383)) (and x2234 x4244) x2436) x1244))
(assert (x4842 x3534))
(assert (x4842 x2832))
(assert (x645 x4687))
(assert (= (x4585 (x5250 x3726 1)) (+ (x4585 x3726) 1)))
(assert (= (+ (x4585 x2007) 1) (x4585 (x5250 x2007 1))))
(assert (= x1573 (and x1813 x1985)))
(assert (= (and (not x690) x1070) x4184))
(assert (= (x4585 (x636 x712)) x712))
(assert (x4842 x463))
(assert (= x2733 (x4585 (x636 x2733))))
(assert (x4842 x287))
(assert (x4842 x3776))
(assert (= (and x1933 x1845) x1569))
(assert (x2961 x4335 x4772))
(assert (= x5099 (and x2776 (not x420))))
(assert (x4842 x2603))
(assert (= x5339 (and x2887 x2263)))
(assert (= x1743 (and x1724 (not x1944))))
(assert (= x1008 x4227))
(assert (=> (>= 10000 x1972) (= (x636 x1972) (x956 x1972))))
(assert (x4842 x2918))
(assert (x4842 x3881))
(assert (= x3735 (and x2269 (not x2187))))
(assert (= (and x3839 x1879) x1445))
(assert (x4842 x4862))
(assert (x4842 x3344))
(assert (x4842 x2604))
(assert (= (and (not x2575) x3355) x3466))
(assert (= (and x3313 x253) x2260))
(assert (x4842 x4025))
(assert (= (and x2291 x3197) x1323))
(assert (= (and x3091 x3554) x4374))
(assert (x2961 x2688 x1153))
(assert (x4842 x4908))
(assert (x4842 x3781))
(assert (= x432 (and x3597 x4707)))
(assert (= (x4585 (x5250 x1622 1)) (+ (x4585 x1622) 1)))
(assert (x4842 x2457))
(assert (= (or (and (not x4841) x3076) (and x4018 x4563)) x3421))
(assert (= x2944 (and x3528 x919)))
(assert (x4842 x4363))
(assert (= (and x3755 x3859) x4113))
(assert (x4842 x2896))
(assert (x4842 x3805))
(assert (= (or x742 x3728) x1663))
(assert (= (x956 3583811254) (x636 3583811254)))
(assert (x4842 x1853))
(assert (= (or x2694 x5258 x2500 x2682) x4858))
(assert (x4842 x347))
(assert (= x401 (or (and (not x3077) x2907) x934 (and x4455 x2265) (and x2900 x1342) x3380 (and x291 (not x1319)))))
(assert (= x4735 (x4585 (x636 x4735))))
(assert (x4621 x1683))
(assert (= x4387 (or x159 x558 x879)))
(assert (= x506 (and x83 x1482)))
(assert (= (x4585 (x5250 x4115 1)) (+ 1 (x4585 x4115))))
(assert (x4842 x4679))
(assert (x4842 x3045))
(assert (= x4941 (x4585 (x636 x4941))))
(assert (x4842 x483))
(assert (x4621 x3754))
(assert (= (and (not x3657) x3748) x3150))
(assert (= (=> (and (= x2505 x368) (= x347 x2153)) x3711) x1906))
(assert (= (and x1110 (not x957)) x2708))
(assert (=> (>= 10000 x78) (= (x636 x78) (x956 x78))))
(assert (= (and x1878 x271) x2587))
(assert (x4842 x837))
(assert (x4842 x982))
(assert (= x2764 (and x3727 x3148)))
(assert (= (and x4510 x741) x971))
(assert (= (and x2481 x4607) x4109))
(assert (x4621 x4143))
(assert (x4842 x4097))
(assert (x4842 x4048))
(assert (= x2997 (or x3368 x180)))
(assert (= x4736 (x4585 (x636 x4736))))
(assert (= x3076 (and (not x4563) x4018)))
(assert (x4842 x3737))
(assert (=> (>= 10000 x4606) (= (x636 x4606) (x956 x4606))))
(assert (x4842 x2186))
(assert (= (x4585 (x636 x976)) x976))
(assert (= (and (not x1615) x407) x1304))
(assert (x4842 x2200))
(assert (x4842 x5171))
(assert (= (and x4550 x1547) x3878))
(assert (x4842 x4265))
(assert (= (and x141 x4927) x3294))
(assert (= x3932 (or x5043 x3299)))
(assert (x4842 x1831))
(assert (= 2835717307 (x4585 (x956 2835717307))))
(assert (= x1540 (or x208 x3521 x3471 x2432)))
(assert (x2961 x1381 x2134))
(assert (= (and x2835 x2066) x3079))
(assert (= (or x3294 x2318) x4421))
(assert (=> (>= 10000 x4168) (= (x636 x4168) (x956 x4168))))
(assert (x4842 x1086))
(assert (= x3092 (x4585 (x636 x3092))))
(assert (= (and x3614 x1669) x1674))
(assert (= (or (and x3397 (not x3357)) x2748) x1003))
(assert (x4842 x3795))
(assert (x4842 x2261))
(assert (= x2151 (=> (= x3317 (= 0 x1123)) (and (=> x3317 x1008) (=> (not x3317) x510)))))
(assert (= x1341 (or x2562 x5175 x3093 x2842 x512 x496)))
(assert (x5194 x2560))
(assert (x4842 x3821))
(assert (= 2134560854 (x4585 (x956 2134560854))))
(assert (x4842 x1720))
(assert (x4842 x4675))
(assert (= (and (not x1575) x647) x2156))
(assert (= x351 x1008))
(assert (x4842 x1678))
(assert (= (and (not x1157) x2433) x3372))
(assert (x4842 x3664))
(assert (x4842 x4666))
(assert (x4842 x2480))
(assert (x4842 x4405))
(assert (= (x4585 (x636 x3949)) x3949))
(assert (x4842 x1661))
(assert (x4842 x672))
(assert (x4842 x5205))
(assert (x4842 x2158))
(assert (=> (<= x4097 10000) (= (x636 x4097) (x956 x4097))))
(assert (x4842 x3523))
(assert (= (and x1837 x1241) x4053))
(assert (= (x4585 (x5250 x5253 1)) (+ 1 (x4585 x5253))))
(assert (x4842 x5197))
(assert (= x3339 (and (not x1172) x2953)))
(assert (= x3129 (or x992 x3086)))
(assert (x4842 x3276))
(assert (x4842 x2459))
(assert (= (=> (and (= x1550 x3391) (= x3987 0)) x2101) x4726))
(assert (= (x4585 (x636 x2387)) x2387))
(assert (x4842 x4299))
(assert (x4842 x4687))
(assert (x4842 x3860))
(assert (= (and x4111 (not x2888)) x4259))
(assert (x4842 x4068))
(assert (x4621 x2307))
(assert (x4842 x1411))
(assert (x4842 x2414))
(assert (x4842 x2329))
(assert (x4842 x1332))
(assert (= x3255 (and (not x147) x4796)))
(assert (x4842 x1104))
(assert (x4842 x4811))
(assert (= x4763 (and (not x2251) x2797)))
(assert (x4842 x4254))
(assert (= x3460 (and (not x114) x4194)))
(assert (= (and (not x3101) x2944) x1653))
(assert (= x2060 (and (not x3688) x2502)))
(assert (= x4949 (and x4719 x1203)))
(assert (x4842 x5158))
(assert (x4842 x1590))
(assert (x4621 x3267))
(assert (= (or x1704 x2278) x5357))
(assert (x4842 x1945))
(assert (x4842 x4289))
(assert (= (and x143 x2507) x689))
(assert (= x1382 (x4585 (x636 x1382))))
(assert (= x3704 (and (not x3513) x802)))
(assert (= (x4585 (x636 x3371)) x3371))
(assert (= x3361 (=> (and (>= x2020 0) (= x2861 x4243) (= x2716 x4536) (= (x4453 x1331) x3064) (<= x3064 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3064) (= x2020 (x2401 x2756)) (<= x2020 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x585 x483) (= x2756 (x5250 x1331 1)) (= x4520 (x2989 (+ 32 x585))) (= x1090 x1361) (= x1071 x663)) x2094)))
(assert (= (=> (and (= x2304 x4996) (= x111 x3650)) x3627) x521))
(assert (x4842 x306))
(assert (= (x636 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x956 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (x645 x4944))
(assert (= (or x999 x1535) x2465))
(assert (x4842 x2504))
(assert (x4842 x1463))
(assert (= (or x3932 x3587 x629 x5302) x3397))
(assert (= (x4585 (x636 x765)) x765))
(assert (x4842 x642))
(assert (= (+ 1 (x4585 x1644)) (x4585 (x5250 x1644 1))))
(assert (= x4301 (and x2983 (not x4013))))
(assert (x4842 x1808))
(assert (= x1838 (and x2024 (not x245))))
(assert (x4842 x3624))
(assert (= x5332 (=> (and (or (and (and (and (= (x4669 x4792) x73) (> 1461501637330902918203684832716283019655932542976 x73) (<= 0 x73) (= (x1843 (- x1618 x73)) x3928) (<= x73 1461501637330902918203684832716283019655932542975) (= (> x3928 0) x2838)) (or (and (not x2838) (and (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x3647) (= x1637 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= x3350 (x5403 1461501637330902918203684832716283019655932542975 x1270)))) (and (and (= x4494 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= x2300 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (<= 0 x2813) (= (x1011 x5233) x2813) (<= x2813 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2813) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x1748) (= (x2828 (x636 x1618) x1283 0) x5233)) x2838))) x4876) (and (not x4876) (and (or (and (not x5085) (and (>= x158 0) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x1732) (= x3095 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= (x1869 x3003) x158) (= x3003 (x5250 x4792 1)) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x4065) (> 1461501637330902918203684832716283019655932542976 x158) (<= x158 1461501637330902918203684832716283019655932542975))) (and x5085 (and (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x3237) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x3676) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x3623)))) (and (= (x4669 x4792) x2046) (<= 0 x2046) (< x2046 1461501637330902918203684832716283019655932542976) (= x5085 (= x2046 0)) (>= 1461501637330902918203684832716283019655932542975 x2046))))) (= x4876 (ite (< x2661 x3271) (not (= 0 x1618)) (> x3271 x2661)))) x1152)))
(assert (= (and (not x1236) x5168) x4222))
(assert (= (x4585 (x636 x4477)) x4477))
(assert (x4842 x4045))
(assert (= (and x2860 (not x3907)) x2130))
(assert (= x3135 (and x295 (not x4269))))
(assert (= x418 (or (and x4202 (not x4106)) x3851)))
(assert (x4842 x5127))
(assert (= (=> (and (< x4168 1461501637330902918203684832716283019655932542976) (>= x4168 0) (<= x4168 1461501637330902918203684832716283019655932542975) (= x3051 (= x4168 0))) (and (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x4168) (= x749 (= 0 x2181)) (= x2181 (x1306 (x636 x4168))) (< x4168 1461501637330902918203684832716283019655932542976) (= x3375 (x2989 (+ x1854 32))) (>= x4168 0) (= (x2989 (+ x451 32)) x1854) (= x451 (x2989 (+ x3321 4)))) (not x3051)) (and (=> (and (not x749) (> 4294967296 x448)) x2299) (=> x749 x5005))) (=> x3051 x2299))) x2619))
(assert (= (or x4307 x3822) x3768))
(assert (= x4603 (=> (and (= x4573 x1472) (<= 0 x589) (= x2347 x256) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x589) (= (x3411 x3824) x589)) x251)))
(assert (x4842 x3508))
(assert (x4842 x1270))
(assert (= (and (not x4295) x3700) x4252))
(assert (x4842 x727))
(assert (x4842 x2311))
(assert (x4842 x5032))
(assert (= (and x3994 (not x2264)) x2794))
(assert (= x3601 (and x2460 x3963)))
(assert (= (and (not x195) x3791) x5090))
(assert (x4842 x4080))
(assert (x4842 x4978))
(assert (= x1581 (and x4460 x2717)))
(assert (= x1723 (and x988 (not x5132))))
(assert (= x2750 (or x2377 x2132 x2372 x2715 x3337 x3353)))
(assert (x4842 x1980))
(assert (x645 x4574))
(assert (x4842 x4101))
(assert (= (=> (and (= 0 x2087) (= x2524 x4968)) x4932) x375))
(assert (x4842 x1565))
(assert (x4842 x1435))
(assert (= x4137 (and (not x3306) x304)))
(assert (= (and x4258 x1259) x3728))
(assert (= x2405 (or x5220 x4594)))
(assert (x4842 x5380))
(assert (= (and x295 x4269) x2659))
(assert (= x4371 (and x485 (not x753))))
(assert (x4842 x1469))
(assert (= (and x3685 x1891) x4456))
(assert (x4842 x3030))
(assert (= (and (not x974) x971) x2767))
(assert (= (and x2707 x1063) x3194))
(assert (= (+ (x4585 x3610) 3) (x4585 (x5250 x3610 3))))
(assert (= (x4585 (x636 x2529)) x2529))
(assert (= (x4585 (x5250 x1585 2)) (+ 2 (x4585 x1585))))
(assert (= x1929 (x4585 (x636 x1929))))
(assert (= (x4585 (x636 x52)) x52))
(assert (= x1126 (and (not x373) x1043)))
(assert (x4842 x5098))
(assert (x4621 x2297))
(assert (x4842 x1897))
(assert (= x2975 (or x3616 x1540)))
(assert (x4842 x5248))
(assert (x4842 x5022))
(assert (x4842 x206))
(assert (x4621 x2808))
(assert (= (and x445 x1668) x5116))
(assert (= x4028 (and x1918 (not x3927))))
(assert (= x1335 (and (not x2668) x1653)))
(assert (= (x4585 (x5250 x1782 1)) (+ 1 (x4585 x1782))))
(assert (= (and x5278 (not x5180)) x1450))
(assert (x4842 x2955))
(assert (= x2406 (=> (and (and (= (x2828 (x636 x2716) (x956 158) 0) x3950) (<= x2314 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4275 (x5250 x2621 1)) (= x3658 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (<= x3352 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x2716) (x956 155) 0) x4778) (>= x773 0) (<= 0 x3352) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x1862) (= (x331 x4275) x2439) (= (> x2439 x773) x1203) (= (x2828 (x636 x3658) x4778 0) x794) (>= x2314 0) (= (x5250 x794 2) x1313) (<= 0 x2439) (= x1283 (x2828 (x636 x2716) (x956 154) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x773) (= (x5120 x1313) x2314) (= x1884 (x2828 (x636 x4390) x1283 0)) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x4390) (= x540 (x2041 x1943)) (= (x2828 (x636 x1862) x3950 0) x2621) (= x1943 (x5250 x1884 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2439) (>= x540 0) (= x3352 (x3814 x2621))) (or (and (not x1203) (= x885 0)) (and (= x885 x2439) x1203))) x2359)))
(assert (x4842 x1455))
(assert (= (=> (= x4257 (= 0 x2772)) (and (=> (and (= x1353 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4098) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4098) true) (> 32 x4098)))) (not x4257)) (and (=> (and (not x1353) (and (= x4043 (< x1385 x2861)) (= x1385 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2606))) (<= x2861 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2861))) (and (=> x4043 x1730) (=> (and (not x4043) (and (= (> x14 x1385) x300) (<= 0 x14) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x14) (= x413 (x2828 (x636 x3494) (x956 5) 0)) (= x14 (x2440 x413)) (= (x2989 (+ x2606 x2861)) x1185))) (and (=> x300 x1730) (=> (and (and (= 32 x4650) (= x2945 (x2989 (+ x14 x2606))) (= 1 x1192)) (not x300)) x4436))))) (=> x1353 x1730))) (=> x4257 x1730))) x2059))
(assert (= x3293 (and x3424 x1052)))
(assert (x4842 x1932))
(assert (= (+ (x4585 x563) 1) (x4585 (x5250 x563 1))))
(assert (x4842 x3441))
(assert (= (and x4805 x4316) x3689))
(assert (= (x4585 (x636 x5190)) x5190))
(assert (= (+ 1 (x4585 x1199)) (x4585 (x5250 x1199 1))))
(assert (x4842 x5074))
(assert (x4842 x821))
(assert (x4842 x3252))
(assert (= x543 (x4585 (x636 x543))))
(assert (= (and x2417 (not x155)) x1167))
(assert (x4842 x1129))
(assert (= x1520 (and x2818 x2838)))
(assert (x4842 x4187))
(assert (= x943 (or x4008 x3819)))
(assert (= (and (not x3211) x709) x1735))
(assert (= (=> (and (= x4675 0) (= x4940 x5011)) x2515) x3450))
(assert (= x937 (and x294 x5193)))
(assert (= x5363 (and x2362 (not x1863))))
(assert (x645 x1401))
(assert (= (and x2777 x1926) x2296))
(assert (= (or x5048 x3709 x1309 x3820 x3648 x1573) x3925))
(assert (= x2101 (=> (and (= x4253 x3987) (= x1550 x4025)) x3653)))
(assert (= x5251 (and (not x4268) x1743)))
(assert (= x4857 (and x23 (not x4888))))
(assert (x4842 x757))
(assert (x4842 x1385))
(assert (x4842 x3262))
(assert (x4842 x4614))
(assert (x4842 x2107))
(assert (= x3099 (or x2650 x2405 x1567)))
(assert (x4842 x1010))
(assert (= (or x1686 x5060 x2038 x3006 x2993 x1151 x313 x3750 x4337) x2784))
(assert (x4842 x2331))
(assert (= (and x2408 x3561) x4495))
(assert (x4842 x4866))
(assert (x4842 x2624))
(assert (= x4346 x3740))
(assert (= x4705 x1008))
(assert (x4842 x4762))
(assert (= (or (and x2316 x3780) (and (not x4630) x1202)) x4821))
(assert (x4842 x4532))
(assert (x4842 x1071))
(assert (x4842 x2990))
(assert (x4842 x3201))
(assert (= x1671 (and x4163 x1251)))
(assert (x645 x4050))
(assert (x5391 x4687))
(assert (= (and (not x5118) x555) x4529))
(assert (= (and (not x2396) x3800) x4273))
(assert (= x3516 (and (not x3273) x3953)))
(assert (x4842 x1528))
(assert (x4842 x4973))
(assert (= (and (not x4607) x2481) x1488))
(assert (= (and x3028 x1351) x4018))
(assert (= x1413 (=> (and (= x3431 x1036) (= x486 x2901) (= x4951 x5320) (= x2015 x4033)) x4854)))
(assert (= x4248 (and (not x3749) x2478)))
(assert (x4842 x4345))
(assert (= x182 (and x383 x2628)))
(assert (x4842 x4151))
(assert (x4842 x3381))
(assert (= x3789 (and (not x2580) x51)))
(assert (x4842 x4201))
(assert (x4842 x338))
(assert (x4842 x3915))
(assert (= x1035 (or x4203 x264)))
(assert (= x3088 (=> (and (or (and x3907 (= x3656 (x5250 x1283 2))) (and (= x504 (x2828 (x636 x1601) x1283 0)) (not x3907))) (= (= x1601 0) x3907)) x5039)))
(assert (x4842 x2548))
(assert (x4842 x3841))
(assert (= (x956 2835717307) (x636 2835717307)))
(assert (= (x636 2929553584) (x956 2929553584)))
(assert (x4621 x52))
(assert (x4842 x4245))
(assert (= (and x4420 x3837) x2959))
(assert (= (and x2050 x1031) x599))
(assert (= (and x2530 x611) x1239))
(assert (= (+ 1 (x4585 x1283)) (x4585 (x5250 x1283 1))))
(assert (= (and x1823 x4240) x3780))
(assert (= x3568 (and (=> (and (= (> x922 x3319) x2086) x5147) (and (=> x2086 x5271) (=> (and (not x2086) (and (= (x1843 (- x3319 x922)) x4089) (= x878 (> x818 x4089)))) x1372))) (=> (and (not x5147) (= x878 x5147)) x1372))))
(assert (= x1790 (and x1078 x5036)))
(assert (x4842 x668))
(assert (x4842 x4401))
(assert (x4842 x406))
(assert (x4842 x2703))
(assert (x4842 x3524))
(assert (x4842 x1051))
(assert (x4842 x3582))
(assert (x4842 x5378))
(assert (x4842 x4395))
(assert (x4842 x4200))
(assert (= x4469 (=> (and (= x2855 0) (= x2472 x2230)) x3835)))
(assert (= x4111 (and x2597 x5288)))
(assert (x4842 x4168))
(assert (x4842 x497))
(assert (= (and x155 x2417) x792))
(assert (x4842 x845))
(assert (x4842 x1135))
(assert (x4842 x4773))
(assert (x4842 x4026))
(assert (= 75483562 (x4585 (x956 75483562))))
(assert (x4842 x3733))
(assert (= x3144 (or x122 x4745)))
(assert (= x1008 x569))
(assert (x4842 x5062))
(assert (x4621 x4954))
(assert (= x1412 (and x2242 x137)))
(assert (x4842 x3539))
(assert (x4842 x2326))
(assert (= (and x5216 x5000) x1856))
(assert (= (and (not x4407) x1327) x2274))
(assert (x4842 x3145))
(assert (= x3284 (and (not x3025) x2135)))
(assert (x4842 x3804))
(assert (x4842 x5392))
(assert (= (x636 1313710058) (x956 1313710058)))
(assert (x4842 x3038))
(assert (x4842 x733))
(assert (= (=> (and (= x347 x2480) (= x368 x1477)) x3711) x2950))
(assert (x4842 x4884))
(assert (= (+ 1 (x4585 x4211)) (x4585 (x5250 x4211 1))))
(assert (= (and x2870 x1320) x2045))
(assert (x4842 x2722))
(assert (x4621 x2102))
(assert (x4842 x543))
(assert (x4842 x2877))
(assert (x4842 x3888))
(assert (x4842 x3600))
(assert (= (and x4111 x2888) x4680))
(assert (= (=> (= x3455 (< 0 x1709)) (and (=> (and x3455 (and (= x3189 (= x746 0)) (>= x3271 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3271))) (and (=> (and (not x3189) (and (= (= 0 x4626) x4220) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4626) (>= x4626 0) (= (x3572 x4685) x4626) (= (x5250 x1021 2) x4685) (= x1021 (x2828 (x636 x746) x734 0)))) (and (=> (and (and (and (= x4622 (ite (> x3271 0) (not (= x765 0)) (> x3271 0))) (<= x765 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x765) (= x765 (x1432 x2552)) (= x2552 (x5250 x734 1)) (>= x765 0)) (or (and (= x4622 x4353) (not x4622)) (and x4622 (and (= (x2828 (x636 x765) x734 0) x1081) (<= 0 x1273) (= (not x3756) x4353) (<= x1273 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1709 x1273) x3756) (= x1273 (x3572 x1260)) (= x1260 (x5250 x1081 2)))))) x4220) x3404) (=> (not x4220) x351))) (=> x3189 x5207))) (=> (not x3455) x2011))) x1108))
(assert (= (x956 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x636 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (x4842 x2995))
(assert (= (x4585 (x956 1038142104)) 1038142104))
(assert (= x2191 (and x1384 (not x4513))))
(assert (x4621 x5001))
(assert (= (or x805 x5396) x316))
(assert (= x707 (=> (and (= x4591 x4219) (= x1940 x807)) x5203)))
(assert (= x5013 (or x2027 x5289)))
(assert (= x3668 (=> (and (= x241 0) (= x2670 x5098)) x3843)))
(assert (x4842 x4447))
(assert (= (=> (and (= x2524 x807) (= x2087 x4591)) x5203) x4932))
(assert (x4842 x2197))
(assert (= (and x75 (not x848)) x30))
(assert (x4842 x4980))
(assert (= (and x4375 x5135) x1285))
(assert (x4842 x1646))
(assert (= x2049 (and x4923 x4576)))
(assert (= (x956 2236579515) (x636 2236579515)))
(assert (= (and x1805 x883) x2510))
(assert (= (and (not x2738) x2045) x771))
(assert (x4842 x2523))
(assert (= x772 (and x2646 (not x5150))))
(assert (x4842 x3033))
(assert (= x5235 (or x1838 x4992)))
(assert (x4842 x2455))
(assert (x4842 x2631))
(assert (= (and x4316 (not x4805)) x726))
(assert (= x3754 (x4585 (x636 x3754))))
(assert (= x2115 (and x2093 (not x4628))))
(assert (= (and (=> (and (and (= x268 x4441) (= 1 x4732)) (not x5224)) x2276) (=> (and (and (= x712 x4441) (= x1688 x732) (= x4232 x2716)) x5224) x1216)) x3120))
(assert (x4842 x2386))
(assert (=> (>= 10000 x3949) (= (x956 x3949) (x636 x3949))))
(assert (= x1772 (and x1605 (not x1132))))
(assert (= x1444 (and x1671 (not x1139))))
(assert (= (and x5188 x863) x4969))
(assert (= (and x2211 (not x5335)) x1955))
(assert (x4842 x4065))
(assert (=> (>= 10000 x2266) (= (x636 x2266) (x956 x2266))))
(assert (=> (>= 10000 x3193) (= (x636 x3193) (x956 x3193))))
(assert (= x3522 (=> (and (= x4587 (x2828 (x636 x746) x1688 0)) (= x1001 (x5250 x8 1)) (= x8 (x5250 x4587 1))) x2145)))
(assert (x4842 x809))
(assert (x4842 x1498))
(assert (x4842 x3895))
(assert (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x4585 (x956 50292402827334880472107169365697159231523039388532301717704428044325102813184))))
(assert (x4842 x2402))
(assert (=> (>= 10000 x3753) (= (x636 x3753) (x956 x3753))))
(assert (= x3471 (and x2747 x2259)))
(assert (= x3960 (and x2064 (not x2823))))
(assert (x4842 x5067))
(assert (= (and x2371 (not x2798)) x1207))
(assert (= (and x5385 x4658) x874))
(assert (x4842 x940))
(assert (= (=> (and (or x212 (not x212)) (= x212 (= 0 x3106))) x3899) x4538))
(assert (x4842 x615))
(assert (x4842 x887))
(assert (x4842 x4110))
(assert (x4842 x4780))
(assert (x4842 x4380))
(assert (=> (<= x223 10000) (= (x956 x223) (x636 x223))))
(assert (x4842 x1927))
(assert (= x1431 (=> (= (= x3632 0) x310) (and (=> (and (= x2535 x1536) x310) x5101) (=> (and (not x310) (= x261 (or (> x1864 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1864 32) (= true (<= x1864 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) (and (=> (and (= x2535 x1536) x261) x5101) (=> (and (and (= x2535 x3710) (= x4394 1) (= x4249 x4664)) (not x261)) x646)))))))
(assert (= x2464 (and x2588 x3261)))
(assert (= x3965 (=> (and (= x1134 x3863) (= x360 0)) x2853)))
(assert (x4621 x1311))
(assert (= (or x5038 x2416) x5186))
(assert (= x1111 (and x3213 x3224)))
(assert (= (and (not x756) x3225) x2927))
(assert (x4842 x5401))
(assert (x4842 x1299))
(assert (x4842 x4646))
(assert (x645 x4824))
(assert (x4842 x4274))
(assert (= x989 x5069))
(assert (x4842 x3982))
(assert (= (not (and (= (x5250 x5137 1) x2466) (< x1355 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1355) (>= x1355 0) (= x1355 (x4483 x2466)) (= (x2828 (x636 x434) x4778 0) x5137))) x527))
(assert (= x2216 (and x5013 (not x4876))))
(assert (x4842 x1514))
(assert (x4842 x451))
(assert (x4842 x44))
(assert (x4842 x1700))
(assert (x4621 x1929))
(assert (x4842 x2123))
(assert (x4621 x5365))
(assert (= (and x2708 x1676) x4105))
(assert (x4621 x2733))
(assert (= (=> (and (= x1940 x4968) (= 0 x4219)) x707) x3578))
(assert (= (and x4964 x3427) x2478))
(assert (= (and x2188 (not x3939)) x3427))
(assert (x4842 x1446))
(assert (= (=> (and (= x4395 x849) (= x2672 x1711)) x3980) x2044))
(assert (x4842 x4027))
(assert (x4842 x5370))
(assert (= (=> (and (= x4589 x3391) (= 0 x1897)) x4246) x4002))
(assert (= x1309 (and x4972 x386)))
(assert (x4842 x643))
(assert (= x3743 (and x3466 (not x1820))))
(assert (= x2061 (and x1111 x951)))
(assert (=> (>= 10000 x4416) (= (x956 x4416) (x636 x4416))))
(assert (= (or x1673 x4895 x4846 x792 x3157 x1281 x4225 x2366 x2049) x1346))
(assert (x4842 x3613))
(assert (= x1951 (and (not x1364) x623)))
(assert (= (or x584 x3931) x1091))
(assert (= (and x2379 (not x4670)) x271))
(assert (x4842 x4873))
(assert (x4842 x5190))
(assert (x4842 x1968))
(assert (= x4463 (and x923 (not x2972))))
(assert (x4842 x3190))
(assert (x4842 x1058))
(assert (= (or x3135 x1326) x3693))
(assert (= x1422 (x4585 (x636 x1422))))
(assert (=> (<= x3804 10000) (= (x956 x3804) (x636 x3804))))
(assert (=> (<= x4134 10000) (= (x956 x4134) (x636 x4134))))
(assert (= (and (not x1697) x5397) x260))
(assert (= (and x2899 x4392) x2301))
(assert (= x1587 (or x5305 x4945 x1412 (and x1769 x3433) (and x1671 x1139))))
(assert (= x3748 (and x1231 (not x1040))))
(assert (= x2749 (and (not x2726) x4016)))
(assert (= (and x3124 x5124) x2302))
(assert (= x4193 (=> (and (= x4064 x4996) (= x111 x2980)) x3627)))
(assert (= (and x3072 x4221) x1911))
(assert (x4842 x4022))
(assert (x4842 x1134))
(assert (x4621 x2387))
(assert (x4842 x1589))
(assert (= x4153 (and (=> (and (not x1832) (= x1832 x2798)) x1957) (=> (and (= (< x3319 x4682) x425) x1832) (and (=> (and (and (= (x1843 (- x3319 x4682)) x1935) (= x2798 (> x818 x1935))) (not x425)) x1957) (=> x425 x5271))))))
(assert (= (and x580 x1768) x2608))
(assert (= (and x1974 (not x2489)) x253))
(assert (= x354 (and (not x1282) x1627)))
(assert (= (and x5373 x1951) x1996))
(assert (x4842 x5195))
(assert (= x313 (and x4535 x441)))
(assert (= x1936 (and x1403 (not x3746))))
(assert (= (and x1362 x4183) x3222))
(assert (x4842 x1922))
(assert (x4842 x5313))
(assert (x4842 x1952))
(assert (x4621 x314))
(assert (= (and x1494 x3125) x1312))
(assert (= (x636 2030502250) (x956 2030502250)))
(assert (= (and (=> (and (and (= x265 x2123) (= 0 x2330)) (not x4805)) x3850) (=> (and x4805 (and (and (> 1461501637330902918203684832716283019655932542976 x434) (= (x2828 (x636 x2123) x4778 0) x2836) (<= 0 x434) (= x2998 (x5250 x2836 1)) (= (ite (> x3271 1) (not (= 0 x434)) (< 1 x3271)) x632) (= x434 (x4483 x2998)) (<= x434 1461501637330902918203684832716283019655932542975)) (or (and (not x632) (= x632 x1122)) (and (and (<= 0 x3062) (= x1122 (not x1982)) (= x3062 (x4917 x2805)) (<= x3062 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x434) x4778 0) x3429) (= x1982 (> x885 x3062)) (= x2805 (x5250 x3429 2))) x632)))) x5191)) x4333))
(assert (= (and (not x2923) x3060) x4318))
(assert (x4842 x4547))
(assert (x4842 x1624))
(assert (= (or x2218 x1445 x781 x4078 x3417 x1357 x3175 x3288 x1888) x3012))
(assert (x4621 x415))
(assert (x4842 x1355))
(assert (x4842 x833))
(assert (= x2356 (x4585 (x636 x2356))))
(assert (= (and x2536 x4714) x884))
(assert (x4842 x475))
(assert (= (=> (and (= x4354 0) (= x3966 x3808)) x5245) x5272))
(assert (x4842 x4385))
(assert (x4842 x1886))
(assert (= x3379 (=> (and (= x4673 x4958) (= 0 x95)) x1224)))
(assert (x4842 x1874))
(assert (x4621 x1302))
(assert (x645 x3031))
(assert (=> (>= 10000 x3691) (= (x956 x3691) (x636 x3691))))
(assert (= (and x5310 x3323) x2275))
(assert (= (or x3244 x599 x4084 x21 x5263 x1148 x4489 x3041 x5204 x3330 x1939 x1475 x2410 x4889 x2933 x1728 x1657 x4004 x1489 x205 x2503 x1640 x1344 x5162 x1569 x1517 x3226) x1768))
(assert (x4842 x189))
(assert (= (or x1175 x4310 x710 x639) x4202))
(assert (x4842 x1618))
(assert (x4842 x5182))
(assert (x4842 x4383))
(assert (x4842 x5003))
(assert (= x4730 (and x5028 x88)))
(assert (= x2042 (and x3699 (not x2043))))
(assert (= (or x5339 x1347) x4767))
(assert (x2961 x4574 x1740))
(assert (= x1009 (and x128 x1441)))
(assert (= x3791 (or x2518 x4127)))
(assert (= (or (and (not x881) x2391) (and x901 x214)) x4783))
(assert (= (x4585 (x636 x2702)) x2702))
(assert (= (and x1335 x4293) x2662))
(assert (x4842 x2210))
(assert (x4842 x1783))
(assert (= (and x973 x5103) x5059))
(assert (x4842 x4877))
(assert (= 989455977 (x4585 (x956 989455977))))
(assert (x4842 x4910))
(assert (= x3948 (=> (or (and (and (<= x2349 1461501637330902918203684832716283019655932542975) (= x2349 (x822 x3277)) (>= x2349 0) (= (x2828 (x636 x2716) (x956 157) 0) x345) (= x5323 (= 0 x2349)) (= x3277 (x5250 x345 1)) (> 1461501637330902918203684832716283019655932542976 x2349) (= x2735 (not x5323))) x3109) (and (= x3109 x2735) (not x3109))) x713)))
(assert (= x578 (=> (and (= x787 x5011) (= 0 x2124)) x2696)))
(assert (x4842 x3802))
(assert (= (+ 2 (x4585 x2479)) (x4585 (x5250 x2479 2))))
(assert (= (and x2380 x803) x4242))
(assert (x4842 x2096))
(assert (= (+ (x4585 x607) 1) (x4585 (x5250 x607 1))))
(assert (= (x4585 (x956 10936679508223583803006762266923565500374401145016910147028117655998246682624)) 10936679508223583803006762266923565500374401145016910147028117655998246682624))
(assert (x3529 x1630))
(assert (x4842 x2760))
(assert (x4842 x3401))
(assert (= (and x3439 x4092) x3912))
(assert (x4842 x4560))
(assert (x4842 x1068))
(assert (=> (>= 10000 x2529) (= (x956 x2529) (x636 x2529))))
(assert (= (x636 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x956 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (<= x1299 10000) (= (x636 x1299) (x956 x1299))))
(assert (= (x4585 (x636 x3193)) x3193))
(assert (= (x4585 (x636 x1862)) x1862))
(assert (= (and x1551 x1128) x4160))
(assert (= x635 (=> (and (= 0 x1873) (= x394 x2230)) x4476)))
(assert (= (and (not x4235) x4019) x2964))
(assert (x4842 x2014))
(assert (=> (<= x3426 10000) (= (x956 x3426) (x636 x3426))))
(assert (= x5326 (and x4502 x1757)))
(assert (x4842 x4983))
(assert (= (and (=> (and (and (= x669 x3716) (= x3712 x1472) (= x1366 x256)) (not x2735)) x3787) (=> (and (= (= 0 x2080) x4278) x2735) (and (=> (and (not x4278) (and (or (and (not x4292) (and (= x4658 (= x2716 x1972)) (or (and (not x4658) (and (and (and (< x2802 2929553584) (= x2246 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (= 2835717307 x2802)) (not (> 2691771752 x2802)) (<= x4365 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x2728) (<= 0 x4365) (= 32 x3290) (= 2858086653 x2802) (= (x1306 (x636 x2102)) x2728) (= x588 x4140) (not (= x2802 2691771752)) (= 1 x3214) (not (< x2802 2217467699)) (not (< x588 4)) (= x588 4) (not (= x2802 2796547477))) x1187) (= x1187 (= x2102 x2716)))) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x456) (>= x456 0) (not (< x847 2217467699)) (not (> 4 x1280)) (= x1280 x4140) (> x4104 0) (= 1 x3214) (not (< x847 2691771752)) (= x3290 32) (= (x1306 (x636 x1972)) x4104) (< x847 2929553584) (not (= x847 2691771752)) (= 4 x1280) (not (= 2835717307 x847)) (not (= 2796547477 x847)) (= x847 2858086653) (= x806 77053863734975077137548456399560439977311721439096602559221323163398253314048)) x4658)))) (and x4292 (and (= x211 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (> 2691771752 x656)) (not (= x656 2691771752)) (> 2929553584 x656) (<= 0 x2893) (not (= x656 2796547477)) (not (< x3802 4)) (not (= x656 2835717307)) (not (< x656 2217467699)) (= 2858086653 x656) (= x4140 x3802) (= x3214 1) (= 32 x3290) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2893) (> x2114 0) (= (x1306 (x636 x4735)) x2114) (= 4 x3802)))) (and (= (= x4735 x2716) x4292) (= x1568 (x2989 (+ x3716 160))) (= 4 x4140)))) x4528) (=> (and (and (= 0 x5023) (= x614 x3716)) x4278) x1325)))) x713))
(assert (=> (>= 10000 x4694) (= (x636 x4694) (x956 x4694))))
(assert (= x3105 (and (not x5373) x1951)))
(assert (= x1388 (and x356 x309)))
(assert (x4842 x3486))
(assert (= x3778 (or x4034 x2106)))
(assert (= (and x4580 x3310) x5305))
(assert (= x1541 (and x4086 (not x183))))
(assert (x4842 x3519))
(assert (= x221 x2011))
(assert (x4842 x292))
(assert (x4842 x185))
(assert (= x2789 x526))
(assert (x4842 x2856))
(assert (= x1299 (x4585 (x636 x1299))))
(assert (x4842 x4867))
(assert (= (+ 1 (x4585 x8)) (x4585 (x5250 x8 1))))
(assert (x4842 x2633))
(assert (= x1960 (and x1946 x670)))
(assert (x5194 x1608))
(assert (x4842 x3545))
(assert (x645 x3030))
(assert (= (x4585 (x636 x3019)) x3019))
(assert (= (and x2371 x2798) x4194))
(assert (= x20 (and (not x186) x4546)))
(assert (x4842 x4673))
(assert (x4621 x2739))
(assert (x4842 x3987))
(assert (= (or x4421 x3053) x3110))
(assert (x4842 x2920))
(assert (= x4400 (and x1360 x3209)))
(assert (= x3261 (and x2243 x2131)))
(assert (= (and x4122 x5090) x675))
(assert (=> (>= 10000 x3371) (= (x636 x3371) (x956 x3371))))
(assert (x4842 x4777))
(assert (= x4766 (=> (and (= x614 x669) (= x3712 x2473) (= x1366 x715)) x3787)))
(assert (x4842 x5343))
(assert (x4842 x4181))
(assert (= (+ (x4585 x282) 2) (x4585 (x5250 x282 2))))
(assert (= x1764 (and x1518 (not x3338))))
(assert (x4842 x596))
(assert (x4842 x2725))
(assert (x4842 x595))
(assert (x4842 x1278))
(assert (x4842 x1664))
(assert (x4842 x5122))
(assert (x645 x3579))
(assert (= x2135 (and x4665 x1369)))
(assert (= (x4585 (x5250 x1626 1)) (+ (x4585 x1626) 1)))
(assert (x4842 x2375))
(assert (= x4454 (and x625 x768)))
(assert (x4621 x4049))
(assert (= x989 x3425))
(assert (x4842 x2693))
(assert (x4842 x1120))
(assert (= (or x1699 x3642) x3595))
(assert (= (and (not x4095) x1764) x2380))
(assert (x4842 x2246))
(assert (x4842 x730))
(assert (= x5161 (and x933 x4721)))
(assert (= x1440 (and (not x3979) x4137)))
(assert (x4842 x1317))
(assert (x4842 x2330))
(assert (= (and (not x541) x4802) x4130))
(assert (x4842 x2687))
(assert (= (or x3293 x1200 x921 x3609 x4452 x1505 x3847 x3229 x2510 x1754 x3751 x1563 x2037 x1062 x5121 x275 x762 x3027 x316 x3165 x4590 x4222 x2614 x4763 x3536 x2127 x4750 x5357 x3665 x2167) x1489))
(assert (x4842 x4875))
(assert (= x4643 (and x4095 x1764)))
(assert (= x2495 (and x4021 x4339)))
(assert (x4842 x3321))
(assert (x4621 x2716))
(assert (x4842 x2985))
(assert (= (or x1515 x1178) x3358))
(assert (= (x4585 (x636 x2917)) x2917))
(assert (x4842 x1958))
(assert (= (+ 2 (x4585 x2957)) (x4585 (x5250 x2957 2))))
(assert (x4842 x1123))
(assert (= x1183 (and x457 (not x1394))))
(assert (= x2936 (=> (= (> x334 x3319) x3513) (and (=> x3513 x989) (=> (and (and (= x614 x3624) (= x3868 x5023)) (not x3513)) x1325)))))
(assert (= x2211 (and (not x3633) x4969)))
(assert (= (and (not x3773) x1735) x1829))
(assert (x4842 x462))
(assert (x4842 x2664))
(assert (= x1202 (and x3780 (not x2316))))
(assert (= (x956 2678788150) (x636 2678788150)))
(assert (x4842 x3863))
(assert (x4842 x2666))
(assert (x4842 x2709))
(assert (= (and x3604 x4843) x3934))
(assert (= (and (not x1714) x337) x495))
(assert (= x209 (or x3732 x4680 x725 x534 x4933 x4730)))
(assert (= x1144 (and x509 (not x97))))
(assert (= x5234 (or x4851 x146 x1497 x859 x2325 x1829)))
(assert (= (or x2109 (and x1915 (not x2553))) x4279))
(assert (= (and x560 (not x4997)) x4699))
(assert (= (or x5102 x2683) x3871))
(assert (= x498 (or x1328 x2781)))
(assert (= x1054 (and (not x3154) x4578)))
(assert (x4621 x4200))
(assert (= (and x1211 x896) x4350))
(assert (= x4822 (and x4546 x186)))
(assert (x4621 x4679))
(assert (= (x4585 (x5250 x2117 1)) (+ 1 (x4585 x2117))))
(assert (x4842 x3671))
(assert (=> (>= 10000 x1302) (= (x956 x1302) (x636 x1302))))
(assert (x4842 x1454))
(assert (= (and x2911 x5341) x2038))
(assert (x4842 x274))
(assert (= x3299 (or x2927 x2485 x1075 x15 x4871 x3937)))
(assert (=> (>= 10000 x3813) (= (x636 x3813) (x956 x3813))))
(assert (x4842 x4014))
(assert (x4842 x4789))
(assert (x4621 x3733))
(assert (x4842 x1028))
(assert (= x3353 (and x1820 x3466)))
(assert (x4842 x3375))
(assert (= x1648 (=> (= x4114 x2618) x2710)))
(assert (= x2902 (and x1735 x3773)))
(assert (= (x4585 (x956 72570022874062638528011751457397263716769196454539065078543251854057308946432)) 72570022874062638528011751457397263716769196454539065078543251854057308946432))
(assert (= (and x2351 (not x104)) x5338))
(assert (x4842 x1871))
(assert (= (=> (and (= 0 x1240) (= x5372 x3492)) x4039) x2240))
(assert (= (and x4091 (not x4112)) x1180))
(assert (x4842 x1398))
(assert (= (and x2612 (not x1027)) x148))
(assert (= x3540 (and x5056 x100)))
(assert (= (x4585 (x5250 x734 1)) (+ (x4585 x734) 1)))
(assert (x4621 x103))
(assert (x4621 x712))
(assert (x4842 x134))
(assert (x4842 x1291))
(assert (= (and x908 (not x270)) x2647))
(assert (= x1141 (or x2317 x3012)))
(assert (= x1914 (and (not x5359) x3065)))
(assert (= (x4585 (x636 x4030)) x4030))
(assert (= x2506 (and x3185 x2315)))
(assert (= (and (not x5131) x861) x1845))
(assert (= x4016 (and x2341 x648)))
(assert (x4842 x3034))
(assert (x4842 x4064))
(assert (x4842 x2592))
(assert (=> (<= x976 10000) (= (x956 x976) (x636 x976))))
(assert (=> (>= 10000 x3036) (= (x636 x3036) (x956 x3036))))
(assert (x4842 x5045))
(assert (= x3654 (and x3312 x3133)))
(assert (= (and x2258 (not x2068)) x235))
(assert (x4842 x748))
(assert (= x2907 (and x4455 (not x2265))))
(assert (x4842 x568))
(assert (= (and x2122 x4667) x4023))
(assert (x4842 x3812))
(assert (= x2696 (=> (and (= x3106 x2124) (= x4415 x787)) x4538)))
(assert (x4621 x4298))
(assert (= x1850 (=> (and (= (ite (= x1716 1) 1 0) x2107) (= (x5403 x2107 x4926) x1608) (= (ite (= x3853 0) 1 0) x2560) (= (x2055 x1608 x2560) x2422) (= x1927 (x5403 x2422 x821)) (= (< 0 x1927) x2777) (= x4926 (ite (> x3853 31) 1 0))) (and (=> (not x2777) x1008) (=> (and (and (= x4741 (= x4735 x2716)) (= (x1843 (- x4886 x2385)) x1945) (= (x2989 (+ 4 x2385)) x5031) (= (x2989 (+ x5031 32)) x4886)) x2777) (and (=> (and (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4145) (and (= (<= x4145 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4145 32))) x1851) (= x4540 242558722) (not (< x733 4)) (not (= x4540 75483562)) (= (x1306 (x636 x4735)) x477) (= x2734 x1954) (< x4540 2217467699) (= x4571 6539370208772218570076773595062200405109424842860869254164860851635934461952) (= x733 x1945) (= 36 x733) (= x4145 (x1843 (- x733 4))) (> 988262939 x4540) (< x4540 405663989) (not (= 178855970 x4540)) (> x477 0)) x4741) (and (=> (and (= x2015 x299) x1851) x2792) (=> (and (and (>= x1147 0) (= x1147 (x2161 x949)) (= x949 (x2828 (x636 x3494) (x956 6) 0)) (= x2734 x5158) (<= x1147 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3154 (< x1147 x1954))) (not x1851)) (and (=> (and (and (<= 0 x3344) (= (< x3344 x2734) x995) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3344) (= (x2828 (x636 x3494) (x956 6) 0) x469) (= x3344 (x2161 x469))) (not x3154)) (and (=> (and x995 (= x299 x2015)) x2792) (=> (and (and (= (< x4770 x2015) x4288) (= (x1843 (- x3344 x2734)) x1956) (= x4770 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2734))) (<= 0 x2015) (<= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x995)) (and (=> (and x4288 (= x2015 x299)) x2792) (=> (and (and (<= 0 x1368) (= (= x1368 x1299) x698) (<= x1368 1461501637330902918203684832716283019655932542975) (= x2459 (x2989 (+ x2015 x2734))) (= x2906 (x2989 (+ x2734 x2015))) (= x3897 128) (< x1368 1461501637330902918203684832716283019655932542976)) (not x4288)) (and (=> (and x698 (and (not (> 599290589 x1492)) (= x5158 x2120) (< 0 x4994) (not (> 4 x302)) (= x78 x4735) (= 599290589 x1492) (= 100 x302) (= x3494 x528) (= x302 100) (= x4628 (or (> x1729 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1729 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1729))))) (= x3413 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x1306 (x636 x1299)) x4994) (= x1729 (x1843 (- x302 4))) (> 1466279372 x1492))) (and (=> x4628 x2382) (=> (and (not x4628) (and (= x528 x3788) (= (= x3494 x528) x4234))) (and (=> (not x4234) x2382) (=> (and (and (= (= x4735 x78) x3961) (= x78 x1948)) x4234) (and (=> (not x3961) x2382) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3059) (= x3059 (x5381 x1232)) (>= x3059 0) (= (> x5158 x3059) x4660) (= (x2828 (x636 x528) (x956 1) 0) x1232) (= x2120 x4864)) x3961) (and (=> (and (= (> x2120 x3059) x4535) (not x4660)) (and (=> x4535 x2382) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4128) (= x2911 (> x4128 x274)) (= (x1480 x5052) x4128) (= (x2828 (x636 x78) (x956 1) 0) x5052) (= x274 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2120))) (= x568 (x1843 (- x3059 x2120))) (<= 0 x4128) (= (x2828 (x636 x528) (x956 1) 0) x3316)) (not x4535)) (and (=> x2911 x2382) (=> (and (not x2911) (and (= (x2989 (+ x2120 x4128)) x2848) (= x3638 (< x2848 x4128)))) (and (=> (and (not x3638) (and (<= x4862 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3283 (x2828 (x636 x4735) x4062 0)) (>= x4862 0) (= (x132 x3283) x4862) (= (x2828 (x636 x528) (x956 2) 0) x4062) (= (x2828 (x636 x78) (x956 1) 0) x2755) (= (> x2120 x4862) x617))) (and (=> x617 x2382) (=> (and (not x617) (= (> x2120 x4862) x3562)) (and (=> (and (not x3562) (and (= x2576 (x2828 (x636 x4735) x2882 0)) (= 32 x2990) (= x5008 (x1843 (- x4862 x2120))) (= x4698 1) (= x2882 (x2828 (x636 x528) (x956 2) 0)))) x2607) (=> x3562 x2382))))) (=> x3638 x2382))))))) (=> x4660 x2382))))))))) (=> (and (= (= x1368 x4735) x4426) (not x698)) (and (=> (and (not x4426) (= (= x1972 x1368) x2187)) (and (=> (and x2187 (and (not (= 405663989 x2000)) (not (= x2000 547091486)) (> 988262939 x2000) (= (x1843 (- x1415 4)) x1712) (not (< x1415 4)) (= x853 (x1306 (x636 x1972))) (not (< x2000 405663989)) (> x853 0) (= x748 x5158) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x888) (= 599290589 x2000) (= x3697 (or (> x1712 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x1712) (= (<= x1712 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1415 100) (= 100 x1415) (= x4735 x3267) (= x1194 x3494) (> 2217467699 x2000))) (and (=> x3697 x635) (=> (and (not x3697) (and (= x3785 (= x3494 x1194)) (= x1194 x2457))) (and (=> (and x3785 (and (= x3267 x2413) (= x4584 (= x4735 x3267)))) (and (=> (not x4584) x635) (=> (and x4584 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x166) (= x4213 x748) (>= x166 0) (= x916 (x2828 (x636 x1194) (x956 5) 0)) (= (> x5158 x166) x3755) (= x166 (x695 x916)))) (and (=> x3755 x635) (=> (and (and (= (x2828 (x636 x1194) (x956 5) 0) x1841) (= (x695 x1841) x2009) (= (< x2009 x748) x3485) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2009) (<= 0 x2009)) (not x3755)) (and (=> x3485 x635) (=> (and (not x3485) (and (= (x3498 x4321) x1544) (= (x1843 (- x2009 x748)) x2267) (<= x1544 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1544) (= x1129 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x748))) (= x1714 (< x1129 x1544)) (= x4321 (x2828 (x636 x3267) (x956 5) 0)))) (and (=> x1714 x635) (=> (and (not x1714) (and (= x4449 (x2989 (+ x748 x1544))) (= 1 x2852) (= x394 32) (= 1 x1873))) x4476))))))))) (=> (not x3785) x635))))) (=> (and (and (and x48 (and (= (x1306 (x636 x2102)) x4341) (= (x1843 (- x3543 4)) x4900) (= 100 x3543) (> x4341 0) (> 2217467699 x3472) (not (= 547091486 x3472)) (= x3494 x1237) (= (or (and (< x4900 96) (= true (<= x4900 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4900 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4550) (not (= x3472 405663989)) (= x3543 100) (= 599290589 x3472) (not (< x3543 4)) (= x5158 x3831) (< x3472 988262939) (= x3377 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4735 x4694) (not (< x3472 405663989)))) (= x48 (= x2102 x1368))) (not x2187)) (and (=> (and (not x4550) (and (= x5359 (= x1237 x3494)) (= x4369 x1237))) (and (=> (not x5359) x2757) (=> (and (and (= x4694 x3651) (= x2564 (= x4694 x4735))) x5359) (and (=> (not x2564) x2757) (=> (and x2564 (and (= (> x5158 x5152) x2262) (= (x2828 (x636 x1237) (x956 5) 0) x860) (<= x5152 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5152 0) (= (x728 x860) x5152) (= x3831 x5386))) (and (=> (and (not x2262) (and (= (x2828 (x636 x1237) (x956 5) 0) x926) (<= x3005 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3005 (x728 x926)) (= (> x3831 x3005) x107) (>= x3005 0))) (and (=> x107 x2757) (=> (and (and (= x1893 (x2160 x3311)) (= x272 (x1843 (- x3005 x3831))) (= x2923 (> x1893 x4701)) (= x3311 (x2828 (x636 x4694) (x956 5) 0)) (>= x1893 0) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3831)) x4701) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1893)) (not x107)) (and (=> (and (and (= x4965 (x2989 (+ x3831 x1893))) (= x3302 1) (= 1 x1023) (= x2176 32)) (not x2923)) x1579) (=> x2923 x2757))))) (=> x2262 x2757))))))) (=> x4550 x2757))))) (=> (and (and (> 2217467699 x1917) (= x1941 (or (and (> 96 x2940) (= (<= x2940 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x2940 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 988262939 x1917) (= x2529 x3494) (= x1038 (x1306 (x636 x4735))) (= (x1843 (- x2424 4)) x2940) (not (= 405663989 x1917)) (not (= 547091486 x1917)) (not (< x1917 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1077) (= x2424 100) (= x4735 x2387) (= x2877 x5158) (> x1038 0) (= x2424 100) (= x1917 599290589) (not (> 4 x2424))) x4426) (and (=> (and (not x1941) (and (= x2529 x4475) (= (= x3494 x2529) x2104))) (and (=> (not x2104) x4469) (=> (and (and (= x975 x2387) (= x1362 (= x4735 x2387))) x2104) (and (=> (and (and (= x2877 x1119) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x185) (= (x4120 x5111) x185) (= x1994 (< x185 x5158)) (<= 0 x185) (= (x2828 (x636 x2529) (x956 5) 0) x5111)) x1362) (and (=> x1994 x4469) (=> (and (and (>= x74 0) (= x613 (x2828 (x636 x2529) (x956 5) 0)) (= (x4120 x613) x74) (<= x74 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2575 (> x2877 x74))) (not x1994)) (and (=> (and (not x2575) (and (<= x1815 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1815) (= (x1580 x3680) x1815) (= x10 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877))) (= (x2828 (x636 x2387) (x956 5) 0) x3680) (= x2419 (x1843 (- x74 x2877))) (= (> x1815 x10) x1820))) (and (=> (and (not x1820) (and (= 1 x2855) (= x817 1) (= (x2989 (+ x2877 x1815)) x4087) (= x2472 32))) x3835) (=> x1820 x4469))) (=> x2575 x4469))))) (=> (not x1362) x4469))))) (=> x1941 x4469))))))))))) (=> (and (= x299 x2015) x3154) x2792))))) (=> (and (= x4063 (= x2716 x1972)) (not x4741)) (and (=> (and (and (not (< x5276 4)) (not (= x662 178855970)) (= x1954 x4655) (= (x1306 (x636 x1972)) x3861) (= x1980 (x1843 (- x5276 4))) (not (= x662 75483562)) (= x1945 x5276) (< 0 x3861) (< x662 2217467699) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x4572) (= x5276 36) (= x662 242558722) (> 988262939 x662) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1980) (and (= (<= x1980 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1980))) x4721) (> 405663989 x662)) x4063) (and (=> (and (= x3538 x2386) x4721) x1685) (=> (and (and (<= 0 x845) (= x112 (x2828 (x636 x3494) (x956 6) 0)) (<= x845 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x845 (x5348 x112)) (= (> x1954 x845) x1132) (= x4655 x2563)) (not x4721)) (and (=> (and x1132 (= x2386 x3538)) x1685) (=> (and (not x1132) (and (= x2447 (> x4655 x424)) (<= 0 x424) (= (x2828 (x636 x3494) (x956 6) 0) x3553) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x424) (= x424 (x5348 x3553)))) (and (=> (and (not x2447) (and (= x61 (< x2691 x3538)) (<= x3538 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1288 (x1843 (- x424 x4655))) (<= 0 x3538) (= x2691 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4655))))) (and (=> (and x61 (= x3538 x2386)) x1685) (=> (and (and (= (x2989 (+ x4655 x3538)) x1987) (= (x2989 (+ x4655 x3538)) x1533) (>= 1461501637330902918203684832716283019655932542975 x3917) (<= 0 x3917) (= x4553 128) (< x3917 1461501637330902918203684832716283019655932542976) (= x2730 (= x1299 x3917))) (not x61)) (and (=> (and (and (= x2934 599290589) (> x259 0) (not (< x2934 599290589)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1758) (and (> 96 x1758) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1758)))) x3346) (= x3494 x4556) (= x2930 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x4373) (= x4373 100) (= (x1843 (- x4373 4)) x1758) (= (x1306 (x636 x1299)) x259) (not (> 4 x4373)) (< x2934 1466279372) (= x1929 x1972) (= x2563 x4894)) x2730) (and (=> (and (and (= x3212 (= x3494 x4556)) (= x4556 x1702)) (not x3346)) (and (=> (and (and (= x2408 (= x1929 x1972)) (= x1929 x3626)) x3212) (and (=> (not x2408) x2908) (=> (and (and (<= x5115 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x5115 x2563) x1861) (= x4894 x4855) (>= x5115 0) (= (x2828 (x636 x4556) (x956 1) 0) x2369) (= x5115 (x5381 x2369))) x2408) (and (=> x1861 x2908) (=> (and (= x155 (< x5115 x4894)) (not x1861)) (and (=> (and (and (= (x2828 (x636 x4556) (x956 1) 0) x239) (= x1158 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4894))) (= x3706 (x4308 x931)) (<= 0 x3706) (<= x3706 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x931 (x2828 (x636 x1929) (x956 1) 0)) (= (x1843 (- x5115 x4894)) x4026) (= x4133 (< x1158 x3706))) (not x155)) (and (=> x4133 x2908) (=> (and (not x4133) (and (= x3747 (x2989 (+ x3706 x4894))) (= x470 (> x3706 x3747)))) (and (=> x470 x2908) (=> (and (not x470) (and (<= 0 x3942) (= (x132 x1818) x3942) (<= x3942 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x1972) x2783 0) x1818) (= (x2828 (x636 x4556) (x956 2) 0) x2783) (= (> x4894 x3942) x455) (= (x2828 (x636 x1929) (x956 1) 0) x2180))) (and (=> (and (= (> x4894 x3942) x4576) (not x455)) (and (=> x4576 x2908) (=> (and (not x4576) (and (= (x2828 (x636 x1972) x1460 0) x2584) (= x5063 32) (= x4148 1) (= x257 (x1843 (- x3942 x4894))) (= (x2828 (x636 x4556) (x956 2) 0) x1460))) x3636))) (=> x455 x2908))))))) (=> x155 x2908))))))) (=> (not x3212) x2908))) (=> x3346 x2908))) (=> (and (not x2730) (= (= x4735 x3917) x41)) (and (=> (and (= x4748 (= x1972 x3917)) (not x41)) (and (=> (and (and (= x2096 (x1306 (x636 x1972))) (= x3179 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (> x1783 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x1783) (= (<= x1783 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1112) (< x4332 988262939) (= x1783 (x1843 (- x1014 4))) (not (= 547091486 x4332)) (> x2096 0) (not (= x4332 405663989)) (= x3737 x1972) (= x1014 100) (= x4332 599290589) (= x3494 x2513) (= x2563 x4187) (not (< x4332 405663989)) (= x1014 100) (< x4332 2217467699) (not (< x1014 4))) x4748) (and (=> x1112 x4726) (=> (and (not x1112) (and (= (= x3494 x2513) x1571) (= x2513 x2516))) (and (=> (not x1571) x4726) (=> (and (and (= (= x3737 x1972) x620) (= x4610 x3737)) x1571) (and (=> (not x620) x4726) (=> (and x620 (and (<= x1958 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x193 (> x2563 x1958)) (= (x2828 (x636 x2513) (x956 5) 0) x284) (= x4187 x2414) (= x1958 (x695 x284)) (>= x1958 0))) (and (=> x193 x4726) (=> (and (not x193) (and (>= x2119 0) (= (x695 x1487) x2119) (= x3999 (> x4187 x2119)) (= x1487 (x2828 (x636 x2513) (x956 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2119))) (and (=> x3999 x4726) (=> (and (and (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4187)) x3811) (<= x3854 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x3811 x3854) x3767) (= x3854 (x1452 x4943)) (>= x3854 0) (= (x2828 (x636 x3737) (x956 5) 0) x4943) (= (x1843 (- x2119 x4187)) x696)) (not x3999)) (and (=> x3767 x4726) (=> (and (and (= x140 (x2989 (+ x4187 x3854))) (= 32 x1550) (= x4659 1) (= 1 x3987)) (not x3767)) x2101))))))))))))) (=> (and (and (= (= x3917 x2102) x5167) (and (and (= x2689 (x1843 (- x1867 4))) (= x1278 x2563) (> 2217467699 x2334) (= x1867 100) (not (= x2334 547091486)) (= x3370 (x1306 (x636 x2102))) (= x1972 x4049) (> 988262939 x2334) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x281) (not (> 4 x1867)) (= 100 x1867) (< 0 x3370) (= 599290589 x2334) (not (= 405663989 x2334)) (= x5328 (or (and (= true (<= x2689 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x2689)) (> x2689 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3494 x5195) (not (> 405663989 x2334))) x5167)) (not x4748)) (and (=> x5328 x4002) (=> (and (and (= x2831 x5195) (= (= x3494 x5195) x3604)) (not x5328)) (and (=> (and (and (= x537 x4049) (= (= x4049 x1972) x3037)) x3604) (and (=> (and (and (>= x363 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x363) (= (< x363 x2563) x2938) (= x3760 (x2828 (x636 x5195) (x956 5) 0)) (= x2664 x1278) (= x363 (x728 x3760))) x3037) (and (=> (and (not x2938) (and (<= 0 x5282) (<= x5282 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x5195) (x956 5) 0) x2368) (= x5282 (x728 x2368)) (= x2489 (< x5282 x1278)))) (and (=> (and (and (= (x1843 (- x5282 x1278)) x3300) (>= x2040 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2040) (= x3176 (x2828 (x636 x4049) (x956 5) 0)) (= x3313 (< x3249 x2040)) (= (x3592 x3176) x2040) (= x3249 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1278)))) (not x2489)) (and (=> (and (and (= (x2989 (+ x2040 x1278)) x2442) (= 1 x1897) (= x4589 32) (= x2423 1)) (not x3313)) x4246) (=> x3313 x4002))) (=> x2489 x4002))) (=> x2938 x4002))) (=> (not x3037) x4002))) (=> (not x3604) x4002))))))) (=> (and (and (= x3494 x543) (= x3889 (x1306 (x636 x4735))) (= x1267 599290589) (not (= 547091486 x1267)) (not (= 405663989 x1267)) (not (< x125 4)) (> x3889 0) (= (or (and (> 96 x3637) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3637) true)) (> x3637 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4092) (= (x1843 (- x125 4)) x3637) (= 100 x125) (> 2217467699 x1267) (< x1267 988262939) (not (> 405663989 x1267)) (= x1972 x976) (= x2563 x2966) (= 100 x125) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1416)) x41) (and (=> (and (not x4092) (and (= x543 x2896) (= (= x3494 x543) x5291))) (and (=> (not x5291) x2404) (=> (and x5291 (and (= x976 x4036) (= (= x976 x1972) x3488))) (and (=> (and (and (= x200 (x2828 (x636 x543) (x956 5) 0)) (<= x2092 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4979 (< x2092 x2563)) (= x3781 x2966) (>= x2092 0) (= (x4120 x200) x2092)) x3488) (and (=> x4979 x2404) (=> (and (not x4979) (and (= (< x2624 x2966) x3107) (= x2624 (x4120 x1085)) (<= x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2624) (= x1085 (x2828 (x636 x543) (x956 5) 0)))) (and (=> x3107 x2404) (=> (and (and (= (x1843 (- x2624 x2966)) x489) (<= x3453 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3938 x3875) x3453) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2966)) x3198) (= (> x3453 x3198) x1669) (>= x3453 0) (= x3875 (x2828 (x636 x976) (x956 5) 0))) (not x3107)) (and (=> (and (not x1669) (and (= x2118 32) (= x4646 (x2989 (+ x2966 x3453))) (= 1 x1720) (= x5346 1))) x1531) (=> x1669 x2404))))))) (=> (not x3488) x2404))))) (=> x4092 x2404))))))))) (=> (and x2447 (= x2386 x3538)) x1685))))))) (=> (and (and (= x280 (= x2102 x2716)) (and x280 (and (not (> 4 x1481)) (> x3940 0) (not (= 75483562 x3570)) (> 988262939 x3570) (= (x1843 (- x1481 4)) x3057) (> 405663989 x3570) (= (x1306 (x636 x2102)) x3940) (= 242558722 x3570) (not (= 178855970 x3570)) (= x1954 x4059) (< x3570 2217467699) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x4828) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3057) (and (< x3057 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3057)))) x2199) (= x1481 36) (= x1481 x1945)))) (not x4063)) (and (=> (and (not x2199) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4702) (<= 0 x4702) (= (x577 x3418) x4702) (= x219 x4059) (= x3418 (x2828 (x636 x3494) (x956 6) 0)) (= x1703 (< x4702 x1954)))) (and (=> (and x1703 (= x5392 x3431)) x2741) (=> (and (and (= (x577 x1848) x3335) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3335) (= (x2828 (x636 x3494) (x956 6) 0) x1848) (>= x3335 0) (= (> x4059 x3335) x935)) (not x1703)) (and (=> (and (and (<= 0 x3431) (= (< x1604 x3431) x2066) (= (x1843 (- x3335 x4059)) x40) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3431) (= x1604 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4059)))) (not x935)) (and (=> (and (not x2066) (and (= (= x5246 x1299) x4903) (= (x2989 (+ x4059 x3431)) x5270) (<= 0 x5246) (= (x2989 (+ x3431 x4059)) x1135) (> 1461501637330902918203684832716283019655932542976 x5246) (>= 1461501637330902918203684832716283019655932542975 x5246) (= x1255 128))) (and (=> (and (and (= (x1306 (x636 x1299)) x539) (not (< x5093 599290589)) (not (> 4 x2987)) (= x2102 x497) (= 100 x2987) (= x4998 (x1843 (- x2987 4))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2177) (> x539 0) (= x1468 x3494) (> 1466279372 x5093) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4998)) (> 96 x4998)) (> x4998 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1157) (= x219 x2952) (= 100 x2987) (= x5093 599290589)) x4903) (and (=> (and (and (= x1468 x2047) (= x252 (= x1468 x3494))) (not x1157)) (and (=> (and (and (= x3405 x497) (= x5056 (= x2102 x497))) x252) (and (=> (not x5056) x1749) (=> (and (and (= x2078 (< x3015 x219)) (<= 0 x3015) (<= x3015 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3015 (x5381 x4170)) (= x482 x2952) (= (x2828 (x636 x1468) (x956 1) 0) x4170)) x5056) (and (=> x2078 x1749) (=> (and (= x5286 (> x2952 x3015)) (not x2078)) (and (=> (and (and (= x3338 (< x1877 x1590)) (>= x1590 0) (= (x2828 (x636 x497) (x956 1) 0) x4990) (= x1877 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2952))) (= x2676 (x1843 (- x3015 x2952))) (= x1590 (x5269 x4990)) (= (x2828 (x636 x1468) (x956 1) 0) x3151) (<= x1590 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x5286)) (and (=> x3338 x1749) (=> (and (and (= (> x1590 x3392) x4095) (= (x2989 (+ x1590 x2952)) x3392)) (not x3338)) (and (=> (and (and (= (x132 x1822) x4464) (= x1822 (x2828 (x636 x2102) x5347 0)) (= x803 (> x2952 x4464)) (= (x2828 (x636 x497) (x956 1) 0) x3990) (<= x4464 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5347 (x2828 (x636 x1468) (x956 2) 0)) (<= 0 x4464)) (not x4095)) (and (=> x803 x1749) (=> (and (= x1375 (< x4464 x2952)) (not x803)) (and (=> (and (and (= (x1843 (- x4464 x2952)) x4329) (= x3650 32) (= x2051 (x2828 (x636 x1468) (x956 2) 0)) (= 1 x2304) (= (x2828 (x636 x2102) x2051 0) x3061)) (not x1375)) x521) (=> x1375 x1749))))) (=> x4095 x1749))))) (=> x5286 x1749))))))) (=> (not x252) x1749))) (=> x1157 x1749))) (=> (and (not x4903) (= (= x4735 x5246) x5288)) (and (=> (and x5288 (and (not (< x2228 4)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x87) (= x2228 100) (= (x1306 (x636 x4735)) x1701) (= x2102 x4289) (> x1701 0) (= x2888 (or (and (= (<= x5254 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x5254 96)) (> x5254 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 100 x2228) (< x3263 988262939) (not (< x3263 405663989)) (= x3892 x219) (= (x1843 (- x2228 4)) x5254) (= x3494 x26) (> 2217467699 x3263) (not (= 547091486 x3263)) (not (= x3263 405663989)) (= 599290589 x3263))) (and (=> (and (not x2888) (and (= x4913 (= x3494 x26)) (= x26 x5165))) (and (=> (not x4913) x3542) (=> (and x4913 (and (= x2539 x4289) (= x3389 (= x4289 x2102)))) (and (=> (not x3389) x3542) (=> (and (and (= (x4120 x2751) x2692) (<= 0 x2692) (= x2233 (< x2692 x219)) (= x1465 x3892) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2692) (= x2751 (x2828 (x636 x26) (x956 5) 0))) x3389) (and (=> (and (not x2233) (and (>= x3563 0) (= x1788 (< x3563 x3892)) (<= x3563 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3563 (x4120 x4899)) (= (x2828 (x636 x26) (x956 5) 0) x4899))) (and (=> (and (not x1788) (and (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3892)) x4560) (= x5028 (< x4560 x3287)) (= (x437 x1426) x3287) (= x887 (x1843 (- x3563 x3892))) (= x1426 (x2828 (x636 x4289) (x956 5) 0)) (<= 0 x3287) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3287))) (and (=> (and (and (= 1 x941) (= x3955 1) (= x4093 32) (= (x2989 (+ x3287 x3892)) x1068)) (not x5028)) x409) (=> x5028 x3542))) (=> x1788 x3542))) (=> x2233 x3542))))))) (=> x2888 x3542))) (=> (and (not x5288) (= x1863 (= x5246 x1972))) (and (=> (and (not x1863) (and (and x1620 (and (= x2400 (x1306 (x636 x2102))) (= x3494 x3019) (= (x1843 (- x1146 4)) x2168) (= x2603 x2102) (not (< x1146 4)) (= x3270 x219) (> 2217467699 x643) (= x1146 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1853) (not (= 547091486 x643)) (not (> 405663989 x643)) (< x643 988262939) (= 599290589 x643) (> x2400 0) (= x2823 (or (and (< x2168 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2168))) (> x2168 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 100 x1146) (not (= x643 405663989)))) (= x1620 (= x5246 x2102)))) (and (=> x2823 x819) (=> (and (not x2823) (and (= (= x3019 x3494) x4865) (= x4793 x3019))) (and (=> (and (and (= (= x2102 x2603) x5061) (= x2603 x4962)) x4865) (and (=> (and (and (<= x4641 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4641) (= x1592 (x2828 (x636 x3019) (x956 5) 0)) (= x4641 (x728 x1592)) (= x4204 (< x4641 x219)) (= x1923 x3270)) x5061) (and (=> (and (and (= (x2828 (x636 x3019) (x956 5) 0) x894) (= (> x3270 x1121) x3461) (= x1121 (x728 x894)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1121) (<= 0 x1121)) (not x4204)) (and (=> x3461 x819) (=> (and (not x3461) (and (= (x562 x3993) x225) (= x4823 (> x225 x2383)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x225) (= (x2828 (x636 x2603) (x956 5) 0) x3993) (= x2383 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3270))) (= x2968 (x1843 (- x1121 x3270))) (<= 0 x225))) (and (=> x4823 x819) (=> (and (and (= x2980 32) (= x4683 1) (= x630 (x2989 (+ x225 x3270))) (= x4064 1)) (not x4823)) x4193))))) (=> x4204 x819))) (=> (not x5061) x819))) (=> (not x4865) x819))))) (=> (and (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4216) (and (< x4216 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4216)))) x3211) (not (= x551 547091486)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4231) (= x813 x3494) (not (= 405663989 x551)) (= x3248 100) (< 0 x2766) (> 988262939 x551) (= 100 x3248) (not (< x551 405663989)) (= x219 x2311) (< x551 2217467699) (= (x1843 (- x3248 4)) x4216) (not (> 4 x3248)) (= (x1306 (x636 x1972)) x2766) (= 599290589 x551) (= x811 x2102)) x1863) (and (=> x3211 x5272) (=> (and (and (= x2732 x813) (= (= x813 x3494) x3773)) (not x3211)) (and (=> (and x3773 (and (= x178 x811) (= x2645 (= x2102 x811)))) (and (=> (not x2645) x5272) (=> (and (and (= x3943 (x2828 (x636 x813) (x956 5) 0)) (= (x695 x3943) x1646) (= x2311 x1424) (<= 0 x1646) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1646) (= x4722 (< x1646 x219))) x2645) (and (=> x4722 x5272) (=> (and (and (= x2556 (x2828 (x636 x813) (x956 5) 0)) (= (x695 x2556) x352) (<= x352 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x352) (= x4031 (< x352 x2311))) (not x4722)) (and (=> (and (and (= x1692 (x1843 (- x352 x2311))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2279) (<= 0 x2279) (= (< x1679 x2279) x4176) (= (x824 x3933) x2279) (= x3933 (x2828 (x636 x811) (x956 5) 0)) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)) x1679)) (not x4031)) (and (=> (and (not x4176) (and (= x3808 32) (= x4218 (x2989 (+ x2311 x2279))) (= 1 x4354) (= 1 x2649))) x5245) (=> x4176 x5272))) (=> x4031 x5272))))))) (=> (not x3773) x5272))))))))))) (=> (and x2066 (= x3431 x5392)) x2741))) (=> (and (= x5392 x3431) x935) x2741))))) (=> (and (= x3431 x5392) x2199) x2741)))))))))))
(assert (= x1359 (and x75 x848)))
(assert (= (x4585 (x636 x2739)) x2739))
(assert (= x5148 (or x2801 x3250 x1206 x344 x4185 x4551 x932 x1094 x2495)))
(assert (x4842 x2015))
(assert (= (x4585 (x5250 x2680 1)) (+ 1 (x4585 x2680))))
(assert (= x901 (and x183 x4086)))
(assert (x4842 x3808))
(assert (= (=> (and (= x1831 0) (= x1205 x4849)) x4757) x2602))
(assert (= (and x3516 (not x2620)) x1289))
(assert (x645 x821))
(assert (= (and (not x4472) x5314) x2640))
(assert (= (=> (and (= x1484 0) (= x2149 x5011)) x3991) x1799))
(assert (x4621 x4390))
(assert (= (or x3869 x2956) x1505))
(assert (= x5046 (and x3185 (not x2315))))
(assert (= x4952 (and (=> (and (not x1027) (and (= x4954 x915) (= x3201 1))) x1557) (=> (and (and (= x5401 x915) (= x1731 x2058) (= x2716 x287)) x1027) x2229))))
(assert (x645 x1153))
(assert (x29 x3935 x909))
(assert (x2961 x1892 x2954))
(assert (x4842 x4138))
(assert (= (and x4960 x3189) x5125))
(assert (x4842 x1716))
(assert (x4842 x1288))
(assert (x4842 x1623))
(assert (x4842 x1509))
(assert (x4842 x13))
(assert (x4842 x2689))
(assert (= x2218 (and x5025 x1233)))
(assert (= x1508 (and x300 x5130)))
(assert (x4842 x4103))
(assert (= x3609 (and x823 x5010)))
(assert (x4842 x4239))
(assert (x4842 x4369))
(assert (x4621 x126))
(assert (= x4802 (and x2531 x4162)))
(assert (= (x4585 (x5250 x2865 1)) (+ (x4585 x2865) 1)))
(assert (= (and x5172 x4303) x4617))
(assert (x4842 x1867))
(assert (= x2988 x4440))
(assert (x4842 x3472))
(assert (= (and x4925 x3845) x553))
(assert (x4842 x1492))
(assert (= x3724 (and x2745 x5238)))
(assert (= (and x1142 x4090) x457))
(assert (x4842 x1752))
(assert (x4842 x1318))
(assert (= x511 (and (not x34) x4252)))
(assert (= x2278 (and x3035 x2540)))
(assert (x4842 x4650))
(assert (= 405663989 (x4585 (x956 405663989))))
(assert (x4842 x4832))
(assert (= 2245473101 (x4585 (x956 2245473101))))
(assert (x4842 x3563))
(assert (= x115 (and x4822 x3833)))
(assert (x4842 x4481))
(assert (x4842 x1601))
(assert (x4842 x1612))
(assert (x4842 x4241))
(assert (x4842 x1597))
(assert (= x631 (=> (and (= x368 x1586) (= x347 x1113)) x3711)))
(assert (x4842 x2744))
(assert (= x4396 (and (not x5291) x1989)))
(assert (x4621 x3658))
(assert (= (and x1697 x5397) x1005))
(assert (x4842 x37))
(assert (x4842 x2327))
(assert (= x4336 (and x1714 x337)))
(assert (x4842 x961))
(assert (x4842 x2886))
(assert (= (and x449 x357) x2234))
(assert (= (x636 1038142104) (x956 1038142104)))
(assert (= (+ 2 (x4585 x1081)) (x4585 (x5250 x1081 2))))
(assert (= (and x3838 x4439) x1562))
(assert (= (and (not x2147) x3108) x3820))
(assert (= (=> (and (= 0 x1649) (= x3208 x4849)) x1296) x2393))
(assert (= (x4585 (x956 2217467699)) 2217467699))
(assert (x4842 x1019))
(assert (= (and (not x2100) x323) x4975))
(assert (= x3804 (x4585 (x636 x3804))))
(assert (= x4408 (and (not x261) x3202)))
(assert (x4842 x3092))
(assert (x4842 x4264))
(assert (= (or (and (not x2284) x4858) x4410) x3072))
(assert (= x4154 (and x4320 (not x1976))))
(assert (x645 x2257))
(assert (x4842 x1604))
(assert (= (=> (and (= x399 x1873) (= x394 x427)) x2827) x4476))
(assert (x4842 x1972))
(assert (x4842 x1898))
(assert (= (and x820 x2698) x1728))
(assert (= x665 (=> (and (and (= x987 (x2828 (x636 x4134) x624 0)) (= x480 (x5250 x987 2)) (= (x2828 (x636 x2716) (x956 157) 0) x2058) (= (< x773 x838) x3366) (= (x2389 x2117) x1028) (<= x3786 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3872 (x5250 x2117 1)) (<= 0 x1028) (= (x2828 (x636 x4134) x176 0) x2117) (= x838 (x4388 x3872)) (<= x773 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2487 x3620) x691) (= x3620 (x5250 x2353 2)) (<= x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2353 (x2828 (x636 x4134) x2058 0)) (>= x773 0) (= x176 (x2828 (x636 x2716) (x956 159) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x838) (>= x838 0) (<= 0 x3786) (>= x691 0) (<= x691 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x903 x480) x3786) (= x624 (x2828 (x636 x2716) (x956 156) 0))) (or (and (= x837 0) (not x3366)) (and (= x837 x838) x3366))) x2806)))
(assert (= (=> (and (= (ite (> x3271 x2330) (not (= 0 x265)) (> x3271 x2330)) x3387) (or (and (and (and (= x2319 (> x2271 0)) (< x3082 1461501637330902918203684832716283019655932542976) (= (x1582 x2680) x3082) (= (x1843 (- x265 x3082)) x2271) (<= x3082 1461501637330902918203684832716283019655932542975) (<= 0 x3082)) (or (and (and (= x3683 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x454) (= x4689 (x5403 1461501637330902918203684832716283019655932542975 x1270))) (not x2319)) (and (and (>= x2812 0) (<= x2812 1461501637330902918203684832716283019655932542975) (= x2890 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= x4567 (x2828 (x636 x265) x4778 0)) (= x2812 (x981 x4567)) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x1064) (= x3401 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (< x2812 1461501637330902918203684832716283019655932542976)) x2319))) x3387) (and (and (and (>= 1461501637330902918203684832716283019655932542975 x3812) (= (x1582 x2680) x3812) (> 1461501637330902918203684832716283019655932542976 x3812) (>= x3812 0) (= x2747 (= 0 x3812))) (or (and (not x2747) (and (= (x472 x365) x50) (<= x50 1461501637330902918203684832716283019655932542975) (= x2809 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= x365 (x5250 x2680 1)) (> 1461501637330902918203684832716283019655932542976 x50) (>= x50 0) (= x190 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= x1371 (x5403 1461501637330902918203684832716283019655932542975 x1270)))) (and (and (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x2081) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x3972) (= x5369 (x5403 1461501637330902918203684832716283019655932542975 x1270))) x2747))) (not x3387)))) x3740) x3850))
(assert (= (and x2126 (not x2675)) x4661))
(assert (= (and (not x4972) x386) x3108))
(assert (x4842 x1267))
(assert (x4842 x219))
(assert (x4842 x3611))
(assert (= (or x1660 x4821) x4411))
(assert (= x3992 (and (not x4358) x1033)))
(assert (x4842 x1987))
(assert (= (and x1132 x1605) x4678))
(assert (= (and x3973 (not x2074)) x3869))
(assert (x4842 x3377))
(assert (x4842 x5352))
(assert (= x1070 (or x3730 x3896)))
(assert (x4621 x765))
(assert (= (x4585 (x636 x813)) x813))
(assert (x4842 x3117))
(assert (=> (>= 10000 x3671) (= (x636 x3671) (x956 x3671))))
(assert (= (and x2262 x5087) x4734))
(assert (x4842 x334))
(assert (= (x4585 (x636 x2513)) x2513))
(assert (= x4856 (and x1183 (not x875))))
(assert (= (and x4376 x279) x4950))
(assert (= x5388 (and x3132 x1659)))
(assert (= (and x3435 x2949) x4173))
(assert (x4842 x1067))
(assert (x4842 x650))
(assert (x4842 x2705))
(assert (x4621 x311))
(assert (x4621 x3420))
(assert (= x532 (and x2269 x2187)))
(assert (= x4303 (and x3220 x2209)))
(assert (x4621 x3804))
(assert (= (and x2883 (not x4132)) x5379))
(assert (= (and (not x2868) x4322) x2562))
(assert (x4842 x2387))
(assert (x4621 x1721))
(assert (= (and x516 (not x561)) x2683))
(assert (x4842 x2930))
(assert (= (and x5309 x5286) x2170))
(assert (=> (>= 10000 x497) (= (x956 x497) (x636 x497))))
(assert (= (x4585 (x5250 x2568 1)) (+ 1 (x4585 x2568))))
(assert (x4842 x2472))
(assert (= (and (not x1538) x864) x3847))
(assert (= x323 (and x1421 (not x3857))))
(assert (= 117300739 (x4585 (x956 117300739))))
(assert (= x2064 (and x1620 x5363)))
(assert (= (x4585 (x636 x4298)) x4298))
(assert (x4842 x1621))
(assert (x4842 x2648))
(assert (= (and x407 x1615) x3944))
(assert (= x2371 (or x3078 x1635)))
(assert (x4842 x4233))
(assert (= x2988 (=> (and (>= x4168 0) (<= x4168 1461501637330902918203684832716283019655932542975) (< x4168 1461501637330902918203684832716283019655932542976) (= (= x4168 0) x1837)) (and (=> x1837 x4107) (=> (and (not x1837) (and (= x1542 (x1306 (x636 x4168))) (>= x4168 0) (<= x4168 1461501637330902918203684832716283019655932542975) (= (= x1542 0) x2023) (> 1461501637330902918203684832716283019655932542976 x4168))) (and (=> x2023 x5005) (=> (and (> 4294967296 x4166) (not x2023)) x4107)))))))
(assert (= (and x4876 x5013) x2818))
(assert (x4842 x1649))
(assert (= (and x4505 x2013) x3279))
(assert (= (x4585 (x956 157198259)) 157198259))
(assert (= x1212 (or (and x2884 (not x5242)) (and x3684 x3490))))
(assert (= (and (not x48) x3735) x1600))
(assert (= x4904 (=> (and (= x4639 x2695) (= x676 x1896)) x4677)))
(assert (= x2594 (and x467 (not x2463))))
(assert (= x3618 (or x401 x1400)))
(assert (x4842 x2878))
(assert (= (and (not x5025) x1233) x2317))
(assert (x4842 x2952))
(assert (x4842 x3911))
(assert (= (=> (and (= x1192 x4395) (= x4650 x1711)) x3980) x4436))
(assert (x645 x95))
(assert (x4842 x3527))
(assert (x4842 x489))
(assert (x4842 x1755))
(assert (= (and x1985 (not x1813)) x769))
(assert (= x3569 (and x1384 x4513)))
(assert (x4621 x813))
(assert (= x4471 (and x2060 x4902)))
(assert (= (and x4796 x147) x3937))
(assert (= (x956 75483562) (x636 75483562)))
(assert (x4842 x363))
(assert (x4842 x40))
(assert (= x3614 (and x801 (not x3107))))
(assert (= (+ 1 (x4585 x2658)) (x4585 (x5250 x2658 1))))
(assert (= (and (not x149) x1619) x5047))
(assert (x4842 x915))
(assert (= (and x4295 x3700) x592))
(assert (x4842 x502))
(assert (= x2607 (=> (and (= x4698 x399) (= x427 x2990)) x2827)))
(assert (x4842 x2672))
(assert (= x763 (and x2264 x3994)))
(assert (x4842 x576))
(assert (= (and x4925 (not x3845)) x2707))
(assert (x4842 x3465))
(assert (= x841 (and x4486 x4262)))
(assert (= (and x244 (not x5324)) x1276))
(assert (x4842 x2528))
(assert (= (and x4741 x2296) x5355))
(assert (x4842 x5183))
(assert (x4842 x3786))
(assert (x4842 x1292))
(assert (= (x4585 (x636 x3801)) x3801))
(assert (x4842 x4732))
(assert (= (+ (x4585 x2190) 1) (x4585 (x5250 x2190 1))))
(assert (= (+ (x4585 x5371) 1) (x4585 (x5250 x5371 1))))
(assert (=> (>= 10000 x52) (= (x956 x52) (x636 x52))))
(assert (x4842 x427))
(assert (=> (<= x3708 10000) (= (x636 x3708) (x956 x3708))))
(assert (x4842 x1745))
(assert (x4842 x3452))
(assert (= x3096 (or x5219 x1105)))
(assert (= x1173 (and (not x3317) x2201)))
(assert (x4842 x5178))
(assert (= (and (=> x1122 x527) (=> (and (not x1122) (and (= x265 x434) (= x2330 1))) x3850)) x5191))
(assert (x4621 x5205))
(assert (= (and x3065 x5359) x5333))
(assert (x4842 x4936))
(assert (x4621 x1294))
(assert (x645 x3959))
(assert (= (or (and x1766 (not x1872)) x2355) x1052))
(assert (= (=> (and (= x2014 x4515) (= x2583 x5129)) x4833) x4634))
(assert (x4842 x4281))
(assert (= (and x1865 x1593) x4631))
(assert (= x1010 (x4585 (x636 x1010))))
(assert (x4842 x118))
(assert (= (+ (x4585 x734) 2) (x4585 (x5250 x734 2))))
(assert (x4842 x3935))
(assert (= x3496 (=> (and (= x1950 x3106) (= x3333 x4415)) x4538)))
(assert (= (or x2446 x3363) x3086))
(assert (= (and (not x4092) x3439) x1989))
(assert (= x1468 (x4585 (x636 x1468))))
(assert (= (and (not x1812) x1696) x4470))
(assert (= x795 (and (not x1145) x5047)))
(assert (x4621 x3813))
(assert (x4842 x755))
(assert (= x1290 (or x3215 x2098)))
(assert (= (and x1912 x207) x2914))
(assert (= (and x2075 x2724) x128))
(assert (x4842 x3734))
(assert (= (and x107 x2484) x2352))
(assert (= x4455 (and x3526 x1391)))
(assert (x4842 x4790))
(assert (=> (>= 10000 x1422) (= (x636 x1422) (x956 x1422))))
(assert (x4842 x4135))
(assert (= x1704 (and x1364 x623)))
(assert (= (and x917 (not x263)) x5041))
(assert (= x1925 (=> (and (= x141 (= 0 x393)) (or (and (= x2669 (x5250 x734 2)) x141) (and (not x141) (= (x2828 (x636 x393) x734 0) x1595)))) x3161)))
(assert (x4842 x2334))
(assert (x2961 x826 x2615))
(assert (x4842 x3082))
(assert (x4842 x4464))
(assert (x4842 x1712))
(assert (x4842 x5151))
(assert (= (or x3482 x4366) x674))
(assert (x4621 x3122))
(assert (x4842 x2148))
(assert (x4842 x3134))
(assert (x4842 x2943))
(assert (x4842 x3059))
(assert (= (or x1827 x4806) x2201))
(assert (= x1194 (x4585 (x636 x1194))))
(assert (x4842 x3506))
(assert (x4842 x964))
(assert (x4842 x2691))
(assert (= x170 (=> (and (= x4098 x55) (= x2772 x1436)) x3462)))
(assert (= (and x4043 x2851) x1784))
(assert (x4842 x1758))
(assert (= (and x4823 x2198) x246))
(assert (x4842 x3251))
(assert (x4842 x4653))
(assert (= x4167 (and (=> (and (and (or (and (= x4888 x3833) (not x3833)) (and x3833 (and (= x538 (x2828 (x636 x4144) x624 0)) (>= x2918 0) (= x4888 (not x3467)) (= (x5250 x538 2) x4993) (= x2918 (x2496 x4993)) (= x3467 (< x2918 x4663)) (<= x2918 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) (and (>= 1461501637330902918203684832716283019655932542975 x4144) (<= 0 x4144) (= x3833 (ite (> x3271 1) (not (= x4144 0)) (> x3271 1))) (= x3645 (x5250 x3834 1)) (= (x2828 (x636 x103) x624 0) x3834) (= (x4079 x3645) x4144) (> 1461501637330902918203684832716283019655932542976 x4144))) x186) x227) (=> (and (and (= x1311 x103) (= 0 x2714)) (not x186)) x3758))))
(assert (= (x4585 (x5250 x876 1)) (+ 1 (x4585 x876))))
(assert (= (and (not x2724) x2075) x3415))
(assert (= x1208 (and x3414 x925)))
(assert (= x3278 (=> (and (= x2014 x33) (= x1292 x5129)) x4833)))
(assert (= (=> (= x3321 x4717) x2619) x5091))
(assert (= (not (and (>= x3533 0) (< x3533 1461501637330902918203684832716283019655932542976) (= x1012 (x5250 x2865 1)) (<= x3533 1461501637330902918203684832716283019655932542975) (= (x2828 (x636 x712) x732 0) x2865) (= (x4697 x1012) x3533))) x1216))
(assert (= (and x3310 (not x4580)) x3433))
(assert (x4842 x5217))
(assert (=> (>= 10000 x3233) (= (x636 x3233) (x956 x3233))))
(assert (= (and x1239 (not x3349)) x3666))
(assert (= x1296 (=> (and (= x3632 x1649) (= x1864 x3208)) x2155)))
(assert (= x159 (or x3630 x3400)))
(assert (x4842 x1401))
(assert (x4842 x4512))
(assert (x4842 x3320))
(assert (= (and x4923 (not x4576)) x1190))
(assert (= (x4585 (x636 x3737)) x3737))
(assert (= x1642 (and (not x3091) x3554)))
(assert (= x2446 (and x674 (not x739))))
(assert (= x5102 (and x2219 (not x5297))))
(assert (= x4323 (and x160 x4443)))
(assert (x4842 x4860))
(assert (x4621 x615))
(assert (=> (>= 10000 x415) (= (x956 x415) (x636 x415))))
(assert (x4842 x2000))
(assert (= x357 (and x4162 (not x2531))))
(assert (= (=> (and (= 0 x5110) (= x5252 x4147)) x4024) x1507))
(assert (x4842 x1625))
(assert (x4842 x2881))
(assert (x4842 x2509))
(assert (= x1500 (and x4204 x4942)))
(assert (= x2171 (and (not x2245) x4479)))
(assert (= x5058 (and x693 x3601)))
(assert (x4842 x1377))
(assert (x4621 x268))
(assert (= x530 (and x1375 x1821)))
(assert (= x3931 (and (not x2637) x1889)))
(assert (x4842 x448))
(assert (x4842 x2339))
(assert (= 599290589 (x4585 (x956 599290589))))
(assert (= x3860 (x4585 (x636 x3860))))
(assert (x4842 x4753))
(assert (x4842 x4688))
(assert (= x3156 (and x4288 x3952)))
(assert (= x372 (or x2426 x1388)))
(assert (= x2131 (and x1790 (not x1992))))
(assert (x4842 x4425))
(assert (= x4162 (and (not x2526) x4154)))
(assert (= x783 (x4585 (x636 x783))))
(assert (x4842 x4706))
(assert (=> (<= x1382 10000) (= (x636 x1382) (x956 x1382))))
(assert (= (and x1986 (not x700)) x3682))
(assert (x5391 x4101))
(assert (x4842 x3391))
(assert (x4842 x806))
(assert (= x382 (=> (and (= x1498 x3632) (= x1186 x1864)) x2155)))
(assert (= (x636 2134560854) (x956 2134560854)))
(assert (= (and x3681 x3058) x4001))
(assert (= (and x4492 x3373) x1229))
(assert (x645 x4978))
(assert (= (x4585 (x5250 x4615 1)) (+ 1 (x4585 x4615))))
(assert (x4842 x3269))
(assert (x4842 x5243))
(assert (= (and x1230 x1710) x5312))
(assert (= x3310 (or (and x4703 (not x920)) x1073)))
(assert (= (and x1562 (not x370)) x4084))
(assert (=> (>= 10000 x4954) (= (x636 x4954) (x956 x4954))))
(assert (x4842 x784))
(assert (= (=> (and (= 0 x2153) (= x2505 x4627)) x1906) x2475))
(assert (= x103 (x4585 (x636 x103))))
(assert (x4842 x4735))
(assert (= (and x2447 x1772) x5184))
(assert (x4842 x3538))
(assert (x4842 x2534))
(assert (= (x4585 (x636 x1683)) x1683))
(assert (= (and x3999 x423) x2654))
(assert (= x897 (and (=> (and (and (= x2716 x287) (= x1731 x734) (= x5401 x3147)) x1770) x2229) (=> (and (not x1770) (and (= x1408 x3147) (= 1 x4860))) x1049))))
(assert (x4842 x1560))
(assert (x4842 x1552))
(assert (= x2083 (and x2938 x4729)))
(assert (x4842 x5177))
(assert (x4842 x1310))
(assert (= x5049 (and x195 x3791)))
(assert (= x5055 (and x2667 x5126)))
(assert (x645 x1700))
(assert (x4842 x1257))
(assert (x4621 x915))
(assert (= (and x5317 x2053) x5238))
(assert (= (or x342 x432 x5308 x4814) x3407))
(assert (x4842 x1923))
(assert (x4842 x4968))
(assert (x4842 x5264))
(assert (x4842 x3289))
(assert (= x2485 (and (not x56) x3255)))
(assert (= (=> (and (= x821 0) (= x2295 x3853)) x2128) x1983))
(assert (=> (>= 10000 x1862) (= (x636 x1862) (x956 x1862))))
(assert (=> (>= 10000 x268) (= (x956 x268) (x636 x268))))
(assert (= x4839 (and x4305 x1156)))
(assert (= (x636 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x956 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (x4842 x4716))
(assert (x4842 x3701))
(assert (x4842 x880))
(assert (x4842 x2917))
(assert (= (and x2738 x2045) x2905))
(assert (x4842 x2133))
(assert (x4842 x3163))
(assert (x4621 x2548))
(assert (= x1605 (and (not x4721) x933)))
(assert (x4842 x2934))
(assert (= (and x3713 x2730) x3403))
(assert (= (and x4787 x1616) x71))
(assert (= (x4585 (x956 178855970)) 178855970))
(assert (= (and x1342 (not x2900)) x389))
(assert (= (x4585 (x5250 x3874 2)) (+ (x4585 x3874) 2)))
(assert (= (and x2116 (not x4063)) x758))
(assert (x4842 x4208))
(assert (x4842 x5246))
(assert (x4842 x3651))
(assert (x4842 x2704))
(assert (= (or x3415 x2964 x1290 x1091 x5232 x3359 x1304) x1640))
(assert (x4842 x1468))
(assert (x4842 x1025))
(assert (x4842 x4519))
(assert (x4842 x327))
(assert (x4842 x2737))
(assert (x4842 x4100))
(assert (= (and (not x3346) x3403) x3199))
(assert (= x4872 (and x2587 x2973)))
(assert (x645 x3893))
(assert (x4842 x1107))
(assert (= (and (not x2979) x506) x3184))
(assert (x4842 x3126))
(assert (= x1137 (x4585 (x636 x1137))))
(assert (= (and x3222 x1994) x2715))
(assert (= x5325 (and x1912 (not x207))))
(assert (= (or x79 x1587) x1303))
(assert (= (and x4262 (not x4486)) x1384))
(assert (= (+ (x4585 x2394) 1) (x4585 (x5250 x2394 1))))
(assert (= x4528 (=> (= (= 0 x3214) x5131) (and (=> (and (and (= (x5403 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4978) x2663) (= x1933 (or (and (= true (<= x3290 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3290)) (> x3290 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4527 (x2989 (+ x1568 x2663))) (= x4978 (x2989 (+ x3290 31)))) (not x5131)) (and (=> (and (and (or (and (not x160) (and (= x160 x1832) (= x4134 0))) (and (and (= x5371 (x2828 (x636 x2716) (x956 157) 0)) (<= x4908 1461501637330902918203684832716283019655932542975) (= x4134 x4908) (= (not x2477) x1832) (< x4908 1461501637330902918203684832716283019655932542976) (<= 0 x4908) (= x2477 (= 0 x4908)) (= x1275 (x5250 x5371 1)) (= (x822 x1275) x4908)) x160)) (and (= (x2828 (x636 x2716) (x956 165) 0) x3505) (= (x3128 x1568) x3254) (= x160 (> x1472 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3500) (= x3500 (x1689 x3505)) (<= 0 x3500))) (not x1933)) x4153) (=> (and (= true x580) x1933) x305))) (=> x5131 x1008)))))
(assert (=> (>= 10000 x1468) (= (x636 x1468) (x956 x1468))))
(assert (x4842 x2879))
(assert (x2961 x4711 x2257))
(assert (x4842 x991))
(assert (= x403 (=> (and (and (= x1156 (> x3352 x773)) (<= 0 x773) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x773)) (or (and (= 0 x4931) (not x1156)) (and (= x3352 x4931) x1156))) x5257)))
(assert (x4842 x3520))
(assert (= (and x4432 x1165) x829))
(assert (= (and x3633 x4969) x701))
(assert (x4842 x5169))
(assert (=> (<= x1010 10000) (= (x636 x1010) (x956 x1010))))
(assert (x4842 x1947))
(assert (= (x4585 (x636 x434)) x434))
(assert (x4842 x2661))
(assert (= (+ (x4585 x5293) 1) (x4585 (x5250 x5293 1))))
(assert (x4842 x3164))
(assert (x4842 x1862))
(assert (= x2572 x989))
(assert (x4842 x3669))
(assert (= x3233 (x4585 (x636 x3233))))
(assert (= (or (and (not x2963) x4082) x5009) x684))
(assert (x4842 x1775))
(assert (=> (<= x5037 10000) (= (x956 x5037) (x636 x5037))))
(assert (x4842 x2429))
(assert (= (and (not x3741) x2959) x1094))
(assert (x4621 x4875))
(assert (= (x956 2362143243) (x636 2362143243)))
(assert (= (and (not x2973) x2587) x3044))
(assert (x4842 x415))
(assert (= (and x4119 (not x2350)) x3709))
(assert (x4842 x1741))
(assert (= (+ (x4585 x4760) 1) (x4585 (x5250 x4760 1))))
(assert (= x4377 (and x4238 x3789)))
(assert (x4621 x4097))
(assert (= (x636 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x956 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x169 (or x2880 x2820 x4599 x414 x3774)))
(assert (= x2880 (and x310 x1739)))
(assert (x4842 x4059))
(assert (= (and x4722 x570) x146))
(assert (= (x956 18446744073709551615) (x636 18446744073709551615)))
(assert (x4842 x976))
(assert (x4621 x976))
(assert (x4842 x2144))
(assert (=> (<= x4691 10000) (= (x956 x4691) (x636 x4691))))
(assert (= x3964 (x4585 (x636 x3964))))
(assert (x4842 x4468))
(assert (= x2433 (and x4903 x3094)))
(assert (x4842 x1568))
(assert (= (or x2444 x4028) x673))
(assert (x4842 x1352))
(assert (x4842 x3489))
(assert (x4842 x5346))
(assert (x4842 x4284))
(assert (= (and x2668 x1653) x4516))
(assert (= (x4585 (x636 x1311)) x1311))
(assert (= (and x3099 x914) x3615))
(assert (x4842 x1729))
(assert (= x4083 (and x4487 x3485)))
(assert (= x2827 (=> (and (= x2284 (= x399 0)) (or x2284 (not x2284))) x5287)))
(assert (= (or x255 x2550) x1567))
(assert (= x1577 (and (not x4437) x3007)))
(assert (x4842 x3343))
(assert (x4842 x3969))
(assert (x4842 x922))
(assert (= (and (not x1457) x4130) x505))
(assert (x4842 x3775))
(assert (= (and x3121 x3326) x5193))
(assert (= x3708 (x4585 (x636 x3708))))
(assert (x4842 x3416))
(assert (x4842 x1534))
(assert (x4842 x4954))
(assert (= (and x5314 x4472) x2999))
(assert (x4842 x3570))
(assert (=> (<= x978 10000) (= (x956 x978) (x636 x978))))
(assert (x4842 x2230))
(assert (= (and x4183 (not x1362)) x3337))
(assert (x4842 x4140))
(assert (x4842 x454))
(assert (x4621 x3964))
(assert (x4842 x1459))
(assert (x4842 x4770))
(assert (= x4796 (and x3468 x4970)))
(assert (x4842 x3493))
(assert (= x1979 (and (not x3037) x3934)))
(assert (= (and x5186 (not x3051)) x2004))
(assert (= (x4585 (x956 77053863734975077137548456399560439977311721439096602559221323163398253314048)) 77053863734975077137548456399560439977311721439096602559221323163398253314048))
(assert (x4842 x853))
(assert (x4842 x4655))
(assert (= (x4585 (x636 x4390)) x4390))
(assert (x4842 x1417))
(assert (= x4745 (and x3109 x5133)))
(assert (x4842 x2091))
(assert (= (x636 72570022874062638528011751457397263716769196454539065078543251854057308946432) (x956 72570022874062638528011751457397263716769196454539065078543251854057308946432)))
(assert (x4842 x3762))
(assert (= x4709 (and x2129 x1069)))
(assert (x4842 x712))
(assert (= (and x4642 x2175) x4188))
(assert (= (x4585 (x636 x4081)) x4081))
(assert (x4842 x52))
(assert (= (=> (and (= x4147 x4650) (= 0 x1192)) x4436) x1730))
(assert (= (and x2907 x3077) x291))
(assert (= x4061 (and x4376 (not x279))))
(assert (= x2259 (and x3239 (not x3387))))
(assert (x4842 x2809))
(assert (= x1347 (and (not x2887) x2263)))
(assert (= x124 (and x2786 x4749)))
(assert (x4842 x2845))
(assert (=> (>= 10000 x4941) (= (x956 x4941) (x636 x4941))))
(assert (= x2202 (=> (and (= x4968 x2376) (= x800 0)) x4809)))
(assert (x4842 x2615))
(assert (x4842 x4571))
(assert (= x1483 (and x1889 x2637)))
(assert (x4842 x3621))
(assert (= (and (not x470) x4582) x1041))
(assert (x4842 x3405))
(assert (x4621 x4245))
(assert (= x4667 (and x62 (not x5266))))
(assert (= x5283 (=> (= x5010 (= x5306 0)) (and (=> x5010 x1008) (=> (and (and (= x4956 x2210) (= x232 x3581) (= x2385 x4319) (= x3519 x1214)) (not x5010)) x2165)))))
(assert (x4621 x1382))
(assert (= x1572 (or x2967 x2166)))
(assert (x4842 x5320))
(assert (= x1062 (and (not x3275) x1144)))
(assert (=> (>= 10000 x4735) (= (x956 x4735) (x636 x4735))))
(assert (x4842 x3742))
(assert (= (and x1323 (not x3898)) x602))
(assert (=> (>= 10000 x4850) (= (x636 x4850) (x956 x4850))))
(assert (= x5362 (and (not x3910) x3962)))
(assert (x4621 x1862))
(assert (= x435 (and (not x5307) x3055)))
(assert (x4842 x1905))
(assert (x4842 x3106))
(assert (= (and (=> (and x878 (and (= x2257 (ite (< x833 x3254) 1 0)) (= (x2828 (x636 x746) x1321 0) x5384) (= (ite (not x4882) 1 0) x4711) (= (x652 x1272) x2029) (= x1321 (x2828 (x636 x2716) (x956 159) 0)) (<= 0 x2029) (= (= 0 x2029) x4882) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2029) (= x664 (x5403 x4711 x2257)) (= x1272 (x5250 x5384 1)) (= x390 (= x664 0)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2029) x833))) (and (=> (not x390) x4779) (=> (and x390 (and (= x4547 (div x4037 1000000000000000000)) (= (< x1472 x152) x4448) (= (mod (* x2029 x3254) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4037))) (and (=> (and (and (= x3846 (< x621 x4547)) (= x621 (x1843 (- x1472 x152)))) (not x4448)) (and (=> (and x3846 (and (= x4360 (> x621 115792089237316195423570985008687907853269984665640564039457)) (= x3910 (= 0 (ite x4360 1 0))))) (and (=> (not x3910) x3103) (=> (and x3910 (and (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1993) x774) (= x3032 (x5403 x4574 x1740)) (= (mod (* x621 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1993) (= (= 0 x3032) x5297) (= x2409 (= 0 x1993)) (= x4574 (ite (not x2409) 1 0)) (= x1740 (ite (< x774 1000000000000000000) 1 0)))) (and (=> (and (and (= x3008 (> x3254 0)) (= x2324 (mod (* 1000000000000000000 x1993) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5297) (and (=> (not x3008) x2789) (=> (and x3008 (and (= (div x2324 x3254) x3508) (= x1092 (x652 x1272)) (= (> x161 x1092) x4472) (<= x1092 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1092) (= (div x3508 1000000000000000000) x161))) (and (=> (and (and (= (> x621 115792089237316195423570985008687907853269984665640564039457) x3195) (= (x1843 (- x1092 x161)) x4507) (= x93 (= 0 (ite x3195 1 0)))) (not x4472)) (and (=> (not x93) x3425) (=> (and x93 (and (= (x5403 x1381 x2134) x1589) (= (ite (> 1000000000000000000 x5290) 1 0) x2134) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2656) x5290) (= x1381 (ite (not x4826) 1 0)) (= x4826 (= x2656 0)) (= x2656 (mod (* x621 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= 0 x1589) x270))) (and (=> (and (and (= (mod (* x2656 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3534) (= (> x3500 0) x4938)) x270) (and (=> (and (and (= (div x5006 1000000000000000000) x2604) (= x1177 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2604))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x240) (= (> x240 x1177) x2586) (>= x240 0) (= (div x3534 x3500) x5006) (= x240 (x1596 x5384))) x4938) (and (=> (and (not x2586) (and (= x4507 x2388) (= x4254 x4330) (= x4330 (x2989 (+ x2604 x240))))) x1301) (=> x2586 x2572))) (=> (not x4938) x3844))) (=> (not x270) x492))))) (=> x4472 x3069))))) (=> (not x5297) x1087))))) (=> (and (and (= x4656 (= 0 (ite x804 1 0))) (= x804 (< 115792089237316195423570985008687907853269984665640564039457 x4547))) (not x3846)) (and (=> (not x4656) x2483) (=> (and x4656 (and (= (= x3582 0) x2909) (= (mod (* x4547 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3582) (= x2449 (= 0 x348)) (= x2001 (ite (< x857 1000000000000000000) 1 0)) (= x3031 (ite (not x2909) 1 0)) (= (x5403 x3031 x2001) x348) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3582) x857))) (and (=> (and (and (= (> x3500 0) x2637) (= x3443 (mod (* x3582 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2449) (and (=> (and x2637 (and (<= 0 x5197) (= (< x142 x5197) x3736) (= (x1596 x5384) x5197) (= (div x2289 1000000000000000000) x2633) (= x142 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2633))) (= x2289 (div x3443 x3500)) (<= x5197 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x3736) (and (= (> x152 x1080) x104) (= x751 (x2989 (+ x2633 x5197))) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4547)) x1080))) (and (=> (and (not x104) (and (= x751 x4254) (= x2388 0))) x1301) (=> x104 x84))) (=> x3736 x659))) (=> (not x2637) x2435))) (=> (not x2449) x5069))))))) (=> x4448 x3329))))) (=> (and (and (= x3321 x3624) (= x3868 x152)) (not x878)) x2936)) x1372))
(assert (= (and x1872 x1766) x2355))
(assert (= (+ 1 (x4585 x4792)) (x4585 (x5250 x4792 1))))
(assert (= x1473 (or x3421 x150)))
(assert (= (x956 1856199391) (x636 1856199391)))
(assert (= x4163 (and x4290 (not x4255))))
(assert (= x4833 (=> (and (or x2963 (not x2963)) (= (= x5129 0) x2963)) x1406)))
(assert (x4842 x393))
(assert (x4842 x3813))
(assert (= (x636 178855970) (x956 178855970)))
(assert (= x3837 (and x2337 (not x410))))
(assert (= (or x1996 x3105) x1946))
(assert (x4842 x3886))
(assert (x4842 x551))
(assert (x4842 x3100))
(assert (= x1031 (or x5326 x1665)))
(assert (x4842 x1810))
(assert (x4842 x4850))
(assert (= (and (not x2763) x2924) x2501))
(assert (x4842 x4610))
(assert (x4842 x1877))
(assert (= x5397 (and x3815 (not x2787))))
(assert (x4842 x5334))
(assert (= x2224 (and x3759 (not x2194))))
(assert (x4842 x2807))
(assert (x4842 x3504))
(assert (x4842 x4247))
(assert (x4842 x3922))
(assert (x4842 x3130))
(assert (= (x956 547091486) (x636 547091486)))
(assert (x4842 x1004))
(assert (= (+ (x4585 x4587) 1) (x4585 (x5250 x4587 1))))
(assert (x4842 x4573))
(assert (=> (>= 10000 x5226) (= (x636 x5226) (x956 x5226))))
(assert (x4842 x5018))
(assert (x4842 x2277))
(assert (x4621 x3737))
(assert (x4842 x2729))
(assert (x4842 x4328))
(assert (= x358 (and (not x5073) x4155)))
(assert (x4842 x4177))
(assert (x4842 x2336))
(assert (= (x4585 (x636 x2123)) x2123))
(assert (= x536 (or x3880 x4795)))
(assert (x4842 x4951))
(assert (= x958 (and (not x2838) x2818)))
(assert (= (and x5047 x1145) x4871))
(assert (x4842 x952))
(assert (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x4585 (x956 20853193852723734048814770637610870652489083209607696777694672748161462697984))))
(assert (= x4846 (and x3346 x3403)))
(assert (x4842 x978))
(assert (x4842 x3854))
(assert (= x3884 (and x3387 x3239)))
(assert (= (+ 1 (x4585 x3367)) (x4585 (x5250 x3367 1))))
(assert (= (x4585 (x636 x4606)) x4606))
(assert (x4842 x1119))
(assert (x4842 x2605))
(assert (x4842 x1533))
(assert (x4842 x2482))
(assert (x4842 x4214))
(assert (x4621 x869))
(assert (= (and (not x2681) x2775) x1233))
(assert (=> (<= x2356 10000) (= (x956 x2356) (x636 x2356))))
(assert (= (x4585 (x636 x1396)) x1396))
(assert (x4842 x4894))
(assert (x4842 x2002))
(assert (= (+ (x4585 x544) 1) (x4585 (x5250 x544 1))))
(assert (= x5232 (or x1429 x3328)))
(assert (x4842 x3687))
(assert (x4842 x3181))
(assert (= x4954 (x4585 (x636 x4954))))
(assert (= (and x5212 x4445) x1043))
(assert (x645 x826))
(assert (= x4088 (and x32 x3908)))
(assert (= x3922 (x4585 (x636 x3922))))
(assert (= (=> (= (= x3106 0) x5155) (and (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4415) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4415)) (> 32 x4415))) x4017) (not x5155)) (and (=> (and (and (= x3437 1) (= x2214 x5192) (= x2084 x4271)) (not x4017)) x3731) (=> (and x4017 (= x2084 x4009)) x2323))) (=> (and (= x2084 x4009) x5155) x2323))) x3899))
(assert (x4842 x680))
(assert (x4842 x4335))
(assert (x4842 x126))
(assert (x4842 x4114))
(assert (= (=> (and (= x1199 (x2828 (x636 x746) x734 0)) (= x3308 (x5250 x1622 1)) (= x1622 (x5250 x1199 1))) x1108) x3161))
(assert (x4842 x5239))
(assert (= (or x1140 x4739) x5030))
(assert (x4621 x2779))
(assert (= (and x2527 (not x3158)) x4609))
(assert (= x4703 (or x1402 x4531 x1179 x1453)))
(assert (= (and (not x1998) x2172) x1142))
(assert (x4842 x4995))
(assert (x4842 x1881))
(assert (= (=> (= (= x837 x691) x285) (and (=> (and (not x285) (= x3213 (< 0 x691))) (and (=> (and (= x5336 x4527) (not x3213)) x523) (=> (and (and (= (x5250 x3367 1) x4600) (= (x2487 x4600) x1159) (= x951 (= x1159 0)) (= x2394 (x2828 (x636 x4134) x2058 0)) (>= 1461501637330902918203684832716283019655932542975 x3691) (>= x1159 0) (= x3916 (x2989 (+ 96 x4527))) (< x3691 1461501637330902918203684832716283019655932542976) (= (x4514 x2394) x4030) (= x3691 (x4985 x3367)) (>= x3691 0) (<= 0 x4030) (<= x4030 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1159) (< x4030 1461501637330902918203684832716283019655932542976) (= x3367 (x5250 x2394 1))) x3213) (and (=> (and (not x951) (and (= (= x4030 0) x4407) (or (and (not x4407) (and (= x972 (x2828 (x636 x4030) x2058 0)) (= (x5250 x972 1) x3111))) (and x4407 (= (x5250 x2058 1) x1780))))) x4236) (=> x951 x4227))))) (=> (and x285 (= x1228 x4527)) x1308))) x2806))
(assert (= (and x3962 x3910) x2219))
(assert (= x2971 (or x1488 x120)))
(assert (x4842 x3712))
(assert (x4842 x2947))
(assert (= x4134 (x4585 (x636 x4134))))
(assert (x4842 x1684))
(assert (x4842 x4373))
(assert (x4842 x268))
(assert (= x2561 (and x1894 x935)))
(assert (= x1351 (and x474 (not x963))))
(assert (= x711 (and (not x430) x2302)))
(assert (= (and x2129 (not x1069)) x5146))
(assert (x4842 x2852))
(assert (x4842 x1271))
(assert (x4842 x1746))
(assert (= 1865448899 (x4585 (x956 1865448899))))
(assert (x4842 x1461))
(assert (x4842 x1348))
(assert (= (and (not x871) x913) x3588))
(assert (= x222 (and x3433 (not x1769))))
(assert (x4842 x3457))
(assert (= x1672 (and x1442 x5235)))
(assert (x4842 x2029))
(assert (x4842 x5282))
(assert (x4842 x2754))
(assert (=> (>= 10000 x1194) (= (x636 x1194) (x956 x1194))))
(assert (= (and (not x4859) x2285) x5107))
(assert (x4621 x26))
(assert (x4842 x4165))
(assert (= (x4585 (x636 x1294)) x1294))
(assert (= x15 (and x795 x3438)))
(assert (= (x956 1461501637330902918203684832716283019655932542976) (x636 1461501637330902918203684832716283019655932542976)))
(assert (= x1754 (and x2201 x3317)))
(assert (x4621 x2356))
(assert (x4621 x4302))
(assert (= (and x2108 x4150) x623))
(assert (x645 x3014))
(assert (= (x4585 (x636 x4441)) x4441))
(assert (x4842 x5365))
(assert (= (x636 35417553099779373699389112480655434059402432070290151981503827724506945814528) (x956 35417553099779373699389112480655434059402432070290151981503827724506945814528)))
(assert (=> (<= x393 10000) (= (x636 x393) (x956 x393))))
(assert (x4842 x1000))
(assert (= (and x5090 (not x4122)) x3985))
(assert (= x2206 (and x1476 (not x2233))))
(assert (x4842 x800))
(assert (= x4262 (and x3349 x1239)))
(assert (= (and x1230 (not x1710)) x4467))
(assert (=> (>= 10000 x3995) (= (x636 x3995) (x956 x3995))))
(assert (= (or x3717 (and (not x2189) x5214)) x3994))
(assert (= x2377 (and x1941 x4076)))
(assert (= (+ (x4585 x3864) 1) (x4585 (x5250 x3864 1))))
(assert (= (and x2829 x212) x5042))
(assert (x4842 x3428))
(assert (x4842 x671))
(assert (= (and (not x603) x4334) x741))
(assert (x4842 x1419))
(assert (x4842 x3602))
(assert (x4842 x3639))
(assert (x4842 x2232))
(assert (= (and x4454 (not x5260)) x2974))
(assert (= (and (not x5328) x2941) x4843))
(assert (x4842 x3296))
(assert (x4842 x1047))
(assert (x4621 x5280))
(assert (x4842 x2644))
(assert (x645 x1740))
(assert (x4842 x3258))
(assert (x4842 x2857))
(assert (x4842 x1773))
(assert (x4621 x2623))
(assert (= (and x2868 x4322) x555))
(assert (x4842 x2373))
(assert (= (and (not x2291) x3197) x431))
(assert (= x1827 (and x5268 x557)))
(assert (= (and x4579 x4668) x1482))
(assert (= (and x3051 x5186) x3896))
(assert (= x2817 (and x4194 x114)))
(assert (= x1554 (and (not x677) x2849)))
(assert (= (and x3002 x193) x378))
(assert (x4842 x4934))
(assert (x4842 x123))
(assert (x29 x1608 x2560))
(assert (x4842 x644))
(assert (x4842 x4591))
(assert (x4621 x3494))
(assert (= (or x498 x68 x3358 x64) x2829))
(assert (x4842 x1243))
(assert (x4842 x2942))
(assert (= x2382 (=> (and (= 0 x4698) (= x2990 x2230)) x2607)))
(assert (x4842 x1018))
(assert (= x5356 (or x1340 x2654 x4786 x2547 x378 x3679)))
(assert (= (and x3857 x1421) x2458))
(assert (x4842 x1057))
(assert (= x5199 (and x5235 (not x1442))))
(assert (x4842 x19))
(assert (= x3175 (and x4617 x2904)))
(assert (x4842 x5002))
(assert (x4842 x3214))
(assert (x4842 x1953))
(assert (x4621 x223))
(assert (= (or x1960 x1718) x2203))
(assert (x4842 x2046))
(assert (= (and x3355 x2575) x2372))
(assert (=> (>= 10000 x2690) (= (x636 x2690) (x956 x2690))))
(assert (x4842 x217))
(assert (x4842 x2740))
(assert (= (and (not x3035) x2540) x2285))
(assert (x4842 x5241))
(assert (= (and (not x4510) x741) x4970))
(assert (x4842 x3959))
(assert (x4842 x4864))
(assert (= x862 (or x250 x1924)))
(assert (x4621 x1343))
(assert (= (and x4748 x3510) x3677))
(assert (= x126 (x4585 (x636 x126))))
(assert (= x5385 (and (not x4292) x1650)))
(assert (x4842 x4219))
(assert (x4842 x4338))
(assert (= (and x2859 x3586) x3644))
(assert (x4842 x2036))
(assert (=> (<= x4477 10000) (= (x636 x4477) (x956 x4477))))
(assert (x4842 x329))
(assert (= x1889 (and x2571 x2449)))
(assert (= (=> (and (= x3530 0) (= x882 x4457) (= x3996 x5392)) x1680) x2741))
(assert (= (=> (and (= x4951 0) (= x2901 x3589)) x1413) x1638))
(assert (= x2093 (and x698 x736)))
(assert (= x4149 (and x2032 x1899)))
(assert (= x1995 (x4585 (x636 x1995))))
(assert (x645 x967))
(assert (x4831 x4824))
(assert (= (x4585 (x5250 x704 2)) (+ (x4585 x704) 2)))
(assert (= (x4585 (x956 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x4740 (and (not x4649) x2421)))
(assert (x2961 x1401 x2052))
(assert (= (=> (and (or x5142 (not x5142)) (= (= 0 x1809) x5142)) x4478) x4085))
(assert (x4842 x111))
(assert (= (or x422 x3272) x924))
(assert (x4842 x1138))
(assert (x4842 x4494))
(assert (x4842 x1711))
(assert (= x1453 (or x4684 x1418)))
(assert (= x2462 (and x1518 x3338)))
(assert (=> (>= 10000 x3754) (= (x956 x3754) (x636 x3754))))
(assert (x4842 x2152))
(assert (= (and x5119 x4195) x31))
(assert (x4842 x839))
(assert (x4842 x826))
(assert (x4842 x234))
(assert (= x4739 (and x1727 x2817)))
(assert (x4842 x3155))
(assert (= x3312 (and (not x3023) x1213)))
(assert (x4842 x1732))
(assert (x4842 x4128))
(assert (= x3725 (or x2130 x950)))
(assert (= x3625 (and x2060 (not x4902))))
(assert (x4842 x2112))
(assert (x4842 x2271))
(assert (x4842 x3031))
(assert (= (=> (and (or (and (not x690) (and (= x746 x4134) (= x690 x5147))) (and x690 (and (= x2709 x746) (>= 1461501637330902918203684832716283019655932542975 x2709) (= (= 0 x2709) x4118) (> 1461501637330902918203684832716283019655932542976 x2709) (= x2709 (x4352 x3345)) (<= 0 x2709) (= (not x4118) x5147) (= x3864 (x2828 (x636 x2716) (x956 157) 0)) (= x3345 (x5250 x3864 1))))) (and (= (x2989 (+ x3321 32)) x4363) (= (> x1472 x152) x690))) x3568) x2299))
(assert (= (and (=> x2050 x4459) (=> (and (and (= 1 x2661) (= x4736 x1618)) (not x2050)) x5332)) x735))
(assert (x4842 x4572))
(assert (x4842 x2858))
(assert (x4842 x3861))
(assert (= x3291 (=> (= x2068 (= 0 x1570)) (and (=> x2068 x1008) (=> (and (not x2068) (and (= x2780 (x2989 (+ x1969 x483))) (= (x5403 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4050) x1969) (= x4050 (x2989 (+ x4417 31))) (= x1099 (or (> x4417 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4417)) (< x4417 32)))))) (and (=> (and (= true x580) x1099) x305) (=> (and (and (= x1612 (x4558 x483)) (= (< 115792089237316195423570985008687907853269984665640564039457 x3712) x938) (= (= 0 (ite x938 1 0)) x4125)) (not x1099)) (and (=> (not x4125) x989) (=> (and x4125 (and (= x764 (x5403 x3546 x3014)) (= x2605 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3739)) (= (mod (* x3712 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3739) (= (ite (not x3285) 1 0) x3546) (= x3790 (= 0 x764)) (= x3285 (= 0 x3739)) (= (ite (< x2605 1000000000000000000) 1 0) x3014))) (and (=> (not x3790) x989) (=> (and x3790 (and (= x4604 (mod (* x3739 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2724 (> x1612 0)))) (and (=> (and (and (= x1441 (< x4215 x1046)) (= x4215 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414))) (<= x1046 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1414 (div x4614 1000000000000000000)) (= x3525 (x5250 x3043 1)) (= (div x4604 x1612) x4614) (= (x3484 x3525) x1046) (<= 0 x1046)) x2724) (and (=> (and (not x1441) (and (<= x215 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x215) (<= 0 x215) (= x2992 (x1843 (- x2716 x215))) (= x4481 (x2989 (+ x1046 x1414))) (= x546 (< 0 x2992)))) (and (=> (and x546 (and (and (and (= x3712 x2942) (> 599290589 x2943) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x1257) (= 157198259 x2943) (= (or (and (= true (<= x642 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x642 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x642)) x138) (not (< x4103 4)) (= x4103 68) (= (x1306 (x636 x1299)) x1417) (= (x1843 (- x4103 4)) x642) (< x2943 1466279372) (> x1417 0) (= x2370 x1716) (not (= x2943 117300739))) x3158) (and (= (x2989 (+ 32 x3821)) x90) (= (= x1004 x1299) x3158) (= x3821 (x2989 (+ 4 x2780)))))) (and (=> (and (not x138) (and (= (= x1716 x2370) x1259) (= x1750 x2370))) (and (=> (and (and (= 1 x95) (= x2942 x110) (= (x2828 (x636 x2370) x2793 0) x2012) (= 32 x4958) (= x2793 (x2828 (x636 x3494) (x956 2) 0))) x1259) x1224) (=> (not x1259) x3379))) (=> x138 x3379))) (=> (and (and (= (x1306 (x636 x3964)) x3695) (<= 0 x3964) (<= x3964 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x3964) (= x3715 (= 0 x3695))) (not x546)) (and (=> (and (= x580 true) x3715) x305) (=> (and (not x3715) (and (= (= 0 x123) x2698) (= x123 (x1306 (x636 x2716))) (> 4294967296 x321))) (and (=> (and x2698 (= true x580)) x305) (=> (and (and (and (= (x5303 (x636 x3494)) x4345) (= x557 (and (>= x4345 x3712) (< (+ x3712 x4197) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x5303 (x636 x2716)) x4197)) (or (and (not x557) (= 0 x1123)) (and x557 (and (= x1932 (x5303 (x636 x3494))) (= x1123 1) (= (- x1932 x3712) x4314) (= x3074 (x2989 (+ x3712 x1463))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1463 x3712)) (= x1463 (x4966 (x636 x2716))) (> 4294967296 x1352))))) (not x2698)) x2151))))))) (=> x1441 x989))) (=> (not x2724) x526)))))))))))))
(assert (x4842 x4998))
(assert (= (and (not x2586) x4419) x1913))
(assert (= (and x2612 x1027) x3555))
(assert (x645 x2951))
(assert (= x781 (and x4484 x1726)))
(assert (= (x4585 (x5250 x3840 1)) (+ (x4585 x3840) 1)))
(assert (x4842 x2385))
(assert (= (and x594 (not x3162)) x3055))
(assert (= x5019 (and x3690 (not x1464))))
(assert (= x2175 (and x2082 x3364)))
(assert (x4842 x2272))
(assert (x4621 x4694))
(assert (x4842 x1297))
(assert (= (and x2093 x4628) x3750))
(assert (= x4982 (and x2043 x3699)))
(assert (= (and x1437 x3184) x3900))
(assert (= (=> (= true x580) x305) x1008))
(assert (= (and x93 x2640) x908))
(assert (x4842 x1280))
(assert (= (or x692 x1916) x5094))
(assert (= x173 (and x2638 x4017)))
(assert (= x5007 (and (not x3833) x4822)))
(assert (x4842 x3623))
(assert (= (or x4083 x4500 x619 x4336 x4113 x4306) x870))
(assert (= (and (not x5061) x4368) x3560))
(assert (= x5207 x1008))
(assert (= (x4585 (x636 x2266)) x2266))
(assert (= 2023533118 (x4585 (x956 2023533118))))
(assert (= (and (not x3562) x866) x1949))
(assert (x4842 x3015))
(assert (x4842 x3266))
(assert (x4842 x4415))
(assert (= x659 x989))
(assert (x4842 x4692))
(assert (= (x4585 (x5250 x4404 2)) (+ (x4585 x4404) 2)))
(assert (x5391 x4944))
(assert (x4842 x2992))
(assert (x4842 x1630))
(assert (= x5076 (and x4220 x3769)))
(assert (= x5121 (and x2068 x2258)))
(assert (x4842 x1698))
(assert (= x2612 (or x335 x4001)))
(assert (= x2024 (or x1913 x5338)))
(assert (= x2808 (x4585 (x636 x2808))))
(assert (x4842 x2723))
(assert (x4842 x967))
(assert (=> (<= x5195 10000) (= (x956 x5195) (x636 x5195))))
(assert (x4842 x2982))
(assert (x4621 x4691))
(assert (x4842 x948))
(assert (x4842 x3594))
(assert (= x1665 (and (not x1757) x4502)))
(assert (x4842 x975))
(assert (x4842 x3798))
(assert (x4621 x2729))
(assert (x4842 x3477))
(assert (x4842 x759))
(assert (= x4986 (and (not x3171) x4837)))
(assert (= x2761 (and x2776 x420)))
(assert (= x5138 (=> (and (= x33 x5372) (= x1292 0)) x3278)))
(assert (= (and (not x4406) x3761) x4668))
(assert (= x1340 (and x3767 x2239)))
(assert (= x918 (or x3832 x1852)))
(assert (x4842 x5285))
(assert (x4621 x2917))
(assert (x4842 x1294))
(assert (x2961 x3031 x2001))
(assert (x4842 x1240))
(assert (= x2229 (not (and (= x4539 (x5250 x3726 1)) (= (x2828 (x636 x5401) x1731 0) x3726) (> 1461501637330902918203684832716283019655932542976 x4512) (= x4512 (x317 x4539)) (>= x4512 0) (<= x4512 1461501637330902918203684832716283019655932542975)))))
(assert (= x3281 (and x1936 x210)))
(assert (= (and x3108 x2147) x4119))
(assert (x4842 x1414))
(assert (x4842 x4271))
(assert (= x422 (or x396 x2697 x4827 x505 x4164 x1868)))
(assert (= x5214 (or x5088 x4738 x364 x793)))
(assert (= (x956 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x636 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (= x2328 (and (not x3424) x1052)))
(assert (x4842 x2422))
(assert (x4842 x3635))
(assert (= (or x4975 x5262) x3587))
(assert (= x3908 (or x5316 x2374)))
(assert (x4842 x1709))
(assert (x4842 x2159))
(assert (= x4909 (and x266 x947)))
(assert (x4842 x3480))
(assert (x4842 x3402))
(assert (x4842 x136))
(assert (x4621 x4289))
(assert (x4842 x1599))
(assert (= (or x590 x2519) x2536))
(assert (x4621 x1972))
(assert (= (=> (= x580 true) x305) x526))
(assert (= x1654 (and (not x2667) x5126)))
(assert (x4842 x4297))
(assert (= x3733 (x4585 (x636 x3733))))
(assert (= x2359 (=> (= x3204 (= x2314 x885)) (and (=> x3204 x403) (=> (and (not x3204) (= (< 0 x2314) x3927)) (and (=> (not x3927) x1264) (=> (and (and (= x6 (x5250 x1737 1)) (= x1737 (x5250 x2007 1)) (= (x5120 x6) x4892) (= x2007 (x2828 (x636 x2356) x4778 0)) (> 1461501637330902918203684832716283019655932542976 x2739) (= x2739 (x1307 x2007)) (> 1461501637330902918203684832716283019655932542976 x2548) (<= x2548 1461501637330902918203684832716283019655932542975) (<= x4892 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x4892) x2194) (>= x2548 0) (>= x2739 0) (= x2548 (x3503 x1737)) (>= 1461501637330902918203684832716283019655932542975 x2739) (>= x4892 0) (= x2356 (x5403 1461501637330902918203684832716283019655932542975 x1270))) x3927) (and (=> x2194 x1008) (=> (and (and (or (and (and (= (x5250 x705 1) x2333) (= x705 (x2828 (x636 x2739) x4778 0))) (not x5337)) (and x5337 (= (x5250 x4778 1) x2212))) (= x5337 (= 0 x2739))) (not x2194)) x2204)))))))))
(assert (x4842 x196))
(assert (x4842 x2378))
(assert (x4842 x2582))
(assert (x4621 x5159))
(assert (= (and x5144 (not x2866)) x1471))
(assert (= (and (not x2617) x3483) x3646))
(assert (= x4582 (and x1167 (not x4133))))
(assert (x4621 x3922))
(assert (= x3250 (and x3748 x3657)))
(assert (= (x4585 (x5250 x3246 1)) (+ 1 (x4585 x3246))))
(assert (= (and x4529 x2085) x3093))
(assert (= x1738 (=> (and (= x3916 x5336) (= x2903 (x5250 x59 1)) (= (x2828 (x636 x4134) x2058 0) x1196) (= (x5250 x1196 1) x59)) x523)))
(assert (= x2682 (or x1949 x2784)))
(assert (= x3521 (and x3884 (not x2319))))
(assert (= x989 x3069))
(assert (x4842 x269))
(assert (x4842 x556))
(assert (x4842 x491))
(assert (= (or x1020 x4458) x4203))
(assert (x4842 x1228))
(assert (= x94 (and x430 x2302)))
(assert (= x3859 (and x452 x4584)))
(assert (= x4786 (and (not x620) x2984)))
(assert (x4842 x73))
(assert (= x2860 (or x2476 x4740)))
(assert (x4842 x286))
(assert (=> (>= 10000 x3216) (= (x636 x3216) (x956 x3216))))
(assert (= (or x4188 x3385 x1126 x2221 x3356 x1389) x3551))
(assert (= 988262939 (x4585 (x956 988262939))))
(assert (x4842 x1481))
(assert (x4842 x458))
(assert (x4842 x550))
(assert (= x5220 (and x2335 (not x2418))))
(assert (x4842 x3893))
(assert (x4842 x4736))
(assert (x4842 x2157))
(assert (= 1000000000000000000 (x4585 (x956 1000000000000000000))))
(assert (=> (<= x26 10000) (= (x956 x26) (x636 x26))))
(assert (x4842 x3801))
(assert (x4842 x2298))
(assert (x4842 x3322))
(assert (x4842 x2034))
(assert (= (=> (and (= x1436 0) (= x55 x1134)) x170) x2499))
(assert (= (and x674 x739) x2379))
(assert (= (and x5211 x4605) x3681))
(assert (=> (<= x265 10000) (= (x956 x265) (x636 x265))))
(assert (x4842 x3530))
(assert (x4842 x2728))
(assert (= (and x1350 (not x2678)) x2411))
(assert (= x1613 (and (not x390) x4044)))
(assert (= (and x3591 x856) x2801))
(assert (x4842 x3230))
(assert (= (and x1628 x164) x1924))
(assert (= (=> (and (= x4627 x985) (= 0 x1953)) x2397) x2821))
(assert (= (=> (and (= x556 (x2989 (+ 4 x380))) (= (x2989 (+ 32 x2287)) x1765) (= (x2989 (+ x556 32)) x2287) (= x2384 (= x1004 x1299))) (and (=> (and (not x2384) (= x3162 (= x4735 x1004))) (and (=> (and (not x3162) (= x5307 (= x1004 x1972))) (and (=> (and (not x5307) (and (and (and (< 0 x2431) (= (x1843 (- x3509 4)) x5181) (not (< x3509 4)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2429) (> 2217467699 x192) (= 100 x3509) (not (< x192 405663989)) (= x3494 x3813) (= 599290589 x192) (> 988262939 x192) (= (x1306 (x636 x2102)) x2431) (= x3939 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5181) (and (= true (<= x5181 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x5181 96)))) (not (= 547091486 x192)) (not (= 405663989 x192)) (= x2951 x4101) (= x3362 x2002)) x3241) (= x3241 (= x2102 x1004)))) (and (=> x3939 x3668) (=> (and (not x3939) (and (= x5018 (x5403 1461501637330902918203684832716283019655932542975 x4101)) (= x4762 x2951) (= x4964 (= x5018 x4101)))) (and (=> (and x4964 (and (= (= x3494 x3813) x3749) (= x3813 x2712))) (and (=> (and (and (= (x5403 1461501637330902918203684832716283019655932542975 x2951) x3420) (<= x5267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3090 (x2828 (x636 x3420) (x956 5) 0)) (= x3126 x3362) (= (> x2002 x5267) x3386) (= x5267 (x3336 x3090)) (<= 0 x5267)) x3749) (and (=> x3386 x3668) (=> (and (and (= x3856 (< x5075 x3362)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5075) (= (x5403 1461501637330902918203684832716283019655932542975 x2951) x1952) (>= x5075 0) (= x5075 (x3336 x1449)) (= x1449 (x2828 (x636 x1952) (x956 5) 0))) (not x3386)) (and (=> x3856 x3668) (=> (and (and (= (x2828 (x636 x3813) (x956 5) 0) x3369) (= (x3997 x3369) x891) (<= 0 x891) (<= x891 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3362)) x4523) (= x2326 (x1843 (- x5075 x3362))) (= (> x891 x4523) x2541)) (not x3856)) (and (=> x2541 x3668) (=> (and (not x2541) (and (= x241 1) (= (x2989 (+ x891 x3362)) x4773) (= 32 x2670) (= x1775 1))) x3843))))))) (=> (not x3749) x3668))) (=> (not x4964) x3668))))) (=> (and (and (> x3545 0) (= x4101 x4687) (not (< x1545 405663989)) (= 100 x3451) (= x3545 (x1306 (x636 x1972))) (not (= 547091486 x1545)) (not (> 4 x3451)) (> 2217467699 x1545) (= x1984 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2002 x518) (= x206 (x1843 (- x3451 4))) (= x1545 599290589) (not (= 405663989 x1545)) (< x1545 988262939) (= x2589 (or (> x206 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x206) true) (< x206 96)))) (= x3494 x2779)) x5307) (and (=> (and (not x2589) (and (= x3714 x4687) (= (x5403 1461501637330902918203684832716283019655932542975 x4101) x4583) (= x1885 (= x4583 x4101)))) (and (=> (and (and (= x329 x2779) (= (= x2779 x3494) x2868)) x1885) (and (=> (and (and (= (x1103 x906) x4813) (= (< x4813 x2002) x5118) (<= x4813 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x415) (x956 5) 0) x906) (= x130 x518) (>= x4813 0) (= x415 (x5403 1461501637330902918203684832716283019655932542975 x4687))) x2868) (and (=> x5118 x1420) (=> (and (not x5118) (and (<= x2402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5403 1461501637330902918203684832716283019655932542975 x4687) x1995) (= (x1103 x1300) x2402) (<= 0 x2402) (= (x2828 (x636 x1995) (x956 5) 0) x1300) (= (< x2402 x518) x2085))) (and (=> (and (not x2085) (and (<= 0 x1082) (= (x1843 (- x2402 x518)) x2687) (= x1082 (x4172 x3219)) (= x994 (> x1082 x296)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1082) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x518)) x296) (= (x2828 (x636 x2779) (x956 5) 0) x3219))) (and (=> (and (not x994) (and (= x2565 (x2989 (+ x1082 x518))) (= x1560 32) (= 1 x4769) (= 1 x1104))) x3192) (=> x994 x1420))) (=> x2085 x1420))))) (=> (not x2868) x1420))) (=> (not x1885) x1420))) (=> x2589 x1420))))) (=> (and x3162 (and (= x719 (or (and (< x1753 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1753) true)) (> x1753 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x13 x4101) (not (= 547091486 x4385)) (= 599290589 x4385) (> 2217467699 x4385) (= x1019 (x1306 (x636 x4735))) (= x3494 x650) (> 988262939 x4385) (= x3402 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x3307)) (not (= 405663989 x4385)) (< 0 x1019) (= x1753 (x1843 (- x3307 4))) (= x3307 100) (= x4283 x2002) (not (> 405663989 x4385)))) (and (=> x719 x5295) (=> (and (and (= x4973 x13) (= x2530 (= x4045 x4101)) (= x4045 (x5403 1461501637330902918203684832716283019655932542975 x4101))) (not x719)) (and (=> (not x2530) x5295) (=> (and (and (= x650 x2869) (= x3349 (= x3494 x650))) x2530) (and (=> (and (and (= x4759 (x2828 (x636 x3216) (x956 5) 0)) (<= 0 x2443) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2443) (= x4486 (< x2443 x2002)) (= x4867 x4283) (= (x5403 1461501637330902918203684832716283019655932542975 x13) x3216) (= (x4548 x4759) x2443)) x3349) (and (=> x4486 x5295) (=> (and (and (= x3167 (x2828 (x636 x3092) (x956 5) 0)) (= (< x438 x4283) x4513) (>= x438 0) (= (x4548 x3167) x438) (<= x438 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5403 1461501637330902918203684832716283019655932542975 x13) x3092)) (not x4486)) (and (=> (and (not x4513) (and (= (< x1086 x269) x3351) (<= x269 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5383 (x1843 (- x438 x4283))) (= x3876 (x2828 (x636 x650) (x956 5) 0)) (>= x269 0) (= (x4710 x3876) x269) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4283)) x1086))) (and (=> x3351 x5295) (=> (and (and (= 32 x676) (= x2695 1) (= x2985 (x2989 (+ x269 x4283))) (= 1 x4623)) (not x3351)) x4904))) (=> x4513 x5295))))) (=> (not x3349) x5295))))))))) (=> (and (and (= (x1843 (- x2272 4)) x129) (< 0 x3067) (< x2705 1466279372) (not (< x2705 599290589)) (= 599290589 x2705) (not (< x2272 4)) (= (x1306 (x636 x1299)) x3067) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1898) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129) (and (< x129 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x129) true))) x1722) (= x3494 x4143) (= x4944 x4101) (= x2948 x2002) (= x2272 100)) x2384) (and (=> x1722 x699) (=> (and (not x1722) (and (= (x5403 1461501637330902918203684832716283019655932542975 x4101) x1332) (= (= x1332 x4101) x3220))) (and (=> (and (and (= x5172 (= x3494 x4143)) (= x4143 x4029)) x3220) (and (=> (not x5172) x699) (=> (and (and (= (< x3331 x2002) x2904) (= x2948 x1830) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3331) (= x1846 (x2828 (x636 x5311) (x956 1) 0)) (>= x3331 0) (= (x5403 1461501637330902918203684832716283019655932542975 x4944) x5311) (= (x4348 x1846) x3331)) x5172) (and (=> x2904 x699) (=> (and (= x2840 (< x3331 x2948)) (not x2904)) (and (=> (and (and (= x5226 (x5403 1461501637330902918203684832716283019655932542975 x4944)) (<= x1634 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1843 (- x3331 x2948)) x2378) (= x1977 (x2828 (x636 x5226) (x956 1) 0)) (>= x1634 0) (= (x1029 x2711) x1634) (= (x2828 (x636 x4143) (x956 1) 0) x2711) (= x1879 (< x458 x1634)) (= x458 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2948)))) (not x2840)) (and (=> (and (and (= (x2989 (+ x2948 x1634)) x332) (= (> x1634 x332) x1726)) (not x1879)) (and (=> x1726 x699) (=> (and (and (<= x101 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3905 (x2828 (x636 x4143) (x956 1) 0)) (= x1225 (x2828 (x636 x1137) (x956 2) 0)) (= (x5403 1461501637330902918203684832716283019655932542975 x4944) x1137) (>= x101 0) (= (x2828 (x636 x3494) x1225 0) x2137) (= (> x2948 x101) x2681) (= x101 (x3984 x2137))) (not x1726)) (and (=> x2681 x699) (=> (and (= (< x101 x2948) x5025) (not x2681)) (and (=> (and (not x5025) (and (= 32 x4880) (= x503 1) (= x1546 (x2828 (x636 x783) (x956 2) 0)) (= x783 (x5403 1461501637330902918203684832716283019655932542975 x4944)) (= x982 (x1843 (- x101 x2948))) (= x3891 (x2828 (x636 x3494) x1546 0)))) x479) (=> x5025 x699))))))) (=> x1879 x699))) (=> x2840 x699))))))) (=> (not x3220) x699))))))) x4883))
(assert (= (and x48 x3735) x1547))
(assert (x4842 x813))
(assert (= (and (not x5224) x5021) x590))
(assert (= x1342 (and x1319 x291)))
(assert (x4842 x2470))
(assert (= (and (not x2449) x2571) x4718))
(assert (= x3499 (=> (and (= x1498 0) (= x1186 x4849)) x382)))
(assert (= x1749 (=> (and (= 0 x2304) (= x3650 x3966)) x521)))
(assert (x4842 x4915))
(assert (= (and x5059 (not x4175)) x1798))
(assert (= (+ 1 (x4585 x2578)) (x4585 (x5250 x2578 1))))
(assert (x4621 x4441))
(assert (x4842 x3739))
(assert (x4842 x3112))
(assert (x4842 x404))
(assert (= x3327 (and x4377 x2213)))
(assert (x4842 x1295))
(assert (x4842 x4046))
(assert (= x615 (x4585 (x636 x615))))
(assert (= (and x5385 (not x4658)) x4542))
(assert (= x1316 (and (not x1617) x605)))
(assert (= (=> (and (= x4098 x2482) (= x1164 x2772)) x3462) x2521))
(assert (= (and (not x580) x1768) x2065))
(assert (= x2098 (and (not x4938) x1007)))
(assert (x4842 x1948))
(assert (= x3380 (and x4205 x1083)))
(assert (x645 x1630))
(assert (x4842 x3118))
(assert (= (x4585 (x5250 x4217 2)) (+ 2 (x4585 x4217))))
(assert (= x2297 (x4585 (x636 x2297))))
(assert (= (and (not x4535) x441) x5341))
(assert (= (and x673 x42) x1532))
(assert (x4842 x130))
(assert (= (or x3070 x3646) x1645))
(assert (x4842 x2862))
(assert (x4842 x4029))
(assert (= x4465 (and x5404 x1774)))
(assert (= (and x3644 (not x1828)) x3113))
(assert (x4842 x4565))
(assert (= (and x4109 x330) x5395))
(assert (x4842 x262))
(assert (= (=> (and (= (x2986 x3043) x4934) (= x633 (x4847 x1242)) (<= 0 x4934) (<= x4934 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= false x580) (= (x5250 x3043 1) x1242) (<= 0 x633) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x633)) x305) x1759))
(assert (= (or x4737 x2474) x2481))
(assert (= x2690 (x4585 (x636 x2690))))
(assert (=> (>= 10000 x3155) (= (x956 x3155) (x636 x3155))))
(assert (= x3412 (and (not x4240) x1823)))
(assert (= x2547 (and x1112 x3677)))
(assert (= (or x2343 (and x4387 (not x5142))) x2121))
(assert (x4842 x4696))
(assert (= x1200 (and x4635 (not x4286))))
(assert (= x1497 (and (not x2645) x2902)))
(assert (= (and (not x3767) x2239) x3026))
(assert (x4842 x1854))
(assert (= x3835 (=> (and (= x427 x2472) (= x399 x2855)) x2827)))
(assert (x4842 x4148))
(assert (x4842 x2313))
(assert (x4842 x456))
(assert (= (and x1070 x690) x4070))
(assert (x4842 x3967))
(assert (x4621 x1317))
(assert (= (and (not x4424) x1440) x5000))
(assert (x4842 x4362))
(assert (= x1151 (and x617 x892)))
(assert (x4842 x254))
(assert (= (and x5000 (not x5216)) x58))
(assert (= x3007 (and (not x4021) x4339)))
(assert (= x1286 (and x2489 x1974)))
(assert (x4842 x110))
(assert (= (and x4635 x4286) x3125))
(assert (= (x4585 (x636 x5280)) x5280))
(assert (x4842 x3552))
(assert (x4842 x3923))
(assert (x3529 x3893))
(assert (x4842 x3182))
(assert (= (and (not x575) x4999) x4272))
(assert (x2961 x96 x1700))
(assert (x4842 x3650))
(assert (x4842 x2946))
(assert (x5391 x3262))
(assert (x4842 x5386))
(assert (x4842 x259))
(assert (x4842 x4957))
(assert (= (=> (and (= (ite (> x3271 x4860) (not (= 0 x1408)) (> x3271 x4860)) x195) (or (and x195 (and (and (<= 0 x4519) (< x4519 1461501637330902918203684832716283019655932542976) (= x5213 (x1843 (- x1408 x4519))) (= (< 0 x5213) x1566) (= x4519 (x1432 x2552)) (>= 1461501637330902918203684832716283019655932542975 x4519)) (or (and x1566 (and (>= x2856 0) (> 1461501637330902918203684832716283019655932542976 x2856) (= x493 (x2828 (x636 x1408) x734 0)) (<= x2856 1461501637330902918203684832716283019655932542975) (= x2856 (x249 x493)))) (not x1566)))) (and (and (and (= x44 (x1432 x2552)) (<= 0 x44) (= (= 0 x44) x4122) (>= 1461501637330902918203684832716283019655932542975 x44) (> 1461501637330902918203684832716283019655932542976 x44)) (or x4122 (and (and (<= 0 x4653) (>= 1461501637330902918203684832716283019655932542975 x4653) (> 1461501637330902918203684832716283019655932542976 x4653) (= x4653 (x4575 x1719)) (= (x5250 x2552 1) x1719)) (not x4122)))) (not x195)))) x3667) x1049))
(assert (x4842 x4141))
(assert (x4621 x3708))
(assert (= x4078 (and x2209 (not x3220))))
(assert (= (or x4272 x4794) x5133))
(assert (= x4556 (x4585 (x636 x4556))))
(assert (= x3202 (and x1739 (not x310))))
(assert (x4842 x1220))
(assert (x4842 x1866))
(assert (= x4927 (or x5034 x4470)))
(assert (x4842 x1194))
(assert (= x367 (=> (= x5249 (= x3786 x4663)) (and (=> (and (not x5249) (= x2108 (< 0 x3786))) (and (=> (and (and (< x869 1461501637330902918203684832716283019655932542976) (<= x869 1461501637330902918203684832716283019655932542975) (= x1364 (= x481 0)) (= (x2989 (+ x1228 96)) x2293) (= (x2828 (x636 x4134) x624 0) x544) (>= x869 0) (>= 1461501637330902918203684832716283019655932542975 x5159) (= x869 (x379 x1333)) (<= x481 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x5159) (< x5159 1461501637330902918203684832716283019655932542976) (= (x5250 x1333 1) x661) (= x5159 (x4598 x544)) (= x1333 (x5250 x544 1)) (<= 0 x481) (= x481 (x903 x661))) x2108) (and (=> (and (not x1364) (and (= x5373 (= 0 x5159)) (or (and x5373 (= x542 (x5250 x624 1))) (and (and (= (x5250 x2568 1) x4651) (= (x2828 (x636 x5159) x624 0) x2568)) (not x5373))))) x3004) (=> x1364 x1908))) (=> (and (= x3827 x1228) (not x2108)) x343))) (=> (and x5249 (= x3321 x1228)) x2619)))))
(assert (= x224 (and x2646 x5150)))
(assert (= x5160 (=> (and (= 0 x849) (= x4147 x2672)) x2044)))
(assert (x4842 x983))
(assert (= (and x3023 x1213) x5162))
(assert (= (x636 2858086653) (x956 2858086653)))
(assert (= (x4585 (x636 x2102)) x2102))
(assert (= x3717 (and x2189 x5214)))
(assert (=> (<= x2123 10000) (= (x636 x2123) (x956 x2123))))
(assert (x4621 x1601))
(assert (x4621 x2513))
(assert (= x77 (and (not x3528) x919)))
(assert (= (x4585 (x636 x3658)) x3658))
(assert (x4842 x1753))
(assert (= (or x4323 x1999) x4077))
(assert (= x2910 (and x4414 x5155)))
(assert (x4842 x190))
(assert (= (and (not x1013) x846) x4370))
(assert (= (and x795 (not x3438)) x5043))
(assert (x4842 x2855))
(assert (= x4691 (x4585 (x636 x4691))))
(assert (x4842 x4071))
(assert (= (and (not x2305) x2506) x5053))
(assert (x4842 x1137))
(assert (= x2344 (and x3495 x1365)))
(assert (= x5012 x1152))
(assert (x4842 x2549))
(assert (x4842 x1544))
(assert (x4842 x4147))
(assert (x4842 x1893))
(assert (= (+ 2 (x4585 x538)) (x4585 (x5250 x538 2))))
(assert (x4842 x465))
(assert (= (=> (and (= (= 0 x4591) x1872) (or x1872 (not x1872))) x45) x5203))
(assert (x4842 x4030))
(assert (= x2650 (or x169 x4408)))
(assert (x4842 x4885))
(assert (= x2694 (or x2750 x3743)))
(assert (x4842 x2185))
(assert (= (x636 1857877511) (x956 1857877511)))
(assert (= x4774 (and x2115 x4234)))
(assert (= (and x5259 x4820) x605))
(assert (= x5314 (and x85 x3008)))
(assert (= (or x145 x1330 x3156 x4428 x1911 x2919) x3630))
(assert (=> (>= 10000 x3860) (= (x636 x3860) (x956 x3860))))
(assert (= (and x1336 x1305) x1226))
(assert (= x3021 (and (not x5310) x3323)))
(assert (= x5245 (=> (and (= x3808 x111) (= x4354 x4996)) x3627)))
(assert (= (and (not x2398) x1955) x4008))
(assert (x4842 x764))
(assert (= x3751 (and x4112 x4091)))
(assert (x4842 x220))
(assert (= (and x4117 x358) x4727))
(assert (x4621 x955))
(assert (= (and x4690 x1285) x893))
(assert (=> (>= 10000 x5001) (= (x956 x5001) (x636 x5001))))
(assert (x4621 x2123))
(assert (= (+ 2 (x4585 x1688)) (x4585 (x5250 x1688 2))))
(assert (= (x4585 (x636 x2723)) x2723))
(assert (=> (>= 10000 x2513) (= (x636 x2513) (x956 x2513))))
(assert (= (=> (= (> x5023 0) x625) (and (=> (and (and (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5023)) x3011) (= (< x3011 x256) x5260)) x625) (and (=> x5260 x989) (=> (and (and (= (> x5023 x1472) x1462) (= x2653 (x2989 (+ x5023 x256)))) (not x5260)) (and (=> x1462 x989) (=> (and (and (= x911 (< 115792089237316195423570985008687907853269984665640564039457 x5023)) (= x465 (x1843 (- x1472 x5023))) (= x2866 (= (ite x911 1 0) 0)) (>= x3134 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3134) (= (x1689 x5342) x3134) (= x5342 (x2828 (x636 x2716) (x956 165) 0))) (not x1462)) (and (=> (not x2866) x989) (=> (and (and (= (= x1695 0) x420) (= x1695 (x5403 x2367 x3140)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2471) x4765) (= x3140 (ite (< x4765 1000000000000000000) 1 0)) (= x1093 (= 0 x2471)) (= x2471 (mod (* x5023 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2367 (ite (not x1093) 1 0))) x2866) (and (=> (and (and (= (mod (* x2471 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2453) (= (< 0 x3134) x867)) x420) (and (=> (and (and (<= 0 x4692) (<= x4692 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4997 (> x4692 x743)) (= (x4947 x5351) x4692) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3243)) x743) (= (div x1130 1000000000000000000) x3243) (= (div x2453 x3134) x1130) (= (x5250 x3610 3) x5351)) x867) (and (=> (and (and (= x2473 x465) (= x3428 (x2989 (+ x3243 x4692))) (= x715 x2653)) (not x4997)) x4766) (=> x4997 x989))) (=> (not x867) x526))) (=> (not x420) x989))))))))) (=> (and (and (= x715 x256) (= x1472 x2473)) (not x625)) x4766))) x1325))
(assert (= (or x1921 (and (not x2677) x1663)) x4057))
(assert (= x905 (and x4618 x4403)))
(assert (x4842 x2047))
(assert (x4842 x3383))
(assert (x4842 x3971))
(assert (=> (<= x4776 10000) (= (x956 x4776) (x636 x4776))))
(assert (x4842 x2134))
(assert (x4842 x50))
(assert (x4842 x4892))
(assert (= x4136 (and x900 x627)))
(assert (= (and x1619 x149) x1075))
(assert (x4842 x3005))
(assert (= x4427 (or x1784 x1508 (and x3976 x786) (and x4924 x1353) x5078)))
(assert (= x2358 (=> (and (= x2071 x5086) (= x2015 x2236) (= x4713 x1377) (= x1809 x319) (= x3431 x747)) x4085)))
(assert (x4842 x1655))
(assert (= (x4585 (x636 x393)) x393))
(assert (x4842 x4953))
(assert (=> (>= 10000 x311) (= (x636 x311) (x956 x311))))
(assert (x4842 x72))
(assert (=> (<= x1237 10000) (= (x636 x1237) (x956 x1237))))
(assert (x4842 x1254))
(assert (= x2883 (and (not x1736) x4088)))
(assert (= (and x304 x3306) x1823))
(assert (= x3385 (and x3259 x4861)))
(assert (= (and (not x1861) x4495) x2417))
(assert (x4842 x332))
(assert (x4842 x2073))
(assert (= (=> (and (= x2327 x3901) (= x3694 0)) x5374) x3957))
(assert (x4842 x714))
(assert (x4842 x4961))
(assert (x4842 x1607))
(assert (= x1150 (and (not x4090) x1142)))
(assert (= (and (=> (and (not x4353) (and (= x1408 x765) (= 0 x4860))) x1049) (=> (and x4353 (and (and (= (x5399 x815) x3147) (= x2887 (ite (< 1 x3271) (not (= 0 x3147)) (< 1 x3271))) (<= 0 x3147) (= x1644 (x2828 (x636 x765) x734 0)) (= (x5250 x1644 1) x815) (< x3147 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x3147)) (or (and (not x2887) (= x2887 x1770)) (and x2887 (and (= x3282 (x5250 x1585 2)) (<= 0 x3139) (= (x3572 x3282) x3139) (= (not x2532) x1770) (= (x2828 (x636 x3147) x734 0) x1585) (= (< x3139 x1709) x2532) (<= x3139 115792089237316195423570985008687907853269984665640564039457584007913129639935)))))) x897)) x3404))
(assert (=> (<= x4049 10000) (= (x956 x4049) (x636 x4049))))
(assert (x4842 x3089))
(assert (= (and (not x693) x3601) x2591))
(assert (= (and x4255 x4290) x4320))
(assert (=> (>= 10000 x326) (= (x956 x326) (x636 x326))))
(assert (x4842 x281))
(assert (x4842 x1074))
(assert (=> (>= 10000 x1929) (= (x956 x1929) (x636 x1929))))
(assert (x4842 x4569))
(assert (= x3016 (and (not x4690) x1285)))
(assert (= (and x3275 x1144) x1020))
(assert (= (and x2959 x3741) x4339))
(assert (x4842 x2539))
(assert (=> (>= 10000 x3658) (= (x636 x3658) (x956 x3658))))
(assert (x4842 x460))
(assert (x3529 x4978))
(assert (x4842 x5023))
(assert (x4842 x816))
(assert (= x2276 (=> (and (or (and (and (and (= x1181 (x1521 x4115)) (<= x1181 1461501637330902918203684832716283019655932542975) (>= x1181 0) (= x3757 (> x928 0)) (= (x1843 (- x268 x1181)) x928) (> 1461501637330902918203684832716283019655932542976 x1181)) (or (and (and (<= 0 x2306) (< x2306 1461501637330902918203684832716283019655932542976) (= (x1656 x1053) x2306) (<= x2306 1461501637330902918203684832716283019655932542975) (= (x2828 (x636 x268) x1688 0) x1053)) x3757) (not x3757))) x4714) (and (not x4714) (and (and (< x2639 1461501637330902918203684832716283019655932542976) (>= x2639 0) (= x4912 (= 0 x2639)) (= x2639 (x1521 x4115)) (>= 1461501637330902918203684832716283019655932542975 x2639)) (or (and (not x4912) (and (< x4896 1461501637330902918203684832716283019655932542976) (= x2403 (x5250 x4115 1)) (= x4896 (x4744 x2403)) (>= x4896 0) (<= x4896 1461501637330902918203684832716283019655932542975))) x4912)))) (= (ite (< x4732 x3271) (not (= 0 x268)) (> x3271 x4732)) x4714)) x1513)))
(assert (= (and (not x3189) x4960) x3769))
(assert (x4842 x5063))
(assert (= x1264 (=> (= x42 (< 0 x885)) (and (=> (not x42) x4346) (=> (and x42 (and (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x548) (<= 0 x3271) (<= x3271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x548) x610))) (and (=> x610 x1008) (=> (and (and (= x3322 (x4917 x4190)) (>= x3322 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3322) (= x1538 (= x3322 0)) (= x326 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (= x3119 (x2828 (x636 x326) x4778 0)) (= x4190 (x5250 x3119 2))) (not x610)) (and (=> (not x1538) x1008) (=> (and (and (and (< x2123 1461501637330902918203684832716283019655932542976) (= x2972 (ite (< 0 x3271) (not (= x2123 0)) (> x3271 0))) (>= x2123 0) (= (x5250 x4778 1) x2680) (= (x1582 x2680) x2123) (<= x2123 1461501637330902918203684832716283019655932542975)) (or (and (= x4805 x2972) (not x2972)) (and x2972 (and (>= x5182 0) (= (> x885 x5182) x4251) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5182) (= x4805 (not x4251)) (= x3537 (x5250 x2557 2)) (= x5182 (x4917 x3537)) (= x2557 (x2828 (x636 x2123) x4778 0)))))) x1538) x4333)))))))))
(assert (= x1281 (and x4495 x1861)))
(assert (= (and x4781 x4555) x2361))
(assert (= x1680 (=> (and (= x747 x3996) (= x1377 x4457) (= x2015 x2236) (= x1809 x3530) (= x3538 x5086)) x4085)))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x4585 (x956 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= x4923 (and (not x455) x1041)))
(assert (x4842 x4765))
(assert (x4842 x1683))
(assert (x4842 x2734))
(assert (= x3713 (and x2006 (not x61))))
(assert (x4842 x2834))
(assert (= x4618 (and x2156 (not x1598))))
(assert (x4842 x3137))
(assert (= x3152 (or x5041 x57)))
(assert (= (and x4061 (not x2244)) x3394))
(assert (= (=> (= (= x4591 0) x3424) (and (=> x3424 x1008) (=> (and (not x3424) (and (= x3395 (x5403 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3532)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x807)) (< x807 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x807)) x4712) (= x2385 (x2989 (+ x3395 x669))) (= x3532 (x2989 (+ x807 31))))) (and (=> (and (not x4712) (and (= (x831 x669) x4522) (= x641 (< 0 x1954)) (= x1954 (ite (< x1366 x4522) x1366 x4522)))) (and (=> (and (and (= x2015 x1071) (= x585 x2385) (= x3431 x4243) (= x3538 x1361)) (not x641)) x3361) (=> (and (and (= (x1843 (- x2716 x215)) x3911) (< x215 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x215) (>= x215 0) (= x3306 (> x3911 0))) x641) (and (=> (and x3306 (and (and (= (x2989 (+ 32 x3320)) x3318) (= (x2989 (+ 4 x2385)) x3320) (= x4240 (= x1299 x1004))) (and (and (not (> 4 x2720)) (> 1466279372 x4048) (= (x1306 (x636 x1299)) x844) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3527) (and (> 64 x3527) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3527)))) x2316) (= x2720 68) (= x2947 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= (x1843 (- x2720 4)) x3527) (> x844 0) (= x4048 157198259) (> 599290589 x4048) (not (= 117300739 x4048)) (= x2897 x1954) (= x1716 x4776)) x4240))) (and (=> (and (not x2316) (and (= x4776 x3296) (= x4630 (= x4776 x1716)))) (and (=> (not x4630) x1983) (=> (and (and (= x2897 x1715) (= (x2828 (x636 x3494) (x956 2) 0) x1787) (= x5164 (x2828 (x636 x4776) x1787 0)) (= 1 x821) (= 32 x3853)) x4630) x2128))) (=> x2316 x1983))) (=> (and (not x3306) (and (= x3276 (x1306 (x636 x3964))) (= (x2989 (+ 4 x2385)) x4724) (= (= x3276 0) x3979) (< x3964 1461501637330902918203684832716283019655932542976) (>= x3964 0) (<= x3964 1461501637330902918203684832716283019655932542975))) (and (=> (and x3979 (= true x580)) x305) (=> (and (and (= x4424 (= 0 x1066)) (> 4294967296 x3207) (= x1066 (x1306 (x636 x2716))) (= x1258 4)) (not x3979)) (and (=> (and (= x580 true) x4424) x305) (=> (and (and (= x5216 (and (>= x964 x1954) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x353 x1954)))) (= x964 (x1880 (x636 x3494))) (= x353 (x1880 (x636 x2716)))) (not x4424)) (and (=> (and x5216 (and (= (x2989 (+ x3104 x1954)) x2769) (< (+ x1954 x3104) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1880 (x636 x3494)) x1741) (= (- x1741 x1954) x2926) (= x3104 (x1154 (x636 x2716))) (= (= x2716 x4735) x1658))) (and (=> (and (not x1658) (= (= x2716 x1972) x1065)) (and (=> (and x1065 (and (= 4 x2142) (= (x1306 (x636 x1972)) x2456) (< 0 x2456) (= x1258 x2142) (= x3231 (= x1954 0)) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x4151))) (and (=> (and (and (= x4898 1313710058) (= x524 (x5348 x1195)) (= (x5348 x3655) x851) (<= 0 x524) (= (x2828 (x636 x3494) (x956 6) 0) x3655) (= x2245 (> x851 x524)) (> 2217467699 x4898) (> 1856199391 x4898) (= (x2828 (x636 x3494) (x956 6) 0) x1195) (>= x851 0) (not (= x4898 1038142104)) (<= x851 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x4898 988262939)) (not (= 989455977 x4898)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x524) (not (= x4898 988262939)) (not (< x2142 4))) x3231) (and (=> (and (= x3589 x3538) x2245) x1638) (=> (and (not x2245) (and (= (x1843 (- x524 x851)) x3784) (>= x3538 0) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x851)) x1902) (= x3865 (< x1902 x3538)) (<= x3538 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and x3865 (= x3589 x3538)) x1638) (=> (and (not x3865) (and (= (x2989 (+ x3538 x851)) x5151) (= (= x3917 x1299) x2892) (= x1636 (x2989 (+ x3538 x851))) (< x3917 1461501637330902918203684832716283019655932542976) (>= x3917 0) (= x3457 128) (<= x3917 1461501637330902918203684832716283019655932542975))) (and (=> (and x2892 (and (= 100 x1297) (= x1378 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4845 x3494) (= x92 (x1843 (- x1297 4))) (= x2139 (or (and (> 96 x92) (= (<= x92 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x92 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 599290589 x464) (not (< x464 599290589)) (= x4097 x1972) (< 0 x43) (not (> 4 x1297)) (= x1297 100) (= x851 x5035) (> 1466279372 x464) (= (x1306 (x636 x1299)) x43))) (and (=> (and (not x2139) (and (= x4557 x4845) (= x2994 (= x4845 x3494)))) (and (=> (and x2994 (and (= x4097 x3260) (= (= x4097 x1972) x1282))) (and (=> (not x1282) x2475) (=> (and (and (= x1575 (< x757 x851)) (= x3958 (x2828 (x636 x4845) (x956 1) 0)) (= x757 (x5381 x3958)) (<= 0 x757) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x757) (= x5035 x191)) x1282) (and (=> x1575 x2475) (=> (and (= x1598 (< x757 x5035)) (not x1575)) (and (=> (and (not x1598) (and (= (x2828 (x636 x4097) (x956 1) 0) x796) (<= x1603 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1603 0) (= x1664 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5035))) (= (> x1603 x1664) x4403) (= (x1843 (- x757 x5035)) x4071) (= (x2828 (x636 x4845) (x956 1) 0) x2800) (= x1603 (x5187 x796)))) (and (=> (and (not x4403) (and (= (x2989 (+ x1603 x5035)) x942) (= (> x1603 x942) x1763))) (and (=> (and (not x1763) (and (= x3612 (x2828 (x636 x4845) (x956 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3130) (= x1266 (x2828 (x636 x4097) (x956 1) 0)) (= (x2828 (x636 x1972) x3612 0) x5145) (= x5150 (< x3130 x5035)) (<= 0 x3130) (= (x5014 x5145) x3130))) (and (=> x5150 x2475) (=> (and (not x5150) (= x3936 (< x3130 x5035))) (and (=> (and (and (= (x2828 (x636 x4845) (x956 2) 0) x53) (= x1002 (x2828 (x636 x1972) x53 0)) (= x2220 (x1843 (- x3130 x5035))) (= 32 x2505) (= x2153 1)) (not x3936)) x1906) (=> x3936 x2475))))) (=> x1763 x2475))) (=> x4403 x2475))) (=> x1598 x2475))))))) (=> (not x2994) x2475))) (=> x2139 x2475))) (=> (and (not x2892) (= (= x4735 x3917) x4375)) (and (=> (and (and (not (= 405663989 x3825)) (= x4477 x1972) (not (< x5057 4)) (= x4569 x851) (= 599290589 x3825) (> 2217467699 x3825) (= 100 x5057) (= x3804 x3494) (= x1109 (x1843 (- x5057 4))) (< 0 x3118) (= x4690 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1109) true) (< x1109 96)) (> x1109 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2627 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x3825 547091486)) (not (< x3825 405663989)) (> 988262939 x3825) (= 100 x5057) (= x3118 (x1306 (x636 x4735)))) x4375) (and (=> x4690 x4928) (=> (and (and (= (= x3494 x3804) x1079) (= x1348 x3804)) (not x4690)) (and (=> (not x1079) x4928) (=> (and (and (= x4477 x4447) (= (= x1972 x4477) x1762)) x1079) (and (=> (not x1762) x4928) (=> (and x1762 (and (>= x2839 0) (= x2858 x4569) (<= x2839 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4120 x2469) x2839) (= (x2828 (x636 x3804) (x956 5) 0) x2469) (= x1069 (< x2839 x851)))) (and (=> x1069 x4928) (=> (and (not x1069) (and (= (x4120 x2332) x666) (= (> x4569 x666) x3049) (<= 0 x666) (<= x666 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2332 (x2828 (x636 x3804) (x956 5) 0)))) (and (=> x3049 x4928) (=> (and (and (<= 0 x4624) (= (< x3877 x4624) x904) (= (x1843 (- x666 x4569)) x3969) (= x4624 (x3672 x1713)) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4569)) x3877) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4624) (= (x2828 (x636 x4477) (x956 5) 0) x1713)) (not x3049)) (and (=> (and (and (= x2480 1) (= 1 x4094) (= x4201 (x2989 (+ x4624 x4569))) (= x1477 32)) (not x904)) x2950) (=> x904 x4928))))))))))))) (=> (and (= (= x3917 x1972) x1998) (not x4375)) (and (=> (and (and (and x4090 (and (> 2217467699 x2223) (= x1317 x3494) (= (x1306 (x636 x2102)) x3888) (= x4939 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< 0 x3888) (< x2223 988262939) (= x2808 x1972) (not (= 547091486 x2223)) (= x2451 100) (not (= 405663989 x2223)) (= 100 x2451) (not (< x2451 4)) (= x1394 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3143)) (> 96 x3143)) (> x3143 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3143 (x1843 (- x2451 4))) (not (> 405663989 x2223)) (= x1810 x851) (= 599290589 x2223))) (= (= x3917 x2102) x4090)) (not x1998)) (and (=> (and (and (= (= x1317 x3494) x875) (= x1317 x1393)) (not x1394)) (and (=> (not x875) x5244) (=> (and (and (= x863 (= x1972 x2808)) (= x3334 x2808)) x875) (and (=> (not x863) x5244) (=> (and (and (= x2970 (x728 x3114)) (= (> x851 x2970) x3633) (= x1810 x156) (>= x2970 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2970) (= (x2828 (x636 x1317) (x956 5) 0) x3114)) x863) (and (=> (and (not x3633) (and (= (x728 x2651) x2566) (<= x2566 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x1317) (x956 5) 0) x2651) (= x5335 (> x1810 x2566)) (>= x2566 0))) (and (=> (and (and (<= 0 x1631) (= x4561 (x2828 (x636 x2808) (x956 5) 0)) (= x2398 (< x3881 x1631)) (= x1631 (x962 x4561)) (<= x1631 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1843 (- x2566 x1810)) x1583) (= x3881 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1810)))) (not x5335)) (and (=> x2398 x5244) (=> (and (not x2398) (and (= x1113 1) (= (x2989 (+ x1631 x1810)) x3524) (= 1 x2434) (= x1586 32))) x631))) (=> x5335 x5244))) (=> x3633 x5244))))))) (=> x1394 x5244))) (=> (and x1998 (and (= x5171 (x1843 (- x4957 4))) (= 100 x4957) (not (< x4957 4)) (< x254 988262939) (= x254 599290589) (not (= 547091486 x254)) (= x1972 x3289) (not (> 405663989 x254)) (= (x1306 (x636 x1972)) x2592) (not (= x254 405663989)) (= x3805 x3494) (= x2949 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5171) (and (< x5171 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5171))))) (= x2577 x851) (< x254 2217467699) (= x4080 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< 0 x2592) (= 100 x4957))) (and (=> (and (not x2949) (and (= x4586 x3805) (= (= x3494 x3805) x4013))) (and (=> (and (and (= (= x1972 x3289) x3810) (= x1607 x3289)) x4013) (and (=> (and (and (= x5285 x2577) (<= x2765 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x3805) (x956 5) 0) x4518) (>= x2765 0) (= x2765 (x695 x4518)) (= (< x2765 x851) x3414)) x3810) (and (=> x3414 x2821) (=> (and (not x3414) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3489) (= x1527 (< x3489 x2577)) (>= x3489 0) (= (x695 x1284) x3489) (= (x2828 (x636 x3805) (x956 5) 0) x1284))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3089) (= x5218 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2577))) (= (x2876 x3136) x3089) (= (x1843 (- x3489 x2577)) x1825) (= (> x3089 x5218) x2013) (>= x3089 0) (= x3136 (x2828 (x636 x3289) (x956 5) 0))) (not x1527)) (and (=> (and (and (= x2255 1) (= x4380 (x2989 (+ x2577 x3089))) (= 1 x1953) (= 32 x985)) (not x2013)) x2397) (=> x2013 x2821))) (=> x1527 x2821))))) (=> (not x3810) x2821))) (=> (not x4013) x2821))) (=> x2949 x2821))))))))))))) (=> (and (not x3231) (= x3538 x3589)) x1638))) (=> (and (and (= x2341 (= x2716 x2102)) (and (and (= x5183 35417553099779373699389112480655434059402432070290151981503827724506945814528) (= x462 4) (= x1258 x462) (= (x1306 (x636 x2102)) x4274) (= (= 0 x1954) x2726) (> x4274 0)) x2341)) (not x1065)) (and (=> (and (and (>= x3520 0) (= (x2828 (x636 x3494) (x956 6) 0) x3515) (not (= 988262939 x1624)) (> 2217467699 x1624) (not (> 4 x462)) (= (x577 x3515) x3719) (>= x3719 0) (= (> x3520 x3719) x4295) (< x1624 1856199391) (<= x3520 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x1624 988262939)) (not (= 989455977 x1624)) (= (x577 x2492) x3520) (<= x3719 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1038142104 x1624)) (= x2492 (x2828 (x636 x3494) (x956 6) 0)) (= 1313710058 x1624)) x2726) (and (=> (and (not x4295) (and (= (x1843 (- x3719 x3520)) x2666) (<= 0 x3431) (= x34 (< x2331 x3431)) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3520)) x2331) (<= x3431 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (= x4009 x3431) x34) x2323) (=> (and (not x34) (and (>= x5246 0) (= x2084 (x2989 (+ x3520 x3431))) (= x3742 128) (= (= x5246 x1299) x2632) (<= x5246 1461501637330902918203684832716283019655932542975) (= (x2989 (+ x3431 x3520)) x4007) (> 1461501637330902918203684832716283019655932542976 x5246))) (and (=> (and (= (= x4735 x5246) x1365) (not x2632)) (and (=> (and x1365 (and (< x1641 2217467699) (not (< x1438 4)) (< x1641 988262939) (= x1373 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x1438) (= x1438 100) (= (x1306 (x636 x4735)) x3292) (= x3520 x1973) (= x1641 599290589) (= x2102 x5280) (not (= 405663989 x1641)) (not (> 405663989 x1641)) (= x1528 (x1843 (- x1438 4))) (not (= 547091486 x1641)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1528) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1528) true) (< x1528 96))) x5065) (> x3292 0) (= x3494 x3733))) (and (=> x5065 x1799) (=> (and (not x5065) (and (= (= x3494 x3733) x5132) (= x3733 x3441))) (and (=> (and (and (= (= x5280 x2102) x3528) (= x5280 x4530)) x5132) (and (=> (and x3528 (and (= (x4120 x419) x1398) (= x3101 (< x1398 x3520)) (<= 0 x1398) (= (x2828 (x636 x3733) (x956 5) 0) x419) (= x1973 x2036) (<= x1398 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x3101) (and (= x4497 (x2828 (x636 x3733) (x956 5) 0)) (= (x4120 x4497) x2222) (>= x2222 0) (<= x2222 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2668 (< x2222 x1973)))) (and (=> (and (and (= x4293 (< x4198 x1836)) (= x1836 (x27 x519)) (= (x1843 (- x2222 x1973)) x5169) (= x519 (x2828 (x636 x5280) (x956 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1836) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1973)) x4198) (<= 0 x1836)) (not x2668)) (and (=> x4293 x1799) (=> (and (not x4293) (and (= 1 x3383) (= x1484 1) (= x2149 32) (= x4780 (x2989 (+ x1973 x1836))))) x3991))) (=> x2668 x1799))) (=> x3101 x1799))) (=> (not x3528) x1799))) (=> (not x5132) x1799))))) (=> (and (= (= x5246 x1972) x3273) (not x1365)) (and (=> (and x3273 (and (> 2217467699 x961) (= 100 x3535) (= (x1306 (x636 x1972)) x46) (= x3520 x1000) (= (x1843 (- x3535 4)) x4666) (not (= 405663989 x961)) (not (< x961 405663989)) (= 100 x3535) (< 0 x46) (< x961 988262939) (not (= x961 547091486)) (not (> 4 x3535)) (= x4983 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x961) (= x3155 x3494) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4666) (and (= (<= x4666 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x4666))) x4972) (= x1396 x2102))) (and (=> x4972 x578) (=> (and (and (= x2147 (= x3494 x3155)) (= x2543 x3155)) (not x4972)) (and (=> (and x2147 (and (= (= x2102 x1396) x2350) (= x2232 x1396))) (and (=> (and x2350 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1678) (= (x2828 (x636 x3155) (x956 5) 0) x1376) (= (< x1678 x3520) x3583) (= x1000 x4915) (<= 0 x1678) (= (x695 x1376) x1678))) (and (=> x3583 x578) (=> (and (not x3583) (and (= (< x4177 x1000) x1813) (<= 0 x4177) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4177) (= x2338 (x2828 (x636 x3155) (x956 5) 0)) (= x4177 (x695 x2338)))) (and (=> x1813 x578) (=> (and (and (<= 0 x3593) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3593) (= x2105 (x2828 (x636 x1396) (x956 5) 0)) (= (x1578 x2105) x3593) (= (> x3593 x5380) x5033) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1000)) x5380) (= (x1843 (- x4177 x1000)) x1871)) (not x1813)) (and (=> x5033 x578) (=> (and (and (= x787 32) (= x1461 1) (= x4652 (x2989 (+ x1000 x3593))) (= 1 x2124)) (not x5033)) x2696))))))) (=> (not x2350) x578))) (=> (not x2147) x578))))) (=> (and (and (= (= x2102 x5246) x2620) (and (and (= x2102 x2307) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4720) (not (> 405663989 x948)) (= x1840 100) (< 0 x3873) (> 2217467699 x948) (not (> 4 x1840)) (= x1840 100) (= 599290589 x948) (not (= 405663989 x948)) (> 988262939 x948) (= (x1306 (x636 x2102)) x3873) (= (x1843 (- x1840 4)) x626) (not (= 547091486 x948)) (= x3494 x4416) (= (or (> x626 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x626 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x626))) x5225) (= x3520 x1439)) x2620)) (not x3273)) (and (=> (and (and (= x143 (= x3494 x4416)) (= x4416 x513)) (not x5225)) (and (=> (not x143) x3450) (=> (and x143 (and (= x2307 x5217) (= x3264 (= x2307 x2102)))) (and (=> (and x3264 (and (<= x5378 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x5378 x3520) x522) (= x5378 (x728 x2811)) (= x2811 (x2828 (x636 x4416) (x956 5) 0)) (= x1439 x1295) (>= x5378 0))) (and (=> x522 x3450) (=> (and (and (= x2438 (x2828 (x636 x4416) (x956 5) 0)) (= (> x1439 x4543) x207) (= x4543 (x728 x2438)) (<= 0 x4543) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4543)) (not x522)) (and (=> x207 x3450) (=> (and (not x207) (and (>= x4214 0) (= (x2828 (x636 x2307) (x956 5) 0) x4073) (= x4199 (< x3523 x4214)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4214) (= x3523 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1439))) (= x4214 (x4461 x4073)) (= x5122 (x1843 (- x4543 x1439))))) (and (=> x4199 x3450) (=> (and (and (= x3190 1) (= 1 x4675) (= (x2989 (+ x4214 x1439)) x759) (= 32 x4940)) (not x4199)) x2515))))))) (=> (not x3264) x3450))))) (=> x5225 x3450))))))) (=> (and x2632 (and (= x3520 x3245) (= x3967 (x1306 (x636 x1299))) (= (x1843 (- x1493 4)) x502) (= x1690 599290589) (= x1493 100) (not (< x1493 4)) (< x1690 1466279372) (= x1172 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x502) (and (> 96 x502) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x502) true)))) (= x1493 100) (= x1161 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3494 x1382) (not (> 599290589 x1690)) (> x3967 0) (= x2102 x3922))) (and (=> x1172 x778) (=> (and (not x1172) (and (= x1382 x4022) (= (= x1382 x3494) x1771))) (and (=> (and x1771 (and (= x5124 (= x2102 x3922)) (= x3922 x37))) (and (=> (not x5124) x778) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1826) (= x430 (< x1826 x3520)) (= x3265 (x2828 (x636 x1382) (x956 1) 0)) (= x1826 (x5381 x3265)) (<= 0 x1826) (= x4832 x3245)) x5124) (and (=> x430 x778) (=> (and (not x430) (= x24 (< x1826 x3245))) (and (=> (and (not x24) (and (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3245)) x4362) (<= x3474 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2292 (x2828 (x636 x1382) (x956 1) 0)) (= x1899 (> x3474 x4362)) (= x4570 (x2828 (x636 x3922) (x956 1) 0)) (>= x3474 0) (= (x694 x4570) x3474) (= x644 (x1843 (- x1826 x3245))))) (and (=> x1899 x778) (=> (and (not x1899) (and (= x679 (x2989 (+ x3245 x3474))) (= (> x3474 x679) x3845))) (and (=> (and (and (= (x5014 x3766) x1907) (<= x1907 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x1382) (x956 2) 0) x2843) (= x5240 (x2828 (x636 x3922) (x956 1) 0)) (<= 0 x1907) (= x3766 (x2828 (x636 x2102) x2843 0)) (= (> x3245 x1907) x1063)) (not x3845)) (and (=> (and (not x1063) (= (< x1907 x3245) x3234)) (and (=> (and (and (= x3971 (x1843 (- x1907 x3245))) (= (x2828 (x636 x2102) x1116 0) x3360) (= (x2828 (x636 x1382) (x956 2) 0) x1116) (= 32 x3333) (= 1 x1950)) (not x3234)) x3496) (=> x3234 x778))) (=> x1063 x778))) (=> x3845 x778))))) (=> x24 x778))))))) (=> (not x1771) x778))))))))) (=> (and (= x4009 x3431) x4295) x2323))) (=> (and (= x4009 x3431) (not x2726)) x2323))))) (=> (and (and (= x730 x1258) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x3855) (= 4 x730) (= (x1306 (x636 x4735)) x775) (< 0 x775) (= (= 0 x1954) x5259)) x1658) (and (=> (and (= x2015 x1536) (not x5259)) x5101) (=> (and (and (<= x70 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4953) (not (> 4 x730)) (= x197 1313710058) (not (= x197 1038142104)) (< x197 2217467699) (= (x2161 x3257) x70) (not (= 988262939 x197)) (= x1617 (< x4953 x70)) (<= 0 x70) (<= x4953 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1856199391 x197) (= x1802 (x2828 (x636 x3494) (x956 6) 0)) (= x4953 (x2161 x1802)) (not (< x197 988262939)) (= x3257 (x2828 (x636 x3494) (x956 6) 0)) (not (= 989455977 x197))) x5259) (and (=> (and (= x2015 x1536) x1617) x5101) (=> (and (not x1617) (and (= x2159 (x1843 (- x4953 x70))) (= (< x5313 x2015) x2889) (<= x2015 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5313 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x70))) (>= x2015 0))) (and (=> (and (= x2015 x1536) x2889) x5101) (=> (and (not x2889) (and (= x677 (= x1368 x1299)) (<= 0 x1368) (> 1461501637330902918203684832716283019655932542976 x1368) (<= x1368 1461501637330902918203684832716283019655932542975) (= (x2989 (+ x70 x2015)) x2467) (= x4910 128) (= (x2989 (+ x70 x2015)) x2535))) (and (=> (and (and (= x4875 x3494) (= x4735 x4679) (= x3230 x70) (= (x1843 (- x1032 4)) x1844) (not (< x1032 4)) (= (or (> x1844 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1844 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1844 96))) x410) (< 0 x3408) (= x2878 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1922 599290589) (not (> 599290589 x1922)) (> 1466279372 x1922) (= x1032 100) (= 100 x1032) (= (x1306 (x636 x1299)) x3408)) x677) (and (=> (and (not x410) (and (= (= x3494 x4875) x4420) (= x4875 x3552))) (and (=> (not x4420) x3499) (=> (and x4420 (and (= x4679 x3381) (= (= x4735 x4679) x3741))) (and (=> (not x3741) x3499) (=> (and (and (= x4980 (x5381 x2079)) (= x4021 (> x70 x4980)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4980) (= x2079 (x2828 (x636 x4875) (x956 1) 0)) (>= x4980 0) (= x2976 x3230)) x3741) (and (=> x4021 x3499) (=> (and (not x4021) (= (> x3230 x4980) x4437)) (and (=> (and (not x4437) (and (= x2796 (x2828 (x636 x4679) (x956 1) 0)) (= x1252 (x1039 x2796)) (= (< x1537 x1252) x1) (>= x1252 0) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3230)) x1537) (= (x1843 (- x4980 x3230)) x289) (= (x2828 (x636 x4875) (x956 1) 0) x4313) (<= x1252 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x1 x3499) (=> (and (and (= x5334 (x2989 (+ x1252 x3230))) (= x3591 (> x1252 x5334))) (not x1)) (and (=> x3591 x3499) (=> (and (and (= x1040 (< x3895 x3230)) (= (x2828 (x636 x4735) x4834 0) x4803) (>= x3895 0) (= x2491 (x2828 (x636 x4679) (x956 1) 0)) (= x3895 (x5014 x4803)) (= (x2828 (x636 x4875) (x956 2) 0) x4834) (<= x3895 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3591)) (and (=> (and (= x3657 (< x3895 x3230)) (not x1040)) (and (=> x3657 x3499) (=> (and (not x3657) (and (= x1498 1) (= x638 (x1843 (- x3895 x3230))) (= 32 x1186) (= (x2828 (x636 x4735) x4442 0) x5016) (= x4442 (x2828 (x636 x4875) (x956 2) 0)))) x382))) (=> x1040 x3499))))))) (=> x4437 x3499))))))))) (=> x410 x3499))) (=> (and (= x60 (= x1368 x4735)) (not x677)) (and (=> (and (and (= x5037 x3494) (not (= x2470 405663989)) (= x3770 100) (= x5273 (x1843 (- x3770 4))) (not (< x2470 405663989)) (= x70 x4139) (not (> 4 x3770)) (= x3752 (x1306 (x636 x4735))) (= x4735 x3426) (= x3770 100) (< 0 x3752) (< x2470 988262939) (not (= 547091486 x2470)) (= (or (and (< x5273 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5273))) (> x5273 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2996) (> 2217467699 x2470) (= x1220 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x2470)) x60) (and (=> (and (and (= x2315 (= x3494 x5037)) (= x5037 x3841)) (not x2996)) (and (=> (and (and (= x2305 (= x4735 x3426)) (= x2112 x3426)) x2315) (and (=> (not x2305) x387) (=> (and (and (= x4399 (x2828 (x636 x5037) (x956 5) 0)) (= x4581 x4139) (<= 0 x3181) (= (< x3181 x70) x2674) (<= x3181 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3181 (x4120 x4399))) x2305) (and (=> x2674 x387) (=> (and (not x2674) (and (= (< x286 x4139) x1710) (= x4525 (x2828 (x636 x5037) (x956 5) 0)) (= (x4120 x4525) x286) (<= x286 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x286))) (and (=> x1710 x387) (=> (and (not x1710) (and (>= x3266 0) (= x3348 (x1843 (- x286 x4139))) (= (x2828 (x636 x3426) (x956 5) 0) x1189) (<= x3266 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x105 x1189) x3266) (= x3434 (> x3266 x4027)) (= x4027 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4139))))) (and (=> x3434 x387) (=> (and (not x3434) (and (= 1 x2504) (= 32 x2955) (= (x2989 (+ x4139 x3266)) x76) (= 1 x4161))) x4929))))))))) (=> (not x2315) x387))) (=> x2996 x387))) (=> (and (not x60) (= x1944 (= x1368 x1972))) (and (=> (and (not x1944) (and (= (= x2102 x1368) x4268) (and x4268 (and (= (x1843 (- x3066 4)) x2760) (= x70 x1399) (not (= 547091486 x4075)) (= x4735 x3671) (< x4075 988262939) (= 100 x3066) (= x3727 (or (and (> 96 x2760) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2760) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2760))) (= x4075 599290589) (< 0 x2643) (= x1745 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2643 (x1306 (x636 x2102))) (= x2702 x3494) (not (= 405663989 x4075)) (not (< x3066 4)) (= 100 x3066) (> 2217467699 x4075) (not (> 405663989 x4075)))))) (and (=> x3727 x2393) (=> (and (not x3727) (and (= (= x3494 x2702) x2291) (= x2702 x2375))) (and (=> (and (and (= (= x3671 x4735) x3898) (= x2937 x3671)) x2291) (and (=> (and x3898 (and (>= x201 0) (= x201 (x728 x2273)) (= x1399 x1025) (= x2273 (x2828 (x636 x2702) (x956 5) 0)) (= (> x70 x201) x4392) (<= x201 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= (x2828 (x636 x2702) (x956 5) 0) x4991) (<= x5020 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5020 (x728 x4991)) (>= x5020 0) (= (> x1399 x5020) x3803)) (not x4392)) (and (=> x3803 x2393) (=> (and (and (= (x2828 (x636 x3671) (x956 5) 0) x213) (<= 0 x1168) (= x1865 (> x1168 x720)) (= (x1843 (- x5020 x1399)) x1107) (= (x4830 x213) x1168) (<= x1168 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1399)) x720)) (not x3803)) (and (=> (and (and (= x1857 1) (= x3208 32) (= (x2989 (+ x1168 x1399)) x2549) (= x1649 1)) (not x1865)) x1296) (=> x1865 x2393))))) (=> x4392 x2393))) (=> (not x3898) x2393))) (=> (not x2291) x2393))))) (=> (and (and (not (> 405663989 x2913)) (not (= x2913 405663989)) (< x2913 988262939) (not (= 547091486 x2913)) (= x3494 x4850) (= x2197 x4735) (= x2913 599290589) (not (< x306 4)) (= x896 (or (> x5241 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5241) true) (> 96 x5241)))) (= x306 100) (< x2913 2217467699) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3640) (= x5241 (x1843 (- x306 4))) (= (x1306 (x636 x1972)) x1434) (= x70 x5062) (= 100 x306) (< 0 x1434)) x1944) (and (=> (and (not x896) (and (= x700 (= x4850 x3494)) (= x4850 x4877))) (and (=> (not x700) x2602) (=> (and x700 (and (= x2460 (= x4735 x2197)) (= x2200 x2197))) (and (=> (and x2460 (and (= (x2828 (x636 x4850) (x956 5) 0) x1519) (<= x2450 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5062 x667) (= x2450 (x695 x1519)) (>= x2450 0) (= (< x2450 x70) x693))) (and (=> x693 x2602) (=> (and (not x693) (and (= x229 (> x5062 x3541)) (<= 0 x3541) (<= x3541 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x4850) (x956 5) 0) x216) (= (x695 x216) x3541))) (and (=> x229 x2602) (=> (and (not x229) (and (= x2031 (> x983 x2056)) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5062)) x2056) (= x983 (x993 x5366)) (= x5366 (x2828 (x636 x2197) (x956 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x983) (= (x1843 (- x3541 x5062)) x4074) (<= 0 x983))) (and (=> x2031 x2602) (=> (and (and (= 32 x1205) (= x5174 (x2989 (+ x5062 x983))) (= x1831 1) (= 1 x2528)) (not x2031)) x4757))))))) (=> (not x2460) x2602))))) (=> x896 x2602))))))))))))))))) (=> (and (and (= x2015 x3519) (= x4956 x3431) (= x3538 x232) (= x5306 0)) (not x5216)) x5283))))))))))) (=> (and (= true x580) x4712) x305))))) x45))
(assert (= (x636 2796547477) (x956 2796547477)))
(assert (= x1427 (and (not x5033) x769)))
(assert (x4842 x2088))
(assert (x4842 x4689))
(assert (= x2404 (=> (and (= 0 x5346) (= x3391 x2118)) x1531)))
(assert (= (and (not x3406) x1876) x5168))
(assert (x4842 x1493))
(assert (x4842 x3873))
(assert (x4842 x1902))
(assert (x4621 x1422))
(assert (= (and x2319 x3884) x2432))
(assert (x4842 x4627))
(assert (x4842 x3533))
(assert (x4842 x1583))
(assert (= x2027 (and (not x3115) x5029)))
(assert (x4842 x3267))
(assert (= (+ (x4585 x3429) 2) (x4585 (x5250 x3429 2))))
(assert (x4842 x1186))
(assert (x4842 x5290))
(assert (x4842 x4556))
(assert (x4842 x702))
(assert (= (and x2620 x3516) x4361))
(assert (x4842 x2625))
(assert (x4842 x1124))
(assert (= x1087 x989))
(assert (=> (<= x1995 10000) (= (x636 x1995) (x956 x1995))))
(assert (= x3806 x5012))
(assert (= (x4585 (x5250 x3834 1)) (+ (x4585 x3834) 1)))
(assert (= (and x2418 x2335) x288))
(assert (=> (>= 10000 x4200) (= (x956 x4200) (x636 x4200))))
(assert (= x2165 (=> (and (= x4243 x2210) (= x1361 x3581) (= x1071 x1214) (= x585 x4319)) x3361)))
(assert (x4842 x4557))
(assert (= x57 (and x5353 (not x1456))))
(assert (= (and (not x2447) x1772) x2006))
(assert (x4842 x751))
(assert (= (and x1157 x2433) x4674))
(assert (= x1789 (=> (and (= (x2055 x2752 x66) x967) (= x1217 (x5403 x967 x95)) (= x826 (ite (= 1 x4536) 1 0)) (= (x5403 x826 x2615) x2752) (= (ite (< 31 x4958) 1 0) x2615) (= x4152 (> x1217 0)) (= x66 (ite (= x4958 0) 1 0))) (and (=> (not x4152) x1008) (=> (and x4152 (and (= x880 (x2989 (+ 4 x2780))) (= (= x4735 x2716) x4255) (= (x1843 (- x761 x2780)) x118) (= (x2989 (+ 32 x880)) x761))) (and (=> (and (not x4255) (= (= x1972 x2716) x1251)) (and (=> (and (and (not (> 2217467699 x136)) (= x3506 x118) (= x5261 72570022874062638528011751457397263716769196454539065078543251854057308946432) (not (> 2691771752 x136)) (= 36 x3506) (< 0 x5243) (= x1139 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2982) (and (= true (<= x2982 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2982 32)))) (> 2929553584 x136) (= x5243 (x1306 (x636 x1972))) (= x3712 x4565) (= 2691771752 x136) (= (x1843 (- x3506 4)) x2982) (not (> 4 x3506))) x1251) (and (=> x1139 x1507) (=> (and (and (>= x3917 0) (= (= x1299 x3917) x3048) (= x1058 x4565) (> 1461501637330902918203684832716283019655932542976 x3917) (>= 1461501637330902918203684832716283019655932542975 x3917) (= 128 x4509)) (not x1139)) (and (=> (and (and (not (< x2138 4)) (= x4406 (or (and (> 96 x1597) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1597) true)) (> x1597 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1972 x2917) (= (x1306 (x636 x1299)) x1274) (not (< x1564 599290589)) (= x3494 x3753) (= 599290589 x1564) (< x1564 1466279372) (< 0 x1274) (= x1597 (x1843 (- x2138 4))) (= x2138 100) (= 100 x2138) (= x1058 x5032) (= x4425 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x3048) (and (=> (and (not x4406) (and (= x3753 x2354) (= x4579 (= x3753 x3494)))) (and (=> (and x4579 (and (= x2329 x2917) (= (= x1972 x2917) x83))) (and (=> (and x83 (and (= x4946 (x2828 (x636 x3753) (x956 1) 0)) (<= x2721 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2721 (x1647 x4946)) (= x601 x5032) (<= 0 x2721) (= (< x2721 x1058) x2979))) (and (=> (and (= (< x2721 x5032) x1437) (not x2979)) (and (=> (and (not x1437) (and (= (x2828 (x636 x2917) (x956 1) 0) x4686) (= (x3227 x4686) x3252) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3252) (= x1051 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5032))) (<= 0 x3252) (= (x2828 (x636 x3753) (x956 1) 0) x350) (= x2523 (x1843 (- x2721 x5032))) (= x3171 (> x3252 x1051)))) (and (=> (and (and (= x4189 (> x3252 x3052)) (= (x2989 (+ x5032 x3252)) x3052)) (not x3171)) (and (=> x4189 x3957) (=> (and (and (= x3920 (x2828 (x636 x3753) (x956 2) 0)) (= x4756 (x2828 (x636 x1972) x3920 0)) (= (x301 x4756) x3298) (>= x3298 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3298) (= (< x3298 x5032) x5073)) (not x4189)) (and (=> x5073 x3957) (=> (and (not x5073) (= (< x3298 x5032) x4117)) (and (=> x4117 x3957) (=> (and (not x4117) (and (= x2327 32) (= (x1843 (- x3298 x5032)) x2847) (= x3694 1))) x5374))))))) (=> x3171 x3957))) (=> x1437 x3957))) (=> x2979 x3957))) (=> (not x83) x3957))) (=> (not x4579) x3957))) (=> x4406 x3957))) (=> (and (= x1078 (= x3917 x4735)) (not x3048)) (and (=> (and (not x1078) (= x3364 (= x3917 x1972))) (and (=> (and (and (= (= x2102 x3917) x1706) (and (and (= 100 x4811) (= x708 (x1843 (- x4811 4))) (= x1881 599290589) (= x4811 100) (= x2580 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x708) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x708) true) (> 96 x708)))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2186) (not (= x1881 405663989)) (< 0 x2609) (= x2723 x1972) (= (x1306 (x636 x2102)) x2609) (not (< x4811 4)) (= x4884 x1058) (not (= x1881 547091486)) (< x1881 2217467699) (> 988262939 x1881) (= x1294 x3494) (not (> 405663989 x1881))) x1706)) (not x3364)) (and (=> x2580 x2895) (=> (and (not x2580) (and (= (= x1294 x3494) x4238) (= x4866 x1294))) (and (=> (not x4238) x2895) (=> (and (and (= x2723 x3112) (= (= x1972 x2723) x2213)) x4238) (and (=> (not x2213) x2895) (=> (and (and (= x2857 x4884) (= (x2828 (x636 x1294) (x956 5) 0) x4752) (= (> x1058 x2313) x744) (= (x3707 x4752) x2313) (>= x2313 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2313)) x2213) (and (=> x744 x2895) (=> (and (not x744) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4046) (<= 0 x4046) (= x660 (x2828 (x636 x1294) (x956 5) 0)) (= (x3707 x660) x4046) (= x4506 (< x4046 x4884)))) (and (=> (and (not x4506) (and (= x381 (x1843 (- x4046 x4884))) (>= x4051 0) (= (< x2879 x4051) x54) (= x4051 (x172 x2346)) (= x2879 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4884))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4051) (= x2346 (x2828 (x636 x2723) (x956 5) 0)))) (and (=> (and (and (= x1574 1) (= 1 x72) (= x3173 (x2989 (+ x4884 x4051))) (= 32 x2863)) (not x54)) x1776) (=> x54 x2895))) (=> x4506 x2895))))))))))) (=> (and x3364 (and (not (= 547091486 x3164)) (= x615 x3494) (not (= 405663989 x3164)) (= x478 100) (not (< x478 4)) (= x1972 x3122) (= 599290589 x3164) (= x1455 x1058) (= x1435 (x1843 (- x478 4))) (not (< x3164 405663989)) (= x478 100) (< x3164 2217467699) (> x3449 0) (= x4642 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1435) (and (< x1435 96) (= true (<= x1435 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x3153 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x1306 (x636 x1972)) x3449) (> 988262939 x3164))) (and (=> (and (not x4642) (and (= x5212 (= x3494 x615)) (= x615 x4233))) (and (=> (not x5212) x2173) (=> (and x5212 (and (= x3122 x977) (= (= x3122 x1972) x373))) (and (=> (and x373 (and (= x318 (x2828 (x636 x615) (x956 5) 0)) (= x1455 x3661) (= x4901 (x683 x318)) (= (< x4901 x1058) x4861) (<= x4901 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4901))) (and (=> (and (and (>= x4239 0) (= x738 (< x4239 x1455)) (= x4239 (x683 x421)) (= (x2828 (x636 x615) (x956 5) 0) x421) (<= x4239 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4861)) (and (=> (and (and (= (x3017 x1801) x3696) (>= x3696 0) (= (x2828 (x636 x3122) (x956 5) 0) x1801) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3696) (= (x1843 (- x4239 x1455)) x1176) (= x5256 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1455))) (= x4157 (> x3696 x5256))) (not x738)) (and (=> (and (and (= 1 x1588) (= x1318 32) (= x1120 (x2989 (+ x3696 x1455))) (= 1 x167)) (not x4157)) x4020) (=> x4157 x2173))) (=> x738 x2173))) (=> x4861 x2173))) (=> (not x373) x2173))))) (=> x4642 x2173))))) (=> (and (and (= x1374 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x4863)) (< 0 x3422) (not (= x3849 405663989)) (< x3849 2217467699) (= x1972 x3995) (= x4208 (x1843 (- x4863 4))) (= x3849 599290589) (= x3422 (x1306 (x636 x4735))) (= 100 x4863) (= x4405 x1058) (not (= 547091486 x3849)) (= (or (and (> 96 x4208) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4208))) (> x4208 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1992) (= x52 x3494) (> 988262939 x3849) (not (< x3849 405663989)) (= 100 x4863)) x1078) (and (=> (and (and (= x2243 (= x3494 x52)) (= x52 x2437)) (not x1992)) (and (=> (not x2243) x5304) (=> (and (and (= (= x1972 x3995) x2588) (= x2073 x3995)) x2243) (and (=> (and x2588 (and (>= x404 0) (= x4784 x4405) (= x89 (x2828 (x636 x52) (x956 5) 0)) (= x779 (< x404 x1058)) (= (x1756 x89) x404) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x404))) (and (=> (and (and (= x5045 (x1756 x3975)) (>= x5045 0) (<= x5045 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3975 (x2828 (x636 x52) (x956 5) 0)) (= x1616 (< x5045 x4405))) (not x779)) (and (=> x1616 x5304) (=> (and (and (= (< x3902 x5200) x4156) (= (x4041 x238) x5200) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5200) (= (x2828 (x636 x3995) (x956 5) 0) x238) (= x3902 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4405))) (<= 0 x5200) (= (x1843 (- x5045 x4405)) x1947)) (not x1616)) (and (=> x4156 x5304) (=> (and (not x4156) (and (= 1 x2294) (= x658 1) (= (x2989 (+ x5200 x4405)) x3480) (= 32 x4967))) x5393))))) (=> x779 x5304))) (=> (not x2588) x5304))))) (=> x1992 x5304))))))))) (=> (and (not x1251) (and (= (= x2716 x2102) x3988) (and x3988 (and (not (< x3883 4)) (= x714 (x1306 (x636 x2102))) (not (> 2217467699 x525)) (not (< x525 2691771752)) (= x2606 x3712) (= x3354 72570022874062638528011751457397263716769196454539065078543251854057308946432) (= x118 x3883) (< x525 2929553584) (> x714 0) (= x3883 36) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x153) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x153)) (< x153 32))) x786) (= x525 2691771752) (= (x1843 (- x3883 4)) x153))))) (and (=> x786 x1730) (=> (and (not x786) (and (= x2088 x2606) (<= 0 x5246) (= (= x5246 x1299) x1551) (>= 1461501637330902918203684832716283019655932542975 x5246) (= 128 x4490) (< x5246 1461501637330902918203684832716283019655932542976))) (and (=> (and (and (= 100 x4072) (> 1466279372 x9) (= x2102 x2690) (= 100 x4072) (not (< x9 599290589)) (= x9 599290589) (= x954 (x1843 (- x4072 4))) (not (> 4 x4072)) (= x978 x3494) (= x2088 x3251) (< 0 x576) (= (x1306 (x636 x1299)) x576) (= (or (and (< x954 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x954))) (> x954 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x47) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4359)) x1551) (and (=> x47 x2499) (=> (and (not x47) (and (= x2448 x978) (= (= x3494 x978) x3121))) (and (=> (not x3121) x2499) (=> (and (and (= (= x2690 x2102) x294) (= x3238 x2690)) x3121) (and (=> (not x294) x2499) (=> (and x294 (and (= (x1647 x2629) x3870) (= x2629 (x2828 (x636 x978) (x956 1) 0)) (= x1018 x3251) (= x4462 (> x2088 x3870)) (<= 0 x3870) (<= x3870 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x4462 x2499) (=> (and (not x4462) (= x3746 (> x3251 x3870))) (and (=> (and (and (= (x1843 (- x3870 x3251)) x2754) (= x1708 (x2828 (x636 x978) (x956 1) 0)) (= x210 (< x2253 x1491)) (= (x1155 x4102) x1491) (>= x1491 0) (<= x1491 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4102 (x2828 (x636 x2690) (x956 1) 0)) (= x2253 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3251)))) (not x3746)) (and (=> x210 x2499) (=> (and (not x210) (and (= x2069 (x2989 (+ x1491 x3251))) (= x2573 (< x2069 x1491)))) (and (=> (and (not x2573) (and (>= x5315 0) (= x2826 (x2828 (x636 x978) (x956 2) 0)) (= x5315 (x301 x4611)) (= (< x5315 x3251) x5266) (<= x5315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4611 (x2828 (x636 x2102) x2826 0)))) (and (=> x5266 x2499) (=> (and (= (< x5315 x3251) x2122) (not x5266)) (and (=> (and (and (= x55 32) (= 1 x1436) (= (x1843 (- x5315 x3251)) x3452)) (not x2122)) x170) (=> x2122 x2499))))) (=> x2573 x2499))))) (=> x3746 x2499))))))))))) (=> (and (not x1551) (= (= x4735 x5246) x603)) (and (=> (and x603 (and (= x678 (x1843 (- x1543 4))) (= (or (> x678 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x678 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x678)))) x1919) (> x1423 0) (= x2088 x2373) (= (x1306 (x636 x4735)) x1423) (not (< x4977 405663989)) (> 2217467699 x4977) (not (= x4977 405663989)) (not (= 547091486 x4977)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3465) (< x4977 988262939) (= x4977 599290589) (= x3494 x5190) (not (> 4 x1543)) (= x1543 100) (= x1010 x2102) (= 100 x1543))) (and (=> x1919 x1478) (=> (and (and (= x947 (= x5190 x3494)) (= x3332 x5190)) (not x1919)) (and (=> (not x947) x1478) (=> (and (and (= x1010 x4285) (= x3029 (= x1010 x2102))) x947) (and (=> (not x3029) x1478) (=> (and (and (= x3783 x2373) (= x3188 (x2828 (x636 x5190) (x956 5) 0)) (= (x1756 x3188) x2648) (= x1428 (< x2648 x2088)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2648) (>= x2648 0)) x3029) (and (=> x1428 x1478) (=> (and (not x1428) (and (= x3857 (> x2373 x979)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x979) (= x979 (x1756 x3921)) (= x3921 (x2828 (x636 x5190) (x956 5) 0)) (<= 0 x979))) (and (=> x3857 x1478) (=> (and (and (<= 0 x1419) (<= x1419 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x1010) (x956 5) 0) x593) (= (> x1419 x4777) x2100) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2373)) x4777) (= x5127 (x1843 (- x979 x2373))) (= (x514 x593) x1419)) (not x3857)) (and (=> x2100 x1478) (=> (and (not x2100) (and (= x2482 32) (= 1 x1164) (= 1 x755) (= x2684 (x2989 (+ x1419 x2373))))) x2521))))))))))))) (=> (and (= x4510 (= x1972 x5246)) (not x603)) (and (=> (and (not x4510) (and (= x3468 (= x2102 x5246)) (and x3468 (and (not (= 547091486 x1184)) (> 988262939 x1184) (= x2486 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 405663989 x1184)) (< 0 x3493) (= (x1843 (- x3301 4)) x3539) (= 599290589 x1184) (= x2088 x4597) (= (or (and (< x3539 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3539))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3539)) x147) (= 100 x3301) (= x3494 x955) (not (> 405663989 x1184)) (= x3301 100) (not (> 4 x3301)) (= x3493 (x1306 (x636 x2102))) (= x2102 x5001) (< x1184 2217467699))))) (and (=> (and (and (= (= x955 x3494) x56) (= x3063 x955)) (not x147)) (and (=> (and (and (= (= x2102 x5001) x756) (= x3701 x5001)) x56) (and (=> (and x756 (and (= x149 (> x2088 x442)) (= x4304 x4597) (= x442 (x3707 x2365)) (>= x442 0) (= (x2828 (x636 x955) (x956 5) 0) x2365) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x442))) (and (=> (and (not x149) (and (= (x3707 x3794) x4224) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4224) (= (< x4224 x4597) x1145) (= (x2828 (x636 x955) (x956 5) 0) x3794) (>= x4224 0))) (and (=> (and (not x1145) (and (= (x2828 (x636 x5001) (x956 5) 0) x5354) (= x1904 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4597))) (= (x4351 x5354) x827) (>= x827 0) (<= x827 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x827 x1904) x3438) (= (x1843 (- x4224 x4597)) x4688))) (and (=> (and (not x3438) (and (= x4696 1) (= (x2989 (+ x4597 x827)) x4052) (= x2247 1) (= 32 x3376))) x653) (=> x3438 x737))) (=> x1145 x737))) (=> x149 x737))) (=> (not x756) x737))) (=> (not x56) x737))) (=> x147 x737))) (=> (and (and (= 100 x1055) (= x2088 x4108) (= x67 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x314 x2102) (not (= 547091486 x1886)) (= x4206 (x1306 (x636 x1972))) (not (< x1055 4)) (= x974 (or (> x400 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x400) (= (<= x400 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1055 100) (not (< x1886 405663989)) (< x1886 2217467699) (= x1886 599290589) (< x1886 988262939) (< 0 x4206) (not (= 405663989 x1886)) (= x400 (x1843 (- x1055 4))) (= x3494 x3233)) x4510) (and (=> (and (not x974) (and (= x4533 (= x3233 x3494)) (= x4381 x3233))) (and (=> (not x4533) x3965) (=> (and (and (= x3209 (= x2102 x314)) (= x314 x2596)) x4533) (and (=> (not x3209) x3965) (=> (and (and (<= 0 x4418) (= (> x2088 x4418) x3968) (<= x4418 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4418 (x683 x2136)) (= x2136 (x2828 (x636 x3233) (x956 5) 0)) (= x1655 x4108)) x3209) (and (=> x3968 x3965) (=> (and (and (= (> x4108 x3228) x279) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3228) (= (x2828 (x636 x3233) (x956 5) 0) x4920) (<= 0 x3228) (= (x683 x4920) x3228)) (not x3968)) (and (=> (and (not x279) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x460) (>= x460 0) (= x2244 (> x460 x2939)) (= x2939 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4108))) (= x349 (x2828 (x636 x314) (x956 5) 0)) (= x460 (x307 x349)) (= (x1843 (- x3228 x4108)) x991))) (and (=> (and (and (= x369 (x2989 (+ x460 x4108))) (= 1 x157) (= 32 x3863) (= 1 x360)) (not x2244)) x2853) (=> x2244 x3965))) (=> x279 x3965))))))))) (=> x974 x3965))))))))))))) (=> (and x4255 (and (= x1976 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x198) (and (< x198 32) (= true (<= x198 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1747 x118) (= x517 2691771752) (= x1747 36) (= x4808 (x1306 (x636 x4735))) (> x4808 0) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x1495) (= (x1843 (- x1747 4)) x198) (< x517 2929553584) (not (< x1747 4)) (not (> 2217467699 x517)) (not (< x517 2691771752)) (= x3712 x1786))) (and (=> (and (and (= x2526 (= x1299 x1368)) (<= 0 x1368) (< x1368 1461501637330902918203684832716283019655932542976) (= x2833 128) (>= 1461501637330902918203684832716283019655932542975 x1368) (= x1786 x338)) (not x1976)) (and (=> (and (not x2526) (= (= x1368 x4735) x2531)) (and (=> (and x2531 (and (= x2782 (x1843 (- x184 4))) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2782)) (> 96 x2782)) (> x2782 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x541) (> 2217467699 x784) (not (= 405663989 x784)) (= 100 x184) (not (> 4 x184)) (> x4280 0) (= 599290589 x784) (= (x1306 (x636 x4735)) x4280) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4014) (= x4735 x1683) (= x1552 x338) (= x3494 x1901) (not (= 547091486 x784)) (= 100 x184) (> 988262939 x784) (not (< x784 405663989)))) (and (=> x541 x2520) (=> (and (and (= (= x3494 x1901) x1457) (= x5143 x1901)) (not x541)) (and (=> (and x1457 (and (= (= x4735 x1683) x627) (= x1683 x2768))) (and (=> (not x627) x2520) (=> (and x627 (and (<= 0 x237) (= (x2828 (x636 x1901) (x956 5) 0) x4771) (= x237 (x1756 x4771)) (= (< x237 x338) x163) (<= x237 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1552 x2693))) (and (=> x163 x2520) (=> (and (not x163) (and (>= x2946 0) (= x2946 (x1756 x5228)) (= x5228 (x2828 (x636 x1901) (x956 5) 0)) (<= x2946 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2613 (> x1552 x2946)))) (and (=> x2613 x2520) (=> (and (and (= (x649 x3305) x234) (<= 0 x234) (= x231 (< x2737 x234)) (<= x234 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1843 (- x2946 x1552)) x3137) (= x3305 (x2828 (x636 x1683) (x956 5) 0)) (= x2737 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1552)))) (not x2613)) (and (=> x231 x2520) (=> (and (not x231) (and (= 32 x4515) (= 1 x3549) (= x2583 1) (= (x2989 (+ x234 x1552)) x4005))) x4634))))))))) (=> (not x1457) x2520))))) (=> (and (= x449 (= x1368 x1972)) (not x2531)) (and (=> (and x449 (and (= 100 x724) (> 2217467699 x5066) (not (= 547091486 x5066)) (not (< x5066 405663989)) (= x3494 x3036) (= x338 x2025) (= x4244 (or (and (> 96 x3269) (= true (<= x3269 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3269 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 988262939 x5066) (not (> 4 x724)) (= x724 100) (not (= x5066 405663989)) (= x2266 x4735) (> x4382 0) (= 599290589 x5066) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x840) (= (x1843 (- x724 4)) x3269) (= x4382 (x1306 (x636 x1972))))) (and (=> x4244 x2240) (=> (and (and (= x3036 x899) (= (= x3036 x3494) x383)) (not x4244)) (and (=> (and x383 (and (= x2266 x4819) (= x1781 (= x2266 x4735)))) (and (=> (and x1781 (and (= x4159 (x683 x3744)) (= x2025 x4937) (= (> x338 x4159) x957) (>= x4159 0) (<= x4159 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x3036) (x956 5) 0) x3744))) (and (=> x957 x2240) (=> (and (not x957) (and (= x1209 (x683 x5072)) (= (> x2025 x1209) x1676) (<= 0 x1209) (= x5072 (x2828 (x636 x3036) (x956 5) 0)) (<= x1209 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1676) (and (= x1565 (x1843 (- x1209 x2025))) (= x290 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2025))) (= x3087 (< x290 x3795)) (<= 0 x3795) (= (x2303 x2743) x3795) (= x2743 (x2828 (x636 x2266) (x956 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3795))) (and (=> (and (not x3087) (and (= 1 x1034) (= x2534 (x2989 (+ x2025 x3795))) (= x1240 1) (= x3492 32))) x4039) (=> x3087 x2240))) (=> x1676 x2240))))) (=> (not x1781) x2240))) (=> (not x383) x2240))))) (=> (and (and (= (= x2102 x1368) x1391) (and x1391 (and (= x2265 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2845) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2845) true) (< x2845 96)))) (= x3974 x338) (= 599290589 x2185) (= x2729 x4735) (not (= 405663989 x2185)) (= x2845 (x1843 (- x4141 4))) (not (> 4 x4141)) (= x4302 x3494) (= 100 x4141) (not (< x2185 405663989)) (not (= x2185 547091486)) (= 100 x4141) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1808) (= x816 (x1306 (x636 x2102))) (> 2217467699 x2185) (< x2185 988262939) (> x816 0)))) (not x449)) (and (=> (and (not x2265) (and (= x2143 x4302) (= x3077 (= x3494 x4302)))) (and (=> (not x3077) x5138) (=> (and x3077 (and (= (= x4735 x2729) x1319) (= x2729 x3558))) (and (=> (not x1319) x5138) (=> (and x1319 (and (= x2900 (< x4299 x338)) (= x1162 x3974) (= (x2828 (x636 x4302) (x956 5) 0) x843) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4299) (= x4299 (x3707 x843)) (<= 0 x4299))) (and (=> (and (not x2900) (and (>= x3258 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3258) (= (x3707 x5300) x3258) (= x4893 (< x3258 x3974)) (= x5300 (x2828 (x636 x4302) (x956 5) 0)))) (and (=> (and (and (= x2718 (x2828 (x636 x2729) (x956 5) 0)) (= x3117 (x3325 x2718)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3117) (>= x3117 0) (= x2704 (x1843 (- x3258 x3974))) (= x4205 (< x1514 x3117)) (= x1514 (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3974)))) (not x4893)) (and (=> x4205 x5138) (=> (and (not x4205) (and (= x33 32) (= x2746 (x2989 (+ x3117 x3974))) (= 1 x1292) (= 1 x3762))) x3278))) (=> x4893 x5138))) (=> x2900 x5138))))))) (=> x2265 x5138))))))) (=> (and x2526 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1057) (= x907 100) (< 0 x3343) (not (< x4961 599290589)) (< x4961 1466279372) (= x2891 x338) (= x3494 x2733) (= x2703 (x1843 (- x907 4))) (= 100 x907) (= x5205 x4735) (= 599290589 x4961) (= (x1306 (x636 x1299)) x3343) (= x108 (or (and (> 96 x2703) (= (<= x2703 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x2703 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 4 x907)))) (and (=> x108 x5382) (=> (and (and (= x766 (= x2733 x3494)) (= x2733 x11)) (not x108)) (and (=> (not x766) x5382) (=> (and (and (= x4665 (= x5205 x4735)) (= x1755 x5205)) x766) (and (=> (not x4665) x5382) (=> (and (and (= x127 x2891) (= (> x338 x2412) x3025) (= x2759 (x2828 (x636 x2733) (x956 1) 0)) (<= 0 x2412) (= x2412 (x1647 x2759)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2412)) x4665) (and (=> (and (= x3559 (> x2891 x2412)) (not x3025)) (and (=> x3559 x5382) (=> (and (and (= x2850 (x2828 (x636 x2733) (x956 1) 0)) (<= x135 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x359 x4430) x135) (= (x1843 (- x2412 x2891)) x4284) (= x4430 (x2828 (x636 x5205) (x956 1) 0)) (>= x135 0) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2891)) x3664) (= x959 (< x3664 x135))) (not x3559)) (and (=> x959 x5382) (=> (and (and (= (x2989 (+ x2891 x135)) x1684) (= (< x1684 x135) x5324)) (not x959)) (and (=> x5324 x5382) (=> (and (not x5324) (and (= x4434 (x2828 (x636 x4735) x2864 0)) (= (x2828 (x636 x2733) (x956 2) 0) x2864) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2152) (= x248 (> x2891 x2152)) (= (x301 x4434) x2152) (<= 0 x2152))) (and (=> x248 x5382) (=> (and (= x2617 (< x2152 x2891)) (not x248)) (and (=> (and (not x2617) (and (= 32 x789) (= (x1843 (- x2152 x2891)) x459) (= x2582 1))) x1931) (=> x2617 x5382))))))))))) (=> x3025 x5382))))))))))) (=> x1976 x5160)))))))))
(assert (x4842 x1214))
(assert (x4842 x4108))
(assert (x4842 x3706))
(assert (= x811 (x4585 (x636 x811))))
(assert (= x2753 (and x1572 (not x878))))
(assert (x4842 x2871))
(assert (x4842 x55))
(assert (x4842 x2118))
(assert (x4842 x678))
(assert (x4842 x3784))
(assert (= x709 (and x1863 x2362)))
(assert (= (x4585 (x956 76833804140862540057647519496925185374644862498684814347804924264468996685824)) 76833804140862540057647519496925185374644862498684814347804924264468996685824))
(assert (= (=> (and (= x5129 x2582) (= x789 x2014)) x4833) x1931))
(assert (x4842 x3494))
(assert (= (and x4987 x2199) x3236))
(assert (x4842 x3827))
(assert (= x2716 (x4585 (x636 x2716))))
(assert (x4842 x3626))
(assert (= (and x5146 x3049) x4372))
(assert (= x2916 (and x547 x1763)))
(assert (= (or x1979 x177 x5330 x2083 x2260 x1286) x4038))
(assert (x4842 x1679))
(assert (x4842 x5254))
(assert (x4842 x4530))
(assert (x4842 x4880))
(assert (x4842 x5331))
(assert (x4842 x3747))
(assert (= (and x4731 x3113) x1033))
(assert (x4842 x4422))
(assert (x4621 x3995))
(assert (x4842 x412))
(assert (x4842 x3332))
(assert (= (x956 599290589) (x636 599290589)))
(assert (x4842 x899))
(assert (= (and (not x4244) x2234) x2628))
(assert (x4842 x3178))
(assert (= x3924 (=> (= x1030 (> x4931 0)) (and (=> (not x1030) x5012) (=> (and x1030 (and (= (= x4873 0) x3406) (<= x3271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4873 (x5403 1461501637330902918203684832716283019655932542975 x1270)) (>= x3271 0))) (and (=> (and (not x3406) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3954) (= x1236 (= x3954 0)) (>= x3954 0) (= (x1430 x1959) x3954) (= x2758 (x2828 (x636 x4200) x1283 0)) (= x1959 (x5250 x2758 2)) (= (x5403 1461501637330902918203684832716283019655932542975 x1270) x4200))) (and (=> (and (and (and (> 1461501637330902918203684832716283019655932542976 x3949) (<= x3949 1461501637330902918203684832716283019655932542975) (>= x3949 0) (= x1668 (ite (< 0 x3271) (not (= x3949 0)) (> x3271 0))) (= (x5250 x1283 1) x4792) (= (x4669 x4792) x3949)) (or (and (not x1668) (= x1668 x3115)) (and x1668 (and (= (> x4931 x4848) x4493) (<= 0 x4848) (= x4404 (x2828 (x636 x3949) x1283 0)) (= x3115 (not x4493)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4848) (= (x1430 x5209) x4848) (= (x5250 x4404 2) x5209))))) x1236) x2512) (=> (not x1236) x1008))) (=> x3406 x1008)))))))
(assert (= x4501 (and x4549 (not x2994))))
(assert (= x3800 (or x1035 x1345)))
(assert (=> (<= x915 10000) (= (x956 x915) (x636 x915))))
(assert (x4842 x2937))
(assert (x4842 x191))
(assert (x4842 x2566))
(assert (x4842 x1168))
(assert (= x4779 x989))
(assert (x4842 x2966))
(assert (x5194 x909))
(assert (= (and x1594 x1706) x51))
(assert (x4621 x3671))
(assert (x4842 x941))
(assert (= (or x124 x5055 x1654 x2089) x3363))
(assert (= (and x4970 (not x3468)) x5210))
(assert (= x823 (or x3324 x3615 x58)))
(assert (x4842 x4944))
(assert (x4621 x1010))
(assert (= x3224 (and x1938 (not x285))))
(assert (x4842 x1930))
(assert (= (and (not x2460) x3963) x780))
(assert (x4842 x4416))
(assert (x4842 x4197))
(assert (x4842 x2295))
(assert (x4842 x4527))
(assert (x4842 x548))
(assert (x4842 x2869))
(assert (= (+ (x4585 x2256) 2) (x4585 (x5250 x2256 2))))
(assert (= x3122 (x4585 (x636 x3122))))
(assert (x4842 x3208))
(assert (x4842 x2692))
(assert (x4842 x5093))
(assert (= x3442 (or x2005 x1875)))
(assert (x4842 x2040))
(assert (x4842 x2448))
(assert (= x801 (and x4296 (not x4979))))
(assert (= x4738 (or x1549 x5234)))
(assert (= (and (not x935) x1894) x2835))
(assert (= (and (not x4764) x4816) x2421))
(assert (= x1231 (and (not x3591) x856)))
(assert (x4842 x3216))
(assert (x4842 x1537))
(assert (x4842 x4523))
(assert (x4842 x4698))
(assert (= (and (not x2384) x372) x594))
(assert (x4842 x278))
(assert (x4842 x3695))
(assert (x4842 x171))
(assert (= (and x3858 x4448) x1140))
(assert (x4842 x724))
(assert (= (and (not x2146) x4250) x3400))
(assert (x4842 x1484))
(assert (= (and (not x3790) x4921) x3826))
(assert (= x4143 (x4585 (x636 x4143))))
(assert (= (or (and (not x83) x1482) x4727 (and x4189 x4986) x3900 x706 (and x3761 x4406) (and x506 x2979) (and x4668 (not x4579)) (and x5073 x4155)) x4684))
(assert (x4842 x9))
(assert (= (x636 157198259) (x956 157198259)))
(assert (= x978 (x4585 (x636 x978))))
(assert (x4842 x394))
(assert (= (x636 4294967296) (x956 4294967296)))
(assert (=> (<= x3922 10000) (= (x636 x3922) (x956 x3922))))
(assert (= (+ (x4585 x2514) 2) (x4585 (x5250 x2514 2))))
(assert (= (and (not x3604) x4843) x5330))
(assert (x4842 x3354))
(assert (= (x4585 (x636 x415)) x415))
(assert (x4842 x1176))
(assert (x4842 x4515))
(assert (x4842 x4659))
(assert (= (x636 2023533118) (x956 2023533118)))
(assert (x645 x3203))
(assert (x4842 x1826))
(assert (= (and x2589 x572) x5175))
(assert (= (and x1663 x2677) x1921))
(assert (= (and (not x1320) x2870) x3328))
(assert (= x4806 (and (not x557) x5268)))
(assert (= x5322 (=> (= x22 (= x347 0)) (and (=> (and x22 (= x1636 x3589)) x1638) (=> (and (= x2418 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x368) (and (< x368 32) (= true (<= x368 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not x22)) (and (=> (and (= x3589 x1636) x2418) x1638) (=> (and (and (= x2901 x1636) (= x1824 x1962) (= x4951 1)) (not x2418)) x1413)))))))
(assert (= x1707 (=> (= (= 0 x171) x4580) (and (=> (and (not x4580) (= x1769 (or (and (> 32 x2254) (= (<= x2254 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2254)))) (and (=> x1769 x1507) (=> (and (not x1769) (and (>= x1090 0) (= (x1843 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4565)) x2631) (= x1539 (< x2631 x1090)) (<= x1090 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x1539 x1507) (=> (and (not x1539) (and (= (x2030 x4196) x3398) (<= x3398 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3398) (= (< x2631 x3398) x2242) (= x1534 (x2989 (+ x1090 x4565))) (= (x2828 (x636 x3494) (x956 5) 0) x4196))) (and (=> (and (and (= (x2989 (+ x3398 x4565)) x2795) (= x5110 1) (= 32 x5252)) (not x2242)) x4024) (=> x2242 x1507))))))) (=> x4580 x1507)))))
(assert (= (x4585 (x956 2678788150)) 2678788150))
(assert (= x869 (x4585 (x636 x869))))
(assert (x4842 x4477))
(assert (x2961 x2367 x3140))
(assert (= x3482 (and (not x3213) x3224)))
(assert (= (+ 1 (x4585 x705)) (x4585 (x5250 x705 1))))
(assert (x4621 x4736))
(assert (x4842 x3972))
(assert (= (x636 242558722) (x956 242558722)))
(assert (x4842 x5089))
(assert (= x3168 (and x3158 x2527)))
(assert (x4842 x3032))
(assert (= (and x1598 x2156) x1250))
(assert (x4842 x2266))
(assert (x4842 x2766))
(assert (x645 x96))
(assert (x4842 x1477))
(assert (x4842 x3104))
(assert (x4842 x3955))
(assert (= (or x5042 (and (not x212) x2829)) x4414))
(assert (x4842 x4381))
(assert (= (or x1098 x1390 x2872) x3690))
(assert (= (and (not x3347) x3129) x535))
(assert (= x3042 (and (not x4748) x3510)))
(assert (=> (<= x765 10000) (= (x636 x765) (x956 x765))))
(assert (= x468 (and x3461 x1479)))
(assert (= (and (not x627) x900) x4827))
(assert (= x4820 (and x1856 x1658)))
(assert (x4842 x688))
(assert (x4842 x3868))
(assert (x4842 x1374))
(assert (x4842 x442))
(assert (x4842 x501))
(assert (x4842 x840))
(assert (x4842 x4818))
(assert (= x265 (x4585 (x636 x265))))
(assert (x4842 x2684))
(assert (= (and x5297 x2219) x85))
(assert (=> (>= 10000 x3289) (= (x636 x3289) (x956 x3289))))
(assert (= x856 (and x1577 (not x1))))
(assert (= x2094 (=> (= x2396 (> x3712 0)) (and (=> (not x2396) x2406) (=> (and x2396 (and (and (= (= x4735 x2716) x788) (= 4 x3594)) (or (and (and (or (and x3688 (and (= 32 x4417) (= x3178 x3594) (not (< x3178 4)) (= x3178 4) (= x3639 405663989) (< x3639 2217467699) (= 1 x1570) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x1218) (> x1074 0) (= x1074 (x1306 (x636 x1972))) (not (> 405663989 x3639)) (> 988262939 x3639))) (and (not x3688) (and (= (= x2102 x2716) x4902) (and (and (= 32 x4417) (= x3594 x1095) (= 4 x1095) (= x134 (x1306 (x636 x2102))) (= 1 x1570) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x842) (not (> 4 x1095)) (not (< x2912 405663989)) (> x134 0) (= x2912 405663989) (< x2912 988262939) (< x2912 2217467699)) x4902)))) (= (= x2716 x1972) x3688)) (not x788)) (and (and (= 405663989 x3986) (< 0 x4179) (= x3594 x4135) (< x3986 988262939) (= x4179 (x1306 (x636 x4735))) (= x4135 4) (= x4417 32) (not (> 4 x4135)) (not (< x3986 405663989)) (= 1 x1570) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x4247) (< x3986 2217467699)) x788)))) x3291)))))
(assert (= (and x2681 x2775) x3288))
(assert (x4842 x1164))
(assert (x4842 x2522))
(assert (x4842 x567))
(assert (x4842 x4354))
(assert (= x1301 (=> (and (and (= x5229 (x5071 x5253)) (= (x5250 x2514 2) x2542) (= x4138 (x4870 x4378)) (<= x2921 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5253 (x2828 (x636 x746) x1887 0)) (>= x1310 0) (<= x773 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x2716) (x956 157) 0) x734) (>= x4138 0) (= x2479 (x2828 (x636 x746) x1688 0)) (= x2921 (x1349 x1991)) (= (x2828 (x636 x2716) (x956 156) 0) x1688) (= x1991 (x5250 x5253 1)) (= (x2828 (x636 x746) x734 0) x2514) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1310) (<= 0 x773) (= x1310 (x2399 x2542)) (<= 0 x2921) (= (> x2921 x773) x245) (<= x5229 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5229 0) (= x4378 (x5250 x2479 2)) (<= x4138 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2828 (x636 x2716) (x956 159) 0) x1887)) (or (and (= x2921 x1709) x245) (and (not x245) (= x1709 0)))) x106)))
(assert (x4621 x5226))
(assert (= x2919 (and x2146 x4250)))
(assert (= x2518 (and (not x4353) x918)))
(assert (x4842 x1424))
(assert (= x3919 (and x2285 x4859)))
(assert (x4842 x4198))
(assert (= (+ (x4585 x3119) 2) (x4585 (x5250 x3119 2))))
(assert (x4842 x5096))
(assert (x4842 x5086))
(assert (= x5139 (or x2905 x2999)))
(assert (x4842 x3371))
(assert (x4842 x1077))
(assert (= (x4585 (x5250 x2552 1)) (+ 1 (x4585 x2552))))
(assert (x645 x4711))
(assert (x4842 x5066))
(assert (=> (<= x5401 10000) (= (x956 x5401) (x636 x5401))))
(assert (= (and x4061 x2244) x450))
(assert (= x4091 (and x3116 x4465)))
(assert (x4842 x5181))
(assert (= (and (not x1571) x1249) x3679))
(assert (x4842 x1378))
(assert (x4842 x3426))
(assert (x4621 x2205))
(assert (x4842 x2080))
(assert (x4842 x3075))
(assert (x4842 x1373))
(assert (= x1777 (or x5058 x780 x2822 x4350 x3682 x4526)))
(assert (= x1097 (=> (and (= x2293 x3827) (= x86 (x5250 x3738 1)) (= (x5250 x5128 1) x3738) (= (x2828 (x636 x4134) x624 0) x5128)) x343)))
(assert (= x2729 (x4585 (x636 x2729))))
(assert (x4842 x2513))
(assert (= (+ (x4585 x624) 1) (x4585 (x5250 x624 1))))
(assert (= x4307 (and x772 (not x3936))))
(assert (= (+ (x4585 x59) 1) (x4585 (x5250 x59 1))))
(assert (= x5156 (and (not x546) x36)))
(assert (x4842 x4772))
(assert (x4842 x1117))
(assert (x4842 x1570))
(assert (= x414 (and x1617 x605)))
(assert (x4842 x1748))
(assert (x4842 x2968))
(assert (= x4905 (and x1593 (not x1865))))
(assert (= (and x994 x4324) x2842))
(assert (x4842 x4520))
(assert (= x2162 (or x2310 x4699)))
(assert (= (and x1839 (not x1762)) x4807))
(assert (= (and x139 x4278) x4633))
(assert (x4842 x3173))
(assert (x4842 x2181))
(assert (= (and x4487 (not x3485)) x337))
(assert (= (and x474 x963) x3684))
(assert (= x2697 (and x2613 x3829)))
(assert (= (and x864 x1538) x923))
(assert (=> (<= x4736 10000) (= (x956 x4736) (x636 x4736))))
(assert (= (and x4361 x5225) x3511))
(assert (= (and (not x670) x1946) x1718))
(assert (= (and (not x3234) x273) x293))
(assert (x4842 x92))
(assert (x4842 x1873))
(assert (x4842 x2223))
(assert (=> (<= x4390 10000) (= (x636 x4390) (x956 x4390))))
(assert (= (x4585 (x5250 x2017 1)) (+ 1 (x4585 x2017))))
(assert (x4842 x4060))
(assert (x29 x2752 x66))
(assert (=> (>= 10000 x2739) (= (x956 x2739) (x636 x2739))))
(assert (x4621 x4134))
(assert (= x409 (=> (and (= x111 x4093) (= x4996 x3955)) x3627)))
(assert (= (and x2996 x3890) x3598))
(assert (x645 x2954))
(assert (= x1724 (and (not x60) x1554)))
(assert (= (and x3144 (not x2735)) x1096))
(assert (x4842 x125))
(assert (x4842 x2255))
(assert (= (and (not x786) x3976) x1128))
(assert (=> (>= 10000 x3805) (= (x636 x3805) (x956 x3805))))
(assert (= x343 (=> (= (> x4663 0) x753) (and (=> (and (not x753) (= x3827 x4717)) x5091) (=> (and x753 (and (<= 0 x3271) (<= x3271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5119 (= x4134 0)))) (and (=> (and (not x5119) (and (<= 0 x4537) (= x2957 (x2828 (x636 x4134) x624 0)) (= (x2496 x3393) x4537) (= x3393 (x5250 x2957 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4537) (= (= 0 x4537) x2074))) (and (=> (and (and (and (> 1461501637330902918203684832716283019655932542976 x103) (= x103 (x2935 x3840)) (= x3840 (x5250 x624 1)) (<= 0 x103) (= x4844 (ite (< 0 x3271) (not (= x103 0)) (< 0 x3271))) (>= 1461501637330902918203684832716283019655932542975 x103)) (or (and (not x4844) (= x186 x4844)) (and x4844 (and (= (x2828 (x636 x103) x624 0) x282) (>= x3487 0) (= (x2496 x2559) x3487) (= x2559 (x5250 x282 2)) (= x186 (not x1761)) (<= x3487 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1761 (> x4663 x3487)))))) x2074) x4167) (=> (not x2074) x4705))) (=> x5119 x569)))))))
(assert (x4842 x3752))
(assert (= (or x2010 x3021) x879))
(assert (x4842 x979))
(assert (= x4311 (or x4370 x4312)))
(assert (x4842 x166))
(assert (x4842 x3422))
(assert (= x3390 (or x3454 x148)))
(assert (x4842 x1973))
(assert (x4842 x5369))
(assert (= x2022 (and x2541 x850)))
(assert (x4842 x3902))
(assert (=> (<= x2387 10000) (= (x956 x2387) (x636 x2387))))
(assert (x4842 x5229))
(assert (x4842 x5273))
(assert (x4842 x715))
(assert (= x1650 (and x139 (not x4278))))
(assert (= x1876 (and x1030 x3448)))
(assert (x4842 x3883))
(assert (= (or x2454 x209) x5088))
(assert (= x2204 (=> (and (= (= x2548 0) x848) (or (and (= (x2828 (x636 x2548) x4778 0) x3796) (not x848)) (and x848 (= x4237 (x5250 x4778 2))))) x1339)))
(assert (= (x4585 (x956 1313710058)) 1313710058))
(assert (= (or x1229 x2061) x921))
(assert (x5391 x3203))
(assert (x4842 x1237))
(assert (x4842 x5110))
(assert (x4842 x842))
(assert (= (and x4707 (not x3597)) x5308))
(assert (= x925 (and x3641 x3810)))
(assert (= x2310 (and (not x625) x768)))
(assert (x4842 x4418))
(assert (x4842 x1046))
(assert (x4842 x478))
(assert (x645 x3532))
(assert (= x139 (and x2735 x3144)))
(check-sat)
(exit)