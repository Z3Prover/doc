(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1037 0)) (((x904 (x504 Int)) (x1700 (x1412 x1037) (x1425 Int)) (x1515 (x707 x1037) (x457 x1037) (x1741 Int)))))
(declare-fun x839 () Bool)
(declare-fun x1761 () Int)
(declare-fun x2068 () Int)
(declare-fun x1692 () Bool)
(declare-fun x1043 () Int)
(declare-fun x208 () Bool)
(declare-fun x172 () Int)
(declare-fun x1886 (x1037) Int)
(declare-fun x779 () Int)
(declare-fun x717 () Bool)
(declare-fun x992 () Int)
(declare-fun x54 () Bool)
(declare-fun x2006 () Int)
(declare-fun x1044 () Bool)
(declare-fun x1531 () Int)
(declare-fun x1904 () Bool)
(declare-fun x1041 () Int)
(declare-fun x1789 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x765 () Bool)
(declare-fun x106 () Bool)
(declare-fun x651 () Bool)
(declare-fun x1968 () Bool)
(declare-fun x507 (x1037) Int)
(declare-fun x610 () Int)
(declare-fun x1501 () Bool)
(declare-fun x944 () Bool)
(declare-fun x2109 () Int)
(declare-fun x875 () Int)
(declare-fun x1833 () Int)
(declare-fun x246 () Bool)
(declare-fun x527 () Bool)
(declare-fun x1814 () Int)
(declare-fun x1844 () Bool)
(declare-fun x205 () Bool)
(declare-fun x2004 (Int Int) Int)
(declare-fun x1354 () Int)
(declare-fun x2059 () Int)
(declare-fun x1813 () Bool)
(declare-fun x1862 () Int)
(declare-fun x1835 () Int)
(declare-fun x1965 () Int)
(declare-fun x546 () Int)
(declare-fun x48 () Int)
(declare-fun x1857 () Int)
(declare-fun x1659 (x1037) Int)
(declare-fun x901 () Int)
(declare-fun x1176 () Int)
(declare-fun x996 () Int)
(declare-fun x1811 () Bool)
(declare-fun x652 () Int)
(declare-fun x1000 () Int)
(declare-fun x46 () Int)
(declare-fun x1310 () Int)
(declare-fun x62 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x1315 () Int)
(declare-fun x1721 () Int)
(declare-fun x1118 () Int)
(declare-fun x886 () Int)
(declare-fun x319 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1277 () Int)
(declare-fun x2108 () Bool)
(declare-fun x470 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x2162 () Int)
(declare-fun x1634 () Bool)
(declare-fun x284 () Int)
(declare-fun x910 () Bool)
(declare-fun x571 () Int)
(declare-fun x741 () x1037)
(declare-fun x179 () Int)
(declare-fun x1013 () Int)
(declare-fun x1275 () Int)
(declare-fun x261 () Int)
(declare-fun x253 () Bool)
(declare-fun x842 () Int)
(declare-fun x1347 () Int)
(declare-fun x986 () Int)
(declare-fun x1513 () Int)
(declare-fun x1190 () Int)
(declare-fun x1273 () Int)
(declare-fun x415 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x1500 () Int)
(declare-fun x1689 () Int)
(declare-fun x1150 () Bool)
(declare-fun x551 () Int)
(declare-fun x2180 () Int)
(declare-fun x775 () Int)
(declare-fun x1642 () Int)
(declare-fun x1639 () Bool)
(declare-fun x1630 () Int)
(declare-fun x1718 () Int)
(declare-fun x1223 () Int)
(declare-fun x1564 () Int)
(declare-fun x2101 () Int)
(declare-fun x1547 () Bool)
(declare-fun x1446 () Int)
(declare-fun x1755 () Int)
(declare-fun x1528 () Bool)
(declare-fun x1311 () Int)
(declare-fun x1403 () Bool)
(declare-fun x2072 () Int)
(declare-fun x1807 (x1037) Int)
(declare-fun x1100 () Int)
(declare-fun x1858 () Bool)
(declare-fun x509 () Int)
(declare-fun x603 () Int)
(declare-fun x1217 () Bool)
(declare-fun x565 () Int)
(declare-fun x751 () Bool)
(declare-fun x867 () Int)
(declare-fun x459 () Int)
(declare-fun x1836 () Bool)
(declare-fun x1320 () Int)
(declare-fun x2099 () Int)
(declare-fun x1116 () Int)
(declare-fun x1831 () Int)
(declare-fun x1705 () Int)
(declare-fun x648 () Int)
(declare-fun x675 () Bool)
(declare-fun x138 () Int)
(declare-fun x729 () Bool)
(declare-fun x670 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x373 (x1037) Int)
(declare-fun x1747 () Int)
(declare-fun x1691 () Bool)
(declare-fun x411 () Int)
(declare-fun x1892 () Int)
(declare-fun x29 () Int)
(declare-fun x1960 () Bool)
(declare-fun x1469 () x1037)
(declare-fun x830 () Int)
(declare-fun x1157 () Bool)
(declare-fun x585 () Int)
(declare-fun x1943 () Int)
(declare-fun x635 () x1037)
(declare-fun x579 () Bool)
(declare-fun x1738 () Int)
(declare-fun x162 () Int)
(declare-fun x1211 () Int)
(declare-fun x611 () Int)
(declare-fun x2083 () Bool)
(declare-fun x120 () Bool)
(declare-fun x927 () Int)
(declare-fun x1593 () Int)
(declare-fun x357 () Bool)
(declare-fun x1309 () Int)
(declare-fun x1654 () Int)
(declare-fun x1745 () Bool)
(declare-fun x747 () Int)
(declare-fun x719 () Bool)
(declare-fun x1724 () Int)
(declare-fun x1582 () Bool)
(declare-fun x746 () Bool)
(declare-fun x2049 () Int)
(declare-fun x1299 () Int)
(declare-fun x1653 () Bool)
(declare-fun x195 () Bool)
(declare-fun x1435 () Int)
(declare-fun x793 () Bool)
(declare-fun x2098 () Int)
(declare-fun x483 () Int)
(declare-fun x1649 () Int)
(declare-fun x1701 () Int)
(declare-fun x1622 () Int)
(declare-fun x1703 () Bool)
(declare-fun x248 () Int)
(declare-fun x1255 () Bool)
(declare-fun x2118 () Int)
(declare-fun x715 () Bool)
(declare-fun x1039 () Int)
(declare-fun x1251 () Bool)
(declare-fun x1602 () Int)
(declare-fun x1312 () Int)
(declare-fun x4 () Int)
(declare-fun x1587 () Int)
(declare-fun x704 () Int)
(declare-fun x957 () Int)
(declare-fun x115 () Int)
(declare-fun x2 () Int)
(declare-fun x1552 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x1613 () Int)
(declare-fun x1307 () Bool)
(declare-fun x1409 (Int) Int)
(declare-fun x1612 () Int)
(declare-fun x550 () Bool)
(declare-fun x1796 () Int)
(declare-fun x1269 () Int)
(declare-fun x390 () Int)
(declare-fun x1732 () Int)
(declare-fun x1453 () Int)
(declare-fun x55 () Int)
(declare-fun x1243 () Int)
(declare-fun x85 () Int)
(declare-fun x185 () Bool)
(declare-fun x151 () Bool)
(declare-fun x750 () Int)
(declare-fun x549 () Bool)
(declare-fun x2095 (x1037) Int)
(declare-fun x1967 () Int)
(declare-fun x1006 () Bool)
(declare-fun x1686 () Int)
(declare-fun x304 () Int)
(declare-fun x435 () Int)
(declare-fun x2062 () Int)
(declare-fun x1972 () Int)
(declare-fun x1503 () Bool)
(declare-fun x189 () Int)
(declare-fun x1096 () Int)
(declare-fun x1638 () Int)
(declare-fun x1382 () Bool)
(declare-fun x701 () Int)
(declare-fun x52 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x1816 () Int)
(declare-fun x888 () Int)
(declare-fun x474 () Bool)
(declare-fun x1365 () Int)
(declare-fun x75 () Int)
(declare-fun x1297 () Bool)
(declare-fun x187 () Int)
(declare-fun x1032 () Bool)
(declare-fun x876 () Bool)
(declare-fun x1526 () Int)
(declare-fun x965 () Int)
(declare-fun x510 () Bool)
(declare-fun x1398 () Int)
(declare-fun x1487 () Int)
(declare-fun x1774 () Int)
(declare-fun x395 (x1037) Int)
(declare-fun x359 () Int)
(declare-fun x2030 () Bool)
(declare-fun x392 () Bool)
(declare-fun x468 () Int)
(declare-fun x1577 () Int)
(declare-fun x837 () Bool)
(declare-fun x1250 () Int)
(declare-fun x1994 () Int)
(declare-fun x758 () Bool)
(declare-fun x213 () Int)
(declare-fun x814 () Bool)
(declare-fun x1739 () Int)
(declare-fun x296 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x231 () Int)
(declare-fun x967 () Bool)
(declare-fun x156 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x91 () Int)
(declare-fun x1989 () Int)
(declare-fun x1635 () Int)
(declare-fun x1420 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x883 () Bool)
(declare-fun x1676 () Bool)
(declare-fun x2186 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x929 (x1037) Int)
(declare-fun x2047 () x1037)
(declare-fun x872 () Int)
(declare-fun x93 (Int) Int)
(declare-fun x1158 () Int)
(declare-fun x165 () Int)
(declare-fun x203 () Int)
(declare-fun x680 () Bool)
(declare-fun x1756 () Int)
(declare-fun x623 () Bool)
(declare-fun x897 () Int)
(declare-fun x1542 () Bool)
(declare-fun x215 () Int)
(declare-fun x143 () Int)
(declare-fun x586 () Bool)
(declare-fun x1710 () x1037)
(declare-fun x2040 () Int)
(declare-fun x1652 () Int)
(declare-fun x1533 () Int)
(declare-fun x1071 () Bool)
(declare-fun x1941 () Int)
(declare-fun x1419 () Int)
(declare-fun x1348 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x1821 () Int)
(declare-fun x1396 () Bool)
(declare-fun x339 () Bool)
(declare-fun x251 () Bool)
(declare-fun x324 (x1037) Int)
(declare-fun x1279 () Int)
(declare-fun x797 () Int)
(declare-fun x624 () x1037)
(declare-fun x94 () Int)
(declare-fun x286 () Int)
(declare-fun x1272 () Int)
(declare-fun x1722 () Int)
(declare-fun x932 () Bool)
(declare-fun x2128 () Int)
(declare-fun x812 () Bool)
(declare-fun x2065 () Int)
(declare-fun x898 () Bool)
(declare-fun x682 () Bool)
(declare-fun x42 (x1037) Int)
(declare-fun x905 () Int)
(declare-fun x1620 () Bool)
(declare-fun x318 () Int)
(declare-fun x548 () Int)
(declare-fun x1859 () Bool)
(declare-fun x1253 () Int)
(declare-fun x2152 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x126 () Int)
(declare-fun x1947 () Int)
(declare-fun x2070 () Bool)
(declare-fun x1218 () Int)
(declare-fun x1050 () Int)
(declare-fun x496 () Int)
(declare-fun x769 () Int)
(declare-fun x1014 () Int)
(declare-fun x2106 () x1037)
(declare-fun x1986 () Bool)
(declare-fun x1246 () Int)
(declare-fun x1970 () Int)
(declare-fun x240 () Int)
(declare-fun x689 () Int)
(declare-fun x728 () Bool)
(declare-fun x1936 () Int)
(declare-fun x716 () Bool)
(declare-fun x799 () Int)
(declare-fun x795 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x1554 () Int)
(declare-fun x1655 () Int)
(declare-fun x1666 () Int)
(declare-fun x1493 () Int)
(declare-fun x1436 () Int)
(declare-fun x2060 (Int) Int)
(declare-fun x1660 () Bool)
(declare-fun x2131 () Int)
(declare-fun x133 () Int)
(declare-fun x1938 () Int)
(declare-fun x616 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x1742 () Int)
(declare-fun x1008 () Bool)
(declare-fun x233 () Int)
(declare-fun x1853 () Int)
(declare-fun x1215 () Int)
(declare-fun x1685 () Bool)
(declare-fun x1555 () Int)
(declare-fun x815 () Int)
(declare-fun x1448 () Int)
(declare-fun x1016 () Bool)
(declare-fun x1785 () Int)
(declare-fun x121 () Int)
(declare-fun x823 () Int)
(declare-fun x744 () Int)
(declare-fun x703 () Int)
(declare-fun x1199 () Bool)
(declare-fun x1962 () Int)
(declare-fun x721 () Int)
(declare-fun x1510 () Int)
(declare-fun x1152 () Int)
(declare-fun x1402 () Bool)
(declare-fun x125 () Bool)
(declare-fun x272 () Bool)
(declare-fun x1075 (x1037) Int)
(declare-fun x1316 () Int)
(declare-fun x1912 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x218 () Int)
(declare-fun x1102 () Int)
(declare-fun x420 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x977 () Int)
(declare-fun x1991 () Int)
(declare-fun x437 () Bool)
(declare-fun x887 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x466 () Int)
(declare-fun x950 () Int)
(declare-fun x794 () Bool)
(declare-fun x1629 () Int)
(declare-fun x1015 () Int)
(declare-fun x24 () Int)
(declare-fun x1906 () Bool)
(declare-fun x913 () Int)
(declare-fun x238 () Int)
(declare-fun x1336 () Int)
(declare-fun x1196 () Int)
(declare-fun x102 () Int)
(declare-fun x1271 () Bool)
(declare-fun x11 () Int)
(declare-fun x1834 () Bool)
(declare-fun x592 () x1037)
(declare-fun x773 () Int)
(declare-fun x1494 () Int)
(declare-fun x1734 () Bool)
(declare-fun x1089 () Int)
(declare-fun x787 () Int)
(declare-fun x2113 () Bool)
(declare-fun x480 () Bool)
(declare-fun x1292 () Int)
(declare-fun x541 () Bool)
(declare-fun x1737 () Int)
(declare-fun x1353 () Int)
(declare-fun x1376 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x755 () Int)
(declare-fun x1729 () Int)
(declare-fun x576 () Int)
(declare-fun x146 () Int)
(declare-fun x1618 () Int)
(declare-fun x2053 () Bool)
(declare-fun x1470 () Int)
(declare-fun x864 () Int)
(declare-fun x1147 () Int)
(declare-fun x1848 () Bool)
(declare-fun x1078 () Int)
(declare-fun x1529 () Bool)
(declare-fun x605 () Bool)
(declare-fun x1342 () Int)
(declare-fun x1007 () Int)
(declare-fun x2027 () Int)
(declare-fun x192 () Bool)
(declare-fun x2031 () Bool)
(declare-fun x217 () Bool)
(declare-fun x2011 () Int)
(declare-fun x276 () x1037)
(declare-fun x858 () Int)
(declare-fun x2055 () Bool)
(declare-fun x361 () Int)
(declare-fun x625 () Int)
(declare-fun x1570 (Int) Int)
(declare-fun x958 () Bool)
(declare-fun x8 () Int)
(declare-fun x1795 () Int)
(declare-fun x523 () Int)
(declare-fun x1022 () Int)
(declare-fun x309 () Int)
(declare-fun x1534 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x17 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1699 () Int)
(declare-fun x1559 () Int)
(declare-fun x451 () Bool)
(declare-fun x471 () Bool)
(declare-fun x134 () Bool)
(declare-fun x396 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x1065 () Int)
(declare-fun x449 () Bool)
(declare-fun x959 () Int)
(declare-fun x826 () Int)
(declare-fun x31 () Int)
(declare-fun x694 () Int)
(declare-fun x320 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x281 () Bool)
(declare-fun x171 () Int)
(declare-fun x832 () Bool)
(declare-fun x817 () Int)
(declare-fun x1885 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1578 () x1037)
(declare-fun x1544 () Int)
(declare-fun x819 () Int)
(declare-fun x1298 () Int)
(declare-fun x2078 () Int)
(declare-fun x1424 () Bool)
(declare-fun x1168 () Int)
(declare-fun x597 () Bool)
(declare-fun x1709 () Int)
(declare-fun x685 (Int) Int)
(declare-fun x2052 () Int)
(declare-fun x82 () Int)
(declare-fun x250 () Int)
(declare-fun x1617 () Bool)
(declare-fun x23 () Int)
(declare-fun x2093 () Int)
(declare-fun x2048 () Int)
(declare-fun x1723 () Int)
(declare-fun x584 () Int)
(declare-fun x1370 () Int)
(declare-fun x1588 () Int)
(declare-fun x2064 (x1037) Int)
(declare-fun x857 () Int)
(declare-fun x684 () Int)
(declare-fun x434 () Int)
(declare-fun x1695 () Int)
(declare-fun x226 () Int)
(declare-fun x277 () Bool)
(declare-fun x1733 () Int)
(declare-fun x1987 () Int)
(declare-fun x1021 () Bool)
(declare-fun x1358 () Int)
(declare-fun x975 () Bool)
(declare-fun x2149 () Int)
(declare-fun x877 (Int) Int)
(declare-fun x423 () Int)
(declare-fun x214 () Int)
(declare-fun x2167 () Int)
(declare-fun x1778 (Int Int) Int)
(declare-fun x1132 () Bool)
(declare-fun x460 () Bool)
(declare-fun x878 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x1583 () Int)
(declare-fun x1252 () Int)
(declare-fun x56 () Int)
(declare-fun x2183 () Bool)
(declare-fun x308 () Int)
(declare-fun x1873 () Int)
(declare-fun x2009 () Int)
(declare-fun x403 () Int)
(declare-fun x737 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x2080 () Int)
(declare-fun x1484 () Int)
(declare-fun x990 () Int)
(declare-fun x1227 () Int)
(declare-fun x380 () Int)
(declare-fun x2121 () Bool)
(declare-fun x942 () Int)
(declare-fun x1958 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x879 () Int)
(declare-fun x3 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x922 () Int)
(declare-fun x2085 () Int)
(declare-fun x1120 () Int)
(declare-fun x531 () Bool)
(declare-fun x348 () Int)
(declare-fun x2008 () Bool)
(declare-fun x2116 () Int)
(declare-fun x2063 () Int)
(declare-fun x311 () Bool)
(declare-fun x283 () Int)
(declare-fun x1319 () Bool)
(declare-fun x2020 () Int)
(declare-fun x429 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1717 () Int)
(declare-fun x884 () Bool)
(declare-fun x45 () x1037)
(declare-fun x860 () Int)
(declare-fun x1988 (Int) Int)
(declare-fun x1954 () Bool)
(declare-fun x6 () Bool)
(declare-fun x1876 () Int)
(declare-fun x124 () Int)
(declare-fun x498 () Int)
(declare-fun x1197 () Bool)
(declare-fun x1407 () Int)
(declare-fun x893 () Int)
(declare-fun x2135 () x1037)
(declare-fun x1682 () Bool)
(declare-fun x2148 () Int)
(declare-fun x2036 () Int)
(declare-fun x1801 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1997 () Bool)
(declare-fun x109 () Int)
(declare-fun x856 () x1037)
(declare-fun x654 () Int)
(declare-fun x1538 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x865 () Int)
(declare-fun x1314 () Int)
(declare-fun x1001 () Bool)
(declare-fun x545 () Int)
(declare-fun x595 () Int)
(declare-fun x973 () Bool)
(declare-fun x338 () Bool)
(declare-fun x831 () Int)
(declare-fun x1524 () Int)
(declare-fun x2023 () Bool)
(declare-fun x590 () Int)
(declare-fun x2125 () Int)
(declare-fun x381 () Int)
(declare-fun x1092 () Bool)
(declare-fun x79 () Int)
(declare-fun x628 () Int)
(declare-fun x709 () Bool)
(declare-fun x1352 () Int)
(declare-fun x1276 () Int)
(declare-fun x547 () Bool)
(declare-fun x352 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x303 () Int)
(declare-fun x1101 () Bool)
(declare-fun x119 () Bool)
(declare-fun x997 () Bool)
(declare-fun x1282 () Int)
(declare-fun x270 () Int)
(declare-fun x1114 () Int)
(declare-fun x145 () Bool)
(declare-fun x808 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x833 () Int)
(declare-fun x1492 () Int)
(declare-fun x1112 () Bool)
(declare-fun x278 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x609 () Bool)
(declare-fun x2179 () Int)
(declare-fun x78 () Bool)
(declare-fun x2155 () Int)
(declare-fun x961 () Int)
(declare-fun x1122 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1731 () Int)
(declare-fun x1990 () Int)
(declare-fun x393 () Int)
(declare-fun x1441 () Int)
(declare-fun x1360 () Bool)
(declare-fun x235 () x1037)
(declare-fun x1829 () x1037)
(declare-fun x966 () Int)
(declare-fun x866 () Bool)
(declare-fun x532 () Int)
(declare-fun x561 () Int)
(declare-fun x695 () Int)
(declare-fun x948 () Int)
(declare-fun x1053 () Int)
(declare-fun x149 () Int)
(declare-fun x1899 () Int)
(declare-fun x479 (x1037) Int)
(declare-fun x962 () Int)
(declare-fun x1974 () Int)
(declare-fun x759 () Bool)
(declare-fun x30 () Int)
(declare-fun x81 () Int)
(declare-fun x1939 () Int)
(declare-fun x619 () Int)
(declare-fun x1878 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x953 () Int)
(declare-fun x58 (x1037) Int)
(declare-fun x1442 (x1037) Int)
(declare-fun x629 () Int)
(declare-fun x144 () Int)
(declare-fun x1698 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x1062 () Int)
(declare-fun x1815 () Int)
(declare-fun x1351 () Bool)
(declare-fun x312 () Int)
(declare-fun x1145 () Int)
(declare-fun x1473 () Bool)
(declare-fun x1851 () x1037)
(declare-fun x516 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x374 () Bool)
(declare-fun x1241 () Int)
(declare-fun x476 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x1182 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1328 () Int)
(declare-fun x360 () Bool)
(declare-fun x343 () Int)
(declare-fun x222 () Int)
(declare-fun x257 () Int)
(declare-fun x1810 () Int)
(declare-fun x129 () Int)
(declare-fun x1229 () Int)
(declare-fun x1377 () Int)
(declare-fun x920 () Int)
(declare-fun x1786 () Bool)
(declare-fun x573 () Int)
(declare-fun x463 () Bool)
(declare-fun x806 () Bool)
(declare-fun x2102 () Bool)
(declare-fun x103 () Int)
(declare-fun x130 () Int)
(declare-fun x1949 () Bool)
(declare-fun x578 () Int)
(declare-fun x1984 () Int)
(declare-fun x722 () Int)
(declare-fun x1791 () Int)
(declare-fun x784 () Int)
(declare-fun x1959 () Int)
(declare-fun x1126 () Int)
(declare-fun x1909 () Bool)
(declare-fun x1058 () Int)
(declare-fun x356 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x1028 () Int)
(declare-fun x1490 () Bool)
(declare-fun x1485 () Int)
(declare-fun x1497 () x1037)
(declare-fun x1237 () Int)
(declare-fun x1159 () Bool)
(declare-fun x952 () Int)
(declare-fun x1569 () Int)
(declare-fun x1890 () Int)
(declare-fun x259 () Int)
(declare-fun x638 () Int)
(declare-fun x672 () Bool)
(declare-fun x50 () Int)
(declare-fun x1505 () Int)
(declare-fun x313 () Int)
(declare-fun x890 () Int)
(declare-fun x432 () Int)
(declare-fun x976 () Bool)
(declare-fun x465 () Int)
(declare-fun x1864 () Bool)
(declare-fun x422 () Int)
(declare-fun x1665 () Int)
(declare-fun x1455 () Int)
(declare-fun x1598 () Int)
(declare-fun x1750 () Int)
(declare-fun x643 () Int)
(declare-fun x1474 () Int)
(declare-fun x1769 () Bool)
(declare-fun x1140 () Int)
(declare-fun x850 () Int)
(declare-fun x1445 (Int) Int)
(declare-fun x978 () Bool)
(declare-fun x742 () Int)
(declare-fun x88 () Int)
(declare-fun x2172 () Int)
(declare-fun x1905 () Bool)
(declare-fun x206 () Bool)
(declare-fun x1367 () Int)
(declare-fun x1550 () Bool)
(declare-fun x1444 () Int)
(declare-fun x168 () Bool)
(declare-fun x621 () Int)
(declare-fun x1880 () Bool)
(declare-fun x1205 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1852 () Int)
(declare-fun x1855 () Bool)
(declare-fun x1212 (Int) Int)
(declare-fun x1357 () Int)
(declare-fun x426 () Bool)
(declare-fun x569 () Int)
(declare-fun x660 () Int)
(declare-fun x637 () Int)
(declare-fun x2144 () Int)
(declare-fun x1331 () Bool)
(declare-fun x293 () Bool)
(declare-fun x1979 () Bool)
(declare-fun x1193 () Int)
(declare-fun x1760 () Int)
(declare-fun x1339 () Bool)
(declare-fun x617 () Int)
(declare-fun x2103 () Bool)
(declare-fun x1371 () Int)
(declare-fun x1854 () x1037)
(declare-fun x835 () Int)
(declare-fun x1601 () Int)
(declare-fun x372 (x1037) Int)
(declare-fun x288 () Int)
(declare-fun x1832 () Int)
(declare-fun x781 () Int)
(declare-fun x41 () Int)
(declare-fun x725 () Int)
(declare-fun x161 () Int)
(declare-fun x158 () Int)
(declare-fun x2003 () Int)
(declare-fun x377 () Bool)
(declare-fun x34 () Int)
(declare-fun x73 () Bool)
(declare-fun x26 () Bool)
(declare-fun x188 () Int)
(declare-fun x239 () Int)
(declare-fun x87 () Int)
(declare-fun x1850 () Int)
(declare-fun x300 () Int)
(declare-fun x452 () Int)
(declare-fun x1935 () Int)
(declare-fun x1915 (x1037) Int)
(declare-fun x1187 () Int)
(declare-fun x753 () Bool)
(declare-fun x80 () Int)
(declare-fun x1726 () Bool)
(declare-fun x247 () Int)
(declare-fun x1234 () Int)
(declare-fun x903 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x1996 () Int)
(declare-fun x1203 () Int)
(declare-fun x607 () Int)
(declare-fun x937 () Int)
(declare-fun x896 () Bool)
(declare-fun x1679 () Int)
(declare-fun x1651 () Int)
(declare-fun x1919 () x1037)
(declare-fun x139 () Int)
(declare-fun x1798 () Int)
(declare-fun x845 () Int)
(declare-fun x764 () Int)
(declare-fun x207 () Bool)
(declare-fun x664 () Bool)
(declare-fun x1843 () Int)
(declare-fun x1224 () Int)
(declare-fun x1321 () Int)
(declare-fun x47 () Int)
(declare-fun x698 () Int)
(declare-fun x1177 () Bool)
(declare-fun x1163 (x1037) Int)
(declare-fun x201 () Bool)
(declare-fun x36 () Bool)
(declare-fun x405 () Int)
(declare-fun x1804 () Bool)
(declare-fun x35 (x1037) Int)
(declare-fun x1384 () Bool)
(declare-fun x2050 () Int)
(declare-fun x22 () Bool)
(declare-fun x436 () Int)
(declare-fun x273 () Bool)
(declare-fun x2028 () Int)
(declare-fun x378 () x1037)
(declare-fun x1812 () Int)
(declare-fun x1604 () Bool)
(declare-fun x83 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1194 (x1037) Int)
(declare-fun x843 (x1037) Int)
(declare-fun x1086 () Int)
(declare-fun x1447 () Int)
(declare-fun x254 () Int)
(declare-fun x989 () Int)
(declare-fun x956 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x44 () Int)
(declare-fun x1980 () Bool)
(declare-fun x1461 () Int)
(declare-fun x574 () Bool)
(declare-fun x1995 () Int)
(declare-fun x1401 () Int)
(declare-fun x221 () Int)
(declare-fun x181 () Int)
(declare-fun x1822 () Int)
(declare-fun x971 () Bool)
(declare-fun x861 () Int)
(declare-fun x1677 () Int)
(declare-fun x112 () Bool)
(declare-fun x494 () Int)
(declare-fun x900 () Bool)
(declare-fun x559 () Int)
(declare-fun x475 () Int)
(declare-fun x656 () Int)
(declare-fun x462 () Bool)
(declare-fun x1031 () Int)
(declare-fun x1334 () Bool)
(declare-fun x132 () Int)
(declare-fun x563 () Int)
(declare-fun x131 () Int)
(declare-fun x1712 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x1285 () Int)
(declare-fun x894 () Int)
(declare-fun x1879 () Int)
(declare-fun x1520 (x1037) Int)
(declare-fun x266 (x1037) Int)
(declare-fun x1457 () Bool)
(declare-fun x1563 () Int)
(declare-fun x1232 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x224 () Int)
(declare-fun x447 () Int)
(declare-fun x533 () Int)
(declare-fun x438 () Int)
(declare-fun x521 () Bool)
(declare-fun x443 () Int)
(declare-fun x916 () Int)
(declare-fun x911 () Bool)
(declare-fun x1508 () Int)
(declare-fun x1523 () Int)
(declare-fun x1185 () Bool)
(declare-fun x666 () Bool)
(declare-fun x645 () Int)
(declare-fun x803 () Int)
(declare-fun x157 () Int)
(declare-fun x862 () Bool)
(declare-fun x2001 () Int)
(declare-fun x1220 () Bool)
(declare-fun x1803 () Int)
(declare-fun x1616 () Bool)
(declare-fun x1762 () Int)
(declare-fun x502 () Int)
(declare-fun x1845 () Int)
(declare-fun x1828 () Bool)
(declare-fun x848 () Int)
(declare-fun x1752 () Int)
(declare-fun x718 () Int)
(declare-fun x1216 () Int)
(declare-fun x1481 () Int)
(declare-fun x960 () Int)
(declare-fun x778 () Bool)
(declare-fun x485 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x1408 () Int)
(declare-fun x1395 () Int)
(declare-fun x838 (x1037) Int)
(declare-fun x1657 () Bool)
(declare-fun x1647 () Int)
(declare-fun x1466 (x1037) Int)
(declare-fun x2105 () Int)
(declare-fun x1973 () Int)
(declare-fun x1175 () Int)
(declare-fun x1867 () Bool)
(declare-fun x711 () Int)
(declare-fun x358 () Int)
(declare-fun x2037 () Bool)
(declare-fun x1704 (x1037) Int)
(declare-fun x2154 () Int)
(declare-fun x768 () Int)
(declare-fun x1040 () Int)
(declare-fun x25 () Int)
(declare-fun x14 () Int)
(declare-fun x2139 () Bool)
(declare-fun x517 () Int)
(declare-fun x1838 () Bool)
(declare-fun x620 () Int)
(declare-fun x2182 () Int)
(declare-fun x1206 () Int)
(declare-fun x1287 () Bool)
(declare-fun x210 () Int)
(declare-fun x2126 () Int)
(declare-fun x655 () Int)
(declare-fun x891 (x1037) Int)
(declare-fun x529 (Int) Int)
(declare-fun x1977 () Bool)
(declare-fun x95 () Int)
(declare-fun x934 () Int)
(declare-fun x292 (x1037) Int)
(declare-fun x993 () Int)
(declare-fun x1788 () Int)
(declare-fun x1746 () Bool)
(declare-fun x332 () Bool)
(declare-fun x2136 () Int)
(declare-fun x1303 () Bool)
(declare-fun x614 () Int)
(declare-fun x2092 () Bool)
(declare-fun x72 () Int)
(declare-fun x349 () Int)
(declare-fun x2077 () Bool)
(declare-fun x1985 () Int)
(declare-fun x1259 () Int)
(declare-fun x1633 () Bool)
(declare-fun x1539 () Int)
(declare-fun x788 () Int)
(declare-fun x1694 () Int)
(declare-fun x1776 () Int)
(declare-fun x1123 () Int)
(declare-fun x1636 () Bool)
(declare-fun x1069 () Int)
(declare-fun x236 () Bool)
(declare-fun x881 () Int)
(declare-fun x321 () Bool)
(declare-fun x391 () Int)
(declare-fun x1458 () Int)
(declare-fun x268 () Int)
(declare-fun x2000 () Int)
(declare-fun x1151 () Int)
(declare-fun x1596 () Int)
(declare-fun x1895 () Int)
(declare-fun x1258 () Int)
(declare-fun x912 () Int)
(declare-fun x2160 () Bool)
(declare-fun x1590 () Int)
(declare-fun x513 () Int)
(declare-fun x444 () Int)
(declare-fun x1562 () Int)
(declare-fun x2022 () Bool)
(declare-fun x739 () Int)
(declare-fun x1061 () Bool)
(declare-fun x2107 () Int)
(declare-fun x1083 () Int)
(declare-fun x1343 () Int)
(declare-fun x1430 () Int)
(declare-fun x1869 () Bool)
(declare-fun x1527 (Int) Int)
(declare-fun x1561 () Int)
(declare-fun x852 () Bool)
(declare-fun x1067 () Int)
(declare-fun x816 () Bool)
(declare-fun x419 () Int)
(declare-fun x1174 () Int)
(declare-fun x430 () x1037)
(declare-fun x917 () Bool)
(declare-fun x262 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x2024 () Int)
(declare-fun x351 () Int)
(declare-fun x482 () Bool)
(declare-fun x333 () Int)
(declare-fun x542 () Int)
(declare-fun x71 () Int)
(declare-fun x1661 () Bool)
(declare-fun x59 () Bool)
(declare-fun x1093 () Int)
(declare-fun x2138 () Bool)
(declare-fun x1410 () Int)
(declare-fun x1775 () Int)
(declare-fun x1934 () Bool)
(declare-fun x663 () Bool)
(declare-fun x223 () Int)
(declare-fun x114 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x714 () Int)
(declare-fun x2114 () Int)
(declare-fun x1104 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x554 () Bool)
(declare-fun x1707 () Int)
(declare-fun x469 () Bool)
(declare-fun x853 () Int)
(declare-fun x593 () Bool)
(declare-fun x1896 () Int)
(declare-fun x2038 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x783 () Int)
(declare-fun x454 () Int)
(declare-fun x2133 () Bool)
(declare-fun x2010 () Int)
(declare-fun x173 () Int)
(declare-fun x1427 () Int)
(declare-fun x2142 () Int)
(declare-fun x2044 () Int)
(declare-fun x74 () Int)
(declare-fun x1170 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x634 (x1037) Int)
(declare-fun x404 () Int)
(declare-fun x735 () Bool)
(declare-fun x940 () Int)
(declare-fun x1225 () Int)
(declare-fun x501 () Int)
(declare-fun x366 () Bool)
(declare-fun x924 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x777 () Bool)
(declare-fun x100 () Int)
(declare-fun x478 () Bool)
(declare-fun x306 () Bool)
(declare-fun x880 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x649 () Int)
(declare-fun x1099 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x413 () Bool)
(declare-fun x492 () Bool)
(declare-fun x902 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x785 () Int)
(declare-fun x174 (Int) Int)
(declare-fun x12 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x60 () Int)
(declare-fun x1708 () Int)
(declare-fun x167 () Bool)
(declare-fun x473 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x1901 (x1037) Int)
(declare-fun x2032 () Bool)
(declare-fun x774 () Int)
(declare-fun x428 () Int)
(declare-fun x484 () Int)
(declare-fun x2185 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x921 () Bool)
(declare-fun x2175 () Int)
(declare-fun x1663 () Bool)
(declare-fun x137 () Bool)
(declare-fun x445 () Int)
(declare-fun x1341 () Int)
(declare-fun x1434 () Int)
(declare-fun x1522 () Int)
(declare-fun x984 () Int)
(declare-fun x650 () Bool)
(declare-fun x818 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1186 () Int)
(declare-fun x341 () Bool)
(declare-fun x1322 () Int)
(declare-fun x2076 () Int)
(declare-fun x626 () Int)
(declare-fun x748 () Int)
(declare-fun x2043 () Bool)
(declare-fun x1192 () Int)
(declare-fun x1504 () Int)
(declare-fun x1713 () Int)
(declare-fun x317 () Int)
(declare-fun x1413 () Int)
(declare-fun x1982 () Int)
(declare-fun x1669 () Bool)
(declare-fun x821 () Bool)
(declare-fun x1784 () Int)
(declare-fun x577 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1414 () Int)
(declare-fun x1305 (x1037) Int)
(declare-fun x421 () Bool)
(declare-fun x1450 () Int)
(declare-fun x1894 () Int)
(declare-fun x1681 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x536 () Int)
(declare-fun x153 (Int) Int)
(declare-fun x809 () Bool)
(declare-fun x298 () Int)
(declare-fun x1087 () Bool)
(declare-fun x20 () Bool)
(declare-fun x1782 () x1037)
(declare-fun x334 () Int)
(declare-fun x1780 () Bool)
(declare-fun x2120 () Int)
(declare-fun x2141 () Bool)
(declare-fun x289 () Bool)
(declare-fun x180 () Int)
(declare-fun x362 () Bool)
(declare-fun x647 () Int)
(declare-fun x1110 () Int)
(declare-fun x1060 () Int)
(declare-fun x681 () Int)
(declare-fun x1160 () Int)
(declare-fun x1964 () Int)
(declare-fun x1134 (x1037) Int)
(declare-fun x369 (x1037) Int)
(declare-fun x1799 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1332 () Int)
(declare-fun x1094 () Int)
(declare-fun x923 () Int)
(declare-fun x416 () Int)
(declare-fun x754 () Int)
(declare-fun x1730 () Int)
(declare-fun x544 () Bool)
(declare-fun x1824 () Int)
(declare-fun x2079 () Int)
(declare-fun x606 () Int)
(declare-fun x1546 () Bool)
(declare-fun x1124 () Int)
(declare-fun x1684 () Int)
(declare-fun x285 () Int)
(declare-fun x1366 () Int)
(declare-fun x199 () Int)
(declare-fun x1586 () Int)
(declare-fun x2147 () Bool)
(declare-fun x556 () Bool)
(declare-fun x490 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x575 () Bool)
(declare-fun x1937 () Int)
(declare-fun x43 () Bool)
(declare-fun x661 () Int)
(declare-fun x646 () Int)
(declare-fun x1392 () Int)
(declare-fun x1551 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1106 () Bool)
(declare-fun x686 () Int)
(declare-fun x1771 () Int)
(declare-fun x618 () Int)
(declare-fun x1748 () Int)
(declare-fun x1961 () Bool)
(declare-fun x169 () Int)
(declare-fun x798 () Bool)
(declare-fun x538 () Int)
(declare-fun x770 () Int)
(declare-fun x1244 () Int)
(declare-fun x244 () Int)
(declare-fun x1131 (x1037) Int)
(declare-fun x594 () Int)
(declare-fun x740 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x280 () Int)
(declare-fun x1826 () Int)
(declare-fun x1860 () Int)
(declare-fun x1345 () Int)
(declare-fun x1059 () Bool)
(declare-fun x28 () Int)
(declare-fun x697 () Bool)
(declare-fun x1514 () Int)
(declare-fun x938 () Int)
(declare-fun x1543 () Bool)
(declare-fun x1394 () Int)
(declare-fun x1758 () Int)
(declare-fun x668 () Bool)
(declare-fun x1956 () Int)
(declare-fun x1800 () Int)
(declare-fun x212 () Bool)
(declare-fun x256 () Int)
(declare-fun x1516 () Int)
(declare-fun x1156 () Bool)
(declare-fun x710 () Int)
(declare-fun x1344 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x919 () Bool)
(declare-fun x196 () Int)
(declare-fun x602 () Int)
(declare-fun x1404 () Int)
(declare-fun x152 () Int)
(declare-fun x851 () Int)
(declare-fun x330 () Int)
(declare-fun x943 () Int)
(declare-fun x110 () Int)
(declare-fun x141 () Bool)
(declare-fun x515 () Int)
(declare-fun x871 () Int)
(declare-fun x1421 () Int)
(declare-fun x1030 () Bool)
(declare-fun x108 () Bool)
(declare-fun x315 () Int)
(declare-fun x424 () Int)
(declare-fun x2066 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1169 () Int)
(declare-fun x69 () Int)
(declare-fun x653 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x117 () Int)
(declare-fun x738 () Bool)
(declare-fun x782 () Int)
(declare-fun x243 () Int)
(declare-fun x1308 () Int)
(declare-fun x337 () Int)
(declare-fun x1932 () Int)
(declare-fun x760 () Int)
(declare-fun x386 () Bool)
(declare-fun x1284 () Int)
(declare-fun x228 () Bool)
(declare-fun x1084 () Int)
(declare-fun x1825 () Int)
(declare-fun x99 () Bool)
(declare-fun x271 () Bool)
(declare-fun x1921 () Int)
(declare-fun x1948 () Bool)
(declare-fun x7 () x1037)
(declare-fun x999 () Bool)
(declare-fun x350 () Int)
(declare-fun x1057 () Int)
(declare-fun x868 () Bool)
(declare-fun x1683 () Int)
(declare-fun x802 () Bool)
(declare-fun x805 () Int)
(declare-fun x1406 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x543 () Int)
(declare-fun x813 () Int)
(declare-fun x693 () Int)
(declare-fun x1702 () Bool)
(declare-fun x1571 () Int)
(declare-fun x1877 () Int)
(declare-fun x1213 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x613 () Int)
(declare-fun x731 () Int)
(declare-fun x1346 () Int)
(declare-fun x1201 () Bool)
(declare-fun x1266 () Int)
(declare-fun x979 () Int)
(declare-fun x1749 () Int)
(declare-fun x364 (Int) Int)
(declare-fun x258 () Int)
(declare-fun x723 () Bool)
(declare-fun x1981 () Int)
(declare-fun x1248 () Int)
(declare-fun x1573 () Int)
(declare-fun x522 () x1037)
(declare-fun x1477 () Bool)
(declare-fun x1405 () Int)
(declare-fun x951 () Int)
(declare-fun x1648 () Int)
(declare-fun x1161 () Int)
(declare-fun x9 () Bool)
(declare-fun x508 () Bool)
(declare-fun x92 () Int)
(declare-fun x128 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x820 () Bool)
(declare-fun x1783 () Int)
(declare-fun x401 () Int)
(declare-fun x1456 () Int)
(declare-fun x2157 () Int)
(declare-fun x2012 () Bool)
(declare-fun x1574 () Int)
(declare-fun x1765 () Bool)
(declare-fun x1667 () Int)
(declare-fun x1142 () Int)
(declare-fun x640 () Bool)
(declare-fun x1281 () Int)
(declare-fun x2122 () Int)
(declare-fun x68 () Bool)
(declare-fun x1280 () Int)
(declare-fun x123 () Bool)
(declare-fun x2158 () Int)
(declare-fun x1302 () Bool)
(declare-fun x353 () Int)
(declare-fun x1429 () Int)
(declare-fun x540 () Int)
(declare-fun x245 () x1037)
(declare-fun x968 () Bool)
(declare-fun x111 () Int)
(declare-fun x1204 () Int)
(declare-fun x453 () Bool)
(declare-fun x1889 () Int)
(declare-fun x1164 () Bool)
(declare-fun x804 () Bool)
(declare-fun x237 () Int)
(declare-fun x1472 () Int)
(declare-fun x724 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x1650 () Int)
(declare-fun x1809 () Int)
(declare-fun x2140 () Int)
(declare-fun x1055 () Int)
(declare-fun x1751 () Int)
(declare-fun x1238 () Int)
(declare-fun x225 () Int)
(declare-fun x692 () Int)
(declare-fun x915 () Bool)
(declare-fun x822 () Int)
(declare-fun x713 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x524 () Int)
(declare-fun x191 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x2143 () Int)
(declare-fun x892 () Bool)
(declare-fun x1247 () Int)
(declare-fun x1389 () Bool)
(declare-fun x733 () Bool)
(declare-fun x780 () Bool)
(declare-fun x790 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x2082 () Int)
(declare-fun x1688 () Int)
(declare-fun x101 () Bool)
(declare-fun x40 () Int)
(declare-fun x767 () Int)
(declare-fun x941 () Bool)
(declare-fun x1928 () Int)
(declare-fun x279 () Bool)
(declare-fun x776 () Int)
(declare-fun x1125 () Bool)
(declare-fun x1467 () Int)
(declare-fun x1871 () Int)
(declare-fun x572 () Int)
(declare-fun x1840 () Bool)
(declare-fun x627 () Bool)
(declare-fun x1888 () Int)
(declare-fun x1222 (x1037) Int)
(declare-fun x1108 () Int)
(declare-fun x1662 () Bool)
(declare-fun x148 () Int)
(declare-fun x327 () Int)
(declare-fun x935 () Int)
(declare-fun x1431 () Int)
(declare-fun x1034 () Int)
(declare-fun x1600 () Int)
(declare-fun x197 () Int)
(declare-fun x345 () Int)
(declare-fun x1115 () Int)
(declare-fun x1471 () Bool)
(declare-fun x365 () Int)
(declare-fun x1759 () Bool)
(declare-fun x1325 () Int)
(declare-fun x1210 () Bool)
(declare-fun x97 () Int)
(declare-fun x347 () Int)
(declare-fun x2104 () Bool)
(declare-fun x505 () Int)
(declare-fun x57 () Int)
(declare-fun x633 () x1037)
(declare-fun x1820 () Int)
(declare-fun x2173 () Int)
(declare-fun x1806 () Int)
(declare-fun x506 () Bool)
(declare-fun x587 () Int)
(declare-fun x1536 () Int)
(declare-fun x599 () Int)
(declare-fun x32 () Bool)
(declare-fun x38 () Int)
(declare-fun x1415 () Int)
(declare-fun x873 () Int)
(declare-fun x1753 () Bool)
(declare-fun x642 () Int)
(declare-fun x90 () Int)
(declare-fun x493 () Int)
(declare-fun x1085 () Bool)
(declare-fun x700 () Int)
(declare-fun x417 () Int)
(declare-fun x70 () Int)
(declare-fun x1372 () Bool)
(declare-fun x895 () Int)
(declare-fun x209 () Int)
(declare-fun x166 () Int)
(declare-fun x1491 () Int)
(declare-fun x688 () Int)
(declare-fun x127 () Bool)
(declare-fun x2002 (x1037) Int)
(declare-fun x1743 () Int)
(declare-fun x1870 () Int)
(declare-fun x477 () Bool)
(declare-fun x1993 () Int)
(declare-fun x51 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x383 () Int)
(declare-fun x1924 () Int)
(declare-fun x200 () x1037)
(declare-fun x140 () Bool)
(declare-fun x367 () Int)
(declare-fun x963 () Bool)
(declare-fun x933 () Bool)
(declare-fun x406 () Bool)
(declare-fun x568 () Int)
(declare-fun x2034 () Int)
(declare-fun x39 () Int)
(declare-fun x2156 () Int)
(declare-fun x636 () Int)
(declare-fun x2163 () Bool)
(declare-fun x1038 () Int)
(declare-fun x662 () Bool)
(declare-fun x1575 () x1037)
(declare-fun x1736 () Int)
(declare-fun x282 () Bool)
(declare-fun x1802 () Int)
(declare-fun x385 () Bool)
(declare-fun x1433 () Int)
(declare-fun x557 () Bool)
(declare-fun x135 () Int)
(declare-fun x1624 () Int)
(declare-fun x1668 () Bool)
(declare-fun x690 () Int)
(declare-fun x1239 () Int)
(declare-fun x1029 () Int)
(declare-fun x322 () Int)
(declare-fun x316 () Bool)
(declare-fun x1625 () Int)
(declare-fun x771 () Int)
(declare-fun x163 (Int) Int)
(declare-fun x1907 () Int)
(declare-fun x116 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x535 () Int)
(declare-fun x1393 () Bool)
(declare-fun x1052 () x1037)
(declare-fun x2075 () Int)
(declare-fun x467 () Bool)
(declare-fun x1010 () Int)
(declare-fun x1109 () Bool)
(declare-fun x2164 () Bool)
(declare-fun x988 () Int)
(declare-fun x772 () Int)
(declare-fun x1673 () Bool)
(declare-fun x763 () Int)
(declare-fun x1488 () Int)
(declare-fun x1772 () Int)
(declare-fun x1005 () Int)
(declare-fun x216 () x1037)
(declare-fun x2134 () Bool)
(declare-fun x427 () Bool)
(declare-fun x1090 (x1037) Int)
(declare-fun x232 () Bool)
(declare-fun x2111 () Int)
(declare-fun x76 () Int)
(declare-fun x859 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x1130 () Int)
(declare-fun x885 () Int)
(declare-fun x908 () Bool)
(declare-fun x1611 () Int)
(declare-fun x980 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x297 () Bool)
(declare-fun x1 () Int)
(declare-fun x1165 () Int)
(declare-fun x487 () Int)
(declare-fun x1764 () Int)
(declare-fun x1355 () Bool)
(declare-fun x825 () Int)
(declare-fun x1333 () Int)
(declare-fun x1591 () Int)
(declare-fun x1882 () Int)
(declare-fun x1482 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x2089 () Int)
(declare-fun x175 () Bool)
(declare-fun x1881 () Int)
(declare-fun x1576 () Int)
(declare-fun x335 () Int)
(declare-fun x1214 () Int)
(declare-fun x1865 () Bool)
(declare-fun x310 () Int)
(declare-fun x604 () Bool)
(declare-fun x1438 () Int)
(declare-fun x679 () Bool)
(declare-fun x450 () Int)
(declare-fun x1359 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x176 () Int)
(declare-fun x1291 () Int)
(declare-fun x1893 () Bool)
(declare-fun x1383 () Int)
(declare-fun x446 () Bool)
(declare-fun x1770 () Int)
(declare-fun x495 () Bool)
(declare-fun x305 () Int)
(declare-fun x2150 () Bool)
(declare-fun x269 () Int)
(declare-fun x1567 () Int)
(declare-fun x1306 () Int)
(declare-fun x1097 () x1037)
(declare-fun x202 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x641 () Int)
(declare-fun x1459 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x2026 () Bool)
(declare-fun x761 () Int)
(declare-fun x674 () Int)
(declare-fun x2094 () Bool)
(declare-fun x242 () Int)
(declare-fun x1265 () Int)
(declare-fun x1883 () Int)
(declare-fun x829 () Int)
(declare-fun x220 () Int)
(declare-fun x964 () Int)
(declare-fun x2058 () Int)
(declare-fun x1808 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1619 () Int)
(declare-fun x263 () Bool)
(declare-fun x1361 () Int)
(declare-fun x1264 (x1037) Int)
(declare-fun x27 () Int)
(declare-fun x1581 () Int)
(declare-fun x104 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x113 () Bool)
(declare-fun x622 () x1037)
(declare-fun x2170 () Int)
(declare-fun x1042 () Int)
(declare-fun x985 () Int)
(declare-fun x2161 () Int)
(declare-fun x1009 () Bool)
(declare-fun x874 () Int)
(declare-fun x1744 () Int)
(declare-fun x1643 () Int)
(declare-fun x1714 () Int)
(declare-fun x2074 () Int)
(declare-fun x1615 () Bool)
(declare-fun x807 () Int)
(declare-fun x1644 () Int)
(declare-fun x1340 () Int)
(declare-fun x827 () Bool)
(declare-fun x1426 () Int)
(declare-fun x1172 () Int)
(declare-fun x2054 () Int)
(declare-fun x669 () Int)
(declare-fun x500 () Int)
(declare-fun x708 () Bool)
(declare-fun x1107 () Int)
(declare-fun x193 () Int)
(declare-fun x407 () Int)
(declare-fun x752 () Int)
(declare-fun x1422 () Int)
(declare-fun x1209 () Int)
(declare-fun x329 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x410 () Int)
(declare-fun x863 () Int)
(declare-fun x743 () Int)
(declare-fun x1875 () Bool)
(declare-fun x255 () Int)
(declare-fun x1138 () Int)
(declare-fun x2045 () Int)
(declare-fun x1380 () Int)
(declare-fun x2123 () Int)
(declare-fun x1763 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x37 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x1278 () Int)
(declare-fun x907 () Int)
(declare-fun x734 (Int) Int)
(declare-fun x1375 () Int)
(declare-fun x1507 () Bool)
(declare-fun x229 () x1037)
(declare-fun x1154 () Int)
(declare-fun x1606 () Int)
(declare-fun x182 () Bool)
(declare-fun x589 () Int)
(declare-fun x363 () Int)
(declare-fun x1363 () Int)
(declare-fun x1589 () Bool)
(declare-fun x204 () Bool)
(declare-fun x19 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x1971 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x1933 () Int)
(declare-fun x726 () Int)
(declare-fun x2115 () Int)
(declare-fun x1349 () Int)
(declare-fun x1293 () Int)
(declare-fun x706 () Int)
(declare-fun x488 () Int)
(declare-fun x402 () Bool)
(declare-fun x1202 () x1037)
(declare-fun x1045 () Bool)
(declare-fun x1080 () Int)
(declare-fun x1051 () Int)
(declare-fun x399 () Int)
(declare-fun x234 () Int)
(declare-fun x582 () Int)
(declare-fun x1678 () Bool)
(declare-fun x198 () Bool)
(declare-fun x974 () Int)
(declare-fun x481 () Int)
(declare-fun x1827 () Bool)
(declare-fun x1423 () Int)
(declare-fun x1496 () Int)
(declare-fun x382 () Int)
(declare-fun x844 () Int)
(declare-fun x926 () Bool)
(declare-fun x1754 () Int)
(declare-fun x1257 () Int)
(declare-fun x1048 () Int)
(declare-fun x489 () Int)
(declare-fun x2166 () Int)
(declare-fun x1597 () Int)
(declare-fun x458 () Int)
(declare-fun x1614 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x1454 () Int)
(declare-fun x1605 () Int)
(declare-fun x732 () Int)
(declare-fun x503 () Bool)
(declare-fun x275 () Bool)
(declare-fun x800 () Int)
(declare-fun x1716 () Int)
(declare-fun x96 () Bool)
(declare-fun x307 () Int)
(declare-fun x841 () Int)
(declare-fun x1173 () Bool)
(declare-fun x526 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x2097 () Int)
(declare-fun x1073 () Int)
(declare-fun x461 () Int)
(declare-fun x909 () Int)
(declare-fun x2073 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x409 () Bool)
(declare-fun x1790 () Int)
(declare-fun x274 () Bool)
(declare-fun x1219 () Int)
(declare-fun x1675 () Int)
(declare-fun x136 () Int)
(declare-fun x1362 () Int)
(declare-fun x930 () Int)
(declare-fun x981 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x1767 () Int)
(declare-fun x514 () Int)
(declare-fun x1432 () Bool)
(declare-fun x1263 () Int)
(declare-fun x142 () Int)
(declare-fun x1128 () Int)
(declare-fun x170 () Bool)
(declare-fun x847 () x1037)
(declare-fun x1549 () Int)
(declare-fun x580 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x1697 () Int)
(declare-fun x1141 () Int)
(declare-fun x1610 (Int) x1037)
(declare-fun x1411 () Int)
(declare-fun x789 () Int)
(declare-fun x164 () x1037)
(declare-fun x1847 (x1037) Int)
(declare-fun x1787 () Int)
(declare-fun x491 () Bool)
(declare-fun x412 () Int)
(declare-fun x2018 () Bool)
(declare-fun x84 () Int)
(declare-fun x1452 () Int)
(declare-fun x1483 () Bool)
(declare-fun x183 () Int)
(declare-fun x1267 () Bool)
(declare-fun x899 () Int)
(declare-fun x2069 () Int)
(declare-fun x673 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x1512 () Int)
(declare-fun x520 () Int)
(declare-fun x147 () Bool)
(declare-fun x394 () Bool)
(declare-fun x1338 () Int)
(declare-fun x499 () Bool)
(declare-fun x699 () Bool)
(declare-fun x583 () Int)
(declare-fun x1468 () Int)
(declare-fun x1925 () Int)
(declare-fun x2151 () Int)
(declare-fun x2168 () Int)
(declare-fun x1286 () Int)
(declare-fun x154 () Bool)
(declare-fun x1940 () Int)
(declare-fun x448 () Int)
(declare-fun x757 () Int)
(declare-fun x1451 () Int)
(declare-fun x1884 () Int)
(declare-fun x1945 () Bool)
(declare-fun x2117 () Bool)
(declare-fun x160 () Int)
(declare-fun x828 () Int)
(declare-fun x1230 () Bool)
(declare-fun x1091 () Int)
(declare-fun x16 () Int)
(declare-fun x1727 () Bool)
(declare-fun x811 () Int)
(declare-fun x1290 () Bool)
(declare-fun x972 () Int)
(declare-fun x1136 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x1671 () Int)
(declare-fun x1740 () Int)
(declare-fun x836 () Int)
(declare-fun x530 () Int)
(declare-fun x89 (x1037) Int)
(declare-fun x177 () Int)
(declare-fun x1640 () Int)
(declare-fun x1189 () Int)
(declare-fun x1856 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x2146 () Bool)
(declare-fun x869 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x954 () Int)
(declare-fun x1113 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x555 () Bool)
(declare-fun x1350 () Int)
(declare-fun x1696 () Int)
(declare-fun x418 () Int)
(declare-fun x13 () Bool)
(declare-fun x918 () Bool)
(declare-fun x1976 () Int)
(declare-fun x1902 () Int)
(declare-fun x1922 () Int)
(declare-fun x1572 () Int)
(declare-fun x1026 () Int)
(declare-fun x1063 () Int)
(declare-fun x749 () Int)
(declare-fun x1296 () Int)
(declare-fun x1079 () Int)
(declare-fun x211 () Int)
(declare-fun x1950 () Int)
(declare-fun x1240 (Int) Int)
(declare-fun x1388 () Int)
(declare-fun x1992 () Int)
(declare-fun x1390 () Int)
(declare-fun x2174 () Int)
(declare-fun x1462 () Bool)
(declare-fun x1963 () Bool)
(declare-fun x1913 () Int)
(declare-fun x1664 () Int)
(declare-fun x1944 () Bool)
(declare-fun x1179 () Int)
(declare-fun x1781 () Int)
(declare-fun x1903 () Int)
(declare-fun x1111 () Int)
(declare-fun x1926 () Int)
(declare-fun x1236 () Int)
(declare-fun x720 () Int)
(declare-fun x291 () Int)
(declare-fun x1592 () Bool)
(declare-fun x931 () Int)
(declare-fun x1929 () Int)
(declare-fun x982 () Bool)
(declare-fun x786 () Int)
(declare-fun x2014 () Int)
(declare-fun x1144 () Int)
(declare-fun x2132 () Bool)
(declare-fun x562 () Bool)
(declare-fun x1837 () Int)
(declare-fun x991 () Bool)
(declare-fun x983 () Int)
(declare-fun x336 () Int)
(declare-fun x1916 () Int)
(declare-fun x2081 () Int)
(declare-fun x2129 () Int)
(declare-fun x1018 () Int)
(declare-fun x2084 () Int)
(declare-fun x354 () Bool)
(declare-fun x1391 () Int)
(declare-fun x294 () Int)
(declare-fun x290 () Int)
(declare-fun x1579 () Int)
(declare-fun x301 () Int)
(declare-fun x1025 () Int)
(declare-fun x1908 (Int) Int)
(declare-fun x441 () Bool)
(declare-fun x2041 () Int)
(declare-fun x1548 () Int)
(declare-fun x1719 () Bool)
(declare-fun x398 () Int)
(declare-fun x1400 (Int) Int)
(declare-fun x295 () Int)
(declare-fun x150 () Int)
(declare-fun x325 () Int)
(declare-fun x1920 () Int)
(declare-fun x2096 () Bool)
(declare-fun x1930 () Int)
(declare-fun x1779 (x1037) Int)
(declare-fun x346 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x241 () Int)
(declare-fun x658 () Int)
(declare-fun x1842 () Int)
(declare-fun x1641 (x1037) Int)
(declare-fun x1687 () Bool)
(declare-fun x889 () Bool)
(declare-fun x1861 () Int)
(declare-fun x1983 () Bool)
(declare-fun x1024 () Int)
(declare-fun x344 () Bool)
(declare-fun x570 () Int)
(declare-fun x946 () Int)
(declare-fun x1793 () Bool)
(declare-fun x2110 () Int)
(declare-fun x537 () Bool)
(declare-fun x1540 () Int)
(declare-fun x1918 () Int)
(declare-fun x1137 () Int)
(declare-fun x1478 () Int)
(declare-fun x118 () Bool)
(declare-fun x882 () Int)
(declare-fun x2169 () Bool)
(declare-fun x945 () Int)
(declare-fun x371 () Int)
(declare-fun x1181 () Bool)
(declare-fun x2071 () Int)
(declare-fun x1690 () Int)
(define-fun x2091 ((x1037 x1037) (x792 Int)) x1037 (ite ((_ is x1700) x1037) (x1700 (x1412 x1037) (+ (x1425 x1037) x792)) (ite ((_ is x1515) x1037) (x1515 (x707 x1037) (x457 x1037) (+ (x1741 x1037) x792)) (x904 (+ x792 (x504 x1037))))))
(define-fun x1011 ((x588 Int)) Int (ite (and (< x588 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x588)) x588 (- x588 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x486 ((x588 Int)) Int (ite (and (>= x588 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x588 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x588) x588))
(define-fun x230 ((x86 Int)) Bool (and (< x86 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x86 0)))
(define-fun x1541 ((x86 Int)) Bool (and (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639935 x86) x86) (= (x2004 x86 115792089237316195423570985008687907853269984665640564039457584007913129639935) x86)))
(define-fun x1768 ((x86 Int)) Bool (and (= 0 (x2004 x86 0)) (= (x2004 0 x86) 0)))
(define-fun x1188 ((x86 Int)) Bool (= (x2004 x86 x86) x86))
(define-fun x849 ((x86 Int)) Bool (and (x1768 x86) (x1188 x86) (x1541 x86)))
(define-fun x2177 ((x86 Int) (x155 Int)) Bool (= (x2004 x86 x155) (x2004 x155 x86)))
(define-fun x1609 ((x86 Int) (x155 Int)) Bool (and (>= (x2004 x86 x155) 0) (=> (<= 0 x155) (<= (x2004 x86 x155) x155)) (=> (>= x86 0) (<= (x2004 x86 x155) x86))))
(define-fun x64 ((x86 Int) (x155 Int)) Bool (and (x2177 x86 x155) (x1609 x86 x155)))
(define-fun x705 ((x86 Int)) Bool (= (+ (mod x86 32) (x2004 x86 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x86 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1254 ((x86 Int)) Bool (and (x705 x86) (x64 x86 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x260 ((x86 Int)) Bool (= (mod x86 1099511627776) (x2004 x86 1099511627775)))
(define-fun x1167 ((x86 Int)) Bool (and (x64 x86 1099511627775) (x260 x86)))
(define-fun x1077 ((x86 Int)) Bool (= (x2004 x86 1461501637330902918203684832716283019655932542975) (mod x86 1461501637330902918203684832716283019655932542976)))
(define-fun x384 ((x86 Int)) Bool (and (x1077 x86) (x64 x86 1461501637330902918203684832716283019655932542975)))
(define-fun x2119 ((x86 Int)) Bool (= (x2004 x86 26959946667150639794667015087019630673637144422540572481103610249215) (mod x86 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x564 ((x86 Int)) Bool (and (x2119 x86) (x64 x86 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x21 ((x86 Int)) Bool (= (mod x86 18446744073709551616) (x2004 x86 18446744073709551615)))
(define-fun x1228 ((x86 Int)) Bool (and (x64 x86 18446744073709551615) (x21 x86)))
(define-fun x433 ((x86 Int)) Bool (= (x2004 x86 452312848583266388373324160190187140051835877600158453279131187530910662655) (mod x86 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(define-fun x1911 ((x86 Int)) Bool (and (x433 x86) (x64 x86 452312848583266388373324160190187140051835877600158453279131187530910662655)))
(define-fun x671 ((x86 Int)) Bool (= (x2004 x86 255) (mod x86 256)))
(define-fun x159 ((x86 Int)) Bool (and (x671 x86) (x64 x86 255)))
(define-fun x331 ((x2061 Int)) Int (x1409 x2061))
(define-fun x855 ((x2061 Int)) Int (ite (= 288 x2061) x1618 (x153 x2061)))
(define-fun x1330 ((x2061 x1037)) Int (x838 x2061))
(define-fun x1720 ((x2061 x1037)) Int (x1779 x2061))
(define-fun x387 ((x2061 x1037)) Int (x1659 x2061))
(define-fun x870 ((x2061 x1037)) Int (x1090 x2061))
(define-fun x676 ((x2061 x1037)) Int (ite (= x2061 x522) 1 (x870 x2061)))
(define-fun x33 ((x2061 Int)) Int (ite (= x2061 x694) x417 (x855 x2061)))
(define-fun x1226 ((x2061 Int)) Int (ite (and (> (+ x83 x417) x2061) (>= x2061 x83)) (x1409 (+ (- x2061 x83) x1025)) (x33 x2061)))
(define-fun x2184 ((x2061 Int)) Int (ite (= x94 x2061) 0 (x1226 x2061)))
(define-fun x581 ((x2061 Int)) Int (ite (= 320 x2061) x694 (x2184 x2061)))
(define-fun x2025 ((x2061 Int)) Int (ite x668 (x855 x2061) (x581 x2061)))
(define-fun x2159 ((x2061 Int)) Int (ite (= x1120 x2061) x1227 (x2025 x2061)))
(define-fun x2016 ((x2061 Int)) Int (ite (= x1684 x2061) x853 (x2159 x2061)))
(define-fun x1866 ((x2061 Int)) Int (ite (and (> (+ x853 x1349) x2061) (>= x2061 x1349)) (x1409 (+ x1754 (- x2061 x1349))) (x2016 x2061)))
(define-fun x375 ((x2061 Int)) Int (ite (= x828 x2061) 0 (x1866 x2061)))
(define-fun x1849 ((x2061 Int)) Int (ite (= x150 x2061) x1684 (x375 x2061)))
(define-fun x1465 ((x2061 Int)) Int (ite (= x2061 x1630) x1 (x1849 x2061)))
(define-fun x10 ((x2061 Int)) Int (ite (and (>= x2061 x826) (> (+ x826 x1) x2061)) (x1409 (+ x1743 (- x2061 x826))) (x1465 x2061)))
(define-fun x1998 ((x2061 Int)) Int (ite (= x1941 x2061) 0 (x10 x2061)))
(define-fun x1443 ((x2061 Int)) Int (ite (= x2061 x126) x1630 (x1998 x2061)))
(define-fun x1208 ((x2061 Int)) Int (ite (= x2061 x1013) x960 (x1443 x2061)))
(define-fun x970 ((x2061 Int)) Int (ite (= x2061 x1894) x1236 (x1208 x2061)))
(define-fun x1117 ((x2061 Int)) Int (ite (= x412 x2061) x829 (x970 x2061)))
(define-fun x762 ((x2061 Int)) Int (ite (= x1767 x2061) x1080 (x1117 x2061)))
(define-fun x389 ((x2061 Int)) Int (ite (= x2061 x2107) x268 (x762 x2061)))
(define-fun x2051 ((x2061 Int)) Int (ite (= x2061 x335) x2075 (x389 x2061)))
(define-fun x1545 ((x2061 Int)) Int (ite (= x2061 x1116) x1943 (x2051 x2061)))
(define-fun x2039 ((x2061 Int)) Int (ite (= x2061 x1404) x150 (x1545 x2061)))
(define-fun x1863 ((x2061 Int)) Int (ite x208 (x2159 x2061) (x2039 x2061)))
(define-fun x1274 ((x2061 Int)) Int (ite (= x873 x2061) x1421 (x1863 x2061)))
(define-fun x1766 ((x2061 Int)) Int (ite (= x2061 x407) x606 (x1274 x2061)))
(define-fun x49 ((x2061 Int)) Int (ite (= x2061 x1842) x1690 (x1766 x2061)))
(define-fun x1900 ((x2061 Int)) Int (ite (= x2061 x1243) x1744 (x49 x2061)))
(define-fun x1486 ((x2061 Int)) Int (ite (= x2061 x565) x1540 (x1900 x2061)))
(define-fun x1599 ((x2061 Int)) Int (ite (= x131 x2061) x407 (x1486 x2061)))
(define-fun x1335 ((x2061 Int)) Int (ite x2176 (x1274 x2061) (x1599 x2061)))
(define-fun x846 ((x2061 Int)) Int (ite (= x2061 x8) x656 (x1335 x2061)))
(define-fun x1245 ((x2061 Int)) Int (ite (= x2061 x851) x1649 (x846 x2061)))
(define-fun x1535 ((x2061 Int)) Int (ite (and (>= x2061 x2076) (> (+ x1649 x2076) x2061)) (x1409 (+ x1043 (- x2061 x2076))) (x1245 x2061)))
(define-fun x667 ((x2061 Int)) Int (ite (= x300 x2061) 0 (x1535 x2061)))
(define-fun x730 ((x2061 Int)) Int (ite (= x1852 x2061) x851 (x667 x2061)))
(define-fun x598 ((x2061 Int)) Int (ite x394 (x846 x2061) (x730 x2061)))
(define-fun x1262 ((x2061 Int)) Int (ite (= x2061 x1258) x1775 (x598 x2061)))
(define-fun x1792 ((x2061 Int)) Int (ite (= x2061 x1835) x1903 (x1262 x2061)))
(define-fun x1674 ((x2061 Int)) Int (ite (and (> (+ x1903 x1932) x2061) (>= x2061 x1932)) (x1409 (+ (- x2061 x1932) x401)) (x1792 x2061)))
(define-fun x194 ((x2061 Int)) Int (ite (= x2061 x2116) 0 (x1674 x2061)))
(define-fun x691 ((x2061 Int)) Int (ite (= x2028 x2061) x1835 (x194 x2061)))
(define-fun x1777 ((x2061 Int)) Int (ite (= x2061 x1935) x1039 (x691 x2061)))
(define-fun x342 ((x2061 Int)) Int (ite (and (>= x2061 x458) (< x2061 (+ x458 x1039))) (x1409 (+ (- x2061 x458) x1118)) (x1777 x2061)))
(define-fun x2112 ((x2061 Int)) Int (ite (= x2061 x1918) 0 (x342 x2061)))
(define-fun x439 ((x2061 Int)) Int (ite (= x1577 x2061) x1935 (x2112 x2061)))
(define-fun x1603 ((x2061 Int)) Int (ite (= x2061 x197) x2158 (x439 x2061)))
(define-fun x190 ((x2061 Int)) Int (ite (= x181 x2061) x269 (x1603 x2061)))
(define-fun x639 ((x2061 Int)) Int (ite (= x466 x2061) x739 (x190 x2061)))
(define-fun x440 ((x2061 Int)) Int (ite (= x2061 x1987) x1760 (x639 x2061)))
(define-fun x987 ((x2061 Int)) Int (ite (= x298 x2061) x548 (x440 x2061)))
(define-fun x1072 ((x2061 Int)) Int (ite (= x1439 x2061) x1363 (x987 x2061)))
(define-fun x539 ((x2061 Int)) Int (ite (= x313 x2061) x223 (x1072 x2061)))
(define-fun x265 ((x2061 Int)) Int (ite (= x912 x2061) x2028 (x539 x2061)))
(define-fun x1002 ((x2061 Int)) Int (ite x1637 (x1262 x2061) (x265 x2061)))
(define-fun x326 ((x2061 Int)) Int (ite (= x2062 x2061) x1611 (x1002 x2061)))
(define-fun x408 ((x2061 Int)) Int (ite (= x74 x2061) x720 (x326 x2061)))
(define-fun x1081 ((x2061 Int)) Int (ite (= x80 x2061) x1065 (x408 x2061)))
(define-fun x1440 ((x2061 Int)) Int (ite (= x879 x2061) x243 (x1081 x2061)))
(define-fun x1064 ((x2061 Int)) Int (ite (= x2061 x358) x46 (x1440 x2061)))
(define-fun x560 ((x2061 Int)) Int (ite (= x1284 x2061) x74 (x1064 x2061)))
(define-fun x1914 ((x2061 Int)) Int (ite x1378 (x326 x2061) (x560 x2061)))
(define-fun x1656 ((x2061 Int)) Int (ite (= x1549 x2061) 22140752835961941075817313386879028057460502132199729129551447365926944505856 (x1914 x2061)))
(define-fun x1621 ((x2061 Int)) Int (ite (= x1456 x2061) x1292 (x1656 x2061)))
(define-fun x15 ((x2061 Int)) Int (ite (= x2061 x2098) 320 (x1621 x2061)))
(define-fun x1560 ((x2061 Int)) Int (ite (= x819 x2061) x1771 (x15 x2061)))
(define-fun x1162 ((x2061 Int)) Int (ite (= x1654 x2061) x498 (x1560 x2061)))
(define-fun x287 ((x2061 Int)) Int (ite (= x2061 x1017) x445 (x1162 x2061)))
(define-fun x267 ((x2061 Int)) Int (ite (= x1950 x2061) x38 (x287 x2061)))
(define-fun x388 ((x2061 Int)) Int (ite (= x2061 x1063) x532 (x267 x2061)))
(define-fun x252 ((x2061 Int)) Int (ite x1181 (x267 x2061) (ite x262 (x287 x2061) (ite x453 (x1162 x2061) (ite x1830 (x1560 x2061) (x388 x2061))))))
(define-fun x1509 ((x2061 Int)) Int (ite (= x2061 x179) 0 (x252 x2061)))
(define-fun x1521 ((x2061 Int)) Int (ite x1846 (x252 x2061) (x1509 x2061)))
(define-fun x299 ((x2061 Int)) Int (ite (= x1211 x2061) x1985 (x1521 x2061)))
(define-fun x1178 ((x2061 Int)) Int (ite (= x2061 x1964) x183 (x299 x2061)))
(define-fun x657 ((x2061 Int)) Int (ite (= x44 x2061) x1939 (x1178 x2061)))
(define-fun x1003 ((x2061 Int)) Int (ite (= x2061 x1737) x165 (x657 x2061)))
(define-fun x1135 ((x2061 Int)) Int (ite (= x1203 x2061) 288 (x1003 x2061)))
(define-fun x355 ((x2061 Int)) Int (ite (= x628 x2061) x897 (x1135 x2061)))
(define-fun x414 ((x2061 Int)) Int (ite (= x2061 x1282) x711 (x355 x2061)))
(define-fun x1658 ((x2061 Int)) Int (ite (= x2041 x2061) x2069 (x414 x2061)))
(define-fun x925 ((x2061 Int)) Int (ite (= x1994 x2061) x1730 (x1658 x2061)))
(define-fun x1033 ((x2061 x1037)) Int (ite x321 (x1194 x2061) (ite x1153 (x35 x2061) (x1194 x2061))))
(define-fun x107 ((x2061 x1037)) Int (ite x321 (x891 x2061) (ite x1153 (x929 x2061) (x891 x2061))))
(define-fun x1036 ((x2061 x1037)) Int (ite x321 (x1641 x2061) (ite x1153 (x292 x2061) (x1641 x2061))))
(define-fun x1317 ((x2061 x1037)) Int (ite x321 (x373 x2061) (ite x1153 (x1847 x2061) (x373 x2061))))
(define-fun x1897 ((x2061 Int)) Int (ite (= x242 x2061) x1798 (x925 x2061)))
(define-fun x302 ((x2061 Int)) Int (ite x832 (x925 x2061) (ite x1132 (x1658 x2061) (ite x470 (x414 x2061) (ite x1680 (x355 x2061) (x1897 x2061))))))
(define-fun x512 ((x2061 Int)) Int (ite (= x1152 x2061) 0 (x302 x2061)))
(define-fun x1728 ((x2061 Int)) Int (ite x413 (x302 x2061) (x512 x2061)))
(define-fun x702 ((x2061 Int)) Int (ite (= x2061 x1597) x24 (x1728 x2061)))
(define-fun x227 ((x2061 Int)) Int (ite (= x234 x2061) x1590 (x702 x2061)))
(define-fun x1595 ((x2061 Int)) Int (ite (= x864 x2061) x1451 (x227 x2061)))
(define-fun x840 ((x2061 Int)) Int (ite (= x789 x2061) x2097 (x1595 x2061)))
(define-fun x1711 ((x2061 Int)) Int (ite (= x2061 x1884) x1219 (x840 x2061)))
(define-fun x1670 ((x2061 Int)) Int (ite (= x2061 x674) x2162 (x1711 x2061)))
(define-fun x497 ((x2061 Int)) Int (ite x62 (x1711 x2061) (ite x887 (x840 x2061) (ite x357 (x1595 x2061) (ite x580 (x227 x2061) (x1670 x2061))))))
(define-fun x1608 ((x2061 Int)) Int (ite (= x1600 x2061) 0 (x497 x2061)))
(define-fun x1585 ((x2061 Int)) Int (ite x991 (x497 x2061) (x1608 x2061)))
(define-fun x796 ((x2061 Int)) Int (ite (= x2061 x962) (ite x919 1 0) (x1585 x2061)))
(define-fun x659 ((x2061 Int)) Int (ite (= x2061 x1306) x79 (x796 x2061)))
(define-fun x955 ((x2061 Int)) Int (ite (= x2061 x931) x570 (x659 x2061)))
(define-fun x178 ((x2061 Int)) Int (ite (= x2061 x210) x133 (x955 x2061)))
(define-fun x801 ((x2061 Int)) Int (ite (= x2061 x1488) x1816 (x178 x2061)))
(define-fun x1183 ((x2061 Int)) Int (ite (= x2068 x2061) x359 (x801 x2061)))
(define-fun x644 ((x2061 Int)) Int (ite (= x2061 x1579) x1341 (x1183 x2061)))
(define-fun x184 ((x2061 Int)) Int (ite (= x452 x2061) x2072 (x644 x2061)))
(define-fun x2090 ((x2061 Int)) Int (ite (= x1108 x2061) x1328 (x184 x2061)))
(define-fun x1537 ((x2061 Int)) Int (ite (= x1895 x2061) x695 (x2090 x2061)))
(define-fun x1594 ((x2061 Int)) Int (ite (= x990 x2061) x16 (x1537 x2061)))
(define-fun x1725 ((x2061 Int)) Int (ite (and (< x2061 (+ x1549 0)) (>= x2061 x1549)) (x1212 (+ 0 (- x2061 x1549))) (x1594 x2061)))
(define-fun x2124 ((x2061 Int)) Int (ite x321 (x1914 x2061) (ite x1153 (x1725 x2061) (x1594 x2061))))
(define-fun x1706 ((x2061 x1037)) Int (ite x321 (x395 x2061) (ite x1153 (x2002 x2061) (x395 x2061))))
(define-fun x519 ((x2061 x1037)) Int (ite x321 (x1305 x2061) (ite x1153 (x1134 x2061) (x1305 x2061))))
(define-fun x249 ((x2061 x1037)) Int (ite x321 (x1222 x2061) (ite x1153 (x507 x2061) (x1222 x2061))))
(define-fun x122 ((x2061 x1037)) Int (ite x321 (x266 x2061) (ite x1153 (x369 x2061) (x266 x2061))))
(define-fun x1479 ((x2061 x1037)) Int (ite x321 (x1520 x2061) (ite x1153 (x1264 x2061) (x1520 x2061))))
(define-fun x1757 ((x2061 Int)) Int (ite (= x865 x2061) x850 (x2124 x2061)))
(define-fun x756 ((x2061 Int)) Int (ite (= x2061 x1709) x1239 (x1757 x2061)))
(define-fun x455 ((x2061 Int)) Int (ite (and (>= x2061 x222) (< x2061 (+ x1239 x222))) (x1409 (+ x146 (- x2061 x222))) (x756 x2061)))
(define-fun x2086 ((x2061 Int)) Int (ite (= x755 x2061) 0 (x455 x2061)))
(define-fun x464 ((x2061 Int)) Int (ite (= x2061 x1714) x1709 (x2086 x2061)))
(define-fun x186 ((x2061 Int)) Int (ite x975 (x1757 x2061) (x464 x2061)))
(define-fun x2178 ((x2061 Int)) Int (ite (= x393 x2061) x1224 (x186 x2061)))
(define-fun x1476 ((x2061 Int)) Int (ite (= x1666 x2061) x1441 (x2178 x2061)))
(define-fun x18 ((x2061 Int)) Int (ite (and (<= x1320 x2061) (> (+ x1320 x1441) x2061)) (x1409 (+ (- x2061 x1320) x1050)) (x1476 x2061)))
(define-fun x939 ((x2061 Int)) Int (ite (= x1091 x2061) 0 (x18 x2061)))
(define-fun x791 ((x2061 Int)) Int (ite (= x2061 x1723) x1666 (x939 x2061)))
(define-fun x969 ((x2061 Int)) Int (ite (= x2061 x1051) x1781 (x791 x2061)))
(define-fun x1235 ((x2061 Int)) Int (ite (and (< x2061 (+ x1407 x1781)) (>= x2061 x1407)) (x1409 (+ (- x2061 x1407) x1861)) (x969 x2061)))
(define-fun x1923 ((x2061 Int)) Int (ite (= x1564 x2061) 0 (x1235 x2061)))
(define-fun x745 ((x2061 Int)) Int (ite (= x1055 x2061) x1051 (x1923 x2061)))
(define-fun x1074 ((x2061 Int)) Int (ite (= x2061 x461) x1452 (x745 x2061)))
(define-fun x1054 ((x2061 Int)) Int (ite (= x2061 x1413) x180 (x1074 x2061)))
(define-fun x631 ((x2061 Int)) Int (ite (= x424 x2061) x1394 (x1054 x2061)))
(define-fun x528 ((x2061 Int)) Int (ite (= x2061 x2109) x979 (x631 x2061)))
(define-fun x1207 ((x2061 Int)) Int (ite (= x2061 x1248) x1172 (x528 x2061)))
(define-fun x1449 ((x2061 Int)) Int (ite (= x1689 x2061) x367 (x1207 x2061)))
(define-fun x1565 ((x2061 Int)) Int (ite (= x2061 x1314) x1873 (x1449 x2061)))
(define-fun x1139 ((x2061 Int)) Int (ite (= x1028 x2061) x1723 (x1565 x2061)))
(define-fun x1324 ((x2061 Int)) Int (ite x976 (x2178 x2061) (x1139 x2061)))
(define-fun x2015 ((x2061 Int)) Int (ite (= x2061 x176) x972 (x1324 x2061)))
(define-fun x63 ((x2061 Int)) Int (ite (= x391 x2061) x1877 (x2015 x2061)))
(define-fun x314 ((x2061 Int)) Int (ite (= x1889 x2061) x505 (x63 x2061)))
(define-fun x914 ((x2061 Int)) Int (ite (= x2061 x1431) x984 (x314 x2061)))
(define-fun x687 ((x2061 Int)) Int (ite (= x536 x2061) x578 (x914 x2061)))
(define-fun x2056 ((x2061 Int)) Int (ite (= x1913 x2061) x391 (x687 x2061)))
(define-fun x376 ((x2061 Int)) Int (ite x751 (x2015 x2061) (x2056 x2061)))
(define-fun x1268 ((x2061 Int)) Int (ite (= x2061 x681) x1107 (x376 x2061)))
(define-fun x2100 ((x2061 Int)) Int (ite (= x559 x2061) 96 (x1268 x2061)))
(define-fun x1975 ((x2061 Int)) Int (ite (= x2061 x1430) x881 (x2100 x2061)))
(define-fun x442 ((x2061 Int)) Int (ite (= x2061 x196) x349 (x1975 x2061)))
(define-fun x936 ((x2061 Int)) Int (ite x2153 (x1975 x2061) (x442 x2061)))
(define-fun x1805 ((x2061 Int)) Int (ite (= x226 x2061) 0 (x936 x2061)))
(define-fun x947 ((x2061 Int)) Int (ite x640 (x936 x2061) (x1805 x2061)))
(define-fun x77 ((x2061 Int)) Int (ite (= x2061 x2136) x1094 (x947 x2061)))
(define-fun x1631 ((x2061 Int)) Int (ite (= x2061 x1831) x403 (x77 x2061)))
(define-fun x511 ((x2061 Int)) Int (ite (= x2061 x563) x1924 (x1631 x2061)))
(define-fun x1517 ((x2061 Int)) Int (ite (= x2061 x1776) 13116146399946975302596254860212112502091447646307958763727216123866297401344 (x511 x2061)))
(define-fun x2033 ((x2061 Int)) Int (ite (= x2061 x343) x1556 (x1517 x2061)))
(define-fun x2017 ((x2061 Int)) Int (ite (= x2061 x686) 64 (x2033 x2061)))
(define-fun x553 ((x2061 Int)) Int (ite (= x2061 x535) x1391 (x2017 x2061)))
(define-fun x1628 ((x2061 Int)) Int (ite (= x1619 x2061) x1408 (x553 x2061)))
(define-fun x1171 ((x2061 Int)) Int (ite x1639 (x553 x2061) (x1628 x2061)))
(define-fun x400 ((x2061 Int)) Int (ite (= x1554 x2061) 0 (x1171 x2061)))
(define-fun x425 ((x2061 Int)) Int (ite x915 (x1171 x2061) (x400 x2061)))
(define-fun x370 ((x2061 Int)) Int (ite (and (< x2061 (+ 0 x1776)) (<= x1776 x2061)) (x2060 (+ (- x2061 x1776) 0)) (x425 x2061)))
(define-fun x472 ((x2061 Int)) Int (ite x1702 (x370 x2061) (x425 x2061)))
(define-fun x998 ((x2061 Int)) Int (ite (= x1776 x2061) x1345 (x472 x2061)))
(define-fun x1558 ((x2061 Int)) Int (ite (and (< x2061 (+ x748 x1345)) (>= x2061 x748)) (x2060 (+ (- x2061 x748) 0)) (x998 x2061)))
(define-fun x1518 ((x2061 Int)) Int (ite (= x2061 x1410) x136 (x1558 x2061)))
(define-fun x683 ((x2061 Int)) Int (ite (= x2061 x1747) x1491 (x1518 x2061)))
(define-fun x566 ((x2061 Int)) Int (ite x1808 (x1518 x2061) (x683 x2061)))
(define-fun x1417 ((x2061 Int)) Int (ite (= x2061 x1524) 0 (x566 x2061)))
(define-fun x1076 ((x2061 Int)) Int (ite x1428 (x376 x2061) (ite x2032 (x566 x2061) (x1417 x2061))))
(define-fun x736 ((x2061 x1037)) Int (ite x1428 (x1033 x2061) (ite x1702 (x1886 x2061) (x1033 x2061))))
(define-fun x1627 ((x2061 x1037)) Int (ite x1428 (x519 x2061) (ite x1702 (x324 x2061) (x519 x2061))))
(define-fun x1506 ((x2061 x1037)) Int (ite x1428 (x1317 x2061) (ite x1702 (x1901 x2061) (x1317 x2061))))
(define-fun x368 ((x2061 x1037)) Int (ite x1428 (x249 x2061) (ite x1702 (x89 x2061) (x249 x2061))))
(define-fun x534 ((x2061 x1037)) Int (ite x1428 (x1706 x2061) (ite x1702 (x58 x2061) (x1706 x2061))))
(define-fun x340 ((x2061 Int)) Int (ite (= x2061 x351) 2428475159928928253380189918045730325133814103720850528466242065960167014400 (x1076 x2061)))
(define-fun x567 ((x2061 Int)) Int (ite (= x2061 x590) x2140 (x340 x2061)))
(define-fun x1952 ((x2061 Int)) Int (ite (= x2061 128) 89953063794570797914675343120038501642627609741519254829220540789936042803200 (x877 x2061)))
(define-fun x1715 ((x2061 Int)) Int (ite (= x2061 132) x974 (x1952 x2061)))
(define-fun x928 ((x2061 Int)) Int (ite (= x2061 164) x1539 (x1715 x2061)))
(define-fun x1868 ((x2061 Int)) Int (ite (= x351 x2061) x2081 (x567 x2061)))
(define-fun x1127 ((x2061 Int)) Int (ite (= x899 x2061) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1868 x2061)))
(define-fun x1198 ((x2061 Int)) Int (ite (= x2061 x1665) x551 (x1127 x2061)))
(define-fun x810 ((x2061 Int)) Int (ite (= x2061 x899) x1327 (x1198 x2061)))
(define-fun x1532 ((x2061 Int)) Int (ite (= x238 x2061) x465 (x810 x2061)))
(define-fun x1898 ((x2061 Int)) Int (ite (= x2061 x1675) x1731 (x1532 x2061)))
(define-fun x5 ((x2061 Int)) Int (ite (= x1671 x2061) x2093 (x1898 x2061)))
(define-fun x53 ((x2061 Int)) Int (ite (= x1758 x2061) x1291 (x5 x2061)))
(define-fun x1369 ((x2061 Int)) Int (ite (= x2061 x1277) 13116146399946975302596254860212112502091447646307958763727216123866297401344 (x53 x2061)))
(define-fun x1256 ((x2061 Int)) Int (ite (= x2061 x1803) x771 (x1369 x2061)))
(define-fun x1373 ((x2061 Int)) Int (ite (= x2105 x2061) 64 (x1256 x2061)))
(define-fun x1818 ((x2061 Int)) Int (ite (= x2061 x770) x1892 (x1373 x2061)))
(define-fun x994 ((x2061 Int)) Int (ite (= x2061 x1696) x1751 (x1818 x2061)))
(define-fun x766 ((x2061 Int)) Int (ite (= x291 x2061) x1398 (x994 x2061)))
(define-fun x906 ((x2061 Int)) Int (ite (= x689 x2061) x1921 (x766 x2061)))
(define-fun x2046 ((x2061 Int)) Int (ite (= x2061 x1014) x938 (x906 x2061)))
(define-fun x678 ((x2061 Int)) Int (ite x1475 (x906 x2061) (ite x112 (x766 x2061) (ite x1232 (x994 x2061) (ite x137 (x1818 x2061) (x2046 x2061))))))
(define-fun x1623 ((x2061 Int)) Int (ite (= x2061 x428) 0 (x678 x2061)))
(define-fun x1337 ((x2061 Int)) Int (ite x1813 (x678 x2061) (x1623 x2061)))
(define-fun x608 ((x2061 Int)) Int (ite (and (>= x2061 x1277) (< x2061 (+ x1277 0))) (x1400 (+ (- x2061 x1277) 0)) (x1337 x2061)))
(define-fun x379 ((x2061 Int)) Int (ite x116 (x608 x2061) (x1337 x2061)))
(define-fun x1568 ((x2061 Int)) Int (ite (= x1277 x2061) x2167 (x379 x2061)))
(define-fun x397 ((x2061 Int)) Int (ite (and (>= x2061 x81) (< x2061 (+ x2167 x81))) (x1400 (+ (- x2061 x81) 0)) (x1568 x2061)))
(define-fun x65 ((x2061 Int)) Int (ite (= x2061 x57) x831 (x397 x2061)))
(define-fun x525 ((x2061 Int)) Int (ite (= x2061 x1806) x1151 (x65 x2061)))
(define-fun x665 ((x2061 Int)) Int (ite (= x2061 x618) x1748 (x525 x2061)))
(define-fun x1379 ((x2061 Int)) Int (ite (= x1123 x2061) x1474 (x665 x2061)))
(define-fun x1841 ((x2061 x1037)) Int (ite x116 (x479 x2061) (x534 x2061)))
(define-fun x712 ((x2061 x1037)) Int (ite (= x2061 (x1610 x465)) x380 (x1841 x2061)))
(define-fun x1823 ((x2061 x1037)) Int (ite (= (x1610 x2099) x2061) x1484 (x712 x2061)))
(define-fun x1480 ((x2061 x1037)) Int (ite (= x2061 (x1610 x2099)) x494 (x1823 x2061)))
(define-fun x1416 ((x2061 x1037)) Int (ite (= (x1610 x465) x2061) x1947 (x1480 x2061)))
(define-fun x2042 ((x2061 x1037)) Int (ite x866 (x1841 x2061) (ite x1173 (ite x753 (x1841 x2061) (ite x128 (x1823 x2061) (x1416 x2061))) (x1841 x2061))))
(define-fun x1019 ((x2061 Int)) Int (ite (= x2061 x1922) x294 (x1379 x2061)))
(define-fun x1953 ((x2061 Int)) Int (ite x1180 (x1379 x2061) (ite x1288 (x665 x2061) (ite x1551 (x525 x2061) (ite x1681 (x65 x2061) (x1019 x2061))))))
(define-fun x1381 ((x2061 Int)) Int (ite (= x2061 x2011) 0 (x1953 x2061)))
(define-fun x1260 ((x2061 Int)) Int (ite x1969 (x1953 x2061) (x1381 x2061)))
(define-fun x1794 ((x2061 Int)) Int (ite (= x284 x2061) 63696388041471822930743579425831364866188647584567569692446183701643513561088 (x1260 x2061)))
(define-fun x1129 ((x2061 Int)) Int (ite (= x2061 x1338) x1411 (x1794 x2061)))
(define-fun x1951 ((x2061 Int)) Int (ite (= x2061 x1168) x1731 (x1129 x2061)))
(define-fun x1887 ((x2061 Int)) Int (ite (= x2061 x1790) x764 (x1951 x2061)))
(define-fun x601 ((x2061 x1037)) Int (ite x1702 (x1704 x2061) (x1479 x2061)))
(define-fun x1817 ((x2061 x1037)) Int (ite x116 (x1131 x2061) (ite x1428 (x1479 x2061) (x601 x2061))))
(define-fun x632 ((x2061 Int)) Int (ite (= 128 x2061) 89953063794570797914675343120038501642627609741519254829220540789936042803200 (x1240 x2061)))
(define-fun x1584 ((x2061 Int)) Int (ite (= 132 x2061) x1252 (x632 x2061)))
(define-fun x1155 ((x2061 Int)) Int (ite (= 164 x2061) x447 (x1584 x2061)))
(define-fun x1027 ((x2061 x1037)) Int (ite x116 (x1075 x2061) (x736 x2061)))
(define-fun x1049 ((x2061 Int)) Int (ite (= x2061 128) x1426 (x1155 x2061)))
(define-fun x1146 ((x2061 Int)) Int (ite x868 (x1155 x2061) (x1049 x2061)))
(define-fun x1295 ((x2061 Int)) Int (ite (= x2061 x1686) x90 (x1146 x2061)))
(define-fun x1143 ((x2061 Int)) Int (ite (= x2061 x70) x1522 (x1295 x2061)))
(define-fun x328 ((x2061 Int)) Int (ite (= x2061 x907) x1352 (x1143 x2061)))
(define-fun x552 ((x2061 Int)) Int (ite (= x1930 x2061) x888 (x328 x2061)))
(define-fun x219 ((x2061 Int)) Int (ite x1477 (x328 x2061) (ite x557 (x1143 x2061) (ite x1103 (x1295 x2061) (ite x467 (x1146 x2061) (x552 x2061))))))
(define-fun x1819 ((x2061 Int)) Int (ite (= x2061 x30) 0 (x219 x2061)))
(define-fun x600 ((x2061 Int)) Int (ite x1693 (x219 x2061) (x1819 x2061)))
(define-fun x995 ((x2061 x1037)) Int (ite x116 (x2064 x2061) (x1627 x2061)))
(define-fun x615 ((x2061 x1037)) Int (ite x1702 (x1442 x2061) (x122 x2061)))
(define-fun x264 ((x2061 x1037)) Int (ite x116 (x1466 x2061) (ite x1428 (x122 x2061) (x615 x2061))))
(define-fun x1966 ((x2061 x1037)) Int (ite (= x2061 x2106) x85 (x264 x2061)))
(define-fun x558 ((x2061 x1037)) Int (ite x1702 (x42 x2061) (x1036 x2061)))
(define-fun x456 ((x2061 x1037)) Int (ite x116 (x843 x2061) (ite x1428 (x1036 x2061) (x558 x2061))))
(define-fun x2057 ((x2061 x1037)) Int (ite (= x2061 x741) x836 (x456 x2061)))
(define-fun x2067 ((x2061 x1037)) Int (ite x1702 (x1163 x2061) (x107 x2061)))
(define-fun x591 ((x2061 x1037)) Int (ite x116 (x372 x2061) (ite x1428 (x107 x2061) (x2067 x2061))))
(define-fun x1046 ((x2061 Int)) Int (ite (= 128 x2061) x1833 (x734 x2061)))
(define-fun x1148 ((x2061 Int)) Int (ite (= 0 x2061) x25 (x163 x2061)))
(define-fun x61 ((x2061 Int)) Int (ite x1673 (x163 x2061) (x1148 x2061)))
(define-fun x518 ((x2061 Int)) Int (ite x753 (x93 x2061) (x61 x2061)))
(define-fun x1095 ((x2061 Int)) Int (ite (= x2061 x110) x1370 (x1445 x2061)))
(define-fun x2145 ((x2061 Int)) Int (ite (and (< x2061 (+ x1370 x1209)) (>= x2061 x1209)) (x518 (+ 0 (- x2061 x1209))) (x174 x2061)))
(define-fun x66 ((x2061 Int)) Int (ite x1006 (x174 x2061) (x2145 x2061)))
(define-fun x1068 ((x2061 Int)) Int (ite x1006 (x1445 x2061) (x1095 x2061)))
(define-fun x596 ((x2061 Int)) Int (ite (= x353 x2061) x454 (x1570 x2061)))
(define-fun x677 ((x2061 Int)) Int (ite (= x688 x2061) x465 (x596 x2061)))
(define-fun x612 ((x2061 Int)) Int (ite (= x1826 x2061) x1492 (x677 x2061)))
(define-fun x67 ((x2061 Int)) Int (ite (= x2061 x669) x139 (x612 x2061)))
(define-fun x834 ((x2061 Int)) Int (ite (= 128 x2061) x1461 (x928 x2061)))
(define-fun x1023 ((x2061 Int)) Int (ite x1645 (x928 x2061) (x834 x2061)))
(define-fun x1910 ((x2061 Int)) Int (ite (= 0 x2061) x2081 (x529 x2061)))
(define-fun x949 ((x2061 Int)) Int (ite (= 0 x2061) x1327 (x364 x2061)))
(define-fun x1397 ((x2061 Int)) Int (ite (= x2061 0) x1461 (x1988 x2061)))
(define-fun x431 ((x2061 Int)) Int (ite (= 0 x2061) x1426 (x685 x2061)))
(define-fun x1200 ((x2061 Int)) Int (ite x868 (x685 x2061) (x431 x2061)))
(define-fun x1511 ((x2061 Int)) Int (ite (= x1325 x2061) x874 (x1908 x2061)))
(define-fun x98 ((x2061 Int)) Int (ite x437 (x734 x2061) (ite x1020 (x1046 x2061) (x734 x2061))))
(define-fun x696 ((x2061 x1037)) Int (ite (= x430 x2061) x1772 (x995 x2061)))
(define-fun x1839 ((x2061 Int)) Int (ite (= 128 x2061) x1929 (x98 x2061)))
(define-fun x1646 ((x2061 Int)) Int (ite (= 128 x2061) (ite true 1 0) (x1839 x2061)))
(define-fun x630 ((x86 Int)) Bool (=> (and (not (= x86 1000000000000000000000000000)) (not (= x86 1461501637330902918203684832716283019655932542976)) (not (= x86 13116146399946975302596254860212112502091447646307958763727216123866297401344)) (not (= x86 265030696)) (not (= x86 4294967296)) (not (= x86 418493994)) (not (= x86 33540519)) (not (= x86 2307130307)) (not (= 428079936 x86)) (not (= x86 2362630343)) (not (= 1949782873 x86)) (not (= x86 3336544575)) (not (= 66268296141940672851042108147304593538321322149885339258387047461996478413388 x86)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x86)) (not (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x86)) (not (= x86 404098525)) (not (= x86 1099511627775)) (not (= x86 18446744073709551615)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x86)) (< 10000 x86) (not (= 31536000 x86)) (not (= 2835717307 x86)) (not (= 1631253430 x86)) (not (= 90077150 x86)) (not (= x86 1099511627776)) (not (= 63696388041471822930743579425831364866188647584567569692446183701643513561088 x86)) (not (= 1461501637330902918203684832716283019655932542975 x86)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x86)) (not (= x86 2428475159928928253380189918045730325133814103720850528466242065960167014400)) (not (= x86 115792089237316195423570985008687907853269984665640)) (not (= x86 65535)) (not (= x86 22140752835961941075817313386879028057460502132199729129551447365926944505856)) (not (= 599290589 x86)) (not (= 452312848583266388373324160190187140051835877600158453279131187530910662655 x86)) (not (= x86 1889567281)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x86)) (not (= x86 89953063794570797914675343120038501642627609741519254829220540789936042803200)) (not (= x86 1818647125)) (not (= x86 1997499061)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x86)) (not (= x86 1008072988)) (not (= 1703538655 x86)) (not (= x86 791671133)) (not (= x86 65536)) (not (= x86 55253086691344412491249731323735809531556945173834312332507302207468853002240)) (not (= x86 2446411860))) (not ((_ is x904) (x1610 x86)))))
(assert (x230 x1024))
(assert (x230 x404))
(assert (x230 x1250))
(assert (x230 x2179))
(assert (= x9 (and x272 (not x1765))))
(assert (x384 x434))
(assert (x630 x1791))
(assert (x230 x1091))
(assert (x230 x1809))
(assert (x230 x23))
(assert (x230 x1311))
(assert (x849 x645))
(assert (= (x634 (x2091 x7 1)) (+ 1 (x634 x7))))
(assert (x230 x95))
(assert (x230 x1976))
(assert (= x2171 (and x1620 x2038)))
(assert (= (x153 x1821) 0))
(assert (x230 x138))
(assert (x230 x1175))
(assert (x230 x757))
(assert (x230 x1252))
(assert (= (and x1672 x1769) x1153))
(assert (x1254 x1124))
(assert (x230 x1124))
(assert (x230 x1630))
(assert (= (x634 (x2091 x1851 1)) (+ (x634 x1851) 1)))
(assert (x230 x2089))
(assert (x230 x2049))
(assert (x230 x304))
(assert (x230 x1695))
(assert (= x1136 (and x1106 x1678)))
(assert (= (and x251 x586) x908))
(assert (x64 x144 x365))
(assert (x230 x2118))
(assert (x230 x535))
(assert (x230 x1347))
(assert (= (x634 (x904 13116146399946975302596254860212112502091447646307958763727216123866297401344)) 13116146399946975302596254860212112502091447646307958763727216123866297401344))
(assert (= (and (not x2183) x1977) x453))
(assert (= x482 (and x1735 x105)))
(assert (= x446 (and x499 x2026)))
(assert (= x109 (x634 (x1610 x109))))
(assert (x230 x1141))
(assert (x230 x1454))
(assert (x230 x90))
(assert (= (x634 (x1610 x1973)) x1973))
(assert (x230 x775))
(assert (x230 x863))
(assert (= x1660 (and x1164 x2186)))
(assert (x230 x1051))
(assert (= x1387 (and x1592 x1874)))
(assert (= 0 (x153 x517)))
(assert (x230 x881))
(assert (x230 x1987))
(assert (x230 x1060))
(assert (x230 x1352))
(assert (x230 x1707))
(assert (x230 x1065))
(assert (= (and x1753 x1271) x1885))
(assert (x230 x85))
(assert (x230 x1017))
(assert (= 0 (x153 x1956)))
(assert (= (and (not x1507) x279) x128))
(assert (x230 x393))
(assert (= (x153 x1940) 0))
(assert (= (x904 13116146399946975302596254860212112502091447646307958763727216123866297401344) (x1610 13116146399946975302596254860212112502091447646307958763727216123866297401344)))
(assert (x230 x2071))
(assert (x230 x815))
(assert (x230 x689))
(assert (x230 x365))
(assert (x230 x268))
(assert (x230 x853))
(assert (x230 x643))
(assert (x230 x213))
(assert (x230 x1366))
(assert (x230 x850))
(assert (x849 x301))
(assert (x849 x2161))
(assert (= (x904 89953063794570797914675343120038501642627609741519254829220540789936042803200) (x1610 89953063794570797914675343120038501642627609741519254829220540789936042803200)))
(assert (x230 x422))
(assert (= (x904 2307130307) (x1610 2307130307)))
(assert (x849 x398))
(assert (x230 x819))
(assert (x230 x130))
(assert (x230 x255))
(assert (x230 x237))
(assert (x849 x619))
(assert (= x1231 (or x1681 x1180 x1088 x1288 x1551)))
(assert (x230 x1742))
(assert (x230 x1062))
(assert (x849 x1040))
(assert (x849 x2156))
(assert (x230 x1448))
(assert (x230 x1478))
(assert (x230 x303))
(assert (= (and (not x911) x1184) x1232))
(assert (x230 x16))
(assert (x230 x587))
(assert (x64 x72 x1390))
(assert (= (x153 x803) 0))
(assert (= (and x697 x1384) x1251))
(assert (= x1061 (and x362 x125)))
(assert (= x1287 (and (not x2133) x1420)))
(assert (x230 x669))
(assert (x230 x1508))
(assert (=> (<= x1405 10000) (= (x904 x1405) (x1610 x1405))))
(assert (= (x153 x345) 0))
(assert (x230 x1593))
(assert (x230 x1913))
(assert (x230 x399))
(assert (= (=> (and (= x1376 (< x831 x330)) (or (and (= x2011 (x1011 (+ x1642 x831))) x1376) (not x1376))) x1856) x555))
(assert (= 0 (x153 x2118)))
(assert (x230 x312))
(assert (x630 x1504))
(assert (x230 x1278))
(assert (x230 x1705))
(assert (x230 x2059))
(assert (= x1477 (and x2087 (not x1393))))
(assert (x230 x701))
(assert (x230 x1361))
(assert (x230 x704))
(assert (x230 x764))
(assert (x230 x1108))
(assert (x230 x1941))
(assert (= x650 (=> (and (= (x1011 (+ x234 32)) x1383) (= (x1011 (+ 32 x1203)) x1597) (= x1698 (< 0 x1590)) (= x1590 (x702 x1093)) (= x1093 (x1728 x2065)) (= x2065 (x1011 (+ x2118 32))) (= (x1011 (+ 32 x1093)) x957) (= (x1011 (+ x1392 x767)) x234) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x645) x767) (= x645 (x1011 (+ 31 x897))) (= (x486 (- x234 x1203)) x24)) (and (=> (and (and (= x1383 x864) (= x957 x1298) (= x1948 (< 32 x1590)) (= x1451 (x227 x1298))) x1698) (and (=> (and (not x1948) (= 32 x1206)) x1604) (=> (and x1948 (and (= (x1011 (+ 32 x1383)) x789) (= x2097 (x1595 x2024)) (= (< 64 x1590) x36) (= (x1011 (+ 32 x957)) x2024))) (and (=> (and (= 64 x1206) (not x36)) x1604) (=> (and (and (= x1175 (x1011 (+ 64 x957))) (= (> x1590 96) x195) (= (x1011 (+ 64 x1383)) x1884) (= (x840 x1175) x1219)) x36) (and (=> (and (= x1206 96) (not x195)) x1604) (=> x195 x2083))))))) (=> (and (not x1698) (= x1206 0)) x1604)))))
(assert (= (and x346 x884) x2022))
(assert (= (x904 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1610 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x1980 (and (not x1261) x1287)))
(assert (= (x1610 4294967296) (x904 4294967296)))
(assert (x230 x1643))
(assert (x230 x858))
(assert (x230 x1487))
(assert (x230 x885))
(assert (= x1323 (=> (and (= x1687 (or x1483 x944)) (= x1483 (< x74 x2062)) (= (x1011 (+ x1933 x237)) x823) (= (x1011 (+ x652 x142)) x1732) (= (mod (* 32 x1611) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2080) (= x237 (mod (* x1611 128) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x1883) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x398) x283) (= (x1011 (+ 31 x784)) x398) (= (x1011 (+ x2080 32)) x784) (= x74 (x1011 (+ x283 x2062))) (= x808 (< x1933 x823)) (= (x1011 (+ x1732 32)) x1933) (= (x1409 x1881) x142) (= (> x74 18446744073709551615) x944) (not (< x2020 x823)) (= (x1011 (+ x1732 31)) x1487) (= x1284 (x1011 (+ x2062 32))) (= (x1409 x1732) x1611) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020) (> x1487 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1487 x2020) (= (<= x1487 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)))) (= (ite x1687 1 0) x1883) (not (< 18446744073709551615 x142)) (not (> x1611 18446744073709551615))) (and (=> (and (not x808) (= x74 x1549)) x562) (=> x808 x119)))))
(assert (x230 x1679))
(assert (= x2147 (or x2185 x1813)))
(assert (x1167 x187))
(assert (x230 x1034))
(assert (x230 x953))
(assert (= x1066 (and x1030 (not x1552))))
(assert (x230 x835))
(assert (x230 x2000))
(assert (x230 x576))
(assert (= x1673 (or x1119 x2077 x1885 x1331 (and x903 x409) x1880 (and (not x1867) x1220) (and (not x499) x2026) x482 x790 x1660 x1460 x2108 x880 x101 x1668)))
(assert (= (and x1552 x1030) x1384))
(assert (x230 x349))
(assert (= (x153 x1567) 0))
(assert (x230 x189))
(assert (x849 x985))
(assert (= x1437 (and x12 x616)))
(assert (= (x904 115792089237316195423570985008687907853269984665640) (x1610 115792089237316195423570985008687907853269984665640)))
(assert (= 1703538655 (x634 (x904 1703538655))))
(assert (x230 x864))
(assert (= (or x2171 x1132 x1680 x832 x470) x837))
(assert (= x917 (and x263 x910)))
(assert (= (x634 (x904 65535)) 65535))
(assert (= x997 (or x2153 x1136)))
(assert (x230 x269))
(assert (x230 x769))
(assert (x849 x1976))
(assert (x230 x1388))
(assert (= (=> (= (= 0 x1504) x473) (and (=> x473 x1044) (=> (and (not x473) (= (= x940 0) x105)) (and (=> (and (and (= (x995 x1202) x750) (<= 0 x750) (= (> x1929 x750) x1271) (= (x1515 (x1610 x1504) (x904 1) 0) x1202) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x750)) (not x105)) (and (=> x1271 x1044) (=> (and (not x1271) (and (= x239 (x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1929))) (>= x1815 0) (= (< x239 x1815) x2055) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1815) (= x1772 (x486 (- x750 x1929))) (= (x1515 (x1610 x1504) (x904 1) 0) x430) (= x276 (x1515 (x1610 x940) (x904 1) 0)) (= (x696 x276) x1815))) (and (=> (and (and (= x143 1) (= (x1646 128) x25) (= 1 x2027) (= x17 (x1011 (+ x1929 x1815))) (= 32 x1365)) (not x2055)) x140) (=> x2055 x1044))))) (=> x105 x1044))))) x297))
(assert (x230 x1650))
(assert (= x2163 (and x1979 (not x968))))
(assert (x230 x1821))
(assert (= (x904 418493994) (x1610 418493994)))
(assert (x230 x438))
(assert (x230 x1892))
(assert (x230 x1190))
(assert (x230 x569))
(assert (x230 x920))
(assert (x230 x1654))
(assert (= x1534 (=> (and (or (and (not x118) (and (= x530 x209) (= x447 x1539) (= x1531 x1587) (= x1252 x974) (= x2059 x775) (= x85 x225) (= x1238 x1436))) (and x118 (and (= x1493 (x534 (x1610 x797))) (= x160 (x534 (x1610 x109))) (= (<= x160 (x479 (x1610 x109))) x680) (= x2120 x1587) (= x447 x259) (= x1688 x209) (= x85 x1795) x1242 (< x2167 4294967296) x680 (= x1252 x2175) (= (= x1493 (x479 (x1610 x797))) x1242) (= x2059 x1316) (= x1750 x1436)))) (= x118 (> x1843 0))) x889)))
(assert (x230 x1996))
(assert (= x940 (x634 (x1610 x940))))
(assert (= x427 (and x827 x818)))
(assert (x849 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x230 x2066))
(assert (= x2139 (or x1047 x321)))
(assert (= (or x1099 x975) x1859))
(assert (x1254 x1458))
(assert (x230 x1686))
(assert (x230 x29))
(assert (x230 x325))
(assert (x1228 x405))
(assert (x230 x645))
(assert (= (and (not x1698) x1348) x580))
(assert (x1254 x599))
(assert (= (x904 1889567281) (x1610 1889567281)))
(assert (x230 x1285))
(assert (= x933 (and (not x1944) x1374)))
(assert (x230 x1362))
(assert (= 428079936 (x634 (x904 428079936))))
(assert (x230 x1484))
(assert (x230 x1209))
(assert (= (x153 x14) 0))
(assert (x230 x1000))
(assert (x230 x403))
(assert (= x1020 (and (not x2169) x1473)))
(assert (x230 x169))
(assert (x230 x1605))
(assert (x230 x1724))
(assert (x849 x690))
(assert (x230 x755))
(assert (x230 x2048))
(assert (x230 x964))
(assert (x230 x181))
(assert (x230 x1697))
(assert (x230 x1788))
(assert (x230 x405))
(assert (x230 x139))
(assert (x230 x1434))
(assert (= (=> (and (= 32 x813) (= x1422 1)) x728) x1303))
(assert (= (and (not x156) x1432) x106))
(assert (= (x1570 x1559) 0))
(assert (= (and (not x1746) x1663) x1132))
(assert (= x1620 (and x1746 x1663)))
(assert (= 0 (x153 x148)))
(assert (x630 x465))
(assert (= x1249 (=> (and (= x48 0) (not (> x2125 18446744073709551615)) (not (= x1843 0)) (= (x1011 (+ x57 32)) x1642) (= x81 (x1011 (+ 32 x1277))) (= x1625 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2084)) (= x284 (x1011 (+ x57 x1444))) (= (< x284 x57) x1210) (= (x1011 (+ x2167 x81)) x983) (= x1878 (or x1210 x1177)) (= (< 0 x831) x1827) (not (or (and (> 32 x2167) (= (<= x2167 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x2167 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1380) x1444) (= x57 (x1011 (+ x1625 x81))) (= (x1011 (+ 31 x1567)) x84) (= x1380 (x1011 (+ 31 x399))) (= x1040 (x1011 (+ 31 x831))) (= (x1011 (+ x2149 x831)) x1190) (= (x397 x81) x2125) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1040) x1186) (= x48 (ite x1878 1 0)) (or (and (> x983 x84) (= (<= x983 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x84))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x84) (<= x983 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x831 (x397 x1567)) (= x399 (x1011 (+ x1186 32))) (= x2084 (x1011 (+ 31 x2167))) (= (x1011 (+ x1567 32)) x2149) (= x1177 (> x284 18446744073709551615)) (not (> x1190 x983)) (not (< 18446744073709551615 x831)) (= (x1011 (+ x81 x2125)) x1567)) (and (=> (and (and (= x1165 x2149) (= x1151 (x65 x1165)) (= x1806 x1642) (= x910 (> x831 32))) x1827) (and (=> (and (= x330 32) (not x910)) x555) (=> (and (and (= (x1011 (+ x1642 32)) x618) (= x1691 (> x831 64)) (= x1748 (x525 x1089)) (= x1089 (x1011 (+ 32 x2149)))) x910) (and (=> (and (and (= x572 (x1011 (+ 64 x2149))) (= (x1011 (+ 64 x1642)) x1123) (= x2103 (< 96 x831)) (= x1474 (x665 x572))) x1691) (and (=> (and (= x330 96) (not x2103)) x555) (=> x2103 x68))) (=> (and (not x1691) (= x330 64)) x555))))) (=> (and (not x1827) (= 0 x330)) x555)))))
(assert (x230 x2082))
(assert (x230 x1455))
(assert (= (x904 1703538655) (x1610 1703538655)))
(assert (x230 x81))
(assert (x230 x641))
(assert (x230 x2143))
(assert (= (x153 x2065) 0))
(assert (x230 x607))
(assert (x230 x602))
(assert (x230 x1688))
(assert (x230 x1089))
(assert (= (=> (and (= x1622 x1619) (= x1199 (not (> x1391 32))) (= x1956 x563) (= (x553 x1956) x1408)) (and (=> (= 32 x1315) x1864) x1199)) x145))
(assert (= x2138 (and x451 x982)))
(assert (x849 x1380))
(assert (x230 x1539))
(assert (x230 x1590))
(assert (x230 x1094))
(assert (x230 x1981))
(assert (x230 x942))
(assert (x849 x422))
(assert (x230 x785))
(assert (x230 x199))
(assert (x230 x1441))
(assert (= (=> (and (= (x1409 x652) x1107) (= (x1011 (+ 160 x1549)) x865) (= (> x1709 18446744073709551615) x320) (= x1714 (x1011 (+ x865 32))) (= (x1011 (+ x652 x1182)) x1500) (= x69 (x1011 (+ 32 x1500))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2020 x1586)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020))) (not (> x1182 18446744073709551615)) (= (x1011 (+ x865 x363)) x1709) (= (or x113 x320) x1957) (= (< x69 x382) x1745) (= (> x865 18446744073709551615) x1403) (<= x1107 1461501637330902918203684832716283019655932542975) (= x382 (x1011 (+ x69 x757))) (= 0 x1342) (= (> x865 x1709) x113) (= x850 (x1409 x1500)) (= (> x1549 x865) x228) (= (mod (* x850 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x188) (= x132 (x1011 (+ x1762 31))) (= (x1011 (+ x188 32)) x1762) (= x1586 (x1011 (+ 31 x1500))) (= (or x1403 x228) x1329) (= (ite x1957 1 0) x1342) (= x363 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x132)) (= (mod (* x850 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x757) (= 0 x2010) (= (x1409 x1073) x1182) (= x2010 (ite x1329 1 0)) (not (< 18446744073709551615 x850)) (not (or (and (= (<= x158 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x158 160)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x158))) (not (> x382 x2020))) (and (=> x1745 x2092) (=> (and (not x1745) (= x393 x1709)) x1001))) x1489))
(assert (x230 x1894))
(assert (= (x1610 1818647125) (x904 1818647125)))
(assert (x230 x1586))
(assert (x230 x2174))
(assert (x230 x986))
(assert (x230 x1224))
(assert (x849 x76))
(assert (x230 x1377))
(assert (x230 x1762))
(assert (x849 x365))
(assert (x1254 x172))
(assert (x230 x2054))
(assert (= x1098 (or x1969 x1528)))
(assert (x230 x2182))
(assert (x230 x1010))
(assert (x849 x1427))
(assert (x230 x548))
(assert (x230 x25))
(assert (= (x904 1997499061) (x1610 1997499061)))
(assert (= (and x795 (not x531)) x316))
(assert (x230 x1516))
(assert (x230 x115))
(assert (= 0 (x153 x1175)))
(assert (x230 x1192))
(assert (= x1773 (or x2176 x471)))
(assert (x230 x2001))
(assert (= x1813 (and x311 (not x666))))
(assert (x849 18446744073709551615))
(assert (x230 x1562))
(assert (= (=> (and (or (and (= (x1011 (+ x881 x822)) x226) x1946) (not x1946)) (= x1946 (> x661 x881))) x1396) x673))
(assert (x230 x1959))
(assert (x230 x1215))
(assert (x230 x1365))
(assert (= x2165 (and x1356 x1653)))
(assert (x230 x1601))
(assert (= (x904 2362630343) (x1610 2362630343)))
(assert (x230 x1169))
(assert (= x640 (and x997 (not x1946))))
(assert (x230 x41))
(assert (x230 x1648))
(assert (= (and x708 (not x1459)) x1181))
(assert (x230 x543))
(assert (x230 x1107))
(assert (x230 x800))
(assert (x230 x234))
(assert (x230 x1666))
(assert (x230 x1433))
(assert (= x1490 (or x751 x429)))
(assert (= (and (not x1502) x2018) x593))
(assert (= (and x52 x59) x1184))
(assert (x230 x1973))
(assert (x230 x1964))
(assert (x230 x1740))
(assert (x230 x501))
(assert (= (and x1633 (not x2088)) x1289))
(assert (x230 x69))
(assert (x230 x1860))
(assert (= 0 (x174 x660)))
(assert (= x793 (and x1946 x997)))
(assert (= 1008072988 (x634 (x904 1008072988))))
(assert (x230 x398))
(assert (x849 x1083))
(assert (x230 x1358))
(assert (x230 x1879))
(assert (= x1546 (=> (and (= (x1011 (+ x826 x1)) x1941) (= x1349 (x1011 (+ x1684 32))) (= x1872 (< 18446744073709551615 x1259)) (= x1774 (x1011 (+ 31 x853))) (= (ite x663 1 0) x102) (= (x1409 x533) x960) (not (< x2020 x39)) (= (x1011 (+ x1925 32)) x927) (= x1925 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1774)) (= x619 (x1011 (+ x927 31))) (= (x1409 x1812) x1) (not (or (> x1468 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1468)) (< x1468 288)))) (not (< 18446744073709551615 x853)) (<= x1943 18446744073709551615) (= (x1011 (+ 32 x150)) x126) (= (x1011 (+ x1 31)) x1285) (= x23 (x1011 (+ x2066 x726))) (= (x1011 (+ x961 32)) x2058) (= x872 (x1011 (+ x23 x1574))) (= x556 (< x1630 x1684)) (= (x1409 x1204) x1236) (<= x1080 18446744073709551615) (= x192 (not (< x1377 x221))) (= x785 (x1011 (+ 31 x872))) (= x250 (ite x1942 1 0)) (= (ite x1297 1 0) x1357) (= (x1011 (+ x2107 32)) x335) (= x27 (x1011 (+ x2058 32))) (= 0 x1926) (= (x1011 (+ x135 32)) x40) (= x829 (x1409 x961)) (<= x829 18446744073709551615) (= (x1011 (+ 32 x533)) x1204) (= x1767 (x1011 (+ x412 32))) (= x277 (= x960 0)) (= x1454 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x619)) (= (x1011 (+ x853 x1349)) x828) (= x1377 (x1011 (+ 32 x726))) (= (< x1684 x150) x981) (= x250 0) (not (> x1574 18446744073709551615)) (= x1574 (x1409 x23)) (= (x1409 x872) x853) (= (x1409 x1169) x1253) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1086)) (and (= (<= x1086 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)) (> x2020 x1086))) (= (x1011 (+ x126 32)) x1013) (= x533 (x1011 (+ 32 x1169))) (= (x1011 (+ x1812 31)) x1086) (= (x1011 (+ x1253 x23)) x1812) (= (x1409 x27) x268) (= x1468 (x486 (- x2020 x1174))) (<= x1236 18446744073709551615) (= x2107 (x1011 (+ 32 x1767))) (= x412 (x1011 (+ 32 x1894))) (= (< x1259 x1630) x271) (= x1926 (ite x2037 1 0)) (= x935 (x1011 (+ x111 32))) (>= 18446744073709551615 x268) (= x1174 (x1011 (+ x2066 x726))) (not (< x2020 x347)) (= (x1011 (+ x872 32)) x1754) (= x2037 (or x981 x1905)) (= x605 (> x1630 18446744073709551615)) (= x1080 (x1409 x2058)) (= x961 (x1011 (+ x1204 32))) (>= 18446744073709551615 x2075) (= x60 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1993)) (= (x1409 x726) x2066) (= x111 (x1011 (+ x27 32))) (not (< 18446744073709551615 x1)) (= x960 x102) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x785)) (and (< x785 x2020) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x785) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x1297 (or x605 x556)) (= (< 18446744073709551615 x1684) x1905) (= x1684 (x1011 (+ 288 x150))) (= (x1011 (+ 31 x40)) x1993) (not (> x1253 18446744073709551615)) (= (x1011 (+ 32 x335)) x1116) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1285) x135) (= x1894 (x1011 (+ x1013 32))) (= (x1409 x111) x2075) (= 0 x1357) (= x39 (x1011 (+ x1743 x1))) (= x347 (x1011 (+ x1754 x853))) (= x663 (not x277)) (not (< 18446744073709551615 x2066)) (= (x1409 x935) x1943) (= (x1011 (+ x1630 32)) x826) (= x1630 (x1011 (+ x1684 x1454))) (= x1259 (x1011 (+ x1630 x60))) (= x1743 (x1011 (+ 32 x1812))) (= (or x1872 x271) x1942) (= (x1011 (+ 32 x23)) x1169)) (and x192 (=> (= x873 x1259) x490)))))
(assert (x230 x1989))
(assert (x230 x1309))
(assert (= (x904 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x1610 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (x230 x725))
(assert (x230 x1873))
(assert (x849 x285))
(assert (= x2185 (and x666 x311)))
(assert (x230 x1731))
(assert (x230 x1775))
(assert (= x1191 (or x1685 x116)))
(assert (x230 x2040))
(assert (x230 x568))
(assert (= x1099 (and x1745 x2139)))
(assert (x230 x989))
(assert (x230 x4))
(assert (x230 x805))
(assert (x230 x1783))
(assert (x230 x595))
(assert (x230 x34))
(assert (x230 x1414))
(assert (x230 x1218))
(assert (x230 x226))
(assert (x230 x551))
(assert (= (and x1753 (not x1271)) x478))
(assert (= x394 (and (not x719) x1773)))
(assert (x230 x1683))
(assert (x230 x1677))
(assert (x230 x943))
(assert (= x1195 (and (not x506) x415)))
(assert (= (and x1307 x1626) x1221))
(assert (x230 x300))
(assert (x230 x1214))
(assert (= (=> (and (= (x1011 (+ 32 x1410)) x1257) (= (x1011 (+ x2054 x748)) x1410) (= x524 (ite x1615 1 0)) (not (< 18446744073709551615 x583)) (not (= 0 x1596)) (= (x1011 (+ x1776 32)) x748) (or (and (> x920 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1362)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1362) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x920)) (> x1362 x920))) (= x599 (x1011 (+ 31 x1345))) (= (> x136 0) x125) (not (< x1362 x1079)) (= (< 18446744073709551615 x423) x883) (= x920 (x1011 (+ 31 x1981))) (= x1362 (x1011 (+ x1345 x748))) (= x1322 (x1011 (+ x307 32))) (= x1083 (x1011 (+ 31 x1322))) (= x136 (x1558 x1981)) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x82) x307) (= (x1011 (+ x28 x136)) x1079) (= (x1011 (+ 32 x1981)) x28) (= x1615 (or x883 x2146)) (= (x1011 (+ x136 31)) x82) (not (> x136 18446744073709551615)) (= x583 (x1558 x748)) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1083) x951) (= x2054 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x599)) (= x2146 (> x1410 x423)) (= (x1011 (+ x1410 x951)) x423) (not (or (and (> 32 x1345) (= (<= x1345 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1345 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1981 (x1011 (+ x583 x748))) (= 0 x524)) (and (=> x125 x1547) (=> (and (= x540 0) (not x125)) x2029))) x232))
(assert (x230 x1583))
(assert (= x341 (and x503 x1797)))
(assert (x230 x546))
(assert (= (=> (and (= (ite (> 1000000000000000000000000000 x2101) 1 0) x1722) (<= 0 x1587) (= x763 (ite (not x1351) 1 0)) (= (x2004 x763 x1722) x88) (= (= x1455 0) x1351) (<= x1587 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x88) x1765) (= x2101 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1492))) (and (=> (and (= x1096 0) (not x1765)) x978) (=> (and x1765 (and (= x214 (mod (* x1492 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x1587 0) x508))) (and (=> (and x508 (and (= x1367 (x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x513))) (<= x85 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x85 x1367) x1525) (= x513 (div x214 x1587)) (<= 0 x85))) (and (=> (and (and (= x1571 (x1011 (+ x513 x85))) (<= x2040 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1027 x1829) x2040) (<= 0 x1252) (= (> x2040 x1252) x1185) (= x378 (x1515 (x1610 x454) (x904 15) 0)) (>= x2040 0) (= (x2091 x378 1) x1829) (<= x1252 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1525)) (and (=> (and x1185 (= x1096 0)) x978) (=> (and (and (= (x486 (- x1252 x2040)) x240) (= x817 1)) (not x1185)) x1983))) (=> (and (= 0 x1096) x1525) x978))) (=> (and (not x508) (= x1096 0)) x978))))) x1954))
(assert (x230 x1236))
(assert (x230 x781))
(assert (= x1504 (x634 (x1610 x1504))))
(assert (x230 x1890))
(assert (x230 x1985))
(assert (x230 x1850))
(assert (x230 x1667))
(assert (x230 x83))
(assert (x230 x257))
(assert (= (and x609 (not x597)) x1170))
(assert (x230 x582))
(assert (x230 x686))
(assert (= (and (not x2038) x1620) x832))
(assert (= x1021 (and x777 x1464)))
(assert (x230 x654))
(assert (x230 x27))
(assert (=> (<= x2044 10000) (= (x904 x2044) (x1610 x2044))))
(assert (x230 x988))
(assert (x230 x1165))
(assert (= (or x62 x887 x580 x357 x212) x963))
(assert (x230 x70))
(assert (x230 x1363))
(assert (= (x1610 65535) (x904 65535)))
(assert (= (x634 (x904 89953063794570797914675343120038501642627609741519254829220540789936042803200)) 89953063794570797914675343120038501642627609741519254829220540789936042803200))
(assert (= (=> (= x1096 x817) x1983) x978))
(assert (x230 x2065))
(assert (= (x153 x563) 0))
(assert (x230 x348))
(assert (x230 x1624))
(assert (x230 x390))
(assert (= (x634 (x904 55253086691344412491249731323735809531556945173834312332507302207468853002240)) 55253086691344412491249731323735809531556945173834312332507302207468853002240))
(assert (x230 x454))
(assert (x230 x830))
(assert (x230 x2129))
(assert (= x1389 (and x547 x323)))
(assert (x230 x391))
(assert (= (and x446 (not x182)) x1662))
(assert (x230 x307))
(assert (= (and x1797 (not x503)) x2032))
(assert (x230 x150))
(assert (x230 x315))
(assert (x230 x1714))
(assert (= x1789 (=> (and (= x349 (x1975 x760)) (= x760 x383) (= x1855 (not (< 32 x881))) (= x822 x196)) (and (=> (= 32 x661) x673) x1855))))
(assert (= 0 (x153 x1244)))
(assert (x230 x1147))
(assert (x230 x515))
(assert (x230 x2161))
(assert (x230 x940))
(assert (x230 x8))
(assert (x230 x959))
(assert (= 0 (x153 x459)))
(assert (= (and x926 x377) x1616))
(assert (= x68 (=> (and (= x1519 (not (< 128 x831))) (= (x1379 x2063) x294) (= x2063 (x1011 (+ 96 x2149))) (= (x1011 (+ 96 x1642)) x1922)) (and (=> (= x330 128) x555) x1519))))
(assert (x230 x784))
(assert (x230 x1845))
(assert (= x451 (or x967 x1428)))
(assert (= x758 (and x1302 (not x1543))))
(assert (x230 x1332))
(assert (x1228 x1346))
(assert (x230 x952))
(assert (x564 x2115))
(assert (x230 x436))
(assert (= x609 (and x1261 x1287)))
(assert (= (x634 (x904 31536000)) 31536000))
(assert (x230 x1918))
(assert (= (x904 1099511627775) (x1610 1099511627775)))
(assert (= (and (not x2104) x1978) x735))
(assert (= x170 (and (not x778) x2019)))
(assert (x230 x851))
(assert (x230 x428))
(assert (x230 x1842))
(assert (x230 x1982))
(assert (x230 x1606))
(assert (x230 x1588))
(assert (= (x1610 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x904 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= true x147))
(assert (x230 x1429))
(assert (x230 x935))
(assert (=> (>= 10000 x1791) (= (x904 x1791) (x1610 x1791))))
(assert (x230 x533))
(assert (x230 x1299))
(assert (= (or x1840 (and x339 (not x1780))) x1047))
(assert (= 63696388041471822930743579425831364866188647584567569692446183701643513561088 (x634 (x904 63696388041471822930743579425831364866188647584567569692446183701643513561088))))
(assert (= x1498 (and (not x420) x574)))
(assert (= 66268296141940672851042108147304593538321322149885339258387047461996478413388 (x634 (x904 66268296141940672851042108147304593538321322149885339258387047461996478413388))))
(assert (x230 x583))
(assert (x230 x871))
(assert (= (x1610 599290589) (x904 599290589)))
(assert (= (and x147 x1811) x1270))
(assert (x230 x1638))
(assert (x230 x1130))
(assert (x849 x2154))
(assert (x1254 x645))
(assert (= x321 (and (not x926) x377)))
(assert (= 0 (x153 x2182)))
(assert (x230 x1447))
(assert (x230 x1266))
(assert (x230 x223))
(assert (x230 x382))
(assert (=> (<= x940 10000) (= (x904 x940) (x1610 x940))))
(assert (x230 x1602))
(assert (x230 x1596))
(assert (x230 x530))
(assert (x230 x1640))
(assert (x230 x1244))
(assert (x230 x103))
(assert (x230 x1896))
(assert (= (x1610 1631253430) (x904 1631253430)))
(assert (x230 x1696))
(assert (= (x1610 2835717307) (x904 2835717307)))
(assert (x230 x283))
(assert (= (and x1326 x1968) x708))
(assert (x230 x787))
(assert (= x1378 (and (not x808) x1734)))
(assert (x230 x2006))
(assert (= x804 (or x915 x278)))
(assert (x230 x545))
(assert (x230 x1625))
(assert (x230 x496))
(assert (x230 x890))
(assert (x230 x239))
(assert (x230 x2078))
(assert (x230 x1243))
(assert (x230 x2034))
(assert (x230 x520))
(assert (x630 x1606))
(assert (x230 x1310))
(assert (x230 x157))
(assert (x230 x1576))
(assert (x230 x295))
(assert (x230 x1882))
(assert (x230 x990))
(assert (x230 x1861))
(assert (= (and x1986 x1636) x2130))
(assert (= (and x1159 (not x2073)) x2141))
(assert (x230 x1612))
(assert (x64 x1736 x1022))
(assert (x230 x826))
(assert (x230 x1791))
(assert (x230 x1350))
(assert (x230 x857))
(assert (x230 x1832))
(assert (= (x1570 x648) 0))
(assert (x230 x74))
(assert (= (=> (and (= x575 (< 18446744073709551615 x1058)) (= x704 (x1011 (+ x189 32))) (= x46 (x1409 x189)) (<= x720 452312848583266388373324160190187140051835877600158453279131187530910662655) (= (x486 (- x2020 x1933)) x2168) (= x243 (x1409 x772)) (= x772 (x1011 (+ x1029 32))) (= (x1409 x1933) x720) (= x879 (x1011 (+ x80 32))) (= x189 (x1011 (+ x772 32))) (= (not (> x823 x704)) x544) (= x1065 (x1409 x1029)) (= 0 x786) (= x1058 (x1011 (+ x74 128))) (= x1029 (x1011 (+ x1933 32))) (>= 255 x1065) (= x80 (x1011 (+ 32 x74))) (= (ite x1463 1 0) x786) (= (or x575 x521) x1463) (= (x1011 (+ x879 32)) x358) (= x521 (< x1058 x74)) (not (or (> x2168 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 128 x2168) (= true (<= x2168 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) (and (=> (= x1549 x1058) x562) x544)) x119))
(assert (= x490 (=> (and (= x1501 (> x407 18446744073709551615)) (or (and (< x2 x2020) (= (<= x2 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020))) (= x407 (x1011 (+ x873 x509))) (= (x1011 (+ x1395 x761)) x841) (= x246 (> x841 x761)) (= x1494 (mod (* 32 x1421) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (or x1501 x1482) x2012) (= (x1011 (+ x1705 32)) x1881) (= (x1011 (+ x652 x2000)) x1205) (= x1176 0) (not (> x2000 18446744073709551615)) (= (x1011 (+ x873 32)) x131) (= (x1011 (+ x1205 31)) x2) (= (x1011 (+ x117 31)) x1458) (= (x1011 (+ x1205 32)) x761) (= (> x873 x407) x1482) (= (x1409 x1205) x1421) (= x1395 (mod (* 128 x1421) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1011 (+ x1494 32)) x117) (not (> x1421 18446744073709551615)) (= x2000 (x1409 x1881)) (not (> x841 x2020)) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1458) x509) (= (ite x2012 1 0) x1176)) (and (=> (and (= x407 x610) (not x246)) x1617) (=> x246 x32)))))
(assert (x230 x2044))
(assert (x230 x1338))
(assert (x230 x823))
(assert (= (or x2005 x437) x579))
(assert (= x112 (and x2137 (not x2031))))
(assert (x230 x2063))
(assert (x230 x1556))
(assert (x230 x487))
(assert (= (or x868 x1355) x2019))
(assert (x230 x1203))
(assert (= (and x839 x837) x1157))
(assert (x230 x951))
(assert (x230 x922))
(assert (x230 x1253))
(assert (x849 x82))
(assert (= (x1610 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x904 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x230 x1522))
(assert (x230 x2155))
(assert (x849 x1644))
(assert (= (and x537 x1859) x1402))
(assert (= (x634 (x904 1889567281)) 1889567281))
(assert (x230 x2041))
(assert (x230 x658))
(assert (x230 x1743))
(assert (x230 x2128))
(assert (x230 x1073))
(assert (= (and x2138 (not x1092)) x577))
(assert (= x2083 (=> (and (= (x1011 (+ 96 x957)) x475) (= x674 (x1011 (+ 96 x1383))) (= x516 (not (> x1590 128))) (= x2162 (x1711 x475))) (and x516 (=> (= x1206 128) x1604)))))
(assert (x230 x1536))
(assert (x230 x860))
(assert (= (=> (and (= x2109 (x1011 (+ x424 32))) (= (x1011 (+ x1320 x1441)) x1091) (= (x1011 (+ 32 x461)) x1413) (= x211 0) (= (< 18446744073709551615 x1666) x824) (= x1452 (x1409 x1643)) (= x1344 (not (< x115 x2126))) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1717)) (and (= (<= x1717 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)) (< x1717 x2020))) (= (> x1723 x1666) x737) (= x1602 (x1011 (+ 31 x1916))) (= (or x1703 x2007) x1121) (= (x1011 (+ 31 x1441)) x690) (= (< 18446744073709551615 x1051) x477) (= (x1011 (+ 32 x2109)) x1248) (= (x1011 (+ x1860 32)) x1861) (not (< 18446744073709551615 x1441)) (<= x180 18446744073709551615) (= (x1011 (+ x1770 32)) x807) (not (> x893 x2020)) (= x1920 (x1409 x41)) (= (ite x1113 1 0) x1401) (= (> x1666 x1051) x253) (= (or x737 x824) x1109) (= (x1011 (+ x1781 x1407)) x1564) (= x1320 (x1011 (+ 32 x1666))) (= (or x253 x477) x816) (= 0 x496) (or (and (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1602 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2020 x1602) (= (<= x1602 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)))) (= x180 (x1409 x1770)) (= x303 (x1011 (+ x1781 x1861))) (= (not x217) x1113) (>= 18446744073709551615 x1172) (= x1781 (x1409 x1860)) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2123) x1110) (not (> x1781 18446744073709551615)) (not (> x1218 18446744073709551615)) (= (x1011 (+ 31 x47)) x1785) (= (x1011 (+ x617 32)) x2085) (= x1452 x1401) (= x103 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x690)) (= x1703 (< x1508 x1051)) (= (x1011 (+ 32 x2085)) x1650) (<= x979 18446744073709551615) (= x885 (x1011 (+ 31 x1781))) (= x1266 (x1011 (+ x41 x1920))) (= x1860 (x1011 (+ x1266 x1218))) (= x893 (x1011 (+ x1050 x1441))) (= x2123 (x1011 (+ 31 x1701))) (= (x1011 (+ x1650 32)) x1010) (>= 18446744073709551615 x1873) (= (x1011 (+ x1248 32)) x1689) (= x367 (x1409 x1650)) (= (x1011 (+ 31 x1860)) x1717) (= x1916 (x1011 (+ x1266 x1593))) (= x496 (ite x1109 1 0)) (= x1770 (x1011 (+ 32 x1643))) (= (x1409 x1266) x1593) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x885) x1467) (= (x1011 (+ x1467 32)) x1701) (= (x1409 x1916) x1441) (= (x1011 (+ 32 x41)) x115) (= (x1011 (+ 32 x1723)) x1055) (= x1407 (x1011 (+ 32 x1051))) (not (< 18446744073709551615 x1593)) (= (x1409 x1010) x1873) (= (x1011 (+ x1666 x952)) x1051) (= (x486 (- x2020 x718)) x2174) (= (ite x1121 1 0) x1281) (= (< 18446744073709551615 x1508) x2007) (= (x1409 x617) x979) (= (x1011 (+ x807 32)) x617) (= (x1011 (+ x1110 x1051)) x1508) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1785) x952) (= x304 (x1011 (+ 32 x1266))) (= x1172 (x1409 x2085)) (= (x1409 x807) x1394) (not (< x2020 x303)) (<= x367 18446744073709551615) (= (x1409 x304) x1218) (= x217 (= x1452 0)) (not (< 18446744073709551615 x1920)) (= (x1011 (+ x1723 288)) x1666) (= (x1011 (+ x41 x1920)) x718) (= x1314 (x1011 (+ 32 x1689))) (<= x1394 18446744073709551615) (= x211 (ite x816 1 0)) (= (x1011 (+ 32 x1055)) x461) (= x1281 0) (= (x1011 (+ 32 x103)) x47) (= (x1011 (+ x1916 32)) x1050) (= (x1011 (+ 32 x304)) x1643) (= (x1011 (+ x1413 32)) x424) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2174) (and (= true (<= x2174 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 288 x2174))))) (and (=> (= x1508 x176) x1125) x1344)) x460))
(assert (x230 x1353))
(assert (x1254 x985))
(assert (x230 x1446))
(assert (= x185 (and x2102 x1318)))
(assert (x630 x782))
(assert (x230 x1531))
(assert (= x868 (or x1387 x1221 x727 x463 (and x740 x386) x274 x971 x1071 x396 x1669 x2130 x1156 x876)))
(assert (x230 x2011))
(assert (= (x634 (x904 1818647125)) 1818647125))
(assert (= (x153 x2024) 0))
(assert (= x1424 (and x2019 x778)))
(assert (x230 x2098))
(assert (= (=> (and (= x1056 (not (> x2079 1))) (not (= 0 x337))) (and x1056 (=> (and (= x800 x2110) (= x2172 x309) (= x258 x1031) (= x959 x1784) (= x1516 x825) (= x996 x2111) (= x1034 x416)) x1489))) x2070))
(assert (= x1405 (x634 (x1610 x1405))))
(assert (x230 x261))
(assert (x230 x1876))
(assert (= x191 (=> (and (= x839 (> x95 x897)) (or (not x839) (and x839 (= (x1011 (+ x897 x1392)) x1152)))) x650)))
(assert (x230 x465))
(assert (x630 x97))
(assert (= (and (not x1691) x917) x1288))
(assert (x230 x872))
(assert (x230 x1925))
(assert (= x699 (and (not x51) x1021)))
(assert (x230 x573))
(assert (x230 x298))
(assert (x849 x1142))
(assert (x230 x1404))
(assert (x230 x1096))
(assert (= x97 (x634 (x1610 x97))))
(assert (= x1676 (and (not x1672) x1769)))
(assert (= (and x415 x506) x409))
(assert (x849 x1124))
(assert (x230 x2154))
(assert (x1254 x1241))
(assert (= x116 (and x118 x2147)))
(assert (= (or x908 x293) x52))
(assert (x230 x2149))
(assert (x1254 x885))
(assert (= x463 (and (not x275) x296)))
(assert (x230 x1140))
(assert (x230 x2180))
(assert (= (and (not x604) x735) x1692))
(assert (= (=> (and (= x1582 (< 0 x1596)) (or (and (and (= x241 x1144) (= x1876 x1871) (= x710 x448) (= x738 (= x1970 (x58 (x1610 x1405)))) (> 4294967296 x1345) (= x1652 x390) (= (>= (x58 (x1610 x109)) x1683) x1801) (= (x1706 (x1610 x1405)) x1970) (= x1246 x1272) (= x1388 x2082) x1801 (= x1446 x1974) (= x1683 (x1706 (x1610 x109))) x738) x1582) (and (not x1582) (and (= x1784 x2082) (= x1034 x1246) (= x2110 x1871) (= x309 x710) (= x241 x1031) (= x825 x1446) (= x1652 x2111))))) x670) x679))
(assert (x230 x649))
(assert (= (x634 (x1610 x465)) x465))
(assert (x230 x254))
(assert (x849 x1022))
(assert (= (x1570 x130) 0))
(assert (x230 x1561))
(assert (= (or x593 x1471 x1082) x1355))
(assert (x1254 x301))
(assert (x230 x1485))
(assert (= x765 (and x2186 (not x1164))))
(assert (= (and (not x827) x818) x1637))
(assert (x230 x334))
(assert (x230 x177))
(assert (x230 x899))
(assert (x1911 x943))
(assert (x230 x1193))
(assert (x230 x1042))
(assert (x230 x1453))
(assert (x230 x2114))
(assert (x230 x786))
(assert (x230 x1937))
(assert (= (x634 (x2091 x1052 1)) (+ (x634 x1052) 1)))
(assert (x230 x259))
(assert (x230 x2109))
(assert (x230 x1279))
(assert (x230 x1736))
(assert (x230 x2105))
(assert (= (=> (and (or x168 (not x168)) (= (= x1843 0) x168)) x1249) x889))
(assert (x230 x722))
(assert (x230 x1619))
(assert (= 0 (x153 x475)))
(assert (x849 x1371))
(assert (x230 x1618))
(assert (x230 x124))
(assert (x230 x1903))
(assert (x230 x2084))
(assert (= x876 (and x941 x338)))
(assert (x230 x2148))
(assert (x1254 x1785))
(assert (x230 x742))
(assert (= (and x1359 x1385) x204))
(assert (x230 x1814))
(assert (x230 x1831))
(assert (x64 x443 x1976))
(assert (= (or x1702 x869) x1971))
(assert (x230 x2080))
(assert (x230 x692))
(assert (x230 x131))
(assert (x230 x330))
(assert (x230 x363))
(assert (x1254 x966))
(assert (x230 x621))
(assert (x230 x1028))
(assert (x230 x2099))
(assert (= (and x1927 (not x1550)) x915))
(assert (x230 x1524))
(assert (x1254 x1040))
(assert (x230 x1031))
(assert (= (x1610 3336544575) (x904 3336544575)))
(assert (= (and (not x651) x1945) x1669))
(assert (= (and x724 (not x2152)) x510))
(assert (x230 x2003))
(assert (x230 x1614))
(assert (x230 x1784))
(assert (= x1592 (and (not x1356) x1653)))
(assert (x230 x1930))
(assert (= (and x2022 x319) x880))
(assert (= x1680 (and x1318 (not x2102))))
(assert (= (x153 x835) 0))
(assert (= 4294967296 (x634 (x904 4294967296))))
(assert (=> (>= 10000 x1504) (= (x1610 x1504) (x904 x1504))))
(assert (= (and x19 x236) x1386))
(assert (x230 x636))
(assert (= x878 (or x1960 (and (not x207) x1844))))
(assert (= x297 x729))
(assert (x849 x489))
(assert (x230 x1761))
(assert (= (=> (and (= x813 x1581) (= x1422 0)) x728) x151))
(assert (= x727 (and x1502 x2018)))
(assert (x230 x1314))
(assert (x230 x1758))
(assert (x1254 x1285))
(assert (x230 x1391))
(assert (= (or x427 x1637) x1734))
(assert (= x820 (or x134 x2141 x1763)))
(assert (= (and x2096 x1538) x1006))
(assert (x230 x2126))
(assert (x230 x1392))
(assert (x230 x161))
(assert (x230 x749))
(assert (= x396 (and x1804 x1289)))
(assert (x230 x24))
(assert (x230 x822))
(assert (= x137 (and x52 (not x59))))
(assert (x630 x1293))
(assert (x230 x2110))
(assert (= (x634 (x904 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x230 x1853))
(assert (x230 x211))
(assert (x230 x1080))
(assert (= (x1570 x669) 0))
(assert (x230 x1600))
(assert (x230 x1102))
(assert (=> (>= 10000 x782) (= (x1610 x782) (x904 x782))))
(assert (x230 x948))
(assert (= (and x862 x1004) x1979))
(assert (= x814 (or (and x1191 (not x168)) x2013)))
(assert (= (and (not x1217) x821) x43))
(assert (x230 x1423))
(assert (= x1360 (and x821 x1217)))
(assert (x230 x294))
(assert (x230 x571))
(assert (x230 x80))
(assert (x1254 x614))
(assert (= (=> (and (not (< 18446744073709551615 x1239)) (= (or x1372 x1290) x527) (= x1990 (ite x527 1 0)) (= (< x842 x1709) x1372) (= x1580 (x1011 (+ x1613 31))) (= (x1011 (+ 32 x1613)) x146) (= x842 (x1011 (+ x942 x1709))) (= (x1011 (+ 32 x69)) x1042) (not (< x2020 x1024)) (= (< 18446744073709551615 x842) x1290) (= x172 (x1011 (+ 31 x1048))) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x92) x754) (= x755 (x1011 (+ x1239 x222))) (= (x1409 x69) x1229) (= x942 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x172)) (= x1048 (x1011 (+ 32 x754))) (= (x1011 (+ x1239 x146)) x1024) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1580) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)) (and (> x2020 x1580) (= (<= x1580 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x1011 (+ 31 x1239)) x92) (not (> x1229 18446744073709551615)) (= (x1409 x1613) x1239) (= (not (< x1042 x382)) x1906) (= 0 x1990) (= x222 (x1011 (+ 32 x1709))) (= (x1011 (+ x69 x1229)) x1613)) (and (=> (= x393 x842) x1001) x1906)) x2092))
(assert (x230 x1825))
(assert (x230 x1833))
(assert (x230 x1990))
(assert (x230 x1292))
(assert (= x1685 (and (not x118) x2147)))
(assert (= 0 (x153 x31)))
(assert (x230 x1729))
(assert (x230 x434))
(assert (x230 x2074))
(assert (x230 x1967))
(assert (= (x634 (x1610 x797)) x797))
(assert (x230 x180))
(assert (= (=> (and (not (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2003) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1269)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1269) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2003)) (> x2003 x1269)))) (<= 0 x2079) (= (x1335 x1120) x1140) (= (x1011 (+ x55 32)) x1310) (= x656 (x1409 x55)) (= x29 (x838 x229)) (= (x1409 x1073) x1572) (= (x486 (- x2020 x1899)) x1269) (= (x1090 x229) x1485) (= x1764 (x1335 x873)) (= (> x1450 x1310) x719) (>= 1461501637330902918203684832716283019655932542975 x1985) (<= x29 1461501637330902918203684832716283019655932542975) (= x1899 (mod (* x1510 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x152 (x1011 (+ x55 31))) (= (x2004 1461501637330902918203684832716283019655932542975 x177) x1293) (= x2045 0) (= (x1335 x1120) x515) (= x329 (or x892 x1101)) (= (x1011 (+ 32 x2155)) x571) (= (x2095 x1851) x1939) (= (x1409 x1073) x725) (not (or (> x158 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x158) true) (> 160 x158)))) (= (x1011 (+ x571 31)) x1102) (= (ite x329 1 0) x75) (>= x1939 0) (>= 65535 x2079) (not (> x1510 18446744073709551615)) (= (> x934 x8) x1101) (= x2045 (ite x1958 1 0)) (not (< 3 x1485)) (= x75 0) (< x2079 65536) (not (> x656 18446744073709551615)) (= x892 (> x8 18446744073709551615)) (= x1510 x2079) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1102) x481) (= x2003 (x1011 (+ 32 x1114))) (> 256 x1485) (= x1764 x1140) (= x1822 (x1659 x229)) (= x8 (x1011 (+ 160 x934))) (<= x1939 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2079 (x1779 x229)) (= (x2091 x1851 1) x229) (= (x1011 (+ x867 x1310)) x1450) (= x1313 (> x851 18446744073709551615)) (= (or x1313 x1999) x1958) (= x851 (x1011 (+ x8 x481))) (= (x1011 (+ x652 x725)) x55) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1572) (<= x545 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1572 x545) (= (<= x545 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1572)))) (or (and (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x152)) (and (> x2020 x152) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x152) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)))) (= x1999 (> x8 x851)) (not (< x2020 x1450)) (> 1099511627776 x1822) (= (x1011 (+ 32 x8)) x1852) (<= 0 x1822) (>= x29 0) (= x1510 (x1409 x1114)) (= x183 (x1409 x523)) (= (x1335 288) x649) (<= x1822 1099511627775) (= (x1409 x652) x1985) (= x515 x649) (= x545 (x486 (- x158 31))) (= x2155 (mod (* x656 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1851 (x1515 (x1610 x1293) (x904 2) 0)) (not (> x725 18446744073709551615)) (= (mod (* x656 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x867) (= x1114 (x1011 (+ x652 x1572))) (< x29 1461501637330902918203684832716283019655932542976) (= x934 (x1011 (+ 160 x610)))) (and (=> x719 x682) (=> (and (= x851 x1258) (not x719)) x859))) x1617))
(assert (= x426 (or x866 x1786 x1173)))
(assert (x230 x1048))
(assert (x230 x905))
(assert (= (x634 (x1610 x782)) x782))
(assert (= (x1610 428079936) (x904 428079936)))
(assert (= (x153 x1089) 0))
(assert (x230 x974))
(assert (x230 x1168))
(assert (= x1348 (or x413 x1157)))
(assert (x230 x563))
(assert (= x975 (and (not x1745) x2139)))
(assert (x230 x1573))
(assert (= (and x51 x1021) x492))
(assert (x230 x524))
(assert (x230 x1078))
(assert (= x315 (x634 (x1610 x315))))
(assert (x230 x888))
(assert (=> (<= x97 10000) (= (x1610 x97) (x904 x97))))
(assert (x230 x750))
(assert (= x1645 (or x1070 x108 x549 x204 x1197 x1692 x715 x1085 x1386 x106 x1917 x1759 (and x2138 x1092))))
(assert (x230 x270))
(assert (= x413 (and x837 (not x839))))
(assert (x230 x242))
(assert (x230 x1932))
(assert (= (and x352 x898) x415))
(assert (x849 x434))
(assert (x230 x848))
(assert (= x2029 (=> (and (or (and (= (x1011 (+ x136 x1257)) x1524) x503) (not x503)) (= x503 (< x136 x540))) x1301)))
(assert (x230 x1160))
(assert (x230 x447))
(assert (x630 x1405))
(assert (x230 x907))
(assert (x230 x209))
(assert (=> (<= x1606 10000) (= (x904 x1606) (x1610 x1606))))
(assert (= (x634 (x2091 x847 1)) (+ (x634 x847) 1)))
(assert (x230 x336))
(assert (x230 x241))
(assert (x230 x1500))
(assert (= x1538 (or x1087 x753 x128)))
(assert (x230 x2157))
(assert (=> (<= x1973 10000) (= (x904 x1973) (x1610 x1973))))
(assert (x230 x1114))
(assert (x230 x1994))
(assert (x849 x2123))
(assert (x230 x1895))
(assert (x230 x930))
(assert (x849 x1774))
(assert (x230 x813))
(assert (x230 x1701))
(assert (x849 x257))
(assert (x230 x811))
(assert (x230 x318))
(assert (= x454 (x634 (x1610 x454))))
(assert (x230 x1974))
(assert (x230 x1038))
(assert (= x1070 (and x2163 (not x1032))))
(assert (x1228 x2156))
(assert (x230 x817))
(assert (x630 x797))
(assert (= (=> (and (= (x1011 (+ 96 x1470)) x803) (= (not (> x897 128)) x1529) (= x242 (x1011 (+ x1392 96))) (= (x925 x803) x1798)) (and x1529 (=> (= 128 x95) x191))) x623))
(assert (x230 x2097))
(assert (= (and (not x999) x896) x208))
(assert (x230 x842))
(assert (= x1931 (and (not x1525) x1283)))
(assert (x230 x359))
(assert (x230 x1458))
(assert (x230 x313))
(assert (x230 x773))
(assert (= x806 (and x1393 x2087)))
(assert (x230 x1577))
(assert (= 0 (x153 x2131)))
(assert (x230 x897))
(assert (x230 x1206))
(assert (x230 x411))
(assert (x230 x1730))
(assert (x849 x450))
(assert (x230 x754))
(assert (= (x153 x1758) 0))
(assert (x230 x1298))
(assert (= (=> (= x926 (< 0 x2079)) (and (=> (and (and (= (x1011 (+ x1456 320)) x819) (< 0 x1321) (= (x1914 x14) x835) (= (x2004 1461501637330902918203684832716283019655932542975 x434) x1973) (= x543 (x1011 (+ 32 x819))) (= x332 (< 0 x1771)) (= (x1011 (+ 32 x835)) x1612) (= (x1011 (+ x8 32)) x14) (= x1771 (x15 x835)) (= (x1914 x1740) x993) (= (x2004 1461501637330902918203684832716283019655932542975 x177) x1292) (= x2098 (x1011 (+ 32 x1456))) (= (x1011 (+ x1549 4)) x1456) (< 0 x2151) (= (x1011 (+ 32 x2062)) x1740) (< 0 x1752) (= x1321 (x1914 x8)) (= (x1914 x1258) x2151) (= x1752 (x1914 x2062)) (= x1569 (x1011 (+ 32 x1258))) (= x2118 (x1914 x1569))) x926) (and (=> (and (and (= x1654 x543) (= (< 32 x1771) x2183) (= (x1560 x2131) x498) (= x2131 x1612)) x332) (and (=> (and x2183 (and (= (x1162 x2180) x445) (= (x1011 (+ x1612 32)) x2180) (= x1968 (> x1771 64)) (= x1017 (x1011 (+ 32 x543))))) (and (=> (and (and (= (x287 x587) x38) (= x587 (x1011 (+ x1612 64))) (= x1950 (x1011 (+ 64 x543))) (= (> x1771 96) x1459)) x1968) (and (=> x1459 x1682) (=> (and (= 96 x2173) (not x1459)) x672))) (=> (and (= x2173 64) (not x1968)) x672))) (=> (and (= 32 x2173) (not x2183)) x672))) (=> (and (= 0 x2173) (not x332)) x672))) (=> (and (and (= x620 x1031) (= x2111 x916) (= x602 x1034) (= x1308 x309) (= x2110 x1279) (= x825 x542) (= x1784 x1888)) (not x926)) x1489))) x562))
(assert (=> (<= x797 10000) (= (x1610 x797) (x904 x797))))
(assert (x630 x454))
(assert (x230 x1991))
(assert (x230 x895))
(assert (x230 x1005))
(assert (x230 x1513))
(assert (= (x634 (x904 265030696)) 265030696))
(assert (x849 x1390))
(assert (x230 x483))
(assert (= x549 (and x1978 x2104)))
(assert (x230 x771))
(assert (x230 x231))
(assert (x230 x684))
(assert (x230 x656))
(assert (x230 x694))
(assert (x230 x1806))
(assert (x230 x1770))
(assert (x230 x1494))
(assert (x230 x1413))
(assert (x849 x1458))
(assert (x230 x1282))
(assert (= (x153 x700) 0))
(assert (x230 x1238))
(assert (x230 x475))
(assert (= (and x1267 x1662) x2186))
(assert (= x1399 (and x1765 x272)))
(assert (x230 x1924))
(assert (x230 x1481))
(assert (x230 x606))
(assert (x230 x637))
(assert (x1254 x690))
(assert (= 418493994 (x634 (x904 418493994))))
(assert (= 0 (x1445 x1280)))
(assert (= x1301 (=> (= x1961 (not (< 1 x2079))) (and x1961 (=> (and (= x225 x2082) (= x1539 x1871) (= x775 x1246) (= x241 x974) (= x1446 x1238) (= x530 x1652) (= x710 x1531) (= x351 x423)) x1016)))))
(assert (= (and (not x653) x510) x1432))
(assert (= (and x531 x795) x1119))
(assert (x230 x599))
(assert (x230 x1333))
(assert (= (x1610 63696388041471822930743579425831364866188647584567569692446183701643513561088) (x904 63696388041471822930743579425831364866188647584567569692446183701643513561088)))
(assert (=> (>= 10000 x454) (= (x904 x454) (x1610 x454))))
(assert (x230 x1822))
(assert (x230 x1597))
(assert (x849 x1697))
(assert (x230 x1651))
(assert (x849 x187))
(assert (= x1133 (=> (and (and (= x768 (x1915 (x1610 x286))) (= x1217 (> x71 0)) (not (= x817 0)) (not (= x768 0)) (= x286 (x2004 1461501637330902918203684832716283019655932542975 x177))) (or (and (and (= x1368 (= x1105 (x1807 (x1610 x286)))) (= x1555 (x2042 (x1610 x109))) (= (x2042 (x1610 x286)) x1105) x1368 (< x256 4294967296) (= x664 (<= x1555 (x1807 (x1610 x109)))) x664) x1217) (not x1217))) x1836)))
(assert (x230 x1176))
(assert (= x263 (and x1827 x814)))
(assert (x230 x1613))
(assert (x230 x2167))
(assert (= (and x765 x958) x101))
(assert (x230 x901))
(assert (= (and x195 x1828) x212))
(assert (x230 x345))
(assert (x849 x966))
(assert (x230 x1013))
(assert (= (and x2022 (not x319)) x574))
(assert (x230 x783))
(assert (x230 x1665))
(assert (x230 x747))
(assert (x230 x1415))
(assert (x230 x629))
(assert (x230 x1205))
(assert (x230 x1281))
(assert (= (or x1378 x723) x377))
(assert (x230 x1349))
(assert (x230 x1943))
(assert (x230 x578))
(assert (x230 x1902))
(assert (x230 x655))
(assert (x230 x946))
(assert (= (or (and (not x1462) x426) x554) x821))
(assert (x230 x1843))
(assert (x1254 x76))
(assert (= x1880 (and x2055 x478)))
(assert (x230 x613))
(assert (= x1082 (and x1633 x2088)))
(assert (x230 x381))
(assert (x849 x1959))
(assert (x230 x1123))
(assert (x230 x934))
(assert (x630 x315))
(assert (= (=> (and (= x938 (x906 x171)) (= (x1011 (+ x989 96)) x1014) (= (not (> x1892 128)) x1149) (= (x1011 (+ x1758 96)) x171)) (and x1149 (=> (= 128 x895) x306))) x402))
(assert (x230 x88))
(assert (= x1471 (and (not x1986) x1636)))
(assert (x230 x610))
(assert (x230 x452))
(assert (= x554 (and x426 x1462)))
(assert (= (and x1944 x1374) x586))
(assert (= x374 (and x651 x1945)))
(assert (= (x153 x81) 0))
(assert (x230 x788))
(assert (= 599290589 (x634 (x904 599290589))))
(assert (= x753 (and x898 (not x352))))
(assert (x230 x2010))
(assert (x230 x2162))
(assert (x230 x1041))
(assert (x230 x82))
(assert (x230 x1928))
(assert (x849 x599))
(assert (x230 x514))
(assert (x230 x1284))
(assert (x230 x2122))
(assert (x230 x1186))
(assert (x230 x448))
(assert (= (and (not x1827) x814) x1681))
(assert (x230 x1785))
(assert (= (or x1402 x976) x2113))
(assert (x230 x1144))
(assert (= 0 (x153 x1298)))
(assert (= (or x991 x1566) x1769))
(assert (= x1663 (and x185 x550)))
(assert (x230 x2027))
(assert (x230 x1533))
(assert (x230 x1322))
(assert (x630 x177))
(assert (x230 x1328))
(assert (x230 x874))
(assert (x230 x886))
(assert (x230 x761))
(assert (x230 x945))
(assert (x230 x166))
(assert (x230 x1158))
(assert (= x1085 (and x724 x2152)))
(assert (x230 x767))
(assert (x630 x2044))
(assert (x230 x1219))
(assert (x230 x498))
(assert (x230 x1272))
(assert (= 0 (x153 x1896)))
(assert (x564 x642))
(assert (= x967 (or x341 x2032)))
(assert (x230 x993))
(assert (= x1213 (=> (and (and (= x1694 x913) (= x913 x444) (= x175 (or x956 x1009)) (= x913 x582) (= x1635 1) (= x956 (= 1 x1694)) (= (<= x698 x582) x1009) (= x1526 x698)) (and (= x1710 (x1515 (x1610 x1791) (x904 2) 0)) (= (x2091 x1710 1) x522) (<= 0 x1343) (> 1461501637330902918203684832716283019655932542976 x1343) (>= 1461501637330902918203684832716283019655932542975 x97) (> 791671133 x1857) (= x215 x97) (not (> x1664 3)) (<= x1629 65535) (= (x1720 x522) x1629) (<= 0 x654) (not (= x1857 418493994)) (>= 1461501637330902918203684832716283019655932542975 x1343) (< 0 x1215) (< x1857 2307130307) (> 1099511627776 x654) (= x1343 (x1330 x522)) (< x1664 256) (= x1097 (x2091 x7 1)) (= x1664 (x676 x1097)) (< x1629 65536) (= x444 x1664) (= x1791 (x2004 1461501637330902918203684832716283019655932542975 x177)) (<= 0 x1629) (= (x1915 (x1610 x109)) x1215) (not (= 0 x71)) (= (x387 x522) x654) (= (x1515 (x1610 x97) (x904 2) 0) x7) (= 428079936 x1857) (= x1677 (x2004 1099511627775 x187)) (>= 1099511627775 x654) (not (> 418493994 x1857)))) x175)))
(assert (x230 x1315))
(assert (x230 x1587))
(assert (= (x904 452312848583266388373324160190187140051835877600158453279131187530910662655) (x1610 452312848583266388373324160190187140051835877600158453279131187530910662655)))
(assert (x230 x308))
(assert (x230 x589))
(assert (= (x634 (x2091 x378 1)) (+ (x634 x378) 1)))
(assert (= x1495 (and x719 x1773)))
(assert (x849 x213))
(assert (x230 x1950))
(assert (= x1004 (and x735 x604)))
(assert (x230 x1984))
(assert (= 0 (x153 x572)))
(assert (x230 x335))
(assert (= 1997499061 (x634 (x904 1997499061))))
(assert (x230 x1647))
(assert (= x1830 (and x1616 (not x332))))
(assert (= x1726 (and x2164 x1251)))
(assert (x230 x961))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x634 (x904 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x230 x1802))
(assert (x230 x875))
(assert (x230 x247))
(assert (x230 x1152))
(assert (x230 x152))
(assert (x230 x977))
(assert (x230 x1456))
(assert (x230 x1115))
(assert (= (and (not x2096) x1538) x973))
(assert (x230 x458))
(assert (x230 x1907))
(assert (x230 x690))
(assert (= (x1610 1461501637330902918203684832716283019655932542975) (x904 1461501637330902918203684832716283019655932542975)))
(assert (= (and x1691 x917) x932))
(assert (x230 x196))
(assert (x230 x220))
(assert (x230 x1472))
(assert (= (or x9 x1066 x206 x99 x120 x73 x1424 x1726 x1334 x1170 x1980 x392 x526 x462 x13 x699) x866))
(assert (x230 x92))
(assert (= 2428475159928928253380189918045730325133814103720850528466242065960167014400 (x634 (x904 2428475159928928253380189918045730325133814103720850528466242065960167014400))))
(assert (= (x634 (x904 791671133)) 791671133))
(assert (x230 x1883))
(assert (x230 x718))
(assert (x230 x695))
(assert (x849 x1591))
(assert (x230 x1884))
(assert (x230 x1664))
(assert (= x311 (or x112 x137 x1475 x1232 x1389)))
(assert (= (or x820 x1645) x1374))
(assert (x1254 x1083))
(assert (x230 x652))
(assert (x230 x94))
(assert (= (x1610 33540519) (x904 33540519)))
(assert (= x1969 (and (not x1376) x1231)))
(assert (= 1099511627775 (x634 (x904 1099511627775))))
(assert (x230 x171))
(assert (= x262 (and x1326 (not x1968))))
(assert (x230 x1926))
(assert (x230 x2050))
(assert (x230 x1699))
(assert (x230 x572))
(assert (x230 x1569))
(assert (x230 x1510))
(assert (= x1786 (and x1098 x201)))
(assert (= (x153 x149) 0))
(assert (x230 x517))
(assert (x230 x1796))
(assert (x230 x1488))
(assert (= (x634 (x1610 x2044)) x2044))
(assert (x230 x909))
(assert (x230 x1938))
(assert (x230 x149))
(assert (x230 x1689))
(assert (x64 x763 x1722))
(assert (x230 x1401))
(assert (x230 x1))
(assert (x230 x1438))
(assert (= 0 (x153 x587)))
(assert (x230 x1093))
(assert (x230 x102))
(assert (x230 x322))
(assert (x230 x280))
(assert (= (x1610 66268296141940672851042108147304593538321322149885339258387047461996478413388) (x904 66268296141940672851042108147304593538321322149885339258387047461996478413388)))
(assert (x230 x1936))
(assert (x230 x731))
(assert (x849 1099511627775))
(assert (x230 x710))
(assert (x230 x1083))
(assert (x1254 x213))
(assert (x230 x770))
(assert (x64 x450 x1644))
(assert (x230 x985))
(assert (x230 x1325))
(assert (= x467 (and (not x441) x1104)))
(assert (x230 x565))
(assert (= (x634 (x904 3336544575)) 3336544575))
(assert (x230 x1118))
(assert (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x634 (x904 4238056678808933066457772256406219440718756300954938350892797929791311314944))))
(assert (= (and x441 x1104) x12))
(assert (x230 x97))
(assert (x230 x1450))
(assert (x849 x100))
(assert (x849 x1060))
(assert (x230 x2079))
(assert (x64 x643 x1060))
(assert (=> (>= 10000 x315) (= (x1610 x315) (x904 x315))))
(assert (x230 x1263))
(assert (x230 x2123))
(assert (x1254 x2084))
(assert (x230 x660))
(assert (x230 x148))
(assert (= (=> (= (< 0 x2079) x2117) (and (=> (and (not x2117) (and (= x309 x1531) (= x775 x1034) (= x1031 x974) (= x1539 x2110) (= x2111 x530) (= x351 x1831) (= x225 x1784) (= x825 x1238))) x1016) (=> (and (and (= (< 0 x881) x1106) (= (x2004 1461501637330902918203684832716283019655932542975 x177) x1405) (= x383 (x1011 (+ x502 32))) (= x559 (x1011 (+ 32 x681))) (= (x376 x1548) x502) (= x1430 (x1011 (+ 96 x681))) (< 0 x986) (= x681 (x1011 (+ 36 x1831))) (= (x1011 (+ 32 x1430)) x822) (= (x1011 (+ 32 x865)) x1548) (= x881 (x2100 x502)) (= (x376 x865) x986)) x2117) (and (=> (and (= x661 0) (not x1106)) x673) (=> x1106 x1789))))) x123))
(assert (x230 x614))
(assert (x230 x1721))
(assert (x230 x1752))
(assert (x230 x367))
(assert (x230 x1965))
(assert (x230 x2093))
(assert (= x32 (=> (and (= 0 x1962) (= x34 (x1011 (+ x584 32))) (= x1992 (x1011 (+ x407 128))) (= x468 (x1011 (+ 32 x761))) (= x606 (x1409 x761)) (= (x1409 x584) x1540) (>= 255 x1690) (= (ite x713 1 0) x1962) (= (< 18446744073709551615 x1992) x167) (= (x1011 (+ x1243 32)) x565) (= x96 (not (< x34 x841))) (= x1690 (x1409 x468)) (= x305 (x486 (- x2020 x761))) (= x713 (or x167 x1997)) (= x1243 (x1011 (+ 32 x1842))) (= x1842 (x1011 (+ x407 32))) (not (or (and (> 128 x305) (= true (<= x305 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x305))) (>= 452312848583266388373324160190187140051835877600158453279131187530910662655 x606) (= x584 (x1011 (+ 32 x1862))) (= (x1409 x1862) x1744) (= (x1011 (+ x468 32)) x1862) (= x1997 (> x407 x1992))) (and x96 (=> (= x1992 x610) x1617)))))
(assert (x230 x1629))
(assert (x630 x2099))
(assert (x230 x197))
(assert (= x279 (or x1673 x141)))
(assert (x230 x647))
(assert (x230 x1744))
(assert (x230 x873))
(assert (= x1359 (and x1233 (not x1499))))
(assert (= (x153 x993) 0))
(assert (x230 x979))
(assert (= x751 (and (not x662) x2113)))
(assert (= (and x386 (not x740)) x1633))
(assert (x230 x310))
(assert (= x991 (and x963 (not x2160))))
(assert (= (+ 1 (x634 x635)) (x634 (x2091 x635 1))))
(assert (=> (>= 10000 x2099) (= (x904 x2099) (x1610 x2099))))
(assert (= x1071 (and x374 x1035)))
(assert (= (=> (and (= x1924 (x1011 (+ x1890 55253086691344412491249731323735809531556945173834312332507302207468853002240))) (= (x1011 (+ x822 x538)) x1776) (= x563 (x1011 (+ 32 x1831))) (= (x1011 (+ x343 32)) x686) (= (< 0 x1391) x798) (= (x1011 (+ x535 32)) x1622) (= x642 (x1631 x563)) (= (x2004 26959946667150639794667015087019630673637144422540572481103610249215 x642) x1890) (= (x486 (- x638 32)) x403) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x985) x538) (= (x486 (- x1776 x1831)) x638) (= (x1011 (+ x881 31)) x985) (= (x1011 (+ 32 x559)) x2136) (= x1391 (x2017 x1831)) (= (x2004 1461501637330902918203684832716283019655932542975 x177) x1094) (= (x1011 (+ 4 x1776)) x343) (= (x1011 (+ 64 x343)) x535) (= x1556 (x2004 1461501637330902918203684832716283019655932542975 x489))) (and (=> (and (= 0 x1315) (not x798)) x1864) (=> x798 x145))) x1396))
(assert (x384 x1371))
(assert (= x462 (or (and x1384 (not x697)) (and x1302 x1543))))
(assert (x230 x996))
(assert (= 452312848583266388373324160190187140051835877600158453279131187530910662655 (x634 (x904 452312848583266388373324160190187140051835877600158453279131187530910662655))))
(assert (x230 x960))
(assert (= (x153 x2122) 0))
(assert (x230 x972))
(assert (x230 x165))
(assert (x230 x1308))
(assert (= (and x1283 x1525) x73))
(assert (= (x153 x2180) 0))
(assert (= (=> (and (= x1286 (x486 (- x169 x284))) (= x764 x1756) (= (x1915 (x1610 x465)) x1809) (= (x1011 (+ x1338 32)) x1168) (= x201 (or (and (> 96 x954) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x954) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x954))) (= x454 x1411) (> 2835717307 x435) (not (> 4 x945)) (= x1492 x1731) (= x945 100) (not (= 1949782873 x435)) (> x1216 0) (not (= 1631253430 x435)) (= x945 x1286) (not (= 1889567281 x435)) (not (= 0 x1809)) (= (x1011 (+ 96 x1338)) x169) (not (> 1631253430 x435)) (= (x2004 1461501637330902918203684832716283019655932542975 x177) x1411) (= 2362630343 x435) (= (x1011 (+ 32 x1168)) x1790) (< x435 2446411860) (not (= x435 1818647125)) (= 63696388041471822930743579425831364866188647584567569692446183701643513561088 x1514) (= (x486 (- x945 4)) x954) (= x1216 (x1915 (x1610 x465))) (= (x1011 (+ x284 4)) x1338)) (and (=> (and x201 (= x817 0)) x1983) (=> (and (and (= x1552 true) (= x454 x637)) (not x201)) (and (=> (and (and (<= 0 x1193) (= (x1515 (x1610 x109) x164 0) x1919) (>= 255 x1193) (= x1492 x1455) (= (> x1193 0) x697) (= x11 x1756) (= (x1817 x1919) x1193) (= x164 (x1515 (x1610 66268296141940672851042108147304593538321322149885339258387047461996478413388) (x904 0) 0)) (> 256 x1193)) x1552) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1436) (>= x1436 0) (= x2164 (< x187 x1436))) x697) (and (=> (and (= x1096 0) x2164) x978) (=> (and (not x2164) (and (and (<= x447 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1461501637330902918203684832716283019655932542976 x2059) (>= 1461501637330902918203684832716283019655932542975 x2059) (= x1111 128) (= (x486 (- x187 x1436)) x1069) (<= 0 x1252) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1252) (= x2008 (= x2059 x2044)) (<= 0 x2059) (<= 0 x447)) (and x2008 (and (= x882 (x486 (- x1433 4))) (not (= 1008072988 x348)) (= x740 (or (and (= (<= x882 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x882)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x882))) (not (= x348 1997499061)) (not (= 1703538655 x348)) (= (x1915 (x1610 x2044)) x2148) (= x1252 x1523) (not (< x1433 4)) (= x348 3336544575) (= x447 x1787) (= 68 x1433) (= 89953063794570797914675343120038501642627609741519254829220540789936042803200 x310) (< 0 x2148) (= x1433 68))))) (and (=> x740 x918) (=> (and (= (= x1252 0) x2088) (not x740)) (and (=> (and (= x2114 x1426) x2088) x1848) (=> (and (not x2088) (= x1804 (> x1787 x1523))) (and (=> (and (not x1804) (and (= (= 0 (ite x541 1 0)) x2150) (= x541 (< 115792089237316195423570985008687907853269984665640 x1825)) (= x1825 (x486 (- x1523 x1787))))) (and (=> (and x2150 (and (= x87 (mod (* x1825 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x87 x1523) x1713) (= x1356 (< x1713 x1718)))) (and (=> (and (= (> x2114 x1296) x1893) x1356) (and (=> (and (not x1893) (and (= x1934 (= 0 x1648)) (= (x486 (- x1296 x2114)) x2052) (= (ite (not x1059) 1 0) x948) (= (ite (< x244 x1713) 1 0) x138) (= x1648 (x2004 x948 x138)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2052) x244) (= x1059 (= 0 x2052)))) (and (=> (and x1934 (and (= x1438 (mod (* x1713 x2052) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x275 (< 0 x1718)))) (and (=> (and (and (= x776 (div x1438 x1718)) (= x1936 (x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x776))) (= (< x1936 x2114) x1986)) x275) (and (=> x1986 x918) (=> (and (not x1986) (and (= x1562 x1426) (= (x1011 (+ x2114 x776)) x1562))) x1848))) (=> (not x275) x918))) (=> (not x1934) x918))) (=> x1893 x918))) (=> (and (= (> x1718 1000000000000000000000000000) x1874) (not x1356)) (and (=> x1874 x918) (=> (and (and (= (> x1718 x1713) x941) (= x166 (x486 (- 1000000000000000000000000000 x1718))) (= (= x1718 1000000000000000000000000000) x1035)) (not x1874)) (and (=> (and (not x941) (and (= (x486 (- x1713 x1718)) x1724) (= (< x861 x1296) x1626))) (and (=> x1626 x918) (=> (and (not x1626) (and (= (= x270 0) x1382) (= x651 (= 0 x1533)) (= (ite (< x1576 x1724) 1 0) x365) (= (x486 (- x861 x1296)) x270) (= (ite (not x1382) 1 0) x144) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x270) x1576) (= x1533 (x2004 x144 x365)))) (and (=> (not x651) x918) (=> (and (= x731 (mod (* x270 x1724) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x651) (and (=> x1035 x918) (=> (and (not x1035) (and (= x1601 (x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414))) (= x1502 (> x1296 x1601)) (= (div x731 x166) x1414))) (and (=> (and (not x1502) (and (= x1426 x641) (= (x1011 (+ x1414 x1296)) x641))) x1848) (=> x1502 x918))))))))) (=> x941 x918))))))) (=> (not x2150) x918))) (=> x1804 x918))))))))) (=> (not x697) x78))) (=> (and (= 0 x1096) (not x1552)) x978))))) x1856))
(assert (x230 x224))
(assert (= 0 (x153 x312)))
(assert (x230 x1431))
(assert (x230 x1053))
(assert (x230 x1204))
(assert (=> (<= x286 10000) (= (x904 x286) (x1610 x286))))
(assert (x230 x31))
(assert (= x1653 (and x2043 x2150)))
(assert (= (and x804 x1582) x1702))
(assert (x230 x1512))
(assert (x230 x39))
(assert (x849 x642))
(assert (= x1682 (=> (and (= (not (< 128 x1771)) x900) (= (x1011 (+ x543 96)) x1063) (= (x1011 (+ 96 x1612)) x345) (= (x267 x345) x532)) (and x900 (=> (= x2173 128) x672)))))
(assert (x230 x407))
(assert (= (and (not x1464) x777) x99))
(assert (x230 x1408))
(assert (x230 x1526))
(assert (= (and x1909 x758) x2053))
(assert (x230 x2036))
(assert (= (and (not x2055) x478) x141))
(assert (x230 x419))
(assert (x230 x2075))
(assert (= (x1610 265030696) (x904 265030696)))
(assert (= (x1610 2446411860) (x904 2446411860)))
(assert (= x1307 (and (not x941) x338)))
(assert (x230 x317))
(assert (x230 x1039))
(assert (x230 x1739))
(assert (x230 x2045))
(assert (x230 x1993))
(assert (= x2077 (and x1662 (not x1267))))
(assert (= (x634 (x904 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (x230 x1345))
(assert (x230 x133))
(assert (x230 x2111))
(assert (x230 x1555))
(assert (= (x153 x1569) 0))
(assert (x230 x1276))
(assert (= x1978 (and x577 (not x474))))
(assert (= x1103 (and x12 (not x616))))
(assert (x230 x50))
(assert (x230 x1063))
(assert (x849 x172))
(assert (= (and x473 x579) x2108))
(assert (x230 x1567))
(assert (x230 x1187))
(assert (= (and (not x205) x316) x1473))
(assert (= x2099 (x634 (x1610 x2099))))
(assert (x1254 x92))
(assert (x230 x1635))
(assert (x230 x732))
(assert (x230 x2058))
(assert (= (x1610 18446744073709551615) (x904 18446744073709551615)))
(assert (= x2043 (and (not x1804) x1289)))
(assert (x230 x1492))
(assert (x230 x284))
(assert (x230 x1718))
(assert (x1254 x1959))
(assert (x230 x225))
(assert (x230 x1956))
(assert (x230 x2156))
(assert (x230 x250))
(assert (= 0 (x93 (- x660 x1209))))
(assert (x230 x371))
(assert (x1254 x2154))
(assert (x230 x60))
(assert (= (and x198 x1045) x1150))
(assert (= (+ (x634 x624) 1) (x634 (x2091 x624 1))))
(assert (= (and x1251 (not x2164)) x202))
(assert (x230 x2166))
(assert (x230 x432))
(assert (x230 x865))
(assert (x230 x76))
(assert (x230 x244))
(assert (= x1960 (and x1844 x207)))
(assert (x230 x619))
(assert (x230 x1889))
(assert (x230 x221))
(assert (x230 x2028))
(assert (x230 x867))
(assert (= (=> (and (= x1820 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x966)) (= x966 (x1011 (+ x1771 31))) (= (x1011 (+ x628 32)) x1392) (= x1203 (x1011 (+ x165 x1456))) (= x44 (x1011 (+ 32 x1964))) (= x2122 (x1003 x2118)) (= x1470 (x1011 (+ x2122 32))) (= x788 (x1011 (+ x543 x1820))) (= (x1135 x2122) x897) (= x1737 (x1011 (+ 32 x44))) (= (x1011 (+ x2098 32)) x1211) (= (x1011 (+ 32 x1211)) x1964) (= (x486 (- x788 x1456)) x165) (= x2102 (> x897 0)) (= (x1011 (+ x788 288)) x628)) (and (=> (and (= x95 0) (not x2102)) x191) (=> (and x2102 (and (= x711 (x355 x1896)) (= x1282 x1392) (= x550 (< 32 x897)) (= x1470 x1896))) (and (=> (and (and (= x2041 (x1011 (+ 32 x1392))) (= (x1011 (+ x1470 32)) x703) (= x1746 (> x897 64)) (= x2069 (x414 x703))) x550) (and (=> (and (and (= x700 (x1011 (+ x1470 64))) (= (x1011 (+ x1392 64)) x1994) (= x2038 (< 96 x897)) (= (x1658 x700) x1730)) x1746) (and (=> (and (not x2038) (= x95 96)) x191) (=> x2038 x623))) (=> (and (not x1746) (= 64 x95)) x191))) (=> (and (not x550) (= 32 x95)) x191))))) x1858))
(assert (= (and (not x550) x185) x470))
(assert (= (and x577 x474) x134))
(assert (x230 x937))
(assert (x230 x1269))
(assert (=> (>= 10000 x1293) (= (x904 x1293) (x1610 x1293))))
(assert (= x1283 (and x508 x1399)))
(assert (x230 x957))
(assert (x230 x238))
(assert (x230 x1767))
(assert (x230 x240))
(assert (= x62 (and x1828 (not x195))))
(assert (x230 x688))
(assert (x230 x693))
(assert (x230 x1929))
(assert true)
(assert (x230 x1992))
(assert (= x1220 (and x409 (not x903))))
(assert (x230 x1223))
(assert (x849 x144))
(assert (= (and (not x910) x263) x1551))
(assert (= (and x198 (not x1045)) x1846))
(assert (x230 x1286))
(assert (= (and x1220 x1867) x2026))
(assert (x230 x172))
(assert (x230 x561))
(assert (x230 x1161))
(assert (x230 x1922))
(assert (x230 x1050))
(assert (= (and (not x1893) x2165) x1542))
(assert (x849 x1128))
(assert (= (=> (and (= (x1373 x1671) x1892) (= (x1011 (+ 32 x238)) x1675) (= x2115 (x5 x1758)) (= x771 (x2004 1461501637330902918203684832716283019655932542975 x2161)) (= x797 (x2004 1461501637330902918203684832716283019655932542975 x177)) (= x770 (x1011 (+ x1803 64))) (= x59 (< 0 x1892)) (= x2105 (x1011 (+ x1803 32))) (= (x1011 (+ x1277 4)) x1803) (= x1277 (x1011 (+ x238 64))) (= x1291 (x1011 (+ 4238056678808933066457772256406219440718756300954938350892797929791311314944 x805))) (= (x486 (- x1996 32)) x2093) (= x1758 (x1011 (+ x1671 32))) (= (x1011 (+ x1671 36)) x238) (= (x486 (- x1277 x1671)) x1996) (= (x2004 26959946667150639794667015087019630673637144422540572481103610249215 x2115) x805) (= (x1011 (+ 32 x770)) x989)) (and (=> (and (= x895 0) (not x59)) x306) (=> (and (and (= x911 (> x1892 32)) (= x2182 x1758) (= x1696 x989) (= x1751 (x1818 x2182))) x59) (and (=> (and (not x911) (= x895 32)) x306) (=> (and (and (= (x1011 (+ 32 x1758)) x1940) (= x2031 (< 64 x1892)) (= x291 (x1011 (+ 32 x989))) (= x1398 (x994 x1940))) x911) (and (=> (and (not x2031) (= 64 x895)) x306) (=> (and x2031 (and (= (x1011 (+ x989 64)) x689) (= x1921 (x766 x149)) (= x149 (x1011 (+ 64 x1758))) (= x323 (< 96 x1892)))) (and (=> x323 x402) (=> (and (= x895 96) (not x323)) x306))))))))) x495))
(assert (x230 x30))
(assert (= (=> (and (= x247 (x1011 (+ x417 31))) (= (not (< x2128 x1824)) x1166) (= (x1011 (+ 32 x694)) x83) (= x417 (x1409 x1853)) (= x100 (x1011 (+ 31 x858))) (not (< 18446744073709551615 x1761)) (= (x1011 (+ 32 x2142)) x2128) (= (x1011 (+ x694 x1435)) x493) (= (x1409 x2142) x1761) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1347) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)) (< x1347 x2020)) (and (> x1347 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1011 (+ x1853 31)) x1347) (= x1447 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x247)) (= x1179 0) (= x1179 (ite x344 1 0)) (= x218 (x1011 (+ x1025 x417))) (= x1435 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x100)) (= x344 (or x675 x485)) (= x94 (x1011 (+ x83 x417))) (= (< x493 x694) x675) (not (> x417 18446744073709551615)) (= (x1011 (+ x1447 32)) x858) (not (< x2020 x218)) (= x485 (< 18446744073709551615 x493)) (= (x1011 (+ x2142 x1761)) x1853) (= (x1011 (+ x1853 32)) x1025)) (and (=> (= x1120 x493) x127) x1166)) x1632))
(assert (x230 x1491))
(assert (x230 x825))
(assert (= (x904 1099511627776) (x1610 1099511627776)))
(assert (x230 x1211))
(assert (x230 x1810))
(assert (x230 x760))
(assert (x230 x1439))
(assert (x230 x111))
(assert (x230 x648))
(assert (x630 x940))
(assert (x230 x1470))
(assert (= (=> (and (= x334 (x1841 (x1610 x465))) (= x546 x2009) (= x352 (and (<= 0 x334) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1234))) (= (x1841 (x1610 x2099)) x1234)) (and (=> (and (and (= 0 x1370) (= x1505 0)) (not x352)) x2023) (=> (and x352 (and (and (= (x1841 (x1610 x465)) x1265) (= (= x465 x2099) x506) (= x380 x1265) (< x1484 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x712 (x1610 x2099)) x1484)) (and (and (= (x486 (- x1991 4)) x1273) (> 791671133 x2048) (not (= x2048 404098525)) (> x129 0) (not (< x1991 4)) (= x1455 x1929) (= x903 (or (and (< x1273 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1273) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1273))) (= x637 x1504) (< x2048 1631253430) (not (= x2048 265030696)) (= x129 (x1915 (x1610 x465))) (= x2048 599290589) (= x1991 100) (= x162 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x546 x1991) (not (< x2048 265030696)) (= x465 x940)) x506))) (and (=> x903 x1044) (=> (and (not x903) (and (= x1504 x774) (= (= x637 x1504) x1867))) (and (=> (not x1867) x1044) (=> (and x1867 (and (= x499 (= x940 x465)) (= x940 x747))) (and (=> (and x499 (and (= (x995 x2135) x1739) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x85) (<= x1739 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1739 0) (= (> x2089 x85) x182) (= x2047 (x1515 (x1610 x1504) (x904 14) 0)) (= (x264 x2047) x2089) (= x432 x1929) (<= x2089 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2089) (= x2135 (x1515 (x1610 x1504) (x904 1) 0)) (>= x85 0))) (and (=> x182 x1044) (=> (and (not x182) (and (= (x2004 x643 x1060) x923) (= x1304 (= x1115 0)) (= (x486 (- x85 x2089)) x1115) (= (ite (not x1304) 1 0) x643) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1115) x418) (= (= x923 0) x1267) (= x1060 (ite (> x1739 x418) 1 0)))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x85) (= x626 (x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x693))) (<= x815 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x815 x626) x1164) (<= 0 x85) (= x741 (x2091 x847 1)) (>= x815 0) (= x847 (x1515 (x1610 x1504) (x904 14) 0)) (= x693 (div x1624 1000000000000000000000000000)) (= (mod (* x1115 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1624) (= (x1515 (x1610 x1504) (x904 14) 0) x2106) (= x815 (x456 x741))) x1267) (and (=> (and (and (<= x1882 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2006 x85) x958) (= (x1966 x1578) x2006) (>= x1882 0) (= (x1515 (x1610 x940) (x904 1) 0) x200) (<= 0 x2006) (<= 0 x85) (= (x1515 (x1610 x940) (x904 14) 0) x1578) (= (x1011 (+ x815 x693)) x836) (<= x2006 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1882 (x995 x200)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x85)) (not x1164)) (and (=> (and (and (= (= x1588 0) x884) (= x1457 (= x886 0)) (= (ite (not x1457) 1 0) x443) (= x1976 (ite (> x1882 x1583) 1 0)) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x886) x1583) (= (x486 (- x85 x2006)) x886) (= x1588 (x2004 x443 x1976))) (not x958)) (and (=> (not x884) x1044) (=> (and x884 (and (= x1469 (x1515 (x1610 x940) (x904 14) 0)) (<= x85 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x965) (= x965 (x2057 x1782)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x965) (>= x85 0) (= x692 (mod (* x886 x1882) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1782 (x2091 x1469 1)) (= (div x692 1000000000000000000000000000) x1496) (= x308 (x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1496))) (= x319 (> x965 x308)))) (and (=> x319 x1044) (=> (and (not x319) (and (= (x1011 (+ x965 x1496)) x1078) (= (= x465 x1504) x420))) (and (=> x420 x297) (=> (and (not x420) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2074) (= (x1515 (x1610 x1504) (x904 2) 0) x1575) (= x717 (= x2074 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (>= x2074 0) (= (x591 x45) x2074) (= (x1515 (x1610 x465) x1575 0) x45))) (and (=> x717 x729) (=> (and (= (> x1929 x2074) x531) (not x717)) (and (=> (and (not x531) (and (= x1833 (x486 (- x2074 x1929))) (= (= 0 x1504) x205))) (and (=> (and (not x205) (= (= x465 0) x2169)) (and (=> (not x2169) x729) (=> x2169 x1044))) (=> x205 x1044))) (=> x531 x1044))))))))))) (=> x958 x1044))) (=> x1164 x1044))) (=> (not x1267) x1044))))) (=> (not x499) x1044))))))))) x1503))
(assert (= x392 (and x170 x1891)))
(assert (x230 x179))
(assert (x230 x1427))
(assert (x230 x1803))
(assert (x1254 x82))
(assert (= (x153 x1366) 0))
(assert (x849 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x230 x1174))
(assert (x230 x1708))
(assert (x230 x831))
(assert (x230 x681))
(assert (x230 x2175))
(assert (x230 x418))
(assert (= (x153 x748) 0))
(assert (x230 x721))
(assert (x230 x493))
(assert (x230 x110))
(assert (x849 x2115))
(assert (x384 x489))
(assert (x230 x401))
(assert (x230 x1405))
(assert (x230 x1857))
(assert (x230 x1327))
(assert (x230 x46))
(assert (x230 x173))
(assert (x230 x1105))
(assert (x230 x210))
(assert (x230 x188))
(assert (x230 x1790))
(assert (x230 x258))
(assert (= (x153 x1165) 0))
(assert (= x976 (and x1859 (not x537))))
(assert (x230 x1138))
(assert (x230 x309))
(assert (x230 x1277))
(assert (x230 x2136))
(assert (x230 x1642))
(assert (x230 x353))
(assert (x230 x1057))
(assert (x849 x1225))
(assert (x230 x1713))
(assert (x230 x1120))
(assert (= (=> (= 0 x1096) x978) x78))
(assert (= 404098525 (x634 (x904 404098525))))
(assert (x230 x1722))
(assert (x230 x1426))
(assert (= x1104 (and x597 x609)))
(assert (x230 x1564))
(assert (x230 x1394))
(assert (x230 x542))
(assert (x230 x1407))
(assert (= (x634 (x904 22140752835961941075817313386879028057460502132199729129551447365926944505856)) 22140752835961941075817313386879028057460502132199729129551447365926944505856))
(assert (= (x634 (x904 1949782873)) 1949782873))
(assert (= (x1610 1461501637330902918203684832716283019655932542976) (x904 1461501637330902918203684832716283019655932542976)))
(assert (x230 x146))
(assert (x230 x1239))
(assert (x230 x1293))
(assert (= 0 (x153 x1093)))
(assert (= (+ 1 (x634 x1469)) (x634 (x2091 x1469 1))))
(assert (= x120 (and x1399 (not x508))))
(assert (x230 x1390))
(assert (= (=> (and (= x666 (< x1892 x895)) (or (and x666 (= (x1011 (+ x1892 x989)) x428)) (not x666))) x1534) x306))
(assert (= (or x1020 x802) x2005))
(assert (x230 x1247))
(assert (x849 x1722))
(assert (x230 x603))
(assert (x230 x1142))
(assert (x230 x559))
(assert (x230 x2131))
(assert (x230 x618))
(assert (x230 x1916))
(assert (x230 x117))
(assert (x230 x2062))
(assert (= (=> (and (= x2014 (x1011 (+ 32 x2129))) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2154) x1192) (= (x1011 (+ 31 x1354)) x322) (= (mod (* 32 x1227) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2129) (= (x1011 (+ x1120 32)) x1404) (= (ite x1589 1 0) x1026) (= (x1011 (+ x726 x1837)) x221) (= x1705 (x1011 (+ x1073 32))) (or (and (> x2020 x322) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x322) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x322 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x726 (x1011 (+ x1354 32))) (= 0 x1026) (not (> x1227 18446744073709551615)) (= x1837 (mod (* 32 x1227) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1011 (+ 31 x2014)) x2154) (= (x1011 (+ x1192 x1120)) x150) (= x1354 (x1011 (+ x652 x371))) (= x449 (< x150 x1120)) (= (x1409 x1705) x371) (= (or x980 x449) x1589) (= (< x726 x221) x999) (not (> x371 18446744073709551615)) (= (x1409 x1354) x1227) (not (> x221 x2020)) (= (> x150 18446744073709551615) x980)) (and (=> x999 x1546) (=> (and (= x873 x150) (not x999)) x490))) x127))
(assert (= x177 (x634 (x1610 x177))))
(assert (x230 x1776))
(assert (x230 x100))
(assert (x230 x215))
(assert (= (x1610 404098525) (x904 404098525)))
(assert (= (=> (and (= x356 (= x1596 0)) (or (not x356) x356)) x232) x670))
(assert (x230 x162))
(assert (x230 x1717))
(assert (x230 x1675))
(assert (x230 x2140))
(assert (x1254 x1993))
(assert (x230 x1748))
(assert (x230 x590))
(assert (x230 x1436))
(assert (x230 x1172))
(assert (x230 x218))
(assert (x1228 x1427))
(assert (x230 x1611))
(assert (x230 x1430))
(assert (x230 x774))
(assert (x849 x943))
(assert (x230 x1888))
(assert (x230 x1787))
(assert (x230 x1716))
(assert (= 0 (x153 x171)))
(assert (x230 x570))
(assert (x230 x1444))
(assert (x230 x700))
(assert (x230 x28))
(assert (= (x634 (x904 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x230 x1341))
(assert (x230 x1216))
(assert (x230 x1354))
(assert (x230 x1461))
(assert (x230 x1237))
(assert (x230 x532))
(assert (x230 x638))
(assert (x230 x1380))
(assert (x230 x256))
(assert (x630 x1973))
(assert (x230 x468))
(assert (x230 x703))
(assert (x230 x1370))
(assert (x230 x350))
(assert (x230 x488))
(assert (x230 x1357))
(assert (x230 x828))
(assert (x230 x1179))
(assert (x230 x1306))
(assert (x230 x1128))
(assert (= (and x469 x1294) x1159))
(assert (x230 x72))
(assert (x230 x135))
(assert (= (and x1437 x1553) x2087))
(assert (= x1122 (=> (and (= x1780 (= 0 x337)) (or (not x1780) x1780)) x2070)))
(assert (x230 x1145))
(assert (x230 x2168))
(assert (x1254 x2123))
(assert (x230 x2072))
(assert (x230 x1684))
(assert (= (and x205 x316) x790))
(assert (= x1302 (or x973 x1006)))
(assert (x230 x1225))
(assert (x230 x1493))
(assert (x230 x1795))
(assert (= (and x968 x1979) x1917))
(assert (x230 x2101))
(assert (= x716 (and x451 (not x982))))
(assert (x230 x882))
(assert (x230 x966))
(assert (x849 x1346))
(assert (= 0 (x153 x703)))
(assert (= (x904 1008072988) (x1610 1008072988)))
(assert (x230 x1754))
(assert (x230 x2151))
(assert (= x1001 (=> (and (= (x1409 x1705) x514) (not (> x2126 x2020)) (= x410 (ite x2030 1 0)) (= (x1011 (+ x1196 x393)) x1723) (= x1007 (mod (* x1224 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> x1224 18446744073709551615)) (= x2126 (x1011 (+ x41 x1708))) (= x41 (x1011 (+ x1250 32))) (= (x1011 (+ 31 x1513)) x1128) (not (< 18446744073709551615 x514)) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1128) x1196) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1640) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1640) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2020 x1640))) (= (or x1904 x1661) x2030) (= (x1011 (+ 31 x1250)) x1640) (= x1661 (< 18446744073709551615 x1723)) (= (< x1723 x393) x1904) (= (> x2126 x41) x537) (= (x1011 (+ 32 x1007)) x1513) (= 0 x410) (= x1028 (x1011 (+ 32 x393))) (= (x1409 x1250) x1224) (= x1708 (mod (* x1224 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1250 (x1011 (+ x514 x652)))) (and (=> (and (= x1723 x176) (not x537)) x1125) (=> x537 x460)))))
(assert (x230 x1572))
(assert (not x854))
(assert (x230 x183))
(assert (= (and x547 (not x323)) x1475))
(assert (x230 x836))
(assert (x230 x481))
(assert (x849 x763))
(assert (= x2153 (and x1678 (not x1106))))
(assert (= x869 (and x804 (not x1582))))
(assert (= x1668 (and x182 x446)))
(assert (= (and x852 x1793) x794))
(assert (= (and x627 x2053) x1334))
(assert (x230 x285))
(assert (x230 x288))
(assert (x1254 x1102))
(assert (= 1461501637330902918203684832716283019655932542976 (x634 (x904 1461501637330902918203684832716283019655932542976))))
(assert (= (=> (and (and (< 0 x787) (= (= x2044 x775) x982) (not (> 4 x1478)) (= x1478 36) (< x2170 265030696) (= (x1506 x622) x647) (= x1084 (x486 (- x1478 4))) (= x622 (x2091 x235 2)) (<= x775 1461501637330902918203684832716283019655932542975) (> 256 x1561) (= x655 (x1011 (+ x590 32))) (<= 0 x775) (<= x974 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x501 128) (= x787 (x1915 (x1610 x465))) (>= x647 0) (not (= 33540519 x2170)) (= x1995 x1478) (>= x1238 0) (= 2428475159928928253380189918045730325133814103720850528466242065960167014400 x1810) (= x2036 (x486 (- x187 x1238))) (not x282) (< 0 x1561) (= (x368 x592) x1561) (< x2170 1631253430) (<= 0 x1561) (> 791671133 x2170) (= x2140 (x2004 1461501637330902918203684832716283019655932542975 x177)) (<= 0 x974) (= (x1011 (+ x351 4)) x590) (>= 255 x1561) (>= x1539 0) (= 90077150 x2170) (= x1995 (x486 (- x655 x351))) (= x1606 x2140) (= x282 (< x561 x1238)) (= x611 x1606) (> 1461501637330902918203684832716283019655932542976 x775) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1238) (= x37 (or (> x1084 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1084 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1084 32)))) (= x592 (x1515 (x1610 x1606) (x904 15) 0)) (= (x1515 (x1610 x1606) (x904 15) 0) x235) (<= x647 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1539 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x37)) (and (and (= 68 x568) (= x974 x714) (not (= 1997499061 x1938)) (= x1938 3336544575) (< 0 x1276) (= (x486 (- x568 4)) x613) (not (> 4 x568)) (= x1309 x1539) (not (= 1703538655 x1938)) (= 89953063794570797914675343120038501642627609741519254829220540789936042803200 x1651) (= x1092 (or (and (> 64 x613) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x613))) (> x613 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1915 (x1610 x2044)) x1276) (not (= 1008072988 x1938)) (= 68 x568)) x982)) (and (=> (and (= x474 (= x974 0)) (not x1092)) (and (=> (and (= (< x714 x1309) x2104) (not x474)) (and (=> x2104 x151) (=> (and (and (= x1230 (< 115792089237316195423570985008687907853269984665640 x1783)) (= x1783 (x486 (- x714 x1309))) (= x604 (= 0 (ite x1230 1 0)))) (not x2104)) (and (=> (and (and (= (> x1718 x1247) x862) (= (mod (* x1783 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1965) (= x1247 (div x1965 x714))) x604) (and (=> (and (not x862) (= (> x1718 1000000000000000000000000000) x19)) (and (=> x19 x151) (=> (and (and (= x1499 (= x1718 1000000000000000000000000000)) (= (x486 (- 1000000000000000000000000000 x1718)) x56) (= x2152 (> x1718 x1247))) (not x19)) (and (=> (and (and (= x157 (x486 (- x1247 x1718))) (= x653 (< x861 x1296))) (not x2152)) (and (=> (and (and (= (= x1278 0) x156) (= x1699 (x486 (- x861 x1296))) (= x1736 (ite (not x1201) 1 0)) (= x1022 (ite (< x1733 x157) 1 0)) (= x1278 (x2004 x1736 x1022)) (= (= 0 x1699) x1201) (= x1733 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1699))) (not x653)) (and (=> (not x156) x151) (=> (and (= (mod (* x1699 x157) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x875) x156) (and (=> x1499 x151) (=> (and (and (= (x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x964)) x658) (= x1385 (< x658 x1296)) (= x964 (div x875 x56))) (not x1499)) (and (=> x1385 x151) (=> (and (not x1385) (and (= x1461 x1333) (= (x1011 (+ x1296 x964)) x1333))) x1303))))))) (=> x653 x151))) (=> x2152 x151))))) (=> (and x862 (= (> x2114 x1296) x968)) (and (=> x968 x151) (=> (and (and (= x254 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1137)) (= (= 0 x901) x1032) (= x360 (= x1137 0)) (= x1137 (x486 (- x1296 x2114))) (= (x2004 x450 x1644) x901) (= x450 (ite (not x360) 1 0)) (= x1644 (ite (> x1247 x254) 1 0))) (not x968)) (and (=> (and (and (= x1130 (mod (* x1137 x1247) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (< 0 x1718) x1294)) x1032) (and (=> (and x1294 (and (= x1141 (div x1130 x1718)) (= (< x1448 x2114) x2073) (= (x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1141)) x1448))) (and (=> x2073 x151) (=> (and (and (= x706 (x1011 (+ x1141 x2114))) (= x706 x1461)) (not x2073)) x1303))) (=> (not x1294) x151))) (=> (not x1032) x151))))))) (=> (not x604) x151))))) (=> (and x474 (= x1461 x2114)) x1303))) (=> x1092 x151))) x1016))
(assert (x630 x286))
(assert (x230 x1079))
(assert (x230 x444))
(assert (x230 x187))
(assert (= (and x932 (not x2103)) x1180))
(assert (x230 x2068))
(assert (x230 x1383))
(assert (x230 x743))
(assert (x230 x410))
(assert (= x108 (and x1499 x1233)))
(assert (= x476 (and x812 x1948)))
(assert (= (and x999 x896) x3))
(assert (x230 x129))
(assert (= (and x339 x1780) x1840))
(assert (= x1420 (and x26 x2094)))
(assert (x230 x291))
(assert (x230 x1055))
(assert (x230 x916))
(assert (x230 x55))
(assert (= (x634 (x904 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= x2134 (=> (and (or (and x1672 (and (= x114 (= (x2002 (x1610 x1973)) x1000)) (= x800 x783) (= x416 x953) (= (<= x646 (x2002 (x1610 x109))) x924) (> 4294967296 x2179) x114 (= x1788 x258) (= x646 (x395 (x1610 x109))) (= x1516 x500) x924 (= x404 x2172) (= (x395 (x1610 x1973)) x1000) (= x959 x248) (= x922 x996))) (and (and (= x1888 x959) (= x996 x916) (= x620 x258) (= x542 x1516) (= x2172 x1308) (= x602 x416) (= x800 x1279)) (not x1672))) (and (= (x1011 (+ 32 x1306)) x931) (= (x1011 (+ x1366 32)) x312) (= (x2004 452312848583266388373324160190187140051835877600158453279131187530910662655 x943) x2072) (= (x2090 x459) x695) (= (x184 x148) x1142) (= (x2004 18446744073709551615 x1697) x1816) (= (x644 x993) x943) (= x919 (not (= 0 x950))) (= (x2004 18446744073709551615 x1346) x1341) (= x16 (x1537 x1429)) (= x946 (x1915 (x1610 x1973))) (= (x1011 (+ 32 x931)) x210) (= (x1011 (+ 32 x1737)) x452) (= x1346 (x1183 x1821)) (= x148 (x1011 (+ x993 32))) (= (x2004 18446744073709551615 x257) x570) (= x1366 (x1011 (+ 32 x2065))) (not (= 0 x946)) (= x1488 (x1011 (+ 32 x210))) (= (x2004 255 x1142) x1328) (= x405 (x801 x31)) (= (x1011 (+ 32 x459)) x1429) (= x962 (x1011 (+ x1597 32))) (= (x1011 (+ x517 32)) x607) (= x2156 (x955 x607)) (= (x796 x312) x1427) (= (x659 x517) x257) (= (x1011 (+ 32 x148)) x459) (= (x1011 (+ 32 x452)) x1108) (= (x1011 (+ x607 32)) x779) (= (x2004 18446744073709551615 x2156) x133) (= x359 (x2004 18446744073709551615 x405)) (= (x1011 (+ 32 x1895)) x990) (= (x1011 (+ 32 x1488)) x2068) (= x950 (x1585 x1366)) (= x517 (x1011 (+ 32 x312))) (= x1672 (< 0 x337)) (= x31 (x1011 (+ x779 32))) (= (x1011 (+ x2068 32)) x1579) (= x1306 (x1011 (+ x962 32))) (= (x178 x779) x1697) (= x79 (x2004 18446744073709551615 x1427)) (= (x1011 (+ x31 32)) x1821) (= (x1011 (+ x1108 32)) x1895))) x1122)))
(assert (x230 x1771))
(assert (=> (>= 10000 x1423) (= (x904 x1423) (x1610 x1423))))
(assert (= x2137 (and x1184 x911)))
(assert (x230 x1871))
(assert (x849 x1102))
(assert (x230 x1182))
(assert (= x2121 (=> (= (= 0 x1505) x1543) (and (=> (and (not x1543) (and (= x1909 (< 0 x325)) (= (x1068 x1280) x325))) (and (=> (not x1909) x1954) (=> (and (and (= (x1068 x1280) x1311) (= x627 (or (and (> 32 x1311) (= true (<= x1311 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1311 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1909) (and (=> (and (and (= x1340 (x66 x660)) (= (= x1340 0) x1112) (= (not x1112) x1557) (= (x1011 (+ x1280 32)) x660) (= x1464 (= x1340 (ite x1557 1 0)))) (not x627)) (and (=> (and (not x1464) (= 0 x1096)) x978) (=> (and (= x51 (< 0 x1340)) x1464) (and (=> x51 x1954) (=> (and (not x51) (= x1096 0)) x978))))) (=> (and x627 (= 0 x1096)) x978))))) (=> x1543 x78)))))
(assert (x230 x248))
(assert (= x2176 (and x902 (not x246))))
(assert (x849 x247))
(assert (= x357 (and (not x1948) x812)))
(assert (x230 x1764))
(assert (x230 x927))
(assert (x230 x1435))
(assert (= (and x574 x420) x437))
(assert (x230 x333))
(assert (x230 x1280))
(assert (x849 x405))
(assert (x230 x954))
(assert (x230 x1933))
(assert (= (and x170 (not x1891)) x2094))
(assert (x230 x160))
(assert (x230 x109))
(assert (x230 x1312))
(assert (x230 x1852))
(assert (x64 x1225 x285))
(assert (= (and (not x884) x346) x1460))
(assert (= 66268296141940672851042108147304593538321322149885339258387047461996478413388 (x634 (x1610 66268296141940672851042108147304593538321322149885339258387047461996478413388))))
(assert (= (and (not x105) x1735) x1753))
(assert (= x1087 (and x1507 x279)))
(assert (x230 x1126))
(assert (x230 x79))
(assert (x230 x1899))
(assert (x230 x698))
(assert (x230 x71))
(assert (x230 x459))
(assert (x230 x176))
(assert (x230 x1451))
(assert (x230 x1371))
(assert (x1254 x247))
(assert (= (+ (x634 x235) 2) (x634 (x2091 x235 2))))
(assert (x230 x1040))
(assert (= (x153 x607) 0))
(assert (= x2013 (and x168 x1191)))
(assert (x230 x861))
(assert (= (x634 (x904 2307130307)) 2307130307))
(assert (= (and x356 x1971) x921))
(assert (= 115792089237316195423570985008687907853269984665640 (x634 (x904 115792089237316195423570985008687907853269984665640))))
(assert (x230 x739))
(assert (= (x904 31536000) (x1610 31536000)))
(assert (x1228 x1697))
(assert (= x802 (and x717 x1498)))
(assert (x230 x536))
(assert (= (and (not x1793) x852) x1693))
(assert (= (and x332 x1616) x1977))
(assert (x230 x2172))
(assert (x230 x347))
(assert (x230 x417))
(assert (x64 x948 x138))
(assert (= (x1610 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x904 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (and x1159 x2073) x1197))
(assert (x230 x1375))
(assert (= (x634 (x904 65536)) 65536))
(assert (x1254 x100))
(assert (= (x1610 90077150) (x904 90077150)))
(assert (= x386 (and x202 x2008)))
(assert (x230 x768))
(assert (x230 x1655))
(assert (x230 x2120))
(assert (x230 x158))
(assert (x230 x343))
(assert (x230 x214))
(assert (x230 x628))
(assert (x849 x132))
(assert (x230 x1259))
(assert (x230 x87))
(assert (x230 x2170))
(assert (x230 x44))
(assert (x230 x1015))
(assert (x230 x383))
(assert (= x852 (or x1103 x806 x1477 x557 x467)))
(assert (= (x904 55253086691344412491249731323735809531556945173834312332507302207468853002240) (x1610 55253086691344412491249731323735809531556945173834312332507302207468853002240)))
(assert (= (=> (and (or (and (not x2096) (and (= x110 x1280) (= (x1011 (+ x110 32)) x1209))) (and x2096 (= x1280 96))) (= (= 0 x1370) x2096)) x2121) x2023))
(assert (x230 x1468))
(assert (= (x153 x1740) 0))
(assert (x230 x752))
(assert (x230 x1824))
(assert (x630 x109))
(assert (x230 x1474))
(assert (x230 x91))
(assert (x849 x92))
(assert (x230 x1398))
(assert (x230 x799))
(assert (=> (<= x465 10000) (= (x904 x465) (x1610 x465))))
(assert (x230 x1514))
(assert (= (x1610 22140752835961941075817313386879028057460502132199729129551447365926944505856) (x904 22140752835961941075817313386879028057460502132199729129551447365926944505856)))
(assert (= x1735 (and (not x473) x579)))
(assert (x230 x1709))
(assert (x230 x1862))
(assert (x230 x912))
(assert (= x206 (and x2094 (not x26))))
(assert (= (or x262 x1339 x1181 x1830 x453) x198))
(assert (x230 x789))
(assert (x230 x2076))
(assert (x230 x193))
(assert (x230 x984))
(assert (x230 x222))
(assert (= x1008 (or x793 x640)))
(assert (x230 x509))
(assert (x230 x711))
(assert (x230 x1029))
(assert (x230 x844))
(assert (= (x634 (x1610 x286)) x286))
(assert (x230 x1800))
(assert (x230 x1732))
(assert (x230 x2069))
(assert (x230 x416))
(assert (x230 x126))
(assert (x230 x1947))
(assert (= (and x1437 (not x1553)) x557))
(assert (x230 x1504))
(assert (x230 x1273))
(assert (= x1318 (or x1150 x1846)))
(assert (x849 255))
(assert (x230 x233))
(assert (x230 x1972))
(assert (x230 x142))
(assert (x230 x923))
(assert (x230 x84))
(assert (= x1639 (and x1008 (not x798))))
(assert (=> (>= 10000 x177) (= (x904 x177) (x1610 x177))))
(assert (x230 x1574))
(assert (x849 x177))
(assert (x230 x1781))
(assert (x230 x779))
(assert (x230 x14))
(assert (= (and x2163 x1032) x469))
(assert (x230 x243))
(assert (x230 x1733))
(assert (x230 x744))
(assert (= (+ 1 (x634 x633)) (x634 (x2091 x633 1))))
(assert (x849 x173))
(assert (=> (>= 10000 x109) (= (x904 x109) (x1610 x109))))
(assert (x230 x833))
(assert (= x777 (and x2053 (not x627))))
(assert (= (x1610 2428475159928928253380189918045730325133814103720850528466242065960167014400) (x904 2428475159928928253380189918045730325133814103720850528466242065960167014400)))
(assert (x230 x1258))
(assert (x230 x1422))
(assert (x230 x1227))
(assert (x230 x748))
(assert (x849 x72))
(assert (x230 x1649))
(assert (x230 x500))
(assert (x1254 x173))
(assert (x230 x286))
(assert (x230 x803))
(assert (x230 x1014))
(assert (x230 x2081))
(assert (= x902 (or x208 x3)))
(assert (= x795 (and x1498 (not x717))))
(assert (= (and (not x125) x362) x1808))
(assert (= x346 (and (not x958) x765)))
(assert (x230 x1026))
(assert (x230 x1248))
(assert (= (and x708 x1459) x1339))
(assert (x230 x143))
(assert (x230 x1760))
(assert (x230 x1723))
(assert (= (and x1977 x2183) x1326))
(assert (x230 x1540))
(assert (x230 x1421))
(assert (x1228 x257))
(assert (x230 x1296))
(assert (x230 x1559))
(assert (x849 x443))
(assert (= x526 (and x2133 x1420)))
(assert (x230 x121))
(assert (x230 x938))
(assert (x230 x1084))
(assert (x230 x1496))
(assert (x849 x885))
(assert (x230 x1644))
(assert (x230 x337))
(assert (x230 x40))
(assert (x230 x931))
(assert (x230 x1549))
(assert (x230 x1747))
(assert (x230 x829))
(assert (= x1834 (=> (and (= (x1011 (+ x1972 x50)) x224) (= x199 x2158) (= (x1011 (+ x50 x930)) x1263) (= (or x421 x709) x154) (= x458 (x1011 (+ x1935 32))) (= x1657 (> x1835 x1935)) (<= x739 18446744073709551615) (= x181 (x1011 (+ x197 32))) (<= x1760 18446744073709551615) (= x1903 (x1409 x224)) (= x1695 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x422)) (= (x1011 (+ x50 32)) x937) (= x1118 (x1011 (+ x1263 32))) (= (x1011 (+ x1039 x458)) x1918) (= x466 (x1011 (+ x181 32))) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1241) x749) (= x422 (x1011 (+ x1039 31))) (= x1989 (x1011 (+ x1118 x1039))) (= x1932 (x1011 (+ 32 x1835))) (not (< 18446744073709551615 x1039)) (= (x1011 (+ 32 x988)) x488) (<= x269 18446744073709551615) (= (x1011 (+ x419 32)) x2071) (= (x1409 x1375) x1760) (= x739 (x1409 x1667)) (= x2021 (> x1845 18446744073709551615)) (= (or x1657 x1406) x1634) (= (x1011 (+ x1375 32)) x419) (not (< 18446744073709551615 x1972)) (= (x1409 x1982) x223) (= (x1011 (+ x1667 32)) x1375) (= (not x6) x1949) (= x199 (ite x1949 1 0)) (= x401 (x1011 (+ 32 x224))) (>= 18446744073709551615 x548) (= x203 (x1011 (+ 32 x905))) (= (x1011 (+ 31 x576)) x301) (= (< 18446744073709551615 x1835) x421) (= x1406 (< 18446744073709551615 x1935)) (= x298 (x1011 (+ 32 x1987))) (= x1727 (or x2021 x1300)) (= (x1409 x1263) x1039) (= x636 (x1011 (+ x988 x2143))) (not (< 18446744073709551615 x2143)) (= (x1409 x988) x2143) (= x1138 (x1011 (+ 31 x224))) (= (x1011 (+ x1903 x401)) x124) (= (< x1835 x2028) x709) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x799)) (> x2020 x799)) (and (> x799 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (or (and (= (<= x1907 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1907 288)) (> x1907 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> x1989 x2020)) (= x1987 (x1011 (+ x466 32))) (= (x1011 (+ 32 x2001)) x576) (= x1336 0) (= x269 (x1409 x203)) (= (x1011 (+ x203 32)) x1667) (= (x1011 (+ x2071 32)) x1982) (= x213 (x1011 (+ 31 x1903))) (= x1835 (x1011 (+ x2028 288))) (= (< x1845 x1935) x1300) (= x1439 (x1011 (+ x298 32))) (not (> x124 x2020)) (>= 18446744073709551615 x223) (or (and (< x1138 x2020) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1138) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1138) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020))) (= x197 (x1011 (+ x1577 32))) (= (ite x154 1 0) x255) (= x799 (x1011 (+ x1263 31))) (= x1935 (x1011 (+ x1835 x589))) (= (x1011 (+ x1932 x1903)) x2116) (= x548 (x1409 x419)) (= (ite x1727 1 0) x1419) (= (ite x1634 1 0) x1336) (= x2001 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x213)) (= x905 (x1011 (+ 32 x937))) (= (x1011 (+ 32 x1695)) x411) (= 0 x1419) (= (x1409 x905) x2158) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x301) x589) (= x1363 (x1409 x2071)) (= (x1409 x937) x930) (= x6 (= x2158 0)) (= x1577 (x1011 (+ 32 x2028))) (<= x1363 18446744073709551615) (= (x1011 (+ x411 31)) x1241) (not (< 18446744073709551615 x930)) (not (< 18446744073709551615 x1903)) (= 0 x255) (= (x1011 (+ 32 x1439)) x313) (= x281 (not (< x488 x121))) (= (x1011 (+ x1935 x749)) x1845) (= x1907 (x486 (- x2020 x636))) (= (x1409 x50) x1972) (= (x1011 (+ x2143 x988)) x50)) (and x281 (=> (= x1845 x2062) x1323)))))
(assert (x230 x443))
(assert (x230 x1774))
(assert (= (and x1931 x1185) x13))
(assert (= x971 (and x1893 x2165)))
(assert (x230 x1835))
(assert (= x274 (and x1542 (not x1934))))
(assert (= (and (not x1294) x469) x1759))
(assert (= 1099511627776 (x634 (x904 1099511627776))))
(assert (x230 x1580))
(assert (= x338 (and x1592 (not x1874))))
(assert (= x1848 (=> (and (= x1214 32) (= x732 1)) x1719)))
(assert (x230 x2116))
(assert (x230 x484))
(assert (x230 x1116))
(assert (x230 x57))
(assert (x230 x1881))
(assert (x230 x674))
(assert (x1254 x1128))
(assert (x230 x845))
(assert (x630 x1423))
(assert (x230 x424))
(assert (= (and x1550 x1927) x278))
(assert (x1254 x1774))
(assert (x230 x2125))
(assert (= (and x1473 x2169) x1331))
(assert (= (and x202 (not x2008)) x1875))
(assert (x630 66268296141940672851042108147304593538321322149885339258387047461996478413388))
(assert (x230 x1025))
(assert (= x1763 (and (not x1385) x1359)))
(assert (x230 x661))
(assert (= (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x215) x1869 (>= x215 0) (< 0 x621) (= (x1915 (x1610 x109)) x621) (<= x743 255) (<= 0 x1605) (not (= x109 x465)) (>= x602 0) (>= 1461501637330902918203684832716283019655932542975 x1605) (not (= 418493994 x909)) x1319 (= 2 x1358) (= x215 x1423) (>= 1461501637330902918203684832716283019655932542975 x602) (>= x844 0) x22 (= x1160 418493994) (< 0 x109) (= (> (x1915 (x1610 x465)) 0) x1869) (not (= x315 x2044)) (not (< x909 418493994)) x1955 (= x2132 false) (<= x811 255) (<= x2044 1461501637330902918203684832716283019655932542975) (<= 0 x1312) (= x635 (x1515 (x1610 x1423) (x904 2) 0)) (not (= x465 x2044)) (> 256 x1353) (< 0 x315) (<= x1423 1461501637330902918203684832716283019655932542975) (= x1955 (> (x1915 (x1610 x2044)) 0)) (>= x743 0) (= x1319 (> (x1915 (x1610 x315)) 0)) (>= 1461501637330902918203684832716283019655932542975 x109) (= x844 (x395 (x1610 x465))) (= false x1712) (= x1312 (x395 (x1610 x109))) (= x721 (x395 (x1610 x315))) (not (= x2044 x109)) (= x629 x193) (= x1721 x1605) (>= 1461501637330902918203684832716283019655932542975 x193) (<= x1647 255) (<= x465 1461501637330902918203684832716283019655932542975) (not (= x465 x315)) (= false x104) (> 2307130307 x909) (not (> x1353 3)) (= (x1090 x1497) x1353) (<= 0 x811) (= x1223 (x395 (x1610 x2044))) (<= 0 x193) (= x1497 (x2091 x635 1)) (>= x1647 0) (< x909 791671133) (>= x830 0) (< 0 x465) (= (> (x1915 (x1610 x109)) 0) x22) (>= 1461501637330902918203684832716283019655932542975 x315) (< 0 x2044) (>= x1223 0) (= 428079936 x909) (>= 1461501637330902918203684832716283019655932542975 x830) (not (= x109 x315)) (= false x491) (= x1353 x752) (<= 0 x721)) (and (not (= x1614 2)) (> 1461501637330902918203684832716283019655932542976 x438) (> x1742 0) (not (or (> x158 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 x158) (= true (<= x158 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1742 (x1915 (x1610 x109))) (= x1811 (< x2142 x1824)) (not (< 18446744073709551615 x1332)) (= x1237 (mod (* x1618 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1409 x1563) x1618) (= (x1409 x1073) x1332) (= (mod (* 32 x1618) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1879) (= x520 (x1090 x245)) (= (x1409 x652) x1481) (= x857 (x1011 (+ 32 x1237))) (<= x177 1461501637330902918203684832716283019655932542975) (= x158 (x486 (- x2020 x652))) (= x177 x860) (= (x1011 (+ x2142 x1879)) x1824) (>= x1573 0) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)) (< 195 x2020)) (= x1854 (x2091 x624 1)) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1959) x1967) (not (< x2020 4)) (< x773 2307130307) (= 128 x381) (= x624 (x1515 (x1610 x177) (x904 2) 0)) (= (> x694 18446744073709551615) x1255) (= x245 (x2091 x1052 1)) (= x759 (< x694 288)) (>= 1461501637330902918203684832716283019655932542975 x318) (= (x1011 (+ 32 x652)) x523) (= x1959 (x1011 (+ x857 31))) (<= x1614 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x585) (not (> x1147 18446744073709551615)) (= (x1011 (+ x1967 288)) x694) (= x161 x585) (= x652 (x1011 (+ x1147 4))) (= 0 x2034) (>= 1461501637330902918203684832716283019655932542975 x438) (>= x318 0) (= x1563 (x1011 (+ x652 x1332))) (= x177 x894) (= x187 x561) (= x438 x1573) (= x1530 (or x1255 x759)) (>= 1461501637330902918203684832716283019655932542975 x1481) (= 418493994 x773) (not (< 3 x520)) (not (< 18446744073709551615 x1618)) (not (< x2020 x1824)) (= x752 x1526) (<= x1573 1461501637330902918203684832716283019655932542975) (= x1041 x1536) (= x1073 (x1011 (+ x523 32))) (= x2034 (ite x1530 1 0)) (<= 0 x1614) (not (< x773 418493994)) (> 256 x520) (= (x1011 (+ 31 x1563)) x1832) (>= x769 0) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1832)) (< x1832 x2020)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1832))) (>= x438 0) (= x1729 x177) (>= 1461501637330902918203684832716283019655932542975 x769) (= x1041 x318) (= x520 3) (not (or (> x158 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x158 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x158 160)))) (not (or (> x1850 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1850) (= (<= x1850 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x1515 (x1610 x177) (x904 2) 0) x1052) (= x1850 (x486 (- x2020 4))) (= x629 x1573) (= x438 (x838 x1854)) (= x1018 x177) (= (x1011 (+ x1563 32)) x2142) (> 791671133 x773))) (and (=> x1811 x1632) (=> (and (= x694 x1120) (not x1811)) x127))) x854))
(assert (= (and (not x862) x1004) x236))
(assert (= (=> (and (= (x1518 x1244) x1491) (= x809 (not (> x136 32))) (= x1257 x1747) (= x28 x1244)) (and (=> (= 32 x540) x2029) x809)) x1547))
(assert (x230 x423))
(assert (x230 x1346))
(assert (x1254 x132))
(assert (x230 x1411))
(assert (x230 x461))
(assert (x230 x1321))
(assert (x230 x1110))
(assert (= 0 (x153 x1429)))
(assert (= x1927 (or x1364 x1639)))
(assert (x230 x1815))
(assert (= (or x1153 x1676) x339))
(assert (x230 x523))
(assert (x230 x47))
(assert (= x547 (and x2031 x2137)))
(assert (x230 x2144))
(assert (x230 x1523))
(assert (x230 x1151))
(assert (x230 x1189))
(assert (x230 x1622))
(assert (= (=> (and (= 0 x2027) (= x2166 x1365)) x140) x1044))
(assert (= (=> (and (= (not (< x484 x1450)) x1865) (= (< x2144 x851) x406) (not (< x2020 x1005)) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1124) x1655) (= (x1409 x1802) x1649) (= x2049 (x1011 (+ 32 x4))) (= (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x614) x4) (= 0 x684) (= (x1011 (+ x2049 31)) x1124) (= x484 (x1011 (+ 32 x1310))) (not (< 18446744073709551615 x233)) (not (< 18446744073709551615 x1649)) (= x300 (x1011 (+ x2076 x1649))) (= (x1409 x1310) x233) (= (x1011 (+ x1802 31)) x1038) (or (and (> x1038 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1038 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1038 x2020))) (= (or x366 x406) x780) (= x1043 (x1011 (+ x1802 32))) (= x2076 (x1011 (+ 32 x851))) (= (x1011 (+ x1649 31)) x614) (= x684 (ite x780 1 0)) (= x2144 (x1011 (+ x1655 x851))) (= (x1011 (+ x1043 x1649)) x1005) (= x1802 (x1011 (+ x1310 x233))) (= (< 18446744073709551615 x2144) x366)) (and (=> (= x2144 x1258) x859) x1865)) x682))
(assert (x230 x1749))
(assert (x230 x706))
(assert (x230 x646))
(assert (x230 x1342))
(assert (x230 x1591))
(assert (x230 x1554))
(assert (x230 x625))
(assert (x230 x2173))
(assert (x230 x1196))
(assert (= x1636 (and x296 x275)))
(assert (x230 x2107))
(assert (x849 x1241))
(assert (x230 x879))
(assert (x230 x1343))
(assert (x230 x1694))
(assert (= (x1610 1949782873) (x904 1949782873)))
(assert (x230 x983))
(assert (x384 x2161))
(assert (x230 x1086))
(assert (= (x153 x760) 0))
(assert (x230 x617))
(assert (= (x153 x2063) 0))
(assert (= x1844 (or x43 x1360)))
(assert (x230 x466))
(assert (= (x1610 26959946667150639794667015087019630673637144422540572481103610249215) (x904 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x230 x1737))
(assert (= x1678 (and x1490 x2117)))
(assert (x849 x138))
(assert (x230 x626))
(assert (x230 x772))
(assert (x230 x584))
(assert (x230 x305))
(assert (= (=> (and (= x1607 (not (> x2009 128))) (= (x1011 (+ x110 96)) x1930) (= (x1011 (+ x669 96)) x130) (= x888 (x67 x130))) (and x1607 (=> (= 128 x1870) x289))) x2181))
(assert (x230 x1018))
(assert (x230 x132))
(assert (x230 x1336))
(assert (= (x153 x1981) 0))
(assert (x230 x203))
(assert (x230 x505))
(assert (x230 x642))
(assert (= x668 (and (not x1811) x147)))
(assert (x230 x1826))
(assert (x230 x1995))
(assert (x230 x1920))
(assert (x230 x2014))
(assert (= (x634 (x1610 x1606)) x1606))
(assert (x230 x412))
(assert (x230 x1571))
(assert (x230 x1007))
(assert (= (x634 (x904 90077150)) 90077150))
(assert (x230 x1234))
(assert (= x724 (and (not x19) x236)))
(assert (x230 x502))
(assert (x849 1461501637330902918203684832716283019655932542975))
(assert (= (and x1008 x798) x1364))
(assert (= x1828 (and x36 x476)))
(assert (x230 x1241))
(assert (x230 x1750))
(assert (= x289 (=> (and (or (and (= x30 (x1011 (+ x2009 x110))) x1793) (not x1793)) (= (< x2009 x1870) x1793)) x1503)))
(assert (= 1000000000000000000000000000 (x634 (x904 1000000000000000000000000000))))
(assert (x230 x1548))
(assert (x230 x1246))
(assert (x230 x1652))
(assert (x230 x1340))
(assert (x1254 x619))
(assert (= x140 (=> (and (or (and x1507 (and (= x1370 x1365) (= x569 (x1823 (x1610 x2099))) (= (x1480 (x1610 x465)) x1947) (= x2027 x1505) (= 0 x295) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1947 x295)) (= x569 x494))) (and (not x1507) (and (= x1365 x1370) (= x1505 x2027)))) (= x1507 (= x2027 0))) x2023)))
(assert (x230 x1452))
(assert (x230 x965))
(assert (x230 x2024))
(assert (x230 x513))
(assert (= (or x921 (and (not x356) x1971)) x362))
(assert (x230 x1935))
(assert (x230 x489))
(assert (x230 x893))
(assert (x230 x1410))
(assert (x230 x1043))
(assert (x230 x992))
(assert (= (x634 (x1610 x1791)) x1791))
(assert (x230 x1798))
(assert (x230 x782))
(assert (x230 x1816))
(assert (x230 x1940))
(assert (= (and x902 x246) x471))
(assert (x564 x1591))
(assert (x230 x1291))
(assert (x1254 x422))
(assert (x230 x962))
(assert (x230 x1022))
(assert (= (x634 (x904 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (x384 x177))
(assert (= 18446744073709551615 (x634 (x904 18446744073709551615))))
(assert (= x1173 (and x1931 (not x1185))))
(assert (x230 x726))
(assert (= 0 (x153 x502)))
(assert (= x918 (=> (and (= 0 x732) (= x1214 x290)) x1719)))
(assert (= (x1570 x1453) 0))
(assert (x230 x450))
(assert (x849 452312848583266388373324160190187140051835877600158453279131187530910662655))
(assert (x230 x1820))
(assert (= (or x492 (and (not x1909) x758)) x272))
(assert (x230 x2))
(assert (= x1423 (x634 (x1610 x1423))))
(assert (= (x634 (x904 2446411860)) 2446411860))
(assert (= (=> (= (= x732 0) x778) (and (=> (and (= 0 x1096) x778) x978) (=> (and (not x778) (and (= (x1011 (+ x1214 31)) x173) (= x1472 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x173)) (= x1891 (or (> x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1214) (= true (<= x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x1011 (+ 128 x1472)) x1325))) (and (=> (and (not x1891) (and (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) x1057) (= x701 (x2004 x72 x1390)) (= (x1146 128) x625) (= (ite (> x1069 x1057) 1 0) x1390) (= x26 (= x701 0)) (= (ite (not x733) 1 0) x72) (= x733 (= 0 x625)))) (and (=> (and (= x1096 0) (not x26)) x978) (=> (and x26 (and (= x361 (x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x833))) (= x2133 (< x361 1000000000000000000000000000)) (= (div x781 31536000) x833) (= (mod (* x625 x1069) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x781))) (and (=> (and (= 0 x1096) x2133) x978) (=> (and (and (<= 0 x209) (= x285 (ite (> x1145 x1796) 1 0)) (= x1225 (ite (not x385) 1 0)) (= x288 (x2004 x1225 x285)) (<= x209 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209) x1796) (= x1261 (= 0 x288)) (= (x1011 (+ x833 1000000000000000000000000000)) x1145) (= x385 (= x209 0))) (not x2133)) (and (=> (and (and (= x139 (x1011 (+ 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1937))) (= x597 (> x1067 0)) (= (x1011 (+ x1325 32)) x669) (= (x486 (- x992 x1325)) x1100) (= (mod (* x209 x1145) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1015) (= x1826 (x1011 (+ x688 32))) (= x353 (x1011 (+ 36 x1325))) (= x110 (x1011 (+ 64 x992))) (= (div x1015 1000000000000000000000000000) x742) (= (x2004 1461501637330902918203684832716283019655932542975 x1371) x2099) (= x992 (x1011 (+ x353 96))) (= (x1915 (x1610 x2099)) x1067) (= x1937 (x2004 26959946667150639794667015087019630673637144422540572481103610249215 x1591)) (= (x612 x669) x1591) (= (x1011 (+ 32 x353)) x688) (= (x486 (- x1100 32)) x874)) x1261) (and (=> (and x597 (and (= (x1511 x1325) x2009) (= (> x2009 0) x441))) (and (=> (and x441 (and (= x669 x1559) (= (< 32 x2009) x616) (= x110 x1686) (= x90 (x67 x1559)))) (and (=> (and (= 32 x1870) (not x616)) x289) (=> (and (and (= (x67 x1453) x1522) (= x1453 (x1011 (+ 32 x669))) (= x1553 (< 64 x2009)) (= (x1011 (+ x110 32)) x70)) x616) (and (=> (and (and (= x1352 (x67 x648)) (= (< 96 x2009) x1393) (= (x1011 (+ 64 x669)) x648) (= (x1011 (+ 64 x110)) x907)) x1553) (and (=> (and (not x1393) (= x1870 96)) x289) (=> x1393 x2181))) (=> (and (= x1870 64) (not x1553)) x289))))) (=> (and (= x1870 0) (not x441)) x289))) (=> (and (= 0 x1096) (not x597)) x978))) (=> (and (not x1261) (= 0 x1096)) x978))))))) (=> (and x1891 (= x1096 0)) x978))))) x1719))
(assert (= (and (not x251) x586) x293))
(assert (x230 x594))
(assert (x230 x17))
(assert (= (and (not x36) x476) x887))
(assert (= 0 (x153 x1548)))
(assert (x230 x1137))
(assert (x230 x1111))
(assert (x1254 x398))
(assert (= (and x2160 x963) x1566))
(assert (x230 x1579))
(assert (x849 x948))
(assert (x230 x2142))
(assert (= (=> (and (or x207 (not x207)) (= x207 (= x71 0))) x1213) x1836))
(assert (x230 x763))
(assert (= x2018 (and x374 (not x1035))))
(assert (x230 x585))
(assert (x230 x2158))
(assert (= (=> (and (= (x1011 (+ x1187 31)) x1512) (= (> x2157 x1707) x662) (= (x1011 (+ x1062 32)) x1187) (= x20 (< 18446744073709551615 x391)) (= x1707 (x1011 (+ 32 x1716))) (= (ite x480 1 0) x436) (not (< 18446744073709551615 x573)) (= x391 (x1011 (+ x176 x595))) (or (and (> x2020 x722) (= (<= x722 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x722) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x436 0) (= (or x1418 x20) x480) (not (> x972 18446744073709551615)) (= (< x391 x176) x1418) (= x595 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1512)) (= x2157 (x1011 (+ x1707 x744))) (= (x1011 (+ x652 x573)) x1716) (= x1062 (mod (* x972 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1409 x1716) x972) (not (< x2020 x2157)) (= (x1409 x1881) x573) (= (x1011 (+ 32 x176)) x1913) (= x722 (x1011 (+ 31 x1716))) (= x744 (mod (* 128 x972) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (not x662) (= x391 x1831)) x123) (=> x662 x1012))) x1125))
(assert (x230 x445))
(assert (x230 x1067))
(assert (x230 x1100))
(assert (x230 x1772))
(assert (x230 x1921))
(assert (x230 x1563))
(assert (x230 x2115))
(assert (= x1604 (=> (and (= x2160 (< x1590 x1206)) (or (not x2160) (and (= (x1011 (+ x1590 x1383)) x1600) x2160))) x2134)))
(assert (= (x904 791671133) (x1610 791671133)))
(assert (x230 x1690))
(assert (x230 x797))
(assert (x230 x776))
(assert (x230 x1265))
(assert (x230 x1751))
(assert (x230 x841))
(assert (x230 x11))
(assert (x849 x1736))
(assert (x230 x290))
(assert (= (=> (and (= (= x817 0) x1462) (or x1462 (not x1462))) x1133) x1983))
(assert (x230 x1837))
(assert (= x1030 (and (not x201) x1098)))
(assert (x230 x720))
(assert (x230 x1395))
(assert (x230 x361))
(assert (= 2835717307 (x634 (x904 2835717307))))
(assert (x230 x1229))
(assert (x230 x1257))
(assert (= (and (not x1626) x1307) x1945))
(assert (= 1631253430 (x634 (x904 1631253430))))
(assert (= x1088 (and x2103 x932)))
(assert (x230 x1275))
(assert (x230 x807))
(assert (= x898 (or x1693 x794)))
(assert (= (and x2113 x662) x429))
(assert (x230 x950))
(assert (= x1156 (and (not x2150) x2043)))
(assert (= x723 (and x1734 x808)))
(assert (x849 x2084))
(assert (x230 x435))
(assert (= (x904 65536) (x1610 65536)))
(assert (= (+ 1 (x634 x1710)) (x634 (x2091 x1710 1))))
(assert (x230 x1870))
(assert (x230 x714))
(assert (x230 x75))
(assert (x849 x1285))
(assert (= x1528 (and x1231 x1376)))
(assert (x230 x913))
(assert (x849 x643))
(assert (x230 x48))
(assert (x230 x144))
(assert (= x1012 (=> (and (= x536 (x1011 (+ x1431 32))) (= x333 (x1011 (+ x1800 32))) (<= x505 255) (= x1431 (x1011 (+ 32 x1889))) (= 0 x871) (= (not (> x2157 x333)) x1838) (= x273 (> x487 18446744073709551615)) (= (x1409 x1679) x984) (= x1755 (x486 (- x2020 x1707))) (= (x1409 x1707) x1877) (= x1889 (x1011 (+ x391 32))) (= (ite x1799 1 0) x871) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1755) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1755) true) (< x1755 128)))) (= x505 (x1409 x1749)) (= (x1409 x1800) x578) (= (x1011 (+ x1707 32)) x1749) (= (> x391 x487) x2127) (= x487 (x1011 (+ 128 x391))) (<= x1877 452312848583266388373324160190187140051835877600158453279131187530910662655) (= (or x2127 x273) x1799) (= (x1011 (+ x1749 32)) x1679) (= (x1011 (+ x1679 32)) x1800)) (and (=> (= x487 x1831) x123) x1838))))
(assert (x230 x56))
(assert (x230 x1877))
(assert (x230 x540))
(assert (= (and x510 x653) x715))
(assert (x230 x1962))
(assert (x230 x611))
(assert (= x896 (or x1270 x668)))
(assert (= (=> (and (= (x1011 (+ x1928 x1258)) x2028) (= x354 (> x1258 x2028)) (= x76 (x1011 (+ x863 31))) (not (> x1775 18446744073709551615)) (= x121 (x1011 (+ x2050 x988))) (= x863 (x1011 (+ x336 32))) (= (> x121 x988) x827) (= (x1409 x1299) x1775) (not (> x845 18446744073709551615)) (= x336 (mod (* 32 x1775) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1299 (x1011 (+ x652 x845))) (not (> x121 x2020)) (= x1158 (x1011 (+ x1299 31))) (= x746 (or x1963 x354)) (= x1963 (> x2028 18446744073709551615)) (= 0 x483) (= x912 (x1011 (+ 32 x1258))) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1158) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2020)) (and (> x2020 x1158) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1158) (<= x2020 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x1928 (x2004 115792089237316195423570985008687907853269984665640564039457584007913129639904 x76)) (= x2050 (mod (* 32 x1775) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite x746 1 0) x483) (= x988 (x1011 (+ x1299 32))) (= (x1409 x1705) x845)) (and (=> x827 x1834) (=> (and (= x2028 x2062) (not x827)) x1323))) x859))
(assert (x849 x1785))
(assert (x230 x136))
(assert (x230 x2020))
(assert (x230 x1467))
(assert (x230 x894))
(assert (= x672 (=> (and (= x1045 (< x1771 x2173)) (or (and x1045 (= x179 (x1011 (+ x1771 x543)))) (not x1045))) x1858)))
(assert (x230 x351))
(assert (x230 x620))
(assert (= (x634 (x1610 x1293)) x1293))
(assert (x230 x1939))
(assert (= 0 (x153 x779)))
(assert (x230 x1316))
(assert (= (x904 1000000000000000000000000000) (x1610 1000000000000000000000000000)))
(assert (x230 x1671))
(assert (x1254 x1512))
(assert (= x812 (and x1698 x1348)))
(assert (x230 x2052))
(assert (x230 x1419))
(assert (x230 x1581))
(assert (= (and x1490 (not x2117)) x1428))
(assert (x230 x1970))
(assert (x230 x1756))
(assert (= (x634 (x904 2362630343)) 2362630343))
(assert (= (and x1934 x1542) x296))
(assert (x230 x538))
(assert (x230 x358))
(assert (= (x634 (x904 33540519)) 33540519))
(assert (= x728 (=> (and (and (< 0 x647) (= x977 (div x1598 31536000)) (not x1912) (= x1598 (* x2036 x1984)) (= (x736 x856) x1189) (>= x1189 0) (= 1000000000000000000000000000 x1738) (= x603 (div x1154 1000000000000000000000000000)) (= (x2004 1461501637330902918203684832716283019655932542975 x2161) x1361) (<= x1189 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x530) (= x54 (or (and (> 32 x813) (= (<= x813 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x813))) (= x1912 (= x1422 0)) (= x1984 (x1023 128)) (= (+ x1544 x1738) x594) (>= x530 0) (= x2081 (div x327 x647)) (= (x1515 (x1610 x1606) (x904 15) 0) x633) (= x1902 (x486 (- x1434 x899))) (= x1944 (= x465 x1361)) (= x1154 (* x594 x530)) (< (* x594 x530) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x220 (x1868 x351)) (= x327 (* x1189 x603)) (= x899 (x1011 (+ x351 32))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2036 x1984)) (not x54) (= x551 (x2004 1461501637330902918203684832716283019655932542975 x177)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x977 1000000000000000000000000000)) (< (* x603 x1189) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x856 (x2091 x633 1)) (= x1434 (x1011 (+ 32 x1665))) (= x977 x1544) (= (x1011 (+ 4 x899)) x1665)) (and x1944 (and (or (and (and (= x220 x1731) (= x764 0)) (not x251)) (and x251 (and (not (> x261 x220)) (= x764 x1415) (= x1415 (x486 (- x220 x261))) (= x1731 x261)))) (and (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1350) (not x2035) (<= 0 x1327) (= x782 x551) (> x350 0) (= 36 x91) (= x216 (x1515 (x1610 x782) (x904 1) 0)) (not (< x91 4)) (not (> 1631253430 x1053)) (= (x1011 (+ x899 32)) x1671) (>= 1461501637330902918203684832716283019655932542975 x782) (= x782 x2078) (not (= x1053 1631253430)) (= x1327 (x1627 x216)) (> 2446411860 x1053) (= (x486 (- x91 4)) x231) (= x1902 x91) (= x1053 1889567281) (> 2835717307 x1053) (= x350 (x1915 (x1610 x465))) (not (= 1818647125 x1053)) (= x251 (< x261 x220)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1327) (= x261 (x810 x899)) (= (or (and (> 32 x231) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x231) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x231)) x2035))))) x495)))
(assert (x230 x1367))
(assert (x230 x301))
(assert (= (=> (and (= (> x1315 x1391) x1550) (or (and (= (x1011 (+ x1622 x1391)) x1554) x1550) (not x1550))) x679) x1864))
(assert (x849 x1512))
(assert (x230 x2009))
(assert (x849 x1993))
(assert (= x818 (or x1495 x394)))
(assert (= x1797 (or x1061 x1808)))
(assert (x230 x1320))
(assert (x230 x1069))
(assert (x159 x1142))
(assert (x230 x2085))
(assert (x230 x1505))
(assert (x230 x1812))
(assert (x1254 x1380))
(assert (x849 x614))
(assert (x230 x1755))
(assert (x230 x1058))
(assert (= x1233 (and x156 x1432)))
(assert (x230 x38))
(check-sat)
(exit)