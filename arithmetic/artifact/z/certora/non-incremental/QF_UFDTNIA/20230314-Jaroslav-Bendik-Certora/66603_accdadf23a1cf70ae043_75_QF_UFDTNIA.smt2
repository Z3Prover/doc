(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x678 0)) (((x1689 (x2113 x678) (x1905 Int)) (x709 (x1414 x678) (x3504 x678) (x200 Int)) (x2553 (x4255 Int)))))
(declare-fun x3416 () Int)
(declare-fun x2335 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x522 () Bool)
(declare-fun x114 () Bool)
(declare-fun x3663 () Int)
(declare-fun x921 () Int)
(declare-fun x2011 () Int)
(declare-fun x4486 () Bool)
(declare-fun x3629 () Bool)
(declare-fun x4479 () x678)
(declare-fun x2097 () Int)
(declare-fun x1206 () x678)
(declare-fun x1232 () Int)
(declare-fun x3855 () Bool)
(declare-fun x3653 () Bool)
(declare-fun x165 () Bool)
(declare-fun x3136 () Int)
(declare-fun x4593 () Bool)
(declare-fun x3178 () Int)
(declare-fun x2342 () Bool)
(declare-fun x4517 () Int)
(declare-fun x3001 () Int)
(declare-fun x4742 () Bool)
(declare-fun x1512 () Int)
(declare-fun x2088 () Bool)
(declare-fun x1532 () Int)
(declare-fun x2101 () Bool)
(declare-fun x1601 () Int)
(declare-fun x1154 () Bool)
(declare-fun x4813 () Bool)
(declare-fun x879 () Bool)
(declare-fun x2745 () Int)
(declare-fun x813 () Bool)
(declare-fun x56 () Int)
(declare-fun x3501 () Int)
(declare-fun x1273 () Bool)
(declare-fun x2993 () Int)
(declare-fun x3254 () Bool)
(declare-fun x3357 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x731 () Bool)
(declare-fun x4801 () Int)
(declare-fun x2663 () x678)
(declare-fun x2410 () Int)
(declare-fun x162 () Bool)
(declare-fun x1848 () Int)
(declare-fun x2405 () Bool)
(declare-fun x154 () Bool)
(declare-fun x3485 () Int)
(declare-fun x3380 () Bool)
(declare-fun x653 () Bool)
(declare-fun x2412 () Int)
(declare-fun x3372 () Bool)
(declare-fun x361 () Bool)
(declare-fun x3722 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x4870 (Int) Int)
(declare-fun x267 () Bool)
(declare-fun x4404 () x678)
(declare-fun x434 () Bool)
(declare-fun x4894 () x678)
(declare-fun x4440 () Int)
(declare-fun x2533 () x678)
(declare-fun x915 () x678)
(declare-fun x3739 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x4137 () Bool)
(declare-fun x2648 () Int)
(declare-fun x4448 () Bool)
(declare-fun x3492 () Int)
(declare-fun x1547 () Bool)
(declare-fun x703 () Bool)
(declare-fun x607 () Bool)
(declare-fun x557 () Int)
(declare-fun x291 () Int)
(declare-fun x1602 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1351 () Int)
(declare-fun x2047 () Int)
(declare-fun x2615 () Int)
(declare-fun x3280 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x3189 () Bool)
(declare-fun x3586 () Int)
(declare-fun x201 () Int)
(declare-fun x1499 () Bool)
(declare-fun x3965 () Int)
(declare-fun x3792 () Bool)
(declare-fun x2378 () Int)
(declare-fun x148 () Bool)
(declare-fun x4249 () Int)
(declare-fun x3782 () Int)
(declare-fun x1679 () Int)
(declare-fun x2987 () Bool)
(declare-fun x1217 () x678)
(declare-fun x815 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x1215 () Int)
(declare-fun x1153 () x678)
(declare-fun x4464 () Int)
(declare-fun x1610 () Int)
(declare-fun x683 () Bool)
(declare-fun x2944 () Int)
(declare-fun x4473 () Int)
(declare-fun x4181 () Bool)
(declare-fun x2637 () Int)
(declare-fun x1910 () Bool)
(declare-fun x4834 () Bool)
(declare-fun x2221 () Int)
(declare-fun x977 () Int)
(declare-fun x1447 () Int)
(declare-fun x1299 () Int)
(declare-fun x4798 () Bool)
(declare-fun x4551 () Int)
(declare-fun x3499 () x678)
(declare-fun x4839 () Int)
(declare-fun x2387 () Bool)
(declare-fun x3559 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x1838 () Int)
(declare-fun x698 () Int)
(declare-fun x1246 () Int)
(declare-fun x4585 () Int)
(declare-fun x4288 () Bool)
(declare-fun x4030 () Bool)
(declare-fun x931 () Bool)
(declare-fun x1262 () Int)
(declare-fun x1267 () Int)
(declare-fun x3841 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x4538 () Bool)
(declare-fun x2687 (Int) Int)
(declare-fun x193 () Int)
(declare-fun x4032 () Int)
(declare-fun x1964 () Int)
(declare-fun x2529 () Bool)
(declare-fun x2494 () Bool)
(declare-fun x882 () Bool)
(declare-fun x4762 () Bool)
(declare-fun x1148 () x678)
(declare-fun x4084 () Bool)
(declare-fun x3958 () Int)
(declare-fun x318 () Int)
(declare-fun x1178 () Int)
(declare-fun x895 () Bool)
(declare-fun x3368 () Int)
(declare-fun x1681 () Int)
(declare-fun x2763 () Int)
(declare-fun x19 () Int)
(declare-fun x2350 () Int)
(declare-fun x4245 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x3845 () Int)
(declare-fun x3264 (x678) Int)
(declare-fun x2816 () Bool)
(declare-fun x104 () Int)
(declare-fun x1900 () Int)
(declare-fun x4423 () Int)
(declare-fun x270 () Bool)
(declare-fun x2356 () Int)
(declare-fun x160 () Bool)
(declare-fun x799 () Int)
(declare-fun x2453 () Int)
(declare-fun x4146 () Bool)
(declare-fun x3957 () Int)
(declare-fun x2092 () Int)
(declare-fun x2724 () x678)
(declare-fun x1914 () Bool)
(declare-fun x4582 () Bool)
(declare-fun x2686 () Int)
(declare-fun x4638 () Bool)
(declare-fun x1884 (Int Int) Int)
(declare-fun x3131 () Int)
(declare-fun x4364 () Bool)
(declare-fun x3307 () Int)
(declare-fun x4343 () Bool)
(declare-fun x27 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x4678 () Bool)
(declare-fun x170 () Bool)
(declare-fun x810 () Int)
(declare-fun x2965 () x678)
(declare-fun x2108 () Int)
(declare-fun x2720 (x678) Int)
(declare-fun x1818 () Bool)
(declare-fun x3059 () Bool)
(declare-fun x3904 () Int)
(declare-fun x392 () Bool)
(declare-fun x4541 () Bool)
(declare-fun x3159 () Bool)
(declare-fun x1425 (x678) Int)
(declare-fun x3204 () Int)
(declare-fun x1475 () x678)
(declare-fun x3835 () Int)
(declare-fun x4203 () x678)
(declare-fun x2902 () Int)
(declare-fun x3371 () Bool)
(declare-fun x4332 () Int)
(declare-fun x188 () Bool)
(declare-fun x3814 () Int)
(declare-fun x643 () Bool)
(declare-fun x964 () Int)
(declare-fun x1480 () Int)
(declare-fun x4535 () Int)
(declare-fun x2841 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x2958 () Int)
(declare-fun x2809 () Bool)
(declare-fun x1018 () x678)
(declare-fun x3250 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x3251 () Bool)
(declare-fun x1882 () x678)
(declare-fun x1819 () Int)
(declare-fun x2078 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x890 () Int)
(declare-fun x1293 () Bool)
(declare-fun x351 () Int)
(declare-fun x3812 () Int)
(declare-fun x1568 () Bool)
(declare-fun x3693 () Int)
(declare-fun x4557 () x678)
(declare-fun x962 () x678)
(declare-fun x2850 () Bool)
(declare-fun x4485 () x678)
(declare-fun x598 (x678) Int)
(declare-fun x321 () Bool)
(declare-fun x2931 () Int)
(declare-fun x906 () Int)
(declare-fun x1051 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x2585 () Int)
(declare-fun x1971 () Int)
(declare-fun x3080 () Bool)
(declare-fun x80 () Bool)
(declare-fun x2480 () x678)
(declare-fun x1242 () Int)
(declare-fun x3003 () Bool)
(declare-fun x775 () Bool)
(declare-fun x3360 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x3621 () Bool)
(declare-fun x2603 () Bool)
(declare-fun x2901 () Int)
(declare-fun x3209 () Int)
(declare-fun x3706 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1000 () Int)
(declare-fun x1792 () Int)
(declare-fun x4796 () x678)
(declare-fun x1592 () Int)
(declare-fun x2065 () Int)
(declare-fun x971 () Int)
(declare-fun x545 () x678)
(declare-fun x4671 () Bool)
(declare-fun x3249 () x678)
(declare-fun x4649 () Int)
(declare-fun x4632 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x2939 () Int)
(declare-fun x4890 () Bool)
(declare-fun x382 () Int)
(declare-fun x4117 () Bool)
(declare-fun x3671 () Bool)
(declare-fun x2605 () Bool)
(declare-fun x2643 () Int)
(declare-fun x4744 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x4726 () x678)
(declare-fun x2210 () Bool)
(declare-fun x3265 () Bool)
(declare-fun x1426 () Int)
(declare-fun x2271 () Int)
(declare-fun x3566 () Int)
(declare-fun x1446 () x678)
(declare-fun x630 () Int)
(declare-fun x1850 () Int)
(declare-fun x1458 () Bool)
(declare-fun x818 () Int)
(declare-fun x4055 () Bool)
(declare-fun x224 () x678)
(declare-fun x1002 () Bool)
(declare-fun x3520 () Int)
(declare-fun x2025 () Bool)
(declare-fun x4833 () Int)
(declare-fun x498 () Int)
(declare-fun x3323 () Bool)
(declare-fun x4756 () Int)
(declare-fun x3430 () Int)
(declare-fun x3563 () Bool)
(declare-fun x4501 () Bool)
(declare-fun x3393 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x4426 () Int)
(declare-fun x3123 () Int)
(declare-fun x1866 () Bool)
(declare-fun x4437 () Int)
(declare-fun x640 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x3830 () Int)
(declare-fun x2854 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x3871 () x678)
(declare-fun x1161 () Bool)
(declare-fun x4854 () Int)
(declare-fun x1435 () Int)
(declare-fun x4743 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x4565 () Bool)
(declare-fun x566 () Bool)
(declare-fun x700 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x3639 () Int)
(declare-fun x1552 () Bool)
(declare-fun x4816 () Bool)
(declare-fun x4095 () Bool)
(declare-fun x2595 () Int)
(declare-fun x2596 () Int)
(declare-fun x4536 () Int)
(declare-fun x183 () Bool)
(declare-fun x4082 () Int)
(declare-fun x2920 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x3710 () Bool)
(declare-fun x2197 () Int)
(declare-fun x1840 () x678)
(declare-fun x1705 () Bool)
(declare-fun x232 () x678)
(declare-fun x233 () Int)
(declare-fun x2128 () Int)
(declare-fun x4325 () Int)
(declare-fun x2406 () Int)
(declare-fun x1395 () x678)
(declare-fun x3796 () Int)
(declare-fun x1049 () x678)
(declare-fun x4021 () x678)
(declare-fun x3623 () Int)
(declare-fun x4149 () Int)
(declare-fun x3279 () Bool)
(declare-fun x1245 () Int)
(declare-fun x4513 () x678)
(declare-fun x1151 () Int)
(declare-fun x4316 () Bool)
(declare-fun x2096 () Bool)
(declare-fun x2063 () Int)
(declare-fun x4609 () Bool)
(declare-fun x3229 () Bool)
(declare-fun x3442 () Int)
(declare-fun x4572 () x678)
(declare-fun x2127 () Int)
(declare-fun x1520 () Bool)
(declare-fun x1754 () Int)
(declare-fun x1560 () Int)
(declare-fun x4794 () Bool)
(declare-fun x608 () Int)
(declare-fun x4556 () Bool)
(declare-fun x4016 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x3230 () Int)
(declare-fun x1286 () Bool)
(declare-fun x2543 () Int)
(declare-fun x2717 () Int)
(declare-fun x1329 () x678)
(declare-fun x2651 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x2893 () Bool)
(declare-fun x3978 () Bool)
(declare-fun x1823 () Int)
(declare-fun x167 () Bool)
(declare-fun x4709 () Int)
(declare-fun x2782 () Int)
(declare-fun x4774 () x678)
(declare-fun x1773 () Int)
(declare-fun x1289 () Bool)
(declare-fun x1291 () Int)
(declare-fun x4586 () Int)
(declare-fun x784 () Bool)
(declare-fun x1922 () Int)
(declare-fun x3906 () Int)
(declare-fun x2551 () Bool)
(declare-fun x4004 () x678)
(declare-fun x2924 () Bool)
(declare-fun x4777 () x678)
(declare-fun x2358 () x678)
(declare-fun x701 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1588 () Int)
(declare-fun x1175 () Int)
(declare-fun x1255 () Bool)
(declare-fun x3840 () Bool)
(declare-fun x4741 () Bool)
(declare-fun x4342 () Bool)
(declare-fun x3089 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x4215 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x2503 () x678)
(declare-fun x3838 () Int)
(declare-fun x2970 () Bool)
(declare-fun x4690 () Int)
(declare-fun x3602 () Bool)
(declare-fun x3282 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x2520 () Int)
(declare-fun x611 () Int)
(declare-fun x4044 () x678)
(declare-fun x490 () Int)
(declare-fun x1278 () Int)
(declare-fun x1977 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x1716 () x678)
(declare-fun x1113 () Bool)
(declare-fun x2513 () Int)
(declare-fun x2707 () x678)
(declare-fun x1845 () Int)
(declare-fun x3000 () Int)
(declare-fun x3879 () Int)
(declare-fun x4550 () Bool)
(declare-fun x1746 () x678)
(declare-fun x1903 () Bool)
(declare-fun x3503 () Int)
(declare-fun x617 () Int)
(declare-fun x4123 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x119 () Bool)
(declare-fun x4333 () Int)
(declare-fun x1750 () Int)
(declare-fun x3401 () Bool)
(declare-fun x1256 () Int)
(declare-fun x3816 () Int)
(declare-fun x471 () Bool)
(declare-fun x740 () Bool)
(declare-fun x956 () x678)
(declare-fun x2456 () x678)
(declare-fun x1511 () Int)
(declare-fun x4219 () Int)
(declare-fun x779 () Bool)
(declare-fun x3609 () Bool)
(declare-fun x4581 () Bool)
(declare-fun x2038 () Bool)
(declare-fun x3570 () Int)
(declare-fun x282 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1128 () Int)
(declare-fun x2478 () Int)
(declare-fun x3286 () Bool)
(declare-fun x614 (x678) Int)
(declare-fun x2819 () x678)
(declare-fun x1119 () Int)
(declare-fun x3172 () x678)
(declare-fun x1858 () Bool)
(declare-fun x3369 () x678)
(declare-fun x1906 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x3551 () Int)
(declare-fun x1920 () Int)
(declare-fun x2887 () Int)
(declare-fun x2018 () Bool)
(declare-fun x3683 () Bool)
(declare-fun x1417 () x678)
(declare-fun x3846 () Int)
(declare-fun x4005 () Bool)
(declare-fun x965 () Int)
(declare-fun x289 () x678)
(declare-fun x2912 () Int)
(declare-fun x636 () Int)
(declare-fun x2644 () Int)
(declare-fun x676 (x678) Int)
(declare-fun x2691 () Bool)
(declare-fun x4653 () Int)
(declare-fun x2446 () Bool)
(declare-fun x3961 () Bool)
(declare-fun x2884 () Int)
(declare-fun x2331 () Int)
(declare-fun x4599 () Int)
(declare-fun x3749 () Bool)
(declare-fun x3893 () Int)
(declare-fun x1272 () Int)
(declare-fun x404 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x4263 () Int)
(declare-fun x3988 () Bool)
(declare-fun x3037 () Int)
(declare-fun x4040 () x678)
(declare-fun x4608 () x678)
(declare-fun x2675 () Bool)
(declare-fun x1724 () Int)
(declare-fun x1990 () Bool)
(declare-fun x2750 () Int)
(declare-fun x4327 () Bool)
(declare-fun x1771 () Int)
(declare-fun x3318 () Int)
(declare-fun x1312 () Int)
(declare-fun x1221 () Bool)
(declare-fun x3152 () Int)
(declare-fun x2960 () Int)
(declare-fun x1574 () Int)
(declare-fun x2508 () Int)
(declare-fun x2111 () Int)
(declare-fun x4738 () Bool)
(declare-fun x3989 () Int)
(declare-fun x3112 () Int)
(declare-fun x4765 () Bool)
(declare-fun x3403 () x678)
(declare-fun x2363 () Bool)
(declare-fun x3903 () Int)
(declare-fun x4656 () Int)
(declare-fun x4284 () Bool)
(declare-fun x1083 () Int)
(declare-fun x2947 () Bool)
(declare-fun x2522 () Int)
(declare-fun x64 () x678)
(declare-fun x2713 () Int)
(declare-fun x3828 () Bool)
(declare-fun x3480 () Int)
(declare-fun x632 () Int)
(declare-fun x3654 () Bool)
(declare-fun x369 () Int)
(declare-fun x3458 () Int)
(declare-fun x4724 () Int)
(declare-fun x3843 (Int) Int)
(declare-fun x3849 () Int)
(declare-fun x2194 () Bool)
(declare-fun x12 () Int)
(declare-fun x3440 () Int)
(declare-fun x2487 () Bool)
(declare-fun x2971 () Bool)
(declare-fun x40 () Int)
(declare-fun x3993 () Bool)
(declare-fun x1701 () Int)
(declare-fun x3467 () Bool)
(declare-fun x345 () Bool)
(declare-fun x3395 () Bool)
(declare-fun x3729 () Bool)
(declare-fun x447 () Int)
(declare-fun x3373 () Bool)
(declare-fun x3018 () Bool)
(declare-fun x4548 () Bool)
(declare-fun x4366 () Int)
(declare-fun x4789 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x3447 () Bool)
(declare-fun x4552 () Bool)
(declare-fun x884 () Int)
(declare-fun x3387 () Bool)
(declare-fun x1984 () Bool)
(declare-fun x1979 () Bool)
(declare-fun x4317 () Bool)
(declare-fun x3276 () Bool)
(declare-fun x3182 () Bool)
(declare-fun x1388 () Int)
(declare-fun x854 () Int)
(declare-fun x3170 () Bool)
(declare-fun x2468 () Int)
(declare-fun x163 () Int)
(declare-fun x3341 () Int)
(declare-fun x3936 () Bool)
(declare-fun x4241 () Bool)
(declare-fun x4876 () Int)
(declare-fun x4790 () Bool)
(declare-fun x728 () Int)
(declare-fun x4400 () Bool)
(declare-fun x4136 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x1218 () Int)
(declare-fun x4083 () Int)
(declare-fun x4048 () Bool)
(declare-fun x623 () x678)
(declare-fun x955 () Int)
(declare-fun x3575 () Bool)
(declare-fun x3243 () Bool)
(declare-fun x2267 () Int)
(declare-fun x3197 () Int)
(declare-fun x948 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1350 () Int)
(declare-fun x2219 () Int)
(declare-fun x3918 () Bool)
(declare-fun x502 () Bool)
(declare-fun x2919 () x678)
(declare-fun x2009 () Int)
(declare-fun x3981 () Bool)
(declare-fun x2721 () Int)
(declare-fun x2808 () Int)
(declare-fun x1432 () Int)
(declare-fun x4864 () Bool)
(declare-fun x928 () Bool)
(declare-fun x4821 () Int)
(declare-fun x1072 () Bool)
(declare-fun x654 () Bool)
(declare-fun x4386 () x678)
(declare-fun x3423 () Bool)
(declare-fun x1959 () Int)
(declare-fun x2 () x678)
(declare-fun x386 () Int)
(declare-fun x2149 () Int)
(declare-fun x622 () Int)
(declare-fun x4778 () Bool)
(declare-fun x935 () Bool)
(declare-fun x362 () Int)
(declare-fun x3479 () Int)
(declare-fun x2002 () Bool)
(declare-fun x3939 () Int)
(declare-fun x732 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x3956 () Int)
(declare-fun x3124 () Int)
(declare-fun x763 () x678)
(declare-fun x3275 () Int)
(declare-fun x3655 () Int)
(declare-fun x2519 () Int)
(declare-fun x1343 () Int)
(declare-fun x4770 () Bool)
(declare-fun x3240 () Bool)
(declare-fun x3985 () Int)
(declare-fun x2382 () Bool)
(declare-fun x2794 () Int)
(declare-fun x2373 () Int)
(declare-fun x4759 () Bool)
(declare-fun x2673 (x678) Int)
(declare-fun x438 () Bool)
(declare-fun x2068 () Int)
(declare-fun x3999 () Int)
(declare-fun x4645 () x678)
(declare-fun x4236 () Int)
(declare-fun x1989 () Int)
(declare-fun x3283 () Int)
(declare-fun x2222 () Int)
(declare-fun x4244 () Bool)
(declare-fun x3181 () Bool)
(declare-fun x1767 () x678)
(declare-fun x4449 () Bool)
(declare-fun x405 () Int)
(declare-fun x3523 () Bool)
(declare-fun x3158 () x678)
(declare-fun x1714 () Int)
(declare-fun x4614 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x81 () x678)
(declare-fun x1604 () Bool)
(declare-fun x2177 () Bool)
(declare-fun x2073 () Int)
(declare-fun x3823 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x1109 () Int)
(declare-fun x3791 () Int)
(declare-fun x2564 () Int)
(declare-fun x2950 () Int)
(declare-fun x2043 () Int)
(declare-fun x2683 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x1781 () Int)
(declare-fun x3948 () Bool)
(declare-fun x518 () Int)
(declare-fun x1473 () Int)
(declare-fun x1338 () Bool)
(declare-fun x3817 () Bool)
(declare-fun x2393 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x2526 () x678)
(declare-fun x3293 () Int)
(declare-fun x1213 () Int)
(declare-fun x3093 () Int)
(declare-fun x2801 () Bool)
(declare-fun x4885 () Bool)
(declare-fun x1712 () x678)
(declare-fun x4401 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x4087 () Bool)
(declare-fun x1315 (x678) Int)
(declare-fun x2083 () Int)
(declare-fun x2091 () Int)
(declare-fun x4626 () Bool)
(declare-fun x2058 () Int)
(declare-fun x4247 () Bool)
(declare-fun x3370 () Int)
(declare-fun x59 () Bool)
(declare-fun x2283 () Int)
(declare-fun x4313 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x3445 () Int)
(declare-fun x3952 () x678)
(declare-fun x4293 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x4158 () Int)
(declare-fun x901 () Bool)
(declare-fun x963 () Int)
(declare-fun x1062 () Int)
(declare-fun x4712 () Bool)
(declare-fun x2273 () x678)
(declare-fun x1766 () Bool)
(declare-fun x2269 () Bool)
(declare-fun x585 () Int)
(declare-fun x3098 () Bool)
(declare-fun x2792 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x1379 () Int)
(declare-fun x2708 () x678)
(declare-fun x1007 () Int)
(declare-fun x856 () Bool)
(declare-fun x4591 () Int)
(declare-fun x1355 () Bool)
(declare-fun x1879 () Int)
(declare-fun x2883 () Int)
(declare-fun x550 () Bool)
(declare-fun x3094 () Bool)
(declare-fun x2827 () Int)
(declare-fun x1936 () Int)
(declare-fun x1372 () Int)
(declare-fun x3953 () Bool)
(declare-fun x1099 () Int)
(declare-fun x2502 () Int)
(declare-fun x175 () Bool)
(declare-fun x3886 () Bool)
(declare-fun x2313 (Int) Int)
(declare-fun x1698 () Bool)
(declare-fun x2186 () Int)
(declare-fun x3444 () Bool)
(declare-fun x92 () Bool)
(declare-fun x266 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x2730 () Int)
(declare-fun x1614 () x678)
(declare-fun x2788 () Bool)
(declare-fun x4 () Int)
(declare-fun x1095 () Bool)
(declare-fun x3014 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x4180 () Int)
(declare-fun x2413 () Bool)
(declare-fun x1554 () Int)
(declare-fun x1357 () Int)
(declare-fun x4869 () Bool)
(declare-fun x824 () Int)
(declare-fun x1770 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x3327 () Int)
(declare-fun x4607 () x678)
(declare-fun x3581 () Int)
(declare-fun x1115 () Int)
(declare-fun x969 () Int)
(declare-fun x3295 () Int)
(declare-fun x3500 () Int)
(declare-fun x2510 () Int)
(declare-fun x4421 () x678)
(declare-fun x3810 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x3526 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x173 () Int)
(declare-fun x1759 () x678)
(declare-fun x268 () x678)
(declare-fun x3263 () Bool)
(declare-fun x4583 () Bool)
(declare-fun x4904 () Bool)
(declare-fun x1757 () Int)
(declare-fun x1143 () Bool)
(declare-fun x2435 () Int)
(declare-fun x1549 () Int)
(declare-fun x4669 () Bool)
(declare-fun x3619 () Int)
(declare-fun x1354 () Bool)
(declare-fun x3290 () Int)
(declare-fun x100 () Int)
(declare-fun x4601 () x678)
(declare-fun x475 () Bool)
(declare-fun x343 () Bool)
(declare-fun x2293 () Int)
(declare-fun x1874 (x678) Int)
(declare-fun x1732 () Int)
(declare-fun x261 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x1118 () Int)
(declare-fun x595 () Int)
(declare-fun x409 () Bool)
(declare-fun x4251 () Bool)
(declare-fun x3618 () Bool)
(declare-fun x2647 () x678)
(declare-fun x3309 () Int)
(declare-fun x707 () x678)
(declare-fun x187 () Int)
(declare-fun x672 () Bool)
(declare-fun x1622 () Int)
(declare-fun x1258 () Int)
(declare-fun x473 () Int)
(declare-fun x4428 () Int)
(declare-fun x2420 () Bool)
(declare-fun x2459 () Int)
(declare-fun x4374 () Int)
(declare-fun x2802 () Bool)
(declare-fun x55 () Bool)
(declare-fun x2765 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x123 () Int)
(declare-fun x4042 () Int)
(declare-fun x1195 () Bool)
(declare-fun x2660 () Bool)
(declare-fun x712 () Int)
(declare-fun x1824 () x678)
(declare-fun x179 () Bool)
(declare-fun x730 () Int)
(declare-fun x2874 () Bool)
(declare-fun x4140 () Bool)
(declare-fun x414 () x678)
(declare-fun x2153 () Bool)
(declare-fun x3929 () Int)
(declare-fun x927 () Int)
(declare-fun x1163 () x678)
(declare-fun x1872 () Int)
(declare-fun x2004 () Int)
(declare-fun x4859 () Bool)
(declare-fun x4800 () Bool)
(declare-fun x1567 () Int)
(declare-fun x3347 () Bool)
(declare-fun x3625 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x493 () Int)
(declare-fun x2937 () Bool)
(declare-fun x3082 () Int)
(declare-fun x1394 () Bool)
(declare-fun x1647 () x678)
(declare-fun x4066 () x678)
(declare-fun x1238 () Bool)
(declare-fun x3790 () Bool)
(declare-fun x4617 () Bool)
(declare-fun x3755 () Bool)
(declare-fun x4811 () Int)
(declare-fun x395 () Bool)
(declare-fun x293 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x312 () Int)
(declare-fun x4791 () Int)
(declare-fun x3672 () Int)
(declare-fun x2457 () Int)
(declare-fun x1324 () Bool)
(declare-fun x2207 () Int)
(declare-fun x357 (x678) Int)
(declare-fun x1646 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x2555 () Int)
(declare-fun x2324 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x2314 () x678)
(declare-fun x2953 () Int)
(declare-fun x2835 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x4495 () Bool)
(declare-fun x4303 () Int)
(declare-fun x2680 () Int)
(declare-fun x2744 () Int)
(declare-fun x859 () Bool)
(declare-fun x3519 () Int)
(declare-fun x1558 () Bool)
(declare-fun x727 () Int)
(declare-fun x4299 () Bool)
(declare-fun x2230 () Bool)
(declare-fun x325 () Bool)
(declare-fun x4753 () Bool)
(declare-fun x4184 () Int)
(declare-fun x3549 () x678)
(declare-fun x2542 () Bool)
(declare-fun x349 () Int)
(declare-fun x4477 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x2546 () x678)
(declare-fun x1737 () Bool)
(declare-fun x2240 () Bool)
(declare-fun x782 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x2959 () Int)
(declare-fun x2055 () Int)
(declare-fun x2530 () Bool)
(declare-fun x2251 () Int)
(declare-fun x992 () Bool)
(declare-fun x1742 () Int)
(declare-fun x2600 () Int)
(declare-fun x3944 () x678)
(declare-fun x3069 () Int)
(declare-fun x674 () x678)
(declare-fun x3242 () Int)
(declare-fun x4298 () Bool)
(declare-fun x4522 () Int)
(declare-fun x3884 () Bool)
(declare-fun x3734 () Int)
(declare-fun x4301 () Bool)
(declare-fun x695 () Bool)
(declare-fun x4584 () Bool)
(declare-fun x3109 () x678)
(declare-fun x4387 () Bool)
(declare-fun x4781 () Int)
(declare-fun x1081 () Int)
(declare-fun x558 () Bool)
(declare-fun x2688 () Bool)
(declare-fun x4723 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x3513 () Int)
(declare-fun x1047 () x678)
(declare-fun x2370 () Bool)
(declare-fun x4153 () Int)
(declare-fun x76 () Bool)
(declare-fun x3404 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x3533 () Bool)
(declare-fun x2389 () x678)
(declare-fun x2312 () Bool)
(declare-fun x4047 () Bool)
(declare-fun x2837 () Int)
(declare-fun x4176 () Bool)
(declare-fun x658 () Int)
(declare-fun x4682 () Bool)
(declare-fun x2820 () Int)
(declare-fun x20 () Bool)
(declare-fun x2034 () Bool)
(declare-fun x656 () Bool)
(declare-fun x2666 () Bool)
(declare-fun x3637 () Bool)
(declare-fun x4392 () Bool)
(declare-fun x4389 () Bool)
(declare-fun x2892 () Int)
(declare-fun x1491 () x678)
(declare-fun x1503 () Bool)
(declare-fun x4045 () Bool)
(declare-fun x874 () Int)
(declare-fun x3288 () Bool)
(declare-fun x2679 () Bool)
(declare-fun x4782 () x678)
(declare-fun x4453 () Bool)
(declare-fun x3534 () Bool)
(declare-fun x2847 () Int)
(declare-fun x1966 () Bool)
(declare-fun x46 () Int)
(declare-fun x2481 () Bool)
(declare-fun x3506 () Bool)
(declare-fun x3216 () Bool)
(declare-fun x4456 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x2592 () x678)
(declare-fun x627 () Bool)
(declare-fun x682 () Int)
(declare-fun x1799 () Bool)
(declare-fun x4589 () Bool)
(declare-fun x3829 () Bool)
(declare-fun x495 () Bool)
(declare-fun x3128 () Int)
(declare-fun x3477 () Int)
(declare-fun x3349 () Int)
(declare-fun x3211 () x678)
(declare-fun x1036 () Int)
(declare-fun x1508 () Bool)
(declare-fun x4702 () Bool)
(declare-fun x4039 () Bool)
(declare-fun x4748 () x678)
(declare-fun x2842 () Int)
(declare-fun x2739 () Bool)
(declare-fun x16 () Bool)
(declare-fun x3417 () Int)
(declare-fun x1891 () Bool)
(declare-fun x2499 () Bool)
(declare-fun x159 () Bool)
(declare-fun x2381 () Int)
(declare-fun x3736 () Int)
(declare-fun x3297 () Int)
(declare-fun x3472 () Int)
(declare-fun x3274 () Bool)
(declare-fun x1077 () Int)
(declare-fun x3514 () x678)
(declare-fun x2397 () Bool)
(declare-fun x3272 () Int)
(declare-fun x1626 () Int)
(declare-fun x4290 () x678)
(declare-fun x997 () Bool)
(declare-fun x876 () Int)
(declare-fun x1945 () Int)
(declare-fun x2490 () Bool)
(declare-fun x3396 () Bool)
(declare-fun x3267 () Int)
(declare-fun x4430 () Bool)
(declare-fun x830 () x678)
(declare-fun x1733 () Int)
(declare-fun x3176 () x678)
(declare-fun x255 () x678)
(declare-fun x383 () Bool)
(declare-fun x937 () Bool)
(declare-fun x4487 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x533 () Int)
(declare-fun x1598 () Int)
(declare-fun x4212 () Int)
(declare-fun x4740 () Int)
(declare-fun x2517 () Bool)
(declare-fun x2963 () x678)
(declare-fun x1234 () Int)
(declare-fun x222 () x678)
(declare-fun x1361 () Int)
(declare-fun x77 () Int)
(declare-fun x4408 () x678)
(declare-fun x926 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x4276 () Bool)
(declare-fun x4359 () Bool)
(declare-fun x3557 () Int)
(declare-fun x511 () Int)
(declare-fun x4318 (x678) Int)
(declare-fun x4378 () Bool)
(declare-fun x4339 () Bool)
(declare-fun x329 () Int)
(declare-fun x4454 () Bool)
(declare-fun x144 () Bool)
(declare-fun x754 () Bool)
(declare-fun x320 () Bool)
(declare-fun x4297 () Bool)
(declare-fun x3008 () Bool)
(declare-fun x1967 () Int)
(declare-fun x2278 () Int)
(declare-fun x3488 () Bool)
(declare-fun x3660 () Bool)
(declare-fun x4750 () Bool)
(declare-fun x2856 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x2566 () Bool)
(declare-fun x7 () Int)
(declare-fun x68 () Bool)
(declare-fun x3016 () Int)
(declare-fun x2846 () x678)
(declare-fun x3880 () Bool)
(declare-fun x4771 () Bool)
(declare-fun x3709 () Int)
(declare-fun x4085 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x375 () Bool)
(declare-fun x2244 () x678)
(declare-fun x44 () x678)
(declare-fun x374 () Int)
(declare-fun x3809 () x678)
(declare-fun x621 () Int)
(declare-fun x2626 () Int)
(declare-fun x756 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x3737 () Bool)
(declare-fun x2990 () x678)
(declare-fun x2087 () Int)
(declare-fun x3516 () Int)
(declare-fun x4156 () Int)
(declare-fun x671 () Bool)
(declare-fun x4138 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x1627 () Int)
(declare-fun x1719 () Bool)
(declare-fun x305 () Int)
(declare-fun x1342 () Int)
(declare-fun x2238 () Int)
(declare-fun x2814 () Bool)
(declare-fun x2635 () Int)
(declare-fun x920 () Int)
(declare-fun x2909 () x678)
(declare-fun x3530 () Int)
(declare-fun x4278 () Bool)
(declare-fun x496 () Int)
(declare-fun x2189 () Int)
(declare-fun x3986 () x678)
(declare-fun x1104 () Int)
(declare-fun x4677 () Int)
(declare-fun x4708 () Bool)
(declare-fun x235 () x678)
(declare-fun x4242 () Bool)
(declare-fun x1788 () Int)
(declare-fun x3190 () Bool)
(declare-fun x2135 (Int) Int)
(declare-fun x96 () x678)
(declare-fun x4715 () Bool)
(declare-fun x1297 () Int)
(declare-fun x2070 (x678) Int)
(declare-fun x1287 () Int)
(declare-fun x2404 () Int)
(declare-fun x3019 () Int)
(declare-fun x2736 () Int)
(declare-fun x294 () Int)
(declare-fun x147 () x678)
(declare-fun x3517 () Int)
(declare-fun x4319 () Bool)
(declare-fun x4360 () Int)
(declare-fun x1868 () Bool)
(declare-fun x554 () x678)
(declare-fun x4183 () Int)
(declare-fun x989 () Bool)
(declare-fun x6 () Bool)
(declare-fun x1261 (x678) Int)
(declare-fun x299 () Bool)
(declare-fun x2179 () Bool)
(declare-fun x520 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x852 () Bool)
(declare-fun x2577 () Int)
(declare-fun x1020 () Int)
(declare-fun x3161 () Int)
(declare-fun x2289 () Int)
(declare-fun x1980 () Int)
(declare-fun x1916 () Bool)
(declare-fun x2233 () Int)
(declare-fun x1467 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x548 () x678)
(declare-fun x4063 () Bool)
(declare-fun x2366 () Bool)
(declare-fun x4563 () Bool)
(declare-fun x3927 () Int)
(declare-fun x4068 () Bool)
(declare-fun x2143 (x678) Int)
(declare-fun x466 () Int)
(declare-fun x2527 () Bool)
(declare-fun x364 () x678)
(declare-fun x4841 () Bool)
(declare-fun x990 () Bool)
(declare-fun x1932 () Int)
(declare-fun x820 () x678)
(declare-fun x4435 () Int)
(declare-fun x1400 () Int)
(declare-fun x2748 () Bool)
(declare-fun x3324 () Int)
(declare-fun x2759 () Int)
(declare-fun x2236 () Bool)
(declare-fun x3042 () Int)
(declare-fun x207 () Bool)
(declare-fun x3941 () Bool)
(declare-fun x4630 () Bool)
(declare-fun x3223 () Bool)
(declare-fun x4151 () Int)
(declare-fun x1783 () Bool)
(declare-fun x4731 () Bool)
(declare-fun x2556 () Int)
(declare-fun x3794 () Int)
(declare-fun x4692 () Bool)
(declare-fun x122 () Int)
(declare-fun x2026 (x678) Int)
(declare-fun x794 () Int)
(declare-fun x3803 () Int)
(declare-fun x4326 () x678)
(declare-fun x1931 () Int)
(declare-fun x972 () Bool)
(declare-fun x3310 () x678)
(declare-fun x1496 () Bool)
(declare-fun x2270 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x3005 () Bool)
(declare-fun x4884 () Int)
(declare-fun x3212 () Int)
(declare-fun x1307 () Int)
(declare-fun x1219 () Int)
(declare-fun x2326 () Bool)
(declare-fun x954 () Bool)
(declare-fun x657 () Bool)
(declare-fun x4605 () Int)
(declare-fun x729 () Int)
(declare-fun x4457 () Int)
(declare-fun x1186 () Bool)
(declare-fun x1250 () Int)
(declare-fun x4289 () Int)
(declare-fun x1721 () Bool)
(declare-fun x1170 () Int)
(declare-fun x1045 () Int)
(declare-fun x250 () Bool)
(declare-fun x146 () Int)
(declare-fun x4596 (x678) Int)
(declare-fun x3400 () Bool)
(declare-fun x4412 () Int)
(declare-fun x655 () Int)
(declare-fun x3015 () Int)
(declare-fun x69 () Int)
(declare-fun x2403 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x3938 () Int)
(declare-fun x4080 () Int)
(declare-fun x2086 () Int)
(declare-fun x4274 () Int)
(declare-fun x108 () Int)
(declare-fun x4056 () Bool)
(declare-fun x4822 () Int)
(declare-fun x2995 () Bool)
(declare-fun x3424 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x3207 () Int)
(declare-fun x102 () Bool)
(declare-fun x4139 () Int)
(declare-fun x1440 () Bool)
(declare-fun x2678 () Bool)
(declare-fun x2105 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x3926 () Bool)
(declare-fun x48 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x342 () Int)
(declare-fun x3278 () Bool)
(declare-fun x3408 () Bool)
(declare-fun x1709 () Int)
(declare-fun x1330 () Int)
(declare-fun x2587 () Int)
(declare-fun x4860 () Int)
(declare-fun x3979 () Int)
(declare-fun x939 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x4402 () Int)
(declare-fun x867 () Bool)
(declare-fun x3892 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x3588 () Bool)
(declare-fun x1546 () Int)
(declare-fun x1094 () Bool)
(declare-fun x4603 () Int)
(declare-fun x578 () Int)
(declare-fun x1796 () Bool)
(declare-fun x1798 () Int)
(declare-fun x3599 () Int)
(declare-fun x4820 () Int)
(declare-fun x649 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x1389 () x678)
(declare-fun x850 () Bool)
(declare-fun x805 () Bool)
(declare-fun x1556 () Int)
(declare-fun x2570 () Int)
(declare-fun x370 () Int)
(declare-fun x2622 () Bool)
(declare-fun x415 () Bool)
(declare-fun x3437 () Int)
(declare-fun x2514 () Int)
(declare-fun x1209 () Int)
(declare-fun x1451 () Bool)
(declare-fun x612 () Int)
(declare-fun x1073 () x678)
(declare-fun x4204 () Int)
(declare-fun x45 () x678)
(declare-fun x3781 (x678) Int)
(declare-fun x4348 () Bool)
(declare-fun x2932 () Bool)
(declare-fun x4901 () Bool)
(declare-fun x50 () Bool)
(declare-fun x2371 () Bool)
(declare-fun x2653 () Bool)
(declare-fun x2523 () Int)
(declare-fun x711 () Bool)
(declare-fun x230 (x678) Int)
(declare-fun x2560 () Int)
(declare-fun x2056 () Int)
(declare-fun x3355 () Int)
(declare-fun x422 () Int)
(declare-fun x4716 () Int)
(declare-fun x4214 () Int)
(declare-fun x2440 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x1702 (x678) Int)
(declare-fun x192 () Int)
(declare-fun x4133 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x348 () Bool)
(declare-fun x4375 () Int)
(declare-fun x985 () Bool)
(declare-fun x3583 () Int)
(declare-fun x988 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x2256 () Int)
(declare-fun x769 () Int)
(declare-fun x2703 () Int)
(declare-fun x2395 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x3425 () Int)
(declare-fun x237 () Bool)
(declare-fun x2904 () Int)
(declare-fun x427 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x744 () Int)
(declare-fun x501 () x678)
(declare-fun x3745 () Int)
(declare-fun x2828 () Bool)
(declare-fun x22 () Bool)
(declare-fun x2167 () Int)
(declare-fun x2580 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x4329 () Int)
(declare-fun x2793 () Bool)
(declare-fun x1281 () x678)
(declare-fun x2727 () Bool)
(declare-fun x23 () x678)
(declare-fun x1263 () x678)
(declare-fun x4065 () Bool)
(declare-fun x4257 () Bool)
(declare-fun x4309 () x678)
(declare-fun x1517 () x678)
(declare-fun x601 () Int)
(declare-fun x1589 () Int)
(declare-fun x3901 () Bool)
(declare-fun x3412 () Bool)
(declare-fun x524 () Int)
(declare-fun x523 () Bool)
(declare-fun x4476 () x678)
(declare-fun x4851 () x678)
(declare-fun x4818 () Bool)
(declare-fun x4100 () Int)
(declare-fun x106 () Int)
(declare-fun x2211 () Int)
(declare-fun x1346 () Int)
(declare-fun x1182 () Bool)
(declare-fun x2731 () Int)
(declare-fun x85 () Int)
(declare-fun x1832 () Bool)
(declare-fun x4286 () x678)
(declare-fun x4857 () Int)
(declare-fun x1132 () Int)
(declare-fun x3028 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x4837 () Int)
(declare-fun x2021 () Int)
(declare-fun x2317 () Bool)
(declare-fun x3135 () Int)
(declare-fun x4844 () Int)
(declare-fun x3441 () Bool)
(declare-fun x3997 () Int)
(declare-fun x2544 () Bool)
(declare-fun x1739 () Int)
(declare-fun x3245 () Int)
(declare-fun x3537 () Int)
(declare-fun x1033 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x3454 () Int)
(declare-fun x4142 () Bool)
(declare-fun x4654 () Int)
(declare-fun x2119 () Int)
(declare-fun x38 () Int)
(declare-fun x1802 () Bool)
(declare-fun x3934 () Int)
(declare-fun x2286 () x678)
(declare-fun x1243 () Int)
(declare-fun x2725 () Bool)
(declare-fun x4403 () Bool)
(declare-fun x949 () Int)
(declare-fun x3976 () Int)
(declare-fun x2755 () Bool)
(declare-fun x4874 () Bool)
(declare-fun x1183 () Int)
(declare-fun x4379 () Int)
(declare-fun x4109 () Bool)
(declare-fun x4425 () Bool)
(declare-fun x4627 () Int)
(declare-fun x3505 () Bool)
(declare-fun x3757 () Int)
(declare-fun x841 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x459 () Bool)
(declare-fun x2195 () x678)
(declare-fun x3044 () Int)
(declare-fun x4024 () Int)
(declare-fun x2138 () Bool)
(declare-fun x2469 () Int)
(declare-fun x3108 () Int)
(declare-fun x2295 () Int)
(declare-fun x837 () Int)
(declare-fun x164 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x3133 () Int)
(declare-fun x2989 () Bool)
(declare-fun x2975 () Int)
(declare-fun x2465 () Int)
(declare-fun x1898 () Int)
(declare-fun x4394 () Int)
(declare-fun x412 () Bool)
(declare-fun x1958 () Bool)
(declare-fun x1947 () Int)
(declare-fun x3617 () Bool)
(declare-fun x717 () Int)
(declare-fun x2511 () Bool)
(declare-fun x4315 () Int)
(declare-fun x3419 () Bool)
(declare-fun x2474 () x678)
(declare-fun x3329 () Int)
(declare-fun x2584 () Bool)
(declare-fun x285 () Int)
(declare-fun x307 () Bool)
(declare-fun x206 () x678)
(declare-fun x272 () Int)
(declare-fun x3431 () Int)
(declare-fun x3815 () Int)
(declare-fun x3358 () Bool)
(declare-fun x2281 () Int)
(declare-fun x4768 () Int)
(declare-fun x751 () Int)
(declare-fun x1938 () Bool)
(declare-fun x67 () Bool)
(declare-fun x975 () Bool)
(declare-fun x4861 () Int)
(declare-fun x1954 () Bool)
(declare-fun x1952 () Int)
(declare-fun x101 () Bool)
(declare-fun x3320 () Int)
(declare-fun x219 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x4721 () Bool)
(declare-fun x4693 () Int)
(declare-fun x3200 () Int)
(declare-fun x651 () Bool)
(declare-fun x4436 () Bool)
(declare-fun x2769 () Int)
(declare-fun x2790 () Bool)
(declare-fun x4764 () Int)
(declare-fun x2986 () Int)
(declare-fun x4291 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x2223 () Bool)
(declare-fun x2501 () Bool)
(declare-fun x995 () Bool)
(declare-fun x3202 () Bool)
(declare-fun x1851 () Int)
(declare-fun x195 () Bool)
(declare-fun x2430 () Bool)
(declare-fun x4576 () Bool)
(declare-fun x966 () Int)
(declare-fun x2497 () Int)
(declare-fun x1865 () x678)
(declare-fun x4786 () x678)
(declare-fun x4711 () Int)
(declare-fun x667 () Int)
(declare-fun x309 () Bool)
(declare-fun x3306 () Int)
(declare-fun x4306 () x678)
(declare-fun x3554 () Bool)
(declare-fun x4221 () Int)
(declare-fun x2726 () Int)
(declare-fun x2641 () Bool)
(declare-fun x2383 () x678)
(declare-fun x1760 () Int)
(declare-fun x2689 () x678)
(declare-fun x4622 () Bool)
(declare-fun x4270 () Bool)
(declare-fun x1660 () Int)
(declare-fun x2550 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x3435 () Bool)
(declare-fun x3747 () Int)
(declare-fun x454 () Bool)
(declare-fun x198 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x284 () Bool)
(declare-fun x2604 () Int)
(declare-fun x4780 () Int)
(declare-fun x1345 () Int)
(declare-fun x3081 () Bool)
(declare-fun x1789 () Int)
(declare-fun x834 () Bool)
(declare-fun x3464 () Int)
(declare-fun x1102 () Int)
(declare-fun x3296 () Int)
(declare-fun x616 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x3266 () Bool)
(declare-fun x3489 () Bool)
(declare-fun x863 () Bool)
(declare-fun x4253 () Int)
(declare-fun x2929 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x4311 () Bool)
(declare-fun x3328 () Bool)
(declare-fun x3718 () Bool)
(declare-fun x213 () Int)
(declare-fun x1603 () Bool)
(declare-fun x4163 () Int)
(declare-fun x316 () Bool)
(declare-fun x3065 () Bool)
(declare-fun x3300 () Bool)
(declare-fun x3851 () Int)
(declare-fun x3013 () x678)
(declare-fun x586 () x678)
(declare-fun x2534 () Bool)
(declare-fun x953 () Int)
(declare-fun x4071 () Int)
(declare-fun x2974 () x678)
(declare-fun x3130 () Bool)
(declare-fun x88 () x678)
(declare-fun x1016 () Bool)
(declare-fun x169 () x678)
(declare-fun x3833 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x4281 () Bool)
(declare-fun x776 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x2054 () Int)
(declare-fun x889 () x678)
(declare-fun x637 () Int)
(declare-fun x1670 () x678)
(declare-fun x3933 () Bool)
(declare-fun x3339 () Bool)
(declare-fun x3160 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x2569 () Int)
(declare-fun x1695 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x3561 () Int)
(declare-fun x1117 () Int)
(declare-fun x470 () Bool)
(declare-fun x3422 () Bool)
(declare-fun x3870 () Bool)
(declare-fun x626 () Bool)
(declare-fun x860 () Int)
(declare-fun x2979 () Bool)
(declare-fun x1165 () Int)
(declare-fun x718 () Int)
(declare-fun x3784 () x678)
(declare-fun x1013 () Bool)
(declare-fun x3992 () Int)
(declare-fun x4384 () Int)
(declare-fun x4615 () Bool)
(declare-fun x697 () Bool)
(declare-fun x4829 () Int)
(declare-fun x3304 () Int)
(declare-fun x2977 () Bool)
(declare-fun x2301 () Int)
(declare-fun x4019 () Int)
(declare-fun x2008 () Bool)
(declare-fun x3363 () Bool)
(declare-fun x229 () x678)
(declare-fun x314 () Bool)
(declare-fun x4216 () Int)
(declare-fun x2050 () x678)
(declare-fun x2062 () Bool)
(declare-fun x568 () Int)
(declare-fun x1541 () Bool)
(declare-fun x3518 () Int)
(declare-fun x288 () Int)
(declare-fun x3392 () Int)
(declare-fun x4470 () Int)
(declare-fun x322 (Int) Int)
(declare-fun x710 () Int)
(declare-fun x1158 () x678)
(declare-fun x2943 () Bool)
(declare-fun x917 () Int)
(declare-fun x4503 () Int)
(declare-fun x3468 () Int)
(declare-fun x2033 () x678)
(declare-fun x752 () Int)
(declare-fun x3900 () Bool)
(declare-fun x191 () x678)
(declare-fun x996 () Int)
(declare-fun x2576 () Int)
(declare-fun x456 () Int)
(declare-fun x4900 () x678)
(declare-fun x4312 () Bool)
(declare-fun x4529 () Bool)
(declare-fun x1078 () Int)
(declare-fun x4553 () Int)
(declare-fun x3076 () Int)
(declare-fun x861 () Int)
(declare-fun x3975 () Int)
(declare-fun x3138 () Int)
(declare-fun x2461 () Int)
(declare-fun x716 () Int)
(declare-fun x1101 () Int)
(declare-fun x3137 () Int)
(declare-fun x1986 () Bool)
(declare-fun x4803 () Bool)
(declare-fun x2954 () Bool)
(declare-fun x4354 () Int)
(declare-fun x2614 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x2825 () x678)
(declare-fun x3434 () Bool)
(declare-fun x4179 () Bool)
(declare-fun x166 () x678)
(declare-fun x31 () Bool)
(declare-fun x787 () Bool)
(declare-fun x3758 () Bool)
(declare-fun x3848 () Bool)
(declare-fun x2477 () Int)
(declare-fun x3642 () Bool)
(declare-fun x4896 () x678)
(declare-fun x338 () Bool)
(declare-fun x174 () Bool)
(declare-fun x3510 () Int)
(declare-fun x1659 () x678)
(declare-fun x1664 () Bool)
(declare-fun x2698 () Bool)
(declare-fun x4573 () Bool)
(declare-fun x3779 () Int)
(declare-fun x911 () Bool)
(declare-fun x1004 () Int)
(declare-fun x3620 () Bool)
(declare-fun x3077 () Int)
(declare-fun x4165 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x4234 () Int)
(declare-fun x845 () Bool)
(declare-fun x582 () Bool)
(declare-fun x3942 () Int)
(declare-fun x2728 () Int)
(declare-fun x3491 () x678)
(declare-fun x762 () Int)
(declare-fun x2160 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x2489 () Int)
(declare-fun x2855 () Bool)
(declare-fun x849 () Bool)
(declare-fun x3241 () x678)
(declare-fun x460 () Int)
(declare-fun x1678 () x678)
(declare-fun x278 () Int)
(declare-fun x2329 () Bool)
(declare-fun x896 () Int)
(declare-fun x2915 () Int)
(declare-fun x603 () Bool)
(declare-fun x4730 () Int)
(declare-fun x3195 () Int)
(declare-fun x4131 () Int)
(declare-fun x2115 () Int)
(declare-fun x2275 () Bool)
(declare-fun x2242 (x678) Int)
(declare-fun x604 () Int)
(declare-fun x1482 () x678)
(declare-fun x510 () Int)
(declare-fun x145 () Bool)
(declare-fun x3413 () x678)
(declare-fun x1518 () Int)
(declare-fun x3376 () Bool)
(declare-fun x4277 (Int) Int)
(declare-fun x3890 () x678)
(declare-fun x3052 () Bool)
(declare-fun x2192 () Int)
(declare-fun x2903 () Int)
(declare-fun x2498 () Int)
(declare-fun x2941 () x678)
(declare-fun x3006 () Bool)
(declare-fun x497 () Int)
(declare-fun x2702 () Int)
(declare-fun x4488 () Int)
(declare-fun x1067 () Bool)
(declare-fun x4575 () x678)
(declare-fun x3316 () Bool)
(declare-fun x4530 () Int)
(declare-fun x2539 () x678)
(declare-fun x128 (x678) Int)
(declare-fun x2824 () x678)
(declare-fun x252 (x678) Int)
(declare-fun x3707 () Int)
(declare-fun x2525 () Bool)
(declare-fun x4135 () Bool)
(declare-fun x1693 () Int)
(declare-fun x1533 () Int)
(declare-fun x43 () Bool)
(declare-fun x317 () Int)
(declare-fun x4496 () Bool)
(declare-fun x2613 () Bool)
(declare-fun x3542 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x3627 () Bool)
(declare-fun x3043 () x678)
(declare-fun x4666 () x678)
(declare-fun x2414 () Bool)
(declare-fun x4504 () Int)
(declare-fun x407 () Int)
(declare-fun x2471 () Int)
(declare-fun x4266 () Int)
(declare-fun x3883 () Int)
(declare-fun x1835 () Int)
(declare-fun x2364 () x678)
(declare-fun x71 () Int)
(declare-fun x4835 () Bool)
(declare-fun x624 () Int)
(declare-fun x1957 () Int)
(declare-fun x1402 () Bool)
(declare-fun x137 () Int)
(declare-fun x3852 () Int)
(declare-fun x2823 () Bool)
(declare-fun x3538 () Bool)
(declare-fun x593 () Bool)
(declare-fun x14 () Bool)
(declare-fun x4240 () Int)
(declare-fun x3578 () Int)
(declare-fun x527 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x564 () Bool)
(declare-fun x3070 () Bool)
(declare-fun x3397 () Int)
(declare-fun x4120 () Int)
(declare-fun x3366 () Bool)
(declare-fun x3645 () Bool)
(declare-fun x259 () Int)
(declare-fun x3616 () Bool)
(declare-fun x236 () Int)
(declare-fun x4812 (Int) Int)
(declare-fun x484 () Int)
(declare-fun x1380 () Bool)
(declare-fun x2379 () x678)
(declare-fun x3303 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x4804 () Int)
(declare-fun x4061 () Int)
(declare-fun x492 () Bool)
(declare-fun x2586 () Int)
(declare-fun x3606 () Int)
(declare-fun x1743 () Int)
(declare-fun x1751 () Bool)
(declare-fun x4569 () Int)
(declare-fun x297 () Bool)
(declare-fun x142 () Int)
(declare-fun x778 () Int)
(declare-fun x4735 () Bool)
(declare-fun x3799 () Int)
(declare-fun x3959 () Bool)
(declare-fun x3132 () Bool)
(declare-fun x2925 () Bool)
(declare-fun x1292 () Int)
(declare-fun x597 () Bool)
(declare-fun x4655 () Bool)
(declare-fun x3418 () Bool)
(declare-fun x2831 () Bool)
(declare-fun x449 () Int)
(declare-fun x4220 () Bool)
(declare-fun x2376 () Int)
(declare-fun x3281 () Bool)
(declare-fun x646 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x2231 () x678)
(declare-fun x377 () Int)
(declare-fun x1530 () Int)
(declare-fun x4160 () Bool)
(declare-fun x2132 () Int)
(declare-fun x4338 () Bool)
(declare-fun x3184 () Bool)
(declare-fun x4127 () Bool)
(declare-fun x4218 () Bool)
(declare-fun x4784 () Bool)
(declare-fun x1397 () Int)
(declare-fun x2805 () Bool)
(declare-fun x4828 () x678)
(declare-fun x2913 () Int)
(declare-fun x1927 () Int)
(declare-fun x3071 () Int)
(declare-fun x1461 () Int)
(declare-fun x1919 () Int)
(declare-fun x292 () Bool)
(declare-fun x757 () Bool)
(declare-fun x3714 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x1025 () Int)
(declare-fun x4458 () Int)
(declare-fun x4832 () Int)
(declare-fun x4751 () Bool)
(declare-fun x3390 () Int)
(declare-fun x1983 () x678)
(declare-fun x781 () Int)
(declare-fun x2077 () Int)
(declare-fun x3020 () Int)
(declare-fun x1522 () Bool)
(declare-fun x4685 () Int)
(declare-fun x2245 () Int)
(declare-fun x3193 () Int)
(declare-fun x1056 () Int)
(declare-fun x4534 () Bool)
(declare-fun x4350 () Bool)
(declare-fun x1377 () x678)
(declare-fun x4011 () Bool)
(declare-fun x2257 () Int)
(declare-fun x1365 () Int)
(declare-fun x4006 () Bool)
(declare-fun x4465 () x678)
(declare-fun x1593 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x4026 () Int)
(declare-fun x1691 () Bool)
(declare-fun x4124 () Int)
(declare-fun x445 () Bool)
(declare-fun x4643 () Bool)
(declare-fun x4226 () Bool)
(declare-fun x2126 () Int)
(declare-fun x3236 () Int)
(declare-fun x786 () Bool)
(declare-fun x1901 () Int)
(declare-fun x3596 () Bool)
(declare-fun x3348 () Int)
(declare-fun x3101 () Bool)
(declare-fun x1828 () Int)
(declare-fun x3057 () Int)
(declare-fun x269 () Int)
(declare-fun x1562 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x3219 () Int)
(declare-fun x3386 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x3384 () Bool)
(declare-fun x435 () Bool)
(declare-fun x4248 () Bool)
(declare-fun x2861 () Bool)
(declare-fun x3391 () Bool)
(declare-fun x2409 () Int)
(declare-fun x1066 () Bool)
(declare-fun x1575 () Int)
(declare-fun x3912 () Int)
(declare-fun x1208 () Bool)
(declare-fun x3173 () Int)
(declare-fun x4776 () Int)
(declare-fun x4483 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x328 () Bool)
(declare-fun x4345 () Int)
(declare-fun x748 () Int)
(declare-fun x3483 () Int)
(declare-fun x1867 () Bool)
(declare-fun x2878 () Bool)
(declare-fun x3626 () Bool)
(declare-fun x2848 () Bool)
(declare-fun x1198 () x678)
(declare-fun x2037 () Bool)
(declare-fun x2733 () Int)
(declare-fun x644 () Bool)
(declare-fun x1074 () Int)
(declare-fun x1913 (x678) Int)
(declare-fun x4022 () Int)
(declare-fun x526 () Int)
(declare-fun x797 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x1902 () Bool)
(declare-fun x1590 () Int)
(declare-fun x216 () Bool)
(declare-fun x453 () x678)
(declare-fun x3940 () Bool)
(declare-fun x3924 () Bool)
(declare-fun x944 () Bool)
(declare-fun x3113 () Int)
(declare-fun x3647 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x3854 () Bool)
(declare-fun x3801 () Int)
(declare-fun x2279 () x678)
(declare-fun x1248 () Bool)
(declare-fun x2747 () Bool)
(declare-fun x3196 () Bool)
(declare-fun x421 () Int)
(declare-fun x1191 () Bool)
(declare-fun x1145 () Int)
(declare-fun x221 () Bool)
(declare-fun x1825 () Int)
(declare-fun x2218 () Int)
(declare-fun x214 () Bool)
(declare-fun x2631 () Bool)
(declare-fun x3991 () Int)
(declare-fun x2045 () Int)
(declare-fun x4840 () Int)
(declare-fun x3443 () Bool)
(declare-fun x3951 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x2811 () Bool)
(declare-fun x4661 () Bool)
(declare-fun x3711 () Bool)
(declare-fun x300 () x678)
(declare-fun x1578 () Int)
(declare-fun x505 () Int)
(declare-fun x2213 () Bool)
(declare-fun x4119 () x678)
(declare-fun x380 () Int)
(declare-fun x2375 () x678)
(declare-fun x2773 () Int)
(declare-fun x1231 () Bool)
(declare-fun x2200 () Bool)
(declare-fun x385 () Bool)
(declare-fun x4849 () Bool)
(declare-fun x3289 () x678)
(declare-fun x2627 () Bool)
(declare-fun x389 () Int)
(declare-fun x1862 () Int)
(declare-fun x3221 () Int)
(declare-fun x168 () Int)
(declare-fun x3668 () Int)
(declare-fun x4560 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x4729 () Int)
(declare-fun x3582 () Bool)
(declare-fun x1194 () Int)
(declare-fun x4237 () Bool)
(declare-fun x3402 () Int)
(declare-fun x4093 () Bool)
(declare-fun x720 () Int)
(declare-fun x1448 () Bool)
(declare-fun x4588 () Bool)
(declare-fun x130 () Bool)
(declare-fun x4532 () Bool)
(declare-fun x4199 () Int)
(declare-fun x4506 () Bool)
(declare-fun x444 () Bool)
(declare-fun x78 () Bool)
(declare-fun x1079 () Int)
(declare-fun x3210 () Int)
(declare-fun x4170 () Int)
(declare-fun x105 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x3761 () Bool)
(declare-fun x3060 () Int)
(declare-fun x1341 () Int)
(declare-fun x4468 () Int)
(declare-fun x2681 () Int)
(declare-fun x303 () Bool)
(declare-fun x378 () Bool)
(declare-fun x423 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x2815 () Bool)
(declare-fun x3174 () Int)
(declare-fun x1502 () Int)
(declare-fun x327 () Bool)
(declare-fun x3255 () Int)
(declare-fun x2260 () x678)
(declare-fun x2834 () Bool)
(declare-fun x1718 () Int)
(declare-fun x3351 () Int)
(declare-fun x2473 () Bool)
(declare-fun x2623 () Int)
(declare-fun x742 () Int)
(declare-fun x705 () Int)
(declare-fun x3011 () x678)
(declare-fun x1765 () Bool)
(declare-fun x467 () Int)
(declare-fun x2103 () Int)
(declare-fun x3898 () Int)
(declare-fun x5 () x678)
(declare-fun x3220 () Bool)
(declare-fun x4714 () Int)
(declare-fun x4285 () Int)
(declare-fun x1316 () Bool)
(declare-fun x3198 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x4031 () Int)
(declare-fun x3568 () Int)
(declare-fun x2001 () Int)
(declare-fun x3317 () Bool)
(declare-fun x3139 () Bool)
(declare-fun x1112 () Int)
(declare-fun x3421 () Bool)
(declare-fun x3700 () Bool)
(declare-fun x4399 () Bool)
(declare-fun x2150 () Int)
(declare-fun x111 () x678)
(declare-fun x1699 () Bool)
(declare-fun x833 () x678)
(declare-fun x4064 () Bool)
(declare-fun x3874 () Int)
(declare-fun x2545 () Bool)
(declare-fun x33 () Int)
(declare-fun x1462 () Int)
(declare-fun x3333 () Bool)
(declare-fun x4007 () Bool)
(declare-fun x1202 () x678)
(declare-fun x4164 () Bool)
(declare-fun x2524 () Bool)
(declare-fun x4413 () Int)
(declare-fun x1207 () Int)
(declare-fun x516 () Int)
(declare-fun x3635 () Bool)
(declare-fun x767 () Int)
(declare-fun x2000 () Int)
(declare-fun x238 () Bool)
(declare-fun x4867 () Bool)
(declare-fun x4103 () Int)
(declare-fun x891 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x139 () Int)
(declare-fun x2069 () Int)
(declare-fun x3664 () Bool)
(declare-fun x1829 () x678)
(declare-fun x3114 () Bool)
(declare-fun x3572 () Bool)
(declare-fun x1023 () Int)
(declare-fun x3977 () Bool)
(declare-fun x2307 () Bool)
(declare-fun x3605 () Int)
(declare-fun x3362 () Bool)
(declare-fun x3394 () Bool)
(declare-fun x650 () Int)
(declare-fun x381 () Int)
(declare-fun x2180 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x3009 () Int)
(declare-fun x2268 () Bool)
(declare-fun x1671 () Bool)
(declare-fun x2764 () Int)
(declare-fun x4314 () Bool)
(declare-fun x4018 () Bool)
(declare-fun x1224 () Int)
(declare-fun x1019 () Bool)
(declare-fun x39 () Bool)
(declare-fun x2752 () Int)
(declare-fun x2512 () Int)
(declare-fun x663 () x678)
(declare-fun x1455 () Bool)
(declare-fun x3528 () Int)
(declare-fun x3678 () Int)
(declare-fun x2734 () Int)
(declare-fun x4438 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x2741 () Bool)
(declare-fun x777 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1336 () Bool)
(declare-fun x3456 () Bool)
(declare-fun x1768 () Bool)
(declare-fun x218 () x678)
(declare-fun x4190 () Int)
(declare-fun x2671 () Bool)
(declare-fun x91 () Bool)
(declare-fun x4545 () Bool)
(declare-fun x4177 () Int)
(declare-fun x2401 () x678)
(declare-fun x2781 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x4167 () x678)
(declare-fun x4363 () Int)
(declare-fun x4191 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x3305 () Int)
(declare-fun x2072 () x678)
(declare-fun x2612 () Int)
(declare-fun x4810 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x4171 () Int)
(declare-fun x1486 () Bool)
(declare-fun x3273 () Int)
(declare-fun x2889 () Int)
(declare-fun x1846 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x3340 () Bool)
(declare-fun x4664 () Int)
(declare-fun x2980 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x631 () Bool)
(declare-fun x1471 () Int)
(declare-fun x2729 () Bool)
(declare-fun x932 () Int)
(declare-fun x1785 () Bool)
(declare-fun x675 () Int)
(declare-fun x755 () Int)
(declare-fun x1449 () Int)
(declare-fun x1477 (Int) Int)
(declare-fun x908 () Bool)
(declare-fun x1748 () Bool)
(declare-fun x359 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x3490 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x4516 () Bool)
(declare-fun x994 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x983 () Int)
(declare-fun x4590 () Int)
(declare-fun x1514 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x2838 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1333 () Int)
(declare-fun x4579 () Int)
(declare-fun x2396 () Int)
(declare-fun x4070 () Int)
(declare-fun x1441 () Bool)
(declare-fun x620 () Int)
(declare-fun x4334 () x678)
(declare-fun x13 () Int)
(declare-fun x708 () Bool)
(declare-fun x3805 () Bool)
(declare-fun x3896 () Int)
(declare-fun x4737 () Int)
(declare-fun x301 () Int)
(declare-fun x3107 (x678) Int)
(declare-fun x750 () Bool)
(declare-fun x591 () Int)
(declare-fun x4571 () x678)
(declare-fun x3064 () Int)
(declare-fun x2532 () Int)
(declare-fun x4209 () Int)
(declare-fun x4543 () Int)
(declare-fun x1216 () Int)
(declare-fun x1893 () Bool)
(declare-fun x2472 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1490 () Bool)
(declare-fun x2036 () Int)
(declare-fun x706 () Int)
(declare-fun x2362 () Bool)
(declare-fun x1930 () Int)
(declare-fun x367 () Bool)
(declare-fun x112 () Int)
(declare-fun x2098 () Int)
(declare-fun x2921 () Bool)
(declare-fun x2095 () x678)
(declare-fun x3512 () Int)
(declare-fun x398 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x1653 () Int)
(declare-fun x4049 () Bool)
(declare-fun x2633 () Int)
(declare-fun x1847 () x678)
(declare-fun x1091 () x678)
(declare-fun x1821 () x678)
(declare-fun x4699 () x678)
(declare-fun x4076 () Int)
(declare-fun x2700 () Int)
(declare-fun x2443 () Bool)
(declare-fun x2155 () Int)
(declare-fun x360 () Int)
(declare-fun x907 () x678)
(declare-fun x3863 () Bool)
(declare-fun x2836 () Int)
(declare-fun x2028 () Int)
(declare-fun x758 () Bool)
(declare-fun x1599 () Int)
(declare-fun x664 () Int)
(declare-fun x4169 () Bool)
(declare-fun x3106 () Int)
(declare-fun x4499 () Int)
(declare-fun x2112 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x4700 () Int)
(declare-fun x4719 () Int)
(declare-fun x3750 (x678) Int)
(declare-fun x576 () Int)
(declare-fun x4367 () Bool)
(declare-fun x51 () Int)
(declare-fun x4029 () Int)
(declare-fun x4618 () x678)
(declare-fun x3856 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x590 () Bool)
(declare-fun x3954 () Bool)
(declare-fun x2433 () x678)
(declare-fun x3350 () Int)
(declare-fun x4846 () Int)
(declare-fun x3919 () Int)
(declare-fun x3960 () Int)
(declare-fun x3813 () Bool)
(declare-fun x333 () Int)
(declare-fun x900 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x793 () Bool)
(declare-fun x4043 () Bool)
(declare-fun x2509 () Int)
(declare-fun x1239 () Bool)
(declare-fun x808 () Bool)
(declare-fun x336 () Bool)
(declare-fun x970 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x4594 (x678) Int)
(declare-fun x2145 () Bool)
(declare-fun x3562 () Int)
(declare-fun x743 () Int)
(declare-fun x1032 (Int) Int)
(declare-fun x396 () Bool)
(declare-fun x4623 (x678) Int)
(declare-fun x2341 () Int)
(declare-fun x3337 () Int)
(declare-fun x666 () Bool)
(declare-fun x2865 () Bool)
(declare-fun x737 () Int)
(declare-fun x4766 () Int)
(declare-fun x311 () Int)
(declare-fun x2565 () Int)
(declare-fun x606 () x678)
(declare-fun x3364 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x1849 () Bool)
(declare-fun x347 () Bool)
(declare-fun x3378 () Bool)
(declare-fun x2646 () Bool)
(declare-fun x4307 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x2868 () Int)
(declare-fun x4287 (Int) Int)
(declare-fun x1225 () Bool)
(declare-fun x4491 () Int)
(declare-fun x1694 () x678)
(declare-fun x4096 () Bool)
(declare-fun x3120 () Int)
(declare-fun x1940 () Bool)
(declare-fun x4182 () Int)
(declare-fun x2059 () Int)
(declare-fun x2262 () Int)
(declare-fun x402 () Int)
(declare-fun x1524 () Int)
(declare-fun x3244 () Bool)
(declare-fun x3673 () Bool)
(declare-fun x4663 () Int)
(declare-fun x340 () Int)
(declare-fun x1087 () x678)
(declare-fun x4052 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x4395 () Bool)
(declare-fun x228 () Int)
(declare-fun x1084 () Bool)
(declare-fun x4625 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x4189 () Bool)
(declare-fun x2191 () Int)
(declare-fun x1450 () Bool)
(declare-fun x4580 () Bool)
(declare-fun x4250 () Bool)
(declare-fun x3511 () Bool)
(declare-fun x950 () Int)
(declare-fun x141 () Bool)
(declare-fun x2441 () Int)
(declare-fun x1973 () Int)
(declare-fun x1817 () Int)
(declare-fun x942 () Bool)
(declare-fun x1065 () Int)
(declare-fun x2421 () x678)
(declare-fun x2818 () x678)
(declare-fun x2591 () Bool)
(declare-fun x1157 () Int)
(declare-fun x1283 (x678) Int)
(declare-fun x3345 () Int)
(declare-fun x4231 (x678) Int)
(declare-fun x323 () Int)
(declare-fun x3466 () Int)
(declare-fun x1638 () Int)
(declare-fun x567 (Int) Int)
(declare-fun x1308 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x2916 () Int)
(declare-fun x4003 () Int)
(declare-fun x65 () Bool)
(declare-fun x3237 () Int)
(declare-fun x1624 () Bool)
(declare-fun x1637 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x3311 () x678)
(declare-fun x790 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x4474 () Int)
(declare-fun x3338 () Bool)
(declare-fun x1674 () Int)
(declare-fun x1445 () Bool)
(declare-fun x4410 () Bool)
(declare-fun x4489 () Int)
(declare-fun x3955 () Int)
(declare-fun x525 () Int)
(declare-fun x4647 () x678)
(declare-fun x3548 () Int)
(declare-fun x3497 () Int)
(declare-fun x103 () Int)
(declare-fun x2740 () Bool)
(declare-fun x746 () Int)
(declare-fun x2282 () x678)
(declare-fun x4555 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x828 () x678)
(declare-fun x3598 () Bool)
(declare-fun x648 () Bool)
(declare-fun x4888 () x678)
(declare-fun x25 () Bool)
(declare-fun x403 (Int) Int)
(declare-fun x2870 () Bool)
(declare-fun x3701 () Bool)
(declare-fun x3453 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x448 () Bool)
(declare-fun x2298 () Int)
(declare-fun x4104 () Bool)
(declare-fun x3763 () Int)
(declare-fun x3099 () Int)
(declare-fun x3804 () Int)
(declare-fun x3148 () Int)
(declare-fun x2325 () Bool)
(declare-fun x4747 () Bool)
(declare-fun x283 () Int)
(declare-fun x58 () Bool)
(declare-fun x2701 () Int)
(declare-fun x1082 () Bool)
(declare-fun x795 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x2789 () Bool)
(declare-fun x155 () Bool)
(declare-fun x4512 () Bool)
(declare-fun x3611 () Bool)
(declare-fun x2118 () Int)
(declare-fun x2368 () Bool)
(declare-fun x1669 () Bool)
(declare-fun x1121 () x678)
(declare-fun x2170 () Bool)
(declare-fun x2549 () Bool)
(declare-fun x509 () Bool)
(declare-fun x4652 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1075 () Int)
(declare-fun x2761 () Bool)
(declare-fun x1348 (Int Int) Int)
(declare-fun x3312 () Int)
(declare-fun x2602 () Int)
(declare-fun x575 () Int)
(declare-fun x4616 () Bool)
(declare-fun x734 () x678)
(declare-fun x3325 () Bool)
(declare-fun x4779 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x4665 () Bool)
(declare-fun x3544 () Bool)
(declare-fun x3983 () Bool)
(declare-fun x951 () Int)
(declare-fun x3556 () Bool)
(declare-fun x3753 () Int)
(declare-fun x2214 () Int)
(declare-fun x176 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x3935 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x897 () Int)
(declare-fun x1981 () Bool)
(declare-fun x1080 () Int)
(declare-fun x2500 () Int)
(declare-fun x3235 () Bool)
(declare-fun x2464 () Bool)
(declare-fun x2766 () Bool)
(declare-fun x2669 () x678)
(declare-fun x4275 () Bool)
(declare-fun x34 (x678) Int)
(declare-fun x2196 () Int)
(declare-fun x3592 () Bool)
(declare-fun x2090 () x678)
(declare-fun x93 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x3717 () Int)
(declare-fun x1317 () x678)
(declare-fun x4261 (x678) Int)
(declare-fun x2933 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x4112 () Bool)
(declare-fun x1933 () Int)
(declare-fun x2992 () Bool)
(declare-fun x1230 () Int)
(declare-fun x2259 () Bool)
(declare-fun x3808 () x678)
(declare-fun x4475 () Int)
(declare-fun x1500 () Int)
(declare-fun x1313 () Bool)
(declare-fun x3233 () Bool)
(declare-fun x825 () Bool)
(declare-fun x1136 () Int)
(declare-fun x240 () x678)
(declare-fun x2316 () Bool)
(declare-fun x2299 () Int)
(declare-fun x736 () Int)
(declare-fun x2353 () Int)
(declare-fun x1605 () Int)
(declare-fun x2320 () Int)
(declare-fun x1306 () Bool)
(declare-fun x844 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x577 () Int)
(declare-fun x796 () Bool)
(declare-fun x1960 () Int)
(declare-fun x1147 () Bool)
(declare-fun x189 () Int)
(declare-fun x959 () x678)
(declare-fun x4108 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x1811 () x678)
(declare-fun x1360 () Int)
(declare-fun x1566 () Bool)
(declare-fun x3869 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x2684 () Bool)
(declare-fun x4863 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x149 () Int)
(declare-fun x1944 () Bool)
(declare-fun x2199 () Int)
(declare-fun x1535 () Int)
(declare-fun x2710 () Bool)
(declare-fun x1369 () Int)
(declare-fun x1303 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x2140 () Bool)
(declare-fun x2294 () Bool)
(declare-fun x1305 () Int)
(declare-fun x304 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x3527 () Int)
(declare-fun x2208 () Bool)
(declare-fun x54 () Int)
(declare-fun x1070 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x4549 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x2574 () Bool)
(declare-fun x2496 () Int)
(declare-fun x171 () Int)
(declare-fun x1187 () Int)
(declare-fun x2891 () Int)
(declare-fun x2169 () x678)
(declare-fun x1735 () x678)
(declare-fun x2505 () Int)
(declare-fun x4842 () Bool)
(declare-fun x408 () x678)
(declare-fun x2080 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x2821 () Int)
(declare-fun x1937 () Int)
(declare-fun x1536 () x678)
(declare-fun x2483 () Bool)
(declare-fun x3068 () Bool)
(declare-fun x714 () Bool)
(declare-fun x2826 () Int)
(declare-fun x298 () Int)
(declare-fun x3680 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1 () Int)
(declare-fun x4113 () Int)
(declare-fun x3610 () Int)
(declare-fun x4168 () Bool)
(declare-fun x1322 () x678)
(declare-fun x3930 () Int)
(declare-fun x1266 () Int)
(declare-fun x4792 () Bool)
(declare-fun x1167 () Int)
(declare-fun x1550 () Bool)
(declare-fun x589 () Bool)
(declare-fun x681 () Int)
(declare-fun x4081 () Int)
(declare-fun x4027 () Bool)
(declare-fun x3695 () Int)
(declare-fun x411 () Int)
(declare-fun x2810 () Int)
(declare-fun x494 () Bool)
(declare-fun x4515 () Bool)
(declare-fun x1314 () x678)
(declare-fun x1337 () Bool)
(declare-fun x3911 () Int)
(declare-fun x1758 () Bool)
(declare-fun x2590 () Bool)
(declare-fun x2706 () Int)
(declare-fun x1412 () x678)
(declare-fun x1640 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x3524 () Int)
(declare-fun x2146 () Int)
(declare-fun x587 () Int)
(declare-fun x3686 () Int)
(declare-fun x1729 () Int)
(declare-fun x4075 () Bool)
(declare-fun x4658 () Int)
(declare-fun x2863 () Bool)
(declare-fun x976 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x286 () Int)
(declare-fun x1309 () Int)
(declare-fun x918 () Int)
(declare-fun x4793 () Bool)
(declare-fun x74 () Bool)
(declare-fun x4824 (x678) Int)
(declare-fun x57 () Bool)
(declare-fun x3041 () Int)
(declare-fun x2692 () Bool)
(declare-fun x2053 () Int)
(declare-fun x1896 () Bool)
(declare-fun x1655 () Int)
(declare-fun x2804 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x3509 () Int)
(declare-fun x2377 () Bool)
(declare-fun x3877 () Bool)
(declare-fun x190 () Bool)
(declare-fun x3889 () Int)
(declare-fun x888 () Bool)
(declare-fun x2434 () Bool)
(declare-fun x2276 () Bool)
(declare-fun x3224 () Bool)
(declare-fun x4429 () Bool)
(declare-fun x3661 () x678)
(declare-fun x584 () x678)
(declare-fun x645 () Bool)
(declare-fun x1649 () x678)
(declare-fun x4674 () Bool)
(declare-fun x3894 () Bool)
(declare-fun x2030 () Int)
(declare-fun x3367 (x678) Int)
(declare-fun x1665 () Int)
(declare-fun x3482 () Bool)
(declare-fun x215 () x678)
(declare-fun x2292 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x3628 () Bool)
(declare-fun x3882 () Bool)
(declare-fun x2422 () Bool)
(declare-fun x3973 () Bool)
(declare-fun x2274 () x678)
(declare-fun x49 () x678)
(declare-fun x3030 () Bool)
(declare-fun x2719 () Int)
(declare-fun x3902 () Int)
(declare-fun x581 () Int)
(declare-fun x3299 () Bool)
(declare-fun x450 (x678) Int)
(declare-fun x814 () Bool)
(declare-fun x3074 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x3594 () Int)
(declare-fun x3888 () Int)
(declare-fun x1516 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x1180 () Int)
(declare-fun x529 () Int)
(declare-fun x1915 () Bool)
(declare-fun x2110 () Int)
(declare-fun x3872 () Int)
(declare-fun x3684 () Bool)
(declare-fun x3569 () Bool)
(declare-fun x429 () Int)
(declare-fun x4361 () Bool)
(declare-fun x4352 (x678) Int)
(declare-fun x4258 () Int)
(declare-fun x2163 () Bool)
(declare-fun x3878 () Int)
(declare-fun x432 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x780 () Int)
(declare-fun x4805 () Int)
(declare-fun x1613 () Bool)
(declare-fun x2864 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x4417 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x4807 () Bool)
(declare-fun x2365 () Int)
(declare-fun x3354 () Bool)
(declare-fun x1643 () Int)
(declare-fun x4283 () Bool)
(declare-fun x2807 () x678)
(declare-fun x4028 () x678)
(declare-fun x832 () Int)
(declare-fun x3622 () Int)
(declare-fun x4868 () Bool)
(declare-fun x239 () Int)
(declare-fun x1197 () Bool)
(declare-fun x3529 () Bool)
(declare-fun x2582 () Int)
(declare-fun x2851 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x4587 (Int) Int)
(declare-fun x569 () Bool)
(declare-fun x3092 () Bool)
(declare-fun x4012 () Int)
(declare-fun x741 () Bool)
(declare-fun x4879 () Int)
(declare-fun x3455 (x678) Int)
(declare-fun x2985 () Int)
(declare-fun x3343 (Int) Int)
(declare-fun x3186 () Int)
(declare-fun x3110 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x1129 () Int)
(declare-fun x1374 () x678)
(declare-fun x3465 () Bool)
(declare-fun x2444 () Int)
(declare-fun x234 () Int)
(declare-fun x1597 () Int)
(declare-fun x2685 () x678)
(declare-fun x1805 () x678)
(declare-fun x2193 () Bool)
(declare-fun x3383 () Int)
(declare-fun x791 () Bool)
(declare-fun x3100 () Int)
(declare-fun x339 () Bool)
(declare-fun x3775 () Int)
(declare-fun x3727 () Bool)
(declare-fun x2885 () x678)
(declare-fun x3259 () Bool)
(declare-fun x3532 () Int)
(declare-fun x3721 () Bool)
(declare-fun x3032 () Int)
(declare-fun x290 () Int)
(declare-fun x3818 () Bool)
(declare-fun x3567 () Bool)
(declare-fun x3451 () Int)
(declare-fun x4873 () Int)
(declare-fun x227 () Bool)
(declare-fun x4883 () Bool)
(declare-fun x905 () Int)
(declare-fun x2696 () Bool)
(declare-fun x2442 () Bool)
(declare-fun x1727 () Int)
(declare-fun x4595 () Bool)
(declare-fun x2786 () Int)
(declare-fun x4405 () Int)
(declare-fun x3580 () Bool)
(declare-fun x3411 () x678)
(declare-fun x1463 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x2554 () Int)
(declare-fun x368 () Int)
(declare-fun x910 () Bool)
(declare-fun x463 () Bool)
(declare-fun x3522 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x4173 () Bool)
(declare-fun x2020 () x678)
(declare-fun x4660 () Bool)
(declare-fun x1928 () Int)
(declare-fun x696 () Int)
(declare-fun x823 () Bool)
(declare-fun x220 () Bool)
(declare-fun x1834 () Int)
(declare-fun x4230 () Bool)
(declare-fun x217 () Bool)
(declare-fun x3866 () Int)
(declare-fun x4598 () Bool)
(declare-fun x2705 () Bool)
(declare-fun x4862 () Int)
(declare-fun x1156 () Bool)
(declare-fun x3218 () Bool)
(declare-fun x3478 () Bool)
(declare-fun x3248 () Int)
(declare-fun x574 () Bool)
(declare-fun x4159 () Int)
(declare-fun x1713 () Int)
(declare-fun x2776 () Bool)
(declare-fun x3705 () Bool)
(declare-fun x2742 () Bool)
(declare-fun x3002 () x678)
(declare-fun x2844 () Int)
(declare-fun x3822 () Int)
(declare-fun x2693 () Int)
(declare-fun x225 () Bool)
(declare-fun x3407 () Bool)
(declare-fun x2016 () Int)
(declare-fun x817 () Bool)
(declare-fun x870 () x678)
(declare-fun x3913 () Int)
(declare-fun x4116 () Int)
(declare-fun x4706 () Bool)
(declare-fun x605 () x678)
(declare-fun x2455 () Int)
(declare-fun x2173 () x678)
(declare-fun x3571 () Int)
(declare-fun x2886 () Int)
(declare-fun x3565 () Int)
(declare-fun x60 () x678)
(declare-fun x4531 () Int)
(declare-fun x4612 (x678) Int)
(declare-fun x2425 () Bool)
(declare-fun x4062 () Int)
(declare-fun x2964 () x678)
(declare-fun x3881 () Bool)
(declare-fun x3720 () Bool)
(declare-fun x2254 () Int)
(declare-fun x372 () x678)
(declare-fun x4002 () Int)
(declare-fun x4646 () Bool)
(declare-fun x3825 () Int)
(declare-fun x462 () Int)
(declare-fun x3095 () x678)
(declare-fun x1793 () Bool)
(declare-fun x3967 () Bool)
(declare-fun x4020 () Int)
(declare-fun x3688 () Int)
(declare-fun x358 () Int)
(declare-fun x3666 () Bool)
(declare-fun x3398 () x678)
(declare-fun x4853 () Bool)
(declare-fun x1479 () x678)
(declare-fun x4010 () Bool)
(declare-fun x1857 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x265 () Int)
(declare-fun x3010 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x628 () Int)
(declare-fun x936 () Bool)
(declare-fun x172 () Int)
(declare-fun x1353 () Bool)
(declare-fun x1946 () Int)
(declare-fun x4878 () Int)
(declare-fun x4577 () Bool)
(declare-fun x2962 () Int)
(declare-fun x4419 () x678)
(declare-fun x3215 () Int)
(declare-fun x2029 () Int)
(declare-fun x3994 () Int)
(declare-fun x4147 () Int)
(declare-fun x544 () x678)
(declare-fun x1409 () Int)
(declare-fun x3459 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x1908 () Int)
(declare-fun x2518 () Bool)
(declare-fun x2117 () Int)
(declare-fun x846 () Bool)
(declare-fun x2906 () Int)
(declare-fun x4511 () Int)
(declare-fun x1298 () Bool)
(declare-fun x3228 () Bool)
(declare-fun x4895 () Bool)
(declare-fun x2803 () Int)
(declare-fun x2431 (x678) Int)
(declare-fun x3984 () Bool)
(declare-fun x3778 () Int)
(declare-fun x1609 () Bool)
(declare-fun x451 () Bool)
(declare-fun x4227 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x2437 () x678)
(declare-fun x4467 () Bool)
(declare-fun x4540 () Bool)
(declare-fun x3253 () x678)
(declare-fun x379 () Int)
(declare-fun x4547 () Bool)
(declare-fun x3853 () Bool)
(declare-fun x563 () x678)
(declare-fun x4145 () x678)
(declare-fun x868 () x678)
(declare-fun x355 () Bool)
(declare-fun x503 () Int)
(declare-fun x519 () Int)
(declare-fun x2158 () Bool)
(declare-fun x3899 () Bool)
(declare-fun x2185 () Int)
(declare-fun x413 () Int)
(declare-fun x4422 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x4691 () Int)
(declare-fun x2352 () x678)
(declare-fun x3597 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x1494 () Int)
(declare-fun x2949 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x1779 () Int)
(declare-fun x565 () Int)
(declare-fun x2737 () Int)
(declare-fun x2460 () Int)
(declare-fun x197 () Int)
(declare-fun x3831 () Bool)
(declare-fun x2983 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x1999 () Int)
(declare-fun x2866 () Int)
(declare-fun x296 () Bool)
(declare-fun x4455 () Int)
(declare-fun x4734 () Bool)
(declare-fun x2148 () x678)
(declare-fun x3650 () x678)
(declare-fun x205 () Bool)
(declare-fun x4631 () Int)
(declare-fun x660 () x678)
(declare-fun x4558 () Int)
(declare-fun x2336 () Int)
(declare-fun x2450 () Bool)
(declare-fun x2147 () Int)
(declare-fun x1778 () Bool)
(declare-fun x1325 () Int)
(declare-fun x3819 () Int)
(declare-fun x1137 () x678)
(declare-fun x2042 () Int)
(declare-fun x1525 () x678)
(declare-fun x855 () Bool)
(declare-fun x2237 () Int)
(declare-fun x4197 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x4439 () Bool)
(declare-fun x1883 () x678)
(declare-fun x3494 () Bool)
(declare-fun x619 () Int)
(declare-fun x1974 () Bool)
(declare-fun x724 () Int)
(declare-fun x1540 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x2911 () Int)
(declare-fun x332 () Bool)
(declare-fun x3771 () Int)
(declare-fun x3780 () Int)
(declare-fun x3971 () Int)
(declare-fun x97 () x678)
(declare-fun x244 () x678)
(declare-fun x86 () x678)
(declare-fun x677 () Int)
(declare-fun x771 () Int)
(declare-fun x3762 () Int)
(declare-fun x812 () Int)
(declare-fun x2114 () Bool)
(declare-fun x2071 () Int)
(declare-fun x839 () Bool)
(declare-fun x4865 () Int)
(declare-fun x3191 () Int)
(declare-fun x4262 () Int)
(declare-fun x485 () Bool)
(declare-fun x2798 () Int)
(declare-fun x1012 () Bool)
(declare-fun x4232 () Int)
(declare-fun x547 () Int)
(declare-fun x426 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x1427 () Int)
(declare-fun x3056 () Bool)
(declare-fun x1444 () Int)
(declare-fun x62 () Int)
(declare-fun x4754 () Bool)
(declare-fun x3298 () x678)
(declare-fun x196 () Int)
(declare-fun x1424 () Int)
(declare-fun x1024 () Int)
(declare-fun x1995 () Int)
(declare-fun x924 () Int)
(declare-fun x1249 () Bool)
(declare-fun x2812 () Bool)
(declare-fun x1487 () x678)
(declare-fun x3636 () Int)
(declare-fun x3677 () Bool)
(declare-fun x3462 () Bool)
(declare-fun x15 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x3600 () Bool)
(declare-fun x1466 () x678)
(declare-fun x1690 (x678) Int)
(declare-fun x3144 () Int)
(declare-fun x3807 () Int)
(declare-fun x204 () Bool)
(declare-fun x722 () Bool)
(declare-fun x4130 () Bool)
(declare-fun x66 () Bool)
(declare-fun x3713 () Int)
(declare-fun x770 () Int)
(declare-fun x4282 () Bool)
(declare-fun x2738 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x1687 () x678)
(declare-fun x3126 () Int)
(declare-fun x2548 () Bool)
(declare-fun x2348 () Bool)
(declare-fun x2328 () Bool)
(declare-fun x4154 () Int)
(declare-fun x2735 () Int)
(declare-fun x202 () Bool)
(declare-fun x3239 () Int)
(declare-fun x4610 () Bool)
(declare-fun x843 () Bool)
(declare-fun x3025 () Int)
(declare-fun x639 () Bool)
(declare-fun x4676 () Bool)
(declare-fun x2234 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x1027 () Int)
(declare-fun x3834 () Bool)
(declare-fun x537 () Bool)
(declare-fun x3972 () Int)
(declare-fun x4567 () Bool)
(declare-fun x4843 () Bool)
(declare-fun x4088 () x678)
(declare-fun x1956 () Bool)
(declare-fun x538 () Int)
(declare-fun x2321 () Int)
(declare-fun x1820 () Int)
(declare-fun x3166 () x678)
(declare-fun x4889 () x678)
(declare-fun x3308 () Int)
(declare-fun x686 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x2905 () Bool)
(declare-fun x3963 () Bool)
(declare-fun x885 () Int)
(declare-fun x1456 () Bool)
(declare-fun x3150 () Bool)
(declare-fun x2462 () Int)
(declare-fun x2017 () x678)
(declare-fun x2982 () Bool)
(declare-fun x4761 () Bool)
(declare-fun x3768 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x4736 () Int)
(declare-fun x765 () x678)
(declare-fun x4323 () Bool)
(declare-fun x2076 () Int)
(declare-fun x319 () Int)
(declare-fun x1876 () Int)
(declare-fun x4845 () x678)
(declare-fun x4300 () Bool)
(declare-fun x4074 () x678)
(declare-fun x2102 () Int)
(declare-fun x3847 () Int)
(declare-fun x1542 () Bool)
(declare-fun x1787 () Int)
(declare-fun x248 (Int) Int)
(declare-fun x2137 () Bool)
(declare-fun x4838 () Bool)
(declare-fun x3495 () Bool)
(declare-fun x2895 () Bool)
(declare-fun x2374 () Bool)
(declare-fun x10 () Int)
(declare-fun x4393 () Int)
(declare-fun x3741 () Bool)
(declare-fun x4472 () Bool)
(declare-fun x1950 () x678)
(declare-fun x3232 () Bool)
(declare-fun x4514 () x678)
(declare-fun x4521 () Bool)
(declare-fun x2235 () Bool)
(declare-fun x1134 () Int)
(declare-fun x2636 () Int)
(declare-fun x2386 () x678)
(declare-fun x4620 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x571 () Bool)
(declare-fun x2277 () Bool)
(declare-fun x310 () Int)
(declare-fun x4507 () Int)
(declare-fun x1617 () Int)
(declare-fun x3 () x678)
(declare-fun x3486 () Int)
(declare-fun x2629 () Bool)
(declare-fun x4785 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x3716 () Int)
(declare-fun x641 () Bool)
(declare-fun x376 () Bool)
(declare-fun x3049 () Bool)
(declare-fun x3346 () Int)
(declare-fun x1564 () Bool)
(declare-fun x842 () Int)
(declare-fun x419 () Bool)
(declare-fun x478 () Int)
(declare-fun x1644 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x2694 () Bool)
(declare-fun x733 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x1205 () x678)
(declare-fun x517 () Int)
(declare-fun x2830 () Int)
(declare-fun x3590 () Int)
(declare-fun x4763 () x678)
(declare-fun x1116 (Int) Int)
(declare-fun x2649 () x678)
(declare-fun x615 () Int)
(declare-fun x4775 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x1122 () Int)
(declare-fun x2226 () Bool)
(declare-fun x3613 () Bool)
(declare-fun x4746 () Bool)
(declare-fun x4196 () Bool)
(declare-fun x1806 () Bool)
(declare-fun x3066 () Bool)
(declare-fun x2768 () Int)
(declare-fun x1228 () Bool)
(declare-fun x4492 () x678)
(declare-fun x3950 () Bool)
(declare-fun x2859 () Int)
(declare-fun x4519 () Int)
(declare-fun x894 () Int)
(declare-fun x1870 () Int)
(declare-fun x4264 () Bool)
(declare-fun x4651 () x678)
(declare-fun x1510 () Int)
(declare-fun x1786 () Int)
(declare-fun x280 () Int)
(declare-fun x3827 () x678)
(declare-fun x3719 () Bool)
(declare-fun x2449 () Int)
(declare-fun x2897 () Int)
(declare-fun x991 () Int)
(declare-fun x400 () Bool)
(declare-fun x3923 () Int)
(declare-fun x2712 () x678)
(declare-fun x4356 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x420 () Int)
(declare-fun x735 () Int)
(declare-fun x3591 () Bool)
(declare-fun x483 () Int)
(declare-fun x800 () Bool)
(declare-fun x3633 () Int)
(declare-fun x125 () Int)
(declare-fun x1923 () Bool)
(declare-fun x335 () Int)
(declare-fun x4732 () Bool)
(declare-fun x4365 () Bool)
(declare-fun x3811 () Bool)
(declare-fun x2917 () Int)
(declare-fun x2184 () x678)
(declare-fun x4672 () Bool)
(declare-fun x2357 () Int)
(declare-fun x1639 () Bool)
(declare-fun x4305 () Int)
(declare-fun x3733 () Bool)
(declare-fun x3725 () Int)
(declare-fun x1752 () Bool)
(declare-fun x3067 () Int)
(declare-fun x425 () Int)
(declare-fun x4624 () Bool)
(declare-fun x599 () Int)
(declare-fun x95 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x1791 () Int)
(declare-fun x3129 () Int)
(declare-fun x2253 () Int)
(declare-fun x2833 () Bool)
(declare-fun x2571 () x678)
(declare-fun x500 () Int)
(declare-fun x2561 (x678) Int)
(declare-fun x120 () Int)
(declare-fun x4141 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x4086 () Int)
(declare-fun x4749 () Bool)
(declare-fun x2165 () Int)
(declare-fun x489 () Bool)
(declare-fun x3389 () Int)
(declare-fun x1370 () Bool)
(declare-fun x504 (Int) Int)
(declare-fun x3073 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x2129 () Int)
(declare-fun x4414 () Bool)
(declare-fun x2624 () Bool)
(declare-fun x1830 () Int)
(declare-fun x21 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x2711 () Int)
(declare-fun x4493 () Int)
(declare-fun x2723 () Bool)
(declare-fun x256 () Bool)
(declare-fun x254 () Bool)
(declare-fun x738 () Int)
(declare-fun x2123 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x306 () Int)
(declare-fun x2775 () x678)
(declare-fun x353 () Bool)
(declare-fun x725 () Int)
(declare-fun x3837 () Bool)
(declare-fun x4451 () Int)
(declare-fun x3553 () Int)
(declare-fun x3088 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x3426 () Int)
(declare-fun x3614 () Bool)
(declare-fun x4562 () Int)
(declare-fun x847 () Bool)
(declare-fun x3774 () Bool)
(declare-fun x3964 () Bool)
(declare-fun x878 () Bool)
(declare-fun x1135 () x678)
(declare-fun x4772 () Bool)
(declare-fun x1390 () x678)
(declare-fun x4143 () Bool)
(declare-fun x4273 () x678)
(declare-fun x2538 () Int)
(declare-fun x2879 () Int)
(declare-fun x24 () Int)
(declare-fun x4887 () Int)
(declare-fun x3998 () x678)
(declare-fun x2540 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x3535 () Bool)
(declare-fun x556 () Int)
(declare-fun x2141 () Int)
(declare-fun x2130 () Bool)
(declare-fun x893 () Bool)
(declare-fun x1715 () x678)
(declare-fun x3188 () Int)
(declare-fun x899 () Int)
(declare-fun x4788 () Bool)
(declare-fun x3045 () x678)
(declare-fun x1201 () Bool)
(declare-fun x572 () Int)
(declare-fun x4337 () Int)
(declare-fun x4369 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1859 () Int)
(declare-fun x1247 () Int)
(declare-fun x4681 () Int)
(declare-fun x2252 () Bool)
(declare-fun x835 () Int)
(declare-fun x2323 () x678)
(declare-fun x1808 (x678) Int)
(declare-fun x2621 () Int)
(declare-fun x1961 () Int)
(declare-fun x923 () Bool)
(declare-fun x4246 () Int)
(declare-fun x3712 () Int)
(declare-fun x2998 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x53 () Int)
(declare-fun x688 () Bool)
(declare-fun x4175 () Int)
(declare-fun x2594 () Int)
(declare-fun x2758 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x4696 () Int)
(declare-fun x1042 () Bool)
(declare-fun x4783 () Int)
(declare-fun x4466 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x87 (Int) Int)
(declare-fun x2338 () Bool)
(declare-fun x4881 () Bool)
(declare-fun x431 () Int)
(declare-fun x3785 () Int)
(declare-fun x157 () Bool)
(declare-fun x1269 () Int)
(declare-fun x3860 () Bool)
(declare-fun x4336 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x2656 () Int)
(declare-fun x1951 () Bool)
(declare-fun x980 () Int)
(declare-fun x1031 () Bool)
(declare-fun x3990 () Int)
(declare-fun x2898 () Bool)
(declare-fun x2246 () x678)
(declare-fun x2562 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x2225 () Int)
(declare-fun x3836 () x678)
(declare-fun x2536 () x678)
(declare-fun x3085 () Bool)
(declare-fun x2470 () Int)
(declare-fun x4046 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1227 () Int)
(declare-fun x4235 () Int)
(declare-fun x477 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1761 () Int)
(declare-fun x3987 () Int)
(declare-fun x1152 () Int)
(declare-fun x194 () Int)
(declare-fun x3227 () Bool)
(declare-fun x3226 () Int)
(declare-fun x3698 () x678)
(declare-fun x1190 () Bool)
(declare-fun x2930 () Int)
(declare-fun x2877 () Bool)
(declare-fun x2159 (Int) Int)
(declare-fun x4091 () x678)
(declare-fun x1428 () Bool)
(declare-fun x912 () Int)
(declare-fun x1749 () Int)
(declare-fun x831 () Int)
(declare-fun x1100 () Int)
(declare-fun x4886 () Bool)
(declare-fun x4185 () Bool)
(declare-fun x4823 () Int)
(declare-fun x2048 () Int)
(declare-fun x246 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x4009 () Int)
(declare-fun x3353 () Int)
(declare-fun x17 () Bool)
(declare-fun x3630 () Bool)
(declare-fun x858 () Int)
(declare-fun x4641 () Bool)
(declare-fun x4703 () Int)
(declare-fun x3433 () Int)
(declare-fun x4767 () Int)
(declare-fun x1571 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x903 () Int)
(declare-fun x1465 () Bool)
(declare-fun x1237 () Int)
(declare-fun x3728 () Int)
(declare-fun x253 () Int)
(declare-fun x618 () Bool)
(declare-fun x2458 () Int)
(declare-fun x2999 () Bool)
(declare-fun x4013 () Bool)
(declare-fun x2674 () Int)
(declare-fun x2074 () Int)
(declare-fun x1302 () Int)
(declare-fun x1978 () Int)
(declare-fun x2839 () Bool)
(declare-fun x1661 () Int)
(declare-fun x4377 () Int)
(declare-fun x4875 () Bool)
(declare-fun x436 () Bool)
(declare-fun x2988 () Int)
(declare-fun x3262 () Int)
(declare-fun x551 () Bool)
(declare-fun x1054 (Int) Int)
(declare-fun x669 () Bool)
(declare-fun x968 () Bool)
(declare-fun x2628 () Bool)
(declare-fun x4370 () Int)
(declare-fun x1853 () Int)
(declare-fun x3873 () Bool)
(declare-fun x998 () x678)
(declare-fun x4072 () Bool)
(declare-fun x3214 () Int)
(declare-fun x4460 () Bool)
(declare-fun x2052 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x135 () Int)
(declare-fun x4225 () Bool)
(declare-fun x2754 (x678) Int)
(declare-fun x3697 () Int)
(declare-fun x4629 () Bool)
(declare-fun x3715 () Int)
(declare-fun x788 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x4633 () Bool)
(declare-fun x4390 () Bool)
(declare-fun x1972 () x678)
(declare-fun x3187 () Int)
(declare-fun x4533 () Int)
(declare-fun x1918 () Bool)
(declare-fun x3231 () Int)
(declare-fun x3767 () Bool)
(declare-fun x539 () x678)
(declare-fun x3102 () Bool)
(declare-fun x4205 () Int)
(declare-fun x1912 () Int)
(declare-fun x1628 () x678)
(declare-fun x3004 () Int)
(declare-fun x2611 () Bool)
(declare-fun x4368 () Bool)
(declare-fun x3163 () Bool)
(declare-fun x909 () Bool)
(declare-fun x4815 () Bool)
(declare-fun x4398 () Bool)
(declare-fun x552 () Bool)
(declare-fun x4523 () Bool)
(declare-fun x3931 () Int)
(declare-fun x4111 () Int)
(declare-fun x2015 () Int)
(declare-fun x4407 () Bool)
(declare-fun x2493 () Int)
(declare-fun x1146 () Bool)
(declare-fun x515 () Int)
(declare-fun x4279 () Bool)
(declare-fun x4144 () Bool)
(declare-fun x4296 () x678)
(declare-fun x3097 () Int)
(declare-fun x665 () Bool)
(declare-fun x4373 () Bool)
(declare-fun x4802 () Bool)
(declare-fun x365 () Bool)
(declare-fun x982 () Bool)
(declare-fun x1398 () Int)
(declare-fun x4546 () Bool)
(declare-fun x4000 () Bool)
(declare-fun x904 () Bool)
(declare-fun x446 () Int)
(declare-fun x3895 () Int)
(declare-fun x186 () Bool)
(declare-fun x693 () x678)
(declare-fun x4415 () Int)
(declare-fun x2327 () x678)
(declare-fun x1572 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1991 () Int)
(declare-fun x1543 () Bool)
(declare-fun x4050 () Int)
(declare-fun x2482 () Bool)
(declare-fun x3824 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x3738 (Int) Int)
(declare-fun x2116 () Bool)
(declare-fun x979 () Bool)
(declare-fun x1405 () Int)
(declare-fun x2619 () Bool)
(declare-fun x3261 () Bool)
(declare-fun x2492 () Bool)
(declare-fun x113 () Bool)
(declare-fun x2973 () Int)
(declare-fun x2330 () x678)
(declare-fun x2007 () Int)
(declare-fun x1437 () Int)
(declare-fun x541 () Int)
(declare-fun x3151 () Int)
(declare-fun x1764 () Bool)
(declare-fun x465 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x3970 () Int)
(declare-fun x3111 () Int)
(declare-fun x4659 () Int)
(declare-fun x549 () Bool)
(declare-fun x1347 () Int)
(declare-fun x1059 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x3573 () Int)
(declare-fun x481 () Bool)
(declare-fun x4320 () Int)
(declare-fun x1629 () Int)
(declare-fun x1422 () Int)
(declare-fun x3377 () Int)
(declare-fun x3603 (Int) Int)
(declare-fun x212 () Bool)
(declare-fun x3331 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x4228 () Int)
(declare-fun x1636 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x1001 () Int)
(declare-fun x107 () Int)
(declare-fun x3949 () Int)
(declare-fun x2588 () Int)
(declare-fun x3302 () Int)
(declare-fun x702 () Int)
(declare-fun x2881 () Bool)
(declare-fun x1358 () Int)
(declare-fun x540 () Bool)
(declare-fun x4201 () Bool)
(declare-fun x209 () Int)
(declare-fun x1356 () Bool)
(declare-fun x4611 () Bool)
(declare-fun x264 () Bool)
(declare-fun x3652 () x678)
(declare-fun x999 () x678)
(declare-fun x4294 () Int)
(declare-fun x3731 () Int)
(declare-fun x2589 () Bool)
(declare-fun x2343 () Int)
(declare-fun x2064 () Int)
(declare-fun x2134 () Int)
(declare-fun x184 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x4769 () Bool)
(declare-fun x417 () Bool)
(declare-fun x63 () Int)
(declare-fun x3446 () Bool)
(declare-fun x880 () Int)
(declare-fun x3859 () Bool)
(declare-fun x2164 () Int)
(declare-fun x2762 () Int)
(declare-fun x2305 () Bool)
(declare-fun x2439 () Bool)
(declare-fun x4505 () Int)
(declare-fun x4459 () x678)
(declare-fun x2609 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1580 () x678)
(declare-fun x387 () Int)
(declare-fun x2333 () Int)
(declare-fun x2607 () Int)
(declare-fun x3692 () Int)
(declare-fun x1704 () Int)
(declare-fun x3061 () Bool)
(declare-fun x1439 () Int)
(declare-fun x3017 () Bool)
(declare-fun x3134 (x678) Int)
(declare-fun x371 (Int Int) Int)
(declare-fun x1368 () Bool)
(declare-fun x3051 () x678)
(declare-fun x2625 () Int)
(declare-fun x4357 () Int)
(declare-fun x4335 () Int)
(declare-fun x3543 () Int)
(declare-fun x981 () Int)
(declare-fun x4597 () Bool)
(declare-fun x600 () Int)
(declare-fun x1648 () Bool)
(declare-fun x3995 () Int)
(declare-fun x3313 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x726 () Int)
(declare-fun x3765 () Bool)
(declare-fun x2616 () Bool)
(declare-fun x3980 () Bool)
(declare-fun x2601 () Int)
(declare-fun x302 () Bool)
(declare-fun x1935 () Int)
(declare-fun x1630 () Bool)
(declare-fun x4152 () Bool)
(declare-fun x393 () Int)
(declare-fun x2100 () Bool)
(declare-fun x1797 () Int)
(declare-fun x1894 () Bool)
(declare-fun x4272 () Int)
(declare-fun x2780 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x930 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x399 () Int)
(declare-fun x898 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x3947 () Int)
(declare-fun x4069 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x126 () Int)
(declare-fun x2418 () Int)
(declare-fun x1738 () Int)
(declare-fun x3541 () Bool)
(declare-fun x2360 () Int)
(declare-fun x2183 () Int)
(declare-fun x4469 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x26 () Bool)
(declare-fun x864 () Int)
(declare-fun x4194 () Bool)
(declare-fun x1481 () Int)
(declare-fun x1997 () Int)
(declare-fun x542 () Int)
(declare-fun x1142 () Int)
(declare-fun x4355 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x914 () Int)
(declare-fun x83 () Bool)
(declare-fun x3461 () Int)
(declare-fun x3649 () Int)
(declare-fun x2946 () Int)
(declare-fun x4132 () Int)
(declare-fun x2938 () x678)
(declare-fun x3690 () Int)
(declare-fun x1509 () x678)
(declare-fun x2716 () Int)
(declare-fun x1909 () x678)
(declare-fun x185 () Int)
(declare-fun x2040 () Bool)
(declare-fun x373 () Int)
(declare-fun x4058 () Int)
(declare-fun x1813 () Int)
(declare-fun x3238 () x678)
(declare-fun x2014 () Bool)
(declare-fun x2203 () x678)
(declare-fun x946 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x3928 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x2578 () Int)
(declare-fun x384 () Bool)
(declare-fun x457 () x678)
(declare-fun x1416 () Int)
(declare-fun x443 () Int)
(declare-fun x2888 () Bool)
(declare-fun x535 () x678)
(declare-fun x3917 () x678)
(declare-fun x2896 () Bool)
(declare-fun x2822 () Bool)
(declare-fun x978 () Int)
(declare-fun x4670 () Int)
(declare-fun x1992 () Bool)
(declare-fun x241 () Bool)
(declare-fun x3115 () Int)
(declare-fun x8 () x678)
(declare-fun x4416 () Int)
(declare-fun x2162 () Int)
(declare-fun x3669 () Bool)
(declare-fun x2652 () Int)
(declare-fun x110 () Bool)
(declare-fun x3033 () Int)
(declare-fun x1454 () Bool)
(declare-fun x809 () Int)
(declare-fun x138 () Int)
(declare-fun x3897 () Int)
(declare-fun x1631 () Int)
(declare-fun x1741 () Bool)
(declare-fun x3072 () Int)
(declare-fun x3925 () Int)
(declare-fun x3644 () Bool)
(declare-fun x1863 () x678)
(declare-fun x3183 () Bool)
(declare-fun x3839 () Bool)
(declare-fun x4025 () Bool)
(declare-fun x642 () Bool)
(declare-fun x4836 () Bool)
(declare-fun x807 () Int)
(declare-fun x178 () Int)
(declare-fun x84 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x4347 () x678)
(declare-fun x1941 () Int)
(declare-fun x2936 () Bool)
(declare-fun x2784 () x678)
(declare-fun x4640 () Bool)
(declare-fun x181 () Int)
(declare-fun x4720 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x3699 () Int)
(declare-fun x1011 () Bool)
(declare-fun x3140 () x678)
(declare-fun x4125 () Bool)
(declare-fun x118 () x678)
(declare-fun x984 () Int)
(declare-fun x1021 () Int)
(declare-fun x2445 () Bool)
(declare-fun x853 () Int)
(declare-fun x625 () Int)
(declare-fun x4445 () Int)
(declare-fun x2228 () Bool)
(declare-fun x3564 () Int)
(declare-fun x789 () Int)
(declare-fun x3842 () x678)
(declare-fun x4539 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x2718 () Int)
(declare-fun x3593 () Bool)
(declare-fun x1996 () Int)
(declare-fun x1093 () Bool)
(declare-fun x3470 () Bool)
(declare-fun x4893 () Bool)
(declare-fun x1290 () Int)
(declare-fun x704 () Bool)
(declare-fun x4689 () Bool)
(declare-fun x4097 () x678)
(declare-fun x94 () Int)
(declare-fun x4078 () Bool)
(declare-fun x4418 () Int)
(declare-fun x3476 () Int)
(declare-fun x9 () x678)
(declare-fun x4351 () Bool)
(declare-fun x3744 () Bool)
(declare-fun x2359 () Int)
(declare-fun x4755 () Int)
(declare-fun x3868 () Bool)
(declare-fun x802 () Int)
(declare-fun x4698 () Int)
(declare-fun x1886 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x4208 () Int)
(declare-fun x2347 () Bool)
(declare-fun x1801 () Bool)
(declare-fun x1619 () Int)
(declare-fun x1150 () Int)
(declare-fun x313 () Bool)
(declare-fun x2661 () x678)
(declare-fun x1843 (x678) Int)
(declare-fun x4528 () Int)
(declare-fun x281 () Bool)
(declare-fun x4059 () Bool)
(declare-fun x3885 () Int)
(declare-fun x3643 () Bool)
(declare-fun x4106 () Int)
(declare-fun x4396 (x678) Int)
(declare-fun x4561 () Bool)
(declare-fun x2334 () Bool)
(declare-fun x668 () Bool)
(declare-fun x1591 () Int)
(declare-fun x4848 () Int)
(declare-fun x3388 () x678)
(declare-fun x3406 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x3063 () Bool)
(declare-fun x2239 () Bool)
(declare-fun x3379 () Bool)
(declare-fun x3487 () Bool)
(declare-fun x4105 () x678)
(declare-fun x3945 () x678)
(declare-fun x277 () Int)
(declare-fun x1044 () Bool)
(declare-fun x4269 () Int)
(declare-fun x3788 () x678)
(declare-fun x4826 () Int)
(declare-fun x4295 () Bool)
(declare-fun x4799 () Bool)
(declare-fun x4206 () Int)
(declare-fun x3634 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x4480 () Int)
(declare-fun x1615 () Int)
(declare-fun x1203 () Bool)
(declare-fun x4827 () Bool)
(declare-fun x2448 () Int)
(declare-fun x4494 () Int)
(declare-fun x3321 () Int)
(declare-fun x1164 () Int)
(declare-fun x2552 () Int)
(declare-fun x4118 () Int)
(declare-fun x3584 (x678) Int)
(declare-fun x89 () Bool)
(declare-fun x1339 () Int)
(declare-fun x1050 () Int)
(declare-fun x3285 () Bool)
(declare-fun x406 () Int)
(declare-fun x2757 () Bool)
(declare-fun x2583 (Int) Int)
(declare-fun x4619 (Int) Int)
(declare-fun x3946 () Int)
(declare-fun x3496 () Bool)
(declare-fun x1141 (Int) Int)
(declare-fun x1214 () Bool)
(declare-fun x2922 () Int)
(declare-fun x4321 () Int)
(declare-fun x798 () Bool)
(declare-fun x3539 () Int)
(declare-fun x2337 () Bool)
(declare-fun x3916 () Bool)
(declare-fun x530 () Int)
(declare-fun x4001 () Int)
(declare-fun x2291 () x678)
(declare-fun x469 () Int)
(declare-fun x1707 () Int)
(declare-fun x3048 () Int)
(declare-fun x3105 () Int)
(declare-fun x3036 () Int)
(declare-fun x4613 (x678) Int)
(declare-fun x3764 () Bool)
(declare-fun x4484 () Int)
(declare-fun x1826 () Bool)
(declare-fun x4073 () Bool)
(declare-fun x2345 () Int)
(declare-fun x1692 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x428 () Int)
(declare-fun x3428 () x678)
(declare-fun x4882 () Bool)
(declare-fun x2677 () Int)
(declare-fun x4733 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x2598 () Int)
(declare-fun x397 () Bool)
(declare-fun x2217 () x678)
(declare-fun x634 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x4077 () Bool)
(declare-fun x3752 () x678)
(declare-fun x133 () x678)
(declare-fun x2923 () Bool)
(declare-fun x3287 () Int)
(declare-fun x4035 () Int)
(declare-fun x4017 () Int)
(declare-fun x2082 () x678)
(declare-fun x2873 () Int)
(declare-fun x580 () Int)
(declare-fun x4238 () Bool)
(declare-fun x2581 () Int)
(declare-fun x391 () Int)
(declare-fun x1323 () Int)
(declare-fun x4898 () Int)
(declare-fun x3777 () Int)
(declare-fun x2121 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x4446 () Bool)
(declare-fun x4667 () Int)
(declare-fun x2797 () Int)
(declare-fun x883 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x902 (x678) Int)
(declare-fun x2664 () Int)
(declare-fun x1124 () Int)
(declare-fun x4224 () Bool)
(declare-fun x1443 () Int)
(declare-fun x4628 () Int)
(declare-fun x2575 () Bool)
(declare-fun x4795 () Int)
(declare-fun x2557 () Bool)
(declare-fun x3861 () Bool)
(declare-fun x1929 () Int)
(declare-fun x819 () Bool)
(declare-fun x4752 () Bool)
(declare-fun x4094 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x2280 () Int)
(declare-fun x3742 () Int)
(declare-fun x1747 () Bool)
(declare-fun x3185 () Bool)
(declare-fun x4481 () Int)
(declare-fun x4110 () Int)
(declare-fun x1734 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x2475 () Bool)
(declare-fun x231 () Int)
(declare-fun x2204 () Int)
(declare-fun x2695 () Int)
(declare-fun x1700 () Bool)
(declare-fun x1138 () Int)
(declare-fun x4067 () x678)
(declare-fun x2265 () Int)
(declare-fun x1682 () Bool)
(declare-fun x2558 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x4372 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x4099 () Int)
(declare-fun x1581 () Int)
(declare-fun x346 () Bool)
(declare-fun x3167 () Bool)
(declare-fun x2361 () Bool)
(declare-fun x416 () Bool)
(declare-fun x4701 () Int)
(declare-fun x4098 () Bool)
(declare-fun x687 () x678)
(declare-fun x3547 () Bool)
(declare-fun x4207 () Int)
(declare-fun x4256 () Bool)
(declare-fun x4265 () Bool)
(declare-fun x1088 () Int)
(declare-fun x3682 () Int)
(declare-fun x4166 () x678)
(declare-fun x3704 () Int)
(declare-fun x1493 () Int)
(declare-fun x886 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x2699 () Int)
(declare-fun x1987 () Bool)
(declare-fun x4497 () Bool)
(declare-fun x482 () x678)
(declare-fun x3962 () x678)
(declare-fun x1703 () x678)
(declare-fun x3055 () Int)
(declare-fun x3659 () Int)
(declare-fun x1108 (x678) Int)
(declare-fun x821 () Bool)
(declare-fun x2125 () Int)
(declare-fun x940 () x678)
(declare-fun x3175 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x3301 () Bool)
(declare-fun x1076 () Int)
(declare-fun x662 () Int)
(declare-fun x3531 () Int)
(declare-fun x2151 () Int)
(declare-fun x1663 () Int)
(declare-fun x3146 () x678)
(declare-fun x3498 () Int)
(declare-fun x938 () Bool)
(declare-fun x388 () Int)
(declare-fun x441 () Int)
(declare-fun x1877 () Bool)
(declare-fun x613 () Bool)
(declare-fun x2093 () Int)
(declare-fun x3436 () Bool)
(declare-fun x2506 () Bool)
(declare-fun x1658 () Int)
(declare-fun x1697 () Int)
(declare-fun x4420 () Bool)
(declare-fun x4634 () Int)
(declare-fun x3632 () Bool)
(declare-fun x334 () x678)
(declare-fun x1111 () Int)
(declare-fun x4349 () Bool)
(declare-fun x4683 () Bool)
(declare-fun x3169 () x678)
(declare-fun x689 () Int)
(declare-fun x2174 () Bool)
(declare-fun x2463 () Int)
(declare-fun x3090 () Int)
(declare-fun x531 () Bool)
(declare-fun x2423 () x678)
(declare-fun x3405 () Bool)
(declare-fun x513 () Int)
(declare-fun x4462 () Bool)
(declare-fun x4036 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x210 () x678)
(declare-fun x1438 () Int)
(declare-fun x1014 () Bool)
(declare-fun x4362 () Bool)
(declare-fun x3667 () Bool)
(declare-fun x4679 () Bool)
(declare-fun x2961 () Int)
(declare-fun x4471 () Int)
(declare-fun x967 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x3789 () Int)
(declare-fun x182 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x479 () Int)
(declare-fun x4271 () Bool)
(declare-fun x592 () Int)
(declare-fun x2967 (Int) Int)
(declare-fun x1233 () Bool)
(declare-fun x4817 () Bool)
(declare-fun x3783 () x678)
(declare-fun x4211 () Bool)
(declare-fun x2319 () Int)
(declare-fun x3795 () Int)
(declare-fun x4432 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x785 () Bool)
(declare-fun x4008 () Bool)
(declare-fun x3766 () Bool)
(declare-fun x1962 () x678)
(declare-fun x2051 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x2057 () Int)
(declare-fun x28 () Int)
(declare-fun x3142 () Int)
(declare-fun x3579 () Bool)
(declare-fun x1948 () Int)
(declare-fun x2795 () Bool)
(declare-fun x1756 () Int)
(declare-fun x3029 () x678)
(declare-fun x1373 () x678)
(declare-fun x4322 () Bool)
(declare-fun x4509 () Int)
(declare-fun x3291 () x678)
(declare-fun x1321 () Bool)
(declare-fun x2104 () Int)
(declare-fun x866 () Int)
(declare-fun x2315 () x678)
(declare-fun x2876 () Int)
(declare-fun x491 () Bool)
(declare-fun x1885 () Int)
(declare-fun x2385 () Int)
(declare-fun x295 () Bool)
(declare-fun x3414 () Bool)
(declare-fun x3974 () x678)
(declare-fun x394 () Int)
(declare-fun x1359 () x678)
(declare-fun x1728 () Int)
(declare-fun x42 () Int)
(declare-fun x3746 () Int)
(declare-fun x4850 () x678)
(declare-fun x257 () Int)
(declare-fun x610 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x2144 () x678)
(declare-fun x3638 () Int)
(declare-fun x1034 () Bool)
(declare-fun x226 () Int)
(declare-fun x3648 () x678)
(declare-fun x4705 () Bool)
(declare-fun x2952 () Bool)
(declare-fun x4520 () Bool)
(declare-fun x3560 () Int)
(declare-fun x1942 () x678)
(declare-fun x4461 () Int)
(declare-fun x553 () Int)
(declare-fun x2154 () x678)
(declare-fun x1998 () x678)
(declare-fun x352 () Bool)
(declare-fun x4054 () Int)
(declare-fun x811 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x2668 () Int)
(declare-fun x3607 () Int)
(declare-fun x801 () Int)
(declare-fun x922 () Int)
(declare-fun x3910 () x678)
(declare-fun x1776 () Bool)
(declare-fun x4447 () Int)
(declare-fun x82 () Int)
(declare-fun x2408 () Bool)
(declare-fun x2168 () Int)
(declare-fun x3545 (Int) Int)
(declare-fun x3676 () Int)
(declare-fun x4542 () Bool)
(declare-fun x152 () Bool)
(declare-fun x2300 () x678)
(declare-fun x2354 () Bool)
(declare-fun x1710 () Int)
(declare-fun x3050 () x678)
(declare-fun x583 () Int)
(declare-fun x4383 () Bool)
(declare-fun x3793 () Int)
(declare-fun x4148 () Bool)
(declare-fun x699 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x4544 () x678)
(declare-fun x3332 () Int)
(declare-fun x3875 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x488 () x678)
(declare-fun x2978 () Int)
(declare-fun x3507 () Bool)
(declare-fun x3315 () Int)
(declare-fun x274 () Int)
(declare-fun x3891 () x678)
(declare-fun x4847 () x678)
(declare-fun x2620 () Bool)
(declare-fun x341 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x1260 () Int)
(declare-fun x692 () Bool)
(declare-fun x4260 () Int)
(declare-fun x3574 () Bool)
(declare-fun x330 () Int)
(declare-fun x2796 () Int)
(declare-fun x2832 () Int)
(declare-fun x2749 () Int)
(declare-fun x4570 () Int)
(declare-fun x3116 () Bool)
(declare-fun x1563 () Int)
(declare-fun x4129 () Bool)
(declare-fun x1608 () Int)
(declare-fun x747 () Bool)
(declare-fun x4673 () Bool)
(declare-fun x2907 () Int)
(declare-fun x4308 () x678)
(declare-fun x3381 () Bool)
(declare-fun x1387 () x678)
(declare-fun x1641 () Bool)
(declare-fun x4806 () Int)
(declare-fun x2438 () x678)
(declare-fun x3452 () Int)
(declare-fun x2187 () Bool)
(declare-fun x1318 () Int)
(declare-fun x41 () Bool)
(declare-fun x4198 () Int)
(declare-fun x2060 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x1210 () Int)
(declare-fun x2617 () Int)
(declare-fun x506 () Bool)
(declare-fun x2304 () Int)
(declare-fun x4092 (Int) Int)
(declare-fun x3420 () Int)
(declare-fun x3696 () Int)
(declare-fun x1089 () Bool)
(declare-fun x223 () Bool)
(declare-fun x2657 () Int)
(declare-fun x596 () Bool)
(declare-fun x3604 () Int)
(declare-fun x2010 () Bool)
(declare-fun x2659 () Int)
(declare-fun x3969 () Bool)
(declare-fun x337 () Bool)
(declare-fun x3382 () x678)
(declare-fun x4090 () Int)
(declare-fun x3208 () Int)
(declare-fun x1907 () Int)
(declare-fun x127 () Int)
(declare-fun x2369 () Bool)
(declare-fun x1127 () x678)
(declare-fun x3409 () x678)
(declare-fun x961 () Int)
(declare-fun x129 () x678)
(declare-fun x1335 () x678)
(declare-fun x3864 () Int)
(declare-fun x543 () Bool)
(declare-fun x3865 () Int)
(declare-fun x79 () Bool)
(declare-fun x2670 () Int)
(declare-fun x3914 () Int)
(declare-fun x4427 () x678)
(declare-fun x555 () Int)
(declare-fun x2537 () Bool)
(declare-fun x2942 () Int)
(declare-fun x4424 () x678)
(declare-fun x774 () Bool)
(declare-fun x4122 () Int)
(declare-fun x1642 () Int)
(declare-fun x1730 () Int)
(declare-fun x4727 () Int)
(declare-fun x1162 () Int)
(declare-fun x3921 () Int)
(declare-fun x761 () Bool)
(declare-fun x3844 () Int)
(declare-fun x4328 () x678)
(declare-fun x1744 () Int)
(declare-fun x1057 () x678)
(declare-fun x2250 () Bool)
(declare-fun x2266 () x678)
(declare-fun x2006 () x678)
(declare-fun x2243 () Int)
(declare-fun x1110 () Int)
(declare-fun x4902 () Int)
(declare-fun x4060 () Bool)
(declare-fun x271 () Int)
(declare-fun x2133 () Bool)
(declare-fun x3471 () Bool)
(declare-fun x3450 () Bool)
(declare-fun x602 () Int)
(declare-fun x934 () Int)
(declare-fun x4686 () Bool)
(declare-fun x3723 () Bool)
(declare-fun x3155 () Bool)
(declare-fun x3908 () x678)
(declare-fun x3754 () Int)
(declare-fun x4391 () Int)
(declare-fun x437 () Int)
(declare-fun x1010 () Int)
(declare-fun x2258 () Int)
(declare-fun x4381 () Int)
(declare-fun x2310 () Int)
(declare-fun x3448 () Int)
(declare-fun x3657 () Bool)
(declare-fun x3770 () Bool)
(declare-fun x745 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1917 () Int)
(declare-fun x3162 () Int)
(declare-fun x3674 () Bool)
(declare-fun x3335 () Int)
(declare-fun x3691 () Int)
(declare-fun x3463 () Int)
(declare-fun x2853 () Bool)
(declare-fun x1970 (Int) x678)
(declare-fun x1452 () Bool)
(declare-fun x2778 () x678)
(declare-fun x679 () Bool)
(declare-fun x4657 () Bool)
(declare-fun x3662 () x678)
(declare-fun x806 () Int)
(declare-fun x507 () Bool)
(declare-fun x354 () Int)
(declare-fun x1399 () Int)
(declare-fun x4186 () x678)
(declare-fun x2559 () Int)
(declare-fun x1878 () Int)
(declare-fun x1782 () Int)
(declare-fun x3689 () Bool)
(declare-fun x1854 () Int)
(declare-fun x2599 () Bool)
(declare-fun x2871 () x678)
(declare-fun x1495 () Int)
(declare-fun x4648 () Bool)
(declare-fun x263 () Int)
(declare-fun x3246 () Bool)
(declare-fun x857 () Int)
(declare-fun x4442 () Bool)
(declare-fun x1880 () Int)
(declare-fun x1275 () Bool)
(declare-fun x4452 () Int)
(declare-fun x829 (x678) Int)
(declare-fun x1844 () Bool)
(declare-fun x4564 () Bool)
(declare-fun x363 () Int)
(declare-fun x4202 () Int)
(declare-fun x987 () Int)
(declare-fun x1301 () Bool)
(declare-fun x3907 () Bool)
(declare-fun x3460 () Bool)
(declare-fun x723 () Bool)
(declare-fun x652 () Bool)
(declare-fun x2715 () Int)
(declare-fun x1717 () Bool)
(declare-fun x1656 () Int)
(declare-fun x3375 () Int)
(declare-fun x4745 () Int)
(declare-fun x4187 () Bool)
(declare-fun x4644 () Bool)
(declare-fun x2872 () Int)
(declare-fun x4406 () Bool)
(declare-fun x4371 () Bool)
(declare-fun x2753 () Bool)
(declare-fun x2182 () Int)
(declare-fun x2787 () Bool)
(declare-fun x4695 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x4280 () Bool)
(declare-fun x1968 () Bool)
(declare-fun x3125 () Int)
(declare-fun x2031 () Int)
(declare-fun x3177 () Int)
(declare-fun x4330 () Int)
(declare-fun x4023 () Bool)
(declare-fun x3806 () Bool)
(declare-fun x3546 () x678)
(declare-fun x4331 () Bool)
(declare-fun x2928 () x678)
(declare-fun x124 () Bool)
(declare-fun x4687 (Int) Int)
(declare-fun x2572 () Bool)
(declare-fun x3920 () Bool)
(declare-fun x1774 () x678)
(declare-fun x3119 (Int) Int)
(declare-fun x3748 () Bool)
(declare-fun x536 () Int)
(declare-fun x3802 () Bool)
(declare-fun x2488 () Bool)
(declare-fun x875 () Bool)
(declare-fun x2089 () x678)
(declare-fun x2419 () Int)
(declare-fun x514 () Int)
(declare-fun x3145 () x678)
(declare-fun x2454 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x1279 () Int)
(declare-fun x4478 () Int)
(declare-fun x3292 () Bool)
(declare-fun x4578 () Bool)
(declare-fun x331 () Bool)
(declare-fun x2940 () Bool)
(declare-fun x3342 () Int)
(declare-fun x3484 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x4310 () Int)
(declare-fun x4871 () Bool)
(declare-fun x673 () x678)
(declare-fun x2858 () Bool)
(declare-fun x4537 () Int)
(declare-fun x2862 () Int)
(declare-fun x4773 () Int)
(declare-fun x1098 () Int)
(declare-fun x4675 () Int)
(declare-fun x2772 () Bool)
(declare-fun x4650 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1468 () Bool)
(declare-fun x2935 () Bool)
(declare-fun x4409 () Int)
(declare-fun x1179 () Int)
(declare-fun x2957 () Int)
(declare-fun x1226 () Int)
(declare-fun x4728 () Bool)
(declare-fun x4722 () Bool)
(declare-fun x1625 () x678)
(declare-fun x2817 () Bool)
(declare-fun x4441 () Bool)
(declare-fun x442 () Bool)
(declare-fun x258 () Bool)
(declare-fun x4346 () Bool)
(declare-fun x4852 () Bool)
(declare-fun x4217 () Bool)
(declare-fun x3322 () Bool)
(declare-fun x3021 () Bool)
(declare-fun x3656 (Int) Int)
(declare-fun x3787 (Int) Int)
(declare-fun x2984 () Bool)
(declare-fun x4193 () Bool)
(declare-fun x472 () x678)
(declare-fun x4892 () Bool)
(declare-fun x892 () x678)
(declare-fun x2714 () Int)
(declare-fun x1794 () x678)
(declare-fun x2650 () Bool)
(declare-fun x4688 () Bool)
(declare-fun x99 () x678)
(declare-fun x1404 () Int)
(declare-fun x764 () Int)
(declare-fun x2161 () Bool)
(declare-fun x90 () Int)
(declare-fun x887 () Bool)
(declare-fun x4554 () Int)
(declare-fun x486 () Bool)
(declare-fun x2247 () Int)
(declare-fun x3127 () x678)
(declare-fun x1924 () Int)
(declare-fun x3326 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x3268 () x678)
(declare-fun x570 () Bool)
(declare-fun x4344 () Int)
(declare-fun x3365 () Int)
(declare-fun x1107 () Int)
(declare-fun x3156 () Int)
(declare-fun x647 () x678)
(declare-fun x2249 () Int)
(declare-fun x1864 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x4866 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x2785 () Bool)
(declare-fun x1890 () Int)
(declare-fun x561 () Int)
(declare-fun x2890 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x4121 () Int)
(declare-fun x2568 () Bool)
(declare-fun x4760 () Bool)
(declare-fun x1521 () Int)
(declare-fun x3194 () Int)
(declare-fun x2318 () Int)
(declare-fun x2085 () Int)
(declare-fun x2882 () Bool)
(declare-fun x4057 () Int)
(declare-fun x4033 () Bool)
(declare-fun x1726 () Int)
(declare-fun x1310 () Bool)
(declare-fun x4592 (x678) Int)
(declare-fun x4877 () Int)
(declare-fun x4880 () Bool)
(declare-fun x11 () Bool)
(declare-fun x1551 () Int)
(declare-fun x2875 () Int)
(declare-fun x143 () Bool)
(declare-fun x3687 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x4891 () Bool)
(declare-fun x401 () x678)
(declare-fun x1442 () Int)
(declare-fun x3352 () Bool)
(declare-fun x865 () Int)
(declare-fun x150 () Bool)
(declare-fun x3968 () Bool)
(declare-fun x1061 () Int)
(declare-fun x4797 () Int)
(declare-fun x4606 () Bool)
(declare-fun x1668 () Int)
(declare-fun x1888 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x1804 () x678)
(declare-fun x1268 () Int)
(declare-fun x260 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x2732 () Int)
(declare-fun x3536 () Int)
(declare-fun x4267 () Bool)
(declare-fun x4115 () Int)
(declare-fun x947 () Int)
(declare-fun x1041 () Int)
(declare-fun x3078 () Bool)
(declare-fun x4566 () Int)
(declare-fun x1607 () Int)
(declare-fun x1120 () Bool)
(declare-fun x559 () Bool)
(declare-fun x3475 () Int)
(declare-fun x3550 () Bool)
(declare-fun x739 () Bool)
(declare-fun x512 () Bool)
(declare-fun x464 () Int)
(define-fun x350 ((x678 x678) (x766 Int)) x678 (ite ((_ is x1689) x678) (x1689 (x2113 x678) (+ x766 (x1905 x678))) (ite ((_ is x709) x678) (x709 (x1414 x678) (x3504 x678) (+ x766 (x200 x678))) (x2553 (+ (x4255 x678) x766)))))
(define-fun x3164 ((x3269 Int)) Int (ite (and (>= x3269 0) (< x3269 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3269 (- x3269 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1595 ((x3269 Int)) Int (ite (and (>= x3269 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x3269 0)) (+ x3269 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3269))
(define-fun x3087 ((x2264 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2264) (>= x2264 0)))
(define-fun x1963 ((x2264 Int)) Bool (and (= x2264 (x371 x2264 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x2264 (x371 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2264))))
(define-fun x4101 ((x2264 Int)) Bool (and (= (x371 0 x2264) 0) (= 0 (x371 x2264 0))))
(define-fun x1498 ((x2264 Int)) Bool (= x2264 (x371 x2264 x2264)))
(define-fun x487 ((x2264 Int)) Bool (and (x1963 x2264) (x1498 x2264) (x4101 x2264)))
(define-fun x685 ((x2264 Int) (x881 Int)) Bool (= (x371 x2264 x881) (x371 x881 x2264)))
(define-fun x4126 ((x2264 Int) (x881 Int)) Bool (and (=> (>= x881 0) (>= x881 (x371 x2264 x881))) (=> (>= x2264 0) (<= (x371 x2264 x881) x2264)) (<= 0 (x371 x2264 x881))))
(define-fun x4604 ((x2264 Int) (x881 Int)) Bool (and (x685 x2264 x881) (x4126 x2264 x881)))
(define-fun x2800 ((x2264 Int)) Bool (= (mod x2264 26959946667150639794667015087019630673637144422540572481103610249216) (x371 x2264 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1513 ((x2264 Int)) Bool (and (x2800 x2264) (x4604 x2264 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1367 ((x2264 Int)) Bool (= (mod x2264 1461501637330902918203684832716283019655932542976) (x371 x2264 1461501637330902918203684832716283019655932542975)))
(define-fun x3314 ((x2264 Int)) Bool (and (x4604 x2264 1461501637330902918203684832716283019655932542975) (x1367 x2264)))
(define-fun x1711 ((x2264 Int)) Bool (and (= (x1884 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2264) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1884 x2264 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x2061 ((x2264 Int)) Bool (and (= x2264 (x1884 x2264 0)) (= x2264 (x1884 0 x2264))))
(define-fun x468 ((x2264 Int)) Bool (= x2264 (x1884 x2264 x2264)))
(define-fun x3374 ((x2264 Int)) Bool (and (x2061 x2264) (x1711 x2264) (x468 x2264)))
(define-fun x1731 ((x2264 Int) (x881 Int)) Bool (= (x1884 x881 x2264) (x1884 x2264 x881)))
(define-fun x1594 ((x2264 Int) (x881 Int)) Bool (and (=> (>= x2264 0) (<= x2264 (x1884 x2264 x881))) (=> (<= 0 x881) (>= (x1884 x2264 x881) x881)) (>= (+ x2264 x881) (x1884 x2264 x881))))
(define-fun x691 ((x2264 Int) (x881 Int)) Bool (and (x1731 x2264 x881) (x1594 x2264 x881)))
(define-fun x35 ((x2264 Int)) Bool (= (+ (mod x2264 32) (x371 x2264 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x2264 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1816 ((x2264 Int)) Bool (and (x35 x2264) (x4604 x2264 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x4128 ((x2120 Int)) Int (ite (= x2120 128) (ite x4577 1 0) (x1054 x2120)))
(define-fun x4102 ((x2120 Int)) Int (ite (= 160 x2120) (ite x4268 1 0) (x4128 x2120)))
(define-fun x3730 ((x2120 Int)) Int (ite (= 192 x2120) (ite x2898 1 0) (x4102 x2120)))
(define-fun x3800 ((x2120 Int)) Int (ite (= x2120 224) (ite x3278 1 0) (x3730 x2120)))
(define-fun x474 ((x2120 Int)) Int (ite (= 256 x2120) (ite x982 1 0) (x3800 x2120)))
(define-fun x208 ((x2120 Int)) Int (ite (= x2120 288) (ite x2335 1 0) (x474 x2120)))
(define-fun x4527 ((x2120 Int)) Int (ite (= x2120 320) (ite x4800 1 0) (x208 x2120)))
(define-fun x2084 ((x2120 Int)) Int (ite (= x2120 352) (ite x4689 1 0) (x4527 x2120)))
(define-fun x3858 ((x2120 Int)) Int (ite (= x2120 420) x1305 (x2084 x2120)))
(define-fun x822 ((x2120 Int)) Int (ite (= x2120 384) 36 (x3858 x2120)))
(define-fun x816 ((x2120 Int)) Int (ite (= x2120 416) x19 (x822 x2120)))
(define-fun x52 ((x2120 x678)) Int (ite (= x2120 x2885) 0 (x2561 x2120)))
(define-fun x273 ((x2120 x678)) Int (ite (= x2885 x2120) x3136 (x2561 x2120)))
(define-fun x158 ((x2120 x678)) Int (ite x931 (x52 x2120) (x273 x2120)))
(define-fun x4450 ((x2120 Int)) Int (ite (= 452 x2120) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x816 x2120)))
(define-fun x2344 ((x2120 Int)) Int (ite (= x2120 452) x1001 (x4450 x2120)))
(define-fun x2466 ((x2120 Int)) Int (ite (= x2120 452) x835 (x4450 x2120)))
(define-fun x1264 ((x2120 Int)) Int (ite (= 452 x2120) x755 (x4450 x2120)))
(define-fun x1470 ((x2120 Int)) Int (ite x4307 (x2344 x2120) (ite x779 (x2466 x2120) (x1264 x2120))))
(define-fun x3201 ((x2120 Int)) Int (ite x2160 (x1470 x2120) (x816 x2120)))
(define-fun x3096 ((x2120 Int)) Int (ite (= x2120 x4158) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3201 x2120)))
(define-fun x1415 ((x2120 Int)) Int (ite (= x2120 x3483) x368 (x3096 x2120)))
(define-fun x4899 ((x2120 Int)) Int (ite (= x2453 x2120) x705 (x1415 x2120)))
(define-fun x98 ((x2120 Int)) Int (ite (= x2120 x3329) x2763 (x4899 x2120)))
(define-fun x1696 ((x2120 Int)) Int (ite (= x2120 0) 1 (x98 x2120)))
(define-fun x3703 ((x2120 Int)) Int (ite (= x2120 0) 1 (x98 x2120)))
(define-fun x1382 ((x2120 Int)) Int (ite (= x2120 0) 1 (x98 x2120)))
(define-fun x3054 ((x2120 Int)) Int (ite (= x2120 0) 1 (x98 x2120)))
(define-fun x4635 ((x2120 Int)) Int (ite x2893 (ite x2761 (x98 x2120) (x1696 x2120)) (ite x4365 (ite x2935 (x98 x2120) (x3703 x2120)) (ite x2443 (ite x212 (x98 x2120) (x1382 x2120)) (ite x1228 (x98 x2120) (x3054 x2120))))))
(define-fun x3996 ((x2120 Int)) Int (ite (= x4873 x2120) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x4635 x2120)))
(define-fun x2927 ((x2120 Int)) Int (ite (= x4873 x2120) x4902 (x3996 x2120)))
(define-fun x1362 ((x2120 Int)) Int (ite (= x4873 x2120) x3349 (x3996 x2120)))
(define-fun x4757 ((x2120 Int)) Int (ite (= x2120 x4873) x62 (x3996 x2120)))
(define-fun x4819 ((x2120 Int)) Int (ite x1310 (x2927 x2120) (ite x21 (x1362 x2120) (x4757 x2120))))
(define-fun x4808 ((x2120 Int)) Int (ite (= x3816 x2120) x1771 (x4819 x2120)))
(define-fun x4434 ((x2120 Int)) Int (ite x2995 (x4819 x2120) (x4808 x2120)))
(define-fun x243 ((x2120 Int)) Int (ite (= x3539 x2120) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x4434 x2120)))
(define-fun x2535 ((x2120 Int)) Int (ite (= 0 x2120) x4902 (x4092 x2120)))
(define-fun x4758 ((x2120 Int)) Int (ite (= x2120 x3539) x4902 (x243 x2120)))
(define-fun x4341 ((x2120 Int)) Int (ite (= x2120 0) x3349 (x4092 x2120)))
(define-fun x3943 ((x2120 Int)) Int (ite (= x2120 x3539) x3349 (x243 x2120)))
(define-fun x1745 ((x2120 Int)) Int (ite (= x2120 0) x62 (x4092 x2120)))
(define-fun x4157 ((x2120 Int)) Int (ite (= x2120 x3539) x62 (x243 x2120)))
(define-fun x2843 ((x2120 Int)) Int (ite x3008 (x4758 x2120) (ite x815 (x3943 x2120) (x4157 x2120))))
(define-fun x324 ((x2120 Int)) Int (ite (= x2120 x373) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x2843 x2120)))
(define-fun x2908 ((x2120 Int)) Int (ite (= x4058 x2120) x1627 (x324 x2120)))
(define-fun x1812 ((x2120 Int)) Int (ite (= x2120 x479) x1608 (x2908 x2120)))
(define-fun x1784 ((x2120 Int)) Int (ite (= x3200 x2120) x4263 (x1812 x2120)))
(define-fun x1053 ((x2120 Int)) Int (ite (and (>= x2120 x373) (> (+ 0 x373) x2120)) (x3656 (+ 0 (- x2120 x373))) (x1784 x2120)))
(define-fun x4380 ((x2120 Int)) Int (ite x332 (x2843 x2120) (x1053 x2120)))
(define-fun x659 ((x2120 Int)) Int (ite (= x373 x2120) x951 (x4380 x2120)))
(define-fun x4684 ((x2120 Int)) Int (ite (= x3835 x2120) x294 (x659 x2120)))
(define-fun x134 ((x2120 Int)) Int (ite x3901 (x4684 x2120) (x2843 x2120)))
(define-fun x929 ((x2120 Int)) Int (ite x246 (x4434 x2120) (ite x3711 (x134 x2120) (x4434 x2120))))
(define-fun x2261 ((x2120 x678)) Int (ite (= x2120 x3029) x3803 (x4352 x2120)))
(define-fun x4739 ((x2120 x678)) Int (ite x246 (x4352 x2120) (ite x2738 (x4352 x2120) (x2261 x2120))))
(define-fun x2849 ((x2120 x678)) Int (ite (= x3514 x2120) x1227 (x3455 x2120)))
(define-fun x2202 ((x2120 x678)) Int (ite (= x414 x2120) x3874 (x1108 x2120)))
(define-fun x4639 ((x2120 Int)) Int (ite (= x514 x2120) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x929 x2120)))
(define-fun x439 ((x2120 Int)) Int (ite (= x1076 x2120) x705 (x4639 x2120)))
(define-fun x633 ((x2120 Int)) Int (ite (= 0 x2120) x899 (x567 x2120)))
(define-fun x1349 ((x2120 Int)) Int (ite (= x514 x2120) x899 (x439 x2120)))
(define-fun x4717 ((x2120 Int)) Int (ite (= x2120 0) x1920 (x567 x2120)))
(define-fun x4637 ((x2120 Int)) Int (ite (= x2120 x514) x1920 (x439 x2120)))
(define-fun x2996 ((x2120 Int)) Int (ite (= x2120 0) x467 (x567 x2120)))
(define-fun x1855 ((x2120 Int)) Int (ite (= x514 x2120) x467 (x439 x2120)))
(define-fun x3769 ((x2120 Int)) Int (ite x872 (ite x1454 (x439 x2120) (x1349 x2120)) (ite x2010 (ite x4129 (x439 x2120) (x4637 x2120)) (ite x2619 (x439 x2120) (x1855 x2120)))))
(define-fun x2608 ((x2120 Int)) Int (ite (= x2000 x2120) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x3769 x2120)))
(define-fun x203 ((x2120 Int)) Int (ite (= x2120 x1111) x1305 (x2608 x2120)))
(define-fun x1257 ((x2120 Int)) Int (ite (= x903 x2120) x3461 (x203 x2120)))
(define-fun x4433 ((x2120 Int)) Int (ite (= x2120 0) 1 (x1257 x2120)))
(define-fun x2867 ((x2120 Int)) Int (ite x1505 (x1257 x2120) (x4433 x2120)))
(define-fun x973 ((x2120 Int)) Int (ite (= x2000 x2120) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x2867 x2120)))
(define-fun x871 ((x2120 Int)) Int (ite (= x2120 x2512) x3461 (x973 x2120)))
(define-fun x1623 ((x2120 Int)) Int (ite (= x2000 x2120) 0 (x871 x2120)))
(define-fun x579 ((x2120 Int)) Int (ite (= x2000 x2120) 0 (x871 x2120)))
(define-fun x2188 ((x2120 Int)) Int (ite (= x2000 x2120) 0 (x871 x2120)))
(define-fun x3756 ((x2120 Int)) Int (ite x176 (ite x4256 (x871 x2120) (x1623 x2120)) (ite x3301 (ite x3323 (x871 x2120) (x579 x2120)) (ite x3671 (x871 x2120) (x2188 x2120)))))
(define-fun x433 ((x2120 Int)) Int (ite (= x2120 x2000) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x3769 x2120)))
(define-fun x3031 ((x2120 Int)) Int (ite (= x4627 x2120) x3461 (x433 x2120)))
(define-fun x4304 ((x2120 Int)) Int (ite (and (<= x2000 x2120) (> (+ x2000 0) x2120)) (x248 (+ (- x2120 x2000) 0)) (x3031 x2120)))
(define-fun x2639 ((x2120 Int)) Int (ite (= x2000 x2120) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x4304 x2120)))
(define-fun x424 ((x2120 Int)) Int (ite (= x2000 x2120) x1973 (x2639 x2120)))
(define-fun x2955 ((x2120 Int)) Int (ite x1154 (x2639 x2120) (x424 x2120)))
(define-fun x2655 ((x2120 Int)) Int (ite (= x2120 x2000) x4696 (x2639 x2120)))
(define-fun x3319 ((x2120 Int)) Int (ite x1093 (x2639 x2120) (x2655 x2120)))
(define-fun x4713 ((x2120 Int)) Int (ite (= x2120 x2000) x1592 (x2639 x2120)))
(define-fun x4502 ((x2120 Int)) Int (ite x593 (x2639 x2120) (x4713 x2120)))
(define-fun x4037 ((x2120 Int)) Int (ite x1542 (x2955 x2120) (ite x4595 (x3319 x2120) (x4502 x2120))))
(define-fun x1429 ((x2120 Int)) Int (ite x4069 (x3769 x2120) (ite x4548 (x3756 x2120) (x4037 x2120))))
(define-fun x3247 ((x2120 Int)) Int (ite (= x1138 x2120) x3659 (x1429 x2120)))
(define-fun x838 ((x2120 Int)) Int (ite (= x2120 x3069) x4258 (x3247 x2120)))
(define-fun x430 ((x2120 Int)) Int (ite x3243 (x929 x2120) (x838 x2120)))
(define-fun x1159 ((x2120 x678)) Int (ite (= x2120 x1794) x658 (x4318 x2120)))
(define-fun x3651 ((x2120 x678)) Int (ite x1939 (x4318 x2120) (ite x2696 (x4318 x2120) (ite x2228 (x4318 x2120) (ite x4387 (x4318 x2120) (ite x2062 (x1159 x2120) (x4318 x2120)))))))
(define-fun x4526 ((x2120 x678)) Int (ite (= x2120 x3043) x4159 (x1159 x2120)))
(define-fun x2452 ((x2120 x678)) Int (ite x2893 (x4318 x2120) (ite x4365 (ite x2935 (x3651 x2120) (x4526 x2120)) (x4318 x2120))))
(define-fun x2287 ((x2120 x678)) Int (ite (= x2120 x147) x1007 (x2452 x2120)))
(define-fun x1634 ((x2120 x678)) Int (ite x644 (x2452 x2120) (ite x4133 (x2452 x2120) (ite x2791 (x2452 x2120) (ite x2034 (x2452 x2120) (ite x954 (x2287 x2120) (x2452 x2120)))))))
(define-fun x1169 ((x2120 x678)) Int (ite (= x2120 x2315) x1473 (x2287 x2120)))
(define-fun x1841 ((x2120 x678)) Int (ite x3875 (x2452 x2120) (ite x144 (ite x1765 (x1634 x2120) (x1169 x2120)) (x2452 x2120))))
(define-fun x1478 ((x2120 x678)) Int (ite x1174 (x1841 x2120) (ite x839 (x2452 x2120) (ite x3061 (x2452 x2120) (ite x2307 (x2452 x2120) (ite x1764 (x1841 x2120) (x2452 x2120)))))))
(define-fun x1934 ((x2120 x678)) Int (ite x4256 (x1478 x2120) (x1841 x2120)))
(define-fun x562 ((x2120 x678)) Int (ite (= x2120 x1883) x3365 (x2452 x2120)))
(define-fun x508 ((x2120 x678)) Int (ite x2366 (x2452 x2120) (ite x1875 (x2452 x2120) (ite x3010 (x2452 x2120) (ite x2163 (x2452 x2120) (ite x3559 (x562 x2120) (x2452 x2120)))))))
(define-fun x2284 ((x2120 x678)) Int (ite (= x2120 x4044) x3975 (x562 x2120)))
(define-fun x2860 ((x2120 x678)) Int (ite x790 (x2452 x2120) (ite x855 (ite x2067 (x508 x2120) (x2284 x2120)) (x2452 x2120))))
(define-fun x1800 ((x2120 x678)) Int (ite x4460 (x2860 x2120) (ite x297 (x2452 x2120) (ite x1090 (x2452 x2120) (ite x331 (x2452 x2120) (ite x3758 (x2860 x2120) (x2452 x2120)))))))
(define-fun x1677 ((x2120 x678)) Int (ite x3323 (x1800 x2120) (x2860 x2120)))
(define-fun x4662 ((x2120 x678)) Int (ite (= x3013 x2120) x762 (x2452 x2120)))
(define-fun x2852 ((x2120 x678)) Int (ite x3384 (x2452 x2120) (ite x3286 (x2452 x2120) (ite x2446 (x2452 x2120) (ite x4759 (x2452 x2120) (ite x423 (x4662 x2120) (x2452 x2120)))))))
(define-fun x1837 ((x2120 x678)) Int (ite (= x2663 x2120) x1615 (x4662 x2120)))
(define-fun x760 ((x2120 x678)) Int (ite x4398 (x2452 x2120) (ite x4632 (ite x699 (x2852 x2120) (x1837 x2120)) (x2452 x2120))))
(define-fun x1584 ((x2120 x678)) Int (ite x1231 (x760 x2120) (ite x4211 (x2452 x2120) (ite x1006 (x2452 x2120) (ite x3523 (x2452 x2120) (ite x4487 (x760 x2120) (x2452 x2120)))))))
(define-fun x2899 ((x2120 x678)) Int (ite x3671 (x1584 x2120) (x760 x2120)))
(define-fun x2563 ((x2120 x678)) Int (ite x176 (x1934 x2120) (ite x3301 (x1677 x2120) (x2899 x2120))))
(define-fun x4192 ((x2120 x678)) Int (ite (= x2120 x3011) x69 (x2452 x2120)))
(define-fun x3540 ((x2120 x678)) Int (ite x1214 (x2452 x2120) (ite x3973 (x2452 x2120) (ite x3653 (x2452 x2120) (ite x2018 (x2452 x2120) (ite x2109 (x4192 x2120) (x2452 x2120)))))))
(define-fun x3429 ((x2120 x678)) Int (ite (= x2120 x1335) x257 (x4192 x2120)))
(define-fun x1683 ((x2120 x678)) Int (ite x4552 (x2452 x2120) (ite x27 (ite x435 (x3540 x2120) (x3429 x2120)) (x2452 x2120))))
(define-fun x2172 ((x2120 x678)) Int (ite x741 (x1683 x2120) (ite x1752 (x2452 x2120) (ite x3859 (x2452 x2120) (ite x4743 (x1683 x2120) (x2452 x2120))))))
(define-fun x476 ((x2120 x678)) Int (ite x1154 (x2172 x2120) (x1683 x2120)))
(define-fun x2531 ((x2120 x678)) Int (ite (= x1395 x2120) x2735 (x2452 x2120)))
(define-fun x1411 ((x2120 x678)) Int (ite x3959 (x2452 x2120) (ite x4060 (x2452 x2120) (ite x4799 (x2452 x2120) (ite x774 (x2452 x2120) (ite x2977 (x2531 x2120) (x2452 x2120)))))))
(define-fun x1251 ((x2120 x678)) Int (ite (= x3827 x2120) x3780 (x2531 x2120)))
(define-fun x4680 ((x2120 x678)) Int (ite x1492 (x2452 x2120) (ite x4046 (ite x4497 (x1411 x2120) (x1251 x2120)) (x2452 x2120))))
(define-fun x247 ((x2120 x678)) Int (ite x2727 (x4680 x2120) (ite x1286 (x2452 x2120) (ite x3192 (x2452 x2120) (ite x3981 (x4680 x2120) (x2452 x2120))))))
(define-fun x2220 ((x2120 x678)) Int (ite x1093 (x247 x2120) (x4680 x2120)))
(define-fun x3887 ((x2120 x678)) Int (ite (= x4166 x2120) x2191 (x2452 x2120)))
(define-fun x4903 ((x2120 x678)) Int (ite x1758 (x2452 x2120) (ite x1974 (x2452 x2120) (ite x1436 (x2452 x2120) (ite x1238 (x2452 x2120) (ite x3387 (x3887 x2120) (x2452 x2120)))))))
(define-fun x1621 ((x2120 x678)) Int (ite (= x2120 x1317) x2245 (x3887 x2120)))
(define-fun x3982 ((x2120 x678)) Int (ite x2980 (x2452 x2120) (ite x2432 (ite x1976 (x4903 x2120) (x1621 x2120)) (x2452 x2120))))
(define-fun x461 ((x2120 x678)) Int (ite x1453 (x3982 x2120) (ite x3582 (x2452 x2120) (ite x2515 (x2452 x2120) (ite x4598 (x3982 x2120) (x2452 x2120))))))
(define-fun x1139 ((x2120 x678)) Int (ite x593 (x461 x2120) (x3982 x2120)))
(define-fun x3026 ((x2120 x678)) Int (ite x1542 (x476 x2120) (ite x4595 (x2220 x2120) (x1139 x2120))))
(define-fun x1803 ((x2120 x678)) Int (ite x4548 (x2563 x2120) (x3026 x2120)))
(define-fun x1722 ((x2120 x678)) Int (ite x3243 (x2452 x2120) (ite x4069 (x2452 x2120) (x1803 x2120))))
(define-fun x3558 ((x2120 x678)) Int (ite (= x830 x2120) x861 (x2673 x2120)))
(define-fun x4162 ((x2120 x678)) Int (ite (= x4476 x2120) x1416 (x3558 x2120)))
(define-fun x1431 ((x2120 x678)) Int (ite x3157 (x4162 x2120) (ite x2678 (x3558 x2120) (ite x887 (x2673 x2120) (ite x2080 (x2673 x2120) (ite x3274 (x2673 x2120) (ite x1895 (x2673 x2120) (ite x491 (x3558 x2120) (ite x797 (x4162 x2120) (x2673 x2120))))))))))
(define-fun x2411 ((x2120 x678)) Int (ite x2893 (ite x2761 (x1431 x2120) (x4162 x2120)) (x2673 x2120)))
(define-fun x3905 ((x2120 x678)) Int (ite (= x2120 x1614) x1215 (x2411 x2120)))
(define-fun x753 ((x2120 x678)) Int (ite (= x2120 x3986) x2197 (x3905 x2120)))
(define-fun x3862 ((x2120 x678)) Int (ite x1944 (x753 x2120) (ite x532 (x3905 x2120) (ite x2171 (x2411 x2120) (ite x2402 (x2411 x2120) (ite x2324 (x2411 x2120) (ite x2589 (x2411 x2120) (ite x3147 (x3905 x2120) (ite x4561 (x753 x2120) (x2411 x2120))))))))))
(define-fun x1926 ((x2120 x678)) Int (ite x3875 (ite x3920 (x3862 x2120) (x753 x2120)) (x2411 x2120)))
(define-fun x4114 ((x2120 x678)) Int (ite x1174 (x1926 x2120) (ite x839 (x2411 x2120) (ite x3061 (x2411 x2120) (ite x2307 (x2411 x2120) (ite x1764 (x1926 x2120) (x2411 x2120)))))))
(define-fun x1105 ((x2120 x678)) Int (ite x4256 (x4114 x2120) (x1926 x2120)))
(define-fun x2504 ((x2120 x678)) Int (ite (= x1962 x2120) x54 (x2411 x2120)))
(define-fun x4574 ((x2120 x678)) Int (ite (= x2120 x482) x2892 (x2504 x2120)))
(define-fun x713 ((x2120 x678)) Int (ite x4084 (x4574 x2120) (ite x2292 (x2504 x2120) (ite x805 (x2411 x2120) (ite x80 (x2411 x2120) (ite x2638 (x2411 x2120) (ite x3121 (x2411 x2120) (ite x4793 (x2504 x2120) (ite x976 (x4574 x2120) (x2411 x2120))))))))))
(define-fun x1304 ((x2120 x678)) Int (ite x790 (ite x2924 (x713 x2120) (x4574 x2120)) (x2411 x2120)))
(define-fun x792 ((x2120 x678)) Int (ite x4460 (x1304 x2120) (ite x297 (x2411 x2120) (ite x1090 (x2411 x2120) (ite x331 (x2411 x2120) (ite x3758 (x1304 x2120) (x2411 x2120)))))))
(define-fun x3772 ((x2120 x678)) Int (ite x3323 (x792 x2120) (x1304 x2120)))
(define-fun x4602 ((x2120 x678)) Int (ite (= x4900 x2120) x4499 (x2411 x2120)))
(define-fun x1988 ((x2120 x678)) Int (ite (= x1198 x2120) x2461 (x4602 x2120)))
(define-fun x1064 ((x2120 x678)) Int (ite x1337 (x1988 x2120) (ite x3620 (x4602 x2120) (ite x1990 (x2411 x2120) (ite x1066 (x2411 x2120) (ite x703 (x2411 x2120) (ite x2408 (x2411 x2120) (ite x1799 (x4602 x2120) (ite x1002 (x1988 x2120) (x2411 x2120))))))))))
(define-fun x2956 ((x2120 x678)) Int (ite x4398 (ite x1520 (x1064 x2120) (x1988 x2120)) (x2411 x2120)))
(define-fun x925 ((x2120 x678)) Int (ite x1231 (x2956 x2120) (ite x4211 (x2411 x2120) (ite x1006 (x2411 x2120) (ite x3523 (x2411 x2120) (ite x4487 (x2956 x2120) (x2411 x2120)))))))
(define-fun x1320 ((x2120 x678)) Int (ite x3671 (x925 x2120) (x2956 x2120)))
(define-fun x3385 ((x2120 x678)) Int (ite x176 (x1105 x2120) (ite x3301 (x3772 x2120) (x1320 x2120))))
(define-fun x4259 ((x2120 x678)) Int (ite (= x660 x2120) x1854 (x2411 x2120)))
(define-fun x3760 ((x2120 x678)) Int (ite (= x2423 x2120) x405 (x4259 x2120)))
(define-fun x827 ((x2120 x678)) Int (ite x859 (x3760 x2120) (ite x3951 (x4259 x2120) (ite x2066 (x2411 x2120) (ite x4399 (x2411 x2120) (ite x3401 (x2411 x2120) (ite x2934 (x2411 x2120) (ite x1672 (x4259 x2120) (ite x2454 (x3760 x2120) (x2411 x2120))))))))))
(define-fun x4015 ((x2120 x678)) Int (ite x4552 (ite x1737 (x827 x2120) (x3760 x2120)) (x2411 x2120)))
(define-fun x2972 ((x2120 x678)) Int (ite x741 (x4015 x2120) (ite x1752 (x2411 x2120) (ite x3859 (x2411 x2120) (ite x4743 (x4015 x2120) (x2411 x2120))))))
(define-fun x2013 ((x2120 x678)) Int (ite x1154 (x2972 x2120) (x4015 x2120)))
(define-fun x1686 ((x2120 x678)) Int (ite (= x1073 x2120) x3430 (x2411 x2120)))
(define-fun x2272 ((x2120 x678)) Int (ite (= x2120 x4894) x2596 (x1686 x2120)))
(define-fun x2426 ((x2120 x678)) Int (ite x260 (x2272 x2120) (ite x492 (x1686 x2120) (ite x4179 (x2411 x2120) (ite x3496 (x2411 x2120) (ite x2969 (x2411 x2120) (ite x2210 (x2411 x2120) (ite x4584 (x1686 x2120) (ite x1013 (x2272 x2120) (x2411 x2120))))))))))
(define-fun x455 ((x2120 x678)) Int (ite x1492 (ite x4629 (x2426 x2120) (x2272 x2120)) (x2411 x2120)))
(define-fun x3740 ((x2120 x678)) Int (ite x2727 (x455 x2120) (ite x1286 (x2411 x2120) (ite x3192 (x2411 x2120) (ite x3981 (x455 x2120) (x2411 x2120))))))
(define-fun x2012 ((x2120 x678)) Int (ite x1093 (x3740 x2120) (x455 x2120)))
(define-fun x3141 ((x2120 x678)) Int (ite (= x4774 x2120) x1560 (x2411 x2120)))
(define-fun x1015 ((x2120 x678)) Int (ite (= x2120 x2819) x1661 (x3141 x2120)))
(define-fun x4490 ((x2120 x678)) Int (ite x2161 (x1015 x2120) (ite x786 (x3141 x2120) (ite x3614 (x2411 x2120) (ite x2557 (x2411 x2120) (ite x4542 (x2411 x2120) (ite x2101 (x2411 x2120) (ite x2397 (x3141 x2120) (ite x551 (x1015 x2120) (x2411 x2120))))))))))
(define-fun x3053 ((x2120 x678)) Int (ite x2980 (ite x4281 (x4490 x2120) (x1015 x2120)) (x2411 x2120)))
(define-fun x3826 ((x2120 x678)) Int (ite x1453 (x3053 x2120) (ite x3582 (x2411 x2120) (ite x2515 (x2411 x2120) (ite x4598 (x3053 x2120) (x2411 x2120))))))
(define-fun x1809 ((x2120 x678)) Int (ite x593 (x3826 x2120) (x3053 x2120)))
(define-fun x2032 ((x2120 x678)) Int (ite x1542 (x2013 x2120) (ite x4595 (x2012 x2120) (x1809 x2120))))
(define-fun x3199 ((x2120 x678)) Int (ite x4548 (x3385 x2120) (x2032 x2120)))
(define-fun x3776 ((x2120 x678)) Int (ite x3243 (x2411 x2120) (ite x4069 (x2411 x2120) (x3199 x2120))))
(define-fun x1708 ((x2120 x678)) Int (ite (= x1805 x2120) x4801 (x4612 x2120)))
(define-fun x3759 ((x2120 x678)) Int (ite x2893 (ite x2761 (x4612 x2120) (x1708 x2120)) (x4612 x2120)))
(define-fun x249 ((x2120 x678)) Int (ite (= x1659 x2120) x4236 (x3759 x2120)))
(define-fun x2023 ((x2120 x678)) Int (ite x1505 (x3759 x2120) (x249 x2120)))
(define-fun x3012 ((x2120 x678)) Int (ite (= x2120 x4782) x1397 (x2023 x2120)))
(define-fun x121 ((x2120 x678)) Int (ite x3875 (ite x3920 (x2023 x2120) (x3012 x2120)) (x2023 x2120)))
(define-fun x4463 ((x2120 x678)) Int (ite x1174 (x121 x2120) (ite x839 (x2023 x2120) (ite x3061 (x2023 x2120) (ite x2307 (x2023 x2120) (ite x1764 (x121 x2120) (x2023 x2120)))))))
(define-fun x629 ((x2120 x678)) Int (ite x4256 (x4463 x2120) (x121 x2120)))
(define-fun x2391 ((x2120 x678)) Int (ite (= x2120 x3917) x386 (x2023 x2120)))
(define-fun x2035 ((x2120 x678)) Int (ite x790 (ite x2924 (x2023 x2120) (x2391 x2120)) (x2023 x2120)))
(define-fun x2894 ((x2120 x678)) Int (ite x4460 (x2035 x2120) (ite x297 (x2023 x2120) (ite x1090 (x2023 x2120) (ite x331 (x2023 x2120) (ite x3758 (x2035 x2120) (x2023 x2120)))))))
(define-fun x3820 ((x2120 x678)) Int (ite x3323 (x2894 x2120) (x2035 x2120)))
(define-fun x594 ((x2120 x678)) Int (ite (= x3398 x2120) x1422 (x2023 x2120)))
(define-fun x1975 ((x2120 x678)) Int (ite x4398 (ite x1520 (x2023 x2120) (x594 x2120)) (x2023 x2120)))
(define-fun x3180 ((x2120 x678)) Int (ite x1231 (x1975 x2120) (ite x4211 (x2023 x2120) (ite x1006 (x2023 x2120) (ite x3523 (x2023 x2120) (ite x4487 (x1975 x2120) (x2023 x2120)))))))
(define-fun x4079 ((x2120 x678)) Int (ite x3671 (x3180 x2120) (x1975 x2120)))
(define-fun x2722 ((x2120 x678)) Int (ite x176 (x629 x2120) (ite x3301 (x3820 x2120) (x4079 x2120))))
(define-fun x1485 ((x2120 x678)) Int (ite (= x1716 x2120) x4603 (x3759 x2120)))
(define-fun x276 ((x2120 x678)) Int (ite x4552 (ite x1737 (x3759 x2120) (x1485 x2120)) (x3759 x2120)))
(define-fun x3439 ((x2120 x678)) Int (ite x741 (x276 x2120) (ite x1752 (x3759 x2120) (ite x3859 (x3759 x2120) (ite x4743 (x276 x2120) (x3759 x2120))))))
(define-fun x1576 ((x2120 x678)) Int (ite x1154 (x3439 x2120) (x276 x2120)))
(define-fun x2813 ((x2120 x678)) Int (ite (= x2120 x3650) x3212 (x3759 x2120)))
(define-fun x3206 ((x2120 x678)) Int (ite x1492 (ite x4629 (x3759 x2120) (x2813 x2120)) (x3759 x2120)))
(define-fun x1244 ((x2120 x678)) Int (ite x2727 (x3206 x2120) (ite x1286 (x3759 x2120) (ite x3192 (x3759 x2120) (ite x3981 (x3206 x2120) (x3759 x2120))))))
(define-fun x3521 ((x2120 x678)) Int (ite x1093 (x1244 x2120) (x3206 x2120)))
(define-fun x2914 ((x2120 x678)) Int (ite (= x545 x2120) x4 (x3759 x2120)))
(define-fun x1600 ((x2120 x678)) Int (ite x2980 (ite x4281 (x3759 x2120) (x2914 x2120)) (x3759 x2120)))
(define-fun x1476 ((x2120 x678)) Int (ite x1453 (x1600 x2120) (ite x3582 (x3759 x2120) (ite x2515 (x3759 x2120) (ite x4598 (x1600 x2120) (x3759 x2120))))))
(define-fun x840 ((x2120 x678)) Int (ite x593 (x1476 x2120) (x1600 x2120)))
(define-fun x803 ((x2120 x678)) Int (ite x1542 (x1576 x2120) (ite x4595 (x3521 x2120) (x840 x2120))))
(define-fun x3595 ((x2120 x678)) Int (ite x4548 (x2722 x2120) (x803 x2120)))
(define-fun x2039 ((x2120 x678)) Int (ite x3243 (x3759 x2120) (ite x4069 (x3759 x2120) (x3595 x2120))))
(define-fun x1406 ((x2120 x678)) Int (ite (= x693 x2120) x3929 (x1425 x2120)))
(define-fun x534 ((x2120 x678)) Int (ite x1705 (x1425 x2120) (ite x2691 (x1425 x2120) (ite x3017 (x1425 x2120) (ite x221 (x1425 x2120) (ite x3657 (x1406 x2120) (x1425 x2120)))))))
(define-fun x2767 ((x2120 x678)) Int (ite (= x2120 x4699) x3242 (x1406 x2120)))
(define-fun x715 ((x2120 x678)) Int (ite x2893 (x1425 x2120) (ite x4365 (x1425 x2120) (ite x2443 (ite x212 (x534 x2120) (x2767 x2120)) (x1425 x2120)))))
(define-fun x2845 ((x2120 x678)) Int (ite (= x2647 x2120) x1591 (x715 x2120)))
(define-fun x4382 ((x2120 x678)) Int (ite x2361 (x715 x2120) (ite x1396 (x715 x2120) (ite x1070 (x715 x2120) (ite x4580 (x715 x2120) (ite x796 (x2845 x2120) (x715 x2120)))))))
(define-fun x3585 ((x2120 x678)) Int (ite (= x2120 x472) x2278 (x2845 x2120)))
(define-fun x913 ((x2120 x678)) Int (ite x3875 (x715 x2120) (ite x144 (x715 x2120) (ite x427 (ite x4023 (x4382 x2120) (x3585 x2120)) (x715 x2120)))))
(define-fun x1223 ((x2120 x678)) Int (ite x1174 (x913 x2120) (ite x839 (x715 x2120) (ite x3061 (x715 x2120) (ite x2307 (x715 x2120) (ite x1764 (x913 x2120) (x715 x2120)))))))
(define-fun x2248 ((x2120 x678)) Int (ite x4256 (x1223 x2120) (x913 x2120)))
(define-fun x1371 ((x2120 x678)) Int (ite (= x1135 x2120) x3795 (x715 x2120)))
(define-fun x4855 ((x2120 x678)) Int (ite x4446 (x715 x2120) (ite x2450 (x715 x2120) (ite x3338 (x715 x2120) (ite x648 (x715 x2120) (ite x3175 (x1371 x2120) (x715 x2120)))))))
(define-fun x4697 ((x2120 x678)) Int (ite (= x1628 x2120) x541 (x1371 x2120)))
(define-fun x4600 ((x2120 x678)) Int (ite x790 (x715 x2120) (ite x855 (x715 x2120) (ite x882 (ite x385 (x4855 x2120) (x4697 x2120)) (x715 x2120)))))
(define-fun x2991 ((x2120 x678)) Int (ite x4460 (x4600 x2120) (ite x297 (x715 x2120) (ite x1090 (x715 x2120) (ite x331 (x715 x2120) (ite x3758 (x4600 x2120) (x715 x2120)))))))
(define-fun x2106 ((x2120 x678)) Int (ite x3323 (x2991 x2120) (x4600 x2120)))
(define-fun x2945 ((x2120 x678)) Int (ite (= x2120 x1670) x2569 (x715 x2120)))
(define-fun x2215 ((x2120 x678)) Int (ite x3720 (x715 x2120) (ite x798 (x715 x2120) (ite x448 (x715 x2120) (ite x3576 (x715 x2120) (ite x2982 (x2945 x2120) (x715 x2120)))))))
(define-fun x3034 ((x2120 x678)) Int (ite (= x2120 x3169) x4555 (x2945 x2120)))
(define-fun x1123 ((x2120 x678)) Int (ite x4398 (x715 x2120) (ite x4632 (x715 x2120) (ite x4817 (ite x1721 (x2215 x2120) (x3034 x2120)) (x715 x2120)))))
(define-fun x638 ((x2120 x678)) Int (ite x1231 (x1123 x2120) (ite x4211 (x715 x2120) (ite x1006 (x715 x2120) (ite x3523 (x715 x2120) (ite x4487 (x1123 x2120) (x715 x2120)))))))
(define-fun x410 ((x2120 x678)) Int (ite x3671 (x638 x2120) (x1123 x2120)))
(define-fun x251 ((x2120 x678)) Int (ite x176 (x2248 x2120) (ite x3301 (x2106 x2120) (x410 x2120))))
(define-fun x1378 ((x2120 x678)) Int (ite (= x4309 x2120) x3501 (x715 x2120)))
(define-fun x4195 ((x2120 x678)) Int (ite x110 (x715 x2120) (ite x1753 (x715 x2120) (ite x3705 (x715 x2120) (ite x2951 (x715 x2120) (ite x4148 (x1378 x2120) (x715 x2120)))))))
(define-fun x1632 ((x2120 x678)) Int (ite (= x4066 x2120) x906 (x1378 x2120)))
(define-fun x1048 ((x2120 x678)) Int (ite x4552 (x715 x2120) (ite x27 (x715 x2120) (ite x4895 (ite x686 (x4195 x2120) (x1632 x2120)) (x715 x2120)))))
(define-fun x3641 ((x2120 x678)) Int (ite x741 (x1048 x2120) (ite x1752 (x715 x2120) (ite x3859 (x715 x2120) (ite x4743 (x1048 x2120) (x715 x2120))))))
(define-fun x308 ((x2120 x678)) Int (ite x1154 (x3641 x2120) (x1048 x2120)))
(define-fun x3203 ((x2120 x678)) Int (ite (= x1163 x2120) x3921 (x715 x2120)))
(define-fun x2665 ((x2120 x678)) Int (ite x2705 (x715 x2120) (ite x1949 (x715 x2120) (ite x3802 (x715 x2120) (ite x2369 (x715 x2120) (ite x2317 (x3203 x2120) (x715 x2120)))))))
(define-fun x919 ((x2120 x678)) Int (ite (= x2919 x2120) x2598 (x3203 x2120)))
(define-fun x4172 ((x2120 x678)) Int (ite x1492 (x715 x2120) (ite x4046 (x715 x2120) (ite x4462 (ite x336 (x2665 x2120) (x919 x2120)) (x715 x2120)))))
(define-fun x4642 ((x2120 x678)) Int (ite x2727 (x4172 x2120) (ite x1286 (x715 x2120) (ite x3192 (x715 x2120) (ite x3981 (x4172 x2120) (x715 x2120))))))
(define-fun x3046 ((x2120 x678)) Int (ite x1093 (x4642 x2120) (x4172 x2120)))
(define-fun x1842 ((x2120 x678)) Int (ite (= x169 x2120) x4797 (x715 x2120)))
(define-fun x869 ((x2120 x678)) Int (ite x3254 (x715 x2120) (ite x3038 (x715 x2120) (ite x2947 (x715 x2120) (ite x2858 (x715 x2120) (ite x4630 (x1842 x2120) (x715 x2120)))))))
(define-fun x4053 ((x2120 x678)) Int (ite (= x2169 x2120) x493 (x1842 x2120)))
(define-fun x1925 ((x2120 x678)) Int (ite x2980 (x715 x2120) (ite x2432 (x715 x2120) (ite x238 (ite x444 (x869 x2120) (x4053 x2120)) (x715 x2120)))))
(define-fun x117 ((x2120 x678)) Int (ite x1453 (x1925 x2120) (ite x3582 (x715 x2120) (ite x2515 (x715 x2120) (ite x4598 (x1925 x2120) (x715 x2120))))))
(define-fun x4385 ((x2120 x678)) Int (ite x593 (x117 x2120) (x1925 x2120)))
(define-fun x3252 ((x2120 x678)) Int (ite x1542 (x308 x2120) (ite x4595 (x3046 x2120) (x4385 x2120))))
(define-fun x2799 ((x2120 x678)) Int (ite x4548 (x251 x2120) (x3252 x2120)))
(define-fun x1040 ((x2120 x678)) Int (ite x3243 (x715 x2120) (ite x4069 (x715 x2120) (x2799 x2120))))
(define-fun x2709 ((x2120 x678)) Int (ite (= x2120 (x1970 x705)) x1129 (x4613 x2120)))
(define-fun x2429 ((x2120 x678)) Int (ite (= (x1970 x3919) x2120) x2155 (x2709 x2120)))
(define-fun x3937 ((x2120 x678)) Int (ite (= x2120 (x1970 x3919)) x3872 (x2429 x2120)))
(define-fun x1723 ((x2120 x678)) Int (ite (= (x1970 x705) x2120) x4652 (x3937 x2120)))
(define-fun x1777 ((x2120 x678)) Int (ite x1282 (x2429 x2120) (x1723 x2120)))
(define-fun x1852 ((x2120 x678)) Int (ite x4548 (x4613 x2120) (x1777 x2120)))
(define-fun x2484 ((x2120 x678)) Int (ite x3243 (x4613 x2120) (ite x4069 (x4613 x2120) (x1852 x2120))))
(define-fun x916 ((x2120 x678)) Int (ite (= x1314 x2120) x3536 (x4824 x2120)))
(define-fun x2232 ((x2120 x678)) Int (ite x2170 (x4824 x2120) (ite x3116 (x4824 x2120) (ite x3853 (x4824 x2120) (ite x148 (x4824 x2120) (ite x560 (x916 x2120) (x4824 x2120)))))))
(define-fun x4353 ((x2120 x678)) Int (ite (= x8 x2120) x3348 (x916 x2120)))
(define-fun x588 ((x2120 x678)) Int (ite x2893 (x4824 x2120) (ite x4365 (x4824 x2120) (ite x2443 (x4824 x2120) (ite x1228 (x2232 x2120) (x4353 x2120))))))
(define-fun x3867 ((x2120 x678)) Int (ite (= x88 x2120) x2554 (x588 x2120)))
(define-fun x4107 ((x2120 x678)) Int (ite x2329 (x588 x2120) (ite x3522 (x588 x2120) (ite x1894 (x588 x2120) (ite x3300 (x588 x2120) (ite x2599 (x3867 x2120) (x588 x2120)))))))
(define-fun x635 ((x2120 x678)) Int (ite (= x2120 x2963) x854 (x3867 x2120)))
(define-fun x4041 ((x2120 x678)) Int (ite x3875 (x588 x2120) (ite x144 (x588 x2120) (ite x427 (x588 x2120) (ite x3948 (x4107 x2120) (x635 x2120))))))
(define-fun x4525 ((x2120 x678)) Int (ite x1174 (x4041 x2120) (ite x839 (x588 x2120) (ite x3061 (x588 x2120) (ite x2307 (x588 x2120) (ite x1764 (x4041 x2120) (x588 x2120)))))))
(define-fun x116 ((x2120 x678)) Int (ite x4256 (x4525 x2120) (x4041 x2120)))
(define-fun x2428 ((x2120 x678)) Int (ite (= x2120 x2) x4285 (x588 x2120)))
(define-fun x4188 ((x2120 x678)) Int (ite x1719 (x588 x2120) (ite x293 (x588 x2120) (ite x15 (x588 x2120) (ite x320 (x588 x2120) (ite x1954 (x2428 x2120) (x588 x2120)))))))
(define-fun x499 ((x2120 x678)) Int (ite (= x734 x2120) x3296 (x2428 x2120)))
(define-fun x3612 ((x2120 x678)) Int (ite x790 (x588 x2120) (ite x855 (x588 x2120) (ite x882 (x588 x2120) (ite x3326 (x4188 x2120) (x499 x2120))))))
(define-fun x1196 ((x2120 x678)) Int (ite x4460 (x3612 x2120) (ite x297 (x588 x2120) (ite x1090 (x588 x2120) (ite x331 (x588 x2120) (ite x3758 (x3612 x2120) (x588 x2120)))))))
(define-fun x1807 ((x2120 x678)) Int (ite x3323 (x1196 x2120) (x3612 x2120)))
(define-fun x3481 ((x2120 x678)) Int (ite (= x2938 x2120) x724 (x588 x2120)))
(define-fun x759 ((x2120 x678)) Int (ite x2325 (x588 x2120) (ite x463 (x588 x2120) (ite x4626 (x588 x2120) (ite x57 (x588 x2120) (ite x434 (x3481 x2120) (x588 x2120)))))))
(define-fun x70 ((x2120 x678)) Int (ite (= x4419 x2120) x3315 (x3481 x2120)))
(define-fun x862 ((x2120 x678)) Int (ite x4398 (x588 x2120) (ite x4632 (x588 x2120) (ite x4817 (x588 x2120) (ite x3372 (x759 x2120) (x70 x2120))))))
(define-fun x4710 ((x2120 x678)) Int (ite x1231 (x862 x2120) (ite x4211 (x588 x2120) (ite x1006 (x588 x2120) (ite x3523 (x588 x2120) (ite x4487 (x862 x2120) (x588 x2120)))))))
(define-fun x3857 ((x2120 x678)) Int (ite x3671 (x4710 x2120) (x862 x2120)))
(define-fun x1612 ((x2120 x678)) Int (ite x176 (x116 x2120) (ite x3301 (x1807 x2120) (x3857 x2120))))
(define-fun x1149 ((x2120 x678)) Int (ite (= x2120 x2389) x1358 (x588 x2120)))
(define-fun x3798 ((x2120 x678)) Int (ite x2445 (x588 x2120) (ite x1955 (x588 x2120) (ite x92 (x588 x2120) (ite x74 (x588 x2120) (ite x3600 (x1149 x2120) (x588 x2120)))))))
(define-fun x2175 ((x2120 x678)) Int (ite (= x364 x2120) x4249 (x1149 x2120)))
(define-fun x680 ((x2120 x678)) Int (ite x4552 (x588 x2120) (ite x27 (x588 x2120) (ite x4895 (x588 x2120) (ite x1914 (x3798 x2120) (x2175 x2120))))))
(define-fun x1736 ((x2120 x678)) Int (ite x741 (x680 x2120) (ite x1752 (x588 x2120) (ite x3859 (x588 x2120) (ite x4743 (x680 x2120) (x588 x2120))))))
(define-fun x1277 ((x2120 x678)) Int (ite x1154 (x1736 x2120) (x680 x2120)))
(define-fun x3670 ((x2120 x678)) Int (ite (= x2120 x999) x568 (x588 x2120)))
(define-fun x1114 ((x2120 x678)) Int (ite x3263 (x588 x2120) (ite x2193 (x588 x2120) (ite x4295 (x588 x2120) (ite x454 (x588 x2120) (ite x3535 (x3670 x2120) (x588 x2120)))))))
(define-fun x4034 ((x2120 x678)) Int (ite (= x2120 x372) x1150 (x3670 x2120)))
(define-fun x993 ((x2120 x678)) Int (ite x1492 (x588 x2120) (ite x4046 (x588 x2120) (ite x4462 (x588 x2120) (ite x4338 (x1114 x2120) (x4034 x2120))))))
(define-fun x1280 ((x2120 x678)) Int (ite x2727 (x993 x2120) (ite x1286 (x588 x2120) (ite x3192 (x588 x2120) (ite x3981 (x993 x2120) (x588 x2120))))))
(define-fun x18 ((x2120 x678)) Int (ite x1093 (x1280 x2120) (x993 x2120)))
(define-fun x4694 ((x2120 x678)) Int (ite (= x2120 x4608) x742 (x588 x2120)))
(define-fun x848 ((x2120 x678)) Int (ite x2572 (x588 x2120) (ite x2620 (x588 x2120) (ite x1063 (x588 x2120) (ite x3014 (x588 x2120) (ite x1904 (x4694 x2120) (x588 x2120)))))))
(define-fun x3154 ((x2120 x678)) Int (ite (= x2120 x605) x1679 (x4694 x2120)))
(define-fun x2041 ((x2120 x678)) Int (ite x2980 (x588 x2120) (ite x2432 (x588 x2120) (ite x238 (x588 x2120) (ite x3505 (x848 x2120) (x3154 x2120))))))
(define-fun x694 ((x2120 x678)) Int (ite x1453 (x2041 x2120) (ite x3582 (x588 x2120) (ite x2515 (x588 x2120) (ite x4598 (x2041 x2120) (x588 x2120))))))
(define-fun x1252 ((x2120 x678)) Int (ite x593 (x694 x2120) (x2041 x2120)))
(define-fun x3457 ((x2120 x678)) Int (ite x1542 (x1277 x2120) (ite x4595 (x18 x2120) (x1252 x2120))))
(define-fun x245 ((x2120 x678)) Int (ite x4548 (x1612 x2120) (x3457 x2120)))
(define-fun x4089 ((x2120 x678)) Int (ite x3243 (x588 x2120) (ite x4069 (x588 x2120) (x245 x2120))))
(define-fun x356 ((x2120 x678)) Int (ite x3243 (x1108 x2120) (x2202 x2120)))
(define-fun x1506 ((x2120 Int)) Int (ite (= x1789 x2120) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x430 x2120)))
(define-fun x140 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x1116 x2120)))
(define-fun x2139 ((x2120 Int)) Int (ite (= x2120 x1789) 1 (x1506 x2120)))
(define-fun x3334 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x1116 x2120)))
(define-fun x4051 ((x2120 Int)) Int (ite (= x1789 x2120) 1 (x1506 x2120)))
(define-fun x2606 ((x2120 Int)) Int (ite (= x2120 0) 1 (x1116 x2120)))
(define-fun x4038 ((x2120 Int)) Int (ite (= x2120 x1789) 1 (x1506 x2120)))
(define-fun x3256 ((x2120 x678)) Int (ite (= x2120 x2661) x977 (x2431 x2120)))
(define-fun x3122 ((x2120 x678)) Int (ite x1368 (x2431 x2120) (x3256 x2120)))
(define-fun x3294 ((x2120 x678)) Int (ite (= x1735 x2120) 0 (x3122 x2120)))
(define-fun x1555 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x4587 x2120)))
(define-fun x4431 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x4587 x2120)))
(define-fun x2290 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x4587 x2120)))
(define-fun x4704 ((x2120 Int)) Int (ite (= x2120 0) 1 (x4587 x2120)))
(define-fun x2079 ((x2120 Int)) Int (ite (= x2120 0) x4902 (x4287 x2120)))
(define-fun x1501 ((x2120 Int)) Int (ite (= 0 x2120) x3349 (x4287 x2120)))
(define-fun x458 ((x2120 Int)) Int (ite (= 0 x2120) x62 (x4287 x2120)))
(define-fun x4200 ((x2120 Int)) Int (ite x1005 (x2139 x2120) (ite x909 (x4051 x2120) (x4038 x2120))))
(define-fun x2869 ((x2120 Int)) Int (ite (= x2958 x2120) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x4200 x2120)))
(define-fun x1096 ((x2120 Int)) Int (ite (= x4558 x2120) x1305 (x2869 x2120)))
(define-fun x262 ((x2120 Int)) Int (ite (= x2120 x2204) x1835 (x1096 x2120)))
(define-fun x3271 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x262 x2120)))
(define-fun x115 ((x2120 Int)) Int (ite x143 (x262 x2120) (x3271 x2120)))
(define-fun x546 ((x2120 Int)) Int (ite (= x2120 x2958) 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x115 x2120)))
(define-fun x3631 ((x2120 Int)) Int (ite (= x2120 x964) x1835 (x546 x2120)))
(define-fun x4397 ((x2120 Int)) Int (ite (= x2120 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3545 x2120)))
(define-fun x3474 ((x2120 Int)) Int (ite (= 132 x2120) x705 (x4397 x2120)))
(define-fun x2521 ((x2120 Int)) Int (ite (= 164 x2120) x4345 (x3474 x2120)))
(define-fun x3966 ((x2120 Int)) Int (ite (= 196 x2120) x1835 (x2521 x2120)))
(define-fun x3665 ((x2120 x678)) Int (ite (= x1712 x2120) x3649 (x3776 x2120)))
(define-fun x2495 ((x2120 x678)) Int (ite (= x4888 x2120) x394 (x2039 x2120)))
(define-fun x2178 ((x2120 x678)) Int (ite x143 (x2039 x2120) (x2495 x2120)))
(define-fun x2981 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x4619 x2120)))
(define-fun x3493 ((x2120 x678)) Int (ite (= x2120 x1694) x4115 (x1722 x2120)))
(define-fun x1790 ((x2120 x678)) Int (ite (= x3891 x2120) x3570 (x3493 x2120)))
(define-fun x3410 ((x2120 Int)) Int (ite (= x2120 0) 1 (x4619 x2120)))
(define-fun x3587 ((x2120 x678)) Int (ite (= x1202 x2120) x1447 (x1040 x2120)))
(define-fun x3658 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x4619 x2120)))
(define-fun x3084 ((x2120 x678)) Int (ite (= x1057 x2120) x2508 (x4089 x2120)))
(define-fun x2593 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x4619 x2120)))
(define-fun x3694 ((x2120 Int)) Int (ite (= x2120 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x322 x2120)))
(define-fun x1030 ((x2120 Int)) Int (ite (= 132 x2120) x705 (x3694 x2120)))
(define-fun x32 ((x2120 Int)) Int (ite (= 164 x2120) x3111 (x1030 x2120)))
(define-fun x573 ((x2120 Int)) Int (ite (= x2120 196) x1835 (x32 x2120)))
(define-fun x2774 ((x2120 x678)) Int (ite (= x4544 x2120) x533 (x3776 x2120)))
(define-fun x1403 ((x2120 Int)) Int (ite (= x2120 0) 1 (x3738 x2120)))
(define-fun x2157 ((x2120 x678)) Int (ite (= x1206 x2120) x196 (x1722 x2120)))
(define-fun x2349 ((x2120 Int)) Int (ite (= x2120 0) 1 (x3738 x2120)))
(define-fun x177 ((x2120 x678)) Int (ite (= x2089 x2120) x4857 (x1040 x2120)))
(define-fun x1528 ((x2120 x678)) Int (ite (= x4796 x2120) x3771 (x177 x2120)))
(define-fun x4324 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x3738 x2120)))
(define-fun x2528 ((x2120 x678)) Int (ite (= x3253 x2120) x2247 (x4089 x2120)))
(define-fun x2216 ((x2120 Int)) Int (ite (= x2120 0) 1 (x3738 x2120)))
(define-fun x690 ((x2120 Int)) Int (ite (= x2120 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3119 x2120)))
(define-fun x4825 ((x2120 Int)) Int (ite (= 132 x2120) x705 (x690 x2120)))
(define-fun x1860 ((x2120 Int)) Int (ite (= x2120 164) x3939 (x4825 x2120)))
(define-fun x452 ((x2120 Int)) Int (ite (= 196 x2120) x1835 (x1860 x2120)))
(define-fun x2783 ((x2120 x678)) Int (ite (= x4618 x2120) x924 (x3776 x2120)))
(define-fun x2771 ((x2120 Int)) Int (ite (= x2120 0) 1 (x1477 x2120)))
(define-fun x1200 ((x2120 x678)) Int (ite (= x2120 x3311) x918 (x1722 x2120)))
(define-fun x1300 ((x2120 Int)) Int (ite (= x2120 0) 1 (x1477 x2120)))
(define-fun x3168 ((x2120 x678)) Int (ite (= x2120 x3145) x1132 (x1040 x2120)))
(define-fun x1526 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x1477 x2120)))
(define-fun x1058 ((x2120 x678)) Int (ite (= x191 x2120) x625 (x4089 x2120)))
(define-fun x3257 ((x2120 x678)) Int (ite (= x2120 x1047) x2125 (x1058 x2120)))
(define-fun x1366 ((x2120 Int)) Int (ite (= x2120 0) 1 (x1477 x2120)))
(define-fun x3117 ((x2120 Int)) Int (ite (= x2120 x2958) 0 (x3631 x2120)))
(define-fun x2618 ((x2120 Int)) Int (ite (= x2120 x2958) 0 (x3631 x2120)))
(define-fun x1565 ((x2120 Int)) Int (ite (= x2958 x2120) 0 (x3631 x2120)))
(define-fun x151 ((x2120 Int)) Int (ite x1208 (ite x3529 (x3631 x2120) (x3117 x2120)) (ite x3737 (ite x1866 (x3631 x2120) (x2618 x2120)) (ite x2642 (x3631 x2120) (x1565 x2120)))))
(define-fun x4388 ((x2120 Int)) Int (ite (= x2120 0) x1001 (x3343 x2120)))
(define-fun x156 ((x2120 Int)) Int (ite (= x2120 0) x835 (x3343 x2120)))
(define-fun x1383 ((x2120 Int)) Int (ite (= 0 x2120) x755 (x3343 x2120)))
(define-fun x1352 ((x2120 x678)) Int (ite (= x2120 x3491) x951 (x1843 x2120)))
(define-fun x2296 ((x2120 x678)) Int (ite (= x2120 x2818) 0 (x1352 x2120)))
(define-fun x826 ((x2120 x678)) Int (ite x2624 (x1352 x2120) (x2296 x2120)))
(define-fun x315 ((x2120 x678)) Int (ite (= x2120 x544) x294 (x1261 x2120)))
(define-fun x661 ((x2120 x678)) Int (ite (= x2120 x3310) 0 (x315 x2120)))
(define-fun x1055 ((x2120 x678)) Int (ite x3089 (x315 x2120) (x661 x2120)))
(define-fun x4443 ((x2120 x678)) Int (ite (= x2120 x289) x4321 (x826 x2120)))
(define-fun x1474 ((x2120 x678)) Int (ite (= x3238 x2120) x3426 (x1055 x2120)))
(define-fun x2124 ((x2120 x678)) Int (ite (= x2120 x4647) 0 (x2754 x2120)))
(define-fun x3171 ((x2120 x678)) Int (ite x1052 (x2754 x2120) (x2124 x2120)))
(define-fun x3330 ((x2120 x678)) Int (ite (= x2120 x2330) x1142 (x3171 x2120)))
(define-fun x3270 ((x2120 x678)) Int (ite (= x2120 x2273) x1142 (x3171 x2120)))
(define-fun x3922 ((x2120 x678)) Int (ite (= x707 x2120) x1142 (x3171 x2120)))
(define-fun x1103 ((x2120 x678)) Int (ite (= x501 x2120) x1142 (x3171 x2120)))
(define-fun x877 ((x2120 x678)) Int (ite x1313 (x3330 x2120) (ite x4146 (x3270 x2120) (ite x3030 (x3922 x2120) (x1103 x2120)))))
(define-fun x2227 ((x2120 x678)) Int (ite x1472 (x2754 x2120) (ite x3700 (x3171 x2120) (x877 x2120))))
(define-fun x2760 ((x2120 x678)) Int (ite (= x3652 x2120) 0 (x2242 x2120)))
(define-fun x3915 ((x2120 x678)) Int (ite x4165 (x2242 x2120) (x2760 x2120)))
(define-fun x2704 ((x2120 x678)) Int (ite (= x4513 x2120) x1481 (x3915 x2120)))
(define-fun x957 ((x2120 x678)) Int (ite (= x2120 x4514) x1481 (x3915 x2120)))
(define-fun x2770 ((x2120 x678)) Int (ite (= x2536 x2120) x1481 (x3915 x2120)))
(define-fun x4830 ((x2120 x678)) Int (ite (= x488 x2120) x1481 (x3915 x2120)))
(define-fun x768 ((x2120 x678)) Int (ite x217 (x2704 x2120) (ite x754 (x957 x2120) (ite x1979 (x2770 x2120) (x4830 x2120)))))
(define-fun x1171 ((x2120 x678)) Int (ite x4622 (x2242 x2120) (ite x1534 (x3915 x2120) (x768 x2120))))
(define-fun x3502 ((x2120 Int)) Int (ite (= x2120 0) 1 (x4687 x2120)))
(define-fun x3624 ((x2120 Int)) Int (ite (= 128 x2120) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3603 x2120)))
(define-fun x2367 ((x2120 Int)) Int (ite (= 132 x2120) x705 (x3624 x2120)))
(define-fun x2224 ((x2120 Int)) Int (ite (= 164 x2120) x4345 (x2367 x2120)))
(define-fun x1889 ((x2120 Int)) Int (ite (= x2120 196) x3571 (x2224 x2120)))
(define-fun x3399 ((x2120 Int)) Int (ite (= x2120 0) 1 (x2967 x2120)))
(define-fun x836 ((x2120 Int)) Int (ite (= x2120 0) 1 (x2967 x2120)))
(define-fun x1212 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x2967 x2120)))
(define-fun x851 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x2967 x2120)))
(define-fun x4213 ((x2120 Int)) Int (ite (= x2120 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2135 x2120)))
(define-fun x4897 ((x2120 Int)) Int (ite (= 132 x2120) x705 (x4213 x2120)))
(define-fun x2285 ((x2120 Int)) Int (ite (= x2120 164) x3111 (x4897 x2120)))
(define-fun x3679 ((x2120 Int)) Int (ite (= x2120 196) x4022 (x2285 x2120)))
(define-fun x3427 ((x2120 Int)) Int (ite (= x2120 0) 1 (x2159 x2120)))
(define-fun x1570 ((x2120 Int)) Int (ite (= x2120 0) 1 (x2159 x2120)))
(define-fun x1545 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x2159 x2120)))
(define-fun x180 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x2159 x2120)))
(define-fun x1085 ((x2120 Int)) Int (ite (= x2120 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2313 x2120)))
(define-fun x3552 ((x2120 Int)) Int (ite (= x2120 132) x705 (x1085 x2120)))
(define-fun x3876 ((x2120 Int)) Int (ite (= 164 x2120) x3939 (x3552 x2120)))
(define-fun x1887 ((x2120 Int)) Int (ite (= 196 x2120) x2360 (x3876 x2120)))
(define-fun x36 ((x2120 Int)) Int (ite (= x2120 0) 1 (x4812 x2120)))
(define-fun x3007 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x4812 x2120)))
(define-fun x3075 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x4812 x2120)))
(define-fun x3786 ((x2120 Int)) Int (ite (= x2120 0) 1 (x4812 x2120)))
(define-fun x1288 ((x2120 Int)) Int (ite (= 128 x2120) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2687 x2120)))
(define-fun x3773 ((x2120 Int)) Int (ite (= x2120 132) x705 (x1288 x2120)))
(define-fun x2241 ((x2120 Int)) Int (ite (= x2120 164) x4345 (x3773 x2120)))
(define-fun x4668 ((x2120 Int)) Int (ite (= x2120 196) x3791 (x2241 x2120)))
(define-fun x4809 ((x2120 Int)) Int (ite (= x2120 0) 1 (x4277 x2120)))
(define-fun x2948 ((x2120 Int)) Int (ite (= x2120 0) 1 (x4277 x2120)))
(define-fun x3797 ((x2120 Int)) Int (ite (= x2120 0) 1 (x4277 x2120)))
(define-fun x3508 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x4277 x2120)))
(define-fun x1673 ((x2120 Int)) Int (ite (= x2120 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4870 x2120)))
(define-fun x933 ((x2120 Int)) Int (ite (= x2120 132) x705 (x1673 x2120)))
(define-fun x3225 ((x2120 Int)) Int (ite (= x2120 164) x3111 (x933 x2120)))
(define-fun x1861 ((x2120 Int)) Int (ite (= 196 x2120) x3889 (x3225 x2120)))
(define-fun x986 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x1032 x2120)))
(define-fun x4524 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x1032 x2120)))
(define-fun x3832 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x1032 x2120)))
(define-fun x974 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x1032 x2120)))
(define-fun x772 ((x2120 Int)) Int (ite (= 128 x2120) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1141 x2120)))
(define-fun x1899 ((x2120 Int)) Int (ite (= 132 x2120) x705 (x772 x2120)))
(define-fun x1423 ((x2120 Int)) Int (ite (= 164 x2120) x3939 (x1899 x2120)))
(define-fun x1633 ((x2120 Int)) Int (ite (= 196 x2120) x2659 (x1423 x2120)))
(define-fun x2372 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x504 x2120)))
(define-fun x1763 ((x2120 Int)) Int (ite (= 0 x2120) 1 (x504 x2120)))
(define-fun x3039 ((x2120 Int)) Int (ite (= x2120 0) 1 (x504 x2120)))
(define-fun x131 ((x2120 Int)) Int (ite (= x2120 0) 1 (x504 x2120)))
(define-fun x4500 ((x2120 x678)) Int (ite x825 (x3294 x2120) (x3122 x2120)))
(define-fun x1892 ((x2120 x678)) Int (ite (= x2120 x2279) x1165 (x4592 x2120)))
(define-fun x1676 ((x2120 x678)) Int (ite (= x23 x2120) x1165 (x3781 x2120)))
(define-fun x2682 ((x2120 x678)) Int (ite (= x2120 x2246) 0 (x356 x2120)))
(define-fun x952 ((x2120 x678)) Int (ite (= x2120 x3908) x555 (x3584 x2120)))
(define-fun x1133 ((x2120 x678)) Int (ite x669 (x3584 x2120) (ite x4439 (x952 x2120) (x3584 x2120))))
(define-fun x4178 ((x2120 x678)) Int (ite x669 (x4592 x2120) (ite x1380 (x1892 x2120) (x4592 x2120))))
(define-fun x4444 ((x2120 x678)) Int (ite (= x4645 x2120) x555 (x3750 x2120)))
(define-fun x4814 ((x2120 x678)) Int (ite x4439 (x3750 x2120) (x4444 x2120)))
(define-fun x684 ((x2120 x678)) Int (ite (= x49 x2120) 0 (x4814 x2120)))
(define-fun x3685 ((x2120 x678)) Int (ite x669 (x3750 x2120) (x684 x2120)))
(define-fun x1657 ((x2120 x678)) Int (ite (= x2120 x129) 0 (x3107 x2120)))
(define-fun x3258 ((x2120 x678)) Int (ite x669 (x3107 x2120) (x1657 x2120)))
(define-fun x2966 ((x2120 x678)) Int (ite x1380 (x3781 x2120) (x1676 x2120)))
(define-fun x1131 ((x2120 x678)) Int (ite (= x401 x2120) 0 (x2966 x2120)))
(define-fun x4621 ((x2120 x678)) Int (ite x669 (x3781 x2120) (x1131 x2120)))
(define-fun x4150 ((x2120 x678)) Int (ite x1734 (x2682 x2120) (x356 x2120)))
(define-fun x1421 ((x2120 x678)) Int (ite (= x2120 x2539) x4690 (x829 x2120)))
(define-fun x2209 ((x2120 x678)) Int (ite (= x4145 x2120) x4690 (x230 x2120)))
(define-fun x943 ((x2120 x678)) Int (ite x641 (x230 x2120) (x2209 x2120)))
(define-fun x4292 ((x2120 x678)) Int (ite (= x1509 x2120) 0 (x943 x2120)))
(define-fun x1068 ((x2120 x678)) Int (ite x3881 (x230 x2120) (x4292 x2120)))
(define-fun x1881 ((x2120 x678)) Int (ite (= x2120 x586) x1697 (x128 x2120)))
(define-fun x3589 ((x2120 x678)) Int (ite x3881 (x128 x2120) (ite x2567 (x1881 x2120) (x128 x2120))))
(define-fun x2994 ((x2120 x678)) Int (ite (= x2707 x2120) x1697 (x614 x2120)))
(define-fun x4510 ((x2120 x678)) Int (ite x2567 (x614 x2120) (x2994 x2120)))
(define-fun x4498 ((x2120 x678)) Int (ite (= x2120 x1374) 0 (x4510 x2120)))
(define-fun x960 ((x2120 x678)) Int (ite x3881 (x614 x2120) (x4498 x2120)))
(define-fun x4508 ((x2120 x678)) Int (ite x3881 (x829 x2120) (ite x641 (x1421 x2120) (x829 x2120))))
(define-fun x749 ((x2120 x678)) Int (ite (= x4485 x2120) 0 (x1283 x2120)))
(define-fun x366 ((x2120 x678)) Int (ite x3881 (x1283 x2120) (x749 x2120)))
(define-fun x1582 ((x2120 x678)) Int (ite (= x606 x2120) x3416 (x598 x2120)))
(define-fun x1393 ((x2120 x678)) Int (ite x4676 (x598 x2120) (x1582 x2120)))
(define-fun x275 ((x2120 x678)) Int (ite (= x2120 x1972) 0 (x1393 x2120)))
(define-fun x3640 ((x2120 x678)) Int (ite x1052 (x598 x2120) (x275 x2120)))
(define-fun x3277 ((x2120 x678)) Int (ite (= x4847 x2120) x1945 (x3640 x2120)))
(define-fun x4243 ((x2120 x678)) Int (ite (= x2120 x2352) 0 (x3640 x2120)))
(define-fun x1092 ((x2120 x678)) Int (ite (= x2120 x4748) x351 (x3640 x2120)))
(define-fun x783 ((x2120 x678)) Int (ite (= x2120 x3661) x1627 (x1092 x2120)))
(define-fun x773 ((x2120 x678)) Int (ite (= x2120 x2546) 0 (x3640 x2120)))
(define-fun x3577 ((x2120 x678)) Int (ite (= x3549 x2120) x1627 (x773 x2120)))
(define-fun x1003 ((x2120 x678)) Int (ite x1313 (x3277 x2120) (ite x4146 (x4243 x2120) (ite x3030 (x783 x2120) (x3577 x2120)))))
(define-fun x75 ((x2120 x678)) Int (ite x1472 (x598 x2120) (ite x3700 (x3640 x2120) (x1003 x2120))))
(define-fun x47 ((x2120 x678)) Int (ite (= x2120 x4763) x4675 (x676 x2120)))
(define-fun x3091 ((x2120 x678)) Int (ite x4407 (x676 x2120) (x47 x2120)))
(define-fun x3260 ((x2120 x678)) Int (ite (= x2120 x1983) 0 (x3091 x2120)))
(define-fun x1126 ((x2120 x678)) Int (ite x1052 (x676 x2120) (x3260 x2120)))
(define-fun x1497 ((x2120 x678)) Int (ite (= x2120 x224) 0 (x1126 x2120)))
(define-fun x2968 ((x2120 x678)) Int (ite (= x3411 x2120) x1627 (x1497 x2120)))
(define-fun x1434 ((x2120 x678)) Int (ite (= x2260 x2120) 0 (x1126 x2120)))
(define-fun x4229 ((x2120 x678)) Int (ite (= x3783 x2120) x2119 (x1126 x2120)))
(define-fun x2676 ((x2120 x678)) Int (ite (= x4492 x2120) x1627 (x4229 x2120)))
(define-fun x3708 ((x2120 x678)) Int (ite (= x2120 x1909) x2119 (x1126 x2120)))
(define-fun x2743 ((x2120 x678)) Int (ite x1313 (x2968 x2120) (ite x4146 (x1434 x2120) (ite x3030 (x2676 x2120) (x3708 x2120)))))
(define-fun x3153 ((x2120 x678)) Int (ite x1472 (x676 x2120) (ite x3700 (x1126 x2120) (x2743 x2120))))
(define-fun x1795 ((x2120 x678)) Int (ite (= x4850 x2120) x4675 (x34 x2120)))
(define-fun x2779 ((x2120 x678)) Int (ite x1052 (x34 x2120) (ite x4407 (x1795 x2120) (x34 x2120))))
(define-fun x4559 ((x2120 x678)) Int (ite (= x2120 x1475) x1627 (x2779 x2120)))
(define-fun x1780 ((x2120 x678)) Int (ite (= x1475 x2120) x1627 (x2779 x2120)))
(define-fun x2476 ((x2120 x678)) Int (ite x1313 (x2779 x2120) (ite x4146 (x4559 x2120) (ite x3030 (x2779 x2120) (x1780 x2120)))))
(define-fun x4831 ((x2120 x678)) Int (ite x1472 (x34 x2120) (ite x3700 (x2779 x2120) (x2476 x2120))))
(define-fun x4856 ((x2120 x678)) Int (ite (= x2120 x2533) x3804 (x4831 x2120)))
(define-fun x528 ((x2120 x678)) Int (ite (= x1804 x2120) x3804 (x3153 x2120)))
(define-fun x2388 ((x2120 x678)) Int (ite (= x2120 x3382) x3416 (x1808 x2120)))
(define-fun x2976 ((x2120 x678)) Int (ite x1052 (x1808 x2120) (ite x4676 (x2388 x2120) (x1808 x2120))))
(define-fun x521 ((x2120 x678)) Int (ite (= x2846 x2120) x1627 (x2976 x2120)))
(define-fun x4155 ((x2120 x678)) Int (ite (= x1863 x2120) x1627 (x2976 x2120)))
(define-fun x3726 ((x2120 x678)) Int (ite x1313 (x521 x2120) (ite x4146 (x4155 x2120) (x2976 x2120))))
(define-fun x2777 ((x2120 x678)) Int (ite x1472 (x1808 x2120) (ite x3700 (x2976 x2120) (x3726 x2120))))
(define-fun x1833 ((x2120 x678)) Int (ite (= x2120 x3388) x2435 (x2777 x2120)))
(define-fun x1587 ((x2120 x678)) Int (ite x1037 (x2777 x2120) (ite x1451 (x1833 x2120) (x2777 x2120))))
(define-fun x1557 ((x2120 x678)) Int (ite x1037 (x4831 x2120) (ite x4573 (x4856 x2120) (x4831 x2120))))
(define-fun x1666 ((x2120 x678)) Int (ite x4573 (x3153 x2120) (x528 x2120)))
(define-fun x609 ((x2120 x678)) Int (ite (= x2120 x956) 0 (x1666 x2120)))
(define-fun x3702 ((x2120 x678)) Int (ite x1037 (x3153 x2120) (x609 x2120)))
(define-fun x2394 ((x2120 x678)) Int (ite (= x2120 x2050) x2435 (x75 x2120)))
(define-fun x30 ((x2120 x678)) Int (ite x1451 (x75 x2120) (x2394 x2120)))
(define-fun x1418 ((x2120 x678)) Int (ite (= x2120 x4028) 0 (x30 x2120)))
(define-fun x2857 ((x2120 x678)) Int (ite x1037 (x75 x2120) (x1418 x2120)))
(define-fun x211 ((x2120 x678)) Int (ite (= x2120 x1491) 0 (x2227 x2120)))
(define-fun x2610 ((x2120 x678)) Int (ite x1037 (x2227 x2120) (x211 x2120)))
(define-fun x1259 ((x2120 x678)) Int (ite (= x2120 x1647) x2711 (x1874 x2120)))
(define-fun x4518 ((x2120 x678)) Int (ite x520 (x1874 x2120) (x1259 x2120)))
(define-fun x61 ((x2120 x678)) Int (ite (= x2120 x907) 0 (x4518 x2120)))
(define-fun x3086 ((x2120 x678)) Int (ite x4165 (x1874 x2120) (x61 x2120)))
(define-fun x2880 ((x2120 x678)) Int (ite (= x2120 x4004) x3976 (x3086 x2120)))
(define-fun x1334 ((x2120 x678)) Int (ite (= x2120 x4408) 0 (x3086 x2120)))
(define-fun x4568 ((x2120 x678)) Int (ite (= x1217 x2120) x1707 (x3086 x2120)))
(define-fun x2640 ((x2120 x678)) Int (ite (= x2120 x915) x1627 (x4568 x2120)))
(define-fun x2351 ((x2120 x678)) Int (ite (= x2020 x2120) 0 (x3086 x2120)))
(define-fun x161 ((x2120 x678)) Int (ite (= x940 x2120) x1627 (x2351 x2120)))
(define-fun x3058 ((x2120 x678)) Int (ite x217 (x2880 x2120) (ite x754 (x1334 x2120) (ite x1979 (x2640 x2120) (x161 x2120)))))
(define-fun x4302 ((x2120 x678)) Int (ite x4622 (x1874 x2120) (ite x1534 (x3086 x2120) (x3058 x2120))))
(define-fun x1775 ((x2120 x678)) Int (ite (= x3698 x2120) x226 (x357 x2120)))
(define-fun x3675 ((x2120 x678)) Int (ite x79 (x357 x2120) (x1775 x2120)))
(define-fun x1911 ((x2120 x678)) Int (ite (= x2928 x2120) 0 (x3675 x2120)))
(define-fun x1831 ((x2120 x678)) Int (ite x4165 (x357 x2120) (x1911 x2120)))
(define-fun x1125 ((x2120 x678)) Int (ite (= x2120 x1390) 0 (x1831 x2120)))
(define-fun x3469 ((x2120 x678)) Int (ite (= x4726 x2120) x1627 (x1125 x2120)))
(define-fun x418 ((x2120 x678)) Int (ite (= x2120 x166) 0 (x1831 x2120)))
(define-fun x1985 ((x2120 x678)) Int (ite (= x3836 x2120) x2555 (x1831 x2120)))
(define-fun x941 ((x2120 x678)) Int (ite (= x2120 x3945) x1627 (x1985 x2120)))
(define-fun x2407 ((x2120 x678)) Int (ite (= x1359 x2120) x2555 (x1831 x2120)))
(define-fun x2332 ((x2120 x678)) Int (ite x217 (x3469 x2120) (ite x754 (x418 x2120) (ite x1979 (x941 x2120) (x2407 x2120)))))
(define-fun x4872 ((x2120 x678)) Int (ite x4622 (x357 x2120) (ite x1534 (x1831 x2120) (x2332 x2120))))
(define-fun x344 ((x2120 x678)) Int (ite (= x2120 x2474) x226 (x3367 x2120)))
(define-fun x72 ((x2120 x678)) Int (ite x4165 (x3367 x2120) (ite x79 (x344 x2120) (x3367 x2120))))
(define-fun x2630 ((x2120 x678)) Int (ite (= x663 x2120) x1627 (x72 x2120)))
(define-fun x2255 ((x2120 x678)) Int (ite (= x663 x2120) x1627 (x72 x2120)))
(define-fun x4787 ((x2120 x678)) Int (ite x217 (x72 x2120) (ite x754 (x2630 x2120) (ite x1979 (x72 x2120) (x2255 x2120)))))
(define-fun x3615 ((x2120 x678)) Int (ite x4622 (x3367 x2120) (ite x1534 (x72 x2120) (x4787 x2120))))
(define-fun x3083 ((x2120 x678)) Int (ite (= x81 x2120) x2959 (x3615 x2120)))
(define-fun x1236 ((x2120 x678)) Int (ite (= x3944 x2120) x2959 (x4872 x2120)))
(define-fun x1537 ((x2120 x678)) Int (ite (= x4021 x2120) x2711 (x2720 x2120)))
(define-fun x719 ((x2120 x678)) Int (ite x4165 (x2720 x2120) (ite x520 (x1537 x2120) (x2720 x2120))))
(define-fun x3525 ((x2120 x678)) Int (ite (= x2120 x959) x1627 (x719 x2120)))
(define-fun x2451 ((x2120 x678)) Int (ite (= x2120 x2033) x1627 (x719 x2120)))
(define-fun x945 ((x2120 x678)) Int (ite x217 (x3525 x2120) (ite x754 (x2451 x2120) (x719 x2120))))
(define-fun x2427 ((x2120 x678)) Int (ite x4622 (x2720 x2120) (ite x1534 (x719 x2120) (x945 x2120))))
(define-fun x4858 ((x2120 x678)) Int (ite (= x2120 x2323) x1786 (x2427 x2120)))
(define-fun x2107 ((x2120 x678)) Int (ite x404 (x2427 x2120) (ite x2831 (x4858 x2120) (x2427 x2120))))
(define-fun x1484 ((x2120 x678)) Int (ite (= x2120 x4097) x1786 (x4302 x2120)))
(define-fun x2022 ((x2120 x678)) Int (ite x2831 (x4302 x2120) (x1484 x2120)))
(define-fun x4254 ((x2120 x678)) Int (ite (= x2120 x9) 0 (x2022 x2120)))
(define-fun x2806 ((x2120 x678)) Int (ite x404 (x4302 x2120) (x4254 x2120)))
(define-fun x4636 ((x2120 x678)) Int (ite x404 (x3615 x2120) (ite x911 (x3083 x2120) (x3615 x2120))))
(define-fun x3143 ((x2120 x678)) Int (ite (= x2120 x2990) 0 (x1171 x2120)))
(define-fun x73 ((x2120 x678)) Int (ite x404 (x1171 x2120) (x3143 x2120)))
(define-fun x3821 ((x2120 x678)) Int (ite x911 (x4872 x2120) (x1236 x2120)))
(define-fun x1873 ((x2120 x678)) Int (ite (= x2120 x4651) 0 (x3821 x2120)))
(define-fun x3361 ((x2120 x678)) Int (ite x404 (x4872 x2120) (x1873 x2120)))
(define-fun x721 ((x2120 x678)) Int (ite x398 (x3702 x2120) (x1126 x2120)))
(define-fun x4252 ((x2120 x678)) Int (ite x3833 (x3361 x2120) (x1831 x2120)))
(define-fun x4725 ((x2120 Int)) Int (ite (= x2120 0) 0 (x3843 x2120)))
(define-fun x2181 ((x2120 Int)) Int (ite (= 0 x2120) 0 (x3843 x2120)))
(define-fun x199 ((x2120 Int)) Int (ite (= x2120 0) 0 (x3843 x2120)))
(define-fun x2398 ((x2120 Int)) Int (ite (= x2120 0) 0 (x87 x2120)))
(define-fun x287 ((x2120 Int)) Int (ite (= 0 x2120) 0 (x87 x2120)))
(define-fun x480 ((x2120 Int)) Int (ite (= 0 x2120) 0 (x87 x2120)))
(define-fun x3850 ((x2120 x678)) Int (ite x1507 (x4089 x2120) (ite x3003 (x4089 x2120) (ite x4197 (x4089 x2120) (ite x3488 (x4089 x2120) (ite x3718 (x1058 x2120) (x4089 x2120)))))))
(define-fun x2136 ((x2120 x678)) Int (ite x3928 (x4089 x2120) (ite x4660 (x4089 x2120) (ite x2294 (x4089 x2120) (ite x2180 (x3850 x2120) (x3257 x2120))))))
(define-fun x279 ((x2120 Int)) Int (ite (= x2120 0) 0 (x3787 x2120)))
(define-fun x1332 ((x2120 x678)) Int (ite x2603 (x1040 x2120) (ite x3735 (x1040 x2120) (ite x4410 (x1040 x2120) (ite x4436 (x1040 x2120) (ite x935 (x177 x2120) (x1040 x2120)))))))
(define-fun x1140 ((x2120 x678)) Int (ite x4633 (x1040 x2120) (ite x671 (x1040 x2120) (ite x355 (ite x4863 (x1332 x2120) (x1528 x2120)) (x1040 x2120)))))
(define-fun x132 ((x2120 Int)) Int (ite (= x2120 0) 0 (x3787 x2120)))
(define-fun x4718 ((x2120 x678)) Int (ite x1289 (x1722 x2120) (ite x1181 (x1722 x2120) (ite x264 (x1722 x2120) (ite x618 (x1722 x2120) (ite x3360 (x3493 x2120) (x1722 x2120)))))))
(define-fun x3724 ((x2120 x678)) Int (ite x613 (x1722 x2120) (ite x1276 (ite x2616 (x4718 x2120) (x1790 x2120)) (x1722 x2120))))
(define-fun x3344 ((x2120 Int)) Int (ite (= 0 x2120) 0 (x3787 x2120)))
(define-fun x4411 ((x2120 Int)) Int (ite x4281 (x4812 x2120) (x36 x2120)))
(define-fun x3103 ((x2120 Int)) Int (ite x1976 (x4812 x2120) (x3007 x2120)))
(define-fun x326 ((x2120 Int)) Int (ite x444 (x4812 x2120) (x3075 x2120)))
(define-fun x3205 ((x2120 Int)) Int (ite x3505 (x4812 x2120) (x3786 x2120)))
(define-fun x1375 ((x2120 Int)) Int (ite x2980 (x4411 x2120) (ite x2432 (x3103 x2120) (ite x238 (x326 x2120) (x3205 x2120)))))
(define-fun x4358 ((x2120 Int)) Int (ite x4629 (x2159 x2120) (x3427 x2120)))
(define-fun x3024 ((x2120 Int)) Int (ite x4497 (x2159 x2120) (x1570 x2120)))
(define-fun x670 ((x2120 Int)) Int (ite x336 (x2159 x2120) (x1545 x2120)))
(define-fun x4376 ((x2120 Int)) Int (ite x4338 (x2159 x2120) (x180 x2120)))
(define-fun x3415 ((x2120 Int)) Int (ite x1492 (x4358 x2120) (ite x4046 (x3024 x2120) (ite x4462 (x670 x2120) (x4376 x2120)))))
(define-fun x873 ((x2120 Int)) Int (ite x1737 (x2967 x2120) (x3399 x2120)))
(define-fun x3027 ((x2120 Int)) Int (ite x435 (x2967 x2120) (x836 x2120)))
(define-fun x2308 ((x2120 Int)) Int (ite x686 (x2967 x2120) (x1212 x2120)))
(define-fun x153 ((x2120 Int)) Int (ite x1914 (x2967 x2120) (x851 x2120)))
(define-fun x2380 ((x2120 Int)) Int (ite x4552 (x873 x2120) (ite x27 (x3027 x2120) (ite x4895 (x2308 x2120) (x153 x2120)))))
(define-fun x1561 ((x2120 Int)) Int (ite x1520 (x504 x2120) (x2372 x2120)))
(define-fun x1667 ((x2120 Int)) Int (ite x699 (x504 x2120) (x1763 x2120)))
(define-fun x4707 ((x2120 Int)) Int (ite x1721 (x504 x2120) (x3039 x2120)))
(define-fun x4210 ((x2120 Int)) Int (ite x3372 (x504 x2120) (x131 x2120)))
(define-fun x29 ((x2120 Int)) Int (ite x4398 (x1561 x2120) (ite x4632 (x1667 x2120) (ite x4817 (x4707 x2120) (x4210 x2120)))))
(define-fun x3284 ((x2120 Int)) Int (ite x2924 (x1032 x2120) (x986 x2120)))
(define-fun x4134 ((x2120 Int)) Int (ite x2067 (x1032 x2120) (x4524 x2120)))
(define-fun x1720 ((x2120 Int)) Int (ite x385 (x1032 x2120) (x3832 x2120)))
(define-fun x37 ((x2120 Int)) Int (ite x3326 (x1032 x2120) (x974 x2120)))
(define-fun x3165 ((x2120 Int)) Int (ite x790 (x3284 x2120) (ite x855 (x4134 x2120) (ite x882 (x1720 x2120) (x37 x2120)))))
(define-fun x3473 ((x2120 Int)) Int (ite x3920 (x4277 x2120) (x4809 x2120)))
(define-fun x4174 ((x2120 Int)) Int (ite x1765 (x4277 x2120) (x2948 x2120)))
(define-fun x804 ((x2120 Int)) Int (ite x4023 (x4277 x2120) (x3797 x2120)))
(define-fun x3555 ((x2120 Int)) Int (ite x3948 (x4277 x2120) (x3508 x2120)))
(define-fun x1419 ((x2120 Int)) Int (ite x3875 (x3473 x2120) (ite x144 (x4174 x2120) (ite x427 (x804 x2120) (x3555 x2120)))))
(define-fun x1229 ((x2120 Int)) Int (ite (= x2120 0) 1 (x403 x2120)))
(define-fun x4482 ((x2120 x678)) Int (ite (= x2120 (x1970 x705)) x2149 (x2484 x2120)))
(define-fun x136 ((x2264 Int)) Bool (=> (and (not (= 2929553584 x2264)) (not (= 405663989 x2264)) (not (= x2264 24044834009420335638544845215851342251227478490780828673611325350056707489792)) (not (= 178855970 x2264)) (not (= 988262939 x2264)) (not (= x2264 77053863734975077137548456399560439977311721439096602559221323163398253314048)) (not (= 2236579515 x2264)) (not (= 989455977 x2264)) (not (= x2264 1000000000000000000)) (not (= x2264 1461501637330902918203684832716283019655932542975)) (not (= x2264 4238056678808933066457772256406219440718756300954938350892797929791311314944)) (not (= 1466279372 x2264)) (not (= x2264 10936679508223583803006762266923565500374401145016910147028117655998246682624)) (not (= x2264 1461501637330902918203684832716283019655932542976)) (not (= x2264 242558722)) (not (= x2264 1857877511)) (not (= x2264 2858086653)) (not (= 157198259 x2264)) (not (= 4294967296 x2264)) (> x2264 10000) (not (= 2796547477 x2264)) (not (= x2264 2030502250)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x2264)) (not (= 547091486 x2264)) (not (= 2835717307 x2264)) (not (= x2264 599290589)) (not (= x2264 398450620)) (not (= x2264 35417553099779373699389112480655434059402432070290151981503827724506945814528)) (not (= x2264 50292402827334880472107169365697159231523039388532301717704428044325102813184)) (not (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x2264)) (not (= x2264 2134560854)) (not (= 1313710058 x2264)) (not (= x2264 115792089237316195423570985008687907853269984665640564039457)) (not (= x2264 117300739)) (not (= 2691771752 x2264)) (not (= 2362143243 x2264)) (not (= x2264 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x2264 2023533118)) (not (= x2264 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x2264 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x2264 10742207464693106059581744854972325794081737850190833080250671788038469713920)) (not (= x2264 1856199391)) (not (= x2264 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 1038142104 x2264)) (not (= x2264 2217467699)) (not (= x2264 76833804140862540057647519496925185374644862498684814347804924264468996685824)) (not (= 2678788150 x2264)) (not (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x2264)) (not (= 75483562 x2264)) (not (= x2264 18446744073709551615)) (not (= 1865448899 x2264)) (not (= 2245473101 x2264))) (not ((_ is x2553) (x1970 x2264)))))
(assert (= x2642 (or (and x102 x3733) (and x2506 x3299) x972 x1189 x2802)))
(assert (= (and x1094 (not x1039)) x2611))
(assert (x3087 x3573))
(assert (x136 x226))
(assert (x3087 x2735))
(assert (x3087 x1876))
(assert (x3087 x3345))
(assert (x136 x2519))
(assert (x3087 x3979))
(assert (x3087 x4374))
(assert (= x4733 (and x2263 x3924)))
(assert (= x2114 (and (not x3160) x1014)))
(assert (= (and x432 x4063) x1189))
(assert (=> (>= 10000 x1779) (= (x2553 x1779) (x1970 x1779))))
(assert (x691 x2657 x1020))
(assert (= (x1315 (x350 x2379 2)) (+ (x1315 x2379) 2)))
(assert (= x3059 (=> (= (= 0 x449) x2828) (and (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1099) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1099) true) (> 32 x1099))) x1519) (not x2828)) (and (=> (and (= x2797 x2448) x1519) x732) (=> (and (and (= x2797 x991) (= x391 x1973) (= 1 x388)) (not x1519)) x4137))) (=> (and x2828 (= x2448 x2797)) x732)))))
(assert (= x3246 (=> (and (or (not x701) x701) (= x701 (= 0 x1118))) x1084)))
(assert (x3087 x2543))
(assert (x3087 x3156))
(assert (x3087 x858))
(assert (x3087 x90))
(assert (= (=> (and (= 0 x837) (= x379 x4522)) x640) x3092))
(assert (x3087 x1845))
(assert (x3087 x4628))
(assert (= x473 (x1315 (x1970 x473))))
(assert (x3087 x1341))
(assert (x3087 x965))
(assert (= (and x3935 (not x3052)) x891))
(assert (x3087 x1179))
(assert (x3087 x4379))
(assert (x3087 x4826))
(assert (x3087 x3528))
(assert (= (x1315 (x350 x2885 1)) (+ (x1315 x2885) 1)))
(assert (x3087 x3186))
(assert (=> (>= 10000 x1601) (= (x1970 x1601) (x2553 x1601))))
(assert (x3087 x2670))
(assert (= (and (not x695) x923) x3378))
(assert (x136 x2280))
(assert (= x184 (and (not x3218) x4161)))
(assert (= x4436 (and x3285 x4875)))
(assert (= (=> (and (= x449 x4294) (= x1065 x1099)) x1566) x2841))
(assert (x3087 x1502))
(assert (= x3840 (and x2239 (not x3933))))
(assert (= x3991 (x1315 (x1970 x3991))))
(assert (x3087 x3594))
(assert (= (=> (and (= x2586 x4175) (= x4170 0)) x4007) x1248))
(assert (= x1034 (and x3006 (not x3588))))
(assert (= (=> (= x375 (= x4263 x1142)) (and (=> (and (= x2077 x538) x375) x1311) (=> (and (not x375) (= x1969 (> x4263 0))) (and (=> (and (= x2077 x3844) (not x1969)) x3550) (=> (and (and (and (= (= 0 x3416) x1755) (<= 0 x2844) (> 1461501637330902918203684832716283019655932542976 x3416) (<= 0 x4675) (= (x350 x99 1) x3752) (not (= x2844 0)) (<= x3416 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x4675) (= (x709 (x1970 x1627) x1715 0) x99) (= (x676 x3752) x4675) (<= x2844 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2844 (x2754 x3166)) (<= 0 x3416) (= x3166 (x350 x3752 1)) (<= x4675 1461501637330902918203684832716283019655932542975) (= (x3164 (+ x2077 96)) x3305) (= x3416 (x598 x99))) (or (and (and (= (x350 x1153 1) x4763) (= x1153 (x709 (x1970 x3416) x1715 0))) (not x1755)) (and (= x4850 (x350 x1715 1)) x1755))) x1969) x1448))))) x656))
(assert (= x4140 (and (not x2888) x3828)))
(assert (x3087 x3816))
(assert (= x4029 (x1315 (x1970 x4029))))
(assert (= x4267 (and x1940 x4077)))
(assert (x3087 x189))
(assert (x3087 x135))
(assert (x3087 x4522))
(assert (x3087 x1183))
(assert (= (and (not x1192) x1662) x596))
(assert (x3087 x1532))
(assert (= (and x3818 x2739) x3625))
(assert (x487 x3979))
(assert (x4604 x2604 x4204))
(assert (= (x1970 2835717307) (x2553 2835717307)))
(assert (x136 x2238))
(assert (= x1896 (and x2354 x495)))
(assert (= x1051 (and x3805 x4708)))
(assert (x3087 x464))
(assert (x3087 x624))
(assert (x3087 x394))
(assert (x136 x351))
(assert (= x574 (and x3421 (not x4891))))
(assert (= x2781 (=> (and (= x4003 x4113) (= x265 x3236)) x2200)))
(assert (= x3953 (=> (and (= x2449 0) (= x3033 x3796)) x4582)))
(assert (= (and x1184 (not x3080)) x2992))
(assert (x3087 x1862))
(assert (x136 x4332))
(assert (= (x1315 (x1970 x2736)) x2736))
(assert (x3087 x4714))
(assert (x3087 x1232))
(assert (x3087 x3537))
(assert (= (x1315 (x1970 x3193)) x3193))
(assert (= x246 (and (not x2516) x4331)))
(assert (= (and x4371 x50) x338))
(assert (x3087 x4384))
(assert (x3374 x2132))
(assert (= x779 (and x4539 x367)))
(assert (x3087 x3454))
(assert (x3087 x1665))
(assert (x136 x4663))
(assert (= x4362 (and x124 (not x2662))))
(assert (= x2632 (or x1680 x250)))
(assert (x3087 x3389))
(assert (x3087 x3500))
(assert (x3087 x335))
(assert (= x2683 (and x2306 x270)))
(assert (x3087 x1626))
(assert (= (x1315 (x1970 x2238)) x2238))
(assert (x3087 x19))
(assert (= (=> (and (= x2950 x1117) (= x1080 x3516)) x2882) x979))
(assert (= (x1315 (x350 x4088 2)) (+ (x1315 x4088) 2)))
(assert (= (and x2481 x1463) x1130))
(assert (= (=> (and (or (and x3635 (= x1142 x107)) (and (not x3635) (= 0 x1142))) (and (= (x709 (x1970 x2280) (x2553 157) 0) x1715) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2271) (= x3310 (x709 (x1970 x1627) x2974 0)) (= x4263 (x2754 x3788)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x107) (>= x377 0) (= (x2242 x86) x3663) (= x1158 (x709 (x1970 x1627) x1746 0)) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x2280) (= x86 (x350 x1158 2)) (= x229 (x709 (x1970 x1627) x1715 0)) (= (x315 x3310) x377) (<= x4263 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4332 (x371 1461501637330902918203684832716283019655932542975 x1305)) (<= 0 x4263) (= (x350 x229 2) x3788) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x377) (= (x350 x3310 1) x2818) (= (x709 (x1970 x4332) (x2553 159) 0) x2974) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x4002) (= (> x107 x2271) x3635) (>= x107 0) (= x107 (x1352 x2818)) (<= x3663 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3663 0) (>= x2271 0) (= x1746 (x709 (x1970 x4002) (x2553 156) 0)))) x656) x2288))
(assert (x3087 x1838))
(assert (= (and x1331 x4738) x2920))
(assert (= x2636 (x1315 (x1970 x2636))))
(assert (= (and x2864 x4456) x4676))
(assert (x3087 x3466))
(assert (= x2747 (=> (and (<= 0 x2505) (= x1530 (x1595 (- x4537 x2505))) (= x4735 (< 0 x1530)) (>= 1461501637330902918203684832716283019655932542975 x2505) (< x2505 1461501637330902918203684832716283019655932542976) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x4537)) (and (=> (and (not x4735) (and (= x4158 452) (>= 1461501637330902918203684832716283019655932542975 x290) (>= x290 0) (= x290 x1978) (< x290 1461501637330902918203684832716283019655932542976))) x4794) (=> (and x4735 (and (and (= x3093 452) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x1346) (= x396 (= x4345 x1346))) (or (and (and (or (and x367 (and (not (> 4 x3468)) (> 1461501637330902918203684832716283019655932542976 x835) (= x1404 (x4396 (x1970 x3111))) (= x3120 1865448899) (= x1618 50292402827334880472107169365697159231523039388532301717704428044325102813184) (< x3120 2217467699) (not (= 1856199391 x3120)) (>= x835 0) (= x3468 4) (= x3178 1) (= x4862 32) (not (< x3120 988262939)) (<= x835 1461501637330902918203684832716283019655932542975) (not (= x3120 1857877511)) (not (> 1856199391 x3120)) (= x3468 4) (> x1404 0))) (and (and (and x2382 (and (not (= 1856199391 x4379)) (< x755 1461501637330902918203684832716283019655932542976) (>= x755 0) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x4440) (> 2217467699 x4379) (= 1 x3178) (not (> 4 x949)) (= x949 4) (= x4379 1865448899) (= x949 4) (not (= x4379 1857877511)) (= 32 x4862) (<= x755 1461501637330902918203684832716283019655932542975) (= x187 (x4396 (x1970 x3939))) (not (< x4379 988262939)) (> x187 0) (not (> 1856199391 x4379)))) (= (= x1346 x3939) x2382)) (not x367))) (= x367 (= x1346 x3111))) (not x396)) (and (and (<= 0 x1001) (= x311 1865448899) (= x1660 50292402827334880472107169365697159231523039388532301717704428044325102813184) (<= x1001 1461501637330902918203684832716283019655932542975) (not (= x311 1856199391)) (= x3290 4) (= x3178 1) (= x3897 (x4396 (x1970 x4345))) (= x4862 32) (> x3897 0) (= 4 x3290) (> 1461501637330902918203684832716283019655932542976 x1001) (not (= 1857877511 x311)) (not (> 988262939 x311)) (not (< x311 1856199391)) (> 2217467699 x311) (not (< x3290 4))) x396)))) x3281)))))
(assert (x3087 x3990))
(assert (= x1184 (and x1203 x3749)))
(assert (=> (<= x2396 10000) (= (x1970 x2396) (x2553 x2396))))
(assert (x3087 x2731))
(assert (x1816 x632))
(assert (=> (<= x728 10000) (= (x1970 x728) (x2553 x728))))
(assert (=> (>= 10000 x767) (= (x2553 x767) (x1970 x767))))
(assert (= x637 (x1315 (x1970 x637))))
(assert (= x705 (x1315 (x1970 x705))))
(assert (x3087 x4335))
(assert (= (and (not x4735) x91) x25))
(assert (x3087 x466))
(assert (=> (>= 10000 x1727) (= (x1970 x1727) (x2553 x1727))))
(assert (= x4410 (and (not x1022) x3279)))
(assert (= (and x361 x2725) x1120))
(assert (= (and x1740 x3748) x3951))
(assert (=> (<= x1932 10000) (= (x1970 x1932) (x2553 x1932))))
(assert (= x3688 (x1315 (x1970 x3688))))
(assert (x3087 x702))
(assert (x3087 x3517))
(assert (= (=> (and (= x2341 x4522) (= x2821 x837)) x4033) x640))
(assert (x136 x3219))
(assert (= (+ (x1315 x2274) 2) (x1315 (x350 x2274 2))))
(assert (x3087 x2470))
(assert (= (+ (x1315 x4557) 1) (x1315 (x350 x4557 1))))
(assert (= (and (not x4683) x1994) x3266))
(assert (= x3101 (and x3547 x819)))
(assert (= (+ 2 (x1315 x3428)) (x1315 (x350 x3428 2))))
(assert (= (x1315 (x2553 24044834009420335638544845215851342251227478490780828673611325350056707489792)) 24044834009420335638544845215851342251227478490780828673611325350056707489792))
(assert (= x4148 (and x4744 x875)))
(assert (= (=> (and (= x2607 x3707) (= x2404 0)) x3362) x2240))
(assert (= (and (not x2362) x2755) x2424))
(assert (= x3559 (and x119 x442)))
(assert (x3087 x2449))
(assert (x136 x4494))
(assert (x3087 x2251))
(assert (x3087 x2076))
(assert (x3087 x2385))
(assert (x3087 x277))
(assert (= x4420 (=> (and (= x4724 0) (= x1851 x585)) x219)))
(assert (x3087 x1510))
(assert (x3087 x769))
(assert (= x2171 (and x4669 x1856)))
(assert (= x2081 (and x4588 x4751)))
(assert (= x4164 (and x4810 x3621)))
(assert (x3087 x1077))
(assert (x3087 x3970))
(assert (= x4460 (and x1706 x3235)))
(assert (= (x1315 (x350 x1487 1)) (+ 1 (x1315 x1487))))
(assert (= x2727 (and x4515 x175)))
(assert (= x1875 (and x4077 (not x1940))))
(assert (= x2312 (and (not x343) x1326)))
(assert (x3087 x620))
(assert (x3087 x890))
(assert (x3087 x1290))
(assert (= x341 (=> (and (= x3965 x3009) (= x752 0)) x1956)))
(assert (x3087 x1535))
(assert (= x4561 (and x3626 x1864)))
(assert (= x1305 (x1315 (x1970 x1305))))
(assert (= x3243 (and (not x2303) x223)))
(assert (= x384 (or x2114 x332)))
(assert (= (and x4643 x994) x1764))
(assert (x3087 x3144))
(assert (x3087 x4801))
(assert (= x1953 (or x404 x3817)))
(assert (= (=> (= (= 0 x1118) x4355) (and (=> (and x4355 (= x2073 x4198)) x3511) (=> (and (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1996) true) (< x1996 32)) (> x1996 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2133) (not x4355)) (and (=> (and (not x2133) (and (= x4517 x2073) (= 32 x860) (= 1 x2962))) x1751) (=> (and x2133 (= x2073 x4198)) x3511))))) x1084))
(assert (=> (<= x1250 10000) (= (x2553 x1250) (x1970 x1250))))
(assert (= (or (and (not x2371) x3667) x2672) x3441))
(assert (x3087 x2059))
(assert (= (=> (= (= x3934 x139) x4810) (and (=> x4810 x2230) (=> (and (= (> x3934 0) x3597) (not x4810)) (and (=> (not x3597) x3098) (=> (and x3597 (and (and (> 1461501637330902918203684832716283019655932542976 x3804) (<= 0 x2435) (<= 0 x4776) (<= 0 x3804) (= x3804 (x3153 x2669)) (>= 1461501637330902918203684832716283019655932542975 x3804) (< x2435 1461501637330902918203684832716283019655932542976) (= x2435 (x75 x4424)) (= x2562 (= x2435 0)) (= x4424 (x709 (x1970 x421) x1487 0)) (= x2669 (x350 x4424 1)) (= x4776 (x2227 x3499)) (>= 1461501637330902918203684832716283019655932542975 x2435) (not (= 0 x4776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4776) (= (x350 x2669 1) x3499)) (or (and (= (x350 x1487 1) x2533) x2562) (and (not x2562) (and (= (x709 (x1970 x2435) x1487 0) x563) (= (x350 x563 1) x1804)))))) x1836))))) x3569))
(assert (= (or x3671 x1747) x2417))
(assert (x136 x3913))
(assert (x3087 x3923))
(assert (= x3254 (and x3223 x165)))
(assert (x3087 x2598))
(assert (= (or (and (not x582) x205) (and x4265 x3018) x3894 x3167 (and x3741 x1456) (and x1868 (not x1609))) x2179))
(assert (x136 x1351))
(assert (x3087 x3562))
(assert (x136 x3324))
(assert (= (or x3522 x1155 x3300 x2329 x1894 x2599) x3948))
(assert (= x2545 (=> (and (= x500 x1851) (= x2656 0)) x16)))
(assert (= x778 (x1315 (x1970 x778))))
(assert (x3087 x4846))
(assert (x3087 x1996))
(assert (= (and x3840 x756) x936))
(assert (= x813 (and x4565 (not x328))))
(assert (= x307 (and (not x3224) x2881)))
(assert (= x469 (x1315 (x1970 x469))))
(assert (x3087 x4321))
(assert (x3087 x511))
(assert (x136 x1945))
(assert (= (and x2729 (not x4486)) x2557))
(assert (= x2959 (x1315 (x1970 x2959))))
(assert (= x3681 (or x144 x3875 x427 x4014)))
(assert (x3087 x3762))
(assert (x3087 x4603))
(assert (x3087 x1075))
(assert (=> (<= x2043 10000) (= (x2553 x2043) (x1970 x2043))))
(assert (= (x1315 (x1970 x4878)) x4878))
(assert (x3087 x3112))
(assert (x3087 x4475))
(assert (= (and x2334 (not x3968)) x4191))
(assert (x3087 x4681))
(assert (= x2250 (or x1363 x2014 x4271 x2853)))
(assert (x3087 x1194))
(assert (x3314 x717))
(assert (x3087 x1637))
(assert (=> (>= 10000 x2350) (= (x2553 x2350) (x1970 x2350))))
(assert (x3087 x2496))
(assert (x3087 x3530))
(assert (x3087 x305))
(assert (x3087 x2141))
(assert (x3087 x2219))
(assert (= 989455977 (x1315 (x2553 989455977))))
(assert (= (or (and x1293 (not x938)) x4297) x416))
(assert (= (or (and x2537 (not x2863)) x2473) x3371))
(assert (x3087 x2253))
(assert (=> (>= 10000 x4509) (= (x2553 x4509) (x1970 x4509))))
(assert (x3087 x541))
(assert (= (and x1699 x2145) x2277))
(assert (x487 x2128))
(assert (x3087 x2262))
(assert (=> (<= x2786 10000) (= (x1970 x2786) (x2553 x2786))))
(assert (x3087 x1786))
(assert (= x2616 (or x852 x618 x1289 x264 x1181 x3360)))
(assert (x3087 x2836))
(assert (x3087 x3712))
(assert (x3087 x951))
(assert (x136 x2601))
(assert (x3087 x4470))
(assert (= (+ 1 (x1315 x218)) (x1315 (x350 x218 1))))
(assert (x3087 x2043))
(assert (x3087 x809))
(assert (= x704 (or x911 x1071)))
(assert (x3087 x4488))
(assert (= (and (not x958) x4298) x4741))
(assert (= (x1315 (x350 x1882 2)) (+ 2 (x1315 x1882))))
(assert (= (+ 1 (x1315 x166)) (x1315 (x350 x166 1))))
(assert (x3087 x283))
(assert (x136 x420))
(assert (= (or x385 x3765) x882))
(assert (= (x1315 (x350 x4896 1)) (+ (x1315 x4896) 1)))
(assert (= x4563 (and x2312 (not x3220))))
(assert (= x1864 (and (not x733) x1547)))
(assert (=> (<= x2820 10000) (= (x1970 x2820) (x2553 x2820))))
(assert (= (+ (x1315 x2260) 1) (x1315 (x350 x2260 1))))
(assert (= x1401 (and x109 x1284)))
(assert (x3087 x4111))
(assert (x136 x3335))
(assert (x3087 x3016))
(assert (= x2870 (=> (= x3933 (= x1995 x1999)) (and (=> (and (= x756 (> x1999 0)) (not x3933)) (and (=> (and (and (and (>= x1165 0) (= (x709 (x1970 x1961) x2090 0) x1389) (= (x3750 x1389) x555) (= (x350 x4459 1) x2383) (> 1461501637330902918203684832716283019655932542976 x555) (= x4459 (x350 x1389 1)) (<= x1165 1461501637330902918203684832716283019655932542975) (= x4868 (= x555 0)) (= x1165 (x3781 x4459)) (= x1961 (x371 1461501637330902918203684832716283019655932542975 x620)) (not (= x2373 0)) (> 1461501637330902918203684832716283019655932542976 x1165) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2373) (<= 0 x2373) (>= x555 0) (= (x3107 x2383) x2373) (<= x555 1461501637330902918203684832716283019655932542975)) (or (and x4868 (= (x350 x2090 1) x2279)) (and (and (= x4296 (x709 (x1970 x555) x2090 0)) (= (x350 x4296 1) x23)) (not x4868)))) x756) x4152) (=> (not x756) x1611))) (=> x3933 x3078)))))
(assert (x136 x1710))
(assert (x3087 x3177))
(assert (x3087 x2298))
(assert (=> (>= 10000 x3914) (= (x2553 x3914) (x1970 x3914))))
(assert (=> (>= 10000 x3976) (= (x1970 x3976) (x2553 x3976))))
(assert (= x2711 (x1315 (x1970 x2711))))
(assert (= x4399 (and (not x17) x105)))
(assert (x3087 x4329))
(assert (= x644 (and x1195 x782)))
(assert (x3087 x1099))
(assert (= (and x1691 x1916) x1174))
(assert (x3087 x2621))
(assert (x3087 x1178))
(assert (x3314 x2214))
(assert (= (or x699 x1355) x4632))
(assert (= x1006 (and x4550 x2609)))
(assert (= (and x2658 x502) x3489))
(assert (x3087 x4703))
(assert (x3087 x2960))
(assert (= x2494 (and x3926 x3932)))
(assert (= (x1315 (x1970 x484)) x484))
(assert (= (x1315 (x2553 2691771752)) 2691771752))
(assert (= x4462 (or x750 x336)))
(assert (= (and x186 x4834) x2393))
(assert (x3087 x1937))
(assert (x487 x4370))
(assert (x136 x4118))
(assert (= (+ (x1315 x232) 1) (x1315 (x350 x232 1))))
(assert (= (and x1564 x1026) x1249))
(assert (= (x1315 (x350 x1746 2)) (+ (x1315 x1746) 2)))
(assert (x3087 x807))
(assert (x3087 x2695))
(assert (=> (<= x484 10000) (= (x1970 x484) (x2553 x484))))
(assert (x487 x4204))
(assert (x3087 x2674))
(assert (= (and x353 (not x1233)) x4136))
(assert (= (and x844 x339) x2589))
(assert (x136 x2752))
(assert (x3087 x1817))
(assert (= (=> (and (or (not x2591) x2591) (= (= x3337 0) x2591)) x2789) x2234))
(assert (=> (>= 10000 x1351) (= (x2553 x1351) (x1970 x1351))))
(assert (x3087 x3960))
(assert (x3087 x1079))
(assert (= x3926 (and (not x3719) x3266)))
(assert (= x1867 (and x4880 x3681)))
(assert (=> (<= x4585 10000) (= (x1970 x4585) (x2553 x4585))))
(assert (x3087 x1797))
(assert (=> (<= x2321 10000) (= (x1970 x2321) (x2553 x2321))))
(assert (x4604 x2897 x2455))
(assert (= x4893 (and x1606 x3954)))
(assert (= x4864 (=> (and (= (= x529 x4345) x4834) (= (ite (= 0 x4020) 1 0) x3308) (= x529 (x371 1461501637330902918203684832716283019655932542975 x1305)) (> x3551 0) (= x4001 (x1884 x428 x3308)) (= x2098 (ite (= x728 1) 1 0)) (= (x371 x4001 x1980) x3551) (= (ite (< 31 x4020) 1 0) x2048) (= x428 (x371 x2098 x2048)) (= (x1595 (- x3004 x2000)) x213) (= x3004 (x3164 (+ x2512 32))) (= (x3164 (+ 4 x2000)) x2512)) (and (=> (and (not x4834) (= x2362 (= x3111 x529))) (and (=> (and (and (= x266 (= x529 x3939)) (and x266 (and (> 405663989 x4139) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x1104) (= (x4396 (x1970 x3939)) x2356) (= (or (> x3930 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3930 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3930)))) x2609) (< x4139 2217467699) (= (x1595 (- x2502 4)) x3930) (= x2659 x3461) (= x213 x2502) (> 988262939 x4139) (> x2356 0) (= x4139 242558722) (not (= x4139 178855970)) (= x2502 36) (not (= 75483562 x4139)) (not (> 4 x2502))))) (not x2362)) (and (=> (and (= x4198 x3440) x2609) x3511) (=> (and (and (<= x3144 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x705) (x2553 6) 0) x4786) (<= 0 x3144) (= (< x3144 x3461) x2878) (= x3144 (x1702 x4786)) (= x2659 x675)) (not x2609)) (and (=> (and (and (= (< x612 x2659) x3467) (= (x1702 x4386) x612) (>= x612 0) (= (x709 (x1970 x705) (x2553 6) 0) x4386) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x612)) (not x2878)) (and (=> (and (and (= x3454 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2659))) (<= 0 x3440) (<= x3440 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3440 x3454) x1192) (= x3151 (x1595 (- x612 x2659)))) (not x3467)) (and (=> (and (= x3440 x4198) x1192) x3511) (=> (and (and (= 128 x283) (>= x755 0) (<= x755 1461501637330902918203684832716283019655932542975) (= (= x755 x2063) x365) (< x755 1461501637330902918203684832716283019655932542976) (= (x3164 (+ x2659 x3440)) x239) (= x2073 (x3164 (+ x2659 x3440)))) (not x1192)) (and (=> (and (and (= x874 100) (< 0 x4579) (= (x4396 (x1970 x2063)) x4579) (= 599290589 x2826) (not (> 4 x874)) (= x2621 (x1595 (- x874 4))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1791) (= x498 x3939) (= x675 x406) (= x329 x705) (= x874 100) (> 1466279372 x2826) (= (or (> x2621 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x2621) (= true (<= x2621 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x4138) (not (> 599290589 x2826))) x365) (and (=> (and (and (= x597 (= x705 x329)) (= x329 x1964)) (not x4138)) (and (=> (not x597) x1640) (=> (and (and (= x498 x3060) (= (= x3939 x498) x3325)) x597) (and (=> (not x3325) x1640) (=> (and (and (<= 0 x3717) (= x2031 x406) (= x2775 (x709 (x1970 x329) (x2553 1) 0)) (= x1193 (< x3717 x675)) (= (x2411 x2775) x3717) (<= x3717 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x3325) (and (=> x1193 x1640) (=> (and (not x1193) (= (< x3717 x406) x997)) (and (=> x997 x1640) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x106) (= (x709 (x1970 x498) (x2553 1) 0) x4571) (= x4900 (x709 (x1970 x329) (x2553 1) 0)) (= (> x106 x4507) x3366) (= x4507 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x406))) (= x4499 (x1595 (- x3717 x406))) (<= 0 x106) (= (x4602 x4571) x106)) (not x997)) (and (=> x3366 x1640) (=> (and (and (= x2461 (x3164 (+ x106 x406))) (= (< x2461 x106) x1455)) (not x3366)) (and (=> (and (not x1455) (and (= (x2023 x3050) x3318) (= (< x3318 x406) x3130) (= x3050 (x709 (x1970 x3939) x2825 0)) (= (x709 (x1970 x329) (x2553 2) 0) x2825) (>= x3318 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3318) (= (x709 (x1970 x498) (x2553 1) 0) x1198))) (and (=> x3130 x1640) (=> (and (not x3130) (= x3414 (> x406 x3318))) (and (=> x3414 x1640) (=> (and (and (= (x709 (x1970 x329) (x2553 2) 0) x3998) (= x1422 (x1595 (- x3318 x406))) (= 1 x3512) (= 32 x4132) (= (x709 (x1970 x3939) x3998 0) x3398)) (not x3414)) x2131))))) (=> x1455 x1640))))))))))))) (=> x4138 x1640))) (=> (and (= x489 (= x755 x4345)) (not x365)) (and (=> (and (not x489) (= x788 (= x755 x3111))) (and (=> (and (not x788) (and (and (and (= (or (and (= true (<= x4591 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x4591)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4591)) x1778) (= x4698 100) (= x4698 100) (= x675 x2737) (= x4234 x3939) (not (= x3682 547091486)) (= (x4396 (x1970 x3939)) x662) (not (= x3682 405663989)) (> x662 0) (= x4591 (x1595 (- x4698 4))) (= x3686 x705) (= x1922 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x3682) (not (> 405663989 x3682)) (> 988262939 x3682) (< x3682 2217467699) (not (> 4 x4698))) x672) (= x672 (= x755 x3939)))) (and (=> (and (not x1778) (and (= (= x3686 x705) x1043) (= x3686 x286))) (and (=> (not x1043) x800) (=> (and (and (= x4234 x2065) (= (= x3939 x4234) x3328)) x1043) (and (=> (and x3328 (and (= x1281 (x709 (x1970 x3686) (x2553 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1175) (= x2737 x4791) (= x1175 (x588 x1281)) (= (< x1175 x675) x4078) (<= 0 x1175))) (and (=> x4078 x800) (=> (and (not x4078) (and (= (> x2737 x263) x4349) (<= 0 x263) (= x2938 (x709 (x1970 x3686) (x2553 5) 0)) (<= x263 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x588 x2938) x263))) (and (=> x4349 x800) (=> (and (and (= (x3481 x4419) x1347) (= x3404 (> x1347 x3208)) (= x3208 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2737))) (>= x1347 0) (= x724 (x1595 (- x263 x2737))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1347) (= (x709 (x1970 x4234) (x2553 5) 0) x4419)) (not x4349)) (and (=> (and (and (= 1 x3020) (= x1787 32) (= x1350 1) (= (x3164 (+ x1347 x2737)) x3315)) (not x3404)) x302) (=> x3404 x800))))))) (=> (not x3328) x800))))) (=> x1778 x800))) (=> (and x788 (and (< x1535 988262939) (not (= 405663989 x1535)) (not (< x1535 405663989)) (= x675 x3156) (= x1535 599290589) (= x705 x1409) (= x2615 (x1595 (- x3903 4))) (= x3939 x1247) (< 0 x1260) (= x2440 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2615) true) (< x2615 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2615))) (not (= 547091486 x1535)) (< x1535 2217467699) (= x1260 (x4396 (x1970 x3111))) (not (> 4 x3903)) (= 100 x3903) (= 100 x3903) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2868))) (and (=> (and (not x2440) (and (= x483 x1409) (= x3373 (= x705 x1409)))) (and (=> (not x3373) x3953) (=> (and x3373 (and (= x2025 (= x3939 x1247)) (= x2365 x1247))) (and (=> (not x2025) x3953) (=> (and (and (= x3156 x2560) (= (x715 x3952) x1074) (= x3952 (x709 (x1970 x1409) (x2553 5) 0)) (<= 0 x1074) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1074) (= x4556 (> x675 x1074))) x2025) (and (=> (and (and (= x1670 (x709 (x1970 x1409) (x2553 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2759) (= (x715 x1670) x2759) (= (< x2759 x3156) x795) (<= 0 x2759)) (not x4556)) (and (=> (and (not x795) (and (= (x709 (x1970 x1247) (x2553 5) 0) x3169) (= (x1595 (- x2759 x3156)) x2569) (<= 0 x4032) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4032) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3156)) x3693) (= x4807 (< x3693 x4032)) (= (x2945 x3169) x4032))) (and (=> (and (and (= x3033 32) (= 1 x3353) (= x4555 (x3164 (+ x4032 x3156))) (= x2449 1)) (not x4807)) x4582) (=> x4807 x3953))) (=> x795 x3953))) (=> x4556 x3953))))))) (=> x2440 x3953))))) (=> (and (and (= x3939 x770) (= 599290589 x319) (> 2217467699 x319) (= x705 x3226) (= x2832 x675) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2162) (not (= x319 547091486)) (= x1079 100) (= x3987 (x1595 (- x1079 4))) (> x2973 0) (> 988262939 x319) (= x2973 (x4396 (x1970 x4345))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3987) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3987)) (< x3987 96))) x4346) (not (= x319 405663989)) (not (> 405663989 x319)) (= x1079 100) (not (< x1079 4))) x489) (and (=> (and (not x4346) (and (= x3226 x3437) (= (= x3226 x705) x3081))) (and (=> (not x3081) x4624) (=> (and (and (= (= x3939 x770) x758) (= x126 x770)) x3081) (and (=> (and (and (= (> x675 x1760) x823) (= x2211 x2832) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1760) (= x3369 (x709 (x1970 x3226) (x2553 5) 0)) (= x1760 (x2452 x3369)) (<= 0 x1760)) x758) (and (=> (and (and (= x3801 (x2452 x3013)) (>= x3801 0) (<= x3801 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x3226) (x2553 5) 0) x3013) (= (< x3801 x2832) x2921)) (not x823)) (and (=> (and (and (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2832)) x4163) (= x3055 (x4662 x2663)) (= (x709 (x1970 x770) (x2553 5) 0) x2663) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3055) (= x762 (x1595 (- x3801 x2832))) (= (< x4163 x3055) x1827) (<= 0 x3055)) (not x2921)) (and (=> x1827 x4624) (=> (and (not x1827) (and (= 32 x3812) (= 1 x1010) (= x2053 1) (= (x3164 (+ x3055 x2832)) x1615))) x4441))) (=> x2921 x4624))) (=> x823 x4624))) (=> (not x758) x4624))))) (=> x4346 x4624))))))))) (=> (and (= x4198 x3440) x3467) x3511))) (=> (and (= x3440 x4198) x2878) x3511))))) (=> (and x2362 (and (> 988262939 x542) (> 2217467699 x542) (= (x4396 (x1970 x3111)) x4202) (> x4202 0) (not (= x542 75483562)) (= x3461 x3889) (= x443 6539370208772218570076773595062200405109424842860869254164860851635934461952) (= 36 x3479) (= x3479 x213) (= x542 242558722) (< x542 405663989) (= (or (and (< x3025 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3025) true)) (> x3025 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2302) (= x3025 (x1595 (- x3479 4))) (not (> 4 x3479)) (not (= 178855970 x542)))) (and (=> (and (= x4700 x108) x2302) x3831) (=> (and (and (= (x3134 x3211) x592) (= (> x3461 x592) x419) (<= x592 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3211 (x709 (x1970 x705) (x2553 6) 0)) (= x3889 x4262) (>= x592 0)) (not x2302)) (and (=> (and x419 (= x4700 x108)) x3831) (=> (and (not x419) (and (= (x709 (x1970 x705) (x2553 6) 0) x2173) (= x1024 (x3134 x2173)) (<= x1024 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1516 (< x1024 x3889)) (<= 0 x1024))) (and (=> (and (= x108 x4700) x1516) x3831) (=> (and (and (<= x108 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3927 (x1595 (- x1024 x3889))) (<= 0 x108) (= x2700 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3889))) (= x3073 (< x2700 x108))) (not x1516)) (and (=> (and (= x108 x4700) x3073) x3831) (=> (and (not x3073) (and (> 1461501637330902918203684832716283019655932542976 x835) (= x1589 128) (<= 0 x835) (= x4484 (x3164 (+ x108 x3889))) (<= x835 1461501637330902918203684832716283019655932542975) (= (= x2063 x835) x2297) (= (x3164 (+ x3889 x108)) x333))) (and (=> (and (= x495 (= x835 x4345)) (not x2297)) (and (=> (and (= x4301 (= x3111 x835)) (not x495)) (and (=> (and (and (= x1502 x705) (not (= x2076 547091486)) (= x3072 100) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1167)) (< x1167 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1167)) x2499) (= x369 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3111 x4393) (= (x4396 (x1970 x3111)) x3342) (= (x1595 (- x3072 4)) x1167) (= x3072 100) (< x2076 988262939) (not (> 4 x3072)) (< x2076 2217467699) (not (< x2076 405663989)) (= x2076 599290589) (> x3342 0) (= x4884 x4262) (not (= x2076 405663989))) x4301) (and (=> (and (not x2499) (and (= (= x1502 x705) x2918) (= x736 x1502))) (and (=> (not x2918) x55) (=> (and x2918 (and (= x4393 x120) (= x654 (= x4393 x3111)))) (and (=> (and x654 (and (= (> x4262 x4599) x3632) (= x4599 (x715 x3241)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4599) (>= x4599 0) (= (x709 (x1970 x1502) (x2553 5) 0) x3241) (= x3485 x4884))) (and (=> (and (and (= (< x1599 x4884) x3813) (= x1135 (x709 (x1970 x1502) (x2553 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1599) (<= 0 x1599) (= (x715 x1135) x1599)) (not x3632)) (and (=> x3813 x55) (=> (and (and (= (x1371 x1628) x809) (<= x809 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x809 0) (= x3088 (> x809 x85)) (= x85 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4884))) (= (x709 (x1970 x4393) (x2553 5) 0) x1628) (= x3795 (x1595 (- x1599 x4884)))) (not x3813)) (and (=> (and (not x3088) (and (= x2199 1) (= x983 1) (= (x3164 (+ x809 x4884)) x541) (= 32 x1838))) x154) (=> x3088 x55))))) (=> x3632 x55))) (=> (not x654) x55))))) (=> x2499 x55))) (=> (and (not x4301) (and (= (= x3939 x835) x3907) (and (and (= x4262 x2713) (= x411 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x1287 988262939) (= 100 x3207) (= x3503 (x1595 (- x3207 4))) (= x1243 (x4396 (x1970 x3939))) (not (= x1287 547091486)) (= 100 x3207) (= x1287 599290589) (> 2217467699 x1287) (= x3111 x2068) (not (> 4 x3207)) (not (= x1287 405663989)) (= x2901 x705) (not (> 405663989 x1287)) (> x1243 0) (= x3613 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3503) (and (= true (<= x3503 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x3503))))) x3907))) (and (=> x3613 x4610) (=> (and (not x3613) (and (= x556 x2901) (= (= x705 x2901) x1785))) (and (=> (not x1785) x4610) (=> (and x1785 (and (= x2068 x4634) (= x2952 (= x2068 x3111)))) (and (=> (and x2952 (and (= (< x3067 x4262) x3993) (<= x3067 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x588 x1580) x3067) (= x42 x2713) (= (x709 (x1970 x2901) (x2553 5) 0) x1580) (<= 0 x3067))) (and (=> (and (not x3993) (and (>= x4083 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4083) (= (> x2713 x4083) x3909) (= x4083 (x588 x2)) (= (x709 (x1970 x2901) (x2553 5) 0) x2))) (and (=> (and (and (= (x1595 (- x4083 x2713)) x4285) (<= x3500 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x2068) (x2553 5) 0) x734) (= (> x3500 x3214) x4655) (= x3214 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2713))) (>= x3500 0) (= (x2428 x734) x3500)) (not x3909)) (and (=> (and (and (= x3187 1) (= 32 x3142) (= (x3164 (+ x3500 x2713)) x3296) (= x2731 1)) (not x4655)) x1531) (=> x4655 x4610))) (=> x3909 x4610))) (=> x3993 x4610))) (=> (not x2952) x4610))))))))) (=> (and x495 (and (= x470 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2664) (and (< x2664 96) (= true (<= x2664 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= 547091486 x3124)) (> x2126 0) (not (< x3124 405663989)) (= 599290589 x3124) (= x1681 x4262) (= (x4396 (x1970 x4345)) x2126) (= x4488 100) (not (> 4 x4488)) (< x3124 988262939) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x771) (not (= x3124 405663989)) (= x3111 x519) (= (x1595 (- x4488 4)) x2664) (< x3124 2217467699) (= 100 x4488) (= x767 x705))) (and (=> (and (and (= x4770 (= x767 x705)) (= x1256 x767)) (not x470)) (and (=> (not x4770) x113) (=> (and (and (= (= x3111 x519) x1940) (= x801 x519)) x4770) (and (=> (and (and (= x4852 (< x231 x4262)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x231) (= x3808 (x709 (x1970 x767) (x2553 5) 0)) (= x1681 x1931) (<= 0 x231) (= x231 (x2452 x3808))) x1940) (and (=> x4852 x113) (=> (and (and (= (x2452 x1883) x3099) (= (> x1681 x3099) x4886) (= x1883 (x709 (x1970 x767) (x2553 5) 0)) (>= x3099 0) (<= x3099 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4852)) (and (=> (and (not x4886) (and (= x3365 (x1595 (- x3099 x1681))) (= (x562 x4044) x2150) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2150) (= x789 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1681))) (= (x709 (x1970 x519) (x2553 5) 0) x4044) (= x119 (> x2150 x789)) (<= 0 x2150))) (and (=> x119 x113) (=> (and (and (= (x3164 (+ x1681 x2150)) x3975) (= x4481 1) (= x2911 1) (= 32 x3849)) (not x119)) x910))) (=> x4886 x113))))) (=> (not x1940) x113))))) (=> x470 x113))))) (=> (and x2297 (and (= x3712 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3845 (x4396 (x1970 x2063))) (= x3287 (x1595 (- x4656 4))) (= x4262 x2222) (< 0 x3845) (> 1466279372 x3197) (not (< x3197 599290589)) (= 100 x4656) (not (> 4 x4656)) (= x4656 100) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3287)) (< x3287 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3287)) x242) (= x3111 x4878) (= x2820 x705) (= x3197 599290589))) (and (=> x242 x2363) (=> (and (not x242) (and (= x2820 x2108) (= x2795 (= x705 x2820)))) (and (=> (and x2795 (and (= x318 x4878) (= (= x3111 x4878) x2688))) (and (=> (not x2688) x2363) (=> (and (and (<= x2946 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2222 x2087) (= (x2411 x3809) x2946) (= (> x4262 x2946) x4784) (= (x709 (x1970 x2820) (x2553 1) 0) x3809) (>= x2946 0)) x2688) (and (=> (and (= (> x2222 x2946) x11) (not x4784)) (and (=> (and (not x11) (and (= (x709 (x1970 x4878) (x2553 1) 0) x962) (<= 0 x1817) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1817) (= (x709 (x1970 x2820) (x2553 1) 0) x1962) (= x1817 (x2504 x962)) (= x54 (x1595 (- x2946 x2222))) (= x66 (> x1817 x2256)) (= x2256 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2222))))) (and (=> x66 x2363) (=> (and (not x66) (and (= (x3164 (+ x2222 x1817)) x2892) (= x1182 (> x1817 x2892)))) (and (=> x1182 x2363) (=> (and (not x1182) (and (= (< x4391 x2222) x2395) (<= x4391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4391 (x2023 x1759)) (= x892 (x709 (x1970 x2820) (x2553 2) 0)) (>= x4391 0) (= (x709 (x1970 x3111) x892 0) x1759) (= (x709 (x1970 x4878) (x2553 1) 0) x482))) (and (=> (and (not x2395) (= x328 (> x2222 x4391))) (and (=> x328 x2363) (=> (and (not x328) (and (= x4310 32) (= x386 (x1595 (- x4391 x2222))) (= 1 x1876) (= x1847 (x709 (x1970 x2820) (x2553 2) 0)) (= x3917 (x709 (x1970 x3111) x1847 0)))) x1298))) (=> x2395 x2363))))))) (=> x11 x2363))) (=> x4784 x2363))))) (=> (not x2795) x2363))))))))))))))))) (=> (and (and (not (< x1178 4)) (< x1718 405663989) (= x3791 x3461) (< x1718 2217467699) (= x1718 242558722) (not (= x1718 75483562)) (< 0 x1967) (= (x1595 (- x1178 4)) x3370) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3370) (and (< x3370 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3370) true))) x2326) (= x213 x1178) (= 36 x1178) (not (= 178855970 x1718)) (= (x4396 (x1970 x4345)) x1967) (> 988262939 x1718) (= x3108 6539370208772218570076773595062200405109424842860869254164860851635934461952)) x4834) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4586) (>= x4586 0) (= x2964 (x709 (x1970 x705) (x2553 6) 0)) (= x530 x3791) (= x4586 (x1690 x2964)) (= (> x3461 x4586) x4215)) (not x2326)) (and (=> (and x4215 (= x3037 x727)) x4890) (=> (and (and (<= 0 x4147) (<= x4147 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1690 x3289) x4147) (= (x709 (x1970 x705) (x2553 6) 0) x3289) (= (> x3791 x4147) x4785)) (not x4215)) (and (=> (and (= x3037 x727) x4785) x4890) (=> (and (not x4785) (and (= (< x1151 x3037) x4695) (= x1151 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3791))) (= x807 (x1595 (- x4147 x3791))) (>= x3037 0) (<= x3037 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and x4695 (= x727 x3037)) x4890) (=> (and (not x4695) (and (= (= x2063 x1001) x4343) (>= x1001 0) (>= 1461501637330902918203684832716283019655932542975 x1001) (= 128 x4590) (< x1001 1461501637330902918203684832716283019655932542976) (= (x3164 (+ x3037 x3791)) x4212) (= (x3164 (+ x3037 x3791)) x3742))) (and (=> (and x4343 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x135) (= x530 x3057) (not (< x3177 599290589)) (= x1437 (x4396 (x1970 x2063))) (= (or (and (> 96 x696) (= (<= x696 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x696 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x339) (= x2444 100) (= x2321 x4345) (not (> 4 x2444)) (> 1466279372 x3177) (= x696 (x1595 (- x2444 4))) (= x3177 599290589) (< 0 x1437) (= x2444 100) (= x705 x1427))) (and (=> x339 x3591) (=> (and (and (= (= x1427 x705) x1664) (= x1427 x2794)) (not x339)) (and (=> (not x1664) x3591) (=> (and (and (= x4519 x2321) (= (= x2321 x4345) x4874)) x1664) (and (=> (and (and (= x702 x3057) (= x1856 (> x530 x2410)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410) (= (x709 (x1970 x1427) (x2553 1) 0) x3910) (= x2410 (x2411 x3910)) (>= x2410 0)) x4874) (and (=> x1856 x3591) (=> (and (not x1856) (= x2046 (< x2410 x3057))) (and (=> x2046 x3591) (=> (and (not x2046) (and (= (x3905 x4306) x2842) (= (x1595 (- x2410 x3057)) x1215) (<= 0 x2842) (<= x2842 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x2321) (x2553 1) 0) x4306) (= x1729 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3057))) (= x4453 (< x1729 x2842)) (= x1614 (x709 (x1970 x1427) (x2553 1) 0)))) (and (=> (and (and (= x2197 (x3164 (+ x2842 x3057))) (= (> x2842 x2197) x3634)) (not x4453)) (and (=> (and (and (<= x922 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3057 x922) x733) (<= 0 x922) (= (x709 (x1970 x1427) (x2553 2) 0) x45) (= (x2023 x3890) x922) (= x3986 (x709 (x1970 x2321) (x2553 1) 0)) (= (x709 (x1970 x4345) x45 0) x3890)) (not x3634)) (and (=> x733 x3591) (=> (and (not x733) (= (> x3057 x922) x3626)) (and (=> (and (and (= (x1595 (- x922 x3057)) x1397) (= x4601 (x709 (x1970 x1427) (x2553 2) 0)) (= x4782 (x709 (x1970 x4345) x4601 0)) (= x3573 32) (= 1 x2460)) (not x3626)) x4560) (=> x3626 x3591))))) (=> x3634 x3591))) (=> x4453 x3591))))))) (=> (not x4874) x3591))))))) (=> (and (not x4343) (= x4222 (= x4345 x1001))) (and (=> (and (and (= 100 x4184) (= x1330 x530) (not (= 405663989 x1162)) (< 0 x3699) (= x705 x2243) (= x4345 x4012) (= x1162 599290589) (= (x4396 (x1970 x4345)) x3699) (> 988262939 x1162) (= (x1595 (- x4184 4)) x1997) (not (= x1162 547091486)) (> 2217467699 x1162) (= x955 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x1162 405663989)) (not (< x4184 4)) (= (or (> x1997 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1997)) (< x1997 96))) x558) (= 100 x4184)) x4222) (and (=> x558 x3092) (=> (and (not x558) (and (= x4567 (= x2243 x705)) (= x2243 x1343))) (and (=> (and x4567 (and (= x4012 x575) (= x1199 (= x4012 x4345)))) (and (=> (not x1199) x3092) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4533) (= x3176 (x709 (x1970 x2243) (x2553 5) 0)) (= x4533 (x2452 x3176)) (= x2320 x1330) (<= 0 x4533) (= x782 (< x4533 x530))) x1199) (and (=> x782 x3092) (=> (and (and (= (x2452 x147) x3097) (= x114 (> x1330 x3097)) (>= x3097 0) (<= x3097 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x147 (x709 (x1970 x2243) (x2553 5) 0))) (not x782)) (and (=> x114 x3092) (=> (and (not x114) (and (<= x3956 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1007 (x1595 (- x3097 x1330))) (= (x2287 x2315) x3956) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1330)) x2047) (= x2315 (x709 (x1970 x4012) (x2553 5) 0)) (= x2268 (< x2047 x3956)) (<= 0 x3956))) (and (=> (and (not x2268) (and (= 1 x837) (= 32 x4522) (= x1473 (x3164 (+ x1330 x3956))) (= x4344 1))) x640) (=> x2268 x3092))))))))) (=> (not x4567) x3092))))) (=> (and (= x930 (= x1001 x3111)) (not x4222)) (and (=> (and (not x930) (and (= (= x3939 x1001) x1984) (and x1984 (and (> 988262939 x810) (< x810 2217467699) (= (x1595 (- x2764 4)) x3639) (= x2764 100) (= x705 x778) (not (= x810 547091486)) (= x4345 x271) (not (> 405663989 x810)) (= x2668 x530) (= x698 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 405663989 x810)) (= x984 (x4396 (x1970 x3939))) (= 100 x2764) (not (< x2764 4)) (= x810 599290589) (= x2524 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3639) (and (< x3639 96) (= (<= x3639 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (> x984 0))))) (and (=> x2524 x4838) (=> (and (not x2524) (and (= x778 x3345) (= x3217 (= x705 x778)))) (and (=> (and x3217 (and (= (= x4345 x271) x2627) (= x271 x4730))) (and (=> (not x2627) x4838) (=> (and x2627 (and (<= x3985 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3985 (x588 x998)) (<= 0 x3985) (= (> x530 x3985) x343) (= (x709 (x1970 x778) (x2553 5) 0) x998) (= x2668 x4628))) (and (=> x343 x4838) (=> (and (not x343) (and (<= x4413 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x778) (x2553 5) 0) x88) (= x4413 (x588 x88)) (>= x4413 0) (= (> x2668 x4413) x3220))) (and (=> (and (and (= (< x1207 x3995) x3792) (= x1207 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2668))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3995) (= x2554 (x1595 (- x4413 x2668))) (= x3995 (x3867 x2963)) (= (x709 (x1970 x271) (x2553 5) 0) x2963) (>= x3995 0)) (not x3220)) (and (=> (and (not x3792) (and (= x1302 1) (= x82 32) (= 1 x1749) (= (x3164 (+ x2668 x3995)) x854))) x2122) (=> x3792 x4838))) (=> x3220 x4838))))))) (=> (not x3217) x4838))))) (=> (and (and (< 0 x137) (= (x1595 (- x953 4)) x2249) (< x3999 2217467699) (= (or (> x2249 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2249)) (< x2249 96))) x3446) (= x705 x2238) (= (x4396 (x1970 x3111)) x137) (not (> 405663989 x3999)) (= x953 100) (not (= x3999 547091486)) (> 988262939 x3999) (not (= 405663989 x3999)) (= x4345 x3994) (= x530 x602) (= x3999 599290589) (not (> 4 x953)) (= x953 100) (= x1946 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x930) (and (=> x3446 x1240) (=> (and (and (= x348 (= x705 x2238)) (= x2412 x2238)) (not x3446)) (and (=> (not x348) x1240) (=> (and x348 (and (= x1278 x3994) (= (= x4345 x3994) x3749))) (and (=> (and x3749 (and (<= 0 x1880) (= x4328 (x709 (x1970 x2238) (x2553 5) 0)) (= x4764 x602) (= (< x1880 x530) x3080) (<= x1880 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1880 (x715 x4328)))) (and (=> x3080 x1240) (=> (and (and (<= x2258 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2258 0) (= (x709 (x1970 x2238) (x2553 5) 0) x2647) (= (> x602 x2258) x509) (= x2258 (x715 x2647))) (not x3080)) (and (=> (and (and (= x1591 (x1595 (- x2258 x602))) (= (x709 (x1970 x3994) (x2553 5) 0) x472) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x602)) x3885) (>= x580 0) (<= x580 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x580 (x2845 x472)) (= x4011 (< x3885 x580))) (not x509)) (and (=> x4011 x1240) (=> (and (not x4011) (and (= 32 x1693) (= 1 x1658) (= x56 1) (= (x3164 (+ x602 x580)) x2278))) x2174))) (=> x509 x1240))))) (=> (not x3749) x1240))))))))))))))))))) (=> (and (= x3037 x727) x2326) x4890)))))))
(assert (=> (>= 10000 x351) (= (x1970 x351) (x2553 x351))))
(assert (x3087 x449))
(assert (x3087 x3942))
(assert (=> (>= 10000 x1041) (= (x2553 x1041) (x1970 x1041))))
(assert (= x555 (x1315 (x1970 x555))))
(assert (x3087 x4504))
(assert (= x1195 (and x1199 x4788)))
(assert (x3087 x194))
(assert (x3087 x3989))
(assert (x3087 x1908))
(assert (= x4064 (and (=> (and x2548 (and (= x637 x725) (= x3095 x1487) (= x1226 x4402))) x3839) (=> (and (and (= x2359 x637) (= 1 x3606)) (not x2548)) x967))))
(assert (x3087 x1920))
(assert (= x2370 (and (not x2094) x3453)))
(assert (x3087 x201))
(assert (x3087 x1581))
(assert (x3087 x1247))
(assert (= (or x4112 x4497) x4046))
(assert (x3087 x525))
(assert (x3087 x386))
(assert (= x2710 (=> (and (or (not x3424) x3424) (= (= 0 x3272) x3424)) x3660)))
(assert (x3087 x1749))
(assert (= (and (not x1463) x2481) x1752))
(assert (x3087 x3888))
(assert (=> (>= 10000 x2435) (= (x2553 x2435) (x1970 x2435))))
(assert (= x787 (and x3081 x543)))
(assert (x3087 x662))
(assert (= (x1315 (x350 x4186 1)) (+ (x1315 x4186) 1)))
(assert (x3087 x3197))
(assert (= x4201 (=> (and (or (and (and (= (x371 1461501637330902918203684832716283019655932542975 x1305) x3688) (= (x2026 x1517) x4235) (< x4235 256) (<= x4235 255) (= (= 0 x4235) x2987) (= (x709 (x1970 x3688) (x2553 163) 0) x1517) (>= x4235 0)) x2838) (and (= x2987 x2838) (not x2838))) (= x2838 (< 0 x3562))) x714)))
(assert (= 1461501637330902918203684832716283019655932542976 (x1315 (x2553 1461501637330902918203684832716283019655932542976))))
(assert (x3087 x622))
(assert (x136 x2359))
(assert (= x3147 (and x4453 x1220)))
(assert (= x314 (and x2970 (not x888))))
(assert (= (and x84 (not x1172)) x4282))
(assert (x3087 x1936))
(assert (= (=> (and (= x4493 0) (= x1898 x2586)) x2414) x711))
(assert (x136 x28))
(assert (= (or x143 x1336) x3617))
(assert (= (and x1391 x4842) x2515))
(assert (= x2788 (and (not x2579) x1801)))
(assert (x136 x3402))
(assert (x3087 x3293))
(assert (= x4529 (=> (and (= x3713 x1078) (= x2117 0)) x4098)))
(assert (x3087 x317))
(assert (= (x1315 (x350 x3784 1)) (+ (x1315 x3784) 1)))
(assert (x3087 x1266))
(assert (= x2263 (and x2430 x1993)))
(assert (x3087 x1404))
(assert (= (+ 1 (x1315 x3238)) (x1315 (x350 x3238 1))))
(assert (= (and (not x4834) x186) x2755))
(assert (x3087 x1358))
(assert (= (and x875 (not x4744)) x1918))
(assert (= (and (not x266) x2424) x1038))
(assert (x3087 x4019))
(assert (x3374 x4121))
(assert (x3087 x4122))
(assert (x3087 x3866))
(assert (x3087 x3346))
(assert (= (x1970 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x2553 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (x3087 x363))
(assert (= x3005 (and x1364 x216)))
(assert (=> (>= 10000 x4393) (= (x1970 x4393) (x2553 x4393))))
(assert (x3087 x587))
(assert (= x4084 (and x2002 x2395)))
(assert (x3087 x1160))
(assert (= (and (not x942) x150) x4422))
(assert (x3087 x2254))
(assert (x3087 x1935))
(assert (x3087 x4214))
(assert (= (x1315 (x350 x4028 1)) (+ 1 (x1315 x4028))))
(assert (= (and x2758 x3755) x2445))
(assert (= x1543 (=> (and (= (x371 1461501637330902918203684832716283019655932542975 x1305) x2519) (= (> x966 0) x2303) (= x414 (x709 (x1970 x799) x244 0)) (= x244 (x709 (x1970 x2519) (x2553 158) 0)) (= (x371 1461501637330902918203684832716283019655932542975 x620) x799)) (and (=> (and x2303 (and (= x577 (div x1369 x1360)) (= (* x2295 1000000000000000000) x1369) (= x3578 (x3455 x3514)) (< (+ x466 x4829) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x4829) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3578 x466)) (= x1227 (+ x4887 x2069)) (= (+ x2866 x1443) x3874) (= 0 x1021) (= x728 (x371 1461501637330902918203684832716283019655932542975 x1305)) (>= x1360 0) (>= x3578 0) (= x1360 (x3264 x4666)) (= (mod (* x966 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2295) (= (div x577 1000000000000000000) x466) (= x4829 (x1108 x414)) (= (x1595 (- x3162 x514)) x1216) (= x4829 x1443) (> x1360 0) (= x4887 x466) (= x1021 (ite x589 1 0)) (= x466 x2866) (= x1160 (x371 1461501637330902918203684832716283019655932542975 x1305)) (= x4666 (x709 (x1970 x728) (x2553 164) 0)) (= (x3164 (+ x1076 32)) x3162) (= x2069 x3578) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4829) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1360) (= x3514 (x350 x2885 1)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x2295)) (= x589 (> x966 115792089237316195423570985008687907853269984665640564039457)) (= (x3164 (+ 4 x514)) x1076) (<= x3578 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4400 (= x1160 x4345)))) (and (=> (and x4400 (and (not (= 75483562 x547)) (= x4806 (x1595 (- x63 4))) (> x515 0) (> 405663989 x547) (= 398450620 x547) (= x3408 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4806) (and (< x4806 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4806) true)))) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x422) (< x547 988262939) (> 2217467699 x547) (not (= 242558722 x547)) (= (x4396 (x1970 x4345)) x515) (not (= 178855970 x547)) (= x1601 x705) (= x63 36) (not (< x63 4)) (= x1216 x63))) (and (=> x3408 x4169) (=> (and (not x3408) (and (= (= x1601 x705) x337) (= x1957 x1601))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x899) (= x2526 (x709 (x1970 x1601) (x2553 6) 0)) (= 1 x3236) (= x899 (x1690 x2526)) (= x4003 32) (>= x899 0)) x337) x2781) (=> (not x337) x4169))))) (=> (and (not x4400) (= (= x1160 x3111) x3643)) (and (=> (and x3643 (and (= x705 x2059) (not (= x1919 242558722)) (= x2441 x1216) (not (= 75483562 x1919)) (= x689 (x1595 (- x2441 4))) (= x2702 (x4396 (x1970 x3111))) (= 36 x2441) (not (= x1919 178855970)) (not (> 4 x2441)) (< x1919 2217467699) (= 398450620 x1919) (= x465 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x689) true) (> 32 x689)) (> x689 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2702 0) (= x1732 10742207464693106059581744854972325794081737850190833080250671788038469713920) (< x1919 988262939) (< x1919 405663989))) (and (=> x465 x3884) (=> (and (and (= x2059 x3466) (= (= x705 x2059) x1316)) (not x465)) (and (=> (and x1316 (and (<= x1920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x628 1) (= (x709 (x1970 x2059) (x2553 6) 0) x96) (= x335 32) (<= 0 x1920) (= (x3134 x96) x1920))) x4606) (=> (not x1316) x3884))))) (=> (and (and (and x1923 (and (= (or (and (< x1342 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1342) true)) (> x1342 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x791) (= x2733 10742207464693106059581744854972325794081737850190833080250671788038469713920) (> 2217467699 x2165) (= x1342 (x1595 (- x1937 4))) (= x1937 x1216) (not (= 178855970 x2165)) (< x2165 405663989) (> x961 0) (= x517 x705) (= x961 (x4396 (x1970 x3939))) (not (= 75483562 x2165)) (= x1937 36) (not (= 242558722 x2165)) (> 988262939 x2165) (not (< x1937 4)) (= 398450620 x2165))) (= (= x1160 x3939) x1923)) (not x3643)) (and (=> x791 x39) (=> (and (and (= x517 x277) (= x4401 (= x517 x705))) (not x791)) (and (=> (and x4401 (and (= x1018 (x709 (x1970 x517) (x2553 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x467) (= x467 (x1702 x1018)) (= 1 x890) (= x3695 32) (<= 0 x467))) x1019) (=> (not x4401) x39))))))))) (=> (and (and (= x1789 x514) (= x3782 x3440) (= x3037 x3822) (= x2500 x108) (= x799 x3297)) (not x2303)) x292)))))
(assert (x3087 x2759))
(assert (x3087 x4821))
(assert (= (=> (and (= x4530 x2744) (= x108 x4631) (= x4745 x1744) (= x3306 x3037)) x1222) x2740))
(assert (x3087 x4677))
(assert (x3087 x3747))
(assert (x3087 x2635))
(assert (= (x1315 (x1970 x1435)) x1435))
(assert (x3087 x2463))
(assert (= (and x701 x4882) x295))
(assert (= x1796 (or x4665 x2624)))
(assert (x3314 x595))
(assert (x1816 x460))
(assert (= (+ 1 (x1315 x2928)) (x1315 (x350 x2928 1))))
(assert (x3087 x1997))
(assert (= x985 (and (not x3792) x4563)))
(assert (x3087 x77))
(assert (x3087 x2958))
(assert (x3087 x4057))
(assert (x3087 x2118))
(assert (x3087 x2596))
(assert (x3087 x3069))
(assert (x3087 x1773))
(assert (= x2187 (and x3837 x3079)))
(assert (= (and x4043 x1548) x4225))
(assert (= x3386 (or x2205 x179)))
(assert (= (and x1624 (not x2517)) x2193))
(assert (x3087 x4553))
(assert (x3087 x917))
(assert (x3087 x515))
(assert (x136 x4879))
(assert (x136 x259))
(assert (x3087 x1142))
(assert (x3087 x2617))
(assert (= (x1315 (x1970 x259)) x259))
(assert (= x1228 (or x3853 x148 x2170 x560 x3116 x3358)))
(assert (x3087 x1521))
(assert (= (and x4583 x359) x2481))
(assert (= (x1315 (x2553 2858086653)) 2858086653))
(assert (x136 x3111))
(assert (x3087 x1360))
(assert (x3087 x3458))
(assert (x3087 x3037))
(assert (x3087 x1710))
(assert (= (and x4853 (not x346)) x846))
(assert (= x4626 (and x3629 (not x1043))))
(assert (= (x2553 35417553099779373699389112480655434059402432070290151981503827724506945814528) (x1970 35417553099779373699389112480655434059402432070290151981503827724506945814528)))
(assert (= x4208 (x1315 (x1970 x4208))))
(assert (x3087 x3304))
(assert (= x1275 x2230))
(assert (=> (>= 10000 x4805) (= (x1970 x4805) (x2553 x4805))))
(assert (= x2572 (and x2121 x1440)))
(assert (x136 x2750))
(assert (x3087 x425))
(assert (= (and x645 x2943) x491))
(assert (= x3774 (or x1844 (and (not x3834) x2792))))
(assert (= (and x4346 x2368) x4759))
(assert (= x223 (or x2932 x246)))
(assert (= (x2553 405663989) (x1970 405663989)))
(assert (= (and x808 x4784) x805))
(assert (x3087 x4234))
(assert (= x1779 (x1315 (x1970 x1779))))
(assert (x3087 x1424))
(assert (x3087 x1661))
(assert (x3087 x4121))
(assert (= (and x2156 x817) x1857))
(assert (= x4319 (or x3823 (and x4733 x4728) (and x4683 x1994) (and x3266 x3719) (and (not x3924) x2263) (and x3443 x3222) (and (not x1993) x2430) x2494 x2390)))
(assert (= (x1315 (x1970 x3919)) x3919))
(assert (x3087 x1078))
(assert (= x28 (x1315 (x1970 x28))))
(assert (x3087 x4884))
(assert (= (and x1573 x512) x2567))
(assert (x3087 x2612))
(assert (x3087 x3204))
(assert (x3087 x3452))
(assert (x3087 x4537))
(assert (x136 x2637))
(assert (= (=> (and (or (and (not x4364) (and (and (= (= 0 x4464) x3767) (> 1461501637330902918203684832716283019655932542976 x4464) (<= x4464 1461501637330902918203684832716283019655932542975) (<= 0 x4464) (= (x2779 x1475) x4464)) (or (and (and (= (x350 x224 1) x2330) (<= x1945 1461501637330902918203684832716283019655932542975) (= x4451 (x3164 (+ x3844 96))) (= x3678 x4451) (> 1461501637330902918203684832716283019655932542976 x1945) (= x3662 (x709 (x1970 x1945) x1715 0)) (<= 0 x1945) (= x4847 (x709 (x1970 x1627) x1715 0)) (= x224 (x350 x4847 1)) (= (x350 x1475 1) x2846) (= (x2976 x2846) x1945) (= x3411 (x350 x3662 1))) (not x3767)) (and x3767 (and (= x3678 x233) (= x2352 (x709 (x1970 x1627) x1715 0)) (= (x3164 (+ 96 x3844)) x233) (= x1863 (x350 x1475 1)) (= x2273 (x350 x2260 1)) (= (x350 x2352 1) x2260)))))) (and (and (or (and (not x1648) (and (= x3549 (x709 (x1970 x2119) x1715 0)) (= (x350 x2546 1) x1909) (= x2884 x3678) (= (x709 (x1970 x1627) x1715 0) x2546) (= x2884 (x3164 (+ x3844 96))) (= (x350 x1909 1) x501))) (and (and (= x5 (x709 (x1970 x2119) x1715 0)) (> 1461501637330902918203684832716283019655932542976 x351) (= (x709 (x1970 x2119) x1715 0) x3661) (= x351 (x3640 x5)) (= (x350 x2244 1) x4492) (>= 1461501637330902918203684832716283019655932542975 x351) (= x2496 (x3164 (+ x3844 96))) (= (x709 (x1970 x1627) x1715 0) x4748) (= x2496 x3678) (<= 0 x351) (= x3783 (x350 x4748 1)) (= (x350 x3783 1) x707) (= (x709 (x1970 x351) x1715 0) x2244)) x1648)) (and (>= 1461501637330902918203684832716283019655932542975 x1813) (> 1461501637330902918203684832716283019655932542976 x1813) (= (x2779 x1475) x1813) (<= 0 x1813) (= x1648 (< 0 x3972)) (= (x1595 (- x2119 x1813)) x3972))) x4364)) (= x4364 (ite (< x496 x305) (not (= x2119 0)) (> x305 x496)))) x4611) x4227))
(assert (= (and x1888 x66) x4793))
(assert (= (and x2801 x1051) x603))
(assert (= x4678 (and (not x114) x4008)))
(assert (x3087 x1933))
(assert (= (x1315 (x1970 x1399)) x1399))
(assert (x3087 x681))
(assert (= x4854 (x1315 (x1970 x4854))))
(assert (= x887 (and x2848 x4095)))
(assert (= (and x1953 (not x4244)) x1465))
(assert (= x1203 (and x348 x2166)))
(assert (x3087 x4711))
(assert (x3087 x583))
(assert (= (and (not x4189) x59) x3582))
(assert (x3087 x1859))
(assert (= x1392 (and (not x4866) x395)))
(assert (x3087 x3957))
(assert (x3087 x3795))
(assert (x3087 x2073))
(assert (x3087 x4080))
(assert (x3087 x163))
(assert (= (and x220 x3848) x923))
(assert (= x4752 (and (not x3299) x2506)))
(assert (x3087 x4509))
(assert (= (x1315 (x2553 2835717307)) 2835717307))
(assert (=> (>= 10000 x290) (= (x1970 x290) (x2553 x290))))
(assert (= x1741 (and x159 x4885)))
(assert (x3087 x4458))
(assert (= x1944 (and x733 x1547)))
(assert (x3087 x4471))
(assert (= x4595 (or x1093 x1467)))
(assert (x3087 x724))
(assert (x3087 x2132))
(assert (x3087 x1118))
(assert (x136 x2350))
(assert (= x3354 (and x307 (not x164))))
(assert (= x76 (and (not x495) x2354)))
(assert (= (and x1641 (not x2575)) x3482))
(assert (= (=> (and (= x4745 x4019) (= x4740 x4631) (= x2744 x3440) (= x3306 x3037)) x1222) x975))
(assert (= x4640 (and x1051 (not x2801))))
(assert (= x3360 (and x3453 x2094)))
(assert (x3087 x526))
(assert (x3087 x1622))
(assert (= (+ (x1315 x4424) 1) (x1315 (x350 x4424 1))))
(assert (x3087 x595))
(assert (= x4233 (=> (and (or x1583 (not x1583)) (= x1583 (= x3564 0))) x4657)))
(assert (= x2390 (and x1459 x1241)))
(assert (x136 x4208))
(assert (x3087 x2406))
(assert (= x4483 (or x3505 x3364)))
(assert (x3087 x3009))
(assert (x3087 x1388))
(assert (=> (>= 10000 x2218) (= (x1970 x2218) (x2553 x2218))))
(assert (x3087 x10))
(assert (= x1938 (and x442 (not x119))))
(assert (= (and (not x2795) x900) x2638))
(assert (x3087 x2459))
(assert (x3087 x4823))
(assert (= (or x2557 x4542 x2161 x3234 x3614 x2101 x551 x786 x2397) x4281))
(assert (x3087 x1872))
(assert (= (+ (x1315 x1217) 1) (x1315 (x350 x1217 1))))
(assert (x3087 x705))
(assert (= (and x1688 x1420) x2848))
(assert (= x3089 (and x1776 x4615)))
(assert (x3087 x1400))
(assert (x3087 x4042))
(assert (= x4270 (and x4144 (not x2989))))
(assert (= x20 (or x1534 x2692)))
(assert (= x3244 (and x4356 x1871)))
(assert (x3087 x4627))
(assert (x3087 x2462))
(assert (x3087 x1989))
(assert (x3087 x726))
(assert (x3087 x4591))
(assert (x3087 x290))
(assert (= (=> (or (and (and (= (> x354 x4677) x2900) (not (> x3532 x3302)) (= x4677 (x1595 (- x3302 x3532)))) x2936) (and (= x2936 x2900) (not x2936))) x3049) x2003))
(assert (= (x1315 (x1970 x2280)) x2280))
(assert (x3087 x2950))
(assert (x3087 x717))
(assert (= (and x2940 (not x4841)) x304))
(assert (x3087 x233))
(assert (x3087 x4898))
(assert (=> (<= x4690 10000) (= (x1970 x4690) (x2553 x4690))))
(assert (x3087 x4902))
(assert (x3087 x2600))
(assert (x3087 x2125))
(assert (x3087 x63))
(assert (x136 x425))
(assert (= (and x400 (not x3217)) x1894))
(assert (= (and x1384 x1197) x4630))
(assert (x3087 x4837))
(assert (= x4539 (and x3183 (not x396))))
(assert (x3087 x368))
(assert (x3087 x2902))
(assert (x3087 x3803))
(assert (= (=> (and (= x3562 x3622) (= x1771 (x158 x2885)) (= x1269 x3417) (<= 0 x1771) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1771)) x4201) x1324))
(assert (=> (>= 10000 x1786) (= (x2553 x1786) (x1970 x1786))))
(assert (= (not (and (= x4575 (x709 (x1970 x725) x3095 0)) (<= 0 x4458) (= x4458 (x721 x268)) (= x268 (x350 x4575 1)) (< x4458 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x4458))) x3839))
(assert (= (+ 2 (x1315 x1158)) (x1315 (x350 x1158 2))))
(assert (x3087 x736))
(assert (x3087 x2973))
(assert (x3087 x4207))
(assert (= x2785 (and (not x3909) x2679)))
(assert (x3087 x2168))
(assert (= (x2553 1461501637330902918203684832716283019655932542975) (x1970 1461501637330902918203684832716283019655932542975)))
(assert (x3087 x4054))
(assert (x3087 x291))
(assert (= (x1970 117300739) (x2553 117300739)))
(assert (= (and x1067 x4005) x2040))
(assert (x3087 x1250))
(assert (= x1505 (or (and x1464 (not x2037)) (and x2683 x901))))
(assert (x3087 x443))
(assert (x3087 x2830))
(assert (=> (>= 10000 x4536) (= (x2553 x4536) (x1970 x4536))))
(assert (= (x1315 (x1970 x2601)) x2601))
(assert (x3087 x3214))
(assert (= x238 (or x444 x4904)))
(assert (x3087 x2797))
(assert (x3087 x3178))
(assert (= (or x3030 x303 x4146 x1313) x571))
(assert (= x2501 (and (not x4288) x3774)))
(assert (= (and (not x3407) x2501) x3159))
(assert (= (=> (= (= x832 x4180) x3961) (and (=> x3961 x3721) (=> (and (= (< 0 x4180) x1166) (not x3961)) (and (=> (and (and (and (>= x1697 0) (<= x4690 1461501637330902918203684832716283019655932542975) (= x2816 (= x1697 0)) (<= x1697 1461501637330902918203684832716283019655932542975) (= x636 (x371 1461501637330902918203684832716283019655932542975 x620)) (= x4690 (x230 x4896)) (= (x709 (x1970 x636) x4088 0) x4105) (= (x350 x4105 1) x4896) (< x4690 1461501637330902918203684832716283019655932542976) (= (x350 x4896 1) x4203) (< x1697 1461501637330902918203684832716283019655932542976) (>= x4690 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3000) (= (x614 x4105) x1697) (not (= x3000 0)) (= x3000 (x1283 x4203)) (<= 0 x3000)) (or (and (= (x350 x4088 1) x2539) x2816) (and (and (= x4145 (x350 x623 1)) (= (x709 (x1970 x1697) x4088 0) x623)) (not x2816)))) x1166) x4013) (=> (not x1166) x937))))) x3396))
(assert (x3087 x4652))
(assert (= (and x1951 x3336) x3600))
(assert (x3087 x1157))
(assert (x3087 x1234))
(assert (x136 x3248))
(assert (x3087 x2532))
(assert (= x3770 x928))
(assert (= (and x3047 x3870) x1939))
(assert (= (and x2679 x3909) x4368))
(assert (= (=> (and (= x2680 x2922) (= x2057 x1941)) x188) x1017))
(assert (= (and x4247 (not x4429)) x4650))
(assert (= (=> (and (= x3016 x1078) (= x2301 0)) x415) x2096))
(assert (=> (<= x2359 10000) (= (x1970 x2359) (x2553 x2359))))
(assert (= x4706 (and x3347 x1559)))
(assert (= x1539 (or x3666 x3628 x1029 x1902 x3028 x1095)))
(assert (x3087 x4839))
(assert (x3087 x3307))
(assert (= (and (not x489) x1943) x1982))
(assert (=> (<= x259 10000) (= (x2553 x259) (x1970 x259))))
(assert (= (and x1235 (not x849)) x847))
(assert (x136 x3976))
(assert (= (or x976 x2638 x80 x48 x2292 x4084 x4793 x3121 x805) x2924))
(assert (= (+ (x1315 x1329) 1) (x1315 (x350 x1329 1))))
(assert (= x4573 (and x3456 x2562)))
(assert (= x4248 (=> (and (and (= (x350 x4040 2) x1322) (= (x709 (x1970 x421) x3249 0) x232) (= x490 (x371 1461501637330902918203684832716283019655932542975 x1305)) (= (x2227 x60) x3934) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x1226) (= (x4443 x457) x3557) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4024) (<= 0 x2271) (= x4760 (< x2271 x3557)) (= (x709 (x1970 x1226) (x2553 157) 0) x1487) (= x4024 (x1171 x1322)) (= (x709 (x1970 x490) (x2553 159) 0) x3249) (= x2289 (x1474 x232)) (= x60 (x350 x1482 2)) (<= 0 x4024) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2289) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3934) (<= 0 x3934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3557) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2271) (= (x709 (x1970 x421) x1487 0) x1482) (= (x709 (x1970 x1932) (x2553 156) 0) x334) (>= x2289 0) (>= x3557 0) (= (x350 x232 1) x457) (= x1932 (x371 1461501637330902918203684832716283019655932542975 x1305)) (= (x709 (x1970 x421) x334 0) x4040)) (or (and x4760 (= x139 x3557)) (and (= x139 0) (not x4760)))) x3569)))
(assert (= (and x1968 x3101) x2369))
(assert (= (=> (and (= x1258 x2057) (= x3498 x2922)) x188) x3340))
(assert (x3087 x3207))
(assert (= (x1315 (x350 x3752 1)) (+ (x1315 x3752) 1)))
(assert (= (and (not x3748) x1740) x3687))
(assert (= x4702 (or x3680 (and (not x2591) x590))))
(assert (= (and (not x4810) x3621) x1031))
(assert (x3087 x2129))
(assert (x3087 x3539))
(assert (x3314 x3636))
(assert (= (x1315 (x350 x544 1)) (+ 1 (x1315 x544))))
(assert (= (and (not x2609) x4550) x1239))
(assert (x487 x2930))
(assert (x3087 x1187))
(assert (x136 x767))
(assert (=> (<= x1165 10000) (= (x2553 x1165) (x1970 x1165))))
(assert (= x3711 (or x3901 x4284)))
(assert (x3087 x2913))
(assert (= (x1315 (x1970 x3804)) x3804))
(assert (= (x1315 (x1970 x799)) x799))
(assert (x3087 x373))
(assert (x3087 x1045))
(assert (x3087 x2680))
(assert (x3087 x1151))
(assert (= (and x3602 x1401) x2206))
(assert (x3087 x864))
(assert (x3087 x2786))
(assert (x487 x1510))
(assert (x3087 x3125))
(assert (= x4560 (=> (and (= x3573 x2341) (= x2821 x2460)) x4033)))
(assert (x3087 x1524))
(assert (= (and x4135 (not x3761)) x4142))
(assert (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x1315 (x2553 10742207464693106059581744854972325794081737850190833080250671788038469713920))))
(assert (= x1945 (x1315 (x1970 x1945))))
(assert (= x4295 (and (not x4072) x1769)))
(assert (x3087 x3193))
(assert (x3087 x718))
(assert (= x2729 (and x4055 x227)))
(assert (x3087 x1489))
(assert (x3087 x3221))
(assert (= (and x1458 x242) x3121))
(assert (x3087 x737))
(assert (= x4456 (or x2403 x4407)))
(assert (x3087 x812))
(assert (= (and x1328 x152) x4048))
(assert (= x1430 (and x559 (not x4218))))
(assert (= x834 (and x3074 x6)))
(assert (x3087 x860))
(assert (x3087 x1342))
(assert (= (x2553 2245473101) (x1970 2245473101)))
(assert (= x559 (and x4512 (not x3978))))
(assert (x3087 x1554))
(assert (= (and x3317 (not x3533)) x3593))
(assert (x3087 x518))
(assert (x3087 x1399))
(assert (x487 x950))
(assert (x3087 x1207))
(assert (x3087 x393))
(assert (= (x1315 (x1970 x290)) x290))
(assert (= x2645 (and x3118 x4576)))
(assert (=> (>= 10000 x127) (= (x2553 x127) (x1970 x127))))
(assert (x3087 x2711))
(assert (= x3356 (and x4747 (not x3542))))
(assert (x136 x2059))
(assert (= x1464 (and x2683 (not x901))))
(assert (= x4674 (=> (and (= x4216 x1099) (= x449 x2385)) x1566)))
(assert (x3087 x1704))
(assert (x3087 x4701))
(assert (x3087 x4333))
(assert (= (=> (and (= x3327 x2097) (= x2477 x3440) (= x3105 x3902) (= x51 x108) (= x511 x2975)) x3506) x2235))
(assert (x3087 x4435))
(assert (= (or x1692 x2995) x4638))
(assert (x3087 x4199))
(assert (= x1457 (and x2303 x223)))
(assert (x3087 x4375))
(assert (= (and (not x4317) x2905) x1680))
(assert (= (and (not x3232) x4641) x1071))
(assert (= x1553 (and x2549 x3233)))
(assert (= (+ 2 (x1315 x1715)) (x1315 (x350 x1715 2))))
(assert (x3087 x604))
(assert (= x4871 (and x2393 (not x2326))))
(assert (= (and (not x2838) x4638) x1225))
(assert (= (and (not x2839) x3114) x3322))
(assert (= (and x672 x739) x3189))
(assert (= x1697 (x1315 (x1970 x1697))))
(assert (= (x1315 (x350 x663 1)) (+ (x1315 x663) 1)))
(assert (= x4238 (and x3217 x400)))
(assert (= x2507 (and x2551 x2382)))
(assert (x3087 x4878))
(assert (= (or x3175 x3432 x3338 x4446 x648 x2450) x385))
(assert (= (and (not x3626) x1864) x2742))
(assert (= (and x409 x3333) x786))
(assert (=> (>= 10000 x1502) (= (x1970 x1502) (x2553 x1502))))
(assert (x3087 x4833))
(assert (x3087 x2636))
(assert (= (x1970 2796547477) (x2553 2796547477)))
(assert (= 1856199391 (x1315 (x2553 1856199391))))
(assert (x3087 x3464))
(assert (= (or x110 x1753 x2951 x944 x3705 x4148) x686))
(assert (x3087 x2702))
(assert (= x4633 (or x3507 x378)))
(assert (x3087 x1309))
(assert (x3087 x2700))
(assert (x3087 x2373))
(assert (= x4217 (=> (and (= x2015 x630) (not (< x3302 x2086)) (= x4329 x3762)) x3580)))
(assert (x3087 x2798))
(assert (x3087 x399))
(assert (x3087 x1601))
(assert (x487 x2897))
(assert (x136 x2310))
(assert (x3087 x437))
(assert (= x105 (and x2328 x634)))
(assert (= (=> (and (= x4216 x3604) (= 0 x2385)) x4674) x4614))
(assert (= (x2553 2023533118) (x1970 2023533118)))
(assert (= (x1315 (x1970 x2243)) x2243))
(assert (=> (>= 10000 x636) (= (x1970 x636) (x2553 x636))))
(assert (= x995 (and (not x2413) x3764)))
(assert (x3087 x2883))
(assert (= (x1315 (x1970 x387)) x387))
(assert (= x2725 (and x2829 x4671)))
(assert (= x1529 (and x1604 x930)))
(assert (= x3216 (and x4779 x1815)))
(assert (= (and x4222 x939) x4449))
(assert (= x2099 (and x968 (not x3487))))
(assert (= (x1315 (x1970 x1061)) x1061))
(assert (x3087 x2471))
(assert (= (and x1191 x2485) x1910))
(assert (= x188 (=> (and (or x938 (not x938)) (= x938 (= x2922 0))) x281)))
(assert (x3087 x1437))
(assert (= (x1315 (x350 x2020 1)) (+ 1 (x1315 x2020))))
(assert (=> (<= x4120 10000) (= (x2553 x4120) (x1970 x4120))))
(assert (= (or (and (not x2984) x4762) x1253) x186))
(assert (= (and x2399 (not x3880)) x4059))
(assert (x3087 x3610))
(assert (= x3357 (and (not x1613) x4372)))
(assert (x3087 x1307))
(assert (= x714 (=> (or (and (and (<= x4865 1461501637330902918203684832716283019655932542975) (= x4865 (x34 x2375)) (= (x709 (x1970 x3248) (x2553 157) 0) x687) (= x3248 (x371 1461501637330902918203684832716283019655932542975 x1305)) (= x2516 (not x392)) (>= x4865 0) (< x4865 1461501637330902918203684832716283019655932542976) (= (= 0 x4865) x392) (= (x350 x687 1) x2375)) x2987) (and (not x2987) (= x2987 x2516))) x2322)))
(assert (x3087 x3532))
(assert (x3087 x1278))
(assert (= (or x347 (and x4140 (not x1958)) x2645 (and (not x3495) x4196) (and x1254 x4883) (and x2888 x3828)) x2405))
(assert (x136 x4457))
(assert (x3087 x1850))
(assert (x3087 x420))
(assert (x3087 x2030))
(assert (= x1014 (or x20 x4622)))
(assert (x3087 x3106))
(assert (x3087 x4781))
(assert (= (or x3478 x2194) x4708))
(assert (x3087 x4499))
(assert (=> (<= x2119 10000) (= (x2553 x2119) (x1970 x2119))))
(assert (x3087 x500))
(assert (x3087 x3375))
(assert (x3087 x1245))
(assert (= (x1315 (x1970 x857)) x857))
(assert (x3087 x2668))
(assert (= (and (not x4392) x3596) x2339))
(assert (x3087 x2119))
(assert (x136 x4854))
(assert (x3087 x503))
(assert (= x481 (and x477 x3371)))
(assert (= x3710 (and x1452 (not x631))))
(assert (x136 x4832))
(assert (=> (<= x2750 10000) (= (x2553 x2750) (x1970 x2750))))
(assert (x3087 x4670))
(assert (= x329 (x1315 (x1970 x329))))
(assert (= x1270 (=> (and (= x3272 x1830) (= x2298 x4898)) x2710)))
(assert (= x3465 (and x3593 x267)))
(assert (x3087 x3775))
(assert (x136 x778))
(assert (x3087 x4716))
(assert (= (and x346 x4853) x2650))
(assert (= (x1315 (x2553 242558722)) 242558722))
(assert (x136 x3994))
(assert (x3087 x142))
(assert (x3087 x4003))
(assert (x3087 x3463))
(assert (= (or x3301 x2417 x176) x4005))
(assert (x3087 x3306))
(assert (= x1241 (and x3104 (not x2890))))
(assert (=> (<= x3994 10000) (= (x2553 x3994) (x1970 x3994))))
(assert (= (and x4257 (not x654)) x2450))
(assert (= (and (not x1193) x4430) x486))
(assert (x3087 x1230))
(assert (= (x2553 2858086653) (x1970 2858086653)))
(assert (= x2038 (and x4495 x2584)))
(assert (=> (<= x490 10000) (= (x1970 x490) (x2553 x490))))
(assert (x3087 x3448))
(assert (x136 x4012))
(assert (= (=> (and (= x3375 x4700) (= x3586 x2674) (= 0 x123)) x3886) x3831))
(assert (x3087 x3864))
(assert (= (=> (and (or (and (not x3412) (and (and (<= x1605 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1605) (= (x72 x663) x1605) (= x893 (= 0 x1605)) (>= x1605 0)) (or (and (not x893) (and (= (x350 x2401 1) x4726) (= x4513 (x350 x1390 1)) (= x2401 (x709 (x1970 x3976) x1746 0)) (= x4478 x2333) (= (x350 x663 1) x959) (<= x3976 1461501637330902918203684832716283019655932542975) (= (x709 (x1970 x1627) x1746 0) x4004) (= x1390 (x350 x4004 1)) (= (x719 x959) x3976) (>= x3976 0) (= x4478 (x3164 (+ x3947 96))) (> 1461501637330902918203684832716283019655932542976 x3976))) (and (and (= x4514 (x350 x166 1)) (= (x350 x4408 1) x166) (= (x350 x663 1) x2033) (= x4408 (x709 (x1970 x1627) x1746 0)) (= x3433 (x3164 (+ 96 x3947))) (= x2333 x3433)) x893)))) (and x3412 (and (and (= (x72 x663) x3295) (= (x1595 (- x2555 x3295)) x853) (<= x3295 1461501637330902918203684832716283019655932542975) (= x1370 (> x853 0)) (< x3295 1461501637330902918203684832716283019655932542976) (>= x3295 0)) (or (and (not x1370) (and (= x488 (x350 x1359 1)) (= x1359 (x350 x2020 1)) (= x940 (x709 (x1970 x2555) x1746 0)) (= x1653 (x3164 (+ x3947 96))) (= x1653 x2333) (= (x709 (x1970 x1627) x1746 0) x2020))) (and x1370 (and (= x3836 (x350 x1217 1)) (<= x1707 1461501637330902918203684832716283019655932542975) (= x1329 (x709 (x1970 x1707) x1746 0)) (= x4716 (x3164 (+ x3947 96))) (= x3945 (x350 x1329 1)) (>= x1707 0) (= x870 (x709 (x1970 x2555) x1746 0)) (= x2333 x4716) (= x1217 (x709 (x1970 x1627) x1746 0)) (= x2536 (x350 x3836 1)) (> 1461501637330902918203684832716283019655932542976 x1707) (= (x709 (x1970 x2555) x1746 0) x915) (= (x3086 x870) x1707))))))) (= x3412 (ite (> x305 x4503) (not (= x2555 0)) (< x4503 x305)))) x1585) x2723))
(assert (= (and x2472 x4706) x527))
(assert (x3087 x2183))
(assert (= (and x4486 x2729) x4792))
(assert (x3087 x2842))
(assert (= x1052 (and x4322 (not x1969))))
(assert (=> (>= 10000 x1710) (= (x2553 x1710) (x1970 x1710))))
(assert (= x4367 x207))
(assert (x3087 x1973))
(assert (= x2130 (and (=> (and (and (and (>= 1461501637330902918203684832716283019655932542975 x3148) (< x3148 1461501637330902918203684832716283019655932542976) (= (x4621 x1687) x3148) (= x4845 (x709 (x1970 x1757) x2090 0)) (= (x350 x4845 1) x1687) (= (ite (> x305 1) (not (= x3148 0)) (> x305 1)) x2765) (>= x3148 0)) (or (and (not x2765) (= x2765 x141)) (and x2765 (and (= x157 (> x1995 x4531)) (= (x350 x1882 2) x1767) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4531) (>= x4531 0) (= (not x157) x141) (= x4531 (x3258 x1767)) (= x1882 (x709 (x1970 x3148) x2090 0)))))) x1606) x2236) (=> (and (not x1606) (and (= x2916 0) (= x2752 x1757))) x3484))))
(assert (= (and x3534 (not x1827)) x1355))
(assert (=> (<= x4675 10000) (= (x2553 x4675) (x1970 x4675))))
(assert (x3087 x2045))
(assert (x3087 x2988))
(assert (= x1380 (and x4868 x936)))
(assert (x3087 x899))
(assert (x3087 x2648))
(assert (= x3580 (=> (and (= (< 0 x4329) x2355) (or (and x2355 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2219 1000000000000000000)) (= x769 x3691) (< 0 x2686) (< (+ x3417 x4329) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x2219 1000000000000000000) x3543) (= x3417 x2110) (= (x4352 x3029) x1266) (= x1500 x3341) (= x1398 (ite x3900 1 0)) (<= x2686 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2144 (x709 (x1970 x1100) (x2553 165) 0)) (= x3900 (> x4329 115792089237316195423570985008687907853269984665640564039457)) (= x1500 (x1595 (- x3562 x4329))) (= (+ x2110 x617) x285) (= x3888 (div x3543 x2686)) (= x3029 (x350 x4421 3)) (>= x2686 0) (= x2686 (x450 x2144)) (= 0 x1398) (= x617 x4329) (not (> x4329 x3562)) (>= x1266 0) (= x3803 (+ x3691 x2912)) (< (+ x1266 x769) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (div x3888 1000000000000000000) x769) (= x3492 x285) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1266) (= x2912 x1266) (= (mod (* 1000000000000000000 x4329) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2219) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x1100))) (and (not x2355) (and (= x3417 x3492) (= x3341 x3562))))) x4442)))
(assert (= (and x1571 (not x3130)) x1654))
(assert (= x4052 (and (not x3391) x3035)))
(assert (= (x2553 2678788150) (x1970 2678788150)))
(assert (= x398 (and x4477 x2548)))
(assert (= (+ 2 (x1315 x2148)) (x1315 (x350 x2148 2))))
(assert (= x1897 (and x4056 (not x2816))))
(assert (= (x1315 (x1970 x3992)) x3992))
(assert (x3087 x2794))
(assert (= (and x1221 (not x1550)) x4112))
(assert (= (and x3687 x878) x859))
(assert (x3087 x263))
(assert (=> (<= x4042 10000) (= (x2553 x4042) (x1970 x4042))))
(assert (x3087 x3874))
(assert (= x4673 (and x2088 (not x1285))))
(assert (= x2488 (and (not x1616) x4646)))
(assert (x3087 x1180))
(assert (x136 x1399))
(assert (= (and (not x1516) x610) x3449))
(assert (= x4165 (and x4104 (not x2660))))
(assert (x136 x2009))
(assert (x3087 x2637))
(assert (x3087 x3351))
(assert (x3087 x519))
(assert (x3087 x4020))
(assert (x3087 x3115))
(assert (= x3458 (x1315 (x1970 x3458))))
(assert (= (x1315 (x2553 1857877511)) 1857877511))
(assert (x3087 x2820))
(assert (x3087 x3342))
(assert (= (and x4422 (not x2491)) x817))
(assert (= (+ (x1315 x956) 1) (x1315 (x350 x956 1))))
(assert (x3087 x770))
(assert (x3087 x4344))
(assert (x3087 x1243))
(assert (= (x1970 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2553 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (and x3869 x3282) x3828))
(assert (= x3572 (or x2081 x1282)))
(assert (= (or x1228 x4282) x1508))
(assert (= (x1315 (x2553 75483562)) 75483562))
(assert (= (x1315 (x1970 x2321)) x2321))
(assert (x3087 x360))
(assert (x3087 x1610))
(assert (= x2620 (and x3899 (not x4314))))
(assert (x3087 x1268))
(assert (x3087 x3976))
(assert (x3087 x4266))
(assert (x3087 x4171))
(assert (x136 x2251))
(assert (= x3286 (and x787 (not x758))))
(assert (x3087 x103))
(assert (= (and (not x1156) x3280) x4176))
(assert (x136 x1742))
(assert (x3087 x3442))
(assert (= x1786 (x1315 (x1970 x1786))))
(assert (= (and (not x1699) x2145) x4069))
(assert (x3087 x2164))
(assert (x3374 x1020))
(assert (x3087 x1088))
(assert (x3087 x3162))
(assert (= (x1315 (x350 x2546 1)) (+ (x1315 x2546) 1)))
(assert (= (or x3434 x4439) x3182))
(assert (= (=> (and (= x379 x1693) (= 0 x56)) x2174) x1240))
(assert (x3087 x1041))
(assert (= (x1315 (x1970 x3976)) x3976))
(assert (= x2537 (or x355 x1685 x671 x4633)))
(assert (= x4407 (and x1059 x1755)))
(assert (x3087 x278))
(assert (x3087 x1714))
(assert (x3087 x1333))
(assert (= x1220 (and (not x2046) x643)))
(assert (x3087 x2602))
(assert (x487 x2681))
(assert (x3087 x1739))
(assert (x487 x1305))
(assert (x3087 x2185))
(assert (x3087 x2258))
(assert (x3087 x3607))
(assert (x3087 x764))
(assert (= (and x2622 (not x570)) x459))
(assert (x3087 x1083))
(assert (x3087 x3509))
(assert (= x1186 (and x162 x145)))
(assert (= (and x327 (not x4390)) x2377))
(assert (= (and x4160 x4025) x1420))
(assert (= x2678 (and x2088 x1285)))
(assert (= x174 (or x1225 x3066)))
(assert (x136 x1961))
(assert (x3087 x3692))
(assert (= (or x4250 x1011) x3621))
(assert (= x3591 (=> (and (= x379 x3573) (= x2460 0)) x4560)))
(assert (x3087 x735))
(assert (= (and (not x1664) x4143) x2324))
(assert (x3087 x601))
(assert (x3087 x4303))
(assert (= x1770 (and (not x850) x3892)))
(assert (x3087 x3777))
(assert (x3087 x2736))
(assert (= (and x850 x3892) x1407))
(assert (= x4161 (and x1921 x2900)))
(assert (= (and x4401 x1762) x3701))
(assert (x3087 x2418))
(assert (x3087 x3815))
(assert (x3087 x2071))
(assert (x3087 x3349))
(assert (=> (<= x3814 10000) (= (x1970 x3814) (x2553 x3814))))
(assert (x3087 x3305))
(assert (= x3814 (x1315 (x1970 x3814))))
(assert (= (=> (and (= x3605 x3604) (= x3789 0)) x506) x4187))
(assert (= x3405 (=> (and (= x2984 (= 0 x1980)) (or x2984 (not x2984))) x4864)))
(assert (= (or x1204 x4741) x4477))
(assert (x3087 x1727))
(assert (x3087 x2457))
(assert (= x3507 (and x3132 (not x3980))))
(assert (= (+ 2 (x1315 x2724)) (x1315 (x350 x2724 2))))
(assert (=> (<= x2612 10000) (= (x1970 x2612) (x2553 x2612))))
(assert (x691 x2132 x4121))
(assert (= (and x4563 x3792) x2599))
(assert (x3087 x3885))
(assert (x136 x2612))
(assert (= x2756 (or x4348 (and x2653 x1596) x1173 (and x3070 (not x3916)) x666 (and x1430 x3637) (and x4541 x3611) (and x3647 (not x970)) (and x3811 x2666))))
(assert (x3087 x4451))
(assert (= (=> (and (= x3464 0) (= x706 x920)) x89) x879))
(assert (x3087 x3077))
(assert (= (and x2896 x4030) x909))
(assert (x3087 x4354))
(assert (x3087 x3485))
(assert (= x1611 (=> (= x2829 (< 0 x1995)) (and (=> (and (and (and (= x1757 (x4178 x3784)) (= x4691 (x371 1461501637330902918203684832716283019655932542975 x620)) (= x828 (x709 (x1970 x3992) x2090 0)) (= (x350 x2090 1) x3784) (= x3725 0) (>= 1461501637330902918203684832716283019655932542975 x1757) (<= 0 x1757) (not (= 0 x4691)) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3725) (>= x305 0) (= x3725 (x3258 x1950)) (> 1461501637330902918203684832716283019655932542976 x1757) (= x3992 (x371 1461501637330902918203684832716283019655932542975 x620)) (>= x3725 0) (= x1950 (x350 x828 2)) (= x361 (ite (> x305 0) (not (= 0 x1757)) (< 0 x305)))) (or (and (and (= x1606 (not x2690)) (<= x4551 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4551 x1995) x2690) (= (x709 (x1970 x1757) x2090 0) x2082) (= (x350 x2082 2) x1087) (= x4551 (x3258 x1087)) (>= x4551 0)) x361) (and (= x361 x1606) (not x361)))) x2829) x2130) (=> (not x2829) x3770)))))
(assert (x3087 x3531))
(assert (x3087 x2186))
(assert (= x520 (and x2597 x3567)))
(assert (x3087 x2301))
(assert (= (and x610 x1516) x1265))
(assert (x3087 x744))
(assert (x3087 x3956))
(assert (= x3645 x160))
(assert (x3087 x1111))
(assert (x136 x387))
(assert (= x2269 (or x593 x1344)))
(assert (x3087 x2844))
(assert (= (or x4016 x2540) x990))
(assert (x3087 x824))
(assert (x3087 x4519))
(assert (=> (>= 10000 x28) (= (x1970 x28) (x2553 x28))))
(assert (= x1904 (and x757 x4403)))
(assert (= (and x1486 x1274) x4075))
(assert (x3087 x3483))
(assert (= (and x3646 x2952) x1893))
(assert (x3087 x578))
(assert (x3087 x745))
(assert (x3087 x318))
(assert (= (and x740 x2580) x688))
(assert (x136 x2736))
(assert (= x2292 (and x4087 x1182)))
(assert (= x2201 (and (not x3627) x863)))
(assert (= x3359 (or x1734 x3489)))
(assert (= x3317 (and x4448 x4816)))
(assert (= x3402 (x1315 (x1970 x3402))))
(assert (= x841 (and (=> (and (and (= x2555 x4118) (= 0 x4503)) (not x692)) x2723) (=> (and (and (and (= x3210 (x1831 x3002)) (> 1461501637330902918203684832716283019655932542976 x3210) (= (ite (> x305 1) (not (= x3210 0)) (> x305 1)) x631) (= x4404 (x709 (x1970 x4118) x1746 0)) (= (x350 x4404 1) x3002) (<= 0 x3210) (>= 1461501637330902918203684832716283019655932542975 x3210)) (or (and (not x631) (= x4429 x631)) (and (and (<= 0 x1773) (= x4429 (not x1338)) (= (< x1773 x1481) x1338) (= (x3915 x820) x1773) (= x820 (x350 x4290 2)) (= x4290 (x709 (x1970 x3210) x1746 0)) (<= x1773 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x631))) x692) x2547))))
(assert (= x3954 (or x523 x1120)))
(assert (x3087 x1365))
(assert (= (=> (and (and (= (= 0 x1119) x1616) (>= x1119 0) (> 1461501637330902918203684832716283019655932542976 x1119) (>= 1461501637330902918203684832716283019655932542975 x1119)) (or (and (not x1616) (and (< x4837 4294967296) (= (x4396 (x1970 x1119)) x1924) (not (= x1924 0)) (>= x1119 0) (<= x1119 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1119))) x1616)) x2694) x3721))
(assert (x3087 x4756))
(assert (x3087 x4090))
(assert (= x4826 (x1315 (x1970 x4826))))
(assert (= (+ 1 (x1315 x4748)) (x1315 (x350 x4748 1))))
(assert (x3087 x333))
(assert (= x2049 (and (not x4672) x4771)))
(assert (= (or x2099 x435) x27))
(assert (x3087 x806))
(assert (= x1445 (and x2044 x2112)))
(assert (x3087 x3136))
(assert (= (and x2632 x692) x1452))
(assert (x136 x2396))
(assert (x3087 x2942))
(assert (x3087 x4180))
(assert (x3087 x2461))
(assert (= (=> (and (= 0 x963) (= x3476 x3965)) x1802) x4775))
(assert (x136 x1779))
(assert (=> (<= x4029 10000) (= (x2553 x4029) (x1970 x4029))))
(assert (= x3333 (and (not x4731) x190)))
(assert (x3087 x896))
(assert (x3087 x981))
(assert (x487 x460))
(assert (= (=> (and (= x3707 x1117) (= 0 x3516)) x979) x626))
(assert (x3087 x497))
(assert (x3087 x729))
(assert (= x593 (or x4598 x3582 x1453 x1741 x2515)))
(assert (= (=> (and (= x449 x3789) (= x3605 x1099)) x1566) x506))
(assert (x3087 x329))
(assert (= (and x1986 x4892) x2226))
(assert (x487 x2048))
(assert (x3087 x4310))
(assert (x3087 x265))
(assert (= x4540 (and (not x1012) x4432)))
(assert (x3087 x3194))
(assert (= x566 (and (not x2828) x3441)))
(assert (x3087 x725))
(assert (= (and (not x3755) x2758) x4892))
(assert (x3087 x565))
(assert (x3087 x82))
(assert (= (or x3684 x2761) x2893))
(assert (= (and x1394 (not x1783)) x2696))
(assert (= x2316 (and x1832 (not x3950))))
(assert (= (and x559 x4218) x1173))
(assert (x3087 x1339))
(assert (= x2044 (or x3575 x1052)))
(assert (= x1042 (and (not x4383) x1296)))
(assert (= (and (not x365) x596) x1943))
(assert (x3087 x1878))
(assert (= (and x723 (not x3259)) x4753))
(assert (x3087 x2930))
(assert (x3087 x4118))
(assert (x3087 x2155))
(assert (= (x1315 (x1970 x4151)) x4151))
(assert (= x2934 (and x1651 x1249)))
(assert (x3087 x2957))
(assert (= (x1970 6539370208772218570076773595062200405109424842860869254164860851635934461952) (x2553 6539370208772218570076773595062200405109424842860869254164860851635934461952)))
(assert (= x1059 (and x4322 x1969)))
(assert (= (or x1356 x4211 x3523 x1231 x4487 x1006) x3671))
(assert (=> (>= 10000 x3939) (= (x1970 x3939) (x2553 x3939))))
(assert (x3087 x1323))
(assert (x3087 x4445))
(assert (= (and x3936 (not x1540)) x2014))
(assert (= (and x4414 (not x2698)) x1016))
(assert (=> (>= 10000 x4861) (= (x1970 x4861) (x2553 x4861))))
(assert (= (+ 1 (x1315 x1649)) (x1315 (x350 x1649 1))))
(assert (x3087 x3392))
(assert (= x1311 (=> (and (or (and (not x4615) (= x1481 0)) (and (= x1481 x377) x4615)) (and (= x4615 (< x2271 x377)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2271) (>= x2271 0))) x2654)))
(assert (= (and x3418 (not x2921)) x3534))
(assert (x3087 x1001))
(assert (= x3550 (=> (= (< 0 x1142) x2112) (and (=> (and (not x2112) (= x3844 x744)) x2140) (=> (and (and (and (= 0 x3989) (<= 0 x3989) (<= x3989 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x350 x1715 1) x1475) (= x4336 (ite (< 0 x305) (not (= x4029 0)) (> x305 0))) (not (= x1627 0)) (<= x4029 1461501637330902918203684832716283019655932542975) (= (x2779 x1475) x4029) (< x4029 1461501637330902918203684832716283019655932542976) (= x2438 (x350 x1840 2)) (<= 0 x305) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x1627) x1715 0) x1840) (= x3989 (x3171 x2438)) (<= 0 x4029)) (or (and (and (<= 0 x4719) (= (> x1142 x4719) x2142) (= x3588 (not x2142)) (= (x350 x97 2) x1091) (= x4719 (x3171 x1091)) (<= x4719 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x97 (x709 (x1970 x4029) x1715 0))) x4336) (and (not x4336) (= x3588 x4336)))) x2112) x3331)))))
(assert (= x1604 (and (not x4222) x939)))
(assert (x3087 x4481))
(assert (x3087 x1917))
(assert (= (and x41 (not x4521)) x327))
(assert (x3087 x4876))
(assert (= (and x1072 (not x1190)) x1541))
(assert (x3087 x4184))
(assert (x3087 x2847))
(assert (x3087 x2221))
(assert (x3087 x950))
(assert (= (x1970 157198259) (x2553 157198259)))
(assert (= x911 (and x3232 x4641)))
(assert (x3374 x2657))
(assert (= x4657 (=> (= (= x3564 0) x2856) (and (=> (and (not x2856) (= (or (> x2988 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2988) (= (<= x2988 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1706)) (and (=> (and (and (= 1 x123) (= 32 x3586) (= x4484 x3375)) (not x1706)) x3886) (=> (and (= x4484 x4700) x1706) x3831))) (=> (and x2856 (= x4484 x4700)) x3831)))))
(assert (= (=> (and (= x3564 x2731) (= x2988 x3142)) x4233) x1531))
(assert (x3087 x4737))
(assert (= x4746 (and x3149 x795)))
(assert (=> (<= x4494 10000) (= (x1970 x4494) (x2553 x4494))))
(assert (= (and x1376 x2834) x2790))
(assert (= x3667 (or x4552 x27 x3444 x4895)))
(assert (= x202 (and x3642 x471)))
(assert (= (or x4632 x4817 x4398 x3228) x4882))
(assert (x3087 x2192))
(assert (=> (>= 10000 x253) (= (x1970 x253) (x2553 x253))))
(assert (x3087 x1947))
(assert (=> (>= 10000 x725) (= (x1970 x725) (x2553 x725))))
(assert (x3087 x62))
(assert (= x1089 (and x3907 x4280)))
(assert (x3087 x2744))
(assert (x3087 x2182))
(assert (= (x1315 (x350 x2965 1)) (+ 1 (x1315 x2965))))
(assert (= (and x3677 (not x3863)) x1344))
(assert (= (and x2037 x1464) x4049))
(assert (x3087 x1959))
(assert (x3087 x374))
(assert (= x1672 (and x607 x459)))
(assert (= (and x1192 x1662) x3523))
(assert (= x3251 (=> (and (= x3707 x2810) (= x3957 0)) x284)))
(assert (= (and x4215 x4871) x839))
(assert (x3087 x2029))
(assert (x3087 x1426))
(assert (= (=> (and (= (= 0 x4675) x2864) (or (and x2864 (= (x350 x1715 2) x3382)) (and (= (x709 (x1970 x4675) x1715 0) x606) (not x2864)))) x1846) x1448))
(assert (x136 x3919))
(assert (x3087 x1629))
(assert (x3087 x3830))
(assert (x3087 x1065))
(assert (x3087 x1743))
(assert (= x1768 (and x787 x758)))
(assert (= (and (not x141) x4299) x4454))
(assert (x3087 x2280))
(assert (x136 x4120))
(assert (= x2467 (or x3227 x1465)))
(assert (x3087 x794))
(assert (x3087 x2703))
(assert (= x2422 (and x1220 (not x4453))))
(assert (= (and x3630 (not x1682)) x1639))
(assert (x3087 x2011))
(assert (= (and (not x2864) x4456) x3085))
(assert (= x4644 (and x4311 (not x198))))
(assert (x3087 x619))
(assert (x3087 x2911))
(assert (x3087 x2715))
(assert (=> (>= 10000 x3148) (= (x1970 x3148) (x2553 x3148))))
(assert (x136 x3148))
(assert (= x4039 (or x3380 (and (not x1583) x697))))
(assert (= (and x4135 x3761) x4348))
(assert (= (x1315 (x350 x4167 1)) (+ 1 (x1315 x4167))))
(assert (= (and x1529 (not x3446)) x2166))
(assert (x3087 x192))
(assert (=> (<= x189 10000) (= (x1970 x189) (x2553 x189))))
(assert (=> (>= 10000 x3919) (= (x2553 x3919) (x1970 x3919))))
(assert (= (and x723 x3259) x4372))
(assert (= (=> (and (or (and (and (<= 0 x1119) (= (x4396 (x1970 x1119)) x2353) (>= 1461501637330902918203684832716283019655932542975 x1119) (> 4294967296 x192) (< x1119 1461501637330902918203684832716283019655932542976) (not (= x2353 0))) (not x627)) x627) (and (= x627 (= 0 x1119)) (>= 1461501637330902918203684832716283019655932542975 x1119) (>= x1119 0) (> 1461501637330902918203684832716283019655932542976 x1119))) x2748) x4230))
(assert (= x1523 (or x2642 x3609)))
(assert (x136 x857))
(assert (x136 x3226))
(assert (= (and x2851 x2999) x1849))
(assert (= x4414 (and x1271 x3322)))
(assert (= (+ (x1315 x3836) 1) (x1315 (x350 x3836 1))))
(assert (x3087 x2565))
(assert (x3087 x4464))
(assert (= (+ (x1315 x1475) 1) (x1315 (x350 x1475 1))))
(assert (x136 x4029))
(assert (= (x1315 (x2553 117300739)) 117300739))
(assert (x3087 x274))
(assert (x3087 x4363))
(assert (x3087 x421))
(assert (x3087 x4289))
(assert (x3087 x2604))
(assert (x3087 x3566))
(assert (= (=> (= x679 (= x3337 0)) (and (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2509) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2509) true) (> 32 x2509))) x1097) (not x679)) (and (=> (and (not x1097) (and (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1581)) x794) (>= x3822 0) (= x1793 (> x3822 x794)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3822))) (and (=> (and (and (= x408 (x709 (x1970 x705) (x2553 5) 0)) (>= x3942 0) (= (> x3942 x794) x1815) (= x3942 (x3724 x408)) (= x2233 (x3164 (+ x3822 x1581))) (<= x3942 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1793)) (and (=> (and (and (= x1830 1) (= x866 (x3164 (+ x1581 x3942))) (= x2298 32)) (not x1815)) x1270) (=> x1815 x4712))) (=> x1793 x4712))) (=> x1097 x4712))) (=> x679 x4712))) x2789))
(assert (x3087 x4861))
(assert (x136 x4821))
(assert (= x4276 (and x3412 x1386)))
(assert (x3087 x576))
(assert (x3087 x3897))
(assert (=> (<= x3688 10000) (= (x2553 x3688) (x1970 x3688))))
(assert (= x1063 (and x4589 (not x3447))))
(assert (x3087 x4829))
(assert (= (=> (and (= x2470 x171) (= x3304 x1848)) x1469) x992))
(assert (= x1949 (and (not x2472) x4706)))
(assert (x3087 x429))
(assert (= (or x241 x520) x2933))
(assert (x136 x4234))
(assert (= (=> (and (= x49 (x709 (x1970 x1164) x2090 0)) (= (x350 x401 1) x129) (= x401 (x350 x49 1)) (= x1164 (x371 1461501637330902918203684832716283019655932542975 x620))) x1611) x2667))
(assert (x3087 x650))
(assert (x3087 x3639))
(assert (= x159 (and x59 x4189)))
(assert (= (x1315 (x350 x2708 1)) (+ 1 (x1315 x2708))))
(assert (= x946 (and x390 (not x4364))))
(assert (= (and x3744 x3394) x2812))
(assert (x3087 x1791))
(assert (= (and x1888 (not x66)) x4087))
(assert (x3087 x3510))
(assert (=> (>= 10000 x1697) (= (x2553 x1697) (x1970 x1697))))
(assert (= (x1315 (x1970 x1226)) x1226))
(assert (x3087 x3779))
(assert (x3087 x920))
(assert (x3087 x1242))
(assert (= x4278 (and x4301 x76)))
(assert (= (or x2814 x2179) x4581))
(assert (x3087 x2587))
(assert (= (and x1664 x4143) x2776))
(assert (=> (>= 10000 x4489) (= (x2553 x4489) (x1970 x4489))))
(assert (x3087 x2588))
(assert (x3087 x2962))
(assert (x4604 x2098 x2048))
(assert (= (=> (and (or (and (not x2865) (and (and (> 1461501637330902918203684832716283019655932542976 x1518) (<= 0 x1518) (>= 1461501637330902918203684832716283019655932542975 x1518) (= (x1557 x4828) x1518) (= x3339 (= x1518 0))) (or x3339 (and (not x3339) (and (> 1461501637330902918203684832716283019655932542976 x2769) (= (x1587 x4326) x2769) (= (x350 x4828 1) x4326) (<= 0 x2769) (<= x2769 1461501637330902918203684832716283019655932542975)))))) (and x2865 (and (and (<= x3041 1461501637330902918203684832716283019655932542975) (= (x1595 (- x2359 x3041)) x4833) (<= 0 x3041) (< x3041 1461501637330902918203684832716283019655932542976) (= (x1557 x4828) x3041) (= x2989 (> x4833 0))) (or (and x2989 (and (= (x2857 x2017) x269) (= x2017 (x709 (x1970 x2359) x1487 0)) (<= x269 1461501637330902918203684832716283019655932542975) (<= 0 x269) (< x269 1461501637330902918203684832716283019655932542976))) (not x2989))))) (= (ite (< x3606 x305) (not (= x2359 0)) (> x305 x3606)) x2865)) x2176) x967))
(assert (= (and (not x348) x2166) x1070))
(assert (= (and (not x440) x1810) x3434))
(assert (= (=> (and (= x2821 x1749) (= x82 x2341)) x4033) x2122))
(assert (=> (<= x1399 10000) (= (x2553 x1399) (x1970 x1399))))
(assert (x3087 x1279))
(assert (x3087 x4183))
(assert (x3087 x3148))
(assert (x3087 x4360))
(assert (= x4564 (=> (and (= x1511 x1078) (= x561 0)) x1514)))
(assert (= x4129 (or (and x465 x2895) (and x4749 (not x1316)))))
(assert (x3087 x3108))
(assert (= x3898 (x1315 (x1970 x3898))))
(assert (x3087 x4212))
(assert (x3087 x1449))
(assert (x3087 x4740))
(assert (x3087 x1305))
(assert (x3087 x3082))
(assert (x3087 x4216))
(assert (= x1019 (=> (and (= x4113 x3695) (= x890 x265)) x2200)))
(assert (= (=> (and (= x4228 x3695) (= 0 x890)) x1019) x39))
(assert (= x162 (and x1022 x3279)))
(assert (= x3680 (and x2591 x590)))
(assert (= x4869 (and (not x2542) x4901)))
(assert (x3087 x2726))
(assert (= (x1315 (x1970 x2643)) x2643))
(assert (= (=> (and (= 0 x1744) (= x4530 x812)) x2740) x3766))
(assert (= (and (=> (and (and (= x3210 x2555) (= x4503 1)) (not x4429)) x2723) (=> (and (and (= x1746 x1446) (= x3210 x1250) (= x1637 x4002)) x4429) x1645)) x2547))
(assert (= (x1315 (x350 x1049 2)) (+ 2 (x1315 x1049))))
(assert (= (or x417 x4023) x427))
(assert (x3087 x2721))
(assert (= (x1315 (x350 x3783 1)) (+ (x1315 x3783) 1)))
(assert (= (x1315 (x350 x3962 1)) (+ 1 (x1315 x3962))))
(assert (x3087 x2701))
(assert (x487 x1980))
(assert (= x4598 (and x3556 x416)))
(assert (x3087 x3895))
(assert (x3087 x3341))
(assert (= x2485 (and (not x1188) x237)))
(assert (x3087 x197))
(assert (= (and (not x3515) x4869) x92))
(assert (=> (>= 10000 x4455) (= (x2553 x4455) (x1970 x4455))))
(assert (= x1462 (x1315 (x1970 x1462))))
(assert (x3087 x547))
(assert (= x1177 (and x2420 x1793)))
(assert (x3087 x780))
(assert (x3087 x3397))
(assert (x3087 x1347))
(assert (x3087 x3090))
(assert (= x1965 (=> (and (= x2922 x3131) (= x185 x2057)) x188)))
(assert (x136 x1697))
(assert (= x3115 (x1315 (x1970 x3115))))
(assert (= (and x4567 x537) x4788))
(assert (x3087 x2714))
(assert (= (x1315 (x2553 35417553099779373699389112480655434059402432070290151981503827724506945814528)) 35417553099779373699389112480655434059402432070290151981503827724506945814528))
(assert (x3087 x3133))
(assert (x3087 x2103))
(assert (x3087 x1728))
(assert (x3087 x1138))
(assert (x3087 x1422))
(assert (= (and x1519 x566) x741))
(assert (= (and x2984 x4762) x1253))
(assert (= (and x1059 (not x1755)) x2403))
(assert (= (x1315 (x1970 x3148)) x3148))
(assert (= (x1315 (x350 x4040 2)) (+ 2 (x1315 x4040))))
(assert (= x3683 (and x1106 (not x3408))))
(assert (x3087 x505))
(assert (x3087 x4269))
(assert (x3087 x4791))
(assert (= (=> (and (= 0 x3512) (= x4132 x3796)) x2131) x1640))
(assert (x3087 x2560))
(assert (= (+ (x1315 x240) 1) (x1315 (x350 x240 1))))
(assert (x3087 x1880))
(assert (x3087 x3512))
(assert (x3087 x2876))
(assert (x3087 x4099))
(assert (= x4065 (and (=> (and x1039 (and (or (and (and (= (< x2730 x832) x4769) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2730) (= (not x4769) x2060) (= (x366 x535) x2730) (= (x350 x2148 2) x535) (>= x2730 0) (= x2148 (x709 (x1970 x1341) x4088 0))) x2971) (and (= x2971 x2060) (not x2971))) (and (<= x1341 1461501637330902918203684832716283019655932542975) (= x1341 (x1068 x548)) (= (x350 x2965 1) x548) (= x2971 (ite (> x305 1) (not (= 0 x1341)) (< 1 x305))) (= x2965 (x709 (x1970 x3991) x4088 0)) (>= x1341 0) (< x1341 1461501637330902918203684832716283019655932542976)))) x2464) (=> (and (not x1039) (and (= x1834 0) (= x420 x3991))) x3810))))
(assert (=> (>= 10000 x1945) (= (x2553 x1945) (x1970 x1945))))
(assert (= x1238 (and x4193 x3608)))
(assert (x3087 x2931))
(assert (= (or x2935 x4191) x4365))
(assert (= (=> (and (= x3564 x1876) (= x4310 x2988)) x4233) x1298))
(assert (= (x1315 (x2553 547091486)) 547091486))
(assert (x3087 x1269))
(assert (= (and x1550 x1221) x2977))
(assert (= x4265 (and x4311 x198)))
(assert (= (and x1868 x1609) x1456))
(assert (=> (>= 10000 x4457) (= (x1970 x4457) (x2553 x4457))))
(assert (= (and (not x1706) x3235) x1646))
(assert (x136 x484))
(assert (x3087 x2086))
(assert (x3087 x1530))
(assert (= (x1970 1313710058) (x2553 1313710058)))
(assert (= x3478 (and x3918 (not x1185))))
(assert (x136 x2435))
(assert (= x3102 (and x2746 x3373)))
(assert (= x1143 (and x1130 (not x4073))))
(assert (x3087 x1701))
(assert (x3087 x1615))
(assert (x136 x4393))
(assert (=> (<= x1341 10000) (= (x1970 x1341) (x2553 x1341))))
(assert (= (or x3928 x309 x4660 x2294) x4043))
(assert (= x1990 (and x1193 x4430)))
(assert (= x4842 (and x159 (not x4885))))
(assert (= (and (not x2627) x4238) x3522))
(assert (x3087 x3949))
(assert (= (and x3961 x3359) x1069))
(assert (= x152 (and x2584 (not x4495))))
(assert (x3087 x1879))
(assert (= x4137 (=> (and (= x2744 x3440) (= x4631 x108) (= x4745 x388) (= x991 x3306)) x1222)))
(assert (=> (<= x2251 10000) (= (x2553 x2251) (x1970 x2251))))
(assert (x3087 x3519))
(assert (x3087 x4110))
(assert (x3087 x592))
(assert (= 1466279372 (x1315 (x2553 1466279372))))
(assert (= x2363 (=> (and (= 0 x1876) (= x1242 x4310)) x1298)))
(assert (x3087 x3958))
(assert (x136 x189))
(assert (x487 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x3087 x2749))
(assert (x3087 x4865))
(assert (x136 x1627))
(assert (x3087 x1379))
(assert (= x79 (and x1156 x3280)))
(assert (x4604 x201 x4057))
(assert (x3087 x4675))
(assert (= (and (=> (and x3040 (and (or (and (and (<= x298 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3880 (not x2823)) (= (x709 (x1970 x1727) x334 0) x2379) (= x2712 (x350 x2379 2)) (= x2823 (> x4116 x298)) (= x298 (x73 x2712)) (>= x298 0)) x261) (and (= x261 x3880) (not x261))) (and (= x261 (ite (< 1 x305) (not (= 0 x1727)) (> x305 1))) (= x1727 (x3361 x673)) (< x1727 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1727) (= x2649 (x709 (x1970 x3312) x334 0)) (>= x1727 0) (= x673 (x350 x2649 1))))) x1992) (=> (and (not x3040) (and (= x4455 x3312) (= 0 x3594))) x1684)) x1630))
(assert (x3087 x4232))
(assert (= (and (not x558) x4449) x537))
(assert (= x3228 (or x3372 x4686)))
(assert (= (x1315 (x2553 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= (and x3218 x4161) x2337))
(assert (= (and x1445 (not x4336)) x3673))
(assert (x3087 x1119))
(assert (x3087 x921))
(assert (= x3114 (or x4194 (and (not x1644) x3617))))
(assert (x3087 x428))
(assert (x3087 x755))
(assert (x3087 x1256))
(assert (x3087 x362))
(assert (= (or x2366 x3559 x3150 x1875 x3010 x2163) x2067))
(assert (= (=> (and (= x33 x3745) (= x3757 0)) x2137) x4251))
(assert (x1816 x2728))
(assert (x3087 x2000))
(assert (x3087 x1574))
(assert (x3087 x2625))
(assert (= 178855970 (x1315 (x2553 178855970))))
(assert (x3087 x1589))
(assert (x3087 x966))
(assert (= (x2553 599290589) (x1970 599290589)))
(assert (= x3592 (or x2650 x846)))
(assert (x3087 x2214))
(assert (x3087 x2808))
(assert (x3087 x1709))
(assert (= x2434 (and x3856 x2804)))
(assert (x3087 x24))
(assert (= (and x3160 x1014) x332))
(assert (x3087 x2975))
(assert (= (or x1308 x3969) x91))
(assert (= x3505 (or x2620 x3014 x2572 x1063 x4720 x1904)))
(assert (x3087 x3578))
(assert (x3087 x4366))
(assert (= x150 (and x2675 x321)))
(assert (= (and x540 x2005) x1161))
(assert (= x3647 (and x2666 (not x3811))))
(assert (x3087 x3921))
(assert (x3087 x555))
(assert (= x3170 (and (not x4359) x1042)))
(assert (x136 x1845))
(assert (= x3526 (and x2123 (not x1822))))
(assert (= x3175 (and x3088 x2757)))
(assert (x3087 x2514))
(assert (= x4849 (=> (= (= x880 0) x883) (and (=> (and x883 (= x2719 x1930)) x1044) (=> (and (= (or (and (< x4416 32) (= true (<= x4416 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4416)) x175) (not x883)) (and (=> (and (and (= x4696 x4206) (= x4019 1) (= x4740 x1930)) (not x175)) x975) (=> (and (= x2719 x1930) x175) x1044)))))))
(assert (= (+ (x1315 x907) 1) (x1315 (x350 x907 1))))
(assert (x3087 x3847))
(assert (x136 x4768))
(assert (x3087 x801))
(assert (= x2080 (and (not x1688) x1420)))
(assert (x3087 x4285))
(assert (= x3300 (and x2524 x4279)))
(assert (= (and (not x4770) x4547) x3010))
(assert (= (x1315 (x1970 x4042)) x4042))
(assert (x3087 x1605))
(assert (x136 x2321))
(assert (= (and x2936 x2854) x2052))
(assert (x3087 x2134))
(assert (x3087 x743))
(assert (= (and x4238 x2627) x1326))
(assert (x3087 x3312))
(assert (= (x1315 (x2553 1313710058)) 1313710058))
(assert (x136 x1100))
(assert (= x3628 (or x834 x398)))
(assert (= x2137 (=> (and (= x1665 x33) (= x2455 x3757)) x4220)))
(assert (= (or x79 x4176) x2597))
(assert (= (and (not x2347) x95) x190))
(assert (= (and x4506 x4342) x2018))
(assert (x3087 x1493))
(assert (= x4487 (and x3376 x4355)))
(assert (x3087 x4484))
(assert (x3087 x4228))
(assert (x3087 x4263))
(assert (= x3967 (and x2999 (not x2851))))
(assert (x3087 x955))
(assert (= x65 (and x261 x3438)))
(assert (= (x1315 (x1970 x2009)) x2009))
(assert (= (+ 1 (x1315 x334)) (x1315 (x350 x334 1))))
(assert (= (=> (and (= x2283 x2455) (= x4375 x1665)) x4220) x3056))
(assert (x3087 x2031))
(assert (x3087 x1854))
(assert (x3087 x2713))
(assert (x3087 x2901))
(assert (x3087 x3736))
(assert (x3087 x2318))
(assert (= (x1315 (x1970 x1757)) x1757))
(assert (x3087 x4120))
(assert (= (+ 2 (x1315 x2082)) (x1315 (x350 x2082 2))))
(assert (x3087 x3991))
(assert (= x1181 (and (not x2641) x4798)))
(assert (= (=> (and (or x1548 (not x1548)) (= x1548 (= 0 x171))) x1441) x1469))
(assert (= (and x3729 (not x3669)) x2947))
(assert (x3087 x193))
(assert (= (or x1505 x4049) x4762))
(assert (= (x1315 (x350 x4004 1)) (+ (x1315 x4004) 1)))
(assert (x3087 x2093))
(assert (= x3003 (and (not x2208) x2812)))
(assert (= x3960 (x1315 (x1970 x3960))))
(assert (x3087 x3440))
(assert (x3087 x4198))
(assert (= x2654 (=> (= x1891 (= x1481 x3663)) (and (=> (and (not x1891) (= (< 0 x3663) x2660)) (and (=> (and (and (or (and (= x2474 (x350 x1746 1)) x1156) (and (and (= x3698 (x350 x4167 1)) (= (x709 (x1970 x2711) x1746 0) x4167)) (not x1156))) (and (= x3377 (x3164 (+ 96 x538))) (= x2711 (x1874 x240)) (= (x350 x240 1) x218) (= (x709 (x1970 x1627) x1746 0) x240) (not (= 0 x2904)) (= x226 (x357 x218)) (<= 0 x2904) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2904) (>= 1461501637330902918203684832716283019655932542975 x2711) (< x226 1461501637330902918203684832716283019655932542976) (>= x226 0) (>= x2711 0) (<= x226 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2711) (= (= x2711 0) x1156) (= x210 (x350 x218 1)) (= x2904 (x2242 x210)))) x2660) x4300) (=> (and (= x3947 x538) (not x2660)) x4578))) (=> (and (= x373 x538) x1891) x2305)))))
(assert (x3087 x1444))
(assert (x3087 x746))
(assert (= 2362143243 (x1315 (x2553 2362143243))))
(assert (= x80 (and x2024 (not x2688))))
(assert (= (x1315 (x350 x674 2)) (+ 2 (x1315 x674))))
(assert (= x552 (or x4640 x603)))
(assert (= x2177 (and x1639 (not x4027))))
(assert (x3087 x1409))
(assert (= (and x550 (not x4538)) x1353))
(assert (= (and x4836 x2855) x1214))
(assert (x3087 x1941))
(assert (x3087 x3516))
(assert (= (x1315 (x350 x2090 2)) (+ 2 (x1315 x2090))))
(assert (x3087 x312))
(assert (= (and x1201 x419) x297))
(assert (= (=> (= (> x4116 0) x4244) (and (=> (and (and (and (not (= 0 x421)) (= x3312 (x4636 x3962)) (<= 0 x3312) (>= 1461501637330902918203684832716283019655932542975 x3312) (= (x350 x3428 2) x1829) (= x3962 (x350 x334 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x305) (< x3312 1461501637330902918203684832716283019655932542976) (= x3955 (x73 x1829)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3955) (= x3428 (x709 (x1970 x421) x334 0)) (<= 0 x3955) (= x346 (ite (> x305 0) (not (= x3312 0)) (< 0 x305))) (= x3955 0) (>= x305 0)) (or (and x346 (and (<= 0 x3524) (<= x3524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x3312) x334 0) x2364) (= x155 (< x3524 x4116)) (= (x350 x2364 2) x3146) (= x3524 (x73 x3146)) (= (not x155) x3040))) (and (= x346 x3040) (not x346)))) x4244) x1630) (=> (not x4244) x160))) x4293))
(assert (= (and (not x2259) x3450) x1753))
(assert (x3087 x2365))
(assert (= x3554 (and (not x811) x4843)))
(assert (x3087 x2607))
(assert (= (and x1490 (not x2805)) x3837))
(assert (x3087 x2199))
(assert (= (and x3104 x2890) x3823))
(assert (= (and x958 x4298) x1204))
(assert (x3087 x2946))
(assert (x3087 x469))
(assert (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x1315 (x2553 20853193852723734048814770637610870652489083209607696777694672748161462697984))))
(assert (= (and (not x1046) x527) x4747))
(assert (x3087 x85))
(assert (x3087 x1978))
(assert (= (and x1839 (not x4881)) x1147))
(assert (x136 x127))
(assert (= (and (not x4403) x757) x3364))
(assert (= (and (not x6) x3074) x3229))
(assert (x3087 x1834))
(assert (= x4250 (and x552 x4760)))
(assert (x3087 x542))
(assert (x3087 x441))
(assert (x3087 x2465))
(assert (x136 x3204))
(assert (= x2075 (and x4278 (not x2499))))
(assert (x3087 x2903))
(assert (= x1846 (=> (and (= x1972 (x709 (x1970 x1627) x1715 0)) (= x3844 x3305) (= (x350 x1983 1) x4647) (= (x350 x1972 1) x1983)) x3550)))
(assert (= x926 (and x997 x486)))
(assert (x3087 x3557))
(assert (x3087 x422))
(assert (x487 x2604))
(assert (= (=> (and (and (= (x371 x2897 x2455) x1713) (= (x709 (x1970 x4663) (x2553 169) 0) x4421) (= x4057 (ite (< 31 x1665) 1 0)) (> x1713 0) (= 4 x1268) (= (ite (= x1665 0) 1 0) x1020) (= (= x4289 x4345) x4288) (= x4873 (x3164 (+ x4158 96))) (= x4663 (x371 1461501637330902918203684832716283019655932542975 x1305)) (= x4289 (x371 1461501637330902918203684832716283019655932542975 x1305)) (= x2897 (x1884 x2657 x1020)) (= x2657 (x371 x201 x4057)) (= x201 (ite (= x2314 (x2553 1)) 1 0))) (or (and (not x4288) (and (= (= x3111 x4289) x3407) (or (and (and (not (= 2796547477 x3195)) (= (x4396 (x1970 x3111)) x4207) (= x100 4) (not (< x3195 2217467699)) (<= x3349 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2691771752 x3195)) (= x4471 1) (not (< x100 4)) (= x3255 32) (not (< x3195 2691771752)) (> x4207 0) (= 2858086653 x3195) (not (= 2835717307 x3195)) (>= x3349 0) (> 2929553584 x3195) (= x4094 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= x100 x1268)) x3407) (and (not x3407) (and (= (= x3939 x4289) x352) (and x352 (and (= x921 4) (= x1268 x921) (< 0 x181) (= x181 (x4396 (x1970 x3939))) (not (= x510 2691771752)) (not (= x510 2796547477)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x2693) (< x510 2929553584) (not (< x510 2691771752)) (not (< x921 4)) (= 2858086653 x510) (not (> 2217467699 x510)) (not (= x510 2835717307)) (<= 0 x62) (= 1 x4471) (= 32 x3255) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x62)))))))) (and x4288 (and (= x4471 1) (not (> 4 x1724)) (= 4 x1724) (= x2960 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (= x4681 2835717307)) (> x2054 0) (< x4681 2929553584) (not (= 2796547477 x4681)) (not (< x4681 2691771752)) (not (< x4681 2217467699)) (<= 0 x4902) (= x3255 32) (= 2858086653 x4681) (= x1724 x1268) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4902) (= (x4396 (x1970 x4345)) x2054) (not (= x4681 2691771752)))))) x2925) x1176))
(assert (x3087 x3100))
(assert (x3087 x108))
(assert (x3087 x2441))
(assert (x3314 x971))
(assert (= (x1970 2691771752) (x2553 2691771752)))
(assert (=> (>= 10000 x4826) (= (x2553 x4826) (x1970 x4826))))
(assert (x3087 x4724))
(assert (= x4722 x784))
(assert (x3087 x3728))
(assert (= x3714 (and x2049 x4815)))
(assert (= (and x1822 x2123) x93))
(assert (= (and (not x101) x397) x1308))
(assert (x136 x4455))
(assert (= (x2553 2362143243) (x1970 2362143243)))
(assert (x3087 x1945))
(assert (=> (<= x1845 10000) (= (x2553 x1845) (x1970 x1845))))
(assert (x136 x490))
(assert (x3087 x3965))
(assert (x3087 x516))
(assert (x3087 x4755))
(assert (= x3899 (and x4589 x3447)))
(assert (x3087 x4022))
(assert (= (and x4316 (not x3635)) x4665))
(assert (= (and (not x175) x4515) x1467))
(assert (x3087 x3696))
(assert (= (or x3881 x3381) x723))
(assert (x3087 x2657))
(assert (=> (>= 10000 x3335) (= (x1970 x3335) (x2553 x3335))))
(assert (= (and x527 x1046) x2705))
(assert (x3087 x187))
(assert (x3087 x4240))
(assert (x3087 x294))
(assert (x136 x2218))
(assert (= x2408 (and x3579 x4138)))
(assert (x3087 x568))
(assert (x3087 x4452))
(assert (= (and x616 (not x2440)) x2746))
(assert (x3087 x2993))
(assert (= (and (not x3993) x1893) x2679))
(assert (x3087 x3126))
(assert (x3087 x3846))
(assert (= x3770 x3078))
(assert (= x2692 (or x1695 x754 x1979 x217)))
(assert (x3087 x4132))
(assert (= x3192 (and x3470 x1028)))
(assert (x3087 x615))
(assert (= (and (not x2309) x895) x3213))
(assert (x136 x1601))
(assert (= x4143 (and x844 (not x339))))
(assert (x3087 x3551))
(assert (x3087 x4163))
(assert (x3087 x122))
(assert (= (and (not x4342) x4506) x4472))
(assert (= x1641 (and x863 x3627)))
(assert (x3087 x3524))
(assert (= x4033 (=> (and (= (= 0 x2821) x4880) (or (not x4880) x4880)) x1652)))
(assert (= x2306 (and x2277 x26)))
(assert (= (+ 2 (x1315 x1121)) (x1315 (x350 x1121 2))))
(assert (= x1460 (and x775 x4859)))
(assert (x3087 x1152))
(assert (=> (<= x1061 10000) (= (x1970 x1061) (x2553 x1061))))
(assert (x136 x3230))
(assert (x136 x2538))
(assert (= (and x4671 (not x2829)) x3184))
(assert (x3087 x1618))
(assert (x3087 x1481))
(assert (= (x1315 (x350 x4290 2)) (+ (x1315 x4290) 2)))
(assert (x3087 x4700))
(assert (= x67 (and x4267 (not x4852))))
(assert (x3087 x2699))
(assert (= x4501 (and (not x1603) x3213)))
(assert (= (or x1507 x3718 x3003 x204 x3488 x4197) x2180))
(assert (= (and x2881 x3224) x258))
(assert (x136 x3115))
(assert (= x282 (and (not x1886) x1488)))
(assert (x3087 x3564))
(assert (= x436 (and x3926 (not x3932))))
(assert (= (x1315 (x1970 x4663)) x4663))
(assert (x3087 x689))
(assert (x3087 x2162))
(assert (x3087 x3904))
(assert (= (and x451 x3618) x3450))
(assert (= (or x383 x3395) x3918))
(assert (= (and x3190 (not x1402)) x1436))
(assert (x3087 x228))
(assert (= x3331 (and (=> (and (not x3588) (and (= x4029 x2119) (= 0 x496))) x4227) (=> (and (and (or (and (= x850 x6) (not x850)) (and (and (<= x4846 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2437 (x350 x1121 2)) (= (not x657) x6) (<= 0 x4846) (= x1121 (x709 (x1970 x3560) x1715 0)) (= x4846 (x3171 x2437)) (= x657 (> x1142 x4846))) x850)) (and (< x3560 1461501637330902918203684832716283019655932542976) (>= x3560 0) (= x850 (ite (> x305 1) (not (= x3560 0)) (< 1 x305))) (= x215 (x709 (x1970 x4029) x1715 0)) (= x765 (x350 x215 1)) (= (x1126 x765) x3560) (<= x3560 1461501637330902918203684832716283019655932542975))) x3588) x4223))))
(assert (x3087 x3688))
(assert (x3087 x2961))
(assert (= x3381 (or x4469 x2567)))
(assert (x3087 x2336))
(assert (= x2454 (and x4843 x811)))
(assert (= x48 (and x11 x316)))
(assert (= (x1315 (x350 x1482 2)) (+ (x1315 x1482) 2)))
(assert (x3087 x2887))
(assert (x3087 x3230))
(assert (x136 x253))
(assert (x3087 x2097))
(assert (x3087 x2353))
(assert (x3087 x969))
(assert (= (and x4068 x3325) x4430))
(assert (= x1814 (and (not x2936) x2854)))
(assert (=> (>= 10000 x4821) (= (x2553 x4821) (x1970 x4821))))
(assert (= (x2553 75483562) (x1970 75483562)))
(assert (= (=> (and (= x3451 x288) (= x664 x274) (= x1714 x3076) (= x1138 x3527)) x3806) x2568))
(assert (x3087 x2477))
(assert (= (=> (and (= x4481 x3564) (= x3849 x2988)) x4233) x910))
(assert (x3087 x1227))
(assert (= (and x3837 (not x3079)) x4520))
(assert (x136 x3991))
(assert (= x4541 (and x1430 (not x3637))))
(assert (= x948 (and x3654 (not x4742))))
(assert (= x3629 (and (not x1778) x3189)))
(assert (= (and x3790 (not x700)) x4803))
(assert (= x4271 (and x3936 x1540)))
(assert (x136 x1226))
(assert (x3314 x1305))
(assert (= x4369 (and x337 x3683)))
(assert (x136 x555))
(assert (= x2043 (x1315 (x1970 x2043))))
(assert (x3087 x3734))
(assert (= x2932 (or x2738 x1981)))
(assert (= (=> (and (= x3304 x3965) (= x2470 0)) x992) x2923))
(assert (x3087 x903))
(assert (= x4247 (or x3710 x3316)))
(assert (= x4146 (and x946 x3767)))
(assert (= x2435 (x1315 (x1970 x2435))))
(assert (x3087 x3151))
(assert (x3087 x1511))
(assert (x3087 x3878))
(assert (= x4118 (x1315 (x1970 x4118))))
(assert (= (and x1910 x3743) x1586))
(assert (= x1538 (and x4247 x4429)))
(assert (=> (<= x4360 10000) (= (x1970 x4360) (x2553 x4360))))
(assert (= x2802 (and x4752 x1977)))
(assert (= x3817 (or x2529 x2831)))
(assert (x3087 x4086))
(assert (= x253 (x1315 (x1970 x253))))
(assert (= x1364 (and x3616 x2229)))
(assert (= (and x1768 (not x823)) x3418))
(assert (x3087 x1292))
(assert (=> (>= 10000 x2555) (= (x1970 x2555) (x2553 x2555))))
(assert (x136 x473))
(assert (x3087 x3896))
(assert (x3087 x1473))
(assert (= x4467 (and x1593 (not x4264))))
(assert (x3087 x2762))
(assert (=> (>= 10000 x4528) (= (x2553 x4528) (x1970 x4528))))
(assert (= x1520 (or x1990 x2408 x1002 x1337 x1799 x703 x926 x3620 x1066)))
(assert (x3087 x2569))
(assert (= x4127 (or x3244 x2187 x4520 x376)))
(assert (= (and x2905 x4317) x250))
(assert (x3087 x3686))
(assert (= x4280 (and x76 (not x4301))))
(assert (= x302 (=> (and (= x3020 x1118) (= x1787 x1996)) x3246)))
(assert (= (+ (x1315 x623) 1) (x1315 (x350 x623 1))))
(assert (= x3387 (and x3170 x4789)))
(assert (x3314 x2930))
(assert (=> (<= x3248 10000) (= (x1970 x3248) (x2553 x3248))))
(assert (= x1433 (or x4573 x299)))
(assert (= (and x3376 (not x4355)) x4125))
(assert (= (x1315 (x2553 18446744073709551615)) 18446744073709551615))
(assert (= (and (not x451) x3618) x3705))
(assert (x3087 x706))
(assert (x3087 x727))
(assert (=> (<= x2886 10000) (= (x2553 x2886) (x1970 x2886))))
(assert (x3087 x4103))
(assert (x3087 x3560))
(assert (= x1164 (x1315 (x1970 x1164))))
(assert (= x3810 (=> (and (= x3052 (ite (< x1834 x305) (not (= x420 0)) (> x305 x1834))) (or (and x3052 (and (or (and x1540 (and (= (x709 (x1970 x420) x4088 0) x2231) (= (x371 1461501637330902918203684832716283019655932542975 x620) x2716) (>= x1494 0) (>= 1461501637330902918203684832716283019655932542975 x1494) (< x1494 1461501637330902918203684832716283019655932542976) (= (x371 1461501637330902918203684832716283019655932542975 x620) x363) (= (x960 x2231) x1494) (= x3044 (x371 1461501637330902918203684832716283019655932542975 x620)))) (and (and (= (x371 1461501637330902918203684832716283019655932542975 x620) x3477) (= (x371 1461501637330902918203684832716283019655932542975 x620) x525) (= x4381 (x371 1461501637330902918203684832716283019655932542975 x620))) (not x1540))) (and (< x2695 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2695) (>= x2695 0) (= x2318 (x1595 (- x420 x2695))) (= (x4508 x1148) x2695) (= (< 0 x2318) x1540)))) (and (and (and (= (x4508 x1148) x2498) (> 1461501637330902918203684832716283019655932542976 x2498) (>= x2498 0) (<= x2498 1461501637330902918203684832716283019655932542975) (= (= x2498 0) x1340)) (or (and x1340 (and (= x3497 (x371 1461501637330902918203684832716283019655932542975 x620)) (= x3293 (x371 1461501637330902918203684832716283019655932542975 x620)) (= x1556 (x371 1461501637330902918203684832716283019655932542975 x620)))) (and (and (= (x371 1461501637330902918203684832716283019655932542975 x620) x2058) (> 1461501637330902918203684832716283019655932542976 x981) (= x2168 (x371 1461501637330902918203684832716283019655932542975 x620)) (= x3715 (x371 1461501637330902918203684832716283019655932542975 x620)) (>= 1461501637330902918203684832716283019655932542975 x981) (<= 0 x981) (= x889 (x350 x1148 1)) (= (x3589 x889) x981)) (not x1340)))) (not x3052)))) x784)))
(assert (= (x2553 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x1970 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (x3087 x3649))
(assert (x3087 x4153))
(assert (= x3104 (and x4733 (not x4728))))
(assert (x3314 x323))
(assert (= x4237 (=> (= x477 (= x1080 0)) (and (=> x477 x711) (=> (and (= x1428 (or (and (< x2950 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2950) true)) (> x2950 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x477)) (and (=> (and (not x1428) (and (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2016)) x896) (= x1682 (< x896 x2500)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2500) (<= 0 x2500))) (and (=> (and (not x1682) (and (>= x720 0) (= x720 (x1140 x3974)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x720) (= (< x896 x720) x4027) (= x3974 (x709 (x1970 x705) (x2553 5) 0)) (= x393 (x3164 (+ x2016 x2500))))) (and (=> x4027 x711) (=> (and (not x4027) (and (= x4493 1) (= 32 x1898) (= (x3164 (+ x720 x2016)) x806))) x2414))) (=> x1682 x711))) (=> x1428 x711)))))))
(assert (x3087 x934))
(assert (=> (<= x3991 10000) (= (x2553 x3991) (x1970 x3991))))
(assert (= x4794 (=> (and (= (x3164 (+ x2453 32)) x3329) (= (= x2063 x1978) x50) (= x2453 (x3164 (+ 32 x3483))) (= x3483 (x3164 (+ x4158 4)))) (and (=> (and (= x4516 (= x4345 x1978)) (not x50)) (and (=> (and (and (= x2715 x2093) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1792)) (> 96 x1792)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1792)) x2413) (= x2786 x705) (= x2214 x595) (= 599290589 x1781) (= (x4396 (x1970 x4345)) x1290) (< 0 x1290) (not (< x1781 405663989)) (not (= 547091486 x1781)) (> 2217467699 x1781) (not (= x1781 405663989)) (not (< x743 4)) (= x1792 (x1595 (- x743 4))) (= x4026 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x743) (< x1781 988262939)) x4516) (and (=> x2413 x4609) (=> (and (and (= (= x503 x2214) x2741) (= x1439 x595) (= (x371 1461501637330902918203684832716283019655932542975 x2214) x503)) (not x2413)) (and (=> (and (and (= x1783 (= x2786 x705)) (= x1050 x2786)) x2741) (and (=> (and x1783 (and (= (x371 1461501637330902918203684832716283019655932542975 x595) x2262) (= x2715 x4693) (= (x4318 x1525) x3815) (<= x3815 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3815) (= x3870 (> x2093 x3815)) (= (x709 (x1970 x2262) (x2553 5) 0) x1525))) (and (=> (and (not x3870) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x587) (= (x371 1461501637330902918203684832716283019655932542975 x595) x2538) (= (x4318 x1794) x587) (= (x709 (x1970 x2538) (x2553 5) 0) x1794) (<= 0 x587) (= (> x2715 x587) x747))) (and (=> (and (and (= (x1595 (- x587 x2715)) x658) (= (x1159 x3043) x1449) (>= x1449 0) (= (< x146 x1449) x3968) (= x3043 (x709 (x1970 x2786) (x2553 5) 0)) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2715)) x146) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1449)) (not x747)) (and (=> (and (and (= 1 x1471) (= 1 x2283) (= 32 x4375) (= (x3164 (+ x1449 x2715)) x4159)) (not x3968)) x3056) (=> x3968 x4609))) (=> x747 x4609))) (=> x3870 x4609))) (=> (not x1783) x4609))) (=> (not x2741) x4609))))) (=> (and (not x4516) (= (= x1978 x3111) x3824)) (and (=> (and (and (= (= x3939 x1978) x2793) (and (and (= (x1595 (- x2768 4)) x927) (= x2768 100) (not (< x1183 405663989)) (= (or (> x927 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x927) true) (< x927 96))) x3393) (< 0 x4205) (> 2217467699 x1183) (= x1183 599290589) (= x4854 x705) (not (= x1183 405663989)) (not (= x1183 547091486)) (= x2093 x3819) (= x2378 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x971 x2214) (= (x4396 (x1970 x3939)) x4205) (not (< x2768 4)) (< x1183 988262939)) x2793)) (not x3824)) (and (=> x3393 x1321) (=> (and (not x3393) (and (= x3664 (= x3709 x2214)) (= x3793 x971) (= x3709 (x371 1461501637330902918203684832716283019655932542975 x2214)))) (and (=> (not x3664) x1321) (=> (and x3664 (and (= x4854 x1309) (= x220 (= x4854 x705)))) (and (=> (and (and (= (> x2093 x897) x695) (<= x897 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x371 1461501637330902918203684832716283019655932542975 x971) x1041) (= x3819 x611) (<= 0 x897) (= (x709 (x1970 x1041) (x2553 5) 0) x1137) (= x897 (x4824 x1137))) x220) (and (=> x695 x1321) (=> (and (not x695) (and (= x1635 (< x4209 x3819)) (<= 0 x4209) (= (x371 1461501637330902918203684832716283019655932542975 x971) x3204) (= x1314 (x709 (x1970 x3204) (x2553 5) 0)) (<= x4209 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4209 (x4824 x1314)))) (and (=> x1635 x1321) (=> (and (and (= x748 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3819))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2028) (= x3536 (x1595 (- x4209 x3819))) (>= x2028 0) (= (x709 (x1970 x4854) (x2553 5) 0) x8) (= (x916 x8) x2028) (= x1172 (< x748 x2028))) (not x1635)) (and (=> x1172 x1321) (=> (and (and (= x3138 32) (= (x3164 (+ x3819 x2028)) x3348) (= x3262 1) (= x1245 1)) (not x1172)) x1255))))))) (=> (not x220) x1321))))))) (=> (and (and (= x705 x2886) (< x2127 2217467699) (not (> 4 x4320)) (= (x1595 (- x4320 4)) x4190) (not (= 405663989 x2127)) (= x2127 599290589) (= (or (> x4190 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4190) true) (> 96 x4190))) x708) (= x4320 100) (not (< x2127 405663989)) (< 0 x4569) (> 988262939 x2127) (not (= 547091486 x2127)) (= x4569 (x4396 (x1970 x3111))) (= x2930 x2214) (= x3736 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3048 x2093)) x3824) (and (=> (and (not x708) (and (= (= x1917 x2214) x775) (= x1917 (x371 1461501637330902918203684832716283019655932542975 x2214)) (= x2930 x1426))) (and (=> (not x775) x2629) (=> (and (and (= (= x2886 x705) x4123) (= x565 x2886)) x775) (and (=> (not x4123) x2629) (=> (and (and (= x2182 (x1425 x4347)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2182) (= x3048 x2706) (= x4347 (x709 (x1970 x2218) (x2553 5) 0)) (>= x2182 0) (= (< x2182 x2093) x3022) (= (x371 1461501637330902918203684832716283019655932542975 x2930) x2218)) x4123) (and (=> x3022 x2629) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3599) (= x693 (x709 (x1970 x1442) (x2553 5) 0)) (>= x3599 0) (= x3599 (x1425 x693)) (= (x371 1461501637330902918203684832716283019655932542975 x2930) x1442) (= (< x3599 x3048) x2662)) (not x3022)) (and (=> (and (and (= (x709 (x1970 x2886) (x2553 5) 0) x4699) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3048)) x3716) (= (< x3716 x1152) x1700) (= x1152 (x1406 x4699)) (<= x1152 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1152 0) (= (x1595 (- x3599 x3048)) x3929)) (not x2662)) (and (=> (and (and (= 1 x1512) (= 32 x3568) (= (x3164 (+ x3048 x1152)) x3242) (= x3970 1)) (not x1700)) x4765) (=> x1700 x2629))) (=> x2662 x2629))))))))) (=> x708 x2629))))))) (=> (and x50 (and (= x2093 x3672) (= 599290589 x987) (= x2400 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4670) (and (< x4670 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4670) true)))) (not (< x3777 4)) (= x3979 x2214) (= x2463 (x4396 (x1970 x2063))) (not (< x987 599290589)) (= x2457 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x705 x103) (> 1466279372 x987) (= (x1595 (- x3777 4)) x4670) (< 0 x2463) (= x3777 100))) (and (=> x2400 x4251) (=> (and (and (= (= x3747 x2214) x4160) (= x3747 (x371 1461501637330902918203684832716283019655932542975 x2214))) (not x2400)) (and (=> (not x4160) x4251) (=> (and x4160 (and (= x3106 x103) (= (= x103 x705) x1688))) (and (=> (and (and (<= x3676 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3672 x2961) (= x584 (x709 (x1970 x3230) (x2553 1) 0)) (>= x3676 0) (= (x2673 x584) x3676) (= x4095 (> x2093 x3676)) (= x3230 (x371 1461501637330902918203684832716283019655932542975 x3979))) x1688) (and (=> (and (not x4095) (= (< x3676 x3672) x1486)) (and (=> x1486 x4251) (=> (and (and (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3672)) x4491) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2749) (>= x2749 0) (= (x1595 (- x3676 x3672)) x861) (= x830 (x709 (x1970 x4861) (x2553 1) 0)) (= x2749 (x3558 x4286)) (= x4286 (x709 (x1970 x103) (x2553 1) 0)) (= x2943 (< x4491 x2749)) (= x4861 (x371 1461501637330902918203684832716283019655932542975 x3979))) (not x1486)) (and (=> x2943 x4251) (=> (and (not x2943) (and (= x1416 (x3164 (+ x3672 x2749))) (= (> x2749 x1416) x1285))) (and (=> (and (not x1285) (and (= x3051 (x709 (x1970 x705) x1417 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x382) (= (x709 (x1970 x103) (x2553 1) 0) x4476) (= x382 (x4612 x3051)) (= x3868 (< x382 x3672)) (= x2396 (x371 1461501637330902918203684832716283019655932542975 x3979)) (= (x709 (x1970 x2396) (x2553 2) 0) x1417) (>= x382 0))) (and (=> x3868 x4251) (=> (and (= (< x382 x3672) x1877) (not x3868)) (and (=> (and (and (= x473 (x371 1461501637330902918203684832716283019655932542975 x3979)) (= x1412 (x709 (x1970 x473) (x2553 2) 0)) (= (x1595 (- x382 x3672)) x4801) (= x33 32) (= x3757 1) (= (x709 (x1970 x705) x1412 0) x1805)) (not x1877)) x2137) (=> x1877 x4251))))) (=> x1285 x4251))))))) (=> x4095 x4251))) (=> (not x1688) x4251)))))))))))
(assert (=> (>= 10000 x1435) (= (x2553 x1435) (x1970 x1435))))
(assert (x3087 x3353))
(assert (x136 x3728))
(assert (x3087 x3844))
(assert (x3087 x3390))
(assert (= (and x2527 x4661) x347))
(assert (= (and x627 x3023) x2631))
(assert (x136 x4536))
(assert (= (x1315 (x1970 x4393)) x4393))
(assert (= (and x359 (not x4583)) x895))
(assert (= x1836 (=> (and (or (and (= (x350 x1487 2) x3388) x531) (and (not x531) (= x2050 (x709 (x1970 x3804) x1487 0)))) (= x531 (= 0 x3804))) x4339)))
(assert (x3087 x1))
(assert (x3087 x3814))
(assert (= (and x3040 x3592) x3438))
(assert (= x1954 (and x2785 x4655)))
(assert (x3087 x4151))
(assert (x3087 x2810))
(assert (x3087 x1761))
(assert (= x4313 (or x4127 x3184)))
(assert (x3087 x467))
(assert (x3087 x1262))
(assert (= (and x2270 x4534) x4720))
(assert (= (and x2839 x3114) x475))
(assert (= x4506 (and x4264 x1593)))
(assert (= x3248 (x1315 (x1970 x3248))))
(assert (x3087 x3124))
(assert (x3087 x54))
(assert (= x1507 (and x2425 x2684)))
(assert (x3087 x4332))
(assert (x3087 x4840))
(assert (= 599290589 (x1315 (x2553 599290589))))
(assert (x3314 x620))
(assert (= (+ 1 (x1315 x3310)) (x1315 (x350 x3310 1))))
(assert (=> (<= x1757 10000) (= (x1970 x1757) (x2553 x1757))))
(assert (=> (>= 10000 x3686) (= (x2553 x3686) (x1970 x3686))))
(assert (x3087 x2376))
(assert (= x1585 (=> (= x2333 x2577) x4242)))
(assert (= (x1315 (x1970 x1250)) x1250))
(assert (= (x1315 (x1970 x226)) x226))
(assert (= (and x1147 x3185) x4835))
(assert (= (or x3182 x669) x4671))
(assert (= (and x3462 (not x1166)) x3881))
(assert (x136 x2462))
(assert (x3087 x3208))
(assert (= (and x1143 x4085) x3859))
(assert (x3087 x2578))
(assert (x3087 x3123))
(assert (= x3443 (and x3601 x3877)))
(assert (= (x1315 (x1970 x103)) x103))
(assert (x3087 x4690))
(assert (= (x1315 (x1970 x1502)) x1502))
(assert (x3087 x2581))
(assert (x3087 x730))
(assert (x136 x469))
(assert (= (and (not x3556) x416) x3677))
(assert (= (and (not x3073) x3449) x1008))
(assert (= x417 (and (not x4011) x1450)))
(assert (= (or x2443 x2893 x1508 x4365) x2792))
(assert (= x3684 (and x3313 (not x1877))))
(assert (x3087 x961))
(assert (= x3023 (or x2467 x2780)))
(assert (x136 x3321))
(assert (= x130 (or (and x1577 x1698) (and (not x3602) x1401) (and x109 (not x1284)) x651 (and x2206 x4425) x2877)))
(assert (x3087 x1792))
(assert (x3087 x3925))
(assert (x3087 x2872))
(assert (=> (<= x2059 10000) (= (x2553 x2059) (x1970 x2059))))
(assert (x3087 x1813))
(assert (= x438 (and x486 (not x997))))
(assert (x3087 x4667))
(assert (=> (>= 10000 x4345) (= (x2553 x4345) (x1970 x4345))))
(assert (x4604 x950 x4370))
(assert (x3087 x2092))
(assert (x3087 x1825))
(assert (= x3511 (=> (and (= x4198 x4517) (= 0 x2962) (= x860 x2674)) x1751)))
(assert (= (=> (and (= x500 x2509) (= x2656 x3337)) x2234) x16))
(assert (= (and x2393 x2326) x3061))
(assert (=> (<= x4768 10000) (= (x2553 x4768) (x1970 x4768))))
(assert (= x1742 (x1315 (x1970 x1742))))
(assert (= x2462 (x1315 (x1970 x2462))))
(assert (=> (<= x1164 10000) (= (x1970 x1164) (x2553 x1164))))
(assert (=> (>= 10000 x71) (= (x2553 x71) (x1970 x71))))
(assert (= (or x2276 x4136) x4660))
(assert (x3087 x1025))
(assert (x3087 x369))
(assert (x3087 x2444))
(assert (x3087 x2435))
(assert (x3087 x4663))
(assert (x3087 x1631))
(assert (x3087 x38))
(assert (= x3609 (and x432 (not x4063))))
(assert (x3087 x4147))
(assert (x3087 x4685))
(assert (x3087 x3851))
(assert (x3087 x4262))
(assert (x3087 x3245))
(assert (= (and (=> (and x3880 (and (= x1446 x334) (= x1250 x1727) (= x1932 x1637))) x1645) (=> (and (not x3880) (and (= 1 x3594) (= x4455 x1727))) x1684)) x1992))
(assert (x3087 x3536))
(assert (x3087 x664))
(assert (= x1002 (and x3414 x1654)))
(assert (x3087 x2404))
(assert (x3087 x4805))
(assert (= x4196 (and x4140 x1958)))
(assert (= x2804 (or x4046 x3250 x4462 x1492)))
(assert (= (and x3714 x4827) x618))
(assert (x3087 x3590))
(assert (= x55 (=> (and (= x1242 x1838) (= 0 x983)) x154)))
(assert (x136 x71))
(assert (x3087 x1098))
(assert (x3087 x2396))
(assert (x3087 x4555))
(assert (= (or x683 x1914) x3444))
(assert (x3087 x1150))
(assert (x3087 x4854))
(assert (= x4743 (and x2828 x3441)))
(assert (= (and x1496 x2355) x1981))
(assert (= (and (not x445) x704) x2529))
(assert (x136 x4042))
(assert (= (and x4224 (not x4078)) x2822))
(assert (=> (<= x4118 10000) (= (x2553 x4118) (x1970 x4118))))
(assert (= (or x2454 x1672 x3401 x1515 x859 x2066 x4399 x3951 x2934) x1737))
(assert (x3087 x490))
(assert (x3087 x3571))
(assert (x3087 x1312))
(assert (x487 x2098))
(assert (= (and (not x4813) x989) x968))
(assert (= (and (not x2212) x2492) x2540))
(assert (= (and x4901 x2542) x74))
(assert (x3087 x3173))
(assert (= (and (not x1519) x566) x2997))
(assert (x3087 x1124))
(assert (x3087 x1980))
(assert (= x110 (and x1086 x4790)))
(assert (= x1818 (and x4778 (not x2833))))
(assert (x3087 x2068))
(assert (=> (<= x3898 10000) (= (x2553 x3898) (x1970 x3898))))
(assert (x3087 x4100))
(assert (x3087 x4305))
(assert (=> (>= 10000 x4234) (= (x2553 x4234) (x1970 x4234))))
(assert (x3087 x4177))
(assert (=> (<= x857 10000) (= (x1970 x857) (x2553 x857))))
(assert (x3087 x3324))
(assert (= x2831 (and x445 x704)))
(assert (= (+ 3 (x1315 x4421)) (x1315 (x350 x4421 3))))
(assert (x3087 x4024))
(assert (x3087 x493))
(assert (=> (>= 10000 x705) (= (x2553 x705) (x1970 x705))))
(assert (= x2511 (and x888 x2970)))
(assert (= (and (not x3813) x4373) x2757))
(assert (x3087 x3332))
(assert (= (and x3647 x970) x3070))
(assert (= x3875 (or x2742 x3920)))
(assert (= x4771 (and x475 (not x2346))))
(assert (x3087 x2656))
(assert (x3087 x3717))
(assert (= (x1315 (x1970 x1247)) x1247))
(assert (x3087 x4558))
(assert (x3087 x2249))
(assert (x3087 x4551))
(assert (x3087 x3015))
(assert (x3087 x1599))
(assert (= 398450620 (x1315 (x2553 398450620))))
(assert (= x972 (and x2475 x2573)))
(assert (x3087 x1462))
(assert (= x1504 (and x1086 (not x4790))))
(assert (= (and x4673 (not x3868)) x3313))
(assert (x3087 x3947))
(assert (x3087 x4531))
(assert (x3087 x710))
(assert (= (and x2926 x1168) x3223))
(assert (x3087 x1693))
(assert (= x4675 (x1315 (x1970 x4675))))
(assert (= (and x2896 (not x4030)) x1072))
(assert (x3087 x3355))
(assert (= (and x2518 x2302) x1090))
(assert (= (or x4142 x2756) x613))
(assert (x3087 x4115))
(assert (=> (<= x4208 10000) (= (x1970 x4208) (x2553 x4208))))
(assert (= x1987 (=> (and (= x3527 x2000) (= x3451 x4631) (= x274 x3306) (= x2744 x1714) (not (= x4253 0))) x2568)))
(assert (x136 x3688))
(assert (=> (<= x2009 10000) (= (x1970 x2009) (x2553 x2009))))
(assert (x3087 x1258))
(assert (= (=> (and (not (= 0 x3272)) (not (or (and (< x4898 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4898) true)) (> x4898 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2939 0) (= (x151 x2958) x2939)) x207) x3660))
(assert (= (=> (and (= x3327 0) (= x2674 x3105) (= x2975 x727)) x2235) x4890))
(assert (x3087 x146))
(assert (= x665 (and (not x3964) x3967)))
(assert (x3087 x2594))
(assert (x3087 x3659))
(assert (x3087 x4320))
(assert (= (and x4516 x2787) x3764))
(assert (= (and x395 x4866) x551))
(assert (= (and x1457 x4400) x1106))
(assert (x3087 x2664))
(assert (x3087 x2862))
(assert (x3087 x4009))
(assert (x3087 x1427))
(assert (x3087 x1575))
(assert (x3087 x2111))
(assert (=> (<= x420 10000) (= (x1970 x420) (x2553 x420))))
(assert (x3087 x3919))
(assert (= (or x2772 x3021) x4299))
(assert (x136 x517))
(assert (= (and (not x242) x1458) x900))
(assert (= x939 (and x3538 (not x4343))))
(assert (x3087 x3041))
(assert (= x4297 (and x938 x1293)))
(assert (= x4542 (and (not x4055) x227)))
(assert (= (and x4678 x2268) x954))
(assert (= x2854 (or x202 x908)))
(assert (= (x2553 2236579515) (x1970 2236579515)))
(assert (x3087 x2055))
(assert (= x2062 (and x2334 x3968)))
(assert (x3087 x4489))
(assert (= (or x2384 x4129) x2010))
(assert (x3087 x1128))
(assert (x3087 x3042))
(assert (x3087 x2065))
(assert (x3087 x1136))
(assert (x3087 x3032))
(assert (x3087 x1170))
(assert (x3087 x4691))
(assert (x3087 x1461))
(assert (= (and x4226 x2525) x2161))
(assert (= (and x1249 (not x1651)) x634))
(assert (x136 x1061))
(assert (= (and (not x776) x3544) x264))
(assert (x3087 x1885))
(assert (= (and x3487 x968) x2109))
(assert (x3087 x3272))
(assert (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x1315 (x2553 72570022874062638528011751457397263716769196454539065078543251854057308946432))))
(assert (= x2780 (and x4891 x3421)))
(assert (=> (>= 10000 x387) (= (x2553 x387) (x1970 x387))))
(assert (x3087 x2007))
(assert (x3087 x2750))
(assert (x3087 x3716))
(assert (x3087 x4729))
(assert (= (and x4349 x2822) x4168))
(assert (x3087 x370))
(assert (x3087 x2102))
(assert (x3087 x2939))
(assert (x3087 x2837))
(assert (x3087 x2826))
(assert (= x3163 (=> (and (= x4659 x171) (= x1848 x4099)) x1469)))
(assert (x3087 x4159))
(assert (= x2311 (and x936 (not x4868))))
(assert (= x3047 (and x1783 x1394)))
(assert (x3087 x138))
(assert (= (and (not x409) x3333) x2525))
(assert (= x303 (and (not x1648) x3261)))
(assert (x3087 x748))
(assert (x136 x725))
(assert (= (x1315 (x2553 2678788150)) 2678788150))
(assert (= x1514 (=> (and (= x561 x880) (= x4416 x1511)) x170)))
(assert (= (x1315 (x350 x563 1)) (+ (x1315 x563) 1)))
(assert (x3087 x575))
(assert (x3087 x3044))
(assert (x3087 x3930))
(assert (x3087 x977))
(assert (= (and x2755 x2362) x2518))
(assert (x3087 x137))
(assert (x3087 x2922))
(assert (x136 x2643))
(assert (= (x1970 4294967296) (x2553 4294967296)))
(assert (x3087 x1218))
(assert (= (and x994 (not x4643)) x1916))
(assert (x3087 x3520))
(assert (x3087 x3583))
(assert (= x1705 (and x3022 x1772)))
(assert (x3087 x2083))
(assert (x3087 x636))
(assert (x3087 x3025))
(assert (= x722 (and x1402 x3190)))
(assert (x136 x1502))
(assert (= (=> (and (= x1749 0) (= x379 x82)) x2122) x4838))
(assert (= x1231 (and x2133 x4125)))
(assert (x3087 x778))
(assert (= (and x4523 x3363) x2210))
(assert (= (and x1893 x3993) x1719))
(assert (= (and (not x4760) x552) x1011))
(assert (=> (<= x2462 10000) (= (x1970 x2462) (x2553 x2462))))
(assert (= (x1315 (x1970 x1119)) x1119))
(assert (x136 x498))
(assert (x3087 x185))
(assert (= x2675 (and x1966 x847)))
(assert (x3087 x4493))
(assert (= x2574 (or x1368 x412)))
(assert (x3087 x3938))
(assert (x3087 x3267))
(assert (=> (>= 10000 x1707) (= (x1970 x1707) (x2553 x1707))))
(assert (x3087 x1010))
(assert (= x1458 (and x2297 x1008)))
(assert (x3087 x2256))
(assert (x3087 x2455))
(assert (x3087 x3231))
(assert (x136 x637))
(assert (x136 x4585))
(assert (= x2850 (and (not x4138) x3579)))
(assert (= (x1315 (x1970 x2063)) x2063))
(assert (x3087 x2718))
(assert (= x2228 (and (not x2741) x995)))
(assert (= x1961 (x1315 (x1970 x1961))))
(assert (x3087 x1056))
(assert (= (=> (and (= x880 x2301) (= x4416 x3016)) x170) x415))
(assert (= (x1315 (x350 x215 1)) (+ 1 (x1315 x215))))
(assert (= x3274 (and (not x4160) x4025)))
(assert (x3087 x3757))
(assert (x3087 x4879))
(assert (= x2983 (and (not x1923) x564)))
(assert (= (and x4276 x1370) x1979))
(assert (= x3913 (x1315 (x1970 x3913))))
(assert (=> (>= 10000 x1409) (= (x1970 x1409) (x2553 x1409))))
(assert (x3087 x2944))
(assert (= (and x4373 x3813) x3432))
(assert (x3087 x3731))
(assert (x3087 x1438))
(assert (x3087 x431))
(assert (= (x1315 (x1970 x1100)) x1100))
(assert (x3087 x2237))
(assert (x3087 x865))
(assert (= x3802 (and x1559 (not x3347))))
(assert (= (and x1583 x697) x3380))
(assert (= (x1315 (x350 x2090 1)) (+ 1 (x1315 x2090))))
(assert (= x4832 (x1315 (x1970 x4832))))
(assert (x3087 x2879))
(assert (x3087 x3451))
(assert (= x3901 (and (not x3805) x4708)))
(assert (= x3204 (x1315 (x1970 x3204))))
(assert (x3087 x3725))
(assert (= x4624 (=> (and (= x3796 x3812) (= 0 x2053)) x4441)))
(assert (x3087 x3219))
(assert (x3087 x3812))
(assert (x3087 x1890))
(assert (x3087 x3426))
(assert (= x1601 (x1315 (x1970 x1601))))
(assert (=> (>= 10000 x858) (= (x1970 x858) (x2553 x858))))
(assert (x136 x2068))
(assert (x3087 x1213))
(assert (= x2874 (and x1616 x4646)))
(assert (x3087 x2728))
(assert (= x1222 (=> (and (= (= 0 x4745) x4588) (or (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4412 x1733)) (= x4652 (x3164 (+ x4412 x1733))) (= x4253 x4745) (= x4412 (ite (= x4745 0) x3461 0)) (= (- x3123 x4412) x3872) (= (x2429 (x1970 x3919)) x3123) (= (x3937 (x1970 x705)) x1733)) x4588) (and (= x4745 x4253) (not x4588)))) x1987)))
(assert (x3087 x4017))
(assert (= x1921 (or x2052 x1814)))
(assert (= x3017 (and (not x775) x4859)))
(assert (= x2317 (and x2392 x3356)))
(assert (= x3074 (or x1770 x1407)))
(assert (x3087 x2015))
(assert (= (=> (and (or (and (not x4395) (and (= x1185 x4395) (= x421 x1627))) (and x4395 (and (= (= 0 x1318) x2153) (= x1318 (x4831 x3413)) (< x1318 1461501637330902918203684832716283019655932542976) (= x421 x1318) (<= x1318 1461501637330902918203684832716283019655932542975) (= x1185 (not x2153)) (<= 0 x1318) (= x3413 (x350 x1649 1)) (= x1649 (x709 (x1970 x3324) (x2553 157) 0)) (= x3324 (x371 1461501637330902918203684832716283019655932542975 x1305))))) (and (= x4395 (> x3562 x3082)) (= (x3164 (+ x373 32)) x3835))) x2544) x3563))
(assert (= (and x214 x2920) x41))
(assert (=> (<= x271 10000) (= (x1970 x271) (x2553 x271))))
(assert (= x444 (or x3254 x2105 x3038 x4630 x2858 x2947)))
(assert (x3087 x2509))
(assert (x3087 x4797))
(assert (= (x1970 547091486) (x2553 547091486)))
(assert (x3087 x3129))
(assert (x3087 x3320))
(assert (x3087 x677))
(assert (x3087 x1061))
(assert (x3087 x3174))
(assert (x3087 x4566))
(assert (x3087 x1175))
(assert (= (and (not x3941) x282) x4239))
(assert (x3087 x1287))
(assert (= x683 (and x1951 (not x3336))))
(assert (x3087 x4766))
(assert (= x1888 (and x316 (not x11))))
(assert (x3087 x2773))
(assert (= x3323 (or x1090 x1265 x331 x4460 x3758 x297)))
(assert (x3087 x4002))
(assert (= x1301 (and x1456 (not x3741))))
(assert (x3087 x411))
(assert (= x1035 (or x4047 x2788)))
(assert (x3087 x1823))
(assert (= x2447 (and x4778 x2833)))
(assert (= x3928 (or x4319 x436)))
(assert (x3087 x1590))
(assert (x3087 x2859))
(assert (x3087 x720))
(assert (= x434 (and x649 x3404)))
(assert (= (and (=> (and (and (= x1341 x420) (= x1834 1)) (not x2060)) x3810) (=> x2060 x2929)) x2464))
(assert (x3087 x4393))
(assert (x3087 x3296))
(assert (x3087 x905))
(assert (= x4117 (and (not x930) x1604)))
(assert (= (and (not x1455) x83) x1571))
(assert (x3087 x323))
(assert (= (and (not x2133) x4125) x1747))
(assert (x3087 x112))
(assert (= x2895 (and x3643 x2019)))
(assert (= (x1315 (x350 x2006 1)) (+ 1 (x1315 x2006))))
(assert (x136 x3560))
(assert (x136 x4509))
(assert (x3087 x1754))
(assert (= x1394 (and x995 x2741)))
(assert (x3087 x3273))
(assert (= (and x1413 x4792) x3614))
(assert (x3087 x2448))
(assert (x3087 x236))
(assert (= (+ 2 (x1315 x334)) (x1315 (x350 x334 2))))
(assert (x3087 x3825))
(assert (x3087 x4208))
(assert (x3087 x413))
(assert (x3087 x407))
(assert (= x320 (and x1089 x3613)))
(assert (= x2170 (and x923 x695)))
(assert (= x3936 (and x3052 x3935)))
(assert (x3087 x3623))
(assert (=> (>= 10000 x1627) (= (x1970 x1627) (x2553 x1627))))
(assert (x3087 x4727))
(assert (=> (>= 10000 x2643) (= (x2553 x2643) (x1970 x2643))))
(assert (x3087 x1110))
(assert (x136 x3193))
(assert (x3087 x4219))
(assert (x3087 x1027))
(assert (x3087 x3793))
(assert (x3087 x3055))
(assert (x3087 x447))
(assert (x3087 x4579))
(assert (= x71 (x1315 (x1970 x71))))
(assert (= x4578 (=> (= x3422 (> x1481 0)) (and (=> (and x3422 (and (and (= (x3915 x2592) x710) (<= 0 x305) (>= x710 0) (<= 0 x4118) (= (x709 (x1970 x1627) x1746 0) x2456) (not (= 0 x1627)) (<= x710 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x663 (x350 x1746 1)) (= x710 0) (>= 1461501637330902918203684832716283019655932542975 x4118) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1461501637330902918203684832716283019655932542976 x4118) (= x2592 (x350 x2456 2)) (= (ite (> x305 0) (not (= x4118 0)) (< 0 x305)) x4317) (= x4118 (x72 x663))) (or (and x4317 (and (<= 0 x824) (= x824 (x3915 x2909)) (= (x709 (x1970 x4118) x1746 0) x3109) (<= x824 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (not x1826) x692) (= x1826 (< x824 x1481)) (= x2909 (x350 x3109 2)))) (and (= x692 x4317) (not x4317))))) x841) (=> (and (not x3422) (= x3947 x2577)) x4242)))))
(assert (x3087 x3479))
(assert (x3087 x69))
(assert (= (and x4496 (not x4556)) x3149))
(assert (= 405663989 (x1315 (x2553 405663989))))
(assert (= x4549 (and x2551 (not x2382))))
(assert (x3087 x3995))
(assert (= x3362 (=> (and (= x1080 x2404) (= x2950 x2607)) x2882)))
(assert (x3087 x4780))
(assert (= x113 (=> (and (= x4481 0) (= x1242 x3849)) x910)))
(assert (=> (<= x1462 10000) (= (x2553 x1462) (x1970 x1462))))
(assert (x3087 x949))
(assert (x3087 x1132))
(assert (=> (>= 10000 x1961) (= (x2553 x1961) (x1970 x1961))))
(assert (= (=> (and (= x1512 0) (= x3745 x3568)) x4765) x2629))
(assert (= x1009 (and x2651 x4785)))
(assert (x3087 x7))
(assert (= x58 (=> (and (= x4204 0) (= x864 x236)) x1468)))
(assert (x3087 x3187))
(assert (= (x1315 (x1970 x770)) x770))
(assert (= (x1970 2134560854) (x2553 2134560854)))
(assert (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x1315 (x2553 77053863734975077137548456399560439977311721439096602559221323163398253314048))))
(assert (= (=> (and (= x1851 x2042) (= 0 x1598)) x68) x2482))
(assert (x3087 x3695))
(assert (x3087 x4062))
(assert (x3087 x231))
(assert (= x2527 (and x4576 (not x3118))))
(assert (= (and x1772 (not x3022)) x124))
(assert (= (and x4798 x2641) x1294))
(assert (=> (>= 10000 x4002) (= (x2553 x4002) (x1970 x4002))))
(assert (= (=> (and (= x516 x3337) (= x431 x2509)) x2234) x1522))
(assert (x3087 x2554))
(assert (= (and x4779 (not x1815)) x4093))
(assert (x3087 x4822))
(assert (x3087 x3433))
(assert (= (x1315 (x350 x687 1)) (+ 1 (x1315 x687))))
(assert (x3087 x4156))
(assert (x3087 x3131))
(assert (= (x2553 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x1970 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (= x697 (or x855 x882 x790 x4466)))
(assert (=> (>= 10000 x555) (= (x2553 x555) (x1970 x555))))
(assert (= x448 (and x2746 (not x3373))))
(assert (x3087 x4412))
(assert (x3087 x1707))
(assert (x3087 x4533))
(assert (x136 x4675))
(assert (= (or x4734 x2405) x671))
(assert (=> (<= x1442 10000) (= (x2553 x1442) (x1970 x1442))))
(assert (x3087 x2875))
(assert (= (and x2051 x688) x1620))
(assert (= x2059 (x1315 (x1970 x2059))))
(assert (= x3350 (x1315 (x1970 x3350))))
(assert (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x1315 (x2553 4238056678808933066457772256406219440718756300954938350892797929791311314944))))
(assert (= x351 (x1315 (x1970 x351))))
(assert (x3087 x4440))
(assert (= x2399 (or x65 x3940)))
(assert (= (and x3068 x886) x1005))
(assert (x3087 x196))
(assert (=> (>= 10000 x1119) (= (x2553 x1119) (x1970 x1119))))
(assert (= (and x1768 x823) x3384))
(assert (= (and (not x4723) x4644) x1725))
(assert (x3087 x3315))
(assert (= (and x1832 x3950) x1698))
(assert (x3087 x3417))
(assert (x3087 x1109))
(assert (= x2584 (and x3601 (not x3877))))
(assert (= x4712 (=> (and (= x2298 x2586) (= 0 x1830)) x1270)))
(assert (x3087 x1668))
(assert (= x3198 (and x3630 x1682)))
(assert (x3087 x4413))
(assert (= (and x4395 x384) x383))
(assert (= (x1315 (x350 x2669 1)) (+ (x1315 x2669) 1)))
(assert (x3087 x1744))
(assert (x3087 x4035))
(assert (= (x1315 (x1970 x4489)) x4489))
(assert (x3087 x1318))
(assert (x3087 x3707))
(assert (x3087 x2732))
(assert (x3087 x2907))
(assert (= x2752 (x1315 (x1970 x2752))))
(assert (= (x1315 (x2553 1000000000000000000)) 1000000000000000000))
(assert (x3087 x3753))
(assert (x3087 x1210))
(assert (x3087 x1835))
(assert (= (=> (and (= x171 x963) (= x1848 x3476)) x1469) x1802))
(assert (= x651 (and x845 x4052)))
(assert (= x378 (or x1857 (and x1235 x849) (and x847 (not x1966)) x4597 (and x2027 x3541) (and x2675 (not x321)) (and x150 x942) (and x904 x22) x4185)))
(assert (x3087 x3902))
(assert (x3087 x4235))
(assert (x136 x2820))
(assert (= (=> (= x4891 (= x4116 x4024)) (and (=> x4891 x4230) (=> (and (= (< 0 x4024) x4036) (not x4891)) (and (=> (not x4036) x4293) (=> (and x4036 (and (or (and x3232 (= x81 (x350 x334 1))) (and (not x3232) (and (= x3944 (x350 x2006 1)) (= x2006 (x709 (x1970 x1786) x334 0))))) (and (= x1878 (x1171 x300)) (<= 0 x1786) (>= x2959 0) (<= x1786 1461501637330902918203684832716283019655932542975) (= x2959 (x4872 x4186)) (= (x350 x4557 1) x4186) (< x2959 1461501637330902918203684832716283019655932542976) (> 1461501637330902918203684832716283019655932542976 x1786) (not (= x1878 0)) (<= x1878 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2959 1461501637330902918203684832716283019655932542975) (= (x4302 x4557) x1786) (>= x1878 0) (= (x350 x4186 1) x300) (= x4557 (x709 (x1970 x421) x334 0)) (= (= 0 x1786) x3232)))) x2697))))) x2809))
(assert (= (x1315 (x1970 x3560)) x3560))
(assert (= (and (not x465) x2895) x4749))
(assert (= (x1970 1865448899) (x2553 1865448899)))
(assert (x3087 x3605))
(assert (= x4805 (x1315 (x1970 x4805))))
(assert (x3087 x4562))
(assert (= x774 (and x237 x1188)))
(assert (x3087 x3152))
(assert (= (x1315 (x2553 4294967296)) 4294967296))
(assert (x136 x4690))
(assert (= x2397 (and x190 x4731)))
(assert (=> (>= 10000 x3560) (= (x1970 x3560) (x2553 x3560))))
(assert (x136 x4826))
(assert (x136 x4002))
(assert (=> (>= 10000 x226) (= (x1970 x226) (x2553 x226))))
(assert (x3087 x2189))
(assert (x3087 x1343))
(assert (= x843 (and x2910 x747)))
(assert (= x3751 (=> (and (= x3527 x1656) (= (x3756 x2000) x1912) (= x3451 x51) (not (= 0 x2097)) (= x274 x511) (= 0 x1912) (= (x3164 (+ x3633 x2000)) x1656) (not (or (and (> 32 x3902) (= (<= x3902 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x3902 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2681) x3633) (= x2681 (x3164 (+ x3902 31))) (= x2477 x1714)) x2568)))
(assert (x3087 x4139))
(assert (x3087 x2489))
(assert (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x1315 (x2553 50292402827334880472107169365697159231523039388532301717704428044325102813184))))
(assert (x3087 x1642))
(assert (x3087 x2502))
(assert (x3087 x1788))
(assert (= x3935 (or x1146 x2611)))
(assert (x3087 x529))
(assert (= (and x338 (not x2400)) x4025))
(assert (= (x2553 1857877511) (x1970 1857877511)))
(assert (= (x1315 (x350 x401 1)) (+ (x1315 x401) 1)))
(assert (= (and x1386 (not x3412)) x4545))
(assert (= x2814 (and x3574 (not x4679))))
(assert (= (and x3588 x3006) x3892))
(assert (x3087 x4418))
(assert (x3087 x1697))
(assert (= (=> (and (= x4020 x947) (= x1980 0)) x3405) x1295))
(assert (x3087 x3807))
(assert (x3087 x2916))
(assert (= x2858 (and x1144 x167)))
(assert (= x4345 (x1315 (x1970 x4345))))
(assert (= (or (and x3681 (not x4880)) x1867) x994))
(assert (x3087 x1592))
(assert (x3087 x3188))
(assert (x3087 x837))
(assert (x3087 x257))
(assert (x3087 x885))
(assert (= (and x3882 x296) x3488))
(assert (= x777 (and x2008 x2998)))
(assert (= (=> (= x2577 x373) x2305) x4242))
(assert (x3087 x4260))
(assert (x3087 x4076))
(assert (= x669 (and x3840 (not x756))))
(assert (x3087 x484))
(assert (x3087 x1912))
(assert (x136 x1119))
(assert (x3087 x1653))
(assert (= x4173 (or x21 x2439 x1310)))
(assert (= x3453 (and x2100 (not x1568))))
(assert (x136 x3898))
(assert (x3087 x3437))
(assert (x3087 x608))
(assert (= (and x2776 (not x4874)) x2402))
(assert (x3087 x3785))
(assert (x136 x1041))
(assert (= x3723 (and x4257 x654)))
(assert (x3087 x854))
(assert (x3087 x1145))
(assert (= (x1315 (x1970 x1041)) x1041))
(assert (= x4322 (and x1796 (not x375))))
(assert (= (and x4193 (not x3608)) x3190))
(assert (x3087 x168))
(assert (x3087 x1004))
(assert (x3087 x3020))
(assert (x3087 x2821))
(assert (= x2999 (and x1620 (not x3644))))
(assert (x3087 x3212))
(assert (= (or x1472 x4532) x1776))
(assert (x3087 x4012))
(assert (= x3038 (and x2926 (not x1168))))
(assert (= x2506 (and x2573 (not x2475))))
(assert (= (and x2971 x1060) x2205))
(assert (x3087 x1267))
(assert (= x4323 (and x2787 (not x4516))))
(assert (x3087 x2453))
(assert (= (x1315 (x1970 x4012)) x4012))
(assert (= x2387 (=> (and (= x3652 (x350 x2928 1)) (= (x709 (x1970 x1627) x1746 0) x907) (= x2928 (x350 x907 1)) (= x3947 x3377)) x4578)))
(assert (x3087 x349))
(assert (= (=> (and (= x3957 x1080) (= x2810 x2950)) x2882) x284))
(assert (= (and x1410 (not x2793)) x3063))
(assert (x3087 x286))
(assert (= (and (not x4006) x4472) x3653))
(assert (x3087 x1608))
(assert (= (or x3802 x1949 x4754 x2369 x2317 x2705) x336))
(assert (= x1499 (not (and (> 1461501637330902918203684832716283019655932542976 x4035) (>= x4035 0) (= x4035 (x4621 x3403)) (= (x350 x3140 1) x3403) (>= 1461501637330902918203684832716283019655932542975 x4035) (= x3140 (x709 (x1970 x3148) x2090 0))))))
(assert (= (and x1982 x788) x616))
(assert (x136 x519))
(assert (x3087 x2345))
(assert (x3087 x1074))
(assert (x3087 x4517))
(assert (= x3920 (or x1944 x532 x1569 x2324 x2589 x2171 x2402 x4561 x3147)))
(assert (= 1865448899 (x1315 (x2553 1865448899))))
(assert (x3087 x351))
(assert (= (and x2347 x95) x3234))
(assert (= (and x4565 x328) x976))
(assert (x3087 x781))
(assert (= x1844 (and x2792 x3834)))
(assert (x3087 x4428))
(assert (= (x1970 242558722) (x2553 242558722)))
(assert (= (x1315 (x350 x4845 1)) (+ (x1315 x4845) 1)))
(assert (x3087 x1100))
(assert (= x4332 (x1315 (x1970 x4332))))
(assert (= x2310 (x1315 (x1970 x2310))))
(assert (= 1461501637330902918203684832716283019655932542975 (x1315 (x2553 1461501637330902918203684832716283019655932542975))))
(assert (x3087 x1674))
(assert (x3087 x253))
(assert (x3087 x517))
(assert (x3087 x4804))
(assert (= x549 (and x4117 (not x1984))))
(assert (= x852 (and x1568 x2100)))
(assert (x3087 x2064))
(assert (x3087 x3599))
(assert (= (and x4672 x4771) x2666))
(assert (x136 x4877))
(assert (= x507 (=> (and (= x1374 (x709 (x1970 x2736) x4088 0)) (= x4485 (x350 x1509 1)) (= x1509 (x350 x1374 1)) (= x2736 (x371 1461501637330902918203684832716283019655932542975 x620))) x937)))
(assert (x487 x2214))
(assert (= (and x3189 x1778) x57))
(assert (= x390 (or x3229 x1034)))
(assert (= x2446 (and (not x3081) x543)))
(assert (x3087 x172))
(assert (x3087 x4696))
(assert (=> (>= 10000 x2519) (= (x2553 x2519) (x1970 x2519))))
(assert (= (or x3423 x3598 x777 x2339) x3227))
(assert (= x2758 (and x2078 x3062)))
(assert (x3087 x3248))
(assert (x3087 x2595))
(assert (= (and x2270 (not x4534)) x757))
(assert (= (and x2208 x2812) x2425))
(assert (x3087 x4246))
(assert (= x3049 (and (=> (and (not x2900) (and (= x2015 x2077) (= x3762 0))) x4217) (=> (and x2900 (and (or (and (not x3218) (and (< (* 1000000000000000000 x3537) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 0 x951) (<= 0 x4337) (= (div x197 1000000000000000000) x2837) (= x197 (div x1533 x389)) (= (mod (* x4773 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3537) (= x407 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4773))) (= x4325 x294) (not (> 0 x407)) (<= x4337 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x389 0) (= x4325 (+ x2001 x3191)) (= (ite x4283 1 0) x2644) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2837 x4337)) (= x2837 x2001) (= (* x3537 1000000000000000000) x1533) (= x4283 (> x4773 115792089237316195423570985008687907853269984665640564039457)) (= x2644 0) (= (x1261 x544) x4337) (= x4153 x3082) (= x3191 x4337) (= x4153 x4773))) (and (and (= x1885 (x1595 (- x4110 x4543))) (= (mod (* 1000000000000000000 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2734) (= (x1261 x544) x681) (= (+ x4071 x2281) x2520) (not (> x4543 x4110)) (= x173 (* x441 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x2734)) (= (div x4605 1000000000000000000) x2985) (<= 0 x4110) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2985 x681)) (= x3734 0) (= x441 (mod (* 1000000000000000000 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x4562) (> x389 0) (= x3562 x3082) (= x294 x2520) (= x4562 (ite x3490 1 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4110) (>= x681 0) (= (* x2734 1000000000000000000) x2104) (= x951 x1885) (< 0 x2699) (= x2985 x4071) (= x4605 (div x2104 x389)) (= x4110 (x1843 x3491)) (= (< 115792089237316195423570985008687907853269984665640564039457 x604) x4241) (< (* x441 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4543 (div x1025 1000000000000000000)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x681) (= x2281 x681) (= x3734 (ite x4241 1 0)) (= (div x173 x2699) x1025) (= (> x604 115792089237316195423570985008687907853269984665640564039457) x3490)) x3218)) (and (= x4773 (div x1607 1000000000000000000)) (= x2358 (x709 (x1970 x484) (x2553 159) 0)) (= x544 (x709 (x1970 x1627) x2358 0)) (= x3491 (x350 x544 1)) (= (* x2626 x2699) x1607) (= x3562 x604) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2626) (= (< x604 x4773) x3218) (= x2626 (x1843 x3491)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2699 x2626)) (<= 0 x2626) (not (< x3562 0)) (= x484 (x371 1461501637330902918203684832716283019655932542975 x1305))))) x2288))))
(assert (x3087 x1007))
(assert (x3087 x4236))
(assert (= x3544 (and x3714 (not x4827))))
(assert (= x2694 (=> (and (= x4709 (x4500 x1824)) (= false x4045) (= (x4150 x414) x3161) (= x1306 false) (>= x4709 0) (<= x3161 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1824 (x350 x414 1)) (<= 0 x3161) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4709)) x2190)))
(assert (x3087 x630))
(assert (=> (<= x498 10000) (= (x2553 x498) (x1970 x498))))
(assert (x487 x201))
(assert (x3087 x2218))
(assert (x3087 x3713))
(assert (x136 x781))
(assert (x3087 x1627))
(assert (= (and (not x2548) x4477) x4016))
(assert (= x728 (x1315 (x1970 x728))))
(assert (=> (>= 10000 x2310) (= (x2553 x2310) (x1970 x2310))))
(assert (= x1573 (or x641 x1897)))
(assert (x3087 x2245))
(assert (= x808 (and x2688 x2024)))
(assert (=> (<= x4332 10000) (= (x2553 x4332) (x1970 x4332))))
(assert (x3087 x1729))
(assert (x3087 x100))
(assert (= x355 (or x4863 x4803)))
(assert (x3087 x572))
(assert (= (or x2160 x25) x4371))
(assert (x3087 x3348))
(assert (x3087 x3889))
(assert (x3087 x3992))
(assert (= (=> (and (= (x709 (x1970 x421) x334 0) x9) (= (x350 x9 1) x4651) (= (x350 x4651 1) x2990)) x4293) x1903))
(assert (x3087 x866))
(assert (x3087 x742))
(assert (= x3484 (=> (and (or (and (and (or (and (not x3079) (and (= (x371 1461501637330902918203684832716283019655932542975 x620) x1232) (= (x350 x3784 1) x2871) (<= 0 x1782) (>= 1461501637330902918203684832716283019655932542975 x1782) (= (x1133 x2871) x1782) (= (x371 1461501637330902918203684832716283019655932542975 x620) x1642) (= x2167 (x371 1461501637330902918203684832716283019655932542975 x620)) (< x1782 1461501637330902918203684832716283019655932542976))) (and (and (= (x371 1461501637330902918203684832716283019655932542975 x620) x4124) (= (x371 1461501637330902918203684832716283019655932542975 x620) x1890) (= (x371 1461501637330902918203684832716283019655932542975 x620) x4685)) x3079)) (and (< x3174 1461501637330902918203684832716283019655932542976) (<= x3174 1461501637330902918203684832716283019655932542975) (= (= 0 x3174) x3079) (<= 0 x3174) (= x3174 (x4178 x3784)))) (not x2805)) (and x2805 (and (and (= x3452 (x1595 (- x2752 x3071))) (>= x3071 0) (= (x4178 x3784) x3071) (= x1871 (> x3452 0)) (>= 1461501637330902918203684832716283019655932542975 x3071) (> 1461501637330902918203684832716283019655932542976 x3071)) (or (and (and (= (x371 1461501637330902918203684832716283019655932542975 x620) x4823) (= (x371 1461501637330902918203684832716283019655932542975 x620) x4839) (= (x371 1461501637330902918203684832716283019655932542975 x620) x2510)) (not x1871)) (and x1871 (and (>= x1761 0) (= (x3685 x3409) x1761) (= (x371 1461501637330902918203684832716283019655932542975 x620) x4649) (= (x371 1461501637330902918203684832716283019655932542975 x620) x2701) (= x3409 (x709 (x1970 x2752) x2090 0)) (<= x1761 1461501637330902918203684832716283019655932542975) (= (x371 1461501637330902918203684832716283019655932542975 x620) x1524) (< x1761 1461501637330902918203684832716283019655932542976))))))) (= x2805 (ite (> x305 x2916) (not (= 0 x2752)) (< x2916 x305)))) x928)))
(assert (= (x1315 (x1970 x4528)) x4528))
(assert (= (and x1239 x2878) x4211))
(assert (= (and x1211 x4109) x2951))
(assert (x3087 x3955))
(assert (=> (>= 10000 x4151) (= (x2553 x4151) (x1970 x4151))))
(assert (= x646 (=> (and (= x1065 x3604) (= 0 x4294)) x2841)))
(assert (x3087 x3297))
(assert (x3087 x272))
(assert (= (or x843 x2696 x2062 x1939 x4387 x2228) x2935))
(assert (= x699 (or x4759 x423 x3286 x3384 x2446 x2949)))
(assert (x3087 x3704))
(assert (x3087 x3568))
(assert (= (and x2046 x643) x1569))
(assert (= (=> (and (= x4438 (ite (> x305 x3594) (not (= x4455 0)) (> x305 x3594))) (or (and (not x4438) (and (or x2998 (and (and (= (x350 x3962 1) x2689) (> 1461501637330902918203684832716283019655932542976 x168) (<= x168 1461501637330902918203684832716283019655932542975) (<= 0 x168) (= x168 (x2107 x2689))) (not x2998))) (and (>= 1461501637330902918203684832716283019655932542975 x2625) (> 1461501637330902918203684832716283019655932542976 x2625) (= (= x2625 0) x2998) (= x2625 (x4636 x3962)) (>= x2625 0)))) (and x4438 (and (and (> 1461501637330902918203684832716283019655932542976 x1187) (= x4392 (> x3883 0)) (= (x4636 x3962) x1187) (= (x1595 (- x4455 x1187)) x3883) (<= x1187 1461501637330902918203684832716283019655932542975) (<= 0 x1187)) (or (not x4392) (and x4392 (and (>= 1461501637330902918203684832716283019655932542975 x1210) (= (x2806 x1678) x1210) (= (x709 (x1970 x4455) x334 0) x1678) (>= x1210 0) (< x1210 1461501637330902918203684832716283019655932542976)))))))) x3645) x1684))
(assert (x3087 x1598))
(assert (= x677 (x1315 (x1970 x677))))
(assert (= (x1315 (x1970 x3226)) x3226))
(assert (= (x1315 (x1970 x3994)) x3994))
(assert (= x3021 (and x4893 x2765)))
(assert (= x1801 (or x1669 x1037)))
(assert (=> (>= 10000 x519) (= (x2553 x519) (x1970 x519))))
(assert (=> (<= x1742 10000) (= (x1970 x1742) (x2553 x1742))))
(assert (x3087 x1967))
(assert (= x800 (=> (and (= x3796 x1787) (= 0 x3020)) x302)))
(assert (x3087 x3782))
(assert (= x3265 (or (and x1303 (not x3424)) x3303)))
(assert (x3087 x3845))
(assert (x3087 x53))
(assert (= x143 (or (and (not x1650) x4648) (and x4688 x2487))))
(assert (x3087 x1930))
(assert (x3087 x580))
(assert (x3087 x226))
(assert (x136 x799))
(assert (x3087 x3076))
(assert (= x1734 (and (not x502) x2658)))
(assert (x3087 x980))
(assert (= (and x1503 x4438) x3596))
(assert (x3087 x1798))
(assert (= (and x4343 x3538) x844))
(assert (x136 x1707))
(assert (= x4597 (and x3980 x3132)))
(assert (x3087 x4337))
(assert (x3087 x3048))
(assert (= (or x130 x1806) x1685))
(assert (x3087 x3072))
(assert (x3087 x406))
(assert (=> (>= 10000 x4663) (= (x2553 x4663) (x1970 x4663))))
(assert (= x4877 (x1315 (x1970 x4877))))
(assert (x3087 x4149))
(assert (= x703 (and (not x597) x2850)))
(assert (= x1740 (and x459 (not x607))))
(assert (x3087 x3420))
(assert (x3087 x1237))
(assert (= x3718 (and x1354 x4378)))
(assert (x3087 x4605))
(assert (=> (>= 10000 x2262) (= (x1970 x2262) (x2553 x2262))))
(assert (= x2068 (x1315 (x1970 x2068))))
(assert (x3087 x2127))
(assert (x3087 x1350))
(assert (= (and x891 x1340) x1363))
(assert (x3087 x3678))
(assert (= x4108 (and x2425 (not x2684))))
(assert (x3087 x3676))
(assert (=> (>= 10000 x781) (= (x1970 x781) (x2553 x781))))
(assert (= x59 (and x3213 x1603)))
(assert (x3087 x2570))
(assert (=> (<= x2280 10000) (= (x1970 x2280) (x2553 x2280))))
(assert (x3087 x2147))
(assert (x136 x3312))
(assert (x3087 x1134))
(assert (= (and x1233 x353) x4096))
(assert (x3087 x446))
(assert (=> (>= 10000 x2601) (= (x2553 x2601) (x1970 x2601))))
(assert (x3087 x234))
(assert (x3087 x738))
(assert (= x2024 (and x900 x2795)))
(assert (= (or x825 x2937) x2239))
(assert (=> (>= 10000 x4804) (= (x1970 x4804) (x2553 x4804))))
(assert (x3087 x106))
(assert (= (and x167 (not x1144)) x3729))
(assert (x3087 x1578))
(assert (x136 x858))
(assert (= (+ (x1315 x1746) 1) (x1315 (x350 x1746 1))))
(assert (x3087 x479))
(assert (= x3157 (and x4673 x3868)))
(assert (= (and (not x485) x4173) x2995))
(assert (x3087 x4394))
(assert (x3087 x4848))
(assert (x3087 x4877))
(assert (x3087 x2889))
(assert (= x1748 (and x4390 x327)))
(assert (= x988 (and x2038 (not x1408))))
(assert (= (+ 1 (x1315 x1153)) (x1315 (x350 x1153 1))))
(assert (= x4312 (or x3089 x3829)))
(assert (= x4220 (=> (and (or (not x3834) x3834) (= x3834 (= 0 x2455))) x1176)))
(assert (x3087 x1964))
(assert (= x4646 (or x653 x1069)))
(assert (= (and x990 (not x2865)) x1273))
(assert (= (and x2075 x2918) x4257))
(assert (=> (>= 10000 x425) (= (x1970 x425) (x2553 x425))))
(assert (x487 x717))
(assert (=> (<= x3204 10000) (= (x1970 x3204) (x2553 x3204))))
(assert (= x1155 (and x2312 x3220)))
(assert (x3087 x311))
(assert (x136 x2119))
(assert (= (x2553 1000000000000000000) (x1970 1000000000000000000)))
(assert (x3087 x810))
(assert (= x1488 (and x4842 (not x1391))))
(assert (= x1976 (or x1436 x1238 x1974 x3387 x1758 x494)))
(assert (x3087 x906))
(assert (= (and x2377 (not x4593)) x1319))
(assert (= (x1970 2030502250) (x2553 2030502250)))
(assert (x136 x1462))
(assert (x3087 x4381))
(assert (= x3230 (x1315 (x1970 x3230))))
(assert (x3087 x1219))
(assert (x3087 x3475))
(assert (x3087 x3237))
(assert (= x3973 (and (not x898) x731)))
(assert (= x2877 (and x3391 x3035)))
(assert (x3087 x4478))
(assert (= (x1970 988262939) (x2553 988262939)))
(assert (= x4779 (and x2420 (not x1793))))
(assert (x3087 x556))
(assert (x3087 x2053))
(assert (x3087 x4653))
(assert (x3087 x4447))
(assert (x3087 x4294))
(assert (= x540 (and x1186 (not x3181))))
(assert (= (and x1943 x489) x2368))
(assert (= x3078 (=> (and (or (and (not x502) (= x832 0)) (and x502 (= x4260 x832))) (and (<= 0 x2271) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2271) (= (> x4260 x2271) x502))) x3396)))
(assert (= x1492 (or x2415 x4629)))
(assert (= (and x1190 x1072) x4291))
(assert (= (and x93 (not x4130)) x1769))
(assert (= x4224 (and x2550 x3328)))
(assert (x3087 x3309))
(assert (= (x1315 (x350 x4074 2)) (+ (x1315 x4074) 2)))
(assert (x3087 x978))
(assert (x3087 x2892))
(assert (=> (<= x3193 10000) (= (x1970 x3193) (x2553 x3193))))
(assert (= x4879 (x1315 (x1970 x4879))))
(assert (x3087 x628))
(assert (= (and x642 x569) x3068))
(assert (= x1254 (and x4196 x3495)))
(assert (= x3735 (and x162 (not x145))))
(assert (= (and x2850 x597) x4068))
(assert (= x4836 (and x898 x731)))
(assert (x3087 x802))
(assert (x3087 x342))
(assert (= x4339 (=> (and (= x4028 (x709 (x1970 x421) x1487 0)) (= (x350 x4028 1) x956) (= (x350 x956 1) x1491)) x3098)))
(assert (= (and x1910 (not x3743)) x4060))
(assert (x3087 x2091))
(assert (x3087 x880))
(assert (= x4432 (and x1801 x2579)))
(assert (x3087 x4457))
(assert (x3087 x1742))
(assert (= (and (not x4400) x1457) x2019))
(assert (x3087 x2886))
(assert (x3087 x310))
(assert (= (or x1552 x4069) x761))
(assert (= (and x4449 x558) x2034))
(assert (= 2245473101 (x1315 (x2553 2245473101))))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1315 (x2553 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (x3087 x1162))
(assert (x3087 x3004))
(assert (= (=> (and (= x3341 x1835) (= x630 x514) (= x966 x3492)) x1543) x4442))
(assert (= (=> (and (= 0 x4659) (= x3965 x4099)) x3163) x2558))
(assert (x3087 x3161))
(assert (= (x1315 (x350 x1983 1)) (+ (x1315 x1983) 1)))
(assert (= x3065 (and (not x639) x2116)))
(assert (x3087 x391))
(assert (x3087 x4206))
(assert (= (x1315 (x1970 x858)) x858))
(assert (x3087 x4274))
(assert (= (or x4692 x2671) x78))
(assert (x3087 x12))
(assert (x3087 x2150))
(assert (x3087 x4415))
(assert (x136 x3914))
(assert (x3087 x3335))
(assert (x3087 x301))
(assert (= x4580 (and x3446 x1529)))
(assert (= x2218 (x1315 (x1970 x2218))))
(assert (= (and x1254 (not x4883)) x4576))
(assert (= (=> (and (or x1644 (not x1644)) (= x1644 (= x4204 0))) x4620) x1468))
(assert (= x3841 (and x114 x4008)))
(assert (= x4821 (x1315 (x1970 x4821))))
(assert (= (x1315 (x1970 x498)) x498))
(assert (x3087 x2047))
(assert (=> (<= x3458 10000) (= (x2553 x3458) (x1970 x3458))))
(assert (= x3030 (and x1648 x3261)))
(assert (= (=> (= x744 x538) x1311) x2140))
(assert (= x1902 (and x141 x4299)))
(assert (x3087 x4820))
(assert (= (=> (= x744 x3678) x2140) x4611))
(assert (= x2786 (x1315 (x1970 x2786))))
(assert (= x4104 (and x4312 (not x1891))))
(assert (= x492 (and x665 x2338)))
(assert (x3087 x728))
(assert (= (or x320 x15 x293 x1719 x4368 x1954) x3326))
(assert (= (=> (and (= x449 x3746) (= x1493 x1099)) x1566) x2374))
(assert (= (and x1410 x2793) x182))
(assert (x3087 x3570))
(assert (x3087 x42))
(assert (= x4552 (or x3554 x1737)))
(assert (= x2519 (x1315 (x1970 x2519))))
(assert (= (and x4682 x3240) x3014))
(assert (x487 x971))
(assert (x3087 x1718))
(assert (x3087 x1291))
(assert (x3087 x2333))
(assert (= (and x4323 x3824) x2646))
(assert (= (and x1984 x4117) x4279))
(assert (= x1503 (or x1385 x4059)))
(assert (x3087 x625))
(assert (x3087 x2891))
(assert (= x2925 (=> (and (<= x4131 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1574 (x4819 x4873)) (= (x3164 (+ x3878 x4873)) x3816) (not (or (and (= true (<= x3255 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3255)) (> x3255 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x4471 0)) (= (x3164 (+ x3255 31)) x2128) (>= x4131 0) (= x3878 (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2128)) (= x2885 (x350 x4421 1)) (= x4131 (x2561 x2885)) (= (> x4131 0) x485)) (and (=> (and (and (= 0 x3417) (= x2763 x3562)) (not x485)) x4201) (=> (and x485 (and (or (and (not x3233) (and (not (> x2677 x2093)) (not (> 0 x3561)) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2677)) x3561) (= (x1595 (- x2763 x2677)) x4086) (= x3622 x4086) (= x1269 x2677))) (and x3233 (and (= x2717 (* 1000000000000000000 x3530)) (= x1297 (div x2717 x1574)) (= x572 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2763))) (= (x2561 x2885) x1365) (not (> 0 x572)) (not (< x1365 x2459)) (= x2763 x1269) (> x1574 0) (= (div x1297 1000000000000000000) x2459) (<= x1365 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4701 (ite x4715 1 0)) (= (mod (* 1000000000000000000 x2763) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3530) (= x4701 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x3530)) (= x4715 (< 115792089237316195423570985008687907853269984665640564039457 x2093)) (= (x1595 (- x1365 x2459)) x3136) (<= 0 x1365) (= x3622 0)))) (and (<= 0 x149) (= x4082 (* x1574 x149)) (<= x149 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (* x1574 x149) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x149 (x2561 x2885)) (= (> x2677 x2763) x3233) (= (div x4082 1000000000000000000) x2677)))) x1324)))))
(assert (x3087 x3638))
(assert (= (and (not x2275) x4705) x2753))
(assert (x3087 x4554))
(assert (x3087 x1556))
(assert (= (and (not x2900) x1921) x4284))
(assert (= (x1315 (x1970 x2555)) x2555))
(assert (x3087 x964))
(assert (= x376 (and x4356 (not x1871))))
(assert (= x1442 (x1315 (x1970 x1442))))
(assert (x3087 x269))
(assert (x3087 x1560))
(assert (= x732 (=> (and (= x991 x2448) (= x388 0)) x4137)))
(assert (x136 x2886))
(assert (x3087 x4505))
(assert (= (x1315 (x1970 x1932)) x1932))
(assert (x3087 x2146))
(assert (= x1806 (and (not x845) x4052)))
(assert (=> (<= x1247 10000) (= (x1970 x1247) (x2553 x1247))))
(assert (x3087 x4736))
(assert (x3087 x2074))
(assert (= (or x2210 x3496 x4179 x260 x1013 x4584 x1849 x2969 x492) x4629))
(assert (= (and (not x2979) x1504) x875))
(assert (x3087 x3581))
(assert (= x4804 (x1315 (x1970 x4804))))
(assert (x3087 x3215))
(assert (= x937 (=> (= x3259 (> x832 0)) (and (=> (not x3259) x4722) (=> (and (and (or (and (not x1613) (= x1613 x1039)) (and (and (= x4010 (< x4333 x832)) (>= x4333 0) (= (x350 x674 2) x2571) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4333) (= x4333 (x366 x2571)) (= x674 (x709 (x1970 x3991) x4088 0)) (= x1039 (not x4010))) x1613)) (and (= x1148 (x350 x4088 1)) (= (x350 x2724 2) x2291) (< x3991 1461501637330902918203684832716283019655932542976) (= x2043 (x371 1461501637330902918203684832716283019655932542975 x620)) (>= x3991 0) (<= 0 x305) (= (x709 (x1970 x2043) x4088 0) x2724) (>= 1461501637330902918203684832716283019655932542975 x3991) (= x1145 (x371 1461501637330902918203684832716283019655932542975 x620)) (<= 0 x667) (= x1613 (ite (> x305 0) (not (= x3991 0)) (> x305 0))) (= x667 0) (= x667 (x366 x2291)) (= (x4508 x1148) x3991) (<= x667 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 0 x1145)))) x3259) x4065)))))
(assert (= (and x1301 (not x2534)) x3574))
(assert (= (x1315 (x1970 x425)) x425))
(assert (x3087 x712))
(assert (x3087 x2719))
(assert (= (x1315 (x1970 x3321)) x3321))
(assert (x3087 x1447))
(assert (= (x2553 2217467699) (x1970 2217467699)))
(assert (x3087 x478))
(assert (x136 x329))
(assert (= (or x2616 x2370) x1276))
(assert (x3087 x71))
(assert (= x1093 (or x1286 x3005 x2727 x3981 x3192)))
(assert (= (and x3963 (not x2490)) x2415))
(assert (x3087 x4468))
(assert (x3087 x213))
(assert (= x3981 (and x2442 x883)))
(assert (= x2840 (and x2785 (not x4655))))
(assert (x3087 x621))
(assert (x3087 x1848))
(assert (x3087 x139))
(assert (x3087 x4634))
(assert (= (x1315 (x1970 x2359)) x2359))
(assert (x3087 x51))
(assert (= x2949 (and x2921 x3418)))
(assert (x3087 x818))
(assert (=> (>= 10000 x3219) (= (x1970 x3219) (x2553 x3219))))
(assert (x3087 x2917))
(assert (x3374 x428))
(assert (x3087 x3655))
(assert (= (=> (and (= x3337 x4724) (= x2509 x585)) x2234) x219))
(assert (=> (>= 10000 x2063) (= (x1970 x2063) (x2553 x2063))))
(assert (= x2603 (and x1186 x3181)))
(assert (= x4311 (and (not x4815) x2049)))
(assert (x3087 x107))
(assert (= (and x2865 x990) x4144))
(assert (= x1868 (and x205 x582)))
(assert (= x3372 (or x2325 x463 x4626 x57 x4168 x434)))
(assert (x3087 x3406))
(assert (= (and x3863 x3677) x1453))
(assert (= (and x4886 x67) x3150))
(assert (= x4585 (x1315 (x1970 x4585))))
(assert (= x3506 (=> (and (or x1067 (not x1067)) (= (= x2097 0) x1067)) x3751)))
(assert (= (x1315 (x350 x229 2)) (+ 2 (x1315 x229))))
(assert (x3087 x2585))
(assert (x3087 x1789))
(assert (=> (>= 10000 x770) (= (x1970 x770) (x2553 x770))))
(assert (x3087 x987))
(assert (x691 x428 x3308))
(assert (x3087 x4330))
(assert (= x3860 (and (not x1691) x1916)))
(assert (x136 x4360))
(assert (x3087 x2243))
(assert (= (and (not x4275) x722) x1974))
(assert (= (and x1483 (not x668)) x227))
(assert (= (and (=> (and (not x3805) (and (= x373 x2015) (= x3762 x3082))) x4217) (=> (and x3805 (and (and (= x3238 (x709 (x1970 x421) x3291 0)) (< (* x1267 x2699) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1595 (- x3562 x3082)) x3351) (= x289 (x350 x3238 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1267) (not (< x3562 x3082)) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x4536) (<= 0 x1267) (= (> x1157 x3351) x2801) (= x1157 (div x4106 1000000000000000000)) (= (x826 x289) x1267) (= (x709 (x1970 x4536) (x2553 159) 0) x3291) (= x4106 (* x2699 x1267))) (or (and x2801 (and (= x4321 x3231) (= (div x3173 1000000000000000000) x4122) (= (mod (* x3351 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2189) (< (* 1000000000000000000 x2189) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3938 (ite x4867 1 0)) (= (div x3778 x2699) x2944) (= x3231 (x1595 (- x1862 x1194))) (= x1862 (x826 x289)) (= (* 1000000000000000000 x2189) x3778) (<= x1862 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x3425 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2835 (> x3351 115792089237316195423570985008687907853269984665640564039457)) (= (mod (* x3351 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3346) (not (> x1194 x1862)) (= (* 1000000000000000000 x3346) x2564) (= (+ x1638 x4031) x2523) (= x3938 0) (= x3426 x2523) (= x1194 (div x2944 1000000000000000000)) (= (x1055 x3238) x3425) (< (+ x4122 x3425) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x3346 1000000000000000000)) (= (div x2564 x389) x3173) (>= x1862 0) (= (< 115792089237316195423570985008687907853269984665640564039457 x3351) x4867) (= (ite x2835 1 0) x4246) (= x3425 x4031) (>= x3425 0) (= 0 x4246) (> x389 0) (= x4122 x1638) (> x2699 0))) (and (and (< (* x622 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x622 (mod (* 1000000000000000000 x1157) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x4321 0) (= (+ x1643 x209) x104) (= x1828 (x1055 x3238)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1262 x1828)) (= (ite x3855 1 0) x4240) (= x1828 x1643) (= x3420 (div x4860 x389)) (= x3426 x104) (<= x1828 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x4240) (= x1262 x209) (= (div x3420 1000000000000000000) x1262) (> x389 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1157 x3082)) (= x3855 (> x1157 115792089237316195423570985008687907853269984665640564039457)) (<= 0 x1828) (= x4860 (* 1000000000000000000 x622))) (not x2801))))) x4248)) x1671))
(assert (=> (<= x3111 10000) (= (x2553 x3111) (x1970 x3111))))
(assert (x3087 x3715))
(assert (x136 x2262))
(assert (= x435 (or x3653 x2109 x2018 x2634 x1214 x3973)))
(assert (= (and x3101 (not x1968)) x1559))
(assert (= (or x1380 x2311) x1810))
(assert (= x1255 (=> (and (= x1665 x3138) (= x1245 x2455)) x4220)))
(assert (x3087 x2706))
(assert (x3087 x4423))
(assert (x3087 x514))
(assert (x3087 x1901))
(assert (= (x1315 (x1970 x1341)) x1341))
(assert (x3087 x3852))
(assert (x3087 x1781))
(assert (x3087 x3633))
(assert (= x1869 (=> (and (= (ite (> x4766 x966) x966 x4766) x3461) (not (= 0 x265)) (= (< 0 x3461) x1699) (= x4766 (x3769 x514)) (= x2000 (x3164 (+ x1597 x514))) (= x1597 (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x460)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4113) (and (= true (<= x4113 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4113 32)))) (= (x3164 (+ x4113 31)) x460)) (and (=> (and (and (= x3076 x3440) (= x664 x3037) (= x2000 x1138) (= x108 x288)) (not x1699)) x3806) (=> (and x1699 (and (= x26 (< 0 x2862)) (>= x2505 0) (= (x1595 (- x505 x2505)) x2862) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x505) (< x2505 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2505))) (and (=> (and (not x26) (and (= (x4396 (x1970 x290)) x1292) (= x2155 (x3164 (+ x3461 x3895))) (= x4437 (x4613 (x1970 x705))) x785 (= (x4613 (x1970 x3919)) x3113) x2590 (< (+ x3895 x3461) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x3164 (+ 4 x2000)) x4627) (= (= x3919 x4345) x4583) (<= x290 1461501637330902918203684832716283019655932542975) (not (= x3273 0)) (= 4 x4394) (= (>= x4437 x3461) x2590) (= (x4613 (x1970 x705)) x802) (= (x2709 (x1970 x3919)) x3895) (= x1129 (- x802 x3461)) (= x785 (< (+ x3461 x3113) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x4396 (x1970 x3919)) x3273) (>= x290 0) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x3919) (not (= 0 x1292)) (> 4294967296 x1361) (< x290 1461501637330902918203684832716283019655932542976))) (and (=> (and (not x4583) (= (= x3111 x3919) x2309)) (and (=> (and (not x2309) (and (= x1603 (= x3919 x3939)) (and (and (= x4470 (x4396 (x1970 x3939))) (= x4394 x4374) (= (= 0 x3461) x4189) (< 0 x4470) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x518) (= 4 x4374)) x1603))) (and (=> (and (not x4189) (= x812 x3440)) x3766) (=> (and x4189 (and (= (x709 (x1970 x705) (x2553 6) 0) x3546) (not (> 4 x4374)) (= (> x2360 x2703) x4885) (<= 0 x2360) (not (= x3445 988262939)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2703) (= (x709 (x1970 x705) (x2553 6) 0) x2266) (> 2217467699 x3445) (<= x2360 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2703) (not (= x3445 1038142104)) (= 1313710058 x3445) (= (x1702 x3546) x2360) (not (> 988262939 x3445)) (< x3445 1856199391) (= (x1702 x2266) x2703) (not (= 989455977 x3445)))) (and (=> (and x4885 (= x812 x3440)) x3766) (=> (and (and (= (> x3440 x2376) x1391) (= x2376 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2360))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3440) (= (x1595 (- x2703 x2360)) x4177) (>= x3440 0)) (not x4885)) (and (=> (and (not x1391) (and (> 1461501637330902918203684832716283019655932542976 x755) (<= 0 x755) (= x3590 (x3164 (+ x2360 x3440))) (= (= x2063 x755) x1886) (>= 1461501637330902918203684832716283019655932542975 x755) (= x1626 (x3164 (+ x3440 x2360))) (= x3100 128))) (and (=> (and (and (= x3939 x2462) (= x668 (or (> x4423 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4423 96) (= (<= x4423 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= 100 x4447) (= 100 x4447) (> 1466279372 x3548) (> x2299 0) (= x447 x2360) (= x2299 (x4396 (x1970 x2063))) (= x259 x705) (not (> 599290589 x3548)) (= 599290589 x3548) (not (< x4447 4)) (= x370 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4423 (x1595 (- x4447 4)))) x1886) (and (=> (and (and (= x3528 x259) (= x4055 (= x259 x705))) (not x668)) (and (=> (and x4055 (and (= x2462 x278) (= (= x2462 x3939) x4486))) (and (=> (and x4486 (and (>= x3958 0) (= x447 x10) (= x3958 (x2411 x3127)) (= x3127 (x709 (x1970 x259) (x2553 1) 0)) (<= x3958 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1413 (< x3958 x2360)))) (and (=> (and (= x2347 (< x3958 x447)) (not x1413)) (and (=> x2347 x3155) (=> (and (not x2347) (and (= x3931 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x447))) (= x1788 (x3141 x3045)) (= x4774 (x709 (x1970 x259) (x2553 1) 0)) (= x4731 (< x3931 x1788)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1788) (= (x709 (x1970 x2462) (x2553 1) 0) x3045) (= (x1595 (- x3958 x447)) x1560) (>= x1788 0))) (and (=> x4731 x3155) (=> (and (not x4731) (and (= x409 (> x1788 x1661)) (= x1661 (x3164 (+ x447 x1788))))) (and (=> (and (not x409) (and (<= 0 x3704) (= x2819 (x709 (x1970 x2462) (x2553 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3704) (= x4226 (> x447 x3704)) (= (x709 (x1970 x259) (x2553 2) 0) x3871) (= (x709 (x1970 x3939) x3871 0) x3172) (= (x3759 x3172) x3704))) (and (=> x4226 x3155) (=> (and (= x4866 (< x3704 x447)) (not x4226)) (and (=> x4866 x3155) (=> (and (not x4866) (and (= x4 (x1595 (- x3704 x447))) (= 1 x2680) (= x1941 32) (= x545 (x709 (x1970 x3939) x2421 0)) (= x2421 (x709 (x1970 x259) (x2553 2) 0)))) x1017))))) (=> x409 x3155))))))) (=> x1413 x3155))) (=> (not x4486) x3155))) (=> (not x4055) x3155))) (=> x668 x3155))) (=> (and (= x3941 (= x755 x4345)) (not x1886)) (and (=> (and (= x3674 (= x755 x3111)) (not x3941)) (and (=> (and (and (= x2360 x1908) (= x1144 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1000) (and (< x1000 96) (= true (<= x1000 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1000 (x1595 (- x3692 4))) (= 100 x3692) (> 988262939 x1170) (= 100 x3692) (< 0 x3129) (= x705 x3728) (not (< x1170 405663989)) (not (= 405663989 x1170)) (= x1170 599290589) (< x1170 2217467699) (= x3129 (x4396 (x1970 x3111))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4554) (not (= 547091486 x1170)) (= x3939 x3321) (not (> 4 x3692))) x3674) (and (=> x1144 x3094) (=> (and (and (= x3728 x4435) (= (= x705 x3728) x3669)) (not x1144)) (and (=> (and x3669 (and (= (= x3321 x3939) x1168) (= x3763 x3321))) (and (=> (not x1168) x3094) (=> (and x1168 (and (<= x1246 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1246 0) (= x4183 x1908) (= (x709 (x1970 x3728) (x2553 5) 0) x4889) (= (< x1246 x2360) x165) (= x1246 (x715 x4889)))) (and (=> (and (and (= x169 (x709 (x1970 x3728) (x2553 5) 0)) (= x2566 (> x1908 x3042)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3042) (= x3042 (x715 x169)) (<= 0 x3042)) (not x165)) (and (=> (and (not x2566) (and (<= x1619 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2169 (x709 (x1970 x3321) (x2553 5) 0)) (<= 0 x1619) (= x1619 (x1842 x2169)) (= (> x1619 x2111) x1197) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1908)) x2111) (= x4797 (x1595 (- x3042 x1908))))) (and (=> x1197 x3094) (=> (and (not x1197) (and (= x493 (x3164 (+ x1619 x1908))) (= 1 x3131) (= x185 32) (= 1 x2986))) x1965))) (=> x2566 x3094))) (=> x165 x3094))))) (=> (not x3669) x3094))))) (=> (and (and (= (= x755 x3939) x639) (and x639 (and (= x2360 x980) (= 100 x1272) (= (x1595 (- x1272 4)) x1850) (not (= x1325 405663989)) (= x1325 599290589) (not (= 547091486 x1325)) (= x4682 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1850) (and (> 96 x1850) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1850))))) (< x1325 2217467699) (= x3939 x3193) (> 988262939 x1325) (> x2559 0) (= (x4396 (x1970 x3939)) x2559) (not (< x1325 405663989)) (= 100 x1272) (= x705 x3914) (= x3510 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x1272))))) (not x3674)) (and (=> (and (not x4682) (and (= x3447 (= x3914 x705)) (= x2336 x3914))) (and (=> (not x3447) x522) (=> (and (and (= x3193 x3794) (= x4314 (= x3193 x3939))) x3447) (and (=> (not x4314) x522) (=> (and x4314 (and (= x1756 x980) (= (x709 (x1970 x3914) (x2553 5) 0) x3268) (= (x588 x3268) x1728) (<= x1728 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1728) (= (< x1728 x2360) x1440))) (and (=> (and (and (= x4608 (x709 (x1970 x3914) (x2553 5) 0)) (>= x497 0) (= x497 (x588 x4608)) (<= x497 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x980 x497) x4534)) (not x1440)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x413) (>= x413 0) (= x4403 (< x2253 x413)) (= x413 (x4694 x605)) (= (x709 (x1970 x3193) (x2553 5) 0) x605) (= x2253 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x980))) (= x742 (x1595 (- x497 x980)))) (not x4534)) (and (=> (and (not x4403) (and (= 1 x3463) (= (x3164 (+ x413 x980)) x1679) (= 32 x1258) (= x3498 1))) x3340) (=> x4403 x522))) (=> x4534 x522))) (=> x1440 x522))))))) (=> x4682 x522))))) (=> (and (and (= x469 x3939) (< 0 x1128) (< x2029 988262939) (not (= 405663989 x2029)) (= x2029 599290589) (= (x4396 (x1970 x4345)) x1128) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1575) (and (< x1575 96) (= true (<= x1575 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3608) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2056) (= 100 x4363) (not (> 4 x4363)) (= x2360 x4357) (not (< x2029 405663989)) (= 100 x4363) (not (= x2029 547091486)) (< x2029 2217467699) (= x1575 (x1595 (- x4363 4))) (= x4360 x705)) x3941) (and (=> (and (not x3608) (and (= x1532 x4360) (= (= x705 x4360) x1402))) (and (=> (not x1402) x879) (=> (and (and (= x4275 (= x3939 x469)) (= x1521 x469)) x1402) (and (=> (and (and (= x4384 x4357) (= x2732 (x2452 x4479)) (= x4479 (x709 (x1970 x4360) (x2553 5) 0)) (<= x2732 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2732) (= (> x2360 x2732) x4383)) x4275) (and (=> x4383 x879) (=> (and (and (>= x1179 0) (= x4166 (x709 (x1970 x4360) (x2553 5) 0)) (= x4359 (< x1179 x4357)) (<= x1179 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2452 x4166) x1179)) (not x4383)) (and (=> (and (not x4359) (and (= (x709 (x1970 x469) (x2553 5) 0) x1317) (= (< x178 x3912) x4789) (= x2191 (x1595 (- x1179 x4357))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3912) (= x3912 (x3887 x1317)) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4357)) x178) (>= x3912 0))) (and (=> (and (not x4789) (and (= x2245 (x3164 (+ x4357 x3912))) (= x1588 1) (= x3464 1) (= x706 32))) x89) (=> x4789 x879))) (=> x4359 x879))))) (=> (not x4275) x879))))) (=> x3608 x879))))))) (=> (and x1391 (= x3440 x812)) x3766))))))) (=> (and (and (= (= 0 x3461) x2229) (= 4 x4274) (= x3309 35417553099779373699389112480655434059402432070290151981503827724506945814528) (= x4274 x4394) (> x2565 0) (= x2565 (x4396 (x1970 x3111)))) x2309) (and (=> (and (= x108 x2719) (not x2229)) x1044) (=> (and x2229 (and (< x4811 2217467699) (= (< x3245 x4022) x216) (not (< x4274 4)) (not (= 989455977 x4811)) (<= 0 x4022) (>= x3245 0) (not (= 988262939 x4811)) (<= x3245 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x4022 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1856199391 x4811) (= (x3134 x647) x3245) (= x4811 1313710058) (not (= x4811 1038142104)) (not (< x4811 988262939)) (= (x709 (x1970 x705) (x2553 6) 0) x2784) (= x4022 (x3134 x2784)) (= (x709 (x1970 x705) (x2553 6) 0) x647))) (and (=> (and x216 (= x108 x2719)) x1044) (=> (and (not x216) (and (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4022)) x1345) (= (> x108 x1345) x3470) (>= x108 0) (<= x108 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4221 (x1595 (- x3245 x4022))))) (and (=> (and x3470 (= x108 x2719)) x1044) (=> (and (not x3470) (and (> 1461501637330902918203684832716283019655932542976 x835) (<= x835 1461501637330902918203684832716283019655932542975) (<= 0 x835) (= x1930 (x3164 (+ x4022 x108))) (= 128 x2345) (= x4340 (= x835 x2063)) (= (x3164 (+ x108 x4022)) x3923))) (and (=> (and (= x1858 (= x4345 x835)) (not x4340)) (and (=> (and (= x819 (= x3111 x835)) (not x1858)) (and (=> (and (not x819) (and (= (= x3939 x835) x1822) (and x1822 (and (> x3904 0) (= 599290589 x1927) (< x1927 988262939) (= (x4396 (x1970 x3939)) x3904) (not (= x1927 547091486)) (= 100 x2267) (= (x1595 (- x2267 4)) x1872) (not (< x2267 4)) (= x2267 100) (= x3111 x4804) (= x2514 x4022) (not (< x1927 405663989)) (= x1213 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x1927 405663989)) (< x1927 2217467699) (= x4130 (or (> x1872 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1872) true) (< x1872 96)))) (= x3913 x705))))) (and (=> x4130 x4564) (=> (and (and (= x3913 x1291) (= x4072 (= x705 x3913))) (not x4130)) (and (=> (not x4072) x4564) (=> (and x4072 (and (= x2517 (= x4804 x3111)) (= x4804 x3015))) (and (=> (and x2517 (and (= (x588 x2217) x2513) (<= 0 x2513) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2513) (= x340 x2514) (= (x709 (x1970 x3913) (x2553 5) 0) x2217) (= (> x4022 x2513) x3196))) (and (=> x3196 x4564) (=> (and (not x3196) (and (= x3873 (> x2514 x3475)) (>= x3475 0) (<= x3475 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x3913) (x2553 5) 0) x999) (= (x588 x999) x3475))) (and (=> (and (and (<= x462 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x462) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2514)) x865) (= (x1595 (- x3475 x2514)) x568) (= x372 (x709 (x1970 x4804) (x2553 5) 0)) (= (x3670 x372) x462) (= (> x462 x865) x4841)) (not x3873)) (and (=> (and (not x4841) (and (= (x3164 (+ x2514 x462)) x1150) (= x1511 32) (= 1 x1655) (= x561 1))) x1514) (=> x4841 x4564))) (=> x3873 x4564))))) (=> (not x2517) x4564))))))) (=> (and (and (= (x1595 (- x1110 4)) x3112) (not (< x4171 405663989)) (= x1061 x3111) (> 2217467699 x4171) (= x1110 100) (= x4171 599290589) (= x4022 x4354) (= x781 x705) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3112) (and (= (<= x3112 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3112 96))) x1968) (= 100 x1110) (= x3307 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4658 (x4396 (x1970 x3111))) (not (= x4171 405663989)) (< x4171 988262939) (not (< x1110 4)) (< 0 x4658) (not (= 547091486 x4171))) x819) (and (=> x1968 x2096) (=> (and (not x1968) (and (= x3347 (= x705 x781)) (= x781 x2489))) (and (=> (and x3347 (and (= x1061 x193) (= (= x3111 x1061) x2472))) (and (=> (not x2472) x2096) (=> (and x2472 (and (= x1357 x4354) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2588) (= (> x4022 x2588) x1046) (= (x715 x1703) x2588) (>= x2588 0) (= x1703 (x709 (x1970 x781) (x2553 5) 0)))) (and (=> (and (not x1046) (and (= (> x4354 x3893) x3542) (<= 0 x3893) (<= x3893 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1163 (x709 (x1970 x781) (x2553 5) 0)) (= x3893 (x715 x1163)))) (and (=> (and (not x3542) (and (<= x1617 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1595 (- x3893 x4354)) x3921) (= x1617 (x3203 x2919)) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4354)) x1578) (>= x1617 0) (= x2392 (< x1578 x1617)) (= x2919 (x709 (x1970 x1061) (x2553 5) 0)))) (and (=> (and (and (= (x3164 (+ x4354 x1617)) x2598) (= x3016 32) (= 1 x4553) (= x2301 1)) (not x2392)) x415) (=> x2392 x2096))) (=> x3542 x2096))) (=> x1046 x2096))))) (=> (not x3347) x2096))))))) (=> (and x1858 (and (= (x1595 (- x583 4)) x3275) (not (> 405663989 x2745)) (= x4022 x4219) (= x4151 x705) (not (< x583 4)) (< 0 x2873) (= x3111 x4821) (= x583 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3565) (= 599290589 x2745) (= x583 100) (> 988262939 x2745) (< x2745 2217467699) (not (= 405663989 x2745)) (= (x4396 (x1970 x4345)) x2873) (not (= 547091486 x2745)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3275) true) (> 96 x3275)) (> x3275 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1188))) (and (=> x1188 x4529) (=> (and (and (= x3697 x4151) (= (= x4151 x705) x1191)) (not x1188)) (and (=> (not x1191) x4529) (=> (and x1191 (and (= x4821 x1567) (= (= x3111 x4821) x3743))) (and (=> (not x3743) x4529) (=> (and x3743 (and (<= 0 x2146) (= (x709 (x1970 x4151) (x2553 5) 0) x4091) (= (x2452 x4091) x2146) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2146) (= x2543 x4219) (= (> x4022 x2146) x1562))) (and (=> (and (not x1562) (and (<= x4667 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4667 x4219) x3854) (= (x709 (x1970 x4151) (x2553 5) 0) x1395) (<= 0 x4667) (= x4667 (x2452 x1395)))) (and (=> x3854 x4529) (=> (and (not x3854) (and (= (x1595 (- x4667 x4219)) x2735) (= x1629 (x2531 x3827)) (= (> x1629 x513) x1550) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1629) (= x513 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4219))) (>= x1629 0) (= (x709 (x1970 x4821) (x2553 5) 0) x3827))) (and (=> x1550 x4529) (=> (and (and (= x3186 1) (= 1 x2117) (= (x3164 (+ x4219 x1629)) x3780) (= x3713 32)) (not x1550)) x4098))))) (=> x1562 x4529))))))))))) (=> (and (and (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1701)) (> 96 x1701)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1701)) x4523) (< 0 x1563) (= 100 x3731) (= x1701 (x1595 (- x3731 4))) (not (< x3731 4)) (> 1466279372 x1495) (= x1936 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x1495 599290589)) (= x3830 x4022) (= 599290589 x1495) (= (x4396 (x1970 x2063)) x1563) (= x3731 100) (= x705 x4879) (= x127 x3111)) x4340) (and (=> x4523 x1602) (=> (and (and (= x4879 x228) (= (= x4879 x705) x2580)) (not x4523)) (and (=> (not x2580) x1602) (=> (and x2580 (and (= x2051 (= x3111 x127)) (= x127 x3619))) (and (=> (not x2051) x1602) (=> (and (and (>= x3531 0) (= x3392 x3830) (= x554 (x709 (x1970 x4879) (x2553 1) 0)) (<= x3531 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3531 (x2411 x554)) (= x3644 (> x4022 x3531))) x2051) (and (=> x3644 x1602) (=> (and (= x2851 (< x3531 x3830)) (not x3644)) (and (=> (and (and (= x2203 (x709 (x1970 x127) (x2553 1) 0)) (<= x2185 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3430 (x1595 (- x3531 x3830))) (= x3964 (> x2185 x3775)) (>= x2185 0) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3830)) x3775) (= (x1686 x2203) x2185) (= x1073 (x709 (x1970 x4879) (x2553 1) 0))) (not x2851)) (and (=> (and (not x3964) (and (= (< x2596 x2185) x2338) (= (x3164 (+ x3830 x2185)) x2596))) (and (=> (and (and (= (x709 (x1970 x127) (x2553 1) 0) x4894) (= x2184 (x709 (x1970 x4879) (x2553 2) 0)) (= x2576 (x3759 x44)) (= (> x3830 x2576) x1327) (<= 0 x2576) (= x44 (x709 (x1970 x3111) x2184 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2576)) (not x2338)) (and (=> (and (not x1327) (= (> x3830 x2576) x2490)) (and (=> (and (not x2490) (and (= (x709 (x1970 x4879) (x2553 2) 0) x4607) (= 1 x4535) (= (x709 (x1970 x3111) x4607 0) x3650) (= x4330 32) (= (x1595 (- x2576 x3830)) x3212))) x3459) (=> x2490 x1602))) (=> x1327 x1602))) (=> x2338 x1602))) (=> x3964 x1602))) (=> x2851 x1602))))))))))))))))))))) (=> (and x4583 (and (= 4 x1219) (= (= x3461 0) x1463) (= x1797 (x4396 (x1970 x4345))) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x1234) (< 0 x1797) (= x1219 x4394))) (and (=> (and (and (= (< x4820 x3571) x4073) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4820) (<= 0 x3571) (not (> 988262939 x1959)) (not (= x1959 989455977)) (not (= x1959 1038142104)) (= x4820 (x1690 x133)) (< x1959 2217467699) (= x1959 1313710058) (not (> 4 x1219)) (not (= 988262939 x1959)) (<= x3571 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x133 (x709 (x1970 x705) (x2553 6) 0)) (< x1959 1856199391) (= x3571 (x1690 x2154)) (<= 0 x4820) (= x2154 (x709 (x1970 x705) (x2553 6) 0))) x1463) (and (=> (and x4073 (= x2448 x3037)) x732) (=> (and (and (= (< x112 x3037) x4085) (>= x3037 0) (<= x3037 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1595 (- x4820 x3571)) x536) (= x112 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3571)))) (not x4073)) (and (=> (and (= x3037 x2448) x4085) x732) (=> (and (not x4085) (and (>= x1001 0) (< x1001 1461501637330902918203684832716283019655932542976) (= x1564 (= x2063 x1001)) (= x2134 (x3164 (+ x3571 x3037))) (= x2797 (x3164 (+ x3037 x3571))) (= 128 x3911) (>= 1461501637330902918203684832716283019655932542975 x1001))) (and (=> (and (not x1564) (= (= x4345 x1001) x4264)) (and (=> (and (not x4264) (= x2815 (= x1001 x3111))) (and (=> (and x2815 (and (= x3990 (x4396 (x1970 x3111))) (= 599290589 x1901) (= 100 x3879) (> x3990 0) (< x1901 988262939) (= x4345 x2350) (not (< x1901 405663989)) (= x425 x705) (not (= x1901 405663989)) (= 100 x3879) (= x2796 x3571) (not (= x1901 547091486)) (= (or (and (> 96 x4654) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4654) true)) (> x4654 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4109) (= x1989 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x3879 4)) (= x4654 (x1595 (- x3879 4))) (< x1901 2217467699))) (and (=> x4109 x646) (=> (and (not x4109) (and (= (= x705 x425) x451) (= x1134 x425))) (and (=> (not x451) x646) (=> (and (and (= x2259 (= x4345 x2350)) (= x1610 x2350)) x451) (and (=> (not x2259) x646) (=> (and x2259 (and (= (x715 x1373) x2847) (= (> x3571 x2847) x4790) (= x2796 x2343) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2847) (= (x709 (x1970 x425) (x2553 5) 0) x1373) (>= x2847 0))) (and (=> (and (not x4790) (and (= (< x2055 x2796) x2979) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2055) (<= 0 x2055) (= (x709 (x1970 x425) (x2553 5) 0) x4309) (= x2055 (x715 x4309)))) (and (=> x2979 x646) (=> (and (and (= (x709 (x1970 x2350) (x2553 5) 0) x4066) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2556) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2796)) x2602) (= (x1595 (- x2055 x2796)) x3501) (<= 0 x2556) (= (x1378 x4066) x2556) (= x4744 (< x2602 x2556))) (not x2979)) (and (=> x4744 x646) (=> (and (and (= x4294 1) (= 1 x978) (= 32 x1065) (= (x3164 (+ x2796 x2556)) x906)) (not x4744)) x2841))))) (=> x4790 x646))))))))) (=> (and (and (= x2275 (= x3939 x1001)) (and x2275 (and (> x3610 0) (> 2217467699 x1083) (= x3571 x3864) (= 100 x4452) (= x4844 (x1595 (- x4452 4))) (not (= x1083 547091486)) (not (> 405663989 x1083)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1056) (= x2542 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4844) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4844) true) (> 96 x4844)))) (= x2636 x705) (not (> 4 x4452)) (= x3610 (x4396 (x1970 x3939))) (= 599290589 x1083) (= x1462 x4345) (= 100 x4452) (not (= x1083 405663989)) (> 988262939 x1083)))) (not x2815)) (and (=> x2542 x4187) (=> (and (not x2542) (and (= x3515 (= x705 x2636)) (= x2636 x2103))) (and (=> (not x3515) x4187) (=> (and x3515 (and (= x1462 x142) (= x2078 (= x4345 x1462)))) (and (=> (not x2078) x4187) (=> (and x2078 (and (= (x709 (x1970 x2636) (x2553 5) 0) x2072) (= (> x3571 x4232) x3755) (= (x588 x2072) x4232) (<= 0 x4232) (= x3864 x90) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4232))) (and (=> (and (and (= (< x4090 x3864) x1986) (<= x4090 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4090) (= x4090 (x588 x2389)) (= x2389 (x709 (x1970 x2636) (x2553 5) 0))) (not x3755)) (and (=> x1986 x4187) (=> (and (and (= (x1595 (- x4090 x3864)) x1358) (<= 0 x1230) (= x1432 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3864))) (= (x709 (x1970 x1462) (x2553 5) 0) x364) (= (x1149 x364) x1230) (= x3336 (> x1230 x1432)) (<= x1230 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1986)) (and (=> x3336 x4187) (=> (and (not x3336) (and (= x4249 (x3164 (+ x1230 x3864))) (= 1 x2265) (= x3789 1) (= x3605 32))) x506))))) (=> x3755 x4187))))))))))) (=> (and x4264 (and (not (= x526 405663989)) (< x526 988262939) (= x3838 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3152 100) (= x2021 (x4396 (x1970 x4345))) (not (= 547091486 x526)) (= x932 (x1595 (- x3152 4))) (< x526 2217467699) (= x705 x2251) (not (> 4 x3152)) (= x526 599290589) (= x4342 (or (> x932 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x932) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x932) true)))) (= x3571 x138) (= x4345 x4528) (> x2021 0) (not (< x526 405663989)) (= 100 x3152))) (and (=> x4342 x4614) (=> (and (and (= x4006 (= x2251 x705)) (= x2251 x1045)) (not x4342)) (and (=> (not x4006) x4614) (=> (and (and (= (= x4345 x4528) x898) (= x4528 x2141)) x4006) (and (=> (and (and (= (x709 (x1970 x2251) (x2553 5) 0) x868) (= x2855 (> x3571 x1960)) (= x1960 (x2452 x868)) (= x4511 x138) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1960) (<= 0 x1960)) x898) (and (=> x2855 x4614) (=> (and (not x2855) (and (= (x2452 x3011) x2331) (<= 0 x2331) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2331) (= x3011 (x709 (x1970 x2251) (x2553 5) 0)) (= (< x2331 x138) x4813))) (and (=> x4813 x4614) (=> (and (and (= (x4192 x1335) x1124) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1124) (>= x1124 0) (= x69 (x1595 (- x2331 x138))) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x138)) x2045) (= (< x2045 x1124) x3487) (= x1335 (x709 (x1970 x4528) (x2553 5) 0))) (not x4813)) (and (=> x3487 x4614) (=> (and (and (= x4216 32) (= 1 x3032) (= (x3164 (+ x138 x1124)) x257) (= 1 x2385)) (not x3487)) x4674))))))) (=> (not x898) x4614))))))))) (=> (and (and (> x40 0) (= x705 x3960) (= (x4396 (x1970 x2063)) x40) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1730)) (> 96 x1730)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1730)) x1651) (> 1466279372 x3655) (= 100 x362) (= x362 100) (= x2578 x3571) (= x2115 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x362)) (= x3655 599290589) (= x4345 x858) (not (> 599290589 x3655)) (= x1730 (x1595 (- x362 4)))) x1564) (and (=> x1651 x3139) (=> (and (and (= x3960 x965) (= (= x3960 x705) x2328)) (not x1651)) (and (=> (and x2328 (and (= x17 (= x4345 x858)) (= x858 x342))) (and (=> (not x17) x3139) (=> (and x17 (and (= (> x3571 x4848) x4732) (= x4848 (x2411 x2300)) (>= x4848 0) (= (x709 (x1970 x3960) (x2553 1) 0) x2300) (<= x4848 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2578 x3283))) (and (=> x4732 x3139) (=> (and (not x4732) (= x570 (> x2578 x4848))) (and (=> (and (and (= (x1595 (- x4848 x2578)) x1854) (= (x709 (x1970 x858) (x2553 1) 0) x2386) (<= 0 x399) (= (> x399 x2587) x607) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x399) (= x2587 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2578))) (= (x4259 x2386) x399) (= x660 (x709 (x1970 x3960) (x2553 1) 0))) (not x570)) (and (=> (and (not x607) (and (= x405 (x3164 (+ x399 x2578))) (= (> x399 x405) x3748))) (and (=> (and (not x3748) (and (= x4266 (x3759 x763)) (= (< x4266 x2578) x878) (= (x709 (x1970 x3960) (x2553 2) 0) x1205) (= (x709 (x1970 x858) (x2553 1) 0) x2423) (>= x4266 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4266) (= x763 (x709 (x1970 x4345) x1205 0)))) (and (=> x878 x3139) (=> (and (= (< x4266 x2578) x811) (not x878)) (and (=> x811 x3139) (=> (and (not x811) (and (= 1 x3746) (= x1716 (x709 (x1970 x4345) x3158 0)) (= x4603 (x1595 (- x4266 x2578))) (= (x709 (x1970 x3960) (x2553 2) 0) x3158) (= x1493 32))) x2374))))) (=> x3748 x3139))) (=> x607 x3139))) (=> x570 x3139))))))) (=> (not x2328) x3139))))))))))) (=> (and (= x3037 x2448) (not x1463)) x732))))) (=> (and (and (and (= x1111 (x3164 (+ 4 x2000))) (= (= x2063 x1978) x270) (= x903 (x3164 (+ 32 x1111)))) (and x270 (and (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2726) (= x2221 68) (not (< x2221 4)) (< x4272 1466279372) (= (x4396 (x1970 x2063)) x1928) (= x4272 157198259) (= x323 x3636) (= (x1595 (- x2221 4)) x1388) (< x4272 599290589) (< 0 x1928) (not (= x4272 117300739)) (= (or (and (< x1388 64) (= (<= x1388 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1388 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x901) (= x4236 x3461)))) x26) (and (=> x901 x1295) (=> (and (and (= x3807 (x371 1461501637330902918203684832716283019655932542975 x3636)) (= (= x3807 x3636) x2037)) (not x901)) (and (=> (and (and (= x3458 (x371 1461501637330902918203684832716283019655932542975 x323)) (= x1980 1) (= x4020 32) (= x1659 (x709 (x1970 x3458) x64 0)) (= (x709 (x1970 x705) (x2553 2) 0) x64) (= x2237 x4236)) x2037) x3405) (=> (not x2037) x1295)))))))))))
(assert (x3087 x637))
(assert (= (and x2815 x4467) x1211))
(assert (= (x2553 398450620) (x1970 398450620)))
(assert (x3087 x1432))
(assert (= (or x3841 x644 x2791 x4133 x2034 x954) x1765))
(assert (x3087 x984))
(assert (x3087 x2959))
(assert (= (or x4454 x4761) x1490))
(assert (= x3790 (and x540 (not x2005))))
(assert (x3087 x3745))
(assert (= (and x1364 (not x216)) x1028))
(assert (x3087 x4590))
(assert (=> (<= x3913 10000) (= (x1970 x3913) (x2553 x3913))))
(assert (x3087 x4530))
(assert (x136 x1427))
(assert (= (or x3243 x761) x569))
(assert (x3087 x1738))
(assert (x3087 x2063))
(assert (x487 x632))
(assert (= x3338 (and x2075 (not x2918))))
(assert (= x4584 (and x3964 x3967)))
(assert (x3087 x897))
(assert (x487 x2455))
(assert (= (x2553 1466279372) (x1970 1466279372)))
(assert (x3087 x3365))
(assert (= (or x2840 x3326) x4466))
(assert (= x4721 (and (not x477) x3371)))
(assert (= x1044 (=> (and (= x4740 x2719) (= 0 x4019)) x975)))
(assert (= (+ 1 (x1315 x2433)) (x1315 (x350 x2433 1))))
(assert (=> (<= x2538 10000) (= (x1970 x2538) (x2553 x2538))))
(assert (x3087 x1663))
(assert (x3087 x1960))
(assert (x3087 x3236))
(assert (= (and x4314 x3899) x2121))
(assert (= x3758 (and x2856 x4039)))
(assert (x3087 x259))
(assert (x3087 x1224))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1315 (x2553 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x3087 x2803))
(assert (= (and (not x512) x1573) x4469))
(assert (x136 x4489))
(assert (x3087 x1948))
(assert (= x3240 (and x2116 x639)))
(assert (= x2748 false))
(assert (x3087 x1870))
(assert (= (+ 2 (x1315 x3109)) (x1315 (x350 x3109 2))))
(assert (= (x1315 (x2553 2023533118)) 2023533118))
(assert (= (or x3576 x4746 x798 x448 x2982 x3720) x1721))
(assert (= (and x4323 (not x3824)) x1410))
(assert (x3087 x4862))
(assert (= x293 (and x3646 (not x2952))))
(assert (x3087 x2686))
(assert (x3087 x2238))
(assert (x3087 x2763))
(assert (= (x1315 (x1970 x2262)) x2262))
(assert (x3087 x3898))
(assert (x3087 x4586))
(assert (= (=> (and (or x2371 (not x2371)) (= (= x449 0) x2371)) x3059) x1566))
(assert (x3087 x835))
(assert (= x4350 (and (not x3613) x1089)))
(assert (x3087 x3242))
(assert (x136 x1250))
(assert (x3087 x2730))
(assert (x136 x770))
(assert (x3087 x4480))
(assert (= (and x4892 (not x1986)) x1951))
(assert (x3087 x1351))
(assert (x3087 x2108))
(assert (= x1695 (and (not x1370) x4276)))
(assert (=> (>= 10000 x473) (= (x1970 x473) (x2553 x473))))
(assert (x3087 x2737))
(assert (= x2937 (and x2574 x4361)))
(assert (x3087 x2556))
(assert (x3087 x1900))
(assert (x3087 x3416))
(assert (= (and x4006 x4472) x731))
(assert (= (and (not x4346) x2368) x543))
(assert (x3087 x2360))
(assert (= x2008 (and (not x4438) x1503)))
(assert (= x1669 (or x4818 x1451)))
(assert (x3087 x2832))
(assert (x487 x2728))
(assert (= x648 (and x4278 x2499)))
(assert (= x254 (and x4362 (not x1700))))
(assert (x3087 x4058))
(assert (x3087 x2267))
(assert (= x2305 (=> (and (or x3160 (and (not x3160) (and (= (x371 1461501637330902918203684832716283019655932542975 x1305) x1608) (< x4474 4294967296) (= (x3164 (+ 4 x373)) x4058) (<= 0 x1119) (>= 1461501637330902918203684832716283019655932542975 x1119) (< x1119 1461501637330902918203684832716283019655932542976) (= (x3164 (+ x4058 32)) x479) (= x3200 (x3164 (+ x479 32))) (= x2225 (x4396 (x1970 x1119))) (not (= x2225 0))))) (and (= x3160 (= x1119 0)) (>= x1119 0) (<= x1119 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1119))) x3563)))
(assert (= x1146 (and x3386 (not x2060))))
(assert (= (and (not x2998) x2008) x3598))
(assert (= (x1315 (x1970 x1727)) x1727))
(assert (= (and (not x3767) x946) x1313))
(assert (x3087 x379))
(assert (x3087 x696))
(assert (x3087 x4402))
(assert (= x3646 (and x1785 x4350)))
(assert (x3087 x2505))
(assert (= (and (not x50) x4371) x2787))
(assert (=> (>= 10000 x4878) (= (x1970 x4878) (x2553 x4878))))
(assert (x3087 x2659))
(assert (x3087 x3480))
(assert (x3087 x1439))
(assert (x3087 x561))
(assert (not x3732))
(assert (= (and x345 x4340) x3363))
(assert (x3087 x2460))
(assert (=> (<= x3992 10000) (= (x1970 x3992) (x2553 x3992))))
(assert (= (x1315 (x1970 x4690)) x4690))
(assert (= x4861 (x1315 (x1970 x4861))))
(assert (x3087 x591))
(assert (= x797 (and x1877 x3313)))
(assert (= x1593 (and (not x1564) x1026)))
(assert (= x4799 (and (not x1191) x2485)))
(assert (= (or x2177 x1866) x3737))
(assert (x3087 x3879))
(assert (x3087 x389))
(assert (= (and (not x708) x2646) x4859))
(assert (x3087 x2884))
(assert (=> (>= 10000 x2736) (= (x1970 x2736) (x2553 x2736))))
(assert (= x471 (or x2447 x3008 x815)))
(assert (x3087 x3290))
(assert (= (and x345 (not x4340)) x1766))
(assert (= (or x212 x254) x2443))
(assert (x3087 x611))
(assert (x3087 x4426))
(assert (= (and x1641 x2575) x4688))
(assert (= (x2553 1856199391) (x1970 1856199391)))
(assert (x3087 x2115))
(assert (x3087 x2769))
(assert (x3087 x2016))
(assert (x3087 x3445))
(assert (= x4193 (and x282 x3941)))
(assert (= x1310 (and x4288 x3774)))
(assert (= (=> (and (or (and (not x440) (= (x709 (x1970 x1165) x2090 0) x4645)) (and x440 (= (x350 x2090 2) x3908))) (= x440 (= 0 x1165))) x2667) x4152))
(assert (= (x1315 (x350 x1390 1)) (+ 1 (x1315 x1390))))
(assert (x3087 x1946))
(assert (= (and (not x4085) x1143) x1026))
(assert (x3087 x2265))
(assert (x3087 x612))
(assert (= (and x325 x4807) x2982))
(assert (= (and x2574 (not x4361)) x825))
(assert (x3087 x3975))
(assert (x3087 x927))
(assert (= x550 (and x152 (not x1328))))
(assert (= x2396 (x1315 (x1970 x2396))))
(assert (x3087 x1345))
(assert (= (+ 1 (x1315 x224)) (x1315 (x350 x224 1))))
(assert (x136 x2901))
(assert (= x4373 (and x3723 (not x3632))))
(assert (= x4181 (and x3933 x2239)))
(assert (= (and (=> (and (and (= x2119 x3560) (= x496 1)) (not x6)) x4227) (=> (and (and (= x3560 x725) (= x1715 x3095) (= x2280 x4402)) x6) x3839)) x4223))
(assert (x136 x1757))
(assert (= x2896 (and x3068 (not x886))))
(assert (x3087 x3210))
(assert (x3087 x3377))
(assert (x3087 x3472))
(assert (x3087 x3120))
(assert (= (=> (and (= x4330 x4416) (= x4535 x880)) x170) x3459))
(assert (x3087 x3099))
(assert (x136 x677))
(assert (= (and x4547 x4770) x4077))
(assert (x3087 x533))
(assert (x3087 x4474))
(assert (x3087 x4649))
(assert (= (or x1765 x2751) x144))
(assert (x3087 x4124))
(assert (x3087 x3033))
(assert (x3087 x2768))
(assert (x3087 x751))
(assert (x3087 x3327))
(assert (x3087 x382))
(assert (= (+ (x1315 x4408) 1) (x1315 (x350 x4408 1))))
(assert (= x1451 (and x531 x1433)))
(assert (= (and x2424 x266) x4550))
(assert (x3087 x1919))
(assert (x3087 x473))
(assert (= (and (not x3634) x2422) x1547))
(assert (x3087 x2953))
(assert (x3087 x2419))
(assert (= x2761 (or x797 x887 x4075 x3157 x1895 x2678 x3274 x491 x2080)))
(assert (= (and (not x1376) x2834) x4692))
(assert (= x3884 (=> (and (= x335 x4228) (= x628 0)) x4606)))
(assert (x3087 x3586))
(assert (x3087 x2519))
(assert (x3087 x3914))
(assert (= (=> (and (= x2449 x1118) (= x3033 x1996)) x3246) x4582))
(assert (x3087 x4719))
(assert (= (and x1796 x375) x1472))
(assert (= x494 (and x4359 x1042)))
(assert (x3087 x4806))
(assert (x3087 x1435))
(assert (x136 x4528))
(assert (x487 x2798))
(assert (= (x2553 178855970) (x1970 178855970)))
(assert (x3087 x874))
(assert (= x1624 (and x1769 x4072)))
(assert (= x4610 (=> (and (= x2731 0) (= x1242 x3142)) x1531)))
(assert (= (and x2822 (not x4349)) x649))
(assert (= (and x4073 x1130) x2436))
(assert (x3087 x1760))
(assert (= (+ (x1315 x3514) 1) (x1315 (x350 x3514 1))))
(assert (= (x1315 (x350 x9 1)) (+ (x1315 x9) 1)))
(assert (= x4761 (and x3954 (not x1606))))
(assert (x3087 x2004))
(assert (= (and x3322 (not x1271)) x4417))
(assert (x136 x4861))
(assert (= (x1315 (x1970 x4509)) x4509))
(assert (x3087 x2623))
(assert (= (or x304 x4338) x3250))
(assert (x3087 x3142))
(assert (x136 x2243))
(assert (x136 x2532))
(assert (= (or x3529 x4093) x1208))
(assert (= (+ (x1315 x2352) 1) (x1315 (x350 x2352 1))))
(assert (x3087 x3036))
(assert (= x2213 (=> (and (< (* x1224 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2293 (x371 1461501637330902918203684832716283019655932542975 x1305)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2830) (= (> x1835 115792089237316195423570985008687907853269984665640564039457) x814) (<= 0 x2830) (= x2661 (x350 x414 1)) (< (+ x2830 x4405) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2431 x2661) x2830) (>= x2505 0) (= (x3164 (+ x1312 31)) x2728) (> 1461501637330902918203684832716283019655932542976 x2505) (<= x2505 1461501637330902918203684832716283019655932542975) (= x3627 (< 0 x2192)) (= (ite x814 1 0) x591) (= (+ x456 x3553) x977) (= (x1595 (- x2293 x2505)) x2192) (= x1224 (mod (* 1000000000000000000 x1835) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1819 (x4200 x1789)) (not (= 0 x576)) (= x4405 x3553) (= (div x4062 1000000000000000000) x4405) (= x2958 (x3164 (+ x615 x1789))) (= (div x3865 x1819) x4062) (= x3865 (* 1000000000000000000 x1224)) (= (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2728) x615) (= x591 0) (< 0 x1819) (not (or (> x1312 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1312) true) (> 32 x1312)))) (= x456 x2830)) (and (=> (and (not x3627) (and (<= x290 1461501637330902918203684832716283019655932542975) (= (x4482 (x1970 x2310)) x2714) (= (x4396 (x1970 x2310)) x818) x4141 (= (x2484 (x1970 x2310)) x2071) (> 4294967296 x2581) (>= x290 0) (= (x3164 (+ x2714 x1835)) x4315) (> 1461501637330902918203684832716283019655932542976 x290) (not (= 0 x818)) (= x1405 (x4396 (x1970 x290))) (not (= x1405 0)) (= (x2484 (x1970 x705)) x621) (= x2310 (x371 1461501637330902918203684832716283019655932542975 x1305)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2071 x1835)) x4141) x14 (< (+ x1835 x2714) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x14 (>= x621 x1835)) (= (- x2887 x1835) x2149) (= x2887 (x2484 (x1970 x705))) (< x1590 4294967296))) x207) (=> (and (and (and x2575 (and (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x1062) (= (x4396 (x1970 x2063)) x1907) (= 157198259 x4111) (= x717 x3636) (> x1907 0) (= x2487 (or (and (< x2186 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2186) true)) (> x2186 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x394 x1835) (< x4111 1466279372) (not (< x4415 4)) (not (= x4111 117300739)) (> 599290589 x4111) (= (x1595 (- x4415 4)) x2186) (= 68 x4415))) (and (= (x3164 (+ 4 x2958)) x4558) (= x2204 (x3164 (+ x4558 32))) (= (= x1978 x2063) x2575))) x3627) (and (=> x2487 x58) (=> (and (and (= x1107 (x371 1461501637330902918203684832716283019655932542975 x3636)) (= x1650 (= x3636 x1107))) (not x2487)) (and (=> (not x1650) x58) (=> (and (and (= (x371 1461501637330902918203684832716283019655932542975 x717) x253) (= x4888 (x709 (x1970 x253) x1466 0)) (= 32 x236) (= 1 x4204) (= x1466 (x709 (x1970 x705) (x2553 2) 0)) (= x394 x280)) x1650) x1468)))))))))
(assert (x3087 x1272))
(assert (= (and x3669 x3729) x2926))
(assert (x3087 x1165))
(assert (= (and x4813 x989) x2634))
(assert (= x908 (and x471 (not x3642))))
(assert (= x3006 (or x1572 x3673)))
(assert (= x1692 (or x1553 x931)))
(assert (= (or x2954 x221 x1705 x3657 x2691 x3017) x212))
(assert (x3087 x3997))
(assert (x3087 x3097))
(assert (x136 x4804))
(assert (= (or x909 x1005 x4291) x863))
(assert (x3087 x2512))
(assert (= (x1315 (x350 x4847 1)) (+ 1 (x1315 x4847))))
(assert (x3087 x924))
(assert (= (or x3085 x4676) x3575))
(assert (x3087 x3913))
(assert (= x1772 (and x1460 x4123)))
(assert (x3087 x1591))
(assert (= x2691 (and (not x4123) x1460)))
(assert (= (and x3196 x3379) x3263))
(assert (x3087 x2378))
(assert (= (and x3664 x3861) x3848))
(assert (= (not (and (not x4045) (not x1306))) x2190))
(assert (= x2881 (and x2516 x4331)))
(assert (= (=> (and (= (= 0 x265) x3818) (or (not x3818) x3818)) x1869) x2200))
(assert (x3087 x3906))
(assert (= x4546 (and x1273 x3339)))
(assert (x3087 x1081))
(assert (= (x1315 (x350 x4105 1)) (+ 1 (x1315 x4105))))
(assert (x136 x1165))
(assert (= (=> (= (= 0 x2821) x4643) (and (=> (and (not x4643) (= x1691 (or (> x2341 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2341 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2341 32))))) (and (=> (and (and (= x3105 32) (= 1 x3327) (= x4212 x2975)) (not x1691)) x2235) (=> (and (= x4212 x727) x1691) x4890))) (=> (and (= x4212 x727) x4643) x4890))) x1652))
(assert (= x1409 (x1315 (x1970 x1409))))
(assert (= x2929 (not (and (>= x1424 0) (< x1424 1461501637330902918203684832716283019655932542976) (<= x1424 1461501637330902918203684832716283019655932542975) (= (x350 x2282 1) x4119) (= (x1068 x4119) x1424) (= (x709 (x1970 x1341) x4088 0) x2282)))))
(assert (= x2116 (and (not x3674) x4239)))
(assert (x3087 x2555))
(assert (= (and (not x4215) x4871) x2651))
(assert (x3087 x380))
(assert (=> (<= x2238 10000) (= (x1970 x2238) (x2553 x2238))))
(assert (x136 x3804))
(assert (x3087 x4182))
(assert (x3087 x2054))
(assert (= (+ 1 (x1315 x4651)) (x1315 (x350 x4651 1))))
(assert (x3087 x4767))
(assert (= x2340 (and (not x672) x739)))
(assert (x3087 x2677))
(assert (x3087 x271))
(assert (= (or (and x2739 (not x3818)) x3625) x2145))
(assert (x3087 x4693))
(assert (x3087 x2126))
(assert (=> (<= x3321 10000) (= (x2553 x3321) (x1970 x3321))))
(assert (x3087 x1898))
(assert (x3087 x2868))
(assert (x3087 x3849))
(assert (x136 x2711))
(assert (=> (>= 10000 x4832) (= (x2553 x4832) (x1970 x4832))))
(assert (x3087 x1732))
(assert (= (x1315 (x350 x1487 2)) (+ (x1315 x1487) 2)))
(assert (x3087 x1679))
(assert (= (=> (and (= x4898 x1898) (= x4493 x3272)) x2710) x2414))
(assert (x3087 x2117))
(assert (= (x1315 (x1970 x4002)) x4002))
(assert (= x1033 (and x1273 (not x3339))))
(assert (= x1515 (and x2622 x570)))
(assert (x3087 x3497))
(assert (x3087 x3295))
(assert (x3087 x2904))
(assert (= (or x1319 x1675) x2294))
(assert (x3087 x3912))
(assert (= x400 (and (not x2524) x4279)))
(assert (x3087 x4507))
(assert (= (and (not x627) x3023) x2817))
(assert (= x1866 (or x481 x2766 (and x1428 x4721) (and x4414 x2698) x3198)))
(assert (x3087 x340))
(assert (x3087 x4585))
(assert (= (=> (and (= x1996 x3812) (= x1118 x2053)) x3246) x4441))
(assert (= (x1315 (x350 x1389 1)) (+ 1 (x1315 x1389))))
(assert (x3087 x4377))
(assert (x3087 x2310))
(assert (= x3139 (=> (and (= x1493 x3604) (= x3746 0)) x2374)))
(assert (= (and x1639 x4027) x2766))
(assert (x3087 x330))
(assert (= (and (not x2328) x634) x3401))
(assert (x3087 x4709))
(assert (x3087 x171))
(assert (x3087 x1907))
(assert (= (and x2992 x509) x2152))
(assert (x3087 x2734))
(assert (x136 x1932))
(assert (x3087 x4131))
(assert (= (=> (and (= x3707 x125) (= x2409 0)) x31) x2483))
(assert (= (x1315 (x350 x1840 2)) (+ (x1315 x1840) 2)))
(assert (= x3969 (and x397 x101)))
(assert (= x3733 (and x4417 x3988)))
(assert (= x179 (and (not x2971) x1060)))
(assert (= x3727 (and x679 x4702)))
(assert (x3087 x3498))
(assert (= x3352 (and x105 x17)))
(assert (= x3276 (and x3170 (not x4789))))
(assert (= (x1315 (x350 x1148 1)) (+ (x1315 x1148) 1)))
(assert (x136 x2555))
(assert (= x2027 (and x22 (not x904))))
(assert (x3087 x1820))
(assert (x3087 x1480))
(assert (x3087 x1330))
(assert (=> (>= 10000 x329) (= (x1970 x329) (x2553 x329))))
(assert (=> (<= x637 10000) (= (x1970 x637) (x2553 x637))))
(assert (= (and (not x2355) x1496) x2738))
(assert (= x1289 (and x1294 x313)))
(assert (x3087 x3622))
(assert (= (and x1039 x1094) x1060))
(assert (=> (<= x778 10000) (= (x2553 x778) (x1970 x778))))
(assert (x3087 x4473))
(assert (= x796 (and x1450 x4011)))
(assert (= x3529 (or (and x475 x2346) x1177 (and x1097 x3400) x3216 x3727)))
(assert (= x931 (and x2549 (not x3233))))
(assert (= x2420 (and x3400 (not x1097))))
(assert (x3087 x1713))
(assert (x3087 x4070))
(assert (= (x1315 (x1970 x3914)) x3914))
(assert (= (and x4841 x2940) x3535))
(assert (x3087 x2409))
(assert (= (x1970 10742207464693106059581744854972325794081737850190833080250671788038469713920) (x2553 10742207464693106059581744854972325794081737850190833080250671788038469713920)))
(assert (= 2134560854 (x1315 (x2553 2134560854))))
(assert (x3087 x2009))
(assert (= x1994 (and (not x1459) x1241)))
(assert (= x3419 (=> (and (or (and (and (= x2936 x3642) (= 0 x1627)) (not x3642)) (and (and (= x3202 (= x3397 0)) (= x4067 (x350 x2433 1)) (>= x3397 0) (> 1461501637330902918203684832716283019655932542976 x3397) (= (not x3202) x2936) (= x3397 x1627) (= x3397 (x34 x4067)) (= x2433 (x709 (x1970 x677) (x2553 157) 0)) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x677) (<= x3397 1461501637330902918203684832716283019655932542975)) x3642)) (and (= x3126 (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x632)) (= x632 (x3164 (+ 31 x1077))) (not (= x4664 0)) (= (x450 x4427) x389) (= (x2843 x3539) x2699) (= x3642 (< 0 x3562)) (= x2077 (x3164 (+ x3539 x3126))) (= x4877 (x371 1461501637330902918203684832716283019655932542975 x1305)) (>= x389 0) (= (x709 (x1970 x4877) (x2553 165) 0) x4427) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1077) (and (< x1077 32) (= true (<= x1077 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (<= x389 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x2003)))
(assert (x3087 x126))
(assert (x3087 x2233))
(assert (x3087 x4832))
(assert (= (x1315 (x1970 x517)) x517))
(assert (= (and x470 x1896) x2163))
(assert (=> (<= x2636 10000) (= (x1970 x2636) (x2553 x2636))))
(assert (x3087 x40))
(assert (x3087 x1819))
(assert (x3087 x1215))
(assert (x3087 x1726))
(assert (= x767 (x1315 (x1970 x767))))
(assert (x3087 x3105))
(assert (x3087 x2576))
(assert (= x2439 (and x352 x3159)))
(assert (x3087 x1551))
(assert (x3087 x3071))
(assert (x3087 x1617))
(assert (x3087 x2283))
(assert (x3087 x3838))
(assert (= (and x4678 (not x2268)) x2751))
(assert (= x195 (or x2619 x3701)))
(assert (x3087 x524))
(assert (x1816 x1510))
(assert (x3087 x149))
(assert (= 1038142104 (x1315 (x2553 1038142104))))
(assert (x3087 x2985))
(assert (x3087 x3209))
(assert (x3087 x127))
(assert (x136 x103))
(assert (= (x1315 (x350 x1821 2)) (+ (x1315 x1821) 2)))
(assert (= x1441 (=> (= x2475 (= x171 0)) (and (=> x2475 x1248) (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1848) (and (= true (<= x1848 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1848))) x3299) (not x2475)) (and (=> x3299 x1248) (=> (and (and (>= x3782 0) (<= x3782 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1853 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2319))) (= (> x3782 x1853) x1977)) (not x3299)) (and (=> x1977 x1248) (=> (and (and (<= 0 x2129) (= (< x1853 x2129) x4063) (= x2129 (x2136 x1127)) (= x3847 (x3164 (+ x2319 x3782))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2129) (= (x709 (x1970 x705) (x2553 5) 0) x1127)) (not x1977)) (and (=> (and (not x4063) (and (= x4170 1) (= 32 x4175) (= (x3164 (+ x2319 x2129)) x3383))) x4007) (=> x4063 x1248)))))))))))
(assert (= (and x2805 x1490) x4356))
(assert (= x325 (and (not x795) x3149)))
(assert (=> (>= 10000 x677) (= (x1970 x677) (x2553 x677))))
(assert (x3087 x3987))
(assert (= (or x4165 x2933) x4406))
(assert (x3087 x752))
(assert (x3087 x1619))
(assert (x3087 x4491))
(assert (x136 x2043))
(assert (x3087 x4190))
(assert (= x2550 (and x1043 x3629)))
(assert (x3087 x3461))
(assert (x136 x728))
(assert (= x4589 (and x3240 (not x4682))))
(assert (x3087 x3513))
(assert (x3087 x4631))
(assert (= (and x4732 x3352) x2066))
(assert (x3087 x1567))
(assert (= x855 (or x2067 x1938)))
(assert (= (and (not x4886) x67) x442))
(assert (= x3894 (and x3574 x4679)))
(assert (= x2940 (and x2861 (not x3873))))
(assert (= x160 x4230))
(assert (x3087 x2652))
(assert (= x645 (and x1274 (not x1486))))
(assert (= x1552 (or x3572 x4548)))
(assert (x3087 x405))
(assert (=> (>= 10000 x2532) (= (x1970 x2532) (x2553 x2532))))
(assert (=> (<= x517 10000) (= (x1970 x517) (x2553 x517))))
(assert (x3087 x991))
(assert (x3087 x1122))
(assert (x3087 x1750))
(assert (=> (>= 10000 x4854) (= (x1970 x4854) (x2553 x4854))))
(assert (= (x1315 (x1970 x420)) x420))
(assert (= x2910 (and x3047 (not x3870))))
(assert (= x3869 (and (not x3471) x1016)))
(assert (= (or x4164 x1035) x2970))
(assert (= (or (and x988 (not x4616)) x4096 (and x4448 (not x4816)) x3465 (and x1408 x2038) (and x3533 x3317)) x2276))
(assert (= x4448 (and x988 x4616)))
(assert (x3087 x1216))
(assert (x3087 x3668))
(assert (= (+ 1 (x1315 x2649)) (x1315 (x350 x2649 1))))
(assert (= (and x3462 x1166) x4056))
(assert (= (and (=> (and (and (= x1835 x3562) (= x3417 x966) (= x3816 x514)) (not x2516)) x1543) (=> (and (= (= x1180 0) x3224) x2516) (and (=> (and x3224 (and (= 0 x4329) (= x630 x3816))) x3580) (=> (and (and (or (and (not x164) (and (or (and (and (= x2833 (= x3939 x3581)) (and x2833 (and (<= x62 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x1077) (not (< x608 2217467699)) (= 2858086653 x608) (not (< x3019 4)) (>= x62 0) (= (x4396 (x1970 x3939)) x312) (= 4 x3019) (= x3019 x2497) (= x4664 1) (not (> 2691771752 x608)) (not (= x608 2796547477)) (not (= 2691771752 x608)) (> 2929553584 x608) (< 0 x312) (not (= 2835717307 x608)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x234)))) (not x3288)) (and x3288 (and (>= x3349 0) (= x650 (x4396 (x1970 x3111))) (< x429 2929553584) (not (= x429 2796547477)) (< 0 x650) (= x4664 1) (= x1622 4) (not (< x429 2691771752)) (= x1622 x2497) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x2406) (not (< x1622 4)) (not (= 2835717307 x429)) (not (< x429 2217467699)) (= x1077 32) (not (= 2691771752 x429)) (<= x3349 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x429 2858086653)))) (= x3288 (= x3111 x3581)))) (and (and (= x2497 x1279) (< 0 x1948) (not (> 2691771752 x2773)) (> 2929553584 x2773) (not (> 4 x1279)) (not (< x2773 2217467699)) (= 1 x4664) (>= x4902 0) (= x2859 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (= 2835717307 x2773)) (not (= x2773 2796547477)) (= 2858086653 x2773) (<= x4902 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4396 (x1970 x4345)) x1948) (not (= x2773 2691771752)) (= 4 x1279) (= 32 x1077)) x164)) (and (= (x3164 (+ x3816 160)) x3539) (= x2497 4) (= x164 (= x3581 x4345)) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x3581))) (not x3224)) x3419)))) x2322))
(assert (= x944 (and x1504 x2979)))
(assert (x3087 x3994))
(assert (= x2123 (and (not x819) x3547)))
(assert (= (x1315 (x1970 x3210)) x3210))
(assert (= x1602 (=> (and (= x4330 x1078) (= x4535 0)) x3459)))
(assert (x3087 x4494))
(assert (= x3721 x4722))
(assert (= (and (not x3907) x4280) x2223))
(assert (= (and x4432 x1012) x2416))
(assert (= (and x4104 x2660) x3280))
(assert (= (and x2491 x4422) x4185))
(assert (= x4751 (or x4595 x1542 x2269)))
(assert (x136 x3350))
(assert (= x1427 (x1315 (x1970 x1427))))
(assert (x3087 x2681))
(assert (= x3630 (and x4721 (not x1428))))
(assert (x1816 x2128))
(assert (x3087 x3939))
(assert (x3087 x1853))
(assert (x3087 x3060))
(assert (= (and x4224 x4078) x2325))
(assert (= (and x3977 x4108) x204))
(assert (x3087 x632))
(assert (x487 x595))
(assert (= (x1315 (x1970 x3686)) x3686))
(assert (x136 x3416))
(assert (= (and x3438 (not x261)) x3940))
(assert (x487 x323))
(assert (x3087 x498))
(assert (= (or x4753 x2250) x653))
(assert (= (+ 1 (x1315 x2244)) (x1315 (x350 x2244 1))))
(assert (= (or x4436 x2603 x3735 x4410 x935 x1161) x4863))
(assert (x3087 x3138))
(assert (x3087 x4061))
(assert (x3087 x4249))
(assert (= (x1315 (x350 x414 1)) (+ (x1315 x414) 1)))
(assert (x3087 x918))
(assert (= (x1315 (x1970 x636)) x636))
(assert (x3087 x2299))
(assert (= (and x4327 x4835) x3654))
(assert (x3087 x3801))
(assert (x3087 x33))
(assert (= x4316 (or x184 x2337)))
(assert (= x1368 (and x569 (not x642))))
(assert (= (x1315 (x350 x1536 2)) (+ (x1315 x1536) 2)))
(assert (= x3301 (or x1646 x3323)))
(assert (x3087 x4543))
(assert (= (=> (and (= (= x880 0) x3856) (or (not x3856) x3856)) x4849) x170))
(assert (= x4298 (and x2212 x2492)))
(assert (= x1235 (and x3471 x1016)))
(assert (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x1315 (x2553 10936679508223583803006762266923565500374401145016910147028117655998246682624))))
(assert (x3087 x3706))
(assert (x3087 x1999))
(assert (x3087 x1660))
(assert (= (and (not x3597) x1031) x1037))
(assert (x3087 x1024))
(assert (= x4705 (and x4467 (not x2815))))
(assert (x3087 x762))
(assert (= (x1315 (x350 x1509 1)) (+ 1 (x1315 x1509))))
(assert (x3087 x996))
(assert (x3087 x3929))
(assert (= x4515 (and (not x883) x2442)))
(assert (x3087 x2508))
(assert (x3087 x912))
(assert (= x3833 (and x2399 x3880)))
(assert (x3087 x3195))
(assert (x3087 x280))
(assert (x136 x1247))
(assert (= (and x4383 x1296) x1758))
(assert (= x1356 (and x3722 x3467)))
(assert (x3087 x1260))
(assert (= (x1315 (x1970 x1710)) x1710))
(assert (x3087 x3093))
(assert (= x2230 (=> (and (or (and (not x888) (= x4116 0)) (and x888 (= x2289 x4116))) (and (>= x2271 0) (= (> x2289 x2271) x888) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2271))) x2809)))
(assert (= x3963 (and (not x1327) x3460)))
(assert (x3087 x4656))
(assert (x3087 x3468))
(assert (= (and (not x791) x2252) x1762))
(assert (= x3183 (and x4735 x91)))
(assert (x3087 x3791))
(assert (= x1839 (and x4644 x4723)))
(assert (x3087 x1681))
(assert (x3087 x2582))
(assert (x3087 x3402))
(assert (= x4798 (and x776 x3544)))
(assert (= (+ (x1315 x4296) 1) (x1315 (x350 x4296 1))))
(assert (= x4536 (x1315 (x1970 x4536))))
(assert (x3087 x4094))
(assert (= x432 (and x4752 (not x1977))))
(assert (= x1385 (and (not x3040) x3592)))
(assert (= x1627 (x1315 (x1970 x1627))))
(assert (x3087 x4050))
(assert (= x4686 (and x649 (not x3404))))
(assert (= (and x2259 x3450) x1086))
(assert (x487 1461501637330902918203684832716283019655932542975))
(assert (x3087 x4776))
(assert (x3087 x1000))
(assert (= (and x4068 (not x3325)) x1066))
(assert (= x1799 (and x438 x3366)))
(assert (= x652 (and x2377 x4593)))
(assert (x3087 x306))
(assert (= x2101 (and x1483 x668)))
(assert (x3087 x3763))
(assert (x3087 x1927))
(assert (= x3379 (and x2517 x1624)))
(assert (= (or (and x4043 (not x1548)) x4225) x2573))
(assert (x3087 x4511))
(assert (= (x1315 (x1970 x2886)) x2886))
(assert (x3087 x2151))
(assert (= (x1315 (x1970 x4768)) x4768))
(assert (= x935 (and x700 x3790)))
(assert (= x3547 (and (not x1858) x1766)))
(assert (x3087 x1957))
(assert (= x1275 x2176))
(assert (=> (>= 10000 x3312) (= (x2553 x3312) (x1970 x3312))))
(assert (= (=> (and (= x2863 (= x1080 0)) (or x2863 (not x2863))) x4237) x2882))
(assert (x3087 x3971))
(assert (x3087 x1922))
(assert (= x3132 (and (not x3541) x2027)))
(assert (= (and x4705 x2275) x4901))
(assert (x3087 x3383))
(assert (x3087 x4570))
(assert (= x2492 (or x4540 x2416)))
(assert (x3087 x3318))
(assert (x3087 x2493))
(assert (x3087 x1398))
(assert (x3087 x3794))
(assert (= x217 (and x4545 (not x893))))
(assert (=> (>= 10000 x3226) (= (x1970 x3226) (x2553 x3226))))
(assert (x3087 x1756))
(assert (x3087 x3019))
(assert (x136 x290))
(assert (x3087 x460))
(assert (x3087 x56))
(assert (= (=> (and (= x3745 x3138) (= 0 x1245)) x1255) x1321))
(assert (= (=> (= x3556 (= x2922 0)) (and (=> (and (= x3863 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2057) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2057) true) (> 32 x2057)))) (not x3556)) (and (=> (and (not x3863) (and (= x3590 x4530) (= x4154 x1592) (= x1744 1))) x2740) (=> (and (= x812 x3590) x3863) x3766))) (=> (and (= x3590 x812) x3556) x3766))) x281))
(assert (x3087 x932))
(assert (x3087 x3561))
(assert (=> (<= x2752 10000) (= (x2553 x2752) (x1970 x2752))))
(assert (= (and x1203 (not x3749)) x1396))
(assert (= x2329 (and x343 x1326)))
(assert (= x3739 (and x948 x4750)))
(assert (= (or x1154 x2997) x1542))
(assert (x3087 x1995))
(assert (= (x1315 (x1970 x1845)) x1845))
(assert (x3087 x462))
(assert (= (and x3130 x1571) x1337))
(assert (x3087 x1730))
(assert (=> (<= x4012 10000) (= (x2553 x4012) (x1970 x4012))))
(assert (x3087 x377))
(assert (= x989 (and x4836 (not x2855))))
(assert (= (x2553 72570022874062638528011751457397263716769196454539065078543251854057308946432) (x1970 72570022874062638528011751457397263716769196454539065078543251854057308946432)))
(assert (x3087 x2716))
(assert (= (and x164 x307) x3008))
(assert (= x2905 (and x4406 x3422)))
(assert (x3087 x4811))
(assert (= (x1315 (x1970 x3416)) x3416))
(assert (= x1450 (and (not x509) x2992)))
(assert (= x3066 (and x4638 x2838)))
(assert (= (or x3265 x2201) x412))
(assert (x4604 x4001 x1980))
(assert (x1816 x2681))
(assert (= x3281 (=> (and (= (x1470 452) x1209) (= (x3164 (+ 31 x4862)) x1510) (not (= 0 x3178)) (= (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1510) x581) (>= 1461501637330902918203684832716283019655932542975 x1209) (= x1122 x4158) (= x1978 x1209) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4862)) (> 32 x4862)) (> x4862 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x3164 (+ 452 x581)) x1122)) x4794)))
(assert (= x83 (and x438 (not x3366))))
(assert (= (x1315 (x350 x4575 1)) (+ (x1315 x4575) 1)))
(assert (= (x1315 (x1970 x1165)) x1165))
(assert (x3087 x2478))
(assert (= (x1315 (x2553 2236579515)) 2236579515))
(assert (x3087 x4158))
(assert (=> (>= 10000 x1305) (= (x1970 x1305) (x2553 x1305))))
(assert (= (or x3700 x571) x4532))
(assert (x3087 x3503))
(assert (x3087 x4))
(assert (= x205 (and x4265 (not x3018))))
(assert (x3087 x3690))
(assert (= x1274 (and (not x4095) x2848)))
(assert (x3087 x120))
(assert (x3087 x1512))
(assert (= x4013 (=> (and (= x512 (= x4690 0)) (or (and x512 (= x586 (x350 x4088 2))) (and (= x2707 (x709 (x1970 x4690) x4088 0)) (not x512)))) x507)))
(assert (x3087 x46))
(assert (= (x1315 (x1970 x2251)) x2251))
(assert (x136 x1341))
(assert (x136 x2959))
(assert (x3087 x599))
(assert (x3087 x1971))
(assert (x3087 x1782))
(assert (= (=> (and (or (and (= x4097 (x709 (x1970 x2959) x334 0)) (not x445)) (and x445 (= x2323 (x350 x334 2)))) (= x445 (= x2959 0))) x1903) x2697))
(assert (= x4135 (and x4541 (not x3611))))
(assert (= x1572 (and x4336 x1445)))
(assert (x3087 x3255))
(assert (x3087 x1405))
(assert (x3087 x387))
(assert (x3314 x3979))
(assert (= (and (not x1340) x891) x2853))
(assert (x136 x421))
(assert (x3087 x3754))
(assert (x3087 x2319))
(assert (= (+ 1 (x1315 x2401)) (x1315 (x350 x2401 1))))
(assert (= (and x1301 x2534) x3167))
(assert (= x404 (and (not x4036) x574)))
(assert (= (x1315 (x1970 x3728)) x3728))
(assert (= x4439 (and x1810 x440)))
(assert (= x127 (x1315 (x1970 x127))))
(assert (x3087 x3604))
(assert (x3087 x3321))
(assert (= (x1315 (x1970 x781)) x781))
(assert (= (x1315 (x2553 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x3087 x2304))
(assert (x3087 x2222))
(assert (x3087 x1546))
(assert (x3087 x3111))
(assert (= (x2553 26959946667150639794667015087019630673637144422540572481103610249215) (x1970 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x2622 (and (not x4732) x3352)))
(assert (x3087 x3057))
(assert (x3087 x2128))
(assert (= (x1315 (x1970 x3324)) x3324))
(assert (= x3618 (and (not x4109) x1211)))
(assert (x136 x3458))
(assert (= x3400 (and x4702 (not x679))))
(assert (= (+ 1 (x1315 x4088)) (x1315 (x350 x4088 1))))
(assert (= (x1315 (x350 x2246 1)) (+ 1 (x1315 x2246))))
(assert (x3087 x1991))
(assert (= (x1315 (x1970 x2532)) x2532))
(assert (= (x2553 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x1970 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (x3087 x1246))
(assert (= (x1315 (x1970 x4494)) x4494))
(assert (= (and x4275 x722) x1296))
(assert (x3087 x842))
(assert (x3087 x2211))
(assert (= x4622 (and x1891 x4312)))
(assert (x3087 x831))
(assert (= (and (not x4784) x808) x316))
(assert (= (or x2198 x4018) x4331))
(assert (= (and x1184 x3080) x2361))
(assert (= x309 (or x821 x2180)))
(assert (= (x2553 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1970 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x3087 x2513))
(assert (= (x1970 18446744073709551615) (x2553 18446744073709551615)))
(assert (x3087 x3619))
(assert (=> (<= x3402 10000) (= (x2553 x3402) (x1970 x3402))))
(assert (x3087 x3370))
(assert (x3087 x3308))
(assert (x3087 x181))
(assert (= 0 (x1054 416)))
(assert (x3087 x4528))
(assert (= (or x2010 x195 x872) x2739))
(assert (= x2174 (=> (and (= x2341 x1693) (= x2821 x56)) x4033)))
(assert (= (and (not x2878) x1239) x3722))
(assert (=> (>= 10000 x3324) (= (x1970 x3324) (x2553 x3324))))
(assert (x3087 x767))
(assert (=> (<= x2637 10000) (= (x2553 x2637) (x1970 x2637))))
(assert (x3087 x2021))
(assert (x3087 x1518))
(assert (x3087 x4768))
(assert (= (and x4751 (not x4588)) x1282))
(assert (= x271 (x1315 (x1970 x271))))
(assert (= x4179 (and x1620 x3644)))
(assert (x3087 x3931))
(assert (= x798 (and (not x2025) x3102)))
(assert (x3087 x3636))
(assert (= x31 (=> (and (= x125 x2950) (= x2409 x1080)) x2882)))
(assert (= (=> (and (= x123 x2097) (= x2477 x3440) (= x511 x3037) (= x3586 x3902) (= x51 x3375)) x3506) x3886))
(assert (= (x1315 (x2553 157198259)) 157198259))
(assert (x3087 x2412))
(assert (x3087 x3226))
(assert (= (and x3443 (not x3222)) x2430))
(assert (x3087 x3972))
(assert (= (=> (and (= x4416 x3713) (= x880 x2117)) x170) x4098))
(assert (x3087 x4783))
(assert (x3087 x2498))
(assert (= x2551 (and x4539 (not x367))))
(assert (= x1496 (or x3711 x258)))
(assert (= x4398 (or x4772 x1520)))
(assert (x3087 x947))
(assert (x3087 x1357))
(assert (x3087 x1020))
(assert (= (and x2816 x4056) x641))
(assert (x3087 x2257))
(assert (= x2834 (and x948 (not x4750))))
(assert (= x2619 (or (and x791 x2252) (and (not x4401) x1762))))
(assert (= (and x3424 x1303) x3303))
(assert (x3087 x536))
(assert (x3087 x3350))
(assert (x3087 x2559))
(assert (= (and x338 x2400) x1895))
(assert (x3087 x3283))
(assert (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x1315 (x2553 76833804140862540057647519496925185374644862498684814347804924264468996685824))))
(assert (x3087 x2356))
(assert (x3087 x698))
(assert (= x2473 (and x2863 x2537)))
(assert (x3087 x2693))
(assert (x3087 x319))
(assert (x3087 x600))
(assert (= (x1970 115792089237316195423570985008687907853269984665640564039457) (x2553 115792089237316195423570985008687907853269984665640564039457)))
(assert (= (+ 2 (x1315 x2364)) (x1315 (x350 x2364 2))))
(assert (= x3720 (and x4556 x4496)))
(assert (x3087 x1080))
(assert (x3087 x2191))
(assert (x3087 x3709))
(assert (x136 x1786))
(assert (= x2901 (x1315 (x1970 x2901))))
(assert (x3087 x4773))
(assert (x3087 x1952))
(assert (x3087 x2165))
(assert (x3087 x2626))
(assert (= (and x390 x4364) x3261))
(assert (x3087 x1830))
(assert (x3087 x658))
(assert (x3087 x3799))
(assert (x3087 x4083))
(assert (= x68 (=> (and (= x1598 x3337) (= x2042 x2509)) x2234)))
(assert (= (and (not x2487) x4688) x4648))
(assert (x3087 x3663))
(assert (x3087 x483))
(assert (x3087 x2343))
(assert (= x1707 (x1315 (x1970 x1707))))
(assert (= x4245 (and x1586 (not x1562))))
(assert (x3087 x402))
(assert (x3087 x3822))
(assert (x3087 x4253))
(assert (x3087 x13))
(assert (= x519 (x1315 (x1970 x519))))
(assert (= (and (not x2562) x3456) x299))
(assert (= (x1315 (x1970 x4457)) x4457))
(assert (= (x1315 (x2553 2030502250)) 2030502250))
(assert (= x3460 (and (not x2338) x665)))
(assert (= (and (not x352) x3159) x3435))
(assert (x3087 x963))
(assert (x3087 x3476))
(assert (=> (<= x2711 10000) (= (x1970 x2711) (x2553 x2711))))
(assert (= (and (not x361) x2725) x523))
(assert (x3087 x2028))
(assert (= (and x396 x3183) x4307))
(assert (x3087 x4204))
(assert (x3087 x2986))
(assert (x3087 x832))
(assert (x3087 x1656))
(assert (x3087 x4345))
(assert (x3087 x4202))
(assert (x3087 x1787))
(assert (= x4120 (x1315 (x1970 x4120))))
(assert (= (or x2432 x2980 x238 x4483) x1293))
(assert (= (and x2987 x174) x4018))
(assert (x3087 x1062))
(assert (x3087 x3548))
(assert (x3087 x1724))
(assert (= (and x2044 (not x2112)) x3700))
(assert (= (and (not x531) x1433) x4818))
(assert (x3087 x2643))
(assert (=> (<= x3350 10000) (= (x1970 x3350) (x2553 x3350))))
(assert (x3087 x4370))
(assert (x3087 x2271))
(assert (= x2088 (and (not x2943) x645)))
(assert (x3087 x983))
(assert (= x2612 (x1315 (x1970 x2612))))
(assert (x3087 x1757))
(assert (x3087 x4116))
(assert (= (=> (and (or (and (= (x1970 x4585) x2314) x101) (and (and (= (x371 1461501637330902918203684832716283019655932542975 x1305) x310) (= (x2143 x2807) x1663) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x3237) (= x2601 (x371 1461501637330902918203684832716283019655932542975 x620)) (= x1551 (x3164 (+ 1 x1663))) (= x2807 x2314) (= (x709 (x1970 x2601) (x2553 161) 0) x2807) (= x2493 (x371 1461501637330902918203684832716283019655932542975 x620))) (not x101))) (and (>= 1461501637330902918203684832716283019655932542975 x1726) (not (= x619 2023533118)) (<= x77 1461501637330902918203684832716283019655932542975) (> 256 x2254) (= x856 (not x2138)) x2342 (<= x1305 1461501637330902918203684832716283019655932542975) (>= 255 x682) (<= 0 x4475) (= x4800 x3110) (= x996 x3753) (= x111 (x709 (x1970 x4585) x2503 0)) (= x2532 x172) (>= 255 x1947) (not (> 4 x601)) x1717 (= (x4396 (x1970 x705)) x4468) (< x619 2362143243) (not (= x3111 x2532)) (<= x2670 255) (<= 0 x3997) (not (= x3939 x2532)) (= x1381 (not x4625)) (= (not x3984) x1082) (<= 0 x2957) (= (x2070 x118) x2254) (>= x2903 0) (>= 18446744073709551615 x3519) (>= x4149 0) (not (= x3939 x71)) (>= x726 0) (= x3278 x183) (= x2503 (x709 (x1970 x3115) (x2553 160) 0)) (= (> (x4396 (x1970 x2532)) 0) x2628) (<= 0 x2803) (<= x3799 1461501637330902918203684832716283019655932542975) (>= 255 x2183) (<= x2721 1461501637330902918203684832716283019655932542975) (not (= x2063 x3939)) (= x655 x3623) (<= x1102 1461501637330902918203684832716283019655932542975) (<= x737 1461501637330902918203684832716283019655932542975) (>= 255 x1379) (> x71 0) (>= 1461501637330902918203684832716283019655932542975 x4050) (> 256 x780) (> 256 x1991) (= (not x2811) x3110) (= x4756 5) (not (= x4570 0)) (= x2093 x2763) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4017)) (< x4017 160)) (> x4017 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x619 2030502250)) (= x4017 (x1595 (- x601 4))) (>= x301 0) (= x1305 x1750) (> x3939 0) (= x1381 x4577) (= x183 (not x2605)) (< 0 x2063) (= x368 x2214) (>= x4081 0) (not (= x2532 x2612)) (<= 0 x1400) (< 0 x4494) (= (not x43) x2613) (>= x2594 0) x1915 (<= 0 x1991) (> x2612 0) (= x349 x2612) (= x4625 (= x4081 0)) (>= 1461501637330902918203684832716283019655932542975 x3997) (>= 1461501637330902918203684832716283019655932542975 x2063) (<= x1400 1461501637330902918203684832716283019655932542975) (= (x2084 128) x3583) (<= 0 x4050) (= x780 (x4594 x111)) (= x1900 (x4613 (x1970 x4494))) (not (= x3939 x705)) (= x354 x1180) (<= 0 x2902) (= x2335 x1082) (not (= x2532 x4345)) (<= 0 x835) (> x4468 0) (not (= x705 x4345)) (= x4080 x1704) (<= 0 x194) (= x1738 (x4613 (x1970 x705))) (>= 1461501637330902918203684832716283019655932542975 x835) (not (= x71 x3111)) (<= x349 1461501637330902918203684832716283019655932542975) (>= x1738 0) (not (= x2063 x2612)) (= x4585 (x371 1461501637330902918203684832716283019655932542975 x620)) (<= x1001 1461501637330902918203684832716283019655932542975) (not (= x3111 x4494)) (< x2183 256) (>= 1461501637330902918203684832716283019655932542975 x3753) (>= 255 x3036) (= x1554 (x4613 (x1970 x2063))) (>= 255 x2594) (> x705 0) (not (= x3939 x3111)) (>= 255 x2902) (<= x2083 255) (not (= x4345 x3939)) (>= 255 x2254) (<= 0 x4473) (= x118 (x709 (x1970 x1305) (x2553 168) 0)) (>= 255 x3188) (<= 0 x4504) (<= 0 x2670) (not (= x2063 x705)) (>= 1461501637330902918203684832716283019655932542975 x705) (= x101 (< 0 x780)) (<= x3779 1461501637330902918203684832716283019655932542975) (<= 0 x330) (= x4061 (x4613 (x1970 x3939))) (>= x3779 0) (not (= x71 x705)) x2628 (= x301 (x4613 (x1970 x4345))) (not (= x71 x2063)) (>= x716 0) (>= 18446744073709551615 x894) (>= 255 x4767) (>= x3188 0) (< 0 x4345) (= x2605 (= x3036 0)) (< 0 x3111) (= x2903 (x4613 (x1970 x71))) (<= x4505 18446744073709551615) (not (= x2612 x3939)) x3983 (>= x2917 0) (<= 0 x3846) (<= 0 x2196) (>= 1461501637330902918203684832716283019655932542975 x599) (= x982 x2613) (>= x894 0) (= false x2530) (>= 1461501637330902918203684832716283019655932542975 x2532) (= x4475 (x252 x118)) (= (> (x4396 (x1970 x2612)) 0) x1717) (not (= x2532 x71)) (not (= x71 x4345)) (= 0 x2931) (<= 0 x1001) (>= x755 0) (>= 1461501637330902918203684832716283019655932542975 x1444) (<= x780 255) (not (= x2763 0)) (not (= x4494 x2063)) (= x1180 x4303) (<= 0 x3036) (<= 0 x2254) (>= x3906 0) (= x3036 (x1913 x118)) (>= 18446744073709551615 x3906) (= false x1558) (>= 1461501637330902918203684832716283019655932542975 x1798) (< x4475 256) (>= x1820 0) (not (= x705 x3111)) (= x1820 (x4613 (x1970 x3111))) (<= x3939 1461501637330902918203684832716283019655932542975) (= x3292 x4268) (not (= x71 x4494)) (= x2898 x856) (<= 0 x2505) (>= 255 x4149) (>= x3753 0) (<= x620 1461501637330902918203684832716283019655932542975) (= 2245473101 x619) (>= x2007 0) (>= x3623 0) (= (x4613 (x1970 x2532)) x2007) (>= 255 x1739) (not (= x4345 x2063)) (= (not x2541) x3292) (= (x3164 (+ x4070 24044834009420335638544845215851342251227478490780828673611325350056707489792)) x19) (< x619 2678788150) (<= 0 x2083) (< x4081 256) (>= x3221 0) (= x1305 x3636) (>= x349 0) (= x3983 (> (x4396 (x1970 x3111)) 0)) (>= 1461501637330902918203684832716283019655932542975 x716) (<= x1119 1461501637330902918203684832716283019655932542975) (= x3785 x2763) (>= x682 0) (= x2798 (x822 416)) (= x368 x3332) (not (= x2612 x4494)) (<= x71 1461501637330902918203684832716283019655932542975) (= x2342 (< 0 (x4396 (x1970 x705)))) (<= x2803 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3623) (<= 0 x77) (>= 1461501637330902918203684832716283019655932542975 x726) (not (= x2532 x705)) (>= 1461501637330902918203684832716283019655932542975 x330) (not (= x3111 x2612)) (= x1704 x737) (not (= x3111 x2063)) x2158 (>= 1461501637330902918203684832716283019655932542975 x368) (= x1305 x4409) (> x3583 0) (<= x4366 18446744073709551615) (= (x902 x118) x4081) (<= x2612 1461501637330902918203684832716283019655932542975) (= (x2084 160) x2648) (<= x3846 18446744073709551615) (>= 255 x2102) (= (x4231 x118) x4767) (not (= x4494 x705)) x256 (>= x1900 0) (>= x172 0) x4000 (>= 1461501637330902918203684832716283019655932542975 x4494) (not (= x2612 x71)) (= x4000 (< 0 (x4396 (x1970 x71)))) (= (= x2254 0) x43) (<= x290 1461501637330902918203684832716283019655932542975) (<= 0 x737) (= x2648 0) (not (= x2532 x2063)) (= x2138 (= x4475 0)) (not (< x619 2023533118)) (<= x4081 255) (= (< 0 (x4396 (x1970 x4345))) x1527) (<= 0 x1444) x1527 (= (= 0 x2183) x2541) (>= x1726 0) (>= x4767 0) (>= x3519 0) (<= 0 x3480) (<= x4475 255) (= x1480 x2931) (= (> (x4396 (x1970 x4494)) 0) x1915) (>= 1461501637330902918203684832716283019655932542975 x3221) (>= 255 x4473) (<= x4214 18446744073709551615) (<= 0 x4214) (not (= 2134560854 x619)) (= x4182 x620) (<= 0 x1739) (= x2158 (> (x4396 (x1970 x3939)) 0)) (= x599 x996) (= (x4613 (x1970 x2612)) x4504) (>= 1461501637330902918203684832716283019655932542975 x2957) (<= 0 x2102) (<= 0 x4366) (= x256 (> (x4396 (x1970 x2063)) 0)) (not (= x3939 x4494)) (not (= x3111 x4345)) (<= 0 x2183) (<= 0 x1947) (>= x1554 0) (= (= x1991 0) x2811) (= 2245473101 x4653) (not (= x2532 x4494)) (>= 1461501637330902918203684832716283019655932542975 x4345) (not (= 2236579515 x619)) (>= 255 x1991) (= x4570 x620) (>= x4061 0) (<= x3111 1461501637330902918203684832716283019655932542975) (= x867 x4689) (<= x2505 1461501637330902918203684832716283019655932542975) (= (not x4802) x867) (= x3436 false) (= x3984 (= x4767 0)) (< x3036 256) (>= x4505 0) (= false x2614) (<= 0 x1119) (<= 0 x1798) (>= 1461501637330902918203684832716283019655932542975 x194) (< x4767 256) (not (= x4494 x4345)) (<= 0 x1379) (= (x4261 x118) x2183) (= (x371 26959946667150639794667015087019630673637144422540572481103610249215 x2798) x4070) (<= 0 x780) (>= 1461501637330902918203684832716283019655932542975 x172) (>= x290 0) (and (< 163 x601) (= (<= x601 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (<= 0 x599) (> 256 x2083) (<= x2917 1461501637330902918203684832716283019655932542975) (not (= x4345 x2612)) (not (= x705 x2612)) (>= 18446744073709551615 x2196) (= (= 0 x2083) x4802) (>= x1102 0) (> x2532 0) (>= x3799 0) (<= x755 1461501637330902918203684832716283019655932542975) (>= x2721 0) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x3115) (<= x3480 255) (= (x4596 x118) x1991) (= (x4623 x118) x2083))) x2747) x3732))
(assert (x136 x4878))
(assert (x3087 x1112))
(assert (x3087 x3835))
(assert (x3087 x4175))
(assert (x3087 x2897))
(assert (x3087 x3001))
(assert (x3087 x4081))
(assert (=> (<= x3804 10000) (= (x1970 x3804) (x2553 x3804))))
(assert (x3087 x4730))
(assert (=> (>= 10000 x469) (= (x1970 x469) (x2553 x469))))
(assert (= (x1315 (x1970 x4455)) x4455))
(assert (x3087 x1563))
(assert (x3087 x4405))
(assert (= (and (not x3961) x3359) x3462))
(assert (=> (<= x3210 10000) (= (x2553 x3210) (x1970 x3210))))
(assert (x3087 x2796))
(assert (x3087 x2357))
(assert (= 2796547477 (x1315 (x2553 2796547477))))
(assert (x136 x2636))
(assert (= (or x4313 x4181) x2658))
(assert (x136 x1409))
(assert (x3087 x1104))
(assert (= (and x3674 x4239) x167))
(assert (= x815 (and x3354 x3288)))
(assert (= x4641 (and x574 x4036)))
(assert (x3087 x4032))
(assert (x487 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x2236 (and (=> (and (and (= x2752 x3148) (= 1 x2916)) (not x141)) x3484) (=> x141 x1499))))
(assert (= x4754 (and x3542 x4747)))
(assert (x3087 x3789))
(assert (x3087 x2586))
(assert (x136 x1305))
(assert (x3087 x2764))
(assert (x3087 x2204))
(assert (x3087 x4654))
(assert (= (and x3597 x1031) x3456))
(assert (= (and x3223 (not x165)) x225))
(assert (x136 x1442))
(assert (= (and x895 x2309) x3616))
(assert (x3087 x4170))
(assert (x3087 x3239))
(assert (x3087 x3275))
(assert (x3087 x1494))
(assert (x3087 x1076))
(assert (= (=> (and (= x3902 x860) (= x108 x51) (= x2097 x2962) (= x4517 x2477) (= x511 x3037)) x3506) x1751))
(assert (x3087 x667))
(assert (x3087 x4258))
(assert (= x2252 (and x564 x1923)))
(assert (x3087 x4001))
(assert (= (and x3667 x2371) x2672))
(assert (= x1029 (and x3386 x2060)))
(assert (x3087 x1372))
(assert (x3087 x3697))
(assert (x3087 x4416))
(assert (x3087 x3368))
(assert (= x3098 (=> (= x2579 (< 0 x139)) (and (=> (and (and (or (and (and (<= x1323 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x1779) x1487 0) x1821) (= (x2610 x4572) x1323) (= x4572 (x350 x1821 2)) (>= x1323 0) (= (not x3689) x2212) (= (> x139 x1323) x3689)) x1012) (and (= x1012 x2212) (not x1012))) (and (not (= x421 0)) (>= x1779 0) (<= x1779 1461501637330902918203684832716283019655932542975) (= (x709 (x1970 x421) x1487 0) x2274) (<= x305 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x305 0) (= x1012 (ite (< 0 x305) (not (= x1779 0)) (< 0 x305))) (= x3949 0) (= x4828 (x350 x1487 1)) (= x3949 (x2610 x3648)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3949) (= x1779 (x1557 x4828)) (= (x350 x2274 2) x3648) (<= 0 x3949) (> 1461501637330902918203684832716283019655932542976 x1779))) x2579) x4351) (=> (not x2579) x1275)))))
(assert (= x3235 (and x4039 (not x2856))))
(assert (= (x1315 (x350 x2282 1)) (+ (x1315 x2282) 1)))
(assert (x487 x4057))
(assert (x3087 x1167))
(assert (= (x2553 989455977) (x1970 989455977)))
(assert (=> (>= 10000 x799) (= (x1970 x799) (x2553 x799))))
(assert (x3087 x2615))
(assert (= x2270 (and x2121 (not x1440))))
(assert (x3087 x2350))
(assert (x3087 x1924))
(assert (x3087 x2410))
(assert (x3087 x4844))
(assert (x3087 x2036))
(assert (= (=> (and (= x920 x185) (= x3131 0)) x1965) x3094))
(assert (= (and x4108 (not x3977)) x1354))
(assert (= x3116 (and x3848 (not x220))))
(assert (x3087 x3262))
(assert (x3087 x771))
(assert (x487 x4001))
(assert (= x4338 (or x3263 x3535 x454 x793 x4295 x2193)))
(assert (x3087 x3606))
(assert (= (and (not x26) x2277) x359))
(assert (=> (>= 10000 x3416) (= (x1970 x3416) (x2553 x3416))))
(assert (= x4351 (and (=> (and (and (and (= (x350 x1387 1) x1774) (>= x637 0) (= x637 (x3702 x1774)) (= (x709 (x1970 x1779) x1487 0) x1387) (= (ite (< 1 x305) (not (= 0 x637)) (< 1 x305)) x958) (< x637 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x637)) (or (and (not x958) (= x958 x2548)) (and x958 (and (>= x1709 0) (= (not x1906) x2548) (= (x350 x1049 2) x3842) (<= x1709 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x637) x1487 0) x1049) (= x1906 (< x1709 x139)) (= (x2610 x3842) x1709))))) x2212) x4064) (=> (and (and (= 0 x3606) (= x2359 x1779)) (not x2212)) x967))))
(assert (x136 x2786))
(assert (= x154 (=> (and (= x1838 x2988) (= x3564 x983)) x4233)))
(assert (x3087 x1361))
(assert (= (or x4650 x3494) x1386))
(assert (x3087 x853))
(assert (x3087 x3064))
(assert (x3087 x3780))
(assert (x3087 x4154))
(assert (x3087 x1500))
(assert (x3087 x3927))
(assert (x3087 x4113))
(assert (= x221 (and x708 x2646)))
(assert (= x4609 (=> (and (= x2283 0) (= x3745 x4375)) x3056)))
(assert (x3087 x3985))
(assert (= (=> (or (and (= x1185 x3805) (not x1185)) (and (and (not (< x3302 x12)) (= (< x1307 x354) x3805) (= x1307 (x1595 (- x3302 x12)))) x1185)) x1671) x2544))
(assert (= (+ 1 (x1315 x1972)) (x1315 (x350 x1972 1))))
(assert (= (and x2490 x3963) x1013))
(assert (= (and (not x267) x3593) x353))
(assert (x3087 x3911))
(assert (= x3423 (and x3596 x4392)))
(assert (x3087 x4659))
(assert (x3087 x1102))
(assert (x3087 x3486))
(assert (= (x1970 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x2553 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (= x590 (or x613 x78 x1276 x4581)))
(assert (x3087 x513))
(assert (x3087 x2906))
(assert (= x1636 (and x4245 x3854)))
(assert (x3087 x894))
(assert (= x3111 (x1315 (x1970 x3111))))
(assert (= x397 true))
(assert (= (or x779 x4307 x2507) x2160))
(assert (= (and x3102 x2025) x4496))
(assert (= x754 (and x4545 x893)))
(assert (= (and x3285 (not x4875)) x3279))
(assert (= x292 (=> (= (< 0 x1835) x642) (and (=> (and x642 (and (or (and (and (= x4030 (= x3111 x4054)) (or (and (not x4030) (and (and x1190 (and (= (x4396 (x1970 x3939)) x3209) (> x3209 0) (= x1312 32) (= 4 x1754) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x2762) (not (< x735 405663989)) (< x735 2217467699) (< x735 988262939) (= 405663989 x735) (= 1 x576) (not (> 4 x1754)) (= x729 x1754))) (= (= x4054 x3939) x1190))) (and x4030 (and (= x2465 10936679508223583803006762266923565500374401145016910147028117655998246682624) (< x2879 988262939) (= x2879 405663989) (not (> 405663989 x2879)) (= 1 x576) (> 2217467699 x2879) (= x729 x730) (= (x4396 (x1970 x3111)) x3566) (> x3566 0) (= 4 x730) (= x1312 32) (not (> 4 x730)))))) (not x886)) (and (and (= x1027 405663989) (< x1027 2217467699) (= x576 1) (< x1027 988262939) (= x729 x3896) (not (< x3896 4)) (not (< x1027 405663989)) (= x3896 4) (= 32 x1312) (< 0 x553) (= x553 (x4396 (x1970 x4345))) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x600)) x886)) (and (= 4 x729) (= x4054 (x371 1461501637330902918203684832716283019655932542975 x1305)) (= (= x4345 x4054) x886)))) x2213) (=> (not x642) x4367)))))
(assert (= (and x1953 x4244) x4853))
(assert (= (and x596 x365) x3579))
(assert (= (and x4695 x3768) x2307))
(assert (= (or x3948 x985) x4014))
(assert (x3087 x4664))
(assert (x3087 x1050))
(assert (= (x1315 (x1970 x3312)) x3312))
(assert (x3087 x2497))
(assert (= x3394 (and x3882 (not x296))))
(assert (= x2772 (and x4893 (not x2765))))
(assert (= (and x384 (not x4395)) x3395))
(assert (x3087 x1828))
(assert (x3087 x655))
(assert (x3087 x3893))
(assert (= (x1315 (x2553 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x3087 x857))
(assert (x3087 x2522))
(assert (x3087 x3128))
(assert (= (and (not x4695) x3768) x3538))
(assert (x3087 x510))
(assert (= (+ (x1315 x2456) 2) (x1315 (x350 x2456 2))))
(assert (x3087 x2500))
(assert (x136 x3992))
(assert (= (x1315 (x2553 988262939)) 988262939))
(assert (x1513 x2798))
(assert (= (and (not x2987) x174) x2198))
(assert (x3087 x4221))
(assert (x3087 x3329))
(assert (x3087 x1597))
(assert (x3087 x1209))
(assert (= (x1315 (x1970 x1351)) x1351))
(assert (x3087 x4698))
(assert (= x395 (and x2525 (not x4226))))
(assert (x3087 x125))
(assert (x3087 x2538))
(assert (= (=> (and (= x1941 x920) (= 0 x2680)) x1017) x3155))
(assert (= (or x3959 x774 x4060 x1636 x2977 x4799) x4497))
(assert (x3087 x4272))
(assert (x3087 x2056))
(assert (= (or x1174 x839 x2307 x3061 x1009 x1764) x4256))
(assert (x3087 x2510))
(assert (x3087 x1297))
(assert (= (and x4350 (not x1785)) x15))
(assert (x3087 x2087))
(assert (x3087 x1931))
(assert (x3087 x2320))
(assert (x3087 x123))
(assert (= x3335 (x1315 (x1970 x3335))))
(assert (= x4023 (or x1070 x4580 x796 x2152 x2361 x1396)))
(assert (x3087 x239))
(assert (x3087 x2247))
(assert (x3087 x3302))
(assert (= (and x4087 (not x1182)) x2002))
(assert (x3087 x4409))
(assert (x136 x1435))
(assert (x3087 x2601))
(assert (x3087 x675))
(assert (= (and x1776 (not x4615)) x3829))
(assert (x3087 x1929))
(assert (= x189 (x1315 (x1970 x189))))
(assert (x3087 x1658))
(assert (x3087 x4205))
(assert (x3087 x1023))
(assert (= x1956 (=> (and (= x1848 x3009) (= x171 x752)) x1469)))
(assert (x136 x1164))
(assert (= x1154 (or x3859 x741 x1752 x4743 x2436)))
(assert (= (and (not x3664) x3861) x3853))
(assert (= x2350 (x1315 (x1970 x2350))))
(assert (= x3657 (and x4362 x1700)))
(assert (x136 x3814))
(assert (= (x1315 (x1970 x3939)) x3939))
(assert (= (and x817 (not x2156)) x22))
(assert (x3087 x1471))
(assert (x3087 x789))
(assert (x3087 x28))
(assert (= x3806 (=> (and (= (x3164 (+ 32 x1138)) x3069) (= x728 x3297) (= x2500 x288) (>= x3659 0) (= x3659 (x2849 x3514)) (= (x4739 x235) x4258) (<= x4258 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3822 x664) (= (x350 x3514 1) x235) (<= x3659 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4258 0) (= x1789 x1138) (= x3782 x3076)) x292)))
(assert (=> (<= x1100 10000) (= (x1970 x1100) (x2553 x1100))))
(assert (x136 x4345))
(assert (x136 x3960))
(assert (x3087 x2577))
(assert (= x1534 (and (not x3422) x4406)))
(assert (= (+ 1 (x1315 x1715)) (x1315 (x350 x1715 1))))
(assert (x3087 x3999))
(assert (x3087 x3425))
(assert (= x3035 (and (not x4425) x2206)))
(assert (x3087 x3934))
(assert (x3087 x2915))
(assert (x3087 x3200))
(assert (= (and x1650 x4648) x1336))
(assert (= (or x1392 x4281) x2980))
(assert (= (x1315 (x1970 x725)) x725))
(assert (x3087 x1117))
(assert (= x4360 (x1315 (x1970 x4360))))
(assert (x3087 x2331))
(assert (= (and x1698 (not x1577)) x109))
(assert (x3087 x3135))
(assert (x3087 x4391))
(assert (= x3358 (and x1635 x3378)))
(assert (x3087 x1115))
(assert (= x4817 (or x4617 x1721)))
(assert (= (and x3393 x182) x148))
(assert (= x1662 (and (not x3467) x3722)))
(assert (x136 x3686))
(assert (= (and x4372 x1613) x2348))
(assert (= (=> (and (= x628 x265) (= x4113 x335)) x2200) x4606))
(assert (= (x2553 2929553584) (x1970 2929553584)))
(assert (x3087 x1107))
(assert (x3087 x1397))
(assert (x3087 x3903))
(assert (= (and (not x782) x1195) x4008))
(assert (x3087 x298))
(assert (=> (>= 10000 x4877) (= (x1970 x4877) (x2553 x4877))))
(assert (x3087 x2098))
(assert (x3087 x953))
(assert (= (and x2632 (not x692)) x3494))
(assert (= (and x3070 x3916) x1596))
(assert (= x1579 (and x2989 x4144)))
(assert (= (and x4788 (not x1199)) x4133))
(assert (x3087 x1164))
(assert (x3087 x1346))
(assert (x3087 x4026))
(assert (x3087 x4437))
(assert (= (=> (and (= x3272 x4170) (= x4898 x4175)) x2710) x4007))
(assert (= (or x3833 x1538) x3028))
(assert (= (x2553 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x1970 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= x2671 (or (and x4742 x3654) x3739 x2790 (and x4881 x1839) (and x1147 (not x3185)) (and x4835 (not x4327)))))
(assert (x3087 x1961))
(assert (= (or x3357 x2348) x1094))
(assert (= (x1315 (x350 x1374 1)) (+ (x1315 x1374) 1)))
(assert (x3087 x1325))
(assert (x3087 x4569))
(assert (= (x1315 (x1970 x2820)) x2820))
(assert (= (and x3617 x1644) x4194))
(assert (= (and (not x3470) x1028) x345))
(assert (x3087 x4461))
(assert (x3087 x388))
(assert (x136 x3939))
(assert (= (and x3354 (not x3288)) x4778))
(assert (= (and x3394 (not x3744)) x4197))
(assert (= x4047 (or x1033 x1579 x4270 x4546)))
(assert (= (and x3869 (not x3282)) x2479))
(assert (x3087 x581))
(assert (= x3421 (or x314 x2511)))
(assert (x136 x4805))
(assert (x3087 x3682))
(assert (= (and x1185 x3918) x2194))
(assert (= x2442 (or x2434 (and x2804 (not x3856)))))
(assert (= (and x2550 (not x3328)) x463))
(assert (x3087 x1549))
(assert (x3087 x602))
(assert (= (and x2422 x3634) x532))
(assert (= x1201 (and x2518 (not x2302))))
(assert (x3087 x2289))
(assert (= x2432 (or x1976 x3276)))
(assert (= (or (and (not x701) x4882) x295) x3376))
(assert (x3087 x2827))
(assert (= (and x4417 (not x3988)) x2486))
(assert (x136 x271))
(assert (x3087 x358))
(assert (=> (>= 10000 x1427) (= (x1970 x1427) (x2553 x1427))))
(assert (x3087 x3518))
(assert (x3087 x1036))
(assert (x3087 x2295))
(assert (x3087 x1226))
(assert (=> (<= x1226 10000) (= (x2553 x1226) (x1970 x1226))))
(assert (=> (>= 10000 x3960) (= (x2553 x3960) (x1970 x3960))))
(assert (= (=> (and (= x3236 0) (= x4003 x4228)) x2781) x4169))
(assert (= x1645 (not (and (= x2708 (x709 (x1970 x1250) x1446 0)) (> 1461501637330902918203684832716283019655932542976 x360) (= x1263 (x350 x2708 1)) (<= x360 1461501637330902918203684832716283019655932542975) (>= x360 0) (= (x4252 x1263) x360)))))
(assert (= (and x688 (not x2051)) x3496))
(assert (x3087 x4658))
(assert (= (x1315 (x1970 x4234)) x4234))
(assert (x3087 x2048))
(assert (=> (>= 10000 x3728) (= (x1970 x3728) (x2553 x3728))))
(assert (x3087 x3565))
(assert (= (x1315 (x350 x1387 1)) (+ (x1315 x1387) 1)))
(assert (=> (>= 10000 x3115) (= (x2553 x3115) (x1970 x3115))))
(assert (= x2538 (x1315 (x1970 x2538))))
(assert (x3087 x2381))
(assert (x136 x3210))
(assert (x3087 x861))
(assert (x3087 x1851))
(assert (= (or x2445 x74 x2226 x1955 x92 x3600) x1914))
(assert (x3087 x4535))
(assert (= (x1970 1038142104) (x2553 1038142104)))
(assert (x3087 x4315))
(assert (= (and x1201 (not x419)) x610))
(assert (x3087 x381))
(assert (x3087 x2278))
(assert (x3087 x3113))
(assert (x3087 x354))
(assert (= (x1315 (x2553 6539370208772218570076773595062200405109424842860869254164860851635934461952)) 6539370208772218570076773595062200405109424842860869254164860851635934461952))
(assert (x3087 x3699))
(assert (= x666 (and x3978 x4512)))
(assert (= x4738 (and (not x1113) x4048)))
(assert (= (x2553 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x1970 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (=> (>= 10000 x103) (= (x1970 x103) (x2553 x103))))
(assert (x3087 x3693))
(assert (x3087 x1416))
(assert (x3087 x1733))
(assert (= (and (not x470) x1896) x4547))
(assert (x3087 x2077))
(assert (x3087 x1442))
(assert (= (x1315 (x350 x99 1)) (+ 1 (x1315 x99))))
(assert (= (+ 1 (x1315 x4459)) (x1315 (x350 x4459 1))))
(assert (= (and x1654 (not x3414)) x4772))
(assert (= x2366 (and x4267 x4852)))
(assert (x136 x1727))
(assert (=> (>= 10000 x421) (= (x1970 x421) (x2553 x421))))
(assert (x3087 x3337))
(assert (x3087 x4857))
(assert (x487 x620))
(assert (= (=> (and (= (x371 1461501637330902918203684832716283019655932542975 x1305) x2836) (= x2132 (x371 x950 x4370)) (= x876 (x3164 (+ 32 x964))) (= x94 (x371 x2604 x4204)) (> x94 0) (= (= x2836 x4345) x2839) (= x950 (ite (= x3297 1) 1 0)) (= (ite (< 31 x236) 1 0) x4370) (= x964 (x3164 (+ x2958 4))) (= x1546 (x1595 (- x876 x2958))) (= (x1884 x2132 x4121) x2604) (= x4121 (ite (= 0 x236) 1 0))) (and (=> (and (= (= x2836 x3111) x1271) (not x2839)) (and (=> (and (not x1271) (and (and (and (= x1835 x2319) (not (> 4 x4461)) (> 2929553584 x1489) (> x4076 0) (not (> 2691771752 x1489)) (= x4461 x1546) (= x1933 72570022874062638528011751457397263716769196454539065078543251854057308946432) (= (x1595 (- x4461 4)) x4781) (= (or (> x4781 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x4781) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4781)))) x102) (= x4076 (x4396 (x1970 x3939))) (not (< x1489 2217467699)) (= x4461 36) (= 2691771752 x1489)) x3988) (= x3988 (= x3939 x2836)))) (and (=> (and (not x102) (and (>= x755 0) (<= x755 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x755) (= (= x2063 x755) x3877) (= x1088 128) (= x2319 x291))) (and (=> (and (not x3877) (= x4495 (= x4345 x755))) (and (=> (and (not x4495) (= x1328 (= x3111 x755))) (and (=> (and x1328 (and (not (> 4 x1825)) (= 100 x1825) (= (x1595 (- x1825 4)) x2978) (not (< x4377 405663989)) (= x3939 x2637) (< x4377 2217467699) (= x1825 100) (< 0 x624) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2978) true) (> 96 x2978)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2978)) x1113) (= x624 (x4396 (x1970 x3111))) (> 988262939 x4377) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3925) (not (= x4377 547091486)) (not (= x4377 405663989)) (= x291 x374) (= x189 x705) (= 599290589 x4377))) (and (=> x1113 x341) (=> (and (not x1113) (and (= x1331 (= x189 x705)) (= x3486 x189))) (and (=> (and (and (= x214 (= x3939 x2637)) (= x2891 x2637)) x1331) (and (=> (and (and (= (< x4428 x291) x4521) (>= x4428 0) (= x374 x2889) (= (x1040 x2286) x4428) (= x2286 (x709 (x1970 x189) (x2553 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4428)) x214) (and (=> (and (not x4521) (and (<= x1109 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1109 (x1040 x3145)) (= (x709 (x1970 x189) (x2553 5) 0) x3145) (<= 0 x1109) (= x4390 (< x1109 x374)))) (and (=> (and (not x4390) (and (<= x2118 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2118) (= (x709 (x1970 x2637) (x2553 5) 0) x255) (= x1132 (x1595 (- x1109 x374))) (= x4593 (< x3696 x2118)) (= x3696 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x374))) (= (x3168 x255) x2118))) (and (=> (and (and (= 32 x3009) (= (x3164 (+ x374 x2118)) x1668) (= 1 x317) (= 1 x752)) (not x4593)) x1956) (=> x4593 x341))) (=> x4390 x341))) (=> x4521 x341))) (=> (not x214) x341))) (=> (not x1331) x341))))) (=> (and (not x1328) (and (and x4538 (and (not (> 4 x2147)) (= 100 x2147) (= 100 x2147) (< 0 x3852) (not (= 405663989 x3638)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x478) (= x4480 x291) (not (= x3638 547091486)) (not (> 405663989 x3638)) (= x705 x387) (= x3638 599290589) (= x1399 x3939) (< x3638 2217467699) (= x296 (or (> x1971 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1971)) (> 96 x1971)))) (< x3638 988262939) (= (x4396 (x1970 x3939)) x3852) (= x1971 (x1595 (- x2147 4))))) (= x4538 (= x3939 x755)))) (and (=> (and (not x296) (and (= x3744 (= x387 x705)) (= x2064 x387))) (and (=> (not x3744) x4775) (=> (and x3744 (and (= x2208 (= x3939 x1399)) (= x1399 x1823))) (and (=> (and (and (= x1625 (x709 (x1970 x387) (x2553 5) 0)) (>= x1081 0) (= x1081 (x4089 x1625)) (= x13 x4480) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1081) (= x2684 (> x291 x1081))) x2208) (and (=> x2684 x4775) (=> (and (not x2684) (and (= x191 (x709 (x1970 x387) (x2553 5) 0)) (<= 0 x2522) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2522) (= x3977 (> x4480 x2522)) (= x2522 (x4089 x191)))) (and (=> x3977 x4775) (=> (and (and (= (> x1075 x3390) x4378) (= x625 (x1595 (- x2522 x4480))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1075) (<= 0 x1075) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4480)) x3390) (= (x1058 x1047) x1075) (= (x709 (x1970 x1399) (x2553 5) 0) x1047)) (not x3977)) (and (=> x4378 x4775) (=> (and (and (= 32 x3476) (= 1 x1674) (= (x3164 (+ x4480 x1075)) x2125) (= 1 x963)) (not x4378)) x1802))))))) (=> (not x2208) x4775))))) (=> x296 x4775))))) (=> (and (and (= x3518 (x4396 (x1970 x4345))) (< 0 x3518) (= x705 x4768) (= (or (and (= true (<= x3406 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3406 96)) (> x3406 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1408) (= x4445 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x1004) (= x3939 x4120) (= 100 x1004) (= x291 x1299) (< x2718 2217467699) (< x2718 988262939) (not (= 405663989 x2718)) (not (= 547091486 x2718)) (not (> 4 x1004)) (not (> 405663989 x2718)) (= (x1595 (- x1004 4)) x3406) (= 599290589 x2718)) x4495) (and (=> (and (not x1408) (and (= (= x4768 x705) x4616) (= x4768 x3133))) (and (=> (not x4616) x2923) (=> (and x4616 (and (= (= x4120 x3939) x4816) (= x4780 x4120))) (and (=> (not x4816) x2923) (=> (and (and (= x2085 x1299) (<= x905 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3533 (< x905 x291)) (= (x709 (x1970 x4768) (x2553 5) 0) x1998) (= x905 (x1722 x1998)) (<= 0 x905)) x4816) (and (=> (and (and (= x267 (< x2091 x1299)) (= (x709 (x1970 x4768) (x2553 5) 0) x3311) (<= x2091 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2091) (= x2091 (x1722 x3311))) (not x3533)) (and (=> x267 x2923) (=> (and (and (= (x709 (x1970 x4120) (x2553 5) 0) x453) (= (x1200 x453) x3431) (<= x3431 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x918 (x1595 (- x2091 x1299))) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1299)) x4566) (= (< x4566 x3431) x1233) (>= x3431 0)) (not x267)) (and (=> (and (not x1233) (and (= x3304 32) (= x2782 1) (= x4703 (x3164 (+ x1299 x3431))) (= 1 x2470))) x992) (=> x1233 x2923))))) (=> x3533 x2923))))))) (=> x1408 x2923))))) (=> (and (and (not (< x2257 599290589)) (= x381 100) (= x2953 (x1595 (- x381 4))) (< 0 x358) (= x2652 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x381) (= x3754 x291) (= x358 (x4396 (x1970 x2063))) (= x2257 599290589) (= (or (and (= (<= x2953 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2953 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2953)) x3222) (not (< x381 4)) (= x2643 x705) (< x2257 1466279372) (= x3350 x3939)) x3877) (and (=> (and (not x3222) (and (= x1993 (= x2643 x705)) (= x2381 x2643))) (and (=> (not x1993) x2558) (=> (and (and (= x3350 x934) (= (= x3939 x3350) x3924)) x1993) (and (=> (not x3924) x2558) (=> (and (and (<= x745 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4728 (< x745 x291)) (>= x745 0) (= x745 (x3776 x1479)) (= x3754 x712) (= (x709 (x1970 x2643) (x2553 1) 0) x1479)) x3924) (and (=> (and (not x4728) (= (< x745 x3754) x2890)) (and (=> (and (not x2890) (and (= (x709 (x1970 x2643) (x2553 1) 0) x4618) (<= x3706 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3754)) x1879) (= x924 (x1595 (- x745 x3754))) (>= x3706 0) (= x3706 (x2783 x206)) (= (x709 (x1970 x3350) (x2553 1) 0) x206) (= x1459 (< x1879 x3706)))) (and (=> x1459 x2558) (=> (and (and (= x1237 (x3164 (+ x3706 x3754))) (= (> x3706 x1237) x4683)) (not x1459)) (and (=> x4683 x2558) (=> (and (and (= x3719 (< x1098 x3754)) (= x3298 (x709 (x1970 x2643) (x2553 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1098) (<= 0 x1098) (= x1098 (x2178 x2195)) (= (x709 (x1970 x3939) x3298 0) x2195)) (not x4683)) (and (=> x3719 x2558) (=> (and (= x3932 (> x3754 x1098)) (not x3719)) (and (=> (and (not x3932) (and (= 32 x4099) (= x306 (x1595 (- x1098 x3754))) (= 1 x4659))) x3163) (=> x3932 x2558))))))))) (=> x2890 x2558))) (=> x4728 x2558))))))) (=> x3222 x2558))))) (=> x102 x1248))) (=> (and (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x437) (and (> 32 x437) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x437) true))) x2698) (< x1372 2929553584) (= x1546 x446) (< 0 x746) (= (x4396 (x1970 x3111)) x746) (not (< x1372 2217467699)) (not (< x446 4)) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x1631) (= x1835 x2016) (= x437 (x1595 (- x446 4))) (= x446 36) (not (< x1372 2691771752)) (= x1372 2691771752)) x1271) (and (=> (and (not x2698) (and (>= 1461501637330902918203684832716283019655932542975 x835) (<= 0 x835) (= x2906 128) (= x2016 x1136) (= (= x835 x2063) x3471) (> 1461501637330902918203684832716283019655932542976 x835))) (and (=> (and (and (= x3128 (x4396 (x1970 x2063))) (not (< x2030 4)) (= x3814 x705) (= 100 x2030) (= x2030 100) (> 1466279372 x914) (= x4736 (x1595 (- x2030 4))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4783) (= x3402 x3111) (= (or (and (= (<= x4736 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x4736)) (> x4736 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x849) (not (> 599290589 x914)) (< 0 x3128) (= x914 599290589) (= x1136 x3690)) x3471) (and (=> x849 x2483) (=> (and (and (= x1966 (= x3814 x705)) (= x3814 x842)) (not x849)) (and (=> (and x1966 (and (= x321 (= x3402 x3111)) (= x3402 x3520))) (and (=> (and x321 (and (= x3690 x3472) (<= 0 x3946) (= (< x3946 x1136) x942) (= x3 (x709 (x1970 x3814) (x2553 1) 0)) (<= x3946 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3776 x3) x3946))) (and (=> x942 x2483) (=> (and (= (< x3946 x3690) x2491) (not x942)) (and (=> (and (and (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3690)) x3137) (= x4544 (x709 (x1970 x3814) (x2553 1) 0)) (= x2156 (< x3137 x163)) (>= x163 0) (= (x2774 x2778) x163) (<= x163 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2778 (x709 (x1970 x3402) (x2553 1) 0)) (= (x1595 (- x3946 x3690)) x533)) (not x2491)) (and (=> x2156 x2483) (=> (and (and (= x578 (x3164 (+ x3690 x163))) (= x904 (> x163 x578))) (not x2156)) (and (=> x904 x2483) (=> (and (not x904) (and (<= 0 x3125) (= (x709 (x1970 x3814) (x2553 2) 0) x2095) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3125) (= x3541 (> x3690 x3125)) (= x3125 (x2178 x1865)) (= (x709 (x1970 x3111) x2095 0) x1865))) (and (=> (and (= (< x3125 x3690) x3980) (not x3541)) (and (=> (and (not x3980) (and (= 1 x2409) (= x125 32) (= x4822 (x1595 (- x3125 x3690))))) x31) (=> x3980 x2483))) (=> x3541 x2483))))))) (=> x2491 x2483))))) (=> (not x321) x2483))) (=> (not x1966) x2483))))) (=> (and (= x3282 (= x4345 x835)) (not x3471)) (and (=> (and x3282 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1935) (= x3090 100) (> 988262939 x2570) (not (> 405663989 x2570)) (not (= x2570 547091486)) (< x2570 2217467699) (< 0 x2635) (= (x1595 (- x3090 4)) x4156) (= x1136 x1) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4156) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4156)) (> 96 x4156))) x2888) (= 100 x3090) (not (= 405663989 x2570)) (= x4826 x705) (not (< x3090 4)) (= x3111 x4042) (= x2570 599290589) (= x2635 (x4396 (x1970 x4345))))) (and (=> (and (and (= x4826 x1115) (= x1958 (= x705 x4826))) (not x2888)) (and (=> (and (and (= (= x3111 x4042) x3495) (= x2468 x4042)) x1958) (and (=> (not x3495) x2240) (=> (and (and (= x4883 (> x1136 x1461)) (= x1811 (x709 (x1970 x4826) (x2553 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1461) (= (x1722 x1811) x1461) (= x3320 x1) (<= 0 x1461)) x3495) (and (=> x4883 x2240) (=> (and (and (= (< x2883 x1) x3118) (<= 0 x2883) (= x1206 (x709 (x1970 x4826) (x2553 5) 0)) (<= x2883 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2883 (x1722 x1206))) (not x4883)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x831) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1)) x46) (= (< x46 x831) x4661) (= (x709 (x1970 x4042) (x2553 5) 0) x833) (= (x2157 x833) x831) (= x196 (x1595 (- x2883 x1))) (>= x831 0)) (not x3118)) (and (=> x4661 x2240) (=> (and (not x4661) (and (= 1 x1549) (= (x3164 (+ x831 x1)) x4100) (= 1 x2404) (= x2607 32))) x3362))) (=> x3118 x2240))))))) (=> (not x1958) x2240))) (=> x2888 x2240))) (=> (and (not x3282) (= (= x835 x3111) x426)) (and (=> (and (and (not (< x885 405663989)) (< x885 988262939) (= x3111 x1742) (= x3513 (x1595 (- x1112 4))) (not (< x1112 4)) (= x705 x4509) (= x1136 x1023) (= x2595 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x1112) (> 2217467699 x885) (= 100 x1112) (= 599290589 x885) (not (= 405663989 x885)) (< 0 x3064) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3513) (and (> 96 x3513) (= (<= x3513 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x4875) (= (x4396 (x1970 x3111)) x3064) (not (= 547091486 x885))) x426) (and (=> x4875 x3251) (=> (and (not x4875) (and (= x1022 (= x705 x4509)) (= x4509 x4714))) (and (=> (and (and (= x145 (= x3111 x1742)) (= x1742 x2357)) x1022) (and (=> (and (and (= x2941 (x709 (x1970 x4509) (x2553 5) 0)) (= x4876 x1023) (<= x738 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x738) (= x3181 (< x738 x1136)) (= x738 (x1040 x2941))) x145) (and (=> (and (and (= x2089 (x709 (x1970 x4509) (x2553 5) 0)) (= (< x2585 x1023) x2005) (= x2585 (x1040 x2089)) (<= x2585 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2585 0)) (not x3181)) (and (=> (and (and (>= x2207 0) (= x1339 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1023))) (= (x1595 (- x2585 x1023)) x4857) (= (> x2207 x1339) x700) (= (x177 x4796) x2207) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2207) (= (x709 (x1970 x1742) (x2553 5) 0) x4796)) (not x2005)) (and (=> (and (and (= x3771 (x3164 (+ x2207 x1023))) (= 1 x3239) (= 32 x2810) (= 1 x3957)) (not x700)) x284) (=> x700 x3251))) (=> x2005 x3251))) (=> x3181 x3251))) (=> (not x145) x3251))) (=> (not x1022) x3251))))) (=> (and (and (and x3950 (and (= (x4396 (x1970 x3939)) x557) (= x912 599290589) (not (< x1929 4)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4199) (= x1136 x2164) (= x3111 x1845) (= x705 x4489) (< x912 2217467699) (= x1438 (x1595 (- x1929 4))) (= 100 x1929) (> 988262939 x912) (< 0 x557) (not (< x912 405663989)) (= x1577 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1438) (and (> 96 x1438) (= true (<= x1438 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= 405663989 x912)) (= x1929 100) (not (= 547091486 x912)))) (= x3950 (= x3939 x835))) (not x426)) (and (=> x1577 x626) (=> (and (not x1577) (and (= (= x4489 x705) x1284) (= x4489 x2004))) (and (=> (and (and (= x3602 (= x1845 x3111)) (= x1845 x2304)) x1284) (and (=> (not x3602) x626) (=> (and x3602 (and (<= x3509 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4465 (x709 (x1970 x4489) (x2553 5) 0)) (= x2164 x3448) (= x3509 (x4089 x4465)) (>= x3509 0) (= x4425 (< x3509 x1136)))) (and (=> (and (not x4425) (and (<= x3971 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3971 (x4089 x3253)) (= (x709 (x1970 x4489) (x2553 5) 0) x3253) (= (> x2164 x3971) x3391) (>= x3971 0))) (and (=> x3391 x626) (=> (and (not x3391) (and (= (x709 (x1970 x1845) (x2553 5) 0) x2685) (<= x2074 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2074 (x2528 x2685)) (= x2247 (x1595 (- x3971 x2164))) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2164)) x3355) (= (> x2074 x3355) x845) (>= x2074 0))) (and (=> (and (not x845) (and (= x1117 32) (= (x3164 (+ x2074 x2164)) x2092) (= x3517 1) (= x3516 1))) x979) (=> x845 x626))))) (=> x4425 x626))))) (=> (not x1284) x626))))))))))) (=> x2698 x711))))) (=> (and (and (= x4305 72570022874062638528011751457397263716769196454539065078543251854057308946432) (not (< x3368 2691771752)) (= x1581 x1835) (= x2346 (or (> x4711 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4711 32) (= true (<= x4711 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (> 2929553584 x3368) (= (x4396 (x1970 x4345)) x3607) (< 0 x3607) (= x1952 36) (not (< x3368 2217467699)) (= (x1595 (- x1952 4)) x4711) (= x1952 x1546) (= x3368 2691771752) (not (< x1952 4))) x2839) (and (=> x2346 x4712) (=> (and (and (= (= x1001 x2063) x4672) (<= x1001 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1001) (<= 0 x1001) (= 128 x4103) (= x2600 x1581)) (not x2346)) (and (=> (and (not x4672) (= (= x4345 x1001) x4815)) (and (=> (and (= x198 (= x3111 x1001)) (not x4815)) (and (=> (and x198 (and (= x4755 (x1595 (- x3001 4))) (= x4345 x1710) (< 0 x3851) (< x2011 988262939) (= (x4396 (x1970 x3111)) x3851) (= x3219 x705) (= 599290589 x2011) (not (> 4 x3001)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4755)) (> 96 x4755)) (> x4755 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3018) (= x2419 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x2011 2217467699) (= x2469 x2600) (not (= x2011 405663989)) (not (= x2011 547091486)) (not (> 405663989 x2011)) (= x3001 100) (= x3001 100))) (and (=> (and (and (= x3219 x2875) (= (= x705 x3219) x582)) (not x3018)) (and (=> (not x582) x2482) (=> (and x582 (and (= x2036 x1710) (= (= x1710 x4345) x1609))) (and (=> (and (and (= x2471 (x1040 x1377)) (<= 0 x2471) (= (x709 (x1970 x3219) (x2553 5) 0) x1377) (= x272 x2469) (<= x2471 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3741 (> x2600 x2471))) x1609) (and (=> (and (not x3741) (and (= (x1040 x1202) x7) (<= 0 x7) (= (x709 (x1970 x3219) (x2553 5) 0) x1202) (<= x7 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2469 x7) x2534))) (and (=> (and (and (>= x53 0) (= x4679 (< x3825 x53)) (= (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2469)) x3825) (<= x53 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3587 x222) x53) (= (x709 (x1970 x1710) (x2553 5) 0) x222) (= x1447 (x1595 (- x7 x2469)))) (not x2534)) (and (=> x4679 x2482) (=> (and (and (= (x3164 (+ x2469 x53)) x2942) (= 1 x4418) (= x1598 1) (= 32 x2042)) (not x4679)) x68))) (=> x2534 x2482))) (=> x3741 x2482))) (=> (not x1609) x2482))))) (=> x3018 x2482))) (=> (and (not x198) (and (and (and (= x380 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x4269) (= (or (and (< x4729 96) (= true (<= x4729 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4729)) x4881) (not (= 405663989 x3194)) (not (> 4 x4269)) (= x2600 x4737) (= x3194 599290589) (> 2217467699 x3194) (= 100 x4269) (not (< x3194 405663989)) (= (x1595 (- x4269 4)) x4729) (= x2009 x4345) (not (= 547091486 x3194)) (= x1859 (x4396 (x1970 x3939))) (> x1859 0) (= x1435 x705) (< x3194 988262939)) x4723) (= x4723 (= x3939 x1001)))) (and (=> x4881 x2545) (=> (and (not x4881) (and (= (= x705 x1435) x3185) (= x1435 x751))) (and (=> (not x3185) x2545) (=> (and (and (= (= x2009 x4345) x4327) (= x122 x2009)) x3185) (and (=> (not x4327) x2545) (=> (and (and (= x4273 (x709 (x1970 x1435) (x2553 5) 0)) (= x4742 (< x3442 x2600)) (= x3442 (x4089 x4273)) (= x4737 x3389) (<= x3442 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3442)) x4327) (and (=> x4742 x2545) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3077) (<= 0 x3077) (= x3077 (x4089 x1057)) (= (< x3077 x4737) x4750) (= x1057 (x709 (x1970 x1435) (x2553 5) 0))) (not x4742)) (and (=> x4750 x2545) (=> (and (not x4750) (and (= (> x3215 x3668) x1376) (= x4851 (x709 (x1970 x2009) (x2553 5) 0)) (= x2508 (x1595 (- x3077 x4737))) (<= x3215 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3668 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4737))) (>= x3215 0) (= x3215 (x3084 x4851)))) (and (=> x1376 x2545) (=> (and (and (= x764 1) (= x500 32) (= (x3164 (+ x4737 x3215)) x3267) (= 1 x2656)) (not x1376)) x16))))))))))))))) (=> (and x4815 (and (= (x4396 (x1970 x4345)) x3866) (not (= x1743 405663989)) (= x2600 x24) (= x1743 599290589) (> 988262939 x1743) (not (> 405663989 x1743)) (not (> 4 x402)) (= x402 100) (< x1743 2217467699) (= x38 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4345 x1351) (not (= x1743 547091486)) (= x402 100) (= (or (and (= (<= x2151 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2151 96)) (> x2151 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4827) (= x857 x705) (> x3866 0) (= x2151 (x1595 (- x402 4))))) (and (=> x4827 x3179) (=> (and (not x4827) (and (= x4727 x857) (= x776 (= x857 x705)))) (and (=> (and x776 (and (= x1870 x1351) (= (= x4345 x1351) x2641))) (and (=> (and x2641 (and (<= 0 x2582) (<= x2582 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x709 (x1970 x857) (x2553 5) 0) x4308) (= x2582 (x1722 x4308)) (= x24 x2827) (= (< x2582 x2600) x313))) (and (=> (and (and (= (x709 (x1970 x857) (x2553 5) 0) x1694) (= x524 (x1722 x1694)) (<= 0 x524) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x524) (= (< x524 x24) x1568)) (not x313)) (and (=> (and (and (= x2915 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x24))) (= x4840 (x3493 x3891)) (<= 0 x4840) (= (x1595 (- x524 x24)) x4115) (= (x709 (x1970 x1351) (x2553 5) 0) x3891) (= x2094 (< x2915 x4840)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4840)) (not x1568)) (and (=> x2094 x3179) (=> (and (not x2094) (and (= 1 x516) (= 32 x431) (= x3570 (x3164 (+ x4840 x24))) (= x2993 1))) x1522))) (=> x1568 x3179))) (=> x313 x3179))) (=> (not x2641) x3179))) (=> (not x776) x3179))))))) (=> (and (and (= 100 x2872) (= x4426 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 599290589 x1101)) (= (x1595 (- x2872 4)) x1218) (= 100 x2872) (= x2913 (x4396 (x1970 x2063))) (< 0 x2913) (= x2600 x969) (> 1466279372 x1101) (not (< x2872 4)) (= x1101 599290589) (= x4345 x2750) (= x3811 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1218) (and (> 96 x1218) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1218) true)))) (= x4208 x705)) x4672) (and (=> x3811 x4420) (=> (and (and (= x970 (= x705 x4208)) (= x2876 x4208)) (not x3811)) (and (=> (and x970 (and (= (= x2750 x4345) x3916) (= x2750 x2623))) (and (=> (and (and (>= x2907 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2907) (= (x3776 x2824) x2907) (= x464 x969) (= (< x2907 x2600) x2653) (= (x709 (x1970 x4208) (x2553 1) 0) x2824)) x3916) (and (=> (and (not x2653) (= (> x969 x2907) x3978)) (and (=> (and (and (= x3649 (x1595 (- x2907 x969))) (= x4335 (x1595 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x969))) (= x4334 (x709 (x1970 x2750) (x2553 1) 0)) (= (x3665 x4334) x2617) (>= x2617 0) (= (x709 (x1970 x4208) (x2553 1) 0) x1712) (= (> x2617 x4335) x4218) (<= x2617 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3978)) (and (=> x4218 x4420) (=> (and (not x4218) (and (= (x3164 (+ x969 x2617)) x2458) (= x3637 (> x2617 x2458)))) (and (=> x3637 x4420) (=> (and (and (= (x2178 x4777) x2808) (= x2327 (x709 (x1970 x4208) (x2553 2) 0)) (= x3611 (> x969 x2808)) (<= x2808 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2808 0) (= x4777 (x709 (x1970 x4345) x2327 0))) (not x3637)) (and (=> x3611 x4420) (=> (and (= (< x2808 x969) x3761) (not x3611)) (and (=> (and (not x3761) (and (= x585 32) (= x4724 1) (= (x1595 (- x2808 x969)) x2478))) x219) (=> x3761 x4420))))))))) (=> x3978 x4420))) (=> x2653 x4420))) (=> (not x3916) x4420))) (=> (not x970) x4420))))))))))) x4620))
(assert (= x4367 (=> (and (or (and x4361 (= x1995 x3135)) (and (= x1995 0) (not x4361))) (and (<= x4260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x28 (x371 1461501637330902918203684832716283019655932542975 x620)) (= x539 (x350 x1536 2)) (= (x3122 x1735) x3135) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x4457) (= (x709 (x1970 x3898) (x2553 154) 0) x4088) (<= x3135 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1999 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4180) (= x4832 (x371 1461501637330902918203684832716283019655932542975 x620)) (= x3898 (x371 1461501637330902918203684832716283019655932542975 x1305)) (= x1536 (x709 (x1970 x28) x4088 0)) (= x1942 (x709 (x1970 x4457) (x2553 158) 0)) (= (x371 1461501637330902918203684832716283019655932542975 x620) x4805) (>= x2271 0) (<= 0 x3135) (<= 0 x4260) (= (x350 x2246 1) x1735) (= (x3107 x2480) x1999) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4180) (= (> x3135 x2271) x4361) (>= x1999 0) (= x4180 (x1283 x539)) (= (x371 1461501637330902918203684832716283019655932542975 x1305) x3335) (= x4260 (x356 x2246)) (= (x709 (x1970 x4805) x1942 0) x2246) (= (x350 x4074 2) x2480) (= x4074 (x709 (x1970 x4832) x2090 0)) (= (x709 (x1970 x3335) (x2553 155) 0) x2090))) x2870)))
(assert (= x1955 (and (not x2078) x3062)))
(assert (x3087 x3287))
(assert (x3087 x1655))
(assert (x3087 x4536))
(assert (x3087 x3527))
(assert (x3087 x2458))
(assert (= (and x4669 (not x1856)) x643))
(assert (= (+ (x1315 x49) 1) (x1315 (x350 x49 1))))
(assert (x3087 x3000))
(assert (x3087 x884))
(assert (x3087 x2873))
(assert (= x3768 (and (not x4785) x2651)))
(assert (=> (<= x2068 10000) (= (x1970 x2068) (x2553 x2068))))
(assert (x3087 x3819))
(assert (x3087 x2633))
(assert (x3087 x2978))
(assert (= (or x4369 x1454) x872))
(assert (x3087 x2469))
(assert (x3087 x2058))
(assert (= (and x550 x4538) x3882))
(assert (= (and (not x878) x3687) x4843))
(assert (= (and (not x2566) x225) x1384))
(assert (= (and (not x102) x3733) x3601))
(assert (= (or x813 x2924) x790))
(assert (x3087 x2341))
(assert (x3087 x3430))
(assert (x3087 x4745))
(assert (=> (>= 10000 x2243) (= (x1970 x2243) (x2553 x2243))))
(assert (x136 x636))
(assert (= (and (not x2392) x3356) x750))
(assert (= x2549 (and x485 x4173)))
(assert (x3087 x2057))
(assert (x3087 x2167))
(assert (x3087 x3477))
(assert (= (=> (and (= x2057 x706) (= x2922 x3464)) x188) x89))
(assert (x3087 x1932))
(assert (= (and x3632 x3723) x4446))
(assert (x3087 x4503))
(assert (x3087 x4455))
(assert (= x423 (and x3534 x1827)))
(assert (= x2354 (and x1008 (not x2297))))
(assert (= x2119 (x1315 (x1970 x2119))))
(assert (= x3959 (and x1562 x1586)))
(assert (= x821 (and (not x4378) x1354)))
(assert (= x260 (and x3460 x1327)))
(assert (x3087 x557))
(assert (x3087 x4209))
(assert (x3087 x1021))
(assert (x3087 x3431))
(assert (x3087 x682))
(assert (x3087 x3501))
(assert (= (and (not x788) x1982) x739))
(assert (x3087 x553))
(assert (= x2750 (x1315 (x1970 x2750))))
(assert (x3087 x922))
(assert (= x2791 (and (not x4567) x537)))
(assert (x3087 x1588))
(assert (= (and (not x2580) x740) x2969))
(assert (= (and x3449 x3073) x331))
(assert (=> (<= x4879 10000) (= (x2553 x4879) (x1970 x4879))))
(assert (= (x1315 (x350 x3140 1)) (+ (x1315 x3140) 1)))
(assert (x3087 x3492))
(assert (= (and x4130 x93) x454))
(assert (x3087 x1495))
(assert (= (and x3635 x4316) x2624))
(assert (x3087 x3883))
(assert (x3087 x2197))
(assert (= x84 (and x3378 (not x1635))))
(assert (= x1095 (or x2817 x2631)))
(assert (= (+ (x1315 x4421) 1) (x1315 (x350 x4421 1))))
(assert (x3087 x3137))
(assert (= x3765 (and (not x3088) x2757)))
(assert (x3087 x2321))
(assert (x3087 x4764))
(assert (= (x2553 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x1970 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (= (x1315 (x2553 2217467699)) 2217467699))
(assert (x3087 x2468))
(assert (= (x1315 (x2553 2929553584)) 2929553584))
(assert (x3087 x3946))
(assert (= x2334 (and (not x747) x2910)))
(assert (x3087 x2359))
(assert (= x560 (and x84 x1172)))
(assert (x3087 x2293))
(assert (= (=> (and (or (and (not x3567) (= (x709 (x1970 x226) x1746 0) x1647)) (and (= x4021 (x350 x1746 2)) x3567)) (= x3567 (= 0 x226))) x2387) x4300))
(assert (x136 x2063))
(assert (x3087 x4599))
(assert (x3087 x1779))
(assert (= (+ (x1315 x4404) 1) (x1315 (x350 x4404 1))))
(assert (= x2954 (and x124 x2662)))
(assert (x3087 x2782))
(assert (= (and x1452 x631) x3316))
(assert (= (x1315 (x350 x4828 1)) (+ 1 (x1315 x4828))))
(assert (x3087 x914))
(assert (= (x1315 (x1970 x3219)) x3219))
(assert (= x1303 (or x1208 x1523 x3737)))
(assert (= (and x426 x2479) x3285))
(assert (x3087 x577))
(assert (x3087 x538))
(assert (x3087 x3067))
(assert (= x3062 (and x4869 x3515)))
(assert (x3087 x1101))
(assert (x3087 x2207))
(assert (x3087 x2644))
(assert (= (and (not x426) x2479) x1832))
(assert (= x1544 (and x2306 (not x270))))
(assert (x3087 x585))
(assert (x3087 x530))
(assert (= (x1970 1461501637330902918203684832716283019655932542976) (x2553 1461501637330902918203684832716283019655932542976)))
(assert (= x237 (and x1858 x1766)))
(assert (= (x1315 (x1970 x421)) x421))
(assert (x3087 x3804))
(assert (x3374 x3308))
(assert (=> (>= 10000 x3230) (= (x1970 x3230) (x2553 x3230))))
(assert (= (and (not x4523) x3363) x740))
(assert (= (and x3764 x2413) x4387))
(assert (x3087 x2085))
(assert (= x176 (or x3860 x4256)))
(assert (x3087 x1299))
(assert (x136 x4151))
(assert (x3087 x4795))
(assert (= (=> (and (= x1512 x2455) (= x1665 x3568)) x4220) x4765))
(assert (= x1483 (and x1886 x1488)))
(assert (= x3666 (or x2874 x2488)))
(assert (= (+ 1 (x1315 x1909)) (x1315 (x350 x1909 1))))
(assert (= x2105 (and x2566 x225)))
(assert (= x2131 (=> (and (= x3512 x1118) (= x4132 x1996)) x3246)))
(assert (x3087 x4357))
(assert (x3087 x3796))
(assert (= x95 (and (not x1413) x4792)))
(assert (=> (<= x2959 10000) (= (x2553 x2959) (x1970 x2959))))
(assert (= (and x3616 (not x2229)) x1286))
(assert (x3087 x2745))
(assert (= (or x2040 (and (not x1067) x4005)) x4548))
(assert (= (x1315 (x1970 x2637)) x2637))
(assert (= x3179 (=> (and (= x1851 x431) (= x516 0)) x1522)))
(assert (= x1454 (or (and x3683 (not x337)) (and x1106 x3408))))
(assert (x487 x3636))
(assert (x3087 x2042))
(assert (= (and x182 (not x3393)) x3861))
(assert (x3087 x1302))
(assert (= (+ 2 (x1315 x97)) (x1315 (x350 x97 2))))
(assert (x136 x705))
(assert (x3087 x971))
(assert (= (x1315 (x350 x1359 1)) (+ 1 (x1315 x1359))))
(assert (x3087 x3771))
(assert (=> (>= 10000 x2901) (= (x2553 x2901) (x1970 x2901))))
(assert (x3087 x4873))
(assert (x3087 x1928))
(assert (x3087 x4029))
(assert (= (and x3407 x2501) x21))
(assert (= (and (not x4807) x325) x4617))
(assert (x3087 x288))
(assert (= x1675 (or (and x4521 x41) (and (not x1331) x4738) x1748 (and x1113 x4048) (and x2920 (not x214)) x652)))
(assert (x3087 x178))
(assert (x3087 x2225))
(assert (= (x1315 (x350 x3662 1)) (+ 1 (x1315 x3662))))
(assert (= (+ (x1315 x828) 2) (x1315 (x350 x828 2))))
(assert (= (and x83 x1455) x3620))
(assert (x3087 x3746))
(assert (= (and x2597 (not x3567)) x241))
(assert (= x3576 (and x2440 x616)))
(assert (x3087 x94))
(assert (= x4565 (and x2002 (not x2395))))
(assert (x3087 x3742))
(assert (= x2861 (and (not x3196) x3379)))
(assert (= (and (not x4661) x2527) x4734))
(assert (x3087 x2733))
(assert (= x564 (and x2019 (not x3643))))
(assert (x3087 x799))
(assert (= (and x1384 (not x1197)) x4904))
(assert (x3087 x876))
(assert (x3087 x1771))
(assert (= (=> (and (= x1258 x920) (= x3498 0)) x3340) x522))
(assert (x3087 x2196))
(assert (x3087 x496))
(assert (= x2384 (and x4749 x1316)))
(assert (= x793 (and x2861 x3873)))
(assert (x3087 x3672))
(assert (x3087 x2752))
(assert (= x4669 (and x4874 x2776)))
(assert (= x4512 (and (not x2653) x1596)))
(assert (= (and (not x3854) x4245) x1221))
(assert (= x490 (x1315 (x1970 x490))))
(assert (x3087 x2552))
(assert (x3087 x716))
(assert (= x4895 (or x1918 x686)))
(assert (= x2100 (and (not x313) x1294)))
(check-sat)
(exit)