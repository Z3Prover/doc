(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1554 0)) (((x1574 (x1692 x1554) (x305 x1554) (x719 Int)) (x201 (x1060 x1554) (x1492 x1554) (x1019 x1554) (x1112 x1554) (x1129 Int)) (x510 (x1671 x1554) (x1605 x1554) (x877 x1554) (x1690 x1554) (x461 x1554) (x392 Int)) (x835 (x69 x1554) (x534 x1554) (x722 x1554) (x373 x1554) (x1333 x1554) (x309 x1554) (x1007 Int)) (x237 (x282 Int)) (x1547 (x1357 x1554) (x1363 x1554) (x1385 x1554) (x971 x1554) (x505 x1554) (x108 x1554) (x1569 x1554) (x864 Int)) (x710 (x501 x1554) (x1344 x1554) (x25 x1554) (x1567 Int)) (x1149 (x393 x1554) (x1456 Int)))))
(declare-fun x834 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x946 () Bool)
(declare-fun x1371 () Int)
(declare-fun x328 () Bool)
(declare-fun x1665 () Int)
(declare-fun x804 () Int)
(declare-fun x745 () Bool)
(declare-fun x191 () Int)
(declare-fun x1088 () Int)
(declare-fun x660 () Int)
(declare-fun x983 () Int)
(declare-fun x610 () Bool)
(declare-fun x871 () Int)
(declare-fun x1021 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x1100 () Int)
(declare-fun x468 () Bool)
(declare-fun x1561 () Int)
(declare-fun x803 () Bool)
(declare-fun x1170 () x1554)
(declare-fun x1260 () Bool)
(declare-fun x301 () Bool)
(declare-fun x756 () Bool)
(declare-fun x1262 () Int)
(declare-fun x1227 () x1554)
(declare-fun x365 () Bool)
(declare-fun x472 () Bool)
(declare-fun x974 () Bool)
(declare-fun x1644 () Int)
(declare-fun x842 (Int) Int)
(declare-fun x389 () Int)
(declare-fun x1064 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x570 () Bool)
(declare-fun x812 () Bool)
(declare-fun x267 () Bool)
(declare-fun x688 () Int)
(declare-fun x1327 () Bool)
(declare-fun x601 () Bool)
(declare-fun x296 () Int)
(declare-fun x208 () Bool)
(declare-fun x347 () Bool)
(declare-fun x119 () Bool)
(declare-fun x977 (x1554) Int)
(declare-fun x733 () Bool)
(declare-fun x37 () Int)
(declare-fun x1255 () Bool)
(declare-fun x292 () Bool)
(declare-fun x619 () x1554)
(declare-fun x300 () Bool)
(declare-fun x454 () Bool)
(declare-fun x788 () Int)
(declare-fun x4 () Bool)
(declare-fun x520 () Bool)
(declare-fun x1274 () Int)
(declare-fun x917 () Int)
(declare-fun x129 () Bool)
(declare-fun x837 () Bool)
(declare-fun x1077 (Int) Int)
(declare-fun x1351 () Int)
(declare-fun x596 () Bool)
(declare-fun x1310 () Int)
(declare-fun x232 () Int)
(declare-fun x195 () Int)
(declare-fun x466 () Int)
(declare-fun x487 () Bool)
(declare-fun x479 () Int)
(declare-fun x695 (Int Int) Int)
(declare-fun x1232 () Bool)
(declare-fun x455 () Int)
(declare-fun x936 () Int)
(declare-fun x96 () Bool)
(declare-fun x374 () Bool)
(declare-fun x535 () Int)
(declare-fun x1056 () Int)
(declare-fun x241 () Bool)
(declare-fun x799 () Bool)
(declare-fun x224 () Bool)
(declare-fun x1379 () Int)
(declare-fun x1141 () Int)
(declare-fun x750 () Bool)
(declare-fun x332 () Int)
(declare-fun x440 () Int)
(declare-fun x661 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x748 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x839 () Int)
(declare-fun x961 () Int)
(declare-fun x1342 () Int)
(declare-fun x1464 () Int)
(declare-fun x90 () Bool)
(declare-fun x1054 () Int)
(declare-fun x1294 () Bool)
(declare-fun x1455 () Int)
(declare-fun x836 () Int)
(declare-fun x21 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x766 () Bool)
(declare-fun x633 () Bool)
(declare-fun x967 () Bool)
(declare-fun x252 () Bool)
(declare-fun x182 () Int)
(declare-fun x439 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x734 () Bool)
(declare-fun x1204 () Int)
(declare-fun x1231 () Bool)
(declare-fun x204 () Bool)
(declare-fun x767 () Int)
(declare-fun x1328 () Bool)
(declare-fun x1206 () Int)
(declare-fun x1046 () Bool)
(declare-fun x101 () Int)
(declare-fun x1694 () Int)
(declare-fun x1147 () Int)
(declare-fun x483 () Bool)
(declare-fun x46 () Int)
(declare-fun x1489 () Bool)
(declare-fun x743 () Int)
(declare-fun x1215 () Int)
(declare-fun x1453 () Bool)
(declare-fun x58 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x383 () Int)
(declare-fun x861 () Bool)
(declare-fun x473 () Bool)
(declare-fun x324 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x802 () Bool)
(declare-fun x930 () Int)
(declare-fun x251 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x1052 () Int)
(declare-fun x1640 () Bool)
(declare-fun x721 () Bool)
(declare-fun x600 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x1413 () Int)
(declare-fun x1053 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x49 () Bool)
(declare-fun x91 () Bool)
(declare-fun x690 () Int)
(declare-fun x1193 () Int)
(declare-fun x1268 () Bool)
(declare-fun x519 () Int)
(declare-fun x1538 () Bool)
(declare-fun x631 () Bool)
(declare-fun x288 () Int)
(declare-fun x335 () Bool)
(declare-fun x1245 () Int)
(declare-fun x641 (Int) Int)
(declare-fun x303 () Int)
(declare-fun x785 () Int)
(declare-fun x278 () Bool)
(declare-fun x1434 () Int)
(declare-fun x1239 () Int)
(declare-fun x844 () Int)
(declare-fun x157 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x1618 () Int)
(declare-fun x285 () Bool)
(declare-fun x82 () Int)
(declare-fun x979 () Bool)
(declare-fun x606 () Bool)
(declare-fun x1592 () Int)
(declare-fun x1437 () Bool)
(declare-fun x1444 () Int)
(declare-fun x1081 () Int)
(declare-fun x765 () Bool)
(declare-fun x964 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x415 () Bool)
(declare-fun x39 () Int)
(declare-fun x995 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x1040 (Int) Int)
(declare-fun x81 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x934 () Bool)
(declare-fun x612 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x694 () Bool)
(declare-fun x1168 () Int)
(declare-fun x1306 () Bool)
(declare-fun x585 () Bool)
(declare-fun x647 () Int)
(declare-fun x179 () Bool)
(declare-fun x508 () Int)
(declare-fun x849 () Bool)
(declare-fun x111 () Bool)
(declare-fun x889 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x712 () Bool)
(declare-fun x716 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x1703 () Int)
(declare-fun x604 () Bool)
(declare-fun x117 () Int)
(declare-fun x150 () Bool)
(declare-fun x1106 () Int)
(declare-fun x1662 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x822 () Bool)
(declare-fun x1646 () Int)
(declare-fun x327 (Int) Int)
(declare-fun x319 () Int)
(declare-fun x1110 () Bool)
(declare-fun x1625 (Int) Int)
(declare-fun x53 () Bool)
(declare-fun x1523 () Int)
(declare-fun x442 () Bool)
(declare-fun x430 () Int)
(declare-fun x1302 () Int)
(declare-fun x828 () Int)
(declare-fun x675 () Bool)
(declare-fun x507 () Int)
(declare-fun x517 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x172 () Int)
(declare-fun x1133 () x1554)
(declare-fun x800 () Int)
(declare-fun x987 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x1030 () Int)
(declare-fun x991 () Int)
(declare-fun x851 () x1554)
(declare-fun x1474 () Int)
(declare-fun x752 () Bool)
(declare-fun x1137 () Int)
(declare-fun x1111 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x664 (Int) Int)
(declare-fun x1438 () Bool)
(declare-fun x189 () Bool)
(declare-fun x1248 () Int)
(declare-fun x1616 () Bool)
(declare-fun x840 () Bool)
(declare-fun x545 () Int)
(declare-fun x1695 () Int)
(declare-fun x742 () Int)
(declare-fun x1585 () Bool)
(declare-fun x77 () Bool)
(declare-fun x557 () Bool)
(declare-fun x811 () Bool)
(declare-fun x859 () Bool)
(declare-fun x1490 () Int)
(declare-fun x1126 () Int)
(declare-fun x618 () Bool)
(declare-fun x216 () Int)
(declare-fun x51 () Int)
(declare-fun x1201 (Int) Int)
(declare-fun x1309 () Bool)
(declare-fun x1180 () Int)
(declare-fun x1487 () Bool)
(declare-fun x297 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x163 () Int)
(declare-fun x73 () Int)
(declare-fun x989 () Int)
(declare-fun x1621 () Int)
(declare-fun x623 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x868 () Int)
(declare-fun x763 () Bool)
(declare-fun x1266 () Int)
(declare-fun x1578 () Int)
(declare-fun x426 () Int)
(declare-fun x959 () Int)
(declare-fun x1223 () Int)
(declare-fun x656 () Bool)
(declare-fun x1355 () Int)
(declare-fun x580 () x1554)
(declare-fun x404 () Bool)
(declare-fun x255 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x697 () Int)
(declare-fun x414 () Bool)
(declare-fun x629 () Bool)
(declare-fun x405 () Bool)
(declare-fun x634 () Int)
(declare-fun x1613 (Int) Int)
(declare-fun x465 () Int)
(declare-fun x494 () Int)
(declare-fun x485 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x1240 () Int)
(declare-fun x1572 () Int)
(declare-fun x985 () Bool)
(declare-fun x827 () Bool)
(declare-fun x47 (Int) Int)
(declare-fun x696 () Bool)
(declare-fun x881 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x1397 () Int)
(declare-fun x351 () Bool)
(declare-fun x1612 () Int)
(declare-fun x925 () Int)
(declare-fun x988 () Int)
(declare-fun x355 () Int)
(declare-fun x1416 () Int)
(declare-fun x247 () Bool)
(declare-fun x1393 () Int)
(declare-fun x741 () Int)
(declare-fun x1157 () Bool)
(declare-fun x1058 () x1554)
(declare-fun x29 () Bool)
(declare-fun x345 () Bool)
(declare-fun x1300 () Int)
(declare-fun x531 () Int)
(declare-fun x1094 () Int)
(declare-fun x1096 () Int)
(declare-fun x858 () Bool)
(declare-fun x996 () Bool)
(declare-fun x441 () Bool)
(declare-fun x219 () Bool)
(declare-fun x133 () Bool)
(declare-fun x254 () Bool)
(declare-fun x536 () Int)
(declare-fun x1603 () Bool)
(declare-fun x725 () Bool)
(declare-fun x678 () Int)
(declare-fun x493 (Int) Int)
(declare-fun x1290 () Int)
(declare-fun x187 () Int)
(declare-fun x1035 () Int)
(declare-fun x1175 () Int)
(declare-fun x1364 () Bool)
(declare-fun x708 () Int)
(declare-fun x317 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x914 () Int)
(declare-fun x337 () Bool)
(declare-fun x813 () Bool)
(declare-fun x658 () Bool)
(declare-fun x975 (Int) Int)
(declare-fun x275 () Bool)
(declare-fun x1553 () Int)
(declare-fun x615 () x1554)
(declare-fun x190 () Int)
(declare-fun x784 () Bool)
(declare-fun x411 () Bool)
(declare-fun x366 () Bool)
(declare-fun x747 (Int) Int)
(declare-fun x402 () Bool)
(declare-fun x1408 () Int)
(declare-fun x891 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x1289 () Int)
(declare-fun x1688 () Bool)
(declare-fun x357 () Int)
(declare-fun x1412 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x240 () Int)
(declare-fun x755 () Int)
(declare-fun x1002 () Int)
(declare-fun x1059 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x209 () Int)
(declare-fun x1195 () Bool)
(declare-fun x310 () Int)
(declare-fun x1622 () Int)
(declare-fun x1529 () Bool)
(declare-fun x1645 () Int)
(declare-fun x1271 () Bool)
(declare-fun x22 () x1554)
(declare-fun x1399 () x1554)
(declare-fun x1391 () Int)
(declare-fun x1517 () Int)
(declare-fun x1127 () Int)
(declare-fun x1588 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1102 () Int)
(declare-fun x256 () Int)
(declare-fun x160 () Int)
(declare-fun x1124 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x671 () Int)
(declare-fun x1527 () Int)
(declare-fun x1353 () Bool)
(declare-fun x218 () Bool)
(declare-fun x128 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x797 () Bool)
(declare-fun x673 () x1554)
(declare-fun x1211 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1546 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x650 () Int)
(declare-fun x378 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x684 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x652 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x1339 () Int)
(declare-fun x1354 () Int)
(declare-fun x820 () Bool)
(declare-fun x1701 () Int)
(declare-fun x482 () Bool)
(declare-fun x968 () Bool)
(declare-fun x316 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x1533 () Int)
(declare-fun x1582 () Int)
(declare-fun x314 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1470 () Bool)
(declare-fun x1386 () Int)
(declare-fun x526 () Bool)
(declare-fun x265 () Int)
(declare-fun x672 () Int)
(declare-fun x50 () Int)
(declare-fun x927 () x1554)
(declare-fun x1472 () Bool)
(declare-fun x143 () Bool)
(declare-fun x737 () Int)
(declare-fun x1454 () Int)
(declare-fun x1610 () Int)
(declare-fun x588 () Int)
(declare-fun x1295 () Int)
(declare-fun x293 () Int)
(declare-fun x1608 () Bool)
(declare-fun x1286 () Int)
(declare-fun x281 () x1554)
(declare-fun x611 () Bool)
(declare-fun x178 () Bool)
(declare-fun x732 () Int)
(declare-fun x276 () Int)
(declare-fun x768 () Int)
(declare-fun x433 () Int)
(declare-fun x279 () Int)
(declare-fun x1542 () Int)
(declare-fun x1039 () x1554)
(declare-fun x12 () Int)
(declare-fun x762 () Bool)
(declare-fun x901 () x1554)
(declare-fun x556 () Int)
(declare-fun x1415 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x1185 () x1554)
(declare-fun x640 () Bool)
(declare-fun x1724 () Int)
(declare-fun x135 () Int)
(declare-fun x5 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x181 (x1554) Int)
(declare-fun x197 () Bool)
(declare-fun x994 () Bool)
(declare-fun x1288 () Int)
(declare-fun x333 () Int)
(declare-fun x1447 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x590 () Int)
(declare-fun x906 () Bool)
(declare-fun x295 () Bool)
(declare-fun x369 () x1554)
(declare-fun x1365 () Int)
(declare-fun x735 () Bool)
(declare-fun x1156 () Int)
(declare-fun x1061 () Bool)
(declare-fun x1229 () Int)
(declare-fun x639 () Bool)
(declare-fun x1534 () x1554)
(declare-fun x893 () Int)
(declare-fun x407 () Bool)
(declare-fun x1419 () Int)
(declare-fun x538 () Int)
(declare-fun x448 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x186 () Bool)
(declare-fun x551 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x540 () Int)
(declare-fun x206 () Bool)
(declare-fun x283 () Int)
(declare-fun x1543 () Bool)
(declare-fun x1540 () Int)
(declare-fun x336 () Bool)
(declare-fun x180 () Int)
(declare-fun x892 () x1554)
(declare-fun x289 () Int)
(declare-fun x55 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x625 () x1554)
(declare-fun x1192 () Bool)
(declare-fun x1311 () x1554)
(declare-fun x1345 () Bool)
(declare-fun x1237 () Int)
(declare-fun x1188 () Bool)
(declare-fun x100 () Int)
(declare-fun x1154 () Bool)
(declare-fun x503 () Int)
(declare-fun x945 () Int)
(declare-fun x541 () Int)
(declare-fun x1267 (Int) Int)
(declare-fun x1637 () Int)
(declare-fun x1469 () Int)
(declare-fun x516 () Int)
(declare-fun x1395 () Bool)
(declare-fun x912 () Bool)
(declare-fun x1216 () Int)
(declare-fun x1663 () Int)
(declare-fun x183 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x1576 () Int)
(declare-fun x368 () Int)
(declare-fun x2 () Int)
(declare-fun x1601 () Bool)
(declare-fun x965 () Int)
(declare-fun x470 () Int)
(declare-fun x1382 () Bool)
(declare-fun x1609 () Int)
(declare-fun x398 () Int)
(declare-fun x841 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x973 () Bool)
(declare-fun x1577 () Int)
(declare-fun x1405 () Int)
(declare-fun x475 () Bool)
(declare-fun x1486 () Int)
(declare-fun x1633 () Int)
(declare-fun x729 () Int)
(declare-fun x488 () Int)
(declare-fun x845 () Bool)
(declare-fun x1702 () Int)
(declare-fun x1614 () Int)
(declare-fun x902 () Bool)
(declare-fun x396 () Bool)
(declare-fun x598 () Int)
(declare-fun x518 () Int)
(declare-fun x62 () Bool)
(declare-fun x525 () Int)
(declare-fun x1270 () Int)
(declare-fun x161 () Bool)
(declare-fun x1174 () Int)
(declare-fun x564 () Int)
(declare-fun x401 () Bool)
(declare-fun x1337 () Int)
(declare-fun x302 () Int)
(declare-fun x1322 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x770 () Int)
(declare-fun x883 () Bool)
(declare-fun x24 () Bool)
(declare-fun x796 () Bool)
(declare-fun x80 () Bool)
(declare-fun x343 () Bool)
(declare-fun x1716 () Int)
(declare-fun x33 () Int)
(declare-fun x913 () Int)
(declare-fun x956 () Int)
(declare-fun x64 () Int)
(declare-fun x558 () Int)
(declare-fun x1104 () Bool)
(declare-fun x978 () Int)
(declare-fun x1494 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x555 () Bool)
(declare-fun x1087 () Int)
(declare-fun x807 (Int) Int)
(declare-fun x751 () Bool)
(declare-fun x1383 () Int)
(declare-fun x497 () Bool)
(declare-fun x955 () Bool)
(declare-fun x268 () Bool)
(declare-fun x1485 () Int)
(declare-fun x412 () Bool)
(declare-fun x380 () Int)
(declare-fun x1668 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x112 () x1554)
(declare-fun x484 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x457 () Int)
(declare-fun x1183 () Int)
(declare-fun x1005 () Int)
(declare-fun x705 () Bool)
(declare-fun x880 () Int)
(declare-fun x577 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x981 () Int)
(declare-fun x1615 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1652 () Int)
(declare-fun x144 () Bool)
(declare-fun x113 () Bool)
(declare-fun x115 () Bool)
(declare-fun x657 () Bool)
(declare-fun x512 () Int)
(declare-fun x943 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x403 () Int)
(declare-fun x76 () Bool)
(declare-fun x832 () Int)
(declare-fun x1570 () Bool)
(declare-fun x35 () Int)
(declare-fun x1443 () Bool)
(declare-fun x492 () Bool)
(declare-fun x603 () Bool)
(declare-fun x1571 (Int) Int)
(declare-fun x31 () Int)
(declare-fun x654 () Int)
(declare-fun x1679 (Int) Int)
(declare-fun x118 () Int)
(declare-fun x527 () Bool)
(declare-fun x244 () Int)
(declare-fun x1352 () Bool)
(declare-fun x1080 () Int)
(declare-fun x1558 () Bool)
(declare-fun x262 () Int)
(declare-fun x717 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x1717 () Int)
(declare-fun x259 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x808 () Bool)
(declare-fun x1481 (x1554) Int)
(declare-fun x377 () Int)
(declare-fun x330 () Bool)
(declare-fun x900 () Int)
(declare-fun x692 () x1554)
(declare-fun x225 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x1230 () Int)
(declare-fun x502 () Bool)
(declare-fun x947 () Int)
(declare-fun x862 () x1554)
(declare-fun x786 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x463 () Bool)
(declare-fun x83 () Bool)
(declare-fun x1284 () x1554)
(declare-fun x941 () Int)
(declare-fun x739 () Int)
(declare-fun x986 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x1072 () Int)
(declare-fun x1425 () Int)
(declare-fun x1624 () Int)
(declare-fun x1186 () Int)
(declare-fun x1092 () Bool)
(declare-fun x42 () Int)
(declare-fun x972 () Bool)
(declare-fun x667 () Int)
(declare-fun x1009 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x1291 () Int)
(declare-fun x1471 () Int)
(declare-fun x200 () Bool)
(declare-fun x274 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x109 () Bool)
(declare-fun x594 () x1554)
(declare-fun x1173 () Bool)
(declare-fun x703 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x1568 () Int)
(declare-fun x480 () Bool)
(declare-fun x1715 () x1554)
(declare-fun x728 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x444 () Int)
(declare-fun x1098 () Int)
(declare-fun x1497 () Bool)
(declare-fun x749 () Int)
(declare-fun x32 () x1554)
(declare-fun x36 () Bool)
(declare-fun x1209 () x1554)
(declare-fun x681 () Bool)
(declare-fun x417 () Bool)
(declare-fun x779 () Int)
(declare-fun x761 () Bool)
(declare-fun x1600 (Int) Int)
(declare-fun x110 () Int)
(declare-fun x1011 () Bool)
(declare-fun x1525 (Int) Int)
(declare-fun x1389 (x1554) Int)
(declare-fun x1539 () Bool)
(declare-fun x999 () x1554)
(declare-fun x693 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x1228 () Int)
(declare-fun x87 () Bool)
(declare-fun x1282 () x1554)
(declare-fun x1507 () x1554)
(declare-fun x43 () x1554)
(declare-fun x583 () x1554)
(declare-fun x659 () Int)
(declare-fun x1261 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x184 () Bool)
(declare-fun x1541 () Int)
(declare-fun x513 () Bool)
(declare-fun x1384 () Int)
(declare-fun x1118 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x477 () Bool)
(declare-fun x791 () Bool)
(declare-fun x1360 () x1554)
(declare-fun x992 () Bool)
(declare-fun x775 () Bool)
(declare-fun x114 () Bool)
(declare-fun x1566 () Int)
(declare-fun x451 () Int)
(declare-fun x1122 () Bool)
(declare-fun x1563 () Int)
(declare-fun x1583 () Bool)
(declare-fun x162 () Bool)
(declare-fun x416 () Int)
(declare-fun x504 () Int)
(declare-fun x362 () x1554)
(declare-fun x857 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x1057 (Int Int) Int)
(declare-fun x698 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x1522 () Int)
(declare-fun x843 () Bool)
(declare-fun x1313 () Int)
(declare-fun x1432 () Int)
(declare-fun x815 () Int)
(declare-fun x364 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x334 () Bool)
(declare-fun x1402 () Int)
(declare-fun x1560 () Int)
(declare-fun x375 () x1554)
(declare-fun x935 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1254 () x1554)
(declare-fun x230 () Int)
(declare-fun x340 () Bool)
(declare-fun x500 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x44 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x1676 () x1554)
(declare-fun x61 () Int)
(declare-fun x1707 () Bool)
(declare-fun x1693 () Int)
(declare-fun x1078 () Bool)
(declare-fun x1713 (Int) Int)
(declare-fun x630 () Int)
(declare-fun x863 () Int)
(declare-fun x1635 () Bool)
(declare-fun x1704 () Int)
(declare-fun x1117 () Bool)
(declare-fun x854 () Int)
(declare-fun x953 () Int)
(declare-fun x942 () Int)
(declare-fun x830 () Bool)
(declare-fun x524 () Bool)
(declare-fun x773 () Int)
(declare-fun x1579 () Int)
(declare-fun x1269 () Bool)
(declare-fun x329 () Int)
(declare-fun x1150 () Bool)
(declare-fun x801 () Int)
(declare-fun x1048 () x1554)
(declare-fun x226 () Bool)
(declare-fun x1298 () Int)
(declare-fun x446 () Int)
(declare-fun x869 () Bool)
(declare-fun x459 () Bool)
(declare-fun x299 (Int) x1554)
(declare-fun x567 () Int)
(declare-fun x1037 () Int)
(declare-fun x234 () Int)
(declare-fun x196 () Int)
(declare-fun x1050 () Bool)
(declare-fun x408 () Int)
(declare-fun x66 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x136 () Int)
(declare-fun x1655 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1505 () Int)
(declare-fun x140 () Bool)
(declare-fun x933 () Int)
(declare-fun x543 () Bool)
(declare-fun x616 () Bool)
(declare-fun x1428 () Int)
(declare-fun x149 () Bool)
(declare-fun x568 () Int)
(declare-fun x528 () Int)
(declare-fun x1278 () Bool)
(declare-fun x26 () Int)
(declare-fun x1401 () Int)
(declare-fun x818 () Bool)
(declare-fun x1445 () Int)
(declare-fun x450 () Bool)
(declare-fun x131 () Bool)
(declare-fun x211 () Bool)
(declare-fun x884 () Bool)
(declare-fun x823 () Bool)
(declare-fun x704 () Bool)
(declare-fun x915 () Int)
(declare-fun x1163 () Bool)
(declare-fun x137 () x1554)
(declare-fun x1706 () Bool)
(declare-fun x636 () Int)
(declare-fun x413 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x284 () Int)
(declare-fun x1589 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x638 (Int) Int)
(declare-fun x291 () Bool)
(declare-fun x105 () Int)
(declare-fun x866 () Bool)
(declare-fun x1536 () Int)
(declare-fun x418 () Int)
(declare-fun x79 () Int)
(declare-fun x1530 () Int)
(declare-fun x167 () Int)
(declare-fun x605 () Bool)
(declare-fun x790 () Bool)
(declare-fun x1457 () Int)
(declare-fun x1136 () Bool)
(declare-fun x1208 () Int)
(declare-fun x1607 () Int)
(declare-fun x65 () Bool)
(declare-fun x447 () Int)
(declare-fun x1028 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x753 () Int)
(declare-fun x718 () Bool)
(declare-fun x665 () Int)
(declare-fun x677 () Int)
(declare-fun x515 () Int)
(declare-fun x550 () Int)
(declare-fun x793 () Int)
(declare-fun x878 () Bool)
(declare-fun x929 () Bool)
(declare-fun x141 () Bool)
(declare-fun x273 () Bool)
(declare-fun x432 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x258 () Bool)
(declare-fun x1070 () Int)
(declare-fun x391 () Int)
(declare-fun x951 () Int)
(declare-fun x1450 () Int)
(declare-fun x28 () Bool)
(declare-fun x14 () Bool)
(declare-fun x1557 () Int)
(declare-fun x103 () Int)
(declare-fun x581 () Int)
(declare-fun x783 () Bool)
(declare-fun x824 () Int)
(declare-fun x445 () Int)
(declare-fun x1165 () Bool)
(declare-fun x1642 () Int)
(declare-fun x860 () Bool)
(declare-fun x424 () Bool)
(declare-fun x909 () Int)
(declare-fun x1647 () Bool)
(declare-fun x233 () Int)
(declare-fun x34 () x1554)
(declare-fun x1086 () Int)
(declare-fun x566 () Bool)
(declare-fun x897 () Int)
(declare-fun x1626 () Bool)
(declare-fun x683 () Bool)
(declare-fun x339 () Bool)
(declare-fun x805 () Bool)
(declare-fun x381 () Bool)
(declare-fun x754 () Int)
(declare-fun x882 () Bool)
(declare-fun x833 () x1554)
(declare-fun x350 () Bool)
(declare-fun x781 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x879 () Bool)
(declare-fun x573 () Bool)
(declare-fun x1222 () Int)
(declare-fun x825 () x1554)
(declare-fun x98 () Bool)
(declare-fun x464 (Int) Int)
(declare-fun x1172 (Int) Int)
(declare-fun x52 () Bool)
(declare-fun x419 () Bool)
(declare-fun x1349 () Int)
(declare-fun x926 () Int)
(declare-fun x1524 () Int)
(declare-fun x669 () Bool)
(declare-fun x75 () Int)
(declare-fun x1552 () Bool)
(declare-fun x542 () Bool)
(declare-fun x990 () Bool)
(declare-fun x3 () Bool)
(declare-fun x1119 () Int)
(declare-fun x662 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x287 () Int)
(declare-fun x1598 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x948 () Int)
(declare-fun x1256 () Bool)
(declare-fun x1338 () Int)
(declare-fun x238 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x587 () Bool)
(declare-fun x320 () Bool)
(declare-fun x759 () Int)
(declare-fun x561 () Int)
(declare-fun x789 () Int)
(declare-fun x286 () Bool)
(declare-fun x1116 () Int)
(declare-fun x1673 () Int)
(declare-fun x1167 () Bool)
(declare-fun x11 () Bool)
(declare-fun x491 () Bool)
(declare-fun x1169 () Int)
(declare-fun x193 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x1125 () Int)
(declare-fun x904 () Int)
(declare-fun x207 () Int)
(declare-fun x521 () Bool)
(declare-fun x702 () Int)
(declare-fun x353 () Int)
(declare-fun x1159 () Int)
(declare-fun x40 () Int)
(declare-fun x245 () Bool)
(declare-fun x92 () Bool)
(declare-fun x876 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x850 () Bool)
(declare-fun x769 () Int)
(declare-fun x1340 () Bool)
(declare-fun x250 () x1554)
(declare-fun x93 () Int)
(declare-fun x559 () Bool)
(declare-fun x563 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x264 () Int)
(declare-fun x720 () Bool)
(declare-fun x434 () Int)
(declare-fun x723 () Bool)
(declare-fun x48 () Bool)
(declare-fun x706 () Int)
(declare-fun x1653 () Bool)
(declare-fun x1458 () Int)
(declare-fun x1461 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x269 () Int)
(declare-fun x97 (Int Int) Int)
(declare-fun x27 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x608 () Bool)
(declare-fun x188 () Int)
(declare-fun x406 () Int)
(declare-fun x354 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x86 () Bool)
(declare-fun x1596 () x1554)
(declare-fun x248 (Int) Int)
(declare-fun x1358 () Int)
(declare-fun x1238 () Bool)
(declare-fun x1139 () Int)
(declare-fun x1562 () Bool)
(declare-fun x18 () Bool)
(declare-fun x1520 () Int)
(declare-fun x453 () Int)
(declare-fun x409 () Bool)
(declare-fun x798 () Bool)
(declare-fun x1722 () Int)
(declare-fun x1537 () Bool)
(declare-fun x1034 () Int)
(declare-fun x910 () Int)
(declare-fun x217 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x99 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x847 () Int)
(declare-fun x1283 () Int)
(declare-fun x1277 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x714 (Int) Int)
(declare-fun x908 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x1643 () Int)
(declare-fun x436 () Int)
(declare-fun x997 () Int)
(declare-fun x1226 (Int) Int)
(declare-fun x886 () Int)
(declare-fun x1518 () Bool)
(declare-fun x1654 () Int)
(declare-fun x94 () Bool)
(declare-fun x960 () Int)
(declare-fun x872 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x170 () Int)
(declare-fun x382 () Int)
(declare-fun x1202 () Bool)
(declare-fun x620 () Bool)
(declare-fun x400 () Int)
(declare-fun x898 () Bool)
(declare-fun x918 () Int)
(declare-fun x982 () Int)
(declare-fun x1247 () Bool)
(declare-fun x676 () Int)
(declare-fun x757 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1083 () Int)
(declare-fun x687 () Int)
(declare-fun x1675 () Int)
(declare-fun x1439 () Bool)
(declare-fun x1272 () Int)
(declare-fun x88 () Int)
(declare-fun x1090 () Bool)
(declare-fun x106 () Bool)
(declare-fun x780 () Int)
(declare-fun x263 () Int)
(declare-fun x1449 () Int)
(declare-fun x1095 () Bool)
(declare-fun x1158 () Int)
(declare-fun x1115 () Int)
(declare-fun x1506 () Int)
(declare-fun x177 () Bool)
(declare-fun x1373 () Int)
(declare-fun x147 () Bool)
(declare-fun x624 () Bool)
(declare-fun x280 () Int)
(declare-fun x544 () Bool)
(declare-fun x931 () Int)
(declare-fun x1682 () Int)
(declare-fun x613 () Int)
(declare-fun x372 () Bool)
(declare-fun x691 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x134 () Bool)
(declare-fun x1107 () Int)
(declare-fun x121 () Int)
(declare-fun x874 () Int)
(declare-fun x571 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x1210 () Int)
(declare-fun x1628 () Int)
(declare-fun x1131 () Int)
(declare-fun x1187 () Int)
(declare-fun x95 () Int)
(declare-fun x486 () Int)
(declare-fun x888 () Bool)
(declare-fun x356 () x1554)
(declare-fun x554 () Bool)
(declare-fun x1299 () Int)
(declare-fun x1429 () Bool)
(declare-fun x548 () Int)
(declare-fun x1148 () Int)
(declare-fun x816 () Bool)
(declare-fun x57 () Int)
(declare-fun x1498 () Int)
(declare-fun x173 () Bool)
(declare-fun x1189 (x1554) Int)
(declare-fun x668 () Bool)
(declare-fun x1590 () Int)
(declare-fun x1197 () Bool)
(declare-fun x546 () Bool)
(declare-fun x277 () Int)
(declare-fun x78 () Int)
(declare-fun x89 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x1636 () Int)
(declare-fun x1038 () Bool)
(declare-fun x1488 () x1554)
(declare-fun x1660 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1093 () Int)
(declare-fun x744 () Bool)
(declare-fun x158 () Bool)
(declare-fun x387 () Int)
(declare-fun x806 () Bool)
(declare-fun x175 () Bool)
(declare-fun x260 () Bool)
(declare-fun x1620 () Int)
(declare-fun x1381 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x1138 () x1554)
(declare-fun x1221 () Bool)
(declare-fun x919 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x222 () Bool)
(declare-fun x379 () Bool)
(declare-fun x674 () Bool)
(declare-fun x887 () Bool)
(declare-fun x437 () Int)
(declare-fun x597 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x939 () Int)
(declare-fun x68 () Int)
(declare-fun x582 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x410 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1123 () Int)
(declare-fun x168 () Int)
(declare-fun x1233 () Int)
(declare-fun x431 () Bool)
(declare-fun x685 () Bool)
(declare-fun x758 () Int)
(declare-fun x242 () Bool)
(declare-fun x1212 () Int)
(declare-fun x576 () Bool)
(declare-fun x323 () Int)
(declare-fun x266 () Int)
(declare-fun x954 (x1554) Int)
(declare-fun x1380 (x1554) Int)
(declare-fun x700 () Bool)
(declare-fun x787 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1257 (x1554) Int)
(declare-fun x489 () Bool)
(declare-fun x496 () Bool)
(declare-fun x957 (Int) Int)
(declare-fun x124 () Bool)
(declare-fun x1314 (Int) Int)
(declare-fun x1623 () Bool)
(declare-fun x962 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x831 () Bool)
(declare-fun x937 () Bool)
(declare-fun x774 () Bool)
(declare-fun x980 () Bool)
(declare-fun x306 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x655 () Int)
(declare-fun x498 () Bool)
(declare-fun x185 () Int)
(declare-fun x84 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x682 () x1554)
(declare-fun x621 () Bool)
(declare-fun x838 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x920 () Bool)
(declare-fun x1026 () Int)
(declare-fun x1658 () Bool)
(declare-fun x341 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x6 () Bool)
(declare-fun x257 () Bool)
(declare-fun x107 () Int)
(declare-fun x1406 () Int)
(declare-fun x19 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x499 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x15 () Int)
(declare-fun x885 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x511 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x460 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x130 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x1032 () Int)
(declare-fun x1285 () Int)
(declare-fun x1027 () Bool)
(declare-fun x899 () Bool)
(declare-fun x530 () Int)
(declare-fun x1709 () Int)
(declare-fun x1678 () Bool)
(declare-fun x307 () x1554)
(declare-fun x1359 () Int)
(declare-fun x1319 () Bool)
(declare-fun x713 () Int)
(declare-fun x421 () Bool)
(declare-fun x715 () Int)
(declare-fun x1 () Bool)
(declare-fun x1249 () Int)
(declare-fun x223 () Bool)
(declare-fun x731 () Int)
(declare-fun x1108 () Int)
(declare-fun x249 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x315 () Int)
(declare-fun x438 () Bool)
(declare-fun x458 () Bool)
(declare-fun x614 () Int)
(declare-fun x385 () Bool)
(declare-fun x856 () Bool)
(declare-fun x1638 () x1554)
(declare-fun x1293 () Int)
(declare-fun x16 () Int)
(declare-fun x349 () Int)
(declare-fun x1301 () Int)
(declare-fun x304 () Int)
(declare-fun x1714 () Int)
(declare-fun x30 () Int)
(declare-fun x313 () Bool)
(declare-fun x1459 () Int)
(declare-fun x1356 () Bool)
(declare-fun x814 () Bool)
(declare-fun x553 (x1554) Int)
(declare-fun x1559 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x1421 () Int)
(declare-fun x593 () Int)
(declare-fun x360 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x865 () Int)
(declare-fun x1325 () Bool)
(declare-fun x203 () Bool)
(declare-fun x642 () Bool)
(declare-fun x711 () x1554)
(declare-fun x626 () x1554)
(declare-fun x1023 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x1400 () Int)
(declare-fun x1503 () Bool)
(declare-fun x645 () Bool)
(declare-fun x853 () Int)
(declare-fun x146 () Bool)
(declare-fun x963 () Int)
(declare-fun x627 () Bool)
(declare-fun x651 () Int)
(declare-fun x429 () Bool)
(declare-fun x921 () Bool)
(declare-fun x331 () x1554)
(declare-fun x846 () Int)
(declare-fun x152 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x449 () Bool)
(declare-fun x777 () Bool)
(declare-fun x1367 () Int)
(declare-fun x709 () Int)
(declare-fun x1519 () Int)
(declare-fun x386 () Bool)
(declare-fun x423 () Bool)
(declare-fun x363 () Int)
(declare-fun x1097 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x562 () x1554)
(declare-fun x322 () Bool)
(declare-fun x1203 () Int)
(declare-fun x1199 () Bool)
(declare-fun x907 () Bool)
(declare-fun x235 (Int) Int)
(declare-fun x476 () Bool)
(declare-fun x148 () Int)
(declare-fun x294 () Bool)
(declare-fun x547 () Bool)
(declare-fun x970 () Int)
(declare-fun x214 () Int)
(declare-fun x707 () Int)
(declare-fun x155 () Int)
(declare-fun x1321 () Bool)
(declare-fun x469 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x552 () Int)
(declare-fun x1378 () Int)
(declare-fun x776 () Int)
(declare-fun x359 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x586 () Int)
(declare-fun x592 () Bool)
(declare-fun x575 () Int)
(declare-fun x1160 () Bool)
(declare-fun x164 () Bool)
(declare-fun x1008 () Int)
(declare-fun x388 () x1554)
(declare-fun x7 () Int)
(declare-fun x1440 () Int)
(declare-fun x1218 () Bool)
(declare-fun x231 () Int)
(declare-fun x8 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1350 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1326 () x1554)
(declare-fun x478 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1016 () Int)
(declare-fun x1651 () Bool)
(declare-fun x826 () Bool)
(declare-fun x435 () Int)
(declare-fun x165 () Bool)
(declare-fun x1599 (Int) Int)
(declare-fun x1265 () Int)
(declare-fun x221 () Bool)
(declare-fun x984 () Int)
(declare-fun x740 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x1501 () Int)
(declare-fun x138 () Bool)
(declare-fun x126 () Int)
(declare-fun x298 () Bool)
(declare-fun x104 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x870 () Int)
(declare-fun x422 () Bool)
(declare-fun x1431 () Int)
(declare-fun x120 () Bool)
(declare-fun x727 () Bool)
(declare-fun x923 () Bool)
(declare-fun x932 () Bool)
(declare-fun x940 () Bool)
(declare-fun x1504 () Int)
(declare-fun x1467 () Bool)
(declare-fun x1594 () Int)
(declare-fun x1281 () Bool)
(declare-fun x41 () Bool)
(declare-fun x1205 () Int)
(declare-fun x325 () Int)
(declare-fun x145 () Int)
(declare-fun x159 () Int)
(declare-fun x609 () Bool)
(declare-fun x855 () Int)
(declare-fun x452 () Bool)
(declare-fun x701 () Int)
(declare-fun x1264 () Int)
(declare-fun x1263 () Bool)
(declare-fun x174 () Int)
(declare-fun x549 () Bool)
(declare-fun x648 (x1554) Int)
(declare-fun x1368 (x1554) Int)
(declare-fun x156 () Bool)
(declare-fun x1075 () Int)
(declare-fun x506 () Bool)
(declare-fun x361 () Int)
(declare-fun x1427 (x1554) Int)
(declare-fun x1151 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x246 () Bool)
(declare-fun x239 () Bool)
(declare-fun x1275 () Int)
(declare-fun x821 () Bool)
(declare-fun x311 () Bool)
(declare-fun x45 () Int)
(declare-fun x1332 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x966 () Bool)
(declare-fun x522 () Int)
(declare-fun x903 () Bool)
(declare-fun x602 () Bool)
(declare-fun x261 () x1554)
(declare-fun x1634 () Bool)
(declare-fun x950 () Bool)
(declare-fun x666 () Bool)
(declare-fun x565 () Bool)
(declare-fun x9 (x1554) Int)
(declare-fun x428 () Int)
(declare-fun x151 () Bool)
(declare-fun x1451 () Int)
(declare-fun x456 () Int)
(declare-fun x622 () x1554)
(declare-fun x13 () x1554)
(declare-fun x1680 () Bool)
(declare-fun x321 () Bool)
(declare-fun x425 () Int)
(declare-fun x1476 (x1554) Int)
(declare-fun x792 () Bool)
(declare-fun x599 () Bool)
(declare-fun x59 () Bool)
(declare-fun x875 () Int)
(declare-fun x153 () Bool)
(declare-fun x699 () Bool)
(declare-fun x1200 (Int) Int)
(declare-fun x760 () Int)
(declare-fun x23 () Bool)
(declare-fun x1548 () Int)
(declare-fun x1074 () Int)
(declare-fun x1241 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1105 () Bool)
(declare-fun x213 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x911 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x1242 () Int)
(declare-fun x326 () Bool)
(declare-fun x199 () Bool)
(declare-fun x176 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x1198 () Int)
(declare-fun x229 () Bool)
(declare-fun x74 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x670 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x928 () Int)
(declare-fun x367 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1435 () Bool)
(declare-fun x169 () Int)
(declare-fun x746 () Bool)
(declare-fun x123 (Int) Int)
(declare-fun x537 () Bool)
(declare-fun x539 () Int)
(declare-fun x427 () Int)
(declare-fun x1595 () Int)
(declare-fun x1029 () Int)
(declare-fun x1477 () Int)
(declare-fun x1331 () Bool)
(declare-fun x462 () Int)
(declare-fun x595 () Int)
(declare-fun x312 () Bool)
(declare-fun x724 () Bool)
(declare-fun x194 () Bool)
(declare-fun x726 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x1718 () Int)
(declare-fun x443 () Bool)
(declare-fun x782 () Bool)
(declare-fun x116 () Bool)
(declare-fun x1683 () Int)
(declare-fun x1555 () Int)
(declare-fun x523 () Int)
(declare-fun x198 () Int)
(declare-fun x394 () Int)
(declare-fun x1639 () Bool)
(declare-fun x1146 () Int)
(declare-fun x730 () Bool)
(declare-fun x72 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x952 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x308 () Int)
(declare-fun x1409 () Int)
(declare-fun x1343 () Int)
(declare-fun x1394 () Bool)
(declare-fun x371 () Int)
(declare-fun x1279 () x1554)
(declare-fun x228 () Bool)
(declare-fun x852 () Bool)
(declare-fun x127 () Bool)
(declare-fun x778 () x1554)
(declare-fun x572 () Bool)
(declare-fun x205 () Bool)
(declare-fun x689 () Int)
(declare-fun x738 () Bool)
(declare-fun x132 () Int)
(define-fun x1182 ((x1554 x1554) (x1465 Int)) x1554 (ite ((_ is x1547) x1554) (x1547 (x1357 x1554) (x1363 x1554) (x1385 x1554) (x971 x1554) (x505 x1554) (x108 x1554) (x1569 x1554) (+ (x864 x1554) x1465)) (ite ((_ is x835) x1554) (x835 (x69 x1554) (x534 x1554) (x722 x1554) (x373 x1554) (x1333 x1554) (x309 x1554) (+ x1465 (x1007 x1554))) (ite ((_ is x510) x1554) (x510 (x1671 x1554) (x1605 x1554) (x877 x1554) (x1690 x1554) (x461 x1554) (+ (x392 x1554) x1465)) (ite ((_ is x201) x1554) (x201 (x1060 x1554) (x1492 x1554) (x1019 x1554) (x1112 x1554) (+ (x1129 x1554) x1465)) (ite ((_ is x710) x1554) (x710 (x501 x1554) (x1344 x1554) (x25 x1554) (+ (x1567 x1554) x1465)) (ite ((_ is x1149) x1554) (x1149 (x393 x1554) (+ x1465 (x1456 x1554))) (ite ((_ is x1574) x1554) (x1574 (x1692 x1554) (x305 x1554) (+ x1465 (x719 x1554))) (x237 (+ x1465 (x282 x1554)))))))))))
(define-fun x17 ((x1375 Int)) Int (ite (and (<= 0 x1375) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1375)) x1375 (- x1375 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x236 ((x1375 Int)) Int (ite (and (>= x1375 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x1375)) (+ x1375 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1375))
(define-fun x1511 ((x490 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x490) (>= x490 0)))
(define-fun x1710 ((x490 Int)) Bool (and (= x490 (x695 115792089237316195423570985008687907853269984665640564039457584007913129639935 x490)) (= (x695 x490 115792089237316195423570985008687907853269984665640564039457584007913129639935) x490)))
(define-fun x1516 ((x490 Int)) Bool (and (= 0 (x695 0 x490)) (= 0 (x695 x490 0))))
(define-fun x1140 ((x490 Int)) Bool (= (x695 x490 x490) x490))
(define-fun x1020 ((x490 Int)) Bool (and (x1516 x490) (x1140 x490) (x1710 x490)))
(define-fun x202 ((x490 Int) (x1297 Int)) Bool (= (x695 x1297 x490) (x695 x490 x1297)))
(define-fun x1063 ((x490 Int) (x1297 Int)) Bool (and (=> (>= x1297 0) (<= (x695 x490 x1297) x1297)) (>= (x695 x490 x1297) 0) (=> (<= 0 x490) (<= (x695 x490 x1297) x490))))
(define-fun x352 ((x490 Int) (x1297 Int)) Bool (and (x1063 x490 x1297) (x202 x490 x1297)))
(define-fun x122 ((x490 Int)) Bool (= (x695 x490 1) (mod x490 2)))
(define-fun x896 ((x490 Int)) Bool (and (x122 x490) (x352 x490 1)))
(define-fun x166 ((x490 Int)) Bool (= (x695 x490 127) (mod x490 128)))
(define-fun x376 ((x490 Int)) Bool (and (x166 x490) (x352 x490 127)))
(define-fun x643 ((x490 Int)) Bool (= (+ (mod x490 256) (x695 x490 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (mod x490 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x495 ((x490 Int)) Bool (and (x352 x490 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x643 x490)))
(define-fun x1055 ((x490 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1057 x490 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1057 115792089237316195423570985008687907853269984665640564039457584007913129639935 x490) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x591 ((x490 Int)) Bool (and (= x490 (x1057 x490 0)) (= x490 (x1057 0 x490))))
(define-fun x772 ((x490 Int)) Bool (= x490 (x1057 x490 x490)))
(define-fun x71 ((x490 Int)) Bool (and (x1055 x490) (x591 x490) (x772 x490)))
(define-fun x342 ((x490 Int) (x1297 Int)) Bool (= (x1057 x490 x1297) (x1057 x1297 x490)))
(define-fun x271 ((x490 Int) (x1297 Int)) Bool (and (<= (x1057 x490 x1297) (+ x490 x1297)) (=> (>= x490 0) (>= (x1057 x490 x1297) x490)) (=> (<= 0 x1297) (>= (x1057 x490 x1297) x1297))))
(define-fun x1181 ((x490 Int) (x1297 Int)) Bool (and (x342 x490 x1297) (x271 x490 x1297)))
(define-fun x509 ((x490 Int)) Bool (= (x695 x490 26959946667150639794667015087019630673637144422540572481103610249215) (mod x490 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x1725 ((x490 Int)) Bool (and (x509 x490) (x352 x490 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x578 ((x490 Int)) Bool (= (mod x490 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x490 32) (x695 x490 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x1042 ((x490 Int)) Bool (and (x352 x490 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x578 x490)))
(define-fun x574 ((x10 Int)) Int (ite (> x1358 x10) (x235 x10) 0))
(define-fun x1674 ((x10 Int)) Int (ite (< x10 x1434) (x1201 x10) 0))
(define-fun x1273 ((x10 Int)) Int (ite (> x214 x10) (x1040 x10) 0))
(define-fun x467 ((x10 Int)) Int (ite (> x755 x10) (x1200 x10) 0))
(define-fun x628 ((x10 x1554)) Int (ite (= x10 (x299 x743)) x145 (x1189 x10)))
(define-fun x1659 ((x10 x1554)) Int (ite (= (x299 x1237) x10) x279 (x628 x10)))
(define-fun x1025 ((x10 Int)) Int (ite (and (> (+ 128 0) x10) (<= 128 x10)) (x1226 (+ (- x10 128) 0)) (x1625 x10)))
(define-fun x1036 ((x10 x1554)) Int (x181 x10))
(define-fun x637 ((x10 x1554)) Int (ite x1256 (x1036 x10) (x181 x10)))
(define-fun x1441 ((x10 x1554)) Int (x181 x10))
(define-fun x1491 ((x10 x1554)) Int (x181 x10))
(define-fun x632 ((x10 x1554)) Int (x181 x10))
(define-fun x253 ((x10 x1554)) Int (ite x891 (x632 x10) (ite x151 (x637 x10) (x181 x10))))
(define-fun x1234 ((x10 x1554)) Int (ite x1495 (x648 x10) (x1659 x10)))
(define-fun x1424 ((x10 x1554)) Int (ite (= (x299 x1237) x10) x1026 (x1234 x10)))
(define-fun x1114 ((x10 x1554)) Int (ite (= (x299 x743) x10) x1702 (x1424 x10)))
(define-fun x1526 ((x10 x1554)) Int (ite x1307 (x1234 x10) (ite x704 (x1189 x10) (x1114 x10))))
(define-fun x1010 ((x10 x1554)) Int (ite (= (x299 x743) x10) x881 (x1526 x10)))
(define-fun x644 ((x10 x1554)) Int (ite (= x10 (x299 x743)) x1548 (x1010 x10)))
(define-fun x1482 ((x10 x1554)) Int (x644 x10))
(define-fun x533 ((x10 x1554)) Int (ite (= x10 (x299 x743)) x525 (x1482 x10)))
(define-fun x635 ((x10 x1554)) Int (ite (= (x299 x743) x10) x79 (x533 x10)))
(define-fun x1475 ((x10 x1554)) Int (ite x246 (x181 x10) (x1441 x10)))
(define-fun x1575 ((x10 x1554)) Int (ite (= x10 (x299 x743)) x1205 (x1526 x10)))
(define-fun x1253 ((x10 x1554)) Int (ite (= x10 (x299 x743)) x1540 (x1575 x10)))
(define-fun x370 ((x10 x1554)) Int (x1253 x10))
(define-fun x1318 ((x10 x1554)) Int (ite (= (x299 x743) x10) x26 (x370 x10)))
(define-fun x399 ((x10 x1554)) Int (ite (= (x299 x743) x10) x457 (x1318 x10)))
(define-fun x809 ((x10 x1554)) Int (ite x869 (x181 x10) (x1491 x10)))
(define-fun x63 ((x10 x1554)) Int (ite (= (x299 x743) x10) x913 (x1526 x10)))
(define-fun x1113 ((x10 x1554)) Int (ite (= (x299 x743) x10) x136 (x63 x10)))
(define-fun x125 ((x10 x1554)) Int (x1113 x10))
(define-fun x210 ((x10 x1554)) Int (ite (= (x299 x743) x10) x880 (x125 x10)))
(define-fun x272 ((x10 x1554)) Int (ite (= (x299 x743) x10) x959 (x210 x10)))
(define-fun x894 ((x10 x1554)) Int (x181 x10))
(define-fun x215 ((x10 x1554)) Int (ite (= x10 (x299 x743)) x1694 (x1526 x10)))
(define-fun x1499 ((x10 x1554)) Int (ite (= x10 (x299 x743)) x383 (x215 x10)))
(define-fun x20 ((x10 x1554)) Int (x1499 x10))
(define-fun x318 ((x10 x1554)) Int (ite (= (x299 x743) x10) x1409 (x20 x10)))
(define-fun x358 ((x10 x1554)) Int (ite (= (x299 x743) x10) x982 (x318 x10)))
(define-fun x344 ((x10 Int)) Int (ite (= 128 x10) 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x123 x10)))
(define-fun x653 ((x10 Int)) Int (ite (= x10 132) x1633 (x344 x10)))
(define-fun x958 ((x10 Int)) Int (ite (= x10 164) x264 (x653 x10)))
(define-fun x102 ((x10 Int)) Int (ite (= 196 x10) 96 (x958 x10)))
(define-fun x649 ((x10 Int)) Int (ite (= 228 x10) x1536 (x102 x10)))
(define-fun x270 ((x10 Int)) Int (ite (= 260 x10) x148 (x649 x10)))
(define-fun x1130 ((x10 Int)) Int (ite x1277 (x649 x10) (x270 x10)))
(define-fun x60 ((x10 Int)) Int (ite (= x416 x10) 0 (x1130 x10)))
(define-fun x1085 ((x10 Int)) Int (ite x1135 (x1130 x10) (x60 x10)))
(define-fun x795 ((x10 Int)) Int (ite (and (<= 132 x10) (> (+ (x236 (- x1428 132)) 132) x10)) (x1085 (+ 260 (- x10 132))) (x1273 x10)))
(define-fun x848 ((x10 Int)) Int (ite (and (> (+ 128 x1293) x10) (<= 128 x10)) (x795 (+ 132 (- x10 128))) (x807 x10)))
(define-fun x212 ((x10 Int)) Int (ite (= x10 x435) 0 (x848 x10)))
(define-fun x192 ((x10 Int)) Int (ite (= 128 x10) x528 (x212 x10)))
(define-fun x1196 ((x10 Int)) Int (ite (= x10 128) 656247078515407326148355443760548300161286948278503429861414951787075469312 (x747 x10)))
(define-fun x1369 ((x10 Int)) Int (ite (= 132 x10) x264 (x1196 x10)))
(define-fun x569 ((x10 Int)) Int (ite (= x10 164) x1527 (x1369 x10)))
(define-fun x532 ((x10 Int)) Int (ite (= x10 196) 96 (x569 x10)))
(define-fun x139 ((x10 Int)) Int (ite (= 228 x10) x437 (x532 x10)))
(define-fun x338 ((x10 Int)) Int (ite (= 260 x10) x1419 (x139 x10)))
(define-fun x1480 ((x10 Int)) Int (ite x1382 (x139 x10) (x338 x10)))
(define-fun x922 ((x10 Int)) Int (ite (= x10 x767) 0 (x1480 x10)))
(define-fun x397 ((x10 Int)) Int (ite x950 (x1480 x10) (x922 x10)))
(define-fun x1376 ((x10 Int)) Int (ite (and (<= 132 x10) (> (+ (x236 (- x930 132)) 132) x10)) (x397 (+ (- x10 132) 260)) (x467 x10)))
(define-fun x1631 ((x10 Int)) Int (ite (and (< x10 (+ 128 x1148)) (>= x10 128)) (x1376 (+ (- x10 128) 132)) (x1713 x10)))
(define-fun x938 ((x10 Int)) Int (ite (= x10 x453) 0 (x1631 x10)))
(define-fun x764 ((x10 Int)) Int (ite (= x10 128) x377 (x938 x10)))
(define-fun x1446 ((x10 Int)) Int (ite (= x10 128) 33277650900348105781121326340019631498405652329376380866381358124409588547584 (x641 x10)))
(define-fun x529 ((x10 Int)) Int (ite (= 132 x10) x1633 (x1446 x10)))
(define-fun x873 ((x10 Int)) Int (ite (= 164 x10) x1527 (x529 x10)))
(define-fun x1681 ((x10 Int)) Int (ite (= 196 x10) 96 (x873 x10)))
(define-fun x579 ((x10 Int)) Int (ite (= x10 228) x371 (x1681 x10)))
(define-fun x346 ((x10 Int)) Int (ite (= 260 x10) x382 (x579 x10)))
(define-fun x1697 ((x10 Int)) Int (ite x1099 (x579 x10) (x346 x10)))
(define-fun x1366 ((x10 Int)) Int (ite (= x10 x731) 0 (x1697 x10)))
(define-fun x1390 ((x10 Int)) Int (ite x1719 (x1697 x10) (x1366 x10)))
(define-fun x584 ((x10 Int)) Int (ite (and (<= 132 x10) (> (+ 132 (x236 (- x545 132))) x10)) (x1390 (+ (- x10 132) 260)) (x1674 x10)))
(define-fun x1606 ((x10 Int)) Int (ite (and (< x10 (+ x970 128)) (>= x10 128)) (x584 (+ 132 (- x10 128))) (x464 x10)))
(define-fun x1178 ((x10 Int)) Int (ite (= x10 x1379) 0 (x1606 x10)))
(define-fun x481 ((x10 Int)) Int (ite (= 128 x10) x910 (x1178 x10)))
(define-fun x70 ((x10 Int)) Int (ite x1307 (ite x1495 (x1025 x10) (x1625 x10)) (ite x704 (x1625 x10) (ite x1495 (x1025 x10) (x1625 x10)))))
(define-fun x227 ((x10 Int)) Int (ite (= x10 x1703) x1520 (x70 x10)))
(define-fun x395 ((x10 Int)) Int (ite x295 (x70 x10) (x227 x10)))
(define-fun x420 ((x10 Int)) Int (ite (= x10 x515) 0 (x395 x10)))
(define-fun x1014 ((x10 Int)) Int (ite x1312 (x395 x10) (x420 x10)))
(define-fun x1448 ((x10 Int)) Int (ite (and (<= 100 x10) (< x10 (+ 100 (x236 (- x1080 100))))) (x1014 (+ (x17 (+ 100 x518)) (- x10 100))) (x574 x10)))
(define-fun x817 ((x10 Int)) Int (ite (and (> (+ x1266 128) x10) (<= 128 x10)) (x1448 (+ 100 (- x10 128))) (x1267 x10)))
(define-fun x1101 ((x10 Int)) Int (ite (= x1301 x10) 0 (x817 x10)))
(define-fun x142 ((x10 Int)) Int (ite (= 128 x10) x556 (x1101 x10)))
(define-fun x243 ((x10 Int)) Int (ite (= x10 x1183) x75 (x493 x10)))
(define-fun x794 ((x10 Int)) Int (ite (= x10 x289) x1223 (x327 x10)))
(define-fun x56 ((x10 Int)) Int (ite (= x10 x1183) x749 (x248 x10)))
(define-fun x1436 ((x10 Int)) Int (ite (= x1126 x10) x310 (x1172 x10)))
(define-fun x829 ((x10 Int)) Int (ite (= x10 x1183) x1505 (x664 x10)))
(define-fun x1591 ((x10 Int)) Int (ite (= x10 x737) x1032 (x957 x10)))
(define-fun x1587 ((x10 Int)) Int (ite (= x1123 x10) x1527 (x1679 x10)))
(define-fun x1528 ((x10 Int)) Int (ite (= x1675 x10) 64 (x1587 x10)))
(define-fun x1468 ((x10 Int)) Int (ite (= x590 x10) x95 (x1528 x10)))
(define-fun x384 ((x10 Int)) Int (ite (= x1183 x10) x504 (x1599 x10)))
(define-fun x924 ((x10 Int)) Int (ite (= x1283 x10) x874 (x1468 x10)))
(define-fun x1711 ((x10 x1554)) Int (ite (= x10 (x299 x743)) x1141 (x1526 x10)))
(define-fun x1006 ((x10 x1554)) Int (ite (= (x299 x266) x10) x1008 (x1711 x10)))
(define-fun x589 ((x10 x1554)) Int (ite x1531 (x553 x10) (x1006 x10)))
(define-fun x1219 ((x10 x1554)) Int (ite (= (x299 x266) x10) x1645 (x589 x10)))
(define-fun x1067 ((x10 x1554)) Int (ite (= x10 (x299 x743)) x400 (x1219 x10)))
(define-fun x916 ((x10 x1554)) Int (ite x143 (x589 x10) (ite x666 (x1526 x10) (x1067 x10))))
(define-fun x1466 ((x10 x1554)) Int (ite x675 (x1482 x10) (ite x1708 (x1526 x10) (x635 x10))))
(define-fun x679 ((x10 x1554)) Int (ite x675 (x253 x10) (ite x1708 (x181 x10) (x253 x10))))
(define-fun x1171 ((x10 x1554)) Int (ite x372 (x370 x10) (ite x513 (x1526 x10) (x399 x10))))
(define-fun x1721 ((x10 x1554)) Int (ite x372 (x1475 x10) (ite x513 (x181 x10) (x1475 x10))))
(define-fun x819 ((x10 x1554)) Int (ite x81 (x809 x10) (ite x374 (x181 x10) (x809 x10))))
(define-fun x1374 ((x10 x1554)) Int (ite x81 (x125 x10) (ite x374 (x1526 x10) (x272 x10))))
(define-fun x607 ((x10 x1554)) Int (ite x745 (x894 x10) (ite x468 (x181 x10) (x894 x10))))
(define-fun x867 ((x10 x1554)) Int (ite x745 (x20 x10) (ite x468 (x1526 x10) (x358 x10))))
(define-fun x663 ((x10 x1554)) Int (ite x990 (x867 x10) (x1526 x10)))
(define-fun x1493 ((x10 x1554)) Int (ite x990 (x607 x10) (x181 x10)))
(define-fun x474 ((x10 x1554)) Int (ite x448 (x1493 x10) (x819 x10)))
(define-fun x686 ((x10 x1554)) Int (ite x448 (x663 x10) (x1374 x10)))
(define-fun x220 ((x10 x1554)) Int (ite x1328 (x686 x10) (x1171 x10)))
(define-fun x154 ((x10 x1554)) Int (ite x1328 (x474 x10) (x1721 x10)))
(define-fun x736 ((x10 x1554)) Int (ite x816 (x220 x10) (x1466 x10)))
(define-fun x1602 ((x10 x1554)) Int (ite x255 (ite x816 (x154 x10) (x679 x10)) (x181 x10)))
(define-fun x1109 ((x10 x1554)) Int (ite x193 (x1526 x10) (ite x255 (x736 x10) (x916 x10))))
(define-fun x1259 ((x10 x1554)) Int (ite x259 (x1189 x10) (ite x782 (x1526 x10) (x1109 x10))))
(define-fun x171 ((x10 Int)) Int (ite (= 128 x10) x1216 (x212 x10)))
(define-fun x1549 ((x10 Int)) Int (ite (= 128 x10) x1320 (x938 x10)))
(define-fun x54 ((x10 Int)) Int (ite (= 128 x10) x1406 (x1178 x10)))
(define-fun x998 ((x10 Int)) Int (ite (= 128 x10) x187 (x1101 x10)))
(define-fun x471 ((x10 Int)) Int (ite x99 (x212 x10) (x171 x10)))
(define-fun x1669 ((x10 Int)) Int (ite x285 (x938 x10) (x1549 x10)))
(define-fun x514 ((x10 Int)) Int (ite x326 (x1178 x10) (x54 x10)))
(define-fun x290 ((x10 Int)) Int (ite x211 (x1101 x10) (x998 x10)))
(define-fun x944 ((x10 Int)) Int (ite x1246 (x471 x10) (x192 x10)))
(define-fun x976 ((x10 Int)) Int (ite x820 (x1669 x10) (x764 x10)))
(define-fun x67 ((x10 Int)) Int (ite x1155 (x514 x10) (x481 x10)))
(define-fun x969 ((x10 Int)) Int (ite x790 (x290 x10) (x142 x10)))
(define-fun x1387 ((x10 Int)) Int (ite (= x804 x10) x1187 (x70 x10)))
(define-fun x993 ((x10 Int)) Int (ite (= x1408 x10) x801 (x70 x10)))
(define-fun x895 ((x10 Int)) Int (ite (= x10 x1100) x568 (x70 x10)))
(define-fun x38 ((x10 Int)) Int (ite x1117 (x70 x10) (x1387 x10)))
(define-fun x1334 ((x10 Int)) Int (ite (= x1718 x10) 0 (x38 x10)))
(define-fun x949 ((x10 Int)) Int (ite x841 (x70 x10) (x993 x10)))
(define-fun x617 ((x10 Int)) Int (ite (= x308 x10) 0 (x949 x10)))
(define-fun x1128 ((x10 Int)) Int (ite x497 (x70 x10) (x895 x10)))
(define-fun x905 ((x10 Int)) Int (ite (= x1693 x10) 0 (x1128 x10)))
(define-fun x810 ((x10 Int)) Int (ite x1470 (x38 x10) (x1334 x10)))
(define-fun x890 ((x10 Int)) Int (ite x1190 (x949 x10) (x617 x10)))
(define-fun x1604 ((x10 Int)) Int (ite x921 (x1128 x10) (x905 x10)))
(define-fun x348 ((x490 Int)) Bool (=> (and (not (= x490 656247078515407326148355443760548300161286948278503429861414951787075469312)) (not (= 656196706 x490)) (not (= 2923951457 x490)) (not (= x490 4294967295)) (not (= x490 3646176329)) (not (= x490 2826133662)) (not (= x490 100641684887429822015232653770480429695213136867978658013931169090238473568256)) (not (= x490 2829837978)) (not (= x490 33277650900348105781121326340019631498405652329376380866381358124409588547584)) (not (= x490 78829575338057407266098799593532030895783219923606930547737006156155256307712)) (not (= x490 3018310333)) (not (= 3694151790 x490)) (not (= x490 3632429537)) (not (= 3815738821 x490)) (not (= x490 3923945232)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x490)) (not (= 1686547025 x490)) (not (= x490 1680813743)) (not (= 1039635593 x490)) (not (= x490 88571590996395278321425588994396360096048694792728512562370458433322657775616)) (not (= 3189536363 x490)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x490)) (not (= x490 302407648)) (not (= 1461501637330902918203684832716283019655932542975 x490)) (not (= 115792089237316195423570985008687907853269984665640564039457484007913129639935 x490)) (not (= 839595567 x490)) (not (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 x490)) (not (= x490 2196353862)) (not (= x490 4294967296)) (not (= 1844058622 x490)) (not (= x490 1946460669)) (not (= x490 3727475225)) (not (= x490 604800)) (not (= x490 18446744073709551615)) (not (= x490 56965738197333823925951794324075424010313516842063129668313081903848242544640)) (> x490 10000) (not (= 1871487246 x490)) (not (= x490 100000000000000000)) (not (= x490 1461501637330902918203684832716283019655932542976)) (not (= x490 1991898891)) (not (= x490 24341557)) (not (= x490 3733007566)) (not (= x490 2112976665)) (not (= x490 3948783980)) (not (= x490 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (not (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 x490)) (not (= x490 1030951317)) (not (= 2867924802 x490)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x490)) (not (= 2005628311 x490)) (not (= 1234336674 x490)) (not (= x490 200511672))) (not ((_ is x237) (x299 x490)))))
(assert (x1511 x984))
(assert (x376 x1125))
(assert (= (and (=> (not x1) x1041) (=> (and (and (= x59 (= x361 (ite x29 1 0))) (= (< x12 32) x29) (= (div x293 2) x126) (= (x695 1 x293) x361) (= x12 (ite (< 0 x361) x126 (x695 127 x126)))) x1) (and (=> x59 x1686) (=> (and (and (= x1185 (x1182 x1507 x1156)) (= (x17 (+ x12 31)) x231) (= x1507 (x1149 (x237 5) 0)) (= (div x231 32) x1156) (= x502 (> x1266 0))) (not x59)) (and (=> (and (= (> x1266 31) x158) x502) (and (=> (and (not x158) (and (= x581 (ite x144 x535 x634)) (= (x17 (+ x1266 x1266)) x1169) (= x634 (ite x1009 x426 x540)) (= (x1448 100) x398) (= (<= x1169 255) x1009) (= x647 (x695 115792089237316195423570985008687907853269984665640564039457584007913129639680 x398)) (= (x1057 x1169 x647) x540) (= x535 (x17 (+ x647 x1169))) (= (<= x1169 255) x144) (= (x17 (+ x1169 x647)) x426) (= x619 x1507))) x1353) (=> (and x158 (and (= (< 100 x470) x1165) (= x470 (x17 (+ x1266 100))) (= x965 (x17 (+ x1266 x1266))) (= (x17 (+ x965 1)) x1628))) (and (=> (and (not x1165) (= x1507 x1058)) x150) (=> x1165 x206))))) (=> (and (not x502) (and (= x1507 x619) (= x581 0))) x1353)))))) x609))
(assert (x1511 x1458))
(assert (x1042 x283))
(assert (= x1099 (and (not x476) x1331)))
(assert (x1511 x846))
(assert (x1511 x244))
(assert (= (x237 1946460669) (x299 1946460669)))
(assert (x1511 x688))
(assert (x1511 x289))
(assert (x1511 x1622))
(assert (= (and x818 x1082) x1269))
(assert (= x1325 (and x629 x1165)))
(assert (x348 (x938 256)))
(assert (x1511 x1313))
(assert (= (and (not x1657) x278) x725))
(assert (= x205 (or (and x131 x1000) x1105 x662 (and (not x633) x487) x934 (and x1512 (not x1407)) x506 (and x330 x124) x424 x1051 (and x340 x245) x1372 x1260 x1707)))
(assert (= (and (not x878) x1306) x642))
(assert (= (=> (= (not (> x37 32)) x775) (and x1556 x775)) x225))
(assert (= x1018 (and x774 x1296)))
(assert (= (x299 (x1427 x1488)) x1488))
(assert (x495 x398))
(assert (x1511 x1536))
(assert (= (and (not x36) x431) x745))
(assert (x1511 x264))
(assert (= (and (not x720) x1154) x1447))
(assert (= 3646176329 (x1427 (x237 3646176329))))
(assert (= (x237 1686547025) (x299 1686547025)))
(assert (= x850 (and (=> (and (and (= 0 x768) (= x135 x541)) x1538) x1608) (=> (and (not x1538) (and (= (div x403 2) x1561) (= (x17 (+ 1 x1561)) x1610) (= x608 (< x280 x1610)))) (and (=> (and (not x608) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x530) (= x1412 (not (= x530 x655))) (<= 0 x530))) (and (=> (and x1412 (= x354 x1412)) x18) (=> (not x1412) x351))) (=> (and x608 (and (= x541 x135) (= x768 0))) x1608))))))
(assert (= (and x652 (not x292)) x14))
(assert (x1511 x168))
(assert (x348 x1454))
(assert (= x1142 (and x724 x1184)))
(assert (x348 (x212 128)))
(assert (x1511 x978))
(assert (x1725 x1137))
(assert (= x869 (or x726 (and (not x1255) x1150) (and x1700 x1173))))
(assert (x1511 x1355))
(assert (= x1213 (and (not x1662) x1263)))
(assert (= x1699 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x530) (= x407 true) (>= x530 0)) (and (=> (not x407) x203) (=> (and (and (= x1662 (> x530 x541)) (or (and (= x1662 x898) x1662) (and (not x1662) (and (= (= x530 0) x680) (= x898 (ite x680 x680 (= x541 0))))))) x407) x1177)))))
(assert (= (x1427 (x1182 x692 1)) (+ 1 (x1427 x692))))
(assert (= x147 (and x1166 x149)))
(assert (= x1512 (and x487 x633)))
(assert (x1511 x1168))
(assert (x1511 x897))
(assert (x1511 x1624))
(assert (x1511 x1704))
(assert (x1511 x959))
(assert (x1511 x595))
(assert (x348 (x67 288)))
(assert (=> (<= (x938 224) 10000) (= (x299 (x938 224)) (x237 (x938 224)))))
(assert (= (x976 256) (x1427 (x299 (x976 256)))))
(assert (= (x299 (x1427 x692)) x692))
(assert (x1511 x434))
(assert (= x781 (=> (and (= x1088 1) (= x425 x1143) (= x1450 x1402)) x1680)))
(assert (= x726 (and x1689 x1250)))
(assert (= x1353 (=> (= (> (x1427 x1185) (x1427 x619)) x1043) (and (=> (not x1043) x811) (=> x1043 x314)))))
(assert (= x258 (=> (and (= x1621 (x236 (- x51 128))) (= x268 (<= x1621 224))) (and x268 (=> (and (= x625 (ite (>= 32 x1621) (x1149 (x299 (x67 128)) 0) (ite (>= 64 x1621) (x1574 (x299 (x67 128)) (x299 (x67 160)) 0) (ite (<= x1621 96) (x710 (x299 (x67 128)) (x299 (x67 160)) (x299 (x67 192)) 0) (ite (>= 128 x1621) (x201 (x299 (x67 128)) (x299 (x67 160)) (x299 (x67 192)) (x299 (x67 224)) 0) (ite (<= x1621 160) (x510 (x299 (x67 128)) (x299 (x67 160)) (x299 (x67 192)) (x299 (x67 224)) (x299 (x67 256)) 0) (ite (>= 192 x1621) (x835 (x299 (x67 128)) (x299 (x67 160)) (x299 (x67 192)) (x299 (x67 224)) (x299 (x67 256)) (x299 (x67 288)) 0) (ite (<= x1621 224) (x1547 (x299 (x67 128)) (x299 (x67 160)) (x299 (x67 192)) (x299 (x67 224)) (x299 (x67 256)) (x299 (x67 288)) (x299 (x67 320)) 0) (x299 x118))))))))) (= (= x1676 x625) x657) (= (not x657) x354)) x18)))))
(assert (= (or x152 x782) x1162))
(assert (x1511 x1548))
(assert (= (and x1079 (not x153)) x841))
(assert (= (x67 160) (x1427 (x299 (x67 160)))))
(assert (= (x464 192) 0))
(assert (x495 x323))
(assert (x1511 x1612))
(assert (= (x1427 (x1182 x583 1)) (+ (x1427 x583) 1)))
(assert (x1511 x310))
(assert (= x1345 (and (=> x1537 x4) (=> (and (and (= x1038 (< x564 x315)) (= x1397 (div x1450 2)) (= (x17 (+ x1397 1)) x315)) (not x1537)) (and (=> x1038 x4) (=> (and (and (= (not (= x451 x530)) x496) (>= x530 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x530)) (not x1038)) (and (=> (not x496) x324) (=> (and x496 (= x183 x496)) x66))))))))
(assert (= x1084 (and x379 (not x491))))
(assert (x1511 x1411))
(assert (x1511 x1402))
(assert (= x506 (and x84 x239)))
(assert (x1511 x394))
(assert (= 0 (x1625 (x17 (+ 100 x518)))))
(assert (= x911 (and x85 (not x1611))))
(assert (x1511 x1293))
(assert (= (and x249 (not x554)) x478))
(assert (=> (<= (x1178 224) 10000) (= (x237 (x1178 224)) (x299 (x1178 224)))))
(assert (x1511 x660))
(assert (x1511 x1008))
(assert (= (=> (and (= x1298 x1229) (= x30 x1471) (= x391 x319)) x563) x53))
(assert (= x1135 (and x77 (not x730))))
(assert (x1511 x702))
(assert (= x66 (and (=> (and x183 (and (= (div x293 2) x667) (= x127 (< x863 32)) (= x863 (ite (< 0 x918) x667 (x695 127 x667))) (= (= (ite x127 1 0) x918) x698) (= x918 (x695 1 x293)))) (and (=> x698 x4) (=> (and (not x698) (and (= x1274 (div x522 32)) (= x1209 (x1149 (x237 5) 0)) (= (x1182 x1209 x1274) x261) (= (< 0 x1148) x1649) (= x522 (x17 (+ x863 31))))) (and (=> (and (= (> x1148 31) x720) x1649) (and (=> (and (and (= x1209 x692) (= (x1057 x614 x1595) x548) (= x1074 (ite x359 x1636 x868)) (= (ite x1347 x1506 x548) x868) (= x1595 (x695 115792089237316195423570985008687907853269984665640564039457584007913129639680 x100)) (= (x1376 132) x100) (= x614 (x17 (+ x1148 x1148))) (= x1347 (<= x614 255)) (= (x17 (+ x614 x1595)) x1636) (= (>= 255 x614) x359) (= (x17 (+ x1595 x614)) x1506)) (not x720)) x1685) (=> (and x720 (and (= (> x1557 132) x520) (= (x17 (+ x1148 x1148)) x713) (= (x17 (+ 132 x1148)) x1557) (= (x17 (+ x713 1)) x195))) (and (=> x520 x1502) (=> (and (not x520) (= x901 x1209)) x929))))) (=> (and (not x1649) (and (= 0 x1074) (= x1209 x692))) x1685))))) (=> (not x183) x781))))
(assert (x1511 x503))
(assert (= (x1427 (x237 656196706)) 656196706))
(assert (= (x123 388) 0))
(assert (x1020 x567))
(assert (= (and (not x611) x441) x1352))
(assert (x1511 x75))
(assert (= (=> (and (= x988 x1471) (= x319 x1486) (= x1229 x1093)) x200) x563))
(assert (=> (>= 10000 x1620) (= (x299 x1620) (x237 x1620))))
(assert (x1511 x659))
(assert (= x1091 (and x109 x1558)))
(assert (x1511 x418))
(assert (= (and (not x831) x1192) x786))
(assert (x1511 x1329))
(assert (= (x1427 (x1182 x1279 x539)) (+ x539 (x1427 x1279))))
(assert (x1511 x1682))
(assert (x1511 x269))
(assert (= x822 (or x1013 x1049)))
(assert (= x830 (and (not x158) x537)))
(assert (x1511 x1242))
(assert (x1511 x42))
(assert (x1511 x1383))
(assert (= (and x1662 x1263) x336))
(assert (= x1117 (and x1073 (not x1546))))
(assert (= x1276 (=> (and (= (= 0 x368) x1188) (or (not x1188) x1188)) x746)))
(assert (x1511 x456))
(assert (x1511 x1233))
(assert (= (and x1529 (not x908)) x756))
(assert (= (and x661 x1225) x334))
(assert (= (x1427 (x299 (x944 256))) (x944 256)))
(assert (= x339 (and (not x1487) x1179)))
(assert (x1511 x445))
(assert (=> (<= (x212 160) 10000) (= (x237 (x212 160)) (x299 (x212 160)))))
(assert (x348 (x944 192)))
(assert (= (x1427 (x299 (x67 288))) (x67 288)))
(assert (x1511 x1289))
(assert (= x58 (or x1069 x104)))
(assert (x1511 x1354))
(assert (x1511 x30))
(assert (= x1423 (and x165 x1053)))
(assert (x1511 x1035))
(assert (x376 x1288))
(assert (= (and x1479 x992) x1105))
(assert (= (x1427 (x299 (x1101 256))) (x1101 256)))
(assert (= (x299 100641684887429822015232653770480429695213136867978658013931169090238473568256) (x237 100641684887429822015232653770480429695213136867978658013931169090238473568256)))
(assert (= (x747 420) 0))
(assert (x348 (x944 128)))
(assert (= (=> (= x1120 (not (< 1 x541))) (and x1632 x1120)) x1461))
(assert (x1511 x1406))
(assert (x1511 x676))
(assert (x1511 x1107))
(assert (x1020 x1245))
(assert (= (and (not x608) x994) x257))
(assert (x1511 x1637))
(assert (=> (<= (x976 160) 10000) (= (x299 (x976 160)) (x237 (x976 160)))))
(assert (x1020 x1286))
(assert (x1511 x216))
(assert (x1511 x408))
(assert (= x1683 (x1427 (x299 x1683))))
(assert (= (=> (and (= x180 x1054) (= x1542 x325) (= x1624 x1139)) x11) x260))
(assert (= (or (and (not x1188) x1092) x439) x184))
(assert (x1511 x1618))
(assert (= (x957 x1485) 0))
(assert (x1511 x588))
(assert (x1511 x1087))
(assert (=> (>= 10000 (x938 192)) (= (x299 (x938 192)) (x237 (x938 192)))))
(assert (x1511 x540))
(assert (=> (>= 10000 x1454) (= (x299 x1454) (x237 x1454))))
(assert (x1511 x531))
(assert (= (=> (and (= x1329 x93) (= (x17 (+ 128 x1242)) x1329)) x1089) x1231))
(assert (= (and x821 x1678) x1483))
(assert (x1511 x1533))
(assert (= (and x1570 (not x1581)) x1307))
(assert (x1511 x207))
(assert (= (and x932 x547) x1079))
(assert (=> (>= 10000 (x938 288)) (= (x237 (x938 288)) (x299 (x938 288)))))
(assert (x1511 x1384))
(assert (= x1529 (or x675 x1238 x1708)))
(assert (x1511 x371))
(assert (x1511 x1074))
(assert (= (=> (and (= (< x110 x1204) x1429) (or (not x1429) (and x1429 (= (x17 (+ x110 x518)) x515)))) x1535) x1044))
(assert (= (x299 4294967295) (x237 4294967295)))
(assert (x1511 x1029))
(assert (= x81 (and x1452 (not x727))))
(assert (= (x1427 (x237 100641684887429822015232653770480429695213136867978658013931169090238473568256)) 100641684887429822015232653770480429695213136867978658013931169090238473568256))
(assert (= x375 (x299 (x1427 x375))))
(assert (x1511 x630))
(assert (= 0 (x807 224)))
(assert (=> (>= 10000 x707) (= (x299 x707) (x237 x707))))
(assert (= x300 (and (not x1543) x1161)))
(assert (x1511 x689))
(assert (x1511 x1086))
(assert (= x228 (=> (and (= x1413 x588) (= (x17 (+ x1295 128)) x1413)) x1023)))
(assert (= x146 x1653))
(assert (= (or x246 x693) x450))
(assert (x1511 x1450))
(assert (x348 (x976 288)))
(assert (= (and x354 x1045) x385))
(assert (= (x299 3727475225) (x237 3727475225)))
(assert (= (=> (and (= x64 x51) (= x64 (x17 (+ x333 128)))) x258) x360))
(assert (= (x299 56965738197333823925951794324075424010313516842063129668313081903848242544640) (x237 56965738197333823925951794324075424010313516842063129668313081903848242544640)))
(assert (= x193 (and x771 x549)))
(assert (= (and x596 x585) x566))
(assert (x1511 x1490))
(assert (x1511 x779))
(assert (= (and x1661 (not x1564)) x934))
(assert (= 115792089237316195423570985008687907853269984665640564039457484007913129639935 (x1427 (x237 115792089237316195423570985008687907853269984665640564039457484007913129639935))))
(assert (x1511 x767))
(assert (= (and x298 x49) x1414))
(assert (x1511 x1524))
(assert (x1511 x377))
(assert (x1511 x1175))
(assert (= (=> (and (= x163 x276) (= x1030 x541) (= x1143 x353)) x460) x92))
(assert (= x861 (and x1627 (not x681))))
(assert (x1511 x1560))
(assert (= x602 (and x1118 x396)))
(assert (= (=> (and (= (x1182 x1209 1) x1170) (= (not (> x1557 164)) x570)) (and x570 (=> (= x901 x1170) x929))) x1502))
(assert (= (=> (= (< 0 x541) x585) (and (=> (and (not x585) (and (= x135 x541) (= x768 0))) x1608) (=> (and (and (= x577 true) (= (x236 (- x541 1)) x403) (= (x236 (- x541 1)) x1337)) x585) (and (=> (and (not x577) (and (= 0 x768) (= x135 x541))) x1608) (=> (and (and (= x611 (< x403 x280)) (or (and x611 (= x611 x1538)) (and (not x611) (and (= x899 (= 0 x655)) (= x1538 (ite x899 x899 (= 0 x403))))))) x577) x850))))) x1619))
(assert (= (or x1586 x1332) x1066))
(assert (x1511 x1717))
(assert (x1511 x1451))
(assert (= x1404 (and x306 x1217)))
(assert (= (and x1305 (not x898)) x879))
(assert (= (and x898 x1305) x1207))
(assert (=> (<= x743 10000) (= (x299 x743) (x237 x743))))
(assert (= (x299 2112976665) (x237 2112976665)))
(assert (= (x1427 (x237 24341557)) 24341557))
(assert (x1511 x389))
(assert (= x782 (and x366 (not x294))))
(assert (x1511 x556))
(assert (x1511 x188))
(assert (= (=> (and (= (> 32 x1230) x803) (= x1383 (x695 1 x654)) (<= x655 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1157 (= (ite x803 1 0) x1383)) (= x1230 (ite (> x1383 0) x1445 (x695 127 x1445))) (= x1445 (div x654 2)) (>= x655 0)) (and (=> (and x1157 (and (= x135 x541) (= 0 x768))) x1608) (=> (and (and (= (x695 1 x654) x753) (= x1611 (= 0 x753))) (not x1157)) (and (=> x1611 x544) (=> (and (not x1611) (= x1090 (< 0 x1230))) (and (=> x1090 x935) (=> (not x1090) x1648))))))) x115))
(assert (= (and x757 x1580) x972))
(assert (x1511 x1295))
(assert (x1511 x697))
(assert (x1511 x107))
(assert (= x1626 (or x1271 x151 x891)))
(assert (x1511 x308))
(assert (=> (<= (x976 224) 10000) (= (x299 (x976 224)) (x237 (x976 224)))))
(assert (x1511 x904))
(assert (x1511 x1709))
(assert (= (or x1470 x1658) x76))
(assert (= (and x72 x76) x669))
(assert (= (and x450 (not x463)) x372))
(assert (x1511 x88))
(assert (x1020 x1405))
(assert (x1511 x160))
(assert (x348 (x67 256)))
(assert (= (=> (and (and (= (> (x1476 (x299 x743)) 0) x814) (< x1210 2196353862) (<= 0 x1633) (<= 0 x769) (< x1210 839595567) (> 656196706 x1210) (>= 255 x466) (<= 0 x1098) (<= x1633 1461501637330902918203684832716283019655932542975) (= (x1189 (x299 x743)) x1530) (<= 0 x466) (> x1299 0) (= (x1189 (x299 x743)) x1016) (<= 0 x230) x814 (<= x769 1461501637330902918203684832716283019655932542975) (= x1299 (x1476 (x299 x743))) (= x651 x1530) (>= x264 0) (>= x1016 0) (not (< x1210 302407648)) (< 0 x743) (= 302407648 x1210) (>= 1461501637330902918203684832716283019655932542975 x743) (<= 0 x1339) (<= x230 255) (<= x264 1461501637330902918203684832716283019655932542975) (>= 4294967295 x1098) (<= x1339 4294967295)) (and (and (and (and (= (= x1622 0) x902) (= x1425 x904) (= x677 x1622)) (and (= 3923945232 x1421) (= x1425 x35) (not (> 3733007566 x1421)) (not (< x1421 3189536363)) (not (= x1421 3733007566)) (not (= x1421 3815738821)) (<= 0 x35) (not (> 2196353862 x1421)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x35) (= x1523 (x1476 (x299 x743))) (= x660 x433) (< x1421 3948783980) (> x1523 0))) (and (not (< x1384 3189536363)) (< x1384 3948783980) (> x240 0) (not (< x1384 3733007566)) (= x677 x50) (not (= 3733007566 x1384)) (= x928 x677) (= (x1476 (x299 x743)) x240) (= x179 (> x928 0)) (= 3923945232 x1384) (not (= 3815738821 x1384)) x179 (>= x35 0) (= 0 x1644) (not (< x1384 2196353862)) (= x35 x433) (<= x35 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (= 3189536363 x1682) (not (> 3189536363 x1682)) (= x701 x651) (< 0 x1430) (not (> 2196353862 x1682)) (= x50 x541) (= x1430 (x1476 (x299 x743))) (< x1682 3733007566) (< x1682 3632429537)))) (and (=> (and (not (< x265 x793)) (= (mod x904 x1622) x836) (not (> 3189536363 x263)) (= x1349 x1222) (< 0 x702) (= x1724 (x1481 x622)) (= (mod x35 x541) x742) (>= x1262 0) (<= 0 x1349) (not (> 3632429537 x263)) (not (> 4 x1609)) (= x702 (x1476 (x299 x743))) (> 256 x1724) (>= x516 0) (= 0 x689) (<= x516 1461501637330902918203684832716283019655932542975) (>= 255 x1724) (= (div x35 x541) x715) (= x865 x507) (= x1563 x678) (= x516 x1222) (>= x793 0) (not (= 3646176329 x263)) (>= 1461501637330902918203684832716283019655932542975 x507) (<= x1349 1461501637330902918203684832716283019655932542975) (<= 0 x35) (= x671 (x236 (- x1577 x793))) (= (x1574 (x299 x1222) (x237 2) 0) x622) (not (< x263 2196353862)) (not (= x263 3632429537)) (= x914 x689) (<= x35 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x263 3694151790)) (= (> x541 0) x298) (< x263 3733007566) (= 3727475225 x263) (>= 1461501637330902918203684832716283019655932542975 x1262) (<= 0 x1724) (= x1577 x265) (> x541 0) (>= 1461501637330902918203684832716283019655932542975 x1563) (<= 0 x507) (> x1724 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x35) (= x1143 (mod x35 x541)) (not (< x671 604800)) (= (x236 (- x660 x836)) x1582) (>= x1563 0) (< 0 x541) (<= 0 x35) (= x678 x287) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x793) (and (< 3 x1609) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1609)))) (and (=> (and (and (< x1094 1461501637330902918203684832716283019655932542976) (= (x9 x1048) x1237) (<= 0 x1094) (= x362 x1048) (<= x1237 1461501637330902918203684832716283019655932542975) (= x1094 (x9 x1360)) (= (x1149 (x237 1) 0) x362) (>= 1461501637330902918203684832716283019655932542975 x1094) (= x438 (and (< (+ x690 x715) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x715 x190))) (= x1039 x1360) (< x1237 1461501637330902918203684832716283019655932542976) (= (x1189 (x299 x1237)) x690) (= x190 (x1189 (x299 x743))) (< 0 x541) (= (x1149 (x237 1) 0) x1039) (> x541 0) (<= 0 x1237) (not (= x743 x1094))) x298) (and (=> (and (and (= 0 x595) (= x494 0)) (not x438)) x787) (=> (and (and (or (not x884) (and (and (= (x1659 (x299 x743)) x2) (> 4294967296 x665) x604 (= (>= (x648 (x299 x743)) x2) x1303) (= (= x917 (x648 (x299 x1237))) x604) x1303 (= (x1659 (x299 x1237)) x917)) x884)) (and (= (x1189 (x299 x743)) x1350) (= x145 (- x1350 x715)) (= (x17 (+ x1264 x715)) x279) (= (< 0 x1455) x884) (= (x628 (x299 x1237)) x1264) (< (+ x1264 x715) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x438) x906))) (=> (not x298) x1244))) (not x902))) x937))
(assert (x1511 x440))
(assert (x1511 x1418))
(assert (= (x1427 (x237 3632429537)) 3632429537))
(assert (= (and (=> x898 x203) (=> (and (not x898) (and (= (> x855 x530) x603) (= (x17 (+ 1 x57)) x855) (= (div x541 2) x57))) (and (=> (and (not x603) (and (= x1655 false) (<= 0 x530) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x530))) (and (=> (and (= x1655 x1104) x1655) x827) (=> (not x1655) x783))) (=> x603 x203)))) x1177))
(assert (= (x1178 192) (x1427 (x299 (x1178 192)))))
(assert (= x592 (=> (= (= 0 x1490) x549) (and (=> (and (and (or (and (= x1519 x915) x831) (and (not x831) (and (= x1519 x394) (= x394 (x236 (- x915 100000000000000000))) (not (> 100000000000000000 x915))))) (and (<= 0 x1180) (> 256 x1180) (= x915 (x977 x615)) (<= x915 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x915 0) (= (x181 x1138) x1180) (= (x1182 x927 3) x1138) (= (= 0 x1180) x831) (= x927 (x1574 (x299 x1704) (x237 7) 0)) (>= 255 x1180) (= (x1182 x927 1) x615))) (not x549)) x3) (=> (and (= x541 x1614) x549) x409)))))
(assert (x348 (x67 128)))
(assert (= x666 (and x955 (not x41))))
(assert (= (x123 324) 0))
(assert (= x882 (=> (and (= x307 x580) (= x875 x654)) x1395)))
(assert (= (x1427 (x299 (x1101 160))) (x1101 160)))
(assert (x1511 x665))
(assert (x348 x1683))
(assert (= (and x401 x1435) x1292))
(assert (x1511 x988))
(assert (= x312 (and x177 x449)))
(assert (= x412 (or (and x177 (not x449)) x952)))
(assert (x1511 x1523))
(assert (= (and (not x1649) x1022) x888))
(assert (x1511 x191))
(assert (= x1608 (=> (and (= x444 (mod x35 x541)) (= x768 x296) (= x961 x135)) x1327)))
(assert (= (or (and x1197 (not x1)) x866) x1232))
(assert (= x104 (or x1246 x1510)))
(assert (x1511 x770))
(assert (= x378 (and x452 (not x763))))
(assert (= x86 (and (not x966) x499)))
(assert (= (and x1580 (not x757)) x513))
(assert (x1020 x283))
(assert (= x499 (and x955 x41)))
(assert (= (and x1588 x194) x623))
(assert (= x301 (=> (and (or (not x1514) x1514) (= (= 0 x1249) x1514)) x1666)))
(assert (x1511 x1290))
(assert (= (or x320 x1047) x771))
(assert (= x116 (and x603 x879)))
(assert (x1020 1))
(assert (x1511 x824))
(assert (= x1103 (=> (= (< (x1427 x1488) (x1427 x331)) x1235) (and (=> x1235 x162) (=> (not x1235) x252)))))
(assert (x1511 x1620))
(assert (= x1552 (or x606 x295)))
(assert (= x1535 (=> (and (= x542 (and (<= x1519 x936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1519 x486)))) (= (x1526 (x299 x743)) x486) (= (x1526 (x299 x743)) x936) (= x110 x1080)) (and (=> (and (not x542) (and (= x1228 0) (= x1143 x1139) (= x180 0) (= x325 x541))) x1199) (=> (and (and (= (= 0 x1519) x194) (<= 100 x7) (= x1208 (x1526 (x299 x743))) (= x1080 x7) (= (x17 (+ x1519 x349)) x383) (= x974 (= 0 (x574 68))) (= x1527 x729) (= x1029 (x1476 (x299 x743))) x974 (< 0 x1029) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1519 x349)) (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 x447) (= (- x1208 x1519) x1694) (= (x215 (x299 x743)) x349)) x542) (and (=> (and (and (not (= x947 1680813743)) (not (= x947 1844058622)) (not (= 1686547025 x947)) (= 1871487246 x947) (not (< x947 839595567)) (< x947 1946460669) (not (< x7 4)) (= (x236 (- x7 4)) x42) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x42) (and (< x42 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x42)))) x517) (not (> 1680813743 x947)) (> 2196353862 x947)) x194) (and (=> (and (not x517) (and (= x729 x427) (= (and (< 99 x7) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7) true)) x1388))) (and (=> (not x1388) x1686) (=> (and x1388 (and (= (x1448 68) x1266) (= x221 (< 18446744073709551615 x1266)))) (and (=> x221 x1686) (=> (and (and (= x1310 (x17 (+ 100 x1266))) (= 100 x1081) (= (< x7 x1310) x885)) (not x221)) (and (=> (and (not x885) (= true x1442)) (and (=> (not x1442) x1686) (=> (and x1442 (and (= (< x541 x729) x1136) (or (and (not x1136) (and (= x1398 (ite x658 x658 (= 0 x541))) (= x658 (= 0 x427)))) (and x1136 (= x1136 x1398))))) x845))) (=> x885 x1686))))))) (=> x517 x1686))) (=> (not x194) x1686)))))))
(assert (= (=> (and (= (and (<= x1519 x1127) (< (+ x196 x1519) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x41) (= x196 (x1526 (x299 x266))) (= (x1526 (x299 x743)) x1127)) (and (=> (and x41 (and (or (not x966) (and (and (= x1590 (x1006 (x299 x743))) (= (<= x1590 (x553 (x299 x743))) x1015) (< x1300 4294967296) (= (= x1035 (x553 (x299 x266))) x923) (= x1035 (x1006 (x299 x266))) x1015 x923) x966)) (and (= (x17 (+ x1365 x1519)) x1008) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1365 x1519)) (= x709 (x1526 (x299 x743))) (= (x1711 (x299 x266)) x1365) (= (> x1431 0) x966) (= x1141 (- x709 x1519))))) x1623) (=> (and (not x41) (and (= x276 0) (= 0 x1116))) x1111))) x967))
(assert (x348 x687))
(assert (= (x944 160) (x1427 (x299 (x944 160)))))
(assert (= (x1427 (x237 1030951317)) 1030951317))
(assert (x1511 x1156))
(assert (= (x1427 (x237 604800)) 604800))
(assert (x1511 x942))
(assert (x1511 x103))
(assert (x348 x951))
(assert (x1511 x1413))
(assert (= (and x526 x1593) x48))
(assert (= x422 (=> (and (= 0 x234) (= x1598 x31) (= x541 x1291) (= (mod x35 x541) x948)) x1024)))
(assert (x348 (x969 224)))
(assert (= (and (not x1537) x413) x381))
(assert (x376 x886))
(assert (x1511 x847))
(assert (x1511 x1621))
(assert (= x1199 (=> (and (= x208 (= 0 x1228)) (or (not x208) x208)) x260)))
(assert (x1511 x519))
(assert (= x826 (and x802 x312)))
(assert (x1511 x1576))
(assert (= x1251 (and x840 x543)))
(assert (x1511 x1222))
(assert (x1511 x470))
(assert (x1511 x915))
(assert (x348 (x938 192)))
(assert (= x903 (and x908 x1529)))
(assert (= x213 (and x164 (not x520))))
(assert (x1511 x1506))
(assert (x1511 x436))
(assert (x1511 x1393))
(assert (= x477 x967))
(assert (= x1460 (=> (and (= x187 (x1368 x281)) (= x683 (not (< 32 x832)))) (and x683 x1705))))
(assert (= (x1427 (x237 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x348 (x1178 128)))
(assert (x1511 x801))
(assert (= x805 (and x849 x1443)))
(assert (x1511 x1146))
(assert (x348 (x67 192)))
(assert (= x1531 (and x499 x966)))
(assert (= (x123 452) 0))
(assert (x1511 x1633))
(assert (= (x237 3733007566) (x299 3733007566)))
(assert (x1511 x793))
(assert (x1511 x854))
(assert (= x1712 (and (not x1076) x19)))
(assert (= (x299 (x1427 x1282)) x1282))
(assert (= (and x1059 (not x761)) x1521))
(assert (= (x969 256) (x1427 (x299 (x969 256)))))
(assert (x1511 x839))
(assert (x1511 x315))
(assert (x348 (x212 288)))
(assert (= (and (not x1324) x1650) x1593))
(assert (x1511 x1210))
(assert (= (x747 260) 0))
(assert (= (=> (and (or (not x1558) (and x1558 (= x731 (x17 (+ x371 260))))) (= x1558 (> x462 x371))) x83) x1340))
(assert (=> (<= x951 10000) (= (x299 x951) (x237 x951))))
(assert (= (x299 656196706) (x237 656196706)))
(assert (=> (<= (x944 256) 10000) (= (x237 (x944 256)) (x299 (x944 256)))))
(assert (= (=> (and (or (and (= x767 (x17 (+ 260 x437))) x1121) (not x1121)) (= x1121 (> x1618 x437))) x1062) x784))
(assert (= (+ (x1427 x1227) x418) (x1427 (x1182 x1227 x418))))
(assert (= x316 (and x381 (not x1038))))
(assert (x1020 x398))
(assert (= (x1267 224) 0))
(assert (= (x938 192) (x1427 (x299 (x938 192)))))
(assert (x1511 x353))
(assert (= x1422 (and (not x221) x129)))
(assert (x1511 x550))
(assert (x1511 x1673))
(assert (= x521 (and x431 x36)))
(assert (x1511 x1310))
(assert (= x1438 (and x879 (not x603))))
(assert (x1511 x1056))
(assert (x1511 x283))
(assert (x1511 x951))
(assert (x348 (x976 224)))
(assert (= (and x294 x366) x149))
(assert (x1511 x446))
(assert (x348 (x1178 224)))
(assert (x348 (x1101 224)))
(assert (= (and (not x884) x133) x524))
(assert (x1511 x1693))
(assert (x1511 x79))
(assert (x1511 x613))
(assert (= 0 (x1625 (+ (x17 (+ 100 x518)) 192))))
(assert (x1511 x523))
(assert (= x150 (=> (and (= x1058 x619) (= x581 x1628)) x1353)))
(assert (x1511 x33))
(assert (x1511 x1455))
(assert (= (and x691 x1503) x238))
(assert (= (=> (and (= x1343 x780) (= x741 x440) (= x1275 x758) (= x1474 x191)) x218) x639))
(assert (= (=> (and (= x1386 x1143) (= x1377 0) (= x541 x387) (= x650 1)) x718) x1041))
(assert (= (x299 100000000000000000) (x237 100000000000000000)))
(assert (= (=> (and (= (x17 (+ 128 x1148)) x453) (= x716 (>= 224 x900)) (= (x236 (- x453 128)) x900)) (and (=> (and (= (x695 1 x293) x430) (= (div x293 2) x1125) (= x415 (> 32 x1295)) (= (= x430 (ite x415 1 0)) x84) (= x1295 (ite (< 0 x430) x1125 (x695 127 x1125))) (= (ite (>= 32 x900) (x1149 (x299 (x938 128)) 0) (ite (>= 64 x900) (x1574 (x299 (x938 128)) (x299 (x938 160)) 0) (ite (>= 96 x900) (x710 (x299 (x938 128)) (x299 (x938 160)) (x299 (x938 192)) 0) (ite (>= 128 x900) (x201 (x299 (x938 128)) (x299 (x938 160)) (x299 (x938 192)) (x299 (x938 224)) 0) (ite (<= x900 160) (x510 (x299 (x938 128)) (x299 (x938 160)) (x299 (x938 192)) (x299 (x938 224)) (x299 (x938 256)) 0) (ite (>= 192 x900) (x835 (x299 (x938 128)) (x299 (x938 160)) (x299 (x938 192)) (x299 (x938 224)) (x299 (x938 256)) (x299 (x938 288)) 0) (ite (<= x900 224) (x1547 (x299 (x938 128)) (x299 (x938 160)) (x299 (x938 192)) (x299 (x938 224)) (x299 (x938 256)) (x299 (x938 288)) (x299 (x938 320)) 0) (x299 x1714)))))))) x22)) (and (=> (and (not x84) (and (= x996 (= x991 0)) (= x991 (x695 1 x293)))) (and (=> (and (not x996) (and (= x986 (< 0 x1295)) (= x1284 (x1149 (x237 5) 0)))) (and (=> (not x986) x228) (=> x986 x1323))) (=> (and (and (= x523 x588) (= (x17 (+ 128 x1295)) x523) (= x377 (x695 115792089237316195423570985008687907853269984665640564039457584007913129639680 x293))) x996) x1023))) (=> x84 x4))) x716)) x324))
(assert (= x872 (and (not x28) x980)))
(assert (= (x1713 224) 0))
(assert (= (and x1362 x601) x1073))
(assert (x1511 x970))
(assert (= (x1427 (x299 x552)) x552))
(assert (= (+ x232 (x1427 x583)) (x1427 (x1182 x583 x232))))
(assert (= (x237 24341557) (x299 24341557)))
(assert (= (and x184 x668) x1589))
(assert (= 0 (x641 452)))
(assert (= (x212 128) (x1427 (x299 (x212 128)))))
(assert (=> (<= (x1101 160) 10000) (= (x299 (x1101 160)) (x237 (x1101 160)))))
(assert (= (or x1583 x704 x1307) x229))
(assert (x1511 x57))
(assert (= (x123 260) 0))
(assert (x1511 x780))
(assert (= x111 (and x197 x485)))
(assert (= (and (not x72) x76) x1708))
(assert (x1511 x1373))
(assert (= (and x1017 x59) x620))
(assert (= (and x792 (not x1538)) x994))
(assert (x1511 x1308))
(assert (= (and x204 x419) x161))
(assert (= x762 (=> (and (= (not (> x333 32)) x1218) (= (x1368 x369) x1406)) (and x360 x1218))))
(assert (x1511 x1240))
(assert (= (=> (= x668 (= x368 0)) (and (=> x668 x1664) (=> (and (and (= x1524 x1477) (= 0 x68) (= x1400 x207) (= x773 1)) (not x668)) x587))) x746))
(assert (= x1382 (and (not x297) x96)))
(assert (= (x1267 320) 0))
(assert (= x1658 (and x887 x1417)))
(assert (x1511 x1270))
(assert (=> (<= (x938 320) 10000) (= (x299 (x938 320)) (x237 (x938 320)))))
(assert (= (x938 256) (x1427 (x299 (x938 256)))))
(assert (x1511 x647))
(assert (x1020 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1511 x701))
(assert (= x340 (and x1407 x1512)))
(assert (x1511 x1174))
(assert (= x1097 (=> (= x1335 (not (> x1522 32))) (and x1335 x146))))
(assert (= (=> (= x1614 x1030) x409) x475))
(assert (= 2923951457 (x1427 (x237 2923951457))))
(assert (= x1410 (=> (and (= x541 x1477) (= x368 1) (= x1143 x207)) x1276)))
(assert (x1020 x1125))
(assert (x1511 x930))
(assert (= (or x823 x1325) x1489))
(assert (= (and x94 (not x703)) x1184))
(assert (= (x747 452) 0))
(assert (= x551 (and x1250 (not x1689))))
(assert (x1511 x1204))
(assert (x1511 x1283))
(assert (= (x747 356) 0))
(assert (= (and x1144 x1496) x1634))
(assert (= x721 (=> (and (= x541 x135) (= x768 0)) x1608)))
(assert (x1511 x1230))
(assert (= x19 (and (not x627) x1433)))
(assert (= x1222 (x1427 (x299 x1222))))
(assert (= x99 (and x14 (not x1068))))
(assert (= (=> (= x87 (not (> x541 1))) (and x87 x744)) x1518))
(assert (= x421 (or x205 x962)))
(assert (= (and x618 x699) x322))
(assert (= (and x208 x429) x367))
(assert (x1511 x1540))
(assert (x1511 x1100))
(assert (= (x1427 (x299 x1454)) x1454))
(assert (= (x1172 x1220) 0))
(assert (x1511 x708))
(assert (= (and x340 (not x245)) x131))
(assert (= x55 (and (not x226) x119)))
(assert (x1511 x917))
(assert (x1511 x1291))
(assert (x1511 x1542))
(assert (x1511 x956))
(assert (= x1024 (=> (and (or (and x727 (and (= x948 x160) (= x1598 x1643) (= (x125 (x299 x743)) x1646) (= (x210 (x299 x743)) x1096) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x302 x1096)) (= x880 (- x1646 x302)) (= (x17 (+ x302 x1096)) x959) (= x234 x456) (= x302 (ite (= x234 0) x1519 0)) (= x1291 x488))) (and (not x727) (and (= x488 x1291) (= x160 x948) (= x1643 x1598) (= x234 x456)))) (= x727 (= 0 x234))) x199)))
(assert (x1511 x575))
(assert (= (and x1160 x572) x1027))
(assert (x1511 x1568))
(assert (=> (>= 10000 (x1178 256)) (= (x237 (x1178 256)) (x299 (x1178 256)))))
(assert (=> (<= x118 10000) (= (x299 x118) (x237 x118))))
(assert (= (and x306 (not x1217)) x211))
(assert (x1511 x1566))
(assert (= x920 (and x858 x1651)))
(assert (= (x1427 (x299 (x944 320))) (x944 320)))
(assert (x1511 x2))
(assert (= (x237 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x299 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (x1511 x1486))
(assert (x1511 x855))
(assert (x1511 x545))
(assert (x1511 x195))
(assert (= x1706 (and (not x84) x239)))
(assert (x1511 x989))
(assert (x1511 x433))
(assert (= (x1625 (+ 96 (x17 (+ x518 100)))) 0))
(assert (= x1653 x1041))
(assert (= (and x1521 (not x469)) x254))
(assert (= x1562 (or x1489 x830 x364)))
(assert (= x1319 (and (not x724) x1184)))
(assert (= x90 (=> (= x1214 (not (< 32 x828))) (and x1214 x477))))
(assert (= x743 (x1427 (x299 x743))))
(assert (= 2005628311 (x1427 (x237 2005628311))))
(assert (= (x976 320) (x1427 (x299 (x976 320)))))
(assert (= (=> (and (or x1435 (not x1435)) (= (= x1643 0) x1435)) x1268) x199))
(assert (x1511 x1614))
(assert (x1511 x425))
(assert (= (and x502 x1672) x537))
(assert (= (x1427 (x1182 x927 3)) (+ 3 (x1427 x927))))
(assert (x1511 x196))
(assert (x1511 x232))
(assert (x1511 x1590))
(assert (= x806 (or x1719 x1091)))
(assert (= x1045 (or x571 x65)))
(assert (x71 x1665))
(assert (= (and x156 (not x407)) x752))
(assert (= (or x1277 x805) x77))
(assert (= (x1427 (x299 (x944 224))) (x944 224)))
(assert (= (=> (and (= x892 (x1182 x307 1)) (= x1151 (not (< (x1427 x892) (x1427 x375))))) (and x1151 x115)) x1684))
(assert (x1511 x1642))
(assert (x348 (x1178 192)))
(assert (x896 x1074))
(assert (x1511 x410))
(assert (x1511 x398))
(assert (x1511 x1428))
(assert (= x1238 (and x838 x1626)))
(assert (x1511 x180))
(assert (= x1478 (and x1192 x831)))
(assert (= (=> (and (= (= (ite x251 1 0) x815) x560) (>= x530 0) (= (x695 1 x956) x815) (= x854 (ite (> x815 0) x941 (x695 127 x941))) (= (div x956 2) x941) (= x251 (> 32 x854)) (<= x530 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> x560 x203) (=> (and (and (= x1341 (= x1119 0)) (= x1119 (x695 1 x956))) (not x560)) (and (=> x1341 x946) (=> (and (not x1341) (= x774 (> x854 0))) (and (=> x774 x328) (=> (not x774) x813))))))) x252))
(assert (x1511 x731))
(assert (x1511 x1116))
(assert (x1511 x40))
(assert (x348 (x976 160)))
(assert (x1511 x457))
(assert (= x862 (x299 (x1427 x862))))
(assert (x1511 x1683))
(assert (= (=> (and (or (not x1317) x1317) (= (= 0 x1116) x1317)) x92) x1111))
(assert (x348 x552))
(assert (= (x1427 (x1182 x1209 x1274)) (+ (x1427 x1209) x1274)))
(assert (= 0 (x1625 (+ 32 (x17 (+ x518 100))))))
(assert (=> (>= 10000 (x969 288)) (= (x237 (x969 288)) (x299 (x969 288)))))
(assert (x1511 x1527))
(assert (= (x1427 (x299 (x212 256))) (x212 256)))
(assert (= (and x1678 (not x821)) x1176))
(assert (= x1570 (or x524 x1495)))
(assert (= (x1427 (x299 (x969 288))) (x969 288)))
(assert (= x1053 (and (not x605) x1046)))
(assert (= x929 (=> (and (= x1074 x195) (= x692 x901)) x1685)))
(assert (x1511 x46))
(assert (= x1510 (and x292 x652)))
(assert (= (+ (x1427 x1507) x1156) (x1427 (x1182 x1507 x1156))))
(assert (x348 (x212 320)))
(assert (= (and x482 x1176) x1031))
(assert (x1511 x135))
(assert (= 0 (x464 160)))
(assert (= (and (not x1668) x582) x1179))
(assert (x1511 x329))
(assert (= (or x791 x1050) x1011))
(assert (= 1461501637330902918203684832716283019655932542975 (x1427 (x237 1461501637330902918203684832716283019655932542975))))
(assert (x1020 x1445))
(assert (x1511 x983))
(assert (= (x1178 224) (x1427 (x299 (x1178 224)))))
(assert (x1511 x561))
(assert (= (or x903 x756) x735))
(assert (= x429 (or x521 x745 x468)))
(assert (= (x1427 (x299 (x1101 224))) (x1101 224)))
(assert (x1511 x636))
(assert (= x1452 (or x869 x551)))
(assert (= x261 (x299 (x1427 x261))))
(assert (= (+ 1 (x1427 x307)) (x1427 (x1182 x307 1))))
(assert (x1511 x598))
(assert (= x921 (and (not x197) x485)))
(assert (= (x1427 (x1182 x1209 1)) (+ 1 (x1427 x1209))))
(assert (x1020 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x1330 (and x312 (not x802))))
(assert (=> (>= 10000 (x969 192)) (= (x299 (x969 192)) (x237 (x969 192)))))
(assert (= (x299 (x1427 x682)) x682))
(assert (= (x1178 256) (x1427 (x299 (x1178 256)))))
(assert (= x891 (or x1698 x576)))
(assert (=> (>= 10000 (x1178 288)) (= (x299 (x1178 288)) (x237 (x1178 288)))))
(assert (= x1161 (and x645 x797)))
(assert (= (or x161 x412) x156))
(assert (= x91 (or x143 x238 x666)))
(assert (x348 (x969 256)))
(assert (= (x237 604800) (x299 604800)))
(assert (x1511 x93))
(assert (= (x1427 (x299 (x67 128))) (x67 128)))
(assert (x1020 x15))
(assert (x1511 x947))
(assert (x1511 x1367))
(assert (= x1134 (and x1090 x911)))
(assert (= x606 (and x1315 x1031)))
(assert (x1511 x991))
(assert (= x452 (and x1053 (not x165))))
(assert (= (and x1562 (not x1043)) x597))
(assert (= (=> (and (= x1355 x804) (= x289 x942) (= (x794 x942) x1187) (= (not (< 32 x155)) x985)) (and x985 (=> (= 32 x1240) x1028))) x140))
(assert (= x685 (and x1630 x1322)))
(assert (= (and x1095 x542) x1588))
(assert (x1511 x430))
(assert (x1511 x1139))
(assert (= x11 (=> (and (= x1624 x30) (= x1054 x391) (= x1542 x1298)) x53)))
(assert (x1511 x288))
(assert (x1511 x1577))
(assert (x1511 x1722))
(assert (x1020 x100))
(assert (x1511 x1237))
(assert (x1511 x960))
(assert (= (or x1531 x86) x691))
(assert (= (+ (x1427 x619) 1) (x1427 (x1182 x619 1))))
(assert (= (x807 160) 0))
(assert (= (and x1543 x1161) x1496))
(assert (= 3923945232 (x1427 (x237 3923945232))))
(assert (= 100000000000000000 (x1427 (x237 100000000000000000))))
(assert (x1511 x1434))
(assert (x1511 x508))
(assert (x1511 x1401))
(assert (= (and x184 (not x668)) x693))
(assert (x71 x284))
(assert (= (or x973 x193) x152))
(assert (= (x299 3694151790) (x237 3694151790)))
(assert (x1511 x263))
(assert (x1511 x1520))
(assert (= 0 (x1571 128)))
(assert (x348 x1620))
(assert (= (x237 33277650900348105781121326340019631498405652329376380866381358124409588547584) (x299 33277650900348105781121326340019631498405652329376380866381358124409588547584)))
(assert (= (x641 324) 0))
(assert (=> (<= (x944 128) 10000) (= (x237 (x944 128)) (x299 (x944 128)))))
(assert (x1042 x15))
(assert (x1511 x488))
(assert (= (and (not x543) x840) x964))
(assert (x1511 x296))
(assert (= x572 (and x1438 (not x1655))))
(assert (= (and (not x5) x229) x274))
(assert (x1511 x1425))
(assert (x1511 x941))
(assert (= (and (not x1442) x1677) x674))
(assert (= (and x1073 x1546) x610))
(assert (= (=> (and (or (and (and (= x1702 (x17 (+ x1541 x355))) (= x1026 (- x931 x1541)) (= (ite (= 0 x1455) x715 0) x1541) (= (x1234 (x299 x1237)) x931) (= x665 x595) (< (+ x355 x1541) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1424 (x299 x743)) x355) (= x494 x1455)) x1581) (and (and (= x665 x595) (= x1455 x494)) (not x1581))) (= x1581 (= x1455 0))) x787) x906))
(assert (x1511 x1187))
(assert (= (or x921 x111) x114))
(assert (= x1688 (=> (and (= x197 (< x1373 x455)) (or (not x197) (and x197 (= (x17 (+ x1373 x434)) x1693)))) x321)))
(assert (= 0 (x1267 192)))
(assert (= (or (and (not x1616) x972) x1589 (and x1473 x365)) x246))
(assert (x1511 x416))
(assert (= x417 (or x157 x1321)))
(assert (= (x327 x942) 0))
(assert (x376 x1146))
(assert (x1511 x1654))
(assert (x1511 x234))
(assert (x348 (x969 128)))
(assert (x1511 x671))
(assert (x1511 x209))
(assert (= (and (not x996) x1706) x1462))
(assert (x348 (x944 288)))
(assert (x1511 x828))
(assert (=> (<= (x976 320) 10000) (= (x237 (x976 320)) (x299 (x976 320)))))
(assert (x1511 x1098))
(assert (= (x807 288) 0))
(assert (x1020 x1270))
(assert (= x1705 (=> (and (= x1005 x170) (= (x17 (+ x832 128)) x170)) x390)))
(assert (=> (>= 10000 (x67 128)) (= (x299 (x67 128)) (x237 (x67 128)))))
(assert (= x1550 (=> (and (= x1283 x788) (= x1703 x518) (= x443 (not (< 32 x110))) (= x1520 (x924 x788))) (and x443 (=> (= 32 x1204) x1044)))))
(assert (= x840 (or x834 x255)))
(assert (=> (<= x552 10000) (= (x237 x552) (x299 x552))))
(assert (=> (<= (x944 288) 10000) (= (x299 (x944 288)) (x237 (x944 288)))))
(assert (= (+ 1 (x1427 x1507)) (x1427 (x1182 x1507 1))))
(assert (= x460 (=> (= (= 0 x163) x543) (and (=> x543 x475) (=> (and (not x543) (and (and (= x550 (x1602 x1138)) (= x943 (= 0 x550)) (< x550 256) (>= x550 0) (>= 255 x550)) (or x943 (and (and (<= 0 x353) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x353 115792089237316195423570985008687907853269984665640564039457484007913129639935)) (= (x17 (+ x353 100000000000000000)) x871)) (not x943))))) x1532)))))
(assert (x1511 x567))
(assert (x1511 x406))
(assert (= x259 (and (not x298) x49)))
(assert (=> (<= (x976 128) 10000) (= (x299 (x976 128)) (x237 (x976 128)))))
(assert (= (and x1706 x996) x738))
(assert (x1511 x1464))
(assert (x348 (x976 256)))
(assert (= (=> (and (or (and (and (= x780 x779) (= x741 x984) (= x760 x191) (= x1215 x758)) (not x838)) (and (and (= x780 x779) (= x984 x741) (= (ite (= x780 0) x1519 0) x1578) (= x525 (- x939 x1578)) (= x79 (x17 (+ x1578 x1108))) (= x939 (x1482 (x299 x743))) (< (+ x1578 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x760 x191) (= (x533 (x299 x743)) x1108) (= x1215 x758)) x838)) (= (= x780 0) x838)) x1647) x218))
(assert (= 0 (x1713 288)))
(assert (x1511 x1229))
(assert (x71 x647))
(assert (= x1173 (or x950 x555)))
(assert (= (x1427 (x299 (x67 192))) (x67 192)))
(assert (= (or x725 x1603) x1479))
(assert (= (and x763 x452) x411))
(assert (= (and x1635 x1565) x1630))
(assert (x1511 x1169))
(assert (= (=> (= x740 (not (< 32 x854))) (and x813 x740)) x328))
(assert (x1511 x737))
(assert (= (x1427 (x237 1844058622)) 1844058622))
(assert (x1511 x1016))
(assert (= (x1427 (x237 4294967295)) 4294967295))
(assert (x1511 x95))
(assert (x1511 x1131))
(assert (= 3815738821 (x1427 (x237 3815738821))))
(assert (= (and x91 (not x1317)) x341))
(assert (=> (>= 10000 x687) (= (x237 x687) (x299 x687))))
(assert (= (x1427 (x237 2112976665)) 2112976665))
(assert (= (and (not x932) x547) x1678))
(assert (= (+ 1 (x1427 x1488)) (x1427 (x1182 x1488 1))))
(assert (= (x464 224) 0))
(assert (x1511 x1408))
(assert (x376 x672))
(assert (= 3189536363 (x1427 (x237 3189536363))))
(assert (= (x944 128) (x1427 (x299 (x944 128)))))
(assert (x1511 x349))
(assert (= (x976 224) (x1427 (x299 (x976 224)))))
(assert (= (x237 50455196340412629536459377552246818957342304218644716315923982585962625499136) (x299 50455196340412629536459377552246818957342304218644716315923982585962625499136)))
(assert (= (and x106 (not x1514)) x1321))
(assert (= x6 (=> (= (= x296 0) x612) (and (=> (and (not x612) (and (= 1 x780) (= 0 x758) (= x961 x191) (= x741 x444))) x218) (=> (and (and (= (mod x35 x541) x440) (= x1343 0) (= x1474 x541)) x612) x639)))))
(assert (x1511 x1054))
(assert (x1511 x15))
(assert (= (or x513 x1110 x372) x106))
(assert (= x1277 (and x849 (not x1443))))
(assert (x1511 x961))
(assert (x1511 x739))
(assert (= (x747 324) 0))
(assert (x348 (x969 288)))
(assert (x1511 x815))
(assert (= (x1427 (x299 (x67 320))) (x67 320)))
(assert (x1511 x302))
(assert (x1511 x1208))
(assert (=> (>= 10000 (x1178 160)) (= (x237 (x1178 160)) (x299 (x1178 160)))))
(assert (x1511 x754))
(assert (x348 x1714))
(assert (x348 (x944 160)))
(assert (= x968 (=> (= x459 (> 1 x541)) (and x459 x721))))
(assert (x1511 x1206))
(assert (= x52 (and x1496 (not x1144))))
(assert (= (or x497 x1597) x485))
(assert (x1511 x788))
(assert (= (=> (and (= 128 x1233) (= (x1476 (x299 x743)) x933) (= x198 (x695 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1270)) (= (= x933 0) x1473) (= x1270 (x17 (+ 31 x1536))) (= (x236 (- x824 128)) x1428) (= (x17 (+ x198 260)) x824)) (and (=> (and (and (> 3189536363 x739) (>= x1107 132) (= x789 78829575338057407266098799593532030895783219923606930547737006156155256307712) (not (= 2829837978 x739)) (> 3018310333 x739) (= x687 x1633) (= (x1476 (x299 x743)) x61) (= x1566 (x236 (- x1107 4))) (= x264 x552) (= x1107 x1428) (not (= x739 2826133662)) (not (> 2196353862 x739)) (not (= x739 2867924802)) (not (< x1107 4)) (= 2923951457 x739) x1601 (not (> 2826133662 x739)) (= x1667 (or (and (= (<= x1566 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1566 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1566))) (= (= x1536 (x1273 100)) x1601) (< 0 x61)) (not x1473)) (and (=> (and (and (= x446 x687) (= x1651 (= x1633 x687))) (not x1667)) (and (=> (not x1651) x203) (=> (and x1651 (and (= x1533 x552) (= (= x264 x552) x1467))) (and (=> (not x1467) x203) (=> (and x1467 (= (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1107)) (> x1107 131)) x705)) (and (=> (and x705 (and (= (x795 100) x1293) (= x1247 (> x1293 18446744073709551615)))) (and (=> x1247 x203) (=> (and (and (= (> x1115 x1107) x335) (= x1560 132) (= x1115 (x17 (+ x1293 132)))) (not x1247)) (and (=> (and (= true x1415) (not x335)) (and (=> (and (and (= x554 (< 0 x732)) (= x732 (x1481 x594)) (< x732 256) (<= 0 x732) (= x594 (x1574 (x299 x687) (x237 2) 0)) (<= x732 255)) x1415) (and (=> (and x554 (and (<= 0 x1594) (= (x1574 (x299 x552) (x237 2) 0) x13) (>= 255 x1594) (= (x1481 x13) x1594) (= (= 0 x1594) x120) (> 256 x1594))) (and (=> (and (= (= x552 0) x818) x120) (and (=> x818 x203) (=> (and (not x818) (= (< 0 x541) x449)) (and (=> (and x449 (= (> x541 0) x802)) (and (=> (not x802) x203) (=> (and (and (>= x1411 0) (< x1411 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1411) (= (x9 x137) x1411) (= (= x687 x1411) x1346) (= x112 (x1149 (x237 1) 0)) (= x112 x137)) x802) (and (=> (and x1346 (= x419 (< 0 x541))) (and (=> (not x419) x203) (=> x419 x1699))) (=> (not x1346) x1461))))) (=> (not x449) x1632))))) (=> (not x120) x203))) (=> (not x554) x203))) (=> (not x1415) x203))) (=> x335 x203))))) (=> (not x705) x203))))))) (=> x1667 x203))) (=> x1473 x1664))) x1641))
(assert (= (x641 260) 0))
(assert (= (x237 1030951317) (x299 1030951317)))
(assert (x348 (x938 128)))
(assert (x1511 x1474))
(assert (= x1515 (and x1398 x1463)))
(assert (x1511 x277))
(assert (= (x1427 (x299 (x1178 160))) (x1178 160)))
(assert (x1511 x928))
(assert (x1511 x1359))
(assert (= (and x114 x1656) x1150))
(assert (= 88571590996395278321425588994396360096048694792728512562370458433322657775616 (x1427 (x237 88571590996395278321425588994396360096048694792728512562370458433322657775616))))
(assert (= (x969 128) (x1427 (x299 (x969 128)))))
(assert (= x1110 (and x450 x463)))
(assert (x1511 x1724))
(assert (= x723 (and x178 x254)))
(assert (= x21 (and x1630 (not x1322))))
(assert (= x987 (and x608 x994)))
(assert (= x286 (=> (and (= x1486 x779) (= x984 x988) (= x760 x1093)) x200)))
(assert (= (and x316 x496) x1500))
(assert (= x1714 (x1427 (x299 x1714))))
(assert (=> (>= 10000 (x976 192)) (= (x237 (x976 192)) (x299 (x976 192)))))
(assert (x1511 x1337))
(assert (x376 x567))
(assert (x1511 x1137))
(assert (= 839595567 (x1427 (x237 839595567))))
(assert (x896 x654))
(assert (= x1356 (and (not x1565) x1635)))
(assert (= (=> (and (= x541 x1524) (= (mod x35 x541) x1400) (= x68 x953) (= x773 0)) x587) x1664))
(assert (= x1069 (and x1438 x1655)))
(assert (= x856 (=> (and (= x757 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1193 x1519)) (>= x233 x1519))) (= x770 x363) (= x233 (x1526 (x299 x743))) (= x1193 (x1526 (x299 x743)))) (and (=> (and (and (= (- x1457 x1519) x1205) (< (+ x706 x1519) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1457 (x1526 (x299 x743))) (= 4 x214) (= x847 (x1476 (x299 x743))) (= x1540 (x17 (+ x706 x1519))) (= x706 (x1575 (x299 x743))) (= x1553 100641684887429822015232653770480429695213136867978658013931169090238473568256) (> x847 0) (= (= 0 x1519) x1616) (= x363 x214)) x757) (and (=> (not x1616) x1664) (=> (and (and (not (> 3733007566 x978)) (< x264 1461501637330902918203684832716283019655932542976) (<= x264 1461501637330902918203684832716283019655932542975) (= x1536 (x975 96)) (>= x1633 0) (< x1633 1461501637330902918203684832716283019655932542976) (> 3948783980 x978) (not (> 3189536363 x978)) (= (< 0 x1536) x1443) (= x978 3733007566) (not (< x214 4)) (>= 1461501637330902918203684832716283019655932542975 x1633) (<= 0 x264) (not (< x978 2196353862))) x1616) (and (=> x1443 x1124) (=> (and (= 0 x1418) (not x1443)) x405))))) (=> (and (and (= x1249 0) (= x1143 x519) (= x541 x983) (= 0 x1663)) (not x757)) x301)))))
(assert (=> (<= (x938 128) 10000) (= (x237 (x938 128)) (x299 (x938 128)))))
(assert (= (=> (and (= (= 0 x773) x463) (or (and (not x463) (and (= x1249 x68) (= x519 x1400) (= x773 x1663) (= x1524 x983))) (and x463 (and (= x1663 x773) (= x1524 x983) (= (x1318 (x299 x743)) x1308) (= x68 x1249) (= x519 x1400) (= x1086 (x370 (x299 x743))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x759 x1308)) (= (- x1086 x759) x26) (= x457 (x17 (+ x759 x1308))) (= x759 (ite (= 0 x773) x1519 0)))))) x301) x587))
(assert (= x955 (or x1615 x473)))
(assert (x1020 x216))
(assert (x1511 x1400))
(assert (x1511 x1102))
(assert (x1511 x1106))
(assert (= (x1427 (x299 (x212 320))) (x212 320)))
(assert (x1511 x1607))
(assert (x1511 x1030))
(assert (= x919 (and x55 (not x1472))))
(assert (= x946 x813))
(assert (= 0 (x123 292)))
(assert (= (x299 18446744073709551615) (x237 18446744073709551615)))
(assert (x1511 x1032))
(assert (x1511 x1477))
(assert (x1511 x61))
(assert (x1511 x1643))
(assert (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 (x1427 (x237 56965738197333823925951794324075424010313516842063129668313081903848242544640))))
(assert (= (x237 3948783980) (x299 3948783980)))
(assert (= (x1427 (x299 (x969 192))) (x969 192)))
(assert (=> (<= (x969 256) 10000) (= (x299 (x969 256)) (x237 (x969 256)))))
(assert (= (x1427 (x299 x1620)) x1620))
(assert (x348 (x1178 288)))
(assert (= x157 (and x1514 x106)))
(assert (x348 (x212 224)))
(assert (x1511 x997))
(assert (= x404 (=> (and (or (and (= (x17 (+ x1673 x770)) x308) x995) (not x995)) (= (< x770 x853) x995)) x856)))
(assert (x348 (x938 160)))
(assert (x1511 x741))
(assert (= 0 (x1267 160)))
(assert (= x130 (and x681 x1627)))
(assert (= x707 (x1427 (x299 x707))))
(assert (= (and x1422 (not x885)) x1677))
(assert (x348 x707))
(assert (= (x1427 (x299 (x938 128))) (x938 128)))
(assert (x1511 x1440))
(assert (= 3694151790 (x1427 (x237 3694151790))))
(assert (= x1256 (or x1145 x859 x219 x1084 x602 x44 x1319 x883 x402 x876 x889 x1551 x500 x750 x872 x1336 x27 x987 x1012)))
(assert (= (or x1135 x1294) x365))
(assert (x1511 x516))
(assert (= 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x1427 (x237 78829575338057407266098799593532030895783219923606930547737006156155256307712))))
(assert (= (or x888 x1316 x1447) x278))
(assert (x1511 x1349))
(assert (x1511 x634))
(assert (x1511 x35))
(assert (x1511 x494))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1427 (x237 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x1511 x1595))
(assert (x1511 x945))
(assert (x1511 x163))
(assert (= 0 (x641 292)))
(assert (= (or x99 x489) x1246))
(assert (x1511 x713))
(assert (x1511 x667))
(assert (x348 (x944 320)))
(assert (x1511 x256))
(assert (x348 (x212 160)))
(assert (x348 (x212 192)))
(assert (x896 x293))
(assert (= (x299 1461501637330902918203684832716283019655932542975) (x237 1461501637330902918203684832716283019655932542975)))
(assert (x1020 x672))
(assert (= (and x432 (not x1426)) x1551))
(assert (= (and (not x517) x623) x1559))
(assert (= 0 (x1713 160)))
(assert (= (x1427 (x237 1039635593)) 1039635593))
(assert (x1511 x1572))
(assert (x1511 x68))
(assert (x1511 x1220))
(assert (x1511 x1300))
(assert (x1511 x1432))
(assert (= x1118 (and x1195 x1142)))
(assert (= (and x85 x1611) x1364))
(assert (x348 (x1101 320)))
(assert (= (=> (and (= x1088 0) (= x541 x1402) (= (mod x35 x541) x425)) x1680) x4))
(assert (x1511 x1609))
(assert (= 1686547025 (x1427 (x237 1686547025))))
(assert (= (x1427 (x237 1680813743)) 1680813743))
(assert (= x1152 (=> (and (= (< x37 32) x1287) (>= x451 0) (= (= x1354 (ite x1287 1 0)) x992) (= (x695 1 x1074) x1354) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x451) (= x567 (div x1074 2)) (= x37 (ite (< 0 x1354) x567 (x695 127 x567)))) (and (=> (and (not x992) (and (= (= 0 x182) x226) (= (x695 1 x1074) x182))) (and (=> (and (not x226) (= x1472 (< 0 x37))) (and (=> x1472 x225) (=> (not x1472) x1556))) (=> x226 x631))) (=> x992 x4)))))
(assert (x1511 x536))
(assert (= x1661 (and x1453 x1194)))
(assert (x1181 x708 x465))
(assert (x71 x465))
(assert (= 0 (x1267 128)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1427 (x237 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1511 x1397))
(assert (= 0 (x123 356)))
(assert (= x1597 (and x1660 x1483)))
(assert (x1181 x284 x1665))
(assert (=> (<= x1704 10000) (= (x299 x1704) (x237 x1704))))
(assert (= (and x964 (not x943)) x1252))
(assert (x1020 x1146))
(assert (x1511 x73))
(assert (x1511 x1241))
(assert (= x1236 (and x599 x1309)))
(assert (= x733 (and x1317 x91)))
(assert (= x776 (x1427 (x299 x776))))
(assert (x1511 x1628))
(assert (=> (>= 10000 x512) (= (x299 x512) (x237 x512))))
(assert (= (x975 128) 0))
(assert (= (and x421 x573) x624))
(assert (= 0 (x641 356)))
(assert (x1511 x1665))
(assert (x1511 x155))
(assert (= x675 (and (not x838) x1626)))
(assert (= (x1427 (x237 1991898891)) 1991898891))
(assert (= (or x1720 x1312) x1095))
(assert (= x1028 (=> (and (or (not x887) (and (= x1718 (x17 (+ x1355 x155))) x887)) (= x887 (< x155 x1240))) x1278)))
(assert (x1511 x1264))
(assert (x1020 x1576))
(assert (= x151 (and x600 (not x612))))
(assert (= (and x379 x491) x1164))
(assert (= (x1427 (x299 (x969 320))) (x969 320)))
(assert (= (and (not x1157) x822) x85))
(assert (x1511 x78))
(assert (x1511 x132))
(assert (= (=> (and (and (= x711 x1596) (< x209 1461501637330902918203684832716283019655932542976) (<= x209 1461501637330902918203684832716283019655932542975) (= (= x209 x1222) x699) (>= x209 0) (= (x9 x1596) x209) (= (x1149 (x237 1) 0) x711) (> x541 0)) (or (and (and (= (= 88571590996395278321425588994396360096048694792728512562370458433322657775616 x893) x294) (> 4294967296 x1098) (= (x97 x1098 224) x893) (>= 4294967295 x1098) (<= 0 x1098)) x699) (and (= x294 x699) (not x699)))) x89) x799))
(assert (x1511 x832))
(assert (= (and x1296 (not x774)) x616))
(assert (x1511 x1517))
(assert (= (or x480 x857) x1197))
(assert (= x1603 (and x278 x1657)))
(assert (= x582 (and (not x1403) x1494)))
(assert (=> (<= (x938 160) 10000) (= (x237 (x938 160)) (x299 (x938 160)))))
(assert (= x1062 (=> (and (= (x17 (+ 260 x1701)) x1568) (= x288 128) (= x1248 (x1476 (x299 x743))) (= (x695 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1612) x1701) (= x1612 (x17 (+ x437 31))) (= (= x1248 0) x1700) (= x930 (x236 (- x1568 128)))) (and (=> x1700 x422) (=> (and (and (> 2196353862 x1579) (= x168 (x1476 (x299 x743))) (= x1527 x564) (< 0 x168) (> 200511672 x1579) x694 (>= x428 132) (= (= x437 (x467 100)) x694) (> 302407648 x1579) (= x264 x776) (= x1087 656247078515407326148355443760548300161286948278503429861414951787075469312) (= x1579 24341557) (not (< x428 4)) (= x428 x930) (= (x236 (- x428 4)) x1432) (< x1579 839595567) (= (or (> x1432 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1432 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1432) true))) x124)) (not x1700)) (and (=> x124 x4) (=> (and (and (= (= x264 x776) x633) (= x406 x776)) (not x124)) (and (=> (not x633) x4) (=> (and x633 (and (= x1407 (and (> x428 131) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x428)))) (= x564 x451))) (and (=> (not x1407) x4) (=> (and (and (= (x1376 100) x1148) (= (> x1148 18446744073709551615) x245)) x1407) (and (=> (and (not x245) (and (= x846 (x17 (+ 132 x1148))) (= x963 132) (= x1000 (> x846 x428)))) (and (=> x1000 x4) (=> (and (= true x1194) (not x1000)) (and (=> (not x1194) x4) (=> (and x1194 (and (<= 0 x1285) (>= 255 x1285) (= (x1481 x999) x1285) (= x1564 (= 0 x1285)) (= (x1574 (x299 x776) (x237 2) 0) x999) (> 256 x1285))) (and (=> (not x1564) x4) (=> (and x1564 (= (= 0 x776) x1396)) (and (=> x1396 x4) (=> (and (and (= (x17 (+ 1 x541)) x1450) (= true x1309)) (not x1396)) (and (=> (and x1309 (and (or (and (= x1537 x24) x24) (and (and (= (ite x640 x640 (= x1450 0)) x1537) (= (= 0 x451) x640)) (not x24))) (= x24 (< x1450 x564)))) x1345) (=> (not x1309) x4))))))))))) (=> x245 x4)))))))))))))
(assert (= (x237 1844058622) (x299 1844058622)))
(assert (= 0 (x641 420)))
(assert (x1725 x216))
(assert (x1511 x530))
(assert (x1511 x785))
(assert (= x790 (or x211 x1404)))
(assert (=> (<= (x944 160) 10000) (= (x299 (x944 160)) (x237 (x944 160)))))
(assert (= (and (not x1398) x1463) x751))
(assert (x1511 x893))
(assert (x1511 x240))
(assert (x1511 x1419))
(assert (= (=> (= (= x1088 0) x1689) (and (=> x1689 x422) (=> (and (and (= 0 x1598) (= x425 x948) (= x1291 x1402) (= 1 x234)) (not x1689)) x1024))) x1132))
(assert (= (and (not x343) x646) x1049))
(assert (= x1699 x1632))
(assert (x348 x1464))
(assert (= x696 (and (not x120) x1640)))
(assert (=> (<= (x1178 192) 10000) (= (x299 (x1178 192)) (x237 (x1178 192)))))
(assert (x1511 x614))
(assert (= x1155 (or x326 x723)))
(assert (=> (>= 10000 (x67 192)) (= (x299 (x67 192)) (x237 (x67 192)))))
(assert (= (and (not x560) x1066) x175))
(assert (x1511 x319))
(assert (= x645 (and x385 (not x1509))))
(assert (= 2867924802 (x1427 (x237 2867924802))))
(assert (x1511 x387))
(assert (x1511 x1148))
(assert (x1511 x948))
(assert (x1511 x568))
(assert (x348 (x944 224)))
(assert (x1511 x486))
(assert (x1511 x45))
(assert (x1511 x538))
(assert (x1511 x1198))
(assert (= (or x1639 (and (not x1651) x858) x1207 x478 x1330 x1269 x752 x116 x1027 (and x311 (not x705)) (and x1667 x511) x458 x1033 (and x766 x335) x979 (and x1247 x1281) x696 (and (not x1467) x920)) x62))
(assert (=> (>= 10000 (x969 224)) (= (x299 (x969 224)) (x237 (x969 224)))))
(assert (= (x237 2923951457) (x299 2923951457)))
(assert (x1511 x1405))
(assert (= (x299 (x1427 x619)) x619))
(assert (= (x1427 (x237 106459005500898838667931598610041423549574964228674563513410788872267948359680)) 106459005500898838667931598610041423549574964228674563513410788872267948359680))
(assert (= x247 (and x441 x611)))
(assert (= (x1267 288) 0))
(assert (= (and x572 (not x1160)) x652))
(assert (= (and x28 x980) x379))
(assert (= (x237 1871487246) (x299 1871487246)))
(assert (x1511 x512))
(assert (x348 (x1101 288)))
(assert (= (and x1452 x727) x484))
(assert (= (and x751 (not x1696)) x1650))
(assert (= x1494 (or x1478 x786)))
(assert (= (and x656 x1243) x27))
(assert (x1511 x323))
(assert (= (and x771 (not x549)) x1192))
(assert (= (x237 1234336674) (x299 1234336674)))
(assert (x1511 x654))
(assert (x1511 x148))
(assert (x1511 x437))
(assert (x1511 x1298))
(assert (x348 (x969 160)))
(assert (= (and (not x661) x1225) x306))
(assert (x1511 x522))
(assert (= (x299 2196353862) (x237 2196353862)))
(assert (x1511 x1088))
(assert (x1511 x159))
(assert (= x684 (and x454 x843)))
(assert (x1511 x1286))
(assert (= x1484 (or x1515 x217 x674 x620 x796 (and x517 x623) (and x885 x1422) (and x129 x221) (and (not x1388) x1559) x48 (and (not x194) x1588))))
(assert (=> (<= (x1101 224) 10000) (= (x299 (x1101 224)) (x237 (x1101 224)))))
(assert (= (x299 3815738821) (x237 3815738821)))
(assert (x1511 x1094))
(assert (= (and (not x1136) x1001) x1513))
(assert (= (and x596 (not x585)) x44))
(assert (= x1051 (and x599 (not x1309))))
(assert (x1020 127))
(assert (x1511 x1431))
(assert (x1511 x403))
(assert (= x1580 (or x1190 x565)))
(assert (= x129 (and x1388 x1559)))
(assert (x1511 x1701))
(assert (= (x237 3632429537) (x299 3632429537)))
(assert (= x1392 (or x685 x21)))
(assert (x1511 x363))
(assert (= x1012 (and x1059 x761)))
(assert (= x1685 (=> (= (> (x1427 x261) (x1427 x692)) x1657) (and (=> x1657 x1370) (=> (not x1657) x1152)))))
(assert (= 0 (x1600 96)))
(assert (= 0 (x1713 128)))
(assert (x1511 x909))
(assert (= 0 (x747 388)))
(assert (x1511 x230))
(assert (x1511 x1522))
(assert (= (x299 1991898891) (x237 1991898891)))
(assert (= (and x1154 x720) x164))
(assert (=> (<= (x212 256) 10000) (= (x237 (x212 256)) (x299 (x212 256)))))
(assert (= (x1625 (+ (x17 (+ 100 x518)) 128)) 0))
(assert (x1511 x982))
(assert (= x876 (and x792 x1538)))
(assert (x1511 x953))
(assert (x1511 x1245))
(assert (= x118 (x1427 (x299 x118))))
(assert (= (=> (and (= (x236 (- x269 128)) x545) (= x283 (x17 (+ x371 31))) (= (= 0 x1440) x224) (= x1440 (x1476 (x299 x743))) (= (x17 (+ 260 x1265)) x269) (= x697 128) (= (x695 115792089237316195423570985008687907853269984665640564039457584007913129639904 x283) x1265)) (and (=> (and (not x224) (and (< 0 x1159) (= x347 (= x371 (x1674 100))) (= 1234336674 x185) (= x277 33277650900348105781121326340019631498405652329376380866381358124409588547584) (= (or (and (< x1186 96) (= (<= x1186 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1186)) x703) (= x1186 (x236 (- x1241 4))) (not (< x1241 4)) (= x545 x1241) (= (x1476 (x299 x743)) x1159) (> 2196353862 x185) (= x280 x1527) (not (< x185 1030951317)) x347 (not (= x185 1039635593)) (not (> 839595567 x185)) (<= 132 x1241) (not (= 1030951317 x185)) (= x1620 x1633) (> 1680813743 x185))) (and (=> (and (and (= x724 (= x1633 x1620)) (= x1620 x1289)) (not x703)) (and (=> (and x724 (and (= x1195 (and (> x1241 131) (= (<= x1241 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= x280 x655))) (and (=> (and (and (= 0 x768) (= x541 x135)) (not x1195)) x1608) (=> (and (and (= x396 (> x970 18446744073709551615)) (= x970 (x584 100))) x1195) (and (=> (and (not x396) (and (= x1652 (x17 (+ 132 x970))) (= 132 x630) (= (> x1652 x1241) x1243))) (and (=> (and (and (= x541 x135) (= 0 x768)) x1243) x1608) (=> (and (not x1243) (= x546 true)) (and (=> (and (and (= x135 x541) (= x768 0)) (not x546)) x1608) (=> (and (and (< x101 256) (>= 255 x101) (<= 0 x101) (= (x1481 x34) x101) (= x1426 (> x101 0)) (= x34 (x1574 (x299 x1620) (x237 2) 0))) x546) (and (=> (and (and (= x768 0) (= x135 x541)) (not x1426)) x1608) (=> (and x1426 (= x627 (> 1 x541))) (and (=> (and (not x627) (and (= (> x1206 0) x1076) (= x1206 (x236 (- x541 1))))) (and (=> (not x1076) x1619) (=> (and (= x1224 (< 0 x541)) x1076) (and (=> (and x1224 (and (= x926 (x9 x833)) (<= x926 1461501637330902918203684832716283019655932542975) (= (= x1620 x926) x681) (= x833 x32) (= (x1149 (x237 1) 0) x32) (<= 0 x926) (> 1461501637330902918203684832716283019655932542976 x926))) (and (=> (and x681 (= x1420 (< x541 1))) (and (=> (and x1420 (and (= x135 x541) (= 0 x768))) x1608) (=> (and (and (= x28 (< x418 x541)) (= x418 (x236 (- x541 1)))) (not x1420)) (and (=> (and (and (= 0 x768) (= x135 x541)) (not x28)) x1608) (=> (and x28 (and (= (< 0 x541) x491) (= (x9 x388) x1517) (> 1461501637330902918203684832716283019655932542976 x1517) (<= 0 x1517) (= x388 (x1182 x1227 x418)) (= x1227 (x1149 (x237 1) 0)) (<= x1517 1461501637330902918203684832716283019655932542975))) (and (=> x491 x1619) (=> (and (not x491) (and (= x135 x541) (= 0 x768))) x1608))))))) (=> (not x681) x968))) (=> (and (and (= x135 x541) (= 0 x768)) (not x1224)) x1608))))) (=> x627 x721))))))))) (=> (and (and (= x541 x135) (= 0 x768)) x396) x1608))))) (=> (and (not x724) (and (= 0 x768) (= x541 x135))) x1608))) (=> (and (and (= 0 x768) (= x135 x541)) x703) x1608))) (=> (and x224 (and (= x541 x191) (= x780 0) (= x1275 x758) (= x741 (mod x35 x541)))) x218))) x83))
(assert (= (x1178 288) (x1427 (x299 (x1178 288)))))
(assert (= (or x1155 x386) x571))
(assert (x1511 x1005))
(assert (= 1871487246 (x1427 (x237 1871487246))))
(assert (= (x237 2867924802) (x299 2867924802)))
(assert (= (and (not x1503) x691) x143))
(assert (= (=> (and (= (not (> (x1427 x1185) (x1427 x682))) x1723) (= x682 (x1182 x619 1))) (and x1723 x811)) x314))
(assert (= (and x242 x223) x1639))
(assert (x1020 x941))
(assert (= x1304 x544))
(assert (x1511 x900))
(assert (= (x67 256) (x1427 (x299 (x67 256)))))
(assert (=> (>= 10000 (x944 224)) (= (x237 (x944 224)) (x299 (x944 224)))))
(assert (= (x299 115792089237316195423570985008687907853269984665640564039457484007913129639935) (x237 115792089237316195423570985008687907853269984665640564039457484007913129639935)))
(assert (x495 x100))
(assert (x1511 x1358))
(assert (= (x299 2829837978) (x237 2829837978)))
(assert (= (=> (and (= x1326 (x1182 x583 1)) (= (not (< 164 x410)) x621)) (and (=> (= x1326 x1254) x1348) x621)) x765))
(assert (x1511 x564))
(assert (x1511 x435))
(assert (= (=> (and (= x1555 x1373) (= (x1526 (x299 x743)) x1239) (= x1656 (and (<= x1519 x1239) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x586 x1519)))) (= x586 (x1526 (x299 x743)))) (and (=> (and x1656 (and (< 0 x1716) (= (x1476 (x299 x743)) x1716) (= (= 0 x1519) x1255) (< (+ x1391 x1519) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 x558) (= (x1526 (x299 x743)) x1572) (= x755 x1555) (= (- x1572 x1519) x913) (= x1391 (x63 (x299 x743))) (= x755 4) (= (x17 (+ x1391 x1519)) x136))) (and (=> (and (and (= x297 (< 0 x437)) (not (= x1416 1946460669)) (not (= x1416 1991898891)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1527) (<= 0 x264) (not (< x1416 1680813743)) (not (> 1946460669 x1416)) (>= x1527 0) (>= 1461501637330902918203684832716283019655932542975 x264) (= x437 (x1571 96)) (< x1416 2196353862) (= 2112976665 x1416) (not (< x1416 839595567)) (> 1461501637330902918203684832716283019655932542976 x264) (not (< x755 4)) (not (= x1416 2005628311))) x1255) (and (=> (and (= x1618 0) (not x297)) x784) (=> x297 x1670))) (=> (not x1255) x422))) (=> (and (and (= x456 0) (= x1643 0) (= x488 x541) (= x160 x1143)) (not x1656)) x199))) x321))
(assert (x1511 x1378))
(assert (x1511 x1081))
(assert (x1511 x1212))
(assert (= x1306 (and x223 (not x242))))
(assert (= (and (not x335) x766) x700))
(assert (= x390 (=> (and (= x593 (x236 (- x1005 128))) (= x1539 (>= 224 x593))) (and x1539 (=> (and (= x113 (= x825 x250)) (= (not x113) x1) (= (ite (>= 32 x593) (x1149 (x299 (x969 128)) 0) (ite (<= x593 64) (x1574 (x299 (x969 128)) (x299 (x969 160)) 0) (ite (>= 96 x593) (x710 (x299 (x969 128)) (x299 (x969 160)) (x299 (x969 192)) 0) (ite (>= 128 x593) (x201 (x299 (x969 128)) (x299 (x969 160)) (x299 (x969 192)) (x299 (x969 224)) 0) (ite (<= x593 160) (x510 (x299 (x969 128)) (x299 (x969 160)) (x299 (x969 192)) (x299 (x969 224)) (x299 (x969 256)) 0) (ite (>= 192 x593) (x835 (x299 (x969 128)) (x299 (x969 160)) (x299 (x969 192)) (x299 (x969 224)) (x299 (x969 256)) (x299 (x969 288)) 0) (ite (>= 224 x593) (x1547 (x299 (x969 128)) (x299 (x969 160)) (x299 (x969 192)) (x299 (x969 224)) (x299 (x969 256)) (x299 (x969 288)) (x299 (x969 320)) 0) (x299 x512)))))))) x825)) x609)))))
(assert (= (or x816 x735) x255))
(assert (x1511 x1083))
(assert (x1511 x1072))
(assert (= x1372 (and x413 x1537)))
(assert (x376 x1445))
(assert (x1511 x836))
(assert (= x857 (and x1324 x1650)))
(assert (= (x938 288) (x1427 (x299 (x938 288)))))
(assert (= (x975 96) 0))
(assert (= (+ 3 (x1427 x626)) (x1427 (x1182 x626 3))))
(assert (x1511 x170))
(assert (x1511 x1115))
(assert (= (x1427 (x237 3727475225)) 3727475225))
(assert (= (and (not x224) x806) x94))
(assert (= (or x1513 x173) x1463))
(assert (= x1013 (and x343 x646)))
(assert (= x837 (and x226 x119)))
(assert (=> (>= 10000 (x976 256)) (= (x299 (x976 256)) (x237 (x976 256)))))
(assert (= (x299 (x1427 x331)) x331))
(assert (= (x1427 (x299 (x212 160))) (x212 160)))
(assert (=> (>= 10000 (x212 192)) (= (x299 (x212 192)) (x237 (x212 192)))))
(assert (= (and x537 x158) x629))
(assert (x1511 x715))
(assert (x348 x1222))
(assert (x1511 x586))
(assert (x1511 x428))
(assert (x1511 x1216))
(assert (=> (>= 10000 (x212 128)) (= (x237 (x212 128)) (x299 (x212 128)))))
(assert (= x858 (and x511 (not x1667))))
(assert (= (and x1544 (not x1235)) x1586))
(assert (x1511 x1718))
(assert (= (or x367 x1061) x990))
(assert (= (x212 224) (x1427 (x299 (x212 224)))))
(assert (x1511 x1186))
(assert (x1511 x1377))
(assert (= x791 (or x616 x1018)))
(assert (= (or x1078 (and (not x183) x189)) x962))
(assert (x1511 x233))
(assert (= x1417 (or x1117 x610)))
(assert (= (or x275 (and x1045 (not x354))) x734))
(assert (=> (>= 10000 x1714) (= (x299 x1714) (x237 x1714))))
(assert (= (=> (and (= x812 (not (> (x1427 x261) (x1427 x862)))) (= x862 (x1182 x692 1))) (and x1152 x812)) x1370))
(assert (x896 x581))
(assert (x1511 x1159))
(assert (= (x1427 (x299 (x1101 128))) (x1101 128)))
(assert (= (and x1593 (not x526)) x1225))
(assert (= (and x385 x1509) x402))
(assert (=> (<= (x212 320) 10000) (= (x237 (x212 320)) (x299 (x212 320)))))
(assert (= (and (not x273) x669) x1698))
(assert (x1511 x1702))
(assert (x1020 x531))
(assert (= (or x777 x213) x1316))
(assert (x1511 x400))
(assert (x1511 x1034))
(assert (x1511 x1228))
(assert (x1511 x231))
(assert (= x173 (and x1001 x1136)))
(assert (= (and x826 (not x1346)) x952))
(assert (= (x1713 256) 0))
(assert (x1511 x126))
(assert (x1511 x672))
(assert (= x1410 x946))
(assert (=> (<= (x67 224) 10000) (= (x237 (x67 224)) (x299 (x67 224)))))
(assert (x1511 x1714))
(assert (=> (>= 10000 (x67 256)) (= (x299 (x67 256)) (x237 (x67 256)))))
(assert (= (x1427 (x237 3948783980)) 3948783980))
(assert (= (and x751 x1696) x217))
(assert (x1511 x1203))
(assert (x1511 x1052))
(assert (x1511 x357))
(assert (= (or x670 x1292) x1021))
(assert (= (and x147 x350) x1047))
(assert (= x1296 (and (not x1341) x175)))
(assert (= (+ 1 (x1427 x927)) (x1427 (x1182 x927 1))))
(assert (= x313 (=> (and (= x1126 x1220) (= (x1436 x1220) x801) (= x1673 x1408) (= x1585 (not (> x770 32)))) (and x1585 (=> (= x853 32) x404)))))
(assert (x1511 x773))
(assert (x1511 x1459))
(assert (x1511 x1272))
(assert (= x1064 (and x229 x5)))
(assert (= x454 (or x1256 x734)))
(assert (x348 (x938 320)))
(assert (x1511 x729))
(assert (x1511 x1075))
(assert (= 0 (x1571 96)))
(assert (x1511 x167))
(assert (= (x1427 (x237 50455196340412629536459377552246818957342304218644716315923982585962625499136)) 50455196340412629536459377552246818957342304218644716315923982585962625499136))
(assert (x1511 x304))
(assert (x1511 x1561))
(assert (= (or x1328 x417) x816))
(assert (= x138 (and x24 x1236)))
(assert (x1511 x1262))
(assert (x1511 x1275))
(assert (= 1946460669 (x1427 (x237 1946460669))))
(assert (x1511 x939))
(assert (=> (<= x776 10000) (= (x299 x776) (x237 x776))))
(assert (x1511 x1126))
(assert (x1511 x844))
(assert (= (x1427 (x299 x1704)) x1704))
(assert (= (x1427 (x237 1234336674)) 1234336674))
(assert (= x1059 (and (not x1412) x257)))
(assert (= (x957 x737) 0))
(assert (x1511 x863))
(assert (=> (<= (x969 160) 10000) (= (x237 (x969 160)) (x299 (x969 160)))))
(assert (= (x299 839595567) (x237 839595567)))
(assert (= (x1427 (x237 18446744073709551615)) 18446744073709551615))
(assert (x1511 x1147))
(assert (= (and x884 x133) x1495))
(assert (= 0 (x638 96)))
(assert (x1511 x1644))
(assert (x1511 x444))
(assert (= x777 (and x164 x520)))
(assert (x1511 x1553))
(assert (= (and x407 x156) x1263))
(assert (= (x237 1461501637330902918203684832716283019655932542976) (x299 1461501637330902918203684832716283019655932542976)))
(assert (= (mod (* 26959946667150639794667015087019630673637144422540572481103610249216 x1098) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x97 x1098 224)))
(assert (x1020 x293))
(assert (= (and x469 x1521) x386))
(assert (= (and (not x546) x337) x1336))
(assert (= (x1427 (x299 x512)) x512))
(assert (= (x1427 (x299 (x1101 320))) (x1101 320)))
(assert (= x596 (or x1712 x1164)))
(assert (= (+ 1 (x1427 x1279)) (x1427 (x1182 x1279 1))))
(assert (x1511 x1351))
(assert (x1511 x462))
(assert (= (or x1584 x1364) x275))
(assert (= (x464 256) 0))
(assert (= (and (not x1224) x414) x889))
(assert (x348 (x976 320)))
(assert (= (x938 224) (x1427 (x299 (x938 224)))))
(assert (= x3 (=> (and (= x1403 (= x357 x743)) (<= 0 x357) (>= 1461501637330902918203684832716283019655932542975 x357) (= (x954 x927) x357) (< x357 1461501637330902918203684832716283019655932542976)) (and (=> (and (and (not (= x754 x174)) (= x176 (< x828 32)) (= (x1380 x1399) x1405) (= (= x40 0) x1668) (= (ite (< 0 x174) x408 (x695 127 x408)) x828) (<= x266 1461501637330902918203684832716283019655932542975) (= x174 (x695 1 x1405)) (>= x266 0) (= (x1182 x615 1) x1399) (= x266 (x954 x927)) (= (ite x176 1 0) x754) (= x408 (div x1405 2)) (= x40 (x695 1 x1405)) (< x266 1461501637330902918203684832716283019655932542976)) (not x1403)) (and (=> x1668 x967) (=> (and (not x1668) (= (< 0 x828) x1487)) (and (=> (not x1487) x477) (=> x1487 x90))))) (=> (and (and (< x1339 4294967296) (<= x1339 4294967295) (<= 0 x1339) (= (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 (x97 x1339 224)) x1362)) x1403) (and (=> (and (and (= (x695 26959946667150639794667015087019630673637144422540572481103610249215 x436) x1401) (= x75 (x236 (- x1371 32))) (= (x243 x1183) x155) (= (x17 (+ x1183 32)) x289) (= x436 (x327 x289)) (= x1355 (x17 (+ 36 x1183))) (= 36 x1371) (= x1223 (x17 (+ x1401 106459005500898838667931598610041423549574964228674563513410788872267948359680))) (= x1546 (< 0 x155))) x1362) (and (=> x1546 x140) (=> (and (not x1546) (= 0 x1240)) x1028))) (=> (and (not x1362) (and (> 4294967296 x1339) (<= x1339 4294967295) (= x932 (= (x97 x1339 224) 100641684887429822015232653770480429695213136867978658013931169090238473568256)) (<= 0 x1339))) (and (=> (and (not x932) (and (<= x1339 4294967295) (= x821 (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 (x97 x1339 224))) (< x1339 4294967296) (>= x1339 0))) (and (=> (and (and (= 36 x262) (= x1373 (x829 x1183)) (= (x17 (+ x1183 36)) x434) (= x1137 (x957 x737)) (= (x17 (+ x1183 32)) x737) (= (> x1373 0) x1660) (= x380 (x695 26959946667150639794667015087019630673637144422540572481103610249215 x1137)) (= x1505 (x236 (- x262 32))) (= x1032 (x17 (+ 56965738197333823925951794324075424010313516842063129668313081903848242544640 x380)))) x821) (and (=> x1660 x1122) (=> (and (not x1660) (= x455 0)) x1688))) (=> (and (and (>= 4294967295 x1339) (= x482 (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 (x97 x1339 224))) (< x1339 4294967296) (<= 0 x1339)) (not x821)) (and (=> (and (and (= x1542 x541) (= x1054 1) (= x1624 x1143)) (not x482)) x11) (=> (and (and (= (x17 (+ 31 x95)) x531) (= x1123 (x17 (+ 36 x1183))) (= x504 (x236 (- x1451 32))) (= (x17 (+ x1183 32)) x1283) (= x110 (x384 x1183)) (= x95 (x1600 96)) (= (< 0 x110) x1315) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1527) (<= 0 x1527) (= x216 (x1468 x1283)) (= (x17 (+ x1123 32)) x1675) (= x518 (x17 (+ x870 x561))) (= (x17 (+ x590 32)) x561) (= (x236 (- x518 x1183)) x1451) (= x874 (x17 (+ 50455196340412629536459377552246818957342304218644716315923982585962625499136 x1592))) (= (x695 26959946667150639794667015087019630673637144422540572481103610249215 x216) x1592) (= (x695 115792089237316195423570985008687907853269984665640564039457584007913129639904 x531) x870) (= (x17 (+ 64 x1123)) x590)) x482) (and (=> (and (= x1204 0) (not x1315)) x1044) (=> x1315 x1550))))))) (=> (and x932 (and (= (x17 (+ x1183 32)) x1126) (= x897 (x695 26959946667150639794667015087019630673637144422540572481103610249215 x1722)) (= x770 (x56 x1183)) (= x749 (x236 (- x1642 32))) (= (x17 (+ 100641684887429822015232653770480429695213136867978658013931169090238473568256 x897)) x310) (= (x17 (+ x1183 36)) x1673) (= (x1172 x1126) x1722) (= x1642 36) (= (> x770 0) x153))) (and (=> (and (not x153) (= x853 0)) x404) (=> x153 x313)))))))))))
(assert (x1020 x323))
(assert (= (+ 1 (x1427 x615)) (x1427 (x1182 x615 1))))
(assert (= (=> (and (= x598 (x236 (- x1301 128))) (= (<= x598 224) x1221) (= (x17 (+ 128 x1266)) x1301)) (and x1221 (=> (and (= x526 (= x1212 (ite x527 1 0))) (= x527 (> 32 x832)) (= (x695 1 x293) x1212) (= (ite (< 0 x1212) x1146 (x695 127 x1146)) x832) (= x250 (ite (>= 32 x598) (x1149 (x299 (x1101 128)) 0) (ite (>= 64 x598) (x1574 (x299 (x1101 128)) (x299 (x1101 160)) 0) (ite (>= 96 x598) (x710 (x299 (x1101 128)) (x299 (x1101 160)) (x299 (x1101 192)) 0) (ite (<= x598 128) (x201 (x299 (x1101 128)) (x299 (x1101 160)) (x299 (x1101 192)) (x299 (x1101 224)) 0) (ite (<= x598 160) (x510 (x299 (x1101 128)) (x299 (x1101 160)) (x299 (x1101 192)) (x299 (x1101 224)) (x299 (x1101 256)) 0) (ite (>= 192 x598) (x835 (x299 (x1101 128)) (x299 (x1101 160)) (x299 (x1101 192)) (x299 (x1101 224)) (x299 (x1101 256)) (x299 (x1101 288)) 0) (ite (>= 224 x598) (x1547 (x299 (x1101 128)) (x299 (x1101 160)) (x299 (x1101 192)) (x299 (x1101 224)) (x299 (x1101 256)) (x299 (x1101 288)) (x299 (x1101 320)) 0) (x299 x1683))))))))) (= x1146 (div x293 2))) (and (=> (and (not x526) (and (= (= 0 x1158) x661) (= (x695 1 x293) x1158))) (and (=> (and (not x661) (and (= (< 0 x832) x1217) (= (x1149 (x237 5) 0) x281))) (and (=> (not x1217) x1705) (=> x1217 x1460))) (=> (and x661 (and (= x556 (x695 115792089237316195423570985008687907853269984665640564039457584007913129639680 x293)) (= x536 (x17 (+ 128 x832))) (= x1005 x536))) x390))) (=> x526 x1686))))) x1437))
(assert (=> (<= (x938 256) 10000) (= (x237 (x938 256)) (x299 (x938 256)))))
(assert (= 33277650900348105781121326340019631498405652329376380866381358124409588547584 (x1427 (x237 33277650900348105781121326340019631498405652329376380866381358124409588547584))))
(assert (= x811 (=> (and (<= 0 x427) (= x291 (> 32 x1522)) (= x605 (= (ite x291 1 0) x1175)) (<= x427 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1522 (ite (> x1175 0) x1576 (x695 127 x1576))) (= (x695 1 x581) x1175) (= (div x581 2) x1576)) (and (=> x605 x1686) (=> (and (not x605) (and (= x165 (= 0 x1131)) (= x1131 (x695 1 x581)))) (and (=> x165 x1653) (=> (and (= (> x1522 0) x763) (not x165)) (and (=> x763 x1097) (=> (not x763) x146)))))))))
(assert (= x1017 (and x1 x1197)))
(assert (x1511 x303))
(assert (x1020 x408))
(assert (= (x464 320) 0))
(assert (= (and (not x1656) x114) x374))
(assert (= x1281 (and x311 x705)))
(assert (x1511 x169))
(assert (= x1556 x631))
(assert (= (and (not x699) x618) x940))
(assert (= (x969 224) (x1427 (x299 (x969 224)))))
(assert (x1511 x1445))
(assert (= x1153 (=> (and (= (not (> x989 1)) x1508) (< 0 x494)) (and x1244 x1508))))
(assert (= (and x995 x423) x565))
(assert (x1511 x136))
(assert (= 0 (x123 420)))
(assert (x348 (x67 224)))
(assert (=> (>= 10000 (x1178 128)) (= (x237 (x1178 128)) (x299 (x1178 128)))))
(assert (x1511 x1158))
(assert (x1511 x118))
(assert (= (and x1442 x1677) x1001))
(assert (x348 (x938 288)))
(assert (x1511 x768))
(assert (x348 x538))
(assert (= (x1625 (+ 160 (x17 (+ x518 100)))) 0))
(assert (= 1461501637330902918203684832716283019655932542976 (x1427 (x237 1461501637330902918203684832716283019655932542976))))
(assert (x1511 x1703))
(assert (x1511 x293))
(assert (x348 (x1178 320)))
(assert (= (and x1420 x130) x750))
(assert (x1511 x1675))
(assert (x1511 x910))
(assert (x1511 x1519))
(assert (= x219 (and x1157 x822)))
(assert (= 0 (x1625 (+ 64 (x17 (+ x518 100))))))
(assert (x1020 x654))
(assert (= (or x559 x339) x1615))
(assert (x1511 x936))
(assert (x1511 x182))
(assert (= (and x365 (not x1473)) x511))
(assert (= (and x656 (not x1243)) x337))
(assert (x1511 x1299))
(assert (x1020 x1137))
(assert (x1511 x1080))
(assert (= (x1172 x1126) 0))
(assert (=> (>= 10000 (x67 160)) (= (x237 (x67 160)) (x299 (x67 160)))))
(assert (= (and x1414 (not x438)) x704))
(assert (x1511 x1239))
(assert (x1511 x1004))
(assert (= x80 (and x1462 x986)))
(assert (x1511 x1416))
(assert (= x1394 (and x1562 x1043)))
(assert (x1511 x1594))
(assert (x1020 x126))
(assert (= (or (and (not x1104) x58) x1011) x912))
(assert (x1511 x1578))
(assert (= x1532 x475))
(assert (= x186 (and (not x797) x645)))
(assert (x1511 x455))
(assert (x1511 x1504))
(assert (= (and x1544 x1235) x1332))
(assert (x1020 x1074))
(assert (x1511 x1125))
(assert (x1511 x174))
(assert (x1511 x650))
(assert (x348 x512))
(assert (x1511 x870))
(assert (= x89 (and (=> (and (and (= (< 0 x541) x1166) (< x39 256) (= (x1526 (x299 x743)) x479) (= x626 (x1574 (x299 x1704) (x237 7) 0)) (<= x39 255) (<= x1704 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1704 0) (<= 0 x39) (= x1133 (x1182 x626 3)) (= 0 x39) (= (x1257 x1133) x39)) x294) (and (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x1454) (= x673 (x1574 (x299 x1704) (x237 9) 0)) (<= 0 x530) (= x1715 (x1574 (x299 x1454) x673 0)) (= x778 x1638) (> 256 x132) (= x132 (x1389 x1715)) (< 0 x541) (< x1454 1461501637330902918203684832716283019655932542976) (= (x1149 (x237 1) 0) x778) (<= x530 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x350 (= (ite x798 0 1) x530)) (>= 255 x132) (>= x1454 0) (= (= x132 0) x798) (<= 0 x132) (= x1454 (x9 x1638))) x1166) (and (=> (not x350) x1518) (=> (and x350 (= x1490 1)) x592))) (=> (not x1166) x744))) (=> (and (= x989 x541) (not x294)) x1153))))
(assert (x1511 x1302))
(assert (= x1260 (and x1038 x381)))
(assert (x1511 x1430))
(assert (= x206 (=> (and (= (not (< 132 x470)) x1361) (= (x1182 x1507 1) x562)) (and x1361 (=> (= x1058 x562) x150)))))
(assert (= x1617 (or x919 x8)))
(assert (= x431 (or x1484 x1232)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 (x1427 (x237 115792089237316195423570985008687907853269984665640564039457584007913129639680))))
(assert (x1511 x190))
(assert (= (mod (* x1339 26959946667150639794667015087019630673637144422540572481103610249216) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x97 x1339 224)))
(assert (=> (>= 10000 (x67 288)) (= (x299 (x67 288)) (x237 (x67 288)))))
(assert (= (and x131 (not x1000)) x1453))
(assert (x1511 x678))
(assert (= (=> (and (or x573 (not x573)) (= (= 0 x1088) x573)) x1132) x1680))
(assert (x1181 x614 x1595))
(assert (x348 (x1101 192)))
(assert (x1511 x677))
(assert (x1511 x1108))
(assert (= x1089 (=> (and (= (>= 224 x332) x141) (= (x236 (- x93 128)) x332)) (and (=> (and (= (= x851 x43) x860) (= (not x860) x1104) (= x851 (ite (>= 32 x332) (x1149 (x299 (x944 128)) 0) (ite (>= 64 x332) (x1574 (x299 (x944 128)) (x299 (x944 160)) 0) (ite (>= 96 x332) (x710 (x299 (x944 128)) (x299 (x944 160)) (x299 (x944 192)) 0) (ite (<= x332 128) (x201 (x299 (x944 128)) (x299 (x944 160)) (x299 (x944 192)) (x299 (x944 224)) 0) (ite (>= 160 x332) (x510 (x299 (x944 128)) (x299 (x944 160)) (x299 (x944 192)) (x299 (x944 224)) (x299 (x944 256)) 0) (ite (>= 192 x332) (x835 (x299 (x944 128)) (x299 (x944 160)) (x299 (x944 192)) (x299 (x944 224)) (x299 (x944 256)) (x299 (x944 288)) 0) (ite (>= 224 x332) (x1547 (x299 (x944 128)) (x299 (x944 160)) (x299 (x944 192)) (x299 (x944 224)) (x299 (x944 256)) (x299 (x944 288)) (x299 (x944 320)) 0) (x299 x707)))))))))) x827) x141))))
(assert (= (and (not x396) x1118) x656))
(assert (= (x807 256) 0))
(assert (x1511 x1530))
(assert (= x498 (and x1079 x153)))
(assert (= (x1427 (x299 (x969 160))) (x969 160)))
(assert (= 0 (x638 128)))
(assert (= (x237 3189536363) (x299 3189536363)))
(assert (x1511 x1070))
(assert (x1511 x1285))
(assert (x1511 x853))
(assert (x348 x1237))
(assert (=> (<= x1464 10000) (= (x237 x1464) (x299 x1464))))
(assert (= x1154 (and x1649 x1022)))
(assert (x1511 x383))
(assert (x1042 x531))
(assert (= x65 (and x257 x1412)))
(assert (x1511 x874))
(assert (x1511 x759))
(assert (= x1078 (or x1617 x837)))
(assert (x1511 x749))
(assert (= x1190 (and x423 (not x995))))
(assert (= (or (and x454 (not x843)) x684) x600))
(assert (= x1033 (and x204 (not x419))))
(assert (x1511 x1646))
(assert (x1511 x875))
(assert (= (and (=> (and x354 (and (= (div x293 2) x1286) (= x1509 (= x105 (ite x1065 1 0))) (= x105 (x695 1 x293)) (= x1065 (> 32 x1272)) (= x1272 (ite (> x105 0) x1286 (x695 127 x1286))))) (and (=> (and (and (= x797 (> x970 0)) (= (x17 (+ x1272 31)) x1637) (= x539 (div x1637 32)) (= (x1149 (x237 5) 0) x1279) (= (x1182 x1279 x539) x375)) (not x1509)) (and (=> (and x797 (= x1543 (< 31 x970))) (and (=> (and (not x1543) (and (= x284 (x17 (+ x970 x970))) (= (>= 255 x284) x1071) (= x654 (ite x717 x1367 x1070)) (= (x17 (+ x1665 x284)) x945) (= x844 (x1057 x284 x1665)) (= (ite x1071 x945 x844) x1070) (= (x584 132) x1245) (= x1665 (x695 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1245)) (= (x17 (+ x284 x1665)) x1367) (= (<= x284 255) x717) (= x307 x1279))) x1395) (=> (and (and (= x613 (x17 (+ x970 x970))) (= (x17 (+ 1 x613)) x875) (= x909 (x17 (+ 132 x970))) (= (< 132 x909) x1144)) x1543) (and (=> x1144 x557) (=> (and (= x1279 x580) (not x1144)) x882))))) (=> (and (and (= x1279 x307) (= x654 0)) (not x797)) x1395))) (=> (and (and (= x541 x135) (= 0 x768)) x1509) x1608))) (=> (not x354) x1304)) x18))
(assert (x1511 x1037))
(assert (x1511 x185))
(assert (= x473 (and x1668 x582)))
(assert (= (and x175 x1341) x1050))
(assert (x348 (x1101 256)))
(assert (= (=> (and (= x1444 x155) (= (x1526 (x299 x743)) x1198) (= x72 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1519 x1198)) (<= x1519 x1203))) (= x1203 (x1526 (x299 x743)))) (and (=> (and (not x72) (and (= x541 x760) (= 0 x1215) (= x779 0) (= x984 x1143))) x1647) (=> (and (and (= (x1526 (x299 x743)) x1717) (< (+ x785 x1519) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 0 x1469) (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 x78) (= x1434 4) (= (- x1717 x1519) x881) (= (x1476 (x299 x743)) x1469) (= x1444 x1434) (= x1548 (x17 (+ x1519 x785))) (= x273 (= 0 x1519)) (= (x1010 (x299 x743)) x785)) x72) (and (=> (and (and (not (> 4 x1434)) (not (> 2196353862 x256)) (<= 0 x1527) (= (< 0 x371) x476) (<= x1633 1461501637330902918203684832716283019655932542975) (not (> 3189536363 x256)) (= (x638 96) x371) (<= 0 x1633) (> 1461501637330902918203684832716283019655932542976 x1633) (not (< x256 3733007566)) (= 3948783980 x256) (<= x1527 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x256 3948783980))) x273) (and (=> (and (= 0 x462) (not x476)) x1340) (=> x476 x1211))) (=> (and (not x273) (and (= x541 x1474) (= x440 (mod x35 x541)) (= 0 x1343))) x639))))) x1278))
(assert (= x414 (and x19 x1076)))
(assert (x1020 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= x1686 (=> (and (= x541 x387) (= x1377 x575) (= 0 x650) (= x1386 (mod x35 x541))) x718)))
(assert (x1511 x214))
(assert (= (and x249 x554) x1640))
(assert (x348 (x976 192)))
(assert (x1511 x865))
(assert (= (x237 88571590996395278321425588994396360096048694792728512562370458433322657775616) (x299 88571590996395278321425588994396360096048694792728512562370458433322657775616)))
(assert (=> (>= 10000 (x1101 288)) (= (x299 (x1101 288)) (x237 (x1101 288)))))
(assert (x1511 x1695))
(assert (= x1163 (and x183 x189)))
(assert (= (and x1462 (not x986)) x285))
(assert (x1511 x31))
(assert (x1511 x800))
(assert (= (x299 302407648) (x237 302407648)))
(assert (x1511 x1557))
(assert (x1511 x769))
(assert (= x1348 (=> (and (= x800 x956) (= x1488 x1254)) x1103)))
(assert (= (x237 3923945232) (x299 3923945232)))
(assert (= (=> (= (not (< 32 x1230)) x1202) (and x1202 x1648)) x935))
(assert (= x1719 (and (not x1558) x109)))
(assert (= x432 (and x546 x337)))
(assert (=> (>= 10000 (x944 320)) (= (x237 (x944 320)) (x299 (x944 320)))))
(assert (=> (>= 10000 x1683) (= (x237 x1683) (x299 x1683))))
(assert (x1511 x732))
(assert (x1511 x1180))
(assert (= 3018310333 (x1427 (x237 3018310333))))
(assert (= x1145 (or (and x627 x1433) x861)))
(assert (= x646 (or x300 x186 x74)))
(assert (x1511 x64))
(assert (=> (<= (x944 192) 10000) (= (x299 (x944 192)) (x237 (x944 192)))))
(assert (x1042 x1612))
(assert (x1511 x758))
(assert (= x670 (and (not x1435) x401)))
(assert (= (x237 2826133662) (x299 2826133662)))
(assert (= (and x1573 (not x1396)) x599))
(assert (x1511 x110))
(assert (x1511 x655))
(assert (x348 (x1178 160)))
(assert (x1511 x886))
(assert (x1511 x479))
(assert (= x980 (and (not x1420) x130)))
(assert (= 0 (x464 288)))
(assert (= (and x1672 (not x502)) x364))
(assert (x1511 x1457))
(assert (x376 x941))
(assert (x1020 x1612))
(assert (= x1211 (=> (and (= (not (< 32 x371)) x712) (= x382 (x638 128))) (and x712 (=> (= x462 32) x1340)))))
(assert (= (x299 26959946667150639794667015087019630673637144422540572481103610249215) (x237 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1511 x332))
(assert (= (or (and (not x573) x421) x624) x1250))
(assert (x1511 x1127))
(assert (x1511 x325))
(assert (x1511 x1002))
(assert (= x98 (or x738 x820)))
(assert (= x1687 (or x378 x411)))
(assert (x1511 x871))
(assert (= x1261 (and x911 (not x1090))))
(assert (= (and x438 x1414) x133))
(assert (= (and x14 x1068) x489))
(assert (= (x237 4294967296) (x299 4294967296)))
(assert (= (x67 224) (x1427 (x299 (x67 224)))))
(assert (= x1046 (or x597 x1394)))
(assert (= (x1427 (x299 x1464)) x1464))
(assert (x1511 x1610))
(assert (= (x1427 (x299 (x944 288))) (x944 288)))
(assert (= (=> (and (= x1100 x434) (= x568 (x1591 x1485)) (= x1545 (not (< 32 x1373))) (= x1485 x737)) (and (=> (= x455 32) x1688) x1545)) x1122))
(assert (x1181 x1169 x647))
(assert (not x937))
(assert (= x1305 (or x1213 x336)))
(assert (= (or x1021 x448) x1328))
(assert (=> (>= 10000 (x1101 192)) (= (x299 (x1101 192)) (x237 (x1101 192)))))
(assert (= x497 (and (not x1660) x1483)))
(assert (x1511 x706))
(assert (= (x976 128) (x1427 (x299 (x976 128)))))
(assert (x1511 x1636))
(assert (= (and x1163 (not x698)) x1022))
(assert (x348 (x212 256)))
(assert (x1511 x37))
(assert (= x1470 (and (not x887) x1417)))
(assert (= x1583 (and x1581 x1570)))
(assert (= (and x147 (not x350)) x1191))
(assert (x1511 x933))
(assert (= x973 (or x1251 x241)))
(assert (= x792 (or x247 x1352)))
(assert (x1511 x101))
(assert (= (x1178 320) (x1427 (x299 (x1178 320)))))
(assert (x1511 x265))
(assert (= (=> (= 0 x1490) x592) x744))
(assert (x1511 x284))
(assert (= x203 (=> (and (= (mod x35 x541) x207) (= x1477 x541) (= x368 0)) x1276)))
(assert (x1511 x925))
(assert (x1511 x1555))
(assert (x1511 x1444))
(assert (= (=> (and (= x148 (x975 128)) (= (not (> x1536 32)) x1280)) (and (=> (= x1418 32) x405) x1280)) x1124))
(assert (x376 x126))
(assert (x1511 x1301))
(assert (= (and x330 (not x124)) x487))
(assert (= x1691 (and (not x482) x1176)))
(assert (= (and x1661 x1564) x1573))
(assert (x1511 x1365))
(assert (= 0 (x747 292)))
(assert (x1511 x963))
(assert (x1511 x918))
(assert (x1511 x1592))
(assert (x1511 x651))
(assert (x348 (x976 128)))
(assert (= x1707 (and x1573 x1396)))
(assert (x1511 x39))
(assert (x1511 x535))
(assert (= (and x273 x669) x1331))
(assert (= x317 (or x259 x1162)))
(assert (x1511 x707))
(assert (= x555 (and x1381 x1121)))
(assert (x1511 x266))
(assert (= (x299 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x237 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (=> (and (or x843 (not x843)) (= (= 0 x296) x843)) x6) x1327))
(assert (= (and x1066 x560) x458))
(assert (x1511 x380))
(assert (= x1635 (and x878 x1306)))
(assert (= x1623 (=> (and (= (= 0 x1431) x1503) (or (and (not x1503) (and (= x1431 x276) (= x1116 x1300))) (and (and (= x276 x1431) (= (x1219 (x299 x743)) x33) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x169 x33)) (= (x17 (+ x169 x33)) x400) (= x1116 x1300) (= (ite (= x1431 0) x1519 0) x169) (= x1002 (x589 (x299 x266))) (= (- x1002 x169) x1645)) x1503))) x1111)))
(assert (= (x1427 (x299 x687)) x687))
(assert (= (x807 128) 0))
(assert (= x1185 (x299 (x1427 x1185))))
(assert (x1511 x1183))
(assert (=> (>= 10000 (x976 288)) (= (x237 (x976 288)) (x299 (x976 288)))))
(assert (x1511 x507))
(assert (= (x299 1680813743) (x237 1680813743)))
(assert (x348 (x1178 256)))
(assert (x495 x1245))
(assert (= (x1427 (x299 (x212 192))) (x212 192)))
(assert (= x222 (and x1236 (not x24))))
(assert (= (or x841 x498) x423))
(assert (= (or x1500 x98) x189))
(assert (x1511 x1391))
(assert (x1511 x1471))
(assert (= x1023 (=> (and (= (>= 224 x1458) x128) (= (x236 (- x588 128)) x1458)) (and x128 (=> (and (= (= x22 x1534) x134) (= (not x134) x183) (= (ite (<= x1458 32) (x1149 (x299 (x976 128)) 0) (ite (>= 64 x1458) (x1574 (x299 (x976 128)) (x299 (x976 160)) 0) (ite (>= 96 x1458) (x710 (x299 (x976 128)) (x299 (x976 160)) (x299 (x976 192)) 0) (ite (<= x1458 128) (x201 (x299 (x976 128)) (x299 (x976 160)) (x299 (x976 192)) (x299 (x976 224)) 0) (ite (<= x1458 160) (x510 (x299 (x976 128)) (x299 (x976 160)) (x299 (x976 192)) (x299 (x976 224)) (x299 (x976 256)) 0) (ite (<= x1458 192) (x835 (x299 (x976 128)) (x299 (x976 160)) (x299 (x976 192)) (x299 (x976 224)) (x299 (x976 256)) (x299 (x976 288)) 0) (ite (>= 224 x1458) (x1547 (x299 (x976 128)) (x299 (x976 160)) (x299 (x976 192)) (x299 (x976 224)) (x299 (x976 256)) (x299 (x976 288)) (x299 (x976 320)) 0) (x299 x1464)))))))) x1534)) x66)))))
(assert (x1511 x361))
(assert (= (and (not x208) x429) x1061))
(assert (x1511 x1582))
(assert (= (and x612 x600) x576))
(assert (= (and x1017 (not x59)) x1672))
(assert (= (or x1691 x990) x448))
(assert (= (x1427 (x299 (x976 160))) (x976 160)))
(assert (= (and x432 x1426) x1433))
(assert (x1511 x558))
(assert (x1511 x117))
(assert (x1511 x1093))
(assert (= (x976 192) (x1427 (x299 (x976 192)))))
(assert (x1020 x436))
(assert (x1020 x1288))
(assert (= x241 (or x1252 (and x943 x964))))
(assert (= (and x1415 x700) x249))
(assert (= (and x58 x1104) x223))
(assert (x1511 x368))
(assert (= (x1427 (x299 (x1178 128))) (x1178 128)))
(assert (= (x299 (x1427 x892)) x892))
(assert (x1511 x1454))
(assert (x1511 x1469))
(assert (= (=> (and (= x5 (= x595 0)) (or (and (and (= (x17 (+ x595 63)) x15) (= x1183 x188) (= x103 (x695 115792089237316195423570985008687907853269984665640564039457584007913129639904 x15)) (= x188 (x17 (+ x103 128)))) (not x5)) (and x5 (= 128 x1183)))) x799) x787))
(assert (= (x327 x289) 0))
(assert (= (x1427 (x237 2829837978)) 2829837978))
(assert (x1511 x914))
(assert (= (x938 160) (x1427 (x299 (x938 160)))))
(assert (x376 x408))
(assert (= 200511672 (x1427 (x237 200511672))))
(assert (= (x299 (x1427 x307)) x307))
(assert (= x1670 (=> (and (= x472 (not (< 32 x437))) (= x1419 (x1571 128))) (and (=> (= x1618 32) x784) x472))))
(assert (x376 x667))
(assert (= (x237 3018310333) (x299 3018310333)))
(assert (= x96 (and x1150 x1255)))
(assert (= (and (not x1121) x1381) x950))
(assert (x1511 x1505))
(assert (x1511 x391))
(assert (x1511 x552))
(assert (= x74 (or x1634 x52)))
(assert (= (x237 1039635593) (x299 1039635593)))
(assert (= x266 (x1427 (x299 x266))))
(assert (x1511 x1342))
(assert (= x401 (or x81 x374 x484)))
(assert (x1511 x1386))
(assert (=> (>= 10000 x266) (= (x237 x266) (x299 x266))))
(assert (= x311 (and x920 x1467)))
(assert (x1511 x1379))
(assert (x1511 x742))
(assert (x1511 x287))
(assert (x348 x776))
(assert (x348 (x969 192)))
(assert (x1511 x1266))
(assert (= (x1427 (x237 302407648)) 302407648))
(assert (x1511 x1215))
(assert (= x849 (and x1616 x972)))
(assert (=> (<= (x969 320) 10000) (= (x237 (x969 320)) (x299 (x969 320)))))
(assert (x1511 x504))
(assert (x896 x956))
(assert (x1511 x541))
(assert (= (x1427 (x237 3733007566)) 3733007566))
(assert (= (x299 3646176329) (x237 3646176329)))
(assert (x1511 x279))
(assert (x1020 x581))
(assert (x1511 x453))
(assert (= (x299 200511672) (x237 200511672)))
(assert (=> (>= 10000 x1237) (= (x299 x1237) (x237 x1237))))
(assert (x348 x266))
(assert (= (and x316 (not x496)) x239))
(assert (= x631 x781))
(assert (= (or x285 x80) x820))
(assert (x1511 x755))
(assert (x1511 x1123))
(assert (x348 (x969 320)))
(assert (x1511 x926))
(assert (= x834 (or x341 x733)))
(assert (x376 x1286))
(assert (x1511 x1265))
(assert (x1511 x1579))
(assert (x1511 x1143))
(assert (= x200 (=> (and (= x988 x353) (= x163 x1486) (= x1030 x1093)) x460)))
(assert (= 4294967296 (x1427 (x237 4294967296))))
(assert (= x320 (or (and x149 (not x1166)) x1191)))
(assert (= (x464 128) 0))
(assert (x71 x1595))
(assert (x1511 x1421))
(assert (x1511 x276))
(assert (x1511 x198))
(assert (x1725 x436))
(assert (= (and x1403 x1494) x601))
(assert (= (and (not x1429) x1552) x1312))
(assert (= (and (not x1165) x629) x823))
(assert (= x1381 (or x1382 x748)))
(assert (x1511 x753))
(assert (x71 x708))
(assert (x1511 x709))
(assert (= x49 true))
(assert (x1511 x355))
(assert (= (and x1281 (not x1247)) x766))
(assert (= (x1427 (x299 x1237)) x1237))
(assert (= x883 (and x1142 (not x1195))))
(assert (x1511 x1193))
(assert (x1511 x172))
(assert (x1511 x451))
(assert (= x1584 (or x1261 x1134)))
(assert (= x1294 (and x730 x77)))
(assert (= (and x1331 x476) x442))
(assert (= x413 (or x138 x222)))
(assert (= x162 (=> (and (= x1282 (x1182 x1488 1)) (= (not (< (x1427 x1282) (x1427 x331))) x808)) (and x808 x252))))
(assert (x1511 x262))
(assert (= (and x826 x1346) x204))
(assert (= (and (not x178) x254) x326))
(assert (= x1627 (and x1224 x414)))
(assert (x1511 x1320))
(assert (x1511 x1119))
(assert (x1511 x1249))
(assert (x1511 x581))
(assert (= (and x1092 x1188) x439))
(assert (x1511 x82))
(assert (x1511 x760))
(assert (x1511 x1563))
(assert (x1020 x886))
(assert (= (x237 656247078515407326148355443760548300161286948278503429861414951787075469312) (x299 656247078515407326148355443760548300161286948278503429861414951787075469312)))
(assert (x1511 x776))
(assert (x1511 x7))
(assert (x1511 x590))
(assert (x1042 x1270))
(assert (= x559 (and x1487 x1179)))
(assert (x495 x293))
(assert (= (and x94 x703) x859))
(assert (=> (<= (x1101 320) 10000) (= (x299 (x1101 320)) (x237 (x1101 320)))))
(assert (x1725 x1722))
(assert (x1511 x1223))
(assert (x1511 x1652))
(assert (= x979 (and (not x1415) x700)))
(assert (x1511 x187))
(assert (= (and x1173 (not x1700)) x330))
(assert (= (x299 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x237 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x1648 x544))
(assert (x1020 x956))
(assert (x1511 x12))
(assert (=> (<= (x1178 320) 10000) (= (x299 (x1178 320)) (x237 (x1178 320)))))
(assert (= (x1427 (x299 (x944 192))) (x944 192)))
(assert (x71 x1169))
(assert (x348 (x938 224)))
(assert (x1511 x868))
(assert (= (and x698 x1163) x424))
(assert (= (or x274 x1064) x618))
(assert (x1511 x16))
(assert (= (x1427 (x299 (x212 288))) (x212 288)))
(assert (x1511 x1343))
(assert (= (x1267 256) 0))
(assert (x1511 x1663))
(assert (= 0 (x1679 x1283)))
(assert (= (x807 320) 0))
(assert (x1511 x1350))
(assert (=> (>= 10000 (x67 320)) (= (x237 (x67 320)) (x299 (x67 320)))))
(assert (x1511 x690))
(assert (= (and (=> (and (and (= x267 (> 32 x1147)) (= x82 (x695 1 x293)) (= (div x293 2) x886) (= x1147 (ite (> x82 0) x886 (x695 127 x886))) (= x242 (= (ite x267 1 0) x82))) x1104) (and (=> (and (and (= (x1149 (x237 5) 0) x583) (= x232 (div x1654 32)) (= x331 (x1182 x583 x232)) (= x1654 (x17 (+ x1147 31))) (= x878 (< 0 x1293))) (not x242)) (and (=> (and (= (< 31 x1293) x1565) x878) (and (=> (and x1565 (and (= (> x410 132) x1322) (= (x17 (+ x1293 x1293)) x244) (= (x17 (+ 132 x1293)) x410) (= x800 (x17 (+ 1 x244))))) (and (=> x1322 x765) (=> (and (not x1322) (= x583 x1254)) x1348))) (=> (and (not x1565) (and (= (x17 (+ x1293 x1293)) x708) (= x583 x1488) (= x1083 (x17 (+ x465 x708))) (= x465 (x695 115792089237316195423570985008687907853269984665640564039457584007913129639680 x323)) (= (x795 132) x323) (= (x17 (+ x465 x708)) x1378) (= (x1057 x708 x465) x1034) (= x1351 (ite x1629 x1378 x1034)) (= (<= x708 255) x1629) (= (>= 255 x708) x345) (= x956 (ite x345 x1083 x1351)))) x1103))) (=> (and (not x878) (and (= x583 x1488) (= 0 x956))) x1103))) (=> x242 x203))) (=> (not x1104) x1410)) x827))
(assert (x1511 x518))
(assert (x1511 x1339))
(assert (x348 (x1101 128)))
(assert (=> (<= (x1101 128) 10000) (= (x237 (x1101 128)) (x299 (x1101 128)))))
(assert (= (=> (and (= x1449 (x1109 (x299 x743))) (= x1449 x479) (= x989 x1614)) x1153) x409))
(assert (= (and x1095 (not x542)) x468))
(assert (= (x299 78829575338057407266098799593532030895783219923606930547737006156155256307712) (x237 78829575338057407266098799593532030895783219923606930547737006156155256307712)))
(assert (= 0 (x1713 320)))
(assert (x1511 x1338))
(assert (x1511 x1248))
(assert (x1511 x427))
(assert (= (=> (and (or (and (and (= x982 (x17 (+ x1498 x1004))) (= x1377 x1228) (= (ite (= 0 x650) x1519 0) x1498) (= x325 x387) (< (+ x1004 x1498) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1409 (- x329 x1498)) (= x180 x650) (= (x318 (x299 x743)) x1004) (= x1386 x1139) (= x329 (x20 (x299 x743)))) x36) (and (not x36) (and (= x387 x325) (= x1139 x1386) (= x1377 x1228) (= x180 x650)))) (= x36 (= x650 0))) x1199) x718))
(assert (=> (<= x1222 10000) (= (x237 x1222) (x299 x1222))))
(assert (= (=> (and (= (x1182 x1279 1) x1311) (= (not (< 164 x909)) x1439)) (and x1439 (=> (= x580 x1311) x882))) x557))
(assert (x1511 x1501))
(assert (x1511 x1288))
(assert (= x109 (or x1099 x442)))
(assert (x1511 x743))
(assert (x1511 x515))
(assert (x1511 x1485))
(assert (= (=> (and (= x1003 (<= x303 224)) (= x303 (x236 (- x435 128))) (= x435 (x17 (+ x1293 128)))) (and x1003 (=> (and (= x907 (< x1242 32)) (= (ite (< 0 x1168) x1288 (x695 127 x1288)) x1242) (= x43 (ite (>= 32 x303) (x1149 (x299 (x212 128)) 0) (ite (>= 64 x303) (x1574 (x299 (x212 128)) (x299 (x212 160)) 0) (ite (<= x303 96) (x710 (x299 (x212 128)) (x299 (x212 160)) (x299 (x212 192)) 0) (ite (>= 128 x303) (x201 (x299 (x212 128)) (x299 (x212 160)) (x299 (x212 192)) (x299 (x212 224)) 0) (ite (>= 160 x303) (x510 (x299 (x212 128)) (x299 (x212 160)) (x299 (x212 192)) (x299 (x212 224)) (x299 (x212 256)) 0) (ite (>= 192 x303) (x835 (x299 (x212 128)) (x299 (x212 160)) (x299 (x212 192)) (x299 (x212 224)) (x299 (x212 256)) (x299 (x212 288)) 0) (ite (<= x303 224) (x1547 (x299 (x212 128)) (x299 (x212 160)) (x299 (x212 192)) (x299 (x212 224)) (x299 (x212 256)) (x299 (x212 288)) (x299 (x212 320)) 0) (x299 x538))))))))) (= x1160 (= (ite x907 1 0) x1168)) (= (div x293 2) x1288) (= (x695 1 x293) x1168)) (and (=> x1160 x203) (=> (and (not x1160) (and (= (x695 1 x293) x1290) (= x292 (= x1290 0)))) (and (=> (and x292 (and (= (x695 115792089237316195423570985008687907853269984665640564039457584007913129639680 x293) x528) (= x45 x93) (= x45 (x17 (+ 128 x1242))))) x1089) (=> (and (and (= x1068 (< 0 x1242)) (= (x1149 (x237 5) 0) x356)) (not x292)) (and (=> x1068 x1167) (=> (not x1068) x1231))))))))) x783))
(assert (x348 (x67 160)))
(assert (= (x641 388) 0))
(assert (x1511 x789))
(assert (=> (>= 10000 (x212 288)) (= (x299 (x212 288)) (x237 (x212 288)))))
(assert (x1511 x105))
(assert (=> (>= 10000 (x969 128)) (= (x299 (x969 128)) (x237 (x969 128)))))
(assert (= 0 (x807 192)))
(assert (= 2196353862 (x1427 (x237 2196353862))))
(assert (x1511 x1449))
(assert (= x547 (and (not x1362) x601)))
(assert (= (x237 106459005500898838667931598610041423549574964228674563513410788872267948359680) (x299 106459005500898838667931598610041423549574964228674563513410788872267948359680)))
(assert (x1511 x426))
(assert (= x662 (and (not x1194) x1453)))
(assert (x1511 x593))
(assert (= (=> (and (= (x1368 x1284) x1320) (= x23 (not (< 32 x1295)))) (and x228 x23)) x1323))
(assert (=> (>= 10000 x538) (= (x299 x538) (x237 x538))))
(assert (=> (>= 10000 (x212 224)) (= (x237 (x212 224)) (x299 (x212 224)))))
(assert (x1511 x539))
(assert (x348 x743))
(assert (= x796 (and x605 x1046)))
(assert (= (and x1479 (not x992)) x119))
(assert (= (=> (and (= (> x1418 x1536) x730) (or (and x730 (= x416 (x17 (+ x1536 260)))) (not x730))) x1641) x405))
(assert (= x295 (and x1031 (not x1315))))
(assert (= (x938 320) (x1427 (x299 (x938 320)))))
(assert (= 656247078515407326148355443760548300161286948278503429861414951787075469312 (x1427 (x237 656247078515407326148355443760548300161286948278503429861414951787075469312))))
(assert (= x1666 (=> (and (= x1229 x983) (= x1663 x319) (= x519 x1471)) x563)))
(assert (= x351 (=> (and (= (>= 224 x1052) x1258) (= (x236 (- x1379 128)) x1052) (= x1379 (x17 (+ 128 x970)))) (and x1258 (=> (and (= (ite (>= 32 x1052) (x1149 (x299 (x1178 128)) 0) (ite (<= x1052 64) (x1574 (x299 (x1178 128)) (x299 (x1178 160)) 0) (ite (>= 96 x1052) (x710 (x299 (x1178 128)) (x299 (x1178 160)) (x299 (x1178 192)) 0) (ite (<= x1052 128) (x201 (x299 (x1178 128)) (x299 (x1178 160)) (x299 (x1178 192)) (x299 (x1178 224)) 0) (ite (>= 160 x1052) (x510 (x299 (x1178 128)) (x299 (x1178 160)) (x299 (x1178 192)) (x299 (x1178 224)) (x299 (x1178 256)) 0) (ite (>= 192 x1052) (x835 (x299 (x1178 128)) (x299 (x1178 160)) (x299 (x1178 192)) (x299 (x1178 224)) (x299 (x1178 256)) (x299 (x1178 288)) 0) (ite (<= x1052 224) (x1547 (x299 (x1178 128)) (x299 (x1178 160)) (x299 (x1178 192)) (x299 (x1178 224)) (x299 (x1178 256)) (x299 (x1178 288)) (x299 (x1178 320)) 0) (x299 x951)))))))) x1676) (= (= x1709 (ite x852 1 0)) x761) (= (ite (> x1709 0) x672 (x695 127 x672)) x333) (= x672 (div x293 2)) (= (> 32 x333) x852) (= (x695 1 x293) x1709)) (and (=> (and (not x761) (and (= x676 (x695 1 x293)) (= (= x676 0) x469))) (and (=> (and x469 (and (= (x17 (+ x333 128)) x688) (= (x695 115792089237316195423570985008687907853269984665640564039457584007913129639680 x293) x910) (= x51 x688))) x258) (=> (and (not x469) (and (= (> x333 0) x178) (= x369 (x1149 (x237 5) 0)))) (and (=> (not x178) x360) (=> x178 x762))))) (=> (and (and (= x541 x135) (= x768 0)) x761) x1608)))))))
(assert (= (x1427 (x299 x951)) x951))
(assert (x1511 x382))
(assert (x1511 x931))
(assert (= x1544 (or x642 x1356 x1392)))
(assert (= (x1427 (x237 2826133662)) 2826133662))
(assert (= (and x1429 x1552) x1720))
(assert (= (x976 288) (x1427 (x299 (x976 288)))))
(assert (= (x299 2005628311) (x237 2005628311)))
(assert (x376 x1576))
(assert (x1511 x1274))
(assert (x348 (x1101 160)))
(assert (x1511 x1498))
(assert (x1511 x447))
(assert (x896 x1405))
(assert (= x1395 (=> (= (< (x1427 x307) (x1427 x375)) x343) (and (=> (not x343) x115) (=> x343 x1684)))))
(assert (= x441 (and x577 x566)))
(assert (= x866 (or x1687 x1423)))
(assert (= (=> (and (= x488 x1298) (= x30 x160) (= x456 x391)) x53) x1268))
(assert (= (and x120 x1640) x1082))
(assert (= (x1101 288) (x1427 (x299 (x1101 288)))))
(assert (x1511 x804))
(assert (= x500 (and x566 (not x577))))
(assert (= (=> (and (= x1143 x444) (= x961 x403) (= 1 x296)) x1327) x1304))
(assert (x1511 x528))
(assert (= (and (not x818) x1082) x177))
(assert (x1511 x50))
(assert (= x1092 (or x62 x912)))
(assert (= (x1713 192) 0))
(assert (x1020 x667))
(assert (x1511 x121))
(assert (= x8 (and x1472 x55)))
(assert (= x366 (or x940 x322)))
(assert (= (=> (and (and (= x636 (x1259 (x299 x743))) (= x1695 (x1476 (x299 x743))) (< 0 x1695) (= x1102 x1582) (> 839595567 x1338) (= x1459 0) (not (> 302407648 x1338)) (= 302407648 x1338) (< x1338 656196706) (= (not (= 0 x1102)) x492) (= x503 x636) (< x1338 2196353862)) (and (= x1072 x503) (= x483 (< x1072 x1037)) (= x1037 x701) (= x1497 (or x483 (not x492))))) x1497) x1244))
(assert (=> (>= 10000 (x1101 256)) (= (x299 (x1101 256)) (x237 (x1101 256)))))
(assert (x1511 x1716))
(assert (x1511 x333))
(assert (x348 (x67 320)))
(assert (x1511 x100))
(assert (x1511 x1371))
(assert (x348 (x944 256)))
(assert (x1511 x280))
(assert (= (or x334 x790) x480))
(assert (x1511 x548))
(assert (x1511 x1598))
(assert (= (and x96 x297) x748))
(assert (= (=> (and (= x728 (not (> x1242 32))) (= x1216 (x1368 x356))) (and x728 x1231)) x1167))
(assert (x1511 x687))
(assert (x1511 x981))
(assert (= x1271 (and x806 x224)))
(assert (x1511 x466))
(assert (x1020 x1722))
(assert (x348 x118))
(assert (x1511 x1096))
(assert (x1511 x51))
(assert (= x845 (and (=> x1398 x1686) (=> (and (not x1398) (and (= x508 (x17 (+ 1 x1302))) (= x1696 (> x508 x729)) (= (div x541 2) x1302))) (and (=> (and (and (>= x530 0) (= (not (= x427 x530)) x1324) (<= x530 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1696)) (and (=> (not x1324) x1437) (=> (and x1324 (= x1 x1324)) x609))) (=> x1696 x1686))))))
(assert (x1511 x1541))
(assert (x1511 x965))
(assert (= 0 (x1679 x788)))
(assert (x348 x1704))
(assert (= (x1427 (x299 (x1101 192))) (x1101 192)))
(assert (= (=> (and (or (not x908) x908) (= x908 (= x1215 0))) x286) x1647))
(assert (= x538 (x1427 (x299 x538))))
(assert (x1511 x465))
(assert (x71 x614))
(check-sat)
(exit)