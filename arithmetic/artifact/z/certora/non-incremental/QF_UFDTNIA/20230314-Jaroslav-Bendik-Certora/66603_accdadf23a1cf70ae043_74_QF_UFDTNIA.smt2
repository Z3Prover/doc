(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x10 0)) (((x3187 (x4648 Int)) (x1742 (x4187 x10) (x3399 Int)) (x1013 (x3224 x10) (x1010 x10) (x3099 Int)))))
(declare-fun x3886 () Int)
(declare-fun x2403 () Int)
(declare-fun x2844 () Int)
(declare-fun x911 () Int)
(declare-fun x3907 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x3084 () Bool)
(declare-fun x3321 () Bool)
(declare-fun x2980 () Bool)
(declare-fun x954 () Bool)
(declare-fun x964 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x3567 () Int)
(declare-fun x1575 () Int)
(declare-fun x1962 () x10)
(declare-fun x2301 () Int)
(declare-fun x3531 () Bool)
(declare-fun x960 () Int)
(declare-fun x34 () Bool)
(declare-fun x2847 () Int)
(declare-fun x2157 () Bool)
(declare-fun x2139 () Int)
(declare-fun x4062 () Bool)
(declare-fun x4601 () x10)
(declare-fun x2215 () Int)
(declare-fun x2668 () Int)
(declare-fun x4006 () Bool)
(declare-fun x3136 () Int)
(declare-fun x566 () Bool)
(declare-fun x3158 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x3798 () Int)
(declare-fun x1637 () Bool)
(declare-fun x4836 () Int)
(declare-fun x1608 () Int)
(declare-fun x2866 () Int)
(declare-fun x3523 () Bool)
(declare-fun x1811 () x10)
(declare-fun x1335 () Int)
(declare-fun x3456 () Int)
(declare-fun x93 () Int)
(declare-fun x3558 () Bool)
(declare-fun x721 () Int)
(declare-fun x1400 () Bool)
(declare-fun x4806 () Bool)
(declare-fun x4695 () Bool)
(declare-fun x4641 () Bool)
(declare-fun x2615 () Bool)
(declare-fun x1896 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x2255 () Bool)
(declare-fun x4537 () Bool)
(declare-fun x853 () Bool)
(declare-fun x404 () Int)
(declare-fun x3285 () Int)
(declare-fun x801 () Int)
(declare-fun x526 () Int)
(declare-fun x1638 () Int)
(declare-fun x2323 () Int)
(declare-fun x184 () Int)
(declare-fun x2510 () Bool)
(declare-fun x1425 () Int)
(declare-fun x2201 () Bool)
(declare-fun x1485 () Int)
(declare-fun x1771 (x10) Int)
(declare-fun x3401 () Int)
(declare-fun x1813 () Int)
(declare-fun x1399 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x30 () Int)
(declare-fun x583 () Bool)
(declare-fun x4439 () Int)
(declare-fun x3716 () Bool)
(declare-fun x521 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x2036 () Bool)
(declare-fun x3852 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x3870 () Int)
(declare-fun x2352 () x10)
(declare-fun x1128 () Int)
(declare-fun x1415 () Int)
(declare-fun x3975 () Int)
(declare-fun x3191 () Bool)
(declare-fun x3888 () Int)
(declare-fun x3579 () Bool)
(declare-fun x485 () Int)
(declare-fun x1480 () Bool)
(declare-fun x4696 () Bool)
(declare-fun x3382 () Int)
(declare-fun x2883 () Int)
(declare-fun x1993 () Bool)
(declare-fun x1799 () Bool)
(declare-fun x3172 () Int)
(declare-fun x3858 () Int)
(declare-fun x364 () Int)
(declare-fun x2459 () Int)
(declare-fun x1928 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x1328 () Int)
(declare-fun x1629 () x10)
(declare-fun x417 () Int)
(declare-fun x4297 () Bool)
(declare-fun x579 () Bool)
(declare-fun x3803 () Int)
(declare-fun x4683 () Int)
(declare-fun x47 () Bool)
(declare-fun x1685 () x10)
(declare-fun x902 () Bool)
(declare-fun x2277 () Bool)
(declare-fun x3080 () Int)
(declare-fun x2321 () Int)
(declare-fun x4858 () Bool)
(declare-fun x3156 () Int)
(declare-fun x3028 () Int)
(declare-fun x458 () Int)
(declare-fun x547 () Bool)
(declare-fun x8 () Bool)
(declare-fun x1462 () Int)
(declare-fun x3739 () x10)
(declare-fun x779 () Bool)
(declare-fun x4447 () Int)
(declare-fun x2959 () Int)
(declare-fun x603 () Bool)
(declare-fun x394 () Bool)
(declare-fun x1977 () Bool)
(declare-fun x2922 () x10)
(declare-fun x1191 () Int)
(declare-fun x4196 () Bool)
(declare-fun x4777 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1796 () Int)
(declare-fun x2081 (x10) Int)
(declare-fun x3846 () Bool)
(declare-fun x4175 () Int)
(declare-fun x2308 () Bool)
(declare-fun x4473 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x2961 () Int)
(declare-fun x1826 () Bool)
(declare-fun x1499 () Int)
(declare-fun x546 () Int)
(declare-fun x1707 () Int)
(declare-fun x1 () Bool)
(declare-fun x4815 () Bool)
(declare-fun x2577 () Int)
(declare-fun x2719 () Bool)
(declare-fun x23 () Bool)
(declare-fun x4204 () Bool)
(declare-fun x930 () Int)
(declare-fun x4717 () Bool)
(declare-fun x4211 () Bool)
(declare-fun x4303 () x10)
(declare-fun x4193 () Bool)
(declare-fun x3808 () Int)
(declare-fun x210 () Bool)
(declare-fun x4613 () Int)
(declare-fun x1346 () Int)
(declare-fun x1664 () Bool)
(declare-fun x3308 () Int)
(declare-fun x115 () Int)
(declare-fun x3749 () Bool)
(declare-fun x460 () Bool)
(declare-fun x4433 () Int)
(declare-fun x1046 () Int)
(declare-fun x1258 () Bool)
(declare-fun x180 () x10)
(declare-fun x3358 () Int)
(declare-fun x2306 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1251 () Int)
(declare-fun x2937 () x10)
(declare-fun x4305 () Bool)
(declare-fun x4242 (Int) Int)
(declare-fun x196 () Int)
(declare-fun x182 () Int)
(declare-fun x107 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1331 () Bool)
(declare-fun x752 () Bool)
(declare-fun x2500 () Int)
(declare-fun x3729 () x10)
(declare-fun x4700 () Int)
(declare-fun x2118 () Bool)
(declare-fun x3161 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x655 () Int)
(declare-fun x4205 () Bool)
(declare-fun x2681 () Int)
(declare-fun x3784 () Bool)
(declare-fun x4240 () Bool)
(declare-fun x4056 () Bool)
(declare-fun x594 () Int)
(declare-fun x117 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x4002 () Bool)
(declare-fun x65 () Bool)
(declare-fun x401 () Bool)
(declare-fun x4220 () Int)
(declare-fun x2767 () Bool)
(declare-fun x3654 () x10)
(declare-fun x2370 () Int)
(declare-fun x4144 () Int)
(declare-fun x2378 () x10)
(declare-fun x4882 () Bool)
(declare-fun x3877 () Bool)
(declare-fun x2672 () Int)
(declare-fun x2600 () Int)
(declare-fun x4050 () Bool)
(declare-fun x2367 () x10)
(declare-fun x952 () Bool)
(declare-fun x1689 () Int)
(declare-fun x2235 () Bool)
(declare-fun x946 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x3039 () Bool)
(declare-fun x335 () Int)
(declare-fun x3931 () x10)
(declare-fun x2839 () Int)
(declare-fun x1199 () Int)
(declare-fun x1235 () Int)
(declare-fun x2357 (Int) Int)
(declare-fun x2039 () Bool)
(declare-fun x3689 () Bool)
(declare-fun x3298 () Int)
(declare-fun x2057 () Bool)
(declare-fun x3851 () Int)
(declare-fun x3566 () Int)
(declare-fun x3448 () Bool)
(declare-fun x2353 () Bool)
(declare-fun x4786 () Int)
(declare-fun x780 () Int)
(declare-fun x3288 () Bool)
(declare-fun x119 () x10)
(declare-fun x253 () Bool)
(declare-fun x4381 () Bool)
(declare-fun x2281 () Int)
(declare-fun x3993 () Int)
(declare-fun x3559 () Bool)
(declare-fun x4718 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x4572 () Int)
(declare-fun x1450 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x3521 () x10)
(declare-fun x3885 () Bool)
(declare-fun x3608 () Int)
(declare-fun x4668 () Int)
(declare-fun x857 () Bool)
(declare-fun x192 () Int)
(declare-fun x1882 () Bool)
(declare-fun x4005 () Int)
(declare-fun x1911 (Int) Int)
(declare-fun x4744 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x4925 () Int)
(declare-fun x431 () Bool)
(declare-fun x4512 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x274 () Int)
(declare-fun x370 () x10)
(declare-fun x2709 () Bool)
(declare-fun x4530 () Bool)
(declare-fun x3906 () Int)
(declare-fun x2957 () Bool)
(declare-fun x2113 () Int)
(declare-fun x1840 () Int)
(declare-fun x601 () Int)
(declare-fun x967 () Bool)
(declare-fun x4576 () Int)
(declare-fun x4692 () Int)
(declare-fun x4761 () Int)
(declare-fun x2773 () Int)
(declare-fun x2298 () Bool)
(declare-fun x4299 () Bool)
(declare-fun x3151 () Bool)
(declare-fun x2196 () x10)
(declare-fun x3462 () Int)
(declare-fun x3758 () Int)
(declare-fun x50 () Bool)
(declare-fun x2977 () Int)
(declare-fun x795 () Bool)
(declare-fun x120 () Bool)
(declare-fun x17 () Int)
(declare-fun x3637 () Bool)
(declare-fun x3874 () Bool)
(declare-fun x726 () Int)
(declare-fun x3144 () Int)
(declare-fun x4866 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x3977 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x2706 () Bool)
(declare-fun x3790 () Bool)
(declare-fun x3199 () Int)
(declare-fun x1540 () Bool)
(declare-fun x1972 (x10) Int)
(declare-fun x3259 () Bool)
(declare-fun x4640 () Int)
(declare-fun x2931 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x248 () Int)
(declare-fun x3242 () Bool)
(declare-fun x1612 () x10)
(declare-fun x3183 () Bool)
(declare-fun x4156 () Bool)
(declare-fun x700 () Int)
(declare-fun x4234 () Bool)
(declare-fun x151 () Int)
(declare-fun x207 () x10)
(declare-fun x487 () Bool)
(declare-fun x3461 () x10)
(declare-fun x840 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x4425 () Int)
(declare-fun x1376 () Int)
(declare-fun x2552 () Bool)
(declare-fun x2 () Int)
(declare-fun x4146 () Bool)
(declare-fun x2833 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x4746 () Bool)
(declare-fun x719 () Bool)
(declare-fun x123 () Int)
(declare-fun x2132 () x10)
(declare-fun x1339 () Int)
(declare-fun x2593 () Int)
(declare-fun x2986 () Int)
(declare-fun x447 () Int)
(declare-fun x4430 () Int)
(declare-fun x2226 () Int)
(declare-fun x4317 () Bool)
(declare-fun x4015 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x2254 () Int)
(declare-fun x3985 () Bool)
(declare-fun x4351 () x10)
(declare-fun x2548 () Bool)
(declare-fun x13 () Int)
(declare-fun x2221 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x2125 () x10)
(declare-fun x2405 () Bool)
(declare-fun x1374 () Int)
(declare-fun x1457 () Int)
(declare-fun x4578 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x1386 () Int)
(declare-fun x1808 () Bool)
(declare-fun x2314 () Int)
(declare-fun x3332 () Bool)
(declare-fun x4636 () Int)
(declare-fun x4805 () Int)
(declare-fun x3532 () x10)
(declare-fun x2466 () Int)
(declare-fun x3698 () Bool)
(declare-fun x4499 () Int)
(declare-fun x1665 () Bool)
(declare-fun x191 () Bool)
(declare-fun x3150 () Bool)
(declare-fun x4553 () Int)
(declare-fun x4119 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x2906 () Int)
(declare-fun x1354 () Bool)
(declare-fun x4072 () Bool)
(declare-fun x4713 () Bool)
(declare-fun x2414 () x10)
(declare-fun x1439 () Bool)
(declare-fun x256 () Int)
(declare-fun x3714 () Bool)
(declare-fun x2721 () Int)
(declare-fun x3935 () Int)
(declare-fun x1024 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x955 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x1646 () Int)
(declare-fun x4210 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x4231 () Int)
(declare-fun x3375 () Int)
(declare-fun x3665 () Int)
(declare-fun x2489 () Bool)
(declare-fun x3915 () Int)
(declare-fun x3782 () Bool)
(declare-fun x345 () Int)
(declare-fun x1133 () Bool)
(declare-fun x3327 () Bool)
(declare-fun x3574 () Bool)
(declare-fun x4402 () Bool)
(declare-fun x4556 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x912 () Bool)
(declare-fun x4838 () Int)
(declare-fun x3410 () Int)
(declare-fun x744 () Int)
(declare-fun x4611 () Int)
(declare-fun x1009 () Bool)
(declare-fun x2202 () Int)
(declare-fun x7 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x2695 () Int)
(declare-fun x1236 () Bool)
(declare-fun x409 () x10)
(declare-fun x533 () Int)
(declare-fun x4331 () Int)
(declare-fun x1772 () Int)
(declare-fun x3642 () Int)
(declare-fun x1254 () Bool)
(declare-fun x2798 () Int)
(declare-fun x4834 () Bool)
(declare-fun x3514 () Int)
(declare-fun x1367 () Int)
(declare-fun x3263 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x728 () Int)
(declare-fun x3960 () Int)
(declare-fun x4518 () Bool)
(declare-fun x4502 () Bool)
(declare-fun x2386 () Int)
(declare-fun x3139 () Int)
(declare-fun x2595 () x10)
(declare-fun x3687 () Int)
(declare-fun x2579 () Int)
(declare-fun x2818 () Int)
(declare-fun x1403 () Bool)
(declare-fun x2317 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x3417 () x10)
(declare-fun x1347 () x10)
(declare-fun x108 () Bool)
(declare-fun x3764 () x10)
(declare-fun x3676 () Bool)
(declare-fun x4486 () Bool)
(declare-fun x2865 () Int)
(declare-fun x2846 () Bool)
(declare-fun x3048 () Int)
(declare-fun x4410 () Bool)
(declare-fun x2481 () Int)
(declare-fun x1230 () Int)
(declare-fun x4190 () Bool)
(declare-fun x4890 () Bool)
(declare-fun x3974 () Int)
(declare-fun x4860 () Int)
(declare-fun x1988 () Int)
(declare-fun x2713 () Int)
(declare-fun x3697 () Bool)
(declare-fun x824 () Bool)
(declare-fun x2350 () Int)
(declare-fun x988 () Int)
(declare-fun x4728 () Int)
(declare-fun x313 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x2390 () Int)
(declare-fun x1248 () x10)
(declare-fun x2300 () x10)
(declare-fun x1698 () Int)
(declare-fun x802 () Bool)
(declare-fun x2848 () Int)
(declare-fun x4471 () Bool)
(declare-fun x3990 () Bool)
(declare-fun x4674 () Bool)
(declare-fun x49 () Bool)
(declare-fun x3342 () Int)
(declare-fun x2834 () Int)
(declare-fun x4463 () Int)
(declare-fun x4555 () Int)
(declare-fun x493 () Int)
(declare-fun x3681 () x10)
(declare-fun x1226 () x10)
(declare-fun x4186 () Int)
(declare-fun x3452 () Bool)
(declare-fun x356 () Int)
(declare-fun x139 () Bool)
(declare-fun x4053 () Int)
(declare-fun x3246 () Int)
(declare-fun x3705 () Int)
(declare-fun x3138 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x445 () Bool)
(declare-fun x807 () Int)
(declare-fun x2671 () Int)
(declare-fun x3166 () Bool)
(declare-fun x2456 () x10)
(declare-fun x2234 () Bool)
(declare-fun x1285 () Int)
(declare-fun x1674 () Bool)
(declare-fun x694 () Int)
(declare-fun x2231 () Bool)
(declare-fun x4350 () Bool)
(declare-fun x4828 () Bool)
(declare-fun x2955 () x10)
(declare-fun x2347 () Int)
(declare-fun x4592 () Int)
(declare-fun x3934 () Bool)
(declare-fun x2566 () Bool)
(declare-fun x3661 () Bool)
(declare-fun x3295 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x4664 () Bool)
(declare-fun x2771 () Bool)
(declare-fun x3862 () Bool)
(declare-fun x4822 () x10)
(declare-fun x4034 () Bool)
(declare-fun x4064 () Int)
(declare-fun x1342 () Bool)
(declare-fun x3363 () x10)
(declare-fun x2137 () Int)
(declare-fun x2278 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1048 () Int)
(declare-fun x2366 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x290 () Bool)
(declare-fun x449 () Bool)
(declare-fun x3986 () Int)
(declare-fun x793 () Int)
(declare-fun x1875 () Bool)
(declare-fun x3026 () Bool)
(declare-fun x836 () Int)
(declare-fun x2191 () Bool)
(declare-fun x334 () Int)
(declare-fun x1931 () Bool)
(declare-fun x2471 () Int)
(declare-fun x2419 () Int)
(declare-fun x873 (x10) Int)
(declare-fun x1864 () Bool)
(declare-fun x4021 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1421 (x10) Int)
(declare-fun x4661 () Int)
(declare-fun x291 () Int)
(declare-fun x4568 () Bool)
(declare-fun x346 () Int)
(declare-fun x2478 () x10)
(declare-fun x2821 () x10)
(declare-fun x2873 () Int)
(declare-fun x1879 () Bool)
(declare-fun x3218 () Bool)
(declare-fun x950 () Int)
(declare-fun x366 () Int)
(declare-fun x3438 () Int)
(declare-fun x850 () Bool)
(declare-fun x2256 () Bool)
(declare-fun x4807 () x10)
(declare-fun x1886 () x10)
(declare-fun x4223 () Int)
(declare-fun x1481 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x2878 () Int)
(declare-fun x3822 () Int)
(declare-fun x3707 () Bool)
(declare-fun x3628 () x10)
(declare-fun x1183 () Bool)
(declare-fun x3297 () Int)
(declare-fun x4150 () Int)
(declare-fun x2651 () Int)
(declare-fun x3236 () x10)
(declare-fun x3813 () Int)
(declare-fun x2685 () Int)
(declare-fun x3677 () Int)
(declare-fun x1432 () Int)
(declare-fun x2017 () Bool)
(declare-fun x304 () Int)
(declare-fun x4408 () Bool)
(declare-fun x3107 () Bool)
(declare-fun x2582 () Bool)
(declare-fun x2666 () Int)
(declare-fun x1555 () x10)
(declare-fun x4361 () x10)
(declare-fun x3561 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x971 () Int)
(declare-fun x4197 () Bool)
(declare-fun x525 () Int)
(declare-fun x2159 () x10)
(declare-fun x4047 () Bool)
(declare-fun x1798 () Int)
(declare-fun x2822 () Bool)
(declare-fun x1785 () Int)
(declare-fun x4904 () Int)
(declare-fun x416 () Int)
(declare-fun x4872 () Int)
(declare-fun x3947 () Int)
(declare-fun x2440 () Bool)
(declare-fun x4160 () Int)
(declare-fun x285 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x4703 () Bool)
(declare-fun x2145 () Int)
(declare-fun x2825 () Int)
(declare-fun x3719 () x10)
(declare-fun x3167 () x10)
(declare-fun x1181 () Bool)
(declare-fun x1753 () Int)
(declare-fun x1900 () Int)
(declare-fun x2063 () Bool)
(declare-fun x3500 () Int)
(declare-fun x2425 () Bool)
(declare-fun x1304 () Int)
(declare-fun x21 () x10)
(declare-fun x1138 (Int) Int)
(declare-fun x4894 (Int) Int)
(declare-fun x1385 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x3622 () x10)
(declare-fun x2107 () Int)
(declare-fun x4558 () Int)
(declare-fun x2509 () x10)
(declare-fun x57 () Bool)
(declare-fun x798 () Int)
(declare-fun x173 () x10)
(declare-fun x3768 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x3284 () Int)
(declare-fun x786 () Bool)
(declare-fun x3226 () Int)
(declare-fun x4270 () Bool)
(declare-fun x2270 () Int)
(declare-fun x4095 () Bool)
(declare-fun x991 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x2968 () Bool)
(declare-fun x388 () Int)
(declare-fun x647 () Bool)
(declare-fun x2240 () Int)
(declare-fun x3032 () Int)
(declare-fun x423 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x491 () Int)
(declare-fun x3814 () Bool)
(declare-fun x4392 () Int)
(declare-fun x384 () Bool)
(declare-fun x640 () x10)
(declare-fun x3927 () Bool)
(declare-fun x3380 () Int)
(declare-fun x3472 () Int)
(declare-fun x3092 () x10)
(declare-fun x3721 () x10)
(declare-fun x2935 () x10)
(declare-fun x2650 () Int)
(declare-fun x2852 () Int)
(declare-fun x2295 () Bool)
(declare-fun x1894 () Int)
(declare-fun x2958 () Bool)
(declare-fun x1899 () Int)
(declare-fun x397 () Bool)
(declare-fun x2700 () Bool)
(declare-fun x2232 () Int)
(declare-fun x1207 () Bool)
(declare-fun x365 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x524 () Bool)
(declare-fun x3201 () Bool)
(declare-fun x1239 () Int)
(declare-fun x3506 () Bool)
(declare-fun x2985 () Int)
(declare-fun x3419 () Int)
(declare-fun x2244 () Int)
(declare-fun x790 () Bool)
(declare-fun x4254 () Int)
(declare-fun x637 () Int)
(declare-fun x1776 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x3395 () Bool)
(declare-fun x3351 () Int)
(declare-fun x563 () Int)
(declare-fun x4534 () Int)
(declare-fun x584 () Bool)
(declare-fun x4908 () Bool)
(declare-fun x580 () Bool)
(declare-fun x4900 () Bool)
(declare-fun x4884 () Int)
(declare-fun x1566 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x2271 (x10) Int)
(declare-fun x3299 () Int)
(declare-fun x319 () Bool)
(declare-fun x4666 () Int)
(declare-fun x4271 () Int)
(declare-fun x4051 () Bool)
(declare-fun x2523 () Bool)
(declare-fun x421 () Int)
(declare-fun x239 () Bool)
(declare-fun x3630 () Int)
(declare-fun x1211 () Int)
(declare-fun x2327 () x10)
(declare-fun x1820 () Int)
(declare-fun x1453 () Bool)
(declare-fun x4334 () Bool)
(declare-fun x4702 () Int)
(declare-fun x149 () Int)
(declare-fun x3891 () Bool)
(declare-fun x300 () Int)
(declare-fun x3503 () Int)
(declare-fun x3602 () Int)
(declare-fun x3704 () Bool)
(declare-fun x1396 () x10)
(declare-fun x461 () Int)
(declare-fun x3607 () Int)
(declare-fun x905 (Int) Int)
(declare-fun x1204 () Int)
(declare-fun x2432 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x2165 () Int)
(declare-fun x2541 () Bool)
(declare-fun x390 () Bool)
(declare-fun x3485 () Bool)
(declare-fun x1758 () Int)
(declare-fun x4503 () Bool)
(declare-fun x4716 () Int)
(declare-fun x1978 () x10)
(declare-fun x650 () Bool)
(declare-fun x765 () Int)
(declare-fun x2411 () Int)
(declare-fun x2296 () Int)
(declare-fun x4787 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x675 () Bool)
(declare-fun x4435 (x10) Int)
(declare-fun x4892 () Bool)
(declare-fun x1622 () Int)
(declare-fun x4651 () Bool)
(declare-fun x1577 () Int)
(declare-fun x3059 () Int)
(declare-fun x1321 () Int)
(declare-fun x3481 () Int)
(declare-fun x622 () x10)
(declare-fun x2896 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x2387 () x10)
(declare-fun x969 () Bool)
(declare-fun x1721 () Int)
(declare-fun x4840 () Int)
(declare-fun x592 () Bool)
(declare-fun x3981 () Int)
(declare-fun x1242 () x10)
(declare-fun x2199 () Int)
(declare-fun x3807 () Bool)
(declare-fun x4028 () Int)
(declare-fun x2545 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x1623 () Int)
(declare-fun x876 () Bool)
(declare-fun x4358 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1730 () Int)
(declare-fun x3576 () Bool)
(declare-fun x3420 () Bool)
(declare-fun x3690 () Int)
(declare-fun x831 () Bool)
(declare-fun x395 () Int)
(declare-fun x2653 () Int)
(declare-fun x469 () x10)
(declare-fun x259 () Int)
(declare-fun x3679 () Bool)
(declare-fun x4478 () Int)
(declare-fun x1601 () Bool)
(declare-fun x4102 () Int)
(declare-fun x3203 (x10) Int)
(declare-fun x4039 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x1563 () x10)
(declare-fun x209 () x10)
(declare-fun x3856 () Bool)
(declare-fun x4623 () Int)
(declare-fun x4326 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x2616 () Bool)
(declare-fun x4607 () Int)
(declare-fun x4243 () Bool)
(declare-fun x3780 () Bool)
(declare-fun x2687 () Int)
(declare-fun x1208 () x10)
(declare-fun x2267 () Int)
(declare-fun x2337 () Bool)
(declare-fun x1005 () Int)
(declare-fun x4465 () Int)
(declare-fun x4424 () Int)
(declare-fun x4394 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x4195 () Int)
(declare-fun x1750 () Int)
(declare-fun x3449 () Bool)
(declare-fun x1209 () Int)
(declare-fun x4878 () x10)
(declare-fun x4830 () Int)
(declare-fun x1938 () Bool)
(declare-fun x3971 () x10)
(declare-fun x4134 () Bool)
(declare-fun x4122 () Bool)
(declare-fun x228 () Bool)
(declare-fun x4217 () Bool)
(declare-fun x2655 () Bool)
(declare-fun x3406 () Int)
(declare-fun x3385 () Bool)
(declare-fun x1874 () Int)
(declare-fun x2426 () Bool)
(declare-fun x4373 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x2454 () x10)
(declare-fun x1590 () Bool)
(declare-fun x889 () Int)
(declare-fun x3445 () Int)
(declare-fun x2247 () Int)
(declare-fun x4586 () Bool)
(declare-fun x3460 () Int)
(declare-fun x2506 () x10)
(declare-fun x15 () x10)
(declare-fun x2553 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x2316 () Int)
(declare-fun x3570 () Bool)
(declare-fun x3311 () Bool)
(declare-fun x165 () Int)
(declare-fun x3674 () Int)
(declare-fun x1559 () Bool)
(declare-fun x154 () Bool)
(declare-fun x3834 () x10)
(declare-fun x2335 (Int) Int)
(declare-fun x247 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x498 () Int)
(declare-fun x3234 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x4228 () x10)
(declare-fun x3403 () Int)
(declare-fun x1190 () Int)
(declare-fun x1605 () Bool)
(declare-fun x560 () Int)
(declare-fun x520 () Bool)
(declare-fun x3171 () Int)
(declare-fun x221 () Int)
(declare-fun x820 () Bool)
(declare-fun x3467 () Bool)
(declare-fun x2917 () Bool)
(declare-fun x3192 () Int)
(declare-fun x1246 () Int)
(declare-fun x3702 () Bool)
(declare-fun x146 () Int)
(declare-fun x3216 () Int)
(declare-fun x3475 () Bool)
(declare-fun x3323 () Int)
(declare-fun x140 () Int)
(declare-fun x3762 () Bool)
(declare-fun x1363 () Int)
(declare-fun x2472 () Bool)
(declare-fun x649 () Bool)
(declare-fun x1398 () Int)
(declare-fun x1124 () Int)
(declare-fun x3041 () Bool)
(declare-fun x1673 () Int)
(declare-fun x3426 () Bool)
(declare-fun x887 () Bool)
(declare-fun x4799 () Int)
(declare-fun x4061 () Int)
(declare-fun x1089 () x10)
(declare-fun x3337 () Bool)
(declare-fun x842 () x10)
(declare-fun x4699 () Int)
(declare-fun x1454 () Bool)
(declare-fun x1255 () Int)
(declare-fun x279 () Int)
(declare-fun x2726 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x4749 () Bool)
(declare-fun x2783 () Bool)
(declare-fun x691 () Bool)
(declare-fun x3174 () Bool)
(declare-fun x46 () Int)
(declare-fun x1161 () Int)
(declare-fun x1295 () Int)
(declare-fun x3348 () Bool)
(declare-fun x3152 () Int)
(declare-fun x2728 () Bool)
(declare-fun x830 () Bool)
(declare-fun x2493 () Bool)
(declare-fun x4343 () Int)
(declare-fun x949 () Bool)
(declare-fun x241 () Bool)
(declare-fun x2812 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x4722 () Int)
(declare-fun x1947 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x662 () x10)
(declare-fun x1444 () Int)
(declare-fun x2640 () Int)
(declare-fun x861 () Bool)
(declare-fun x1093 () Int)
(declare-fun x2856 () Int)
(declare-fun x299 () Bool)
(declare-fun x4384 () Bool)
(declare-fun x633 () Int)
(declare-fun x2059 () Bool)
(declare-fun x2106 () Bool)
(declare-fun x2144 () x10)
(declare-fun x4747 () Int)
(declare-fun x1106 () Int)
(declare-fun x3738 () Bool)
(declare-fun x3065 () x10)
(declare-fun x1766 () Int)
(declare-fun x4415 () x10)
(declare-fun x2162 () Int)
(declare-fun x2163 () Int)
(declare-fun x4292 () Bool)
(declare-fun x3253 () Int)
(declare-fun x125 () Bool)
(declare-fun x2416 () Int)
(declare-fun x1759 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x913 () Int)
(declare-fun x1498 () Bool)
(declare-fun x4564 () x10)
(declare-fun x1636 () Bool)
(declare-fun x2223 () x10)
(declare-fun x2606 () Int)
(declare-fun x3773 () Int)
(declare-fun x2503 () Bool)
(declare-fun x3020 () Bool)
(declare-fun x1917 () Int)
(declare-fun x3258 () Int)
(declare-fun x102 () x10)
(declare-fun x1797 () Bool)
(declare-fun x3547 () Int)
(declare-fun x773 () x10)
(declare-fun x2837 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1193 () Int)
(declare-fun x4515 () Bool)
(declare-fun x1141 () Int)
(declare-fun x1126 () Int)
(declare-fun x348 () Int)
(declare-fun x3347 () Bool)
(declare-fun x4369 () Int)
(declare-fun x2257 () Bool)
(declare-fun x3197 () Int)
(declare-fun x4567 () Int)
(declare-fun x352 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x101 () Bool)
(declare-fun x1849 () x10)
(declare-fun x4771 () Int)
(declare-fun x4673 () Int)
(declare-fun x4236 () Int)
(declare-fun x138 () Int)
(declare-fun x193 (x10) Int)
(declare-fun x486 (Int) Int)
(declare-fun x369 () Bool)
(declare-fun x468 (Int Int) Int)
(declare-fun x2988 () Bool)
(declare-fun x1463 () Int)
(declare-fun x3765 () Int)
(declare-fun x2330 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x680 () Bool)
(declare-fun x463 () Int)
(declare-fun x111 () Int)
(declare-fun x4391 () Int)
(declare-fun x251 () Bool)
(declare-fun x4475 () Bool)
(declare-fun x2679 () x10)
(declare-fun x4082 () Int)
(declare-fun x3458 () Int)
(declare-fun x3194 (x10) Int)
(declare-fun x1071 () Bool)
(declare-fun x859 () x10)
(declare-fun x81 () Bool)
(declare-fun x2925 () x10)
(declare-fun x1987 () Bool)
(declare-fun x892 () Bool)
(declare-fun x4826 () Int)
(declare-fun x1293 () Bool)
(declare-fun x4275 () Bool)
(declare-fun x713 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x1961 () Bool)
(declare-fun x2053 () Int)
(declare-fun x4905 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x1501 () Int)
(declare-fun x3767 () Bool)
(declare-fun x1729 () Int)
(declare-fun x2747 () x10)
(declare-fun x2535 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x3482 () Int)
(declare-fun x2282 () x10)
(declare-fun x1855 () Int)
(declare-fun x4775 () Bool)
(declare-fun x1755 () Int)
(declare-fun x4256 () Bool)
(declare-fun x2423 () Bool)
(declare-fun x3868 () Bool)
(declare-fun x3100 () Bool)
(declare-fun x51 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1932 () x10)
(declare-fun x4468 () Bool)
(declare-fun x2434 () Bool)
(declare-fun x1541 (Int) Int)
(declare-fun x4868 () Int)
(declare-fun x2971 () Int)
(declare-fun x2782 () Bool)
(declare-fun x3391 () Int)
(declare-fun x826 () Bool)
(declare-fun x4252 () Bool)
(declare-fun x2438 () Bool)
(declare-fun x3159 () Int)
(declare-fun x2936 () Bool)
(declare-fun x1751 () Int)
(declare-fun x4125 () x10)
(declare-fun x3759 () Bool)
(declare-fun x1475 () Int)
(declare-fun x4658 () Int)
(declare-fun x953 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x3796 () Int)
(declare-fun x4583 () Bool)
(declare-fun x2768 () x10)
(declare-fun x736 (x10) Int)
(declare-fun x999 () Bool)
(declare-fun x3051 () Int)
(declare-fun x788 () Int)
(declare-fun x4162 () Bool)
(declare-fun x2305 () x10)
(declare-fun x376 () Int)
(declare-fun x1668 () x10)
(declare-fun x4709 () Int)
(declare-fun x1744 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x4293 () Bool)
(declare-fun x894 () Int)
(declare-fun x4893 () Bool)
(declare-fun x2563 () Int)
(declare-fun x545 () x10)
(declare-fun x4877 () Int)
(declare-fun x2963 () Int)
(declare-fun x1276 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x161 () Bool)
(declare-fun x499 () x10)
(declare-fun x317 () Bool)
(declare-fun x3322 (Int) Int)
(declare-fun x1389 () Int)
(declare-fun x4308 () Bool)
(declare-fun x1964 (x10) Int)
(declare-fun x2943 () Bool)
(declare-fun x4320 () Int)
(declare-fun x3753 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x4686 () Int)
(declare-fun x3740 () Int)
(declare-fun x1284 () Bool)
(declare-fun x614 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x4740 () Int)
(declare-fun x1761 () Bool)
(declare-fun x3387 () Int)
(declare-fun x3691 () x10)
(declare-fun x4422 () Int)
(declare-fun x2704 () Bool)
(declare-fun x943 () Int)
(declare-fun x3929 () Bool)
(declare-fun x855 () Int)
(declare-fun x2763 () Int)
(declare-fun x3175 () Int)
(declare-fun x265 () Bool)
(declare-fun x4574 () Bool)
(declare-fun x935 () Bool)
(declare-fun x2129 () Bool)
(declare-fun x4108 () x10)
(declare-fun x4871 () Bool)
(declare-fun x4782 () Bool)
(declare-fun x4665 () Bool)
(declare-fun x186 () Int)
(declare-fun x2578 () Bool)
(declare-fun x2828 () Bool)
(declare-fun x3007 () Bool)
(declare-fun x3581 () Bool)
(declare-fun x1039 () Int)
(declare-fun x3605 () Bool)
(declare-fun x2361 () Int)
(declare-fun x1187 () Bool)
(declare-fun x3699 () Int)
(declare-fun x4106 () x10)
(declare-fun x194 () Bool)
(declare-fun x106 () Int)
(declare-fun x141 () Bool)
(declare-fun x4797 () Bool)
(declare-fun x3357 () Int)
(declare-fun x2665 () Int)
(declare-fun x4883 () Bool)
(declare-fun x2880 () Int)
(declare-fun x3257 () Int)
(declare-fun x4386 () Bool)
(declare-fun x4012 () Bool)
(declare-fun x1069 () Int)
(declare-fun x3217 () Int)
(declare-fun x2022 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x4288 () Int)
(declare-fun x3396 () Int)
(declare-fun x1492 () Bool)
(declare-fun x4587 () Bool)
(declare-fun x82 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x4419 () Bool)
(declare-fun x3418 () x10)
(declare-fun x2222 () Bool)
(declare-fun x4069 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x3686 () Int)
(declare-fun x4831 () Int)
(declare-fun x2487 () Bool)
(declare-fun x4756 () Bool)
(declare-fun x3763 () Bool)
(declare-fun x849 () x10)
(declare-fun x79 () x10)
(declare-fun x1072 () x10)
(declare-fun x1384 () Int)
(declare-fun x2724 () Int)
(declare-fun x2707 () x10)
(declare-fun x3081 () Bool)
(declare-fun x2010 () x10)
(declare-fun x4445 () Int)
(declare-fun x1669 () Int)
(declare-fun x2135 () Int)
(declare-fun x609 () Int)
(declare-fun x1635 () Int)
(declare-fun x466 () Int)
(declare-fun x1420 () Bool)
(declare-fun x4758 () Int)
(declare-fun x4250 () Bool)
(declare-fun x1632 () Int)
(declare-fun x325 () Int)
(declare-fun x888 () Int)
(declare-fun x2897 () Int)
(declare-fun x2461 () Bool)
(declare-fun x2974 () Int)
(declare-fun x1265 () Int)
(declare-fun x3619 () Bool)
(declare-fun x766 () Bool)
(declare-fun x3220 () Int)
(declare-fun x1099 () Int)
(declare-fun x4820 () Int)
(declare-fun x4013 () Bool)
(declare-fun x4482 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x962 () Int)
(declare-fun x4417 () Int)
(declare-fun x3119 () Int)
(declare-fun x907 () Bool)
(declare-fun x4813 () Bool)
(declare-fun x1945 () Bool)
(declare-fun x3072 () x10)
(declare-fun x2802 () Int)
(declare-fun x4742 () Bool)
(declare-fun x3781 () Int)
(declare-fun x595 () Int)
(declare-fun x4879 () Int)
(declare-fun x1995 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x474 () x10)
(declare-fun x1184 () Int)
(declare-fun x4548 () Int)
(declare-fun x1994 () Int)
(declare-fun x3463 () Int)
(declare-fun x1121 () Bool)
(declare-fun x3577 () x10)
(declare-fun x1895 () Int)
(declare-fun x2294 () Bool)
(declare-fun x1752 () Int)
(declare-fun x3142 () Bool)
(declare-fun x3727 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x3615 () Int)
(declare-fun x3921 () Bool)
(declare-fun x884 () Int)
(declare-fun x3703 () Int)
(declare-fun x1728 () Int)
(declare-fun x3711 () Int)
(declare-fun x2638 () Int)
(declare-fun x4329 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x3725 () Int)
(declare-fun x4588 () Int)
(declare-fun x2618 () Bool)
(declare-fun x4817 () Int)
(declare-fun x3425 () Int)
(declare-fun x4321 () Int)
(declare-fun x351 () Int)
(declare-fun x3529 () Int)
(declare-fun x1791 () Int)
(declare-fun x2869 () Int)
(declare-fun x1430 () x10)
(declare-fun x4285 () Int)
(declare-fun x1733 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x2435 () x10)
(declare-fun x1008 () Int)
(declare-fun x3353 () x10)
(declare-fun x844 () Int)
(declare-fun x1907 () Int)
(declare-fun x2190 () Int)
(declare-fun x2684 () Int)
(declare-fun x605 () Int)
(declare-fun x1709 () Bool)
(declare-fun x3757 () x10)
(declare-fun x2351 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x1370 () Int)
(declare-fun x3155 () Bool)
(declare-fun x3860 () Bool)
(declare-fun x127 () Bool)
(declare-fun x2580 () Int)
(declare-fun x1708 () Int)
(declare-fun x3275 () Bool)
(declare-fun x3015 () Int)
(declare-fun x1479 () x10)
(declare-fun x4701 () Int)
(declare-fun x359 () Bool)
(declare-fun x4677 () Bool)
(declare-fun x2589 () Bool)
(declare-fun x2049 () x10)
(declare-fun x1787 () Int)
(declare-fun x3054 () Int)
(declare-fun x2329 () x10)
(declare-fun x1686 () Int)
(declare-fun x4033 () Int)
(declare-fun x4225 () Int)
(declare-fun x1289 () Bool)
(declare-fun x1897 () Int)
(declare-fun x3354 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x4114 () Bool)
(declare-fun x3208 () Bool)
(declare-fun x1493 () Int)
(declare-fun x4171 () Int)
(declare-fun x4049 () Bool)
(declare-fun x4672 () Bool)
(declare-fun x2373 (Int) Int)
(declare-fun x3492 () Bool)
(declare-fun x2797 () Int)
(declare-fun x3789 () Int)
(declare-fun x1726 () Bool)
(declare-fun x4349 () Bool)
(declare-fun x1780 () x10)
(declare-fun x2326 () Int)
(declare-fun x2210 () Bool)
(declare-fun x1815 () Int)
(declare-fun x4411 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x3963 () Int)
(declare-fun x3932 () Bool)
(declare-fun x994 () Int)
(declare-fun x2371 () x10)
(declare-fun x455 () Bool)
(declare-fun x3534 () x10)
(declare-fun x3268 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x2136 () Int)
(declare-fun x754 () x10)
(declare-fun x659 () x10)
(declare-fun x3715 () Bool)
(declare-fun x3239 () Bool)
(declare-fun x2947 () Int)
(declare-fun x673 () x10)
(declare-fun x511 () Bool)
(declare-fun x510 () Int)
(declare-fun x914 (x10) Int)
(declare-fun x4089 () Bool)
(declare-fun x3286 () Bool)
(declare-fun x2795 () Int)
(declare-fun x3855 () Bool)
(declare-fun x1080 () x10)
(declare-fun x541 () x10)
(declare-fun x14 () x10)
(declare-fun x1516 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x1609 () Int)
(declare-fun x1505 () x10)
(declare-fun x2710 () Bool)
(declare-fun x2838 () Int)
(declare-fun x1996 () Bool)
(declare-fun x1510 () Int)
(declare-fun x2588 () x10)
(declare-fun x3544 () Int)
(declare-fun x1804 () Bool)
(declare-fun x4848 () Int)
(declare-fun x3414 () Bool)
(declare-fun x4138 () Bool)
(declare-fun x4362 () Bool)
(declare-fun x442 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x3209 () Bool)
(declare-fun x4873 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x663 () Int)
(declare-fun x2332 (Int) Int)
(declare-fun x1104 () Bool)
(declare-fun x4510 () Int)
(declare-fun x3042 () Int)
(declare-fun x3600 () x10)
(declare-fun x3770 () Int)
(declare-fun x4657 () Int)
(declare-fun x85 (Int) Int)
(declare-fun x2445 () Bool)
(declare-fun x644 () Bool)
(declare-fun x3958 () Bool)
(declare-fun x4861 () Bool)
(declare-fun x882 () Bool)
(declare-fun x502 () Int)
(declare-fun x2551 () Int)
(declare-fun x854 () Bool)
(declare-fun x2765 () Bool)
(declare-fun x1654 () Int)
(declare-fun x2469 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x4079 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x1070 () x10)
(declare-fun x4113 () Int)
(declare-fun x2607 () Int)
(declare-fun x4219 () Bool)
(declare-fun x4420 () Bool)
(declare-fun x4544 () Int)
(declare-fun x2663 () Int)
(declare-fun x1327 () x10)
(declare-fun x1583 () Bool)
(declare-fun x3988 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x226 () Bool)
(declare-fun x3573 () Bool)
(declare-fun x4259 () Bool)
(declare-fun x3812 () Bool)
(declare-fun x374 (Int) Int)
(declare-fun x1725 () Int)
(declare-fun x212 () Bool)
(declare-fun x3303 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x183 () Bool)
(declare-fun x1908 () Int)
(declare-fun x1426 () Bool)
(declare-fun x137 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x3652 () Int)
(declare-fun x3066 () Bool)
(declare-fun x4867 () Bool)
(declare-fun x3215 () Int)
(declare-fun x3720 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x1507 () Int)
(declare-fun x2804 () Bool)
(declare-fun x956 () Bool)
(declare-fun x2143 () Int)
(declare-fun x3074 () Int)
(declare-fun x3708 () Int)
(declare-fun x4340 () Bool)
(declare-fun x2052 () Bool)
(declare-fun x3970 () Int)
(declare-fun x3510 () Bool)
(declare-fun x4462 () Bool)
(declare-fun x3543 () Int)
(declare-fun x4280 () Int)
(declare-fun x3766 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x1551 () Int)
(declare-fun x1966 () Bool)
(declare-fun x3101 () Int)
(declare-fun x4366 () Bool)
(declare-fun x3219 () Bool)
(declare-fun x4496 () Bool)
(declare-fun x1459 () Int)
(declare-fun x2032 (x10) Int)
(declare-fun x1667 () Bool)
(declare-fun x3369 () Int)
(declare-fun x3082 () Int)
(declare-fun x1234 () Bool)
(declare-fun x2171 () Int)
(declare-fun x413 () Bool)
(declare-fun x2913 () Int)
(declare-fun x3035 () x10)
(declare-fun x436 () Bool)
(declare-fun x1679 () x10)
(declare-fun x2151 () x10)
(declare-fun x910 () Bool)
(declare-fun x4809 () Int)
(declare-fun x1081 () Int)
(declare-fun x514 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x2369 () Int)
(declare-fun x856 () Bool)
(declare-fun x4246 () Bool)
(declare-fun x4824 () Bool)
(declare-fun x257 () Bool)
(declare-fun x1378 () Int)
(declare-fun x4315 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x2774 () Int)
(declare-fun x804 () x10)
(declare-fun x4227 () Int)
(declare-fun x3011 () Int)
(declare-fun x685 () Int)
(declare-fun x3404 () Bool)
(declare-fun x282 () x10)
(declare-fun x2318 () Bool)
(declare-fun x4727 () Bool)
(declare-fun x877 () Bool)
(declare-fun x4491 () x10)
(declare-fun x2342 () Bool)
(declare-fun x1816 () Int)
(declare-fun x2225 () Bool)
(declare-fun x4689 () Bool)
(declare-fun x1245 () Int)
(declare-fun x329 () Bool)
(declare-fun x2260 () Int)
(declare-fun x4007 () Int)
(declare-fun x1307 () Int)
(declare-fun x1585 () Bool)
(declare-fun x2757 () x10)
(declare-fun x3493 () Int)
(declare-fun x2410 () Int)
(declare-fun x890 () Bool)
(declare-fun x2376 () Bool)
(declare-fun x386 () Int)
(declare-fun x4741 () Int)
(declare-fun x3673 () Int)
(declare-fun x3356 () Bool)
(declare-fun x4464 () Bool)
(declare-fun x3849 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x2944 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x2504 () Bool)
(declare-fun x1440 () Int)
(declare-fun x4022 () Bool)
(declare-fun x3785 () Int)
(declare-fun x4198 () Int)
(declare-fun x4387 () Int)
(declare-fun x2824 () Bool)
(declare-fun x3978 () Bool)
(declare-fun x4467 (Int) Int)
(declare-fun x158 () x10)
(declare-fun x3794 () Bool)
(declare-fun x3651 () Int)
(declare-fun x4624 () Bool)
(declare-fun x4906 () Bool)
(declare-fun x3593 () Int)
(declare-fun x986 () x10)
(declare-fun x2233 () Bool)
(declare-fun x641 () Bool)
(declare-fun x4213 () Bool)
(declare-fun x1803 () Int)
(declare-fun x3400 () Bool)
(declare-fun x3634 () Int)
(declare-fun x3595 () Bool)
(declare-fun x4676 () Bool)
(declare-fun x2762 () Bool)
(declare-fun x160 (Int) Int)
(declare-fun x3193 () Int)
(declare-fun x4691 () Int)
(declare-fun x4875 () Bool)
(declare-fun x2780 () Int)
(declare-fun x3730 () Int)
(declare-fun x4899 () Bool)
(declare-fun x2991 () Int)
(declare-fun x373 () Bool)
(declare-fun x2249 () Int)
(declare-fun x553 () Bool)
(declare-fun x4345 () Bool)
(declare-fun x2845 () Int)
(declare-fun x1624 () Int)
(declare-fun x2374 () Bool)
(declare-fun x925 () Bool)
(declare-fun x509 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x2025 () Bool)
(declare-fun x506 () x10)
(declare-fun x383 () Bool)
(declare-fun x4065 () Int)
(declare-fun x3537 () Int)
(declare-fun x1502 () Bool)
(declare-fun x2098 () Int)
(declare-fun x2853 () Int)
(declare-fun x1916 () Bool)
(declare-fun x4376 () Int)
(declare-fun x4888 () Bool)
(declare-fun x847 () x10)
(declare-fun x3539 () Bool)
(declare-fun x2989 () Int)
(declare-fun x2090 () Int)
(declare-fun x4431 () Int)
(declare-fun x2377 () Bool)
(declare-fun x4532 () Int)
(declare-fun x674 () Int)
(declare-fun x341 () Int)
(declare-fun x1940 () Int)
(declare-fun x748 () Bool)
(declare-fun x851 () Bool)
(declare-fun x2290 () Int)
(declare-fun x4289 () Int)
(declare-fun x1298 () Bool)
(declare-fun x2871 () x10)
(declare-fun x327 () Bool)
(declare-fun x3641 () Int)
(declare-fun x2105 () Int)
(declare-fun x4367 () Int)
(declare-fun x3069 () Bool)
(declare-fun x886 () Int)
(declare-fun x702 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x2451 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x972 () Int)
(declare-fun x2875 () Int)
(declare-fun x2407 () Bool)
(declare-fun x4688 () Int)
(declare-fun x3659 () Bool)
(declare-fun x4129 () Int)
(declare-fun x1082 () Bool)
(declare-fun x2364 () Int)
(declare-fun x2219 () Int)
(declare-fun x2529 () Int)
(declare-fun x4390 () Bool)
(declare-fun x169 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x181 () Int)
(declare-fun x314 () Bool)
(declare-fun x246 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x4245 () Bool)
(declare-fun x1867 () x10)
(declare-fun x3421 () Int)
(declare-fun x4459 () Bool)
(declare-fun x643 () Int)
(declare-fun x473 () Int)
(declare-fun x1521 () Int)
(declare-fun x3240 () Int)
(declare-fun x260 () Bool)
(declare-fun x2413 () Int)
(declare-fun x4344 () Bool)
(declare-fun x122 () Int)
(declare-fun x961 () Bool)
(declare-fun x4155 () Bool)
(declare-fun x4885 () Int)
(declare-fun x76 () Int)
(declare-fun x2073 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x2694 () Int)
(declare-fun x39 () Int)
(declare-fun x3044 () Int)
(declare-fun x1898 () Bool)
(declare-fun x4754 () Bool)
(declare-fun x2716 () Bool)
(declare-fun x2128 () Int)
(declare-fun x3002 () Int)
(declare-fun x2932 () x10)
(declare-fun x4432 () Int)
(declare-fun x4 () Bool)
(declare-fun x448 () Int)
(declare-fun x3009 () Bool)
(declare-fun x1795 () Int)
(declare-fun x264 () Int)
(declare-fun x3583 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x494 () Int)
(declare-fun x1468 () Int)
(declare-fun x4438 () Bool)
(declare-fun x934 () Bool)
(declare-fun x4903 () Int)
(declare-fun x2534 () Int)
(declare-fun x3149 () Int)
(declare-fun x2480 () Int)
(declare-fun x2447 () Int)
(declare-fun x3590 () x10)
(declare-fun x1757 () x10)
(declare-fun x3735 () Int)
(declare-fun x3086 () Bool)
(declare-fun x4921 () Int)
(declare-fun x419 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x4594 () Int)
(declare-fun x668 () Bool)
(declare-fun x4011 () Int)
(declare-fun x3262 () Bool)
(declare-fun x3811 () Bool)
(declare-fun x3992 () Bool)
(declare-fun x3625 () Int)
(declare-fun x785 () Bool)
(declare-fun x245 () x10)
(declare-fun x4409 () Bool)
(declare-fun x1784 () Int)
(declare-fun x3280 () Bool)
(declare-fun x2005 () Int)
(declare-fun x3603 () Bool)
(declare-fun x3014 () Bool)
(declare-fun x3378 () Int)
(declare-fun x3310 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x3440 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x993 () Int)
(declare-fun x2829 () Int)
(declare-fun x3938 () Int)
(declare-fun x2344 () x10)
(declare-fun x3572 () Bool)
(declare-fun x3517 () Int)
(declare-fun x1538 () Bool)
(declare-fun x2729 () Int)
(declare-fun x347 () Bool)
(declare-fun x61 () Bool)
(declare-fun x478 () Bool)
(declare-fun x4380 () Bool)
(declare-fun x4781 () Bool)
(declare-fun x2895 () Bool)
(declare-fun x94 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x977 () Bool)
(declare-fun x2448 () Bool)
(declare-fun x4403 () Bool)
(declare-fun x2806 () Int)
(declare-fun x4189 () Int)
(declare-fun x534 () Int)
(declare-fun x772 () Int)
(declare-fun x3748 () Int)
(declare-fun x1854 () Int)
(declare-fun x600 () Int)
(declare-fun x1402 () Bool)
(declare-fun x441 () Int)
(declare-fun x810 () Int)
(declare-fun x1274 () Int)
(declare-fun x1214 () Bool)
(declare-fun x4008 (x10) Int)
(declare-fun x2077 () Int)
(declare-fun x3267 () Int)
(declare-fun x2984 () Int)
(declare-fun x1564 () Bool)
(declare-fun x1379 () Int)
(declare-fun x3281 () Bool)
(declare-fun x3103 () x10)
(declare-fun x2068 () Bool)
(declare-fun x2173 () Int)
(declare-fun x883 () Int)
(declare-fun x3535 () Bool)
(declare-fun x2262 () Int)
(declare-fun x4192 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x2948 () x10)
(declare-fun x2784 () Bool)
(declare-fun x1306 () Int)
(declare-fun x4796 () Bool)
(declare-fun x3394 () x10)
(declare-fun x407 () x10)
(declare-fun x1243 () Bool)
(declare-fun x4152 () Bool)
(declare-fun x4790 () Int)
(declare-fun x1512 () Bool)
(declare-fun x698 () Int)
(declare-fun x1678 (Int) Int)
(declare-fun x3722 () Int)
(declare-fun x2525 () Int)
(declare-fun x4076 () Bool)
(declare-fun x710 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x2189 () x10)
(declare-fun x3127 (x10) Int)
(declare-fun x3518 () Int)
(declare-fun x1592 () x10)
(declare-fun x1478 () Int)
(declare-fun x2464 () x10)
(declare-fun x3850 () Int)
(declare-fun x2692 () Int)
(declare-fun x543 () Bool)
(declare-fun x4132 () Bool)
(declare-fun x928 () Int)
(declare-fun x2227 () Bool)
(declare-fun x537 () x10)
(declare-fun x340 () Int)
(declare-fun x3694 () Int)
(declare-fun x2628 () Int)
(declare-fun x4563 () Bool)
(declare-fun x4825 () Int)
(declare-fun x1120 () Int)
(declare-fun x705 () Int)
(declare-fun x1435 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x422 () x10)
(declare-fun x3237 () Int)
(declare-fun x1200 () Bool)
(declare-fun x615 () x10)
(declare-fun x358 () Int)
(declare-fun x4687 () Int)
(declare-fun x2941 () Bool)
(declare-fun x1170 () Int)
(declare-fun x3799 () Int)
(declare-fun x4163 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x549 () Bool)
(declare-fun x4068 () Int)
(declare-fun x1395 () Int)
(declare-fun x4263 () Int)
(declare-fun x2069 () Int)
(declare-fun x919 () Bool)
(declare-fun x4795 () Bool)
(declare-fun x3588 () Bool)
(declare-fun x2894 () Bool)
(declare-fun x4484 () Int)
(declare-fun x4086 () Bool)
(declare-fun x3999 () Bool)
(declare-fun x4847 () Int)
(declare-fun x1471 () Bool)
(declare-fun x1526 () Int)
(declare-fun x2112 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x2409 (x10) Int)
(declare-fun x381 () Bool)
(declare-fun x822 () x10)
(declare-fun x1419 () Int)
(declare-fun x90 () Int)
(declare-fun x1848 () Int)
(declare-fun x3480 () Int)
(declare-fun x1482 () Int)
(declare-fun x2072 () Int)
(declare-fun x1201 () Bool)
(declare-fun x20 () Int)
(declare-fun x132 () Bool)
(declare-fun x2590 () Int)
(declare-fun x4487 () x10)
(declare-fun x3033 () Int)
(declare-fun x4540 () Bool)
(declare-fun x2993 () Int)
(declare-fun x3560 () Int)
(declare-fun x4707 () Bool)
(declare-fun x2393 () Bool)
(declare-fun x163 () Bool)
(declare-fun x2641 () Int)
(declare-fun x3124 () Bool)
(declare-fun x1617 () Int)
(declare-fun x1602 () Int)
(declare-fun x839 () Int)
(declare-fun x4010 () Bool)
(declare-fun x1775 () Int)
(declare-fun x284 () x10)
(declare-fun x211 () x10)
(declare-fun x2953 () Bool)
(declare-fun x4436 () Bool)
(declare-fun x4472 () Bool)
(declare-fun x3223 () Int)
(declare-fun x121 () Bool)
(declare-fun x2752 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x2250 () Bool)
(declare-fun x629 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x3466 () Int)
(declare-fun x1582 () Int)
(declare-fun x1270 () Int)
(declare-fun x4096 () Int)
(declare-fun x1149 () Int)
(declare-fun x4291 () Int)
(declare-fun x2362 () Bool)
(declare-fun x1533 () Int)
(declare-fun x307 () x10)
(declare-fun x171 () Int)
(declare-fun x3488 () Int)
(declare-fun x178 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x4582 () Int)
(declare-fun x2134 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x2686 () Int)
(declare-fun x2331 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x1442 () x10)
(declare-fun x1722 () Bool)
(declare-fun x2441 () Int)
(declare-fun x597 () Bool)
(declare-fun x2903 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x4127 () Int)
(declare-fun x3498 () Int)
(declare-fun x666 () Int)
(declare-fun x4272 () x10)
(declare-fun x429 () Bool)
(declare-fun x4584 () x10)
(declare-fun x3490 () Bool)
(declare-fun x4772 () Bool)
(declare-fun x357 () x10)
(declare-fun x4527 () Int)
(declare-fun x1670 () Int)
(declare-fun x2923 () Int)
(declare-fun x2625 () Bool)
(declare-fun x4714 () Int)
(declare-fun x3629 () x10)
(declare-fun x2966 () Bool)
(declare-fun x3196 () x10)
(declare-fun x488 () Int)
(declare-fun x3621 () Bool)
(declare-fun x2899 () Bool)
(declare-fun x2701 (x10) Int)
(declare-fun x3980 () Int)
(declare-fun x1263 () Int)
(declare-fun x1604 () Bool)
(declare-fun x1016 () Int)
(declare-fun x309 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x3953 () Int)
(declare-fun x1157 () Int)
(declare-fun x4202 () Bool)
(declare-fun x1058 () x10)
(declare-fun x3900 () Bool)
(declare-fun x170 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x4183 () Int)
(declare-fun x159 () x10)
(declare-fun x3277 () Int)
(declare-fun x4638 () Bool)
(declare-fun x2488 () Bool)
(declare-fun x3564 () Int)
(declare-fun x2093 () Bool)
(declare-fun x1495 () x10)
(declare-fun x1514 () x10)
(declare-fun x4690 () Int)
(declare-fun x145 () Bool)
(declare-fun x996 () Int)
(declare-fun x712 () Int)
(declare-fun x3343 () Bool)
(declare-fun x4001 () Int)
(declare-fun x1326 () Int)
(declare-fun x2613 () Bool)
(declare-fun x590 () Bool)
(declare-fun x4229 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x975 () Int)
(declare-fun x3756 () x10)
(declare-fun x4554 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x3643 () Int)
(declare-fun x1249 () Int)
(declare-fun x3744 () Int)
(declare-fun x321 () Bool)
(declare-fun x3880 () Bool)
(declare-fun x1960 () Int)
(declare-fun x3816 () Bool)
(declare-fun x1630 () Int)
(declare-fun x2180 () Int)
(declare-fun x3624 () x10)
(declare-fun x3515 () Bool)
(declare-fun x3133 () Int)
(declare-fun x4456 () Int)
(declare-fun x3542 () Int)
(declare-fun x1986 () Int)
(declare-fun x4105 () Int)
(declare-fun x3373 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x4221 () Bool)
(declare-fun x2760 () Int)
(declare-fun x4262 () Bool)
(declare-fun x1930 () Int)
(declare-fun x3599 () Bool)
(declare-fun x2631 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x1871 () Int)
(declare-fun x3883 () Int)
(declare-fun x218 () Int)
(declare-fun x3067 () x10)
(declare-fun x4600 () Int)
(declare-fun x2292 () Int)
(declare-fun x3636 () Int)
(declare-fun x3392 () Int)
(declare-fun x769 () Int)
(declare-fun x4580 () Int)
(declare-fun x1381 () Bool)
(declare-fun x699 () Bool)
(declare-fun x3361 () Int)
(declare-fun x1311 () Bool)
(declare-fun x817 () x10)
(declare-fun x1692 () Int)
(declare-fun x2375 () Int)
(declare-fun x2194 () Int)
(declare-fun x3204 () Int)
(declare-fun x4111 () Bool)
(declare-fun x1532 () Int)
(declare-fun x4188 () Int)
(declare-fun x4519 () Bool)
(declare-fun x3451 () Int)
(declare-fun x920 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x3105 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x695 () Bool)
(declare-fun x3519 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x4448 () Bool)
(declare-fun x4128 () Bool)
(declare-fun x396 () Int)
(declare-fun x4311 () Int)
(declare-fun x4869 () x10)
(declare-fun x918 () Bool)
(declare-fun x3578 () x10)
(declare-fun x2860 () Int)
(declare-fun x1172 () Bool)
(declare-fun x1817 () x10)
(declare-fun x2243 () Bool)
(declare-fun x4377 () Int)
(declare-fun x4855 () Int)
(declare-fun x1985 () Bool)
(declare-fun x4557 () Int)
(declare-fun x1613 () x10)
(declare-fun x2664 () Bool)
(declare-fun x280 () Int)
(declare-fun x3536 (Int) Int)
(declare-fun x2928 () x10)
(declare-fun x1100 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x2901 () Bool)
(declare-fun x3701 () Int)
(declare-fun x1423 () Int)
(declare-fun x2119 () Int)
(declare-fun x1552 () Int)
(declare-fun x2555 () Int)
(declare-fun x286 () Int)
(declare-fun x620 () Bool)
(declare-fun x4116 () Bool)
(declare-fun x3123 () Int)
(declare-fun x1182 () Bool)
(declare-fun x4513 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x671 () Int)
(declare-fun x2463 () Int)
(declare-fun x2586 () Bool)
(declare-fun x483 () Bool)
(declare-fun x3996 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x3408 () Int)
(declare-fun x3922 () Bool)
(declare-fun x1704 () Int)
(declare-fun x1164 () Bool)
(declare-fun x2101 () Int)
(declare-fun x3914 () Bool)
(declare-fun x116 () Int)
(declare-fun x2737 () Bool)
(declare-fun x1793 () Int)
(declare-fun x2468 () Int)
(declare-fun x4609 () Int)
(declare-fun x4421 () Int)
(declare-fun x323 () Bool)
(declare-fun x2536 () Int)
(declare-fun x3366 () Bool)
(declare-fun x3397 () Bool)
(declare-fun x4902 () Int)
(declare-fun x3887 () Bool)
(declare-fun x4730 () Bool)
(declare-fun x4324 () Bool)
(declare-fun x64 () Bool)
(declare-fun x1694 () x10)
(declare-fun x3389 (Int) Int)
(declare-fun x3468 () Bool)
(declare-fun x3336 () Int)
(declare-fun x3984 () Int)
(declare-fun x2446 () Int)
(declare-fun x3450 () Int)
(declare-fun x665 () Bool)
(declare-fun x305 () Bool)
(declare-fun x4401 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x2620 () Bool)
(declare-fun x3802 () Int)
(declare-fun x59 () Int)
(declare-fun x1456 () Bool)
(declare-fun x2703 () Int)
(declare-fun x2708 (x10) Int)
(declare-fun x4052 () Int)
(declare-fun x4694 () Int)
(declare-fun x2003 () Int)
(declare-fun x131 () x10)
(declare-fun x2660 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x1666 () Int)
(declare-fun x1202 () Int)
(declare-fun x2492 () Int)
(declare-fun x4191 () Int)
(declare-fun x2195 () x10)
(declare-fun x4058 () Bool)
(declare-fun x4100 () Bool)
(declare-fun x530 () Int)
(declare-fun x3190 () Int)
(declare-fun x3250 () Bool)
(declare-fun x660 () Int)
(declare-fun x4429 () Bool)
(declare-fun x4654 () Bool)
(declare-fun x4182 () Int)
(declare-fun x4375 () Int)
(declare-fun x1570 () Int)
(declare-fun x789 () Int)
(declare-fun x1011 () x10)
(declare-fun x1066 () x10)
(declare-fun x4142 () x10)
(declare-fun x3437 () Int)
(declare-fun x3178 () Int)
(declare-fun x762 () Int)
(declare-fun x3859 () Int)
(declare-fun x1621 () Bool)
(declare-fun x4395 () Bool)
(declare-fun x4863 () Int)
(declare-fun x4328 () Bool)
(declare-fun x932 () Int)
(declare-fun x1971 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x3330 () Int)
(declare-fun x3839 () Int)
(declare-fun x3565 () Bool)
(declare-fun x903 () Int)
(declare-fun x1606 () Int)
(declare-fun x4101 () x10)
(declare-fun x4158 () Int)
(declare-fun x2532 () Bool)
(declare-fun x3229 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1677 () x10)
(declare-fun x573 () Int)
(declare-fun x4514 () Bool)
(declare-fun x1920 () Int)
(declare-fun x3251 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x3063 () Int)
(declare-fun x32 () Int)
(declare-fun x1091 () Int)
(declare-fun x2603 () Int)
(declare-fun x2396 () Bool)
(declare-fun x1429 () Int)
(declare-fun x4093 () Bool)
(declare-fun x669 () x10)
(declare-fun x1068 () Bool)
(declare-fun x2320 () Int)
(declare-fun x2123 () Bool)
(declare-fun x542 () Bool)
(declare-fun x838 () Bool)
(declare-fun x2349 () Bool)
(declare-fun x4257 () x10)
(declare-fun x3800 () Int)
(declare-fun x142 () Int)
(declare-fun x4780 () Bool)
(declare-fun x3266 () Int)
(declare-fun x4500 () Bool)
(declare-fun x2722 () x10)
(declare-fun x3825 () Int)
(declare-fun x3640 () Bool)
(declare-fun x1434 () Int)
(declare-fun x2884 () x10)
(declare-fun x4541 () Int)
(declare-fun x1921 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x3675 () Int)
(declare-fun x3998 () Int)
(declare-fun x3115 () Int)
(declare-fun x3956 () Bool)
(declare-fun x821 () Bool)
(declare-fun x2114 () Int)
(declare-fun x4241 () Int)
(declare-fun x2778 () Bool)
(declare-fun x2622 () Int)
(declare-fun x718 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x77 () Bool)
(declare-fun x738 () Bool)
(declare-fun x3384 () Bool)
(declare-fun x3504 () Int)
(declare-fun x109 () Bool)
(declare-fun x4133 () x10)
(declare-fun x1192 () Bool)
(declare-fun x4313 () Int)
(declare-fun x98 (Int) Int)
(declare-fun x1111 () Bool)
(declare-fun x4389 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x4253 () Int)
(declare-fun x1488 () Int)
(declare-fun x420 () Bool)
(declare-fun x1837 () Int)
(declare-fun x997 () Bool)
(declare-fun x1033 () Int)
(declare-fun x2178 () Int)
(declare-fun x1310 () Int)
(declare-fun x4035 () Bool)
(declare-fun x4451 () Bool)
(declare-fun x3405 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x53 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x897 () Bool)
(declare-fun x1740 () Int)
(declare-fun x832 () Bool)
(declare-fun x4232 () x10)
(declare-fun x1165 () Int)
(declare-fun x518 () Bool)
(declare-fun x4181 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x3926 () Bool)
(declare-fun x1032 () Int)
(declare-fun x4302 () Int)
(declare-fun x1937 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x559 () Bool)
(declare-fun x4506 (x10) Int)
(declare-fun x4851 () Int)
(declare-fun x4283 () Int)
(declare-fun x561 () Int)
(declare-fun x4446 () Int)
(declare-fun x58 () Int)
(declare-fun x2924 () Bool)
(declare-fun x811 () Bool)
(declare-fun x3897 () Bool)
(declare-fun x4535 () Int)
(declare-fun x1719 () Int)
(declare-fun x2557 () Int)
(declare-fun x2634 () Int)
(declare-fun x2960 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x2987 () Bool)
(declare-fun x4174 () Bool)
(declare-fun x2502 () Bool)
(declare-fun x4591 () Int)
(declare-fun x4589 () Int)
(declare-fun x4531 () Int)
(declare-fun x611 () Int)
(declare-fun x3444 () Int)
(declare-fun x1542 () Int)
(declare-fun x375 () Int)
(declare-fun x848 () x10)
(declare-fun x1334 () Bool)
(declare-fun x271 () Int)
(declare-fun x814 () Int)
(declare-fun x3723 () Int)
(declare-fun x1358 () Bool)
(declare-fun x2662 () Int)
(declare-fun x446 () Int)
(declare-fun x3943 () Bool)
(declare-fun x4296 () Int)
(declare-fun x732 () Bool)
(declare-fun x42 () Int)
(declare-fun x1662 () Int)
(declare-fun x1136 () Int)
(declare-fun x451 () Int)
(declare-fun x1260 () Int)
(declare-fun x399 () Bool)
(declare-fun x2096 () Bool)
(declare-fun x1101 () Int)
(declare-fun x4810 () x10)
(declare-fun x91 () Int)
(declare-fun x2571 () Bool)
(declare-fun x1850 () Int)
(declare-fun x2058 () Int)
(declare-fun x2148 () x10)
(declare-fun x3949 () Int)
(declare-fun x867 () Int)
(declare-fun x843 () Bool)
(declare-fun x1041 () Int)
(declare-fun x2465 () Int)
(declare-fun x4284 () Bool)
(declare-fun x3656 () Bool)
(declare-fun x234 () Int)
(declare-fun x3584 () Int)
(declare-fun x2248 () Int)
(declare-fun x2286 () Int)
(declare-fun x692 () Int)
(declare-fun x3200 () Int)
(declare-fun x2909 () Int)
(declare-fun x230 () Int)
(declare-fun x3783 () Int)
(declare-fun x118 () Bool)
(declare-fun x4481 () Int)
(declare-fun x4909 () Bool)
(declare-fun x2528 () Bool)
(declare-fun x1944 () Int)
(declare-fun x3976 () Bool)
(declare-fun x505 () Int)
(declare-fun x277 () Bool)
(declare-fun x2518 () Int)
(declare-fun x4545 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x3261 () Int)
(declare-fun x187 () Bool)
(declare-fun x3884 () x10)
(declare-fun x1362 () x10)
(declare-fun x4277 () Bool)
(declare-fun x2956 () Bool)
(declare-fun x3866 () Int)
(declare-fun x1741 () Bool)
(declare-fun x4655 () Bool)
(declare-fun x3346 () Bool)
(declare-fun x4071 () Int)
(declare-fun x3655 () Int)
(declare-fun x1040 () Int)
(declare-fun x4290 () Int)
(declare-fun x1834 () Int)
(declare-fun x1701 () Int)
(declare-fun x4812 () Int)
(declare-fun x4693 () Int)
(declare-fun x2584 () Bool)
(declare-fun x536 () Int)
(declare-fun x834 () Int)
(declare-fun x2998 () Int)
(declare-fun x2279 () Int)
(declare-fun x1237 () Bool)
(declare-fun x3087 () Int)
(declare-fun x944 () x10)
(declare-fun x2280 () Int)
(declare-fun x2394 () x10)
(declare-fun x1231 () Int)
(declare-fun x618 () Bool)
(declare-fun x4323 () Bool)
(declare-fun x4248 () Bool)
(declare-fun x1173 () Int)
(declare-fun x2508 () Int)
(declare-fun x3649 () Int)
(declare-fun x3657 () Int)
(declare-fun x1539 () Bool)
(declare-fun x2519 () Bool)
(declare-fun x4218 () Int)
(declare-fun x4645 () x10)
(declare-fun x3713 () Int)
(declare-fun x2742 () Bool)
(declare-fun x3273 () Int)
(declare-fun x1918 () Int)
(declare-fun x4732 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x1525 (x10) Int)
(declare-fun x4479 () Bool)
(declare-fun x3195 () Int)
(declare-fun x1957 () Int)
(declare-fun x1169 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x4476 () Int)
(declare-fun x794 () Int)
(declare-fun x2934 () Bool)
(declare-fun x519 () Int)
(declare-fun x4646 () Bool)
(declare-fun x4249 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x1437 () Int)
(declare-fun x4372 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x554 () Int)
(declare-fun x2006 () Int)
(declare-fun x1107 () Bool)
(declare-fun x1352 () Int)
(declare-fun x63 () Bool)
(declare-fun x1147 () Int)
(declare-fun x202 () Int)
(declare-fun x730 () Bool)
(declare-fun x4423 () Int)
(declare-fun x2109 () Bool)
(declare-fun x99 () Bool)
(declare-fun x2397 () Int)
(declare-fun x3102 () Bool)
(declare-fun x624 () Int)
(declare-fun x1703 () Bool)
(declare-fun x4708 () Bool)
(declare-fun x3148 () Int)
(declare-fun x1876 () Int)
(declare-fun x1950 () Int)
(declare-fun x2973 () Bool)
(declare-fun x4480 () Int)
(declare-fun x1641 () Bool)
(declare-fun x1469 () Int)
(declare-fun x2999 () Int)
(declare-fun x1778 () x10)
(declare-fun x1369 () Bool)
(declare-fun x4629 () Bool)
(declare-fun x4627 () Int)
(declare-fun x3302 () x10)
(declare-fun x2131 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x156 () Bool)
(declare-fun x1291 () x10)
(declare-fun x2814 () Bool)
(declare-fun x900 () Bool)
(declare-fun x1305 () Int)
(declare-fun x2611 () Int)
(declare-fun x439 () Bool)
(declare-fun x2028 () x10)
(declare-fun x3428 () Bool)
(declare-fun x3162 () Int)
(declare-fun x240 () Int)
(declare-fun x4634 () Bool)
(declare-fun x575 () x10)
(declare-fun x440 () Int)
(declare-fun x2799 () Int)
(declare-fun x3170 () Bool)
(declare-fun x80 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x67 () Int)
(declare-fun x152 () Bool)
(declare-fun x3568 () Int)
(declare-fun x3627 () Bool)
(declare-fun x1768 () Int)
(declare-fun x3902 () Bool)
(declare-fun x577 () Bool)
(declare-fun x3289 () Int)
(declare-fun x479 () Bool)
(declare-fun x3538 () Bool)
(declare-fun x3663 () Bool)
(declare-fun x517 () Bool)
(declare-fun x3747 () x10)
(declare-fun x2657 () Bool)
(declare-fun x2499 () Int)
(declare-fun x2188 () x10)
(declare-fun x2619 () Int)
(declare-fun x2643 () Bool)
(declare-fun x661 () x10)
(declare-fun x1383 () Bool)
(declare-fun x2850 () x10)
(declare-fun x776 () Bool)
(declare-fun x238 () x10)
(declare-fun x1736 () Int)
(declare-fun x1535 () Int)
(declare-fun x4255 () Bool)
(declare-fun x701 () Bool)
(declare-fun x3055 () Int)
(declare-fun x1102 () Int)
(declare-fun x1547 () Int)
(declare-fun x4260 () Bool)
(declare-fun x4561 () Int)
(declare-fun x2659 () Bool)
(declare-fun x9 () Int)
(declare-fun x2751 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x2912 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x4268 () x10)
(declare-fun x4650 () Int)
(declare-fun x2391 () Int)
(declare-fun x1168 () Bool)
(declare-fun x4393 () Int)
(declare-fun x4044 () Bool)
(declare-fun x715 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x1567 () x10)
(declare-fun x1360 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x1240 () Int)
(declare-fun x2258 (x10) Int)
(declare-fun x3290 () Int)
(declare-fun x4348 () Bool)
(declare-fun x206 () Bool)
(declare-fun x2790 () Int)
(declare-fun x1889 () Bool)
(declare-fun x3683 () Int)
(declare-fun x743 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x1941 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x1309 () Int)
(declare-fun x4149 () Int)
(declare-fun x3718 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x4516 () Bool)
(declare-fun x3398 () Int)
(declare-fun x3734 () Bool)
(declare-fun x3896 () x10)
(declare-fun x2981 () x10)
(declare-fun x4816 () Bool)
(declare-fun x177 () Bool)
(declare-fun x880 () Bool)
(declare-fun x4770 () Bool)
(declare-fun x4494 () Int)
(declare-fun x88 () Int)
(declare-fun x3899 () x10)
(declare-fun x3875 () Int)
(declare-fun x1312 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x3189 () Bool)
(declare-fun x1129 () Int)
(declare-fun x217 () x10)
(declare-fun x4776 () Bool)
(declare-fun x129 () x10)
(declare-fun x1611 () Int)
(declare-fun x3842 () x10)
(declare-fun x4470 () Int)
(declare-fun x2146 () Bool)
(declare-fun x4224 () Int)
(declare-fun x3668 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x3245 () Int)
(declare-fun x1051 () Bool)
(declare-fun x4681 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x921 () Bool)
(declare-fun x2443 () Int)
(declare-fun x2543 () Int)
(declare-fun x1397 () Bool)
(declare-fun x3454 () Bool)
(declare-fun x796 () Bool)
(declare-fun x3786 () Int)
(declare-fun x645 () Int)
(declare-fun x1806 () Int)
(declare-fun x4617 () Bool)
(declare-fun x3140 () x10)
(declare-fun x2204 () Int)
(declare-fun x4585 () Int)
(declare-fun x1344 () Bool)
(declare-fun x1443 (Int) Int)
(declare-fun x1833 () Int)
(declare-fun x136 () Bool)
(declare-fun x1870 () Int)
(declare-fun x2494 () Bool)
(declare-fun x4426 () Bool)
(declare-fun x501 () x10)
(declare-fun x4864 () Int)
(declare-fun x225 () x10)
(declare-fun x1026 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x2133 () Int)
(declare-fun x2242 () Int)
(declare-fun x4764 () Bool)
(declare-fun x4428 () x10)
(declare-fun x2809 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x462 () Bool)
(declare-fun x4767 () Int)
(declare-fun x1144 () Int)
(declare-fun x3824 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x4897 () Int)
(declare-fun x1706 () Bool)
(declare-fun x2051 () Int)
(declare-fun x1831 () Bool)
(declare-fun x3001 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x4208 (x10) Int)
(declare-fun x2379 () Bool)
(declare-fun x758 () Int)
(declare-fun x4157 () Int)
(declare-fun x725 (x10) Int)
(declare-fun x3741 () x10)
(declare-fun x188 () Bool)
(declare-fun x881 () Bool)
(declare-fun x3265 () Int)
(declare-fun x1448 (x10) Int)
(declare-fun x1340 () Bool)
(declare-fun x311 () Bool)
(declare-fun x4314 () Int)
(declare-fun x4680 () Bool)
(declare-fun x4282 () x10)
(declare-fun x2609 () x10)
(declare-fun x92 () Int)
(declare-fun x717 () Bool)
(declare-fun x759 () Int)
(declare-fun x3075 () Bool)
(declare-fun x2827 () Bool)
(declare-fun x681 () Bool)
(declare-fun x676 () Int)
(declare-fun x696 () Bool)
(declare-fun x2796 () Int)
(declare-fun x569 () x10)
(declare-fun x3249 () x10)
(declare-fun x2356 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x3586 () Bool)
(declare-fun x324 () Bool)
(declare-fun x898 () x10)
(declare-fun x4235 () Int)
(declare-fun x1554 () Bool)
(declare-fun x2389 () Int)
(declare-fun x1614 () x10)
(declare-fun x1866 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x4357 () Int)
(declare-fun x288 () x10)
(declare-fun x3341 () Int)
(declare-fun x438 () Bool)
(declare-fun x4335 () Int)
(declare-fun x1823 () Bool)
(declare-fun x3412 () Bool)
(declare-fun x3143 () Int)
(declare-fun x4763 () Int)
(declare-fun x2714 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x4819 () Int)
(declare-fun x1700 () Bool)
(declare-fun x4652 () Int)
(declare-fun x3349 () Bool)
(declare-fun x3278 () Int)
(declare-fun x4719 () Bool)
(declare-fun x589 () Bool)
(declare-fun x322 () Int)
(declare-fun x1760 () Int)
(declare-fun x1676 () Bool)
(declare-fun x3207 () Int)
(declare-fun x242 () Int)
(declare-fun x432 () Int)
(declare-fun x255 () x10)
(declare-fun x1424 () Int)
(declare-fun x2676 () Bool)
(declare-fun x4845 () Bool)
(declare-fun x720 () Bool)
(declare-fun x2140 () Int)
(declare-fun x2104 () Int)
(declare-fun x2940 () Bool)
(declare-fun x683 () Bool)
(declare-fun x415 () Int)
(declare-fun x2216 () Int)
(declare-fun x157 () Int)
(declare-fun x4298 () Int)
(declare-fun x360 () Int)
(declare-fun x4823 () Bool)
(declare-fun x558 () Int)
(declare-fun x937 () Int)
(declare-fun x301 () Bool)
(declare-fun x722 () Bool)
(declare-fun x4276 () Int)
(declare-fun x310 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x4614 () Int)
(declare-fun x733 () Bool)
(declare-fun x4581 () Int)
(declare-fun x4194 () Int)
(declare-fun x1633 () Bool)
(declare-fun x337 () Bool)
(declare-fun x2836 () Int)
(declare-fun x1356 () Int)
(declare-fun x2034 () Int)
(declare-fun x4215 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x56 () Int)
(declare-fun x4199 () Int)
(declare-fun x222 () Int)
(declare-fun x467 () x10)
(declare-fun x2623 () Int)
(declare-fun x689 () Int)
(declare-fun x870 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x4067 () Bool)
(declare-fun x2725 () Int)
(declare-fun x774 () Int)
(declare-fun x2872 () Bool)
(declare-fun x1497 () x10)
(declare-fun x1597 () Int)
(declare-fun x489 () Int)
(declare-fun x4739 () x10)
(declare-fun x2363 () Bool)
(declare-fun x3429 () Int)
(declare-fun x283 () Int)
(declare-fun x350 () Bool)
(declare-fun x434 () Bool)
(declare-fun x3964 () Bool)
(declare-fun x433 () Bool)
(declare-fun x868 () x10)
(declare-fun x3135 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x1627 () Int)
(declare-fun x2914 () Bool)
(declare-fun x4166 () Bool)
(declare-fun x2920 () Int)
(declare-fun x3094 () Int)
(declare-fun x2415 () Int)
(declare-fun x708 () Int)
(declare-fun x497 () Int)
(declare-fun x1020 () Int)
(declare-fun x3355 () x10)
(declare-fun x770 () Bool)
(declare-fun x3083 () Int)
(declare-fun x2735 () Bool)
(declare-fun x4251 () x10)
(declare-fun x3383 () x10)
(declare-fun x2874 () Bool)
(declare-fun x3821 () Bool)
(declare-fun x424 () Int)
(declare-fun x1064 () Int)
(declare-fun x2639 () Bool)
(declare-fun x2832 () Bool)
(declare-fun x3269 () x10)
(declare-fun x551 () Int)
(declare-fun x1998 () Bool)
(declare-fun x1166 () Int)
(declare-fun x2840 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x4483 () Bool)
(declare-fun x648 () Int)
(declare-fun x3090 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x2520 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x4207 () Int)
(declare-fun x3313 () Int)
(declare-fun x625 () Bool)
(declare-fun x428 () Int)
(declare-fun x4520 () Int)
(declare-fun x4633 () Int)
(declare-fun x3695 () Bool)
(declare-fun x1680 () Int)
(declare-fun x3247 () Int)
(declare-fun x1083 () Bool)
(declare-fun x3933 () Bool)
(declare-fun x3235 () x10)
(declare-fun x1705 () Int)
(declare-fun x2670 () Bool)
(declare-fun x4041 () Int)
(declare-fun x500 () Int)
(declare-fun x2427 () x10)
(declare-fun x3141 () Bool)
(declare-fun x3314 () Int)
(declare-fun x2404 () Int)
(declare-fun x3936 () Bool)
(declare-fun x4620 () Bool)
(declare-fun x3344 () Int)
(declare-fun x4644 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x777 () Bool)
(declare-fun x2696 () Int)
(declare-fun x3296 () Bool)
(declare-fun x731 () Int)
(declare-fun x1684 () Bool)
(declare-fun x130 () Int)
(declare-fun x2458 () Int)
(declare-fun x2791 (x10) Int)
(declare-fun x3916 () Bool)
(declare-fun x2919 () x10)
(declare-fun x3647 () Bool)
(declare-fun x2820 () Int)
(declare-fun x1143 () Bool)
(declare-fun x628 () Bool)
(declare-fun x3052 () Int)
(declare-fun x437 () Int)
(declare-fun x2486 () Bool)
(declare-fun x585 () Bool)
(declare-fun x3497 () Bool)
(declare-fun x4760 () Bool)
(declare-fun x4734 () Int)
(declare-fun x2061 () Int)
(declare-fun x2843 () Int)
(declare-fun x3125 () Int)
(declare-fun x896 (x10) Int)
(declare-fun x1727 () x10)
(declare-fun x2789 () Bool)
(declare-fun x2021 () Int)
(declare-fun x4165 () Int)
(declare-fun x4454 () Int)
(declare-fun x1316 () Bool)
(declare-fun x3370 () Int)
(declare-fun x3522 () Int)
(declare-fun x2268 () Bool)
(declare-fun x4239 () Int)
(declare-fun x2380 () Int)
(declare-fun x2345 () x10)
(declare-fun x3645 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x1513 () Int)
(declare-fun x2388 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x2888 () Int)
(declare-fun x4814 () Int)
(declare-fun x4294 () Bool)
(declare-fun x3076 () x10)
(declare-fun x3582 () Int)
(declare-fun x2170 () Int)
(declare-fun x2476 () x10)
(declare-fun x1134 () Bool)
(declare-fun x25 () Int)
(declare-fun x4524 () x10)
(declare-fun x3973 () Int)
(declare-fun x2540 () Int)
(declare-fun x745 () Int)
(declare-fun x1387 () Bool)
(declare-fun x4743 () x10)
(declare-fun x4088 () Bool)
(declare-fun x3024 () Bool)
(declare-fun x2172 () x10)
(declare-fun x4214 () Int)
(declare-fun x1968 () Bool)
(declare-fun x2629 () Bool)
(declare-fun x1056 () Int)
(declare-fun x2224 () Bool)
(declare-fun x2805 () Bool)
(declare-fun x4461 (Int) Int)
(declare-fun x642 () Bool)
(declare-fun x2385 () Int)
(declare-fun x653 () Bool)
(declare-fun x2772 () Int)
(declare-fun x3920 () Bool)
(declare-fun x4024 () Bool)
(declare-fun x3693 () x10)
(declare-fun x4032 () Int)
(declare-fun x2689 () Bool)
(declare-fun x3371 () x10)
(declare-fun x2982 () Bool)
(declare-fun x4622 () Bool)
(declare-fun x4924 () Bool)
(declare-fun x938 () Int)
(declare-fun x3876 () Bool)
(declare-fun x4603 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x4560 () Bool)
(declare-fun x2408 () Int)
(declare-fun x3549 () Int)
(declare-fun x1297 () Bool)
(declare-fun x3232 (Int Int) Int)
(declare-fun x2527 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x4097 () Bool)
(declare-fun x4488 () x10)
(declare-fun x757 () Int)
(declare-fun x1869 () Int)
(declare-fun x3180 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x372 () Bool)
(declare-fun x4529 () x10)
(declare-fun x1355 () Int)
(declare-fun x1364 () Int)
(declare-fun x3761 () Bool)
(declare-fun x2158 () Int)
(declare-fun x1371 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x4337 () Int)
(declare-fun x2698 () Bool)
(declare-fun x3443 () Bool)
(declare-fun x1333 () x10)
(declare-fun x4752 () x10)
(declare-fun x3402 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x4363 () Int)
(declare-fun x3228 () Bool)
(declare-fun x3830 () x10)
(declare-fun x4626 () Bool)
(declare-fun x103 () Int)
(declare-fun x4266 () x10)
(declare-fun x3390 () Int)
(declare-fun x1558 () Int)
(declare-fun x2037 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x3470 () Bool)
(declare-fun x2218 () Int)
(declare-fun x3903 () Bool)
(declare-fun x2550 () Bool)
(declare-fun x3120 () Int)
(declare-fun x312 () x10)
(declare-fun x33 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x4862 () Int)
(declare-fun x4667 () Int)
(declare-fun x2236 () Bool)
(declare-fun x4325 () Bool)
(declare-fun x841 () x10)
(declare-fun x1296 () x10)
(declare-fun x4618 () Bool)
(declare-fun x3038 () Int)
(declare-fun x3487 () Int)
(declare-fun x621 () Bool)
(declare-fun x4342 () Bool)
(declare-fun x482 () x10)
(declare-fun x3961 () Int)
(declare-fun x1615 () Bool)
(declare-fun x933 () Bool)
(declare-fun x797 () Bool)
(declare-fun x4736 () Int)
(declare-fun x1052 () Int)
(declare-fun x2431 () Int)
(declare-fun x4452 () Bool)
(declare-fun x4397 () x10)
(declare-fun x3416 () Int)
(declare-fun x452 () Bool)
(declare-fun x3680 () Bool)
(declare-fun x2754 () Int)
(declare-fun x4778 () Int)
(declare-fun x1466 () Int)
(declare-fun x2803 (Int) Int)
(declare-fun x2542 () Int)
(declare-fun x19 () Bool)
(declare-fun x4914 () Int)
(declare-fun x760 () Bool)
(declare-fun x2307 () x10)
(declare-fun x71 () Int)
(declare-fun x3616 () Bool)
(declare-fun x2164 () Int)
(declare-fun x2817 () Int)
(declare-fun x3004 () x10)
(declare-fun x2727 () Bool)
(declare-fun x3022 () Int)
(declare-fun x607 () Bool)
(declare-fun x4497 () Int)
(declare-fun x4507 () Bool)
(declare-fun x916 () Bool)
(declare-fun x3836 () Int)
(declare-fun x2038 () Bool)
(declare-fun x254 () Int)
(declare-fun x4145 () x10)
(declare-fun x4619 () Bool)
(declare-fun x3381 () Int)
(declare-fun x1647 () Int)
(declare-fun x610 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x1783 () Int)
(declare-fun x623 () Int)
(declare-fun x1262 () Bool)
(declare-fun x4493 () Int)
(declare-fun x2130 () Bool)
(declare-fun x909 () x10)
(declare-fun x2736 () Bool)
(declare-fun x1843 () Int)
(declare-fun x630 () x10)
(declare-fun x4458 () x10)
(declare-fun x929 () Int)
(declare-fun x2785 (Int) Int)
(declare-fun x2428 () Bool)
(declare-fun x3097 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x213 () Int)
(declare-fun x4137 () Bool)
(declare-fun x557 () Int)
(declare-fun x778 () x10)
(declare-fun x3553 () x10)
(declare-fun x657 () x10)
(declare-fun x204 () Int)
(declare-fun x168 () Int)
(declare-fun x1529 () Int)
(declare-fun x885 () x10)
(declare-fun x612 () Int)
(declare-fun x1368 () x10)
(declare-fun x1130 () Int)
(declare-fun x4726 () Bool)
(declare-fun x4628 () Int)
(declare-fun x1365 () Int)
(declare-fun x2761 () Bool)
(declare-fun x2328 () x10)
(declare-fun x4278 () Int)
(declare-fun x1405 () Bool)
(declare-fun x875 () Bool)
(declare-fun x3509 () Int)
(declare-fun x3831 () Bool)
(declare-fun x215 () Bool)
(declare-fun x2656 () Int)
(declare-fun x3027 () Bool)
(declare-fun x410 () Int)
(declare-fun x4118 () Int)
(declare-fun x3255 () Int)
(declare-fun x2245 () Bool)
(declare-fun x4604 () Int)
(declare-fun x2237 () x10)
(declare-fun x1572 () Bool)
(declare-fun x1445 () x10)
(declare-fun x716 () x10)
(declare-fun x2877 () Int)
(declare-fun x4054 () x10)
(declare-fun x3840 () Bool)
(declare-fun x363 () x10)
(declare-fun x3441 () Bool)
(declare-fun x112 () Bool)
(declare-fun x2849 () Bool)
(declare-fun x4070 () Int)
(declare-fun x3030 () Bool)
(declare-fun x2147 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x3898 () Int)
(declare-fun x4839 () Int)
(declare-fun x2161 () Int)
(declare-fun x3580 () Bool)
(declare-fun x4907 () Int)
(declare-fun x4612 () x10)
(declare-fun x1989 () Int)
(declare-fun x968 () Int)
(declare-fun x4675 () Int)
(declare-fun x2654 () Bool)
(declare-fun x599 () Bool)
(declare-fun x1681 () Int)
(declare-fun x3368 () Int)
(declare-fun x2304 () Int)
(declare-fun x2024 () Int)
(declare-fun x148 () Bool)
(declare-fun x69 (Int Int) Int)
(declare-fun x2929 () Bool)
(declare-fun x444 () Bool)
(declare-fun x3919 () Int)
(declare-fun x2513 () Bool)
(declare-fun x3804 () Bool)
(declare-fun x3164 () Int)
(declare-fun x1845 () Int)
(declare-fun x3587 () Bool)
(declare-fun x4300 () Bool)
(declare-fun x2933 () Bool)
(declare-fun x837 () Int)
(declare-fun x4671 () Int)
(declare-fun x12 () x10)
(declare-fun x3774 () Int)
(declare-fun x349 () Bool)
(declare-fun x2633 () Int)
(declare-fun x2273 () Bool)
(declare-fun x4286 () Bool)
(declare-fun x1927 (Int) Int)
(declare-fun x3826 () Int)
(declare-fun x1764 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x3312 () Int)
(declare-fun x2346 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x4304 () Int)
(declare-fun x3864 () Bool)
(declare-fun x2348 () Int)
(declare-fun x1062 () Bool)
(declare-fun x1711 () x10)
(declare-fun x1997 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x3618 () Int)
(declare-fun x2430 () Int)
(declare-fun x315 () Int)
(declare-fun x3838 () Bool)
(declare-fun x4332 () Bool)
(declare-fun x1885 () Int)
(declare-fun x4911 () Bool)
(declare-fun x4891 () Int)
(declare-fun x4443 () Int)
(declare-fun x751 () Bool)
(declare-fun x4309 () Bool)
(declare-fun x2437 () Int)
(declare-fun x1302 () Int)
(declare-fun x4020 () Bool)
(declare-fun x639 () Int)
(declare-fun x664 () Int)
(declare-fun x1003 () Bool)
(declare-fun x2904 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x709 () x10)
(declare-fun x306 () Int)
(declare-fun x1314 () Int)
(declare-fun x3942 () Int)
(declare-fun x1549 () Int)
(declare-fun x2046 () Bool)
(declare-fun x4659 () Int)
(declare-fun x2801 () Bool)
(declare-fun x959 () Int)
(declare-fun x2740 () Int)
(declare-fun x2067 () Int)
(declare-fun x4803 () Bool)
(declare-fun x2549 () Bool)
(declare-fun x2900 () Int)
(declare-fun x835 () x10)
(declare-fun x1836 (x10) Int)
(declare-fun x2398 () Int)
(declare-fun x3025 () Bool)
(declare-fun x4027 () Bool)
(declare-fun x4649 () Bool)
(declare-fun x803 () Bool)
(declare-fun x1657 () Int)
(declare-fun x4180 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x2764 () x10)
(declare-fun x250 () Bool)
(declare-fun x756 () Bool)
(declare-fun x4720 () Bool)
(declare-fun x572 () Bool)
(declare-fun x3508 () x10)
(declare-fun x763 () Int)
(declare-fun x308 () Bool)
(declare-fun x2284 () Bool)
(declare-fun x3617 () Bool)
(declare-fun x4121 () Int)
(declare-fun x1581 (x10) Int)
(declare-fun x3685 () Int)
(declare-fun x2533 () Bool)
(declare-fun x555 () Int)
(declare-fun x4103 () Int)
(declare-fun x963 () Int)
(declare-fun x1203 () x10)
(declare-fun x3334 () Bool)
(declare-fun x4704 () x10)
(declare-fun x477 () Bool)
(declare-fun x2473 () Int)
(declare-fun x28 () Int)
(declare-fun x229 () Bool)
(declare-fun x4404 () Bool)
(declare-fun x3775 () Int)
(declare-fun x1754 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x3904 () Int)
(declare-fun x1762 () Int)
(declare-fun x2206 () Int)
(declare-fun x3755 () x10)
(declare-fun x2526 () Bool)
(declare-fun x4663 () Bool)
(declare-fun x3620 () Bool)
(declare-fun x3890 () Int)
(declare-fun x2682 () x10)
(declare-fun x947 () Int)
(declare-fun x3746 () x10)
(declare-fun x4085 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x4477 () Bool)
(declare-fun x2187 () Int)
(declare-fun x4151 () Int)
(declare-fun x1863 () Bool)
(declare-fun x4057 (x10) Int)
(declare-fun x2482 () Int)
(declare-fun x1873 () Int)
(declare-fun x2969 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x1060 () Int)
(declare-fun x2181 () Bool)
(declare-fun x3304 () x10)
(declare-fun x4238 () x10)
(declare-fun x4833 () Int)
(declare-fun x1865 () Int)
(declare-fun x2047 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x2688 () Int)
(declare-fun x2152 () Int)
(declare-fun x2103 () Int)
(declare-fun x74 () Int)
(declare-fun x405 () Int)
(declare-fun x4400 () Bool)
(declare-fun x4615 () Bool)
(declare-fun x3184 () Bool)
(declare-fun x83 () Bool)
(declare-fun x4698 () Bool)
(declare-fun x199 () Int)
(declare-fun x1546 () Int)
(declare-fun x1682 () Int)
(declare-fun x2115 () Int)
(declare-fun x4244 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x2750 () Bool)
(declare-fun x456 () x10)
(declare-fun x3742 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x3131 () Int)
(declare-fun x4382 () Bool)
(declare-fun x2365 () Int)
(declare-fun x1177 () Bool)
(declare-fun x4159 () Int)
(declare-fun x540 () Bool)
(declare-fun x1112 () x10)
(declare-fun x893 () Bool)
(declare-fun x4621 () Bool)
(declare-fun x3881 () Bool)
(declare-fun x4844 () Bool)
(declare-fun x2422 () Int)
(declare-fun x3910 () Int)
(declare-fun x768 () Bool)
(declare-fun x4660 (x10) Int)
(declare-fun x4543 () Int)
(declare-fun x3496 () Bool)
(declare-fun x4247 () Int)
(declare-fun x2781 () Bool)
(declare-fun x1411 () Int)
(declare-fun x4501 () Int)
(declare-fun x4107 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x3031 () Bool)
(declare-fun x3818 () Bool)
(declare-fun x4169 () Int)
(declare-fun x3198 () Int)
(declare-fun x3745 () Int)
(declare-fun x1280 () Bool)
(declare-fun x4901 () x10)
(declare-fun x1132 (x10) Int)
(declare-fun x2793 () x10)
(declare-fun x4575 () Int)
(declare-fun x4818 () Int)
(declare-fun x3019 () Bool)
(declare-fun x4173 () Int)
(declare-fun x54 () Bool)
(declare-fun x2501 () Bool)
(declare-fun x3307 () Int)
(declare-fun x1225 () x10)
(declare-fun x1607 () Bool)
(declare-fun x4094 () x10)
(declare-fun x1078 () Bool)
(declare-fun x3453 () Int)
(declare-fun x294 () x10)
(declare-fun x4750 () Int)
(declare-fun x4104 (Int) Int)
(declare-fun x1152 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x24 () Int)
(declare-fun x3233 () Bool)
(declare-fun x2574 () Int)
(declare-fun x3338 () Bool)
(declare-fun x465 () Int)
(declare-fun x1031 () Int)
(declare-fun x1822 () x10)
(declare-fun x2265 () Bool)
(declare-fun x4898 () Int)
(declare-fun x3791 () Int)
(declare-fun x1162 () Bool)
(declare-fun x1458 () Int)
(declare-fun x1835 () Bool)
(declare-fun x2731 () Int)
(declare-fun x823 () Bool)
(declare-fun x4733 () Bool)
(declare-fun x4632 () Int)
(declare-fun x805 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x3447 () x10)
(declare-fun x4469 () x10)
(declare-fun x1422 () Bool)
(declare-fun x3569 () Bool)
(declare-fun x4279 () Bool)
(declare-fun x3374 () x10)
(declare-fun x4542 () Int)
(declare-fun x4599 () Int)
(declare-fun x3045 () Bool)
(declare-fun x3446 () Int)
(declare-fun x4874 () Bool)
(declare-fun x4504 () Bool)
(declare-fun x249 () x10)
(declare-fun x2652 () x10)
(declare-fun x1913 () Int)
(declare-fun x2734 () Int)
(declare-fun x2730 () Int)
(declare-fun x3113 () Bool)
(declare-fun x2253 () Int)
(declare-fun x4412 () Int)
(declare-fun x3168 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x2001 () x10)
(declare-fun x3118 () Bool)
(declare-fun x2546 () Int)
(declare-fun x2554 () Int)
(declare-fun x532 () Int)
(declare-fun x3328 () Bool)
(declare-fun x287 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x4365 () Int)
(declare-fun x326 () x10)
(declare-fun x2074 () x10)
(declare-fun x899 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x1524 () Int)
(declare-fun x2851 () Bool)
(declare-fun x4019 () Bool)
(declare-fun x1872 () Int)
(declare-fun x205 (x10) Int)
(declare-fun x1504 () Bool)
(declare-fun x3733 () Bool)
(declare-fun x37 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x631 () Int)
(declare-fun x4573 () Bool)
(declare-fun x3815 () Bool)
(declare-fun x2193 () Bool)
(declare-fun x3360 () Bool)
(declare-fun x2537 () Int)
(declare-fun x1922 () Bool)
(declare-fun x297 () Bool)
(declare-fun x1155 (x10) Int)
(declare-fun x454 () Int)
(declare-fun x1283 () Bool)
(declare-fun x4399 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x3145 () Int)
(declare-fun x3147 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x4832 () Bool)
(declare-fun x4427 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x2522 () Int)
(declare-fun x2835 () Bool)
(declare-fun x3951 () x10)
(declare-fun x266 () Int)
(declare-fun x3732 () Int)
(declare-fun x989 () Int)
(declare-fun x3987 () Int)
(declare-fun x2111 () Bool)
(declare-fun x4918 () Bool)
(declare-fun x2693 () Int)
(declare-fun x924 () Int)
(declare-fun x3717 () Int)
(declare-fun x3071 () Bool)
(declare-fun x2524 () Bool)
(declare-fun x470 () x10)
(declare-fun x3751 () Bool)
(declare-fun x684 () Int)
(declare-fun x2197 () x10)
(declare-fun x4917 () Bool)
(declare-fun x2720 () x10)
(declare-fun x2815 () Int)
(declare-fun x4098 () Bool)
(declare-fun x342 () Bool)
(declare-fun x3335 () Bool)
(declare-fun x1353 () x10)
(declare-fun x1028 () Bool)
(declare-fun x219 () Int)
(declare-fun x4731 () Bool)
(declare-fun x4017 () Bool)
(declare-fun x4179 () Bool)
(declare-fun x3540 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x1282 () Int)
(declare-fun x4865 () x10)
(declare-fun x1794 () Bool)
(declare-fun x2927 () Bool)
(declare-fun x2916 () Int)
(declare-fun x3731 () Bool)
(declare-fun x3950 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x2238 () Int)
(declare-fun x150 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x371 () Bool)
(declare-fun x3283 () Int)
(declare-fun x2861 () Int)
(declare-fun x808 () Int)
(declare-fun x2153 () Int)
(declare-fun x2174 () Int)
(declare-fun x1970 () Bool)
(declare-fun x2598 () x10)
(declare-fun x904 () Bool)
(declare-fun x2539 () Bool)
(declare-fun x1800 () Int)
(declare-fun x1645 () x10)
(declare-fun x2269 () Int)
(declare-fun x4766 () Int)
(declare-fun x3863 () Bool)
(declare-fun x3085 () Bool)
(declare-fun x711 () x10)
(declare-fun x105 () Bool)
(declare-fun x4562 () Bool)
(declare-fun x2027 () Int)
(declare-fun x1767 () Int)
(declare-fun x4679 () Int)
(declare-fun x690 () x10)
(declare-fun x316 () Int)
(declare-fun x3546 () Int)
(declare-fun x4505 () Int)
(declare-fun x3937 () Int)
(declare-fun x4322 () Int)
(declare-fun x4788 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x4485 () x10)
(declare-fun x2733 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x4466 () Bool)
(declare-fun x3982 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x1007 (x10) Int)
(declare-fun x4536 () x10)
(declare-fun x3279 () Int)
(declare-fun x727 () Int)
(declare-fun x2023 () Bool)
(declare-fun x3626 () Int)
(declare-fun x3109 () Bool)
(declare-fun x4273 () Bool)
(declare-fun x2088 () Int)
(declare-fun x1732 () Int)
(declare-fun x1765 () Int)
(declare-fun x481 () Int)
(declare-fun x4003 () Bool)
(declare-fun x3407 () Bool)
(declare-fun x4712 () Int)
(declare-fun x292 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x4126 () Bool)
(declare-fun x3495 () Int)
(declare-fun x1394 () Int)
(declare-fun x2495 () x10)
(declare-fun x2997 () Bool)
(declare-fun x3364 () Bool)
(declare-fun x1846 () Int)
(declare-fun x2207 () Bool)
(declare-fun x3995 () Bool)
(declare-fun x3633 () Int)
(declare-fun x965 () Int)
(declare-fun x2241 () Int)
(declare-fun x926 () Int)
(declare-fun x1180 () Int)
(declare-fun x1769 () Int)
(declare-fun x2071 () Bool)
(declare-fun x2033 () x10)
(declare-fun x4523 (Int) Int)
(declare-fun x783 () x10)
(declare-fun x3128 () Int)
(declare-fun x2470 () Int)
(declare-fun x2421 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x4762 () Bool)
(declare-fun x1318 () Int)
(declare-fun x1976 () Bool)
(declare-fun x332 () x10)
(declare-fun x1821 () x10)
(declare-fun x4014 () x10)
(declare-fun x1893 () x10)
(declare-fun x4148 () Int)
(declare-fun x3413 () Int)
(declare-fun x2854 () x10)
(declare-fun x3653 (x10) Int)
(declare-fun x792 () Int)
(declare-fun x4398 () Bool)
(declare-fun x457 () x10)
(declare-fun x4598 () Bool)
(declare-fun x775 () Bool)
(declare-fun x3894 () Bool)
(declare-fun x1594 () x10)
(declare-fun x1639 () Bool)
(declare-fun x2794 () Int)
(declare-fun x4755 () Bool)
(declare-fun x2759 () Int)
(declare-fun x208 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x4853 () Int)
(declare-fun x3959 () Bool)
(declare-fun x3471 () Bool)
(declare-fun x1909 () x10)
(declare-fun x97 () Bool)
(declare-fun x484 () x10)
(declare-fun x4455 () Int)
(declare-fun x951 () Int)
(declare-fun x4915 () Int)
(declare-fun x4792 () Bool)
(declare-fun x4881 () Bool)
(declare-fun x4729 () Bool)
(declare-fun x992 () Bool)
(declare-fun x4449 () Bool)
(declare-fun x3893 () Bool)
(declare-fun x1959 () Int)
(declare-fun x3434 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x917 () Int)
(declare-fun x604 () Int)
(declare-fun x427 () Bool)
(declare-fun x1224 () Int)
(declare-fun x1958 () Bool)
(declare-fun x278 () Int)
(declare-fun x4258 () Bool)
(declare-fun x2400 () Int)
(declare-fun x2990 (x10) Int)
(declare-fun x1773 () Bool)
(declare-fun x2392 () Int)
(declare-fun x1588 () Bool)
(declare-fun x2060 () Int)
(declare-fun x2996 () Int)
(declare-fun x4912 () Bool)
(declare-fun x1042 () Int)
(declare-fun x2358 () Bool)
(declare-fun x2749 () Int)
(declare-fun x782 () Bool)
(declare-fun x276 () Bool)
(declare-fun x724 () Bool)
(declare-fun x2336 () Int)
(declare-fun x3056 () Bool)
(declare-fun x2149 () x10)
(declare-fun x3736 () Bool)
(declare-fun x679 () Bool)
(declare-fun x4639 () Bool)
(declare-fun x787 () Int)
(declare-fun x2645 () Bool)
(declare-fun x906 () Bool)
(declare-fun x4265 () Bool)
(declare-fun x704 () Bool)
(declare-fun x4682 (x10) Int)
(declare-fun x3563 () Int)
(declare-fun x3309 () Int)
(declare-fun x41 () Int)
(declare-fun x1076 () x10)
(declare-fun x4222 () Bool)
(declare-fun x2926 () Int)
(declare-fun x3272 () Bool)
(declare-fun x4172 () x10)
(declare-fun x1188 () x10)
(declare-fun x1114 () Int)
(declare-fun x3667 () x10)
(declare-fun x1929 () Int)
(declare-fun x2452 () Int)
(declare-fun x749 () Int)
(declare-fun x430 () Bool)
(declare-fun x1455 () Int)
(declare-fun x43 () Int)
(declare-fun x269 () Int)
(declare-fun x4336 () Bool)
(declare-fun x195 () Bool)
(declare-fun x96 () Bool)
(declare-fun x4353 () Int)
(declare-fun x3828 () Int)
(declare-fun x4055 () x10)
(declare-fun x1176 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x4338 () Int)
(declare-fun x3516 (x10) Int)
(declare-fun x2983 () Bool)
(declare-fun x3658 () Bool)
(declare-fun x587 () Int)
(declare-fun x1702 () Int)
(declare-fun x1027 () Bool)
(declare-fun x2544 () Bool)
(declare-fun x4737 () Int)
(declare-fun x2184 () Bool)
(declare-fun x1404 () Int)
(declare-fun x3160 () Int)
(declare-fun x2816 () x10)
(declare-fun x957 () Bool)
(declare-fun x4798 () Int)
(declare-fun x1357 () Int)
(declare-fun x3805 () x10)
(declare-fun x3847 () Bool)
(declare-fun x4602 () Int)
(declare-fun x3648 () Int)
(declare-fun x1059 () Bool)
(declare-fun x626 () Int)
(declare-fun x548 () Bool)
(declare-fun x4200 () Bool)
(declare-fun x4489 () Bool)
(declare-fun x755 () Bool)
(declare-fun x3801 () Bool)
(declare-fun x4147 () x10)
(declare-fun x1696 () Bool)
(declare-fun x1910 () x10)
(declare-fun x2095 () Bool)
(declare-fun x945 () Bool)
(declare-fun x179 () Bool)
(declare-fun x3316 () Int)
(declare-fun x2565 () Bool)
(declare-fun x652 () Bool)
(declare-fun x155 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x2319 () Int)
(declare-fun x1672 () Bool)
(declare-fun x1779 (Int) Int)
(declare-fun x513 () Bool)
(declare-fun x4808 () Bool)
(declare-fun x3591 () x10)
(declare-fun x4849 () Int)
(declare-fun x4368 (x10) Int)
(declare-fun x3848 () Bool)
(declare-fun x3018 () Int)
(declare-fun x1586 () Int)
(declare-fun x4637 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x3878 () Int)
(declare-fun x737 () Int)
(declare-fun x598 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x2044 () Int)
(declare-fun x4721 () x10)
(declare-fun x3541 () Int)
(declare-fun x2155 () Bool)
(declare-fun x3945 () Bool)
(declare-fun x3211 () Int)
(declare-fun x2026 () Bool)
(declare-fun x3524 () Bool)
(declare-fun x3845 () Int)
(declare-fun x1984 () Int)
(declare-fun x4414 () Int)
(declare-fun x4110 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x4115 () Bool)
(declare-fun x414 () Int)
(declare-fun x4779 () Bool)
(declare-fun x3771 () Int)
(declare-fun x4295 () x10)
(declare-fun x3792 () Bool)
(declare-fun x827 () Bool)
(declare-fun x4031 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x4201 () Bool)
(declare-fun x4735 (x10) Int)
(declare-fun x2127 () Int)
(declare-fun x931 () Bool)
(declare-fun x4705 () Bool)
(declare-fun x2930 () Int)
(declare-fun x4748 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x503 () Int)
(declare-fun x3326 () Int)
(declare-fun x936 (Int) Int)
(declare-fun x4625 () Int)
(declare-fun x3098 () Bool)
(declare-fun x398 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x714 () Int)
(declare-fun x4185 () Int)
(declare-fun x3301 () Bool)
(declare-fun x4356 () Bool)
(declare-fun x143 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x4715 () Bool)
(declare-fun x4059 () Int)
(declare-fun x1079 () Int)
(declare-fun x1494 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x3320 () Bool)
(declare-fun x2016 () x10)
(declare-fun x3010 () Int)
(declare-fun x1159 () Bool)
(declare-fun x3797 () Bool)
(declare-fun x1014 () Int)
(declare-fun x4492 () Int)
(declare-fun x1194 () Int)
(declare-fun x4528 () Int)
(declare-fun x2384 () Int)
(declare-fun x2401 () Int)
(declare-fun x4566 () Bool)
(declare-fun x1238 () Int)
(declare-fun x2753 () Int)
(declare-fun x4176 () x10)
(declare-fun x110 () x10)
(declare-fun x2229 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x3684 () x10)
(declare-fun x104 () Bool)
(declare-fun x4416 () Int)
(declare-fun x535 () x10)
(declare-fun x3962 () x10)
(declare-fun x3114 () Bool)
(declare-fun x3597 () Int)
(declare-fun x281 () x10)
(declare-fun x368 () Bool)
(declare-fun x2246 () Int)
(declare-fun x4821 () Int)
(declare-fun x608 () Int)
(declare-fun x3512 () Bool)
(declare-fun x4606 () Int)
(declare-fun x3709 () Bool)
(declare-fun x574 () Bool)
(declare-fun x3433 () Bool)
(declare-fun x3110 () x10)
(declare-fun x2490 () x10)
(declare-fun x2978 () Int)
(declare-fun x1746 () Int)
(declare-fun x750 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x672 () Bool)
(declare-fun x4768 () Bool)
(declare-fun x2183 () Int)
(declare-fun x1436 () Bool)
(declare-fun x55 () Bool)
(declare-fun x4442 () Int)
(declare-fun x1299 () Bool)
(declare-fun x3367 () Int)
(declare-fun x3596 () Int)
(declare-fun x2581 () Bool)
(declare-fun x627 () Bool)
(declare-fun x2807 () Bool)
(declare-fun x2479 () Int)
(declare-fun x4437 () Bool)
(declare-fun x813 () Bool)
(declare-fun x2252 () Int)
(declare-fun x2954 () Int)
(declare-fun x3474 () Int)
(declare-fun x1044 () Bool)
(declare-fun x3238 () Bool)
(declare-fun x3965 () Int)
(declare-fun x1220 () Int)
(declare-fun x3455 () Bool)
(declare-fun x298 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x3530 () Bool)
(declare-fun x4517 () Int)
(declare-fun x4269 () Int)
(declare-fun x3610 () Bool)
(declare-fun x2748 () Int)
(declare-fun x4230 () Bool)
(declare-fun x4036 () Bool)
(declare-fun x2898 () Int)
(declare-fun x1933 () Int)
(declare-fun x1103 () x10)
(declare-fun x981 () x10)
(declare-fun x2289 () Bool)
(declare-fun x408 () x10)
(declare-fun x272 () Bool)
(declare-fun x3806 () Int)
(declare-fun x26 () Bool)
(declare-fun x3188 () Int)
(declare-fun x4261 () Int)
(declare-fun x1884 () Int)
(declare-fun x3469 () Int)
(declare-fun x4385 () Int)
(declare-fun x2066 () Bool)
(declare-fun x1847 () x10)
(declare-fun x3431 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x2723 (x10) Int)
(declare-fun x2556 () Int)
(declare-fun x3424 () Bool)
(declare-fun x3130 () Bool)
(declare-fun x3889 () Bool)
(declare-fun x812 () Bool)
(declare-fun x4131 () Bool)
(declare-fun x3393 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1578 () Int)
(declare-fun x1349 () Int)
(declare-fun x927 () Bool)
(declare-fun x4647 () Int)
(declare-fun x2116 () Bool)
(declare-fun x2084 () Bool)
(declare-fun x4753 () Bool)
(declare-fun x915 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x3137 () Int)
(declare-fun x459 () Int)
(declare-fun x1954 () x10)
(declare-fun x1515 () x10)
(declare-fun x2583 () Int)
(declare-fun x2203 () Int)
(declare-fun x2862 () Int)
(declare-fun x3006 () Bool)
(declare-fun x393 () Bool)
(declare-fun x4063 () Int)
(declare-fun x492 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x1252 () x10)
(declare-fun x3182 (Int) x10)
(declare-fun x4751 () Int)
(declare-fun x586 () Int)
(declare-fun x576 () Int)
(declare-fun x231 () Bool)
(declare-fun x52 () x10)
(declare-fun x2705 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x2457 () Int)
(declare-fun x3331 () Int)
(declare-fun x2076 () Bool)
(declare-fun x2086 () x10)
(declare-fun x3379 () Int)
(declare-fun x578 () Bool)
(declare-fun x4109 () Bool)
(declare-fun x869 () Int)
(declare-fun x2368 () x10)
(declare-fun x1109 () Int)
(declare-fun x3670 () Int)
(declare-fun x1160 () Bool)
(declare-fun x382 () Bool)
(declare-fun x942 () x10)
(declare-fun x4355 () x10)
(declare-fun x3592 () Bool)
(declare-fun x3635 () Int)
(declare-fun x4167 () Int)
(declare-fun x616 () Bool)
(declare-fun x983 () x10)
(declare-fun x2712 () Bool)
(declare-fun x3872 () Bool)
(declare-fun x2065 () Int)
(declare-fun x4413 () Int)
(declare-fun x1770 () Int)
(declare-fun x1407 () Int)
(declare-fun x4841 () Int)
(declare-fun x4635 () Bool)
(declare-fun x1914 () Int)
(declare-fun x2918 () Int)
(declare-fun x3777 () Bool)
(declare-fun x4203 () Bool)
(declare-fun x296 () Int)
(declare-fun x133 () Bool)
(declare-fun x2120 () Int)
(declare-fun x3550 () Bool)
(declare-fun x48 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x3231 () Bool)
(declare-fun x2680 (x10) Int)
(declare-fun x4785 () Bool)
(declare-fun x1587 () x10)
(declare-fun x1593 () Int)
(declare-fun x1030 () Int)
(declare-fun x1105 () Int)
(declare-fun x1416 () Int)
(declare-fun x1789 () Bool)
(declare-fun x3613 () Bool)
(declare-fun x1465 () x10)
(declare-fun x3439 () Bool)
(declare-fun x3206 () Int)
(declare-fun x2907 () x10)
(declare-fun x391 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x1827 () x10)
(declare-fun x1508 () Bool)
(declare-fun x1651 () Int)
(declare-fun x3511 () Bool)
(declare-fun x2690 () Int)
(declare-fun x2887 () Int)
(declare-fun x2857 () Bool)
(declare-fun x3611 () Int)
(declare-fun x632 () Int)
(declare-fun x1153 () Bool)
(declare-fun x2859 () Bool)
(declare-fun x3823 () Int)
(declare-fun x3222 () Int)
(declare-fun x617 () Bool)
(declare-fun x878 () Bool)
(declare-fun x174 (x10) Int)
(declare-fun x1663 () Bool)
(declare-fun x1019 () Int)
(declare-fun x998 () Int)
(declare-fun x2031 () Int)
(declare-fun x4608 () x10)
(declare-fun x2992 (Int) Int)
(declare-fun x1390 () Int)
(declare-fun x3552 () Int)
(declare-fun x2952 () Bool)
(declare-fun x825 () Bool)
(declare-fun x703 () Int)
(declare-fun x2699 () Bool)
(declare-fun x2166 (x10) Int)
(declare-fun x4559 () Int)
(declare-fun x4569 () Int)
(declare-fun x1135 () Int)
(declare-fun x1359 () Int)
(declare-fun x3604 (Int) Int)
(declare-fun x781 () x10)
(declare-fun x1127 () Int)
(declare-fun x2124 () Int)
(declare-fun x3672 () Int)
(declare-fun x3857 () Bool)
(declare-fun x4168 () Int)
(declare-fun x339 () Int)
(declare-fun x4440 () x10)
(declare-fun x4004 () Bool)
(declare-fun x2382 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x2744 () Int)
(declare-fun x1649 () Bool)
(declare-fun x1584 () Int)
(declare-fun x2515 () Int)
(declare-fun x1904 () Int)
(declare-fun x2102 () Bool)
(declare-fun x852 () x10)
(declare-fun x1315 () Int)
(declare-fun x3779 () Bool)
(declare-fun x4596 () Int)
(declare-fun x4547 () Int)
(declare-fun x2876 () Int)
(declare-fun x2994 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x1113 () Int)
(declare-fun x1150 () Int)
(declare-fun x3300 () Bool)
(declare-fun x4037 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x2040 () Int)
(declare-fun x3225 () Bool)
(declare-fun x2950 () Int)
(declare-fun x2517 () Int)
(declare-fun x4597 () Int)
(declare-fun x167 () Bool)
(declare-fun x3869 () Bool)
(declare-fun x1858 () Int)
(declare-fun x1205 () Int)
(declare-fun x2083 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x4801 () Int)
(declare-fun x3829 () Int)
(declare-fun x3271 () Bool)
(declare-fun x4525 () Int)
(declare-fun x2198 () Int)
(declare-fun x3669 () Int)
(declare-fun x1810 () Bool)
(declare-fun x3882 () Bool)
(declare-fun x3376 () Bool)
(declare-fun x3230 () Int)
(declare-fun x1151 () Int)
(declare-fun x1343 () Int)
(declare-fun x3442 () Bool)
(declare-fun x44 () Int)
(declare-fun x3526 () Int)
(declare-fun x1965 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x539 () Int)
(declare-fun x2054 () Int)
(declare-fun x528 () Int)
(declare-fun x1656 () Bool)
(declare-fun x4084 () Bool)
(declare-fun x3325 () Bool)
(declare-fun x3318 () x10)
(declare-fun x1912 () Bool)
(declare-fun x809 () Bool)
(declare-fun x1653 () Int)
(declare-fun x293 () Bool)
(declare-fun x113 () Int)
(declare-fun x4123 () Int)
(declare-fun x3912 () Int)
(declare-fun x1288 () Int)
(declare-fun x1697 () Bool)
(declare-fun x1491 () Int)
(declare-fun x3787 () Bool)
(declare-fun x4571 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x3795 () Bool)
(declare-fun x223 () Bool)
(declare-fun x3122 () Bool)
(declare-fun x2624 () Bool)
(declare-fun x355 () Bool)
(declare-fun x2587 () Bool)
(declare-fun x1860 () Int)
(declare-fun x3013 () Int)
(declare-fun x3671 () Int)
(declare-fun x800 () Bool)
(declare-fun x588 () Int)
(declare-fun x1562 () Bool)
(declare-fun x4784 () x10)
(declare-fun x2938 () Int)
(declare-fun x1955 () x10)
(declare-fun x4360 () Bool)
(declare-fun x377 () Int)
(declare-fun x2324 () x10)
(declare-fun x764 () Bool)
(declare-fun x2450 () Int)
(declare-fun x472 () Bool)
(declare-fun x552 () Int)
(declare-fun x1036 () x10)
(declare-fun x550 () Bool)
(declare-fun x508 () Int)
(declare-fun x4923 () Int)
(declare-fun x602 () Int)
(declare-fun x2091 () Int)
(declare-fun x2082 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x941 () Int)
(declare-fun x1982 (x10) Int)
(declare-fun x1483 () Int)
(declare-fun x1329 () Bool)
(declare-fun x4538 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x1523 () x10)
(declare-fun x1256 () Int)
(declare-fun x3058 () Int)
(declare-fun x3867 () Bool)
(declare-fun x4140 () Bool)
(declare-fun x3726 () Bool)
(declare-fun x2602 () Int)
(declare-fun x1748 () Bool)
(declare-fun x2646 () x10)
(declare-fun x1915 () Int)
(declare-fun x1642 () Int)
(declare-fun x2891 () Int)
(declare-fun x2094 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x232 () Int)
(declare-fun x4318 () Int)
(declare-fun x1999 () Int)
(declare-fun x3754 () Int)
(declare-fun x3117 () Int)
(declare-fun x3696 () Int)
(declare-fun x1829 () Int)
(declare-fun x4124 () Int)
(declare-fun x318 () Int)
(declare-fun x2275 () Bool)
(declare-fun x4565 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x4060 () Int)
(declare-fun x1373 () x10)
(declare-fun x3873 () Bool)
(declare-fun x2892 () Bool)
(declare-fun x4919 () x10)
(declare-fun x1222 () Bool)
(declare-fun x4352 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x3989 () Int)
(declare-fun x263 () Bool)
(declare-fun x411 () Int)
(declare-fun x4212 () Int)
(declare-fun x504 () Int)
(declare-fun x2045 (x10) Int)
(declare-fun x4579 () Bool)
(declare-fun x2683 () Int)
(declare-fun x2561 () Int)
(declare-fun x3957 () Bool)
(declare-fun x1881 () Int)
(declare-fun x4804 () Int)
(declare-fun x2514 () Int)
(declare-fun x2497 () Int)
(declare-fun x4920 () Int)
(declare-fun x523 () Int)
(declare-fun x3854 () Bool)
(declare-fun x267 () Bool)
(declare-fun x556 () Bool)
(declare-fun x741 () Int)
(declare-fun x1279 () Int)
(declare-fun x3177 () Int)
(declare-fun x1500 () Int)
(declare-fun x336 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x4327 () Int)
(declare-fun x2635 () Bool)
(declare-fun x1336 () Int)
(declare-fun x3202 () Int)
(declare-fun x2558 () Int)
(declare-fun x2117 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x4046 () Bool)
(declare-fun x275 () Bool)
(declare-fun x3609 () Bool)
(declare-fun x435 () Bool)
(declare-fun x4341 () Bool)
(declare-fun x4379 () x10)
(declare-fun x270 () Int)
(declare-fun x412 () Bool)
(declare-fun x2776 () Int)
(declare-fun x2230 () Int)
(declare-fun x3788 () Int)
(declare-fun x1308 () Int)
(declare-fun x2596 () Bool)
(declare-fun x3129 () Bool)
(declare-fun x495 () Bool)
(declare-fun x2648 () Int)
(declare-fun x2738 () Int)
(declare-fun x4287 () Int)
(declare-fun x1221 () Int)
(declare-fun x1853 () Bool)
(declare-fun x2855 () x10)
(declare-fun x2677 () Bool)
(declare-fun x2559 () Bool)
(declare-fun x3972 () Bool)
(declare-fun x164 () Bool)
(declare-fun x3760 () Int)
(declare-fun x979 () Bool)
(declare-fun x4495 () x10)
(declare-fun x4418 () Int)
(declare-fun x3494 () Int)
(declare-fun x2283 () Int)
(declare-fun x2908 () Int)
(declare-fun x1859 () Int)
(declare-fun x1023 () Bool)
(declare-fun x2644 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x3660 () Int)
(declare-fun x4550 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x651 () Int)
(declare-fun x1490 () Int)
(declare-fun x4521 () Int)
(declare-fun x3126 () Int)
(declare-fun x3502 () Int)
(declare-fun x3861 () Int)
(declare-fun x4281 () Bool)
(declare-fun x4552 () x10)
(declare-fun x565 () Int)
(declare-fun x4354 () Int)
(declare-fun x2453 () Int)
(declare-fun x3598 () Int)
(declare-fun x328 () Int)
(declare-fun x4016 () Int)
(declare-fun x2882 () Int)
(declare-fun x190 () Int)
(declare-fun x862 (x10) Int)
(declare-fun x2673 () x10)
(declare-fun x87 () x10)
(declare-fun x4857 () Int)
(declare-fun x4026 () Int)
(declare-fun x1825 () Bool)
(declare-fun x3415 () Int)
(declare-fun x3274 () Int)
(declare-fun x2617 () Int)
(declare-fun x4310 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x2766 () Int)
(declare-fun x418 () x10)
(declare-fun x464 () Bool)
(declare-fun x3979 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x2276 () Int)
(declare-fun x2718 () Int)
(declare-fun x3835 () Int)
(declare-fun x1341 () Bool)
(declare-fun x3324 () Bool)
(declare-fun x4539 () Int)
(declare-fun x1857 () Bool)
(declare-fun x619 (x10) Int)
(declare-fun x939 () Bool)
(declare-fun x636 () x10)
(declare-fun x4508 () Bool)
(declare-fun x753 () Int)
(declare-fun x4042 () Int)
(declare-fun x400 () Bool)
(declare-fun x872 () Bool)
(declare-fun x3096 () Bool)
(declare-fun x4837 () Bool)
(declare-fun x3476 () Bool)
(declare-fun x3154 () Int)
(declare-fun x2462 () Int)
(declare-fun x1553 () Bool)
(declare-fun x3077 () Int)
(declare-fun x3832 () Bool)
(declare-fun x4080 () Int)
(declare-fun x1018 () x10)
(declare-fun x4870 () Bool)
(declare-fun x1818 () Int)
(declare-fun x3895 () Bool)
(declare-fun x816 () Bool)
(declare-fun x2078 () Int)
(declare-fun x1447 () Bool)
(declare-fun x4769 () Bool)
(declare-fun x4856 () Int)
(declare-fun x1186 () Int)
(declare-fun x2444 () x10)
(declare-fun x4843 () Bool)
(declare-fun x353 () x10)
(declare-fun x1877 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x562 () Int)
(declare-fun x3477 () Bool)
(declare-fun x3923 () Bool)
(declare-fun x4434 () Int)
(declare-fun x2975 () Bool)
(declare-fun x976 () Int)
(declare-fun x1017 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x1650 (Int) Int)
(declare-fun x1034 () Int)
(declare-fun x1655 () Bool)
(declare-fun x4444 () Int)
(declare-fun x2621 () Bool)
(declare-fun x4177 () Int)
(declare-fun x3093 () Bool)
(declare-fun x3 () x10)
(declare-fun x3967 () x10)
(declare-fun x1531 (x10) Int)
(declare-fun x3925 () Bool)
(declare-fun x4570 () Bool)
(declare-fun x864 () Bool)
(declare-fun x3666 () Int)
(declare-fun x3585 () Int)
(declare-fun x2467 () x10)
(declare-fun x4441 () Bool)
(declare-fun x389 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x3940 () Bool)
(declare-fun x354 () Int)
(declare-fun x443 () x10)
(declare-fun x3005 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x3817 () Int)
(declare-fun x4876 () Int)
(declare-fun x1217 () Bool)
(declare-fun x2967 () Bool)
(declare-fun x3946 () Bool)
(declare-fun x1724 (x10) Int)
(declare-fun x4887 () Int)
(declare-fun x2732 () x10)
(declare-fun x4895 () Int)
(declare-fun x515 () Bool)
(declare-fun x4154 () Int)
(declare-fun x3948 () Bool)
(declare-fun x1550 () Int)
(declare-fun x4791 () Bool)
(declare-fun x4710 () Bool)
(declare-fun x4184 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x4048 () Bool)
(declare-fun x568 () Bool)
(declare-fun x453 () Int)
(declare-fun x1145 () Bool)
(declare-fun x974 () Int)
(declare-fun x3317 () Bool)
(declare-fun x4546 () Int)
(declare-fun x2637 () Int)
(declare-fun x742 () Bool)
(declare-fun x4090 () Int)
(declare-fun x1536 () Bool)
(declare-fun x4074 () Int)
(declare-fun x1631 () Bool)
(declare-fun x3575 () Bool)
(declare-fun x1991 () Int)
(declare-fun x582 () Int)
(declare-fun x476 () Bool)
(declare-fun x1146 () Int)
(declare-fun x858 () Int)
(declare-fun x126 () x10)
(declare-fun x1038 () Int)
(declare-fun x4773 () x10)
(declare-fun x3003 () Int)
(declare-fun x1861 () Int)
(declare-fun x860 () Int)
(declare-fun x2626 () Bool)
(declare-fun x901 () Bool)
(declare-fun x1377 () Int)
(declare-fun x4043 () Bool)
(declare-fun x4364 () Int)
(declare-fun x3983 () Bool)
(declare-fun x406 () Bool)
(declare-fun x4307 () Bool)
(declare-fun x3819 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x4783 () Bool)
(declare-fun x2592 () Bool)
(declare-fun x874 () Bool)
(declare-fun x2831 () Bool)
(declare-fun x4723 () Int)
(declare-fun x1890 () Int)
(declare-fun x243 () Int)
(declare-fun x2636 () Bool)
(declare-fun x1856 () Int)
(declare-fun x1579 () Int)
(declare-fun x4745 () x10)
(declare-fun x4765 () Bool)
(declare-fun x3062 () Int)
(declare-fun x995 () Bool)
(declare-fun x723 () Int)
(declare-fun x2905 (Int) Int)
(declare-fun x3264 () Bool)
(declare-fun x4794 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x2516 () x10)
(declare-fun x75 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x1749 () Int)
(declare-fun x4605 () Bool)
(declare-fun x4346 () Int)
(declare-fun x4852 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x581 () Bool)
(declare-fun x1956 () Int)
(declare-fun x4896 () Int)
(declare-fun x134 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x973 () Bool)
(declare-fun x3520 () Bool)
(declare-fun x402 () Int)
(declare-fun x3305 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x1185 () Int)
(declare-fun x2599 () x10)
(declare-fun x3769 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x3132 () x10)
(declare-fun x3248 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x4306 () Int)
(declare-fun x3879 () Bool)
(declare-fun x4030 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x1054 () Int)
(declare-fun x3772 () Bool)
(declare-fun x3292 () x10)
(declare-fun x5 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x1905 () Int)
(declare-fun x1268 () x10)
(declare-fun x3173 () Int)
(declare-fun x4237 () Bool)
(declare-fun x496 () x10)
(declare-fun x1290 () Bool)
(declare-fun x3163 () Int)
(declare-fun x2962 () x10)
(declare-fun x1388 () x10)
(declare-fun x1981 () Bool)
(declare-fun x3614 () Int)
(declare-fun x2770 () Int)
(declare-fun x1801 () Int)
(declare-fun x984 () Int)
(declare-fun x4685 () Int)
(declare-fun x1227 () Bool)
(declare-fun x235 () Bool)
(declare-fun x1511 () x10)
(declare-fun x100 () Bool)
(declare-fun x2842 () Bool)
(declare-fun x2359 () Bool)
(declare-fun x1055 () Int)
(declare-fun x978 () Bool)
(declare-fun x3036 () Int)
(declare-fun x3827 () Int)
(declare-fun x2826 () x10)
(declare-fun x4850 () Bool)
(declare-fun x4697 () Int)
(declare-fun x4083 () Int)
(declare-fun x1131 () Int)
(declare-fun x1695 () Bool)
(declare-fun x378 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x1683 () Int)
(declare-fun x3710 () Int)
(declare-fun x2811 () x10)
(declare-fun x392 () Bool)
(declare-fun x302 () Bool)
(declare-fun x4009 () Bool)
(declare-fun x333 () Int)
(declare-fun x1640 () Bool)
(declare-fun x3664 () Int)
(declare-fun x2313 () x10)
(declare-fun x4339 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x4143 () Int)
(declare-fun x4045 () Int)
(declare-fun x791 () Int)
(declare-fun x761 () Bool)
(declare-fun x387 () Bool)
(declare-fun x2274 () Int)
(declare-fun x4616 () Int)
(declare-fun x3623 () Int)
(declare-fun x2192 () Bool)
(declare-fun x4078 () Bool)
(declare-fun x3706 () Bool)
(declare-fun x2868 () Bool)
(declare-fun x3340 () Bool)
(declare-fun x1198 () Int)
(declare-fun x1745 () Bool)
(declare-fun x2788 (Int) Int)
(declare-fun x3205 () Bool)
(declare-fun x4117 () Int)
(declare-fun x3017 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x124 () Bool)
(declare-fun x531 () Int)
(declare-fun x1723 () Bool)
(define-fun x1324 ((x10 x10) (x2092 Int)) x10 (ite ((_ is x1742) x10) (x1742 (x4187 x10) (+ (x3399 x10) x2092)) (ite ((_ is x1013) x10) (x1013 (x3224 x10) (x1010 x10) (+ (x3099 x10) x2092)) (x3187 (+ x2092 (x4648 x10))))))
(define-fun x227 ((x1012 Int)) Int (ite (and (< x1012 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1012)) x1012 (- x1012 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2214 ((x1012 Int)) Int (ite (and (>= x1012 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1012 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1012) x1012))
(define-fun x2185 ((x1591 Int)) Bool (and (< x1591 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1591 0)))
(define-fun x490 ((x1591 Int)) Bool (and (= (x3232 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1591) x1591) (= (x3232 x1591 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1591)))
(define-fun x667 ((x1591 Int)) Bool (and (= 0 (x3232 x1591 0)) (= (x3232 0 x1591) 0)))
(define-fun x3810 ((x1591 Int)) Bool (= (x3232 x1591 x1591) x1591))
(define-fun x3909 ((x1591 Int)) Bool (and (x667 x1591) (x3810 x1591) (x490 x1591)))
(define-fun x707 ((x1591 Int) (x3254 Int)) Bool (= (x3232 x1591 x3254) (x3232 x3254 x1591)))
(define-fun x1648 ((x1591 Int) (x3254 Int)) Bool (and (>= (x3232 x1591 x3254) 0) (=> (<= 0 x3254) (<= (x3232 x1591 x3254) x3254)) (=> (>= x1591 0) (<= (x3232 x1591 x3254) x1591))))
(define-fun x4678 ((x1591 Int) (x3254 Int)) Bool (and (x707 x1591 x3254) (x1648 x1591 x3254)))
(define-fun x3256 ((x1591 Int)) Bool (= (mod x1591 26959946667150639794667015087019630673637144422540572481103610249216) (x3232 x1591 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1990 ((x1591 Int)) Bool (and (x3256 x1591) (x4678 x1591 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x2572 ((x1591 Int)) Bool (= (mod x1591 1461501637330902918203684832716283019655932542976) (x3232 x1591 1461501637330902918203684832716283019655932542975)))
(define-fun x2575 ((x1591 Int)) Bool (and (x2572 x1591) (x4678 x1591 1461501637330902918203684832716283019655932542975)))
(define-fun x330 ((x1591 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x468 x1591 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x468 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1591))))
(define-fun x4371 ((x1591 Int)) Bool (and (= x1591 (x468 x1591 0)) (= (x468 0 x1591) x1591)))
(define-fun x1832 ((x1591 Int)) Bool (= (x468 x1591 x1591) x1591))
(define-fun x516 ((x1591 Int)) Bool (and (x1832 x1591) (x330 x1591) (x4371 x1591)))
(define-fun x2808 ((x1591 Int) (x3254 Int)) Bool (= (x468 x3254 x1591) (x468 x1591 x3254)))
(define-fun x1350 ((x1591 Int) (x3254 Int)) Bool (and (=> (>= x3254 0) (>= (x468 x1591 x3254) x3254)) (=> (<= 0 x1591) (<= x1591 (x468 x1591 x3254))) (<= (x468 x1591 x3254) (+ x3254 x1591))))
(define-fun x2212 ((x1591 Int) (x3254 Int)) Bool (and (x1350 x1591 x3254) (x2808 x1591 x3254)))
(define-fun x2080 ((x1591 Int)) Bool (= (+ (mod x1591 32) (x3232 x1591 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x1591 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x613 ((x1591 Int)) Bool (and (x2080 x1591) (x4678 x1591 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x4264 ((x1616 Int)) Int (ite (= 128 x1616) (ite x4861 1 0) (x1443 x1616)))
(define-fun x4916 ((x1616 Int)) Int (ite (= x1616 160) (ite x3863 1 0) (x4264 x1616)))
(define-fun x1737 ((x1616 Int)) Int (ite (= 192 x1616) (ite x4400 1 0) (x4916 x1616)))
(define-fun x3315 ((x1616 Int)) Int (ite (= 224 x1616) (ite x856 1 0) (x1737 x1616)))
(define-fun x4081 ((x1616 Int)) Int (ite (= 256 x1616) (ite x2176 1 0) (x3315 x1616)))
(define-fun x2402 ((x1616 Int)) Int (ite (= 288 x1616) (ite x2420 1 0) (x4081 x1616)))
(define-fun x3008 ((x1616 Int)) Int (ite (= 320 x1616) (ite x1371 1 0) (x2402 x1616)))
(define-fun x3638 ((x1616 Int)) Int (ite (= x1616 352) (ite x3857 1 0) (x3008 x1616)))
(define-fun x2070 ((x1616 Int)) Int (ite (= x1616 420) x3131 (x3638 x1616)))
(define-fun x2177 ((x1616 Int)) Int (ite (= 384 x1616) 36 (x2070 x1616)))
(define-fun x2474 ((x1616 Int)) Int (ite (= 416 x1616) x4838 (x2177 x1616)))
(define-fun x3282 ((x1616 x10)) Int (ite (= x1616 x159) x111 (x1132 x1616)))
(define-fun x987 ((x1616 x10)) Int (ite x574 (x1132 x1616) (x3282 x1616)))
(define-fun x3473 ((x1616 x10)) Int (ite (= x1616 x847) 0 (x987 x1616)))
(define-fun x866 ((x1616 x10)) Int (ite x1538 (x3473 x1616) (x987 x1616)))
(define-fun x1486 ((x1616 x10)) Int (ite x761 (x866 x1616) (ite x4824 (x866 x1616) (ite x2311 (x1132 x1616) (ite x770 (x1132 x1616) (ite x2318 (x1132 x1616) (x866 x1616)))))))
(define-fun x1317 ((x1616 x10)) Int (ite (= x2132 x1616) x3744 (x1155 x1616)))
(define-fun x1891 ((x1616 x10)) Int (ite x4006 (x1155 x1616) (x1317 x1616)))
(define-fun x2858 ((x1616 x10)) Int (ite (= x2821 x1616) 0 (x1891 x1616)))
(define-fun x1519 ((x1616 x10)) Int (ite x3812 (x2858 x1616) (x1891 x1616)))
(define-fun x1925 ((x1616 x10)) Int (ite x761 (x1519 x1616) (ite x4824 (x1891 x1616) (ite x2311 (x1155 x1616) (ite x770 (x1155 x1616) (ite x2318 (x1155 x1616) (x1519 x1616)))))))
(define-fun x1380 ((x1616 Int)) Int (ite (= 128 x1616) x3765 (x4467 x1616)))
(define-fun x1163 ((x1616 Int)) Int (ite (= x1616 160) x3456 (x1380 x1616)))
(define-fun x4653 ((x1616 x10)) Int (ite (= x1616 x541) 0 (x873 x1616)))
(define-fun x362 ((x1616 x10)) Int (ite (= x541 x1616) x700 (x873 x1616)))
(define-fun x2951 ((x1616 x10)) Int (ite x4384 (x4653 x1616) (x362 x1616)))
(define-fun x4522 ((x1616 Int)) Int (ite (= x1616 452) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x2474 x1616)))
(define-fun x2333 ((x1616 Int)) Int (ite (= x1616 452) x3960 (x4522 x1616)))
(define-fun x1734 ((x1616 Int)) Int (ite (= x1616 452) x1772 (x4522 x1616)))
(define-fun x1110 ((x1616 Int)) Int (ite (= x1616 452) x4424 (x4522 x1616)))
(define-fun x176 ((x1616 Int)) Int (ite x4039 (x2333 x1616) (ite x4326 (x1734 x1616) (x1110 x1616))))
(define-fun x1219 ((x1616 Int)) Int (ite x2647 (x176 x1616) (x2474 x1616)))
(define-fun x670 ((x1616 Int)) Int (ite (= x218 x1616) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1219 x1616)))
(define-fun x4526 ((x1616 Int)) Int (ite (= x4493 x1616) x3683 (x670 x1616)))
(define-fun x1223 ((x1616 Int)) Int (ite (= x1616 x4198) x322 (x4526 x1616)))
(define-fun x697 ((x1616 Int)) Int (ite (= x1616 x4376) x2269 (x1223 x1616)))
(define-fun x3752 ((x1616 Int)) Int (ite (= x1616 0) 1 (x697 x1616)))
(define-fun x4643 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x697 x1616)))
(define-fun x658 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x697 x1616)))
(define-fun x62 ((x1616 Int)) Int (ite (= x1616 0) 1 (x697 x1616)))
(define-fun x1215 ((x1616 Int)) Int (ite x915 (ite x2284 (x697 x1616) (x3752 x1616)) (ite x3838 (ite x1838 (x697 x1616) (x4643 x1616)) (ite x2094 (ite x1852 (x697 x1616) (x658 x1616)) (ite x2022 (x697 x1616) (x62 x1616))))))
(define-fun x3853 ((x1616 Int)) Int (ite (= x116 x1616) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x1215 x1616)))
(define-fun x4498 ((x1616 Int)) Int (ite (= x1616 x116) x3285 (x3853 x1616)))
(define-fun x2209 ((x1616 Int)) Int (ite (= x116 x1616) x3133 (x3853 x1616)))
(define-fun x2228 ((x1616 Int)) Int (ite (= x1616 x116) x266 (x3853 x1616)))
(define-fun x2614 ((x1616 Int)) Int (ite x1470 (x4498 x1616) (ite x1723 (x2209 x1616) (x2228 x1616))))
(define-fun x3966 ((x1616 Int)) Int (ite (= x1616 x3942) x3754 (x2614 x1616)))
(define-fun x1841 ((x1616 Int)) Int (ite x838 (x2614 x1616) (x3966 x1616)))
(define-fun x4301 ((x1616 Int)) Int (ite (= x1616 x4761) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x1841 x1616)))
(define-fun x2439 ((x1616 Int)) Int (ite (= x1616 0) x3285 (x2803 x1616)))
(define-fun x3210 ((x1616 Int)) Int (ite (= x1616 x4761) x3285 (x4301 x1616)))
(define-fun x985 ((x1616 Int)) Int (ite (= x1616 0) x3133 (x2803 x1616)))
(define-fun x833 ((x1616 Int)) Int (ite (= x4761 x1616) x3133 (x4301 x1616)))
(define-fun x1022 ((x1616 Int)) Int (ite (= x1616 0) x266 (x2803 x1616)))
(define-fun x201 ((x1616 Int)) Int (ite (= x4761 x1616) x266 (x4301 x1616)))
(define-fun x1228 ((x1616 x10)) Int (ite (= x1373 x1616) x4416 (x1448 x1616)))
(define-fun x2942 ((x1616 x10)) Int (ite x3506 (x1448 x1616) (ite x4084 (x1448 x1616) (x1228 x1616))))
(define-fun x544 ((x1616 Int)) Int (ite x2736 (x3210 x1616) (ite x861 (x833 x1616) (x201 x1616))))
(define-fun x2777 ((x1616 Int)) Int (ite (= x3083 x1616) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x544 x1616)))
(define-fun x3212 ((x1616 Int)) Int (ite (= x4821 x1616) x3502 (x2777 x1616)))
(define-fun x3043 ((x1616 Int)) Int (ite (= x1616 x4864) x4692 (x3212 x1616)))
(define-fun x2429 ((x1616 Int)) Int (ite (= x2744 x1616) x1751 (x3043 x1616)))
(define-fun x70 ((x1616 Int)) Int (ite (and (>= x1616 x3083) (> (+ 0 x3083) x1616)) (x1650 (+ (- x1616 x3083) 0)) (x2429 x1616)))
(define-fun x2042 ((x1616 Int)) Int (ite x2890 (x544 x1616) (x70 x1616)))
(define-fun x4406 ((x1616 Int)) Int (ite (= x1616 x3083) x2721 (x2042 x1616)))
(define-fun x2205 ((x1616 Int)) Int (ite (= x4747 x1616) x4847 (x4406 x1616)))
(define-fun x1045 ((x1616 Int)) Int (ite x4114 (x2205 x1616) (x544 x1616)))
(define-fun x2436 ((x1616 Int)) Int (ite x3506 (x1841 x1616) (ite x4024 (x1045 x1616) (x1841 x1616))))
(define-fun x1747 ((x1616 x10)) Int (ite (= x1616 x1327) x555 (x2791 x1616)))
(define-fun x198 ((x1616 Int)) Int (ite (= x1616 x2954) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x2436 x1616)))
(define-fun x40 ((x1616 Int)) Int (ite (= x196 x1616) x322 (x198 x1616)))
(define-fun x3377 ((x1616 Int)) Int (ite (= 0 x1616) x2534 (x2992 x1616)))
(define-fun x2285 ((x1616 Int)) Int (ite (= x1616 x2954) x2534 (x40 x1616)))
(define-fun x4330 ((x1616 Int)) Int (ite (= x1616 0) x1547 (x2992 x1616)))
(define-fun x2341 ((x1616 Int)) Int (ite (= x2954 x1616) x1547 (x40 x1616)))
(define-fun x3064 ((x1616 Int)) Int (ite (= 0 x1616) x2136 (x2992 x1616)))
(define-fun x4153 ((x1616 Int)) Int (ite (= x1616 x2954) x2136 (x40 x1616)))
(define-fun x4025 ((x1616 Int)) Int (ite x2225 (ite x1710 (x40 x1616) (x2285 x1616)) (ite x3988 (ite x2193 (x40 x1616) (x2341 x1616)) (ite x3184 (x40 x1616) (x4153 x1616)))))
(define-fun x1292 ((x1616 Int)) Int (ite (= x1616 x335) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x4025 x1616)))
(define-fun x3484 ((x1616 Int)) Int (ite (= x1616 x1833) x3131 (x1292 x1616)))
(define-fun x2810 ((x1616 Int)) Int (ite (= x1616 x4007) x721 (x3484 x1616)))
(define-fun x3606 ((x1616 Int)) Int (ite (= x1616 0) 1 (x2810 x1616)))
(define-fun x1158 ((x1616 Int)) Int (ite x3815 (x2810 x1616) (x3606 x1616)))
(define-fun x4347 ((x1616 Int)) Int (ite (= x1616 x335) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x1158 x1616)))
(define-fun x3528 ((x1616 Int)) Int (ite (= x2471 x1616) x721 (x4347 x1616)))
(define-fun x1671 ((x1616 Int)) Int (ite (= x335 x1616) 0 (x3528 x1616)))
(define-fun x1303 ((x1616 Int)) Int (ite (= x1616 x335) 0 (x3528 x1616)))
(define-fun x2449 ((x1616 Int)) Int (ite (= x335 x1616) 0 (x3528 x1616)))
(define-fun x538 ((x1616 Int)) Int (ite x2903 (ite x927 (x3528 x1616) (x1671 x1616)) (ite x3404 (ite x956 (x3528 x1616) (x1303 x1616)) (ite x4624 (x3528 x1616) (x2449 x1616)))))
(define-fun x1409 ((x1616 Int)) Int (ite (= x1616 x335) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x4025 x1616)))
(define-fun x4038 ((x1616 Int)) Int (ite (= x1616 x3649) x721 (x1409 x1616)))
(define-fun x344 ((x1616 Int)) Int (ite (and (<= x335 x1616) (> (+ 0 x335) x1616)) (x486 (+ (- x1616 x335) 0)) (x4038 x1616)))
(define-fun x2056 ((x1616 Int)) Int (ite (= x335 x1616) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x344 x1616)))
(define-fun x2921 ((x1616 Int)) Int (ite (= x335 x1616) x4532 (x2056 x1616)))
(define-fun x2299 ((x1616 Int)) Int (ite x4888 (x2056 x1616) (x2921 x1616)))
(define-fun x3319 ((x1616 Int)) Int (ite (= x1616 x335) x3694 (x2056 x1616)))
(define-fun x237 ((x1616 Int)) Int (ite x2552 (x2056 x1616) (x3319 x1616)))
(define-fun x2507 ((x1616 Int)) Int (ite (= x1616 x335) x2248 (x2056 x1616)))
(define-fun x2179 ((x1616 Int)) Int (ite x1684 (x2056 x1616) (x2507 x1616)))
(define-fun x2678 ((x1616 Int)) Int (ite x2789 (x2299 x1616) (ite x3214 (x237 x1616) (x2179 x1616))))
(define-fun x3913 ((x1616 Int)) Int (ite x4382 (x4025 x1616) (ite x1342 (x538 x1616) (x2678 x1616))))
(define-fun x4091 ((x1616 Int)) Int (ite (= x808 x1616) x1915 (x3913 x1616)))
(define-fun x89 ((x1616 Int)) Int (ite (= x67 x1616) x3154 (x4091 x1616)))
(define-fun x3871 ((x1616 Int)) Int (ite x4006 (x2436 x1616) (x89 x1616)))
(define-fun x3994 ((x1616 x10)) Int (ite (= x1616 x2444) x2133 (x4735 x1616)))
(define-fun x3057 ((x1616 x10)) Int (ite (= x1616 x4094) x1485 (x3994 x1616)))
(define-fun x1156 ((x1616 x10)) Int (ite x2050 (x3057 x1616) (ite x3807 (x3994 x1616) (ite x3867 (x4735 x1616) (ite x2624 (x4735 x1616) (ite x4482 (x4735 x1616) (ite x449 (x4735 x1616) (ite x2545 (x3994 x1616) (ite x3991 (x3057 x1616) (x4735 x1616))))))))))
(define-fun x4846 ((x1616 x10)) Int (ite x915 (ite x2284 (x1156 x1616) (x3057 x1616)) (x4735 x1616)))
(define-fun x1509 ((x1616 x10)) Int (ite (= x3684 x1616) x2738 (x4846 x1616)))
(define-fun x3053 ((x1616 x10)) Int (ite (= x4608 x1616) x1749 (x1509 x1616)))
(define-fun x175 ((x1616 x10)) Int (ite x1967 (x3053 x1616) (ite x2220 (x1509 x1616) (ite x3772 (x4846 x1616) (ite x1360 (x4846 x1616) (ite x957 (x4846 x1616) (ite x1391 (x4846 x1616) (ite x1025 (x1509 x1616) (ite x1544 (x3053 x1616) (x4846 x1616))))))))))
(define-fun x4774 ((x1616 x10)) Int (ite x2037 (ite x2445 (x175 x1616) (x3053 x1616)) (x4846 x1616)))
(define-fun x4913 ((x1616 x10)) Int (ite x4867 (x4774 x1616) (ite x4221 (x4846 x1616) (ite x4348 (x4846 x1616) (ite x1735 (x4846 x1616) (ite x3985 (x4774 x1616) (x4846 x1616)))))))
(define-fun x4577 ((x1616 x10)) Int (ite x927 (x4913 x1616) (x4774 x1616)))
(define-fun x2395 ((x1616 x10)) Int (ite (= x1616 x2001) x3636 (x4846 x1616)))
(define-fun x4725 ((x1616 x10)) Int (ite (= x1616 x3461) x576 (x2395 x1616)))
(define-fun x3016 ((x1616 x10)) Int (ite x2082 (x4725 x1616) (ite x720 (x2395 x1616) (ite x4746 (x4846 x1616) (ite x2655 (x4846 x1616) (ite x877 (x4846 x1616) (ite x4909 (x4846 x1616) (ite x317 (x2395 x1616) (ite x1289 (x4725 x1616) (x4846 x1616))))))))))
(define-fun x2711 ((x1616 x10)) Int (ite x1399 (ite x4718 (x3016 x1616) (x4725 x1616)) (x4846 x1616)))
(define-fun x4383 ((x1616 x10)) Int (ite x1697 (x2711 x1616) (ite x3009 (x4846 x1616) (ite x4665 (x4846 x1616) (ite x2084 (x4846 x1616) (ite x1633 (x2711 x1616) (x4846 x1616)))))))
(define-fun x2970 ((x1616 x10)) Int (ite x956 (x4383 x1616) (x2711 x1616)))
(define-fun x3021 ((x1616 x10)) Int (ite (= x1616 x1555) x3314 (x4846 x1616)))
(define-fun x3112 ((x1616 x10)) Int (ite (= x659 x1616) x202 (x3021 x1616)))
(define-fun x564 ((x1616 x10)) Int (ite x1229 (x3112 x1616) (ite x3039 (x3021 x1616) (ite x2129 (x4846 x1616) (ite x1516 (x4846 x1616) (ite x1454 (x4846 x1616) (ite x2698 (x4846 x1616) (ite x1851 (x3021 x1616) (ite x1583 (x3112 x1616) (x4846 x1616))))))))))
(define-fun x1792 ((x1616 x10)) Int (ite x3496 (ite x775 (x564 x1616) (x3112 x1616)) (x4846 x1616)))
(define-fun x1973 ((x1616 x10)) Int (ite x4260 (x1792 x1616) (ite x1217 (x4846 x1616) (ite x292 (x4846 x1616) (ite x2924 (x4846 x1616) (ite x4373 (x1792 x1616) (x4846 x1616)))))))
(define-fun x4209 ((x1616 x10)) Int (ite x4624 (x1973 x1616) (x1792 x1616)))
(define-fun x4669 ((x1616 x10)) Int (ite x2903 (x4577 x1616) (ite x3404 (x2970 x1616) (x4209 x1616))))
(define-fun x4630 ((x1616 x10)) Int (ite (= x1616 x180) x4338 (x4846 x1616)))
(define-fun x1777 ((x1616 x10)) Int (ite (= x2149 x1616) x533 (x4630 x1616)))
(define-fun x982 ((x1616 x10)) Int (ite x2501 (x1777 x1616) (ite x1759 (x4630 x1616) (ite x2608 (x4846 x1616) (ite x3431 (x4846 x1616) (ite x840 (x4846 x1616) (ite x1098 (x4846 x1616) (ite x809 (x4630 x1616) (ite x4409 (x1777 x1616) (x4846 x1616))))))))))
(define-fun x638 ((x1616 x10)) Int (ite x1605 (ite x1332 (x982 x1616) (x1777 x1616)) (x4846 x1616)))
(define-fun x2360 ((x1616 x10)) Int (ite x843 (x638 x1616) (ite x3927 (x4846 x1616) (ite x4617 (x4846 x1616) (ite x890 (x638 x1616) (x4846 x1616))))))
(define-fun x2485 ((x1616 x10)) Int (ite x4888 (x2360 x1616) (x638 x1616)))
(define-fun x426 ((x1616 x10)) Int (ite (= x1616 x2010) x4534 (x4846 x1616)))
(define-fun x596 ((x1616 x10)) Int (ite (= x3628 x1616) x39 (x426 x1616)))
(define-fun x2272 ((x1616 x10)) Int (ite x768 (x596 x1616) (ite x301 (x426 x1616) (ite x4621 (x4846 x1616) (ite x1375 (x4846 x1616) (ite x1620 (x4846 x1616) (ite x4518 (x4846 x1616) (ite x3423 (x426 x1616) (ite x2243 (x596 x1616) (x4846 x1616))))))))))
(define-fun x2007 ((x1616 x10)) Int (ite x3259 (ite x3238 (x2272 x1616) (x596 x1616)) (x4846 x1616)))
(define-fun x2477 ((x1616 x10)) Int (ite x4340 (x2007 x1616) (ite x1976 (x4846 x1616) (ite x816 (x4846 x1616) (ite x3695 (x2007 x1616) (x4846 x1616))))))
(define-fun x1418 ((x1616 x10)) Int (ite x2552 (x2477 x1616) (x2007 x1616)))
(define-fun x2412 ((x1616 x10)) Int (ite (= x2196 x1616) x1860 (x4846 x1616)))
(define-fun x3457 ((x1616 x10)) Int (ite (= x1616 x217) x376 (x2412 x1616)))
(define-fun x4551 ((x1616 x10)) Int (ite x4656 (x3457 x1616) (ite x3902 (x2412 x1616) (ite x3742 (x4846 x1616) (ite x1115 (x4846 x1616) (ite x3914 (x4846 x1616) (ite x1992 (x4846 x1616) (ite x2366 (x2412 x1616) (ite x3569 (x3457 x1616) (x4846 x1616))))))))))
(define-fun x2383 ((x1616 x10)) Int (ite x2102 (ite x878 (x4551 x1616) (x3457 x1616)) (x4846 x1616)))
(define-fun x3841 ((x1616 x10)) Int (ite x796 (x2383 x1616) (ite x3824 (x4846 x1616) (ite x4502 (x4846 x1616) (ite x2910 (x2383 x1616) (x4846 x1616))))))
(define-fun x18 ((x1616 x10)) Int (ite x1684 (x3841 x1616) (x2383 x1616)))
(define-fun x845 ((x1616 x10)) Int (ite x2789 (x2485 x1616) (ite x3214 (x1418 x1616) (x18 x1616))))
(define-fun x1452 ((x1616 x10)) Int (ite x1342 (x4669 x1616) (x845 x1616)))
(define-fun x2591 ((x1616 x10)) Int (ite x4006 (x4846 x1616) (ite x4382 (x4846 x1616) (x1452 x1616))))
(define-fun x990 ((x1616 x10)) Int (ite (= x1616 (x3182 x322)) x3192 (x1972 x1616)))
(define-fun x3049 ((x1616 x10)) Int (ite (= x1616 (x3182 x4903)) x1034 (x990 x1616)))
(define-fun x529 ((x1616 x10)) Int (ite (= (x3182 x4903) x1616) x2370 (x3049 x1616)))
(define-fun x2160 ((x1616 x10)) Int (ite (= (x3182 x322) x1616) x741 (x529 x1616)))
(define-fun x1053 ((x1616 x10)) Int (ite x239 (x3049 x1616) (x2160 x1616)))
(define-fun x73 ((x1616 x10)) Int (ite x1342 (x1972 x1616) (x1053 x1616)))
(define-fun x1574 ((x1616 x10)) Int (ite x4006 (x1972 x1616) (ite x4382 (x1972 x1616) (x73 x1616))))
(define-fun x4120 ((x1616 x10)) Int (ite (= x1616 x1523) x1377 (x3194 x1616)))
(define-fun x1888 ((x1616 x10)) Int (ite x4634 (x3194 x1616) (ite x2778 (x3194 x1616) (ite x2566 (x3194 x1616) (ite x1177 (x3194 x1616) (ite x2147 (x4120 x1616) (x3194 x1616)))))))
(define-fun x261 ((x1616 x10)) Int (ite (= x1616 x3318) x2187 (x4120 x1616)))
(define-fun x258 ((x1616 x10)) Int (ite x915 (x3194 x1616) (ite x3838 (x3194 x1616) (ite x2094 (x3194 x1616) (ite x2022 (x1888 x1616) (x261 x1616))))))
(define-fun x220 ((x1616 x10)) Int (ite (= x1616 x3508) x3381 (x258 x1616)))
(define-fun x4312 ((x1616 x10)) Int (ite x1853 (x258 x1616) (ite x1966 (x258 x1616) (ite x4411 (x258 x1616) (ite x1207 (x258 x1616) (ite x3111 (x220 x1616) (x258 x1616)))))))
(define-fun x2019 ((x1616 x10)) Int (ite (= x3755 x1616) x3808 (x220 x1616)))
(define-fun x2674 ((x1616 x10)) Int (ite x2037 (x258 x1616) (ite x2057 (x258 x1616) (ite x4255 (x258 x1616) (ite x3414 (x4312 x1616) (x2019 x1616))))))
(define-fun x1261 ((x1616 x10)) Int (ite x4867 (x2674 x1616) (ite x4221 (x258 x1616) (ite x4348 (x258 x1616) (ite x1735 (x258 x1616) (ite x3985 (x2674 x1616) (x258 x1616)))))))
(define-fun x1487 ((x1616 x10)) Int (ite x927 (x1261 x1616) (x2674 x1616)))
(define-fun x4077 ((x1616 x10)) Int (ite (= x1616 x3741) x3725 (x258 x1616)))
(define-fun x3000 ((x1616 x10)) Int (ite x2535 (x258 x1616) (ite x1006 (x258 x1616) (ite x4563 (x258 x1616) (ite x1441 (x258 x1616) (ite x897 (x4077 x1616) (x258 x1616)))))))
(define-fun x361 ((x1616 x10)) Int (ite (= x3719 x1616) x3660 (x4077 x1616)))
(define-fun x2018 ((x1616 x10)) Int (ite x1399 (x258 x1616) (ite x208 (x258 x1616) (ite x3920 (x258 x1616) (ite x3645 (x3000 x1616) (x361 x1616))))))
(define-fun x3712 ((x1616 x10)) Int (ite x1697 (x2018 x1616) (ite x3009 (x258 x1616) (ite x4665 (x258 x1616) (ite x2084 (x258 x1616) (ite x1633 (x2018 x1616) (x258 x1616)))))))
(define-fun x147 ((x1616 x10)) Int (ite x956 (x3712 x1616) (x2018 x1616)))
(define-fun x3918 ((x1616 x10)) Int (ite (= x1616 x484) x3178 (x258 x1616)))
(define-fun x3435 ((x1616 x10)) Int (ite x303 (x258 x1616) (ite x1709 (x258 x1616) (ite x143 (x258 x1616) (ite x3031 (x258 x1616) (ite x1065 (x3918 x1616) (x258 x1616)))))))
(define-fun x4802 ((x1616 x10)) Int (ite (= x1616 x4014) x248 (x3918 x1616)))
(define-fun x522 ((x1616 x10)) Int (ite x3496 (x258 x1616) (ite x3605 (x258 x1616) (ite x4475 (x258 x1616) (ite x3086 (x3435 x1616) (x4802 x1616))))))
(define-fun x1951 ((x1616 x10)) Int (ite x4260 (x522 x1616) (ite x1217 (x258 x1616) (ite x292 (x258 x1616) (ite x2924 (x258 x1616) (ite x4373 (x522 x1616) (x258 x1616)))))))
(define-fun x3478 ((x1616 x10)) Int (ite x4624 (x1951 x1616) (x522 x1616)))
(define-fun x2939 ((x1616 x10)) Int (ite x2903 (x1487 x1616) (ite x3404 (x147 x1616) (x3478 x1616))))
(define-fun x512 ((x1616 x10)) Int (ite (= x1616 x1778) x316 (x258 x1616)))
(define-fun x3089 ((x1616 x10)) Int (ite x2771 (x258 x1616) (ite x1977 (x258 x1616) (ite x3531 (x258 x1616) (ite x1139 (x258 x1616) (ite x4034 (x512 x1616) (x258 x1616)))))))
(define-fun x1596 ((x1616 x10)) Int (ite (= x1616 x2028) x4836 (x512 x1616)))
(define-fun x4854 ((x1616 x10)) Int (ite x1605 (x258 x1616) (ite x921 (x258 x1616) (ite x1179 (x258 x1616) (ite x738 (x3089 x1616) (x1596 x1616))))))
(define-fun x1338 ((x1616 x10)) Int (ite x843 (x4854 x1616) (ite x3927 (x258 x1616) (ite x4617 (x258 x1616) (ite x890 (x4854 x1616) (x258 x1616))))))
(define-fun x1939 ((x1616 x10)) Int (ite x4888 (x1338 x1616) (x4854 x1616)))
(define-fun x739 ((x1616 x10)) Int (ite (= x4784 x1616) x3032 (x258 x1616)))
(define-fun x3968 ((x1616 x10)) Int (ite x3647 (x258 x1616) (ite x881 (x258 x1616) (ite x435 (x258 x1616) (ite x2118 (x258 x1616) (ite x1906 (x739 x1616) (x258 x1616)))))))
(define-fun x1451 ((x1616 x10)) Int (ite (= x1616 x474) x1305 (x739 x1616)))
(define-fun x3165 ((x1616 x10)) Int (ite x3259 (x258 x1616) (ite x3209 (x258 x1616) (ite x1122 (x258 x1616) (ite x4775 (x3968 x1616) (x1451 x1616))))))
(define-fun x2505 ((x1616 x10)) Int (ite x4340 (x3165 x1616) (ite x1976 (x258 x1616) (ite x816 (x258 x1616) (ite x3695 (x3165 x1616) (x258 x1616))))))
(define-fun x244 ((x1616 x10)) Int (ite x2552 (x2505 x1616) (x3165 x1616)))
(define-fun x4018 ((x1616 x10)) Int (ite (= x238 x1616) x4224 (x258 x1616)))
(define-fun x3479 ((x1616 x10)) Int (ite x1866 (x258 x1616) (ite x4626 (x258 x1616) (ite x3324 (x258 x1616) (ite x2434 (x258 x1616) (ite x22 (x4018 x1616) (x258 x1616)))))))
(define-fun x3682 ((x1616 x10)) Int (ite (= x3394 x1616) x4661 (x4018 x1616)))
(define-fun x2715 ((x1616 x10)) Int (ite x2102 (x258 x1616) (ite x148 (x258 x1616) (ite x515 (x258 x1616) (ite x163 (x3479 x1616) (x3682 x1616))))))
(define-fun x29 ((x1616 x10)) Int (ite x796 (x2715 x1616) (ite x3824 (x258 x1616) (ite x4502 (x258 x1616) (ite x2910 (x2715 x1616) (x258 x1616))))))
(define-fun x2745 ((x1616 x10)) Int (ite x1684 (x29 x1616) (x2715 x1616)))
(define-fun x4135 ((x1616 x10)) Int (ite x2789 (x1939 x1616) (ite x3214 (x244 x1616) (x2745 x1616))))
(define-fun x1125 ((x1616 x10)) Int (ite x1342 (x2939 x1616) (x4135 x1616)))
(define-fun x3750 ((x1616 x10)) Int (ite x4006 (x258 x1616) (ite x4382 (x258 x1616) (x1125 x1616))))
(define-fun x4139 ((x1616 x10)) Int (ite (= x1616 x2033) x3711 (x193 x1616)))
(define-fun x767 ((x1616 x10)) Int (ite x2786 (x193 x1616) (ite x4768 (x193 x1616) (ite x2117 (x193 x1616) (ite x2982 (x193 x1616) (ite x1435 (x4139 x1616) (x193 x1616)))))))
(define-fun x1560 ((x1616 x10)) Int (ite (= x3691 x1616) x3835 (x4139 x1616)))
(define-fun x1323 ((x1616 x10)) Int (ite x915 (x193 x1616) (ite x3838 (ite x1838 (x767 x1616) (x1560 x1616)) (x193 x1616))))
(define-fun x2879 ((x1616 x10)) Int (ite (= x773 x1616) x2634 (x1323 x1616)))
(define-fun x2755 ((x1616 x10)) Int (ite x206 (x1323 x1616) (ite x1227 (x1323 x1616) (ite x4715 (x1323 x1616) (ite x4152 (x1323 x1616) (ite x1687 (x2879 x1616) (x1323 x1616)))))))
(define-fun x828 ((x1616 x10)) Int (ite (= x2313 x1616) x1365 (x2879 x1616)))
(define-fun x4396 ((x1616 x10)) Int (ite x2037 (x1323 x1616) (ite x2057 (ite x3958 (x2755 x1616) (x828 x1616)) (x1323 x1616))))
(define-fun x2800 ((x1616 x10)) Int (ite x4867 (x4396 x1616) (ite x4221 (x1323 x1616) (ite x4348 (x1323 x1616) (ite x1735 (x1323 x1616) (ite x3985 (x4396 x1616) (x1323 x1616)))))))
(define-fun x1050 ((x1616 x10)) Int (ite x927 (x2800 x1616) (x4396 x1616)))
(define-fun x4880 ((x1616 x10)) Int (ite (= x1616 x3681) x4421 (x1323 x1616)))
(define-fun x480 ((x1616 x10)) Int (ite x3476 (x1323 x1616) (ite x1262 (x1323 x1616) (ite x578 (x1323 x1616) (ite x4680 (x1323 x1616) (ite x1244 (x4880 x1616) (x1323 x1616)))))))
(define-fun x166 ((x1616 x10)) Int (ite (= x21 x1616) x3781 (x4880 x1616)))
(define-fun x273 ((x1616 x10)) Int (ite x1399 (x1323 x1616) (ite x208 (ite x2275 (x480 x1616) (x166 x1616)) (x1323 x1616))))
(define-fun x3505 ((x1616 x10)) Int (ite x1697 (x273 x1616) (ite x3009 (x1323 x1616) (ite x4665 (x1323 x1616) (ite x2084 (x1323 x1616) (ite x1633 (x273 x1616) (x1323 x1616)))))))
(define-fun x236 ((x1616 x10)) Int (ite x956 (x3505 x1616) (x273 x1616)))
(define-fun x1119 ((x1616 x10)) Int (ite (= x2305 x1616) x1721 (x1323 x1616)))
(define-fun x4789 ((x1616 x10)) Int (ite x1889 (x1323 x1616) (ite x1236 (x1323 x1616) (ite x2631 (x1323 x1616) (ite x4305 (x1323 x1616) (ite x1941 (x1119 x1616) (x1323 x1616)))))))
(define-fun x2169 ((x1616 x10)) Int (ite (= x1616 x2811) x1837 (x1119 x1616)))
(define-fun x2627 ((x1616 x10)) Int (ite x3496 (x1323 x1616) (ite x3605 (ite x997 (x4789 x1616) (x2169 x1616)) (x1323 x1616))))
(define-fun x3594 ((x1616 x10)) Int (ite x4260 (x2627 x1616) (ite x1217 (x1323 x1616) (ite x292 (x1323 x1616) (ite x2924 (x1323 x1616) (ite x4373 (x2627 x1616) (x1323 x1616)))))))
(define-fun x2569 ((x1616 x10)) Int (ite x4624 (x3594 x1616) (x2627 x1616)))
(define-fun x634 ((x1616 x10)) Int (ite x2903 (x1050 x1616) (ite x3404 (x236 x1616) (x2569 x1616))))
(define-fun x2339 ((x1616 x10)) Int (ite (= x1616 x119) x2178 (x1323 x1616)))
(define-fun x2743 ((x1616 x10)) Int (ite x2510 (x1323 x1616) (ite x4516 (x1323 x1616) (ite x710 (x1323 x1616) (ite x1922 (x1323 x1616) (ite x4386 (x2339 x1616) (x1323 x1616)))))))
(define-fun x2156 ((x1616 x10)) Int (ite (= x173 x1616) x3033 (x2339 x1616)))
(define-fun x1626 ((x1616 x10)) Int (ite x1605 (x1323 x1616) (ite x921 (ite x3142 (x2743 x1616) (x2156 x1616)) (x1323 x1616))))
(define-fun x3153 ((x1616 x10)) Int (ite x843 (x1626 x1616) (ite x3927 (x1323 x1616) (ite x4617 (x1323 x1616) (ite x890 (x1626 x1616) (x1323 x1616))))))
(define-fun x216 ((x1616 x10)) Int (ite x4888 (x3153 x1616) (x1626 x1616)))
(define-fun x1061 ((x1616 x10)) Int (ite (= x2855 x1616) x4171 (x1323 x1616)))
(define-fun x1948 ((x1616 x10)) Int (ite x3964 (x1323 x1616) (ite x4345 (x1323 x1616) (ite x2751 (x1323 x1616) (ite x871 (x1323 x1616) (ite x4140 (x1061 x1616) (x1323 x1616)))))))
(define-fun x1074 ((x1616 x10)) Int (ite (= x1616 x4752) x1815 (x1061 x1616)))
(define-fun x3227 ((x1616 x10)) Int (ite x3259 (x1323 x1616) (ite x3209 (ite x1153 (x1948 x1616) (x1074 x1616)) (x1323 x1616))))
(define-fun x1473 ((x1616 x10)) Int (ite x4340 (x3227 x1616) (ite x1976 (x1323 x1616) (ite x816 (x1323 x1616) (ite x3695 (x3227 x1616) (x1323 x1616))))))
(define-fun x4170 ((x1616 x10)) Int (ite x2552 (x1473 x1616) (x3227 x1616)))
(define-fun x3185 ((x1616 x10)) Int (ite (= x1616 x4172) x4298 (x1323 x1616)))
(define-fun x36 ((x1616 x10)) Int (ite x1159 (x1323 x1616) (ite x3728 (x1323 x1616) (ite x1017 (x1323 x1616) (ite x2048 (x1323 x1616) (ite x3558 (x3185 x1616) (x1323 x1616)))))))
(define-fun x4800 ((x1616 x10)) Int (ite (= x1616 x3035) x2481 (x3185 x1616)))
(define-fun x4889 ((x1616 x10)) Int (ite x2102 (x1323 x1616) (ite x148 (ite x973 (x36 x1616) (x4800 x1616)) (x1323 x1616))))
(define-fun x214 ((x1616 x10)) Int (ite x796 (x4889 x1616) (ite x3824 (x1323 x1616) (ite x4502 (x1323 x1616) (ite x2910 (x4889 x1616) (x1323 x1616))))))
(define-fun x1073 ((x1616 x10)) Int (ite x1684 (x214 x1616) (x4889 x1616)))
(define-fun x4706 ((x1616 x10)) Int (ite x2789 (x216 x1616) (ite x3214 (x4170 x1616) (x1073 x1616))))
(define-fun x2893 ((x1616 x10)) Int (ite x1342 (x634 x1616) (x4706 x1616)))
(define-fun x385 ((x1616 x10)) Int (ite x4006 (x1323 x1616) (ite x4382 (x1323 x1616) (x2893 x1616))))
(define-fun x3939 ((x1616 x10)) Int (ite (= x2679 x1616) x2241 (x2271 x1616)))
(define-fun x2669 ((x1616 x10)) Int (ite x3768 (x2271 x1616) (ite x1397 (x2271 x1616) (ite x3455 (x2271 x1616) (ite x2011 (x2271 x1616) (ite x4560 (x3939 x1616) (x2271 x1616)))))))
(define-fun x1743 ((x1616 x10)) Int (ite (= x2454 x1616) x1900 (x3939 x1616)))
(define-fun x4593 ((x1616 x10)) Int (ite x915 (x2271 x1616) (ite x3838 (x2271 x1616) (ite x2094 (ite x1852 (x2669 x1616) (x1743 x1616)) (x2271 x1616)))))
(define-fun x1720 ((x1616 x10)) Int (ite (= x1616 x4142) x2296 (x4593 x1616)))
(define-fun x3061 ((x1616 x10)) Int (ite x120 (x4593 x1616) (ite x2709 (x4593 x1616) (ite x1826 (x4593 x1616) (ite x1433 (x4593 x1616) (ite x1763 (x1720 x1616) (x4593 x1616)))))))
(define-fun x1090 ((x1616 x10)) Int (ite (= x1616 x2732) x3861 (x1720 x1616)))
(define-fun x3843 ((x1616 x10)) Int (ite x2037 (x4593 x1616) (ite x2057 (x4593 x1616) (ite x4255 (ite x2004 (x3061 x1616) (x1090 x1616)) (x4593 x1616)))))
(define-fun x2424 ((x1616 x10)) Int (ite x4867 (x3843 x1616) (ite x4221 (x4593 x1616) (ite x4348 (x4593 x1616) (ite x1735 (x4593 x1616) (ite x3985 (x3843 x1616) (x4593 x1616)))))))
(define-fun x72 ((x1616 x10)) Int (ite x927 (x2424 x1616) (x3843 x1616)))
(define-fun x2211 ((x1616 x10)) Int (ite (= x1616 x3353) x1908 (x4593 x1616)))
(define-fun x2200 ((x1616 x10)) Int (ite x4307 (x4593 x1616) (ite x1598 (x4593 x1616) (ite x1781 (x4593 x1616) (ite x3957 (x4593 x1616) (ite x2832 (x2211 x1616) (x4593 x1616)))))))
(define-fun x799 ((x1616 x10)) Int (ite (= x3140 x1616) x3038 (x2211 x1616)))
(define-fun x2498 ((x1616 x10)) Int (ite x1399 (x4593 x1616) (ite x208 (x4593 x1616) (ite x3920 (ite x3332 (x2200 x1616) (x799 x1616)) (x4593 x1616)))))
(define-fun x3329 ((x1616 x10)) Int (ite x1697 (x2498 x1616) (ite x3009 (x4593 x1616) (ite x4665 (x4593 x1616) (ite x2084 (x4593 x1616) (ite x1633 (x2498 x1616) (x4593 x1616)))))))
(define-fun x268 ((x1616 x10)) Int (ite x956 (x3329 x1616) (x2498 x1616)))
(define-fun x1887 ((x1616 x10)) Int (ite (= x2757 x1616) x3669 (x4593 x1616)))
(define-fun x3465 ((x1616 x10)) Int (ite x342 (x4593 x1616) (ite x2804 (x4593 x1616) (ite x2407 (x4593 x1616) (ite x3397 (x4593 x1616) (ite x4486 (x1887 x1616) (x4593 x1616)))))))
(define-fun x4474 ((x1616 x10)) Int (ite (= x3577 x1616) x3615 (x1887 x1616)))
(define-fun x66 ((x1616 x10)) Int (ite x3496 (x4593 x1616) (ite x3605 (x4593 x1616) (ite x4475 (ite x3720 (x3465 x1616) (x4474 x1616)) (x4593 x1616)))))
(define-fun x3270 ((x1616 x10)) Int (ite x4260 (x66 x1616) (ite x1217 (x4593 x1616) (ite x292 (x4593 x1616) (ite x2924 (x4593 x1616) (ite x4373 (x66 x1616) (x4593 x1616)))))))
(define-fun x3091 ((x1616 x10)) Int (ite x4624 (x3270 x1616) (x66 x1616)))
(define-fun x3291 ((x1616 x10)) Int (ite x2903 (x72 x1616) (ite x3404 (x268 x1616) (x3091 x1616))))
(define-fun x2758 ((x1616 x10)) Int (ite (= x284 x1616) x1546 (x4593 x1616)))
(define-fun x3631 ((x1616 x10)) Int (ite x4098 (x4593 x1616) (ite x4190 (x4593 x1616) (ite x3601 (x4593 x1616) (ite x1644 (x4593 x1616) (ite x1898 (x2758 x1616) (x4593 x1616)))))))
(define-fun x958 ((x1616 x10)) Int (ite (= x1616 x3971) x4548 (x2758 x1616)))
(define-fun x3034 ((x1616 x10)) Int (ite x1605 (x4593 x1616) (ite x921 (x4593 x1616) (ite x1179 (ite x3138 (x3631 x1616) (x958 x1616)) (x4593 x1616)))))
(define-fun x224 ((x1616 x10)) Int (ite x843 (x3034 x1616) (ite x3927 (x4593 x1616) (ite x4617 (x4593 x1616) (ite x890 (x3034 x1616) (x4593 x1616))))))
(define-fun x3116 ((x1616 x10)) Int (ite x4888 (x224 x1616) (x3034 x1616)))
(define-fun x2841 ((x1616 x10)) Int (ite (= x1616 x981) x551 (x4593 x1616)))
(define-fun x3306 ((x1616 x10)) Int (ite x2524 (x4593 x1616) (ite x55 (x4593 x1616) (ite x3510 (x4593 x1616) (ite x4078 (x4593 x1616) (ite x4240 (x2841 x1616) (x4593 x1616)))))))
(define-fun x1320 ((x1616 x10)) Int (ite (= x1616 x4282) x4102 (x2841 x1616)))
(define-fun x2460 ((x1616 x10)) Int (ite x3259 (x4593 x1616) (ite x3209 (x4593 x1616) (ite x1122 (ite x4002 (x3306 x1616) (x1320 x1616)) (x4593 x1616)))))
(define-fun x2089 ((x1616 x10)) Int (ite x4340 (x2460 x1616) (ite x1976 (x4593 x1616) (ite x816 (x4593 x1616) (ite x3695 (x2460 x1616) (x4593 x1616))))))
(define-fun x3464 ((x1616 x10)) Int (ite x2552 (x2089 x1616) (x2460 x1616)))
(define-fun x114 ((x1616 x10)) Int (ite (= x1616 x3624) x46 (x4593 x1616)))
(define-fun x95 ((x1616 x10)) Int (ite x3448 (x4593 x1616) (ite x1471 (x4593 x1616) (ite x3731 (x4593 x1616) (ite x679 (x4593 x1616) (ite x589 (x114 x1616) (x4593 x1616)))))))
(define-fun x3924 ((x1616 x10)) Int (ite (= x1616 x3196) x388 (x114 x1616)))
(define-fun x3146 ((x1616 x10)) Int (ite x2102 (x4593 x1616) (ite x148 (x4593 x1616) (ite x515 (ite x3321 (x95 x1616) (x3924 x1616)) (x4593 x1616)))))
(define-fun x3176 ((x1616 x10)) Int (ite x796 (x3146 x1616) (ite x3824 (x4593 x1616) (ite x4502 (x4593 x1616) (ite x2910 (x3146 x1616) (x4593 x1616))))))
(define-fun x3287 ((x1616 x10)) Int (ite x1684 (x3176 x1616) (x3146 x1616)))
(define-fun x1883 ((x1616 x10)) Int (ite x2789 (x3116 x1616) (ite x3214 (x3464 x1616) (x3287 x1616))))
(define-fun x3589 ((x1616 x10)) Int (ite x1342 (x3291 x1616) (x1883 x1616)))
(define-fun x846 ((x1616 x10)) Int (ite x4006 (x4593 x1616) (ite x4382 (x4593 x1616) (x3589 x1616))))
(define-fun x687 ((x1616 x10)) Int (ite (= x1616 x1821) x4227 (x2680 x1616)))
(define-fun x3892 ((x1616 x10)) Int (ite x915 (ite x2284 (x2680 x1616) (x687 x1616)) (x2680 x1616)))
(define-fun x2334 ((x1616 x10)) Int (ite (= x835 x1616) x2386 (x3892 x1616)))
(define-fun x746 ((x1616 x10)) Int (ite x3815 (x3892 x1616) (x2334 x1616)))
(define-fun x35 ((x1616 x10)) Int (ite (= x3534 x1616) x4528 (x746 x1616)))
(define-fun x819 ((x1616 x10)) Int (ite x2037 (ite x2445 (x746 x1616) (x35 x1616)) (x746 x1616)))
(define-fun x1659 ((x1616 x10)) Int (ite x4867 (x819 x1616) (ite x4221 (x746 x1616) (ite x4348 (x746 x1616) (ite x1735 (x746 x1616) (ite x3985 (x819 x1616) (x746 x1616)))))))
(define-fun x3489 ((x1616 x10)) Int (ite x927 (x1659 x1616) (x819 x1616)))
(define-fun x2097 ((x1616 x10)) Int (ite (= x1616 x4721) x1020 (x746 x1616)))
(define-fun x4886 ((x1616 x10)) Int (ite x1399 (ite x4718 (x746 x1616) (x2097 x1616)) (x746 x1616)))
(define-fun x3833 ((x1616 x10)) Int (ite x1697 (x4886 x1616) (ite x3009 (x746 x1616) (ite x4665 (x746 x1616) (ite x2084 (x746 x1616) (ite x1633 (x4886 x1616) (x746 x1616)))))))
(define-fun x2775 ((x1616 x10)) Int (ite x956 (x3833 x1616) (x4886 x1616)))
(define-fun x567 ((x1616 x10)) Int (ite (= x4147 x1616) x2754 (x746 x1616)))
(define-fun x2043 ((x1616 x10)) Int (ite x3496 (ite x775 (x746 x1616) (x567 x1616)) (x746 x1616)))
(define-fun x922 ((x1616 x10)) Int (ite x4260 (x2043 x1616) (ite x1217 (x746 x1616) (ite x292 (x746 x1616) (ite x2924 (x746 x1616) (ite x4373 (x2043 x1616) (x746 x1616)))))))
(define-fun x1942 ((x1616 x10)) Int (ite x4624 (x922 x1616) (x2043 x1616)))
(define-fun x1464 ((x1616 x10)) Int (ite x2903 (x3489 x1616) (ite x3404 (x2775 x1616) (x1942 x1616))))
(define-fun x2239 ((x1616 x10)) Int (ite (= x1616 x1080) x3597 (x3892 x1616)))
(define-fun x2691 ((x1616 x10)) Int (ite x1605 (ite x1332 (x3892 x1616) (x2239 x1616)) (x3892 x1616)))
(define-fun x4842 ((x1616 x10)) Int (ite x843 (x2691 x1616) (ite x3927 (x3892 x1616) (ite x4617 (x3892 x1616) (ite x890 (x2691 x1616) (x3892 x1616))))))
(define-fun x380 ((x1616 x10)) Int (ite x4888 (x4842 x1616) (x2691 x1616)))
(define-fun x3134 ((x1616 x10)) Int (ite (= x1616 x357) x1054 (x3892 x1616)))
(define-fun x1476 ((x1616 x10)) Int (ite x3259 (ite x3238 (x3892 x1616) (x3134 x1616)) (x3892 x1616)))
(define-fun x2372 ((x1616 x10)) Int (ite x4340 (x1476 x1616) (ite x1976 (x3892 x1616) (ite x816 (x3892 x1616) (ite x3695 (x1476 x1616) (x3892 x1616))))))
(define-fun x3108 ((x1616 x10)) Int (ite x2552 (x2372 x1616) (x1476 x1616)))
(define-fun x3068 ((x1616 x10)) Int (ite (= x4743 x1616) x157 (x3892 x1616)))
(define-fun x1049 ((x1616 x10)) Int (ite x2102 (ite x878 (x3892 x1616) (x3068 x1616)) (x3892 x1616)))
(define-fun x3501 ((x1616 x10)) Int (ite x796 (x1049 x1616) (ite x3824 (x3892 x1616) (ite x4502 (x3892 x1616) (ite x2910 (x1049 x1616) (x3892 x1616))))))
(define-fun x2819 ((x1616 x10)) Int (ite x1684 (x3501 x1616) (x1049 x1616)))
(define-fun x3181 ((x1616 x10)) Int (ite x2789 (x380 x1616) (ite x3214 (x3108 x1616) (x2819 x1616))))
(define-fun x3911 ((x1616 x10)) Int (ite x1342 (x1464 x1616) (x3181 x1616)))
(define-fun x923 ((x1616 x10)) Int (ite x4006 (x3892 x1616) (ite x4382 (x3892 x1616) (x3911 x1616))))
(define-fun x1878 ((x1616 Int)) Int (ite (= x1616 x4167) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x3871 x1616)))
(define-fun x1807 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x4894 x1616)))
(define-fun x686 ((x1616 Int)) Int (ite (= x4167 x1616) 1 (x1878 x1616)))
(define-fun x3241 ((x1616 Int)) Int (ite (= x1616 0) 1 (x4894 x1616)))
(define-fun x153 ((x1616 Int)) Int (ite (= x4167 x1616) 1 (x1878 x1616)))
(define-fun x4023 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x4894 x1616)))
(define-fun x2756 ((x1616 Int)) Int (ite (= x4167 x1616) 1 (x1878 x1616)))
(define-fun x3865 ((x1616 Int)) Int (ite (= x1616 0) 1 (x160 x1616)))
(define-fun x1902 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x160 x1616)))
(define-fun x682 ((x1616 Int)) Int (ite (= x1616 0) 1 (x160 x1616)))
(define-fun x1718 ((x1616 Int)) Int (ite (= x1616 0) 1 (x160 x1616)))
(define-fun x863 ((x1616 Int)) Int (ite x3376 (x686 x1616) (ite x1369 (x153 x1616) (x2756 x1616))))
(define-fun x3088 ((x1616 Int)) Int (ite (= x528 x1616) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x863 x1616)))
(define-fun x3046 ((x1616 Int)) Int (ite (= x1616 x2574) x3131 (x3088 x1616)))
(define-fun x2649 ((x1616 Int)) Int (ite (= x1616 x1603) x3998 (x3046 x1616)))
(define-fun x3724 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2649 x1616)))
(define-fun x295 ((x1616 Int)) Int (ite x1731 (x2649 x1616) (x3724 x1616)))
(define-fun x1057 ((x1616 Int)) Int (ite (= x528 x1616) 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x295 x1616)))
(define-fun x2261 ((x1616 Int)) Int (ite (= x2246 x1616) x3998 (x1057 x1616)))
(define-fun x1782 ((x1616 Int)) Int (ite (= x1616 x528) 0 (x2261 x1616)))
(define-fun x3646 ((x1616 Int)) Int (ite (= x528 x1616) 0 (x2261 x1616)))
(define-fun x3333 ((x1616 Int)) Int (ite (= x1616 x528) 0 (x2261 x1616)))
(define-fun x1715 ((x1616 Int)) Int (ite x2539 (ite x2354 (x2261 x1616) (x1782 x1616)) (ite x1945 (ite x1936 (x2261 x1616) (x3646 x1616)) (ite x3075 (x2261 x1616) (x3333 x1616)))))
(define-fun x1108 ((x1616 Int)) Int (ite (= 0 x1616) x3960 (x1911 x1616)))
(define-fun x1571 ((x1616 Int)) Int (ite (= x1616 0) x1772 (x1911 x1616)))
(define-fun x1195 ((x1616 Int)) Int (ite (= x1616 0) x4424 (x1911 x1616)))
(define-fun x1518 ((x1616 Int)) Int (ite (= 0 x1616) x3285 (x4104 x1616)))
(define-fun x3352 ((x1616 Int)) Int (ite (= x1616 0) x3133 (x4104 x1616)))
(define-fun x4130 ((x1616 Int)) Int (ite (= 0 x1616) x266 (x4104 x1616)))
(define-fun x818 ((x1616 x10)) Int (ite (= x2478 x1616) x2721 (x1007 x1616)))
(define-fun x593 ((x1616 x10)) Int (ite (= x1668 x1616) 0 (x818 x1616)))
(define-fun x1412 ((x1616 x10)) Int (ite x2111 (x593 x1616) (x818 x1616)))
(define-fun x1576 ((x1616 x10)) Int (ite (= x443 x1616) x4847 (x736 x1616)))
(define-fun x2630 ((x1616 x10)) Int (ite (= x1616 x657) 0 (x1576 x1616)))
(define-fun x31 ((x1616 x10)) Int (ite x3550 (x2630 x1616) (x1576 x1616)))
(define-fun x4835 ((x1616 x10)) Int (ite (= x1780 x1616) x2091 (x1412 x1616)))
(define-fun x3243 ((x1616 x10)) Int (ite (= x1616 x4272) x222 (x31 x1616)))
(define-fun x4092 ((x1616 x10)) Int (ite (= x4379 x1616) 0 (x1982 x1616)))
(define-fun x2995 ((x1616 x10)) Int (ite x4184 (x1982 x1616) (x4092 x1616)))
(define-fun x475 ((x1616 x10)) Int (ite (= x2948 x1616) x142 (x2995 x1616)))
(define-fun x2605 ((x1616 x10)) Int (ite (= x1036 x1616) x142 (x2995 x1616)))
(define-fun x1077 ((x1616 x10)) Int (ite (= x2414 x1616) x142 (x2995 x1616)))
(define-fun x891 ((x1616 x10)) Int (ite (= x4495 x1616) x142 (x2995 x1616)))
(define-fun x320 ((x1616 x10)) Int (ite x2704 (x475 x1616) (ite x350 (x2605 x1616) (ite x1667 (x1077 x1616) (x891 x1616)))))
(define-fun x806 ((x1616 x10)) Int (ite x1189 (x1982 x1616) (ite x3084 (x2995 x1616) (x320 x1616))))
(define-fun x2085 ((x1616 x10)) Int (ite (= x1616 x2509) 0 (x1421 x1616)))
(define-fun x4164 ((x1616 x10)) Int (ite x2782 (x1421 x1616) (x2085 x1616)))
(define-fun x16 ((x1616 x10)) Int (ite (= x1616 x129) x962 (x4164 x1616)))
(define-fun x3639 ((x1616 x10)) Int (ite (= x1515 x1616) x962 (x4164 x1616)))
(define-fun x2885 ((x1616 x10)) Int (ite (= x2237 x1616) x962 (x4164 x1616)))
(define-fun x1569 ((x1616 x10)) Int (ite (= x804 x1616) x962 (x4164 x1616)))
(define-fun x1979 ((x1616 x10)) Int (ite x4192 (x16 x1616) (ite x19 (x3639 x1616) (ite x1275 (x2885 x1616) (x1569 x1616)))))
(define-fun x128 ((x1616 x10)) Int (ite x2484 (x1421 x1616) (ite x4873 (x4164 x1616) (x1979 x1616))))
(define-fun x3422 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x3604 x1616)))
(define-fun x4359 ((x1616 Int)) Int (ite (= x1616 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1138 x1616)))
(define-fun x980 ((x1616 Int)) Int (ite (= 132 x1616) x322 (x4359 x1616)))
(define-fun x1021 ((x1616 Int)) Int (ite (= 164 x1616) x3937 (x980 x1616)))
(define-fun x3276 ((x1616 Int)) Int (ite (= x1616 196) x3195 (x1021 x1616)))
(define-fun x262 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x3536 x1616)))
(define-fun x3944 ((x1616 Int)) Int (ite (= x1616 0) 1 (x3536 x1616)))
(define-fun x2823 ((x1616 Int)) Int (ite (= x1616 0) 1 (x3536 x1616)))
(define-fun x338 ((x1616 Int)) Int (ite (= x1616 0) 1 (x3536 x1616)))
(define-fun x200 ((x1616 Int)) Int (ite (= x1616 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4242 x1616)))
(define-fun x3548 ((x1616 Int)) Int (ite (= x1616 132) x322 (x200 x1616)))
(define-fun x331 ((x1616 Int)) Int (ite (= 164 x1616) x4413 (x3548 x1616)))
(define-fun x2612 ((x1616 Int)) Int (ite (= 196 x1616) x2247 (x331 x1616)))
(define-fun x2013 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2785 x1616)))
(define-fun x2167 ((x1616 Int)) Int (ite (= x1616 0) 1 (x2785 x1616)))
(define-fun x4040 ((x1616 Int)) Int (ite (= x1616 0) 1 (x2785 x1616)))
(define-fun x4000 ((x1616 Int)) Int (ite (= x1616 0) 1 (x2785 x1616)))
(define-fun x1408 ((x1616 Int)) Int (ite (= x1616 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x936 x1616)))
(define-fun x2567 ((x1616 Int)) Int (ite (= 132 x1616) x322 (x1408 x1616)))
(define-fun x189 ((x1616 Int)) Int (ite (= x1616 164) x759 (x2567 x1616)))
(define-fun x3050 ((x1616 Int)) Int (ite (= x1616 196) x3989 (x189 x1616)))
(define-fun x2186 ((x1616 Int)) Int (ite (= x1616 0) 1 (x2335 x1616)))
(define-fun x4319 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2335 x1616)))
(define-fun x1427 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2335 x1616)))
(define-fun x527 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2335 x1616)))
(define-fun x4670 ((x1616 x10)) Int (ite (= x1616 x288) x3216 (x2032 x1616)))
(define-fun x3928 ((x1616 x10)) Int (ite (= x1442 x1616) x3216 (x725 x1616)))
(define-fun x3778 ((x1616 x10)) Int (ite (= x2074 x1616) 0 (x2166 x1616)))
(define-fun x4922 ((x1616 x10)) Int (ite x2559 (x2166 x1616) (x3778 x1616)))
(define-fun x84 ((x1616 x10)) Int (ite x2896 (x725 x1616) (x3928 x1616)))
(define-fun x3969 ((x1616 x10)) Int (ite (= x1616 x622) 0 (x84 x1616)))
(define-fun x2121 ((x1616 x10)) Int (ite x2559 (x725 x1616) (x3969 x1616)))
(define-fun x3029 ((x1616 x10)) Int (ite x2559 (x2032 x1616) (ite x2896 (x4670 x1616) (x2032 x1616))))
(define-fun x1595 ((x1616 x10)) Int (ite (= x1616 x3739) x3018 (x4506 x1616)))
(define-fun x1489 ((x1616 x10)) Int (ite x2559 (x4506 x1616) (ite x1774 (x1595 x1616) (x4506 x1616))))
(define-fun x4099 ((x1616 x10)) Int (ite (= x1616 x87) x3018 (x619 x1616)))
(define-fun x3917 ((x1616 x10)) Int (ite x1774 (x619 x1616) (x4099 x1616)))
(define-fun x2302 ((x1616 x10)) Int (ite (= x4739 x1616) 0 (x3917 x1616)))
(define-fun x2138 ((x1616 x10)) Int (ite x2559 (x619 x1616) (x2302 x1616)))
(define-fun x2792 ((x1616 x10)) Int (ite (= x2148 x1616) x2463 (x4368 x1616)))
(define-fun x4206 ((x1616 x10)) Int (ite (= x1616 x2378) x2463 (x174 x1616)))
(define-fun x3362 ((x1616 x10)) Int (ite x4395 (x174 x1616) (x4206 x1616)))
(define-fun x3632 ((x1616 x10)) Int (ite (= x1955 x1616) 0 (x3362 x1616)))
(define-fun x3776 ((x1616 x10)) Int (ite x156 (x174 x1616) (x3632 x1616)))
(define-fun x2322 ((x1616 x10)) Int (ite (= x1616 x3629) x4700 (x2045 x1616)))
(define-fun x3837 ((x1616 x10)) Int (ite x156 (x2045 x1616) (ite x2568 (x2322 x1616) (x2045 x1616))))
(define-fun x3533 ((x1616 x10)) Int (ite (= x1616 x1497) 0 (x1836 x1616)))
(define-fun x4759 ((x1616 x10)) Int (ite x156 (x1836 x1616) (x3533 x1616)))
(define-fun x3012 ((x1616 x10)) Int (ite (= x1616 x469) x4700 (x4435 x1616)))
(define-fun x2769 ((x1616 x10)) Int (ite x2568 (x4435 x1616) (x3012 x1616)))
(define-fun x4453 ((x1616 x10)) Int (ite (= x1616 x1867) 0 (x2769 x1616)))
(define-fun x4533 ((x1616 x10)) Int (ite x156 (x4435 x1616) (x4453 x1616)))
(define-fun x1095 ((x1616 x10)) Int (ite x156 (x4368 x1616) (ite x4395 (x2792 x1616) (x4368 x1616))))
(define-fun x4829 ((x1616 x10)) Int (ite (= x1616 x110) x1279 (x914 x1616)))
(define-fun x1266 ((x1616 x10)) Int (ite x2255 (x914 x1616) (x4829 x1616)))
(define-fun x3221 ((x1616 x10)) Int (ite (= x3764 x1616) 0 (x1266 x1616)))
(define-fun x3169 ((x1616 x10)) Int (ite x4184 (x914 x1616) (x3221 x1616)))
(define-fun x3106 ((x1616 x10)) Int (ite (= x326 x1616) x932 (x3169 x1616)))
(define-fun x2886 ((x1616 x10)) Int (ite (= x1616 x3757) 0 (x3169 x1616)))
(define-fun x144 ((x1616 x10)) Int (ite (= x1616 x4232) x3866 (x3169 x1616)))
(define-fun x2287 ((x1616 x10)) Int (ite (= x4108 x1616) x3502 (x144 x1616)))
(define-fun x1619 ((x1616 x10)) Int (ite (= x1616 x2195) 0 (x3169 x1616)))
(define-fun x1712 ((x1616 x10)) Int (ite (= x211 x1616) x3502 (x1619 x1616)))
(define-fun x948 ((x1616 x10)) Int (ite x2704 (x3106 x1616) (ite x350 (x2886 x1616) (ite x1667 (x2287 x1616) (x1712 x1616)))))
(define-fun x2564 ((x1616 x10)) Int (ite x1189 (x914 x1616) (ite x3084 (x3169 x1616) (x948 x1616))))
(define-fun x3430 ((x1616 x10)) Int (ite (= x4351 x1616) x1707 (x4057 x1616)))
(define-fun x1688 ((x1616 x10)) Int (ite x776 (x4057 x1616) (x3430 x1616)))
(define-fun x135 ((x1616 x10)) Int (ite (= x255 x1616) 0 (x1688 x1616)))
(define-fun x3388 ((x1616 x10)) Int (ite x4184 (x4057 x1616) (x135 x1616)))
(define-fun x3186 ((x1616 x10)) Int (ite (= x1616 x1614) 0 (x3388 x1616)))
(define-fun x4407 ((x1616 x10)) Int (ite (= x422 x1616) x3502 (x3186 x1616)))
(define-fun x3345 ((x1616 x10)) Int (ite (= x2720 x1616) 0 (x3388 x1616)))
(define-fun x2030 ((x1616 x10)) Int (ite (= x1616 x1333) x4877 (x3388 x1616)))
(define-fun x2972 ((x1616 x10)) Int (ite (= x1616 x3962) x3502 (x2030 x1616)))
(define-fun x2142 ((x1616 x10)) Int (ite (= x1514 x1616) x4877 (x3388 x1616)))
(define-fun x3350 ((x1616 x10)) Int (ite x2704 (x4407 x1616) (ite x350 (x3345 x1616) (ite x1667 (x2972 x1616) (x2142 x1616)))))
(define-fun x4333 ((x1616 x10)) Int (ite x1189 (x4057 x1616) (ite x3084 (x3388 x1616) (x3350 x1616))))
(define-fun x4450 ((x1616 x10)) Int (ite (= x1291 x1616) x1707 (x2701 x1616)))
(define-fun x4141 ((x1616 x10)) Int (ite x4184 (x2701 x1616) (ite x776 (x4450 x1616) (x2701 x1616))))
(define-fun x2949 ((x1616 x10)) Int (ite (= x1616 x1727) x3502 (x4141 x1616)))
(define-fun x162 ((x1616 x10)) Int (ite (= x1616 x1727) x3502 (x4141 x1616)))
(define-fun x38 ((x1616 x10)) Int (ite x2704 (x4141 x1616) (ite x350 (x2949 x1616) (ite x1667 (x4141 x1616) (x162 x1616)))))
(define-fun x3365 ((x1616 x10)) Int (ite x1189 (x2701 x1616) (ite x3084 (x4141 x1616) (x38 x1616))))
(define-fun x4073 ((x1616 x10)) Int (ite (= x4268 x1616) x4691 (x3365 x1616)))
(define-fun x3409 ((x1616 x10)) Int (ite (= x1465 x1616) x4691 (x4333 x1616)))
(define-fun x1414 ((x1616 x10)) Int (ite x797 (x4333 x1616) (x3409 x1616)))
(define-fun x3073 ((x1616 x10)) Int (ite (= x1616 x983) 0 (x1414 x1616)))
(define-fun x11 ((x1616 x10)) Int (ite x3840 (x4333 x1616) (x3073 x1616)))
(define-fun x2531 ((x1616 x10)) Int (ite x3840 (x3365 x1616) (ite x797 (x4073 x1616) (x3365 x1616))))
(define-fun x4178 ((x1616 x10)) Int (ite (= x4487 x1616) x1279 (x2990 x1616)))
(define-fun x3260 ((x1616 x10)) Int (ite x4184 (x2990 x1616) (ite x2255 (x4178 x1616) (x2990 x1616))))
(define-fun x970 ((x1616 x10)) Int (ite (= x3076 x1616) x3502 (x3260 x1616)))
(define-fun x6 ((x1616 x10)) Int (ite (= x822 x1616) x3502 (x3260 x1616)))
(define-fun x940 ((x1616 x10)) Int (ite x2704 (x970 x1616) (ite x350 (x6 x1616) (x3260 x1616))))
(define-fun x379 ((x1616 x10)) Int (ite x1189 (x2990 x1616) (ite x3084 (x3260 x1616) (x940 x1616))))
(define-fun x4029 ((x1616 x10)) Int (ite (= x1616 x4106) x2690 (x379 x1616)))
(define-fun x4509 ((x1616 x10)) Int (ite x3840 (x379 x1616) (ite x1993 (x4029 x1616) (x379 x1616))))
(define-fun x4490 ((x1616 x10)) Int (ite (= x1616 x4773) 0 (x806 x1616)))
(define-fun x815 ((x1616 x10)) Int (ite x3840 (x806 x1616) (x4490 x1616)))
(define-fun x4757 ((x1616 x10)) Int (ite (= x1616 x3374) x2690 (x2564 x1616)))
(define-fun x1043 ((x1616 x10)) Int (ite x1993 (x2564 x1616) (x4757 x1616)))
(define-fun x367 ((x1616 x10)) Int (ite (= x4458 x1616) 0 (x1043 x1616)))
(define-fun x3954 ((x1616 x10)) Int (ite x3840 (x2564 x1616) (x367 x1616)))
(define-fun x2340 ((x1616 x10)) Int (ite (= x1616 x1511) x3671 (x1531 x1616)))
(define-fun x2945 ((x1616 x10)) Int (ite x2783 (x1531 x1616) (x2340 x1616)))
(define-fun x2601 ((x1616 x10)) Int (ite (= x2049 x1616) 0 (x2945 x1616)))
(define-fun x656 ((x1616 x10)) Int (ite x2782 (x1531 x1616) (x2601 x1616)))
(define-fun x1277 ((x1616 x10)) Int (ite (= x1616 x3417) x171 (x656 x1616)))
(define-fun x1247 ((x1616 x10)) Int (ite (= x3896 x1616) 0 (x656 x1616)))
(define-fun x2338 ((x1616 x10)) Int (ite (= x2682 x1616) x1352 (x656 x1616)))
(define-fun x2150 ((x1616 x10)) Int (ite (= x3355 x1616) x3502 (x2338 x1616)))
(define-fun x203 ((x1616 x10)) Int (ite (= x2925 x1616) 0 (x656 x1616)))
(define-fun x233 ((x1616 x10)) Int (ite (= x1616 x1613) x3502 (x203 x1616)))
(define-fun x1862 ((x1616 x10)) Int (ite x4192 (x1277 x1616) (ite x19 (x1247 x1616) (ite x1275 (x2150 x1616) (x233 x1616)))))
(define-fun x60 ((x1616 x10)) Int (ite x2484 (x1531 x1616) (ite x4873 (x656 x1616) (x1862 x1616))))
(define-fun x2979 ((x1616 x10)) Int (ite (= x409 x1616) x2692 (x896 x1616)))
(define-fun x3997 ((x1616 x10)) Int (ite x3610 (x896 x1616) (x2979 x1616)))
(define-fun x1830 ((x1616 x10)) Int (ite (= x1616 x2871) 0 (x3997 x1616)))
(define-fun x2867 ((x1616 x10)) Int (ite x2782 (x896 x1616) (x1830 x1616)))
(define-fun x3612 ((x1616 x10)) Int (ite (= x661 x1616) 0 (x2867 x1616)))
(define-fun x4711 ((x1616 x10)) Int (ite (= x2151 x1616) x3502 (x3612 x1616)))
(define-fun x2014 ((x1616 x10)) Int (ite (= x3747 x1616) 0 (x2867 x1616)))
(define-fun x1067 ((x1616 x10)) Int (ite (= x1616 x2646) x91 (x2867 x1616)))
(define-fun x450 ((x1616 x10)) Int (ite (= x1616 x3842) x3502 (x1067 x1616)))
(define-fun x4136 ((x1616 x10)) Int (ite (= x1616 x3951) x91 (x2867 x1616)))
(define-fun x1949 ((x1616 x10)) Int (ite x4192 (x4711 x1616) (ite x19 (x2014 x1616) (ite x1275 (x450 x1616) (x4136 x1616)))))
(define-fun x4610 ((x1616 x10)) Int (ite x2484 (x896 x1616) (ite x4873 (x2867 x1616) (x1949 x1616))))
(define-fun x3244 ((x1616 x10)) Int (ite (= x2394 x1616) x2692 (x4682 x1616)))
(define-fun x4595 ((x1616 x10)) Int (ite x2782 (x4682 x1616) (ite x3610 (x3244 x1616) (x4682 x1616))))
(define-fun x678 ((x1616 x10)) Int (ite (= x1616 x4552) x3502 (x4595 x1616)))
(define-fun x4811 ((x1616 x10)) Int (ite (= x4552 x1616) x3502 (x4595 x1616)))
(define-fun x1094 ((x1616 x10)) Int (ite x4192 (x4595 x1616) (ite x19 (x678 x1616) (ite x1275 (x4595 x1616) (x4811 x1616)))))
(define-fun x4370 ((x1616 x10)) Int (ite x2484 (x4682 x1616) (ite x4873 (x4595 x1616) (x1094 x1616))))
(define-fun x734 ((x1616 x10)) Int (ite (= x1616 x852) x1876 (x4370 x1616)))
(define-fun x2100 ((x1616 x10)) Int (ite (= x1616 x2352) x1876 (x4610 x1616)))
(define-fun x4075 ((x1616 x10)) Int (ite x1009 (x4610 x1616) (x2100 x1616)))
(define-fun x343 ((x1616 x10)) Int (ite (= x4488 x1616) 0 (x4075 x1616)))
(define-fun x2889 ((x1616 x10)) Int (ite x4056 (x4610 x1616) (x343 x1616)))
(define-fun x908 ((x1616 x10)) Int (ite (= x2793 x1616) x3408 (x60 x1616)))
(define-fun x1983 ((x1616 x10)) Int (ite x4100 (x60 x1616) (x908 x1616)))
(define-fun x3525 ((x1616 x10)) Int (ite (= x1616 x1757) 0 (x1983 x1616)))
(define-fun x706 ((x1616 x10)) Int (ite x4056 (x60 x1616) (x3525 x1616)))
(define-fun x1325 ((x1616 x10)) Int (ite x4056 (x4370 x1616) (ite x1009 (x734 x1616) (x4370 x1616))))
(define-fun x1786 ((x1616 x10)) Int (ite (= x79 x1616) x3671 (x4008 x1616)))
(define-fun x425 ((x1616 x10)) Int (ite x2782 (x4008 x1616) (ite x2783 (x1786 x1616) (x4008 x1616))))
(define-fun x606 ((x1616 x10)) Int (ite (= x3553 x1616) x3502 (x425 x1616)))
(define-fun x2154 ((x1616 x10)) Int (ite (= x407 x1616) x3502 (x425 x1616)))
(define-fun x4511 ((x1616 x10)) Int (ite x4192 (x606 x1616) (ite x19 (x2154 x1616) (x425 x1616))))
(define-fun x68 ((x1616 x10)) Int (ite x2484 (x4008 x1616) (ite x4873 (x425 x1616) (x4511 x1616))))
(define-fun x3252 ((x1616 x10)) Int (ite (= x363 x1616) x3408 (x68 x1616)))
(define-fun x966 ((x1616 x10)) Int (ite x4056 (x68 x1616) (ite x4100 (x3252 x1616) (x68 x1616))))
(define-fun x1805 ((x1616 x10)) Int (ite (= x294 x1616) 0 (x128 x1616)))
(define-fun x747 ((x1616 x10)) Int (ite x4056 (x128 x1616) (x1805 x1616)))
(define-fun x1029 ((x1616 Int)) Int (ite (= x1616 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2332 x1616)))
(define-fun x3941 ((x1616 Int)) Int (ite (= x1616 132) x322 (x1029 x1616)))
(define-fun x3179 ((x1616 Int)) Int (ite (= x1616 164) x3937 (x3941 x1616)))
(define-fun x4457 ((x1616 Int)) Int (ite (= x1616 196) x3655 (x3179 x1616)))
(define-fun x4460 ((x1616 Int)) Int (ite (= x1616 0) 1 (x85 x1616)))
(define-fun x1393 ((x1616 Int)) Int (ite (= x1616 0) 1 (x85 x1616)))
(define-fun x693 ((x1616 Int)) Int (ite (= x1616 0) 1 (x85 x1616)))
(define-fun x4378 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x85 x1616)))
(define-fun x1273 ((x1616 Int)) Int (ite (= 128 x1616) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x98 x1616)))
(define-fun x1691 ((x1616 Int)) Int (ite (= x1616 132) x322 (x1273 x1616)))
(define-fun x4226 ((x1616 Int)) Int (ite (= 164 x1616) x4413 (x1691 x1616)))
(define-fun x2661 ((x1616 Int)) Int (ite (= 196 x1616) x2703 (x4226 x1616)))
(define-fun x735 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2905 x1616)))
(define-fun x4684 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2905 x1616)))
(define-fun x688 ((x1616 Int)) Int (ite (= x1616 0) 1 (x2905 x1616)))
(define-fun x4642 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2905 x1616)))
(define-fun x3157 ((x1616 Int)) Int (ite (= x1616 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2788 x1616)))
(define-fun x3678 ((x1616 Int)) Int (ite (= 132 x1616) x322 (x3157 x1616)))
(define-fun x2442 ((x1616 Int)) Int (ite (= x1616 164) x759 (x3678 x1616)))
(define-fun x3905 ((x1616 Int)) Int (ite (= 196 x1616) x2537 (x2442 x1616)))
(define-fun x635 ((x1616 Int)) Int (ite (= x1616 0) 1 (x2357 x1616)))
(define-fun x4910 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2357 x1616)))
(define-fun x3513 ((x1616 Int)) Int (ite (= x1616 0) 1 (x2357 x1616)))
(define-fun x4549 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x2357 x1616)))
(define-fun x3545 ((x1616 Int)) Int (ite (= 128 x1616) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4461 x1616)))
(define-fun x2288 ((x1616 Int)) Int (ite (= 132 x1616) x322 (x3545 x1616)))
(define-fun x3692 ((x1616 Int)) Int (ite (= 164 x1616) x3937 (x2288 x1616)))
(define-fun x78 ((x1616 Int)) Int (ite (= 196 x1616) x3998 (x3692 x1616)))
(define-fun x895 ((x1616 x10)) Int (ite (= x207 x1616) x4175 (x2591 x1616)))
(define-fun x677 ((x1616 x10)) Int (ite (= x1616 x1910) x689 (x923 x1616)))
(define-fun x740 ((x1616 x10)) Int (ite x1731 (x923 x1616) (x677 x1616)))
(define-fun x1330 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x1927 x1616)))
(define-fun x3527 ((x1616 x10)) Int (ite (= x1616 x4055) x3584 (x385 x1616)))
(define-fun x4267 ((x1616 x10)) Int (ite (= x2329 x1616) x4320 (x3527 x1616)))
(define-fun x571 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x1927 x1616)))
(define-fun x507 ((x1616 x10)) Int (ite (= x1811 x1616) x708 (x846 x1616)))
(define-fun x2881 ((x1616 Int)) Int (ite (= x1616 0) 1 (x1927 x1616)))
(define-fun x1212 ((x1616 x10)) Int (ite (= x1616 x986) x2818 (x3750 x1616)))
(define-fun x2576 ((x1616 Int)) Int (ite (= x1616 0) 1 (x1927 x1616)))
(define-fun x2475 ((x1616 Int)) Int (ite (= 128 x1616) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3322 x1616)))
(define-fun x3339 ((x1616 Int)) Int (ite (= 132 x1616) x322 (x2475 x1616)))
(define-fun x3070 ((x1616 Int)) Int (ite (= x1616 164) x4413 (x3339 x1616)))
(define-fun x3737 ((x1616 Int)) Int (ite (= x1616 196) x3998 (x3070 x1616)))
(define-fun x1919 ((x1616 x10)) Int (ite (= x1616 x2932) x2663 (x2591 x1616)))
(define-fun x1313 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x3389 x1616)))
(define-fun x865 ((x1616 x10)) Int (ite (= x2922 x1616) x4454 (x385 x1616)))
(define-fun x2530 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x3389 x1616)))
(define-fun x2168 ((x1616 x10)) Int (ite (= x1203 x1616) x4391 (x846 x1616)))
(define-fun x3459 ((x1616 x10)) Int (ite (= x3521 x1616) x2473 (x2168 x1616)))
(define-fun x172 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x3389 x1616)))
(define-fun x1148 ((x1616 x10)) Int (ite (= x1616 x849) x279 (x3750 x1616)))
(define-fun x1556 ((x1616 Int)) Int (ite (= x1616 0) 1 (x3389 x1616)))
(define-fun x4316 ((x1616 Int)) Int (ite (= x1616 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1678 x1616)))
(define-fun x3571 ((x1616 Int)) Int (ite (= 132 x1616) x322 (x4316 x1616)))
(define-fun x3901 ((x1616 Int)) Int (ite (= 164 x1616) x759 (x3571 x1616)))
(define-fun x570 ((x1616 Int)) Int (ite (= x1616 196) x3998 (x3901 x1616)))
(define-fun x4793 ((x1616 x10)) Int (ite (= x4133 x1616) x3051 (x2591 x1616)))
(define-fun x2915 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x1779 x1616)))
(define-fun x2697 ((x1616 x10)) Int (ite (= x1616 x2300) x4064 (x385 x1616)))
(define-fun x2343 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x1779 x1616)))
(define-fun x4738 ((x1616 x10)) Int (ite (= x2854 x1616) x2856 (x846 x1616)))
(define-fun x1197 ((x1616 Int)) Int (ite (= x1616 0) 1 (x1779 x1616)))
(define-fun x4112 ((x1616 x10)) Int (ite (= x1616 x467) x605 (x3750 x1616)))
(define-fun x3486 ((x1616 x10)) Int (ite (= x457 x1616) x2696 (x4112 x1616)))
(define-fun x3104 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x1779 x1616)))
(define-fun x2455 ((x1616 x10)) Int (ite x2393 (x11 x1616) (x3388 x1616)))
(define-fun x403 ((x1616 x10)) Int (ite x872 (x2889 x1616) (x2867 x1616)))
(define-fun x2315 ((x1616 Int)) Int (ite (= 0 x1616) 0 (x905 x1616)))
(define-fun x4405 ((x1616 Int)) Int (ite (= 0 x1616) 0 (x905 x1616)))
(define-fun x879 ((x1616 Int)) Int (ite (= 0 x1616) 0 (x905 x1616)))
(define-fun x471 ((x1616 Int)) Int (ite (= 0 x1616) 0 (x2373 x1616)))
(define-fun x1004 ((x1616 Int)) Int (ite (= 0 x1616) 0 (x2373 x1616)))
(define-fun x4066 ((x1616 Int)) Int (ite (= x1616 0) 0 (x2373 x1616)))
(define-fun x2864 ((x1616 x10)) Int (ite x391 (x3750 x1616) (ite x2549 (x3750 x1616) (ite x1035 (x3750 x1616) (ite x2621 (x3750 x1616) (ite x4479 (x4112 x1616) (x3750 x1616)))))))
(define-fun x4274 ((x1616 x10)) Int (ite x2699 (x3750 x1616) (ite x598 (x3750 x1616) (ite x460 (x3750 x1616) (ite x2894 (x2864 x1616) (x3486 x1616))))))
(define-fun x1250 ((x1616 Int)) Int (ite (= 0 x1616) 0 (x4523 x1616)))
(define-fun x4087 ((x1616 x10)) Int (ite x870 (x846 x1616) (ite x3347 (x846 x1616) (ite x1340 (x846 x1616) (ite x1422 (x846 x1616) (ite x823 (x2168 x1616) (x846 x1616)))))))
(define-fun x4374 ((x1616 x10)) Int (ite x4637 (x846 x1616) (ite x1931 (x846 x1616) (ite x4058 (ite x2746 (x4087 x1616) (x3459 x1616)) (x846 x1616)))))
(define-fun x4827 ((x1616 Int)) Int (ite (= 0 x1616) 0 (x4523 x1616)))
(define-fun x2610 ((x1616 x10)) Int (ite x4115 (x385 x1616) (ite x2155 (x385 x1616) (ite x1809 (x385 x1616) (ite x2309 (x385 x1616) (ite x228 (x3527 x1616) (x385 x1616)))))))
(define-fun x185 ((x1616 x10)) Int (ite x3688 (x385 x1616) (ite x2486 (ite x2585 (x2610 x1616) (x4267 x1616)) (x385 x1616))))
(define-fun x3930 ((x1616 Int)) Int (ite (= 0 x1616) 0 (x4523 x1616)))
(define-fun x1618 ((x1616 Int)) Int (ite x878 (x2335 x1616) (x2186 x1616)))
(define-fun x784 ((x1616 Int)) Int (ite x973 (x2335 x1616) (x4319 x1616)))
(define-fun x1963 ((x1616 Int)) Int (ite x3321 (x2335 x1616) (x1427 x1616)))
(define-fun x27 ((x1616 Int)) Int (ite x163 (x2335 x1616) (x527 x1616)))
(define-fun x1713 ((x1616 Int)) Int (ite x2102 (x1618 x1616) (ite x148 (x784 x1616) (ite x515 (x1963 x1616) (x27 x1616)))))
(define-fun x1802 ((x1616 Int)) Int (ite x3238 (x2785 x1616) (x2013 x1616)))
(define-fun x3700 ((x1616 Int)) Int (ite x1153 (x2785 x1616) (x2167 x1616)))
(define-fun x591 ((x1616 Int)) Int (ite x4002 (x2785 x1616) (x4040 x1616)))
(define-fun x4662 ((x1616 Int)) Int (ite x4775 (x2785 x1616) (x4000 x1616)))
(define-fun x3809 ((x1616 Int)) Int (ite x3259 (x1802 x1616) (ite x3209 (x3700 x1616) (ite x1122 (x591 x1616) (x4662 x1616)))))
(define-fun x4590 ((x1616 Int)) Int (ite x1332 (x3536 x1616) (x262 x1616)))
(define-fun x4388 ((x1616 Int)) Int (ite x3142 (x3536 x1616) (x3944 x1616)))
(define-fun x1000 ((x1616 Int)) Int (ite x3138 (x3536 x1616) (x2823 x1616)))
(define-fun x2029 ((x1616 Int)) Int (ite x738 (x3536 x1616) (x338 x1616)))
(define-fun x654 ((x1616 Int)) Int (ite x1605 (x4590 x1616) (ite x921 (x4388 x1616) (ite x1179 (x1000 x1616) (x2029 x1616)))))
(define-fun x2741 ((x1616 Int)) Int (ite x775 (x2357 x1616) (x635 x1616)))
(define-fun x86 ((x1616 Int)) Int (ite x997 (x2357 x1616) (x4910 x1616)))
(define-fun x729 ((x1616 Int)) Int (ite x3720 (x2357 x1616) (x3513 x1616)))
(define-fun x3551 ((x1616 Int)) Int (ite x3086 (x2357 x1616) (x4549 x1616)))
(define-fun x3078 ((x1616 Int)) Int (ite x3496 (x2741 x1616) (ite x3605 (x86 x1616) (ite x4475 (x729 x1616) (x3551 x1616)))))
(define-fun x4724 ((x1616 Int)) Int (ite x4718 (x2905 x1616) (x735 x1616)))
(define-fun x4859 ((x1616 Int)) Int (ite x2275 (x2905 x1616) (x4684 x1616)))
(define-fun x4216 ((x1616 Int)) Int (ite x3332 (x2905 x1616) (x688 x1616)))
(define-fun x2779 ((x1616 Int)) Int (ite x3645 (x2905 x1616) (x4642 x1616)))
(define-fun x45 ((x1616 Int)) Int (ite x1399 (x4724 x1616) (ite x208 (x4859 x1616) (ite x3920 (x4216 x1616) (x2779 x1616)))))
(define-fun x2259 ((x1616 Int)) Int (ite x2445 (x85 x1616) (x4460 x1616)))
(define-fun x1675 ((x1616 Int)) Int (ite x3958 (x85 x1616) (x1393 x1616)))
(define-fun x2642 ((x1616 Int)) Int (ite x2004 (x85 x1616) (x693 x1616)))
(define-fun x3555 ((x1616 Int)) Int (ite x3414 (x85 x1616) (x4378 x1616)))
(define-fun x4631 ((x1616 Int)) Int (ite x2037 (x2259 x1616) (ite x2057 (x1675 x1616) (ite x4255 (x2642 x1616) (x3555 x1616)))))
(define-fun x197 ((x1616 Int)) Int (ite (= 0 x1616) 1 (x1541 x1616)))
(define-fun x3644 ((x1616 x10)) Int (ite (= x1616 (x3182 x322)) x4633 (x1574 x1616)))
(define-fun x2870 ((x1591 Int)) Bool (=> (and (not (= x1591 989455977)) (not (= x1591 75483562)) (not (= x1591 405663989)) (not (= 4294967296 x1591)) (not (= 2678788150 x1591)) (not (= 115792089237316195423570985008687907853269984665640564039457 x1591)) (not (= x1591 1856199391)) (not (= x1591 2796547477)) (not (= x1591 2217467699)) (not (= x1591 2858086653)) (not (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x1591)) (not (= 18446744073709551615 x1591)) (not (= x1591 988262939)) (not (= x1591 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1591 4238056678808933066457772256406219440718756300954938350892797929791311314944)) (not (= x1591 178855970)) (not (= x1591 3583811254)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1591)) (not (= x1591 599290589)) (not (= x1591 242558722)) (not (= x1591 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x1591 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (> x1591 10000) (not (= x1591 1461501637330902918203684832716283019655932542975)) (not (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x1591)) (not (= x1591 547091486)) (not (= x1591 24044834009420335638544845215851342251227478490780828673611325350056707489792)) (not (= x1591 2134560854)) (not (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x1591)) (not (= x1591 1857877511)) (not (= x1591 398450620)) (not (= x1591 3842108676)) (not (= 1313710058 x1591)) (not (= x1591 1000000000000000000)) (not (= x1591 2691771752)) (not (= x1591 117300739)) (not (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1591)) (not (= x1591 10936679508223583803006762266923565500374401145016910147028117655998246682624)) (not (= 1461501637330902918203684832716283019655932542976 x1591)) (not (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 x1591)) (not (= 157198259 x1591)) (not (= x1591 1466279372)) (not (= x1591 2030502250)) (not (= x1591 2023533118)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x1591)) (not (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x1591)) (not (= x1591 2835717307)) (not (= 2245473101 x1591)) (not (= x1591 2929553584)) (not (= x1591 1038142104)) (not (= x1591 2236579515)) (not (= x1591 72570022874062638528011751457397263716769196454539065078543251854057308946432)) (not (= 1865448899 x1591)) (not (= x1591 2362143243))) (not ((_ is x3187) (x3182 x1591)))))
(assert (x2185 x860))
(assert (x2185 x2794))
(assert (= (+ 1 (x862 x2871)) (x862 (x1324 x2871 1))))
(assert (x2185 x2766))
(assert (= x514 (and x329 x3540)))
(assert (x2185 x3357))
(assert (= x1397 (and x2236 (not x4649))))
(assert (= (and (not x1794) x439) x4881))
(assert (x2185 x3641))
(assert (= x2837 (and (not x1174) x2629)))
(assert (= (and (not x901) x3820) x2217))
(assert (x2185 x3825))
(assert (x2185 x1109))
(assert (= (and x3301 x3426) x2814))
(assert (x2185 x1513))
(assert (= (x862 (x3182 x1463)) x1463))
(assert (x2185 x3541))
(assert (= x4513 (and x47 (not x4336))))
(assert (= x4635 (and x2217 x3707)))
(assert (= (+ (x862 x1822) 2) (x862 (x1324 x1822 2))))
(assert (x2575 x4444))
(assert (= x2031 (x862 (x3182 x2031))))
(assert (x2185 x632))
(assert (x2185 x4557))
(assert (= (x862 (x3182 x489)) x489))
(assert (x2185 x4005))
(assert (= x871 (and x2512 x2093)))
(assert (= x430 (and x94 x445)))
(assert (= x1520 (or x2704 x350 x1667 x610)))
(assert (x2185 x2770))
(assert (x2870 x1064))
(assert (x2185 x4700))
(assert (= (or x2739 x412) x3849))
(assert (x2185 x3314))
(assert (x2185 x259))
(assert (x2185 x4283))
(assert (= x136 (and x1316 (not x1961))))
(assert (x2185 x3058))
(assert (= (and x80 x2263) x4078))
(assert (x2185 x3560))
(assert (= (and (not x2670) x3250) x4545))
(assert (x2185 x4418))
(assert (= x3848 (and x3191 x3242)))
(assert (x2185 x4296))
(assert (=> (<= x2364 10000) (= (x3182 x2364) (x3187 x2364))))
(assert (= (and x3877 x2310) x2084))
(assert (= 3583811254 (x862 (x3187 3583811254))))
(assert (x2185 x2279))
(assert (x2185 x4597))
(assert (x2870 x3080))
(assert (x2870 x1136))
(assert (x2185 x1751))
(assert (x2185 x1920))
(assert (x2185 x1493))
(assert (= (x862 (x3182 x4580)) x4580))
(assert (x2185 x4463))
(assert (= (or x4345 x2751 x4140 x3158 x3964 x871) x1153))
(assert (x2185 x3144))
(assert (= x4677 (and x2266 (not x904))))
(assert (= (x862 (x3187 1466279372)) 1466279372))
(assert (= (=> (and (= x334 x4124) (= x1016 x1813)) x1344) x1312))
(assert (= (x862 (x3187 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x2185 x3273))
(assert (= (and x3218 (not x1381)) x1934))
(assert (x2185 x2457))
(assert (= (and x2914 x4323) x1433))
(assert (= (or x65 x3356) x642))
(assert (= (or x1838 x2493) x3838))
(assert (= x4138 (not (and (< x2053 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2053) (= x1592 (x1013 (x3182 x2408) x848 0)) (>= x2053 0) (= (x1324 x1592 1) x1954) (= x2053 (x403 x1954))))))
(assert (x2185 x1204))
(assert (= (and x652 x939) x3867))
(assert (x2185 x2174))
(assert (= (=> (= (< 0 x4363) x2620) (and (=> (not x2620) x75) (=> (and (and (or (and x4155 (and (= (x1013 (x3182 x2773) x2764 0) x2016) (<= 0 x801) (= (> x4363 x801) x1537) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x801) (= x801 (x4759 x1112)) (= x1112 (x1324 x2016 2)) (= (not x1537) x3575))) (and (= x3575 x4155) (not x4155))) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2270) (<= 0 x2887) (= (x4759 x2595) x2887) (= x4155 (ite (> x2270 0) (not (= x2773 0)) (< 0 x2270))) (<= x2773 1461501637330902918203684832716283019655932542975) (>= x2773 0) (> 1461501637330902918203684832716283019655932542976 x2773) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2887) (= x2595 (x1324 x2490 2)) (= (x1013 (x3182 x685) x2764 0) x2490) (<= 0 x2270) (= 0 x2887) (= x2907 (x1324 x2764 1)) (= x685 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (not (= 0 x1194)) (= x1194 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= (x1095 x2907) x2773))) x2620) x390))) x1926))
(assert (x2185 x30))
(assert (x2185 x2107))
(assert (=> (<= x1363 10000) (= (x3182 x1363) (x3187 x1363))))
(assert (x2185 x1894))
(assert (= (and x1543 x4844) x4277))
(assert (= (x862 (x3182 x1202)) x1202))
(assert (= (x862 (x1324 x2476 2)) (+ 2 (x862 x2476))))
(assert (= x2604 (=> (and (= x2139 x807) (= x561 x573)) x3248)))
(assert (= (x862 (x3182 x4059)) x4059))
(assert (= x1229 (and x195 x1456)))
(assert (x2185 x3730))
(assert (x2185 x3585))
(assert (= x3815 (or (and x4512 x4293) (and (not x3995) x3709))))
(assert (= (or x3727 x683) x4760))
(assert (x2185 x3115))
(assert (= x956 (or x1633 x2084 x1697 x2106 x4665 x3009)))
(assert (x2185 x4691))
(assert (x2870 x1816))
(assert (= x4072 (and x1117 (not x4179))))
(assert (= (=> (and (= x2365 x2602) (= x2993 x1193)) x3908) x4780))
(assert (x2185 x1846))
(assert (x2185 x1816))
(assert (x2185 x4118))
(assert (= x816 (and x2765 x1903)))
(assert (= x4427 (and x2868 (not x2417))))
(assert (= x313 (=> (= (< 0 x962) x3697) (and (=> (and (not x3697) (= x1370 x2759)) x1253) (=> (and (and (or (and x3797 (and (= (x4164 x2427) x58) (>= x58 0) (= (x1013 (x3182 x1642) x1072 0) x456) (= x916 (not x4777)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58) (= (< x58 x962) x4777) (= x2427 (x1324 x456 2)))) (and (= x3797 x916) (not x3797))) (and (= (ite (> x2270 0) (not (= x1642 0)) (> x2270 0)) x3797) (> 1461501637330902918203684832716283019655932542976 x1642) (<= 0 x1642) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2270) (= (x1013 (x3182 x3502) x1072 0) x4869) (<= 0 x2270) (= x984 0) (= (x4164 x545) x984) (= (x1324 x1072 1) x4552) (>= x984 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x984) (>= 1461501637330902918203684832716283019655932542975 x1642) (not (= 0 x3502)) (= x1642 (x4595 x4552)) (= (x1324 x4869 2) x545))) x3697) x2087)))))
(assert (= x77 (and (not x1024) x2835)))
(assert (x2185 x3316))
(assert (x2870 x4159))
(assert (= (and x231 x2827) x301))
(assert (x2185 x3309))
(assert (= (+ (x862 x2144) 1) (x862 (x1324 x2144 1))))
(assert (x2185 x4103))
(assert (= (and x3170 (not x3903)) x1976))
(assert (= (and x3656 x1610) x2504))
(assert (x2185 x2838))
(assert (x2185 x90))
(assert (x2185 x2817))
(assert (=> (>= 10000 x3230) (= (x3182 x3230) (x3187 x3230))))
(assert (x2870 x4581))
(assert (= (or x1275 x4192 x19 x4504) x2675))
(assert (= x383 (and x3183 (not x1472))))
(assert (x2185 x2270))
(assert (= (and x3130 x3763) x1842))
(assert (= (and x3923 x4571) x1987))
(assert (x2185 x2470))
(assert (=> (>= 10000 x2514) (= (x3182 x2514) (x3187 x2514))))
(assert (x2185 x3696))
(assert (x2185 x2462))
(assert (= (x862 (x1324 x3383 1)) (+ 1 (x862 x3383))))
(assert (x2185 x2603))
(assert (x2185 x731))
(assert (= (and x3704 (not x3483)) x4132))
(assert (x2185 x1468))
(assert (x2185 x655))
(assert (x2185 x1415))
(assert (= (and x3442 x4598) x1562))
(assert (= x1876 (x862 (x3182 x1876))))
(assert (x2185 x2844))
(assert (= x3095 (or x1206 x3184)))
(assert (x2185 x1956))
(assert (= x2349 (=> (and (= x3437 x2686) (= x3705 x1843)) x4197)))
(assert (= (and x1084 x3427) x406))
(assert (= (x862 (x3182 x1352)) x1352))
(assert (x2185 x3396))
(assert (x2185 x1130))
(assert (x2185 x3163))
(assert (x2185 x4771))
(assert (x2185 x2694))
(assert (= x3539 (and x4 x3751)))
(assert (x2185 x3758))
(assert (x2870 x171))
(assert (x2185 x3341))
(assert (x2870 x4413))
(assert (x2185 x410))
(assert (= (x862 (x3182 x115)) x115))
(assert (= x3812 (and (not x650) x3014)))
(assert (= x3262 (or x3988 x3095 x2225)))
(assert (= x4200 (and x3779 x1756)))
(assert (= (+ 1 (x862 x1076)) (x862 (x1324 x1076 1))))
(assert (x2185 x3297))
(assert (x2185 x839))
(assert (x2870 x2397))
(assert (x2185 x76))
(assert (= (and x1934 x1839) x1759))
(assert (= (x862 (x3182 x728)) x728))
(assert (x2185 x1363))
(assert (=> (>= 10000 x2773) (= (x3187 x2773) (x3182 x2773))))
(assert (x2185 x2183))
(assert (x2185 x396))
(assert (x2185 x3826))
(assert (= (and (not x3107) x3893) x4823))
(assert (= (x862 (x3182 x998)) x998))
(assert (= x4637 (or x2657 x2952)))
(assert (= (x862 (x3182 x2600)) x2600))
(assert (x2185 x3307))
(assert (= x1676 (=> (and (= x4817 x3806) (= 0 x4685)) x2667)))
(assert (x2870 x2124))
(assert (x2185 x3798))
(assert (x2185 x1019))
(assert (= x4062 (=> (and (= x3875 x76) (= x3526 0)) x559)))
(assert (x2185 x1510))
(assert (x3909 x1708))
(assert (=> (<= x2836 10000) (= (x3187 x2836) (x3182 x2836))))
(assert (= (and (not x2448) x4788) x4917))
(assert (x2185 x2413))
(assert (x2185 x3735))
(assert (= x1494 (and x1297 x3524)))
(assert (=> (<= x322 10000) (= (x3182 x322) (x3187 x322))))
(assert (= x2781 (or x738 x1561)))
(assert (= (and x3023 x3860) x2735))
(assert (x2185 x2913))
(assert (= (or x1981 x464) x4905))
(assert (x2185 x867))
(assert (x2185 x3547))
(assert (x2185 x4129))
(assert (= (or x319 x514) x3335))
(assert (x2185 x3703))
(assert (x2185 x334))
(assert (= x431 (=> (and (= x3204 x1662) (= x1434 x1157) (= x3136 x604) (= x1151 x4127) (= x3786 x2671)) x4162)))
(assert (= x1877 (=> (and (= x1787 x1434) (= x1151 x4127) (= x3136 x3207) (= x2926 x2671) (= x1680 x3204)) x4162)))
(assert (x2185 x3382))
(assert (= (x862 (x1324 x3693 1)) (+ 1 (x862 x3693))))
(assert (x2185 x4606))
(assert (=> (<= x685 10000) (= (x3182 x685) (x3187 x685))))
(assert (= (x3187 1461501637330902918203684832716283019655932542975) (x3182 1461501637330902918203684832716283019655932542975)))
(assert (x2185 x42))
(assert (x2185 x184))
(assert (x2185 x4747))
(assert (= (x3182 2245473101) (x3187 2245473101)))
(assert (= x3766 (=> (= x4452 (= x2380 x2695)) (and (=> (and (= x680 (< 0 x2380)) (not x4452)) (and (=> (not x680) x3325) (=> (and x680 (and (or (and (= x288 (x1324 x1847 1)) x420) (and (not x420) (and (= (x1324 x1076 1) x1442) (= (x1013 (x3182 x3018) x1847 0) x1076)))) (and (>= x3018 0) (>= x3216 0) (<= 0 x2304) (<= x3018 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x3018) (> 1461501637330902918203684832716283019655932542976 x3216) (= x2304 (x2166 x3072)) (= x3072 (x1324 x3590 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2304) (not (= 0 x2304)) (= x3590 (x1324 x3383 1)) (= (x725 x3590) x3216) (= (x619 x3383) x3018) (>= 1461501637330902918203684832716283019655932542975 x3216) (= x420 (= x3018 0)) (= x3144 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= x3383 (x1013 (x3182 x3144) x1847 0))))) x2626))) (=> x4452 x483)))))
(assert (x2185 x962))
(assert (= (x862 (x3182 x4786)) x4786))
(assert (x2185 x3937))
(assert (= x2903 (or x927 x4638)))
(assert (= (and x2837 x1140) x1906))
(assert (= x997 (or x782 x2631 x1889 x1941 x1236 x4305)))
(assert (x2185 x1535))
(assert (x2185 x2623))
(assert (= (=> (and (= 0 x334) (= x1016 x4699)) x1312) x3168))
(assert (x2185 x631))
(assert (x2870 x3018))
(assert (= x3761 (and x4230 x2451)))
(assert (= (and x1804 x1585) x121))
(assert (x2185 x1957))
(assert (x2185 x3723))
(assert (x2185 x554))
(assert (= x1600 (and x4217 x4507)))
(assert (x2185 x1161))
(assert (x2185 x2098))
(assert (x2185 x3450))
(assert (x2185 x2369))
(assert (x2185 x3861))
(assert (x2185 x608))
(assert (= (x3187 117300739) (x3182 117300739)))
(assert (x2185 x4851))
(assert (x2185 x4363))
(assert (x2185 x142))
(assert (= x97 (and x4730 (not x2895))))
(assert (= x2639 (=> (and (= (= x4636 0) x2911) (or x2911 (not x2911))) x1047)))
(assert (x2185 x3788))
(assert (= x2801 x4279))
(assert (= x2514 (x862 (x3182 x2514))))
(assert (x2185 x3677))
(assert (= (or x1774 x4427) x3565))
(assert (= (+ 1 (x862 x1072)) (x862 (x1324 x1072 1))))
(assert (= (=> (and (= 0 x2390) (= x3674 x3378)) x4870) x3434))
(assert (x2185 x4673))
(assert (= (and x850 (not x3411)) x1512))
(assert (= (not (and (<= 0 x4414) (= x4491 (x1013 (x3182 x2171) x2764 0)) (= (x3776 x2884) x4414) (= (x1324 x4491 1) x2884) (< x4414 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x4414))) x2008))
(assert (= (and x134 (not x3231)) x4358))
(assert (= x1756 (or x478 x1997)))
(assert (= x3679 (and (not x4107) x702)))
(assert (x2185 x1147))
(assert (x2185 x3674))
(assert (= (and x3272 (not x2936)) x2289))
(assert (x2185 x1577))
(assert (= (=> (and (= x4032 x3074) (= x3786 x1394) (= x3623 x4127) (= x2044 x4597)) x3041) x1968))
(assert (= (and (not x2181) x4317) x394))
(assert (x2185 x1335))
(assert (x2870 x3770))
(assert (x2185 x937))
(assert (= x4441 (or x1075 (and x4815 (not x2358)))))
(assert (= x3688 (or x1286 x265)))
(assert (=> (<= x20 10000) (= (x3182 x20) (x3187 x20))))
(assert (= (or x4006 x4583) x3621))
(assert (x2185 x122))
(assert (x2185 x3615))
(assert (= x4504 (and (not x8) x2130)))
(assert (x2185 x3898))
(assert (= (and x4858 (not x2573)) x3793))
(assert (x2185 x3886))
(assert (= x161 (=> (and (= x1491 x2446) (= x3998 x1282) (= x3369 x2954)) x4727)))
(assert (= (=> (and (= x3890 x3965) (= x1166 x2891)) x3792) x2581))
(assert (x2185 x3649))
(assert (x2185 x2430))
(assert (=> (<= x1801 10000) (= (x3182 x1801) (x3187 x1801))))
(assert (= (and x880 x2968) x3423))
(assert (x2185 x2480))
(assert (= (and x701 x1405) x3880))
(assert (x2185 x300))
(assert (= (and (not x3946) x452) x1375))
(assert (x2185 x1765))
(assert (x2185 x4847))
(assert (x2185 x2993))
(assert (x2185 x4600))
(assert (= (and (not x2017) x1402) x3407))
(assert (= x4672 (=> (and (= x4575 x1579) (= 0 x3229)) x1773)))
(assert (= (x3187 1857877511) (x3182 1857877511)))
(assert (x2185 x2069))
(assert (x2185 x3331))
(assert (x2185 x546))
(assert (= (and x4292 x1107) x3959))
(assert (= (and (not x2943) x2541) x2039))
(assert (= x2312 (and (not x1980) x2012)))
(assert (= x1726 (=> (and (= x3965 x3139) (= x2891 x1091)) x3792)))
(assert (= (and x2291 (not x524)) x1938))
(assert (x2185 x3401))
(assert (= (x862 (x3187 599290589)) 599290589))
(assert (x2185 x2730))
(assert (= (and x1980 x2012) x3337))
(assert (= (and x49 x572) x1735))
(assert (= x3958 (or x1227 x359 x206 x1687 x4715 x4152)))
(assert (x2185 x3769))
(assert (= (and x3497 x3208) x1369))
(assert (=> (>= 10000 x395) (= (x3187 x395) (x3182 x395))))
(assert (= x3897 (=> (and (= x726 x1394) (= x335 x558) (= x3547 x4597) (not (= x2077 0)) (= x2875 x3623)) x1392)))
(assert (= x4618 (and x1548 x4299)))
(assert (= (x862 (x1324 x3235 1)) (+ (x862 x3235) 1)))
(assert (= (and x1660 x874) x4824))
(assert (= x4486 (and x524 x2291)))
(assert (x2185 x2162))
(assert (x2185 x2606))
(assert (x2185 x1416))
(assert (= (x862 (x3187 242558722)) 242558722))
(assert (x2185 x510))
(assert (x2185 x182))
(assert (= (and x2222 (not x4399)) x1382))
(assert (= (=> (and (= (= x1707 0) x4085) (or (and (= x4487 (x1324 x1347 2)) x4085) (and (not x4085) (= (x1013 (x3182 x1707) x1347 0) x110)))) x802) x3263))
(assert (= (=> (and (= x4124 x3817) (= x929 x1813)) x1344) x3948))
(assert (= (and (not x3609) x2064) x3118))
(assert (x2185 x2040))
(assert (= x1716 (or x4084 x1842)))
(assert (x2185 x3781))
(assert (= x3877 (and x3026 (not x4448))))
(assert (= x4768 (and (not x4462) x4309)))
(assert (x2185 x4254))
(assert (= (and x3847 x4813) x1319))
(assert (x2185 x4632))
(assert (x2185 x3537))
(assert (= x4334 (and (not x3943) x3616)))
(assert (=> (>= 10000 x4920) (= (x3187 x4920) (x3182 x4920))))
(assert (= (and (not x3977) x4540) x877))
(assert (x2185 x1364))
(assert (x2185 x1255))
(assert (x2870 x3173))
(assert (= x2809 (and x2700 (not x1970))))
(assert (x2185 x2684))
(assert (= (=> (and (= x3331 x4575) (= 0 x1359)) x4769) x3303))
(assert (= (+ 1 (x862 x3532)) (x862 (x1324 x3532 1))))
(assert (= (+ (x862 x885) 1) (x862 (x1324 x885 1))))
(assert (= (and x2833 x945) x2147))
(assert (= (or (and x1607 x4459) (and x4109 (not x277)) x4514 (and x1699 (not x4713)) (and x1438 x2592) x4069) x1272))
(assert (= x63 (and x139 x2643)))
(assert (x2185 x2400))
(assert (= x768 (and x3107 x3893)))
(assert (= (and x3561 x4126) x4069))
(assert (= x2892 (and x305 x4834)))
(assert (x2185 x3961))
(assert (= x2366 (and x1387 x297)))
(assert (= (and (not x3797) x2533) x597))
(assert (x2870 x4687))
(assert (= (and (not x4128) x3019) x107))
(assert (x2185 x2453))
(assert (= (x862 (x1324 x3747 1)) (+ 1 (x862 x3747))))
(assert (x2185 x2971))
(assert (= (and x3943 x3616) x2677))
(assert (= (and (not x2983) x1410) x2469))
(assert (= (=> (and (= x4165 x4269) (= x4848 x4879)) x4250) x336))
(assert (= (and x4196 x1241) x1672))
(assert (x2185 x2656))
(assert (x2185 x204))
(assert (x2185 x4690))
(assert (x516 x1529))
(assert (x2185 x1483))
(assert (= (and (not x1589) x786) x3616))
(assert (x2185 x4177))
(assert (x613 x2232))
(assert (x2185 x4804))
(assert (x2185 x3498))
(assert (x2185 x2825))
(assert (= x3288 (or x1137 x226)))
(assert (x2185 x3546))
(assert (= (+ 1 (x862 x3757)) (x862 (x1324 x3757 1))))
(assert (x2185 x448))
(assert (= (and x1086 x2589) x3663))
(assert (= x3230 (x862 (x3182 x3230))))
(assert (= x4888 (or x4617 x890 x843 x3887 x3927)))
(assert (x2185 x2067))
(assert (=> (<= x3410 10000) (= (x3187 x3410) (x3182 x3410))))
(assert (x2185 x1507))
(assert (= x155 (=> (and (or (and (= x962 x2152) x935) (and (= x962 0) (not x935))) (and (= x935 (> x2152 x3730)) (<= x3730 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3730 0))) x4603)))
(assert (= x4900 (and x3816 x1439)))
(assert (x2185 x745))
(assert (x2185 x1873))
(assert (x2185 x1386))
(assert (= (and (not x4111) x4695) x4749))
(assert (= (+ (x862 x622) 1) (x862 (x1324 x622 1))))
(assert (x2185 x3367))
(assert (= (x862 (x3182 x346)) x346))
(assert (=> (<= x91 10000) (= (x3182 x91) (x3187 x91))))
(assert (=> (<= x2985 10000) (= (x3187 x2985) (x3182 x2985))))
(assert (= x3656 (or x3404 x2903 x3293)))
(assert (= x4349 (and x3849 (not x2761))))
(assert (x2870 x4261))
(assert (x2185 x4432))
(assert (x2185 x1638))
(assert (x2185 x146))
(assert (= x1264 (x862 (x3182 x1264))))
(assert (x2185 x151))
(assert (= x492 (and x1985 (not x751))))
(assert (x2185 x2385))
(assert (= x2193 (or (and (not x811) x37) (and x1259 x2689))))
(assert (= (and x4372 x4924) x625))
(assert (= (and (not x969) x4051) x3932))
(assert (x2185 x3474))
(assert (x2185 x458))
(assert (=> (>= 10000 x2692) (= (x3187 x2692) (x3182 x2692))))
(assert (x2185 x2403))
(assert (x2185 x1666))
(assert (= x2000 x75))
(assert (x2185 x3229))
(assert (x2185 x3673))
(assert (= (and (not x4808) x3658) x2396))
(assert (= x4689 (or x2381 x4395)))
(assert (x2185 x1881))
(assert (= (=> (and (= x4636 x4322) (= x3598 x1235)) x2639) x1280))
(assert (x2185 x4548))
(assert (= (and (=> (and x3749 (and (= x2408 x4149) (= x4212 x4261) (= x848 x3304))) x4138) (=> (and (not x3749) (and (= x4123 x4149) (= x4527 1))) x4468)) x1160))
(assert (= x2192 (=> (and (= x59 x13) (= x1758 x2280)) x4772)))
(assert (= (and (not x1348) x2548) x1857))
(assert (= x3991 (and x2222 x4399)))
(assert (=> (<= x2459 10000) (= (x3187 x2459) (x3182 x2459))))
(assert (= x2565 (=> (= (= 0 x3190) x4796) (and (=> (and (not x4796) (= (or (> x3836 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3836 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3836)))) x672)) (and (=> (and (not x672) (and (= 1 x4544) (= x2248 x2098) (= x2798 x3429))) x1649) (=> (and (= x3101 x3429) x672) x3373))) (=> (and (= x3429 x3101) x4796) x3373)))))
(assert (x2185 x1707))
(assert (x2185 x3387))
(assert (x2185 x1444))
(assert (x2185 x1750))
(assert (x2185 x3283))
(assert (x2185 x648))
(assert (= x75 x2594))
(assert (= x4665 (and x355 x4892)))
(assert (x2185 x928))
(assert (x2185 x4354))
(assert (x2185 x4683))
(assert (x2185 x1499))
(assert (= x4197 (=> (and (= (= 0 x2686) x3767) (or (not x3767) x3767)) x3869)))
(assert (= x3090 (and x2406 x1996)))
(assert (= (and x3794 x384) x4131))
(assert (= (and x4452 x1068) x511))
(assert (x2185 x3267))
(assert (=> (>= 10000 x3677) (= (x3187 x3677) (x3182 x3677))))
(assert (x2185 x712))
(assert (= (and x1663 (not x2036)) x3020))
(assert (= x2655 (and x696 (not x3439))))
(assert (x2185 x869))
(assert (= (+ (x862 x1827) 2) (x862 (x1324 x1827 2))))
(assert (= x3111 (and x3400 x549)))
(assert (x2185 x4071))
(assert (= (and x305 (not x4834)) x4574))
(assert (x2185 x4343))
(assert (= (and x1154 x400) x2519))
(assert (= x1931 (or x1953 x389)))
(assert (x2185 x4041))
(assert (x2870 x889))
(assert (x2185 x1038))
(assert (=> (>= 10000 x340) (= (x3182 x340) (x3187 x340))))
(assert (= x1966 (and x2227 (not x3619))))
(assert (= (or x3885 x2931) x4664))
(assert (x2185 x116))
(assert (x2185 x4589))
(assert (x2185 x4311))
(assert (= x285 (=> (and (= x941 x2926) (= 0 x1787) (= x1680 x2480)) x1877)))
(assert (= (+ 1 (x862 x14)) (x862 (x1324 x14 1))))
(assert (=> (<= x1876 10000) (= (x3182 x1876) (x3187 x1876))))
(assert (= x4514 (and x3045 x133)))
(assert (= (and x4128 x3019) x1244))
(assert (x2185 x1279))
(assert (= x3348 (or x2894 x748)))
(assert (= x2513 (and x1835 x1480)))
(assert (x2185 x2286))
(assert (= (and x4292 (not x1107)) x2709))
(assert (= (=> (and (= (x1324 x2049 1) x2871) (= (x1324 x2871 1) x2509) (= (x1013 (x3182 x3502) x1072 0) x2049) (= x411 x1370)) x313) x2423))
(assert (x2185 x536))
(assert (= (and (not x577) x3097) x4110))
(assert (x2185 x4592))
(assert (= x2046 (and x4262 (not x1345))))
(assert (= (and (not x2550) x1559) x4056))
(assert (= (x862 (x3182 x1415)) x1415))
(assert (x2185 x2772))
(assert (x2185 x1184))
(assert (= x2251 (and x4663 x3262)))
(assert (x2185 x1079))
(assert (= x1723 (and x1 x2710)))
(assert (= (=> (and (or x1621 (not x1621)) (= (= x2365 0) x1621)) x4717) x3908))
(assert (= x840 (and (not x4813) x3847)))
(assert (= x1492 (=> (and (= x2115 0) (= x526 x377)) x777)))
(assert (x2185 x2202))
(assert (x2185 x1376))
(assert (= (and x2438 (not x1946)) x1985))
(assert (= (and x323 x2191) x472))
(assert (= (x862 (x3182 x3671)) x3671))
(assert (= x2786 (and x2351 x2615)))
(assert (x2185 x1907))
(assert (= (and x378 x2596) x4034))
(assert (x2185 x340))
(assert (= x1082 (and x1467 (not x4537))))
(assert (= (+ (x862 x506) 2) (x862 (x1324 x506 2))))
(assert (= x649 (=> (and (= x3763 (< 0 x3828)) (or (and (not x3763) (and (= x2446 x2260) (= x1282 x3361))) (and (and (= x3828 x2158) (> x2240 0) (not (< x3361 x3828)) (= (x2214 (- x3361 x3828)) x757) (= (+ x3379 x1623) x4416) (= (ite x2805 1 0) x4737) (= x3052 x2260) (= (div x2468 x2240) x1141) (= x2805 (< 115792089237316195423570985008687907853269984665640564039457 x3828)) (= x2240 (x4208 x1225)) (= x1033 (x1448 x1373)) (= x757 x1282) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2260 x3828)) (<= x2240 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (* x744 1000000000000000000) x2468) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x2459) (= x1623 x4463) (= 0 x4737) (= (x1013 (x3182 x2459) (x3187 165) 0) x1225) (>= x1033 0) (= x744 (mod (* 1000000000000000000 x3828) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1324 x778 3) x1373) (= x4463 (div x1141 1000000000000000000)) (= x2446 x1800) (<= x1033 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x744)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4463 x1033)) (= x1800 (+ x2158 x3052)) (= x1033 x3379) (<= 0 x2240)) x3763))) x161)))
(assert (= (and (not x2527) x857) x2584))
(assert (= (and x4352 (not x81)) x4031))
(assert (x2185 x4546))
(assert (= (and x3576 x771) x3832))
(assert (x2870 x4547))
(assert (= x785 (=> (and (= 0 x4322) (= x3875 x1235)) x1280)))
(assert (= (x862 (x3182 x4082)) x4082))
(assert (= (or (and x3477 x3620) (and x4089 (not x540))) x3184))
(assert (x2870 x2364))
(assert (x2185 x3987))
(assert (x2185 x3888))
(assert (= x3268 (or x1672 (and x4196 (not x1241)))))
(assert (x2185 x1263))
(assert (=> (>= 10000 x3462) (= (x3187 x3462) (x3182 x3462))))
(assert (= (x862 (x3187 405663989)) 405663989))
(assert (x2185 x1837))
(assert (x2870 x2633))
(assert (x2185 x4231))
(assert (=> (>= 10000 x4903) (= (x3187 x4903) (x3182 x4903))))
(assert (= x1471 (and (not x1420) x337)))
(assert (x2185 x3149))
(assert (= (or (and (not x1639) x3454) x4166) x2432))
(assert (x2185 x341))
(assert (= (and x4705 x3659) x3452))
(assert (x2185 x3358))
(assert (= (or x2399 x2046) x2733))
(assert (= (x862 (x3187 178855970)) 178855970))
(assert (x2185 x2422))
(assert (x2185 x3220))
(assert (x2870 x1295))
(assert (x2185 x4331))
(assert (= (and x1539 x1276) x433))
(assert (= x1450 (=> (and (= x4165 0) (= x4817 x4879)) x336)))
(assert (= x1179 (or x4031 x3138)))
(assert (= x4698 (or x2207 x1272)))
(assert (= 2678788150 (x862 (x3187 2678788150))))
(assert (x2185 x4527))
(assert (x2870 x2836))
(assert (x2185 x4068))
(assert (x2185 x4679))
(assert (= (and x444 x394) x1763))
(assert (x2185 x3453))
(assert (= (and x2899 x100) x4909))
(assert (x2185 x4271))
(assert (= (and x902 (not x3900)) x3784))
(assert (= x2374 (or x3414 x893)))
(assert (x2185 x2044))
(assert (x2185 x3789))
(assert (= (and x1504 (not x1924)) x2035))
(assert (= x4313 (x862 (x3182 x4313))))
(assert (= (and x1001 x1703) x412))
(assert (= x3427 (or x455 x1470 x1723)))
(assert (= x800 (and x108 x2224)))
(assert (= x4395 (and x4655 x121)))
(assert (= (and x3475 (not x3471)) x730))
(assert (= (and x347 (not x4036)) x4882))
(assert (= x1168 (and x4401 (not x3233))))
(assert (x2185 x3785))
(assert (x2185 x43))
(assert (x2185 x705))
(assert (= (=> (and (>= x3198 0) (= x2816 (x1324 x2132 1)) (= x520 false) (= x3022 (x866 x2816)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3022) (>= x3022 0) (<= x3198 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1519 x2132) x3198) (= x4866 false)) x4156) x2966))
(assert (x2185 x4809))
(assert (x2185 x4385))
(assert (x2185 x4849))
(assert (x2870 x4903))
(assert (x2185 x3614))
(assert (x2185 x609))
(assert (x2185 x3277))
(assert (x2185 x3713))
(assert (= x4035 (and (not x4893) x1178)))
(assert (x2185 x4553))
(assert (x2185 x4544))
(assert (x2185 x4833))
(assert (= (x862 (x1324 x2132 1)) (+ 1 (x862 x2132))))
(assert (x2185 x3773))
(assert (x2185 x465))
(assert (x2185 x708))
(assert (x2185 x2137))
(assert (= (or x2902 x1189) x4681))
(assert (= (and (not x4237) x462) x1262))
(assert (= (or x1716 x3506) x445))
(assert (= (and x2210 x4050) x1553))
(assert (x2870 x3789))
(assert (x2185 x605))
(assert (x2185 x4021))
(assert (= (or x1290 x3605 x3496 x4475) x4815))
(assert (x2870 x1389))
(assert (x2185 x4848))
(assert (x2185 x2077))
(assert (x2575 x4387))
(assert (x2185 x111))
(assert (x2185 x791))
(assert (x2185 x534))
(assert (= (=> (and (= x4205 (ite (< x2419 x2270) (not (= 0 x91)) (> x2270 x2419))) (or (and (not x4205) (and (and (>= 1461501637330902918203684832716283019655932542975 x473) (= (= x473 0) x137) (< x473 1461501637330902918203684832716283019655932542976) (= x473 (x4595 x4552)) (<= 0 x473)) (or (and (and (= (x1013 (x3182 x3502) x1072 0) x3417) (>= 1461501637330902918203684832716283019655932542975 x171) (= x3553 (x1324 x4552 1)) (= (x1013 (x3182 x171) x1072 0) x859) (= (x1324 x859 1) x2151) (= x661 (x1324 x3417 1)) (> 1461501637330902918203684832716283019655932542976 x171) (<= 0 x171) (= (x1324 x661 1) x129) (= x171 (x425 x3553)) (= x3829 (x227 (+ x1370 96))) (= x4263 x3829)) (not x137)) (and (and (= (x1324 x3896 1) x3747) (= x4613 (x227 (+ 96 x1370))) (= x1515 (x1324 x3747 1)) (= x3896 (x1013 (x3182 x3502) x1072 0)) (= x4263 x4613) (= (x1324 x4552 1) x407)) x137)))) (and (and (and (< x4337 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x4337) (= (x4595 x4552) x4337) (= x2725 (x2214 (- x91 x4337))) (= x8 (> x2725 0)) (>= x4337 0)) (or (and x8 (and (= (x1013 (x3182 x1352) x1072 0) x716) (<= 0 x1352) (= (x1013 (x3182 x91) x1072 0) x3355) (= x4263 x2900) (< x1352 1461501637330902918203684832716283019655932542976) (= x1352 (x656 x4536)) (= x2646 (x1324 x2682 1)) (= x3842 (x1324 x716 1)) (= x2682 (x1013 (x3182 x3502) x1072 0)) (= x2900 (x227 (+ x1370 96))) (= (x1324 x2646 1) x2237) (>= 1461501637330902918203684832716283019655932542975 x1352) (= x4536 (x1013 (x3182 x91) x1072 0)))) (and (not x8) (and (= x2925 (x1013 (x3182 x3502) x1072 0)) (= (x1324 x2925 1) x3951) (= (x227 (+ 96 x1370)) x2290) (= (x1013 (x3182 x91) x1072 0) x1613) (= (x1324 x3951 1) x804) (= x4263 x2290))))) x4205))) x2308) x1540))
(assert (x2185 x88))
(assert (= (and x583 x517) x2236))
(assert (x2185 x2683))
(assert (= (and x2840 (not x4639)) x2418))
(assert (x2185 x3188))
(assert (x2185 x2441))
(assert (= x3130 (or x1015 x4024)))
(assert (x2870 x115))
(assert (x2185 x388))
(assert (x2185 x4652))
(assert (= (and x4048 x3559) x1853))
(assert (x2185 x3391))
(assert (x2185 x3274))
(assert (x2185 x3845))
(assert (x2185 x2253))
(assert (= (and (not x4806) x3603) x2117))
(assert (x2185 x917))
(assert (x2185 x447))
(assert (= x3520 (or x770 x761 x1176 x2311 x2318 x4824)))
(assert (= (and (not x2310) x3877) x4471))
(assert (= x1884 (x862 (x3182 x1884))))
(assert (= (or x934 x1731) x3424))
(assert (= (and x642 x2234) x829))
(assert (= (and x969 x4051) x1071))
(assert (= x3396 (x862 (x3182 x3396))))
(assert (= (x862 (x3182 x2633)) x2633))
(assert (= (and x779 x2425) x641))
(assert (= x4161 (=> (and (= x526 x3970) (= 0 x4074)) x3637)))
(assert (=> (<= x560 10000) (= (x3182 x560) (x3187 x560))))
(assert (= x4384 (and x406 (not x419))))
(assert (x2185 x2404))
(assert (= x592 (and (not x3349) x1641)))
(assert (= (or x3075 x4030) x4201))
(assert (x2185 x3549))
(assert (x2185 x1845))
(assert (x2185 x3701))
(assert (= x4279 x668))
(assert (x2185 x3408))
(assert (x2185 x3392))
(assert (= (and x1322 x3592) x4634))
(assert (= (x862 (x3182 x1801)) x1801))
(assert (= (and x1024 x2835) x861))
(assert (x2185 x1908))
(assert (= x3772 (and x1502 x4464)))
(assert (x2185 x4576))
(assert (x2185 x2187))
(assert (x2185 x3660))
(assert (x2185 x960))
(assert (x2870 x4445))
(assert (=> (<= x639 10000) (= (x3182 x639) (x3187 x639))))
(assert (x2185 x2005))
(assert (= x2552 (or x1976 x816 x3695 x3452 x4340)))
(assert (= x2608 (and x1868 x4350)))
(assert (x2185 x4801))
(assert (x2185 x2920))
(assert (= (+ 1 (x862 x3764)) (x862 (x1324 x3764 1))))
(assert (x2185 x4790))
(assert (x2185 x395))
(assert (= x2827 (and (not x880) x2968)))
(assert (= x1275 (and x2130 x8)))
(assert (x2185 x1785))
(assert (= x2692 (x862 (x3182 x2692))))
(assert (x2185 x4904))
(assert (= (and x2849 x2337) x1993))
(assert (= (+ (x862 x2764) 2) (x862 (x1324 x2764 2))))
(assert (= x4707 (and x2842 x2831)))
(assert (x2185 x1657))
(assert (= (x862 (x1324 x4869 2)) (+ 2 (x862 x4869))))
(assert (= x1051 (and x1322 (not x3592))))
(assert (= x1237 (and x2578 x2055)))
(assert (= (x3182 1865448899) (x3187 1865448899)))
(assert (= (x3182 2796547477) (x3187 2796547477)))
(assert (= x1568 (and (not x3135) x2095)))
(assert (= (and x3617 x2041) x720))
(assert (x2185 x2878))
(assert (x2185 x2206))
(assert (x2185 x3299))
(assert (x2185 x2471))
(assert (x2185 x1288))
(assert (x2185 x2622))
(assert (= x355 (and x851 x1428)))
(assert (= x3658 (and x2892 x2859)))
(assert (= x3173 (x862 (x3182 x3173))))
(assert (= x553 (=> (and (and (= (> x3361 x3342) x3794) (= (x227 (+ 32 x3083)) x4747)) (or (and x3794 (and (= (= x1850 0) x57) (= x728 x1850) (<= x1850 1461501637330902918203684832716283019655932542975) (= (x1324 x3532 1) x3721) (= (not x57) x302) (= x3532 (x1013 (x3182 x4484) (x3187 157) 0)) (< x1850 1461501637330902918203684832716283019655932542976) (<= 0 x1850) (= x1850 (x3365 x3721)) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x4484))) (and (not x3794) (and (= x3502 x728) (= x3794 x302))))) x4605)))
(assert (x2185 x2985))
(assert (x2185 x3493))
(assert (= x1664 (and x713 x4095)))
(assert (x2185 x3984))
(assert (x2185 x2347))
(assert (= (=> (and (> x2400 0) (= x2286 (x227 (+ 32 x2471))) (= x664 (ite (= 1 x3566) 1 0)) (= x536 (ite (> x3451 31) 1 0)) (= x2471 (x227 (+ x335 4))) (= (ite (= 0 x3451) 1 0) x1897) (= x3079 (= x4675 x3937)) (= (x2214 (- x2286 x335)) x2492) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x4675) (= x1666 (x468 x3247 x1897)) (= (x3232 x1666 x2323) x2400) (= x3247 (x3232 x664 x536))) (and (=> (and (and (= x1705 36) (= x4148 (x2258 (x3182 x3937))) (< x4599 988262939) (= x3655 x721) (not (= 75483562 x4599)) (= x4434 (x2214 (- x1705 4))) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x3177) (> 405663989 x4599) (= (or (> x4434 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x4434 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4434 32))) x1503) (> x4148 0) (= x2492 x1705) (not (> 4 x1705)) (= 242558722 x4599) (not (= x4599 178855970)) (< x4599 2217467699)) x3079) (and (=> (and x1503 (= x3207 x1770)) x513) (=> (and (and (= x4568 (< x4068 x721)) (<= x4068 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3655 x2508) (= (x1013 (x3182 x322) (x3187 6) 0) x2327) (<= 0 x4068) (= x4068 (x2723 x2327))) (not x1503)) (and (=> (and (= x3207 x1770) x4568) x513) (=> (and (not x4568) (and (= x3499 (< x1309 x3655)) (>= x1309 0) (= x4919 (x1013 (x3182 x322) (x3187 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1309) (= (x2723 x4919) x1309))) (and (=> (and x3499 (= x3207 x1770)) x513) (=> (and (and (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3655)) x428) (<= 0 x3207) (= x1444 (x2214 (- x1309 x3655))) (<= x3207 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x572 (> x3207 x428))) (not x3499)) (and (=> (and (= x3207 x1770) x572) x513) (=> (and (not x572) (and (<= 0 x3960) (<= x3960 1461501637330902918203684832716283019655932542975) (< x3960 1461501637330902918203684832716283019655932542976) (= 128 x2730) (= x1173 (x227 (+ x3207 x3655))) (= (= x2031 x3960) x4890) (= x1346 (x227 (+ x3655 x3207))))) (and (=> (and x4890 (and (= x542 (or (> x2347 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2347 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2347))))) (= x4418 100) (not (< x4418 4)) (< 0 x2279) (= (x2214 (- x4418 4)) x2347) (= 100 x4418) (not (< x1239 599290589)) (= x322 x889) (= x3937 x4157) (= (x2258 (x3182 x2031)) x2279) (= 599290589 x1239) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1729) (= x2998 x2508) (> 1466279372 x1239))) (and (=> (and (and (= x889 x1762) (= x1096 (= x889 x322))) (not x542)) (and (=> (and x1096 (and (= (= x3937 x4157) x4163) (= x2897 x4157))) (and (=> (not x4163) x1599) (=> (and (and (= x4751 x2998) (= (x4846 x537) x404) (= (x1013 (x3182 x889) (x3187 1) 0) x537) (<= 0 x404) (<= x404 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x404 x2508) x1502)) x4163) (and (=> x1502 x1599) (=> (and (not x1502) (= x109 (> x2998 x404))) (and (=> (and (and (= x4215 (< x3859 x960)) (= (x1509 x1978) x960) (= (x1013 (x3182 x889) (x3187 1) 0) x3684) (>= x960 0) (= x1978 (x1013 (x3182 x4157) (x3187 1) 0)) (= x3859 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2998))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x960) (= x2738 (x2214 (- x404 x2998)))) (not x109)) (and (=> x4215 x1599) (=> (and (and (= (x227 (+ x2998 x960)) x1749) (= x2553 (> x960 x1749))) (not x4215)) (and (=> x2553 x1599) (=> (and (and (= x2216 (x746 x3830)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2216) (= x4294 (> x2998 x2216)) (= x1685 (x1013 (x3182 x889) (x3187 2) 0)) (= (x1013 (x3182 x3937) x1685 0) x3830) (= (x1013 (x3182 x4157) (x3187 1) 0) x4608) (<= 0 x2216)) (not x2553)) (and (=> (and (= (< x2216 x2998) x3891) (not x4294)) (and (=> x3891 x1599) (=> (and (and (= 32 x1193) (= x4528 (x2214 (- x2216 x2998))) (= x2602 1) (= (x1013 (x3182 x889) (x3187 2) 0) x4822) (= x3534 (x1013 (x3182 x3937) x4822 0))) (not x3891)) x4780))) (=> x4294 x1599))))))) (=> x109 x1599))))))) (=> (not x1096) x1599))) (=> x542 x1599))) (=> (and (not x4890) (= x1652 (= x3960 x3937))) (and (=> (and (not x1652) (= (= x3960 x4413) x4871)) (and (=> (and (and (= (= x759 x3960) x3530) (and x3530 (and (= (x2214 (- x1326 4)) x3641) (= x3410 x322) (= (x2258 (x3182 x759)) x3444) (not (= x753 405663989)) (> 988262939 x753) (= x3937 x182) (= x1326 100) (= x3541 x2508) (= x4403 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3641) (and (> 96 x3641) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3641) true)))) (not (= x753 547091486)) (= x4168 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x753 405663989)) (= 599290589 x753) (> 2217467699 x753) (= x1326 100) (not (> 4 x1326)) (< 0 x3444)))) (not x4871)) (and (=> x4403 x3024) (=> (and (not x4403) (and (= x488 x3410) (= (= x3410 x322) x566))) (and (=> (not x566) x3024) (=> (and x566 (and (= x182 x3596) (= x3619 (= x3937 x182)))) (and (=> (and (and (= (< x1728 x2508) x3559) (= x2249 x3541) (<= 0 x1728) (= x2125 (x1013 (x3182 x3410) (x3187 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1728) (= (x258 x2125) x1728)) x3619) (and (=> x3559 x3024) (=> (and (and (= (< x1131 x3541) x2706) (<= 0 x1131) (= (x258 x3508) x1131) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1131) (= x3508 (x1013 (x3182 x3410) (x3187 5) 0))) (not x3559)) (and (=> x2706 x3024) (=> (and (not x2706) (and (= x2852 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3541))) (= (x2214 (- x1131 x3541)) x3381) (= (x220 x3755) x3255) (= x3755 (x1013 (x3182 x182) (x3187 5) 0)) (= x3400 (< x2852 x3255)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3255) (>= x3255 0))) (and (=> (and (and (= x3808 (x227 (+ x3541 x3255))) (= 1 x3240) (= x3699 32) (= x4723 1)) (not x3400)) x2382) (=> x3400 x3024))))))) (=> (not x3619) x3024))))))) (=> (and (and (= x4253 100) (= x2401 599290589) (< 0 x3858) (not (= 405663989 x2401)) (not (< x2401 405663989)) (= x3937 x3652) (= x2914 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4650)) (< x4650 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4650))) (= x322 x4786) (= x1411 x2508) (not (< x4253 4)) (< x2401 988262939) (= x4650 (x2214 (- x4253 4))) (= x3858 (x2258 (x3182 x4413))) (= x4253 100) (not (= 547091486 x2401)) (= x943 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 2217467699 x2401)) x4871) (and (=> x2914 x4390) (=> (and (and (= x4786 x1425) (= x2068 (= x4786 x322))) (not x2914)) (and (=> (not x2068) x4390) (=> (and (and (= x3652 x2996) (= x1107 (= x3937 x3652))) x2068) (and (=> (not x1107) x4390) (=> (and (and (= (x4593 x4704) x1988) (= x2202 x1411) (= x4704 (x1013 (x3182 x4786) (x3187 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1988) (<= 0 x1988) (= (< x1988 x2508) x4211)) x1107) (and (=> (and (not x4211) (and (>= x204 0) (= x2181 (< x204 x1411)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x204) (= x204 (x4593 x4142)) (= x4142 (x1013 (x3182 x4786) (x3187 5) 0)))) (and (=> x2181 x4390) (=> (and (and (= (> x3543 x2281) x444) (= x2296 (x2214 (- x204 x1411))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3543) (>= x3543 0) (= x3543 (x1720 x2732)) (= (x1013 (x3182 x3652) (x3187 5) 0) x2732) (= x2281 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1411)))) (not x2181)) (and (=> x444 x4390) (=> (and (not x444) (and (= (x227 (+ x3543 x1411)) x3861) (= 32 x1114) (= 1 x1918) (= 1 x43))) x3698))))) (=> x4211 x4390))))))))))) (=> (and x1652 (and (not (= 405663989 x1221)) (not (< x494 4)) (= x3846 (or (and (= true (<= x2107 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x2107)) (> x2107 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x1221 2217467699) (= x4659 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x494 100) (= x2107 (x2214 (- x494 4))) (= x322 x3148) (= x1367 (x2258 (x3182 x3937))) (> 988262939 x1221) (not (> 405663989 x1221)) (= 599290589 x1221) (< 0 x1367) (= x2508 x4607) (not (= 547091486 x1221)) (= 100 x494) (= x3937 x1622))) (and (=> (and (and (= x2860 x3148) (= (= x3148 x322) x3751)) (not x3846)) (and (=> (and (and (= x1060 x1622) (= (= x1622 x3937) x311)) x3751) (and (=> (not x311) x832) (=> (and (and (<= 0 x1079) (= (x1323 x2464) x1079) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1079) (= x1146 x4607) (= x2464 (x1013 (x3182 x3148) (x3187 5) 0)) (= (< x1079 x2508) x4473)) x311) (and (=> (and (not x4473) (and (= x423 (> x4607 x463)) (= x773 (x1013 (x3182 x3148) (x3187 5) 0)) (>= x463 0) (= (x1323 x773) x463) (<= x463 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x423 x832) (=> (and (not x423) (and (<= 0 x2422) (<= x2422 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2313 (x1013 (x3182 x1622) (x3187 5) 0)) (= x4218 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4607))) (= x2422 (x2879 x2313)) (= (x2214 (- x463 x4607)) x2634) (= (> x2422 x4218) x2983))) (and (=> x2983 x832) (=> (and (and (= x1365 (x227 (+ x4607 x2422))) (= 1 x731) (= 32 x988) (= 1 x1796)) (not x2983)) x995))))) (=> x4473 x832))))) (=> (not x3751) x832))) (=> x3846 x832))))))))))))))) (=> (and (not x3079) (= x851 (= x4413 x4675))) (and (=> (and (and (not (= 75483562 x2369)) (= x2465 (x2214 (- x2326 4))) (= x2369 242558722) (= (or (and (> 32 x2465) (= (<= x2465 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2465)) x4892) (= 36 x2326) (not (> 4 x2326)) (< x2369 405663989) (< 0 x2113) (= x2326 x2492) (< x2369 988262939) (= x721 x2703) (> 2217467699 x2369) (not (= x2369 178855970)) (= (x2258 (x3182 x4413)) x2113) (= x3351 6539370208772218570076773595062200405109424842860869254164860851635934461952)) x851) (and (=> (and (= x1198 x4127) x4892) x585) (=> (and (not x4892) (and (>= x1767 0) (= (x2081 x4257) x1767) (= x4257 (x1013 (x3182 x322) (x3187 6) 0)) (<= x1767 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2231 (> x721 x1767)) (= x2772 x2703))) (and (=> (and (= x4127 x1198) x2231) x585) (=> (and (and (= (x2081 x2850) x1150) (= (> x2703 x1150) x4448) (<= x1150 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1150) (= x2850 (x1013 (x3182 x322) (x3187 6) 0))) (not x2231)) (and (=> (and x4448 (= x4127 x1198)) x585) (=> (and (not x4448) (and (= x2310 (< x2005 x4127)) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2703)) x2005) (= x446 (x2214 (- x1150 x2703))) (<= 0 x4127) (<= x4127 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (< x1772 1461501637330902918203684832716283019655932542976) (= (= x1772 x2031) x4402) (= x2880 128) (= x532 (x227 (+ x2703 x4127))) (<= x1772 1461501637330902918203684832716283019655932542975) (= (x227 (+ x2703 x4127)) x546) (>= x1772 0)) (not x2310)) (and (=> (and (and (= x322 x2766) (< x30 1466279372) (not (< x2694 4)) (= x2694 100) (> x2350 0) (= x2350 (x2258 (x3182 x2031))) (= x4288 x4413) (= 100 x2694) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4364) (= x30 599290589) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3193) (and (> 96 x3193) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3193)))) x100) (not (< x30 599290589)) (= (x2214 (- x2694 4)) x3193) (= x2772 x1940)) x4402) (and (=> (and (not x100) (and (= x4321 x2766) (= x3977 (= x322 x2766)))) (and (=> (not x3977) x1023) (=> (and (and (= x4288 x2314) (= x3439 (= x4413 x4288))) x3977) (and (=> (not x3439) x1023) (=> (and x3439 (and (= x3253 x1940) (= (> x2772 x1180) x4803) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1180) (= (x4846 x496) x1180) (>= x1180 0) (= x496 (x1013 (x3182 x2766) (x3187 1) 0)))) (and (=> x4803 x1023) (=> (and (= x724 (< x1180 x1940)) (not x4803)) (and (=> (and (and (= x4819 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1940))) (= (x2214 (- x1180 x1940)) x3636) (= (x1013 (x3182 x2766) (x3187 1) 0) x2001) (= x694 (x2395 x1066)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x694) (= (x1013 (x3182 x4288) (x3187 1) 0) x1066) (>= x694 0) (= x442 (< x4819 x694))) (not x724)) (and (=> (and (not x442) (and (= x576 (x227 (+ x694 x1940))) (= (> x694 x576) x3617))) (and (=> (and (and (= (> x1940 x4667) x803) (= x4667 (x746 x1817)) (= (x1013 (x3182 x4288) (x3187 1) 0) x3461) (<= 0 x4667) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4667) (= (x1013 (x3182 x2766) (x3187 2) 0) x2962) (= (x1013 (x3182 x4413) x2962 0) x1817)) (not x3617)) (and (=> (and (= (< x4667 x1940) x3627) (not x803)) (and (=> x3627 x1023) (=> (and (and (= x2061 32) (= (x1013 (x3182 x2766) (x3187 2) 0) x158) (= x4721 (x1013 (x3182 x4413) x158 0)) (= x4820 1) (= (x2214 (- x4667 x1940)) x1020)) (not x3627)) x864))) (=> x803 x1023))) (=> x3617 x1023))) (=> x442 x1023))) (=> x724 x1023))))))))) (=> x100 x1023))) (=> (and (not x4402) (= (= x3937 x1772) x827)) (and (=> (and (and (= x1647 100) (not (< x1647 4)) (= x2685 x322) (not (= 547091486 x3002)) (= x2772 x3504) (= x1654 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x3002 405663989)) (= (x2214 (- x1647 4)) x3258) (= (x2258 (x3182 x3937)) x3375) (not (> 405663989 x3002)) (= x4413 x234) (< x3002 988262939) (> x3375 0) (< x3002 2217467699) (= 599290589 x3002) (= x1647 100) (= x2526 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3258) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3258) true) (> 96 x3258))))) x827) (and (=> (and (and (= x3149 x2685) (= (= x2685 x322) x3972)) (not x2526)) (and (=> (and (and (= (= x4413 x234) x4237) (= x234 x3082)) x3972) (and (=> (and x4237 (and (= x3504 x4280) (>= x2088 0) (= (> x2772 x2088) x3801) (= (x1013 (x3182 x2685) (x3187 5) 0) x1242) (<= x2088 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1323 x1242) x2088))) (and (=> x3801 x1572) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x666) (<= 0 x666) (= x3681 (x1013 (x3182 x2685) (x3187 5) 0)) (= x3470 (< x666 x3504)) (= (x1323 x3681) x666)) (not x3801)) (and (=> x3470 x1572) (=> (and (not x3470) (and (= (x2214 (- x666 x3504)) x4421) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3504)) x1314) (<= x769 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4128 (< x1314 x769)) (= x21 (x1013 (x3182 x234) (x3187 5) 0)) (= x769 (x4880 x21)) (<= 0 x769))) (and (=> x4128 x1572) (=> (and (not x4128) (and (= 32 x3344) (= 1 x1056) (= x2090 1) (= x3781 (x227 (+ x3504 x769))))) x1171))))))) (=> (not x4237) x1572))) (=> (not x3972) x1572))) (=> x2526 x1572))) (=> (and (not x827) (= (= x4413 x1772) x3301)) (and (=> (and (and (and x2842 (and (= x2687 (x2214 (- x3633 4))) (= x3549 (x2258 (x3182 x759))) (< x1692 988262939) (= x4413 x1136) (= x1692 599290589) (= x3633 100) (not (> 4 x3633)) (not (> 405663989 x1692)) (not (= 405663989 x1692)) (= x3633 100) (> 2217467699 x1692) (not (= 547091486 x1692)) (< 0 x3549) (= x322 x4891) (= x1753 x2772) (= x1899 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4009 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2687) true) (< x2687 96)) (> x2687 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x2842 (= x1772 x759))) (not x3301)) (and (=> x4009 x2428) (=> (and (not x4009) (and (= x1548 (= x322 x4891)) (= x4891 x364))) (and (=> (not x1548) x2428) (=> (and x1548 (and (= (= x4413 x1136) x1142) (= x461 x1136))) (and (=> (and (and (<= 0 x3825) (<= x3825 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x258 x2955) x3825) (= x2955 (x1013 (x3182 x4891) (x3187 5) 0)) (= x1753 x3058) (= (> x2772 x3825) x1530)) x1142) (and (=> (and (not x1530) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1904) (= (x258 x3741) x1904) (= (< x1904 x1753) x618) (>= x1904 0) (= (x1013 (x3182 x4891) (x3187 5) 0) x3741))) (and (=> x618 x2428) (=> (and (and (= x3719 (x1013 (x3182 x1136) (x3187 5) 0)) (= (< x2688 x4060) x4010) (= x4060 (x4077 x3719)) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1753)) x2688) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4060) (>= x4060 0) (= x3725 (x2214 (- x1904 x1753)))) (not x618)) (and (=> (and (not x4010) (and (= x3660 (x227 (+ x4060 x1753))) (= 32 x3261) (= x122 1) (= x4090 1))) x1372) (=> x4010 x2428))))) (=> x1530 x2428))) (=> (not x1142) x2428))))))) (=> (and x3301 (and (not (> 405663989 x4377)) (= 100 x440) (not (= 405663989 x4377)) (= (x2258 (x3182 x4413)) x4276) (not (= 547091486 x4377)) (= x4377 599290589) (> 988262939 x4377) (= (x2214 (- x440 4)) x4103) (> x4276 0) (= x1202 x322) (not (< x440 4)) (= x440 100) (= (or (and (< x4103 96) (= true (<= x4103 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4103)) x3668) (> 2217467699 x4377) (= x903 x2772) (= x4413 x2135) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3063))) (and (=> x3668 x1385) (=> (and (and (= x1202 x1328) (= x2126 (= x1202 x322))) (not x3668)) (and (=> (not x2126) x1385) (=> (and (and (= x2135 x3935) (= (= x4413 x2135) x3554)) x2126) (and (=> (not x3554) x1385) (=> (and x3554 (and (= x2573 (< x451 x2772)) (<= x451 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x451 0) (= x903 x4016) (= (x1013 (x3182 x1202) (x3187 5) 0) x2189) (= (x4593 x2189) x451))) (and (=> x2573 x1385) (=> (and (not x2573) (and (<= 0 x2878) (<= x2878 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x1202) (x3187 5) 0) x3353) (= (x4593 x3353) x2878) (= (< x2878 x903) x1921))) (and (=> (and (not x1921) (and (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x903)) x3870) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3850) (= x1908 (x2214 (- x2878 x903))) (= x3850 (x2211 x3140)) (>= x3850 0) (= (x1013 (x3182 x2135) (x3187 5) 0) x3140) (= (> x3850 x3870) x4437))) (and (=> (and (and (= 1 x4798) (= 1 x2065) (= 32 x4826) (= x3038 (x227 (+ x3850 x903)))) (not x4437)) x1461) (=> x4437 x1385))) (=> x1921 x1385))))))))))))))))) (=> (and (= x4127 x1198) x2310) x585))))))))) (=> (and (not x851) (and (= x1794 (= x4675 x759)) (and x1794 (and (= 36 x2230) (= (or (and (< x1081 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1081) true)) (> x1081 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2017) (> 988262939 x416) (= x2537 x721) (< 0 x3651) (= (x2214 (- x2230 4)) x1081) (< x416 405663989) (not (< x2230 4)) (not (= x416 75483562)) (= x416 242558722) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x1930) (= x2492 x2230) (= x3651 (x2258 (x3182 x759))) (< x416 2217467699) (not (= x416 178855970)))))) (and (=> (and x2017 (= x941 x3786)) x285) (=> (and (not x2017) (and (<= x2877 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2877 x721) x2528) (= (x1013 (x3182 x322) (x3187 6) 0) x4601) (= x2877 (x3203 x4601)) (>= x2877 0) (= x2361 x2537))) (and (=> (and (= x3786 x941) x2528) x285) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1483) (= (x1013 (x3182 x322) (x3187 6) 0) x2197) (= x3831 (> x2537 x1483)) (= (x3203 x2197) x1483) (>= x1483 0)) (not x2528)) (and (=> (and (= x3786 x941) x3831) x285) (=> (and (not x3831) (and (>= x3786 0) (= x4897 (x2214 (- x1483 x2537))) (= x3411 (> x3786 x269)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3786) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2537)) x269))) (and (=> (and (and (= (x227 (+ x3786 x2537)) x3910) (>= 1461501637330902918203684832716283019655932542975 x4424) (= 128 x3054) (= x882 (= x4424 x2031)) (< x4424 1461501637330902918203684832716283019655932542976) (>= x4424 0) (= (x227 (+ x2537 x3786)) x3798)) (not x3411)) (and (=> (and (and (= x3077 100) (= (or (and (= (<= x2748 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x2748)) (> x2748 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2895) (not (> 599290589 x1670)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x113) (= (x2214 (- x3077 4)) x2748) (= x3077 100) (> 1466279372 x1670) (> x1870 0) (= x322 x348) (= x2361 x4289) (= x1670 599290589) (= (x2258 (x3182 x2031)) x1870) (= x759 x639) (not (> 4 x3077))) x882) (and (=> (and (and (= (= x348 x322) x398) (= x608 x348)) (not x2895)) (and (=> (not x398) x2122) (=> (and x398 (and (= x2660 (= x639 x759)) (= x639 x3735))) (and (=> (not x2660) x2122) (=> (and (and (>= x1052 0) (= x4860 x4289) (= (x1013 (x3182 x348) (x3187 1) 0) x2747) (= x1052 (x4846 x2747)) (= x4753 (> x2361 x1052)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1052)) x2660) (and (=> x4753 x2122) (=> (and (not x4753) (= x577 (> x4289 x1052))) (and (=> (and (not x577) (and (= (x3021 x2768) x3529) (= x1555 (x1013 (x3182 x348) (x3187 1) 0)) (<= x3529 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x639) (x3187 1) 0) x2768) (= (x2214 (- x1052 x4289)) x3314) (= (< x4443 x3529) x3037) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4289)) x4443) (<= 0 x3529))) (and (=> x3037 x2122) (=> (and (and (= x202 (x227 (+ x4289 x3529))) (= (< x202 x3529) x3876)) (not x3037)) (and (=> x3876 x2122) (=> (and (and (= x3363 (x1013 (x3182 x348) (x3187 2) 0)) (>= x414 0) (= x659 (x1013 (x3182 x639) (x3187 1) 0)) (= x414 (x746 x249)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x414) (= (x1013 (x3182 x759) x3363 0) x249) (= x1456 (> x4289 x414))) (not x3876)) (and (=> x1456 x2122) (=> (and (= (> x4289 x414) x1446) (not x1456)) (and (=> (and (and (= x3817 1) (= x662 (x1013 (x3182 x348) (x3187 2) 0)) (= (x2214 (- x414 x4289)) x2754) (= (x1013 (x3182 x759) x662 0) x4147) (= x929 32)) (not x1446)) x3948) (=> x1446 x2122))))))))) (=> x577 x2122))))))))) (=> x2895 x2122))) (=> (and (not x882) (= (= x4424 x3937) x4852)) (and (=> (and (and (= x2361 x1482) (= x623 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 405663989 x924)) (not (= x924 547091486)) (> 988262939 x924) (= x4185 x322) (> x4904 0) (not (< x924 405663989)) (= x4904 (x2258 (x3182 x3937))) (= 599290589 x924) (= x1144 100) (= x3403 (x2214 (- x1144 4))) (= x719 (or (and (= (<= x3403 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3403 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3403))) (= x1144 100) (not (< x1144 4)) (> 2217467699 x924) (= x1389 x759)) x4852) (and (=> (and (not x719) (and (= (= x322 x4185) x4341) (= x300 x4185))) (and (=> (not x4341) x3168) (=> (and (and (= x4083 x1389) (= x2055 (= x759 x1389))) x4341) (and (=> (not x2055) x3168) (=> (and (and (<= 0 x1184) (= (> x2361 x1184) x229) (= x1184 (x1323 x2159)) (= x2159 (x1013 (x3182 x4185) (x3187 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1184) (= x1609 x1482)) x2055) (and (=> (and (and (<= x2120 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2120 0) (= (x1013 (x3182 x4185) (x3187 5) 0) x2305) (= (x1323 x2305) x2120) (= x3572 (> x1482 x2120))) (not x229)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x138) (= (x2214 (- x2120 x1482)) x1721) (= (x1119 x2811) x138) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1482)) x2817) (= x2184 (< x2817 x138)) (<= 0 x138) (= (x1013 (x3182 x1389) (x3187 5) 0) x2811)) (not x3572)) (and (=> x2184 x3168) (=> (and (not x2184) (and (= x1016 32) (= x3915 1) (= x334 1) (= x1837 (x227 (+ x138 x1482))))) x1312))) (=> x3572 x3168))) (=> x229 x3168))))))) (=> x719 x3168))) (=> (and (= (= x4413 x4424) x167) (not x4852)) (and (=> (and (and (and (and (not (< x2556 4)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4327) (< 0 x3560) (< x396 988262939) (= x322 x2453) (= x2556 100) (= x1937 (or (> x3826 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3826)) (< x3826 96)))) (= x2361 x600) (= x3560 (x2258 (x3182 x759))) (not (= 547091486 x396)) (= x396 599290589) (not (= x396 405663989)) (= x2556 100) (< x396 2217467699) (= x3826 (x2214 (- x2556 4))) (= x759 x1884) (not (< x396 405663989))) x3225) (= x3225 (= x759 x4424))) (not x167)) (and (=> (and (and (= (= x322 x2453) x2496) (= x2453 x3445)) (not x1937)) (and (=> (not x2496) x1361) (=> (and (and (= x1086 (= x1884 x759)) (= x727 x1884)) x2496) (and (=> (not x1086) x1361) (=> (and (and (= (x1013 (x3182 x2453) (x3187 5) 0) x4415) (= x4579 (> x2361 x993)) (= x600 x1635) (= x993 (x258 x4415)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x993) (<= 0 x993)) x1086) (and (=> (and (and (= x3745 (x258 x484)) (= (x1013 (x3182 x2453) (x3187 5) 0) x484) (= (> x600 x3745) x1995) (<= 0 x3745) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3745)) (not x4579)) (and (=> (and (and (= x2183 (x3918 x4014)) (= (x2214 (- x3745 x600)) x3178) (= x4014 (x1013 (x3182 x1884) (x3187 5) 0)) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x600)) x1698) (>= x2183 0) (<= x2183 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2183 x1698) x961)) (not x1995)) (and (=> x961 x1361) (=> (and (and (= 1 x1608) (= x248 (x227 (+ x600 x2183))) (= x4925 1) (= 32 x1617)) (not x961)) x3234))) (=> x1995 x1361))) (=> x4579 x1361))))))) (=> x1937 x1361))) (=> (and x167 (and (not (< x3206 405663989)) (= x1285 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4111 (or (> x1102 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x1102) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1102) true)))) (not (= 405663989 x3206)) (= (x2258 (x3182 x4413)) x1019) (= 599290589 x3206) (= x1363 x322) (< 0 x1019) (not (= x3206 547091486)) (= x4183 100) (= x4186 x2361) (= x1102 (x2214 (- x4183 4))) (= 100 x4183) (= x3396 x759) (< x3206 2217467699) (not (< x4183 4)) (< x3206 988262939))) (and (=> (and (and (= x179 (= x322 x1363)) (= x523 x1363)) (not x4111)) (and (=> (not x179) x920) (=> (and x179 (and (= (= x3396 x759) x3405) (= x2913 x3396))) (and (=> (not x3405) x920) (=> (and x3405 (and (= x315 (x4593 x3292)) (= (x1013 (x3182 x1363) (x3187 5) 0) x3292) (= x951 x4186) (= (< x315 x2361) x2277) (<= x315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x315 0))) (and (=> (and (and (= (< x632 x4186) x1527) (<= x632 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x1363) (x3187 5) 0) x2757) (= x632 (x4593 x2757)) (>= x632 0)) (not x2277)) (and (=> (and (and (<= 0 x928) (= x524 (< x1510 x928)) (= x928 (x1887 x3577)) (= x1510 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4186))) (= x3669 (x2214 (- x632 x4186))) (= x3577 (x1013 (x3182 x3396) (x3187 5) 0)) (<= x928 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1527)) (and (=> x524 x920) (=> (and (not x524) (and (= x1785 1) (= x286 32) (= 1 x3188) (= (x227 (+ x4186 x928)) x3615))) x2645))) (=> x1527 x920))) (=> x2277 x920))))))) (=> x4111 x920))))))))) (=> (and x3411 (= x3786 x941)) x285))))))))))))) x4249))
(assert (= (and x1969 (not x3512)) x4360))
(assert (= x2616 (and x2208 x3575)))
(assert (= (and x47 x4336) x4560))
(assert (x2185 x3636))
(assert (= x2931 (or x2134 x4783)))
(assert (x2185 x4456))
(assert (x2185 x2500))
(assert (x2185 x762))
(assert (= x1947 (and (not x3305) x1600)))
(assert (= x1873 (x862 (x3182 x1873))))
(assert (x2185 x3143))
(assert (= (and (not x1337) x1168) x1117))
(assert (= x3071 (and x590 x4852)))
(assert (=> (<= x1255 10000) (= (x3182 x1255) (x3187 x1255))))
(assert (x2185 x3313))
(assert (x2185 x1249))
(assert (= (and (not x53) x4519) x3208))
(assert (= (or x3376 x2440 x1369) x305))
(assert (= x590 (and x1512 (not x882))))
(assert (x2185 x4907))
(assert (= (or x2927 x2552) x3214))
(assert (= (or (and (not x1621) x2874) x4731) x3040))
(assert (= (or (and (not x4764) x4676) (and x4332 x2956)) x1710))
(assert (=> (<= x4288 10000) (= (x3182 x4288) (x3187 x4288))))
(assert (x2185 x4525))
(assert (x2870 x1707))
(assert (= (and x3017 (not x2570)) x1665))
(assert (x2870 x1622))
(assert (x2185 x2119))
(assert (x2185 x4158))
(assert (= (x862 (x1324 x255 1)) (+ (x862 x255) 1)))
(assert (x2185 x645))
(assert (x2185 x1093))
(assert (x2185 x3290))
(assert (x3909 x1666))
(assert (x2185 x92))
(assert (=> (<= x2690 10000) (= (x3187 x2690) (x3182 x2690))))
(assert (= (and x3372 (not x4792)) x2511))
(assert (= x652 (and x1162 x4380)))
(assert (=> (<= x728 10000) (= (x3182 x728) (x3187 x728))))
(assert (x2185 x3765))
(assert (x2185 x113))
(assert (x2185 x3298))
(assert (x2185 x3722))
(assert (x2185 x4826))
(assert (x2185 x4628))
(assert (x2185 x3370))
(assert (= (x3187 3842108676) (x3182 3842108676)))
(assert (= x337 (and x4748 x324)))
(assert (x2185 x2773))
(assert (= (+ (x862 x2172) 2) (x862 (x1324 x2172 2))))
(assert (= (and x3972 x1864) x462))
(assert (= x2026 (and (not x2062) x2256)))
(assert (x2185 x2641))
(assert (= x4867 (and x349 x3579)))
(assert (x2185 x938))
(assert (x2185 x2204))
(assert (= x4229 (or (and x2521 x1269) x2958 (and (not x2141) x3848) x4277 (and (not x3242) x3191) (and x3393 x1298))))
(assert (x2185 x594))
(assert (x2185 x453))
(assert (x2870 x2985))
(assert (x2185 x4367))
(assert (= (x862 (x3187 989455977)) 989455977))
(assert (x2185 x1803))
(assert (x2185 x2254))
(assert (x2185 x3670))
(assert (x2870 x4877))
(assert (= (and x2245 x3085) x4213))
(assert (= x2987 (and x1995 x2503)))
(assert (x2185 x3598))
(assert (= x2244 (x862 (x3182 x2244))))
(assert (x2185 x963))
(assert (x2185 x428))
(assert (x2870 x4557))
(assert (x3909 x3760))
(assert (x2185 x994))
(assert (x2185 x1377))
(assert (x2185 x651))
(assert (not x3384))
(assert (= (and (not x4380) x1162) x2624))
(assert (x2185 x404))
(assert (= x1826 (and (not x2068) x3736)))
(assert (= x4156 (=> (and (and (= 0 x4863) (= x3343 (< 0 x637)) (= x2770 x1205) (= x3420 (or x1447 x3343)) (= x637 x2770) (= x2622 x1185) (= (> x3796 0) x1447) (= x2622 x3796) (= 0 x1048)) (and (= (x1013 (x3182 x4920) x2928 0) x408) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3765) (= (x1163 128) x1205) (not (< x4285 3842108676)) (<= x4920 1461501637330902918203684832716283019655932542975) (< 0 x3803) (not x520) (>= 1461501637330902918203684832716283019655932542975 x3789) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3456) (= (x1324 x408 1) x3654) (not (> 2678788150 x4285)) (= x4285 3842108676) (= x1185 (x1163 160)) (= (x1013 (x3182 x3789) (x3187 158) 0) x2928) (= (x1925 x408) x3765) (= x3456 (x1486 x3654)) (not x4866) (not (> 3583811254 x4285)) (= x4920 x674) (<= 0 x3765) (= x3803 (x2258 (x3182 x322))) (= x296 x3789) (<= 0 x3456))) x3420)))
(assert (= (and x1494 x276) x2118))
(assert (x2185 x2954))
(assert (x2185 x1767))
(assert (x2185 x2361))
(assert (x2185 x218))
(assert (= x4084 (and (not x3763) x3130)))
(assert (= (and x4308 (not x4273)) x3102))
(assert (=> (>= 10000 x4445) (= (x3182 x4445) (x3187 x4445))))
(assert (x2870 x2384))
(assert (x2185 x2375))
(assert (x2185 x3608))
(assert (= (=> (and (or (and x812 (= x1103 (x3182 x4702))) (and (not x812) (and (= x3522 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= x1103 x673) (= x1624 (x227 (+ x1768 1))) (= (x1013 (x3182 x1030) (x3187 161) 0) x673) (= x1030 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= (x3653 x673) x1768) (= x1689 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x2336)))) (and (not (= x3937 x3279)) (= (= 0 x2853) x2714) (<= 0 x3518) (not (= x3937 x346)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x4702) (= (x1972 (x3182 x322)) x2984) (>= 1461501637330902918203684832716283019655932542975 x674) (= (x1724 x2722) x2847) (<= x4424 1461501637330902918203684832716283019655932542975) (= x4122 x2176) (= (< 0 (x2258 (x3182 x759))) x2822) (not (= x759 x4413)) (>= x3172 0) (not (= x4413 x1295)) (>= 1461501637330902918203684832716283019655932542975 x3152) (= x1661 (not x4696)) (<= 0 x4851) (<= x4569 1461501637330902918203684832716283019655932542975) (>= x2853 0) (>= 1461501637330902918203684832716283019655932542975 x1390) (not (= x759 x3323)) (not (= x2031 x4413)) (>= x1772 0) (= (> (x2258 (x3182 x3323)) 0) x2965) (not (= x3279 x2031)) (<= 0 x4118) (< 0 x1746) (< 0 x4433) (<= x2072 255) (not (= x1295 x3937)) (= x3689 (< 0 (x2258 (x3182 x322)))) (<= 0 x2984) (> 256 x2991) (= x3863 x1661) (> 256 x4191) (= (x3638 128) x4433) (>= x989 0) (= (x1972 (x3182 x346)) x230) (>= x4535 0) (>= x975 0) (= x2447 x2215) (<= x2731 1461501637330902918203684832716283019655932542975) (<= x2031 1461501637330902918203684832716283019655932542975) (= (> (x2258 (x3182 x1295)) 0) x2488) (<= 0 x2398) (<= x3760 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2683) (= (x1972 (x3182 x759)) x3771) (= (x2258 (x3182 x322)) x1746) (= (x1972 (x3182 x3937)) x1126) (<= x1994 255) (not (= x759 x3937)) (= x2684 (x1972 (x3182 x3279))) (= x1127 x2269) (> x1295 0) (<= x270 255) (<= 0 x1681) (not (= 0 x792)) (>= 1461501637330902918203684832716283019655932542975 x3683) (= x375 x4625) (<= 0 x3284) (>= x318 0) (> x322 0) x3738 (= x3990 (= 0 x4191)) (<= 0 x1349) (<= 0 x586) (= x3760 x792) (<= 0 x2978) (<= x3993 18446744073709551615) (<= x1984 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x296) (<= x1055 1461501637330902918203684832716283019655932542975) (not (= x3279 x346)) (= x2269 x4734) (>= x410 0) (<= 0 x4728) x2488 (= x1152 x2420) (>= 255 x2164) (<= x1349 1461501637330902918203684832716283019655932542975) (>= x3421 0) (<= 0 x2847) (>= 1461501637330902918203684832716283019655932542975 x3323) (>= x1390 0) (>= x4247 0) (>= 255 x1681) (= (> x270 0) x812) (>= 1461501637330902918203684832716283019655932542975 x557) (> x3937 0) (not (= x3323 x2031)) (= x1834 x4505) (>= x3960 0) x1449 (= x4122 (not x644)) (<= 0 x4005) (<= 0 x2072) (not (= x322 x3937)) (<= x4688 255) (>= x3199 0) (>= 255 x410) (not (= x1295 x3279)) (<= x975 1461501637330902918203684832716283019655932542975) (<= 0 x3316) (= x470 (x1013 (x3182 x4702) x3110 0)) (<= x4413 1461501637330902918203684832716283019655932542975) (= x856 x3122) (= (x205 x2722) x410) (not (= x4923 2030502250)) (not (= x3323 x346)) (= x3683 x1984) (= (x1013 (x3182 x2397) (x3187 160) 0) x3110) (< x1994 256) (>= 1461501637330902918203684832716283019655932542975 x1989) (<= x2398 255) (< 0 x2031) (>= x2684 0) (<= x1295 1461501637330902918203684832716283019655932542975) (<= x3316 18446744073709551615) (>= x2623 0) (>= x2127 0) (>= x4688 0) (<= x1772 1461501637330902918203684832716283019655932542975) (not (= x1295 x2031)) (= (x1525 x2722) x3042) (>= 1461501637330902918203684832716283019655932542975 x3937) (>= 18446744073709551615 x1550) (= x3048 (x1972 (x3182 x1295))) (< 0 x3323) (<= 0 x1126) (<= x2650 1461501637330902918203684832716283019655932542975) (= (not x2714) x2157) (= x674 x4602) (not (= x4413 x322)) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x2397) (<= x3472 1461501637330902918203684832716283019655932542975) (not (= x346 x759)) (< 0 x759) (<= 0 x3771) (<= 0 x3672) (>= 255 x2991) (= x270 (x1771 x470)) (< x270 256) (>= x4424 0) (not (> 2023533118 x4923)) (= x375 x3585) (not (= x3323 x3279)) (< x4923 2362143243) (>= 255 x3042) (<= x4851 1461501637330902918203684832716283019655932542975) (<= x1099 1461501637330902918203684832716283019655932542975) (= x154 (= x2991 0)) (<= 0 x1957) (not (= x346 x2031)) (>= x1398 0) x112 (= x2274 (x3232 26959946667150639794667015087019630673637144422540572481103610249215 x3961)) (>= 255 x2847) (= (x1972 (x3182 x2031)) x3602) (= x699 x4400) (not (= x1295 x346)) (<= 0 x4191) x3844 (= x2718 0) (= x1740 (x1972 (x3182 x4413))) (= x3326 x1127) (<= x4005 1461501637330902918203684832716283019655932542975) (= (> (x2258 (x3182 x346)) 0) x263) (not (= 2134560854 x4923)) (= x4838 (x227 (+ x2274 24044834009420335638544845215851342251227478490780828673611325350056707489792))) (not (= x759 x1295)) (= (> x1956 0) x3844) (< x4923 2678788150) (= x3857 x1952) (= x3738 (> (x2258 (x3182 x3937)) 0)) (<= x322 1461501637330902918203684832716283019655932542975) (<= x2853 255) (<= x4247 1461501637330902918203684832716283019655932542975) (= x4720 (= x2847 0)) (>= 255 x2713) (<= x3960 1461501637330902918203684832716283019655932542975) (<= x4728 18446744073709551615) (>= x2164 0) (= x2623 x3323) (<= 0 x2991) (< x4535 256) (= x3760 x4602) (not (= x322 x759)) (<= 0 x230) (= x4851 x3159) (not (= x3323 x4413)) (< 0 x346) (<= x3284 1461501637330902918203684832716283019655932542975) (= x3585 x304) (<= x3313 18446744073709551615) (<= x2978 1461501637330902918203684832716283019655932542975) (<= 0 x296) (= x644 (= 0 x410)) (= (not x3762) x3122) (not (= x1295 x322)) (<= 0 x1806) (= x1371 x2157) (<= x25 18446744073709551615) (= x2447 x1957) (<= x3279 1461501637330902918203684832716283019655932542975) x2965 (not (= x4413 x346)) (>= 1461501637330902918203684832716283019655932542975 x586) (= 0 x3273) (>= x674 0) (not (= x759 x2031)) (>= x2713 0) (not (= x4413 x3279)) (= (> (x2258 (x3182 x3279)) 0) x112) (not (= x3279 x759)) (= x699 (not x154)) (<= 0 x270) (= x964 x4861) (<= 0 x3313) (>= x3993 0) (>= x1550 0) (<= 0 x1984) (= x1220 x2718) (<= 0 x4569) (not (= x3323 x3937)) (= (= 0 x1994) x3762) (< x2847 256) (<= 0 x913) (= (x3516 x2722) x4535) (<= 0 x3137) (< x3042 256) (< 0 x3279) (<= x2623 1461501637330902918203684832716283019655932542975) x1059 (not (= x3279 x322)) (<= 0 x3048) (<= x3172 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x4118) (<= x3137 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x1957) (<= x3199 18446744073709551615) (= x1152 (not x4720)) (>= x1989 0) (<= x989 1461501637330902918203684832716283019655932542975) (= (= x4535 0) x4696) (>= x1740 0) (>= 1461501637330902918203684832716283019655932542975 x4693) x3689 (= (x1972 (x3182 x3323)) x3421) (not (= 2023533118 x4923)) (not (= x1295 x3323)) (< 0 x4413) (>= x1099 0) (= (x3127 x2722) x2853) (= (< 0 (x2258 (x3182 x2031))) x1449) x2822 (= x629 (= 0 x3042)) (not (= x2269 0)) (= x1952 (not x629)) (= x3279 x1055) (<= 0 x2731) (<= 0 x1055) (<= x1806 255) (>= 255 x4191) (not (= x2031 x3937)) (= (x1013 (x3182 x3131) (x3187 168) 0) x2722) (> 256 x410) (= x964 (not x3990)) (= x296 x3131) (>= x4505 0) (>= x4693 0) (not (= 2236579515 x4923)) (>= x2650 0) (>= x3602 0) (> 256 x2853) (= x2991 (x4660 x2722)) (>= x557 0) (>= x1994 0) (>= 255 x1398) (not (= x3937 x4413)) (<= 0 x3152) x263 (<= x4505 1461501637330902918203684832716283019655932542975) (not (= x346 x322)) (<= x3131 1461501637330902918203684832716283019655932542975) (>= 255 x318) (= (x1581 x2722) x1994) (<= 0 x3472) (= 0 x624) (<= x3518 255) (<= x2127 255) (= x4191 (x2409 x2722)) (<= x3672 1461501637330902918203684832716283019655932542975) (<= x1355 1461501637330902918203684832716283019655932542975) (not (= x322 x2031)) (<= x4535 255) (= x3961 (x2177 416)) (<= 0 x3042) (= x3159 x1390) (= (> (x2258 (x3182 x4413)) 0) x1059) (>= 1461501637330902918203684832716283019655932542975 x346) (not (= x3323 x322)) (>= 255 x913) (<= 0 x2683) (<= 0 x25) (= x3326 x1956) (<= 0 x1355) (>= 1461501637330902918203684832716283019655932542975 x759) (= 2245473101 x4923) (= (x3638 160) x3273))) x4762) x3384))
(assert (= (and (not x572) x49) x3680))
(assert (x2185 x1662))
(assert (= (and x2851 x167) x4695))
(assert (= (x3187 26959946667150639794667015087019630673637144422540572481103610249215) (x3182 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x1189 (and x931 x3485)))
(assert (= x2445 (or x1360 x1967 x1025 x3772 x957 x1565 x1544 x1391 x2220)))
(assert (= x2704 (and x2063 (not x272))))
(assert (x2185 x2534))
(assert (x2185 x3255))
(assert (x2185 x3827))
(assert (x2870 x2514))
(assert (x2185 x3584))
(assert (x2185 x2140))
(assert (= x3777 (and x2943 x2541)))
(assert (=> (<= x1279 10000) (= (x3187 x1279) (x3182 x1279))))
(assert (x2185 x2180))
(assert (x2185 x4820))
(assert (x2185 x28))
(assert (=> (>= 10000 x4149) (= (x3182 x4149) (x3187 x4149))))
(assert (x2185 x2314))
(assert (x2185 x3800))
(assert (= (x3187 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x3182 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x2185 x2748))
(assert (= 1857877511 (x862 (x3187 1857877511))))
(assert (= x1808 (or (and (not x290) x4797) x3317)))
(assert (x2185 x1686))
(assert (= x1027 (and x3936 x4816)))
(assert (x2185 x4555))
(assert (x2185 x2113))
(assert (= (x862 (x1324 x456 2)) (+ (x862 x456) 2)))
(assert (= x1706 (=> (= (= x4363 x3143) x3864) (and (=> (and (not x3864) (= x1585 (> x3143 0))) (and (=> (not x1585) x1926) (=> (and x1585 (and (or (and (= (x1324 x2764 1) x2148) x4655) (and (and (= (x1324 x885 1) x2378) (= (x1013 (x3182 x4700) x2764 0) x885)) (not x4655))) (and (= x1521 (x1836 x1226)) (= (x1324 x783 1) x1226) (< x2463 1461501637330902918203684832716283019655932542976) (<= 0 x4700) (= (x4435 x1070) x4700) (= x783 (x1324 x1070 1)) (not (= x1521 0)) (= (x174 x783) x2463) (<= 0 x1521) (= (x1013 (x3182 x1468) x2764 0) x1070) (< x4700 1461501637330902918203684832716283019655932542976) (>= x2463 0) (= x4655 (= x4700 0)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x1468) (>= 1461501637330902918203684832716283019655932542975 x4700) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1521) (>= 1461501637330902918203684832716283019655932542975 x2463)))) x2784))) (=> x3864 x2594)))))
(assert (x2185 x1390))
(assert (x2185 x4528))
(assert (=> (>= 10000 x1533) (= (x3187 x1533) (x3182 x1533))))
(assert (x2185 x894))
(assert (= x452 (and x2047 x1831)))
(assert (= x838 (and x3427 (not x1084))))
(assert (= (x3187 599290589) (x3182 599290589)))
(assert (= (and (not x167) x2851) x795))
(assert (x2185 x2653))
(assert (= x3902 (and x4449 x912)))
(assert (= (and x812 x3650) x3356))
(assert (= (and x830 x399) x1143))
(assert (x2185 x2398))
(assert (= (and x2787 x4222) x797))
(assert (= (x862 (x1324 x3756 1)) (+ 1 (x862 x3756))))
(assert (= (and x901 x3820) x3150))
(assert (x2185 x4572))
(assert (=> (<= x4709 10000) (= (x3187 x4709) (x3182 x4709))))
(assert (= x2388 (=> (and (= x3690 x3886) (= x1907 0)) x3587)))
(assert (= 2835717307 (x862 (x3187 2835717307))))
(assert (= (and x1974 x2071) x4210))
(assert (= (and x4233 (not x3499)) x49))
(assert (x2870 x3410))
(assert (x2185 x714))
(assert (x2185 x4032))
(assert (x3909 x3732))
(assert (x2185 x4369))
(assert (x2870 x560))
(assert (x2185 x493))
(assert (=> (<= x182 10000) (= (x3182 x182) (x3187 x182))))
(assert (x2185 x2397))
(assert (x2185 x24))
(assert (x2185 x243))
(assert (=> (>= 10000 x4261) (= (x3187 x4261) (x3182 x4261))))
(assert (x2185 x4864))
(assert (= x1696 (=> (and (= 0 x1199) (= x4442 x2794)) x906)))
(assert (x2185 x196))
(assert (x2185 x360))
(assert (= (and x4426 x1085) x870))
(assert (x2185 x1157))
(assert (x2185 x1378))
(assert (x2185 x17))
(assert (x2870 x3514))
(assert (= (or x2559 x3565) x805))
(assert (= (and x2017 x1402) x292))
(assert (= (and x4036 x347) x1866))
(assert (x2185 x1367))
(assert (x2870 x4157))
(assert (= x1534 (=> (= x1005 x3827) x3161)))
(assert (x1990 x3961))
(assert (x2185 x2869))
(assert (= (or (and x4598 (not x3442)) x1562) x1828))
(assert (= (and (not x3715) x4900) x275))
(assert (= x4641 (or x1116 x1078)))
(assert (x2185 x1642))
(assert (x2870 x3582))
(assert (x2185 x318))
(assert (= (and x3124 x3405) x4875))
(assert (= (x862 (x1324 x2367 2)) (+ (x862 x2367) 2)))
(assert (x2185 x2416))
(assert (= (and x4676 x4764) x4615))
(assert (= x2960 (and (not x1937) x2762)))
(assert (= x4394 (and x3268 (not x3467))))
(assert (=> (>= 10000 x3144) (= (x3182 x3144) (x3187 x3144))))
(assert (= (and x3288 x4342) x761))
(assert (= x1923 (and (not x760) x2487)))
(assert (= (or x1311 (and (not x2911) x164)) x3250))
(assert (= (+ (x862 x541) 1) (x862 (x1324 x541 1))))
(assert (= x3860 (and x4677 (not x194))))
(assert (x2185 x4298))
(assert (x2185 x4650))
(assert (= x3743 (=> (= x518 (< 0 x142)) (and (=> (and x518 (and (or (and (= x1738 x4466) (not x4466)) (and x4466 (and (= (x1324 x12 2) x1268) (= (x1013 (x3182 x3503) x1347 0) x12) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4657) (<= 0 x4657) (= (not x3189) x1738) (= x3189 (< x4657 x142)) (= x4657 (x2995 x1268))))) (and (= (x1013 (x3182 x3502) x1347 0) x669) (= (x1324 x1347 1) x1727) (< x3503 1461501637330902918203684832716283019655932542976) (= x283 (x2995 x1962)) (>= x3503 0) (>= x283 0) (<= x283 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2270 0) (= x283 0) (= (x4141 x1727) x3503) (not (= x3502 0)) (= (x1324 x669 2) x1962) (= x4466 (ite (> x2270 0) (not (= x3503 0)) (< 0 x2270))) (<= x2270 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x3503)))) x2727) (=> (and (not x518) (= x1005 x1231)) x3161)))))
(assert (x2185 x4604))
(assert (= (and (not x2325) x4360) x2927))
(assert (x2185 x4611))
(assert (= (x862 (x3182 x1136)) x1136))
(assert (=> (<= x2135 10000) (= (x3187 x2135) (x3182 x2135))))
(assert (= x2405 (or x125 x1143 x1258 x293)))
(assert (x2185 x4263))
(assert (= (x3187 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x3182 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (= (x862 (x3182 x968)) x968))
(assert (x2185 x3177))
(assert (= (and x1825 x1358) x105))
(assert (= (and x2562 (not x3864)) x1804))
(assert (= (=> (or (and x509 (and (= x760 (> x304 x2)) (not (< x2662 x1784)) (= x2 (x2214 (- x2662 x1784))))) (and (not x509) (= x760 x509))) x4828) x4578))
(assert (= (and (not x4803) x2109) x3889))
(assert (x2185 x4236))
(assert (x2870 x3626))
(assert (= x4475 (or x3720 x1938)))
(assert (x2185 x441))
(assert (= 2236579515 (x862 (x3187 2236579515))))
(assert (x2185 x306))
(assert (= x1819 (and (not x2076) x4664)))
(assert (= (=> (= x2759 x4263) x1253) x2308))
(assert (=> (>= 10000 x4722) (= (x3182 x4722) (x3187 x4722))))
(assert (= (and (not x3733) x321) x786))
(assert (= x2950 (x862 (x3182 x2950))))
(assert (x613 x219))
(assert (x2185 x2897))
(assert (x2185 x4454))
(assert (x2185 x4227))
(assert (x2185 x3237))
(assert (x2185 x626))
(assert (=> (>= 10000 x2463) (= (x3187 x2463) (x3182 x2463))))
(assert (= (and x566 x4356) x2227))
(assert (=> (>= 10000 x3770) (= (x3182 x3770) (x3187 x3770))))
(assert (x2185 x3258))
(assert (= (and x616 (not x1366)) x1971))
(assert (= (and x472 x3580) x2702))
(assert (x2185 x192))
(assert (x2870 x4194))
(assert (x2185 x1755))
(assert (=> (>= 10000 x4691) (= (x3182 x4691) (x3187 x4691))))
(assert (= x2171 (x862 (x3182 x2171))))
(assert (= (x862 (x3182 x3018)) x3018))
(assert (= (and x3483 x3704) x620))
(assert (= (x862 (x3182 x4123)) x4123))
(assert (x2185 x4819))
(assert (=> (<= x4539 10000) (= (x3182 x4539) (x3187 x4539))))
(assert (= (x3182 989455977) (x3187 989455977)))
(assert (= (and x2620 x3060) x2123))
(assert (x2185 x3710))
(assert (x2870 x3652))
(assert (x2185 x4902))
(assert (x2185 x3198))
(assert (= x4004 (and (not x4473) x3402)))
(assert (x2185 x4287))
(assert (x2185 x4376))
(assert (= x1206 (and x540 x4089)))
(assert (= x1068 (or x3874 x1538)))
(assert (= (+ 1 (x862 x2195)) (x862 (x1324 x2195 1))))
(assert (= x4873 (and (not x3697) x1232)))
(assert (= x3704 (and x1200 x2146)))
(assert (x2185 x1770))
(assert (x2185 x2556))
(assert (x2185 x4218))
(assert (x2870 x2888))
(assert (=> (>= 10000 x1352) (= (x3187 x1352) (x3182 x1352))))
(assert (= (and x4048 (not x3559)) x3468))
(assert (x2870 x4033))
(assert (x2185 x1960))
(assert (x2185 x4186))
(assert (x2185 x4505))
(assert (x2185 x2579))
(assert (= (and x887 x3583) x427))
(assert (x2185 x3082))
(assert (= x369 (and x2502 x4573)))
(assert (x2185 x2909))
(assert (= x2407 (and x4749 (not x179))))
(assert (= (and (not x2664) x3001) x2751))
(assert (= (+ 1 (x862 x1333)) (x862 (x1324 x1333 1))))
(assert (= x1773 (=> (and (= x3229 x3190) (= x3836 x1579)) x2957)))
(assert (x2185 x4422))
(assert (= (and x925 x4554) x3647))
(assert (x2185 x4439))
(assert (x2870 x4059))
(assert (= (=> (and (= 0 x2602) (= x2724 x1193)) x4780) x1599))
(assert (= (and (not x1481) x2519) x1037))
(assert (x2185 x1239))
(assert (x2185 x3193))
(assert (x2185 x280))
(assert (x2185 x3406))
(assert (= x2479 (x862 (x3182 x2479))))
(assert (= (and x3097 x577) x2015))
(assert (= x3496 (or x775 x875)))
(assert (x2870 x3230))
(assert (= x616 (and x2273 (not x1880))))
(assert (x2185 x4416))
(assert (x2870 x2685))
(assert (= (+ 1 (x862 x661)) (x862 (x1324 x661 1))))
(assert (x2185 x4750))
(assert (x2185 x4423))
(assert (x2185 x3828))
(assert (= (x3187 242558722) (x3182 242558722)))
(assert (x2185 x1654))
(assert (=> (>= 10000 x2546) (= (x3182 x2546) (x3187 x2546))))
(assert (= (x3187 405663989) (x3182 405663989)))
(assert (= (and x4792 x3372) x1644))
(assert (=> (>= 10000 x4877) (= (x3182 x4877) (x3187 x4877))))
(assert (= (x862 (x3182 x4194)) x4194))
(assert (x2870 x322))
(assert (= x1789 (and x2706 x3468)))
(assert (x2185 x1740))
(assert (x2870 x2546))
(assert (= x4373 (and x1133 x4441)))
(assert (= (x862 (x3182 x976)) x976))
(assert (x2185 x4028))
(assert (= (=> (and (= 0 x2323) (= x3947 x3451)) x584) x1573))
(assert (x2185 x494))
(assert (= (and (=> (and (and (= 1 x4223) (= x4877 x2888)) (not x1002)) x2025) (=> (and x1002 (and (= x312 x1347) (= x2888 x4311) (= x4063 x184))) x4883)) x4832))
(assert (x2185 x757))
(assert (= (=> (= (= x2686 0) x1880) (and (=> x1880 x580) (=> (and (not x1880) (= (or (and (= (<= x1843 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1843)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1843)) x1366)) (and (=> x1366 x580) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3607) (<= 0 x3607) (= x3320 (> x3607 x4679)) (= x4679 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4314)))) (not x1366)) (and (=> x3320 x580) (=> (and (not x3320) (and (= (> x2392 x4679) x4726) (= x2392 (x4274 x1188)) (>= x2392 0) (= x4714 (x227 (+ x4314 x3607))) (<= x2392 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x322) (x3187 5) 0) x1188))) (and (=> x4726 x580) (=> (and (not x4726) (and (= 1 x2280) (= x59 32) (= x2653 (x227 (+ x4314 x2392))))) x2192))))))))) x3869))
(assert (x2185 x213))
(assert (= (+ 1 (x862 x2907)) (x862 (x1324 x2907 1))))
(assert (x2185 x304))
(assert (x2185 x165))
(assert (x2185 x1349))
(assert (x2185 x1834))
(assert (x2185 x1843))
(assert (x2185 x3564))
(assert (= x228 (and x2023 x1636)))
(assert (= x4180 (or x620 x34 x1722 x4132)))
(assert (=> (>= 10000 x976) (= (x3187 x976) (x3182 x976))))
(assert (x2870 x968))
(assert (x2185 x1897))
(assert (x2185 x4588))
(assert (= (x862 (x1324 x4739 1)) (+ 1 (x862 x4739))))
(assert (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x862 (x3187 76833804140862540057647519496925185374644862498684814347804924264468996685824))))
(assert (= (and x618 x1745) x4046))
(assert (= x2408 (x862 (x3182 x2408))))
(assert (x2185 x3666))
(assert (= (and (not x2526) x4620) x1864))
(assert (x2185 x2880))
(assert (x2185 x666))
(assert (= x4717 (=> (= (= 0 x2365) x653) (and (=> (and (= x1173 x1770) x653) x513) (=> (and (not x653) (= x349 (or (and (= (<= x2993 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2993)) (> x2993 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and x349 (= x1770 x1173)) x513) (=> (and (and (= x1173 x604) (= x1157 1) (= x1662 32)) (not x349)) x431)))))))
(assert (= (=> (= x3467 (= x3773 0)) (and (=> (and x3467 (= x1198 x546)) x585) (=> (and (= x3300 (or (and (< x41 32) (= true (<= x41 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x41))) (not x3467)) (and (=> (and x3300 (= x546 x1198)) x585) (=> (and (not x3300) (and (= x2845 1) (= x1260 x546) (= 32 x2161))) x3069))))) x4742))
(assert (x2185 x576))
(assert (x2185 x2725))
(assert (x2870 x3906))
(assert (x2185 x1282))
(assert (= x1754 (=> (and (= (= x1725 0) x1496) (or (not x1496) x1496)) x675)))
(assert (x2185 x611))
(assert (= (x3182 2134560854) (x3187 2134560854)))
(assert (= x3605 (or x3734 x997)))
(assert (x2185 x2690))
(assert (= (and x2752 (not x3573)) x2451))
(assert (x2185 x2866))
(assert (= x2124 (x862 (x3182 x2124))))
(assert (= x617 (and x26 x2038)))
(assert (x2185 x316))
(assert (x2185 x728))
(assert (= x3295 (or x2112 x3359)))
(assert (x2185 x3172))
(assert (= x4429 (=> (and (= x3289 x3875) (= x4225 0)) x2635)))
(assert (x2185 x3529))
(assert (x2185 x4786))
(assert (x2185 x4492))
(assert (= (x862 (x1324 x326 1)) (+ 1 (x862 x326))))
(assert (= x1351 (or x4349 x4565)))
(assert (= (and (=> (and (and (or (and x1329 (and (= (not x1637) x4342) (= (x1324 x3884 2) x615) (= (x1013 (x3182 x2171) x2764 0) x3884) (>= x1469 0) (= x1469 (x4759 x615)) (= x1637 (> x4363 x1469)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1469))) (and (not x1329) (= x4342 x1329))) (and (= (x1013 (x3182 x2773) x2764 0) x3729) (= x1329 (ite (> x2270 1) (not (= x2171 0)) (< 1 x2270))) (= (x1324 x3729 1) x630) (>= x2171 0) (= x2171 (x3776 x630)) (> 1461501637330902918203684832716283019655932542976 x2171) (>= 1461501637330902918203684832716283019655932542975 x2171))) x3575) x556) (=> (and (not x3575) (and (= x4640 0) (= x2773 x2959))) x4477)) x390))
(assert (= (+ 1 (x862 x2682)) (x862 (x1324 x2682 1))))
(assert (= x4874 (and (not x382) x127)))
(assert (x2185 x4377))
(assert (= (or x3645 x4003) x4570))
(assert (x2185 x2216))
(assert (x2185 x4891))
(assert (x2185 x4547))
(assert (=> (>= 10000 x3131) (= (x3187 x3131) (x3182 x3131))))
(assert (x2185 x2554))
(assert (x2185 x1054))
(assert (x2185 x1151))
(assert (x2185 x3246))
(assert (x2185 x3380))
(assert (= x4058 (or x2746 x253)))
(assert (x2185 x4856))
(assert (x2185 x2887))
(assert (x2185 x3245))
(assert (x2185 x1944))
(assert (x2185 x1030))
(assert (x2870 x1463))
(assert (x2185 x2389))
(assert (= (x3182 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x3187 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (and (not x4085) x4027) x3662))
(assert (x2185 x3164))
(assert (x2185 x504))
(assert (x2185 x1308))
(assert (x2185 x1365))
(assert (x2185 x415))
(assert (x2185 x2479))
(assert (x2185 x2450))
(assert (= x1111 (and (not x2224) x108)))
(assert (= (and x4749 x179) x3124))
(assert (x2185 x2978))
(assert (x2185 x4558))
(assert (x2185 x2671))
(assert (= x3507 (and x652 (not x939))))
(assert (x2185 x508))
(assert (= (or x1153 x3784) x3209))
(assert (x2185 x4805))
(assert (= (or x4229 x3716) x2946))
(assert (x2185 x1136))
(assert (= x2894 (or x4479 x2549 x1588 x391 x2621 x1035)))
(assert (= 2023533118 (x862 (x3187 2023533118))))
(assert (= x2306 (and x3873 x1413)))
(assert (x2185 x1434))
(assert (= x2111 (and x2733 (not x215))))
(assert (= (and x2659 x4259) x3286))
(assert (= (and x3982 x2613) x790))
(assert (= x1035 (and x1875 (not x755))))
(assert (= x2108 (=> (and (or (and x2146 (and (and (= x3483 (> x2947 0)) (> 1461501637330902918203684832716283019655932542976 x3488) (<= x3488 1461501637330902918203684832716283019655932542975) (= (x2214 (- x4581 x3488)) x2947) (>= x3488 0) (= x3488 (x2531 x2144))) (or (and x3483 (and (> 1461501637330902918203684832716283019655932542976 x1008) (<= x1008 1461501637330902918203684832716283019655932542975) (>= x1008 0) (= x3092 (x1013 (x3182 x4581) x1396 0)) (= (x3954 x3092) x1008))) (not x3483)))) (and (not x2146) (and (and (<= 0 x2749) (= (x2531 x2144) x2749) (< x2749 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2749) (= (= 0 x2749) x1254)) (or x1254 (and (not x1254) (and (= (x4509 x3834) x4525) (>= 1461501637330902918203684832716283019655932542975 x4525) (= x3834 (x1324 x2144 1)) (>= x4525 0) (> 1461501637330902918203684832716283019655932542976 x4525))))))) (= (ite (< x3878 x2270) (not (= 0 x4581)) (< x3878 x2270)) x2146)) x2824)))
(assert (=> (>= 10000 x998) (= (x3182 x998) (x3187 x998))))
(assert (x2185 x2514))
(assert (x2185 x2537))
(assert (= (x862 (x3182 x4033)) x4033))
(assert (x2185 x3125))
(assert (= (and x3801 x1167) x3476))
(assert (x2870 x1468))
(assert (= (and (not x2712) x1351) x1559))
(assert (x2185 x3199))
(assert (x2185 x3413))
(assert (x3909 x4444))
(assert (x2185 x3261))
(assert (=> (>= 10000 x1463) (= (x3182 x1463) (x3187 x1463))))
(assert (x2185 x4535))
(assert (x2185 x3542))
(assert (x2185 x4623))
(assert (x2185 x13))
(assert (= (and (not x302) x853) x1116))
(assert (x2185 x3685))
(assert (= x308 (and x3797 x2533)))
(assert (x2185 x3910))
(assert (= x3610 (and x152 x427)))
(assert (x2870 x565))
(assert (= x3856 (and x169 x2229)))
(assert (x2185 x1692))
(assert (= x1015 (and x2988 x434)))
(assert (x2185 x1529))
(assert (= (or x3027 x4184) x4049))
(assert (= (=> (and (= x2065 x3773) (= x4826 x41)) x3581) x1461))
(assert (= (=> (and (or (not x3442) x3442) (= x3442 (= x3965 0))) x104) x3792))
(assert (x2185 x1318))
(assert (x2185 x130))
(assert (= (and (not x4234) x1243) x2023))
(assert (x2185 x4840))
(assert (= x2901 (and x4899 x1134)))
(assert (= x3170 (and x1640 x4035)))
(assert (x2185 x2633))
(assert (x2185 x763))
(assert (= (and x4545 x3166) x843))
(assert (= (or x1896 x3327) x1439))
(assert (x2185 x3568))
(assert (= (and x874 (not x1660)) x946))
(assert (x2185 x4199))
(assert (x2185 x2619))
(assert (= x4484 (x862 (x3182 x4484))))
(assert (= (and x4707 (not x4009)) x4299))
(assert (x2185 x1060))
(assert (= (x3187 1313710058) (x3182 1313710058)))
(assert (x2185 x1606))
(assert (= (or x239 x967) x579))
(assert (x2870 x4539))
(assert (x2185 x789))
(assert (= (x862 (x1324 x2764 1)) (+ 1 (x862 x2764))))
(assert (= (x3187 157198259) (x3182 157198259)))
(assert (= (and (not x1738) x2586) x3950))
(assert (= x4343 (x862 (x3182 x4343))))
(assert (=> (<= x4123 10000) (= (x3182 x4123) (x3187 x4123))))
(assert (x4678 x1666 x2323))
(assert (x2185 x451))
(assert (x2185 x4052))
(assert (x2185 x562))
(assert (= x1844 (and (not x1477) x3562)))
(assert (x2185 x2437))
(assert (x2185 x932))
(assert (= x47 (and x3873 (not x1413))))
(assert (= (and x521 x2901) x4256))
(assert (= (and (not x1401) x979) x3873))
(assert (= x4538 (and x1383 x4044)))
(assert (x2185 x4895))
(assert (= (x862 (x1324 x1955 1)) (+ 1 (x862 x1955))))
(assert (=> (>= 10000 x4547) (= (x3187 x4547) (x3182 x4547))))
(assert (= x3503 (x862 (x3182 x3503))))
(assert (x2185 x3642))
(assert (= x2568 (and x1928 x4689)))
(assert (x2185 x4261))
(assert (x2185 x3202))
(assert (= (=> (and (= x1758 x2199) (= x4052 x13)) x4772) x978))
(assert (x2185 x4712))
(assert (= (=> (and (= (= x671 x3937) x4503) (= (ite (= x4604 1) 1 0) x447) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x671) (> x3953 0) (= (x227 (+ x528 4)) x2246) (= (ite (> x2173 31) 1 0) x2165) (= x3953 (x3232 x192 x1881)) (= x3963 (x2214 (- x3283 x528))) (= x192 (x468 x1529 x3799)) (= x3283 (x227 (+ 32 x2246))) (= (ite (= 0 x2173) 1 0) x3799) (= x1529 (x3232 x447 x2165))) (and (=> (and (not x4503) (= (= x4413 x671) x150)) (and (=> (and (and (and (and (= (or (> x3466 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3466 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3466 32))) x2317) (not (< x271 2217467699)) (= x3998 x4314) (< x271 2929553584) (> x2583 0) (= x2583 (x2258 (x3182 x759))) (not (< x264 4)) (= x3851 72570022874062638528011751457397263716769196454539065078543251854057308946432) (= x271 2691771752) (= x3963 x264) (= (x2214 (- x264 4)) x3466) (not (< x271 2691771752)) (= 36 x264)) x4586) (= (= x671 x759) x4586)) (not x150)) (and (=> (and (and (>= x4424 0) (= x3974 128) (>= 1461501637330902918203684832716283019655932542975 x4424) (> 1461501637330902918203684832716283019655932542976 x4424) (= x4476 x4314) (= x3030 (= x2031 x4424))) (not x2317)) (and (=> (and x3030 (and (> 1466279372 x791) (not (> 599290589 x791)) (= x4117 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1211) (= x4915 (x2214 (- x4117 4))) (= x791 599290589) (= x759 x2364) (= (x2258 (x3182 x2031)) x4690) (not (> 4 x4117)) (= x322 x3080) (= x1284 (or (and (> 96 x4915) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4915) true)) (> x4915 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 100 x4117) (< 0 x4690) (= x4476 x1224))) (and (=> x1284 x949) (=> (and (and (= (= x3080 x322) x1522) (= x3717 x3080)) (not x1284)) (and (=> (and x1522 (and (= x1974 (= x759 x2364)) (= x2140 x2364))) (and (=> (not x1974) x949) (=> (and x1974 (and (= (x1013 (x3182 x3080) (x3187 1) 0) x2344) (= x1601 (> x4476 x926)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x926) (= (x2591 x2344) x926) (<= 0 x926) (= x1224 x3453))) (and (=> (and (not x1601) (= x2210 (> x1224 x926))) (and (=> (and (not x2210) (and (= x3051 (x2214 (- x926 x1224))) (= x118 (> x972 x3358)) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1224)) x3358) (= (x1013 (x3182 x2364) (x3187 1) 0) x781) (= (x1013 (x3182 x3080) (x3187 1) 0) x4133) (>= x972 0) (<= x972 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x972 (x4793 x781)))) (and (=> x118 x949) (=> (and (and (= (x227 (+ x1224 x972)) x3500) (= x2331 (> x972 x3500))) (not x118)) (and (=> (and (and (= x4901 (x1013 (x3182 x759) x841 0)) (= x4517 (x740 x4901)) (<= 0 x4517) (= x841 (x1013 (x3182 x3080) (x3187 2) 0)) (= x1717 (< x4517 x1224)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4517)) (not x2331)) (and (=> (and (not x1717) (= x4537 (> x1224 x4517))) (and (=> x4537 x949) (=> (and (and (= x1736 32) (= (x2214 (- x4517 x1224)) x4439) (= 1 x2790)) (not x4537)) x4244))) (=> x1717 x949))) (=> x2331 x949))))) (=> x2210 x949))) (=> x1601 x949))))) (=> (not x1522) x949))))) (=> (and (= x3609 (= x3937 x4424)) (not x3030)) (and (=> (and (and (= x759 x2836) (not (> 4 x2069)) (= (x2214 (- x2069 4)) x3710) (= 100 x2069) (= x3480 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x1632 547091486)) (> 988262939 x1632) (< 0 x4567) (not (= x1632 405663989)) (= (x2258 (x3182 x3937)) x4567) (= x4476 x763) (= x2069 100) (= x322 x2546) (not (> 405663989 x1632)) (= x1632 599290589) (= x1406 (or (and (= true (<= x3710 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x3710)) (> x3710 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x1632 2217467699)) x3609) (and (=> (and (and (= x4765 (= x2546 x322)) (= x4028 x2546)) (not x1406)) (and (=> (and x4765 (and (= (= x759 x2836) x1276) (= x2836 x4199))) (and (=> (not x1276) x2083) (=> (and (and (= (< x497 x4476) x3201) (= (x385 x2435) x497) (<= x497 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2435 (x1013 (x3182 x2546) (x3187 5) 0)) (= x3087 x763) (<= 0 x497)) x1276) (and (=> (and (not x3201) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1818) (= x2300 (x1013 (x3182 x2546) (x3187 5) 0)) (>= x1818 0) (= x568 (< x1818 x763)) (= x1818 (x385 x2300)))) (and (=> (and (and (= x382 (> x325 x1730)) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x763)) x1730) (<= 0 x325) (= (x1013 (x3182 x2836) (x3187 5) 0) x102) (= x325 (x2697 x102)) (= x4064 (x2214 (- x1818 x763))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x325)) (not x568)) (and (=> (and (and (= 32 x3705) (= x2882 1) (= (x227 (+ x763 x325)) x3657) (= x3437 1)) (not x382)) x2349) (=> x382 x2083))) (=> x568 x2083))) (=> x3201 x2083))))) (=> (not x4765) x2083))) (=> x1406 x2083))) (=> (and (= x3155 (= x4424 x4413)) (not x3609)) (and (=> (and (and (not (> 405663989 x2385)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1105) (= x3788 (x2258 (x3182 x4413))) (= x322 x2174) (= x3713 x4476) (< 0 x3788) (> 988262939 x2385) (= x3980 (x2214 (- x3215 4))) (= 100 x3215) (not (= 405663989 x2385)) (= x3215 100) (= (or (> x3980 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3980 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3980) true))) x4770) (not (> 4 x3215)) (= x2600 x759) (not (= 547091486 x2385)) (= 599290589 x2385) (> 2217467699 x2385)) x3155) (and (=> (and (not x4770) (and (= x1134 (= x322 x2174)) (= x4812 x2174))) (and (=> (not x1134) x4093) (=> (and x1134 (and (= x2600 x1379) (= x521 (= x2600 x759)))) (and (=> (and x521 (and (= x4499 x3713) (= (x1013 (x3182 x2174) (x3187 5) 0) x1430) (= (< x1861 x4476) x548) (= x1861 (x846 x1430)) (>= x1861 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1861))) (and (=> (and (not x548) (and (= (x846 x2854) x259) (= (> x3713 x259) x3573) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x259) (>= x259 0) (= x2854 (x1013 (x3182 x2174) (x3187 5) 0)))) (and (=> x3573 x4093) (=> (and (and (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3713)) x2763) (= (x1013 (x3182 x2600) (x3187 5) 0) x4745) (= x4230 (> x3197 x2763)) (= x2856 (x2214 (- x259 x3713))) (>= x3197 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3197) (= (x4738 x4745) x3197)) (not x3573)) (and (=> (and (and (= x1986 1) (= 32 x2971) (= (x227 (+ x3197 x3713)) x1343) (= 1 x2820)) (not x4230)) x392) (=> x4230 x4093))))) (=> x548 x4093))) (=> (not x521) x4093))))) (=> x4770 x4093))) (=> (and (and (and (and (< x1069 2217467699) (= (x2214 (- x1991 4)) x4375) (= 100 x1991) (> 988262939 x1069) (= (x2258 (x3182 x759)) x3687) (= (or (and (< x4375 96) (= true (<= x4375 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4375 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2929) (= 100 x1991) (= x466 x4476) (> x3687 0) (not (= x1069 547091486)) (not (= 405663989 x1069)) (= x759 x968) (= x322 x2593) (= x3401 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x1991)) (= x1069 599290589) (not (< x1069 405663989))) x2038) (= (= x759 x4424) x2038)) (not x3155)) (and (=> x2929 x599) (=> (and (not x2929) (and (= x2593 x4011) (= x755 (= x322 x2593)))) (and (=> (and (and (= x400 (= x759 x968)) (= x968 x2525)) x755) (and (=> (and x400 (and (= x466 x1526) (= x1481 (> x4476 x2656)) (>= x2656 0) (= (x3750 x1018) x2656) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2656) (= x1018 (x1013 (x3182 x2593) (x3187 5) 0)))) (and (=> (and (and (= x3945 (< x2389 x466)) (= x2389 (x3750 x467)) (>= x2389 0) (<= x2389 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x2593) (x3187 5) 0) x467)) (not x1481)) (and (=> x3945 x599) (=> (and (not x3945) (and (<= 0 x2590) (<= x2590 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x457 (x1013 (x3182 x968) (x3187 5) 0)) (= (x4112 x457) x2590) (= (x2214 (- x2389 x466)) x605) (= x4778 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x466))) (= (> x2590 x4778) x3121))) (and (=> x3121 x599) (=> (and (not x3121) (and (= x454 1) (= x2536 32) (= (x227 (+ x2590 x466)) x2696) (= x4357 1))) x4646))))) (=> x1481 x599))) (=> (not x400) x599))) (=> (not x755) x599))))))))))) (=> x2317 x580))) (=> (and x150 (and (= x351 72570022874062638528011751457397263716769196454539065078543251854057308946432) (not (< x1270 4)) (= x1270 x3963) (not (< x539 2217467699)) (= (x2258 (x3182 x4413)) x1858) (< x539 2929553584) (= x3998 x3265) (not (> 2691771752 x539)) (< 0 x1858) (= 36 x1270) (= 2691771752 x539) (= (x2214 (- x1270 4)) x534) (= x3733 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x534) (and (< x534 32) (= true (<= x534 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) (and (=> (and (and (= x3564 128) (= x1589 (= x1772 x2031)) (< x1772 1461501637330902918203684832716283019655932542976) (<= x1772 1461501637330902918203684832716283019655932542975) (<= 0 x1772) (= x3265 x1865)) (not x3733)) (and (=> (and (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4609) (< x3748 1466279372) (not (> 599290589 x3748)) (= x3462 x322) (= 100 x602) (not (> 4 x602)) (= x1865 x1101) (= x810 x4413) (= (x2214 (- x602 4)) x432) (= x602 100) (= (or (and (< x432 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x432))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x432)) x83) (= x3748 599290589) (< 0 x181) (= x181 (x2258 (x3182 x2031)))) x1589) (and (=> x83 x3141) (=> (and (not x83) (and (= (= x322 x3462) x2191) (= x3462 x3546))) (and (=> (and x2191 (and (= (= x810 x4413) x3580) (= x2021 x810))) (and (=> (not x3580) x3141) (=> (and (and (= (x2591 x1629) x3171) (= x1101 x441) (<= x3171 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x3462) (x3187 1) 0) x1629) (<= 0 x3171) (= x933 (< x3171 x1865))) x3580) (and (=> (and (not x933) (= (< x3171 x1101) x2116)) (and (=> x2116 x3141) (=> (and (not x2116) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2920) (= (x1013 (x3182 x810) (x3187 1) 0) x1495) (= x2663 (x2214 (- x3171 x1101))) (= x2932 (x1013 (x3182 x3462) (x3187 1) 0)) (<= 0 x2920) (= (x1919 x1495) x2920) (= x256 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1101))) (= (> x2920 x256) x2502))) (and (=> x2502 x3141) (=> (and (not x2502) (and (= (> x2920 x723) x904) (= x723 (x227 (+ x1101 x2920))))) (and (=> x904 x3141) (=> (and (not x904) (and (= (< x1795 x1101) x194) (= x245 (x1013 (x3182 x3462) (x3187 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1795) (<= 0 x1795) (= x4564 (x1013 (x3182 x4413) x245 0)) (= x1795 (x740 x4564)))) (and (=> x194 x3141) (=> (and (= (< x1795 x1101) x3023) (not x194)) (and (=> x3023 x3141) (=> (and (and (= x2517 32) (= x774 1) (= (x2214 (- x1795 x1101)) x2611)) (not x3023)) x4754))))))))))) (=> x933 x3141))))) (=> (not x2191) x3141))))) (=> (and (not x1589) (= (= x3937 x1772) x3943)) (and (=> (and x3943 (and (< 0 x3563) (not (> 4 x4520)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x660)) (> 96 x660)) (> x660 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1935) (< x4683 2217467699) (= x4520 100) (= x2869 x4413) (= x3563 (x2258 (x3182 x3937))) (not (= x4683 547091486)) (= (x2214 (- x4520 4)) x660) (= x322 x998) (< x4683 988262939) (not (> 405663989 x4683)) (= x4683 599290589) (not (= x4683 405663989)) (= x4520 100) (= x1865 x165) (= x3544 16156842317565293874272834530371880720966471053262404558597773956279093428224))) (and (=> x1935 x4019) (=> (and (not x1935) (and (= x3925 (= x322 x998)) (= x886 x998))) (and (=> (and x3925 (and (= (= x2869 x4413) x4259) (= x2869 x2873))) (and (=> (not x4259) x4019) (=> (and x4259 (and (= x3722 x165) (= x3967 (x1013 (x3182 x998) (x3187 5) 0)) (>= x4158 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4158) (= x3821 (> x1865 x4158)) (= (x385 x3967) x4158))) (and (=> (and (not x3821) (and (= (x1013 (x3182 x998) (x3187 5) 0) x2922) (<= 0 x1894) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1894) (= (< x1894 x165) x4097) (= (x385 x2922) x1894))) (and (=> x4097 x4019) (=> (and (and (= (x865 x2495) x2797) (<= 0 x2797) (= (x1013 (x3182 x2869) (x3187 5) 0) x2495) (= x4454 (x2214 (- x1894 x165))) (= x2425 (< x2437 x2797)) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x165)) x2437) (<= x2797 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4097)) (and (=> (and (not x2425) (and (= 1 x4497) (= x963 1) (= x2143 32) (= (x227 (+ x165 x2797)) x4694))) x2857) (=> x2425 x4019))))) (=> x3821 x4019))))) (=> (not x3925) x4019))))) (=> (and (= x4436 (= x4413 x1772)) (not x3943)) (and (=> (and (and (> 988262939 x254) (not (= 547091486 x254)) (< 0 x1129) (= x4445 x322) (= x4432 (x2214 (- x2963 4))) (= 599290589 x254) (not (= 405663989 x254)) (< x254 2217467699) (not (> 405663989 x254)) (= x1865 x2579) (= x3117 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4413 x3230) (not (< x2963 4)) (= 100 x2963) (= x1129 (x2258 (x3182 x4413))) (= 100 x2963) (= (or (> x4432 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4432 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4432) true))) x2527)) x4436) (and (=> (and (not x2527) (and (= x4445 x1611) (= (= x4445 x322) x1604))) (and (=> (and x1604 (and (= x2693 x3230) (= x4550 (= x3230 x4413)))) (and (=> (and x4550 (and (= (x846 x868) x4606) (= x2145 x2579) (= (< x4606 x1865) x1085) (>= x4606 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4606) (= x868 (x1013 (x3182 x4445) (x3187 5) 0)))) (and (=> x1085 x1492) (=> (and (not x1085) (and (= (x846 x1203) x1959) (<= 0 x1959) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1959) (= x1203 (x1013 (x3182 x4445) (x3187 5) 0)) (= (< x1959 x2579) x4816))) (and (=> (and (not x4816) (and (= x3521 (x1013 (x3182 x3230) (x3187 5) 0)) (>= x291 0) (<= x291 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2579)) x703) (= (x2214 (- x1959 x2579)) x4391) (= x4530 (< x703 x291)) (= x291 (x2168 x3521)))) (and (=> (and (and (= (x227 (+ x2579 x291)) x2473) (= 1 x2843) (= x2115 1) (= 32 x377)) (not x4530)) x777) (=> x4530 x1492))) (=> x4816 x1492))))) (=> (not x4550) x1492))) (=> (not x1604) x1492))) (=> x2527 x1492))) (=> (and (not x4436) (and (= x139 (= x759 x1772)) (and x139 (and (= x4353 100) (= 100 x4353) (< x3758 2217467699) (not (= 405663989 x3758)) (= (or (> x3277 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3277)) (> 96 x3277))) x2532) (> x3416 0) (= x4914 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4291 x322) (not (< x4353 4)) (not (> 405663989 x3758)) (< x3758 988262939) (= (x2258 (x3182 x759)) x3416) (= x3277 (x2214 (- x4353 4))) (= 599290589 x3758) (not (= 547091486 x3758)) (= x1865 x4558) (= x976 x4413))))) (and (=> x2532 x4161) (=> (and (not x2532) (and (= x3923 (= x4291 x322)) (= x2316 x4291))) (and (=> (and (and (= x2267 x976) (= x2944 (= x976 x4413))) x3923) (and (=> (and x2944 (and (= x243 x4558) (= (x1013 (x3182 x4291) (x3187 5) 0) x4428) (<= 0 x4304) (= x628 (> x1865 x4304)) (= x4304 (x3750 x4428)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4304))) (and (=> (and (not x628) (and (= x1288 (x3750 x849)) (= (< x1288 x4558) x3895) (<= x1288 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1288) (= (x1013 (x3182 x4291) (x3187 5) 0) x849))) (and (=> (and (and (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4558)) x4572) (= (x1013 (x3182 x976) (x3187 5) 0) x482) (= (x2214 (- x1288 x4558)) x279) (<= 0 x4278) (= x1980 (< x4572 x4278)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4278) (= (x1148 x482) x4278)) (not x3895)) (and (=> (and (and (= 1 x4074) (= x4766 1) (= x2829 (x227 (+ x4558 x4278))) (= x3970 32)) (not x1980)) x3637) (=> x1980 x4161))) (=> x3895 x4161))) (=> x628 x4161))) (=> (not x2944) x4161))) (=> (not x3923) x4161))))))))))) (=> x3733 x477))))) (=> (and (and (not (> 4 x1584)) (not (< x2441 2691771752)) (= x1584 36) (not (> 2217467699 x2441)) (= 2691771752 x2441) (= x90 x3998) (= x1732 72570022874062638528011751457397263716769196454539065078543251854057308946432) (= x1584 x3963) (> 2929553584 x2441) (= (or (> x4771 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x4771 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x4771))) x3233) (= x4771 (x2214 (- x1584 4))) (< 0 x4647) (= x4647 (x2258 (x3182 x3937)))) x4503) (and (=> (and (and (> 1461501637330902918203684832716283019655932542976 x3960) (>= x3960 0) (= x90 x4666) (= x1337 (= x2031 x3960)) (= x3822 128) (<= x3960 1461501637330902918203684832716283019655932542975)) (not x3233)) (and (=> (and (and (= x2479 x322) (= x3307 100) (= x4194 x3937) (= (or (> x3226 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x3226) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3226)))) x3852) (= 599290589 x4001) (= x3226 (x2214 (- x3307 4))) (= (x2258 (x3182 x2031)) x465) (> x465 0) (= 100 x3307) (= x4666 x655) (not (> 4 x3307)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1106) (not (< x4001 599290589)) (> 1466279372 x4001)) x1337) (and (=> x3852 x2066) (=> (and (not x3852) (and (= (= x2479 x322) x2560) (= x2479 x4542))) (and (=> (and (and (= (= x4194 x3937) x3702) (= x595 x4194)) x2560) (and (=> (not x3702) x2066) (=> (and x3702 (and (>= x1669 0) (= x3113 (> x4666 x1669)) (= x307 (x1013 (x3182 x2479) (x3187 1) 0)) (= x1669 (x2591 x307)) (= x655 x3406) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1669))) (and (=> (and (not x3113) (= (< x1669 x655) x901)) (and (=> (and (and (<= 0 x2101) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x655)) x2796) (= (> x2101 x2796) x3707) (= (x1013 (x3182 x4194) (x3187 1) 0) x3899) (= x207 (x1013 (x3182 x2479) (x3187 1) 0)) (<= x2101 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2214 (- x1669 x655)) x4175) (= x2101 (x895 x3899))) (not x901)) (and (=> x3707 x2066) (=> (and (not x3707) (and (= (x227 (+ x655 x2101)) x3044) (= (< x3044 x2101) x101))) (and (=> x101 x2066) (=> (and (not x101) (and (= (x1013 (x3182 x3937) x4440 0) x4584) (= (x1013 (x3182 x2479) (x3187 2) 0) x4440) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4510) (>= x4510 0) (= (x740 x4584) x4510) (= x1213 (< x4510 x655)))) (and (=> (and (not x1213) (= x2295 (< x4510 x655))) (and (=> (and (not x2295) (and (= x3890 1) (= 32 x1166) (= (x2214 (- x4510 x655)) x2203))) x2581) (=> x2295 x2066))) (=> x1213 x2066))))))) (=> x901 x2066))) (=> x3113 x2066))))) (=> (not x2560) x2066))))) (=> (and (= x4179 (= x3937 x3960)) (not x1337)) (and (=> (and (and (< 0 x530) (= 100 x3128) (< x4885 988262939) (not (= x4885 405663989)) (< x4885 2217467699) (= (x2214 (- x3128 4)) x971) (= x322 x2577) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2262) (= 599290589 x4885) (not (> 4 x3128)) (= x530 (x2258 (x3182 x3937))) (= x3937 x560) (not (= 547091486 x4885)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x971) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x971) true) (> 96 x971))) x2967) (= x4666 x2153) (not (< x4885 405663989)) (= x3128 100)) x4179) (and (=> (and (not x2967) (and (= x247 (= x322 x2577)) (= x493 x2577))) (and (=> (not x247) x3434) (=> (and (and (= x560 x2027) (= (= x560 x3937) x4500)) x247) (and (=> (and (and (= x4303 (x1013 (x3182 x2577) (x3187 5) 0)) (<= 0 x4331) (= x4671 x2153) (= x436 (< x4331 x4666)) (= (x385 x4303) x4331) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4331)) x4500) (and (=> (and (and (= (x385 x4055) x437) (<= x437 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x437 0) (= x4234 (< x437 x2153)) (= x4055 (x1013 (x3182 x2577) (x3187 5) 0))) (not x436)) (and (=> x4234 x3434) (=> (and (and (= x3392 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2153))) (= (> x4392 x3392) x1636) (= (x2214 (- x437 x2153)) x3584) (<= 0 x4392) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4392) (= (x1013 (x3182 x560) (x3187 5) 0) x2329) (= x4392 (x3527 x2329))) (not x4234)) (and (=> (and (not x1636) (and (= x4320 (x227 (+ x4392 x2153))) (= 1 x2390) (= x3378 32) (= x4195 1))) x4870) (=> x1636 x3434))))) (=> x436 x3434))) (=> (not x4500) x3434))))) (=> x2967 x3434))) (=> (and (= x2233 (= x4413 x3960)) (not x4179)) (and (=> (and (and (= 100 x1246) (= x360 (x2214 (- x1246 4))) (> 2217467699 x2641) (= 100 x1246) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1702) (= x1423 x3937) (= x3494 x322) (> 988262939 x2641) (= 599290589 x2641) (not (= x2641 405663989)) (not (> 405663989 x2641)) (not (> 4 x1246)) (< 0 x2430) (= x2040 x4666) (= x2430 (x2258 (x3182 x4413))) (= x4459 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x360) (and (< x360 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x360) true)))) (not (= 547091486 x2641))) x2233) (and (=> x4459 x4270) (=> (and (and (= x4713 (= x3494 x322)) (= x2218 x3494)) (not x4459)) (and (=> (and (and (= x277 (= x3937 x1423)) (= x2391 x1423)) x4713) (and (=> (not x277) x4270) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x345) (= x2040 x24) (= (< x345 x4666) x1438) (<= 0 x345) (= (x1013 (x3182 x3494) (x3187 5) 0) x575) (= (x846 x575) x345)) x277) (and (=> (and (and (= x4446 (x846 x1811)) (= x3561 (< x4446 x2040)) (= x1811 (x1013 (x3182 x3494) (x3187 5) 0)) (<= x4446 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4446)) (not x1438)) (and (=> (and (and (= x133 (< x3487 x3387)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3387) (= x3487 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2040))) (= (x2214 (- x4446 x2040)) x708) (= x3387 (x507 x1594)) (= x1594 (x1013 (x3182 x1423) (x3187 5) 0)) (<= 0 x3387)) (not x3561)) (and (=> (and (not x133) (and (= x3139 1) (= x4596 (x227 (+ x3387 x2040))) (= x4588 1) (= x1091 32))) x1726) (=> x133 x4270))) (=> x3561 x4270))) (=> x1438 x4270))))) (=> (not x4713) x4270))))) (=> (and (not x2233) (and (and x2294 (and (> 2217467699 x3202) (= x3393 (or (and (< x3823 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3823))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3823))) (not (= x3202 405663989)) (not (> 4 x1551)) (< x3202 988262939) (= x417 x4666) (not (= 547091486 x3202)) (not (< x3202 405663989)) (= 100 x1551) (= x4096 x3937) (= x322 x4709) (> x3370 0) (= x3370 (x2258 (x3182 x759))) (= 599290589 x3202) (= 100 x1551) (= x4853 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3823 (x2214 (- x1551 4))))) (= x2294 (= x3960 x759)))) (and (=> (and (not x3393) (and (= x4709 x1249) (= x3242 (= x322 x4709)))) (and (=> (not x3242) x250) (=> (and x3242 (and (= x1686 x4096) (= x2141 (= x3937 x4096)))) (and (=> (and x2141 (and (= x2551 (x3750 x4101)) (= x1575 x417) (= x4101 (x1013 (x3182 x4709) (x3187 5) 0)) (= x1269 (< x2551 x4666)) (<= 0 x2551) (<= x2551 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1269) (and (= (x1013 (x3182 x4709) (x3187 5) 0) x986) (<= 0 x2543) (= (x3750 x986) x2543) (= (< x2543 x417) x1799) (<= x2543 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1799) (and (= (x1013 (x3182 x4096) (x3187 5) 0) x1388) (<= 0 x4470) (= x4844 (< x780 x4470)) (= (x2214 (- x2543 x417)) x2818) (= x780 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x417))) (= (x1212 x1388) x4470) (<= x4470 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x4844 x250) (=> (and (not x4844) (and (= x1704 1) (= x3912 1) (= x3175 (x227 (+ x417 x4470))) (= x798 32))) x3862))) (=> x1799 x250))) (=> x1269 x250))) (=> (not x2141) x250))))) (=> x3393 x250))))))))) (=> x3233 x4300))))) x3093))
(assert (= x4202 (or x2568 x1083)))
(assert (x2870 x3408))
(assert (x2185 x3740))
(assert (= x4250 (=> (and (= (= 0 x4269) x3005) (or (not x3005) x3005)) x1797)))
(assert (= (and (not x3749) x4137) x3727))
(assert (x2185 x3543))
(assert (x2185 x1682))
(assert (x2185 x1463))
(assert (x2185 x4493))
(assert (x2185 x2963))
(assert (x2185 x1611))
(assert (x2185 x59))
(assert (= (x862 (x3182 x1829)) x1829))
(assert (x2870 x3494))
(assert (= (and x3218 x1381) x809))
(assert (= x4482 (and (not x1943) x2632)))
(assert (x2185 x1609))
(assert (x2185 x2364))
(assert (= (and x1316 x1961) x717))
(assert (x2185 x1991))
(assert (= (+ 2 (x862 x711)) (x862 (x1324 x711 2))))
(assert (x2185 x503))
(assert (= x3862 (=> (and (= x798 x2891) (= x3965 x3912)) x3792)))
(assert (x2185 x1185))
(assert (= x1431 (and (not x2767) x372)))
(assert (x2185 x140))
(assert (= (or x1812 x4002) x1122))
(assert (x2185 x2241))
(assert (x2185 x3279))
(assert (x2185 x1905))
(assert (x2185 x753))
(assert (x2185 x2693))
(assert (x2185 x3623))
(assert (= x910 (and x82 x1267)))
(assert (= (not (and (> 1461501637330902918203684832716283019655932542976 x3495) (>= 1461501637330902918203684832716283019655932542975 x3495) (= x2188 (x1324 x1296 1)) (>= x3495 0) (= (x1013 (x3182 x4311) x312 0) x1296) (= x3495 (x2455 x2188)))) x4883))
(assert (=> (>= 10000 x705) (= (x3182 x705) (x3187 x705))))
(assert (= x2635 (=> (and (= x3289 x3598) (= x4225 x4636)) x2639)))
(assert (= x1533 (x862 (x3182 x1533))))
(assert (= (and x999 x3491) x4315))
(assert (= (or x4515 x163) x3661))
(assert (=> (>= 10000 x71) (= (x3182 x71) (x3187 x71))))
(assert (=> (<= x2577 10000) (= (x3187 x2577) (x3182 x2577))))
(assert (= (and x2519 x1481) x391))
(assert (= x177 (and (not x2849) x2337)))
(assert (x2185 x4876))
(assert (x2185 x497))
(assert (x2870 x4105))
(assert (x2185 x3204))
(assert (= x2980 (and x2099 x3228)))
(assert (x2185 x1099))
(assert (= (and x1401 x979) x3768))
(assert (x2185 x3890))
(assert (= (and x2837 (not x1140)) x1656))
(assert (x2185 x3444))
(assert (x2185 x232))
(assert (x2185 x4831))
(assert (x2185 x2392))
(assert (= (and x4538 (not x1300)) x55))
(assert (x2870 x3446))
(assert (= x4472 (and x1741 x3767)))
(assert (x2185 x4430))
(assert (= x3001 (and x2512 (not x2093))))
(assert (x2185 x3156))
(assert (= x3031 (and x1937 x2762)))
(assert (x2185 x1855))
(assert (= (and x2975 x3490) x967))
(assert (= x1470 (and x3428 x3180)))
(assert (x2185 x950))
(assert (= x134 (or x1857 x1009)))
(assert (= (and x3609 x2064) x1334))
(assert (x2870 x639))
(assert (=> (<= x489 10000) (= (x3182 x489) (x3187 x489))))
(assert (= (=> (and (= x3890 0) (= x1166 x3674)) x2581) x2066))
(assert (= (and x2587 x2904) x1992))
(assert (= (or (and x2396 (not x3976)) (and x3658 x4808)) x1731))
(assert (= (and x3936 (not x4816)) x1354))
(assert (= x589 (and x550 x704)))
(assert (x2185 x3375))
(assert (x2185 x1899))
(assert (x2870 x3131))
(assert (x2185 x4830))
(assert (x2185 x171))
(assert (= x4382 (and (not x2940) x3854)))
(assert (= (and x1912 (not x2116)) x4573))
(assert (x2870 x1255))
(assert (= x1078 (and x302 x853)))
(assert (= x3147 (=> (and (= x4144 (x1715 x528)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x13) true) (< x13 32)) (> x13 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x1758 0)) (= 0 x4144)) x210)))
(assert (= x34 (and (not x1254) x4265)))
(assert (= x2739 (or x1568 x4180)))
(assert (= (and x2303 x4012) x2434))
(assert (= (x862 (x3182 x4547)) x4547))
(assert (x2185 x2492))
(assert (x2185 x4836))
(assert (x2870 x1884))
(assert (= x2440 (and x1554 x50)))
(assert (x2185 x3690))
(assert (x2575 x3683))
(assert (=> (<= x4185 10000) (= (x3187 x4185) (x3182 x4185))))
(assert (x2185 x1632))
(assert (= (and (not x3940) x492) x1812))
(assert (x2185 x3336))
(assert (x2185 x2021))
(assert (= (and (not x3916) x4756) x297))
(assert (= x2835 (and (not x3366) x1508)))
(assert (x2185 x1876))
(assert (= (+ (x862 x1847) 2) (x862 (x1324 x1847 2))))
(assert (x2212 x3247 x1897))
(assert (= (and x4618 x1142) x2742))
(assert (= (and x4350 (not x1868)) x733))
(assert (= (x862 (x3182 x4702)) x4702))
(assert (x2185 x2481))
(assert (x2185 x3671))
(assert (x2185 x4751))
(assert (x2185 x2199))
(assert (x2870 x4702))
(assert (x2185 x2557))
(assert (= x3586 (and x2123 x4155)))
(assert (= x4386 (and x3492 x2026)))
(assert (x2185 x2473))
(assert (x2185 x3308))
(assert (= (x862 (x1324 x1592 1)) (+ 1 (x862 x1592))))
(assert (x2185 x4151))
(assert (x2185 x1869))
(assert (x2185 x4393))
(assert (x2185 x4412))
(assert (= x1286 (or x3150 (and (not x2560) x3066) (and x4013 x1213) (and x3852 x2934) (and x101 x2293) (and (not x3702) x4043) (and x479 x3113) x4635 x3264)))
(assert (= (x862 (x3182 x2364)) x2364))
(assert (x2185 x2856))
(assert (x2870 x1873))
(assert (x2870 x1202))
(assert (x2185 x2923))
(assert (= x2824 x267))
(assert (x2185 x2558))
(assert (x2185 x149))
(assert (x2185 x1721))
(assert (= x610 (and x1100 (not x4246))))
(assert (x2185 x810))
(assert (x2185 x4167))
(assert (= x3921 (or x2432 x4574)))
(assert (x2185 x2898))
(assert (x2185 x1020))
(assert (x2185 x1999))
(assert (= (=> (and (= x2971 x1190) (= x1986 0)) x392) x4093))
(assert (x2185 x4434))
(assert (= x4730 (and x882 x1512)))
(assert (x2185 x2638))
(assert (= (+ (x862 x3590) 1) (x862 (x1324 x3590 1))))
(assert (x2870 x4313))
(assert (= (and x3804 (not x3328)) x4515))
(assert (= (or x1262 x578 x2221 x3476 x1244 x4680) x2275))
(assert (x2185 x1457))
(assert (=> (<= x4159 10000) (= (x3182 x4159) (x3187 x4159))))
(assert (= x713 (and x2511 x3523)))
(assert (= x4562 (and (not x287) x124)))
(assert (x2185 x4365))
(assert (= (and x3037 x4110) x1851))
(assert (x2870 x685))
(assert (x2185 x4701))
(assert (= x4539 (x862 (x3182 x4539))))
(assert (= x2024 (x862 (x3182 x2024))))
(assert (x2185 x375))
(assert (x2185 x3938))
(assert (= x2657 (and (not x3023) x3860)))
(assert (= x2363 (and x419 x406)))
(assert (x2185 x1913))
(assert (= x2330 (and x1625 (not x2553))))
(assert (= (and x1232 x3697) x2533))
(assert (x2870 x2459))
(assert (= (or (and x2096 x2331) x3782 (and x1284 x4908) (and x4210 x1601) x33 (and (not x1974) x2071) (and x1717 x3340) x1553 (and x4325 (not x1522))) x627))
(assert (x2185 x700))
(assert (x2185 x926))
(assert (x2185 x4364))
(assert (x2185 x3602))
(assert (x2870 x1642))
(assert (= x3955 (and x4483 x3831)))
(assert (= x2022 (or x1177 x4634 x2268 x2778 x2566 x2147)))
(assert (x4678 x192 x1881))
(assert (x2185 x1890))
(assert (= x1006 (and (not x1142) x4618)))
(assert (x2185 x3652))
(assert (x2185 x1359))
(assert (x2185 x3597))
(assert (= x460 (or x2264 x1790)))
(assert (= (and x2036 x1663) x3372))
(assert (= x2719 (=> (and (= (x227 (+ 32 x4493)) x4198) (= (= x2462 x2031) x1267) (= x4493 (x227 (+ x218 4))) (= (x227 (+ 32 x4198)) x4376)) (and (=> (and (= (= x3937 x2462) x2570) (not x1267)) (and (=> (and (not x2570) (= x223 (= x2462 x4413))) (and (=> (and (and (and x4489 (and (= (x2214 (- x2413 4)) x1638) (= 599290589 x1701) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1437) (= x758 x4734) (= (x2258 (x3182 x759)) x3482) (= x1462 x3683) (not (= 405663989 x1701)) (< 0 x3482) (not (< x2413 4)) (= x3926 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1638)) (> 96 x1638)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1638))) (not (= 547091486 x1701)) (= x2413 100) (= x322 x1873) (> 2217467699 x1701) (> 988262939 x1701) (not (> 405663989 x1701)))) (= (= x759 x2462) x4489)) (not x223)) (and (=> x3926 x352) (=> (and (and (= x1424 (x3232 1461501637330902918203684832716283019655932542975 x3683)) (= x1462 x3211) (= (= x3683 x1424) x3538)) (not x3926)) (and (=> (and x3538 (and (= x1873 x1038) (= x4729 (= x322 x1873)))) (and (=> (not x4729) x352) (=> (and (and (= x4214 (x3232 1461501637330902918203684832716283019655932542975 x1462)) (= (x1013 (x3182 x4214) (x3187 5) 0) x898) (<= x213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x213) (= x3592 (> x4734 x213)) (= x1597 x758) (= x213 (x3194 x898))) x4729) (and (=> (and (and (= (x1013 (x3182 x1765) (x3187 5) 0) x1523) (>= x4799 0) (= x3251 (> x758 x4799)) (= x4799 (x3194 x1523)) (<= x4799 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1765 (x3232 1461501637330902918203684832716283019655932542975 x1462))) (not x3592)) (and (=> x3251 x352) (=> (and (and (= x945 (> x2404 x1046)) (= (x4120 x3318) x2404) (>= x2404 0) (= (x2214 (- x4799 x758)) x1377) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2404) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x758)) x1046) (= (x1013 (x3182 x1873) (x3187 5) 0) x3318)) (not x3251)) (and (=> x945 x352) (=> (and (not x945) (and (= 1 x2470) (= 1 x1755) (= 32 x4365) (= (x227 (+ x2404 x758)) x2187))) x955))))) (=> x3592 x352))))) (=> (not x3538) x352))))) (=> (and x223 (and (= x1920 599290589) (= x2410 100) (> x2206 0) (= x3683 x1708) (< x1920 2217467699) (= x4310 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3274) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3274)) (> 96 x3274)))) (not (> 4 x2410)) (= x4254 x322) (= (x2258 (x3182 x4413)) x2206) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3775) (not (= x1920 405663989)) (not (= 547091486 x1920)) (= x2906 x4734) (= x3274 (x2214 (- x2410 4))) (not (> 405663989 x1920)) (> 988262939 x1920))) (and (=> x4310 x1676) (=> (and (not x4310) (and (= x2838 x1708) (= (x3232 1461501637330902918203684832716283019655932542975 x3683) x481) (= x517 (= x3683 x481)))) (and (=> (and x517 (and (= (= x322 x4254) x4649) (= x4576 x4254))) (and (=> (not x4649) x1676) (=> (and x4649 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4220) (<= 0 x4220) (= (x3232 1461501637330902918203684832716283019655932542975 x1708) x4580) (= x1630 x2906) (= (> x4734 x4220) x1401) (= x332 (x1013 (x3182 x4580) (x3187 5) 0)) (= x4220 (x2271 x332)))) (and (=> (and (not x1401) (and (= (x1013 (x3182 x4159) (x3187 5) 0) x2679) (= x1161 (x2271 x2679)) (= x4159 (x3232 1461501637330902918203684832716283019655932542975 x1708)) (= (< x1161 x2906) x1413) (<= 0 x1161) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1161))) (and (=> (and (and (= x1263 (x3939 x2454)) (<= 0 x1263) (= x3425 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2906))) (= x2241 (x2214 (- x1161 x2906))) (= x4336 (< x3425 x1263)) (= x2454 (x1013 (x3182 x4254) (x3187 5) 0)) (<= x1263 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1413)) (and (=> x4336 x1676) (=> (and (not x4336) (and (= (x227 (+ x2906 x1263)) x1900) (= x4685 1) (= x2651 1) (= x3806 32))) x2667))) (=> x1413 x1676))) (=> x1401 x1676))))) (=> (not x517) x1676))))))) (=> (and x2570 (and (< 0 x563) (= x3740 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x322 x2985) (not (= 547091486 x280)) (> 988262939 x280) (= x4335 (x2214 (- x1128 4))) (not (= 405663989 x280)) (= (x2258 (x3182 x3937)) x563) (= x280 599290589) (= x1944 x4734) (= x1128 100) (not (> 405663989 x280)) (not (> 4 x1128)) (< x280 2217467699) (= (or (and (< x4335 96) (= true (<= x4335 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4335)) x1271) (= x3683 x4387))) (and (=> x1271 x1257) (=> (and (and (= x1339 x4387) (= (= x3683 x3010) x4806) (= x3010 (x3232 1461501637330902918203684832716283019655932542975 x3683))) (not x1271)) (and (=> (not x4806) x1257) (=> (and x4806 (and (= x3164 x2985) (= x4462 (= x322 x2985)))) (and (=> (not x4462) x1257) (=> (and x4462 (and (= (> x4734 x4041) x2351) (= x1944 x1542) (<= 0 x4041) (= x4251 (x1013 (x3182 x3582) (x3187 5) 0)) (= x3582 (x3232 1461501637330902918203684832716283019655932542975 x4387)) (= (x193 x4251) x4041) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4041))) (and (=> x2351 x1257) (=> (and (and (= (x1013 (x3182 x3593) (x3187 5) 0) x2033) (= (x3232 1461501637330902918203684832716283019655932542975 x4387) x3593) (>= x1318 0) (= (> x1944 x1318) x1961) (= (x193 x2033) x1318) (<= x1318 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x2351)) (and (=> x1961 x1257) (=> (and (and (= (x4139 x3691) x3126) (= x3711 (x2214 (- x1318 x1944))) (>= x3126 0) (= (x1013 (x3182 x2985) (x3187 5) 0) x3691) (= (> x3126 x4478) x4119) (<= x3126 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4478 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1944)))) (not x1961)) (and (=> x4119 x1257) (=> (and (not x4119) (and (= (x227 (+ x3126 x1944)) x3835) (= 1 x3298) (= x4480 1) (= x4611 32))) x4438))))))))))))))) (=> (and (and (not (< x2119 4)) (= 599290589 x3552) (< x3552 1466279372) (= (x2258 (x3182 x2031)) x4531) (= x3608 x4734) (= 100 x2119) (= x4071 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x4531 0) (not (> 599290589 x3552)) (= (x2214 (- x2119 4)) x1039) (= x1415 x322) (= (or (and (< x1039 96) (= true (<= x1039 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1039)) x2110) (= x3683 x1558)) x1267) (and (=> x2110 x1450) (=> (and (and (= x1943 (= x3683 x3634)) (= x3634 (x3232 1461501637330902918203684832716283019655932542975 x3683))) (not x2110)) (and (=> (and (and (= x4628 x1415) (= (= x322 x1415) x4380)) x1943) (and (=> (not x4380) x1450) (=> (and (and (= x4887 (x4735 x3103)) (= x2219 x3608) (= x939 (< x4887 x4734)) (= x3103 (x1013 (x3182 x3514) (x3187 1) 0)) (<= 0 x4887) (<= x4887 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3514 (x3232 1461501637330902918203684832716283019655932542975 x1558))) x4380) (and (=> (and (not x939) (= (< x4887 x3608) x1181)) (and (=> x1181 x1450) (=> (and (not x1181) (and (= (< x3380 x3413) x3151) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3608)) x3380) (= x3413 (x3994 x3067)) (<= 0 x3413) (= (x1013 (x3182 x1415) (x3187 1) 0) x3067) (= x2384 (x3232 1461501637330902918203684832716283019655932542975 x1558)) (= x2133 (x2214 (- x4887 x3608))) (<= x3413 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2444 (x1013 (x3182 x2384) (x3187 1) 0)))) (and (=> x3151 x1450) (=> (and (and (= x170 (< x1485 x3413)) (= (x227 (+ x3413 x3608)) x1485)) (not x3151)) (and (=> x170 x1450) (=> (and (and (= x1368 (x1013 (x3182 x322) x944 0)) (= (x1013 (x3182 x1415) (x3187 1) 0) x4094) (= (x1013 (x3182 x20) (x3187 2) 0) x944) (= x20 (x3232 1461501637330902918203684832716283019655932542975 x1558)) (= (x2680 x1368) x458) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458) (>= x458 0) (= x918 (> x3608 x458))) (not x170)) (and (=> (and (not x918) (= (> x3608 x458) x4399)) (and (=> (and (not x4399) (and (= x4227 (x2214 (- x458 x3608))) (= x3 (x1013 (x3182 x1816) (x3187 2) 0)) (= x1816 (x3232 1461501637330902918203684832716283019655932542975 x1558)) (= 1 x4165) (= x1821 (x1013 (x3182 x322) x3 0)) (= 32 x4879))) x336) (=> x4399 x1450))) (=> x918 x1450))))))))) (=> x939 x1450))))) (=> (not x1943) x1450)))))))))
(assert (x2185 x1586))
(assert (x2185 x254))
(assert (= x4795 x210))
(assert (x4678 x4712 x4269))
(assert (= x2106 (and x3026 x4448)))
(assert (x2185 x3634))
(assert (x2185 x3390))
(assert (= x3144 (x862 (x3182 x3144))))
(assert (x2185 x3526))
(assert (= x4254 (x862 (x3182 x4254))))
(assert (= x3281 (or x2675 x4873)))
(assert (= x2266 (and x4573 (not x2502))))
(assert (= (x862 (x3182 x2459)) x2459))
(assert (= (and x3129 x3360) x80))
(assert (= (x862 (x3182 x4557)) x4557))
(assert (= (=> (and (= x1843 x2971) (= x2686 x1986)) x4197) x392))
(assert (x2185 x2161))
(assert (=> (<= x3408 10000) (= (x3182 x3408) (x3187 x3408))))
(assert (= (=> (and (and (= (x227 (+ x218 96)) x116) (= 4 x4896) (= (x1013 (x3182 x1533) (x3187 169) 0) x778) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x1533) (> x4369 0) (= x3220 (ite (= x4848 0) 1 0)) (= x4385 (x3232 x4594 x4231)) (= (x3232 x4712 x4269) x4369) (= x3537 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= x4712 (x468 x4385 x3220)) (= x3180 (= x3937 x3537)) (= x4231 (ite (< 31 x4848) 1 0)) (= x4594 (ite (= x1103 (x3187 1)) 1 0))) (or (and (not x3180) (and (or (and (not x2710) (and (and x365 (and (not (< x4053 2691771752)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x266) (not (= 2796547477 x4053)) (= 1 x749) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x4026) (not (= x4053 2691771752)) (= x2974 x4896) (= (x2258 (x3182 x759)) x858) (<= 0 x266) (> 2929553584 x4053) (not (< x4053 2217467699)) (not (< x2974 4)) (= 32 x3642) (= 2858086653 x4053) (> x858 0) (= 4 x2974) (not (= x4053 2835717307)))) (= (= x3537 x759) x365))) (and x2710 (and (<= x3133 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3133) (not (> 2217467699 x643)) (not (> 2691771752 x643)) (not (> 4 x712)) (= x749 1) (< x643 2929553584) (not (= x643 2691771752)) (= 32 x3642) (= x643 2858086653) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x2416) (= x712 x4896) (= 4 x712) (< 0 x1031) (not (= x643 2835717307)) (= (x2258 (x3182 x4413)) x1031) (not (= 2796547477 x643))))) (= (= x4413 x3537) x2710))) (and (and (>= x3285 0) (not (= 2691771752 x3419)) (= x4271 (x2258 (x3182 x3937))) (<= x3285 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x2198) (not (= x3419 2835717307)) (not (< x3419 2217467699)) (= x749 1) (> x4271 0) (= x3642 32) (not (< x1336 4)) (not (= 2796547477 x3419)) (= x1336 x4896) (= x3419 2858086653) (> 2929553584 x3419) (not (> 2691771752 x3419)) (= 4 x1336)) x3180))) x3759) x1797))
(assert (= (and x1428 (not x851)) x439))
(assert (= (x862 (x3182 x4877)) x4877))
(assert (= (and (not x3294) x3102) x704))
(assert (x2185 x354))
(assert (x2185 x4421))
(assert (x2185 x1994))
(assert (= (and x2807 x183) x679))
(assert (x2185 x2139))
(assert (x2185 x46))
(assert (x2185 x1105))
(assert (x2185 x3415))
(assert (= (and (not x826) x3956) x702))
(assert (= x3874 (and x2250 x1118)))
(assert (=> (>= 10000 x3148) (= (x3182 x3148) (x3187 x3148))))
(assert (= x2134 (and x1358 (not x1825))))
(assert (= (or x2363 x4384) x3570))
(assert (=> (>= 10000 x3119) (= (x3187 x3119) (x3182 x3119))))
(assert (= (or x2469 x3958) x2057))
(assert (= (or x3025 x2193) x3988))
(assert (= (=> (and (= x1755 0) (= x4365 x4817)) x955) x352))
(assert (= (=> (= x4086 (= x4154 x962)) (and (=> (and (= (< 0 x4154) x3583) (not x4086)) (and (=> (and x3583 (and (and (= (x1421 x3447) x1407) (= (x227 (+ 96 x2825)) x411) (<= 0 x3671) (> 1461501637330902918203684832716283019655932542976 x3671) (not (= x1407 0)) (>= 1461501637330902918203684832716283019655932542975 x3671) (= (= x3671 0) x152) (= (x896 x1893) x2692) (<= 0 x1407) (<= x1407 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1893 (x1324 x4238 1)) (<= 0 x2692) (> 1461501637330902918203684832716283019655932542976 x2692) (= (x1531 x4238) x3671) (<= x2692 1461501637330902918203684832716283019655932542975) (= x3447 (x1324 x1893 1)) (= (x1013 (x3182 x3502) x1072 0) x4238)) (or (and (not x152) (and (= (x1013 (x3182 x3671) x1072 0) x2086) (= x409 (x1324 x2086 1)))) (and (= x2394 (x1324 x1072 1)) x152)))) x820) (=> (and (not x3583) (= x1370 x2825)) x313))) (=> (and (= x2825 x3083) x4086) x3511))) x4603))
(assert (x2185 x4241))
(assert (= (and x4043 x3702) x479))
(assert (= x3782 (and x2494 x118)))
(assert (= (and (not x4332) x2956) x4676))
(assert (x2185 x3403))
(assert (= x3259 (or x2969 x3238)))
(assert (x2870 x3502))
(assert (= x145 (and x4088 x4726)))
(assert (x2185 x3062))
(assert (x2185 x4433))
(assert (x2185 x1705))
(assert (= x2969 (and (not x314) x4823)))
(assert (= x2705 (and x4911 x752)))
(assert (x2185 x4694))
(assert (= (and x1831 (not x2047)) x1620))
(assert (=> (<= x234 10000) (= (x3182 x234) (x3187 x234))))
(assert (x2185 x2135))
(assert (= x397 (and (not x3801) x1167)))
(assert (x2185 x1304))
(assert (= (x3187 6539370208772218570076773595062200405109424842860869254164860851635934461952) (x3182 6539370208772218570076773595062200405109424842860869254164860851635934461952)))
(assert (x2870 x2174))
(assert (= (x862 (x3182 x4722)) x4722))
(assert (x2185 x1950))
(assert (x2185 x4884))
(assert (= (and x61 (not x628)) x813))
(assert (x2870 x4143))
(assert (= (+ 1 (x862 x2328)) (x862 (x1324 x2328 1))))
(assert (= x4731 (and x2874 x1621)))
(assert (x2185 x694))
(assert (= x3234 (=> (and (= x1617 x1813) (= x4925 x4124)) x1344)))
(assert (= (and x1559 x2550) x2548))
(assert (=> (<= x1829 10000) (= (x3182 x1829) (x3187 x1829))))
(assert (x2185 x328))
(assert (x2185 x4821))
(assert (= x4496 (and x647 x992)))
(assert (= x3964 (and x900 x3880)))
(assert (x3909 x2194))
(assert (= (x862 (x3187 20853193852723734048814770637610870652489083209607696777694672748161462697984)) 20853193852723734048814770637610870652489083209607696777694672748161462697984))
(assert (x2185 x1651))
(assert (= (and x2632 x1943) x1162))
(assert (x2185 x3725))
(assert (= (and x3891 x3440) x1544))
(assert (x2185 x41))
(assert (x2185 x269))
(assert (x2185 x1064))
(assert (= x4518 (and x800 x4181)))
(assert (= x2941 (and x4489 x2863)))
(assert (= 1461501637330902918203684832716283019655932542976 (x862 (x3187 1461501637330902918203684832716283019655932542976))))
(assert (x2185 x2411))
(assert (= x3321 (or x679 x1471 x3448 x3731 x2618 x589)))
(assert (= (and x4315 x1183) x2048))
(assert (x2185 x3744))
(assert (x2185 x1165))
(assert (x2185 x1126))
(assert (= x299 (and x665 x1652)))
(assert (= (and (not x3538) x1557) x2566))
(assert (= (or (and x616 x1366) x892 (and x401 x2317) x145 x4708) x3075))
(assert (x2185 x2517))
(assert (= (=> (and (= x4494 x2875) (= x808 x558) (= x2457 x726) (= x3368 x3547)) x3395) x1392))
(assert (x2185 x1374))
(assert (x2185 x561))
(assert (x2185 x3942))
(assert (x2185 x911))
(assert (x2185 x4613))
(assert (= (=> (and (= x3450 x573) (= x807 x2515)) x3248) x1222))
(assert (= x1892 (and (not x3983) x51)))
(assert (x2870 x810))
(assert (x2185 x2143))
(assert (= (x862 (x3182 x4291)) x4291))
(assert (x2185 x3094))
(assert (= x4348 (and x1503 x1175)))
(assert (x2185 x1429))
(assert (x2185 x3626))
(assert (=> (<= x3279 10000) (= (x3182 x3279) (x3187 x3279))))
(assert (=> (<= x3582 10000) (= (x3187 x3582) (x3182 x3582))))
(assert (x2185 x2173))
(assert (=> (>= 10000 x2950) (= (x3182 x2950) (x3187 x2950))))
(assert (x2185 x1558))
(assert (x2185 x703))
(assert (= x61 (and x1987 x2944)))
(assert (x2185 x4375))
(assert (= (and (not x3301) x3426) x2831))
(assert (x2185 x4239))
(assert (x2185 x4011))
(assert (= (and x64 x3996) x2783))
(assert (= x2438 (and x1300 x4538)))
(assert (x2185 x93))
(assert (x2185 x4063))
(assert (= (=> (and (or (and x1092 (= x2518 x4417)) (and (= x2518 0) (not x1092))) (and (= (x1013 (x3182 x4261) (x3187 156) 0) x3304) (= x2223 (x1013 (x3182 x1829) (x3187 159) 0)) (<= x4417 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4417 (x4835 x52)) (= x2367 (x1013 (x3182 x728) x1396 0)) (>= x485 0) (<= x648 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x485 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x648 0) (= (x1013 (x3182 x728) x2223 0) x1567) (= x485 (x806 x942)) (= x1829 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= (x1324 x2707 2) x2935) (= x2561 (x128 x2935)) (<= x3730 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1324 x2367 2) x942) (<= 0 x2561) (= x1750 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (<= x2561 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x4261) (= (x1013 (x3182 x728) x3304 0) x2707) (<= 0 x4417) (= x648 (x3243 x1567)) (= x1092 (> x4417 x3730)) (>= x3730 0) (= x52 (x1324 x1567 1)) (= (x1013 (x3182 x1750) (x3187 157) 0) x1396))) x3556) x2726))
(assert (= (or x177 x1993) x2997))
(assert (x2185 x4898))
(assert (= (and x1970 x2700) x3558))
(assert (= x3519 (and (not x2294) x2297)))
(assert (= (or x2312 x1814) x3280))
(assert (x2185 x3145))
(assert (= x2539 (or x2354 x4562)))
(assert (=> (>= 10000 x2171) (= (x3182 x2171) (x3187 x2171))))
(assert (x2185 x1627))
(assert (x2185 x437))
(assert (x2185 x1146))
(assert (x2185 x888))
(assert (= (x862 (x3182 x3514)) x3514))
(assert (x2185 x1900))
(assert (= x4797 (or x3815 x1879)))
(assert (= (and (not x3201) x433) x4329))
(assert (= (and (not x4372) x4924) x4451))
(assert (= x1115 (and x621 (not x4398))))
(assert (x2185 x4722))
(assert (= x4270 (=> (and (= x3674 x1091) (= x3139 0)) x1726)))
(assert (x2870 x2865))
(assert (= x3477 (and x1281 x3433)))
(assert (= (x862 (x3182 x3937)) x3937))
(assert (= x979 (and x2236 x4649)))
(assert (x2185 x741))
(assert (x2185 x1766))
(assert (x2185 x2419))
(assert (x2185 x1552))
(assert (x2185 x1114))
(assert (=> (<= x4059 10000) (= (x3182 x4059) (x3187 x4059))))
(assert (x2185 x1230))
(assert (= (and x373 (not x3554)) x1598))
(assert (= x4019 (=> (and (= 0 x4497) (= x526 x2143)) x2857)))
(assert (x2185 x1850))
(assert (x3909 x3683))
(assert (x613 x1914))
(assert (= (x862 (x3182 x2453)) x2453))
(assert (= (x3182 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x3187 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (x2185 x1670))
(assert (= (x3187 547091486) (x3182 547091486)))
(assert (x2185 x4183))
(assert (= x4261 (x862 (x3182 x4261))))
(assert (= (and (not x3926) x2941) x1557))
(assert (= (and x3933 (not x2231)) x3026))
(assert (= x4656 (and x1733 x96)))
(assert (= (and x2041 (not x3617)) x2278))
(assert (x2870 x2848))
(assert (= (and x2548 x1348) x1009))
(assert (= x2957 (=> (and (or (not x1776) x1776) (= x1776 (= 0 x3190))) x2565)))
(assert (= (=> (and (= (x1324 x983 1) x4773) (= (x1324 x4458 1) x983) (= (x1013 (x3182 x728) x1396 0) x4458)) x2912) x3714))
(assert (= x2523 (and (not x2904) x2587)))
(assert (x2870 x1801))
(assert (= (and (not x4568) x2346) x4233))
(assert (= (or x3610 x3334) x3996))
(assert (x2185 x4688))
(assert (= (and x4329 (not x568)) x127))
(assert (= x915 (or x2284 x1382)))
(assert (= (and x1400 x4022) x1922))
(assert (=> (<= x2685 10000) (= (x3182 x2685) (x3187 x2685))))
(assert (x2185 x4188))
(assert (x2185 x91))
(assert (= x513 (=> (and (= 0 x1157) (= x2480 x1662) (= x1770 x604)) x431)))
(assert (= (and x3811 (not x1628)) x1214))
(assert (x2185 x1622))
(assert (= x1278 (and x4344 x3424)))
(assert (= x850 (and (not x3831) x4483)))
(assert (x2185 x2721))
(assert (= x4243 (and x4905 x1506)))
(assert (= x2406 (and x4012 (not x2303))))
(assert (x2185 x4767))
(assert (x2185 x4685))
(assert (= (+ (x862 x1396) 2) (x862 (x1324 x1396 2))))
(assert (= x4438 (=> (and (= x4611 x4848) (= x4269 x3298)) x4250)))
(assert (= (=> (and (= x1264 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= x2074 (x1324 x622 1)) (= x4739 (x1013 (x3182 x1264) x1847 0)) (= (x1324 x4739 1) x622)) x3325) x2265))
(assert (= (x862 (x3182 x2174)) x2174))
(assert (= (+ (x862 x2707) 2) (x862 (x1324 x2707 2))))
(assert (x2185 x4728))
(assert (= (and (not x324) x4748) x3731))
(assert (= x1936 (or x4389 x4732 x117 (and x3562 x1477) (and x321 x3733))))
(assert (= (and x3366 x1508) x2736))
(assert (=> (>= 10000 x4291) (= (x3187 x4291) (x3182 x4291))))
(assert (= x4244 (=> (and (= x2790 x2686) (= x1843 x1736)) x4197)))
(assert (x2185 x3247))
(assert (x2185 x1859))
(assert (x2185 x2128))
(assert (x2185 x3369))
(assert (= 2217467699 (x862 (x3187 2217467699))))
(assert (= x1210 (and x2023 (not x1636))))
(assert (x2185 x2252))
(assert (=> (<= x1468 10000) (= (x3182 x1468) (x3187 x1468))))
(assert (x2185 x4096))
(assert (x2185 x1959))
(assert (= x583 (and (not x4310) x681)))
(assert (= (and x876 x4281) x4339))
(assert (x2185 x3817))
(assert (x2185 x1478))
(assert (= x556 (and (=> (and (not x4342) (and (= x2959 x2171) (= 1 x4640))) x4477) (=> x4342 x2008))))
(assert (= (+ 1 (x862 x2646)) (x862 (x1324 x2646 1))))
(assert (= (and x4420 x4243) x125))
(assert (x2870 x3144))
(assert (x2185 x3342))
(assert (x2185 x744))
(assert (x2185 x1488))
(assert (=> (>= 10000 x4313) (= (x3187 x4313) (x3182 x4313))))
(assert (x2185 x3063))
(assert (=> (<= x2558 10000) (= (x3187 x2558) (x3182 x2558))))
(assert (x2185 x2974))
(assert (x2185 x1370))
(assert (= x4030 (and (not x4726) x4088)))
(assert (= x2621 (and x2929 x617)))
(assert (x2185 x4269))
(assert (= x3515 (and (not x1935) x2677)))
(assert (= (and (not x2787) x4222) x4850))
(assert (= (x862 (x3182 x2558)) x2558))
(assert (=> (>= 10000 x759) (= (x3187 x759) (x3182 x759))))
(assert (x2185 x2731))
(assert (= (and x4174 x3151) x2545))
(assert (=> (>= 10000 x557) (= (x3187 x557) (x3182 x557))))
(assert (= x3952 (or x1342 x579)))
(assert (x2185 x2961))
(assert (= x3397 (and x4695 x4111)))
(assert (x2870 x3498))
(assert (x2185 x3754))
(assert (= (and (not x4402) x4471) x1693))
(assert (= (x862 (x3182 x2685)) x2685))
(assert (x2185 x4798))
(assert (x3909 x1914))
(assert (= x2130 (and x4205 x3295)))
(assert (= x1468 (x862 (x3182 x1468))))
(assert (= x1695 (and (not x803) x2278)))
(assert (= (or x4733 x4624) x3293))
(assert (= x1137 (and x1329 x2616)))
(assert (x2185 x4925))
(assert (x2870 x2950))
(assert (x2185 x4661))
(assert (= (and x1975 x1319) x4350))
(assert (x2185 x692))
(assert (x2185 x1034))
(assert (x2185 x2797))
(assert (= (=> (and (= x988 x2724) (= x1796 0)) x995) x832))
(assert (= (x862 (x3187 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (>= 10000 x1707) (= (x3182 x1707) (x3187 x1707))))
(assert (x2185 x1394))
(assert (= x3454 (or x2539 x4201 x1945)))
(assert (= x1298 (and x2294 x2297)))
(assert (= (and x3428 (not x3180)) x1))
(assert (= x1104 (=> (and (= x3984 x3062) (= x519 x4236)) x1655)))
(assert (x2185 x1833))
(assert (x2185 x2607))
(assert (= x2201 (and x1117 x4179)))
(assert (= (x3182 3583811254) (x3187 3583811254)))
(assert (= x2626 (=> (and (= x2417 (= x3216 0)) (or (and (not x2417) (= x87 (x1013 (x3182 x3216) x1847 0))) (and (= (x1324 x1847 2) x3739) x2417))) x2265)))
(assert (x2185 x793))
(assert (= (=> (= x3512 (= 0 x573)) (and (=> (and x3512 (= x2794 x146)) x1696) (=> (and (not x3512) (= x2325 (or (and (< x807 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x807))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x807)))) (and (=> (and (= x146 x2794) x2325) x1696) (=> (and (and (= 1 x1199) (= x4442 x146) (= x1627 x3694)) (not x2325)) x906))))) x1536))
(assert (= (or x2075 x3934 x3872 x3640) x2356))
(assert (= x1707 (x862 (x3182 x1707))))
(assert (= (=> (and (= x3875 x4283) (= 0 x510)) x3105) x1341))
(assert (= (x3182 2835717307) (x3187 2835717307)))
(assert (x2185 x3240))
(assert (=> (<= x3018 10000) (= (x3182 x3018) (x3187 x3018))))
(assert (x2185 x3211))
(assert (= (x862 (x3182 x4709)) x4709))
(assert (= (and x420 x3056) x2896))
(assert (x2185 x4575))
(assert (x2185 x2120))
(assert (x2185 x2198))
(assert (= (or x946 x592) x2728))
(assert (x2870 x998))
(assert (x2185 x2540))
(assert (x2185 x3705))
(assert (= x347 (and x3090 x1700)))
(assert (=> (<= x2403 10000) (= (x3182 x2403) (x3187 x2403))))
(assert (x2185 x2240))
(assert (= x3129 (and x1111 (not x4556))))
(assert (= (=> (and (= x1434 x2845) (= x1151 x1260) (= x3204 x2161) (= x3207 x3136) (= x3786 x2671)) x4162) x3069))
(assert (= (and x1828 (not x3676)) x4297))
(assert (x2185 x4033))
(assert (x2185 x3839))
(assert (x2185 x3042))
(assert (= (and x1946 x2438) x2524))
(assert (x2185 x67))
(assert (x2185 x889))
(assert (x516 x3247))
(assert (x2185 x1339))
(assert (= (x3182 115792089237316195423570985008687907853269984665640564039457) (x3187 115792089237316195423570985008687907853269984665640564039457)))
(assert (= x3045 (and (not x3561) x4126)))
(assert (= x1017 (and x289 (not x1748))))
(assert (x2185 x115))
(assert (= x1554 (and (not x3497) x3208)))
(assert (x2185 x2799))
(assert (x2185 x1466))
(assert (x2185 x4647))
(assert (= (and x127 x382) x3006))
(assert (= x4051 (and (not x1580) x3599)))
(assert (x2185 x2267))
(assert (x2185 x2640))
(assert (x2185 x4761))
(assert (= x934 (and x3976 x2396)))
(assert (= (and x4707 x4009) x1441))
(assert (= (x862 (x3182 x3216)) x3216))
(assert (x2185 x4026))
(assert (=> (>= 10000 x3906) (= (x3187 x3906) (x3182 x3906))))
(assert (= (x862 (x3182 x1816)) x1816))
(assert (x2185 x1265))
(assert (x2185 x2482))
(assert (= x4674 (and (not x1839) x1934)))
(assert (= (and x3978 x1892) x4047))
(assert (x2185 x4304))
(assert (x2185 x199))
(assert (x2185 x1455))
(assert (x2185 x4658))
(assert (= x705 (x862 (x3182 x705))))
(assert (= (and x1882 (not x2298)) x902))
(assert (= x3587 (=> (and (= x1907 x573) (= x3690 x807)) x3248)))
(assert (= (and x4566 x3679) x2587))
(assert (= x3557 (and x733 x1145)))
(assert (x2870 x3503))
(assert (= x1875 (and x617 (not x2929))))
(assert (x2185 x335))
(assert (x2185 x2753))
(assert (= x1402 (and x439 x1794)))
(assert (= x4519 (and x1299 x3621)))
(assert (x2185 x3866))
(assert (= (x862 (x1324 x1070 1)) (+ (x862 x1070) 1)))
(assert (x2185 x1680))
(assert (x2185 x582))
(assert (x2185 x4627))
(assert (= (x862 (x1324 x657 1)) (+ (x862 x657) 1)))
(assert (= (and x2812 x4845) x1026))
(assert (x2185 x4280))
(assert (x2185 x283))
(assert (=> (>= 10000 x4214) (= (x3187 x4214) (x3182 x4214))))
(assert (= (and x1472 x3183) x2379))
(assert (x2185 x3494))
(assert (= x2762 (and x3225 x795)))
(assert (x2185 x1746))
(assert (x2185 x3799))
(assert (= (x862 (x3187 50292402827334880472107169365697159231523039388532301717704428044325102813184)) 50292402827334880472107169365697159231523039388532301717704428044325102813184))
(assert (=> (<= x2766 10000) (= (x3187 x2766) (x3182 x2766))))
(assert (x2185 x1238))
(assert (x2185 x3851))
(assert (x2185 x2390))
(assert (x2185 x4818))
(assert (= (=> (and (= x41 x3344) (= x2090 x3773)) x3581) x1171))
(assert (x2185 x1091))
(assert (= (and x3239 x1823) x1159))
(assert (= (x862 (x3182 x4700)) x4700))
(assert (= x1295 (x862 (x3182 x1295))))
(assert (x2185 x4499))
(assert (= x1385 (=> (and (= x4826 x2638) (= 0 x2065)) x1461)))
(assert (= (x862 (x3187 2796547477)) 2796547477))
(assert (= x4196 (or x4570 x1399 x208 x3920)))
(assert (x2185 x270))
(assert (x2185 x3813))
(assert (x2870 x2766))
(assert (x2185 x2795))
(assert (= x1200 (or x2828 x5)))
(assert (x2185 x4921))
(assert (= x2846 (or x2094 x915 x3838 x2355)))
(assert (= (and (not x4654) x3436) x2063))
(assert (= x2647 (or x4326 x1071 x4039)))
(assert (x2185 x1870))
(assert (x2185 x2806))
(assert (x2185 x3803))
(assert (x2185 x2090))
(assert (= (and (not x3393) x1298) x3191))
(assert (x2185 x4223))
(assert (x2185 x1647))
(assert (=> (<= x3626 10000) (= (x3182 x3626) (x3187 x3626))))
(assert (= (=> (and (= x2161 x2480) (= x1260 x1198) (= x2845 0)) x3069) x585))
(assert (x2185 x1307))
(assert (x2185 x1884))
(assert (x2185 x3059))
(assert (= x3084 (and x4049 (not x518))))
(assert (x2185 x1124))
(assert (= x2382 (=> (and (= x2993 x3699) (= x2365 x4723)) x3908)))
(assert (x2185 x2190))
(assert (= (and x2814 (not x3668)) x191))
(assert (x2185 x2836))
(assert (= (and (not x945) x2833) x1063))
(assert (= x1572 (=> (and (= x3344 x2638) (= 0 x2090)) x1171)))
(assert (= (=> (and (= x41 x2061) (= x3773 x4820)) x3581) x864))
(assert (= (and x3916 x4756) x3795))
(assert (= (and x1764 x4550) x4426))
(assert (= 988262939 (x862 (x3187 988262939))))
(assert (= x1389 (x862 (x3182 x1389))))
(assert (x2185 x4709))
(assert (= x164 (or x1179 x921 x2781 x1605)))
(assert (x2185 x4160))
(assert (= (and x2584 (not x1604)) x1340))
(assert (x2185 x3437))
(assert (= x1236 (and x2578 (not x2055))))
(assert (x2185 x637))
(assert (x2185 x759))
(assert (x2185 x4920))
(assert (= x4583 (or x4382 x3952)))
(assert (= x1741 (or x598 x3348 x460 x2699)))
(assert (x2185 x4697))
(assert (= x2487 (or x543 x4719)))
(assert (x2185 x4322))
(assert (= (or x1098 x2608 x3557 x809 x2501 x3431 x4409 x840 x1759) x1332))
(assert (= (x862 (x1324 x1614 1)) (+ 1 (x862 x1614))))
(assert (= (+ (x862 x4469) 1) (x862 (x1324 x4469 1))))
(assert (= x1121 (or x3280 x4637 x4058 x1931)))
(assert (x2185 x3456))
(assert (x2185 x4001))
(assert (x2185 x2695))
(assert (x2185 x1264))
(assert (= x1097 (or x4286 x3550)))
(assert (= x977 (and x2863 (not x4489))))
(assert (= (and (not x3846) x299) x4))
(assert (x3909 x192))
(assert (x2185 x808))
(assert (x2185 x998))
(assert (x2870 x3671))
(assert (= (and x4037 x4437) x2832))
(assert (x2185 x4442))
(assert (= x2857 (=> (and (= x2143 x2607) (= x4497 x1725)) x1754)))
(assert (x2870 x1765))
(assert (x2185 x2248))
(assert (=> (<= x3216 10000) (= (x3187 x3216) (x3182 x3216))))
(assert (= x1697 (and x4394 x3300)))
(assert (x2185 x1872))
(assert (= x1297 (and x3129 (not x3360))))
(assert (= (x3182 2362143243) (x3187 2362143243)))
(assert (= x718 (and (not x150) x310)))
(assert (x2185 x322))
(assert (= (and x1880 x2273) x892))
(assert (x2185 x3858))
(assert (x2185 x3190))
(assert (= (or x3907 x1684) x2421))
(assert (= x603 (and x899 x3020)))
(assert (x2185 x2072))
(assert (= (x3182 2858086653) (x3187 2858086653)))
(assert (x3909 x4231))
(assert (= x2699 (or x627 x1082)))
(assert (= x3007 (or x1590 x2783)))
(assert (= (and x2616 (not x1329)) x226))
(assert (=> (>= 10000 x106) (= (x3187 x106) (x3182 x106))))
(assert (= (and x2553 x1625) x2220))
(assert (= x3340 (and (not x2331) x2096)))
(assert (= (and (not x4155) x2123) x2636))
(assert (x2185 x4444))
(assert (= x3119 (x862 (x3182 x3119))))
(assert (= (x3182 1466279372) (x3187 1466279372)))
(assert (= (x3187 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x3182 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (x2870 x2600))
(assert (= x3562 (and (not x2644) x854)))
(assert (= x4140 (and x3900 x902)))
(assert (= (x862 (x3182 x2690)) x2690))
(assert (= (and (not x3113) x479) x3820))
(assert (x2185 x2998))
(assert (= x2362 (and x826 x3956)))
(assert (= (and (not x2967) x2201) x2520))
(assert (=> (<= x4413 10000) (= (x3187 x4413) (x3182 x4413))))
(assert (x2185 x2672))
(assert (x2185 x539))
(assert (x2185 x1180))
(assert (= (x862 (x1324 x4458 1)) (+ 1 (x862 x4458))))
(assert (x2185 x3051))
(assert (x2185 x633))
(assert (= (and x3085 (not x2245)) x3311))
(assert (x2185 x3711))
(assert (= (and (not x1700) x3090) x4626))
(assert (x2185 x3708))
(assert (x516 x3799))
(assert (= (=> (and (= x1190 x3705) (= 0 x3437)) x2349) x2083))
(assert (x2185 x2459))
(assert (= (x862 (x1324 x4491 1)) (+ (x862 x4491) 1)))
(assert (= x4089 (and (not x3620) x3477)))
(assert (x2185 x3487))
(assert (x2185 x1813))
(assert (= x3402 (and x3539 x311)))
(assert (x2185 x1274))
(assert (x2185 x3775))
(assert (= (+ 2 (x862 x4295)) (x862 (x1324 x4295 2))))
(assert (= x2541 (and x3349 x1641)))
(assert (x2185 x2749))
(assert (= (and x3100 (not x436)) x1243))
(assert (x2185 x3947))
(assert (x2185 x1521))
(assert (x2185 x2171))
(assert (x2185 x4559))
(assert (= x483 x4015))
(assert (x2185 x3648))
(assert (x2212 x4385 x3220))
(assert (x2185 x4346))
(assert (x2185 x3002))
(assert (=> (<= x1136 10000) (= (x3187 x1136) (x3182 x1136))))
(assert (= (and (not x953) x2728) x4644))
(assert (x2185 x2759))
(assert (= (x3187 2236579515) (x3182 2236579515)))
(assert (x2185 x2249))
(assert (x2185 x168))
(assert (x2185 x2774))
(assert (x2870 x705))
(assert (x2185 x4214))
(assert (x2185 x4481))
(assert (x2185 x4585))
(assert (x2185 x266))
(assert (= x4899 (and x4116 (not x4770))))
(assert (= (and (not x2295) x4193) x265))
(assert (= (and (=> (and x3779 (and (= x4212 x4343) (= x2408 x4722) (= x1072 x848))) x4138) (=> (and (not x3779) (and (= 1 x2419) (= x91 x4722))) x1540)) x327))
(assert (= (x3187 1038142104) (x3182 1038142104)))
(assert (x2185 x3986))
(assert (x3909 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2185 x2431))
(assert (= x1565 (and x1484 x109)))
(assert (x2185 x463))
(assert (x2185 x2115))
(assert (=> (>= 10000 x3685) (= (x3187 x3685) (x3182 x3685))))
(assert (= (and (not x3530) x4755) x3595))
(assert (x2185 x2776))
(assert (= x820 (=> (and (= (= 0 x2692) x64) (or (and (= x1511 (x1013 (x3182 x2692) x1072 0)) (not x64)) (and x64 (= x79 (x1324 x1072 2))))) x2423)))
(assert (= (x1443 416) 0))
(assert (x2185 x2170))
(assert (x2185 x4443))
(assert (= x2771 (and x2059 x3856)))
(assert (= x4240 (and x492 x3940)))
(assert (x2185 x3010))
(assert (= (and x2831 (not x2842)) x3818))
(assert (= (and x1788 x542) x1391))
(assert (x2185 x4531))
(assert (x2870 x3237))
(assert (x2185 x2350))
(assert (x2870 x728))
(assert (= (x862 (x3182 x4691)) x4691))
(assert (x2185 x2391))
(assert (= (=> (and (= 0 x4723) (= x3699 x2724)) x2382) x3024))
(assert (x2185 x3694))
(assert (x2185 x3806))
(assert (x2185 x3771))
(assert (x2185 x1295))
(assert (=> (<= x4786 10000) (= (x3187 x4786) (x3182 x4786))))
(assert (= (=> (and (or (not x290) x290) (= (= x2323 0) x290)) x4249) x584))
(assert (= x1176 (or x1026 x4710)))
(assert (x2185 x2415))
(assert (x2185 x528))
(assert (x2185 x1871))
(assert (x2185 x202))
(assert (= (or x3921 x574) x2250))
(assert (x2185 x56))
(assert (= x957 (and (not x1096) x3047)))
(assert (x2185 x837))
(assert (= x298 (and (=> (and (not x4381) (and (= x3361 x3998) (= x3942 x2954) (= x1491 x2260))) x4727) (=> (and x4381 (= x434 (= 0 x3585))) (and (=> (and (and (= x3369 x3942) (= x3828 0)) x434) x649) (=> (and (not x434) (and (or (and x3366 (and (not (= x3986 2835717307)) (= 2858086653 x3986) (not (< x3986 2217467699)) (= x4616 32) (= x149 1) (not (> 2691771752 x3986)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x3036) (< x3986 2929553584) (not (> 4 x1854)) (not (= 2691771752 x3986)) (= x4546 x1854) (> x3701 0) (<= x3285 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 4 x1854) (not (= 2796547477 x3986)) (= (x2258 (x3182 x3937)) x3701) (>= x3285 0))) (and (not x3366) (and (or (and (not x1024) (and (= (= x2681 x759) x3922) (and (and (not (< x3567 2691771752)) (= x4616 32) (= (x2258 (x3182 x759)) x3222) (< 0 x3222) (not (= 2796547477 x3567)) (< x3567 2929553584) (= x3567 2858086653) (= x4553 x4546) (= 1 x149) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x266) (not (= x3567 2691771752)) (not (> 4 x4553)) (= x4839 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (= 2835717307 x3567)) (<= 0 x266) (not (> 2217467699 x3567)) (= 4 x4553)) x3922))) (and x1024 (and (= x2799 (x2258 (x3182 x4413))) (not (= 2835717307 x2443)) (not (> 2691771752 x2443)) (< 0 x2799) (= 4 x787) (= x4546 x787) (not (> 2217467699 x2443)) (= 1 x149) (>= x3133 0) (> 2929553584 x2443) (<= x3133 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x2443 2691771752)) (not (> 4 x787)) (= x328 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= x2443 2858086653) (not (= x2443 2796547477)) (= x4616 32)))) (= x1024 (= x2681 x4413))))) (and (= 4 x4546) (= (x227 (+ 160 x3942)) x4761) (= x2681 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= (= x3937 x2681) x3366)))) x438))))))
(assert (x2185 x1858))
(assert (x2185 x4321))
(assert (=> (>= 10000 x346) (= (x3187 x346) (x3182 x346))))
(assert (= (=> (and (or x1241 (not x1241)) (= (= x3773 0) x1241)) x4742) x3581))
(assert (=> (>= 10000 x3937) (= (x3182 x3937) (x3187 x3937))))
(assert (= (and (not x381) x2073) x3927))
(assert (= (and x3354 (not x3572)) x1187))
(assert (= (and x372 x2767) x4409))
(assert (x2185 x2847))
(assert (x2185 x498))
(assert (= (+ (x862 x4529) 1) (x862 (x1324 x4529 1))))
(assert (x2185 x1791))
(assert (x2185 x601))
(assert (x2185 x414))
(assert (= x4116 (and x3118 x3155)))
(assert (= x3698 (=> (and (= x43 x2365) (= x2993 x1114)) x3908)))
(assert (= x1164 (or x4100 x4358)))
(assert (x2185 x2051))
(assert (x613 x1500))
(assert (= x1065 (and x961 x2491)))
(assert (= (x862 (x1324 x2049 1)) (+ 1 (x862 x2049))))
(assert (= x372 (and x4674 (not x3929))))
(assert (x2185 x3469))
(assert (= x675 (=> (= x2644 (= x1725 0)) (and (=> x2644 x477) (=> (and (not x2644) (= x1477 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2607) true) (> 32 x2607)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2607)))) (and (=> x1477 x477) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2482) (= x502 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3265))) (>= x2482 0) (= x4837 (> x2482 x502))) (not x1477)) (and (=> x4837 x477) (=> (and (not x4837) (and (= x2448 (< x502 x1147)) (<= x1147 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x322) (x3187 5) 0) x909) (= (x4374 x909) x1147) (= x4189 (x227 (+ x2482 x3265))) (<= 0 x1147))) (and (=> (and (and (= 32 x448) (= x2170 1) (= (x227 (+ x3265 x1147)) x1682)) (not x2448)) x3819) (=> x2448 x477)))))))))))
(assert (x2185 x4542))
(assert (x2185 x2754))
(assert (=> (<= x2124 10000) (= (x3187 x2124) (x3182 x2124))))
(assert (x2185 x3323))
(assert (= (or x2545 x449 x2571 x4482 x3807 x3867 x3991 x2624 x2050) x2284))
(assert (x2185 x4207))
(assert (=> (>= 10000 x4157) (= (x3182 x4157) (x3187 x4157))))
(assert (= x51 (and x1566 (not x646))))
(assert (x2185 x4042))
(assert (=> (<= x348 10000) (= (x3187 x348) (x3182 x348))))
(assert (= (or x1289 x317 x4746 x4408 x2082 x877 x4909 x720 x2655) x4718))
(assert (= x4345 (and x1405 (not x701))))
(assert (= x2461 (and x3440 (not x3891))))
(assert (x2185 x3643))
(assert (x2185 x1630))
(assert (x2185 x4224))
(assert (x2185 x1602))
(assert (= x246 (=> (and (= x2260 x762) (<= 0 x3754) (= (x2951 x541) x3754) (<= x3754 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4632 x3361)) x4651)))
(assert (x2185 x1772))
(assert (= (and x827 x1693) x4620))
(assert (= (and x4882 x4629) x3979))
(assert (= x3408 (x862 (x3182 x3408))))
(assert (x2185 x1719))
(assert (= (x3187 2030502250) (x3182 2030502250)))
(assert (= x4776 (or x1545 x790)))
(assert (x2185 x3055))
(assert (= (x3182 178855970) (x3187 178855970)))
(assert (= x4389 (and x1844 x4837)))
(assert (x2185 x3022))
(assert (x2185 x3117))
(assert (x2185 x1127))
(assert (= (x862 (x3182 x2463)) x2463))
(assert (= x2535 (and x1530 x2742)))
(assert (= (and x2110 x910) x449))
(assert (x2870 x182))
(assert (=> (>= 10000 x2959) (= (x3182 x2959) (x3187 x2959))))
(assert (x2185 x186))
(assert (= x4843 (and x2940 x3854)))
(assert (= (and x4402 x4471) x2899))
(assert (x2185 x1542))
(assert (x2185 x1933))
(assert (= (x862 (x3182 x2766)) x2766))
(assert (= (and x3680 x4890) x1788))
(assert (x2575 x3760))
(assert (= (and x4362 x4010) x897))
(assert (x2185 x1014))
(assert (x2575 x3131))
(assert (= (=> (and (and (<= x3730 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3730 0) (= (> x648 x3730) x2761)) (or (and (= x4716 0) (not x2761)) (and (= x4716 x648) x2761))) x2472) x2717))
(assert (= (=> (and (or (and (and (= x491 (x529 (x3182 x322))) (= (x227 (+ x491 x4898)) x741) (< (+ x4898 x491) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x3049 (x3182 x4903)) x4763) (= x2370 (- x4763 x4898)) (= x2077 x4032) (= x4898 (ite (= 0 x4032) x721 0))) x2975) (and (= x2077 x4032) (not x2975))) (= (= 0 x4032) x2975)) x3897) x3041))
(assert (= (x862 (x3182 x106)) x106))
(assert (x2185 x1211))
(assert (= (and x4174 (not x3151)) x3613))
(assert (x2185 x4778))
(assert (x2185 x1570))
(assert (= (x862 (x3182 x4311)) x4311))
(assert (= (or x1044 x2356) x241))
(assert (= (or x1517 x2004) x4255))
(assert (= (and x4381 x3335) x2988))
(assert (= x4275 (and (not x3225) x795)))
(assert (= x927 (or x1735 x4348 x3985 x4221 x1453 x4867)))
(assert (=> (>= 10000 x3396) (= (x3187 x3396) (x3182 x3396))))
(assert (x2185 x600))
(assert (x2185 x4476))
(assert (= (x862 (x3182 x2397)) x2397))
(assert (= x2082 (and x803 x2278)))
(assert (x2185 x279))
(assert (= (x862 (x3182 x1423)) x1423))
(assert (= (x862 (x1324 x3951 1)) (+ (x862 x3951) 1)))
(assert (x2185 x3429))
(assert (x2185 x459))
(assert (= x3789 (x862 (x3182 x3789))))
(assert (x2185 x2326))
(assert (= (or x107 x2275) x208))
(assert (x2185 x4446))
(assert (= x2700 (and x4281 (not x876))))
(assert (x2185 x4124))
(assert (x2185 x4497))
(assert (x2185 x2873))
(assert (= (and x4466 x1234) x2658))
(assert (= x3956 (and x1744 x4419)))
(assert (= (=> (and (= x4042 x1651) (= 0 x2989)) x1403) x695))
(assert (x2185 x3003))
(assert (x2185 x2380))
(assert (x2870 x234))
(assert (x2185 x1550))
(assert (=> (<= x2648 10000) (= (x3182 x2648) (x3187 x2648))))
(assert (x2185 x4175))
(assert (x2185 x3544))
(assert (x2870 x3398))
(assert (x2185 x2319))
(assert (x2870 x2479))
(assert (= x2982 (and x3726 x1271)))
(assert (x2185 x4327))
(assert (= (and (=> (and (not x2582) (and (= x3342 x4561) (= x4177 x3083))) x1062) (=> (and (and (and (< (* x242 x2672) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4744 (< x1416 x2898)) (= (x1013 (x3182 x4547) (x3187 159) 0) x4145) (<= 0 x2672) (<= x2672 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (div x4080 1000000000000000000) x2898) (= (* x2672 x242) x4080) (= x1416 (x2214 (- x3361 x3342))) (= x2672 (x1412 x1780)) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x4547) (= x4272 (x1013 (x3182 x728) x4145 0)) (not (< x3361 x3342)) (= (x1324 x4272 1) x1780)) (or (and x4744 (and (= (x31 x4272) x2375) (= x855 (* x4825 1000000000000000000)) (= x4113 (* 1000000000000000000 x3246)) (= x4422 (ite x607 1 0)) (not (< x32 x2204)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x3246)) (= (> x1416 115792089237316195423570985008687907853269984665640564039457) x1615) (= x2555 (ite x1615 1 0)) (= (x1412 x1780) x32) (= x1357 (+ x3330 x1501)) (= x3246 (mod (* 1000000000000000000 x1416) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2091 x2319) (= x4129 (div x855 x366)) (<= x2375 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2204 (div x3308 1000000000000000000)) (<= x32 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x242 0) (< 0 x366) (= (> x1416 115792089237316195423570985008687907853269984665640564039457) x607) (= x3330 x587) (= x2319 (x2214 (- x32 x2204))) (<= 0 x2375) (= 0 x2555) (= (div x4113 x242) x3308) (>= x32 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x587 x2375)) (= x4422 0) (= (div x4129 1000000000000000000) x587) (= x2375 x1501) (= x1357 x222) (< (* 1000000000000000000 x4825) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (mod (* 1000000000000000000 x1416) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4825))) (and (not x4744) (and (>= x1582 0) (= (mod (* x2898 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2666) (= x1582 (x31 x4272)) (= x1856 (ite x3790 1 0)) (= x1856 0) (= x1432 (* 1000000000000000000 x2666)) (= x1582 x2862) (= x4065 (div x3791 1000000000000000000)) (> x366 0) (= 0 x2091) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2666 1000000000000000000)) (= x3630 x4065) (= (div x1432 x366) x3791) (= (+ x3630 x2862) x386) (<= x1582 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1582 x4065)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2898 x3342)) (= (> x2898 115792089237316195423570985008687907853269984665640564039457) x3790) (= x222 x386))))) x2582) x2726)) x2359))
(assert (x2185 x4740))
(assert (= x4571 (and (not x2532) x63)))
(assert (= x1217 (and x3407 x2528)))
(assert (x2185 x4484))
(assert (x2185 x190))
(assert (x2185 x4667))
(assert (x2185 x4716))
(assert (x2185 x2410))
(assert (x2185 x4699))
(assert (= (or x383 x2379) x1641))
(assert (x2185 x2452))
(assert (= (and (not x4181) x800) x1831))
(assert (x2185 x1407))
(assert (x613 x2194))
(assert (x2185 x1314))
(assert (= x2229 (and x2213 x1218)))
(assert (= x2337 (or x797 x4850)))
(assert (x2185 x1251))
(assert (x2185 x58))
(assert (x2185 x2686))
(assert (x2185 x2845))
(assert (x2185 x219))
(assert (= x1642 (x862 (x3182 x1642))))
(assert (x2185 x2834))
(assert (= x2489 (and x1998 x1527)))
(assert (= x2571 (and x1181 x3507)))
(assert (= x2912 (=> (= (< 0 x2518) x3135) (and (=> (not x3135) x267) (=> (and (and (or (and (not x2245) (= x4507 x2245)) (and (and (= x4507 (not x4779)) (= x2673 (x1324 x711 2)) (= (x1013 (x3182 x3237) x1396 0) x711) (<= x4902 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4779 (> x2518 x4902)) (>= x4902 0) (= (x815 x2673) x4902)) x2245)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2270) (>= x3237 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x28) (>= x28 0) (= x2598 (x1324 x2172 2)) (not (= x728 0)) (<= x3237 1461501637330902918203684832716283019655932542975) (= x2245 (ite (< 0 x2270) (not (= 0 x3237)) (< 0 x2270))) (>= x2270 0) (= x3237 (x2531 x2144)) (= x28 0) (= x28 (x815 x2598)) (= (x1013 (x3182 x728) x1396 0) x2172) (= x2144 (x1324 x1396 1)) (> 1461501637330902918203684832716283019655932542976 x3237))) x3135) x2737)))))
(assert (= (x862 (x1324 x669 2)) (+ 2 (x862 x669))))
(assert (= x559 (=> (and (= x3598 x76) (= x4636 x3526)) x2639)))
(assert (x2185 x2848))
(assert (x2185 x3344))
(assert (= x621 (and x2523 x1674)))
(assert (x2185 x1411))
(assert (= (x862 (x3182 x4096)) x4096))
(assert (= (and (not x517) x583) x3455))
(assert (= x3706 (or x4775 x1656)))
(assert (x2185 x2153))
(assert (x2185 x4860))
(assert (x2185 x4666))
(assert (x2185 x4567))
(assert (x2185 x1635))
(assert (x2185 x4885))
(assert (= x1764 (and x2584 x1604)))
(assert (x2185 x351))
(assert (= x4308 (and x1420 x337)))
(assert (= x3238 (or x1201 x301 x768 x1620 x2243 x1375 x4518 x4621 x3423)))
(assert (x2185 x4445))
(assert (= x455 (and x4587 x365)))
(assert (x2185 x157))
(assert (x2185 x2662))
(assert (x2185 x2260))
(assert (x2185 x4154))
(assert (= x598 (or x4874 x2813)))
(assert (x2185 x416))
(assert (x2185 x2796))
(assert (x2870 x4254))
(assert (x2185 x4539))
(assert (x2185 x1166))
(assert (= (and x2076 x4664) x257))
(assert (= x3426 (and (not x827) x1693)))
(assert (= (and x2964 x3030) x4908))
(assert (= (and x4137 x3749) x872))
(assert (x2185 x1141))
(assert (= x1363 (x862 (x3182 x1363))))
(assert (=> (<= x1873 10000) (= (x3182 x1873) (x3187 x1873))))
(assert (= x3855 (and (not x4794) x732)))
(assert (x2185 x3013))
(assert (x2185 x1806))
(assert (x2185 x2276))
(assert (x2185 x4868))
(assert (= (or x2982 x4768 x717 x2786 x1435 x2117) x1838))
(assert (x2185 x663))
(assert (x2185 x3829))
(assert (x2185 x315))
(assert (x2185 x2744))
(assert (x2185 x4817))
(assert (= (=> (and (= 0 x3011) (= x4575 x4658)) x4366) x7))
(assert (= (=> (and (= x2170 x1758) (= x448 x13)) x4772) x3819))
(assert (= x3414 (or x1853 x1207 x4411 x1789 x1966 x3111)))
(assert (= (or x3346 x1947) x371))
(assert (= x1405 (and x2664 x3001)))
(assert (x2185 x3438))
(assert (x2185 x2760))
(assert (x2185 x4887))
(assert (= x2538 (and x4234 x1243)))
(assert (x2185 x2546))
(assert (=> (<= x1423 10000) (= (x3187 x1423) (x3182 x1423))))
(assert (= x3640 (and (not x3310) x4644)))
(assert (= (and x829 (not x743)) x3599))
(assert (x2185 x2883))
(assert (= x3601 (and (not x3523) x2511)))
(assert (x2185 x2401))
(assert (x2185 x1689))
(assert (x2185 x2555))
(assert (x2185 x1069))
(assert (x2185 x1681))
(assert (= x1293 (and x4641 x2582)))
(assert (= (x862 (x3182 x1230)) x1230))
(assert (= x2155 (and (not x4500) x3441)))
(assert (= (and x2716 x3814) x3239))
(assert (= x1543 (and x2079 (not x1799))))
(assert (x2185 x968))
(assert (x2185 x1328))
(assert (x2185 x466))
(assert (= (x862 (x1324 x408 1)) (+ (x862 x408) 1)))
(assert (= x1643 (and x3286 (not x3821))))
(assert (= (and x3539 (not x311)) x1227))
(assert (= x1774 (and x2417 x2868)))
(assert (= (or x4020 x2647) x82))
(assert (x2185 x3625))
(assert (x2185 x3120))
(assert (x2185 x2798))
(assert (= (and x2586 x1738) x3475))
(assert (x2185 x3859))
(assert (x2185 x2320))
(assert (= x4587 (and x1 (not x2710))))
(assert (= (and (not x4452) x1068) x1283))
(assert (x2185 x424))
(assert (= (=> (= (< 0 x4716) x1825) (and (=> (and (and (or (and (not x766) (= x3816 x766)) (and x766 (and (= x1445 (x1324 x1248 2)) (= x4841 (x747 x1445)) (<= 0 x4841) (= (not x260) x3816) (= (< x4841 x4716) x260) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4841) (= (x1013 (x3182 x4481) x3304 0) x1248)))) (and (= x1827 (x1013 (x3182 x728) x3304 0)) (<= x4481 1461501637330902918203684832716283019655932542975) (< x4481 1461501637330902918203684832716283019655932542976) (<= 0 x2270) (>= x4481 0) (= x4176 (x1324 x3304 1)) (= x4481 (x1325 x4176)) (= x766 (ite (> x2270 0) (not (= x4481 0)) (< 0 x2270))) (<= x4592 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1612 (x1324 x1827 2)) (= 0 x4592) (<= x2270 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4592 0) (not (= 0 x728)) (= (x747 x1612) x4592))) x1825) x2994) (=> (not x1825) x4279))) x1294))
(assert (= x3014 (or x241 x511)))
(assert (x2185 x557))
(assert (=> (>= 10000 x2865) (= (x3182 x2865) (x3187 x2865))))
(assert (x516 x4385))
(assert (x2185 x3036))
(assert (= x4622 (and (not x3166) x4545)))
(assert (x2185 x4532))
(assert (x2185 x2053))
(assert (x2185 x4065))
(assert (= x3183 (and x2257 x805)))
(assert (= (and x2562 x3864) x23))
(assert (x2185 x2947))
(assert (x2870 x759))
(assert (x2185 x1702))
(assert (= x1561 (and x2596 (not x378))))
(assert (= (and x1297 (not x3524)) x212))
(assert (= x3814 (and x289 x1748)))
(assert (= (and x4760 x4703) x1504))
(assert (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x862 (x3187 10742207464693106059581744854972325794081737850190833080250671788038469713920))))
(assert (= (or x3337 x1216 (and x61 x628) (and (not x2944) x1987) (and x2532 x63) (and x4571 (not x3923))) x1814))
(assert (x2185 x4045))
(assert (= x770 (or x4912 x2393)))
(assert (x2185 x4157))
(assert (= (x862 (x3182 x3626)) x3626))
(assert (= x4624 (or x4373 x4260 x292 x2924 x1217 x3955)))
(assert (= (=> (= (< 0 x2695) x2257) (and (=> (not x2257) x4015) (=> (and (and (and (= (x4922 x1679) x1124) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1124) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x794) (= 0 x1124) (> 1461501637330902918203684832716283019655932542976 x3906) (<= x3906 1461501637330902918203684832716283019655932542975) (= x3906 (x3029 x3269)) (<= 0 x3906) (>= x2270 0) (= x3269 (x1324 x1847 1)) (<= 0 x1124) (= (x1324 x1822 2) x1679) (= x1472 (ite (> x2270 0) (not (= x3906 0)) (> x2270 0))) (= (x1013 (x3182 x794) x1847 0) x1822) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x2320) (<= x2270 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 0 x2320))) (or (and (not x1472) (= x3349 x1472)) (and (and (= x2180 (x4922 x353)) (= (> x2695 x2180) x3882) (= (not x3882) x3349) (>= x2180 0) (= x353 (x1324 x3302 2)) (= x3302 (x1013 (x3182 x3906) x1847 0)) (<= x2180 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1472))) x2257) x1123))) x3325))
(assert (x2185 x1419))
(assert (x2185 x2152))
(assert (= (and x2592 (not x1438)) x4126))
(assert (x2185 x1326))
(assert (= x2618 (and x3294 x3102)))
(assert (=> (<= x794 10000) (= (x3187 x794) (x3182 x794))))
(assert (= x2789 (or x4622 x4888)))
(assert (= (or x1809 x228 x2309 x4115 x2538 x2155) x2585))
(assert (x2185 x3217))
(assert (= x1169 (and x3056 (not x420))))
(assert (= x1622 (x862 (x3182 x1622))))
(assert (x2185 x3378))
(assert (x2185 x3215))
(assert (x2185 x1031))
(assert (x2185 x1795))
(assert (= x1998 (and (not x2277) x4875)))
(assert (x2185 x2105))
(assert (=> (<= x4700 10000) (= (x3187 x4700) (x3182 x4700))))
(assert (x2870 x2577))
(assert (= x722 (and x786 x1589)))
(assert (= x1062 (=> (and (= x3369 x4177) (not (> x3686 x2662)) (= x3828 x4561)) x649)))
(assert (x2185 x558))
(assert (=> (<= x4484 10000) (= (x3187 x4484) (x3182 x4484))))
(assert (= (x3182 1461501637330902918203684832716283019655932542976) (x3187 1461501637330902918203684832716283019655932542976)))
(assert (x2185 x4171))
(assert (x2185 x1549))
(assert (x2185 x1524))
(assert (= (x3182 2023533118) (x3187 2023533118)))
(assert (x2185 x1840))
(assert (x2185 x519))
(assert (x2185 x2692))
(assert (=> (<= x1099 10000) (= (x3182 x1099) (x3187 x1099))))
(assert (= (and (not x3079) x1808) x1428))
(assert (= x1625 (and x4906 (not x4215))))
(assert (= x2096 (and (not x118) x2494)))
(assert (x2185 x2926))
(assert (= (x862 (x1324 x209 2)) (+ (x862 x209) 2)))
(assert (x2185 x3563))
(assert (x2870 x340))
(assert (= x932 (x862 (x3182 x932))))
(assert (= x3272 (and x4843 x429)))
(assert (= x1744 (and x1628 x3811)))
(assert (x2185 x25))
(assert (= x3047 (and x1788 (not x542))))
(assert (x2185 x685))
(assert (x2870 x1415))
(assert (x2870 x1352))
(assert (x2185 x339))
(assert (= (and x4556 x1111) x2512))
(assert (x2185 x1384))
(assert (x2185 x3975))
(assert (= (or x3347 x1340 x1422 x870 x1027 x823) x2746))
(assert (= x2256 (and x3535 (not x4410))))
(assert (x2185 x4763))
(assert (= (=> (and (and (= x650 (> x1657 x3730)) (<= 0 x3730) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3730)) (or (and (= 0 x4363) (not x650)) (and (= x1657 x4363) x650))) x1706) x483))
(assert (x2870 x4149))
(assert (= x435 (and x581 (not x3753))))
(assert (x2185 x1829))
(assert (= (+ (x862 x1932) 2) (x862 (x1324 x1932 2))))
(assert (= (and (not x223) x1665) x2863))
(assert (= x949 (=> (and (= 0 x2790) (= x1736 x1190)) x4244)))
(assert (= x4039 (and x829 x743)))
(assert (= (x862 (x3182 x3593)) x3593))
(assert (= (and x1087 (not x4871)) x4755))
(assert (=> (>= 10000 x4557) (= (x3187 x4557) (x3182 x4557))))
(assert (x2185 x3669))
(assert (x2185 x2685))
(assert (= x2087 (and (=> (and x916 (and (or (and (not x2933) (= x3779 x2933)) (and (and (= x4849 (x4164 x4266)) (= x4134 (< x4849 x962)) (= (x1013 (x3182 x4722) x1072 0) x15) (= x4266 (x1324 x15 2)) (<= x4849 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (not x4134) x3779) (<= 0 x4849)) x2933)) (and (>= x4722 0) (> 1461501637330902918203684832716283019655932542976 x4722) (= (x2867 x1089) x4722) (= x2933 (ite (> x2270 1) (not (= 0 x4722)) (> x2270 1))) (= x1645 (x1013 (x3182 x1642) x1072 0)) (>= 1461501637330902918203684832716283019655932542975 x4722) (= x1089 (x1324 x1645 1))))) x327) (=> (and (and (= x1642 x91) (= 0 x2419)) (not x916)) x1540))))
(assert (x2185 x4198))
(assert (= x4258 (and x2062 x2256)))
(assert (= x4192 (and (not x137) x387)))
(assert (x2185 x965))
(assert (= 398450620 (x862 (x3187 398450620))))
(assert (= x4924 (and (not x4703) x4760)))
(assert (x2575 x834))
(assert (x2185 x3266))
(assert (x2185 x4923))
(assert (x2185 x552))
(assert (x2185 x3633))
(assert (x2870 x395))
(assert (= (and x3889 x724) x4408))
(assert (x2185 x4117))
(assert (= x881 (and (not x3081) x3780)))
(assert (= (and x1293 x4744) x54))
(assert (x2185 x1193))
(assert (= x4098 (and x1664 x919)))
(assert (= (+ 1 (x862 x3269)) (x862 (x1324 x3269 1))))
(assert (x3909 x4387))
(assert (x2185 x774))
(assert (= x732 (and x452 x3946)))
(assert (= (and x2523 (not x1674)) x3914))
(assert (x2185 x4276))
(assert (= true x3650))
(assert (= (and x4394 (not x3300)) x3386))
(assert (x2185 x3421))
(assert (= (x862 (x3182 x4063)) x4063))
(assert (= x329 (or x3271 x3832)))
(assert (x2185 x1546))
(assert (x2185 x674))
(assert (x2185 x903))
(assert (x2185 x3446))
(assert (x2185 x2003))
(assert (= x3807 (and x3613 x170)))
(assert (= (and x329 (not x3540)) x319))
(assert (= x1658 (and x547 (not x4203))))
(assert (=> (<= x171 10000) (= (x3182 x171) (x3187 x171))))
(assert (= (or x23 x3219) x4845))
(assert (x2185 x1305))
(assert (=> (>= 10000 x2600) (= (x3187 x2600) (x3182 x2600))))
(assert (= x1516 (and (not x2660) x3338)))
(assert (x2185 x1032))
(assert (x2185 x405))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x862 (x3187 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (x2185 x1762))
(assert (= x3716 (and x1543 (not x4844))))
(assert (x2185 x2681))
(assert (x2185 x3178))
(assert (= (and x387 x137) x19))
(assert (x2185 x3618))
(assert (x2185 x4599))
(assert (x2185 x2529))
(assert (x2185 x1389))
(assert (x2185 x2718))
(assert (=> (<= x1642 10000) (= (x3182 x1642) (x3187 x1642))))
(assert (x2185 x3791))
(assert (= x3936 (and (not x1085) x4426)))
(assert (=> (<= x810 10000) (= (x3182 x810) (x3187 x810))))
(assert (x2185 x3822))
(assert (= x1422 (and x2527 x857)))
(assert (x2185 x951))
(assert (= x1912 (and x2702 (not x933))))
(assert (=> (<= x3398 10000) (= (x3182 x3398) (x3187 x3398))))
(assert (x2185 x530))
(assert (=> (<= x4343 10000) (= (x3182 x4343) (x3187 x4343))))
(assert (x2185 x4278))
(assert (x2870 x3223))
(assert (x2870 x1423))
(assert (=> (<= x889 10000) (= (x3182 x889) (x3187 x889))))
(assert (x2185 x758))
(assert (x2185 x4915))
(assert (x2185 x3965))
(assert (= x4468 (=> (and (= x4703 (ite (> x2270 x4527) (not (= 0 x4123)) (< x4527 x2270))) (or (and (not x4703) (and (or (and (and (= x2883 (x966 x282)) (<= x2883 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2883) (<= 0 x2883) (= (x1324 x4176 1) x282)) (not x4372)) x4372) (and (= (= 0 x3493) x4372) (> 1461501637330902918203684832716283019655932542976 x3493) (>= x3493 0) (= (x1325 x4176) x3493) (>= 1461501637330902918203684832716283019655932542975 x3493)))) (and (and (or (and x1924 (and (<= x1791 1461501637330902918203684832716283019655932542975) (= x3418 (x1013 (x3182 x4123) x3304 0)) (>= x1791 0) (< x1791 1461501637330902918203684832716283019655932542976) (= (x706 x3418) x1791))) (not x1924)) (and (= (> x1478 0) x1924) (< x3481 1461501637330902918203684832716283019655932542976) (= x3481 (x1325 x4176)) (>= 1461501637330902918203684832716283019655932542975 x3481) (= x1478 (x2214 (- x4123 x3481))) (<= 0 x3481))) x4703))) x668)))
(assert (x2185 x1042))
(assert (= (and x3894 x603) x1139))
(assert (= (and (not x139) x2643) x3174))
(assert (x2185 x3980))
(assert (= (x862 (x1324 x2599 1)) (+ (x862 x2599) 1)))
(assert (x2185 x4189))
(assert (= x1634 (=> (and (= (< 0 x721) x2940) (not (= 0 x4236)) (= x721 (ite (> x2540 x1491) x1491 x2540)) (= x3015 (x3232 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1500)) (= (x4025 x2954) x2540) (not (or (and (> 32 x3984) (= true (<= x3984 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3984))) (= x1500 (x227 (+ 31 x3984))) (= x335 (x227 (+ x3015 x2954)))) (and (=> (and (not x2940) (and (= x808 x335) (= x4127 x4494) (= x3368 x3207) (= x2457 x3786))) x3395) (=> (and x2940 (and (= x151 (x2214 (- x93 x2683))) (= x429 (> x151 0)) (= x93 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (< x2683 1461501637330902918203684832716283019655932542976) (>= x2683 0) (>= 1461501637330902918203684832716283019655932542975 x2683))) (and (=> (and (and x3275 (= (- x2254 x721) x3192) (>= 1461501637330902918203684832716283019655932542975 x557) (= (x227 (+ x2554 x721)) x1034) (= x2554 (x990 (x3182 x4903))) (= x4893 (= x4903 x3937)) x764 (< x557 1461501637330902918203684832716283019655932542976) (= x2067 (x2258 (x3182 x4903))) (< x2640 4294967296) (= x3275 (<= x721 x965)) (= x4903 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= x3981 (x1972 (x3182 x4903))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x721 x2554)) (<= 0 x557) (= x764 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3981 x721))) (= x2058 4) (= (x2258 (x3182 x557)) x4809) (not (= x4809 0)) (= (x1972 (x3182 x322)) x965) (= (x227 (+ x335 4)) x3649) (= x2254 (x1972 (x3182 x322))) (not (= 0 x2067))) (not x429)) (and (=> (and (= (= x4413 x4903) x1640) (not x4893)) (and (=> (and (and (= (= x759 x4903) x1628) (and (and (= x4543 4) (= (x2258 (x3182 x759)) x2242) (< 0 x2242) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x996) (= x4543 x2058) (= x4419 (= 0 x721))) x1628)) (not x1640)) (and (=> (and (not x4419) (= x3101 x3786)) x3373) (=> (and x4419 (and (<= 0 x1493) (= (x1013 (x3182 x322) (x3187 6) 0) x4645) (= 1313710058 x278) (= x3989 (x3203 x4645)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3989) (> 1856199391 x278) (not (> 4 x4543)) (<= x1493 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x826 (< x1493 x3989)) (not (= 989455977 x278)) (not (= 988262939 x278)) (not (= 1038142104 x278)) (< x278 2217467699) (= (x3203 x2506) x1493) (= (x1013 (x3182 x322) (x3187 6) 0) x2506) (not (> 988262939 x278)) (>= x3989 0))) (and (=> (and (not x826) (and (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3989)) x103) (= x4107 (< x103 x3786)) (<= x3786 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3786 0) (= (x2214 (- x1493 x3989)) x1606))) (and (=> (and (and (= (= x4424 x2031) x4566) (>= 1461501637330902918203684832716283019655932542975 x4424) (< x4424 1461501637330902918203684832716283019655932542976) (<= 0 x4424) (= 128 x4856) (= (x227 (+ x3786 x3989)) x3429) (= (x227 (+ x3989 x3786)) x4868)) (not x4107)) (and (=> (and (not x4566) (= x3491 (= x3937 x4424))) (and (=> (and x3491 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x505) (= x140 (x2258 (x3182 x3937))) (= x3648 100) (not (= 405663989 x860)) (not (> 4 x3648)) (= x3223 x759) (not (< x860 405663989)) (= (x2214 (- x3648 4)) x4740) (= x3648 100) (not (= 547091486 x860)) (< 0 x140) (< x860 2217467699) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4740) (and (= true (<= x4740 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x4740))) x1183) (= x322 x4539) (< x860 988262939) (= x3989 x4582) (= 599290589 x860))) (and (=> (and (and (= (= x322 x4539) x1748) (= x1374 x4539)) (not x1183)) (and (=> (and (and (= x333 x3223) (= (= x759 x3223) x2716)) x1748) (and (=> (and (and (= x1245 x4582) (>= x2003 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2003) (= (< x2003 x3989) x1823) (= x2003 (x1323 x499)) (= (x1013 (x3182 x4539) (x3187 5) 0) x499)) x2716) (and (=> (and (not x1823) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3028) (= x876 (< x3028 x4582)) (= (x1323 x4172) x3028) (= x4172 (x1013 (x3182 x4539) (x3187 5) 0)) (>= x3028 0))) (and (=> x876 x7) (=> (and (not x876) (and (= (< x44 x3568) x1970) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3568) (= x3035 (x1013 (x3182 x3223) (x3187 5) 0)) (= (x3185 x3035) x3568) (>= x3568 0) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4582)) x44) (= (x2214 (- x3028 x4582)) x4298))) (and (=> x1970 x7) (=> (and (and (= x3611 1) (= (x227 (+ x4582 x3568)) x2481) (= 32 x4658) (= 1 x3011)) (not x1970)) x4366))))) (=> x1823 x7))) (=> (not x2716) x7))) (=> (not x1748) x7))) (=> x1183 x7))) (=> (and (not x3491) (= x4328 (= x4413 x4424))) (and (=> (and (and (and x1965 (and (= x1209 (x2258 (x3182 x759))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1130) (= (x2214 (- x4318 4)) x1549) (= x4412 599290589) (not (= 405663989 x4412)) (= x322 x2403) (not (= 547091486 x4412)) (= x1384 x759) (= 100 x4318) (not (> 405663989 x4412)) (< x4412 2217467699) (= x4541 x3989) (< x4412 988262939) (= x4318 100) (not (> 4 x4318)) (< 0 x1209) (= x2303 (or (> x1549 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1549 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x1549)))))) (= (= x4424 x759) x1965)) (not x4328)) (and (=> (and (and (= x1996 (= x322 x2403)) (= x2403 x2844)) (not x2303)) (and (=> (not x1996) x2020) (=> (and x1996 (and (= x1384 x2961) (= x1700 (= x1384 x759)))) (and (=> (and (and (= (x258 x1011) x4591) (<= 0 x4591) (= (< x4591 x3989) x4036) (<= x4591 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1011 (x1013 (x3182 x2403) (x3187 5) 0)) (= x4431 x4541)) x1700) (and (=> x4036 x2020) (=> (and (and (= (< x3094 x4541) x4629) (= (x258 x238) x3094) (>= x3094 0) (= x238 (x1013 (x3182 x2403) (x3187 5) 0)) (<= x3094 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4036)) (and (=> (and (not x4629) (and (<= x2105 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2105 (x4018 x3394)) (= (> x2105 x974) x3328) (>= x2105 0) (= x3394 (x1013 (x3182 x1384) (x3187 5) 0)) (= (x2214 (- x3094 x4541)) x4224) (= x974 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4541))))) (and (=> (and (not x3328) (and (= x1120 1) (= x3975 32) (= 1 x1457) (= (x227 (+ x4541 x2105)) x4661))) x178) (=> x3328 x2020))) (=> x4629 x2020))))) (=> (not x1700) x2020))))) (=> x2303 x2020))) (=> (and x4328 (and (not (= 547091486 x633)) (= x489 x322) (< x633 988262939) (= (or (and (= true (<= x609 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x609 96)) (> x609 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x183) (= 599290589 x633) (= (x2214 (- x4585 4)) x609) (= x4585 100) (= (x2258 (x3182 x4413)) x2499) (> x2499 0) (= x4501 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x633 2217467699) (= 100 x4585) (= x2497 x3989) (not (= x633 405663989)) (not (> 405663989 x633)) (= x759 x4059) (not (> 4 x4585)))) (and (=> (and (and (= (= x322 x489) x324) (= x2411 x489)) (not x183)) (and (=> (and (and (= x4059 x3156) (= (= x759 x4059) x1420)) x324) (and (=> (and (and (= x2307 (x1013 (x3182 x489) (x3187 5) 0)) (= (x4593 x2307) x4423) (= (< x4423 x3989) x4273) (= x4430 x2497) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4423) (<= 0 x4423)) x1420) (and (=> (and (not x4273) (and (= (> x2497 x3723) x3294) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3723) (= x3723 (x4593 x3624)) (= (x1013 (x3182 x489) (x3187 5) 0) x3624) (>= x3723 0))) (and (=> (and (not x3294) (and (= x3196 (x1013 (x3182 x4059) (x3187 5) 0)) (>= x1552 0) (= (> x1552 x3123) x550) (<= x1552 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x114 x3196) x1552) (= (x2214 (- x3723 x2497)) x46) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2497)) x3123))) (and (=> (and (not x550) (and (= 1 x1359) (= x388 (x227 (+ x1552 x2497))) (= 32 x3331) (= 1 x1798))) x4769) (=> x550 x3303))) (=> x3294 x3303))) (=> x4273 x3303))) (=> (not x1420) x3303))) (=> (not x324) x3303))) (=> x183 x3303))))))) (=> (and (and (= x3839 (x2214 (- x2321 4))) (not (< x2321 4)) (not (< x3696 599290589)) (= x1999 x759) (= 100 x2321) (= x3989 x3003) (= x3696 599290589) (= x950 (x2258 (x3182 x2031))) (= x4082 x322) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x356) (= 100 x2321) (> x950 0) (> 1466279372 x3696) (= (or (> x3839 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3839 96) (= (<= x3839 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2904)) x4566) (and (=> x2904 x4672) (=> (and (not x2904) (and (= (= x4082 x322) x1674) (= x4082 x1586))) (and (=> (and (and (= x1999 x1507) (= x4398 (= x759 x1999))) x1674) (and (=> (not x4398) x4672) (=> (and (and (= x4614 x3003) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x56) (= x4125 (x1013 (x3182 x4082) (x3187 1) 0)) (= x1233 (< x56 x3989)) (<= 0 x56) (= (x4846 x4125) x56)) x4398) (and (=> (and (not x1233) (= x3916 (> x3003 x56))) (and (=> (and (and (= x2196 (x1013 (x3182 x4082) (x3187 1) 0)) (= (x2412 x2467) x4182) (= (x2214 (- x56 x3003)) x1860) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3003)) x4600) (>= x4182 0) (= x1387 (< x4600 x4182)) (= (x1013 (x3182 x1999) (x3187 1) 0) x2467) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4182)) (not x3916)) (and (=> x1387 x4672) (=> (and (not x1387) (and (= x376 (x227 (+ x3003 x4182))) (= x4449 (> x4182 x376)))) (and (=> x4449 x4672) (=> (and (and (= x1733 (< x1356 x3003)) (<= x1356 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1356 (x3892 x1849)) (>= x1356 0) (= x1362 (x1013 (x3182 x4082) (x3187 2) 0)) (= (x1013 (x3182 x759) x1362 0) x1849) (= (x1013 (x3182 x1999) (x3187 1) 0) x217)) (not x4449)) (and (=> (and (not x1733) (= x4203 (> x3003 x1356))) (and (=> (and (not x4203) (and (= x3229 1) (= x157 (x2214 (- x1356 x3003))) (= x1579 32) (= (x1013 (x3182 x759) x690 0) x4743) (= (x1013 (x3182 x4082) (x3187 2) 0) x690))) x1773) (=> x4203 x4672))) (=> x1733 x4672))))))) (=> x3916 x4672))) (=> x1233 x4672))))) (=> (not x1674) x4672))))))) (=> (and x4107 (= x3786 x3101)) x3373))) (=> (and (= x3101 x3786) x826) x3373))))) (=> (and (and (= x2058 x3163) (= 4 x3163) (= x3903 (= x721 0)) (< 0 x4393) (= x4393 (x2258 (x3182 x4413))) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x911)) x1640) (and (=> (and (not x3903) (= x4127 x2794)) x1696) (=> (and x3903 (and (= (x2081 x2324) x4814) (not (> 988262939 x3120)) (= (< x4814 x2247) x4705) (< x3120 1856199391) (not (= x3120 989455977)) (= x2324 (x1013 (x3182 x322) (x3187 6) 0)) (= x3120 1313710058) (= (x1013 (x3182 x322) (x3187 6) 0) x3065) (not (= 1038142104 x3120)) (= x2247 (x2081 x3065)) (not (> 4 x3163)) (>= x2247 0) (> 2217467699 x3120) (>= x4814 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4814) (not (= x3120 988262939)) (<= x2247 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x4705) (and (= (< x1905 x4127) x1903) (<= x4127 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2214 (- x4814 x2247)) x4296) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247)) x1905) (<= 0 x4127))) (and (=> (and (= x2794 x4127) x1903) x1696) (=> (and (and (<= x1772 1461501637330902918203684832716283019655932542975) (= 128 x2431) (= x3341 (x227 (+ x2247 x4127))) (< x1772 1461501637330902918203684832716283019655932542976) (= (= x1772 x2031) x2224) (= x146 (x227 (+ x2247 x4127))) (>= x1772 0)) (not x1903)) (and (=> (and x2224 (and (not (< x1859 599290589)) (= (x2258 (x3182 x2031)) x3708) (= 599290589 x1859) (= x737 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2078) (= x322 x4557) (= x4181 (or (and (= true (<= x698 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x698 96)) (> x698 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x1859 1466279372) (= x2247 x1524) (= x3685 x4413) (= (x2214 (- x737 4)) x698) (= 100 x737) (not (> 4 x737)) (< 0 x3708))) (and (=> x4181 x3718) (=> (and (not x4181) (and (= (= x322 x4557) x2047) (= x4557 x1570))) (and (=> (not x2047) x3718) (=> (and x2047 (and (= (= x3685 x4413) x3946) (= x3685 x3309))) (and (=> (not x3946) x3718) (=> (and (and (= x714 (x4846 x3667)) (= x4794 (> x2247 x714)) (= x3667 (x1013 (x3182 x4557) (x3187 1) 0)) (= x867 x1524) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714) (<= 0 x714)) x3946) (and (=> (and (not x4794) (= (> x1524 x714) x4252)) (and (=> x4252 x3718) (=> (and (not x4252) (and (= x788 (x426 x3132)) (= (x1013 (x3182 x3685) (x3187 1) 0) x3132) (= x4534 (x2214 (- x714 x1524))) (<= x788 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x788 0) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1524)) x240) (= (< x240 x788) x880) (= x2010 (x1013 (x3182 x4557) (x3187 1) 0)))) (and (=> (and (not x880) (and (= (x227 (+ x1524 x788)) x39) (= x231 (< x39 x788)))) (and (=> (and (and (= x2628 (x3892 x4865)) (<= x2628 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2628) (= (x1013 (x3182 x4557) (x3187 2) 0) x2826) (= (x1013 (x3182 x3685) (x3187 1) 0) x3628) (= x4865 (x1013 (x3182 x4413) x2826 0)) (= (< x2628 x1524) x3107)) (not x231)) (and (=> x3107 x3718) (=> (and (not x3107) (= x314 (> x1524 x2628))) (and (=> x314 x3718) (=> (and (and (= x1054 (x2214 (- x2628 x1524))) (= x1058 (x1013 (x3182 x4557) (x3187 2) 0)) (= (x1013 (x3182 x4413) x1058 0) x357) (= 1 x3450) (= x2515 32)) (not x314)) x1222))))) (=> x231 x3718))) (=> x880 x3718))))) (=> x4794 x3718))))))))) (=> (and (not x2224) (= (= x3937 x1772) x4556)) (and (=> (and (not x4556) (= (= x1772 x4413) x3360)) (and (=> (and x3360 (and (< 0 x2876) (= (x2258 (x3182 x4413)) x2876) (> 988262939 x3904) (not (> 405663989 x3904)) (= x2247 x4750) (= x1186 100) (= x42 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 2217467699 x3904) (= 599290589 x3904) (not (< x1186 4)) (= x2263 (or (and (= (<= x2734 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x2734)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2734))) (not (= x3904 405663989)) (= x322 x2865) (= 100 x1186) (not (= x3904 547091486)) (= x1230 x4413) (= (x2214 (- x1186 4)) x2734))) (and (=> x2263 x2676) (=> (and (and (= x3625 x2865) (= (= x322 x2865) x4044)) (not x2263)) (and (=> (not x4044) x2676) (=> (and x4044 (and (= x1300 (= x1230 x4413)) (= x1230 x3665))) (and (=> (and (and (= x4750 x1593) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2740) (= (< x2740 x2247) x1946) (= (x1013 (x3182 x2865) (x3187 5) 0) x4397) (= x2740 (x4593 x4397)) (>= x2740 0)) x1300) (and (=> (and (not x1946) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3267) (= x3267 (x4593 x981)) (= x981 (x1013 (x3182 x2865) (x3187 5) 0)) (= x751 (< x3267 x4750)) (<= 0 x3267))) (and (=> x751 x2676) (=> (and (not x751) (and (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4750)) x3785) (<= x498 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x1230) (x3187 5) 0) x4282) (= (x2841 x4282) x498) (<= 0 x498) (= (< x3785 x498) x3940) (= x551 (x2214 (- x3267 x4750))))) (and (=> (and (not x3940) (and (= 1 x1840) (= x1820 32) (= x1890 1) (= x4102 (x227 (+ x4750 x498))))) x48) (=> x3940 x2676))))) (=> x1946 x2676))) (=> (not x1300) x2676))))))) (=> (and (and (and x3524 (and (= x3618 100) (= 599290589 x3266) (= x1204 (x2258 (x3182 x759))) (not (< x3618 4)) (= x4805 (x2214 (- x3618 4))) (= x2247 x1466) (not (= 547091486 x3266)) (= 100 x3618) (= (or (and (> 96 x4805) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4805))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4805)) x276) (= x1109 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x3266 405663989)) (< x3266 2217467699) (= x1801 x4413) (= x2244 x322) (> x1204 0) (not (> 405663989 x3266)) (< x3266 988262939))) (= x3524 (= x759 x1772))) (not x3360)) (and (=> (and (and (= x1535 x2244) (= (= x2244 x322) x3753)) (not x276)) (and (=> (not x3753) x1182) (=> (and (and (= (= x1801 x4413) x3081) (= x1238 x1801)) x3753) (and (=> (and x3081 (and (= x1466 x3703) (= x2802 (x258 x3236)) (= (> x2247 x2802) x4554) (= (x1013 (x3182 x2244) (x3187 5) 0) x3236) (<= x2802 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2802 0))) (and (=> x4554 x1182) (=> (and (and (= (x1013 (x3182 x2244) (x3187 5) 0) x4784) (<= x4160 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4160 0) (= (> x1466 x4160) x1174) (= x4160 (x258 x4784))) (not x4554)) (and (=> (and (and (<= x894 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x894) (= x474 (x1013 (x3182 x1801) (x3187 5) 0)) (= (x739 x474) x894) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1466)) x358) (= x3032 (x2214 (- x4160 x1466))) (= x1140 (< x358 x894))) (not x1174)) (and (=> (and (and (= x1305 (x227 (+ x894 x1466))) (= x2139 32) (= x561 1) (= 1 x2054)) (not x1140)) x2604) (=> x1140 x1182))) (=> x1174 x1182))))) (=> (not x3081) x1182))))) (=> x276 x1182))))) (=> (and x4556 (and (> 2217467699 x3460) (= x663 100) (= x1255 x4413) (= 599290589 x3460) (= 100 x663) (> 988262939 x3460) (not (= x3460 405663989)) (= x2093 (or (> x2253 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2253 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x2253)))) (= x4686 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 547091486 x3460)) (> x4830 0) (not (> 405663989 x3460)) (= (x2258 (x3182 x3937)) x4830) (= x2247 x424) (not (> 4 x663)) (= x3677 x322) (= x2253 (x2214 (- x663 4))))) (and (=> x2093 x2388) (=> (and (and (= x74 x3677) (= x2664 (= x3677 x322))) (not x2093)) (and (=> (and (and (= x4895 x1255) (= x701 (= x1255 x4413))) x2664) (and (=> (not x701) x2388) (=> (and x701 (and (<= 0 x2580) (= (> x2247 x2580) x900) (= x424 x836) (= x1208 (x1013 (x3182 x3677) (x3187 5) 0)) (= x2580 (x1323 x1208)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2580))) (and (=> x900 x2388) (=> (and (not x900) (and (= x2298 (> x424 x1578)) (>= x1578 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1578) (= (x1323 x2855) x1578) (= x2855 (x1013 (x3182 x3677) (x3187 5) 0)))) (and (=> x2298 x2388) (=> (and (and (= x92 (x1061 x4752)) (= (< x2909 x92) x3900) (= x4752 (x1013 (x3182 x1255) (x3187 5) 0)) (= x2909 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x424))) (>= x92 0) (= (x2214 (- x1578 x424)) x4171) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x92)) (not x2298)) (and (=> (and (not x3900) (and (= x1907 1) (= x1815 (x227 (+ x92 x424))) (= x4559 1) (= x3690 32))) x3587) (=> x3900 x2388))))))))) (=> (not x2664) x2388))))))))))) (=> (and (= x4127 x2794) x4705) x1696))))))) (=> (and x4893 (and (> x947 0) (= x130 4) (= x130 x2058) (= (x2258 (x3182 x3937)) x947) (= (= x721 0) x381) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x4857))) (and (=> (and (not x381) (= x3207 x2606)) x4219) (=> (and x381 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4701) (<= x3195 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4228 (x1013 (x3182 x322) (x3187 6) 0)) (= x370 (x1013 (x3182 x322) (x3187 6) 0)) (not (= 989455977 x2006)) (>= x4701 0) (> 2217467699 x2006) (= x2006 1313710058) (not (< x130 4)) (not (< x2006 988262939)) (>= x3195 0) (= x646 (> x3195 x4701)) (= (x2723 x4228) x3195) (not (= 988262939 x2006)) (= x4701 (x2723 x370)) (> 1856199391 x2006) (not (= 1038142104 x2006)))) (and (=> (and (= x3207 x2606) x646) x4219) (=> (and (and (= (x2214 (- x4701 x3195)) x645) (= x1775 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3195))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3207) (<= 0 x3207) (= (> x3207 x1775) x3983)) (not x646)) (and (=> (and (= x2606 x3207) x3983) x4219) (=> (and (not x3983) (and (>= 1461501637330902918203684832716283019655932542975 x3960) (= 128 x4876) (= (= x3960 x2031) x3978) (> 1461501637330902918203684832716283019655932542976 x3960) (>= x3960 0) (= (x227 (+ x3207 x3195)) x2908) (= x937 (x227 (+ x3207 x3195))))) (and (=> (and (and (> x1874 0) (not (< x4465 4)) (= (x2214 (- x4465 4)) x745) (= x2558 x3937) (not (< x1846 599290589)) (= x4465 100) (= (or (and (> 96 x745) (= (<= x745 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x745)) x4619) (= x4465 100) (= x322 x2124) (= x2252 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x1846) (< x1846 1466279372) (= x3195 x1191) (= (x2258 (x3182 x2031)) x1874)) x3978) (and (=> x4619 x1341) (=> (and (not x4619) (and (= x88 x2124) (= x4813 (= x2124 x322)))) (and (=> (not x4813) x1341) (=> (and (and (= x1975 (= x2558 x3937)) (= x3125 x2558)) x4813) (and (=> (and x1975 (and (>= x2103 0) (= (x4846 x1711) x2103) (= x1868 (< x2103 x3195)) (<= x2103 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1191 x2815) (= x1711 (x1013 (x3182 x2124) (x3187 1) 0)))) (and (=> (and (= (< x2103 x1191) x1145) (not x1868)) (and (=> x1145 x1341) (=> (and (and (= x2609 (x1013 (x3182 x2558) (x3187 1) 0)) (= (> x4306 x4150) x1381) (<= x4306 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4630 x2609) x4306) (= x180 (x1013 (x3182 x2124) (x3187 1) 0)) (<= 0 x4306) (= (x2214 (- x2103 x1191)) x4338) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1191)) x4150)) (not x1145)) (and (=> x1381 x1341) (=> (and (and (= (x227 (+ x1191 x4306)) x533) (= (< x533 x4306) x1839)) (not x1381)) (and (=> (and (and (= x2149 (x1013 (x3182 x2558) (x3187 1) 0)) (<= x3217 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2371 (x1013 (x3182 x3937) x1353 0)) (= (x3892 x2371) x3217) (= (> x1191 x3217) x3929) (= (x1013 (x3182 x2124) (x3187 2) 0) x1353) (>= x3217 0)) (not x1839)) (and (=> (and (= (> x1191 x3217) x2767) (not x3929)) (and (=> x2767 x1341) (=> (and (and (= (x1013 (x3182 x3937) x418 0) x1080) (= x4283 32) (= x510 1) (= x3597 (x2214 (- x3217 x1191))) (= x418 (x1013 (x3182 x2124) (x3187 2) 0))) (not x2767)) x3105))) (=> x3929 x1341))) (=> x1839 x1341))))))) (=> x1868 x1341))) (=> (not x1975) x1341))))))) (=> (and (= x2342 (= x3937 x3960)) (not x3978)) (and (=> (and (not x2342) (= x2036 (= x3960 x4413))) (and (=> (and x2036 (and (= x508 x3195) (> 988262939 x1848) (= x3173 x3937) (not (= x1848 405663989)) (= 100 x1135) (= 599290589 x1848) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3257) (= (x2214 (- x1135 4)) x4235) (= x4792 (or (and (> 96 x4235) (= true (<= x4235 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4235 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2276 (x2258 (x3182 x4413))) (= x1135 100) (not (> 4 x1135)) (< x1848 2217467699) (= x322 x395) (not (> 405663989 x1848)) (not (= 547091486 x1848)) (> x2276 0))) (and (=> (and (and (= x4455 x395) (= x3523 (= x395 x322))) (not x4792)) (and (=> (not x3523) x785) (=> (and x3523 (and (= x3173 x1683) (= (= x3937 x3173) x4095))) (and (=> (not x4095) x785) (=> (and (and (= (x4593 x4524) x3115) (= (< x3115 x3195) x919) (<= x3115 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3115 0) (= x4524 (x1013 (x3182 x395) (x3187 5) 0)) (= x508 x4623)) x4095) (and (=> x919 x785) (=> (and (not x919) (and (>= x1913 0) (= x752 (< x1913 x508)) (<= x1913 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x284 (x1013 (x3182 x395) (x3187 5) 0)) (= (x4593 x284) x1913))) (and (=> (and (and (= x2918 (x2758 x3971)) (= x1149 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x508))) (<= x2918 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1546 (x2214 (- x1913 x508))) (<= 0 x2918) (= x3971 (x1013 (x3182 x3173) (x3187 5) 0)) (= x81 (> x2918 x1149))) (not x752)) (and (=> (and (and (= x1235 32) (= (x227 (+ x2918 x508)) x4548) (= 1 x1032) (= 1 x4322)) (not x81)) x1280) (=> x81 x785))) (=> x752 x785))))))))) (=> x4792 x785))) (=> (and (and (= (= x759 x3960) x899) (and x899 (and (= x3446 x3937) (not (= x2665 405663989)) (= 100 x837) (not (< x2665 405663989)) (= 100 x837) (= x4818 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x2795 0) (= x2665 599290589) (> 988262939 x2665) (= x2916 x3195) (= x3894 (or (and (< x2977 96) (= true (<= x2977 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2977))) (= x1463 x322) (= (x2258 (x3182 x759)) x2795) (not (= x2665 547091486)) (= x2977 (x2214 (- x837 4))) (> 2217467699 x2665) (not (< x837 4))))) (not x2036)) (and (=> x3894 x4429) (=> (and (not x3894) (and (= x1463 x1895) (= (= x1463 x322) x2213))) (and (=> (and x2213 (and (= x3446 x631) (= (= x3446 x3937) x169))) (and (=> (and (and (= x2529 x2916) (= (x258 x4054) x601) (= x4054 (x1013 (x3182 x1463) (x3187 5) 0)) (= (< x601 x3195) x2059) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x601) (>= x601 0)) x169) (and (=> (and (not x2059) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2466) (= x647 (> x2916 x2466)) (<= 0 x2466) (= (x1013 (x3182 x1463) (x3187 5) 0) x1778) (= (x258 x1778) x2466))) (and (=> x647 x4429) (=> (and (not x647) (and (= (x512 x2028) x1306) (>= x1306 0) (= (x2214 (- x2466 x2916)) x316) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2916)) x4456) (= (> x1306 x4456) x378) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1306) (= x2028 (x1013 (x3182 x3446) (x3187 5) 0)))) (and (=> x378 x4429) (=> (and (and (= 32 x3289) (= 1 x4225) (= 1 x341) (= x4836 (x227 (+ x2916 x1306)))) (not x378)) x2635))))) (=> x2059 x4429))) (=> (not x169) x4429))) (=> (not x2213) x4429))))))) (=> (and (and (= 599290589 x1719) (not (< x3013 4)) (= (or (and (= (<= x3162 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3162 96)) (> x3162 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4022) (= x1760 x3195) (not (= x1719 547091486)) (not (< x1719 405663989)) (= x4736 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2024 x322) (> 2217467699 x1719) (< 0 x676) (> 988262939 x1719) (not (= x1719 405663989)) (= x4313 x3937) (= x3162 (x2214 (- x3013 4))) (= 100 x3013) (= x676 (x2258 (x3182 x3937))) (= x3013 100)) x2342) (and (=> (and (and (= (= x2024 x322) x1835) (= x2024 x4741)) (not x4022)) (and (=> (not x1835) x4062) (=> (and x1835 (and (= x4313 x4652) (= (= x4313 x3937) x742))) (and (=> (not x742) x4062) (=> (and (and (<= x4589 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4589) (= (> x3195 x4589) x4410) (= (x1013 (x3182 x2024) (x3187 5) 0) x1479) (= x4589 (x1323 x1479)) (= x1760 x123)) x742) (and (=> x4410 x4062) (=> (and (not x4410) (and (<= 0 x1240) (= (< x1240 x1760) x2062) (= (x1323 x119) x1240) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1240) (= (x1013 (x3182 x2024) (x3187 5) 0) x119))) (and (=> x2062 x4062) (=> (and (not x2062) (and (= (< x884 x562) x3492) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1760)) x884) (= (x2339 x173) x562) (= (x2214 (- x1240 x1760)) x2178) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x562) (>= x562 0) (= (x1013 (x3182 x4313) (x3187 5) 0) x173))) (and (=> x3492 x4062) (=> (and (not x3492) (and (= 1 x503) (= (x227 (+ x1760 x562)) x3033) (= 1 x3526) (= x76 32))) x559))))))))))) (=> x4022 x4062))))))))))))))) (=> (and (and (and x2936 (and (= x4444 x3131) (< 0 x4367) (> 1466279372 x3675) (not (= x3675 117300739)) (= 157198259 x3675) (= (or (> x3774 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3774 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3774)))) x4293) (= x3774 (x2214 (- x9 4))) (= x1458 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x2386 x721) (not (> 4 x9)) (> 599290589 x3675) (= 68 x9) (= (x2258 (x3182 x2031)) x4367))) (and (= x1833 (x227 (+ 4 x335))) (= x4007 (x227 (+ x1833 32))) (= x2936 (= x2462 x2031)))) x429) (and (=> x4293 x1573) (=> (and (and (= (= x2452 x3131) x3995) (= x2452 (x3232 1461501637330902918203684832716283019655932542975 x3131))) (not x4293)) (and (=> (not x3995) x1573) (=> (and (and (= x3451 32) (= (x1013 (x3182 x3398) x1252 0) x835) (= x3398 (x3232 1461501637330902918203684832716283019655932542975 x4444)) (= x2323 1) (= x1041 x2386) (= (x1013 (x3182 x322) (x3187 2) 0) x1252)) x3995) x584)))))))))))
(assert (= (x862 (x1324 x2720 1)) (+ (x862 x2720) 1)))
(assert (=> (<= x4096 10000) (= (x3182 x4096) (x3187 x4096))))
(assert (x2185 x3136))
(assert (x2185 x1346))
(assert (= x4143 (x862 (x3182 x4143))))
(assert (x2185 x1624))
(assert (= x771 (or x3570 x838)))
(assert (x2185 x2274))
(assert (= (x3182 10742207464693106059581744854972325794081737850190833080250671788038469713920) (x3187 10742207464693106059581744854972325794081737850190833080250671788038469713920)))
(assert (x2185 x989))
(assert (x2185 x376))
(assert (x2185 x3495))
(assert (= (x862 (x3182 x3446)) x3446))
(assert (= (and x3876 x825) x3039))
(assert (= (=> (and (= x612 x1231) (= (x1013 (x3182 x3502) x1347 0) x3764) (= x255 (x1324 x3764 1)) (= x4379 (x1324 x255 1))) x3743) x802))
(assert (x2185 x2651))
(assert (x2185 x3128))
(assert (= x3893 (and (not x231) x2827)))
(assert (x2185 x4686))
(assert (x2185 x4335))
(assert (x2185 x3419))
(assert (x2185 x788))
(assert (x2185 x1669))
(assert (x2185 x2065))
(assert (x2185 x4465))
(assert (x2185 x975))
(assert (= (x862 (x3187 2691771752)) 2691771752))
(assert (x2185 x2666))
(assert (x3909 x2323))
(assert (x2185 x4016))
(assert (= (and x653 x3040) x3985))
(assert (x2185 x1582))
(assert (x2870 x2408))
(assert (x2185 x2780))
(assert (x2185 x2665))
(assert (= x1218 (and (not x3894) x603)))
(assert (x2185 x3173))
(assert (x2185 x3912))
(assert (= (and x4323 (not x2914)) x3736))
(assert (= (and x3288 (not x4342)) x464))
(assert (= (and x4681 x935) x4286))
(assert (= (x3182 1000000000000000000) (x3187 1000000000000000000)))
(assert (x2185 x4737))
(assert (= (and x51 x3983) x4617))
(assert (x2185 x3504))
(assert (x2185 x2124))
(assert (x2185 x3223))
(assert (x2185 x4896))
(assert (= (and x2231 x3933) x3009))
(assert (= x1289 (and x3627 x1695)))
(assert (= (and x272 x2063) x350))
(assert (x2185 x3953))
(assert (x2185 x565))
(assert (= (and x252 (not x918)) x2222))
(assert (= (and (not x1928) x4689) x1083))
(assert (x2185 x1848))
(assert (= (x862 (x1324 x1645 1)) (+ (x862 x1645) 1)))
(assert (x2185 x1986))
(assert (= x906 (=> (and (= x3623 x4442) (= x1199 x4032) (= x3207 x4597) (= x3786 x1394)) x3041)))
(assert (x2185 x3960))
(assert (x2185 x587))
(assert (x2185 x2280))
(assert (= (and x3340 (not x1717)) x1467))
(assert (x2185 x3028))
(assert (x2185 x2246))
(assert (= (and x732 x4794) x4621))
(assert (x2185 x454))
(assert (x2185 x988))
(assert (= x1322 (and x368 x4729)))
(assert (= x48 (=> (and (= x573 x1890) (= x807 x1820)) x3248)))
(assert (x2185 x4863))
(assert (= (x3187 72570022874062638528011751457397263716769196454539065078543251854057308946432) (x3182 72570022874062638528011751457397263716769196454539065078543251854057308946432)))
(assert (x2185 x4447))
(assert (= (or x2896 x1169) x2868))
(assert (= x3535 (and x2513 x742)))
(assert (x2185 x2583))
(assert (x2185 x3148))
(assert (= (x862 (x3182 x685)) x685))
(assert (= (and x642 (not x2234)) x4020))
(assert (= (or x54 x1564) x756))
(assert (= x1410 (and (not x423) x4004)))
(assert (x2870 x2692))
(assert (=> (<= x2848 10000) (= (x3187 x2848) (x3182 x2848))))
(assert (= x3279 (x862 (x3182 x3279))))
(assert (x2185 x333))
(assert (= (and x680 x1283) x3056))
(assert (x2185 x1190))
(assert (= (=> (and (= x4032 x4544) (= x1394 x2798) (= x4597 x3207) (= x4127 x3623)) x3041) x1649))
(assert (= x1916 (and x1892 (not x3978))))
(assert (= (or x3332 x4284) x3920))
(assert (x2185 x1930))
(assert (= (and x4906 x4215) x1025))
(assert (= (or x2585 x1210) x2486))
(assert (= (and (not x2257) x805) x1044))
(assert (= (=> (and (= x4699 x929) (= x3817 0)) x3948) x2122))
(assert (= (+ 1 (x862 x1893)) (x862 (x1324 x1893 1))))
(assert (= (and x314 x4823) x2243))
(assert (x2185 x4594))
(assert (x2185 x3216))
(assert (x2185 x2230))
(assert (= x1099 (x862 (x3182 x1099))))
(assert (= (or x4516 x2510 x4386 x1922 x710 x4258) x3142))
(assert (x3909 x219))
(assert (= x2874 (or x2374 x2057 x2037 x4255)))
(assert (= x2596 (and (not x647) x992)))
(assert (= (x862 (x3182 x2869)) x2869))
(assert (= x3158 (and x1882 x2298)))
(assert (= (x3187 398450620) (x3182 398450620)))
(assert (= (and x4644 x3310) x3934))
(assert (= (and x2960 (not x2496)) x143))
(assert (= x148 (or x973 x2809)))
(assert (=> (>= 10000 x2869) (= (x3187 x2869) (x3182 x2869))))
(assert (= (x862 (x3182 x3237)) x3237))
(assert (= x3511 (=> (and (and (= (= x1099 0) x4639) (>= 1461501637330902918203684832716283019655932542975 x1099) (> 1461501637330902918203684832716283019655932542976 x1099) (<= 0 x1099)) (or x4639 (and (and (= x4864 (x227 (+ x4821 32))) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x4692) (= x2744 (x227 (+ 32 x4864))) (not (= x168 0)) (< x1099 1461501637330902918203684832716283019655932542976) (= (x2258 (x3182 x1099)) x168) (<= 0 x1099) (< x1513 4294967296) (= x4821 (x227 (+ 4 x3083))) (<= x1099 1461501637330902918203684832716283019655932542975)) (not x4639)))) x553)))
(assert (x2185 x1198))
(assert (= (+ 1 (x862 x1757)) (x862 (x1324 x1757 1))))
(assert (x2870 x3279))
(assert (= (and (not x3852) x2934) x3066))
(assert (x2870 x3216))
(assert (x2185 x2316))
(assert (x2185 x3087))
(assert (x4678 x447 x2165))
(assert (= (and x755 x1875) x1154))
(assert (=> (>= 10000 x1816) (= (x3187 x1816) (x3182 x1816))))
(assert (x2185 x2959))
(assert (= x779 (and (not x4097) x1643)))
(assert (x2185 x4102))
(assert (x2185 x1170))
(assert (= x4727 (=> (and (= x709 (x1013 (x3182 x106) (x3187 158) 0)) (= (< 0 x1491) x94) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x2848) (= x106 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= (x1013 (x3182 x2848) x709 0) x2132)) (and (=> (and (and (= x2848 x4604) (= x3607 x3786) (= x4127 x2482) (= x4167 x2954) (= x306 x3207)) (not x94)) x4248) (=> (and x94 (and (= (x2214 (- x2603 x2954)) x274) (= (div x1321 1000000000000000000) x354) (= x2226 x354) (= (> x1491 115792089237316195423570985008687907853269984665640564039457) x2376) (= (x1013 (x3182 x3566) (x3187 164) 0) x535) (= (x227 (+ x2954 4)) x196) (= x1436 (= x1251 x3937)) (> x1917 0) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x1251) (= x1475 (x1155 x2132)) (= (x1324 x541 1) x1327) (<= 0 x1917) (<= x1917 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (mod (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4872) (< (* x4872 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x555 (+ x588 x4302)) (= x1321 (div x3783 x1917)) (<= x1475 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2760 0) (< (+ x1475 x354) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3783 (* x4872 1000000000000000000)) (= (+ x2226 x3664) x3744) (>= x1475 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2760 x354)) (= x2774 0) (= (x2791 x1327) x2760) (= x354 x4302) (= x3664 x1475) (<= x2760 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3566 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= x1917 (x2708 x535)) (= (x227 (+ 32 x196)) x2603) (= x2774 (ite x2376 1 0)) (= x2760 x588))) (and (=> (and (not x1436) (= (= x4413 x1251) x991)) (and (=> (and (and (not (< x3290 4)) (not (= 178855970 x2806)) (= x2633 x322) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x4045) (= (x2214 (- x3290 4)) x772) (not (= 75483562 x2806)) (< x2806 988262939) (= 36 x3290) (< x2806 405663989) (not (= x2806 242558722)) (= x2806 398450620) (> x2542 0) (= x2542 (x2258 (x3182 x4413))) (< x2806 2217467699) (= (or (and (< x772 32) (= (<= x772 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x772 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2689) (= x274 x3290)) x991) (and (=> x2689 x1192) (=> (and (and (= x793 x2633) (= (= x322 x2633) x811)) (not x2689)) (and (=> (not x811) x1192) (=> (and (and (= x1547 (x2081 x754)) (= x754 (x1013 (x3182 x2633) (x3187 6) 0)) (= x3367 1) (>= x1547 0) (= x611 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1547)) x811) x1088))))) (=> (and (and (and x1281 (and (= x71 x322) (> x415 0) (< x1307 405663989) (> 2217467699 x1307) (not (< x1440 4)) (> 988262939 x1307) (not (= 75483562 x1307)) (= x1440 36) (= x3620 (or (> x1490 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1490)) (> 32 x1490)))) (= (x2214 (- x1440 4)) x1490) (= (x2258 (x3182 x759)) x415) (= x1440 x274) (not (= 178855970 x1307)) (not (= x1307 242558722)) (= 398450620 x1307) (= x3160 10742207464693106059581744854972325794081737850190833080250671788038469713920))) (= (= x1251 x759) x1281)) (not x991)) (and (=> x3620 x2654) (=> (and (not x3620) (and (= x71 x3542) (= x540 (= x71 x322)))) (and (=> (and x540 (and (= x2136 (x3203 x3371)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2136) (<= 0 x2136) (= 32 x3062) (= (x1013 (x3182 x71) (x3187 6) 0) x3371) (= 1 x519))) x1104) (=> (not x540) x2654))))))) (=> (and x1436 (and (= x3278 10742207464693106059581744854972325794081737850190833080250671788038469713920) (not (= x3614 75483562)) (= x274 x2450) (not (= x3614 178855970)) (= (x2258 (x3182 x3937)) x4239) (not (< x2450 4)) (= x3614 398450620) (< x3614 2217467699) (> 405663989 x3614) (= x2128 (x2214 (- x2450 4))) (= x4332 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2128) (and (< x2128 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2128))))) (< x3614 988262939) (< 0 x4239) (not (= 242558722 x3614)) (= 36 x2450) (= x115 x322))) (and (=> (and (and (= x115 x1315) (= (= x322 x115) x4764)) (not x4332)) (and (=> (not x4764) x695) (=> (and (and (<= 0 x2534) (= 32 x1651) (= x2989 1) (<= x2534 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2534 (x2723 x2919)) (= x2919 (x1013 (x3182 x115) (x3187 6) 0))) x4764) x1403))) (=> x4332 x695)))))))))
(assert (x2185 x1423))
(assert (x2185 x604))
(assert (= (=> (and (= x611 x3984) (= x3367 x4236)) x1655) x1088))
(assert (= (and x37 x811) x3025))
(assert (x2185 x525))
(assert (x2185 x4059))
(assert (x2185 x221))
(assert (= (and x4265 x1254) x1722))
(assert (= x3412 (and x916 x907)))
(assert (= x3218 (and x733 (not x1145))))
(assert (x2185 x3998))
(assert (x2185 x4391))
(assert (x2185 x2600))
(assert (x2185 x4478))
(assert (x2185 x39))
(assert (x2185 x4534))
(assert (x2185 x4897))
(assert (= (x3182 4294967296) (x3187 4294967296)))
(assert (= x3449 (and (not x4328) x1810)))
(assert (x2185 x2384))
(assert (x2185 x3458))
(assert (=> (<= x4063 10000) (= (x3182 x4063) (x3187 x4063))))
(assert (x2185 x4074))
(assert (x2185 x4220))
(assert (= (x862 (x3182 x340)) x340))
(assert (= x2094 (or x1852 x4513)))
(assert (= x3098 (and x77 (not x3922))))
(assert (x2870 x4691))
(assert (x2185 x1575))
(assert (=> (>= 10000 x3080) (= (x3187 x3080) (x3182 x3080))))
(assert (x2185 x4247))
(assert (x2185 x3200))
(assert (x2185 x1424))
(assert (x2185 x3171))
(assert (=> (>= 10000 x4581) (= (x3187 x4581) (x3182 x4581))))
(assert (= (and x760 x2487) x4262))
(assert (= (x862 (x3182 x4288)) x4288))
(assert (x2185 x2218))
(assert (x2185 x913))
(assert (= (and (not x1183) x4315) x289))
(assert (x2185 x4521))
(assert (x2185 x623))
(assert (= (and (not x83) x722) x323))
(assert (= x3373 (=> (and (= x3101 x2798) (= x4544 0)) x1649)))
(assert (= (and x2250 (not x1118)) x1538))
(assert (=> (>= 10000 x3566) (= (x3182 x3566) (x3187 x3566))))
(assert (x2185 x230))
(assert (= x4772 (=> (and (or (not x1639) x1639) (= x1639 (= x1758 0))) x3147)))
(assert (x2185 x1055))
(assert (x2185 x3032))
(assert (= x2934 (and x1168 x1337)))
(assert (= (and x1051 (not x3251)) x2833))
(assert (= (x862 (x3182 x1255)) x1255))
(assert (= x1216 (and x813 x3895)))
(assert (= (and x1756 (not x3779)) x3359))
(assert (x2185 x2996))
(assert (x2185 x1039))
(assert (x2185 x4185))
(assert (= (and (not x766) x105) x1896))
(assert (x2185 x3835))
(assert (x2185 x996))
(assert (= (and x80 (not x2263)) x1383))
(assert (= (x862 (x3182 x3582)) x3582))
(assert (= x4787 (and x1921 x3793)))
(assert (= x2318 (or x257 x1819)))
(assert (= x560 (x862 (x3182 x560))))
(assert (= (and (not x4619) x4047) x3847))
(assert (= (x862 (x3182 x4185)) x4185))
(assert (= x4508 (or (and x3424 (not x4344)) x1278)))
(assert (= (and x442 x2830) x317))
(assert (= (x862 (x3187 1000000000000000000)) 1000000000000000000))
(assert (x2870 x4291))
(assert (x2185 x2628))
(assert (= x2737 (and (=> (and x4507 (and (or (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x582) (= x582 (x815 x3578)) (= x4295 (x1013 (x3182 x565) x1396 0)) (= (not x3296) x3364) (>= x582 0) (= x3296 (< x582 x2518)) (= x3578 (x1324 x4295 2))) x3305) (and (not x3305) (= x3364 x3305))) (and (= (x11 x1505) x565) (= (x1013 (x3182 x3237) x1396 0) x842) (> 1461501637330902918203684832716283019655932542976 x565) (= x1505 (x1324 x842 1)) (= x3305 (ite (> x2270 1) (not (= x565 0)) (< 1 x2270))) (<= x565 1461501637330902918203684832716283019655932542975) (>= x565 0)))) x132) (=> (and (and (= x4581 x3237) (= x3878 0)) (not x4507)) x2108))))
(assert (x2185 x2802))
(assert (= x4540 (and (not x100) x2899)))
(assert (x2185 x4872))
(assert (x2185 x3686))
(assert (x2185 x1008))
(assert (= x4413 (x862 (x3182 x4413))))
(assert (x2185 x1708))
(assert (x2185 x2986))
(assert (=> (<= x2024 10000) (= (x3187 x2024) (x3182 x2024))))
(assert (x2185 x3482))
(assert (x2185 x3398))
(assert (= (=> (and (= x4925 0) (= x1617 x4699)) x3234) x1361))
(assert (= (and x3066 x2560) x4043))
(assert (= (and x568 x4329) x2544))
(assert (x2185 x660))
(assert (x2185 x2386))
(assert (= (x862 (x3182 x4581)) x4581))
(assert (= x1384 (x862 (x3182 x1384))))
(assert (= x1358 (or x1164 x4056)))
(assert (x2185 x1885))
(assert (x2185 x1120))
(assert (x2185 x3607))
(assert (= (and (not x398) x97) x1454))
(assert (= (x862 (x1324 x1847 1)) (+ (x862 x1847) 1)))
(assert (= (and x854 x2644) x117))
(assert (x2185 x4313))
(assert (x2870 x346))
(assert (x2185 x1209))
(assert (= (and (not x935) x4681) x3550))
(assert (x2185 x417))
(assert (= (and (not x719) x3071) x3992))
(assert (x2870 x2463))
(assert (= (+ 1 (x862 x4488)) (x862 (x1324 x4488 1))))
(assert (x2870 x4096))
(assert (x2185 x794))
(assert (x2185 x2054))
(assert (=> (>= 10000 x2384) (= (x3187 x2384) (x3182 x2384))))
(assert (x2185 x3162))
(assert (= (and x831 x1631) x4146))
(assert (= (and (=> (and (not x1738) (and (= x4877 x3503) (= x4223 0))) x2025) (=> (and (and (and (= (x1324 x817 1) x3591) (< x2888 1461501637330902918203684832716283019655932542976) (= (x1013 (x3182 x3503) x1347 0) x817) (>= x2888 0) (= x2888 (x3388 x3591)) (>= 1461501637330902918203684832716283019655932542975 x2888) (= (ite (> x2270 1) (not (= x2888 0)) (< 1 x2270)) x3471)) (or (and (and (= x1165 (x2995 x4807)) (= (x1013 (x3182 x2888) x1347 0) x209) (= (not x821) x1002) (= (< x1165 x142) x821) (= (x1324 x209 2) x4807) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1165) (<= 0 x1165)) x3471) (and (not x3471) (= x1002 x3471)))) x1738) x4832)) x2727))
(assert (x2185 x2508))
(assert (= x3443 (and (not x899) x3020)))
(assert (x2185 x3351))
(assert (x2185 x787))
(assert (= (=> (and (= x1757 (x1013 (x3182 x728) x3304 0)) (= x294 (x1324 x4488 1)) (= x4488 (x1324 x1757 1))) x1294) x1172))
(assert (x2185 x4609))
(assert (x2185 x505))
(assert (= (x862 (x1324 x3746 1)) (+ 1 (x862 x3746))))
(assert (x2185 x2078))
(assert (x2185 x1485))
(assert (= x921 (or x3142 x4079)))
(assert (x2870 x3119))
(assert (x2185 x2984))
(assert (= (and x4785 x1446) x1583))
(assert (x2870 x1829))
(assert (= (and x4246 x1100) x1667))
(assert (= x857 (and x4334 x4436)))
(assert (x2185 x1459))
(assert (= x3317 (and x4797 x290)))
(assert (x2185 x4083))
(assert (= (and x2295 x4193) x3264))
(assert (= (and x1002 x4781) x4912))
(assert (x2185 x3949))
(assert (= x2643 (and (not x4436) x4334)))
(assert (x2185 x74))
(assert (= x1588 (and x1037 x3945)))
(assert (x2185 x4338))
(assert (x2185 x1458))
(assert (= (and x1554 (not x50)) x393))
(assert (= x4828 (and (=> (and (not x760) (and (= x4177 x232) (= 0 x4561))) x1062) (=> (and (and (or (and (not x1345) (and (= x4758 (div x1673 x366)) (= x554 x1364) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1302 x504)) (= x504 x3463) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1364)) x1653) (<= x1302 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x554 x3342) (= (+ x2458 x3463) x2637) (= x3509 0) (< (* 1000000000000000000 x1499) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1673 (* x1499 1000000000000000000)) (= x504 (div x4758 1000000000000000000)) (= x2637 x4847) (>= x1302 0) (< 0 x366) (= x3509 (ite x4404 1 0)) (= x4404 (< 115792089237316195423570985008687907853269984665640564039457 x1364)) (not (< x1653 0)) (= x1499 (mod (* 1000000000000000000 x1364) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1302 x2458) (= (x736 x443) x1302) (= x2721 0))) (and (and (= x2721 x930) (= x4697 (mod (* x1429 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x959 x242) x2034) (= x3469 0) (> x242 0) (= (* x4697 1000000000000000000) x1783) (= x4354 (x1007 x2478)) (= (div x2034 1000000000000000000) x4188) (= (x736 x443) x3299) (< 0 x366) (= (x2214 (- x4354 x4188)) x930) (= x3469 (ite x2750 1 0)) (< (+ x1386 x3299) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x4627 1000000000000000000) x959) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4354) (= (mod (* x1429 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4627) (not (> x4188 x4354)) (= x2283 x3299) (< (* 1000000000000000000 x4697) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite x2483 1 0) x3919) (< (* 1000000000000000000 x4627) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1040 (+ x2283 x500)) (= 0 x3919) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3299) (>= x4354 0) (= x4840 (div x1783 x366)) (= x1386 x500) (= (< 115792089237316195423570985008687907853269984665640564039457 x1429) x2483) (= x2750 (> x1429 115792089237316195423570985008687907853269984665640564039457)) (= x1040 x4847) (<= 0 x3299) (= (div x4840 1000000000000000000) x1386) (= x3342 x3361)) x1345)) (and (= x1345 (< x1429 x1364)) (= (* x242 x190) x1646) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x242 x190)) (= (x1013 (x3182 x3626) (x3187 159) 0) x1886) (= x1429 x3361) (= x1364 (div x1646 1000000000000000000)) (= (x1013 (x3182 x3502) x1886 0) x443) (not (< x3361 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x190) (<= 0 x190) (= (x1007 x2478) x190) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x3626) (= (x1324 x443 1) x2478))) x760) x235))))
(assert (x2185 x2696))
(assert (x2185 x3226))
(assert (x3909 x4269))
(assert (x2185 x488))
(assert (x2185 x2165))
(assert (= (and x3856 (not x2059)) x992))
(assert (x2185 x3101))
(assert (x2185 x2031))
(assert (= x2025 (=> (and (= x4654 (ite (< x4223 x2270) (not (= x4877 0)) (> x2270 x4223))) (or (and x4654 (and (or (and x4246 (and (= x4232 (x1013 (x3182 x3502) x1347 0)) (>= x3866 0) (= x1333 (x1324 x4232 1)) (= (x1324 x1333 1) x2414) (> 1461501637330902918203684832716283019655932542976 x3866) (= x3827 x2938) (= (x227 (+ 96 x1231)) x2938) (= (x1013 (x3182 x4877) x1347 0) x4108) (= x3622 (x1013 (x3182 x4877) x1347 0)) (= x3962 (x1324 x640 1)) (= (x1013 (x3182 x3866) x1347 0) x640) (<= x3866 1461501637330902918203684832716283019655932542975) (= x3866 (x3169 x3622)))) (and (and (= (x1013 (x3182 x4877) x1347 0) x211) (= x4495 (x1324 x1514 1)) (= x2195 (x1013 (x3182 x3502) x1347 0)) (= x1514 (x1324 x2195 1)) (= x1869 (x227 (+ x1231 96))) (= x1869 x3827)) (not x4246))) (and (< x3845 1461501637330902918203684832716283019655932542976) (= x3845 (x4141 x1727)) (= (x2214 (- x4877 x3845)) x3055) (>= 1461501637330902918203684832716283019655932542975 x3845) (<= 0 x3845) (= (> x3055 0) x4246)))) (and (and (and (= x3391 (x4141 x1727)) (> 1461501637330902918203684832716283019655932542976 x3391) (>= x3391 0) (>= 1461501637330902918203684832716283019655932542975 x3391) (= (= x3391 0) x272)) (or (and (not x272) (and (<= 0 x932) (= (x1013 (x3182 x3502) x1347 0) x326) (= x552 (x227 (+ x1231 96))) (= x14 (x1013 (x3182 x932) x1347 0)) (<= x932 1461501637330902918203684832716283019655932542975) (= (x3260 x3076) x932) (= (x1324 x1727 1) x3076) (= x552 x3827) (= (x1324 x14 1) x422) (= x1614 (x1324 x326 1)) (< x932 1461501637330902918203684832716283019655932542976) (= (x1324 x1614 1) x2948))) (and (and (= x822 (x1324 x1727 1)) (= x1265 (x227 (+ 96 x1231))) (= (x1013 (x3182 x3502) x1347 0) x3757) (= x2720 (x1324 x3757 1)) (= (x1324 x2720 1) x1036) (= x3827 x1265)) x272))) (not x4654)))) x1534)))
(assert (= (and x355 (not x4892)) x3933))
(assert (x2185 x798))
(assert (x2185 x4636))
(assert (x2185 x1940))
(assert (x516 x3220))
(assert (x2185 x377))
(assert (= x639 (x862 (x3182 x639))))
(assert (= (x862 (x3182 x2384)) x2384))
(assert (x2185 x2663))
(assert (= (x862 (x3182 x3866)) x3866))
(assert (x2185 x440))
(assert (= (+ (x862 x3302) 2) (x862 (x1324 x3302 2))))
(assert (=> (>= 10000 x3502) (= (x3187 x3502) (x3182 x3502))))
(assert (x2185 x4543))
(assert (x2185 x4253))
(assert (x2185 x20))
(assert (x2185 x2577))
(assert (x2185 x4159))
(assert (= (=> (and (= x1457 0) (= x4575 x3975)) x178) x2020))
(assert (= x738 (or x2771 x4496 x1139 x4034 x1977 x3531)))
(assert (=> (<= x3503 10000) (= (x3187 x3503) (x3182 x3503))))
(assert (x2185 x1404))
(assert (x2185 x4814))
(assert (= (and x4500 x3441) x3100))
(assert (x2185 x2247))
(assert (x2185 x1769))
(assert (=> (>= 10000 x3866) (= (x3182 x3866) (x3187 x3866))))
(assert (= x96 (and x912 (not x4449))))
(assert (= x3148 (x862 (x3182 x3148))))
(assert (= (x862 (x1324 x4552 1)) (+ (x862 x4552) 1)))
(assert (x2185 x4053))
(assert (= (x862 (x1324 x1396 1)) (+ (x862 x1396) 1)))
(assert (= (and x4908 (not x1284)) x4325))
(assert (x2185 x1395))
(assert (x2185 x4007))
(assert (x2185 x1379))
(assert (= (and x1178 x4893) x2073))
(assert (= (and x4243 (not x4420)) x1258))
(assert (x2185 x1440))
(assert (x2185 x4501))
(assert (= (or x3311 x4213) x4217))
(assert (= x999 (and (not x4566) x3679)))
(assert (= (x862 (x3182 x3131)) x3131))
(assert (= x557 (x862 (x3182 x557))))
(assert (= x4563 (and (not x1548) x4299)))
(assert (= 157198259 (x862 (x3187 157198259))))
(assert (x2185 x2497))
(assert (x2870 x71))
(assert (x2185 x624))
(assert (x2185 x4862))
(assert (= x163 (or x1866 x22 x3979 x3324 x4626 x2434)))
(assert (x2185 x2763))
(assert (= (and x4097 x1643) x4782))
(assert (= (and (not x4507) x4217) x5))
(assert (= x4292 (and x2068 x3736)))
(assert (= (and x2629 x1174) x2353))
(assert (= (and x4352 x81) x1898))
(assert (= (or x1781 x4307 x2832 x3957 x1598 x4787) x3332))
(assert (x2185 x3836))
(assert (x2185 x4320))
(assert (= x1290 (or x3086 x1863)))
(assert (x2185 x234))
(assert (= (=> (and (= x831 (= 0 x573)) (or x831 (not x831))) x1536) x3248))
(assert (= x2985 (x862 (x3182 x2985))))
(assert (x2185 x676))
(assert (= (or (and (not x3005) x2846) x2953) x3428))
(assert (= x4076 (and (not x750) x4297)))
(assert (x2185 x3080))
(assert (= (x862 (x3182 x3398)) x3398))
(assert (= (and (not x1269) x2521) x2079))
(assert (x2185 x930))
(assert (x2185 x32))
(assert (x2185 x1475))
(assert (= (and x4017 x3121) x4479))
(assert (x2185 x3077))
(assert (= (and x4273 x4308) x3448))
(assert (x2185 x1191))
(assert (= x3510 (and (not x4044) x1383)))
(assert (x2185 x929))
(assert (x2185 x4914))
(assert (x2185 x4591))
(assert (x2870 x3937))
(assert (= (and x1844 (not x4837)) x4788))
(assert (x2185 x2163))
(assert (x3909 x536))
(assert (x2185 x1048))
(assert (=> (>= 10000 x4143) (= (x3187 x4143) (x3182 x4143))))
(assert (x2185 x1768))
(assert (x2185 x1578))
(assert (= (and x4398 x621) x1958))
(assert (x2185 x4414))
(assert (= (x862 (x1324 x1867 1)) (+ (x862 x1867) 1)))
(assert (x3909 x1558))
(assert (x2185 x2058))
(assert (= x3346 (and x1600 x3305)))
(assert (x2185 x4582))
(assert (x2185 x2365))
(assert (x2870 x3593))
(assert (= x715 (and x2728 x953)))
(assert (x2185 x943))
(assert (= (=> (= x1299 (< 0 x3998)) (and (=> (and x1299 (and (or (and (and (= x3415 (x2258 (x3182 x3937))) (< 0 x3415) (= x4346 405663989) (not (> 405663989 x4346)) (= x4862 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= 4 x938) (= x2563 1) (= x2619 x938) (< x4346 2217467699) (not (> 4 x938)) (> 988262939 x4346) (= 32 x2162)) x53) (and (not x53) (and (= (= x4413 x2866) x3497) (or (and x3497 (and (= x2619 x459) (> 988262939 x1769) (> x2051 0) (not (< x1769 405663989)) (= 4 x459) (= (x2258 (x3182 x4413)) x2051) (= x1769 405663989) (= x2162 32) (= x2563 1) (not (< x459 4)) (> 2217467699 x1769) (= x2753 10936679508223583803006762266923565500374401145016910147028117655998246682624))) (and (and (and x50 (and (= 1 x2563) (not (> 405663989 x1395)) (< 0 x421) (= x1395 405663989) (= (x2258 (x3182 x759)) x421) (not (> 4 x1872)) (= x2162 32) (= x1872 4) (= x3382 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= x2619 x1872) (< x1395 988262939) (> 2217467699 x1395))) (= (= x759 x2866) x50)) (not x3497)))))) (and (= x2619 4) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x2866) (= (= x2866 x3937) x53)))) x2433) (=> (not x1299) x4795))) x4248))
(assert (= (+ (x862 x1567) 1) (x862 (x1324 x1567 1))))
(assert (x2185 x3381))
(assert (x2185 x2891))
(assert (= (and x413 (not x4796)) x2009))
(assert (x2185 x1437))
(assert (= (=> (and (= (ite (< x2861 x2270) (not (= x1113 0)) (< x2861 x2270)) x953) (or (and (and (and (= (> x4151 0) x2052) (> 1461501637330902918203684832716283019655932542976 x4425) (= (x3029 x3269) x4425) (<= x4425 1461501637330902918203684832716283019655932542975) (= (x2214 (- x1113 x4425)) x4151) (>= x4425 0)) (or (and (and (= x3517 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= x3249 (x1013 (x3182 x1113) x1847 0)) (<= x4207 1461501637330902918203684832716283019655932542975) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x917) (> 1461501637330902918203684832716283019655932542976 x4207) (= x4801 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (<= 0 x4207) (= x4207 (x2138 x3249))) x2052) (and (not x2052) (and (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x1419) (= x2190 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= x3635 (x3232 1461501637330902918203684832716283019655932542975 x3760)))))) x953) (and (not x953) (and (or (and (not x3310) (and (<= 0 x2104) (= x2345 (x1324 x3269 1)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x839) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x4668) (= x2104 (x1489 x2345)) (>= 1461501637330902918203684832716283019655932542975 x2104) (> 1461501637330902918203684832716283019655932542976 x2104) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x4790))) (and (and (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x1602) (= x1404 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x814)) x3310)) (and (> 1461501637330902918203684832716283019655932542976 x4855) (= x4855 (x3029 x3269)) (<= 0 x4855) (= x3310 (= 0 x4855)) (>= 1461501637330902918203684832716283019655932542975 x4855)))))) x3385) x4245))
(assert (x2185 x1796))
(assert (= (+ (x862 x1072) 2) (x862 (x1324 x1072 2))))
(assert (= (and x665 (not x1652)) x1087))
(assert (x2185 x4127))
(assert (x2870 x3396))
(assert (x3909 x4712))
(assert (= x1687 (and x1410 x2983)))
(assert (x2185 x446))
(assert (= (+ 2 (x862 x2016)) (x862 (x1324 x2016 2))))
(assert (= x1360 (and (not x4163) x4791)))
(assert (= (and x3846 x299) x4152))
(assert (= (x862 (x1324 x4232 1)) (+ (x862 x4232) 1)))
(assert (= x132 (and (=> (and (not x3364) (and (= 1 x3878) (= x565 x4581))) x2108) (=> (and (and (= x565 x4311) (= x312 x1396) (= x184 x1750)) x3364) x4883))))
(assert (x2185 x1798))
(assert (x2185 x2348))
(assert (= x108 (and (not x1903) x2765)))
(assert (= x2011 (and x4310 x681)))
(assert (= (or x1003 x730) x4781))
(assert (= (+ 1 (x862 x842)) (x862 (x1324 x842 1))))
(assert (= (and x3499 x4233) x1453))
(assert (x2185 x4064))
(assert (x2185 x533))
(assert (=> (<= x1765 10000) (= (x3182 x1765) (x3187 x1765))))
(assert (= (x862 (x1324 x4176 1)) (+ (x862 x4176) 1)))
(assert (= (and x4237 x462) x1167))
(assert (= x251 (=> (and (= x4105 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= (x1013 (x3182 x4105) x2764 0) x1867) (= (x1324 x1867 1) x1955) (= x1497 (x1324 x1955 1))) x1926)))
(assert (x2185 x461))
(assert (x2185 x3522))
(assert (= x342 (and x4875 x2277)))
(assert (x2185 x264))
(assert (= (=> (and (= x2686 x454) (= x1843 x2536)) x4197) x4646))
(assert (x2185 x1918))
(assert (x2870 x976))
(assert (= (=> (and (= 0 x1881) (= x2173 x2163)) x3205) x2377))
(assert (x2185 x1608))
(assert (= (+ (x862 x983) 1) (x862 (x1324 x983 1))))
(assert (x2870 x2031))
(assert (= (and x2116 x1912) x3881))
(assert (=> (<= x3498 10000) (= (x3187 x3498) (x3182 x3498))))
(assert (x2185 x1603))
(assert (= (and (not x1299) x3621) x574))
(assert (=> (<= x932 10000) (= (x3187 x932) (x3182 x932))))
(assert (= (x3187 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x3182 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x2185 x698))
(assert (= (and x4328 x1810) x2807))
(assert (x2185 x2888))
(assert (x2185 x1150))
(assert (= (=> (and (= x4685 x4269) (= x3806 x4848)) x4250) x2667))
(assert (= x3385 x4015))
(assert (x2185 x2101))
(assert (x2185 x1135))
(assert (x2185 x2875))
(assert (x2185 x1490))
(assert (x2185 x2164))
(assert (x2870 x4288))
(assert (x2185 x941))
(assert (= x3659 (and x3903 x3170)))
(assert (x2185 x3989))
(assert (= x401 (and x718 x4586)))
(assert (x3909 x4594))
(assert (x2185 x2104))
(assert (= (and x373 x3554) x4858))
(assert (x2870 x2171))
(assert (= (or (and x1196 (not x1776)) x2182) x413))
(assert (= (and x1354 x4530) x823))
(assert (x2185 x684))
(assert (= (and x4639 x2840) x2890))
(assert (x2185 x356))
(assert (x2185 x4235))
(assert (x2185 x3445))
(assert (=> (<= x3312 10000) (= (x3187 x3312) (x3182 x3312))))
(assert (= x3019 (and (not x3470) x397)))
(assert (x2185 x737))
(assert (x2185 x3222))
(assert (x2185 x563))
(assert (= x4222 (and x187 x1761)))
(assert (= (and x4211 x3959) x120))
(assert (= x2235 (and x2752 x3573)))
(assert (x2185 x1584))
(assert (= (or x2735 (and x323 (not x2191)) (and x933 x2702) x3881 (and x4677 x194) (and x722 x83) (and x472 (not x3580)) (and x2266 x904) x369) x2952))
(assert (x2870 x2869))
(assert (x2870 x4082))
(assert (= x1257 (=> (and (= x4611 x4817) (= 0 x3298)) x4438)))
(assert (= x293 (and (not x830) x399)))
(assert (x2870 x4580))
(assert (x2185 x1500))
(assert (x2185 x4149))
(assert (= (and (not x4293) x4512) x3709))
(assert (x2870 x3148))
(assert (x2185 x721))
(assert (= (or (and (not x1610) x3656) x2504) x1342))
(assert (= x599 (=> (and (= x454 0) (= x1190 x2536)) x4646)))
(assert (x2185 x4470))
(assert (x2185 x3278))
(assert (=> (<= x2408 10000) (= (x3182 x2408) (x3187 x2408))))
(assert (= (=> (= x2670 (= x4636 0)) (and (=> (and (= x3166 (or (and (= (<= x3598 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3598 32)) (> x3598 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x2670)) (and (=> (and (= x2908 x2606) x3166) x4219) (=> (and (not x3166) (and (= x2729 x4532) (= x2908 x2044) (= 1 x3074))) x1968))) (=> (and (= x2908 x2606) x2670) x4219))) x1047))
(assert (x2185 x2648))
(assert (= x4024 (or x4114 x1923)))
(assert (x2185 x3732))
(assert (= x4445 (x862 (x3182 x4445))))
(assert (= (and (not x3491) x999) x1810))
(assert (x2185 x3611))
(assert (x2185 x4614))
(assert (x2185 x3919))
(assert (= x2717 x267))
(assert (x2185 x1856))
(assert (= (and x2099 (not x3228)) x4184))
(assert (= (=> (and (= 0 x43) (= x1114 x2724)) x3698) x4390))
(assert (x2185 x4596))
(assert (x2185 x551))
(assert (= (=> (and (= x774 x1725) (= x2607 x2517)) x1754) x4754))
(assert (x2870 x2648))
(assert (=> (<= x186 10000) (= (x3182 x186) (x3187 x186))))
(assert (= (and x381 x2073) x1566))
(assert (x2185 x123))
(assert (=> (<= x1202 10000) (= (x3187 x1202) (x3182 x1202))))
(assert (x2185 x1914))
(assert (= x614 (=> (and (= x558 x3297) (= (x538 x335) x4833) (= (x227 (+ 31 x3204)) x1914) (= 0 x4833) (= x3547 x3136) (not (or (and (< x3204 32) (= true (<= x3204 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3204 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x3232 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1914) x1803) (not (= x1434 0)) (= x3297 (x227 (+ x1803 x335))) (= x2875 x1151) (= x726 x2671)) x1392)))
(assert (= x4003 (and (not x4010) x4362)))
(assert (= x3999 (and x3449 (not x1965))))
(assert (x2185 x560))
(assert (= x4516 (and x2513 (not x742))))
(assert (= (+ 2 (x862 x1347)) (x862 (x1324 x1347 2))))
(assert (x2870 x1030))
(assert (= x1498 (and x3014 x650)))
(assert (x2185 x664))
(assert (= (and x3135 x2095) x3085))
(assert (= (or x1159 x3558 x3728 x2048 x1017 x4339) x973))
(assert (x3909 x3961))
(assert (x2185 x1728))
(assert (x2185 x2290))
(assert (= x188 (=> (and (= (= x1876 0) x3231) (or (and (not x3231) (= x2793 (x1013 (x3182 x1876) x3304 0))) (and (= x363 (x1324 x3304 2)) x3231))) x1172)))
(assert (= (or x308 x597) x907))
(assert (= (+ (x862 x817) 1) (x862 (x1324 x817 1))))
(assert (x2185 x1551))
(assert (x2185 x1753))
(assert (= (and x1334 (not x1406)) x2131))
(assert (= x1426 (and x718 (not x4586))))
(assert (x2185 x222))
(assert (x2185 x4455))
(assert (x2185 x3770))
(assert (x2185 x3699))
(assert (= (and x751 x1985) x487))
(assert (= (=> (and (or (and (not x1928) (= x469 (x1013 (x3182 x2463) x2764 0))) (and x1928 (= (x1324 x2764 2) x3629))) (= x1928 (= 0 x2463))) x251) x2784))
(assert (x2185 x4799))
(assert (= (and (not x1092) x756) x3213))
(assert (= (+ (x862 x2282) 1) (x862 (x1324 x2282 1))))
(assert (= x3742 (and x1958 x1233)))
(assert (= x1201 (and x4252 x3855)))
(assert (x2185 x2024))
(assert (= (+ (x862 x4272) 1) (x862 (x1324 x4272 1))))
(assert (x2185 x3133))
(assert (x2185 x2734))
(assert (x2185 x3993))
(assert (= (x862 (x3187 2030502250)) 2030502250))
(assert (x2185 x884))
(assert (= x2801 (=> (and (or (and (and (not (= x4907 0)) (<= x1099 1461501637330902918203684832716283019655932542975) (<= 0 x1099) (= (x2258 (x3182 x1099)) x4907) (> 1461501637330902918203684832716283019655932542976 x1099) (> 4294967296 x4492)) (not x2076)) x2076) (and (> 1461501637330902918203684832716283019655932542976 x1099) (<= x1099 1461501637330902918203684832716283019655932542975) (>= x1099 0) (= x2076 (= x1099 0)))) x824)))
(assert (x2185 x1231))
(assert (= (=> (and (= 0 x4820) (= x2061 x2638)) x864) x1023))
(assert (= x3720 (or x3397 x342 x4486 x2804 x2407 x2489)))
(assert (= (x862 (x1324 x3729 1)) (+ (x862 x3729) 1)))
(assert (x2185 x4306))
(assert (= (and x1971 (not x3320)) x4088))
(assert (= x321 (and x150 x310)))
(assert (= x2578 (and x4341 x3992)))
(assert (x2185 x1113))
(assert (= (and x509 x4776) x543))
(assert (x2185 x3883))
(assert (x2185 x3289))
(assert (x2185 x4291))
(assert (x3909 x1500))
(assert (= (x3182 2678788150) (x3187 2678788150)))
(assert (x2185 x523))
(assert (x2185 x4838))
(assert (= x1564 (and (not x4744) x1293)))
(assert (x2185 x3683))
(assert (x2185 x1860))
(assert (x2185 x3074))
(assert (= (=> (= x1133 (= 0 x4124)) (and (=> (and x1133 (= x3910 x941)) x285) (=> (and (= x1690 (or (and (< x1813 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1813))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1813))) (not x1133)) (and (=> (and x1690 (= x941 x3910)) x285) (=> (and (and (= x1680 32) (= x3910 x2926) (= x1787 1)) (not x1690)) x1877))))) x3114))
(assert (x2185 x886))
(assert (= (and (not x1133) x4441) x1417))
(assert (x2185 x1526))
(assert (x2185 x2027))
(assert (x2870 x1384))
(assert (x2185 x4857))
(assert (= (or x878 x1658) x2102))
(assert (= x2547 (and (not x1002) x4781)))
(assert (= (x862 (x3182 x889)) x889))
(assert (= x1781 (and x191 (not x2126))))
(assert (x2185 x1260))
(assert (x2185 x2865))
(assert (= (x862 (x3187 18446744073709551615)) 18446744073709551615))
(assert (x2185 x4903))
(assert (= x2589 (and x2960 x2496)))
(assert (= x2064 (and (not x3030) x2964)))
(assert (x2870 x2773))
(assert (x2185 x2304))
(assert (x2185 x4288))
(assert (x2185 x4289))
(assert (=> (<= x3173 10000) (= (x3187 x3173) (x3182 x3173))))
(assert (= (x862 (x3182 x182)) x182))
(assert (x2185 x1398))
(assert (= (=> (and (= x2390 x3965) (= x2891 x3378)) x3792) x4870))
(assert (= x3887 (and x646 x1566)))
(assert (x2185 x3488))
(assert (= x384 (or x2890 x2418)))
(assert (x2185 x2860))
(assert (= (and x518 x4049) x1234))
(assert (= x1517 (and (not x444) x394)))
(assert (x2185 x1915))
(assert (x2185 x1315))
(assert (= x3096 (and (not x2620) x3060)))
(assert (x2185 x971))
(assert (= (and (not x133) x3045) x2207))
(assert (x2185 x3230))
(assert (x2185 x976))
(assert (= x4911 (and (not x919) x1664)))
(assert (x2185 x3802))
(assert (x2185 x792))
(assert (x2185 x2668))
(assert (= (and x3668 x2814) x3957))
(assert (x2185 x765))
(assert (= x4708 (and x3320 x1971)))
(assert (x2185 x2650))
(assert (= (x862 (x1324 x1296 1)) (+ 1 (x862 x1296))))
(assert (x2185 x3123))
(assert (= (x862 (x3182 x4687)) x4687))
(assert (= (and x2233 x4072) x1607))
(assert (x2185 x3823))
(assert (x3909 x1881))
(assert (=> (>= 10000 x4481) (= (x3182 x4481) (x3187 x4481))))
(assert (= (or x4782 x641 (and (not x3925) x3515) (and x3286 x3821) (and (not x4259) x2659) (and x2677 x1935)) x389))
(assert (x2185 x1895))
(assert (x2870 x2593))
(assert (x2185 x4693))
(assert (x2185 x2203))
(assert (x613 x3732))
(assert (x2870 x4063))
(assert (x2870 x4920))
(assert (x2185 x2999))
(assert (x2185 x836))
(assert (x2185 x3044))
(assert (= (and (not x4852) x590) x2851))
(assert (x2185 x3514))
(assert (x2185 x2852))
(assert (x2185 x3878))
(assert (x2185 x1787))
(assert (x2185 x2950))
(assert (= false x824))
(assert (x2185 x2900))
(assert (x2185 x2463))
(assert (x2185 x1653))
(assert (x2870 x3677))
(assert (= x4795 (=> (and (and (= (x1013 (x3182 x4687) (x3187 154) 0) x2764) (= (x1013 (x3182 x2514) (x3187 158) 0) x4485) (= (x1836 x1587) x3143) (= x1847 (x1013 (x3182 x340) (x3187 155) 0)) (<= 0 x3143) (<= x1657 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x186) x4485 0) x2821) (= x2514 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (>= x1657 0) (= x1118 (< x3730 x3145)) (= x1657 (x1891 x2821)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x2648) (= x186 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= (x1013 (x3182 x2648) x2764 0) x506) (= x847 (x1324 x2821 1)) (= (x1324 x1677 2) x3600) (= x4687 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= x3145 (x987 x847)) (= x3312 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (<= x3730 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x3143 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x3145 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2166 x3600) x2380) (>= x2380 0) (= (x1324 x506 2) x1587) (= (x1013 (x3182 x3312) x1847 0) x1677) (>= x3730 0) (= x340 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (<= 0 x3145) (<= x2380 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and (= x3145 x2695) x1118) (and (not x1118) (= 0 x2695)))) x3766)))
(assert (x3909 x2232))
(assert (x2185 x1683))
(assert (= (and x4788 x2448) x4732))
(assert (= (or x1936 x4917) x1945))
(assert (x2185 x2232))
(assert (= (and x4641 (not x2582)) x4114))
(assert (x2185 x1579))
(assert (= x2593 (x862 (x3182 x2593))))
(assert (x2185 x3466))
(assert (= x359 (and x423 x4004)))
(assert (= x4048 (and x2227 x3619)))
(assert (x2185 x3518))
(assert (x2185 x1701))
(assert (= (=> (and (or (and (= x3540 x3576) (not x3576)) (and (and (= x651 (x1964 x4878)) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x1064) (= (= 0 x651) x3540) (<= 0 x651) (<= x651 255) (> 256 x651) (= (x1013 (x3182 x1064) (x3187 163) 0) x4878)) x3576)) (= (< 0 x3361) x3576)) x309) x4651))
(assert (x2185 x4602))
(assert (x2185 x1202))
(assert (= (x862 (x3187 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x2185 x3197))
(assert (x2185 x1046))
(assert (x2185 x3425))
(assert (x2185 x1033))
(assert (= x3695 (and x3512 x1969)))
(assert (x2185 x4173))
(assert (=> (>= 10000 x2244) (= (x3187 x2244) (x3182 x2244))))
(assert (= (and x672 x2009) x796))
(assert (= x2924 (and x3411 x850)))
(assert (= (=> (and (= 0 x1785) (= x286 x4699)) x2645) x920))
(assert (= (=> (and (= x510 x4636) (= x4283 x3598)) x2639) x3105))
(assert (x2185 x924))
(assert (= (and x2615 (not x2351)) x1316))
(assert (x2185 x1336))
(assert (x2185 x4425))
(assert (x2185 x4195))
(assert (= x1953 (and (not x2425) x779)))
(assert (x2185 x4060))
(assert (=> (<= x3789 10000) (= (x3182 x3789) (x3187 x3789))))
(assert (= x3223 (x862 (x3182 x3223))))
(assert (= (and x191 x2126) x373))
(assert (= (and x1764 (not x4550)) x3347))
(assert (x2185 x2843))
(assert (x2185 x3935))
(assert (x2185 x4392))
(assert (= (x862 (x3182 x3652)) x3652))
(assert (= (or x3950 x2547) x3436))
(assert (=> (>= 10000 x2397) (= (x3182 x2397) (x3187 x2397))))
(assert (x2870 x348))
(assert (= (and x2201 x2967) x2309))
(assert (= x4174 (and (not x1181) x3507)))
(assert (= x2297 (and x4072 (not x2233))))
(assert (x2185 x3657))
(assert (= x3060 (or x156 x4202)))
(assert (x2185 x3651))
(assert (x2185 x3048))
(assert (=> (<= x1415 10000) (= (x3182 x1415) (x3187 x1415))))
(assert (= x1528 (and x3715 x4900)))
(assert (= x4284 (and (not x4437) x4037)))
(assert (= (and x4765 x2131) x1539))
(assert (x2185 x723))
(assert (= x477 (=> (and (= x448 x531) (= 0 x2170)) x3819)))
(assert (= (x862 (x1324 x2368 1)) (+ (x862 x2368) 1)))
(assert (x2185 x3206))
(assert (= x3685 (x862 (x3182 x3685))))
(assert (x2185 x2713))
(assert (= (and x3977 x4540) x696))
(assert (x3909 x664))
(assert (= (and x1703 (not x1001)) x187))
(assert (x2185 x2034))
(assert (x2870 x1876))
(assert (= x1331 (and x3530 x4755)))
(assert (x2185 x3745))
(assert (=> (<= x4194 10000) (= (x3187 x4194) (x3182 x4194))))
(assert (= (and (not x1436) x430) x3574))
(assert (x2870 x2135))
(assert (= (and x1187 x2184) x1941))
(assert (= x2071 (and x4325 x1522)))
(assert (x2185 x3416))
(assert (= x1879 (and x3995 x3709)))
(assert (x2185 x2602))
(assert (= x4105 (x862 (x3182 x4105))))
(assert (= (and x4803 x2109) x4746))
(assert (= (and x1998 (not x1527)) x2291))
(assert (= x2501 (and x3929 x4674)))
(assert (x2185 x834))
(assert (x2870 x3312))
(assert (= x1253 (=> (= x3083 x2759) x3511)))
(assert (x2185 x3963))
(assert (= (x862 (x1324 x2490 2)) (+ (x862 x2490) 2)))
(assert (x2185 x3033))
(assert (x2185 x3502))
(assert (= x4190 (and x713 (not x4095))))
(assert (= (and x4785 (not x1446)) x875))
(assert (= x748 (and x4017 (not x3121))))
(assert (x2185 x4144))
(assert (x2870 x2690))
(assert (= (and x3017 x2570) x3726))
(assert (x2185 x1102))
(assert (x2185 x749))
(assert (x2185 x4182))
(assert (x2185 x2740))
(assert (x2185 x4212))
(assert (x2185 x2215))
(assert (x2185 x502))
(assert (x2185 x106))
(assert (x2185 x1041))
(assert (x2185 x2829))
(assert (x2185 x4687))
(assert (= x2002 (and x2733 x215)))
(assert (= (and (not x4503) x4508) x310))
(assert (=> (>= 10000 x3652) (= (x3187 x3652) (x3182 x3652))))
(assert (x2185 x1784))
(assert (x2185 x3906))
(assert (= (and x2670 x3250) x890))
(assert (= (and (not x4230) x2451) x1790))
(assert (= x2472 (=> (= x2712 (= x4716 x2561)) (and (=> (and (= x2550 (< 0 x2561)) (not x2712)) (and (=> (not x2550) x1294) (=> (and x2550 (and (and (<= x869 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 0 x869)) (> 1461501637330902918203684832716283019655932542976 x1876) (= (x1324 x3756 1) x2981) (= (= x3408 0) x1348) (= x869 (x128 x2981)) (>= 1461501637330902918203684832716283019655932542975 x1876) (= (x60 x3746) x3408) (<= x3408 1461501637330902918203684832716283019655932542975) (>= x3408 0) (<= 0 x869) (= (x4610 x3756) x1876) (= x3756 (x1324 x3746 1)) (= (x1013 (x3182 x728) x3304 0) x3746) (> 1461501637330902918203684832716283019655932542976 x3408) (<= 0 x1876)) (or (and x1348 (= x852 (x1324 x3304 1))) (and (and (= x2368 (x1013 (x3182 x3408) x3304 0)) (= x2352 (x1324 x2368 1))) (not x1348))))) x188))) (=> x2712 x2801)))))
(assert (x2870 x1999))
(assert (= (and x2520 x247) x3441))
(assert (= (=> (= (= x485 x2518) x1001) (and (=> x1001 x2717) (=> (and (not x1001) (= (> x485 0) x1761)) (and (=> (not x1761) x2912) (=> (and (and (and (> 1461501637330902918203684832716283019655932542976 x4691) (= x4691 (x4333 x2599)) (= (x1324 x2599 1) x3167) (= (x806 x3167) x3357) (<= x2690 1461501637330902918203684832716283019655932542975) (= (x1013 (x3182 x728) x1396 0) x4469) (= (x1324 x4469 1) x2599) (>= x3357 0) (> 1461501637330902918203684832716283019655932542976 x2690) (= x2787 (= x2690 0)) (not (= 0 x3357)) (>= x2690 0) (<= x3357 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x4691 1461501637330902918203684832716283019655932542975) (<= 0 x4691) (= x2690 (x2564 x4469))) (or (and (= x4268 (x1324 x1396 1)) x2787) (and (not x2787) (and (= x126 (x1013 (x3182 x2690) x1396 0)) (= (x1324 x126 1) x1465))))) x1761) x4324))))) x3556))
(assert (x2185 x3904))
(assert (x2185 x4879))
(assert (= x4309 (and x3603 x4806)))
(assert (= (x862 (x3182 x71)) x71))
(assert (= (x862 (x3187 35417553099779373699389112480655434059402432070290151981503827724506945814528)) 35417553099779373699389112480655434059402432070290151981503827724506945814528))
(assert (= (and x195 (not x1456)) x4785))
(assert (= x776 (and x1028 x2980)))
(assert (=> (>= 10000 x3323) (= (x3187 x3323) (x3182 x3323))))
(assert (= (and (not x1733) x96) x547))
(assert (= x1484 (and x4464 (not x1502))))
(assert (= x995 (=> (and (= x2993 x988) (= x2365 x1796)) x3908)))
(assert (= (=> (and (= x286 x1813) (= x4124 x1785)) x1344) x2645))
(assert (= (and x1200 (not x2146)) x4265))
(assert (= x171 (x862 (x3182 x171))))
(assert (= x681 (and x1665 x223)))
(assert (=> (<= x1384 10000) (= (x3187 x1384) (x3182 x1384))))
(assert (x2185 x1698))
(assert (= x478 (and x3412 (not x2933))))
(assert (x2185 x1989))
(assert (= x1177 (and x2941 x3926)))
(assert (= (+ (x862 x1327) 1) (x862 (x1324 x1327 1))))
(assert (x2185 x4121))
(assert (= (x862 (x1324 x1248 2)) (+ (x862 x1248) 2)))
(assert (= x2403 (x862 (x3182 x2403))))
(assert (x2185 x4480))
(assert (= (and x3680 (not x4890)) x665))
(assert (= (and x4047 x4619) x1098))
(assert (x2185 x3981))
(assert (= x303 (and x3663 x4579)))
(assert (= x3879 (and x2181 x4317)))
(assert (= x955 (=> (and (= x4848 x4365) (= x1755 x4269)) x4250)))
(assert (x2185 x1617))
(assert (= x912 (and x297 (not x1387))))
(assert (= x4027 (or x776 x4918)))
(assert (=> (<= x4311 10000) (= (x3182 x4311) (x3187 x4311))))
(assert (x2870 x2244))
(assert (x2185 x3480))
(assert (x2185 x4387))
(assert (x2185 x2499))
(assert (x2185 x984))
(assert (= (or x2111 x2002) x931))
(assert (x2185 x3760))
(assert (= x2099 (and x931 (not x3485))))
(assert (= x1882 (and x3880 (not x900))))
(assert (x2185 x3410))
(assert (x2185 x2219))
(assert (x2185 x2729))
(assert (x2185 x1352))
(assert (x2870 x4891))
(assert (x2185 x4290))
(assert (= (and x3268 x3467) x1633))
(assert (= x2221 (and x3470 x397)))
(assert (x2185 x3137))
(assert (= x2698 (and x2895 x4730)))
(assert (x2185 x1533))
(assert (x2185 x296))
(assert (= x4748 (and x2807 (not x183))))
(assert (= x387 (and (not x4205) x3295)))
(assert (x2185 x3915))
(assert (= (x862 (x3182 x4214)) x4214))
(assert (x2185 x4169))
(assert (x2185 x1306))
(assert (x2185 x2242))
(assert (x2185 x3552))
(assert (= x1765 (x862 (x3182 x1765))))
(assert (= x3770 (x862 (x3182 x3770))))
(assert (x2185 x2447))
(assert (= (x862 (x3182 x1030)) x1030))
(assert (= x4012 (and x3449 x1965)))
(assert (x2185 x1128))
(assert (= (x862 (x3182 x91)) x91))
(assert (= (and x124 x287) x3787))
(assert (= (or x2022 x1063) x2355))
(assert (= (+ (x862 x3304) 1) (x862 (x1324 x3304 1))))
(assert (x2185 x532))
(assert (= (x862 (x3187 10936679508223583803006762266923565500374401145016910147028117655998246682624)) 10936679508223583803006762266923565500374401145016910147028117655998246682624))
(assert (x2870 x1099))
(assert (x2185 x181))
(assert (= x4100 (and x3231 x134)))
(assert (= x2521 (and x3848 x2141)))
(assert (x2185 x432))
(assert (= (or (and (not x1276) x1539) (and x1334 x1406) (and x2131 (not x4765)) x3006 (and x3201 x433) x2544) x2813))
(assert (x2185 x2465))
(assert (= x2311 (or x4200 x872)))
(assert (=> (<= x4687 10000) (= (x3182 x4687) (x3187 x4687))))
(assert (= x2293 (and (not x3707) x2217)))
(assert (x2185 x366))
(assert (= (and (not x724) x3889) x2830))
(assert (x2185 x1106))
(assert (= (and x756 x1092) x3868))
(assert (x2185 x2815))
(assert (x2185 x1820))
(assert (= x37 (and x1259 (not x2689))))
(assert (x2185 x4143))
(assert (=> (>= 10000 x4580) (= (x3187 x4580) (x3182 x4580))))
(assert (x2185 x2262))
(assert (= (and x2009 (not x672)) x3907))
(assert (x2185 x4671))
(assert (= x1709 (and (not x1086) x2589)))
(assert (x2185 x1704))
(assert (x2185 x1005))
(assert (= (=> (and (or (not x4663) x4663) (= x4663 (= 0 x4236))) x1634) x1655))
(assert (x2185 x2466))
(assert (x2185 x4723))
(assert (= x1182 (=> (and (= x561 0) (= x3886 x2139)) x2604)))
(assert (x2185 x974))
(assert (x2870 x932))
(assert (x2185 x4877))
(assert (x2185 x4625))
(assert (= (x862 (x3187 3842108676)) 3842108676))
(assert (x2870 x3323))
(assert (= (and x252 x918) x2050))
(assert (x2185 x1220))
(assert (x2870 x1113))
(assert (= (x862 (x1324 x640 1)) (+ 1 (x862 x640))))
(assert (= x4775 (or x3647 x2353 x1906 x2118 x435 x881)))
(assert (= (x3187 2929553584) (x3182 2929553584)))
(assert (= x1003 (and x3475 x3471)))
(assert (= (and (not x2706) x3468) x549))
(assert (x2185 x1186))
(assert (= (and (not x247) x2520) x1809))
(assert (= (and (not x3627) x1695) x3432))
(assert (x2185 x3509))
(assert (x2185 x3566))
(assert (x2185 x3160))
(assert (x2185 x4417))
(assert (x2185 x1732))
(assert (= (and (not x1271) x3726) x3603))
(assert (x2870 x3685))
(assert (x2185 x3054))
(assert (= x4159 (x862 (x3182 x4159))))
(assert (= x3433 (and (not x991) x3574)))
(assert (= x782 (and x3354 x3572)))
(assert (x2870 x1264))
(assert (= 1865448899 (x862 (x3187 1865448899))))
(assert (x2185 x4855))
(assert (x2185 x271))
(assert (x2185 x2061))
(assert (= x2494 (and (not x2210) x4050)))
(assert (= (and x1037 (not x3945)) x4017))
(assert (x2185 x4714))
(assert (x2185 x4657))
(assert (x2870 x2558))
(assert (= (and x1175 (not x1503)) x2346))
(assert (= x4115 (and x3100 x436)))
(assert (x2185 x9))
(assert (= x3490 (or x3214 x2789 x2421)))
(assert (x2185 x1194))
(assert (= x794 (x862 (x3182 x794))))
(assert (=> (<= x2479 10000) (= (x3187 x2479) (x3182 x2479))))
(assert (x2185 x3500))
(assert (= (x862 (x3182 x4481)) x4481))
(assert (= 2245473101 (x862 (x3187 2245473101))))
(assert (=> (>= 10000 x565) (= (x3187 x565) (x3182 x565))))
(assert (x2185 x3011))
(assert (x2185 x2877))
(assert (= x4193 (and (not x1213) x4013)))
(assert (x2185 x3126))
(assert (x2575 x1708))
(assert (= (and (not x1267) x82) x3017))
(assert (= (or x2709 x1433 x1826 x1763 x3879 x120) x2004))
(assert (= (x862 (x3182 x2135)) x2135))
(assert (= x3566 (x862 (x3182 x3566))))
(assert (x2185 x1016))
(assert (= x2208 (or x3586 x2636)))
(assert (x3909 x2165))
(assert (=> (>= 10000 x3237) (= (x3187 x3237) (x3182 x3237))))
(assert (= (x862 (x1324 x3931 1)) (+ 1 (x862 x3931))))
(assert (x2185 x1752))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x2683) (>= x2683 0) (= (x2214 (- x888 x2683)) x199) (= x888 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= (< 0 x199) x2234) (> 1461501637330902918203684832716283019655932542976 x2683)) (and (=> (and x2234 (and (or (and x743 (and (>= x3960 0) (= x1793 (x2258 (x3182 x3937))) (> 1461501637330902918203684832716283019655932542976 x3960) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x3883) (= x3474 1865448899) (not (> 988262939 x3474)) (= 4 x3666) (= 32 x4804) (not (= x3474 1857877511)) (>= 1461501637330902918203684832716283019655932542975 x3960) (not (= 1856199391 x3474)) (> 2217467699 x3474) (= 1 x2780) (= 4 x3666) (not (> 4 x3666)) (not (> 1856199391 x3474)) (< 0 x1793))) (and (not x743) (and (= (= x4413 x2348) x1580) (or (and x1580 (and (not (< x765 1856199391)) (= x765 1865448899) (not (= x765 1857877511)) (= x2780 1) (< x765 2217467699) (< x1772 1461501637330902918203684832716283019655932542976) (not (> 988262939 x765)) (<= 0 x1772) (= x1766 50292402827334880472107169365697159231523039388532301717704428044325102813184) (= x2834 (x2258 (x3182 x4413))) (> x2834 0) (= 4 x1042) (= x1042 4) (= 32 x4804) (>= 1461501637330902918203684832716283019655932542975 x1772) (not (> 4 x1042)) (not (= 1856199391 x765)))) (and (not x1580) (and (and (and (not (< x1577 988262939)) (= 1865448899 x1577) (> 2217467699 x1577) (= 1 x2780) (not (< x1577 1856199391)) (not (= 1857877511 x1577)) (> x525 0) (not (< x4061 4)) (<= x4424 1461501637330902918203684832716283019655932542975) (not (= 1856199391 x1577)) (= x4804 32) (<= 0 x4424) (= x4061 4) (= x525 (x2258 (x3182 x759))) (= 4 x4061) (> 1461501637330902918203684832716283019655932542976 x4424) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x3438)) x969) (= x969 (= x759 x2348)))))))) (and (= 452 x1885) (= x2348 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= (= x2348 x3937) x743)))) x2426) (=> (and (and (<= x557 1461501637330902918203684832716283019655932542975) (= x557 x2462) (< x557 1461501637330902918203684832716283019655932542976) (>= x557 0) (= x218 452)) (not x2234)) x2719))) x4762))
(assert (= (x862 (x1324 x2821 1)) (+ 1 (x862 x2821))))
(assert (= x3376 (and x53 x4519)))
(assert (= (or x3688 x2486 x4698 x2946) x4598))
(assert (= (x862 (x3182 x1279)) x1279))
(assert (= x1232 (or x2782 x3007)))
(assert (x2185 x2839))
(assert (=> (>= 10000 x3494) (= (x3182 x3494) (x3187 x3494))))
(assert (x2185 x2006))
(assert (= (=> (and (= x3261 x41) (= x122 x3773)) x3581) x1372))
(assert (x2185 x1224))
(assert (x2185 x3462))
(assert (= (and x1237 x229) x1889))
(assert (x2212 x1529 x3799))
(assert (x2185 x2818))
(assert (x2185 x3175))
(assert (= (=> (and (= x2849 (= 0 x4691)) (or (and (= x4106 (x1324 x1396 2)) x2849) (and (not x2849) (= (x1013 (x3182 x4691) x1396 0) x3374)))) x3714) x4324))
(assert (= (+ 2 (x862 x15)) (x862 (x1324 x15 2))))
(assert (= x4013 (and x2293 (not x101))))
(assert (x2185 x1462))
(assert (x2185 x2977))
(assert (= (and (not x4530) x1354) x253))
(assert (x2185 x4424))
(assert (= (and x3412 x2933) x1997))
(assert (= x3327 (and x105 x766)))
(assert (=> (>= 10000 x2453) (= (x3182 x2453) (x3187 x2453))))
(assert (= (+ 1 (x862 x2925)) (x862 (x1324 x2925 1))))
(assert (x2185 x138))
(assert (= x2484 (and x1097 x4086)))
(assert (x2185 x1101))
(assert (= x1123 (and (=> (and (and (or (and x2943 (and (<= 0 x4673) (= x1301 (< x4673 x2695)) (= x4673 (x4922 x2456)) (<= x4673 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x2950) x1847 0) x3805) (= x2456 (x1324 x3805 2)) (= (not x1301) x1660))) (and (not x2943) (= x1660 x2943))) (and (= (x1324 x2282 1) x1909) (<= x2950 1461501637330902918203684832716283019655932542975) (= x2943 (ite (< 1 x2270) (not (= 0 x2950)) (< 1 x2270))) (<= 0 x2950) (= (x2121 x1909) x2950) (< x2950 1461501637330902918203684832716283019655932542976) (= x2282 (x1013 (x3182 x3906) x1847 0)))) x3349) x1287) (=> (and (not x3349) (and (= x2861 0) (= x3906 x1113))) x4245))))
(assert (x2870 x4311))
(assert (= x252 (and (not x170) x3613)))
(assert (x2185 x421))
(assert (x2185 x1302))
(assert (= (or x3601 x4190 x1644 x4098 x2705 x1898) x3138))
(assert (x2185 x573))
(assert (x2185 x526))
(assert (= (x3182 2691771752) (x3187 2691771752)))
(assert (x2185 x4825))
(assert (x2185 x2244))
(assert (x2185 x4692))
(assert (= (and x1916 x2342) x1400))
(assert (= 2362143243 (x862 (x3187 2362143243))))
(assert (= (x3182 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x3187 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (x2185 x555))
(assert (x2185 x1593))
(assert (= 24044834009420335638544845215851342251227478490780828673611325350056707489792 (x862 (x3187 24044834009420335638544845215851342251227478490780828673611325350056707489792))))
(assert (= x2782 (and (not x3583) x887)))
(assert (x2185 x2088))
(assert (x2185 x3786))
(assert (= x2012 (and x813 (not x3895))))
(assert (x2185 x1270))
(assert (x2185 x4580))
(assert (x2185 x481))
(assert (= (and x1417 x1690) x4260))
(assert (x2185 x1309))
(assert (= x2615 (and x4309 x4462)))
(assert (= x2625 (and (not x550) x704)))
(assert (= (and x4356 (not x566)) x4411))
(assert (x3909 x447))
(assert (= (x3182 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x3187 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (x2185 x772))
(assert (= 2929553584 (x862 (x3187 2929553584))))
(assert (x2185 x1246))
(assert (x2185 x1929))
(assert (= (and x368 (not x4729)) x2778))
(assert (x2185 x2611))
(assert (=> (>= 10000 x1999) (= (x3182 x1999) (x3187 x1999))))
(assert (= (and x3272 x2936) x4512))
(assert (= (and x2026 (not x3492)) x4079))
(assert (x2870 x4343))
(assert (x2185 x1725))
(assert (= (and x1916 (not x2342)) x1663))
(assert (x2870 x106))
(assert (x3909 x1462))
(assert (= (and x2330 (not x4294)) x3440))
(assert (= x1739 (and (not x1281) x3433)))
(assert (= (x862 (x3182 x4157)) x4157))
(assert (x2185 x411))
(assert (=> (<= x4702 10000) (= (x3187 x4702) (x3182 x4702))))
(assert (= (or x2997 x3840) x2095))
(assert (x2185 x1793))
(assert (= (and x4587 (not x365)) x2976))
(assert (=> (>= 10000 x2633) (= (x3182 x2633) (x3187 x2633))))
(assert (= (and x1096 x3047) x4791))
(assert (= (and x4815 x2358) x1075))
(assert (x2185 x2590))
(assert (= x2493 (and (not x4119) x136)))
(assert (x2185 x602))
(assert (= (=> (= (= x142 x1751) x3485) (and (=> (and (= (< 0 x1751) x3228) (not x3485)) (and (=> (and (and (and (> 1461501637330902918203684832716283019655932542976 x1707) (<= x1707 1461501637330902918203684832716283019655932542975) (= (x1982 x4361) x4831) (= (x914 x2387) x1279) (= (x4057 x2328) x1707) (= x4361 (x1324 x2328 1)) (<= 0 x1279) (<= 0 x1707) (= x612 (x227 (+ 96 x232))) (= x2387 (x1013 (x3182 x3502) x1347 0)) (>= 1461501637330902918203684832716283019655932542975 x1279) (not (= x4831 0)) (= (x1324 x2387 1) x2328) (<= x4831 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4831) (< x1279 1461501637330902918203684832716283019655932542976) (= (= 0 x1279) x1028)) (or (and (= x1291 (x1324 x1347 1)) x1028) (and (and (= x4351 (x1324 x3235 1)) (= x3235 (x1013 (x3182 x1279) x1347 0))) (not x1028)))) x3228) x3263) (=> (and (= x1231 x232) (not x3228)) x3743))) (=> (and x3485 (= x2825 x232)) x155))) x954))
(assert (x2575 x1462))
(assert (x2185 x2518))
(assert (x2870 x2024))
(assert (= x2865 (x862 (x3182 x2865))))
(assert (x2870 x2959))
(assert (x2185 x1221))
(assert (x2185 x3038))
(assert (=> (>= 10000 x1750) (= (x3182 x1750) (x3187 x1750))))
(assert (= (=> (and (= x1725 x2115) (= x377 x2607)) x1754) x777))
(assert (= x1863 (and x2491 (not x961))))
(assert (= (and x2052 x715) x2075))
(assert (x2185 x2536))
(assert (x2870 x186))
(assert (= x2752 (and x4256 (not x548))))
(assert (= x395 (x862 (x3182 x395))))
(assert (x2185 x4070))
(assert (=> (<= x1113 10000) (= (x3182 x1113) (x3187 x1113))))
(assert (x2185 x1205))
(assert (= (x3187 35417553099779373699389112480655434059402432070290151981503827724506945814528) (x3182 35417553099779373699389112480655434059402432070290151981503827724506945814528)))
(assert (= (and (not x4419) x1744) x3824))
(assert (x2185 x2525))
(assert (= x2631 (and x3992 (not x4341))))
(assert (x2185 x3119))
(assert (= (x862 (x3187 1856199391)) 1856199391))
(assert (= (or x3777 x2039) x874))
(assert (= (and x3328 x3804) x22))
(assert (= (and x3515 x3925) x2659))
(assert (= x3109 (and (not x4466) x1234)))
(assert (x516 x1897))
(assert (x2185 x1597))
(assert (= x580 (=> (and (= x531 x59) (= x2280 0)) x2192)))
(assert (x2185 x4702))
(assert (x2185 x4541))
(assert (x2185 x2738))
(assert (x2185 x4318))
(assert (x2185 x1285))
(assert (=> (>= 10000 x4082) (= (x3187 x4082) (x3182 x4082))))
(assert (= (x862 (x1324 x4355 2)) (+ (x862 x4355) 2)))
(assert (x2185 x1482))
(assert (x2185 x491))
(assert (x2185 x3152))
(assert (x2870 x4786))
(assert (= (or x3812 x1498) x2562))
(assert (= (and x164 x2911) x1311))
(assert (= (and x1496 x1121) x3588))
(assert (= x4710 (and x4845 (not x2812))))
(assert (x2185 x274))
(assert (= (+ (x862 x3805) 2) (x862 (x1324 x3805 2))))
(assert (x2185 x3774))
(assert (= (and (not x1233) x1958) x4756))
(assert (x2185 x769))
(assert (x2870 x1363))
(assert (= (and (not x2317) x401) x2964))
(assert (= 2858086653 (x862 (x3187 2858086653))))
(assert (x2185 x2790))
(assert (= (and x2208 (not x3575)) x1981))
(assert (x2185 x3015))
(assert (= (x862 (x3187 4238056678808933066457772256406219440718756300954938350892797929791311314944)) 4238056678808933066457772256406219440718756300954938350892797929791311314944))
(assert (x2185 x3159))
(assert (x2185 x4607))
(assert (= (or x3761 x2235 (and x4116 x4770) (and (not x521) x2901) (and x4899 (not x1134)) (and x4256 x548)) x2264))
(assert (x2185 x1861))
(assert (= x683 (and x1439 (not x3816))))
(assert (= x2549 (and x1154 (not x400))))
(assert (=> (<= x1389 10000) (= (x3182 x1389) (x3187 x1389))))
(assert (= (x862 (x3182 x1750)) x1750))
(assert (x2185 x3018))
(assert (= x2953 (and x2846 x3005)))
(assert (x2185 x858))
(assert (=> (<= x1622 10000) (= (x3187 x1622) (x3182 x1622))))
(assert (= (and x581 x3753) x3780))
(assert (= (and x1331 x4403) x1207))
(assert (x2185 x2991))
(assert (x4678 x664 x536))
(assert (x2185 x883))
(assert (= (+ (x862 x716) 1) (x862 (x1324 x716 1))))
(assert (x2185 x3503))
(assert (= (and x991 x3574) x1259))
(assert (= x2959 (x862 (x3182 x2959))))
(assert (= (=> (and (= x2522 (x176 452)) (= (x3232 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2232) x3336) (not (= x2780 0)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4804) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4804)) (< x4804 32)))) (= x1093 (x227 (+ 452 x3336))) (= (x227 (+ x4804 31)) x2232) (= x2522 x2462) (>= 1461501637330902918203684832716283019655932542975 x2522) (= x218 x1093)) x2719) x2426))
(assert (= (and x4110 (not x3037)) x825))
(assert (= (+ 1 (x862 x1727)) (x862 (x1324 x1727 1))))
(assert (= x1192 (=> (and (= x3367 0) (= x611 x4042)) x1088)))
(assert (= (and x1417 (not x1690)) x4733))
(assert (x2185 x2876))
(assert (x2185 x4225))
(assert (x2185 x3596))
(assert (x2185 x3687))
(assert (x2185 x4766))
(assert (x2185 x4853))
(assert (x2185 x2617))
(assert (x2185 x3312))
(assert (= (+ (x862 x4238) 1) (x862 (x1324 x4238 1))))
(assert (x2870 x4185))
(assert (= x195 (and (not x3876) x825)))
(assert (x2185 x1729))
(assert (= (x3187 988262939) (x3182 988262939)))
(assert (x2185 x348))
(assert (= x2112 (and x907 (not x916))))
(assert (= (=> (and (= (> x4070 0) x1084) (= (x227 (+ x4447 x116)) x3942) (= (x2614 x116) x2668) (= (x3232 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3732) x4447) (not (= 0 x749)) (not (or (> x3642 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x3642) (= (<= x3642 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (<= x4070 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4070 0) (= x4070 (x873 x541)) (= x3732 (x227 (+ x3642 31))) (= x541 (x1324 x778 1))) (and (=> (and x1084 (and (and (= (x873 x541) x883) (= (* x2668 x883) x2301) (= (div x2301 1000000000000000000) x4921) (< (* x2668 x883) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x883) (= x419 (> x4921 x2269)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x883)) (or (and (not x419) (and (not (< x2839 0)) (= (x2214 (- x2269 x4921)) x1929) (= x1929 x4632) (= x762 x4921) (not (< x4734 x4921)) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4921)) x2839))) (and x419 (and (= (mod (* x2269 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1532) (<= 0 x4884) (not (> 0 x692)) (= x692 (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2269))) (= (div x4521 1000000000000000000) x3888) (= x4521 (div x2238 x2668)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4884) (< 0 x2668) (= x700 (x2214 (- x4884 x3888))) (= (* x1532 1000000000000000000) x2238) (= x2269 x762) (= (ite x2597 1 0) x789) (not (< x4884 x3888)) (= x789 0) (= (> x4734 115792089237316195423570985008687907853269984665640564039457) x2597) (= 0 x4632) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1532 1000000000000000000)) (= x4884 (x873 x541))))))) x246) (=> (and (and (= x2269 x3361) (= x2260 0)) (not x1084)) x4651))) x3759))
(assert (x2185 x3139))
(assert (x2185 x4581))
(assert (= (x862 (x1324 x1677 2)) (+ (x862 x1677) 2)))
(assert (= (and x2229 (not x169)) x1977))
(assert (= (and x1051 x3251) x2268))
(assert (= (=> (or (and x3540 (and (= (x1013 (x3182 x3770) (x3187 157) 0) x3693) (= x3770 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= (x2701 x1694) x1455) (= (not x1460) x4381) (>= 1461501637330902918203684832716283019655932542975 x1455) (<= 0 x1455) (= x1694 (x1324 x3693 1)) (> 1461501637330902918203684832716283019655932542976 x1455) (= x1460 (= x1455 0)))) (and (= x3540 x4381) (not x3540))) x298) x309))
(assert (= (and (not x4403) x1331) x4356))
(assert (= (and x3922 x77) x2872))
(assert (= x4783 (or x4451 x2035 x625 x1474)))
(assert (x2185 x2133))
(assert (= (and x3436 x4654) x1100))
(assert (=> (>= 10000 x3223) (= (x3182 x3223) (x3187 x3223))))
(assert (x2185 x4569))
(assert (x2185 x2515))
(assert (= (x862 (x1324 x443 1)) (+ (x862 x443) 1)))
(assert (= x156 (and (not x1585) x1804)))
(assert (x2185 x278))
(assert (x2185 x3207))
(assert (= (x862 (x3187 72570022874062638528011751457397263716769196454539065078543251854057308946432)) 72570022874062638528011751457397263716769196454539065078543251854057308946432))
(assert (=> (<= x1295 10000) (= (x3182 x1295) (x3187 x1295))))
(assert (x2185 x1801))
(assert (x2185 x972))
(assert (= (or x3321 x2625) x515))
(assert (x2185 x1988))
(assert (= (x862 (x3182 x2888)) x2888))
(assert (= x476 (and x26 (not x2038))))
(assert (x2185 x3808))
(assert (= x810 (x862 (x3182 x810))))
(assert (x2185 x4510))
(assert (x2185 x727))
(assert (= (x862 (x3182 x759)) x759))
(assert (= x1969 (or x4146 (and (not x831) x1631))))
(assert (x2870 x4123))
(assert (x2185 x2))
(assert (x2185 x3285))
(assert (x2185 x4640))
(assert (= x2109 (and x696 x3439)))
(assert (x2185 x103))
(assert (x2185 x3284))
(assert (= (x862 (x3182 x4920)) x4920))
(assert (= x3354 (and x1237 (not x229))))
(assert (= (=> (and (= x1820 x3886) (= x1890 0)) x48) x2676))
(assert (= x1590 (and x3996 (not x64))))
(assert (=> (>= 10000 x1030) (= (x3182 x1030) (x3187 x1030))))
(assert (x2185 x1245))
(assert (= (=> (and (= x2199 0) (= x4052 x531)) x978) x4300))
(assert (x3909 1461501637330902918203684832716283019655932542975))
(assert (= x2129 (and x4753 x1714)))
(assert (= x2902 (or x1520 x3084)))
(assert (= (x3182 75483562) (x3187 75483562)))
(assert (x2185 x1749))
(assert (x2185 x3655))
(assert (= x2433 (=> (and (>= x2683 0) (<= x3458 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x528 (x227 (+ x4167 x1308))) (not (= 0 x2563)) (= x4173 (mod (* x3998 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x4173 1000000000000000000)) (= x2986 (div x402 x3813)) (= (ite x2917 1 0) x3987) (= (+ x1256 x3973) x111) (= x1256 x3458) (= 0 x3987) (> 1461501637330902918203684832716283019655932542976 x2683) (>= x3458 0) (= x3813 (x863 x4167)) (= (div x2986 1000000000000000000) x3643) (= (* x4173 1000000000000000000) x402) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3643 x3458)) (= x3200 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2162) (and (= (<= x2162 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2162)))) (> x3813 0) (= x2194 (x227 (+ x2162 31))) (= x3973 x3643) (= (< 115792089237316195423570985008687907853269984665640564039457 x3998) x2917) (= (x3232 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2194) x1308) (= (x1132 x159) x3458) (= (x2214 (- x3200 x2683)) x594) (= (x1324 x2132 1) x159) (>= 1461501637330902918203684832716283019655932542975 x2683) (= (< 0 x594) x4834)) (and (=> (and (not x4834) (and (< (+ x3998 x1960) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 0 x4021)) (= x4204 (>= x1855 x3998)) (<= 0 x557) x2175 (= x2175 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3998 x4767))) (= (x2258 (x3182 x3119)) x3898) (= (x3644 (x3182 x3119)) x1960) (= x1855 (x1574 (x3182 x322))) (not (= 0 x3898)) (= (- x4555 x3998) x4633) (> 1461501637330902918203684832716283019655932542976 x557) (< x1274 4294967296) (= (x1574 (x3182 x322)) x4555) (= x3119 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (> 4294967296 x3390) (>= 1461501637330902918203684832716283019655932542975 x557) (= x4767 (x1574 (x3182 x3119))) (= x626 (x227 (+ x1960 x3998))) x4204 (= x4021 (x2258 (x3182 x557))))) x210) (=> (and (and (and (= (= x2462 x2031) x2859) (= x1603 (x227 (+ 32 x2574))) (= (x227 (+ x528 4)) x2574)) (and x2859 (and (= (x2214 (- x1376 4)) x1014) (= x3998 x689) (< 0 x1845) (= x1376 68) (< x2114 1466279372) (= x3131 x834) (not (= 117300739 x2114)) (< x2114 599290589) (= 157198259 x2114) (= (x2258 (x3182 x2031)) x1845) (= x3670 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x4808 (or (> x1014 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1014)) (> 64 x1014)))) (not (< x1376 4))))) x4834) (and (=> x4808 x2377) (=> (and (and (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x4169) (= (= x3131 x4169) x3976)) (not x4808)) (and (=> (not x3976) x2377) (=> (and x3976 (and (= x1910 (x1013 (x3182 x705) x131 0)) (= x1881 1) (= x131 (x1013 (x3182 x322) (x3187 2) 0)) (= x2173 32) (= (x3232 1461501637330902918203684832716283019655932542975 x834) x705) (= x2617 x689))) x3205)))))))))
(assert (x2185 x4616))
(assert (x2185 x2269))
(assert (x2185 x2194))
(assert (x2185 x325))
(assert (= (and x1924 x1504) x1474))
(assert (=> (<= x2888 10000) (= (x3187 x2888) (x3182 x2888))))
(assert (= (and (not x4753) x1714) x3097))
(assert (x2185 x3481))
(assert (= (x862 (x3182 x3498)) x3498))
(assert (=> (>= 10000 x3593) (= (x3182 x3593) (x3187 x3593))))
(assert (x2185 x1321))
(assert (x2185 x1736))
(assert (x2185 x4150))
(assert (= (x862 (x3182 x3080)) x3080))
(assert (x2185 x639))
(assert (x2185 x346))
(assert (x2185 x3265))
(assert (= x3502 (x862 (x3182 x3502))))
(assert (x2870 x3866))
(assert (= (+ 3 (x862 x778)) (x862 (x1324 x778 3))))
(assert (x2870 x1230))
(assert (= x581 (and x1494 (not x276))))
(assert (= x1745 (and (not x1530) x2742)))
(assert (x2185 x4841))
(assert (x2870 x3566))
(assert (x3909 x3131))
(assert (= (x862 (x3182 x2577)) x2577))
(assert (= x3338 (and x97 x398)))
(assert (x2185 x2114))
(assert (=> (>= 10000 x3671) (= (x3187 x3671) (x3182 x3671))))
(assert (= x2255 (and x4085 x4027)))
(assert (= (and x2613 (not x3982)) x1545))
(assert (= x2503 (and x3663 (not x4579))))
(assert (x2185 x4431))
(assert (x2185 x2703))
(assert (= (not (and (> 1461501637330902918203684832716283019655932542976 x2776) (= x2776 (x2121 x4612)) (<= x2776 1461501637330902918203684832716283019655932542975) (>= x2776 0) (= x4529 (x1013 (x3182 x2950) x1847 0)) (= x4612 (x1324 x4529 1)))) x4067))
(assert (x3909 x834))
(assert (x2870 x4214))
(assert (= x4477 (=> (and (or (and (not x1506) (and (and (<= x3059 1461501637330902918203684832716283019655932542975) (< x3059 1461501637330902918203684832716283019655932542976) (<= 0 x3059) (= (= 0 x3059) x830) (= x3059 (x1095 x2907))) (or (and x830 (and (= x994 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= x453 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x2060))) (and (and (= x1563 (x1324 x2907 1)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x1488) (= (x3837 x1563) x2137) (< x2137 1461501637330902918203684832716283019655932542976) (>= x2137 0) (= x4121 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x3802) (<= x2137 1461501637330902918203684832716283019655932542975)) (not x830))))) (and (and (and (= (> x4287 0) x4420) (> 1461501637330902918203684832716283019655932542976 x1459) (= (x2214 (- x2959 x1459)) x4287) (= x1459 (x1095 x2907)) (<= x1459 1461501637330902918203684832716283019655932542975) (<= 0 x1459)) (or (and x4420 (and (= (x4533 x225) x2999) (> 1461501637330902918203684832716283019655932542976 x2999) (= x1871 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (>= x2999 0) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x2415) (>= 1461501637330902918203684832716283019655932542975 x2999) (= x225 (x1013 (x3182 x2959) x2764 0)) (= (x3232 1461501637330902918203684832716283019655932542975 x3760) x2923))) (and (not x4420) (and (= x3938 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= x684 (x3232 1461501637330902918203684832716283019655932542975 x3760)) (= x1304 (x3232 1461501637330902918203684832716283019655932542975 x3760)))))) x1506)) (= x1506 (ite (> x2270 x4640) (not (= 0 x2959)) (> x2270 x4640)))) x2000)))
(assert (= x4149 (x862 (x3182 x4149))))
(assert (= x2910 (and x413 x4796)))
(assert (= x2613 (or x2872 x861 x2736)))
(assert (x2185 x2145))
(assert (x2185 x4675))
(assert (x2185 x4314))
(assert (x2185 x4561))
(assert (x2185 x1775))
(assert (= x3334 (and (not x152) x427)))
(assert (= x3141 (=> (and (= x2517 x526) (= 0 x774)) x4754)))
(assert (= x3462 (x862 (x3182 x3462))))
(assert (x2185 x2443))
(assert (x2185 x2938))
(assert (x2185 x1149))
(assert (= x1605 (or x1431 x1332)))
(assert (x2185 x240))
(assert (x2185 x2091))
(assert (= (and x3454 x1639) x4166))
(assert (= x1967 (and x2330 x4294)))
(assert (= (and x4713 x1699) x4109))
(assert (x2185 x1356))
(assert (x2185 x4168))
(assert (x2185 x4758))
(assert (x2185 x2178))
(assert (= (x862 (x3182 x3410)) x3410))
(assert (x2185 x489))
(assert (x2185 x1984))
(assert (=> (<= x2031 10000) (= (x3182 x2031) (x3187 x2031))))
(assert (x2185 x3870))
(assert (x2185 x671))
(assert (= (and x4911 (not x752)) x4352))
(assert (x2185 x473))
(assert (= x2399 (and x4262 x1345)))
(assert (x2185 x4191))
(assert (= x2586 (or x3109 x2658)))
(assert (= x887 (and x1097 (not x4086))))
(assert (= x1399 (or x3432 x4718)))
(assert (x2185 x4734))
(assert (x2185 x780))
(assert (= x4891 (x862 (x3182 x4891))))
(assert (x2185 x4839))
(assert (x2185 x586))
(assert (x2185 x242))
(assert (= (or (and x1741 (not x3767)) x4472) x2273))
(assert (x2185 x2908))
(assert (= x878 (or x3914 x3795 x4656 x1992 x3742 x1115 x3902 x2366 x3569)))
(assert (= (or x2445 x2461) x2037))
(assert (x2185 x1760))
(assert (= (x862 (x1324 x2387 1)) (+ (x862 x2387) 1)))
(assert (= (+ 1 (x862 x3417)) (x862 (x1324 x3417 1))))
(assert (= x2773 (x862 (x3182 x2773))))
(assert (x2185 x1469))
(assert (= (and (not x442) x2830) x2041))
(assert (= x1703 (or x3868 x3213)))
(assert (x2185 x3361))
(assert (= x4906 (and (not x109) x1484)))
(assert (= (and (not x3576) x771) x3271))
(assert (= (x862 (x3182 x3677)) x3677))
(assert (x2185 x345))
(assert (= (and (not x1761) x187) x3840))
(assert (x2185 x2563))
(assert (x2870 x4484))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x862 (x3187 115792089237316195423570985008687907853269984665640564039457))))
(assert (x2185 x2408))
(assert (= x2393 (and x371 x3364)))
(assert (= x235 (=> (and (or (and (not x215) (= x142 0)) (and (= x142 x1170) x215)) (and (= x1347 (x1013 (x3182 x4063) (x3187 157) 0)) (= (x1013 (x3182 x3502) x1347 0) x4355) (= x4154 (x1421 x281)) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x4343) (= (x1013 (x3182 x3502) x3004 0) x657) (>= x1170 0) (<= x1751 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2152 (x1576 x657)) (= (x1324 x1932 2) x281) (= (x1013 (x3182 x3502) x1072 0) x1932) (<= x3730 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1013 (x3182 x4033) (x3187 159) 0) x3004) (<= 0 x4154) (>= x2152 0) (= x4033 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (= x2937 (x1324 x4355 2)) (<= x1170 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2152 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x3730 x1170) x215) (= x4063 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4154) (= (x1324 x657 1) x1668) (= x1751 (x1982 x2937)) (= (x1013 (x3182 x4343) (x3187 156) 0) x1072) (>= x1751 0) (>= x3730 0) (= (x818 x1668) x1170))) x954)))
(assert (= x1113 (x862 (x3182 x1113))))
(assert (x2185 x2543))
(assert (x2185 x4494))
(assert (= (and x3538 x1557) x368))
(assert (= (x862 (x3182 x3906)) x3906))
(assert (= (and x371 (not x3364)) x2828))
(assert (x2185 x2930))
(assert (x2185 x1081))
(assert (= (or x4502 x3824 x2910 x2362 x796) x1684))
(assert (= (or x3209 x3259 x1122 x3706) x1631))
(assert (= 75483562 (x862 (x3187 75483562))))
(assert (=> (<= x1264 10000) (= (x3187 x1264) (x3182 x1264))))
(assert (x2185 x3195))
(assert (= (and x3040 (not x653)) x3579))
(assert (= x2491 (and x2503 (not x1995))))
(assert (x2185 x4285))
(assert (x2870 x489))
(assert (x2575 x1558))
(assert (= (and x4568 x2346) x4221))
(assert (x2185 x3748))
(assert (= (or x2255 x3662) x3027))
(assert (= x2654 (=> (and (= 0 x519) (= x3062 x4042)) x1104)))
(assert (x2185 x2551))
(assert (x2185 x2918))
(assert (= (and x121 (not x4655)) x2381))
(assert (= x239 (and x3490 (not x2975))))
(assert (x2185 x1310))
(assert (= (=> (and (and (= (x227 (+ x4616 31)) x219) (= x3982 (< 0 x3361)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4616) true) (< x4616 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4616))) (<= x366 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3498 (x3232 1461501637330902918203684832716283019655932542975 x3131)) (<= 0 x366) (= (x1013 (x3182 x3498) (x3187 165) 0) x569) (= (x3232 115792089237316195423570985008687907853269984665640564039457584007913129639904 x219) x2292) (= (x227 (+ x2292 x4761)) x232) (not (= x149 0)) (= (x544 x4761) x242) (= x366 (x4208 x569))) (or (and (and (= x2516 (x1324 x2588 1)) (= (x2701 x2516) x2557) (= x2557 x3502) (<= x2557 1461501637330902918203684832716283019655932542975) (<= 0 x2557) (= x2588 (x1013 (x3182 x4143) (x3187 157) 0)) (= (x3232 1461501637330902918203684832716283019655932542975 x3131) x4143) (< x2557 1461501637330902918203684832716283019655932542976) (= x691 (= x2557 0)) (= x509 (not x691))) x3982) (and (not x3982) (and (= x3982 x509) (= x3502 0))))) x4578) x438))
(assert (x2185 x1904))
(assert (x2185 x3253))
(assert (x2185 x2136))
(assert (=> (<= x1064 10000) (= (x3182 x1064) (x3187 x1064))))
(assert (= (and x4508 x4503) x4401))
(assert (x2185 x2561))
(assert (= 1313710058 (x862 (x3187 1313710058))))
(assert (x2185 x3970))
(assert (= x3161 (=> (= x1005 x2825) x155)))
(assert (= x4918 (and (not x1028) x2980)))
(assert (x4678 x4594 x4231))
(assert (= (and (not x618) x1745) x4362))
(assert (= x925 (and x3081 x3780)))
(assert (=> (<= x1230 10000) (= (x3187 x1230) (x3182 x1230))))
(assert (x2185 x2853))
(assert (= x2956 (and x1436 x430)))
(assert (= (and x1351 x2712) x3885))
(assert (x2185 x4520))
(assert (= (and x1607 (not x4459)) x1699))
(assert (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x862 (x3187 6539370208772218570076773595062200405109424842860869254164860851635934461952))))
(assert (x2185 x2634))
(assert (x2185 x1818))
(assert (= x3734 (and (not x2184) x1187)))
(assert (= (x862 (x3182 x565)) x565))
(assert (x2185 x1056))
(assert (x2185 x3517))
(assert (= x4502 (and x702 x4107)))
(assert (x2185 x3567))
(assert (= (+ (x862 x3884) 2) (x862 (x1324 x3884 2))))
(assert (x3909 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x2185 x3326))
(assert (x2870 x4700))
(assert (= (and (not x2213) x1218) x3531))
(assert (= (=> (or (and (and (= x3769 (x2214 (- x2662 x3949))) (= (< x3769 x304) x2582) (not (< x2662 x3949))) x302) (and (= x2582 x302) (not x302))) x2359) x4605))
(assert (= (and (=> (and (and (or (and (not x3715) (= x3715 x3749)) (and (and (= x2476 (x1013 (x3182 x4149) x3304 0)) (<= x405 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2973 (> x4716 x405)) (= (x1324 x2476 2) x501) (= x405 (x747 x501)) (>= x405 0) (= x3749 (not x2973))) x3715)) (and (= x636 (x1324 x3931 1)) (<= 0 x4149) (>= 1461501637330902918203684832716283019655932542975 x4149) (= (x1013 (x3182 x4481) x3304 0) x3931) (= (x2889 x636) x4149) (= x3715 (ite (> x2270 1) (not (= 0 x4149)) (> x2270 1))) (> 1461501637330902918203684832716283019655932542976 x4149))) x3816) x1160) (=> (and (and (= 0 x4527) (= x4481 x4123)) (not x3816)) x4468)) x2994))
(assert (x2185 x248))
(assert (= (and x4791 x4163) x4464))
(assert (x2870 x20))
(assert (= (=> (and (= x4074 x1725) (= x3970 x2607)) x1754) x3637))
(assert (= x1178 (and x4843 (not x429))))
(assert (x2185 x256))
(assert (= x3506 (and x3335 (not x4381))))
(assert (x2185 x2446))
(assert (x2185 x2989))
(assert (x2185 x4148))
(assert (x2185 x2906))
(assert (= x4903 (x862 (x3182 x4903))))
(assert (x2870 x4481))
(assert (x2185 x2060))
(assert (= (and x3959 (not x4211)) x4317))
(assert (= x1403 (=> (and (= x2989 x4236) (= x3984 x1651)) x1655)))
(assert (x2185 x3154))
(assert (x2185 x3083))
(assert (= (x862 (x3187 1038142104)) 1038142104))
(assert (x2185 x2103))
(assert (x2185 x4090))
(assert (x2185 x3796))
(assert (= (and x4076 x99) x141))
(assert (= (and (not x4554) x925) x2629))
(assert (= (and x4203 x547) x3569))
(assert (x2185 x531))
(assert (x2185 x1547))
(assert (= x186 (x862 (x3182 x186))))
(assert (= x4638 (and x3579 (not x349))))
(assert (= x4719 (and (not x509) x4776)))
(assert (= x4162 (=> (and (or (not x1610) x1610) (= (= x1434 0) x1610)) x614)))
(assert (x2185 x4337))
(assert (x2185 x4668))
(assert (x2870 x1279))
(assert (= (and x2079 x1799) x2958))
(assert (x2185 x2323))
(assert (x2185 x4105))
(assert (= (and (not x434) x2988) x1508))
(assert (= (and (not x1640) x4035) x3811))
(assert (= (x3182 1856199391) (x3187 1856199391)))
(assert (= x2546 (x862 (x3182 x2546))))
(assert (x2185 x1235))
(assert (x2185 x4741))
(assert (= (or x4131 x1901) x853))
(assert (x2185 x2336))
(assert (x2185 x3368))
(assert (=> (<= x4033 10000) (= (x3187 x4033) (x3182 x4033))))
(assert (x2185 x4353))
(assert (= (=> (and (or x4344 (not x4344)) (= x4344 (= x1881 0))) x3093) x3205))
(assert (= x2840 (or x2484 x3281)))
(assert (x2185 x3472))
(assert (= (x862 (x3187 547091486)) 547091486))
(assert (= x3324 (and x2406 (not x1996))))
(assert (= (x862 (x3187 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (+ (x862 x2588) 1) (x862 (x1324 x2588 1))))
(assert (= x4037 (and (not x1921) x3793)))
(assert (x2185 x1865))
(assert (x2185 x2292))
(assert (= (and x3402 x4473) x206))
(assert (x2185 x3672))
(assert (x2185 x2861))
(assert (x2185 x844))
(assert (x2185 x612))
(assert (= x1714 (and x3338 x2660)))
(assert (= (and (not x4629) x4882) x3804))
(assert (= x893 (and x549 (not x3400))))
(assert (= x4769 (=> (and (= x1359 x3190) (= x3331 x3836)) x2957)))
(assert (x2185 x947))
(assert (= (and (not x1835) x1480) x710))
(assert (= (=> (and (= 0 x3912) (= x3674 x798)) x3862) x250))
(assert (x2185 x2724))
(assert (= x4006 (and (not x94) x445)))
(assert (= x2354 (or x3787 x141 (and x3233 x4401) x952 (and x4297 x750))))
(assert (x2185 x4061))
(assert (x2185 x3451))
(assert (x2185 x1240))
(assert (= x1999 (x862 (x3182 x1999))))
(assert (x2185 x3875))
(assert (x2185 x726))
(assert (x2870 x3462))
(assert (=> (>= 10000 x115) (= (x3187 x115) (x3182 x115))))
(assert (x2185 x4413))
(assert (=> (>= 10000 x4105) (= (x3182 x4105) (x3187 x4105))))
(assert (= x775 (or x2698 x2129 x1454 x1583 x2015 x1516 x1851 x1229 x3039)))
(assert (= x2559 (and x1283 (not x680))))
(assert (x2185 x4165))
(assert (= (or x55 x4240 x487 x3510 x2524 x4078) x4002))
(assert (= (and x4871 x1087) x4323))
(assert (x2185 x1131))
(assert (= x4281 (and x3239 (not x1823))))
(assert (x2870 x2403))
(assert (x2185 x689))
(assert (x2185 x643))
(assert (= x1824 (and x2892 (not x2859))))
(assert (= x2592 (and x277 x4109)))
(assert (= (x3187 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x3182 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (= x4483 (and x3407 (not x2528))))
(assert (x2185 x814))
(assert (x2870 x794))
(assert (x2185 x3850))
(assert (= (and x3855 (not x4252)) x2968))
(assert (= (and x2526 x4620) x4680))
(assert (= (and (not x3751) x4) x4715))
(assert (= (and x3124 (not x3405)) x2804))
(assert (x2185 x2688))
(assert (x2870 x1533))
(assert (= x2848 (x862 (x3182 x2848))))
(assert (= (x862 (x1324 x12 2)) (+ 2 (x862 x12))))
(assert (x2185 x1854))
(assert (= x4340 (and x4360 x2325)))
(assert (= (or (and (not x4663) x3262) x2251) x3854))
(assert (= x952 (and x3676 x1828)))
(assert (= (and x4119 x136) x1435))
(assert (= (and (not x4705) x3659) x2765))
(assert (= x3323 (x862 (x3182 x3323))))
(assert (x2185 x2687))
(assert (= x4307 (and x2573 x4858)))
(assert (x2185 x44))
(assert (x2870 x557))
(assert (x2870 x4709))
(assert (= x4137 (or x275 x1528)))
(assert (= (and x910 (not x2110)) x2632))
(assert (x2185 x4123))
(assert (=> (<= x2593 10000) (= (x3182 x2593) (x3187 x2593))))
(assert (x2185 x1874))
(assert (= x65 (and x3650 (not x812))))
(assert (= (x862 (x3182 x234)) x234))
(assert (= x1287 (and (=> x1660 x4067) (=> (and (and (= 1 x2861) (= x1113 x2950)) (not x1660)) x4245))))
(assert (x2185 x2820))
(assert (= x2182 (and x1196 x1776)))
(assert (x2185 x3635))
(assert (= (x862 (x3182 x348)) x348))
(assert (= x1344 (=> (and (or x2358 (not x2358)) (= (= 0 x4124) x2358)) x3114)))
(assert (x2185 x2593))
(assert (x2185 x364))
(assert (= x1196 (or x515 x3661 x2102 x148)))
(assert (x2185 x2281))
(assert (x2185 x2542))
(assert (x2185 x1532))
(assert (x2185 x1144))
(assert (x2185 x3257))
(assert (= x3404 (or x3386 x956)))
(assert (x2185 x1730))
(assert (=> (<= x2174 10000) (= (x3187 x2174) (x3182 x2174))))
(assert (x2185 x2916))
(assert (= x4366 (=> (and (= x3011 x3190) (= x4658 x3836)) x2957)))
(assert (= (=> (and (= x2515 x3886) (= x3450 0)) x1222) x3718))
(assert (= (x862 (x3182 x2648)) x2648))
(assert (=> (>= 10000 x4254) (= (x3182 x4254) (x3187 x4254))))
(assert (x2185 x1917))
(assert (= (x862 (x3182 x3494)) x3494))
(assert (x2185 x3974))
(assert (x2185 x3593))
(assert (= (x862 (x1324 x1347 1)) (+ 1 (x862 x1347))))
(assert (= x3872 (and x715 (not x2052))))
(assert (x2185 x2127))
(assert (= (x862 (x3182 x20)) x20))
(assert (= 117300739 (x862 (x3187 117300739))))
(assert (x2185 x1355))
(assert (x2185 x2882))
(assert (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x862 (x3187 77053863734975077137548456399560439977311721439096602559221323163398253314048))))
(assert (= x1480 (and x1400 (not x4022))))
(assert (x2185 x291))
(assert (= x3645 (or x4563 x2535 x4046 x1006 x897 x1441)))
(assert (x2185 x4517))
(assert (= (x862 (x1324 x778 1)) (+ (x862 x778) 1)))
(assert (x2185 x4812))
(assert (= (or x3768 x4560 x2306 x3455 x1397 x2011) x1852))
(assert (x2185 x1491))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3154) (= x3368 x306) (>= x1915 0) (= (x2942 x4810) x3154) (= x808 x4167) (= (x1324 x1327 1) x4810) (= x2482 x4494) (= x3566 x4604) (= x3607 x2457) (<= x1915 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1747 x1327) x1915) (>= x3154 0) (= x67 (x227 (+ x808 32)))) x4248) x3395))
(assert (= x124 (and x4076 (not x99))))
(assert (= 2134560854 (x862 (x3187 2134560854))))
(assert (x2185 x3460))
(assert (x2870 x2453))
(assert (= x3312 (x862 (x3182 x3312))))
(assert (x2185 x358))
(assert (= (+ (x862 x783) 1) (x862 (x1324 x783 1))))
(assert (= (x862 (x1324 x859 1)) (+ (x862 x859) 1)))
(assert (=> (>= 10000 x4891) (= (x3182 x4891) (x3187 x4891))))
(assert (x2870 x4722))
(assert (x2185 x4194))
(assert (x2185 x2574))
(assert (x2185 x485))
(assert (= (and x4210 (not x1601)) x4050))
(assert (= x3728 (and (not x2716) x3814)))
(assert (= x322 (x862 (x3182 x322))))
(assert (= (x3182 18446744073709551615) (x3187 18446744073709551615)))
(assert (x2185 x1343))
(assert (= 4294967296 (x862 (x3187 4294967296))))
(assert (x2185 x3717))
(assert (= x33 (and x1467 x4537)))
(assert (x2185 x4736))
(assert (x2185 x2522))
(assert (x2870 x91))
(assert (x2185 x1758))
(assert (= (x3187 2217467699) (x3182 2217467699)))
(assert (=> (<= x3446 10000) (= (x3182 x3446) (x3187 x3446))))
(assert (x2185 x807))
(assert (= x399 (and x4905 (not x1506))))
(assert (= (x862 (x1324 x126 1)) (+ (x862 x126) 1)))
(assert (x2185 x2321))
(assert (= x3431 (and (not x1975) x1319)))
(assert (=> (>= 10000 x968) (= (x3182 x968) (x3187 x968))))
(assert (=> (>= 10000 x1884) (= (x3182 x1884) (x3187 x1884))))
(assert (= x1064 (x862 (x3182 x1064))))
(assert (= (and x719 x3071) x4305))
(assert (x2185 x1129))
(assert (x2185 x1425))
(assert (= (=> (and (= x2606 x2044) (= x3074 0)) x1968) x4219))
(assert (x2185 x71))
(assert (= x178 (=> (and (= x3975 x3836) (= x3190 x1457)) x2957)))
(assert (= (and x4410 x3535) x2510))
(assert (= (and (not x3972) x1864) x578))
(assert (x2185 x4082))
(assert (= (+ 2 (x862 x3304)) (x862 (x1324 x3304 2))))
(assert (x2185 x286))
(assert (x2185 x4659))
(assert (x2185 x595))
(assert (x2185 x4357))
(assert (= x4326 (and x1580 x3599)))
(assert (x2185 x3665))
(assert (= (and x3118 (not x3155)) x26))
(assert (x2870 x1750))
(assert (x2185 x3582))
(assert (=> (>= 10000 x3514) (= (x3182 x3514) (x3187 x3514))))
(assert (x2185 x1815))
(assert (= (x3182 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x3187 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (x2185 x3675))
(assert (x2185 x2296))
(assert (x2185 x1199))
(assert (= x2225 (or x1710 x4615)))
(assert (x2185 x1173))
(assert (= (or x143 x1065 x1709 x303 x3031 x2987) x3086))
(assert (= (+ 1 (x862 x1514)) (x862 (x1324 x1514 1))))
(assert (= x1901 (and x384 (not x3794))))
(assert (= x854 (or x3588 (and x1121 (not x1496)))))
(assert (= (x862 (x1324 x3896 1)) (+ (x862 x3896) 1)))
(assert (= (and x2761 x3849) x4565))
(assert (x2185 x1052))
(assert (= (=> (and (or x2812 (and (not x2812) (and (>= 1461501637330902918203684832716283019655932542975 x1099) (> 4294967296 x2930) (not (= 0 x17)) (< x1099 1461501637330902918203684832716283019655932542976) (= x17 (x2258 (x3182 x1099))) (>= x1099 0)))) (and (<= 0 x1099) (>= 1461501637330902918203684832716283019655932542975 x1099) (= x2812 (= 0 x1099)) (< x1099 1461501637330902918203684832716283019655932542976))) x2966) x2594))
(assert (= (=> (and (= x3261 x2638) (= x122 0)) x1372) x2428))
(assert (= (or x2405 x3096) x3219))
(assert (x2185 x3131))
(assert (x2185 x2580))
(assert (= x2836 (x862 (x3182 x2836))))
(assert (= (x862 (x1324 x2086 1)) (+ 1 (x862 x2086))))
(assert (x2185 x801))
(assert (x2185 x993))
(assert (= (and x1808 x3079) x1175))
(assert (= x104 (=> (= x3676 (= 0 x3965)) (and (=> (and (= x750 (or (and (= true (<= x2891 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2891 32)) (> x2891 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x3676)) (and (=> (and (and (= x99 (< x2500 x306)) (>= x306 0) (= (x2214 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x90)) x2500) (<= x306 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x750)) (and (=> (and (and (= x3800 (x227 (+ x306 x90))) (= (x185 x2652) x844) (= x287 (< x2500 x844)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x844) (<= 0 x844) (= (x1013 (x3182 x322) (x3187 5) 0) x2652)) (not x99)) (and (=> (and (not x287) (and (= x4052 32) (= (x227 (+ x844 x90)) x1752) (= 1 x2199))) x978) (=> x287 x4300))) (=> x99 x4300))) (=> x750 x4300))) (=> x3676 x4300)))))
(check-sat)
(exit)