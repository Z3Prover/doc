(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x84 0)) (((x1941 (x453 Int)) (x1373 (x645 x84) (x1125 x84) (x1800 Int)) (x2118 (x2055 x84) (x584 Int)))))
(declare-fun x990 () Int)
(declare-fun x1419 () Int)
(declare-fun x1166 () Int)
(declare-fun x207 () Int)
(declare-fun x1224 () Bool)
(declare-fun x845 () Bool)
(declare-fun x375 () Bool)
(declare-fun x1886 () Int)
(declare-fun x922 () Int)
(declare-fun x2097 () Int)
(declare-fun x1611 () Int)
(declare-fun x1263 () Int)
(declare-fun x1052 () Bool)
(declare-fun x2040 () Int)
(declare-fun x901 () Bool)
(declare-fun x789 () Bool)
(declare-fun x1831 () Int)
(declare-fun x857 () Int)
(declare-fun x1024 () Int)
(declare-fun x1514 () Int)
(declare-fun x361 () Bool)
(declare-fun x2167 () Int)
(declare-fun x1880 () Int)
(declare-fun x2199 () Int)
(declare-fun x47 () x84)
(declare-fun x2052 () Int)
(declare-fun x1408 () Bool)
(declare-fun x877 () Int)
(declare-fun x476 () Int)
(declare-fun x2030 () Int)
(declare-fun x2188 () Int)
(declare-fun x943 () Int)
(declare-fun x1927 () Int)
(declare-fun x841 () Bool)
(declare-fun x254 () Int)
(declare-fun x2132 () Int)
(declare-fun x393 () Int)
(declare-fun x1995 () Bool)
(declare-fun x1709 () Int)
(declare-fun x410 () Int)
(declare-fun x1566 () Bool)
(declare-fun x1526 () Int)
(declare-fun x997 () Bool)
(declare-fun x110 () Int)
(declare-fun x1011 () Bool)
(declare-fun x836 (Int) Int)
(declare-fun x457 () Int)
(declare-fun x817 () Int)
(declare-fun x1543 () Int)
(declare-fun x644 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x466 () Int)
(declare-fun x958 () Int)
(declare-fun x1409 () Bool)
(declare-fun x567 () Int)
(declare-fun x143 () Int)
(declare-fun x2044 () Int)
(declare-fun x1180 () Int)
(declare-fun x423 () Int)
(declare-fun x1728 () Bool)
(declare-fun x50 () Int)
(declare-fun x112 () Bool)
(declare-fun x440 () Int)
(declare-fun x878 () Bool)
(declare-fun x710 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1456 () x84)
(declare-fun x1653 () Int)
(declare-fun x212 () Int)
(declare-fun x1321 () Int)
(declare-fun x1988 () Bool)
(declare-fun x1130 () Int)
(declare-fun x342 () Int)
(declare-fun x1060 () Bool)
(declare-fun x952 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1048 () Int)
(declare-fun x1766 () Int)
(declare-fun x422 () Int)
(declare-fun x1447 () Int)
(declare-fun x1488 () Int)
(declare-fun x713 () Int)
(declare-fun x1234 () Bool)
(declare-fun x1553 () Int)
(declare-fun x294 () Bool)
(declare-fun x1421 () Int)
(declare-fun x2088 () Int)
(declare-fun x1051 (Int) Int)
(declare-fun x176 () Int)
(declare-fun x688 () Int)
(declare-fun x1506 () Int)
(declare-fun x930 () Int)
(declare-fun x636 () Int)
(declare-fun x408 (x84) Int)
(declare-fun x856 () Int)
(declare-fun x808 () Int)
(declare-fun x996 () Int)
(declare-fun x1990 () Int)
(declare-fun x225 () Int)
(declare-fun x1999 () Int)
(declare-fun x1301 () Int)
(declare-fun x893 () Bool)
(declare-fun x2116 () Int)
(declare-fun x628 () Int)
(declare-fun x1625 () Int)
(declare-fun x1471 () Int)
(declare-fun x908 () Int)
(declare-fun x1315 () Int)
(declare-fun x347 () Bool)
(declare-fun x2147 () Int)
(declare-fun x62 () Bool)
(declare-fun x1676 () Int)
(declare-fun x429 () Int)
(declare-fun x76 () Int)
(declare-fun x2054 () Int)
(declare-fun x14 () Int)
(declare-fun x2098 () Int)
(declare-fun x1450 () Bool)
(declare-fun x1348 () Int)
(declare-fun x1672 () Int)
(declare-fun x1787 () Int)
(declare-fun x993 () Bool)
(declare-fun x868 () Int)
(declare-fun x982 () Int)
(declare-fun x1379 () Bool)
(declare-fun x336 () Int)
(declare-fun x956 () Int)
(declare-fun x2042 () Int)
(declare-fun x1533 () Int)
(declare-fun x285 () Int)
(declare-fun x223 () Int)
(declare-fun x1184 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x929 () Int)
(declare-fun x270 () Int)
(declare-fun x747 () Int)
(declare-fun x1028 () Bool)
(declare-fun x121 () Int)
(declare-fun x190 () x84)
(declare-fun x662 () Bool)
(declare-fun x1457 () Int)
(declare-fun x1977 (Int) Int)
(declare-fun x1724 () Bool)
(declare-fun x2212 () Int)
(declare-fun x1192 () Bool)
(declare-fun x365 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x1507 () Int)
(declare-fun x1523 () Int)
(declare-fun x2 () Int)
(declare-fun x1129 () Int)
(declare-fun x262 () Int)
(declare-fun x1583 () Bool)
(declare-fun x536 () Bool)
(declare-fun x1207 () Int)
(declare-fun x1884 () Int)
(declare-fun x2013 () Int)
(declare-fun x1460 () Int)
(declare-fun x101 () Bool)
(declare-fun x2143 () Int)
(declare-fun x2120 () Int)
(declare-fun x90 () Int)
(declare-fun x1741 () Int)
(declare-fun x2130 () Int)
(declare-fun x1627 (Int) Int)
(declare-fun x601 () Bool)
(declare-fun x448 () Bool)
(declare-fun x388 () Int)
(declare-fun x1022 () Int)
(declare-fun x427 () Int)
(declare-fun x635 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x2058 () Int)
(declare-fun x1405 () Int)
(declare-fun x825 () Int)
(declare-fun x1847 () Int)
(declare-fun x202 () Bool)
(declare-fun x783 () Int)
(declare-fun x540 () Int)
(declare-fun x685 () Int)
(declare-fun x1600 () Bool)
(declare-fun x1535 () Int)
(declare-fun x115 () Bool)
(declare-fun x1368 (Int) Int)
(declare-fun x352 () Int)
(declare-fun x1769 () Bool)
(declare-fun x107 () Int)
(declare-fun x338 () x84)
(declare-fun x1693 () Int)
(declare-fun x449 () Int)
(declare-fun x1819 () Int)
(declare-fun x530 () Int)
(declare-fun x1417 () Int)
(declare-fun x760 () Int)
(declare-fun x1840 () Int)
(declare-fun x1420 () Int)
(declare-fun x1487 () Int)
(declare-fun x378 () Int)
(declare-fun x1905 () Bool)
(declare-fun x653 () Int)
(declare-fun x1357 () Bool)
(declare-fun x302 () Int)
(declare-fun x707 () Int)
(declare-fun x45 () Int)
(declare-fun x1795 () Bool)
(declare-fun x1894 () Bool)
(declare-fun x828 () Int)
(declare-fun x1210 () Int)
(declare-fun x521 () Int)
(declare-fun x1862 () Int)
(declare-fun x153 () Int)
(declare-fun x720 (Int) Int)
(declare-fun x1034 () Bool)
(declare-fun x1970 () Int)
(declare-fun x1064 () Bool)
(declare-fun x887 () Bool)
(declare-fun x549 () Int)
(declare-fun x978 () Bool)
(declare-fun x906 () Bool)
(declare-fun x2108 () Int)
(declare-fun x757 () Int)
(declare-fun x16 () Int)
(declare-fun x1304 () Int)
(declare-fun x822 () Int)
(declare-fun x2057 (Int) Int)
(declare-fun x1155 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x274 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x237 () Bool)
(declare-fun x675 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x1354 () Int)
(declare-fun x1437 () Int)
(declare-fun x2019 () Int)
(declare-fun x1413 () Int)
(declare-fun x80 () x84)
(declare-fun x309 () x84)
(declare-fun x2182 () Int)
(declare-fun x1852 () Bool)
(declare-fun x585 () Bool)
(declare-fun x398 () Int)
(declare-fun x809 () Int)
(declare-fun x442 () Bool)
(declare-fun x761 () Int)
(declare-fun x646 () Int)
(declare-fun x2200 () Bool)
(declare-fun x1596 () Int)
(declare-fun x1326 () Int)
(declare-fun x1806 () Int)
(declare-fun x497 () Int)
(declare-fun x1892 () Int)
(declare-fun x1240 () Bool)
(declare-fun x369 () Int)
(declare-fun x1225 () Int)
(declare-fun x1299 () Int)
(declare-fun x1219 () Int)
(declare-fun x1797 () Int)
(declare-fun x15 () Int)
(declare-fun x30 (Int) Int)
(declare-fun x394 () Int)
(declare-fun x1202 () Int)
(declare-fun x855 () Int)
(declare-fun x1066 () Int)
(declare-fun x1204 () Int)
(declare-fun x778 () Int)
(declare-fun x649 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x1385 () Int)
(declare-fun x1331 () Int)
(declare-fun x1216 () Int)
(declare-fun x1355 () Int)
(declare-fun x1498 () Int)
(declare-fun x1269 () Int)
(declare-fun x1380 () Int)
(declare-fun x517 () Int)
(declare-fun x920 () Int)
(declare-fun x815 () Bool)
(declare-fun x587 () Int)
(declare-fun x515 () Int)
(declare-fun x1791 () Int)
(declare-fun x2053 () x84)
(declare-fun x239 () Bool)
(declare-fun x1451 () Int)
(declare-fun x659 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x1760 () Int)
(declare-fun x1356 () Int)
(declare-fun x1701 () Bool)
(declare-fun x1212 () Int)
(declare-fun x156 () Int)
(declare-fun x629 () Bool)
(declare-fun x968 () Bool)
(declare-fun x939 () Int)
(declare-fun x2138 () Int)
(declare-fun x2043 () Int)
(declare-fun x1423 () Int)
(declare-fun x2210 () Int)
(declare-fun x1338 () Int)
(declare-fun x366 () Int)
(declare-fun x753 () x84)
(declare-fun x819 () Int)
(declare-fun x435 () Int)
(declare-fun x154 () Int)
(declare-fun x1541 () Bool)
(declare-fun x869 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1606 () Int)
(declare-fun x135 () Int)
(declare-fun x1764 () Int)
(declare-fun x533 () Int)
(declare-fun x1621 () x84)
(declare-fun x873 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1538 () Int)
(declare-fun x1332 () Int)
(declare-fun x275 () Int)
(declare-fun x1531 () Int)
(declare-fun x751 () Bool)
(declare-fun x1889 () Int)
(declare-fun x754 () Int)
(declare-fun x482 () Bool)
(declare-fun x404 () Int)
(declare-fun x2091 () Bool)
(declare-fun x1464 () Int)
(declare-fun x354 () Int)
(declare-fun x2081 () Bool)
(declare-fun x471 () Int)
(declare-fun x1151 () Bool)
(declare-fun x211 () Int)
(declare-fun x611 () Int)
(declare-fun x23 () Int)
(declare-fun x580 () Bool)
(declare-fun x784 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1705 () Int)
(declare-fun x1547 () Bool)
(declare-fun x681 () Int)
(declare-fun x473 () Bool)
(declare-fun x1992 () Int)
(declare-fun x1648 () Int)
(declare-fun x2096 () Int)
(declare-fun x1689 () Int)
(declare-fun x948 () Int)
(declare-fun x1960 () Bool)
(declare-fun x2186 () Int)
(declare-fun x1700 () Int)
(declare-fun x1441 () Int)
(declare-fun x1964 () Int)
(declare-fun x1191 () Int)
(declare-fun x1638 () Int)
(declare-fun x2122 () Int)
(declare-fun x1218 () Bool)
(declare-fun x1898 () x84)
(declare-fun x1196 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x1752 () Int)
(declare-fun x974 () Int)
(declare-fun x1120 () Int)
(declare-fun x1277 () Int)
(declare-fun x1861 () Bool)
(declare-fun x1979 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1767 () Int)
(declare-fun x2179 () Int)
(declare-fun x417 () Bool)
(declare-fun x1193 () Int)
(declare-fun x2060 () Int)
(declare-fun x2045 () Bool)
(declare-fun x623 () Int)
(declare-fun x941 () Int)
(declare-fun x2026 () Bool)
(declare-fun x1018 () x84)
(declare-fun x197 () Int)
(declare-fun x711 () Int)
(declare-fun x934 () Bool)
(declare-fun x509 () Int)
(declare-fun x759 () x84)
(declare-fun x673 () x84)
(declare-fun x1558 () Int)
(declare-fun x995 () Int)
(declare-fun x534 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x380 () Int)
(declare-fun x739 () Int)
(declare-fun x1158 () Int)
(declare-fun x189 () Int)
(declare-fun x2099 () x84)
(declare-fun x616 () Bool)
(declare-fun x1089 () Int)
(declare-fun x1161 () Int)
(declare-fun x1426 () Int)
(declare-fun x624 () Int)
(declare-fun x1476 () Bool)
(declare-fun x516 () Int)
(declare-fun x253 () x84)
(declare-fun x987 () Int)
(declare-fun x1495 () Int)
(declare-fun x1198 () Bool)
(declare-fun x1773 () Int)
(declare-fun x161 () Int)
(declare-fun x1497 () Int)
(declare-fun x1446 () Int)
(declare-fun x1579 () Int)
(declare-fun x1392 () Bool)
(declare-fun x37 () Bool)
(declare-fun x1200 () x84)
(declare-fun x1389 () Int)
(declare-fun x20 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x690 () Int)
(declare-fun x109 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x61 () Int)
(declare-fun x1206 () Int)
(declare-fun x2047 () Int)
(declare-fun x1761 () Int)
(declare-fun x1145 () Bool)
(declare-fun x147 () Bool)
(declare-fun x545 () Int)
(declare-fun x969 () Int)
(declare-fun x2117 (Int) Int)
(declare-fun x1720 () Int)
(declare-fun x1374 () Int)
(declare-fun x1065 () Int)
(declare-fun x955 () Int)
(declare-fun x157 () Bool)
(declare-fun x593 () Int)
(declare-fun x798 () Bool)
(declare-fun x1778 () Int)
(declare-fun x1384 () Int)
(declare-fun x748 () Int)
(declare-fun x1139 (Int) Int)
(declare-fun x150 () Int)
(declare-fun x744 () Int)
(declare-fun x2064 () Bool)
(declare-fun x469 () Bool)
(declare-fun x876 () Int)
(declare-fun x1398 () Int)
(declare-fun x198 () Int)
(declare-fun x967 () Int)
(declare-fun x1233 () Int)
(declare-fun x159 () Int)
(declare-fun x656 () Int)
(declare-fun x537 () Bool)
(declare-fun x583 () Bool)
(declare-fun x1851 () Int)
(declare-fun x862 () Bool)
(declare-fun x705 () Bool)
(declare-fun x894 () x84)
(declare-fun x163 () Int)
(declare-fun x854 () Int)
(declare-fun x1740 () Int)
(declare-fun x546 () Int)
(declare-fun x2176 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x775 () Bool)
(declare-fun x1756 () Int)
(declare-fun x821 () Int)
(declare-fun x966 () Int)
(declare-fun x846 () Int)
(declare-fun x325 () Int)
(declare-fun x602 () Bool)
(declare-fun x395 () Int)
(declare-fun x1001 () Int)
(declare-fun x264 () Int)
(declare-fun x384 () Int)
(declare-fun x640 () Int)
(declare-fun x1105 () Int)
(declare-fun x1602 () Bool)
(declare-fun x105 () Int)
(declare-fun x960 () Int)
(declare-fun x412 () Int)
(declare-fun x891 () Int)
(declare-fun x1954 () Int)
(declare-fun x1835 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x439 () Int)
(declare-fun x1748 () Int)
(declare-fun x2012 () Int)
(declare-fun x937 () Int)
(declare-fun x1043 () Bool)
(declare-fun x1807 () Int)
(declare-fun x451 () Int)
(declare-fun x475 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1519 () Int)
(declare-fun x184 () Int)
(declare-fun x501 () Int)
(declare-fun x903 () Int)
(declare-fun x1059 () Int)
(declare-fun x1172 () Int)
(declare-fun x209 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1601 () Int)
(declare-fun x2163 () Int)
(declare-fun x2211 () Int)
(declare-fun x1058 () x84)
(declare-fun x1319 () Int)
(declare-fun x668 () Int)
(declare-fun x2107 () Bool)
(declare-fun x219 () Bool)
(declare-fun x1127 () Int)
(declare-fun x971 () Int)
(declare-fun x1250 () Int)
(declare-fun x244 () Int)
(declare-fun x2010 () Int)
(declare-fun x387 () Int)
(declare-fun x802 () Int)
(declare-fun x1618 () Bool)
(declare-fun x171 () Int)
(declare-fun x1930 () Int)
(declare-fun x2082 () Int)
(declare-fun x24 () x84)
(declare-fun x913 () Bool)
(declare-fun x144 () Bool)
(declare-fun x333 () Bool)
(declare-fun x2150 () Int)
(declare-fun x201 () Int)
(declare-fun x2191 () Int)
(declare-fun x568 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1903 () Int)
(declare-fun x1920 () Int)
(declare-fun x1585 () Int)
(declare-fun x2014 () Int)
(declare-fun x788 () Bool)
(declare-fun x650 () Bool)
(declare-fun x1928 () Int)
(declare-fun x1649 () Int)
(declare-fun x1076 () Bool)
(declare-fun x902 () Int)
(declare-fun x2161 () Int)
(declare-fun x511 () Int)
(declare-fun x188 () Int)
(declare-fun x1329 () Int)
(declare-fun x2031 () Int)
(declare-fun x570 () Int)
(declare-fun x737 () Int)
(declare-fun x658 () Bool)
(declare-fun x1150 () Int)
(declare-fun x68 () Int)
(declare-fun x638 () Bool)
(declare-fun x1121 () Int)
(declare-fun x1549 () Bool)
(declare-fun x641 () Int)
(declare-fun x1565 () Int)
(declare-fun x2124 () Int)
(declare-fun x1570 () Int)
(declare-fun x1888 () Int)
(declare-fun x1110 () Int)
(declare-fun x217 () Int)
(declare-fun x2181 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x605 () Bool)
(declare-fun x1532 () Int)
(declare-fun x994 () Int)
(declare-fun x1916 () Bool)
(declare-fun x1956 () Int)
(declare-fun x577 () Int)
(declare-fun x1003 () Bool)
(declare-fun x55 () Bool)
(declare-fun x312 () Int)
(declare-fun x1213 () Int)
(declare-fun x1106 () Int)
(declare-fun x2192 () Bool)
(declare-fun x848 () Bool)
(declare-fun x1685 () Int)
(declare-fun x1309 () Bool)
(declare-fun x523 () Bool)
(declare-fun x1859 () Int)
(declare-fun x1855 () Int)
(declare-fun x520 () Int)
(declare-fun x2001 () Int)
(declare-fun x409 () Int)
(declare-fun x381 () Bool)
(declare-fun x1609 () Int)
(declare-fun x94 () Int)
(declare-fun x474 () Int)
(declare-fun x35 () Int)
(declare-fun x1792 () Int)
(declare-fun x609 () Int)
(declare-fun x357 (Int Int) Int)
(declare-fun x1443 () Bool)
(declare-fun x1562 () Int)
(declare-fun x652 () Int)
(declare-fun x1684 () x84)
(declare-fun x444 () Int)
(declare-fun x2202 () Bool)
(declare-fun x1522 () Int)
(declare-fun x1753 () Int)
(declare-fun x420 () Bool)
(declare-fun x680 () Int)
(declare-fun x215 () Int)
(declare-fun x1642 () Int)
(declare-fun x684 () Int)
(declare-fun x945 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1439 () Int)
(declare-fun x389 () Bool)
(declare-fun x1614 () Int)
(declare-fun x1078 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x1226 () Int)
(declare-fun x1086 () Int)
(declare-fun x1101 () Bool)
(declare-fun x524 () Int)
(declare-fun x736 () Bool)
(declare-fun x1305 () Int)
(declare-fun x983 () Int)
(declare-fun x470 () Int)
(declare-fun x2197 () Int)
(declare-fun x734 () Bool)
(declare-fun x689 () Int)
(declare-fun x1020 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x1993 () Int)
(declare-fun x1484 () Bool)
(declare-fun x1811 () Int)
(declare-fun x2196 () Int)
(declare-fun x1044 () Int)
(declare-fun x741 () Int)
(declare-fun x1817 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1575 () Int)
(declare-fun x608 () Bool)
(declare-fun x1108 () Int)
(declare-fun x1619 () Bool)
(declare-fun x498 () Int)
(declare-fun x1312 () Int)
(declare-fun x42 () Int)
(declare-fun x703 () Bool)
(declare-fun x988 () Int)
(declare-fun x1904 () Int)
(declare-fun x2154 () Int)
(declare-fun x883 () Int)
(declare-fun x1747 () Bool)
(declare-fun x43 () x84)
(declare-fun x25 () Bool)
(declare-fun x1509 () Int)
(declare-fun x1144 () Int)
(declare-fun x663 () Int)
(declare-fun x142 () Bool)
(declare-fun x672 () x84)
(declare-fun x288 () Bool)
(declare-fun x1056 () Int)
(declare-fun x489 () Int)
(declare-fun x69 () Bool)
(declare-fun x551 () Int)
(declare-fun x942 () Bool)
(declare-fun x319 () Int)
(declare-fun x525 () Int)
(declare-fun x772 () Int)
(declare-fun x1012 () Int)
(declare-fun x677 () Int)
(declare-fun x1400 () Int)
(declare-fun x1592 () Int)
(declare-fun x310 () Int)
(declare-fun x1504 () Bool)
(declare-fun x306 () Int)
(declare-fun x1581 () Int)
(declare-fun x1818 () Int)
(declare-fun x1805 () Int)
(declare-fun x970 () Bool)
(declare-fun x2103 () Int)
(declare-fun x1838 () Int)
(declare-fun x1468 () Bool)
(declare-fun x514 () Int)
(declare-fun x1691 () Int)
(declare-fun x874 () Int)
(declare-fun x436 () Int)
(declare-fun x455 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1279 () Int)
(declare-fun x1146 () Int)
(declare-fun x2146 () Int)
(declare-fun x2011 () Int)
(declare-fun x1472 () Int)
(declare-fun x1690 () Int)
(declare-fun x1912 () Int)
(declare-fun x236 () x84)
(declare-fun x927 () Int)
(declare-fun x600 () Int)
(declare-fun x1662 () Int)
(declare-fun x847 () Int)
(declare-fun x870 () Int)
(declare-fun x951 () Bool)
(declare-fun x1215 () Int)
(declare-fun x1590 (x84) Int)
(declare-fun x82 () Bool)
(declare-fun x496 () Bool)
(declare-fun x300 () Int)
(declare-fun x2059 () Int)
(declare-fun x1576 () Int)
(declare-fun x2115 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x432 () Int)
(declare-fun x259 () Int)
(declare-fun x919 () Int)
(declare-fun x984 () Int)
(declare-fun x1124 () Int)
(declare-fun x1900 () Int)
(declare-fun x838 () Int)
(declare-fun x1682 () Int)
(declare-fun x1729 () Int)
(declare-fun x1042 () Int)
(declare-fun x767 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x714 () Bool)
(declare-fun x460 () Bool)
(declare-fun x58 () Bool)
(declare-fun x728 () Int)
(declare-fun x541 (Int) x84)
(declare-fun x1654 () Int)
(declare-fun x639 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x1796 () Bool)
(declare-fun x799 () Int)
(declare-fun x1458 () x84)
(declare-fun x886 () Int)
(declare-fun x612 () Int)
(declare-fun x1026 () Int)
(declare-fun x1633 () Bool)
(declare-fun x2111 () Int)
(declare-fun x1440 () Bool)
(declare-fun x1706 () Int)
(declare-fun x1933 (Int) Int)
(declare-fun x1623 () Bool)
(declare-fun x305 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x2070 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1291 () Int)
(declare-fun x607 () Int)
(declare-fun x1643 () Int)
(declare-fun x2080 () Int)
(declare-fun x1055 () Int)
(declare-fun x1901 () Int)
(declare-fun x1181 () Int)
(declare-fun x1259 () Bool)
(declare-fun x749 () Bool)
(declare-fun x138 () Bool)
(declare-fun x413 () Int)
(declare-fun x356 () Bool)
(declare-fun x691 () Bool)
(declare-fun x462 () Int)
(declare-fun x1750 () Int)
(declare-fun x1306 () Int)
(declare-fun x326 () Int)
(declare-fun x1227 () Int)
(declare-fun x1435 () Int)
(declare-fun x2158 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x553 () Bool)
(declare-fun x1175 () Int)
(declare-fun x976 () Int)
(declare-fun x273 () Int)
(declare-fun x1742 () Int)
(declare-fun x539 () Int)
(declare-fun x1375 () Bool)
(declare-fun x1126 () Int)
(declare-fun x40 () Int)
(declare-fun x1837 () Int)
(declare-fun x2041 () Int)
(declare-fun x53 () Int)
(declare-fun x2090 () Int)
(declare-fun x486 () Bool)
(declare-fun x88 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x860 () Bool)
(declare-fun x36 () Int)
(declare-fun x1314 () Int)
(declare-fun x999 () Bool)
(declare-fun x571 () Int)
(declare-fun x1940 () Int)
(declare-fun x932 () Int)
(declare-fun x2145 () Int)
(declare-fun x1813 () Int)
(declare-fun x2131 () Bool)
(declare-fun x370 () Int)
(declare-fun x1217 () Int)
(declare-fun x1969 () Int)
(declare-fun x1925 () Bool)
(declare-fun x224 () Int)
(declare-fun x430 () Int)
(declare-fun x220 () Int)
(declare-fun x801 () Int)
(declare-fun x843 () Int)
(declare-fun x1091 () Int)
(declare-fun x208 () Bool)
(declare-fun x697 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x52 () Bool)
(declare-fun x2125 () Int)
(declare-fun x324 () Int)
(declare-fun x1603 () Int)
(declare-fun x563 () Int)
(declare-fun x1077 () Int)
(declare-fun x1952 () Int)
(declare-fun x1937 () Int)
(declare-fun x695 () Bool)
(declare-fun x1899 () Int)
(declare-fun x340 () x84)
(declare-fun x2021 () Int)
(declare-fun x131 () Int)
(declare-fun x664 () Bool)
(declare-fun x1770 () x84)
(declare-fun x895 () Int)
(declare-fun x1036 () Int)
(declare-fun x1183 () Int)
(declare-fun x1647 () Int)
(declare-fun x1244 () Int)
(declare-fun x723 () Int)
(declare-fun x1406 () Int)
(declare-fun x786 () Int)
(declare-fun x2035 () Int)
(declare-fun x1551 () Int)
(declare-fun x1783 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x1776 () Int)
(declare-fun x1751 () Bool)
(declare-fun x555 () Int)
(declare-fun x1598 () Int)
(declare-fun x738 () Bool)
(declare-fun x907 () Bool)
(declare-fun x1857 () Int)
(declare-fun x560 () Int)
(declare-fun x1945 () Int)
(declare-fun x335 () Int)
(declare-fun x1099 () Int)
(declare-fun x441 () Int)
(declare-fun x2078 () Bool)
(declare-fun x1528 () Int)
(declare-fun x858 () Int)
(declare-fun x679 () Int)
(declare-fun x548 () Int)
(declare-fun x60 () Int)
(declare-fun x1407 () Bool)
(declare-fun x777 () Int)
(declare-fun x2159 () Int)
(declare-fun x2178 (Int) Int)
(declare-fun x1730 () Int)
(declare-fun x594 () Int)
(declare-fun x2148 () Int)
(declare-fun x446 () Int)
(declare-fun x145 () Int)
(declare-fun x926 () Int)
(declare-fun x718 () Int)
(declare-fun x1864 () Int)
(declare-fun x765 () Bool)
(declare-fun x1694 () Int)
(declare-fun x1232 () x84)
(declare-fun x2104 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1716 () Int)
(declare-fun x1 () Bool)
(declare-fun x353 () Int)
(declare-fun x1316 () Int)
(declare-fun x492 () Bool)
(declare-fun x528 () Int)
(declare-fun x1021 () Int)
(declare-fun x416 () Int)
(declare-fun x1483 () Int)
(declare-fun x596 () Int)
(declare-fun x160 () Bool)
(declare-fun x71 () Int)
(declare-fun x1841 () Int)
(declare-fun x1117 () Bool)
(declare-fun x1383 () Int)
(declare-fun x334 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x763 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x756 () Int)
(declare-fun x579 () Bool)
(declare-fun x731 () Int)
(declare-fun x1254 () Int)
(declare-fun x2152 () Int)
(declare-fun x643 () Int)
(declare-fun x944 () Int)
(declare-fun x1924 () Int)
(declare-fun x11 () Int)
(declare-fun x1923 (Int) Int)
(declare-fun x949 () Int)
(declare-fun x933 () Bool)
(declare-fun x1843 () Int)
(declare-fun x193 () Bool)
(declare-fun x892 () Bool)
(declare-fun x1573 () Int)
(declare-fun x925 () Int)
(declare-fun x575 () Bool)
(declare-fun x2093 () Int)
(declare-fun x56 () Int)
(declare-fun x1103 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x122 () Int)
(declare-fun x1644 (Int) Int)
(declare-fun x1142 () Int)
(declare-fun x73 () Bool)
(declare-fun x550 () Bool)
(declare-fun x896 () Int)
(declare-fun x569 () Int)
(declare-fun x1775 () x84)
(declare-fun x1546 () Bool)
(declare-fun x373 () Int)
(declare-fun x298 () Int)
(declare-fun x2139 () Bool)
(declare-fun x1149 () Int)
(declare-fun x158 () Int)
(declare-fun x764 () Int)
(declare-fun x1605 () Int)
(declare-fun x1080 () Bool)
(declare-fun x1554 () Int)
(declare-fun x330 () Int)
(declare-fun x1695 () Bool)
(declare-fun x116 () Bool)
(declare-fun x595 () Bool)
(declare-fun x2050 () Int)
(declare-fun x946 () Int)
(declare-fun x1790 (Int) Int)
(declare-fun x450 () Int)
(declare-fun x1936 () Int)
(declare-fun x1088 () Int)
(declare-fun x800 () Bool)
(declare-fun x1365 () Int)
(declare-fun x414 () Int)
(declare-fun x1138 () Int)
(declare-fun x2114 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1626 () Int)
(declare-fun x2133 () Int)
(declare-fun x750 () Int)
(declare-fun x1589 () Int)
(declare-fun x396 () Int)
(declare-fun x542 () Int)
(declare-fun x1869 () Int)
(declare-fun x1049 () Int)
(declare-fun x676 () Int)
(declare-fun x177 () Int)
(declare-fun x2207 () Int)
(declare-fun x491 () Int)
(declare-fun x1267 () Int)
(declare-fun x792 () Bool)
(declare-fun x331 (Int Int) Int)
(declare-fun x1702 () Int)
(declare-fun x1812 () Bool)
(declare-fun x12 () Bool)
(declare-fun x1578 () Int)
(declare-fun x1765 () Int)
(declare-fun x315 () Int)
(declare-fun x2085 () Int)
(declare-fun x243 () Bool)
(declare-fun x1005 () Int)
(declare-fun x1698 () Int)
(declare-fun x979 () Int)
(declare-fun x1503 () Bool)
(declare-fun x805 () Int)
(declare-fun x493 () Int)
(declare-fun x1017 () Int)
(declare-fun x1133 () Int)
(declare-fun x268 () Int)
(declare-fun x9 () Int)
(declare-fun x1112 () Bool)
(declare-fun x1991 (x84) Int)
(declare-fun x592 () Int)
(declare-fun x1477 () Int)
(declare-fun x1122 () Bool)
(declare-fun x867 () Bool)
(declare-fun x900 () Bool)
(declare-fun x89 () Bool)
(declare-fun x1726 () Int)
(declare-fun x964 () Bool)
(declare-fun x849 () Int)
(declare-fun x1359 () Bool)
(declare-fun x2128 () Int)
(declare-fun x247 () Int)
(declare-fun x1774 () Bool)
(declare-fun x693 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x1907 () Int)
(declare-fun x709 () Int)
(declare-fun x205 () Int)
(declare-fun x1640 () Int)
(declare-fun x1885 () Int)
(declare-fun x1186 () Int)
(declare-fun x1958 () Int)
(declare-fun x1530 () Bool)
(declare-fun x1681 () Int)
(declare-fun x1584 () Int)
(declare-fun x1975 () Bool)
(declare-fun x113 () Int)
(declare-fun x293 () Bool)
(declare-fun x851 () Int)
(declare-fun x234 () Int)
(declare-fun x434 () Int)
(declare-fun x1023 () Int)
(declare-fun x303 () Bool)
(declare-fun x1686 () Int)
(declare-fun x174 () Bool)
(declare-fun x1763 () Int)
(declare-fun x692 () Int)
(declare-fun x463 () Bool)
(declare-fun x620 () Int)
(declare-fun x1336 () Int)
(declare-fun x1268 () Int)
(declare-fun x256 () Int)
(declare-fun x1363 () Bool)
(declare-fun x881 () Bool)
(declare-fun x1510 () Int)
(declare-fun x1951 () Int)
(declare-fun x1656 () Int)
(declare-fun x667 () Bool)
(declare-fun x1382 () Int)
(declare-fun x991 () Bool)
(declare-fun x372 () Int)
(declare-fun x2066 () Int)
(declare-fun x292 () Int)
(declare-fun x1397 () Int)
(declare-fun x1039 () Bool)
(declare-fun x1670 () Int)
(declare-fun x1404 () x84)
(declare-fun x702 () Int)
(declare-fun x104 () Int)
(declare-fun x1615 () Bool)
(declare-fun x1914 () Int)
(declare-fun x1377 () Int)
(declare-fun x502 () Int)
(declare-fun x655 () Bool)
(declare-fun x376 () Bool)
(declare-fun x837 () Bool)
(declare-fun x289 () Bool)
(declare-fun x32 () Int)
(declare-fun x266 () Int)
(declare-fun x875 () Int)
(declare-fun x108 () Int)
(declare-fun x961 () Int)
(declare-fun x1429 () Bool)
(declare-fun x2205 () Int)
(declare-fun x1897 () Int)
(declare-fun x91 () Bool)
(declare-fun x316 () Int)
(declare-fun x1617 () Int)
(declare-fun x1536 () Int)
(declare-fun x1932 () Int)
(declare-fun x1666 () Int)
(declare-fun x2036 () Bool)
(declare-fun x1324 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1703 () Int)
(declare-fun x889 () Int)
(declare-fun x1561 () Int)
(declare-fun x651 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x479 () Int)
(declare-fun x346 () Bool)
(declare-fun x1462 () Int)
(declare-fun x1821 () Int)
(declare-fun x1310 () Int)
(declare-fun x992 () Int)
(declare-fun x27 () Bool)
(declare-fun x627 () Int)
(declare-fun x1351 () Bool)
(declare-fun x2162 () Int)
(declare-fun x1194 () Int)
(declare-fun x782 () Bool)
(declare-fun x2024 () Int)
(declare-fun x1261 () Int)
(declare-fun x1803 () Int)
(declare-fun x1245 () Int)
(declare-fun x1955 () Int)
(declare-fun x8 () Int)
(declare-fun x1290 () x84)
(declare-fun x928 () Int)
(declare-fun x559 () Int)
(declare-fun x1273 () Int)
(declare-fun x590 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x2168 () Int)
(declare-fun x1559 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x1211 () x84)
(declare-fun x712 () Int)
(declare-fun x320 () x84)
(declare-fun x2204 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x888 () Int)
(declare-fun x38 () Bool)
(declare-fun x95 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x48 () Int)
(declare-fun x1557 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1085 () Int)
(declare-fun x1863 () Int)
(declare-fun x1140 () Int)
(declare-fun x374 () Int)
(declare-fun x936 () Int)
(declare-fun x2089 () Int)
(declare-fun x1167 () Int)
(declare-fun x1595 () Bool)
(declare-fun x562 () Int)
(declare-fun x431 () Int)
(declare-fun x1808 () Int)
(declare-fun x1919 () Int)
(declare-fun x1289 () Int)
(declare-fun x1959 () Int)
(declare-fun x1513 () Int)
(declare-fun x947 () Int)
(declare-fun x582 () Bool)
(declare-fun x2126 (Int) Int)
(declare-fun x371 () Int)
(declare-fun x980 () Int)
(declare-fun x2071 () Int)
(declare-fun x1353 () Bool)
(declare-fun x2193 () Int)
(declare-fun x2075 () Bool)
(declare-fun x1976 () Int)
(declare-fun x599 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x915 () Int)
(declare-fun x1552 () Int)
(declare-fun x74 () Bool)
(declare-fun x853 () Bool)
(declare-fun x1182 (x84) Int)
(declare-fun x816 () Int)
(declare-fun x213 () Bool)
(declare-fun x1908 () Int)
(declare-fun x139 () Bool)
(declare-fun x367 () Bool)
(declare-fun x488 () Bool)
(declare-fun x487 () Bool)
(declare-fun x345 () Int)
(declare-fun x1079 () Int)
(declare-fun x1983 () Int)
(declare-fun x519 () Bool)
(declare-fun x218 () Int)
(declare-fun x1669 () Int)
(declare-fun x1340 () Int)
(declare-fun x291 () Int)
(declare-fun x192 () Int)
(declare-fun x1571 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x1372 () Int)
(declare-fun x938 () Int)
(declare-fun x386 () Int)
(declare-fun x852 () Bool)
(declare-fun x1588 () Int)
(declare-fun x1298 (Int Int) Int)
(declare-fun x2171 () Bool)
(declare-fun x740 () Int)
(declare-fun x818 () Bool)
(declare-fun x99 () Int)
(declare-fun x1917 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x1147 () Int)
(declare-fun x1427 () Int)
(declare-fun x1749 () Bool)
(declare-fun x823 () Bool)
(declare-fun x1587 () Int)
(declare-fun x2025 () Int)
(declare-fun x1718 () Int)
(declare-fun x2022 () Int)
(declare-fun x826 () Bool)
(declare-fun x909 () Int)
(declare-fun x452 () Int)
(declare-fun x814 () Int)
(declare-fun x1563 () Bool)
(declare-fun x397 () Bool)
(declare-fun x185 () Int)
(declare-fun x806 () Int)
(declare-fun x1516 () Int)
(declare-fun x1511 () Int)
(declare-fun x251 () x84)
(declare-fun x1804 () Int)
(declare-fun x1759 () Bool)
(declare-fun x1257 () Int)
(declare-fun x406 () Bool)
(declare-fun x864 () Int)
(declare-fun x633 () Int)
(declare-fun x1019 () Int)
(declare-fun x1727 () Bool)
(declare-fun x1710 () Int)
(declare-fun x120 () Bool)
(declare-fun x513 () Int)
(declare-fun x2164 () Int)
(declare-fun x985 (x84) Int)
(declare-fun x850 () Int)
(declare-fun x86 () Int)
(declare-fun x1159 () Int)
(declare-fun x2170 () Bool)
(declare-fun x2149 () Bool)
(declare-fun x1168 () Int)
(declare-fun x149 () Int)
(declare-fun x773 () Int)
(declare-fun x1664 () Bool)
(declare-fun x278 () Bool)
(declare-fun x67 () Int)
(declare-fun x1973 () Int)
(declare-fun x2034 () Int)
(declare-fun x128 () Bool)
(declare-fun x1134 () Int)
(declare-fun x2123 () Int)
(declare-fun x683 () Int)
(declare-fun x1607 () Int)
(declare-fun x727 () Int)
(declare-fun x191 () Int)
(declare-fun x34 () Bool)
(declare-fun x1422 () x84)
(declare-fun x1762 () Int)
(declare-fun x269 () Int)
(declare-fun x1962 () Int)
(declare-fun x1114 () Int)
(declare-fun x1967 () Int)
(declare-fun x364 () Int)
(declare-fun x1466 () Int)
(declare-fun x1412 () Int)
(declare-fun x271 (Int) Int)
(declare-fun x866 () Int)
(declare-fun x81 () Int)
(declare-fun x2175 () Int)
(declare-fun x631 () Int)
(declare-fun x222 () Int)
(declare-fun x972 () Int)
(declare-fun x490 () Bool)
(declare-fun x1723 () Int)
(declare-fun x1046 () Bool)
(declare-fun x1308 () x84)
(declare-fun x1799 () x84)
(declare-fun x1997 () Int)
(declare-fun x1265 () Int)
(declare-fun x332 () Int)
(declare-fun x1868 () Int)
(declare-fun x250 () Int)
(declare-fun x295 () Bool)
(declare-fun x57 () Int)
(declare-fun x1722 () Bool)
(declare-fun x1780 () Int)
(declare-fun x1295 () Bool)
(declare-fun x467 () Int)
(declare-fun x699 () Int)
(declare-fun x1671 () Int)
(declare-fun x2076 () Int)
(declare-fun x1313 () Int)
(declare-fun x1170 () Int)
(declare-fun x981 () Int)
(declare-fun x1344 () Int)
(declare-fun x360 () Int)
(declare-fun x531 () Int)
(declare-fun x634 () Bool)
(declare-fun x1965 () Int)
(declare-fun x2077 () Int)
(declare-fun x844 () Int)
(declare-fun x267 () x84)
(declare-fun x1572 () Bool)
(declare-fun x1109 () Int)
(declare-fun x2016 () Int)
(declare-fun x1858 () Bool)
(declare-fun x1971 () Bool)
(declare-fun x1350 () Int)
(declare-fun x1334 () Int)
(declare-fun x1239 () Int)
(declare-fun x1223 () Bool)
(declare-fun x1632 () Int)
(declare-fun x1755 () Int)
(declare-fun x508 () Bool)
(declare-fun x2190 () Int)
(declare-fun x1335 () Bool)
(declare-fun x603 () Bool)
(declare-fun x478 () Int)
(declare-fun x807 () Int)
(declare-fun x203 () Int)
(declare-fun x2129 () Int)
(declare-fun x1872 () Int)
(declare-fun x2038 () Int)
(declare-fun x1922 () Int)
(declare-fun x140 () Int)
(declare-fun x221 () x84)
(declare-fun x793 () Int)
(declare-fun x1948 () Int)
(declare-fun x1270 () Bool)
(declare-fun x400 () Int)
(declare-fun x526 () Int)
(declare-fun x402 () Int)
(declare-fun x989 () Bool)
(declare-fun x1699 () Int)
(declare-fun x129 () Bool)
(declare-fun x96 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x666 () Int)
(declare-fun x1994 () Int)
(declare-fun x438 () Int)
(declare-fun x1371 () Int)
(declare-fun x1717 () Int)
(declare-fun x890 () Int)
(declare-fun x1875 () Int)
(declare-fun x719 () Int)
(declare-fun x1300 () Int)
(declare-fun x249 () Int)
(declare-fun x1474 () Int)
(declare-fun x494 () Int)
(declare-fun x1677 () Int)
(declare-fun x344 () Int)
(declare-fun x1378 () Int)
(declare-fun x49 () Int)
(declare-fun x1141 () Bool)
(declare-fun x231 () Bool)
(declare-fun x953 () Int)
(declare-fun x1395 () Int)
(declare-fun x7 () Bool)
(declare-fun x1593 () x84)
(declare-fun x671 () Int)
(declare-fun x1577 () Int)
(declare-fun x166 () Int)
(declare-fun x1454 () Int)
(declare-fun x1896 () Int)
(declare-fun x1416 () Bool)
(declare-fun x1534 () Int)
(declare-fun x1033 () Int)
(declare-fun x1448 () Int)
(declare-fun x1696 () Int)
(declare-fun x1367 () Bool)
(declare-fun x804 () Int)
(declare-fun x1909 () Int)
(declare-fun x1825 () Int)
(declare-fun x1736 () Int)
(declare-fun x544 () Bool)
(declare-fun x98 () Int)
(declare-fun x1963 () Int)
(declare-fun x1745 (Int Int) Int)
(declare-fun x1801 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x255 () Int)
(declare-fun x2027 () Int)
(declare-fun x557 () Int)
(declare-fun x1692 () Int)
(declare-fun x2048 (Int Int) Int)
(declare-fun x1652 () Int)
(declare-fun x97 () Int)
(declare-fun x146 () Int)
(declare-fun x1856 () Int)
(declare-fun x1659 () Int)
(declare-fun x103 (Int) Int)
(declare-fun x183 () Int)
(declare-fun x1658 () Bool)
(declare-fun x181 () Int)
(declare-fun x1832 () Bool)
(declare-fun x2039 () Int)
(declare-fun x861 () Bool)
(declare-fun x179 () Int)
(declare-fun x1177 () Bool)
(declare-fun x1735 () Int)
(declare-fun x1496 () Int)
(declare-fun x2065 () Bool)
(declare-fun x1929 () Int)
(declare-fun x130 () Int)
(declare-fun x1520 () Int)
(declare-fun x1508 () Int)
(declare-fun x1668 () Bool)
(declare-fun x573 () Int)
(declare-fun x1489 () Int)
(declare-fun x1251 () Bool)
(declare-fun x1328 () Int)
(declare-fun x1352 () Int)
(declare-fun x1793 () Int)
(declare-fun x507 () Bool)
(declare-fun x2073 () Int)
(declare-fun x2195 () Int)
(declare-fun x1739 () Int)
(declare-fun x216 () Int)
(declare-fun x241 () Int)
(declare-fun x1845 () Int)
(declare-fun x1636 () Int)
(declare-fun x1867 () Int)
(declare-fun x304 () Int)
(declare-fun x1704 () Int)
(declare-fun x1169 () Int)
(declare-fun x1342 () Int)
(declare-fun x1095 () Int)
(declare-fun x2074 () x84)
(declare-fun x1238 () Int)
(declare-fun x2144 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x1733 () Int)
(declare-fun x781 () Int)
(declare-fun x1027 () Int)
(declare-fun x447 () Bool)
(declare-fun x1118 () Int)
(declare-fun x566 () Bool)
(declare-fun x1100 () Int)
(declare-fun x884 () Bool)
(declare-fun x238 (Int) Int)
(declare-fun x724 () Int)
(declare-fun x1041 () x84)
(declare-fun x1779 () x84)
(declare-fun x1675 () Int)
(declare-fun x1719 () Int)
(declare-fun x261 () Bool)
(declare-fun x787 () Int)
(declare-fun x1877 () Int)
(declare-fun x1189 () Bool)
(declare-fun x1214 () x84)
(declare-fun x169 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x730 () Bool)
(declare-fun x1157 () Int)
(declare-fun x1501 () Int)
(declare-fun x1275 () Int)
(declare-fun x403 () Int)
(declare-fun x418 () Int)
(declare-fun x1445 (Int) Int)
(declare-fun x46 (x84) Int)
(declare-fun x1913 () Bool)
(declare-fun x606 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x1788 () Int)
(declare-fun x657 () x84)
(declare-fun x957 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x155 () x84)
(declare-fun x615 () Bool)
(declare-fun x622 () x84)
(declare-fun x1000 () Int)
(declare-fun x379 () Int)
(declare-fun x1802 () Bool)
(declare-fun x1205 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1432 () Int)
(declare-fun x186 () Bool)
(declare-fun x591 () Bool)
(declare-fun x500 () Int)
(declare-fun x1542 () Bool)
(declare-fun x2069 () Int)
(declare-fun x1816 () Bool)
(declare-fun x2119 () Int)
(declare-fun x812 () Int)
(declare-fun x1934 () Int)
(declare-fun x199 () Int)
(declare-fun x41 () Int)
(declare-fun x263 () Int)
(declare-fun x167 () Int)
(declare-fun x2189 () Int)
(declare-fun x1870 () Bool)
(declare-fun x682 () x84)
(declare-fun x2061 () Int)
(declare-fun x1040 () Int)
(declare-fun x905 () Int)
(declare-fun x572 () Int)
(declare-fun x351 () Int)
(declare-fun x630 () Int)
(declare-fun x477 () Int)
(declare-fun x1054 () Int)
(declare-fun x124 () Int)
(declare-fun x1333 () Bool)
(declare-fun x1798 () x84)
(declare-fun x1403 () Int)
(declare-fun x1646 () Int)
(declare-fun x165 () Bool)
(declare-fun x1876 () Int)
(declare-fun x1221 () Bool)
(declare-fun x865 () Int)
(declare-fun x834 () Int)
(declare-fun x917 () Int)
(declare-fun x1449 () Int)
(declare-fun x1061 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x350 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1016 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x914 () Int)
(declare-fun x1096 (x84) Int)
(declare-fun x31 () Int)
(declare-fun x286 () Int)
(declare-fun x879 () Int)
(declare-fun x102 () Int)
(declare-fun x1264 () Int)
(declare-fun x2083 () Int)
(declare-fun x323 () Int)
(declare-fun x1610 () Int)
(declare-fun x1986 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x2180 () Int)
(declare-fun x1982 () Int)
(declare-fun x2105 () Int)
(declare-fun x1608 () Bool)
(declare-fun x59 () Int)
(declare-fun x1010 () Bool)
(declare-fun x1966 () Bool)
(declare-fun x1612 () Int)
(declare-fun x1418 () x84)
(declare-fun x904 () Int)
(declare-fun x1469 () Bool)
(declare-fun x1657 () Int)
(declare-fun x349 () Bool)
(declare-fun x64 () Int)
(declare-fun x840 () Bool)
(declare-fun x461 () Int)
(declare-fun x308 () Bool)
(declare-fun x1030 () Int)
(declare-fun x1890 () x84)
(declare-fun x1624 () Bool)
(declare-fun x2017 () Int)
(declare-fun x195 () Int)
(declare-fun x1683 () x84)
(declare-fun x2094 () Int)
(declare-fun x1938 () Int)
(declare-fun x820 () Int)
(declare-fun x39 () Int)
(declare-fun x1337 () Int)
(declare-fun x535 () Bool)
(declare-fun x1810 () Int)
(declare-fun x556 () Int)
(declare-fun x1494 () Int)
(declare-fun x246 () Int)
(declare-fun x257 () Bool)
(declare-fun x1505 () Int)
(declare-fun x1201 () Int)
(declare-fun x1491 () Int)
(declare-fun x1176 () Int)
(declare-fun x1243 (Int) Int)
(declare-fun x1826 () Int)
(declare-fun x51 () Bool)
(declare-fun x78 () Int)
(declare-fun x1294 () Int)
(declare-fun x1550 () Int)
(declare-fun x1882 () Int)
(declare-fun x21 () Int)
(declare-fun x148 () Int)
(declare-fun x619 () Bool)
(declare-fun x505 () Int)
(declare-fun x1518 () Int)
(declare-fun x1634 () Int)
(declare-fun x604 () Int)
(declare-fun x214 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x626 () Int)
(declare-fun x1045 () Int)
(declare-fun x827 () Bool)
(declare-fun x716 () Int)
(declare-fun x100 () Bool)
(declare-fun x2100 () Int)
(declare-fun x2151 () Bool)
(declare-fun x977 () Int)
(declare-fun x1873 () Int)
(declare-fun x1156 () Bool)
(declare-fun x1209 () Int)
(declare-fun x290 () Int)
(declare-fun x829 () x84)
(declare-fun x1242 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x299 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x2136 () Int)
(declare-fun x708 () Int)
(declare-fun x1098 () Bool)
(declare-fun x1998 () Int)
(declare-fun x1285 () x84)
(declare-fun x1771 () Int)
(declare-fun x1262 () Bool)
(declare-fun x1436 (x84) Int)
(declare-fun x1544 () Int)
(declare-fun x424 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x114 () x84)
(declare-fun x975 () Bool)
(declare-fun x610 () Bool)
(declare-fun x1715 () Int)
(declare-fun x454 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x558 () Int)
(declare-fun x706 () Int)
(declare-fun x1069 () Int)
(declare-fun x10 () Int)
(declare-fun x2023 () Bool)
(declare-fun x674 () Int)
(declare-fun x260 () Bool)
(declare-fun x1360 () Int)
(declare-fun x1123 () Int)
(declare-fun x17 () Bool)
(declare-fun x1768 () Bool)
(declare-fun x307 () Int)
(declare-fun x280 () Int)
(declare-fun x1820 () Int)
(declare-fun x1399 () Int)
(declare-fun x1492 () Int)
(declare-fun x401 () Int)
(declare-fun x700 () Int)
(declare-fun x180 () Int)
(declare-fun x1173 () Int)
(declare-fun x468 () Int)
(declare-fun x824 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x859 () Int)
(declare-fun x552 () Int)
(declare-fun x1921 () Int)
(declare-fun x464 () Int)
(declare-fun x1453 () Int)
(declare-fun x2134 () Bool)
(declare-fun x621 () Int)
(declare-fun x1025 () Int)
(declare-fun x694 () Int)
(declare-fun x1220 () Bool)
(declare-fun x242 () Int)
(declare-fun x1222 () Int)
(declare-fun x1032 () Int)
(declare-fun x445 () Int)
(declare-fun x743 () Int)
(declare-fun x383 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x1090 () Int)
(declare-fun x1230 () Int)
(declare-fun x1479 () Int)
(declare-fun x745 () Int)
(declare-fun x168 () x84)
(declare-fun x965 () Int)
(declare-fun x885 () Int)
(declare-fun x232 () Int)
(declare-fun x578 () Int)
(declare-fun x385 () Int)
(declare-fun x1655 () Int)
(declare-fun x522 () Int)
(declare-fun x1478 () Int)
(declare-fun x1029 () Bool)
(declare-fun x1195 () Int)
(declare-fun x1984 () Int)
(declare-fun x1063 () Int)
(declare-fun x79 () Int)
(declare-fun x954 () x84)
(declare-fun x2187 () Int)
(declare-fun x803 (Int) Int)
(declare-fun x1784 () Bool)
(declare-fun x1256 () Int)
(declare-fun x1465 () Int)
(declare-fun x355 () Int)
(declare-fun x1943 () Bool)
(declare-fun x661 () Int)
(declare-fun x297 () Bool)
(declare-fun x106 () Bool)
(declare-fun x1444 () Int)
(declare-fun x28 () Bool)
(declare-fun x1135 () Int)
(declare-fun x1258 () Int)
(declare-fun x4 () Int)
(declare-fun x282 () Bool)
(declare-fun x758 () Int)
(declare-fun x1848 () Bool)
(declare-fun x173 () Bool)
(declare-fun x1891 () Int)
(declare-fun x252 () Bool)
(declare-fun x510 () Int)
(declare-fun x2127 () Int)
(declare-fun x924 () Int)
(declare-fun x1153 () Int)
(declare-fun x313 () Int)
(declare-fun x245 () Int)
(declare-fun x399 () Int)
(declare-fun x1271 () Int)
(declare-fun x1293 () Int)
(declare-fun x1197 () Int)
(declare-fun x1387 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x1713 () Int)
(declare-fun x1461 () Int)
(declare-fun x437 () Int)
(declare-fun x1274 () Int)
(declare-fun x1529 () Int)
(declare-fun x1323 () Bool)
(declare-fun x419 (x84) Int)
(declare-fun x1688 () Bool)
(declare-fun x2006 () Int)
(declare-fun x117 () Int)
(declare-fun x337 () Int)
(declare-fun x1252 () Int)
(declare-fun x660 () Int)
(declare-fun x1781 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x1512 () Int)
(declare-fun x794 () Int)
(declare-fun x701 () x84)
(declare-fun x842 () Int)
(declare-fun x2201 () Int)
(declare-fun x564 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x797 () Bool)
(declare-fun x343 () Bool)
(declare-fun x170 () Int)
(declare-fun x1475 () Bool)
(declare-fun x1260 () Int)
(declare-fun x1834 () Bool)
(declare-fun x1712 () Int)
(declare-fun x136 () Int)
(declare-fun x1540 () Bool)
(declare-fun x210 () Int)
(declare-fun x2029 () Int)
(declare-fun x1521 () Int)
(declare-fun x1431 () Int)
(declare-fun x1830 () Bool)
(declare-fun x617 () Int)
(declare-fun x785 () Int)
(declare-fun x833 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1481 () Int)
(declare-fun x162 () Int)
(declare-fun x830 () Int)
(declare-fun x1068 () Int)
(declare-fun x1246 () Int)
(declare-fun x2092 () Int)
(declare-fun x973 () Int)
(declare-fun x729 () x84)
(declare-fun x2000 () x84)
(declare-fun x1591 () Int)
(declare-fun x986 () Int)
(declare-fun x1879 () Int)
(declare-fun x2157 () Int)
(declare-fun x1320 () Int)
(declare-fun x1915 () Bool)
(declare-fun x2137 () Int)
(declare-fun x240 () Int)
(declare-fun x687 () Int)
(declare-fun x554 () Bool)
(declare-fun x742 () Int)
(declare-fun x33 () Int)
(declare-fun x648 () Int)
(declare-fun x1070 () Bool)
(declare-fun x1785 () Int)
(declare-fun x92 () Int)
(declare-fun x2046 () Bool)
(declare-fun x1248 () Int)
(declare-fun x1663 () Int)
(declare-fun x755 () Int)
(declare-fun x1339 () Int)
(declare-fun x3 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x771 () Bool)
(declare-fun x732 () Int)
(declare-fun x1459 () Int)
(declare-fun x1272 () Int)
(declare-fun x1746 () Bool)
(declare-fun x670 () Int)
(declare-fun x187 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x1396 () Int)
(declare-fun x1500 () Int)
(declare-fun x1249 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x65 () Int)
(declare-fun x796 () Bool)
(declare-fun x911 () Int)
(declare-fun x1067 () Int)
(declare-fun x2056 () Int)
(declare-fun x1809 () x84)
(declare-fun x22 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1957 () Int)
(declare-fun x1839 () Int)
(declare-fun x1989 () Int)
(declare-fun x1613 () Int)
(declare-fun x1311 () Int)
(declare-fun x735 () Int)
(declare-fun x1486 () Int)
(declare-fun x1987 () Int)
(declare-fun x1087 () x84)
(declare-fun x1318 () Int)
(declare-fun x1814 () Int)
(declare-fun x2153 () Bool)
(declare-fun x752 () Int)
(declare-fun x1926 () Bool)
(declare-fun x1278 () Int)
(declare-fun x2051 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x29 () Bool)
(declare-fun x226 () Int)
(declare-fun x810 () Bool)
(declare-fun x2062 () Int)
(declare-fun x1707 () Int)
(declare-fun x133 () Bool)
(declare-fun x484 () Int)
(declare-fun x912 () Bool)
(declare-fun x2183 () Int)
(declare-fun x175 () Int)
(declare-fun x276 () Int)
(declare-fun x1580 () Int)
(declare-fun x1370 () Int)
(declare-fun x665 () Bool)
(declare-fun x258 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x1629 () Int)
(declare-fun x1754 () Bool)
(declare-fun x1829 () Int)
(declare-fun x1393 () Int)
(declare-fun x358 () Int)
(declare-fun x1163 () x84)
(declare-fun x13 () Int)
(declare-fun x1092 () Int)
(declare-fun x152 () Int)
(declare-fun x779 () Int)
(declare-fun x1185 () Int)
(declare-fun x318 () Int)
(declare-fun x1597 () Bool)
(declare-fun x137 () Bool)
(declare-fun x235 () Int)
(declare-fun x1673 () Int)
(declare-fun x813 () Int)
(declare-fun x940 () Bool)
(declare-fun x421 () Int)
(declare-fun x2102 () Int)
(declare-fun x1322 () Bool)
(declare-fun x899 () x84)
(declare-fun x363 () Int)
(declare-fun x780 () Int)
(declare-fun x1599 () Int)
(declare-fun x2172 () Int)
(declare-fun x950 () Int)
(declare-fun x362 () Bool)
(declare-fun x164 () Int)
(declare-fun x111 () Bool)
(declare-fun x923 () Int)
(declare-fun x918 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x368 () x84)
(declare-fun x632 () Int)
(declare-fun x1680 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x2141 () Int)
(declare-fun x503 () Int)
(declare-fun x2028 () Int)
(declare-fun x1939 () Int)
(declare-fun x301 () Int)
(declare-fun x543 () Bool)
(declare-fun x2169 () Int)
(declare-fun x2140 () Int)
(declare-fun x70 () Int)
(declare-fun x715 () Int)
(declare-fun x182 () Bool)
(declare-fun x935 () x84)
(declare-fun x1303 () Bool)
(declare-fun x1794 () Int)
(declare-fun x459 () Int)
(declare-fun x75 (x84) Int)
(declare-fun x1330 () Bool)
(declare-fun x277 () Int)
(declare-fun x1961 () Int)
(declare-fun x1545 () Int)
(declare-fun x1297 () Int)
(declare-fun x1482 () Int)
(declare-fun x1094 () Int)
(declare-fun x770 () Int)
(declare-fun x1037 () Int)
(declare-fun x151 () Int)
(declare-fun x2063 () Int)
(declare-fun x597 () Bool)
(declare-fun x18 () x84)
(declare-fun x1883 () x84)
(declare-fun x1132 () Int)
(declare-fun x1974 () x84)
(declare-fun x480 () Bool)
(declare-fun x704 () Bool)
(declare-fun x1131 () Int)
(declare-fun x791 () Int)
(declare-fun x776 () Int)
(declare-fun x1866 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1743 () Int)
(declare-fun x921 () Int)
(declare-fun x518 () Int)
(declare-fun x194 () Int)
(declare-fun x1524 () Int)
(declare-fun x26 () Int)
(declare-fun x532 () Int)
(declare-fun x322 () Bool)
(declare-fun x1009 () Int)
(declare-fun x1093 () Int)
(declare-fun x910 () Bool)
(declare-fun x93 () x84)
(declare-fun x1074 () Int)
(declare-fun x317 () Bool)
(declare-fun x561 () Int)
(declare-fun x2002 () Int)
(declare-fun x1062 () Bool)
(declare-fun x1287 () x84)
(declare-fun x495 () Int)
(declare-fun x1455 () x84)
(declare-fun x1346 () Bool)
(declare-fun x774 () Int)
(declare-fun x178 () Bool)
(declare-fun x1972 () Int)
(declare-fun x1111 () Int)
(declare-fun x1366 () Bool)
(declare-fun x1452 () x84)
(declare-fun x119 () Int)
(declare-fun x1574 () Int)
(declare-fun x1410 () Int)
(declare-fun x538 () Int)
(declare-fun x1895 () Bool)
(declare-fun x733 () Bool)
(declare-fun x265 () Int)
(declare-fun x1119 () Bool)
(declare-fun x229 () Int)
(declare-fun x1325 () Int)
(declare-fun x1674 () Int)
(declare-fun x1744 () Int)
(declare-fun x407 () Int)
(declare-fun x77 () Int)
(declare-fun x1981 () Bool)
(declare-fun x321 () Bool)
(declare-fun x6 () Bool)
(declare-fun x284 () Bool)
(declare-fun x618 () Int)
(declare-fun x1343 () Bool)
(declare-fun x882 () Bool)
(declare-fun x2121 () Int)
(declare-fun x1978 () Int)
(declare-fun x962 () Bool)
(declare-fun x963 () x84)
(declare-fun x392 () Int)
(declare-fun x2068 () Int)
(declare-fun x1415 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x795 () Int)
(declare-fun x722 () Int)
(declare-fun x425 () Int)
(declare-fun x576 () Int)
(declare-fun x1188 () Int)
(declare-fun x1560 () Int)
(declare-fun x1388 () Int)
(declare-fun x44 () Int)
(declare-fun x512 () Int)
(declare-fun x1874 () Int)
(declare-fun x1836 () x84)
(declare-fun x2142 () Int)
(declare-fun x2156 () Bool)
(define-fun x1661 ((x84 x84) (x2009 Int)) x84 (ite ((_ is x1373) x84) (x1373 (x645 x84) (x1125 x84) (+ x2009 (x1800 x84))) (ite ((_ is x2118) x84) (x2118 (x2055 x84) (+ (x584 x84) x2009)) (x1941 (+ x2009 (x453 x84))))))
(define-fun x1842 ((x871 Int)) Int (ite (and (< x871 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x871)) x871 (- x871 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1008 ((x871 Int)) Int (ite (and (>= x871 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x871 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x871) x871))
(define-fun x1906 ((x1555 Int)) Bool (and (< x1555 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1555 0)))
(define-fun x1850 ((x1555 Int)) Bool (and (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1555) x1555) (= (x357 x1555 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1555)))
(define-fun x880 ((x1555 Int)) Bool (and (= 0 (x357 x1555 0)) (= (x357 0 x1555) 0)))
(define-fun x314 ((x1555 Int)) Bool (= (x357 x1555 x1555) x1555))
(define-fun x1362 ((x1555 Int)) Bool (and (x880 x1555) (x314 x1555) (x1850 x1555)))
(define-fun x726 ((x1555 Int) (x1467 Int)) Bool (= (x357 x1555 x1467) (x357 x1467 x1555)))
(define-fun x1667 ((x1555 Int) (x1467 Int)) Bool (and (>= (x357 x1555 x1467) 0) (=> (<= 0 x1467) (<= (x357 x1555 x1467) x1467)) (=> (>= x1555 0) (<= (x357 x1555 x1467) x1555))))
(define-fun x766 ((x1555 Int) (x1467 Int)) Bool (and (x726 x1555 x1467) (x1667 x1555 x1467)))
(define-fun x588 ((x1555 Int)) Bool (= (mod x1555 256) (x357 x1555 255)))
(define-fun x1628 ((x1555 Int)) Bool (and (x588 x1555) (x766 x1555 255)))
(define-fun x227 ((x1555 Int)) Bool (= (mod x1555 1461501637330902918203684832716283019655932542976) (x357 x1555 1461501637330902918203684832716283019655932542975)))
(define-fun x654 ((x1555 Int)) Bool (and (x227 x1555) (x766 x1555 1461501637330902918203684832716283019655932542975)))
(define-fun x390 ((x1555 Int)) Bool (= (+ (mod x1555 32) (x357 x1555 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x1555 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1731 ((x1555 Int)) Bool (and (x390 x1555) (x766 x1555 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1665 ((x1555 Int)) Bool (= (+ (x357 x1555 115792089237316195423570985008687907853269984665640564039457584007913129639680) (mod x1555 256)) (mod x1555 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1725 ((x1555 Int)) Bool (and (x1665 x1555) (x766 x1555 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(define-fun x1072 ((x1555 Int)) Bool (= (mod x1555 18446744073709551616) (x357 x1555 18446744073709551615)))
(define-fun x589 ((x1555 Int)) Bool (and (x766 x1555 18446744073709551615) (x1072 x1555)))
(define-fun x1711 ((x1555 Int)) Bool (= (mod x1555 2) (x357 x1555 1)))
(define-fun x1641 ((x1555 Int)) Bool (and (x1711 x1555) (x766 x1555 1)))
(define-fun x1918 ((x1555 Int)) Bool (= (mod x1555 79228162514264337593543950336) (x357 x1555 79228162514264337593543950335)))
(define-fun x2005 ((x1555 Int)) Bool (and (x766 x1555 79228162514264337593543950335) (x1918 x1555)))
(define-fun x1714 ((x1555 Int)) Bool (= (- x1555 (x357 x1555 6277101735386680763835789423128438253588091106870490562560)) (x357 x1555 115792089237316195417293883273301227089434195242512125785869492901042639077375)))
(define-fun x831 ((x1555 Int)) Bool (and (x1714 x1555) (x766 x1555 115792089237316195417293883273301227089434195242512125785869492901042639077375)))
(define-fun x63 ((x1555 Int)) Bool (= (mod x1555 6277101735386680763835789423207666416102355444464034512896) (+ (x357 x1555 6277101735386680763835789423128438253588091106870490562560) (mod x1555 79228162514264337593543950336))))
(define-fun x411 ((x1555 Int)) Bool (and (x63 x1555) (x766 x1555 6277101735386680763835789423128438253588091106870490562560)))
(define-fun x1639 ((x1555 Int)) Bool (= (x357 x1555 4294967295) (mod x1555 4294967296)))
(define-fun x1942 ((x1555 Int)) Bool (and (x766 x1555 4294967295) (x1639 x1555)))
(define-fun x1823 ((x1555 Int)) Bool (= (+ (mod x1555 79228162514264337593543950336) (x357 x1555 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (mod x1555 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x485 ((x1555 Int)) Bool (and (x1823 x1555) (x766 x1555 115792089237316195423570985008687907853269984665561335876943319670319585689600)))
(define-fun x835 ((x1555 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2048 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1555)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2048 x1555 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1424 ((x1555 Int)) Bool (and (= x1555 (x2048 x1555 0)) (= x1555 (x2048 0 x1555))))
(define-fun x1107 ((x1555 Int)) Bool (= x1555 (x2048 x1555 x1555)))
(define-fun x458 ((x1555 Int)) Bool (and (x1424 x1555) (x835 x1555) (x1107 x1555)))
(define-fun x206 ((x1555 Int) (x1467 Int)) Bool (= (x2048 x1467 x1555) (x2048 x1555 x1467)))
(define-fun x123 ((x1555 Int) (x1467 Int)) Bool (and (<= (x2048 x1555 x1467) (+ x1555 x1467)) (=> (>= x1467 0) (<= x1467 (x2048 x1555 x1467))) (=> (<= 0 x1555) (<= x1555 (x2048 x1555 x1467)))))
(define-fun x1630 ((x1555 Int) (x1467 Int)) Bool (and (x206 x1555 x1467) (x123 x1555 x1467)))
(define-fun x1854 ((x1555 Int)) Bool (= (- x1555 (x357 x1555 26959946660873538059280334323183841250429478006438217036639575736320)) (x357 x1555 115792089210356248762697446949407573530086143415211086033019366971273553903615)))
(define-fun x647 ((x1555 Int)) Bool (and (x1854 x1555) (x766 x1555 115792089210356248762697446949407573530086143415211086033019366971273553903615)))
(define-fun x686 ((x1555 Int)) Bool (= (+ (mod x1555 6277101735386680763835789423207666416102355444464034512896) (x357 x1555 26959946660873538059280334323183841250429478006438217036639575736320)) (mod x1555 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x2166 ((x1555 Int)) Bool (and (x686 x1555) (x766 x1555 26959946660873538059280334323183841250429478006438217036639575736320)))
(define-fun x2084 ((x1555 Int)) Bool (= (x357 x1555 26959946667150639794667015087019630673637144422540572481103610249215) (mod x1555 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x1358 ((x1555 Int)) Bool (and (x2084 x1555) (x766 x1555 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1136 ((x348 Int)) Int (x1627 x348))
(define-fun x574 ((x348 Int)) Int (ite (= x348 128) x1909 (x2178 x348)))
(define-fun x2155 ((x348 Int)) Int (ite (= x348 160) (ite x1758 1 0) (x574 x348)))
(define-fun x768 ((x348 Int)) Int (x1627 x348))
(define-fun x2101 ((x348 Int)) Int (ite (= 128 x348) x2088 (x1445 x348)))
(define-fun x1568 ((x348 Int)) Int (ite (= x348 160) (ite x1563 1 0) (x2101 x348)))
(define-fun x328 ((x348 Int)) Int (x1627 x348))
(define-fun x2135 ((x348 Int)) Int (ite (= x348 128) x1857 (x1139 x348)))
(define-fun x1789 ((x348 Int)) Int (ite (= 160 x348) (ite x853 1 0) (x2135 x348)))
(define-fun x931 ((x348 Int)) Int (x720 x348))
(define-fun x382 ((x348 Int)) Int (ite (= 128 x348) x1460 (x1790 x348)))
(define-fun x762 ((x348 Int)) Int (ite (= x348 160) x1172 (x382 x348)))
(define-fun x1349 ((x348 Int)) Int (ite (= x348 192) x834 (x762 x348)))
(define-fun x2037 ((x348 Int)) Int (ite (= x348 224) x670 (x1349 x348)))
(define-fun x998 ((x348 Int)) Int (ite (= 128 x348) x441 (x1051 x348)))
(define-fun x721 ((x348 Int)) Int (ite (= x348 160) (ite x115 1 0) (x998 x348)))
(define-fun x642 ((x348 Int)) Int (x1627 x348))
(define-fun x1827 ((x348 x84)) Int (ite (= x348 x829) x1157 (x1096 x348)))
(define-fun x1604 ((x348 x84)) Int (ite x1852 (x1096 x348) (x1827 x348)))
(define-fun x134 ((x348 x84)) Int (ite x389 (x1096 x348) (ite x376 (x1096 x348) (ite x639 (x1096 x348) (x1604 x348)))))
(define-fun x2110 ((x348 x84)) Int (ite (= (x1941 9) x348) x1441 (x134 x348)))
(define-fun x1949 ((x348 x84)) Int (ite (= x348 (x1941 9)) x416 (x2110 x348)))
(define-fun x1953 ((x348 x84)) Int (ite (= x348 (x1941 9)) x1638 (x1949 x348)))
(define-fun x1985 ((x348 x84)) Int (ite (= (x1941 9) x348) x799 (x2110 x348)))
(define-fun x2033 ((x348 x84)) Int (ite (= (x1941 9) x348) x1056 (x2110 x348)))
(define-fun x415 ((x348 x84)) Int (ite x1635 (ite x144 (x1953 x348) (x1985 x348)) (x2033 x348)))
(define-fun x1414 ((x348 x84)) Int (ite (= x348 (x1941 2)) x1773 (x415 x348)))
(define-fun x1154 ((x348 x84)) Int (ite (= x1898 x348) x1371 (x1414 x348)))
(define-fun x2173 ((x348 x84)) Int (ite x1236 (x415 x348) (x1154 x348)))
(define-fun x1007 ((x348 x84)) Int (ite (= x348 (x1941 9)) x593 (x2173 x348)))
(define-fun x1485 ((x348 x84)) Int (ite x1240 (x2173 x348) (x1007 x348)))
(define-fun x1364 ((x348 x84)) Int (ite (= x348 (x1941 9)) x1327 (x1485 x348)))
(define-fun x248 ((x348 x84)) Int (ite (= x348 (x1941 2)) x965 (x1364 x348)))
(define-fun x1473 ((x348 x84)) Int (ite (= x348 x236) x65 (x248 x348)))
(define-fun x1815 ((x348 x84)) Int (ite x1895 (x1364 x348) (x1473 x348)))
(define-fun x916 ((x348 x84)) Int (ite (= (x1941 19) x348) x374 (x1815 x348)))
(define-fun x1247 ((x348 x84)) Int (ite (= (x1941 20) x348) x1100 (x916 x348)))
(define-fun x897 ((x348 x84)) Int (ite (= x348 x1883) x539 (x1247 x348)))
(define-fun x1199 ((x348 x84)) Int (ite x1870 (x1247 x348) (ite x2184 (x1247 x348) (x897 x348))))
(define-fun x230 ((x348 x84)) Int (ite (= (x1941 2) x348) x191 (x1199 x348)))
(define-fun x1073 ((x348 x84)) Int (ite (= x2053 x348) x2103 (x230 x348)))
(define-fun x1567 ((x348 x84)) Int (ite (= (x1941 9) x348) x86 (x134 x348)))
(define-fun x2165 ((x348 x84)) Int (ite (= (x1941 2) x348) x31 (x1567 x348)))
(define-fun x504 ((x348 x84)) Int (ite (= x1404 x348) x524 (x2165 x348)))
(define-fun x1097 ((x348 x84)) Int (ite (= (x1941 19) x348) x1710 (x504 x348)))
(define-fun x311 ((x348 x84)) Int (ite (= x348 (x1941 20)) x2096 (x1097 x348)))
(define-fun x19 ((x348 x84)) Int (ite (= x348 x954) x2143 (x311 x348)))
(define-fun x1828 ((x348 x84)) Int (ite x1865 (x311 x348) (ite x334 (x311 x348) (x19 x348))))
(define-fun x465 ((x348 x84)) Int (ite (= x348 (x1941 2)) x220 (x1828 x348)))
(define-fun x1910 ((x348 x84)) Int (ite (= x348 x1418) x290 (x465 x348)))
(define-fun x1162 ((x348 x84)) Int (ite (= x348 (x1941 2)) x185 (x1910 x348)))
(define-fun x327 ((x348 x84)) Int (ite (= x348 x253) x1730 (x1162 x348)))
(define-fun x1164 ((x348 x84)) Int (ite x1080 (x1073 x348) (ite x507 (x1073 x348) (x327 x348))))
(define-fun x1376 ((x348 x84)) Int (ite (= x348 x47) x1875 (x1164 x348)))
(define-fun x126 ((x348 x84)) Int (ite x1537 (x1164 x348) (x1376 x348)))
(define-fun x1179 ((x348 x84)) Int (ite (= x1041 x348) x1755 (x126 x348)))
(define-fun x296 ((x348 x84)) Int (ite x147 (x126 x348) (x1179 x348)))
(define-fun x481 ((x348 x84)) Int (ite (= x348 x1779) x2147 (x296 x348)))
(define-fun x87 ((x348 x84)) Int (ite x367 (x296 x348) (ite x22 (x296 x348) (x481 x348))))
(define-fun x547 ((x348 Int)) Int (ite (= x348 128) x1355 (x30 x348)))
(define-fun x1833 ((x348 Int)) Int (ite (= 160 x348) (ite x2158 1 0) (x547 x348)))
(define-fun x472 ((x348 Int)) Int (ite (= x348 256) x161 (x2037 x348)))
(define-fun x790 ((x348 Int)) Int (ite x1237 (x2037 x348) (ite x29 (x1349 x348) (ite x554 (x762 x348) (ite x1223 (x382 x348) (x472 x348))))))
(define-fun x1434 ((x348 Int)) Int (ite (= x348 x1410) x947 (x790 x348)))
(define-fun x2177 ((x348 Int)) Int (ite (and (> (+ x1920 x947) x348) (<= x1920 x348)) (x720 (+ (- x348 x1920) x2022)) (x1434 x348)))
(define-fun x1402 ((x348 Int)) Int (ite (= x348 x1872) 0 (x2177 x348)))
(define-fun x200 ((x348 Int)) Int (ite (= x1268 x348) 46861972923178205566985210922759877011903582497231265773045854621316061069312 (x1402 x348)))
(define-fun x1266 ((x348 Int)) Int (ite (and (> (+ 32 x1268) x348) (>= x348 x1268)) (x1933 (+ 0 (- x348 x1268))) (x200 x348)))
(define-fun x1071 ((x348 Int)) Int (ite (= x1337 x348) x1024 (x1266 x348)))
(define-fun x2198 ((x348 Int)) Int (ite x1852 (x1402 x348) (x1071 x348)))
(define-fun x1281 ((x348 Int)) Int (ite x389 (x1402 x348) (ite x376 (x1402 x348) (ite x639 (x1402 x348) (x2198 x348)))))
(define-fun x1035 ((x348 Int)) Int (ite (= x348 x1655) x1123 (x1281 x348)))
(define-fun x613 ((x348 Int)) Int (ite (and (<= x1967 x348) (> (+ x1120 x1967) x348)) (x720 (+ (- x348 x1967) x1254)) (x1035 x348)))
(define-fun x1347 ((x348 Int)) Int (ite x174 (x1035 x348) (x613 x348)))
(define-fun x698 ((x348 Int)) Int (ite (= 64 x348) 128 (x271 x348)))
(define-fun x1282 ((x348 Int)) Int (ite (= x648 x348) x1229 (x698 x348)))
(define-fun x283 ((x348 Int)) Int (ite (= x348 x786) 81655993114286172543975849523773895523710823181222424266797447834442299080704 (x1347 x348)))
(define-fun x1849 ((x348 Int)) Int (ite (= x348 x727) x879 (x283 x348)))
(define-fun x72 ((x348 Int)) Int (ite (and (> (+ x786 (ite (< x512 32) x512 32)) x348) (<= x786 x348)) (x1282 (+ x449 (- x348 x786))) (x1849 x348)))
(define-fun x1564 ((x348 Int)) Int (ite x1988 (ite x258 (x72 x348) (x1347 x348)) (x1347 x348)))
(define-fun x443 ((x348 Int)) Int (ite (= x1328 x348) x1316 (x1564 x348)))
(define-fun x272 ((x348 Int)) Int (ite x377 (x1347 x348) (x443 x348)))
(define-fun x1902 ((x348 Int)) Int (ite (= x540 x348) x1339 (x272 x348)))
(define-fun x359 ((x348 Int)) Int (ite (and (<= x1699 x348) (< x348 (+ x2063 x1699))) (x720 (+ x1254 (- x348 x1699))) (x1902 x348)))
(define-fun x1893 ((x348 Int)) Int (ite x1751 (x1902 x348) (x359 x348)))
(define-fun x2079 ((x348 Int)) Int (ite (= x348 x955) x592 (x1893 x348)))
(define-fun x1208 ((x348 Int)) Int (ite x2051 (x1893 x348) (x2079 x348)))
(define-fun x1411 ((x348 Int)) Int (ite (= x466 x348) x64 (x1208 x348)))
(define-fun x527 ((x348 Int)) Int (ite x1236 (x1208 x348) (x1411 x348)))
(define-fun x1160 ((x348 Int)) Int (ite (= x1677 x348) x936 (x527 x348)))
(define-fun x614 ((x348 Int)) Int (ite x519 (x527 x348) (x1160 x348)))
(define-fun x83 ((x348 Int)) Int (ite (= x348 x323) x548 (x614 x348)))
(define-fun x1102 ((x348 Int)) Int (ite x1895 (x614 x348) (x83 x348)))
(define-fun x339 ((x348 Int)) Int (ite (= 64 x348) 128 (x238 x348)))
(define-fun x839 ((x348 Int)) Int (ite (= x773 x348) x739 (x339 x348)))
(define-fun x1053 ((x348 Int)) Int (ite (= x348 x262) 112349551054952423155953805921267728290102753186399332250345724850365349756928 (x1102 x348)))
(define-fun x1996 ((x348 Int)) Int (ite (= x1810 x348) x1938 (x1053 x348)))
(define-fun x1057 ((x348 Int)) Int (ite (and (> (+ (ite (< x690 32) x690 32) x262) x348) (>= x348 x262)) (x839 (+ (- x348 x262) x1676)) (x1996 x348)))
(define-fun x898 ((x348 Int)) Int (ite x1870 (x1102 x348) (ite x2184 (x1102 x348) (x1057 x348))))
(define-fun x598 ((x348 Int)) Int (ite (= x1899 x348) x1453 (x898 x348)))
(define-fun x125 ((x348 Int)) Int (ite (and (<= x1570 x348) (> (+ x1570 x1126) x348)) (x720 (+ (- x348 x1570) x1254)) (x598 x348)))
(define-fun x204 ((x348 Int)) Int (ite x257 (x598 x348) (x125 x348)))
(define-fun x625 ((x348 Int)) Int (ite (= x1982 x348) x176 (x204 x348)))
(define-fun x329 ((x348 Int)) Int (ite x448 (x204 x348) (x625 x348)))
(define-fun x1390 ((x348 Int)) Int (ite (= x348 x1951) x1807 (x329 x348)))
(define-fun x1824 ((x348 Int)) Int (ite (= x1275 x348) x958 (x1390 x348)))
(define-fun x1678 ((x348 Int)) Int (ite (and (<= x709 x348) (> (+ x709 x1398) x348)) (x720 (+ (- x348 x709) x1254)) (x1824 x348)))
(define-fun x1594 ((x348 Int)) Int (ite (= x348 x540) x928 (x272 x348)))
(define-fun x581 ((x348 Int)) Int (ite (= x395 x348) x498 (x1594 x348)))
(define-fun x959 ((x348 Int)) Int (ite (= x348 x1580) x2119 (x581 x348)))
(define-fun x1203 ((x348 Int)) Int (ite (= x348 x2189) x68 (x959 x348)))
(define-fun x1569 ((x348 Int)) Int (ite (= x348 x1065) x1054 (x1203 x348)))
(define-fun x2086 ((x348 Int)) Int (ite x1156 (x1203 x348) (ite x137 (x959 x348) (ite x2023 (x581 x348) (ite x157 (x1594 x348) (x1569 x348))))))
(define-fun x2015 ((x348 Int)) Int (ite (= x348 x1932) x1393 (x2086 x348)))
(define-fun x405 ((x348 Int)) Int (ite (and (< x348 (+ x301 x1609)) (<= x301 x348)) (x720 (+ (- x348 x301) x1254)) (x2015 x348)))
(define-fun x696 ((x348 Int)) Int (ite x1960 (x2015 x348) (x405 x348)))
(define-fun x127 ((x348 Int)) Int (ite (= x348 x2188) x2130 (x696 x348)))
(define-fun x1651 ((x348 Int)) Int (ite x274 (x696 x348) (x127 x348)))
(define-fun x172 ((x348 Int)) Int (ite (= x348 x1340) x1868 (x1651 x348)))
(define-fun x717 ((x348 Int)) Int (ite (= x677 x348) x1868 (x172 x348)))
(define-fun x391 ((x348 Int)) Int (ite (= 64 x348) 128 (x1923 x348)))
(define-fun x2018 ((x348 Int)) Int (ite (= x229 x348) x1538 (x391 x348)))
(define-fun x1345 ((x348 Int)) Int (ite (= x711 x348) 112349551054952423155953805921267728290102753186399332250345724850365349756928 (x717 x348)))
(define-fun x1679 ((x348 Int)) Int (ite (= x2085 x348) x530 (x1345 x348)))
(define-fun x483 ((x348 Int)) Int (ite (and (< x348 (+ (ite (< x360 32) x360 32) x711)) (<= x711 x348)) (x2018 (+ (- x348 x711) x755)) (x1679 x348)))
(define-fun x1369 ((x348 Int)) Int (ite x1865 (x717 x348) (ite x334 (x717 x348) (x483 x348))))
(define-fun x1113 ((x348 Int)) Int (ite (= x348 x1134) 1000000 (x1369 x348)))
(define-fun x1490 ((x348 Int)) Int (ite (= x348 x2029) x807 (x1113 x348)))
(define-fun x196 ((x348 Int)) Int (ite (= x348 x223) x1900 (x1490 x348)))
(define-fun x456 ((x348 Int)) Int (ite (and (> (+ x1791 x2164) x348) (<= x1791 x348)) (x720 (+ x1254 (- x348 x1791))) (x196 x348)))
(define-fun x426 ((x348 Int)) Int (ite x1080 (x1824 x348) (ite x507 (x1678 x348) (ite x1309 (x196 x348) (x456 x348)))))
(define-fun x1286 ((x348 Int)) Int (ite (= x318 x348) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x426 x348)))
(define-fun x746 ((x348 Int)) Int (ite (= x285 x348) x1551 (x1286 x348)))
(define-fun x1853 ((x348 Int)) Int (ite (= x348 x2201) x1144 (x746 x348)))
(define-fun x1631 ((x348 Int)) Int (ite (= x436 x348) x944 (x1853 x348)))
(define-fun x228 ((x348 Int)) Int (ite (and (>= x348 x318) (< x348 (+ 32 x318))) (x803 (+ 0 (- x348 x318))) (x1631 x348)))
(define-fun x2209 ((x348 Int)) Int (ite x1858 (x228 x348) (x1631 x348)))
(define-fun x1737 ((x348 Int)) Int (ite (= x348 x557) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2209 x348)))
(define-fun x529 ((x348 Int)) Int (ite (= x2021 x348) x1146 (x1737 x348)))
(define-fun x506 ((x348 Int)) Int (ite (= x348 x2010) x1144 (x529 x348)))
(define-fun x637 ((x348 Int)) Int (ite (= x1319 x348) x197 (x506 x348)))
(define-fun x5 ((x348 Int)) Int (ite (and (>= x348 x557) (> (+ x557 32) x348)) (x2057 (+ (- x348 x557) 0)) (x637 x348)))
(define-fun x2004 ((x348 Int)) Int (ite x1537 (x2209 x348) (ite x112 (x5 x348) (x637 x348))))
(define-fun x1463 ((x348 Int)) Int (ite (= x348 x2108) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2004 x348)))
(define-fun x1935 ((x348 Int)) Int (ite (= x348 x794) x1378 (x1463 x348)))
(define-fun x1341 ((x348 Int)) Int (ite (= x348 x505) x1144 (x1935 x348)))
(define-fun x2109 ((x348 Int)) Int (ite (= x348 x462) x883 (x1341 x348)))
(define-fun x1732 ((x348 Int)) Int (ite (and (>= x348 x2108) (> (+ 32 x2108) x348)) (x1977 (+ 0 (- x348 x2108))) (x2109 x348)))
(define-fun x1757 ((x348 x84)) Int (ite x1858 (x419 x348) (x1436 x348)))
(define-fun x54 ((x348 x84)) Int (ite x1537 (x1757 x348) (ite x112 (x46 x348) (x1757 x348))))
(define-fun x1401 ((x348 Int)) Int (ite x1302 (x1732 x348) (x2109 x348)))
(define-fun x287 ((x348 Int)) Int (ite (= x348 x1430) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1401 x348)))
(define-fun x1361 ((x348 Int)) Int (ite (= x348 x1934) x102 (x287 x348)))
(define-fun x499 ((x348 Int)) Int (ite (= x348 x828) x1144 (x1361 x348)))
(define-fun x1622 ((x348 Int)) Int (ite (= x348 x351) x1194 (x499 x348)))
(define-fun x1860 ((x348 Int)) Int (ite (and (< x348 (+ x1430 32)) (>= x348 x1430)) (x1243 (+ 0 (- x348 x1430))) (x1622 x348)))
(define-fun x1470 ((x348 Int)) Int (ite x147 (x1401 x348) (ite x878 (x1860 x348) (x1622 x348))))
(define-fun x863 ((x348 Int)) Int (ite (= x348 x1839) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1470 x348)))
(define-fun x118 ((x348 Int)) Int (ite (= x1180 x348) x217 (x863 x348)))
(define-fun x85 ((x348 Int)) Int (ite (= x348 x699) x1144 (x118 x348)))
(define-fun x1616 ((x348 Int)) Int (ite (= x1984 x348) x640 (x85 x348)))
(define-fun x1235 ((x348 Int)) Int (ite (and (< x348 (+ x1839 32)) (<= x1839 x348)) (x836 (+ (- x348 x1839) 0)) (x1616 x348)))
(define-fun x1878 ((x348 x84)) Int (ite x1302 (x1590 x348) (x54 x348)))
(define-fun x1031 ((x348 x84)) Int (ite x147 (x1878 x348) (ite x878 (x1991 x348) (x1878 x348))))
(define-fun x1931 ((x348 Int)) Int (ite x2170 (x1235 x348) (x1616 x348)))
(define-fun x725 ((x348 Int)) Int (ite (= x926 x348) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1931 x348)))
(define-fun x279 ((x348 Int)) Int (ite (= x2043 x348) x1841 (x725 x348)))
(define-fun x2194 ((x348 Int)) Int (ite (= x348 x741) x1144 (x279 x348)))
(define-fun x1386 ((x348 Int)) Int (ite (= x348 x653) x23 (x2194 x348)))
(define-fun x1968 ((x348 Int)) Int (ite (and (< x348 (+ x926 32)) (<= x926 x348)) (x103 (+ (- x348 x926) 0)) (x1386 x348)))
(define-fun x2049 ((x348 x84)) Int (ite x2170 (x1182 x348) (x1031 x348)))
(define-fun x1137 ((x348 Int)) Int (ite x428 (x1968 x348) (x1386 x348)))
(define-fun x281 ((x348 Int)) Int (ite x367 (x1470 x348) (ite x22 (x1931 x348) (x1137 x348))))
(define-fun x1844 ((x348 Int)) Int (ite (= x348 x1271) x1610 (x281 x348)))
(define-fun x141 ((x348 Int)) Int (ite (= x1426 x348) x1279 (x1844 x348)))
(define-fun x565 ((x348 Int)) Int (ite (= x348 x626) x674 (x141 x348)))
(define-fun x586 ((x348 Int)) Int (ite (= x348 x16) x825 (x565 x348)))
(define-fun x769 ((x348 Int)) Int (ite (= x1888 x348) x2114 (x586 x348)))
(define-fun x433 ((x348 Int)) Int (ite (and (>= x348 0) (< x348 (+ 0 x690))) (x839 (+ x1676 (- x348 0))) (x2126 x348)))
(define-fun x1171 ((x348 Int)) Int (ite (and (<= 0 x348) (> (+ x512 0) x348)) (x1282 (+ x449 (- x348 0))) (x2117 x348)))
(define-fun x1292 ((x348 Int)) Int (ite (and (> (+ x360 0) x348) (>= x348 0)) (x2018 (+ (- x348 0) x755)) (x1644 x348)))
(define-fun x341 ((x348 Int)) Int (ite (= x2025 x348) x378 (x769 x348)))
(define-fun x66 ((x348 Int)) Int (ite x284 (x769 x348) (ite x669 (x586 x348) (ite x1777 (x565 x348) (ite x1541 (x141 x348) (x341 x348))))))
(define-fun x678 ((x348 Int)) Int (ite (= x79 x348) x468 (x66 x348)))
(define-fun x1650 ((x348 Int)) Int (ite (= x348 x1444) x1324 (x678 x348)))
(define-fun x2106 ((x348 Int)) Int (ite (= x348 x306) x1417 (x1650 x348)))
(define-fun x1687 ((x348 Int)) Int (ite (= x348 x1532) x559 (x2106 x348)))
(define-fun x1152 ((x348 Int)) Int (ite (= x348 x922) x209 (x1687 x348)))
(define-fun x811 ((x348 Int)) Int (ite (= x348 x2076) x1736 (x1152 x348)))
(define-fun x1276 ((x348 Int)) Int (ite x349 (x1152 x348) (ite x375 (x1687 x348) (ite x1047 (x2106 x348) (ite x884 (x1650 x348) (x811 x348))))))
(define-fun x1050 ((x348 Int)) Int (x1627 x348))
(define-fun x1822 ((x1555 Int)) Bool (=> (and (not (= x1555 3996650231)) (not (= x1555 4167276458)) (not (= 2580288415 x1555)) (not (= 2039265891 x1555)) (not (= x1555 686821956)) (not (= 307731845 x1555)) (not (= 822145385 x1555)) (not (= x1555 18446744073709551615)) (not (= 18446744073709551616 x1555)) (not (= x1555 361691454)) (not (= x1555 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (not (= x1555 1000000)) (not (= x1555 2127478272)) (not (= x1555 1461501637330902918203684832716283019655932542975)) (not (= x1555 3008386744)) (not (= x1555 1871194811)) (not (= x1555 1531409238)) (not (= x1555 3573918927)) (< 10000 x1555) (not (= x1555 3224796394)) (not (= x1555 3890975986)) (not (= x1555 1984976886)) (not (= 6277101735386680763835789423207666416102355444464034512895 x1555)) (not (= 86400 x1555)) (not (= 1840041978 x1555)) (not (= x1555 3002540418)) (not (= x1555 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 503383097 x1555)) (not (= 826074471 x1555)) (not (= x1555 79228162514264337593543950335)) (not (= 2596148429267413814265248164610048 x1555)) (not (= 599290589 x1555)) (not (= 2863377861 x1555)) (not (= x1555 1862597803)) (not (= x1555 1816029635)) (not (= 3567393941 x1555)) (not (= x1555 3249860859)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1555)) (not (= x1555 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x1555 3366849169)) (not (= 228615836 x1555)) (not (= 4294967295 x1555)) (not (= 3028789119 x1555)) (not (= x1555 3051865383)) (not (= x1555 1779675522)) (not (= 115792089237316195417293883273301227089434195242512125785869492901042639077375 x1555)) (not (= x1555 81655993114286172543975849523773895523710823181222424266797447834442299080704)) (not (= 115792089210356248762697446949407573530086143415211086033019366971273553903615 x1555)) (not (= 2966737888 x1555)) (not (= 596258137 x1555)) (not (= x1555 4294967296)) (not (= 3586168516 x1555)) (not (= x1555 519173431)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1555)) (not (= x1555 3714247998)) (not (= 1000000000000000000 x1555)) (not (= 954831406 x1555)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1555)) (not (= 274184521717934524641157099916833587280 x1555)) (not (= x1555 1738207182)) (not (= 2064814097 x1555)) (not (= 743225245 x1555)) (not (= 922701707 x1555)) (not (= x1555 500647658)) (not (= x1555 3812870723)) (not (= x1555 2876725745)) (not (= 3506505391 x1555)) (not (= x1555 112349551054952423155953805921267728290102753186399332250345724850365349756928)) (not (= x1555 1439069736)) (not (= x1555 46861972923178205566985210922759877011903582497231265773045854621316061069312)) (not (= 910484757 x1555)) (not (= 363856219 x1555)) (not (= x1555 5000000)) (not (= 3670205928 x1555)) (not (= 238709543 x1555)) (not (= 100000 x1555))) (not ((_ is x1941) (x541 x1555)))))
(assert (x1906 x369))
(assert (x1906 x1238))
(assert (x1906 x189))
(assert (= (and (not x1749) x1151) x1237))
(assert (x1906 x690))
(assert (x1906 x1877))
(assert (x1906 x694))
(assert (x1906 x1558))
(assert (= (x331 x805 192) (div x805 6277101735386680763835789423207666416102355444464034512896)))
(assert (x1906 x94))
(assert (x1906 x1912))
(assert (x1822 x53))
(assert (= (and x1098 x1192) x1917))
(assert (x1906 x1626))
(assert (x1906 x436))
(assert (x1906 x2111))
(assert (= (and x1747 (not x34)) x1295))
(assert (x1906 x1659))
(assert (= 910484757 (x985 (x1941 910484757))))
(assert (x1906 x124))
(assert (= (or x2153 x1476) x1333))
(assert (x1906 x1451))
(assert (= x1128 (=> (and (or (and (not x1734) (and (= (= x1169 x2019) x818) (not x703) (= x1169 (div x429 x1129)))) (and x1734 (= x818 x1734))) (and (= x429 (mod (* x1129 x2019) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1734 (= 0 x1129)) (= (x1008 (- 1000000000000000000 x2159)) x1129) (= x703 (= 1000000000000000000 x2159)))) x634)))
(assert (= (and (not x1081) x293) x1583))
(assert (x1906 x2030))
(assert (= x1052 (and (not x564) x2045)))
(assert (x1906 x1054))
(assert (x654 x2094))
(assert (x1906 x2116))
(assert (x1906 x925))
(assert (x1906 x158))
(assert (= (and x655 (not x1557)) x2107))
(assert (= 0 (x1790 x1920)))
(assert (x1906 x195))
(assert (x1906 x1121))
(assert (= x870 (x985 (x541 x870))))
(assert (= (x985 (x541 x2066)) x2066))
(assert (x1906 x451))
(assert (= x1098 (or x1428 x989)))
(assert (x1362 x924))
(assert (= (=> (and (and (= x1081 (= x1535 0)) (= (mod (* x1535 x14) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x423) (= (div x531 1000000000000000000) x313) (= x14 (x1842 (+ x313 x388))) x492) (or (and (and (= x1652 (div x423 x1535)) (= x1359 (= x1652 x14)) (> x1535 0)) (not x1081)) (and (= x1359 x1081) x1081))) x845) x1527))
(assert (x1906 x600))
(assert (x1906 x1383))
(assert (= x321 (or x2200 x918)))
(assert (= x912 (and x659 x1469)))
(assert (x1906 x2098))
(assert (x1906 x40))
(assert (= (x1941 1871194811) (x541 1871194811)))
(assert (x1906 x740))
(assert (x1906 x2124))
(assert (= x1221 (=> (and (= x38 (ite (not x2032) (not x2032) (= x2019 0))) (= (< x425 x917) x2032)) (and (=> (and (= x319 0) x38) x74) (=> (and (not x38) (and (and (not (= x917 0)) (= x1116 (= 0 x425))) (or (and x1116 (= 0 x2159)) (and (and (< 0 x917) (= x804 x2159) (= (div x1788 x917) x804) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x425 1000000000000000000)) (< 0 x425) (= (mod (* x425 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1788)) (not x1116))))) x1128)))))
(assert (= x1608 (or x350 x295)))
(assert (= x840 (or x174 x487)))
(assert (x1906 x1599))
(assert (x1906 x11))
(assert (x1906 x1531))
(assert (= 0 (x238 (+ x1676 (- x1439 x262)))))
(assert (x1906 x1982))
(assert (x1906 x1059))
(assert (x1906 x1048))
(assert (= (or x1335 x1583) x910))
(assert (x1906 x2136))
(assert (x1906 x1144))
(assert (= (x985 (x1941 2966737888)) 2966737888))
(assert (x1906 x1629))
(assert (= 0 (x271 (+ (- (x1842 (+ 4 x711)) x786) x449))))
(assert (= x650 (and (not x69) x142)))
(assert (x1906 x1056))
(assert (= (x541 1439069736) (x1941 1439069736)))
(assert (x1906 x1882))
(assert (x1906 x226))
(assert (= (and x1734 x1664) x1064))
(assert (=> (>= 10000 x1710) (= (x541 x1710) (x1941 x1710))))
(assert (= x1558 (x985 (x541 x1558))))
(assert (x1906 x624))
(assert (x1906 x947))
(assert (= (=> (and (and (= x2197 (x614 x540)) (= x1327 (x1842 (+ x2054 1))) (= (x614 x540) x1696) (< 0 x2167) (= (x614 x540) x791) (= (x1842 (+ x986 32)) x1803) (= (x1373 (x541 x1079) x1211 0) x963) (= x1079 (x614 x1803)) (< 0 x791) (= (x1373 (x541 x374) (x1941 10) 0) x368) (= (x1842 (+ 32 x540)) x986) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1807 x1962))) (not (= 0 x2097)) (< 1 x2197) (= x1163 (x1373 (x541 x374) (x1941 10) 0)) (= x1558 (x614 x986)) (= (x1364 x963) x1100) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1049) x2054) (= x1634 (x614 x540)) (= x729 (x1373 (x541 x1581) x1163 0)) (< 0 x1696) (= (= 0 x1100) x1104) (= x1005 (x614 x1803)) (= (x1373 (x541 x1005) x729 0) x753) (> x1634 1) (= (x614 x986) x1581) (= (x1842 (+ x1807 x1962)) x2017) (= x1049 (x1485 (x1941 9))) (= (x1373 (x541 x1558) x368 0) x1211) (= x2167 (x1364 x753))) (or (and (not x1104) (and (= x917 x1589) (= x1321 (mod (* x1100 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x1321 x2097) x1589) (< (* x1100 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x1100 0) (< 0 x2097))) (and x1104 (= x917 0)))) x1228) x1394))
(assert (= 0 (x1790 x409)))
(assert (x1362 x119))
(assert (x1906 x1875))
(assert (x1906 x994))
(assert (x1822 x235))
(assert (x1906 x533))
(assert (= (x1298 x305 96) (mod (* 79228162514264337593543950336 x305) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1906 x2180))
(assert (x1731 x1825))
(assert (x1906 x263))
(assert (x1906 x1578))
(assert (=> (<= x1808 10000) (= (x1941 x1808) (x541 x1808))))
(assert (x1906 x977))
(assert (= (+ (x985 x657) 2) (x985 (x1661 x657 2))))
(assert (= (x541 1461501637330902918203684832716283019655932542975) (x1941 1461501637330902918203684832716283019655932542975)))
(assert (= x308 (and (not x1029) x1608)))
(assert (=> (<= x1230 10000) (= (x1941 x1230) (x541 x1230))))
(assert (x1906 x1204))
(assert (x1362 x1451))
(assert (x1906 x1956))
(assert (x1906 x1886))
(assert (= (and (not x993) x447) x1047))
(assert (x1906 x2138))
(assert (= 954831406 (x985 (x1941 954831406))))
(assert (= x2112 (and x763 x933)))
(assert (= 0 (x238 (+ x1676 (- x1780 x262)))))
(assert (x1906 x1181))
(assert (=> (<= x1673 10000) (= (x1941 x1673) (x541 x1673))))
(assert (= 0 (x271 (+ (- x1410 x786) x449))))
(assert (x1906 x2080))
(assert (x1906 x1843))
(assert (= (x541 3890975986) (x1941 3890975986)))
(assert (= (and x749 x1768) x508))
(assert (x1906 x779))
(assert (x1906 x1720))
(assert (= (=> (and (or x1148 (and (and (= (mod (* x1393 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1609) (= x301 (x1842 (+ 32 x1932)))) (not x1148))) (and (= x1393 (x1008 (- x1693 1))) (= (x2086 x540) x1693) (not (> x1393 18446744073709551615)) (= x1148 (= 0 x1393)) (= (x1842 (+ x822 32)) x335) (= (x1842 (+ x1932 x335)) x711) (= (mod (* 32 x1393) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x822))) x1346) x651))
(assert (x1906 x1793))
(assert (= x448 (and x1493 (not x827))))
(assert (= x1539 (=> (and (= x247 x1552) (= x167 x175)) x1046)))
(assert (= (x985 (x541 x2016)) x2016))
(assert (x1906 x1257))
(assert (x1906 x908))
(assert (= (x238 (+ (- x94 x262) x1676)) 0))
(assert (= 0 (x271 (+ (- x1702 x786) x449))))
(assert (=> (<= x53 10000) (= (x1941 x53) (x541 x53))))
(assert (x1725 x270))
(assert (= (x985 (x541 x1940)) x1940))
(assert (= (x1941 18446744073709551616) (x541 18446744073709551616)))
(assert (x1362 x1049))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x985 (x1941 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x1906 x2128))
(assert (= x1141 (=> (and (= x1316 (div x2136 1000000000000000000)) x543 (= x1387 (not (< 1 x1123))) (> x2121 0) (= (x1564 x1655) x2121) (= x1328 (x1842 (+ 32 x1655)))) (and x1387 (=> (= x167 x540) x585)))))
(assert (x1906 x1717))
(assert (= x258 (and x1759 (not x1224))))
(assert (= (x985 (x1941 2863377861)) 2863377861))
(assert (x1906 x1735))
(assert (x1906 x1657))
(assert (x1906 x612))
(assert (= x1392 (and x733 x1830)))
(assert (x1906 x269))
(assert (x1362 x1778))
(assert (x1906 x1396))
(assert (= (x985 (x1941 3890975986)) 3890975986))
(assert (x1822 x1710))
(assert (= (x271 (+ (- x94 x786) x449)) 0))
(assert (= (=> (and (and (and (and (and (and (and (and (and (= x569 5000) (> x396 0) (= x366 1) (= (x75 (x541 x1144)) x396) (not (= x1457 500647658)) (< x1457 954831406) (= x1756 0) (not (> 500647658 x1457)) (< x1457 2127478272) (> 596258137 x1457) (= x889 5000) (> 743225245 x1457) (not (= x1457 503383097)) (= 519173431 x1457)) (and (and (and (not (= 1984976886 x656)) (not (= x656 2039265891)) (< 0 x166) (= x656 2064814097) (= 0 x1811) (not (> 954831406 x656)) (= x611 0) (not (> 1871194811 x656)) (= x1216 64) (< x656 2127478272) (not (< x656 1984976886)) (= (x75 (x541 x1144)) x166) (not (> 1439069736 x656)) (= x765 true)) (and (and (and (> 1871194811 x1121) (not (< x1121 1738207182)) (= 128 x1225) (not (= 1840041978 x1121)) (> 2127478272 x1121) (not (= x1121 1738207182)) (= 192 x1797) (= x582 true) (= x1596 (x75 (x541 x1144))) (not (< x1121 954831406)) (= 128 x476) (< 0 x1596) (not (> 1439069736 x1121)) (= 1862597803 x1121) (not (= 1816029635 x1121))) (and (and (= x1135 192) (not (> 3224796394 x2186)) (= x909 64) (= 192 x750) (not (> 3890975986 x2186)) (< 0 x760) (= 3890975986 x2186) (= true x2065) (< x2186 3996650231) (not (< x2186 3812870723)) (= x760 (x75 (x541 x1144))) (not (> 2127478272 x2186))) (and (and (not (> 1439069736 x752)) (= 1871194811 x752) (not (< x752 1871194811)) (< x752 2127478272) (> x2210 0) (= 64 x484) (not (> 954831406 x752)) (= x2210 (x75 (x541 x1144))) (= 64 x1202) (< x752 1984976886) (= 64 x757) (= x616 true)) (and (and (and (= x1904 x920) (= x516 x1397) (= x1904 x1851) (not (> 2580288415 x939)) (= x723 x183) (= x890 x1901) (= x1851 0) (= x387 x1186) (= x563 x1299) (not (= x939 3008386744)) (not (< x939 2127478272)) (= x1776 x1114) (= x724 x2199) (= x890 x563) (> 3224796394 x939) (= (x1096 (x1941 14)) x688) (not (> 3008386744 x939)) (<= x1901 1461501637330902918203684832716283019655932542975) (<= x36 1461501637330902918203684832716283019655932542975) (= x100 x824) (= x266 x1511) (not (< x939 2863377861)) (>= 1461501637330902918203684832716283019655932542975 x1397) (= x1518 (x1096 (x1941 13))) (= x939 3051865383) (= (x1096 (x1941 15)) x1465) (= x564 (< x1114 x1238)) (= (not x824) x1122) (> x1197 0) (<= 0 x36) (<= 0 x1397) (= (not (= x1217 0)) x100) (= x618 x876) (<= 0 x1901) (= x516 x1459) (= (x1096 (x1941 16)) x1238) (= (x75 (x541 x1144)) x1197)) (and (= 361691454 x685) (> 500647658 x685) (< 0 x1787) (= (ite x798 1 0) x1217) (= (x75 (x541 x1144)) x1787) (= x58 (not (= x1329 0))) (not (= 307731845 x685)) (= (not x1220) x798) (< x685 954831406) (not (< x685 228615836)) (not (= 238709543 x685)) (= (x357 255 x1315) x2039) (> 2127478272 x685) x58 (= (x1096 (x1941 26)) x1315) (not (= 228615836 x685)) (= (= x2039 0) x1220) (> 363856219 x685))) (and (not (< x1964 2127478272)) (= (= x984 1) x697) (< 0 x542) (= true x361) (= (not x1722) x1002) (= x1722 (not x697)) (= x1329 (ite x1002 1 0)) (not (< x1964 2580288415)) (not (< x1964 3008386744)) (< x1964 3224796394) (not (< x1964 2863377861)) (= x1964 3008386744) (= 64 x180) (= (x75 (x541 x1144)) x542) (= x984 (x331 x1636 255)) (= x1636 (x1096 (x1941 8))) (= x1403 255) (= x1055 64)))))) (and (= x941 64) (< 0 x224) (= x636 64) (not (= x885 3366849169)) (= x1937 128) (not (> 3366849169 x885)) (= x2185 true) (not (< x885 3224796394)) (= x885 3506505391) (not (> 2127478272 x885)) (= x224 (x75 (x541 x1144))) (> 3567393941 x885) (> 3812870723 x885)))) (and (= x264 100000) (= x2012 0) (not (= x1015 2876725745)) (not (> 2127478272 x1015)) (not (> 2580288415 x1015)) (= x275 (x75 (x541 x1144))) (not (= x1015 2966737888)) (= 3002540418 x1015) (> 3008386744 x1015) (not (< x1015 2863377861)) (not (= 2863377861 x1015)) (< x1015 3224796394) (= x866 5000) (> x275 0)))) (and (not (= x1742 596258137)) (not (> 500647658 x1742)) (< x1742 2127478272) (= 1 x135) (> x1482 0) (< x1742 743225245) (= 686821956 x1742) (> 954831406 x1742) (= (x75 (x541 x1144)) x1482) (= 1 x687) (not (< x1742 596258137)) (not (= 599290589 x1742)) (= x1829 1))) (and (< x2061 2127478272) (> x1222 0) (= 686821956 x2061) (= 1 x1491) (not (< x2061 596258137)) (> 743225245 x2061) (= 1 x1690) (> 954831406 x2061) (not (= 596258137 x2061)) (not (< x2061 500647658)) (not (= 599290589 x2061)) (= x358 5000) (= x1222 (x75 (x541 x1144))))) (and (not (< x1952 500647658)) (= x1560 5000) (= x1187 true) (< x1952 596258137) (= 5000 x277) (= x864 1000) (= 519173431 x1952) (> x660 0) (< x1952 743225245) (= (x75 (x541 x1144)) x660) (not (= x1952 503383097)) (< x1952 2127478272) (> 954831406 x1952) (not (= 500647658 x1952)) (= 1000 x843))) (and (= 2 x1483) (= (x75 (x541 x1144)) x552) (> 2127478272 x747) (not (< x747 1738207182)) (> 1871194811 x747) (= x401 2) (= x747 1816029635) (< 0 x552) (not (< x747 954831406)) (= x785 1000) (not (= 1738207182 x747)) (= true x455) (not (< x747 1439069736)))) (and (< 0 x1670) (= x2212 922701707) (= 2 x2047) (= 86400 x1703) (> 2127478272 x2212) (not (= 910484757 x2212)) (not (= 826074471 x2212)) (= x162 0) (= x1670 (x75 (x541 x1144))) (not (= 822145385 x2212)) (not (< x2212 743225245)) (not (< x2212 500647658)) (< x2212 954831406) (not (< x2212 822145385)))) (and (not (> 3224796394 x1613)) (not (= 3224796394 x1613)) (< 0 x1675) (> 3567393941 x1613) (= 86400 x573) (= 3249860859 x1613) (= (x75 (x541 x1144)) x1675) (= 86400 x410) (< x1613 3366849169) (= 1531409238 x756) (< x1613 3812870723) (not (< x1613 2127478272)))) (and x603 (<= 0 x1587) (< x145 3567393941) x970 (> x1144 0) (= x252 false) (not (= x1497 x1940)) (= x1278 (x1436 (x541 x971))) (not (> 2127478272 x145)) (not (= x1144 x1940)) (>= 1461501637330902918203684832716283019655932542975 x971) (not (= x1144 x2102)) (not (= x2102 x1497)) (= x821 x533) (> x2102 0) (= (x1436 (x541 x1940)) x952) (= x1248 86400) (> x1497 0) (= (x1436 (x541 x2102)) x895) (= x89 false) (= x169 (< 0 (x75 (x541 x1940)))) (<= x1497 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1032) x1078 (= x1032 x1478) (= false x796) (>= x895 0) x1409 (not (= x971 x1144)) (= x1587 (x1436 (x541 x1497))) (<= x42 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2102) (not (= x2102 x971)) (= x1409 (< 0 (x75 (x541 x1144)))) (= 3586168516 x149) (<= x533 1461501637330902918203684832716283019655932542975) (< 0 x555) (= (> (x75 (x541 x971)) 0) x603) (not (= x145 3224796394)) (<= x1144 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x716) (>= x42 0) (>= x533 0) (not (= x1497 x971)) x169 (< 0 x971) (= x716 x1459) (<= 0 x1278) (= x266 x42) (< x145 3366849169) (= x555 (x75 (x541 x1144))) (not (= x1940 x971)) (<= 0 x716) (= (x1436 (x541 x1144)) x1272) (= 3249860859 x145) (= (> (x75 (x541 x2102)) 0) x1078) (not (< x145 3224796394)) (<= x1940 1461501637330902918203684832716283019655932542975) (<= 0 x952) (= x133 false) (= x1612 7) (= x970 (< 0 (x75 (x541 x1497)))) (not (= x2102 x1940)) (<= 0 x1272) (> 3812870723 x145) (<= 0 x1032) (not (= x1144 x1497)) (> x1940 0))) (and (=> (and (and (= x1576 0) (= x688 x1909)) (not x564)) x1894) (=> (and x564 (and (or (and (not x1586) (and (= x946 x1265) (= (x1008 (- x1238 x1465)) x754) (= x164 (div x1261 x754)) (= x1265 (x1008 (- x1518 x164))) (= (x1008 (- x1114 x1465)) x407) (> x754 0) (= (x1008 (- x1518 x688)) x1516) (= x1261 (mod (* x407 x1516) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (and (= (x1008 (- x1238 x1465)) x71) (= (x1008 (- x688 x1518)) x1544) (> x71 0) (= (mod (* x1544 x211) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1124) (= (x1008 (- x1114 x1465)) x211) (= (div x1124 x71) x2038) (= x946 x477) (= x477 (x1842 (+ x2038 x1518)))) x1586)) (= (> x688 x1518) x1586))) x62))) x537))
(assert (x1906 x1744))
(assert (x1906 x1133))
(assert (x1906 x140))
(assert (x1906 x108))
(assert (= x797 (and x299 x186)))
(assert (x1906 x445))
(assert (x1906 x711))
(assert (= 0 (x1923 (+ x755 (- x1927 x711)))))
(assert (x1906 x1891))
(assert (=> (<= x9 10000) (= (x1941 x9) (x541 x9))))
(assert (x1906 x530))
(assert (x1906 x1872))
(assert (x1906 x2038))
(assert (x1906 x300))
(assert (= 86400 (x985 (x1941 86400))))
(assert (x1906 x1889))
(assert (x1906 x873))
(assert (x1906 x981))
(assert (x1906 x1268))
(assert (= (x1941 743225245) (x541 743225245)))
(assert (x1906 x164))
(assert (x485 x380))
(assert (= (x1790 (x1842 (+ 4 x262))) 0))
(assert (= (x541 910484757) (x1941 910484757)))
(assert (x1906 x2070))
(assert (x1906 x2071))
(assert (x1906 x1856))
(assert (= (x271 (+ (- x1927 x786) x449)) 0))
(assert (= (and x852 (not x297)) x1330))
(assert (x1906 x255))
(assert (x2005 x981))
(assert (= 0 (x271 (+ x449 (- x409 x786)))))
(assert (x1906 x684))
(assert (x1906 x542))
(assert (= (x985 (x1941 1984976886)) 1984976886))
(assert (=> (<= x886 10000) (= (x541 x886) (x1941 x886))))
(assert (x1906 x1640))
(assert (= x120 (and x362 (not x738))))
(assert (x1906 x958))
(assert (= x837 (or x1064 x964)))
(assert (x1906 x2034))
(assert (x1822 x2102))
(assert (x1906 x1841))
(assert (x1906 x244))
(assert (x1906 x352))
(assert (= 0 (x1790 x1405)))
(assert (= (x271 (+ (- x2175 x786) x449)) 0))
(assert (=> (>= 10000 x1005) (= (x1941 x1005) (x541 x1005))))
(assert (x1906 x1132))
(assert (= x669 (and x2003 (not x1231))))
(assert (x1906 x2040))
(assert (x1906 x384))
(assert (x1906 x1360))
(assert (=> (>= 10000 x393) (= (x1941 x393) (x541 x393))))
(assert (x1906 x1948))
(assert (x1906 x2186))
(assert (x1906 x484))
(assert (x1906 x2114))
(assert (x1906 x1921))
(assert (=> (<= x304 10000) (= (x541 x304) (x1941 x304))))
(assert (= (and x347 x934) x1084))
(assert (x1906 x1954))
(assert (x1906 x2183))
(assert (x1906 x1589))
(assert (x1906 x1932))
(assert (= (x541 826074471) (x1941 826074471)))
(assert (x1906 x1681))
(assert (= x2160 (=> (and (= x1296 (x1567 x24)) (= (x1842 (+ x113 1)) x86) (= x1405 (x1842 (+ x39 32))) (= 2596148429267413814265248164610048 x99) (= x1455 (x1373 (x541 x1710) (x1941 10) 0)) (= (x1373 (x541 x304) (x1941 0) 0) x1404) (= x2093 (x1651 x1932)) (= x587 (x357 1461501637330902918203684832716283019655932542975 x868)) (= x113 (x357 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1313)) (= (x1008 (- 2596148429267413814265248164610048 x2096)) x1868) (= x2096 (x1567 x338)) (= x1313 (x134 (x1941 9))) (> x1296 0) (= (x2165 x1287) x491) (not (> x2096 2596148429267413814265248164610048)) (> x761 0) (= (= x1106 x1897) x1011) (= (< 0 x1123) x933) (= x1340 x711) (= (x1373 (x541 x15) x1799 0) x24) (= (x1651 x1932) x1550) (= x1506 0) (= x1131 (x1567 (x1941 2))) (= x1689 0) (= x1799 (x1373 (x541 x1040) x1422 0)) (= x1897 (- x781 x67)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x491 x1868))) (= x1352 (x1651 x39)) (= (x1373 (x541 x587) (x1941 0) 0) x1287) x1011 (= (x1373 (x541 x1710) (x1941 10) 0) x1422) (= x677 (x1842 (+ x540 x1219))) (= x1419 (x1651 x1405)) (= (x1842 (+ x1932 32)) x39) (= (x1373 (x541 x1419) x1458 0) x338) (< 1 x1550) (= x781 (+ x524 x2111)) (= (x1842 (+ 32 x855)) x1219) (= x855 (mod (* x570 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1842 (+ x1868 x491)) x524) (< 0 x2093) (= x304 (x357 1461501637330902918203684832716283019655932542975 x868)) (= (x2165 x1404) x67) (< 1 x1513) (= (x1651 x39) x1040) (< x570 x1529) (= (x172 x540) x1529) (= x31 (x1842 (+ x1868 x1131))) (= x1458 (x1373 (x541 x1352) x1455 0)) (= (x1651 x1932) x1513) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1131 x1868))) (= x761 (x1651 x1932)) (= x15 (x1651 x1405))) (and (=> (and (and (or (and (= x711 x1365) (not x356)) (and (and (= x905 (x1008 (- x2140 4))) (= (x1842 (+ 4 x711)) x847) (= x1310 x711) (= (= x1519 (x1679 x711)) x55) (not (or (and (< x360 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x360))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x360))) (= (x1008 (- x1431 x755)) x360) (= (x2018 64) x755) (= (x1373 (x1941 0) (x1941 17) 0) x309) (= 0 x459) (= 36 x2140) (not x2064) (= x1431 (x1842 (+ x229 32))) (= (x1842 (+ x360 31)) x119) (= (x1842 (+ x2129 x711)) x1686) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x119) x2129) (= 255 x364) (= x740 (x1679 (x1842 (+ 4 x711)))) (= x954 (x1373 (x1941 0) (x1941 17) 0)) (= 4167276458 x517) (= x229 (x391 64)) (= x847 x2085) (= x1657 x431) (= x1831 (x1842 (+ x668 x919))) (= x1365 x1686) (not (> 4 x2140)) (not (= 0 x179)) (= x1538 (ite (>= 79228162514264337593543950335 x668) x1831 x1903)) (= (x357 79228162514264337593543950335 x1657) x305) (= (x1298 x305 96) x919) (= (x75 (x541 274184521717934524641157099916833587280)) x179) (= x2191 96) (= 160 x1360) x55 (= (x311 x309) x530) (= x431 x740) (= x1903 (x1842 (+ x919 x668))) (= x668 x412) (not (= x517 1779675522)) (= x1764 160) (= x2064 (< x905 32)) (> x2044 0) (= x577 96) (= x2044 (x75 (x541 x1144))) (not (= 3028789119 x517)) (= (x483 x1310) x2143) (= 96 x974) (= x1188 x740) (= x412 (x357 115792089237316195417293883273301227089434195242512125785869492901042639077375 x1188))) x356)) (and (= (x357 1 x203) x1471) (= (= x1471 1) x356) (= x509 6) (= (x331 x1314 6) x203))) x933) x1566) (=> (and (= x711 x223) (not x933)) x1218)))))
(assert (x1906 x1329))
(assert (x1906 x1325))
(assert (x1906 x1212))
(assert (= x620 (x985 (x541 x620))))
(assert (x1906 x1740))
(assert (x1906 x1788))
(assert (x1906 x628))
(assert (=> (<= x337 10000) (= (x1941 x337) (x541 x337))))
(assert (= x22 (and (not x1433) x705)))
(assert (x1906 x1526))
(assert (= x1944 (and x942 x665)))
(assert (= 1531409238 (x985 (x1941 1531409238))))
(assert (x1906 x889))
(assert (x1906 x1068))
(assert (x1906 x57))
(assert (= (x541 100000) (x1941 100000)))
(assert (x1906 x1092))
(assert (= (x271 (+ (- x986 x786) x449)) 0))
(assert (x1906 x298))
(assert (x1906 x1150))
(assert (x1906 x1739))
(assert (x1906 x1907))
(assert (x1906 x222))
(assert (x1906 x1495))
(assert (x1906 x2017))
(assert (= x1671 (x985 (x541 x1671))))
(assert (x1906 x1105))
(assert (x1906 x846))
(assert (= (x541 115792089210356248762697446949407573530086143415211086033019366971273553903615) (x1941 115792089210356248762697446949407573530086143415211086033019366971273553903615)))
(assert (x1906 x1293))
(assert (x1906 x198))
(assert (x1906 x576))
(assert (= (=> (and x1658 (= 0 x801) (= (< 0 x1123) x475)) (and (=> (and (= (= x570 0) x789) x475) (and (=> (and x789 (= x1268 x2011)) x1530) (=> (and (not x789) (and (= (x1096 x251) x805) (= x251 (x1373 (x1941 0) (x1941 17) 0)) (= (= x805 0) x1557))) (and (=> (and (= x1268 x2011) x1557) x1530) (=> (and (not x1557) (and (or (and (= x1268 x1873) (not x317)) (and (and (= x1300 (x1298 x1804 192)) (= (x331 x1024 96) x960) (= x1712 x1987) (= x960 0) (= x78 x1089) (= x1531 (x1298 x1891 224)) (= x372 (x1842 (+ x748 x1300))) (> 4294967296 x451) (= 0 x232) (= x572 x748) (= 255 x1534) (= x1554 (x75 (x541 x2150))) (= 255 x1753) (= x188 (x331 x1024 96)) (= x572 (x357 115792089210356248762697446949407573530086143415211086033019366971273553903615 x1089)) (= 32 x1252) (= x2150 (x357 1461501637330902918203684832716283019655932542975 x2094)) (= x380 x26) (= x255 (x331 x1891 32)) (= 256 x4) (= x816 x215) (= 96 x240) (= (x357 115792089237316195423570985008687907853269984665561335876943319670319585689600 x380) x1987) (= 64 x246) (= x1337 x2128) (= x148 64) (= x1970 (x357 26959946667150639794667015087019630673637144422540572481103610249215 x816)) (= 32 x1896) (= x255 0) (= x1157 (x1842 (+ x1531 x1970))) (= (x1842 (+ x1300 x748)) x604) (= 192 x770) (= x2128 (x1842 (+ x1030 x1268))) (= (x1373 (x1941 0) (x1941 17) 0) x829) (= (x1842 (+ x1712 x1993)) x1492) (= x114 (x1373 (x1941 0) (x1941 17) 0)) (= x2128 x1873) (= x1030 (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1761)) (= x188 0) (= 224 x1640) (= (x1842 (+ 31 x451)) x1761) (= x1579 32) (= (ite (>= 6277101735386680763835789423207666416102355444464034512895 x748) x372 x604) x215) (not (= 0 x1554)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x451) true) (< x451 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x451))) (= x130 (x1842 (+ x1712 x1993))) (= x1993 x1024) (= (x1842 (+ x1889 x1804)) x1891) (= (ite (<= x1993 79228162514264337593543950335) x130 (ite x997 x1492 x702)) x78) (= x522 255) (= x1972 255) (= (<= x1993 79228162514264337593543950335) x997) (= x26 (x1096 x114)) (= 32 x2006) (= x1268 x1741) (= (x2048 x1712 x1993) x702) (= (x1266 x1741) x1024)) x317)) (and (= x1869 192) (= 32 x2059) (= x56 (x331 x805 224)) (= 32 x510) (= (> x1889 x56) x317) (= 224 x976) (= (x331 x805 192) x1451) (= (x357 4294967295 x1451) x1804)))) x7))))) (=> (and (not x475) (= x1268 x1655)) x1980))) x482))
(assert (x1906 x568))
(assert (x1906 x446))
(assert (x1906 x1256))
(assert (x1906 x146))
(assert (x1822 x1040))
(assert (x1906 x1553))
(assert (= (=> (and (= x1027 1) (= (= x1497 x971) x1943) (= x2052 (x1842 (+ 32 x558))) (< 1 x679) (= (x2004 x2062) x679) (= x1194 (x2004 x2052)) (> x830 1) (= (x2004 x2190) x830) (= x883 (x2004 x94)) (= (x1842 (+ x1591 32)) x94)) (and (=> (and (= true x1468) (not x1943)) (and (=> (and (= x971 x1144) (not x1468)) x111) (=> x1468 x1680))) (=> x1943 x1680))) x1112))
(assert (= x261 (and (not x1234) x1303)))
(assert (= (x1941 3008386744) (x541 3008386744)))
(assert (x1906 x501))
(assert (x1906 x1538))
(assert (x1906 x805))
(assert (x1822 x1230))
(assert (x1906 x1479))
(assert (x1906 x1900))
(assert (x1906 x1552))
(assert (= 0 (x1923 (+ (- x1175 x711) x755))))
(assert (x1906 x1453))
(assert (x654 x136))
(assert (x1906 x874))
(assert (x1362 x298))
(assert (x1362 x576))
(assert (= (=> (and (or (and x848 (and (= x929 (x54 (x541 x1144))) x1082 (= x1082 (= (x1590 (x541 x971)) x2041)) (= (<= x929 (x1590 (x541 x1144))) x575) (= (x54 (x541 x971)) x2041) (> 4294967296 x1578) x575)) (not x848)) (and (= x848 (> x1847 0)) (= x462 (x1842 (+ 32 x505))) (= x1311 (x1842 (+ x2108 4))) (not (= 0 x444)) (= (x75 (x541 x971)) x444) (= x1311 x794) (= x1378 (x357 1461501637330902918203684832716283019655932542975 x868)) (= x505 (x1842 (+ x794 32))))) x714) x111))
(assert (x1906 x1314))
(assert (=> (>= 10000 x1497) (= (x541 x1497) (x1941 x1497))))
(assert (x1906 x290))
(assert (x1906 x1248))
(assert (x1906 x1400))
(assert (x1906 x1219))
(assert (= (x1923 (+ x755 (- x94 x711))) 0))
(assert (= (and (not x1070) x1039) x367))
(assert (=> (>= 10000 x1558) (= (x541 x1558) (x1941 x1558))))
(assert (= (and (not x1468) x1288) x918))
(assert (x1731 x440))
(assert (x1906 x709))
(assert (x1906 x78))
(assert (= x381 (and x665 (not x942))))
(assert (x1906 x1636))
(assert (x1906 x1263))
(assert (x1906 x1111))
(assert (= x487 (and x1117 (not x1061))))
(assert (x1906 x743))
(assert (= (x1790 x1653) 0))
(assert (x1906 x268))
(assert (x1906 x1938))
(assert (= (=> (and (and (and (and (< 0 x105) (= x105 (x75 (x541 x1144))) (= 5000 x1585) (> 596258137 x1133) (= x2169 x1998) (= x1133 519173431) (= 5000 x1584) (not (< x1133 500647658)) (< x1133 954831406) (< x1133 2127478272) (< x1133 743225245) (not (= x1133 503383097)) (not (= x1133 500647658))) (and (and (not (> 1738207182 x1195)) (= x1750 5000) (= x286 (x75 (x541 x1144))) (not (= x1195 1738207182)) (= x1647 1000) (= 1816029635 x1195) (> 1871194811 x1195) (< 0 x286) (not (< x1195 954831406)) (not (< x1195 1439069736)) (< x1195 2127478272)) (and (and (and (= x1435 686821956) (= x400 x2211) (not (= 596258137 x1435)) (> 954831406 x1435) (not (< x1435 500647658)) (= x1819 (x75 (x541 x1144))) (< x1435 743225245) (< x1435 2127478272) (not (= x1435 599290589)) (= 1 x1427) (< 0 x1819) (= 1 x1245) (not (< x1435 596258137))) (and (and (> x1743 0) (not (> 1738207182 x1021)) (= 1816029635 x1021) (= 1000 x851) (not (= x1021 1738207182)) (> 1871194811 x1021) (not (> 954831406 x1021)) (= 1 x1862) (> 2127478272 x1021) (not (> 1439069736 x1021)) (= x1743 (x75 (x541 x1144)))) (and (= x34 (< x1487 x925)) (= x1924 x97) (= x1874 x732) (= x1663 x1459) (= x920 x732) (= x925 (x1096 (x1941 16))) (= (x75 (x541 x1144)) x439) (= x97 x445) (<= 0 x445) (<= x445 1461501637330902918203684832716283019655932542975) x95 (= x49 x387) (= x1874 0) (not (> 2127478272 x1095)) (not (= x1095 3008386744)) (= x707 x266) (not (> 2863377861 x1095)) (>= x1794 0) (= x95 (and x1270 x1769)) (> 3224796394 x1095) (<= x1794 1461501637330902918203684832716283019655932542975) (= x1487 x1776) (<= x1181 1461501637330902918203684832716283019655932542975) (= x618 x495) (= x1663 x1794) (<= 0 x1181) (not (< x1095 3008386744)) (= x1924 x1299) (= (<= 1000 x400) x1270) (= x911 (x1096 (x1941 14))) (not (< x1095 2580288415)) (= (x1096 (x1941 15)) x418) (= x2199 x744) (= 1000 x969) (= (x1096 (x1941 13)) x2001) (< 0 x439) (= x1095 3051865383) (= x500 1000) (= x723 x1420)))) (and (not (< x404 3224796394)) (= 1000 x2100) (= x1723 5000000) (> x888 0) (= x2211 x630) (< x404 3714247998) (not (= x404 3573918927)) (= 3670205928 x404) (not (= x404 3586168516)) (< x404 3812870723) (not (> 2127478272 x404)) (= x630 (x1096 (x1941 14))) (not (= 3567393941 x404)) (= x888 (x75 (x541 x1144))) (not (> 3567393941 x404)) (= (>= 5000000 x2169) x1769))))) (and (= x324 x1338) (= x599 x675) (not (= x977 3586168516)) (not (< x977 3567393941)) (= x608 (or (not x1122) x1379)) (= (not (= x612 0)) x675) (= 0 x856) (not (< x977 2127478272)) (= x152 (x1096 (x1941 14))) (not (= x977 3567393941)) x608 (= (x75 (x541 x1144)) x545) (> x545 0) (= 3670205928 x977) (= x1998 x152) (= (= x324 0) x1379) (= x1338 x1957) (= x1957 x776) (> 3812870723 x977) (not (< x977 3224796394)) (not (= 3573918927 x977)) (< x977 3714247998))) (and (= x612 (x2155 160)) (= (not (= 0 x1576)) x1758) (= (x2155 128) x776))) (and (=> (and (and (= (> x911 x2001) x1249) (or (and x1249 (and (= x61 (x1008 (- x911 x2001))) (= x478 x1606) (= x108 (x1008 (- x1487 x418))) (= x1606 (x1842 (+ x2001 x1301))) (= (x1008 (- x925 x418)) x1033) (> x1033 0) (= (div x2027 x1033) x1301) (= (mod (* x108 x61) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2027))) (and (and (= x1166 (mod (* x2141 x902) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x902 (x1008 (- x1487 x418))) (= x600 (div x1166 x1880)) (= x1880 (x1008 (- x925 x418))) (= (x1008 (- x2001 x600)) x50) (= x2141 (x1008 (- x2001 x911))) (= x478 x50) (> x1880 0)) (not x1249)))) x34) x1425) (=> (and (not x34) (and (= 0 x1601) (= x2088 x911))) x664))) x1894))
(assert (x1906 x163))
(assert (x1906 x1818))
(assert (= x734 (=> (and (= (> x1805 0) x579) (= (x1893 x540) x1805)) (and (=> (not x579) x1905) (=> x579 x1619)))))
(assert (x1906 x1570))
(assert (x1906 x1831))
(assert (x1362 x203))
(assert (x1906 x1611))
(assert (x1906 x621))
(assert (x1906 x627))
(assert (x1906 x262))
(assert (x1906 x2142))
(assert (= (=> (and (or (and (= 0 x706) x2176) (and (and (= (x415 (x1941 18)) x949) (= x369 (x357 18446744073709551615 x1592)) (= (div x949 18446744073709551616) x1592) (= x706 x369)) (not x2176))) (and (= x1642 (x415 (x1941 8))) (= x388 (div x2145 1000000000000000000)) (= (= 1 x1149) x2176) (= x1045 2) (= x1149 (x331 x1642 255)) (= x2168 255) x1727)) x1861) x1450))
(assert (x1906 x302))
(assert (= (x1790 x370) 0))
(assert (= 0 (x271 (+ x449 (- x745 x786)))))
(assert (x1731 x1110))
(assert (=> (<= x59 10000) (= (x1941 x59) (x541 x59))))
(assert (x1906 x809))
(assert (x1906 x1533))
(assert (x1906 x1454))
(assert (x1906 x1486))
(assert (= x2113 (and x536 x1724)))
(assert (x1906 x1748))
(assert (= (or x1280 x523) x2203))
(assert (x1906 x1797))
(assert (= 0 (x271 (+ x449 (- x1496 x786)))))
(assert (x1906 x663))
(assert (x1906 x1512))
(assert (x1906 x355))
(assert (=> (>= 10000 x1099) (= (x1941 x1099) (x541 x1099))))
(assert (= (x985 (x541 x779)) x779))
(assert (= (x271 (+ (- x1294 x786) x449)) 0))
(assert (= 596258137 (x985 (x1941 596258137))))
(assert (=> (<= x624 10000) (= (x1941 x624) (x541 x624))))
(assert (= 0 (x271 (+ (- x2190 x786) x449))))
(assert (= 3028789119 (x985 (x1941 3028789119))))
(assert (= (or x1832 x837) x978))
(assert (= 822145385 (x985 (x1941 822145385))))
(assert (x1906 x92))
(assert (x1906 x891))
(assert (x1906 x90))
(assert (= (x1790 x1496) 0))
(assert (x1906 x2006))
(assert (x1906 x2052))
(assert (x1362 x816))
(assert (x1906 x807))
(assert (x1906 x1776))
(assert (= x1572 (and x738 x362)))
(assert (x1362 x380))
(assert (x1906 x1703))
(assert (= (x541 1779675522) (x1941 1779675522)))
(assert (= x1046 (=> (and (and (= (mod (* x247 x1374) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2136) (= x590 (= x1374 0))) (or (and x590 (= x590 x543)) (and (and (= x543 (= x247 x1692)) (< 0 x1374) (= (div x2136 x1374) x1692)) (not x590)))) x1141)))
(assert (= 0 (x271 (+ (- x783 x786) x449))))
(assert (x1906 x1869))
(assert (= (x985 (x1941 228615836)) 228615836))
(assert (x1906 x332))
(assert (x1906 x53))
(assert (= x2156 (or x1236 x2007)))
(assert (x1906 x632))
(assert (x1906 x270))
(assert (x1906 x1294))
(assert (= (or x507 x767 x1080) x775))
(assert (= (x541 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1941 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x53 (x985 (x541 x53))))
(assert (x1906 x1412))
(assert (= x782 (=> (and (= (x1842 (+ x1682 31)) x567) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x567) x2183) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1682) (and (> 32 x1682) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1682) true)))) (not (= 0 x1961)) (= x1433 (< 0 x23)) (= x926 (x1842 (+ x2183 x1839)))) (and (=> (and (not x1433) (and (= x1643 x226) (= x926 x1876))) x991) (=> (and x1433 (and (and (= x1841 (x357 1461501637330902918203684832716283019655932542975 x868)) (not (= 0 x1069)) (= x653 (x1842 (+ 32 x741))) (= x1801 (< 0 x1997)) (= x741 (x1842 (+ 32 x2043))) (= x2043 x1740) (= (x75 (x541 x1144)) x1069) (= x1740 (x1842 (+ x926 4)))) (or (not x1801) (and (and (= x1863 (x2049 (x541 x1144))) x52 (= (>= (x408 (x541 x1144)) x1863) x1259) x1259 (= (= x806 (x408 (x541 x1144))) x52) (< x1521 4294967296) (= (x2049 (x541 x1144)) x806)) x1801)))) x480)))))
(assert (x1906 x1245))
(assert (= x1469 (or x428 x214)))
(assert (x411 x571))
(assert (= x1325 (x985 (x541 x1325))))
(assert (x1906 x326))
(assert (= 0 (x1923 (+ x755 (- x1036 x711)))))
(assert (x1906 x1880))
(assert (x1906 x223))
(assert (= (and (not x1734) x1664) x964))
(assert (= 0 (x238 (+ (- x967 x262) x1676))))
(assert (= 0 (x271 (+ (- x2105 x786) x449))))
(assert (= x1895 (and x193 (not x1802))))
(assert (= (x985 (x1941 1871194811)) 1871194811))
(assert (x1906 x1704))
(assert (x1906 x560))
(assert (= (and x1357 (not x475)) x389))
(assert (= 0 (x1923 (+ (- x558 x711) x755))))
(assert (x1906 x914))
(assert (= (div x1024 79228162514264337593543950336) (x331 x1024 96)))
(assert (x1906 x183))
(assert (x1906 x1000))
(assert (x1822 x304))
(assert (= (x541 3249860859) (x1941 3249860859)))
(assert (= x1004 x1582))
(assert (= x1307 (and x1231 x2003)))
(assert (x1906 x617))
(assert (= 0 (x1790 x617)))
(assert (x1906 x960))
(assert (x1822 x620))
(assert (x1906 x1023))
(assert (= (x271 (+ x449 (- x556 x786))) 0))
(assert (= 0 (x1923 (+ (- x1780 x711) x755))))
(assert (= 0 (x1923 (+ (- x2052 x711) x755))))
(assert (x1906 x1049))
(assert (x1906 x937))
(assert (x1906 x1398))
(assert (x1906 x727))
(assert (= (div x1636 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x331 x1636 255)))
(assert (x1906 x2083))
(assert (x1906 x1904))
(assert (x1906 x548))
(assert (x1906 x828))
(assert (x1906 x1355))
(assert (= 0 (x271 (+ (- x39 x786) x449))))
(assert (x1906 x785))
(assert (x1906 x1042))
(assert (x1906 x210))
(assert (x1906 x1410))
(assert (= (=> (and (or (and (not x738) (and (= x1727 (= x1462 x1012)) (> x1258 0) (= x1462 (div x2145 x1258)))) (and (= x1727 x738) x738)) (and (= x738 (= x1258 0)) (= x2145 (mod (* x1012 x1258) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x1450) x1351))
(assert (x1906 x1444))
(assert (= (=> (and (and (= x1488 (ite (< x14 1000000000000000000) (x1008 (- 1000000000000000000 x14)) 0)) (< 0 x1488) (= x64 (div x423 x1488)) x1359 (not (= x1488 0)) (= (> x64 0) x1375)) (or (and (and (= x262 x466) (= x2072 (= x1867 x1304)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x64 x560))) (= (x1373 (x541 x870) (x1941 0) 0) x43) (= x870 (x357 1461501637330902918203684832716283019655932542975 x259)) (= x1150 0) (= x1304 (- x1312 x627)) (= x560 (x415 (x1941 2))) (= x1371 (x1842 (+ x1505 x64))) (not (>= (+ x1505 x64) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1898 (x1373 (x541 x121) (x1941 0) 0)) (= (x357 1461501637330902918203684832716283019655932542975 x259) x121) (= x1773 (x1842 (+ x64 x560))) x2072 (= (x1414 x1898) x627) (= (+ x2111 x1371) x1312) (= x891 x1867) (= x1505 (x1414 x43))) x1375) (and (not x1375) (= x2111 x891)))) x1916) x845))
(assert (x1906 x1742))
(assert (= (x985 (x1941 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1906 x1978))
(assert (= (and x1557 x655) x376))
(assert (= (or x1415 x144) x1635))
(assert (x1822 274184521717934524641157099916833587280))
(assert (x1822 x971))
(assert (x1906 x41))
(assert (x1906 x1867))
(assert (= (x541 86400) (x1941 86400)))
(assert (x1362 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1906 x2212))
(assert (x1906 x1535))
(assert (= (x1790 x783) 0))
(assert (= x17 (and (not x1708) x2149)))
(assert (x1906 x562))
(assert (x1822 x624))
(assert (x1906 x843))
(assert (= (x1941 46861972923178205566985210922759877011903582497231265773045854621316061069312) (x541 46861972923178205566985210922759877011903582497231265773045854621316061069312)))
(assert (x1362 x1089))
(assert (x1906 x1519))
(assert (=> (>= 10000 x2187) (= (x541 x2187) (x1941 x2187))))
(assert (x1906 x1173))
(assert (= 6277101735386680763835789423207666416102355444464034512895 (x985 (x1941 6277101735386680763835789423207666416102355444464034512895))))
(assert (= (and x1322 x1881) x892))
(assert (x1906 x540))
(assert (x1906 x464))
(assert (= x350 (and x693 x187)))
(assert (x1906 x2201))
(assert (= x2192 (and x2045 x564)))
(assert (= (and x1502 (not x73)) x1950))
(assert (x1906 x969))
(assert (= (x541 3567393941) (x1941 3567393941)))
(assert (x1906 x2159))
(assert (x1906 x1716))
(assert (= x862 (=> (and (= x1884 x441) (= x1877 1)) x1812)))
(assert (x1906 x949))
(assert (x1630 x1712 x1993))
(assert (= (x271 (+ (- x617 x786) x449)) 0))
(assert (x1906 x395))
(assert (= x662 (and x186 (not x299))))
(assert (= x1407 (and x2192 (not x1586))))
(assert (x1906 x2167))
(assert (x1906 x1945))
(assert (x1906 x2105))
(assert (x1906 x1562))
(assert (= (x271 (+ (- x1677 x786) x449)) 0))
(assert (x1906 x70))
(assert (x1906 x2211))
(assert (= (x1790 x94) 0))
(assert (x1906 x1197))
(assert (= (and x789 x658) x639))
(assert (x1906 x1805))
(assert (x1906 x2147))
(assert (x1906 x374))
(assert (x1906 x364))
(assert (x1906 x2133))
(assert (x1906 x1037))
(assert (x1906 x2143))
(assert (=> (<= x1325 10000) (= (x541 x1325) (x1941 x1325))))
(assert (x1906 x2029))
(assert (x1906 x1646))
(assert (= (x541 3028789119) (x1941 3028789119)))
(assert (x1906 x745))
(assert (x1906 x2145))
(assert (x1906 x354))
(assert (x1906 x671))
(assert (x1906 x1350))
(assert (x1906 x1090))
(assert (x1906 x1592))
(assert (x1906 x1862))
(assert (=> (<= x1419 10000) (= (x541 x1419) (x1941 x1419))))
(assert (x1906 x4))
(assert (= x1099 (x985 (x541 x1099))))
(assert (x1906 x1554))
(assert (x1906 x1511))
(assert (= x1571 (=> (and (= (= 0 x927) x160) (or x160 (not x160))) x460)))
(assert (x1906 x1471))
(assert (= x334 (and x2112 (not x356))))
(assert (x1906 x1439))
(assert (= (x1941 3002540418) (x541 3002540418)))
(assert (x1906 x1934))
(assert (x1906 x240))
(assert (x1906 x677))
(assert (x1906 x1421))
(assert (= 0 (x1790 x745)))
(assert (x1906 x441))
(assert (x1906 x2172))
(assert (x1906 x1859))
(assert (= x1905 (=> (and (> x718 1) (= (x1842 (+ x225 1)) x1441) (= (x1208 x556) x1291) (= (x1208 x540) x1044) (< 0 x1044) (= x282 (= x493 0)) (< 1 x1767) (= (x1373 (x541 x107) (x1941 10) 0) x221) (= (x1208 x540) x1767) (= x779 (x1208 x2105)) (= (x2110 x18) x1700) (= (x1842 (+ x540 32)) x556) (= (x1373 (x541 x107) (x1941 10) 0) x340) (= x1683 (x1373 (x541 x1291) x221 0)) (= (x1208 x2105) x1239) (= x21 (x2110 x759)) (= (x1842 (+ 32 x556)) x2105) (= x1654 (x1208 x556)) (= x759 (x1373 (x541 x779) x1683 0)) (= (x1373 (x541 x1654) x340 0) x622) (= (x1373 (x541 x1239) x622 0) x18) (> x194 0) (= (x1208 x540) x194) (> x21 0) (= x1818 (x134 (x1941 9))) (= x718 (x1208 x540)) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1818) x225)) (and (=> (and (and (= x2087 (= x1666 0)) (or (and (not x2087) (and (= x241 (x357 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1464)) (< 1 x245) (< 1 x956) (= x1890 (x1373 (x541 x107) (x1941 10) 0)) (= x1912 x1377) (= (x1985 x2000) x1912) (= (x1208 x540) x1454) (= x1700 x201) (= x546 (x1208 x540)) (= (x1373 (x541 x337) x1308 0) x1087) (= (x1208 x2105) x337) (> x1454 0) (= x1464 (x2110 (x1941 9))) (= x265 (x1208 x2105)) (= (x1208 x556) x886) (= (x1208 x556) x1838) (= x799 (x1842 (+ x241 1))) (= x682 (x1373 (x541 x107) (x1941 10) 0)) (= (x1208 x540) x245) (= x2000 (x1373 (x541 x265) x80 0)) (= x956 (x1208 x540)) (> x546 0) (= (x1985 x1087) x1520) (> x1520 0) (= (x1373 (x541 x886) x1890 0) x80) (= x1308 (x1373 (x541 x1838) x682 0)))) (and (and (= x2074 (x1373 (x541 x1808) x1974 0)) (= (x2110 (x1941 9)) x915) (= (x1208 x2105) x1605) (= x190 (x1373 (x541 x107) (x1941 10) 0)) (= (x1373 (x541 x235) x2099 0) x894) (= (x1208 x540) x1948) (= x1575 x1377) (> x1603 1) (= x996 x201) (= (x1373 (x541 x1605) x1058 0) x1290) (= (x1949 (x1941 9)) x218) (= x1058 (x1373 (x541 x2187) x1452 0)) (= (x1373 (x541 x393) x267 0) x320) (= x1621 (x1373 (x541 x53) x320 0)) (= x1914 (x1208 x540)) (= (x1953 x1621) x1864) (= x2002 (x1208 x540)) (= x1629 (x1208 x540)) (> x1176 0) (= x1257 (x357 115792089237316195423570985008687907853269984665640564039457584007913129639680 x915)) (= (x1208 x2105) x53) (> x1342 1) (= x1638 (x1842 (+ x793 1))) (= (x1373 (x541 x107) (x1941 10) 0) x1974) (= (x1208 x540) x1603) (< 1 x1914) (= x1077 (x1208 x540)) (= (x1208 x556) x2187) (= x996 (x1949 x1290)) (= x416 (x1842 (+ 1 x1257))) (= (x1373 (x541 x1739) x2074 0) x935) (= x793 (x357 115792089237316195423570985008687907853269984665640564039457584007913129639680 x218)) (< 0 x1948) (> x1864 0) (= x9 (x1208 x556)) (< 0 x1674) (> x2002 1) (= x2099 (x1373 (x541 x9) x190 0)) (= x235 (x1208 x2105)) (= (x1373 (x541 x107) (x1941 10) 0) x1452) (= x1342 (x1208 x540)) (= (x1208 x540) x1674) (< 0 x1077) (= x267 (x1373 (x541 x107) (x1941 10) 0)) (= (x1208 x2105) x1739) (= x1575 (x1953 x894)) (= (x1208 x556) x1808) (= (x1949 x935) x1176) (< 0 x1629) (= (x1208 x556) x393)) x2087))) x282) x867) (=> (and (and (= x122 (x2033 x1214)) (= (x2110 (x1941 9)) x1277) (= x76 x122) (= x1230 (x1208 x556)) (> x363 1) (< 1 x1396) (> x110 0) (= (x1842 (+ x2157 1)) x1056) (= (x1208 x556) x1099) (= (x1208 x540) x1421) (> x1421 0) (= x363 (x1208 x540)) (= (x1373 (x541 x2035) x1456 0) x1214) (= x59 (x1208 x2105)) (= (x1373 (x541 x1230) x1775 0) x1770) (= x110 (x2033 x1836)) (= x1456 (x1373 (x541 x1099) x1798 0)) (= x1836 (x1373 (x541 x59) x1770 0)) (= x1798 (x1373 (x541 x107) (x1941 10) 0)) (= x2157 (x357 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1277)) (= x122 x1350) (= (x1208 x2105) x2035) (= x1775 (x1373 (x541 x107) (x1941 10) 0)) (> x1074 0) (= (x1208 x540) x1396) (= x1074 (x1208 x540))) (not x282)) x1189)))))
(assert (x1906 x403))
(assert (x1906 x1118))
(assert (x1906 x1763))
(assert (x1906 x1864))
(assert (x1906 x1591))
(assert (x1362 x1201))
(assert (= (or x1381 x367) x1547))
(assert (= (x541 503383097) (x1941 503383097)))
(assert (= x1119 (and (not x1480) x1034)))
(assert (= x2151 (=> (and (= x800 (= 0 x1961)) (or x800 (not x800))) x782)))
(assert (x1906 x1134))
(assert (x1362 x915))
(assert (= (and x635 x1115) x591))
(assert (= (x1941 954831406) (x541 954831406)))
(assert (= x1165 (and x1029 x1608)))
(assert (x1906 x325))
(assert (x1906 x956))
(assert (x1906 x1176))
(assert (x1906 x2154))
(assert (x1906 x2024))
(assert (= 4294967296 (x985 (x1941 4294967296))))
(assert (= (and x1039 x1070) x1947))
(assert (x1906 x305))
(assert (x1906 x2150))
(assert (x1906 x732))
(assert (x1906 x1022))
(assert (x1906 x525))
(assert (x1906 x153))
(assert (= (and x763 (not x933)) x1865))
(assert (x1906 x1840))
(assert (x1906 x885))
(assert (= 500647658 (x985 (x1941 500647658))))
(assert (x1906 x1085))
(assert (x1906 x259))
(assert (x1906 x1108))
(assert (x1906 x439))
(assert (x1906 x1417))
(assert (x1906 x1940))
(assert (x1906 x1138))
(assert (x1906 x687))
(assert (= 0 (x271 (+ (- (x1842 (+ 4 x262)) x786) x449))))
(assert (= (=> (and (or (and (and (= (x1436 (x541 x1144)) x1227) (= x2067 (>= (x419 (x541 x1144)) x1227)) (= (x1436 (x541 x1497)) x1892) (> 4294967296 x1792) x2115 x2067 (= (= x1892 (x419 (x541 x1497))) x2115)) x420) (not x420)) (and (= (x1842 (+ x318 4)) x1626) (= x2201 (x1842 (+ x285 32))) (= (x1842 (+ 32 x2201)) x436) (= x1551 (x357 1461501637330902918203684832716283019655932542975 x868)) (= (> x353 0) x420) (not (= 0 x1132)) (= x1626 x285) (= x1132 (x75 (x541 x1497))))) x1645) x1004))
(assert (= x1566 (=> (= (not (> x1123 1)) x1525) (and x1525 (=> (= x1365 x223) x1218)))))
(assert (= (or (and x1834 x534) x383) x1317))
(assert (= 0 (x238 (+ (- x2052 x262) x1676))))
(assert (= 4167276458 (x985 (x1941 4167276458))))
(assert (= 0 (x1790 x1741)))
(assert (= x869 (and (not x1116) x535)))
(assert (= x2202 (=> (and (= (not (< 4 x1279)) x1913) (= (x1842 (+ 32 x1036)) x1969) (= (x1842 (+ x2025 32)) x1907) (= (x769 x1036) x378)) (and (=> (and (= x1494 x1969) (= 4 x953) (= x1444 x1907)) x1253) x1913))))
(assert (x1822 x1291))
(assert (= x913 (or x1751 x968)))
(assert (x1906 x1348))
(assert (x1906 x742))
(assert (= (and x1060 (not x906)) x147))
(assert (x1906 x631))
(assert (x1906 x394))
(assert (x1906 x224))
(assert (x1906 x310))
(assert (= (x1790 x249) 0))
(assert (= x1796 (=> (and (not (= x353 0)) (= (> x197 0) x333) (= x557 (x1842 (+ x318 x1704))) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x57) x1704) (not (or (> x1792 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1792)) (> 32 x1792)))) (= (x1842 (+ x1792 31)) x57)) (and (=> (and x333 (and (and (= x1146 (x357 1461501637330902918203684832716283019655932542975 x868)) (not (= x1611 0)) (= x684 (x1842 (+ x557 4))) (= x1975 (< 0 x927)) (= (x75 (x541 x1497)) x1611) (= x1319 (x1842 (+ x2010 32))) (= x2021 x684) (= (x1842 (+ 32 x2021)) x2010)) (or (and x1975 (and (> 4294967296 x1108) (= (= x877 (x46 (x541 x1497))) x1915) (= x2034 (x1757 (x541 x1144))) x1602 x1915 (= x877 (x1757 (x541 x1497))) (= x1602 (>= (x46 (x541 x1144)) x2034)))) (not x1975)))) x1571) (=> (and (not x333) (and (= x2108 x557) (= x1446 x156))) x1112)))))
(assert (= x29 (and x619 (not x2208))))
(assert (x1906 x493))
(assert (x1906 x953))
(assert (x1906 x1673))
(assert (x1906 x1642))
(assert (=> (>= 10000 x1838) (= (x1941 x1838) (x541 x1838))))
(assert (x1906 x351))
(assert (x1906 x876))
(assert (= x2036 (and x784 x239)))
(assert (x1906 x161))
(assert (= 0 (x1790 x938)))
(assert (= (x985 (x1941 3249860859)) 3249860859))
(assert (x1906 x1465))
(assert (x2005 x298))
(assert (= x1367 (or x288 x1537)))
(assert (x1906 x145))
(assert (x1906 x8))
(assert (x1906 x1344))
(assert (x1906 x1466))
(assert (= 0 (x1790 x1780)))
(assert (x1906 x232))
(assert (= (x238 (+ x1676 (- x558 x262))) 0))
(assert (x1906 x1086))
(assert (x1906 x2195))
(assert (x1906 x707))
(assert (x1822 x15))
(assert (x1906 x905))
(assert (x1906 x337))
(assert (x1906 x2085))
(assert (x1906 x2152))
(assert (x1906 x409))
(assert (x1906 x9))
(assert (x1906 x1261))
(assert (x1906 x739))
(assert (= (=> (and (= (not (< 4 x1460)) x37) (= x161 (x720 x1528))) (and x96 x37)) x610))
(assert (x1362 x57))
(assert (x1906 x410))
(assert (x1906 x316))
(assert (x1906 x1273))
(assert (x831 x1188))
(assert (= (x271 (+ (- x1929 x786) x449)) 0))
(assert (= x1196 (and x317 x2107)))
(assert (= 0 (x238 (+ x1676 (- x2071 x262)))))
(assert (x1906 x1300))
(assert (= (=> (and (= (x2173 (x1941 16)) x1508) (= x2008 (< x1889 x1508)) (= (x2173 (x1941 15)) x865) (= (x1842 (+ x64 x1535)) x1962) (= (x2173 (x1941 13)) x1356) (= (x2173 (x1941 14)) x1244)) (and (=> (and (and (= x73 (> x1244 x1356)) (or (and (not x73) (and (= x2069 (x1008 (- x1356 x1244))) (= (x1008 (- x1508 x865)) x1821) (= (x1008 (- x1889 x865)) x1066) (= x1183 x2161) (= (x1008 (- x1356 x1022)) x1183) (= (div x1212 x1821) x1022) (< 0 x1821) (= (mod (* x2069 x1066) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1212))) (and (and (= (div x1632 x532) x1185) (< 0 x532) (= x1632 (mod (* x325 x778) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1008 (- x1244 x1356)) x325) (= (x1008 (- x1889 x865)) x778) (= (x1842 (+ x1185 x1356)) x1543) (= (x1008 (- x1508 x865)) x532) (= x1543 x2161)) x73))) x2008) x1101) (=> (and (and (= x374 x1244) (= 0 x896)) (not x2008)) x962))) x1916))
(assert (x1906 x1336))
(assert (x1906 x1437))
(assert (= x1236 (and x910 (not x1375))))
(assert (x1906 x641))
(assert (x1906 x1172))
(assert (= (and x826 x303) x139))
(assert (= (=> (and (= (= x1847 0) x1881) (or (not x1881) x1881)) x615) x714))
(assert (x1906 x1055))
(assert (x1906 x2140))
(assert (x1906 x2041))
(assert (x1906 x16))
(assert (= (=> (and (not (>= (+ x1999 x1965) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1842 (+ 32 x540)) x1677) (= x370 (x1842 (+ x40 32))) (> x1533 0) (< 0 x273) (= (x527 x540) x1512) (= x1965 (x527 x370)) (= (x527 x540) x273) (= x1006 (not (< 1 x1380))) (= x936 (x1842 (+ x1965 x1999))) (= (x527 x40) x1533) (< 0 x1512) (= (x527 x1677) x1999)) (and x1006 x1394)) x1835))
(assert (= (=> (and (= x2068 0) (= (< 0 x1123) x278)) (and (=> (and (= x262 x1899) (not x278)) x486) (=> (and (and (or (and (not x20) (= x262 x177)) (and (and (= 0 x450) (= x1382 4167276458) (= (ite (<= x859 79228162514264337593543950335) x641 x1449) x739) (= x177 x2124) (= x1086 (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1825)) (= x859 x502) (= x262 x1702) (= (x339 64) x773) (= (x1008 (- x1681 4)) x979) (= x1028 (= (x1996 x262) x432)) (= (x1842 (+ x690 31)) x1825) (= 96 x2182) (not (= 3028789119 x1382)) (= 96 x1153) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x690) true) (< x690 32)) (> x690 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x1353) (not (> 4 x1681)) (= x1883 (x1373 (x1941 0) (x1941 17) 0)) (not (= x1382 1779675522)) (= x502 (x357 115792089237316195417293883273301227089434195242512125785869492901042639077375 x571)) (= (x1298 x268 96) x809) (= x1246 x1810) (= x1109 (x1842 (+ 32 x773))) (= (x1842 (+ x809 x859)) x1449) (= (x75 (x541 274184521717934524641157099916833587280)) x1472) (= (x1842 (+ x859 x809)) x641) (= 160 x525) (= (> 32 x979) x1353) (= (x1008 (- x1109 x1676)) x690) (= x1574 160) (= x386 x571) (= x981 x1845) (= (x1057 x1702) x539) (= x1681 36) (= x268 (x357 79228162514264337593543950335 x981)) (= 255 x1691) (= (x1842 (+ x262 4)) x1246) (= (x75 (x541 x1144)) x814) (= x701 (x1373 (x1941 0) (x1941 17) 0)) x1028 (> x814 0) (= x874 96) (not (= 0 x1472)) (= x386 (x1996 (x1842 (+ x262 4)))) (= x1938 (x1247 x701)) (= (x1842 (+ x1086 x262)) x2124) (= x1845 x386) (= x1676 (x839 64))) x20)) (and (= x302 6) (= x20 (= x549 1)) (= (x331 x1314 6) x2031) (= (x357 1 x2031) x549))) x278) x1241))) x1242))
(assert (x1822 x337))
(assert (x1906 x2069))
(assert (x1906 x1654))
(assert (x1906 x1964))
(assert (x1906 x909))
(assert (= x173 (or x1084 x975)))
(assert (= (or x1988 x2113) x2078))
(assert (x1906 x1332))
(assert (x1906 x1994))
(assert (= (x1941 4167276458) (x541 4167276458)))
(assert (x1906 x1792))
(assert (x1362 x2125))
(assert true)
(assert (x1906 x2096))
(assert (x1906 x307))
(assert (x1906 x921))
(assert (x1906 x373))
(assert (x1906 x1588))
(assert (x1906 x2121))
(assert (x1906 x497))
(assert (= x1858 (and x2134 x420)))
(assert (x1906 x1532))
(assert (x1906 x1919))
(assert (x1906 x577))
(assert (x1906 x1576))
(assert (x1906 x683))
(assert (= x962 (=> (and (or (and (= x1350 x2097) x2026) (and (and (= (x2173 (x1941 9)) x270) (= (x1842 (+ 32 x192)) x2205) (= x1809 (x1373 (x541 x2193) x1593 0)) (= x673 (x1373 (x541 x1325) x168 0)) (= (x527 x540) x300) (< 1 x2152) (= x2016 (x527 x192)) (< 0 x914) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639680 x270) x1733) (= x427 (x1007 x673)) (= x914 (x527 x540)) (= x593 (x1842 (+ 1 x1733))) (> x2122 1) (< 0 x300) (= (x1373 (x541 x2016) x672 0) x168) (= (x527 x540) x2122) (= x2193 (x527 x2205)) (= x1325 (x527 x2205)) (= (x1373 (x541 x1671) x1232 0) x1593) (= (x1373 (x541 x374) (x1941 10) 0) x1232) (> x427 0) (= x2097 x1748) (= (x527 x192) x1671) (= (x527 x540) x2152) (= (x1007 x1809) x1748) (= (x1842 (+ 32 x540)) x192) (= (x1373 (x541 x374) (x1941 10) 0) x672)) (not x2026))) (= x2026 (= x107 x374))) x346)))
(assert (x1906 x866))
(assert (= (x271 (+ x449 (- x249 x786))) 0))
(assert (x1362 x1562))
(assert (x1906 x640))
(assert (x1906 x1963))
(assert (= x1079 (x985 (x541 x1079))))
(assert (x1822 x121))
(assert (x1906 x984))
(assert (= (or x591 x274) x763))
(assert (x1906 x971))
(assert (x1362 x1657))
(assert (= 1816029635 (x985 (x1941 1816029635))))
(assert (= x595 (and x202 x1416)))
(assert (x1906 x1230))
(assert (= x788 (or x1858 x1475)))
(assert (= (and x1442 x2020) x878))
(assert (x1906 x995))
(assert (x1906 x1114))
(assert (x1906 x2060))
(assert (x1906 x1320))
(assert (x1906 x1124))
(assert (x1906 x97))
(assert (x1906 x718))
(assert (= x1476 (and x2036 x1546)))
(assert (x1906 x393))
(assert (x1906 x1663))
(assert (= x1739 (x985 (x541 x1739))))
(assert (x1906 x1970))
(assert (x1906 x1647))
(assert (x1906 x520))
(assert (= (and (not x1443) x840) x377))
(assert (x1906 x13))
(assert (= (and x553 x649) x257))
(assert (= (x985 (x1941 2876725745)) 2876725745))
(assert (= x1322 (or x1887 x1302)))
(assert (= (x985 (x1941 743225245)) 743225245))
(assert (= (and x297 x852) x1600))
(assert (= (and x2171 x1981) x202))
(assert (= x872 (and x1759 x1224)))
(assert (= (x1790 x2071) 0))
(assert (x1906 x930))
(assert (x1906 x2013))
(assert (= (x271 (+ (- x40 x786) x449)) 0))
(assert (= (and x2156 (not x2008)) x219))
(assert (= x507 (and (not x1774) x1784)))
(assert (= x1239 (x985 (x541 x1239))))
(assert (x1906 x868))
(assert (x1822 x9))
(assert (=> (>= 10000 x374) (= (x1941 x374) (x541 x374))))
(assert (x1906 x1481))
(assert (x1906 x1127))
(assert (x458 x1712))
(assert (x1906 x136))
(assert (x1906 x2090))
(assert (= 0 (x238 (+ (- x1036 x262) x1676))))
(assert (x1906 x422))
(assert (x1906 x1625))
(assert (x1906 x1296))
(assert (= 115792089237316195423570985008687907853269984665561335876943319670319585689600 (x985 (x1941 115792089237316195423570985008687907853269984665561335876943319670319585689600))))
(assert (x1906 x757))
(assert (x1906 x457))
(assert (x1906 x44))
(assert (x1906 x1814))
(assert (x1906 x1617))
(assert (= x826 (and (not x693) x187)))
(assert (= x488 (and x447 x993)))
(assert (x1906 x1693))
(assert (= 0 (x238 (+ (- x40 x262) x1676))))
(assert (x1906 x1565))
(assert (x1906 x2002))
(assert (= (div x805 26959946667150639794667015087019630673637144422540572481103610249216) (x331 x805 224)))
(assert (x1362 x1825))
(assert (x1906 x656))
(assert (= x1772 (and x1367 x1943)))
(assert (x1906 x1277))
(assert (= x1288 (and x1367 (not x1943))))
(assert (x1906 x1019))
(assert (= 0 (x271 (+ x449 (- x192 x786)))))
(assert (x1906 x1069))
(assert (= x792 (=> (and (= (x527 x40) x292) (= (x527 x540) x1380) (= (> x1380 0) x1549) (= x1380 x292)) (and (=> x1549 x1835) (=> (not x1549) x1394)))))
(assert (x1906 x922))
(assert (= x187 (or x1701 x1635)))
(assert (x1906 x2157))
(assert (x1906 x1427))
(assert (= (x541 1816029635) (x1941 1816029635)))
(assert (x1906 x1265))
(assert (x1906 x1826))
(assert (x1906 x1492))
(assert (x1906 x786))
(assert (x1906 x1431))
(assert (= (or x1178 x448) x1784))
(assert (x1906 x1310))
(assert (= (x985 (x1941 1738207182)) 1738207182))
(assert (x1906 x491))
(assert (x1906 x804))
(assert (x1906 x21))
(assert (x1906 x948))
(assert (x1906 x1319))
(assert (x1906 x1903))
(assert (x1906 x592))
(assert (x1906 x477))
(assert (= x580 (and (not x2026) x704)))
(assert (x1906 x1760))
(assert (x1906 x1089))
(assert (= (=> (and (= (x1203 x2175) x1054) (= x1003 (not (> x928 4)))) (and x736 x1003)) x1016))
(assert (x1906 x1702))
(assert (x1906 x1315))
(assert (x1906 x1130))
(assert (x1906 x660))
(assert (= (or x139 x1177) x295))
(assert (x1362 x1818))
(assert (x1906 x1821))
(assert (x1906 x932))
(assert (x1906 x1246))
(assert (= x1408 (or x1541 x284 x669 x1777 x138)))
(assert (x1906 x2122))
(assert (x1906 x192))
(assert (= (=> (and (or (not x659) x659) (= (= x1997 0) x659)) x1783) x480))
(assert (= x655 (and (not x789) x658)))
(assert (x1906 x1838))
(assert (x1906 x466))
(assert (= 0 (x1790 x1702)))
(assert (x1906 x462))
(assert (x1906 x304))
(assert (= (x271 (+ x449 (- x1406 x786))) 0))
(assert (x1906 x1462))
(assert (= (x985 (x1941 3812870723)) 3812870723))
(assert (x1906 x1851))
(assert (x1906 x167))
(assert (= x1925 (and x1660 x788)))
(assert (x1906 x2088))
(assert (x1906 x1153))
(assert (= (x985 (x1941 3002540418)) 3002540418))
(assert (= (and x848 x321) x1302))
(assert (x1906 x81))
(assert (= (x541 228615836) (x1941 228615836)))
(assert (= 0 (x1790 x2205)))
(assert (x1362 115792089237316195417293883273301227089434195242512125785869492901042639077375))
(assert (x1906 x1419))
(assert (x1906 x821))
(assert (x1906 x1483))
(assert (= (x985 (x541 x1673)) x1673))
(assert (x1906 x1202))
(assert (x1906 x245))
(assert (x1906 x474))
(assert (= x1768 (and x945 x1103)))
(assert (= (and x1061 x1117) x174))
(assert (x1942 x1451))
(assert (x1906 x1524))
(assert (=> (>= 10000 x1079) (= (x541 x1079) (x1941 x1079))))
(assert (=> (>= 10000 x1352) (= (x541 x1352) (x1941 x1352))))
(assert (= x1911 (and (not x749) x1768)))
(assert (x1906 x1930))
(assert (x1906 x594))
(assert (x1906 x1868))
(assert (x1906 x1584))
(assert (= (and (not x2081) x116) x1777))
(assert (= (x1941 115792089237316195417293883273301227089434195242512125785869492901042639077375) (x541 115792089237316195417293883273301227089434195242512125785869492901042639077375)))
(assert (x1906 x1937))
(assert (x1906 x1612))
(assert (=> (<= x1291 10000) (= (x1941 x1291) (x541 x1291))))
(assert (x1906 x1091))
(assert (= (x985 (x1941 1840041978)) 1840041978))
(assert (= (x541 3051865383) (x1941 3051865383)))
(assert (x1906 x719))
(assert (= (or x878 x1738) x1343))
(assert (x1906 x1063))
(assert (x1906 x817))
(assert (x1906 x254))
(assert (= 0 (x271 (+ x449 (- x1591 x786)))))
(assert (x1822 x2016))
(assert (x1906 x772))
(assert (x1362 x1315))
(assert (x1906 x1167))
(assert (= x900 (or x583 x381)))
(assert (x1906 x1093))
(assert (x1906 x551))
(assert (x1906 x955))
(assert (x1906 x917))
(assert (= (or x1595 x2184) x1174))
(assert (x1906 x1446))
(assert (x1362 79228162514264337593543950335))
(assert (= (x271 (+ (- x370 x786) x449)) 0))
(assert (x1906 x60))
(assert (= x624 (x985 (x541 x624))))
(assert (x1906 x1044))
(assert (x1906 x855))
(assert (= (x1923 (+ x755 (- x2190 x711))) 0))
(assert (x1906 x1545))
(assert (x1906 x1244))
(assert (= (and x1480 x1034) x601))
(assert (= (x238 (+ (- x745 x262) x1676)) 0))
(assert (x1906 x630))
(assert (x1906 x1389))
(assert (x1906 x470))
(assert (x1906 x275))
(assert (x1822 x1352))
(assert (x1906 x1106))
(assert (x1906 x966))
(assert (= x2153 (and (not x1546) x2036)))
(assert (= 0 (x271 (+ x449 (- x1920 x786)))))
(assert (x1906 x1457))
(assert (= (=> (and (= x987 x1710) (= 1 x1009)) x651) x810))
(assert (x1906 x68))
(assert (x1906 x1674))
(assert (x589 x576))
(assert (x1906 x371))
(assert (=> (<= x1671 10000) (= (x541 x1671) (x1941 x1671))))
(assert (= (x1790 x2105) 0))
(assert (x1906 x1927))
(assert (x1906 x1159))
(assert (= x1020 (and (not x1155) x1010)))
(assert (x1906 x847))
(assert (x1906 x563))
(assert (x1906 x986))
(assert (= (x1941 18446744073709551615) (x541 18446744073709551615)))
(assert (= 0 (x1790 x1406)))
(assert (x1906 x185))
(assert (= x2051 (and (not x579) x913)))
(assert (=> (<= x2150 10000) (= (x1941 x2150) (x541 x2150))))
(assert (x1906 x1837))
(assert (= (or x1772 (and x1468 x1288)) x2200))
(assert (x1906 x1385))
(assert (x1906 x748))
(assert (= (=> (and (or (and (and (= x442 (= x319 x1495)) (> x2017 0) (= (div x1191 x2017) x1495)) (not x1848)) (and x1848 (= x442 x1848))) (and (= (mod (* x2017 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1191) (= (= 0 x2017) x1848))) x566) x74))
(assert (x1906 x1928))
(assert (x1906 x360))
(assert (x1906 x203))
(assert (x1906 x938))
(assert (x1906 x188))
(assert (x1906 x1472))
(assert (x1906 x545))
(assert (= 3996650231 (x985 (x1941 3996650231))))
(assert (x1906 x1001))
(assert (x1906 x1129))
(assert (x1822 x1739))
(assert (x1906 x1771))
(assert (x1906 x1773))
(assert (x1906 x735))
(assert (= (x271 (+ (- x1175 x786) x449)) 0))
(assert (x1906 x1544))
(assert (x1906 x385))
(assert (x1906 x1423))
(assert (x1362 255))
(assert (x1906 x1095))
(assert (x1362 x2094))
(assert (x1906 x1876))
(assert (x1906 x1254))
(assert (x1906 x1785))
(assert (x1906 x607))
(assert (x1906 x1899))
(assert (x1906 x1448))
(assert (x1906 x2207))
(assert (= x1960 (and x1148 x833)))
(assert (x1906 x179))
(assert (x1906 x2130))
(assert (x1906 x1719))
(assert (= (x985 (x1941 3224796394)) 3224796394))
(assert (x1822 x1940))
(assert (x1906 x207))
(assert (= (x1941 2966737888) (x541 2966737888)))
(assert (= 0 (x1790 x1447)))
(assert (=> (>= 10000 x235) (= (x1941 x235) (x541 x235))))
(assert (= x705 (or (and x469 (not x800)) x1728)))
(assert (= (and x1802 x193) x907))
(assert (x1906 x514))
(assert (x1906 x2108))
(assert (x1906 x791))
(assert (= (x541 599290589) (x1941 599290589)))
(assert (= (and x906 x1060) x1442))
(assert (x1906 x2100))
(assert (= 0 (x271 (+ (- x1439 x786) x449))))
(assert (x1906 x156))
(assert (x1822 x374))
(assert (x1906 x402))
(assert (= (div x1891 4294967296) (x331 x1891 32)))
(assert (= 599290589 (x985 (x1941 599290589))))
(assert (= 826074471 (x985 (x1941 826074471))))
(assert (x1906 x1601))
(assert (x1906 x250))
(assert (x1906 x1441))
(assert (x1906 x2189))
(assert (x1906 x1648))
(assert (= (=> (and (= x2088 x478) (= 1 x1601)) x664) x1425))
(assert (x1906 x2137))
(assert (= 0 (x1923 (+ x755 (- x938 x711)))))
(assert (x1906 x773))
(assert (x1906 x2022))
(assert (x1906 x2066))
(assert (= 0 (x1790 x1803)))
(assert (x1906 x636))
(assert (x1906 x850))
(assert (x1906 x929))
(assert (x1906 x121))
(assert (= (=> (and (or (and (and (= x1446 x624) (= 0 x1573) (= x709 (x1842 (+ 32 x1275))) (= x2062 x1275) (= x318 x1885) (= x2190 x1899) (= x1398 (mod (* x958 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x1774)) (and (and (= x2062 x1275) (= x1573 0) (= x1446 x624) (= x1899 x2190) (= x1885 x318)) x1774)) (and (= (mod (* 32 x958) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x948) (= x1951 x1275) (= x1976 0) (= x1489 (+ x661 x2103)) (= (x230 x2053) x1348) (= x191 (x1842 (+ x1807 x1042))) x1262 (= (x1842 (+ x413 x1275)) x1885) (= (x1390 128) x958) (= (x1842 (+ x1807 x1318)) x2103) (not (>= (+ x1042 x1807) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1807 x1318))) (= x1262 (= x1706 x1855)) (= x413 (x1842 (+ 32 x948))) (= (= x958 0) x1774) (= x1318 (x230 x1200)) (= x1200 (x1373 (x541 x561) (x1941 0) 0)) (= (x1373 (x541 x624) (x1941 0) 0) x2053) (= (x357 1461501637330902918203684832716283019655932542975 x136) x561) (= x1042 (x1199 (x1941 2))) (= x624 (x357 1461501637330902918203684832716283019655932542975 x136)) (not (< 18446744073709551615 x958)) (= x1706 (- x1489 x1348)))) x1816) x1363))
(assert (x1906 x324))
(assert (x1906 x516))
(assert (= 1779675522 (x985 (x1941 1779675522))))
(assert (x1906 x1596))
(assert (x1906 x1957))
(assert (= 0 (x1923 (+ (- x1591 x711) x755))))
(assert (x1906 x1924))
(assert (x1906 x539))
(assert (x1906 x1929))
(assert (x1822 x1671))
(assert (= x1117 (or x389 x1615)))
(assert (x1906 x1614))
(assert (=> (>= 10000 x2066) (= (x541 x2066) (x1941 x2066))))
(assert (x1906 x1135))
(assert (x1906 x1426))
(assert (= x337 (x985 (x541 x337))))
(assert (x1906 x135))
(assert (x1906 x509))
(assert (x1906 x988))
(assert (x1906 x1399))
(assert (x1906 x1146))
(assert (= x1223 (and (not x1721) x900)))
(assert (x1725 x1277))
(assert (x1906 x689))
(assert (= 0 (x238 (+ x1676 (- x938 x262)))))
(assert (= (and x1624 x2139) x2171))
(assert (= (and x1198 x1801) x428))
(assert (x1362 x1110))
(assert (= (x985 (x1941 2580288415)) 2580288415))
(assert (x1906 x1863))
(assert (x1906 x42))
(assert (x1906 x890))
(assert (= (x1941 2127478272) (x541 2127478272)))
(assert (x1906 x1354))
(assert (= (x541 1531409238) (x1941 1531409238)))
(assert (= (and x1556 (not x278)) x1870))
(assert (x1906 x1342))
(assert (x1906 x1761))
(assert (x1906 x990))
(assert (= (=> (and (= 1 x354) (= x1857 x352)) x294) x51))
(assert (x1906 x1147))
(assert (x1906 x387))
(assert (= x832 (or x662 x797)))
(assert (= (and x882 x473) x619))
(assert (x1906 x834))
(assert (x1906 x1819))
(assert (x1906 x849))
(assert (x1906 x459))
(assert (x1906 x950))
(assert (= 0 (x271 (+ (- x1803 x786) x449))))
(assert (= (=> (and (= 255 x2163) (= (= 1 x1930) x1192) (= x1930 (x331 x1037 255)) (= x1919 0) (= (x1364 (x1941 8)) x1037)) (and (=> (and (and (or (and (= x1091 x562) (not x347)) (and x347 (and (= x143 x1091) (= x143 (x357 18446744073709551615 x576)) (= x576 (x1364 (x1941 18)))))) (= x347 (< 0 x2082))) (not x1192)) x999) (=> (and (= x2019 0) x1192) x2181))) x1228))
(assert (x1906 x241))
(assert (= (x1941 112349551054952423155953805921267728290102753186399332250345724850365349756928) (x541 112349551054952423155953805921267728290102753186399332250345724850365349756928)))
(assert (= x1852 (and x2107 (not x317))))
(assert (= 0 (x271 (+ (- x938 x786) x449))))
(assert (x1906 x1961))
(assert (x1906 x1149))
(assert (x654 x1138))
(assert (= (x1790 x1310) 0))
(assert (= x15 (x985 (x541 x15))))
(assert (x1906 x48))
(assert (x1906 x1643))
(assert (= x343 (and x978 (not x1848))))
(assert (x1906 x1682))
(assert (x1906 x431))
(assert (x1906 x713))
(assert (x1906 x1984))
(assert (= x1419 (x985 (x541 x1419))))
(assert (= (x985 (x1941 3008386744)) 3008386744))
(assert (= x1190 (and (not x1103) x945)))
(assert (x654 x259))
(assert (= x460 (=> (and (= (x1842 (+ x646 x557)) x1170) (= x1875 (x1842 (+ x197 x2098))) (= x2098 (x1164 x47)) (> x1694 0) (= 25 x156) (= x1778 (x1842 (+ 31 x1108))) (not (= x927 0)) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1778) x646) (= (x1164 (x1941 25)) x1694) (= x2108 x1170) (= x47 x1018) (= x1018 (x2118 (x1941 25) 0)) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1108)) (< x1108 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1108)))) x1112)))
(assert (= (x1923 (+ x755 (- x2071 x711))) 0))
(assert (= x1504 (and x1484 x1549)))
(assert (x1906 x211))
(assert (x654 x868))
(assert (= x999 (=> (= x1091 x2019) x2181)))
(assert (x1906 x1581))
(assert (x1906 x235))
(assert (= (and x1947 (not x951)) x940))
(assert (x1906 x1508))
(assert (= (x985 (x541 x1605)) x1605))
(assert (= (x985 (x1941 46861972923178205566985210922759877011903582497231265773045854621316061069312)) 46861972923178205566985210922759877011903582497231265773045854621316061069312))
(assert (x1906 x150))
(assert (x1906 x512))
(assert (= x1144 (x985 (x541 x1144))))
(assert (x1906 x1908))
(assert (x1906 x570))
(assert (= (and (not x2087) x178) x1415))
(assert (x1906 x838))
(assert (x1906 x498))
(assert (x1906 x1962))
(assert (= (x1923 (+ x755 (- x783 x711))) 0))
(assert (x1906 x1449))
(assert (= 18446744073709551616 (x985 (x1941 18446744073709551616))))
(assert (x1906 x1488))
(assert (x1906 x396))
(assert (x1906 x1787))
(assert (x1906 x1405))
(assert (x1906 x306))
(assert (x1906 x358))
(assert (= x486 (=> (and (or (and (not x649) (and (= (x1842 (+ x1899 32)) x1570) (= x1126 (mod (* 32 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x649) (and (= x1713 (x1842 (+ 32 x1019))) (= x1019 (mod (* 32 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= 0 x1453) x649) (not (< 18446744073709551615 x1453)) (= (x1842 (+ x1713 x1899)) x1275) (= (x1842 (+ x151 1)) x1453) (= 0 x1025) (= x151 (x898 x40)))) x1817)))
(assert (= (=> (and (= (x1842 (+ 31 x787)) x440) (= x1643 25) (> x715 1) (= (x126 x1041) x1147) (not (= 0 x1617)) (= x1041 (x1661 x93 1)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x787) true) (> 32 x787)) (> x787 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x126 (x1941 25)) x715) (= x93 (x2118 (x1941 25) 0)) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x440) x777) (= x1839 x819) (= (x1842 (+ x777 x1430)) x819) (= (x1842 (+ x1194 x1147)) x1755)) x2095) x260))
(assert (x1906 x1691))
(assert (x1906 x1222))
(assert (x1906 x1340))
(assert (= x1701 (and x1 (not x282))))
(assert (= (or x120 x1572) x629))
(assert (= (=> (and (= x76 x201) (= x1350 x1377)) x1189) x867))
(assert (= (x985 (x1941 79228162514264337593543950335)) 79228162514264337593543950335))
(assert (= (x271 (+ (- x2205 x786) x449)) 0))
(assert (x1906 x1764))
(assert (x1906 x467))
(assert (x1362 x868))
(assert (x1906 x194))
(assert (x1906 x1675))
(assert (x1822 x779))
(assert (x1906 x2125))
(assert (= 0 (x238 (+ x1676 (- x2190 x262)))))
(assert (x1906 x113))
(assert (x1906 x1169))
(assert (x1906 x973))
(assert (x1906 x1969))
(assert (x1906 x450))
(assert (= (x271 (+ x449 (- x1331 x786))) 0))
(assert (= (or x112 x289) x6))
(assert (x1906 x2188))
(assert (x1906 x2094))
(assert (x1906 x471))
(assert (= (=> (and (= x374 x2161) (= 1 x896)) x962) x1101))
(assert (x1906 x1998))
(assert (x1906 x76))
(assert (x1906 x1603))
(assert (x1906 x1331))
(assert (x1906 x476))
(assert (= x1184 (=> (and (or (and (not x132) (and (= (div x531 x607) x2172) (= (= x706 x2172) x492) (> x607 0))) (and (= x492 x132) x132)) (and (= (= 0 x607) x132) (= (mod (* x706 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x531))) x1527)))
(assert (= (x985 (x541 x1352)) x1352))
(assert (x1906 x979))
(assert (x1906 x618))
(assert (x1906 x528))
(assert (= x2134 (or x2174 x1317)))
(assert (x1906 x633))
(assert (x1906 x1094))
(assert (= (and x1104 x82) x1428))
(assert (= 3714247998 (x985 (x1941 3714247998))))
(assert (x1906 x2027))
(assert (= (x985 (x1941 2596148429267413814265248164610048)) 2596148429267413814265248164610048))
(assert (x1906 x1652))
(assert (= x860 (and x1947 x951)))
(assert (x1906 x982))
(assert (x1906 x1820))
(assert (x1822 x2193))
(assert (= x383 (and x775 x129)))
(assert (= (x1298 x1891 224) (mod (* 26959946667150639794667015087019630673637144422540572481103610249216 x1891) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x541 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x1941 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x1906 x35))
(assert (x1906 x604))
(assert (= (and x424 x1076) x101))
(assert (x1906 x2182))
(assert (= (x985 (x541 x1581)) x1581))
(assert (= (x1941 4294967295) (x541 4294967295)))
(assert (= (or x261 x1515) x1484))
(assert (x1906 x1012))
(assert (x1906 x708))
(assert (= (and x1307 (not x1688)) x284))
(assert (x1906 x1517))
(assert (= x365 (and x160 x6)))
(assert (x1906 x2047))
(assert (x1906 x398))
(assert (x1906 x1496))
(assert (= x106 (and (not x784) x239)))
(assert (x1906 x2077))
(assert (x1906 x99))
(assert (x1906 x927))
(assert (x1906 x1009))
(assert (x1906 x423))
(assert (x1906 x1712))
(assert (x1906 x265))
(assert (x1906 x778))
(assert (x1906 x2103))
(assert (x1906 x435))
(assert (x1906 x699))
(assert (x1906 x1649))
(assert (x1906 x1813))
(assert (x1906 x1710))
(assert (x411 x1188))
(assert (x1906 x1413))
(assert (= (and x1116 x535) x1637))
(assert (x1362 x1592))
(assert (= (and x233 x1249) x1143))
(assert (x1906 x2141))
(assert (= x91 (and x278 x1556)))
(assert (= x550 (and x1623 (not x463))))
(assert (=> (>= 10000 x1256) (= (x1941 x1256) (x541 x1256))))
(assert (x1906 x1825))
(assert (= (x985 (x541 x1654)) x1654))
(assert (x1906 x895))
(assert (x1906 x515))
(assert (x1822 x1581))
(assert (= (and x1119 x213) x1751))
(assert (x1906 x1685))
(assert (= 0 (x1790 x1175)))
(assert (= (and x1151 x1749) x1795))
(assert (x1822 x1808))
(assert (x1906 x517))
(assert (= (x1941 6277101735386680763835789423207666416102355444464034512895) (x541 6277101735386680763835789423207666416102355444464034512895)))
(assert (x1906 x1707))
(assert (= (x1941 3224796394) (x541 3224796394)))
(assert (x1906 x1605))
(assert (= (or x1174 x1870) x553))
(assert (=> (<= x15 10000) (= (x541 x15) (x1941 x15))))
(assert (x1906 x2187))
(assert (= 0 (x1790 x1036)))
(assert (= (x1923 (+ x755 (- x1439 x711))) 0))
(assert (= (x1790 x2052) 0))
(assert (x1362 x1761))
(assert (= x112 (and x1975 x28)))
(assert (= x1747 (or x1052 x12)))
(assert (= x767 (or x17 x1309)))
(assert (x1906 x2120))
(assert (x1906 x1990))
(assert (= (x1790 x39) 0))
(assert (x1906 x1613))
(assert (x1906 x1993))
(assert (= (x985 (x1941 922701707)) 922701707))
(assert (= x1668 (and x73 x1502)))
(assert (x1906 x166))
(assert (x1906 x1888))
(assert (= (x1790 x1331) 0))
(assert (x1906 x521))
(assert (x1822 x1419))
(assert (x1906 x1951))
(assert (x1906 x856))
(assert (x1906 x1752))
(assert (=> (<= x1040 10000) (= (x1941 x1040) (x541 x1040))))
(assert (x1906 x330))
(assert (= (x238 (+ (- x1591 x262) x1676)) 0))
(assert (x1906 x1713))
(assert (x1906 x549))
(assert (= (x271 (+ x449 (- x1655 x786))) 0))
(assert (= (=> (and (= (= x1617 0) x771) (or (not x771) x771)) x260) x1786))
(assert (= (x1941 274184521717934524641157099916833587280) (x541 274184521717934524641157099916833587280)))
(assert (x1906 x416))
(assert (= x1556 (or x1895 x907)))
(assert (x1906 x1756))
(assert (x1906 x1585))
(assert (x1906 x1005))
(assert (= x1783 (=> (and (= x514 (x296 (x1941 25))) (= (x1842 (+ x990 x926)) x1423) (= 25 x226) (= x924 (x1842 (+ 31 x1521))) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x924) x990) (= x1876 x1423) (not (= 0 x1997)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1521) (and (> 32 x1521) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1521))))) (= x1779 (x1661 x657 2)) (= (x2118 (x1941 25) 0) x657) (= (x1842 (+ x1158 x23)) x2147) (< 2 x514) (= (x296 x1779) x1158)) x991)))
(assert (x1906 x1873))
(assert (x1906 x555))
(assert (= (x238 (+ x1676 (- x783 x262))) 0))
(assert (= (x541 1862597803) (x1941 1862597803)))
(assert (= x233 (and x1747 x34)))
(assert (x1906 x1689))
(assert (x647 x1089))
(assert (x1906 x1447))
(assert (= (x238 (+ (- x1793 x262) x1676)) 0))
(assert (= (x1941 2863377861) (x541 2863377861)))
(assert (x1906 x858))
(assert (x1906 x59))
(assert (x1906 x266))
(assert (x1906 x1509))
(assert (x1362 4294967295))
(assert (= 519173431 (x985 (x1941 519173431))))
(assert (x1906 x217))
(assert (= (x1941 1840041978) (x541 1840041978)))
(assert (x1906 x1313))
(assert (x1906 x1999))
(assert (x1906 x1215))
(assert (x1906 x1021))
(assert (x1641 x2031))
(assert (x1906 x812))
(assert (x1906 x1804))
(assert (= (and x1375 x910) x2007))
(assert (= (=> (and (= x620 x1446) (= x170 x318) (= x2190 x540) (= x2062 x223) (= 0 x1573)) x1816) x602))
(assert (= x1040 (x985 (x541 x1040))))
(assert (x1906 x2063))
(assert (= (or x1240 x580) x1303))
(assert (= (x1941 500647658) (x541 500647658)))
(assert (= (x985 (x1941 3366849169)) 3366849169))
(assert (= x1559 (or x550 x1438)))
(assert (x1906 x392))
(assert (x1906 x67))
(assert (= (and (not x303) x826) x1177))
(assert (= (x238 (+ (- 128 x262) x1676)) 0))
(assert (x1906 x2043))
(assert (x1906 x983))
(assert (= (x1790 x1294) 0))
(assert (= x1759 (and (not x1724) x536)))
(assert (x1906 x1328))
(assert (= (and x1010 x1155) x2170))
(assert (= x1846 (and x832 x132)))
(assert (= (and (not x1946) x691) x638))
(assert (= (x1941 3996650231) (x541 3996650231)))
(assert (x1906 x1514))
(assert (= (=> (and (and (= (not (= x1719 0)) x2158) (= x1720 (x1833 160)) (= (x1833 128) x712)) (and (and (and (< 0 x1524) (= 1 x494) (< x1956 2127478272) (= (x75 (x541 x1144)) x1524) (not (< x1956 1738207182)) (= 1816029635 x1956) (not (> 954831406 x1956)) (= x2030 1000) (> 1871194811 x1956) (not (> 1439069736 x1956)) (not (= 1738207182 x1956))) (and (= (<= 1000 x1709) x957) (= (and x957 x237) x1995) (= x643 1000) (= 1000 x930))) (and (= x1746 x490) (not (= 599290589 x633)) (not (> 500647658 x633)) (= (not (= x1720 0)) x490) (= 1 x2132) (> 743225245 x633) (not (> 596258137 x633)) (= x908 (x75 (x541 x1144))) (= x1432 x1267) (< 0 x908) (= x633 686821956) (not (= x633 596258137)) (= x712 x1267) (< x633 2127478272) (< x633 954831406) (= x422 1) (= x1432 x1709)))) x1995) x823))
(assert (x1906 x2146))
(assert (x1906 x1352))
(assert (x1906 x996))
(assert (x1906 x1337))
(assert (x1906 x1432))
(assert (x1906 x159))
(assert (= (x985 (x541 274184521717934524641157099916833587280)) 274184521717934524641157099916833587280))
(assert (= (x1941 2064814097) (x541 2064814097)))
(assert (x1906 x1110))
(assert (x1906 x1803))
(assert (x1906 x380))
(assert (x1906 x180))
(assert (= (div x1037 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x331 x1037 255)))
(assert (x1906 x702))
(assert (x1906 x39))
(assert (x1906 x1067))
(assert (= x1620 (and x356 x2112)))
(assert (x1906 x1109))
(assert (= true x2045))
(assert (x1362 x1138))
(assert (x1906 x2054))
(assert (x1906 x561))
(assert (x1906 x795))
(assert (= (and x1303 x1234) x1515))
(assert (x1906 x510))
(assert (= x1537 (and (not x333) x1062)))
(assert (= (x985 (x1941 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x985 (x541 x2102)) x2102))
(assert (x1906 x2050))
(assert (x1906 x1560))
(assert (x1906 x1306))
(assert (x1822 x1654))
(assert (=> (<= x870 10000) (= (x1941 x870) (x541 x870))))
(assert (x1906 x335))
(assert (x1906 x1487))
(assert (x1906 x1395))
(assert (x1906 x131))
(assert (= (or x1156 x2023 x137 x157 x595) x691))
(assert (x1906 x2199))
(assert (= (or x2051 x496) x1))
(assert (x1906 x1610))
(assert (x1906 x816))
(assert (= (=> (and (= x827 (< 0 x1717)) (= (x204 x1899) x1717)) (and (=> (and x827 (and (or (and x69 (= 0 x176)) (and (not x69) (and (= x875 (ite (> x570 0) 0 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x176 x994) (= (x1842 (+ x1908 32)) x205) (> x316 x875) (= (x1842 (+ x205 x40)) x745) (= (x204 x745) x994) (= x316 (x204 x40)) (= (mod (* x875 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1908)))) (= (= x570 0) x69))) x1038) (=> (not x827) x1363))) x1817))
(assert (x1906 x1356))
(assert (x1906 x1520))
(assert (x1731 x567))
(assert (x1906 x2016))
(assert (x1906 x822))
(assert (x1906 x758))
(assert (= (and (not x1104) x82) x989))
(assert (= (or x1871 x667) x1010))
(assert (= 0 (x271 (+ x449 (- 128 x786)))))
(assert (= (and x2176 x629) x2075))
(assert (x1906 x1808))
(assert (x589 x1201))
(assert (x1906 x1766))
(assert (x1362 x270))
(assert (= (x1941 2876725745) (x541 2876725745)))
(assert (= (or x2203 x377) x1034))
(assert (=> (>= 10000 x971) (= (x541 x971) (x1941 x971))))
(assert (x1362 115792089237316195423570985008687907853269984665561335876943319670319585689600))
(assert (x1906 x1297))
(assert (= (or x1911 x508) x1014))
(assert (x1362 x259))
(assert (x1822 x1673))
(assert (x1906 x1279))
(assert (x1906 x2021))
(assert (x1906 x1516))
(assert (x1906 x1393))
(assert (= (x1941 822145385) (x541 822145385)))
(assert (=> (<= x1605 10000) (= (x1941 x1605) (x541 x1605))))
(assert (x1906 x883))
(assert (= x1832 (and x38 x1559)))
(assert (x1906 x177))
(assert (x1906 x518))
(assert (= x59 (x985 (x541 x59))))
(assert (x1906 x1753))
(assert (x1822 x265))
(assert (x1906 x761))
(assert (x1906 x344))
(assert (x1906 x425))
(assert (x1906 x806))
(assert (= (x985 (x1941 1000000000000000000)) 1000000000000000000))
(assert (x1906 x1207))
(assert (x1906 x15))
(assert (x1906 x756))
(assert (x1906 x1299))
(assert (x1822 x1099))
(assert (= (=> (and (= (x1842 (+ 128 x515)) x1496) (= (x1842 (+ 32 x988)) x515) (= (x1893 128) x371) (> x371 x48) (= (ite (< 0 x570) 0 1) x48) (= x592 (x1893 x1496)) (= (x2079 x540) x210) (= x955 (x1842 (+ x540 32))) (= x988 (mod (* 32 x48) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x457 (x1893 x540)) (< 0 x457) (= (not (> x210 1)) x887)) (and x887 x1905)) x1619))
(assert (= (and x840 x1443) x536))
(assert (x1906 x318))
(assert (x1906 x1662))
(assert (= x901 (and x629 (not x2176))))
(assert (x1906 x104))
(assert (x1906 x1142))
(assert (= x346 (=> (and (and (not (or (and (< x808 32) (= true (<= x808 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x808 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x527 x1410) x808) (= x513 (x527 x1920)) (not (> x513 2)) (= (= 1 x513) x1234) (< x513 3)) (or (and (not x1234) (and (not (> x513 2)) (= x513 2) (= x40 x1813) (= x973 x1807))) (and (and (= x1983 x40) (= x1807 x921)) x1234))) x792)))
(assert (x1906 x526))
(assert (x1906 x2193))
(assert (= x2023 (and x1624 (not x2139))))
(assert (x1906 x110))
(assert (= 1000000 (x985 (x1941 1000000))))
(assert (x1906 x1183))
(assert (x1906 x1577))
(assert (x1906 x1955))
(assert (x1906 x1380))
(assert (x1906 x2205))
(assert (x1906 x1316))
(assert (x1906 x1491))
(assert (x1906 x915))
(assert (= 0 (x1790 x986)))
(assert (x1906 x2012))
(assert (x1906 x1909))
(assert (x1906 x593))
(assert (= x1680 x111))
(assert (x1906 x1382))
(assert (x1906 x1920))
(assert (x1906 x1305))
(assert (= 0 (x271 (+ x449 (- x1793 x786)))))
(assert (x1906 x755))
(assert (= (x238 (+ x1676 (- x1702 x262))) 0))
(assert (x1906 x1015))
(assert (x1906 x1397))
(assert (x1906 x1161))
(assert (x1906 x911))
(assert (x1906 x1669))
(assert (=> (<= x2193 10000) (= (x1941 x2193) (x541 x2193))))
(assert (x1906 x1040))
(assert (x1906 x1158))
(assert (x1906 x944))
(assert (x1362 x981))
(assert (x1906 x2163))
(assert (= x841 (=> (= x1486 x1012) x1075)))
(assert (x1906 x928))
(assert (= (=> (and (or (and (= x891 x661) (not x1802)) (and x1802 (and (not (>= (+ x548 x1161) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x357 1461501637330902918203684832716283019655932542975 x1138) x2066) (= (x1842 (+ x548 x1161)) x965) (= x1499 (= x680 x742)) (= x1684 (x1373 (x541 x1673) (x1941 0) 0)) (= x846 0) x1499 (= (+ x65 x891) x1384) (= x661 x742) (= x518 (x248 x1684)) (= (- x1384 x623) x680) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x518 x548))) (= (x1842 (+ x518 x548)) x65) (= (x1373 (x541 x2066) (x1941 0) 0) x236) (= (x1364 (x1941 2)) x1161) (= x323 x262) (= x1673 (x357 1461501637330902918203684832716283019655932542975 x1138)) (= (x248 x236) x623)))) (and (> x812 0) x442 (= (ite (> 1000000000000000000 x319) (x1008 (- 1000000000000000000 x319)) 0) x812) (= x1802 (> x548 0)) (not (= x812 0)) (= (div x1191 x812) x548))) x1242) x566))
(assert (x1906 x1767))
(assert (= (x985 (x541 x561)) x561))
(assert (x1906 x1580))
(assert (x1906 x1855))
(assert (x1906 x1065))
(assert (= (or x1392 x417) x1429))
(assert (= (and (not x1416) x202) x1156))
(assert (= (=> (= x2011 x1873) x1530) x7))
(assert (= x235 (x985 (x541 x235))))
(assert (x1906 x1765))
(assert (x1906 x896))
(assert (= (=> (and (= (x696 x1932) x1744) (= x1115 (> x1744 0))) (and (=> (not x1115) x2160) (=> x1115 x88))) x1346))
(assert (x1906 x532))
(assert (x1906 x1729))
(assert (x1906 x2162))
(assert (= x293 (or x2206 x1846)))
(assert (= (x985 (x1941 361691454)) 361691454))
(assert (x1906 x249))
(assert (x1362 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1906 x50))
(assert (x1906 x1736))
(assert (x1906 x2058))
(assert (=> (<= x1581 10000) (= (x541 x1581) (x1941 x1581))))
(assert (x1362 1461501637330902918203684832716283019655932542975))
(assert (x1906 x1699))
(assert (x1906 x1606))
(assert (= (x1941 1000000000000000000) (x541 1000000000000000000)))
(assert (=> (<= x2035 10000) (= (x1941 x2035) (x541 x2035))))
(assert (x1906 x404))
(assert (x1906 x1250))
(assert (= 0 (x271 (+ x449 (- x1036 x786)))))
(assert (x1906 x1672))
(assert (x1358 x816))
(assert (x1906 x1239))
(assert (x1906 x77))
(assert (= (or (and (not x659) x1469) x912) x2204))
(assert (x1906 x1420))
(assert (x1906 x557))
(assert (x1906 x1896))
(assert (x1906 x1666))
(assert (= 0 (x1790 (x1842 (+ 4 x786)))))
(assert (= (x271 (+ (- x1653 x786) x449)) 0))
(assert (= x665 (or x1295 x1542)))
(assert (= x2003 (and x116 x2081)))
(assert (= (x985 (x541 x304)) x304))
(assert (= x186 (or x2075 x901)))
(assert (= (or x1047 x101 x375 x349 x884) x239))
(assert (= x2144 (or x1668 x1950)))
(assert (x1906 x33))
(assert (x1906 x199))
(assert (x1906 x1879))
(assert (= 1862597803 (x985 (x1941 1862597803))))
(assert (= x615 (=> (and (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1110) x379) (= (> x1194 0) x906) (= (x1842 (+ x379 x2108)) x1430) (= x1110 (x1842 (+ x1578 31))) (not (or (> x1578 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1578)) (< x1578 32)))) (not (= 0 x1847))) (and (=> (and (and (and (= (x1842 (+ 4 x1430)) x2) (not (= 0 x1820)) (= (x75 (x541 x971)) x1820) (= (x1842 (+ 32 x1934)) x828) (= x1934 x2) (= (x1842 (+ x828 32)) x351) (= x2020 (> x1617 0)) (= (x357 1461501637330902918203684832716283019655932542975 x868) x102)) (or (and x2020 (and (> 4294967296 x787) (= x435 (x1878 (x541 x1144))) (= x35 (x1878 (x541 x971))) (= x1633 (>= (x1991 (x541 x1144)) x435)) x128 x1633 (= (= (x1991 (x541 x971)) x35) x128))) (not x2020))) x906) x1786) (=> (and (not x906) (and (= x1839 x1430) (= x156 x1643))) x2095)))))
(assert (x1822 x1079))
(assert (x1731 x2125))
(assert (x1906 x1213))
(assert (x1906 x2014))
(assert (x1906 x2059))
(assert (x1906 x1884))
(assert (x1906 x609))
(assert (x1906 x692))
(assert (x1906 x974))
(assert (x1906 x1807))
(assert (= (x985 (x1661 x93 1)) (+ 1 (x985 x93))))
(assert (x1906 x1987))
(assert (x1906 x246))
(assert (x1906 x1339))
(assert (x1906 x879))
(assert (=> (>= 10000 x1654) (= (x1941 x1654) (x541 x1654))))
(assert (= x968 (and x1119 (not x213))))
(assert (x1906 x1461))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 (x985 (x1941 115792089237316195423570985008687907853269984665640564039457584007913129639680))))
(assert (= 0 (x271 (+ (- x558 x786) x449))))
(assert (x1906 x1575))
(assert (= x1218 (=> (and (or (and (not x1708) (and (= (mod (* 32 x1900) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2164) (= (x1842 (+ x223 32)) x1791))) x1708) (and (not (< x2096 1000000)) (= (x1373 (x541 x1256) (x1941 0) 0) x155) (= 0 x60) (= x710 (x465 x1418)) (= x437 (x1842 (+ 32 x1625))) (= x1284 (= x342 x1354)) (= x722 (x1828 (x1941 2))) (= (= x1900 0) x1708) (= x421 (x1162 x253)) (= x250 (x465 x899)) (= x1625 (mod (* x1900 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x620 (x357 1461501637330902918203684832716283019655932542975 x136)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x250 1000000))) (= x332 0) (= x1256 (x357 1461501637330902918203684832716283019655932542975 x136)) (not (>= (+ x807 x972) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 1000000 x392) (= x1366 (= x511 x402)) (= (x1842 (+ x972 x807)) x185) x1284 (= x220 (x1842 (+ x722 1000000))) (= x2029 x223) (= (x1373 (x541 x620) (x1941 0) 0) x253) (= x1730 (x1842 (+ x1167 x807))) (= x511 (- x596 x710)) (= x290 (x1842 (+ 1000000 x250))) (not (< 18446744073709551615 x1900)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x807 x1167))) (= 0 x195) (= x170 (x1842 (+ x223 x437))) (= x1167 (x1162 x155)) (= (x1490 128) x1900) (= x1418 (x1373 (x1941 0) (x1941 0) 0)) (= (- x1269 x421) x342) x1366 (= 1000000 x1068) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x722 1000000))) (= x857 1000000) (= (+ x1730 x402) x1269) (= x972 (x1910 (x1941 2))) (= x596 (+ x290 x1106)) (= (x1008 (- x2096 1000000)) x807) (= x899 (x1373 (x1941 0) (x1941 0) 0)) (= x223 x1134))) x602)))
(assert (x1906 x747))
(assert (x1906 x2062))
(assert (x1906 x1677))
(assert (= (x1941 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x541 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (= (x985 (x541 x1005)) x1005))
(assert (x1906 x700))
(assert (x1362 x1662))
(assert (x1906 x151))
(assert (=> (<= x561 10000) (= (x541 x561) (x1941 x561))))
(assert (x1725 x1818))
(assert (x1906 x478))
(assert (= (and x832 (not x132)) x2206))
(assert (= (x985 (x1941 307731845)) 307731845))
(assert (=> (>= 10000 x1239) (= (x541 x1239) (x1941 x1239))))
(assert (x1906 x1634))
(assert (x1362 1))
(assert (= (or x638 x1429) x833))
(assert (x1822 x59))
(assert (= (or x1283 x1960) x635))
(assert (x1906 x1958))
(assert (x1906 x646))
(assert (= x265 (x985 (x541 x265))))
(assert (x1906 x531))
(assert (= (x541 519173431) (x1941 519173431)))
(assert (x1906 x407))
(assert (x1906 x220))
(assert (x1906 x280))
(assert (= (x238 (+ (- x1927 x262) x1676)) 0))
(assert (x1906 x181))
(assert (x1906 x1206))
(assert (x1906 x859))
(assert (= (x1941 5000000) (x541 5000000)))
(assert (x1906 x965))
(assert (x1906 x1874))
(assert (x1906 x559))
(assert (x1906 x2056))
(assert (= (x1790 x1927) 0))
(assert (x1906 x1866))
(assert (x1906 x1464))
(assert (x1906 x513))
(assert (x1906 x2097))
(assert (x1906 x723))
(assert (= x945 (or x106 x1333)))
(assert (x1906 x388))
(assert (x1906 x36))
(assert (x1906 x336))
(assert (x1906 x434))
(assert (= (x1941 1984976886) (x541 1984976886)))
(assert (x1906 x1694))
(assert (x1906 x1936))
(assert (= (=> (and (or (and x1155 (and (= (x1031 (x541 x1144)) x1140) x1391 (= x1391 (>= (x1182 (x541 x1144)) x1140)) (= x1255 (= (x1182 (x541 x1144)) x2092)) (> 4294967296 x1682) (= (x1031 (x541 x1144)) x2092) x1255)) (not x1155)) (and (= (< 0 x1961) x1155) (= (x1842 (+ x699 32)) x1984) (= (x75 (x541 x1144)) x1649) (= (x1842 (+ x1839 4)) x1766) (= x699 (x1842 (+ 32 x1180))) (not (= x1649 0)) (= x1180 x1766) (= x217 (x357 1461501637330902918203684832716283019655932542975 x868)))) x2151) x544))
(assert (x1362 x136))
(assert (x1906 x1609))
(assert (= 0 (x271 (+ x449 (- x2052 x786)))))
(assert (= x1253 (=> (and (= x795 x1444) (= (x1842 (+ 32 x497)) x79) (= x795 (x1842 (+ x1735 x626))) (= (mod (* 32 x1279) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1735) (= x1406 (x1842 (+ x2062 32))) (= (x1842 (+ 32 x1444)) x306) (= x2180 (x1842 (+ x1477 x1927))) (= x1279 x953) (= (x678 x2062) x1324) (= x1477 (mod (* x1279 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1494 x2180) (= x1013 (> x1324 0)) (= (x1008 (- x1444 x497)) x468)) (and (=> (and x1013 (and (= x1532 (x1842 (+ 32 x306))) (= x1417 (x1650 x1406)) (= (< 1 x1324) x993) (= x1780 (x1842 (+ 32 x1406))))) (and (=> (and x993 (and (= x559 (x2106 x1780)) (= (> x1324 2) x2131) (= x922 (x1842 (+ 32 x1532))) (= (x1842 (+ 32 x1780)) x783))) (and (=> (and x2131 (and (= x2076 (x1842 (+ x922 32))) (= x209 (x1687 x783)) (= (< 3 x1324) x424) (= (x1842 (+ 32 x783)) x967))) (and (=> (and (not x424) (and (= x1752 x2076) (= x92 x967) (= x446 3))) x109) (=> x424 x3))) (=> (and (not x2131) (and (= x783 x92) (= x922 x1752) (= 2 x446))) x109))) (=> (and (and (= x92 x1780) (= x1752 x1532) (= x446 1)) (not x993)) x109))) (=> (and (not x1013) (and (= x92 x1406) (= 0 x446) (= x1752 x306))) x109)))))
(assert (= (=> (and (= x226 x1561) (= x1876 x497)) x1083) x991))
(assert (x1906 x2190))
(assert (= x469 (or x2170 x1020)))
(assert (= (x985 (x541 x9)) x9))
(assert (= 3670205928 (x985 (x1941 3670205928))))
(assert (= x1664 (or x869 x1637)))
(assert (= (and x601 x406) x1624))
(assert (x1906 x854))
(assert (x1906 x286))
(assert (= (x541 81655993114286172543975849523773895523710823181222424266797447834442299080704) (x1941 81655993114286172543975849523773895523710823181222424266797447834442299080704)))
(assert (x1906 x688))
(assert (x1906 x292))
(assert (= (x985 (x1941 18446744073709551615)) 18446744073709551615))
(assert (x1906 x1543))
(assert (= (x541 115792089237316195423570985008687907853269984665561335876943319670319585689600) (x1941 115792089237316195423570985008687907853269984665561335876943319670319585689600)))
(assert (x1822 x1838))
(assert (x1906 x1741))
(assert (x1906 x552))
(assert (= 0 (x1923 (+ x755 (- x1406 x711)))))
(assert (= (x985 (x541 x393)) x393))
(assert (x1725 x1464))
(assert (= (=> (and (and (= x463 (= 0 x2017)) (not (= x1962 0))) (or (and (not x463) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2017 1000000000000000000)) (= x41 (div x1273 x1962)) (= (mod (* 1000000000000000000 x2017) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1273) (< 0 x2017) (< 0 x1962) (= x425 x41))) (and (= x425 0) x463))) x1221) x2181))
(assert (= x1540 (and x771 x1343)))
(assert (= 0 (x1790 x2190)))
(assert (x1906 x242))
(assert (= (x1941 3506505391) (x541 3506505391)))
(assert (= (=> (and (and (not (= x1350 0)) (= (= 0 x578) x1029)) (or (and (= x1258 0) x1029) (and (and (< 0 x578) (< (* 1000000000000000000 x578) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 0 x1350) (= (div x1698 x1350) x772) (= x772 x1258) (= x1698 (mod (* x578 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x1029)))) x1351) x1075))
(assert (x1906 x345))
(assert (x1906 x1573))
(assert (x1906 x1460))
(assert (x1906 x1762))
(assert (= x178 (and x1 x282)))
(assert (= (and x2208 x619) x1151))
(assert (x1906 x2019))
(assert (x1906 x247))
(assert (=> (>= 10000 x2102) (= (x541 x2102) (x1941 x2102))))
(assert (x1906 x802))
(assert (x1906 x1168))
(assert (x1906 x936))
(assert (x1906 x1656))
(assert (x1906 x2089))
(assert (x458 x1993))
(assert (x1906 x941))
(assert (x1906 x666))
(assert (x1906 x1100))
(assert (= (div x1305 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x331 x1305 255)))
(assert (x1906 x741))
(assert (x1906 x2031))
(assert (x1906 x808))
(assert (x1906 x558))
(assert (x1906 x830))
(assert (x1906 x1972))
(assert (x1906 x1278))
(assert (= x417 (and x733 (not x1830))))
(assert (x1822 x870))
(assert (x1906 x175))
(assert (= x583 (or x1503 x1597)))
(assert (x1822 x1256))
(assert (x1906 x494))
(assert (x1906 x1718))
(assert (x1906 x1973))
(assert (x1906 x438))
(assert (= (x541 3586168516) (x1941 3586168516)))
(assert (x1906 x1561))
(assert (x1822 x1558))
(assert (= (x271 (+ x449 (- x1447 x786))) 0))
(assert (x1362 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (=> (<= x265 10000) (= (x541 x265) (x1941 x265))))
(assert (= x1541 (and (not x695) x1547)))
(assert (x1906 x216))
(assert (x1906 x1180))
(assert (x1362 6277101735386680763835789423128438253588091106870490562560))
(assert (x1362 x1464))
(assert (= (and x2149 x1708) x1309))
(assert (x1906 x842))
(assert (x1906 x313))
(assert (x1725 x218))
(assert (x1906 x706))
(assert (= (x1941 26959946667150639794667015087019630673637144422540572481103610249215) (x541 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1906 x1513))
(assert (x1362 x2031))
(assert (= 1461501637330902918203684832716283019655932542975 (x985 (x1941 1461501637330902918203684832716283019655932542975))))
(assert (x1906 x1521))
(assert (= (x1941 596258137) (x541 596258137)))
(assert (x1906 x1997))
(assert (x831 x571))
(assert (= (x271 (+ (- x2071 x786) x449)) 0))
(assert (x1906 x524))
(assert (x1906 x117))
(assert (= (=> (and (> x1588 0) (= (x1842 (+ x2062 32)) x558) (= x944 (x426 x1591)) (= x197 (x426 x558)) (= x2127 (x426 x2062)) (< 0 x2127) (= true x129) (= x1588 (x426 x2190)) (= 0 x124) (= x1591 (x1842 (+ 32 x2190)))) (and (=> x129 x1582) (=> (and (not x129) (= (= x971 x1497) x1834)) (and (=> (and (= x1144 x1497) (not x1834)) x1004) (=> x1834 x1582))))) x1816))
(assert (= 0 (x1923 (+ x755 (- x2062 x711)))))
(assert (x1628 x1662))
(assert (= x397 (and x1586 x2192)))
(assert (x1906 x444))
(assert (x1906 x184))
(assert (x1906 x26))
(assert (= (and x488 x2131) x1076))
(assert (x1906 x2119))
(assert (= x535 (and x1559 (not x38))))
(assert (x1906 x379))
(assert (x1822 x2150))
(assert (= (or x308 x1165) x362))
(assert (x1906 x1755))
(assert (= x374 (x985 (x541 x374))))
(assert (x1906 x229))
(assert (= (x271 (+ x449 (- x1405 x786))) 0))
(assert (= x975 (and (not x347) x934)))
(assert (x1906 x924))
(assert (x1906 x366))
(assert (= (x1941 3366849169) (x541 3366849169)))
(assert (= (x1790 x556) 0))
(assert (x1906 x2025))
(assert (x1906 x1170))
(assert (x1906 x1036))
(assert (x1906 x1750))
(assert (x1906 x1806))
(assert (=> (<= x121 10000) (= (x1941 x121) (x541 x121))))
(assert (= (=> (and (= x163 (ite (< 0 x570) 0 1)) (= (mod (* 32 x163) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1479) (= (x1842 (+ x1715 x540)) x1331) (= x2188 (x1842 (+ x1932 32))) (= x1293 (x696 x1932)) (= x1979 (not (> x1507 1))) (= (x696 x540) x501) (= (x127 x1932) x1507) (= x1715 (x1842 (+ x1479 32))) (> x501 x163) (< 0 x1293) (= x2130 (x696 x1331))) (and x1979 x2160)) x88))
(assert (x1906 x1406))
(assert (x1906 x961))
(assert (x1906 x2042))
(assert (= (and x321 (not x848)) x1887))
(assert (x1906 x1839))
(assert (x1725 x1049))
(assert (x1906 x676))
(assert (x1906 x2044))
(assert (= 5000000 (x985 (x1941 5000000))))
(assert (x1906 x1166))
(assert (= (or x860 (and x1754 x940)) x667))
(assert (x1822 x1605))
(assert (x1906 x712))
(assert (x1906 x276))
(assert (x1906 x2148))
(assert (x1906 x2164))
(assert (x1906 x79))
(assert (= (x985 (x541 x2193)) x2193))
(assert (x1906 x56))
(assert (x1906 x2161))
(assert (= (=> (and (= x1726 x319) x818 (= x1726 (div x429 1000000000000000000))) x74) x634))
(assert (x1906 x1033))
(assert (= (and x142 x69) x243))
(assert (x1906 x2028))
(assert (x1906 x1791))
(assert (x1906 x716))
(assert (x1906 x2039))
(assert (x1362 x1277))
(assert (x1906 x1506))
(assert (x589 x1592))
(assert (=> (<= x620 10000) (= (x1941 x620) (x541 x620))))
(assert (= (=> (and (and (and (and (= x1389 (x75 (x541 x1144))) (< x708 2127478272) (not (< x708 1738207182)) (> 1871194811 x708) (not (< x708 1439069736)) (= 1816029635 x708) (not (< x708 954831406)) (not (= 1738207182 x708)) (= x307 5000) (< 0 x1389) (= x1526 1000)) (and (>= x159 0) (<= x159 1461501637330902918203684832716283019655932542975) (= 5000000 x154) (= x628 x1299) (= x628 x663) (not (< x1092 3008386744)) (= x1168 (x1096 (x1941 16))) (= x813 x618) (= x2077 (x1096 (x1941 15))) (= x1776 x903) (= (x1096 (x1941 14)) x256) (= x1306 x2199) (>= x1716 0) (not (> 2580288415 x1092)) (= (x1096 (x1941 13)) x683) (= x920 x2179) (= x663 x1716) (= x605 (<= x430 5000000)) (= x2179 x538) (= x1092 3051865383) (>= 1461501637330902918203684832716283019655932542975 x594) (>= x594 0) (= x2123 x1459) (= x212 x723) (<= x1716 1461501637330902918203684832716283019655932542975) (= x1372 (x75 (x541 x1144))) (= x1142 x387) (not (> 2863377861 x1092)) (= x942 (< x903 x1168)) (> 3224796394 x1092) (= x266 x1437) (not (< x1092 2127478272)) (not (= x1092 3008386744)) (> x1372 0) (= x2123 x594) (= x538 0) (= 1000 x838))) (and (= x70 (x75 (x541 x1144))) (= x430 x1514) (= x489 x1514) (= x1517 x489) (not (< x33 500647658)) (< x33 743225245) (= x730 x2091) (> 596258137 x33) (= 519173431 x33) (= 5000 x276) (= x730 (not (= 0 x2195))) (not (= 500647658 x33)) (= 5000 x464) (not (= x33 503383097)) (< 0 x70) (< x33 2127478272) (< x33 954831406))) (and (= x2195 (x1568 160)) (= x1517 (x1568 128)) (= (not (= x1601 0)) x1563))) (and (=> (and (not x942) (and (= x1857 x256) (= x354 0))) x294) (=> (and (and (= x1043 (> x256 x683)) (or (and (and (= (mod (* x153 x254) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2207) (= x467 x352) (= x254 (x1008 (- x683 x256))) (< 0 x1412) (= x1412 (x1008 (- x1168 x2077))) (= x153 (x1008 (- x903 x2077))) (= x2089 (div x2207 x1412)) (= (x1008 (- x683 x2089)) x467)) (not x1043)) (and x1043 (and (= x352 x1474) (= (x1842 (+ x1395 x683)) x1474) (= (x1008 (- x256 x683)) x2056) (= x1127 (mod (* x2056 x1205) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> x336 0) (= x1395 (div x1127 x336)) (= x336 (x1008 (- x1168 x2077))) (= x1205 (x1008 (- x903 x2077))))))) x942) x51))) x664))
(assert (= x1251 (or x1190 x1014)))
(assert (x1906 x1965))
(assert (= (x1923 (+ x755 (- x1310 x711))) 0))
(assert (x1906 x1551))
(assert (= x852 (or x29 x1795 x1223 x1237 x554)))
(assert (x1906 x1810))
(assert (x1906 x418))
(assert (x1906 x1632))
(assert (x1906 x209))
(assert (x1731 x1778))
(assert (= x208 (and x233 (not x1249))))
(assert (x1906 x2191))
(assert (x1906 x980))
(assert (x1822 x587))
(assert (x1906 x1201))
(assert (x1906 x814))
(assert (x1906 x1267))
(assert (= (and x2078 x590) x523))
(assert (x1906 x556))
(assert (x1906 x1188))
(assert (x1906 x1365))
(assert (= (x271 (+ x449 (- x967 x786))) 0))
(assert (= (and (not x1192) x1098) x934))
(assert (x1906 x1992))
(assert (= x1438 (and x463 x1623)))
(assert (x1641 x203))
(assert (x1906 x1079))
(assert (= x1502 (and x2156 x2008)))
(assert (x1906 x489))
(assert (x1906 x903))
(assert (x1906 x503))
(assert (x1906 x1901))
(assert (x1906 x162))
(assert (x1906 x722))
(assert (x1906 x461))
(assert (=> (>= 10000 x587) (= (x1941 x587) (x541 x587))))
(assert (x1906 x1227))
(assert (x1906 x760))
(assert (x1906 x401))
(assert (= (x985 (x1941 100000)) 100000))
(assert (x1906 x2092))
(assert (= (x541 922701707) (x1941 922701707)))
(assert (x1906 x522))
(assert (x1906 x1743))
(assert (= (x238 (+ (- x2062 x262) x1676)) 0))
(assert (= 0 (x238 (+ (- x1175 x262) x1676))))
(assert (x1628 x1315))
(assert (= (x1941 686821956) (x541 686821956)))
(assert (x1906 x468))
(assert (=> (>= 10000 x1739) (= (x1941 x1739) (x541 x1739))))
(assert (x1906 x939))
(assert (x1906 x875))
(assert (x1725 x1313))
(assert (x1906 x857))
(assert (= (x1790 x520) 0))
(assert (= x886 (x985 (x541 x886))))
(assert (= x274 (and (not x1115) x635)))
(assert (= (=> (and (= x1946 (< x1889 x2080)) (= (x134 (x1941 13)) x728) (= x1173 (x2086 x540)) (= x1088 (x134 (x1941 14))) (= x1173 x1837) (= (x134 (x1941 16)) x2080) (= (x2086 x1655) x1837) (= (x134 (x1941 15)) x1522)) (and (=> (and (and (= x1009 0) (= x1088 x1710)) (not x1946)) x651) (=> (and x1946 (and (or (and (and (> x774 0) (= x1067 (x1008 (- x1889 x1522))) (= x2024 (div x764 x774)) (= x1017 (x1842 (+ x2024 x728))) (= x764 (mod (* x731 x1067) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x731 (x1008 (- x1088 x728))) (= x987 x1017) (= x774 (x1008 (- x2080 x1522)))) x1830) (and (and (= (div x943 x817) x2138) (= x817 (x1008 (- x2080 x1522))) (= (x1008 (- x728 x1088)) x1385) (= x987 x1763) (= (x1008 (- x728 x2138)) x1763) (= x1856 (x1008 (- x1889 x1522))) (> x817 0) (= (mod (* x1856 x1385) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x943)) (not x1830))) (= (< x728 x1088) x1830))) x810))) x736))
(assert (x1906 x888))
(assert (= (x541 361691454) (x1941 361691454)))
(assert (x1822 x2187))
(assert (x1822 x1497))
(assert (x1906 x353))
(assert (= (x331 x291 255) (div x291 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x1906 x495))
(assert (= 0 (x1790 x1439)))
(assert (= 0 (x1790 x2062)))
(assert (x1906 x685))
(assert (= (x541 1000000) (x1941 1000000)))
(assert (= (x541 2039265891) (x1941 2039265891)))
(assert (= (or x334 x1620) x165))
(assert (= (x1923 (+ x755 (- x1793 x711))) 0))
(assert (x1906 x45))
(assert (x1906 x724))
(assert (= (=> (and (= x526 (x204 x1899)) (= (x625 x1899) x32) (= (x1842 (+ 32 x1899)) x1982) (= (not (< 1 x32)) x2046) (< 0 x526)) (and x1363 x2046)) x1038))
(assert (x1822 x107))
(assert (=> (<= x779 10000) (= (x541 x779) (x1941 x779))))
(assert (= x1542 (or x208 x1143)))
(assert (x1906 x653))
(assert (= x534 (and (not x129) x775)))
(assert (= x3 (=> (and (= (x1842 (+ x2076 32)) x1094) (= (not (< 4 x1324)) x231) (= (x1842 (+ x967 32)) x1840) (= x1736 (x1152 x967))) (and (=> (and (= x1094 x1752) (= x1840 x92) (= x446 4)) x109) x231))))
(assert (= x1256 (x985 (x541 x1256))))
(assert (x1906 x864))
(assert (x1362 x1188))
(assert (x1906 x2))
(assert (x1906 x1374))
(assert (x1906 x2168))
(assert (x1906 x2197))
(assert (x1906 x1829))
(assert (= (x541 79228162514264337593543950335) (x1941 79228162514264337593543950335)))
(assert (x1906 x1474))
(assert (= x496 (and x913 x579)))
(assert (x1906 x1338))
(assert (x1906 x1126))
(assert (x1906 x1225))
(assert (= (or x1600 x1330) x1357))
(assert (x1906 x399))
(assert (x1906 x1205))
(assert (= (or x1196 x1852) x751))
(assert (= (and x695 x1547) x116))
(assert (x1906 x215))
(assert (x1906 x413))
(assert (= x1595 (and x20 x91)))
(assert (x1906 x2102))
(assert (= (x271 (+ (- x2062 x786) x449)) 0))
(assert (= (x985 (x1941 81655993114286172543975849523773895523710823181222424266797447834442299080704)) 81655993114286172543975849523773895523710823181222424266797447834442299080704))
(assert (x1906 x1976))
(assert (= (or x243 x650) x1178))
(assert (x1906 x1388))
(assert (x1906 x1186))
(assert (x1906 x1217))
(assert (x2166 x1089))
(assert (x1906 x86))
(assert (x1906 x972))
(assert (= x1475 (and (not x420) x2134)))
(assert (x1362 18446744073709551615))
(assert (x1906 x479))
(assert (x1906 x1497))
(assert (= x1615 (or x751 x376 x639)))
(assert (x1906 x1705))
(assert (= 0 (x1790 x1793)))
(assert (= x107 (x985 (x541 x107))))
(assert (= (x985 (x1941 2127478272)) 2127478272))
(assert (x1906 x1074))
(assert (= x1198 (and x705 x1433)))
(assert (x1906 x819))
(assert (x1906 x171))
(assert (x1906 x573))
(assert (= x1060 (or (and (not x1881) x1322) x892)))
(assert (= x2149 (or x1865 x165)))
(assert (x1906 x2123))
(assert (x1906 x449))
(assert (x1731 x924))
(assert (x1906 x1252))
(assert (x1906 x256))
(assert (x1906 x777))
(assert (= x142 (and x1493 x827)))
(assert (x1725 x915))
(assert (x1906 x946))
(assert (= (mod (* 6277101735386680763835789423207666416102355444464034512896 x1804) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1298 x1804 192)))
(assert (x1906 x1696))
(assert (x1906 x1120))
(assert (x1906 x578))
(assert (x1822 x2035))
(assert (= (and (not x1754) x940) x1871))
(assert (= (x985 (x1941 115792089237316195417293883273301227089434195242512125785869492901042639077375)) 115792089237316195417293883273301227089434195242512125785869492901042639077375))
(assert (= (x541 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1941 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x157 (and x601 (not x406))))
(assert (x1906 x813))
(assert (x1906 x794))
(assert (x1906 x312))
(assert (x1906 x1477))
(assert (x1906 x1157))
(assert (x1906 x865))
(assert (= (=> (and (and (= x44 (x721 160)) (= (x721 128) x937) (= (not (= 0 x1877)) x115)) (and (and (not (< x1922 500647658)) (= x2148 x10) (> 743225245 x1922) (= x2162 5000) (= 519173431 x1922) (= x2148 x1866) (= x893 (not (= x44 0))) (< x1922 596258137) (> 2127478272 x1922) (not (= x1922 500647658)) (not (= x1922 503383097)) (= x1866 x937) (= x881 x893) (> x1814 0) (= (x75 (x541 x1144)) x1814) (= 5000 x692) (< x1922 954831406)) (and (and (= x528 0) (= 5000000 x1260) (= x1299 x2142) (= 1000 x2146) (= x700 (x87 (x1941 14))) (< x1785 3224796394) (= (x87 (x1941 15)) x403) (<= x11 1461501637330902918203684832716283019655932542975) (= x920 x1326) (= (x75 (x541 x1144)) x1063) (>= x184 0) (= x618 x1553) (> x1063 0) (= x1785 3051865383) (>= x1760 0) (= x1776 x2060) (= x2142 x1765) (= (x87 (x1941 13)) x850) (= x237 (<= x10 5000000)) (<= x184 1461501637330902918203684832716283019655932542975) (= x1326 x528) (= x1103 (> x1388 x2060)) (not (> 2863377861 x1785)) (not (> 3008386744 x1785)) (= x1765 x1760) (<= x1760 1461501637330902918203684832716283019655932542975) (not (= x1785 3008386744)) (= x2199 x461) (= x266 x666) (= x184 x344) (= (x87 (x1941 16)) x1388) (= x737 x387) (<= 0 x11) (not (< x1785 2580288415)) (= x723 x1994) (= x1459 x344) (not (> 2127478272 x1785))) (and (= x2014 5000) (< 0 x1523) (not (> 954831406 x1959)) (= 1000 x1399) (> 1871194811 x1959) (not (< x1959 1439069736)) (> 2127478272 x1959) (not (> 1738207182 x1959)) (= x1959 1816029635) (not (= 1738207182 x1959)) (= (x75 (x541 x1144)) x1523))))) (and (=> (and (not x1103) (and (= x700 x1355) (= 0 x1719))) x823) (=> (and x1103 (and (or (and (and (= (x1008 (- x1388 x403)) x242) (< 0 x242) (= x503 (x1842 (+ x850 x98))) (= x1545 (x1008 (- x700 x850))) (= (x1008 (- x2060 x403)) x1026) (= (div x1536 x242) x98) (= (mod (* x1026 x1545) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1536) (= x1826 x503)) x749) (and (and (= x1826 x681) (> x2137 0) (= (mod (* x2013 x923) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2090) (= x681 (x1008 (- x850 x904))) (= x2137 (x1008 (- x1388 x403))) (= x923 (x1008 (- x2060 x403))) (= x2013 (x1008 (- x850 x700))) (= (div x2090 x2137) x904)) (not x749))) (= (> x700 x850) x749))) x606))) x1812))
(assert (x1906 x1692))
(assert (x1906 x1857))
(assert (x1906 x1271))
(assert (x1906 x1032))
(assert (= (x1941 3670205928) (x541 3670205928)))
(assert (x1906 x1914))
(assert (x1362 x440))
(assert (= (=> (and (= x743 x1989) (<= 0 x1336) (= (ite (= x1175 0) x1561 (ite (= 32 x1175) x1573 (ite (= 64 x1175) x497 (x1276 x1175)))) x1509) (> x1685 0) (= x1459 x1461) (= 3051865383 x2070) (= x1264 (mod (* 32 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x873) (= x1510 (x87 (x1941 15))) (= x723 x735) (= x266 x1001) (= x920 x1130) (= x784 (< x1928 x1705)) (= x497 x1439) (= x1718 x1461) (= (ite (= x1439 0) x1561 (ite (= 32 x1439) x1573 (ite (= x1439 64) x497 (x1276 x1439)))) x1648) (= x551 x92) (not (> 2127478272 x2070)) (= (x87 (x1941 13)) x171) (= (x87 (x1941 16)) x1705) (= x446 x1324) (not (> 2863377861 x2070)) (= x743 x950) (= x373 (x87 (x1941 14))) (= x1175 (x1842 (+ x497 32))) (not (= x2070 3008386744)) (<= x1336 1461501637330902918203684832716283019655932542975) (= x1059 x618) (= x1752 x1206) (>= x1989 0) (<= x1718 1461501637330902918203684832716283019655932542975) (= x387 x1958) (= x1565 (mod (* 32 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2199 x2058) (= (x75 (x541 x1144)) x1685) (<= x1989 1461501637330902918203684832716283019655932542975) (= x873 x1130) (= x1299 x950) (= (x1842 (+ x1264 x1406)) x551) (>= x1718 0) (= x1776 x1928) (= x1206 (x1842 (+ x306 x1565))) (> 3224796394 x2070) (not (< x2070 3008386744)) (not (> 2580288415 x2070))) (and (=> (and (and (= (< x171 x373) x1546) (or (and (and (= (div x1669 x263) x1090) (= x131 (x1008 (- x171 x373))) (= x146 (x1008 (- x171 x1090))) (= x671 (x1008 (- x1928 x1510))) (= x1669 (mod (* x131 x671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1008 (- x1705 x1510)) x263) (< 0 x263) (= x146 x1884)) (not x1546)) (and (and (= (x1842 (+ x280 x171)) x479) (= (mod (* x2083 x694) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2120) (= (x1008 (- x1705 x1510)) x992) (= x2083 (x1008 (- x1928 x1510))) (= x1884 x479) (= x694 (x1008 (- x373 x171))) (> x992 0) (= x280 (div x2120 x992))) x1546))) x784) x862) (=> (and (and (= x1877 0) (= x373 x441)) (not x784)) x1812))) x109))
(assert (x1731 x1562))
(assert (x1906 x661))
(assert (x1906 x1026))
(assert (x1906 x429))
(assert (x1906 x1726))
(assert (= (and x91 (not x20)) x2184))
(assert (x1906 x904))
(assert (x1906 x502))
(assert (= 686821956 (x985 (x1941 686821956))))
(assert (= x554 (and (not x882) x473)))
(assert (x1906 x844))
(assert (x1906 x505))
(assert (x1906 x2082))
(assert (=> (<= x1144 10000) (= (x541 x1144) (x1941 x1144))))
(assert (x1731 x57))
(assert (= x1062 (or x1925 (and (not x1660) x788))))
(assert (x1906 x2010))
(assert (x1906 x987))
(assert (x1906 x1505))
(assert (= (and x978 x1848) x1971))
(assert (= 0 (x1790 x1591)))
(assert (x1906 x234))
(assert (= 0 (x1790 x192)))
(assert (x1906 x681))
(assert (= x294 (=> (and (and (= x631 (x1789 128)) (= (not (= x354 0)) x853) (= x414 (x1789 160))) (and (and (and (= x1729 1816029635) (not (> 954831406 x1729)) (> 1871194811 x1729) (< 0 x355) (not (= 1738207182 x1729)) (< x1729 2127478272) (= 1 x521) (= 1000 x1023) (not (< x1729 1738207182)) (not (> 1439069736 x1729)) (= (x75 (x541 x1144)) x355)) (and (= (or x815 x861) x1695) (= (x720 x1656) x1460) (= 1000 x198) (= x2104 (>= x315 1000)) (> 3714247998 x1233) (= x1111 x326) (<= x1000 1461501637330902918203684832716283019655932542975) (= x1145 (and x2104 x605)) (= x1963 x1263) (= (< 0 x1460) x1721) (= x1048 (mod (* x1460 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 1461501637330902918203684832716283019655932542975 x326) (not (= x1233 3573918927)) (not (< 18446744073709551615 x1460)) (= x150 (x1842 (+ x2154 x1048))) (= x77 x1159) (not (< x1233 3224796394)) (<= 0 x1936) (= (x1842 (+ 31 x1656)) x982) x1145 (not (= 3567393941 x1233)) (= 3586168516 x1233) (not (< x1254 4)) (= 1000 x1210) (not (< x1233 3567393941)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2028) true) (> 224 x2028)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2028))) (= x384 (x1842 (+ 32 x758))) (<= x136 1461501637330902918203684832716283019655932542975) (< 0 x1886) (>= x1000 0) (= x1762 x1383) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1254) true) (< 227 x1254)) (= (x1008 (- x1254 4)) x2028) (= 0 x90) (= (x1842 (+ 128 x384)) x1410) (>= 1461501637330902918203684832716283019655932542975 x1936) (not (> 2127478272 x1233)) (>= 1461501637330902918203684832716283019655932542975 x868) (>= x326 0) (not (< x1254 x150)) (= (x75 (x541 x1144)) x1886) (= (mod (* 32 x1460) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x758) (= x1992 x932) (= x815 (< 18446744073709551615 x1410)) (= x861 (> 128 x1410)) (= x471 x1215) (= x222 x136) (= x1478 x1936) (= x1945 x1111) (not (< 18446744073709551615 x1263)) (= 128 x1598) (= 0 x471) (= x136 x244) (= x90 (ite x1695 1 0)) (= x868 x676) (= x1332 x868) (= (x1842 (+ 32 x1656)) x2154) (= x1656 (x1842 (+ 4 x1963))) (= x1204 x966) (or (and (> x982 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1254 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1254) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x982)) (> x1254 x982))) (< x1233 3812870723) (= x1204 x652))) (and (< 0 x1577) (< x1320 743225245) (> 2127478272 x1320) (= x689 x315) (= 686821956 x1320) (= x1466 x631) (= 1 x983) (= (x75 (x541 x1144)) x1577) (not (< x1320 500647658)) (not (< x1320 596258137)) (not (= x1320 596258137)) (not (= x1320 599290589)) (= (not (= 0 x414)) x454) (< x1320 954831406) (= 1 x854) (= x1926 x454) (= x689 x1466)))) (and (=> (not x1721) x96) (=> (and x1721 (and (= (x720 x2154) x1172) (= x842 (x1842 (+ 32 x2154))) (= x882 (> x1460 1)))) (and (=> (and x882 (and (= x834 (x720 x842)) (= x2208 (> x1460 2)) (= (x1842 (+ 32 x842)) x1118))) (and (=> (not x2208) x96) (=> (and (and (= x1749 (> x1460 3)) (= x670 (x720 x1118)) (= x1528 (x1842 (+ x1118 32)))) x2208) (and (=> x1749 x610) (=> (not x1749) x96))))) (=> (not x882) x96)))))))
(assert (x1906 x1587))
(assert (= x138 (and x1307 x1688)))
(assert (x1906 x1185))
(assert (x1906 x1377))
(assert (= (x1923 (+ (- 128 x711) x755)) 0))
(assert (x1906 x1088))
(assert (x1906 x1194))
(assert (x1906 x754))
(assert (x1822 x2066))
(assert (x1906 x1209))
(assert (= x349 (and (not x424) x1076)))
(assert (x1906 x1193))
(assert (= x1808 (x985 (x541 x1808))))
(assert (x1906 x1024))
(assert (x1906 x65))
(assert (= (and x534 (not x1834)) x2174))
(assert (= x1189 (=> (and (= x291 (x415 (x1941 8))) (= 0 x1289) (= x1500 (x331 x291 255)) (= x621 (ite (< x1700 x76) (x1008 (- x76 x1700)) 0)) (= x1226 255) (= x578 (ite (< x980 x1700) (x1008 (- x1700 x980)) 0)) (= x693 (= x1500 1))) (and (=> (and (not x693) (and (or (and x303 (and (= (x357 18446744073709551615 x1201) x1481) (= x1201 (x415 (x1941 18))) (= x1486 x1481))) (and (= x562 x1486) (not x303))) (= (< 0 x2082) x303))) x841) (=> (and x693 (= x1012 0)) x1075)))))
(assert (x1906 x1326))
(assert (= x1230 (x985 (x541 x1230))))
(assert (x1906 x1847))
(assert (= x288 (or x365 (and x6 (not x160)))))
(assert (x1906 x143))
(assert (x1906 x1226))
(assert (x1906 x149))
(assert (= x375 (and x488 (not x2131))))
(assert (x1906 x787))
(assert (= x971 (x985 (x541 x971))))
(assert (x1906 x546))
(assert (x1906 x61))
(assert (= x587 (x985 (x541 x587))))
(assert (= (x985 (x1941 363856219)) 363856219))
(assert (x1906 x1311))
(assert (= (x985 (x1941 1439069736)) 1439069736))
(assert (x1906 x412))
(assert (x1906 x1045))
(assert (x1906 x1371))
(assert (x1906 x1370))
(assert (x1906 x744))
(assert (x1906 x1794))
(assert (= (x1790 (x1842 (+ 4 x711))) 0))
(assert (x1906 x1264))
(assert (x1906 x2076))
(assert (= x606 (=> (and (= x1355 x1826) (= 1 x1719)) x823)))
(assert (x1906 x1077))
(assert (x1906 x1301))
(assert (x1906 x920))
(assert (= (=> (and (or (and (and (= (x1842 (+ 32 x1655)) x1967) (= (mod (* x1123 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1120)) (not x1061)) x1061) (and (= x786 (x1842 (+ x1655 x81))) (= (= 0 x1123) x1061) (= (mod (* x1123 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x385) (not (> x1123 18446744073709551615)) (= (x1842 (+ 32 x385)) x81))) x1323) x1980))
(assert (= (mod (* 79228162514264337593543950336 x268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1298 x268 96)))
(assert (x1906 x1579))
(assert (= x1241 (=> (= (not (> x1123 1)) x25) (and (=> (= x177 x1899) x486) x25))))
(assert (x1906 x992))
(assert (= 3051865383 (x985 (x1941 3051865383))))
(assert (x1906 x626))
(assert (x1906 x64))
(assert (x1906 x152))
(assert (x1906 x1670))
(assert (x1906 x1892))
(assert (x1906 x2127))
(assert (x1906 x770))
(assert (x1906 x886))
(assert (= x1861 (=> (and (and (= x299 (= x621 0)) (not (= x1350 0))) (or (and (not x299) (and (= x849 (mod (* 1000000000000000000 x621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x398 (div x849 x1350)) (< (* 1000000000000000000 x621) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x621 0) (< 0 x1350) (= x607 x398))) (and x299 (= 0 x607)))) x1184)))
(assert (x2005 x1657))
(assert (x1906 x967))
(assert (x1906 x877))
(assert (x1906 x1131))
(assert (= (x985 (x541 x1838)) x1838))
(assert (x1906 x764))
(assert (x1906 x1529))
(assert (x1906 x363))
(assert (x1906 x1229))
(assert (x1906 x1123))
(assert (x1906 x414))
(assert (x1906 x218))
(assert (= x1381 (or x2204 x22)))
(assert (= x884 (and x1408 (not x1013))))
(assert (x1906 x1140))
(assert (=> (>= 10000 x107) (= (x541 x107) (x1941 x107))))
(assert (= (x985 (x1941 3567393941)) 3567393941))
(assert (x1906 x225))
(assert (= x1283 (and x833 (not x1148))))
(assert (= (x985 (x541 x1497)) x1497))
(assert (= x447 (and x1408 x1013)))
(assert (x1906 x1334))
(assert (x1906 x825))
(assert (= 0 (x238 (+ (- x1406 x262) x1676))))
(assert (= (and x28 (not x1975)) x289))
(assert (= (and (not x590) x2078) x1280))
(assert (x1906 x1030))
(assert (x1906 x1191))
(assert (x1906 x1983))
(assert (= x1597 (and x1944 x1043)))
(assert (x1906 x569))
(assert (x1906 x291))
(assert (x1906 x264))
(assert (x1906 x319))
(assert (x1906 x105))
(assert (x1906 x750))
(assert (x1906 x976))
(assert (x1906 x674))
(assert (x1906 x1653))
(assert (x1906 x952))
(assert (= (x541 4294967296) (x1941 4294967296)))
(assert (= (x985 (x1941 2039265891)) 2039265891))
(assert (x1906 x432))
(assert (x1906 x1321))
(assert (x1906 x783))
(assert (= x658 (and x475 x1357)))
(assert (= (x985 (x1941 112349551054952423155953805921267728290102753186399332250345724850365349756928)) 112349551054952423155953805921267728290102753186399332250345724850365349756928))
(assert (= (and x2171 (not x1981)) x137))
(assert (= x1240 (and x2026 x704)))
(assert (x1906 x776))
(assert (= x2150 (x985 (x541 x2150))))
(assert (x1906 x1289))
(assert (x1906 x1522))
(assert (x1906 x793))
(assert (x1906 x1528))
(assert (= (x985 (x1941 2064814097)) 2064814097))
(assert (x1362 x1313))
(assert (= (or x1971 x343) x193))
(assert (x1906 x2011))
(assert (x1906 x119))
(assert (x1906 x440))
(assert (= x1503 (and (not x1043) x1944)))
(assert (= (x985 (x1941 115792089210356248762697446949407573530086143415211086033019366971273553903615)) 115792089210356248762697446949407573530086143415211086033019366971273553903615))
(assert (x1906 x902))
(assert (x1906 x1967))
(assert (x1362 x218))
(assert (x1906 x801))
(assert (x1906 x1233))
(assert (x1906 x1403))
(assert (x1906 x2068))
(assert (= 0 (x1923 (+ x755 (- x1294 x711)))))
(assert (x1731 x119))
(assert (x1906 x1430))
(assert (x1906 x715))
(assert (= x121 (x985 (x541 x121))))
(assert (= x2035 (x985 (x541 x2035))))
(assert (x1906 x1435))
(assert (x1906 x1574))
(assert (x1906 x2061))
(assert (= (and x1721 x900) x473))
(assert (x1906 x1025))
(assert (x1906 x1550))
(assert (x1906 x31))
(assert (= (=> (= (not (> x1123 1)) x182) (and (=> (= x2011 x1655) x1980) x182)) x1530))
(assert (= (x271 (+ x449 (- x1310 x786))) 0))
(assert (x1906 x122))
(assert (= (x985 (x1941 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (= x82 (or x1504 x519)))
(assert (x1906 x737))
(assert (x1906 x2093))
(assert (x1362 x567))
(assert (x1906 x1510))
(assert (= 0 (x1790 x558)))
(assert (x1906 x1478))
(assert (= (x541 307731845) (x1941 307731845)))
(assert (x1906 x611))
(assert (= x1323 (=> (and (= (< 0 x1123) x1443) (= 0 x609)) (and (=> (and (= x786 x540) (not x1443)) x585) (=> (and (= x1724 (= 0 x570)) x1443) (and (=> (and (and (= 1000000000000000000 x247) (= x167 x786)) x1724) x1046) (=> (and (not x1724) (and (or (and (and (not (= 1779675522 x1105)) (not (= x181 0)) (= (x1282 64) x449) (= x434 (x1842 (+ 32 x648))) (= x452 0) (= (x1008 (- x434 x449)) x512) (= x199 (x1849 (x1842 (+ 4 x786)))) (= (x1842 (+ x1990 x786)) x1806) (= x175 x1806) (= x1552 x310) (= 36 x1659) (= (x75 (x541 x1144)) x1501) (= x786 x249) (= x310 (x72 x249)) (= x298 x1607) (= (x1008 (- x1659 4)) x470) (= (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2125) x1990) (= (x1842 (+ x512 31)) x2125) (= x648 (x698 64)) (= 96 x8) (= (x75 (x541 274184521717934524641157099916833587280)) x181) (= x199 x1607) (= x399 x727) (= x1105 3028789119) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x512) (and (= (<= x512 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x512)))) (= x1618 (< x470 32)) (= (x1842 (+ x786 4)) x399) (= x1548 (= x1274 (x1849 x786))) (not x1618) (= x1229 (x357 79228162514264337593543950335 x298)) (not (< x1659 4)) (> x1501 0) x1548) (not x1224)) (and (and (= x1552 1000000000000000000) (= x786 x175)) x1224)) (and (= x879 (x134 x1285)) (= (x1373 (x1941 0) (x1941 17) 0) x1285) (= (= x879 0) x1224)))) x1539)))))))
(assert (x1906 x668))
(assert (x1906 x1698))
(assert (x1906 x191))
(assert (x1906 x71))
(assert (x1822 x1005))
(assert (x1906 x1922))
(assert (x1906 x1730))
(assert (= x704 (or x2144 x219)))
(assert (= (x1790 x2175) 0))
(assert (x1906 x2210))
(assert (x1906 x774))
(assert (= (x985 (x1941 3586168516)) 3586168516))
(assert (x1362 x571))
(assert (x1906 x1507))
(assert (x1906 x212))
(assert (x1906 x386))
(assert (x1906 x370))
(assert (x1906 x1811))
(assert (= x1335 (and x293 x1081)))
(assert (x1906 x2132))
(assert (= (or (and x1343 (not x771)) x1540) x644))
(assert (x1906 x1536))
(assert (x1362 26959946660873538059280334323183841250429478006438217036639575736320))
(assert (x1906 x1378))
(assert (x1906 x301))
(assert (x1906 x102))
(assert (=> (<= x2016 10000) (= (x1941 x2016) (x541 x2016))))
(assert (= x1039 (or x147 x644)))
(assert (x1906 x1939))
(assert (x1906 x1690))
(assert (= (x985 (x1941 238709543)) 238709543))
(assert (x1906 x201))
(assert (x1906 x378))
(assert (x1906 x1845))
(assert (x1906 x49))
(assert (= (x985 (x1941 4294967295)) 4294967295))
(assert (x1906 x1372))
(assert (x1362 115792089210356248762697446949407573530086143415211086033019366971273553903615))
(assert (= (div x1642 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x331 x1642 255)))
(assert (x1906 x23))
(assert (x1906 x1272))
(assert (= (x1941 238709543) (x541 238709543)))
(assert (x1906 x1498))
(assert (x1906 x1275))
(assert (= x214 (and x1198 (not x1801))))
(assert (= (and x1442 (not x2020)) x1738))
(assert (x1906 x32))
(assert (= (x541 2580288415) (x1941 2580288415)))
(assert (= (x985 (x1941 3506505391)) 3506505391))
(assert (= x1493 (or x257 x597)))
(assert (x1906 x1459))
(assert (x1906 x205))
(assert (x1906 x323))
(assert (x1906 x1501))
(assert (= (x985 (x541 x1291)) x1291))
(assert (x1906 x277))
(assert (=> (>= 10000 x1940) (= (x1941 x1940) (x541 x1940))))
(assert (= (x985 (x1941 274184521717934524641157099916833587280)) 274184521717934524641157099916833587280))
(assert (x1906 x107))
(assert (x1906 x731))
(assert (x1906 x130))
(assert (x1906 x1952))
(assert (x1906 x285))
(assert (x1822 x561))
(assert (= (x1941 2596148429267413814265248164610048) (x541 2596148429267413814265248164610048)))
(assert (= (x541 363856219) (x1941 363856219)))
(assert (= (or x1407 x397) x12))
(assert (x1906 x710))
(assert (x1906 x1885))
(assert (x1906 x1676))
(assert (= x62 (=> (and (= 1 x1576) (= x946 x1909)) x1894)))
(assert (x1906 x170))
(assert (x1906 x587))
(assert (x1906 x572))
(assert (x1822 x1144))
(assert (x1906 x98))
(assert (x1906 x752))
(assert (x1906 x1598))
(assert (= (x1941 3812870723) (x541 3812870723)))
(assert (x1906 x2175))
(assert (x1906 x1027))
(assert (= (and x1062 x333) x28))
(assert (x1906 x1780))
(assert (x1906 x1715))
(assert (= (and x1484 (not x1549)) x519))
(assert (x1906 x1099))
(assert (= x1623 (or x1917 x173)))
(assert (= x1710 (x985 (x541 x1710))))
(assert (= (and (not x649) x553) x597))
(assert (not x537))
(assert (= x1083 (=> (and (= x1610 64) (= x626 (x1842 (+ 32 x1426))) (= x497 x1271) (= x1279 (x1844 x2190)) (= x1927 (x1842 (+ x2190 32))) (= x1426 (x1842 (+ x497 64))) (= x695 (> x1279 0))) (and (=> (and x695 (and (= (> x1279 1) x2081) (= (x1842 (+ x626 32)) x16) (= x674 (x141 x1927)) (= x938 (x1842 (+ x1927 32))))) (and (=> (and (and (= x16 x1444) (= x953 1) (= x938 x1494)) (not x2081)) x1253) (=> (and x2081 (and (= (< 2 x1279) x1231) (= x825 (x565 x938)) (= x1294 (x1842 (+ x938 32))) (= x1888 (x1842 (+ x16 32))))) (and (=> (and (not x1231) (and (= x953 2) (= x1444 x1888) (= x1494 x1294))) x1253) (=> (and (and (= (x586 x1294) x2114) (= (x1842 (+ 32 x1294)) x1036) (= x2025 (x1842 (+ 32 x1888))) (= (> x1279 3) x1688)) x1231) (and (=> x1688 x2202) (=> (and (and (= x953 3) (= x1494 x1036) (= x2025 x1444)) (not x1688)) x1253))))))) (=> (and (not x695) (and (= 0 x953) (= x626 x1444) (= x1927 x1494))) x1253)))))
(assert (x1906 x2073))
(assert (x1906 x1686))
(assert (= (x985 (x1941 3573918927)) 3573918927))
(assert (x1906 x273))
(assert (x1906 x670))
(assert (x1906 x1607))
(assert (x1906 x623))
(assert (x1906 x452))
(assert (x1906 x1733))
(assert (x1906 x1671))
(assert (x1906 x943))
(assert (= (x541 3714247998) (x1941 3714247998)))
(assert (x1906 x820))
(assert (= 0 (x271 (+ (- x520 x786) x449))))
(assert (= (x1790 x40) 0))
(assert (x1906 x1482))
(assert (x1906 x427))
(assert (= x544 x1966))
(assert (x1906 x1534))
(assert (x1906 x1989))
(assert (= 0 (x271 (+ x449 (- x1780 x786)))))
(assert (= (x1941 3573918927) (x541 3573918927)))
(assert (= (div x1314 64) (x331 x1314 6)))
(assert (x1822 x393))
(assert (x1906 x1778))
(assert (x1906 x1655))
(assert (x1906 x2179))
(assert (x1906 x1500))
(assert (x1906 x648))
(assert (x1906 x1324))
(assert (x1906 x1523))
(assert (x1906 x2196))
(assert (= (and x178 x2087) x144))
(assert (= 0 (x1790 x1929)))
(assert (x1906 x799))
(assert (x1906 x1274))
(assert (x1822 x886))
(assert (= x2187 (x985 (x541 x2187))))
(assert (x1906 x1959))
(assert (x1906 x1066))
(assert (x1906 x926))
(assert (= 0 (x1923 (+ x755 (- x967 x711)))))
(assert (x1906 x923))
(assert (= (x1790 x967) 0))
(assert (= (and x1774 x1784) x1080))
(assert (x1906 x14))
(assert (x1906 x2129))
(assert (x1906 x421))
(assert (x1906 x1195))
(assert (x1906 x2035))
(assert (x1822 x1239))
(assert (x1906 x571))
(assert (x1906 x1700))
(assert (x1906 x197))
(assert (x1906 x176))
(assert (x1906 x372))
(assert (x1906 x652))
(assert (= (or x258 x872) x1988))
(assert (x1906 x728))
(assert (x1906 x567))
(assert (= (x985 (x1941 503383097)) 503383097))
(assert (= (=> (and (or (and (not x297) (and (= x1843 (x357 255 x1662)) (= (x1096 (x1941 7)) x1662) (= (= x1843 0) x1658))) (and x297 (= x1658 x297))) (and (= x1599 (ite x1986 1 0)) (= (x1842 (+ x1410 x234)) x1268) (= x2040 (x1842 (+ x995 31))) (= x1440 (> x1410 x1268)) (= x2102 x1936) (= (> x1268 18446744073709551615) x1782) (= x2022 (x1842 (+ 32 x995))) (= x1562 (x1842 (+ 31 x947))) (= x1859 (x357 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1562)) (= 0 x1599) (= x77 x2050) (= x234 (x1842 (+ 32 x1859))) (= x652 x1879) (= x947 (x720 x995)) (= x995 (x1842 (+ x1992 4))) (not (> x947 18446744073709551615)) (= x117 x1123) (= x1383 x1250) (= x1085 (x1842 (+ x2022 x947))) (not (< x1254 x1085)) (= (or x1782 x1440) x1986) (= (> x1889 x961) x297) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1254) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2040)) (and (= (<= x2040 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1254)) (> x1254 x2040))) (= (x1402 128) x117) (not (> x932 18446744073709551615)) (= (x1842 (+ 32 x1410)) x1920) (= x1872 (x1842 (+ x947 x1920))))) x482) x96))
(assert (x1822 x1325))
(assert (x1906 x1216))
(assert (= x1645 (=> (and (= (= x353 0) x1660) (or x1660 (not x1660))) x1796)))
(assert (= (x1790 x1677) 0))
(assert (x1731 x1761))
(assert (x1906 x1291))
(assert (x1906 x538))
(assert (x1906 x870))
(assert (= 0 (x238 (+ (- x1294 x262) x1676))))
(assert (= (=> (and (= x1480 (= x216 0)) (= (x134 (x1941 2)) x216)) (and (=> (and x1480 (and (= x438 (x272 x1920)) (not (< 18446744073709551615 x2042)) (= x719 (mod (* 32 x928) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x272 x1920) x189) (= x1929 (x1842 (+ x2042 x1920))) (> 3 x438) (not (< x632 x1498)) (= (x1842 (+ 32 x1929)) x409) (= (x272 x1410) x1193) (= x1781 (or x322 x1697)) (= x474 (x272 x1410)) (= x1697 (< 18446744073709551615 x1932)) (= (x1842 (+ x409 x719)) x1498) (= (x1842 (+ x1929 31)) x1209) (= x928 (x272 x1929)) (not (> x928 18446744073709551615)) (= (mod (* x928 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1207) (= (x272 x1447) x2042) (= (> x928 0) x406) (= 0 x1646) (= (x1842 (+ x540 x104)) x1932) (not (> x438 2)) (= x632 (x1842 (+ x1920 x1193))) (not (or (and (< x474 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x474) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x474))) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1209) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x632)) (and (< x1209 x632) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1209) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x632)))) (= (x1842 (+ 32 x1207)) x104) (= x438 0) (not (or (> x1193 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1193)) (< x1193 64)))) (= x1447 (x1842 (+ 32 x1920))) (= x322 (< x1932 x540)) (= (ite x1781 1 0) x1646) (= (x1842 (+ 32 x540)) x395) (> 3 x189))) (and (=> (and x406 (and (= (x1842 (+ 32 x395)) x1580) (= (x1594 x409) x498) (= (> x928 1) x2139) (= x617 (x1842 (+ x409 32))))) (and (=> (and (and (= x1981 (< 2 x928)) (= x520 (x1842 (+ 32 x617))) (= x2119 (x581 x617)) (= (x1842 (+ x1580 32)) x2189)) x2139) (and (=> (and (and (= (x1842 (+ x2189 32)) x1065) (= (x1842 (+ x520 32)) x2175) (= (x959 x520) x68) (= (> x928 3) x1416)) x1981) (and (=> (not x1416) x736) (=> x1416 x1016))) (=> (not x1981) x736))) (=> (not x2139) x736))) (=> (not x406) x736))) (=> (and (not x1480) (and (or x213 (and (and (= x1699 (x1842 (+ x540 32))) (= x2063 (mod (* x1339 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x213))) (and (= x1771 (x1842 (+ x1213 32))) (= x1954 1) (= x980 (x134 (x1941 20))) (= (x272 128) x1955) (= 255 x345) (not (> x140 x207)) (= x1535 (x1008 (- x207 x140))) (< x570 x1955) (= x27 (= 1 x858)) (= x207 (x134 (x1941 2))) (= x394 (ite x27 0 x1383)) (= (x134 (x1941 8)) x1305) (= (mod (* x570 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2133) (= x1653 (x1842 (+ x1370 128))) (= x262 (x1842 (+ x1771 x540))) (= (x272 x1653) x140) (= x1213 (mod (* 32 x1339) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (< 18446744073709551615 x1339)) (= (x134 (x1941 19)) x107) (= x2196 (x272 128)) (= (x1842 (+ 32 x2133)) x1370) (= (= x1339 0) x213) (= (x331 x1305 255) x858) (= (x1008 (- x2196 1)) x1339)))) x734))) x585))
(assert (x1906 x780))
(assert (x1906 x1518))
(assert (x1906 x1638))
(assert (= x1728 (and x800 x469)))
(assert (x1906 x437))
(assert (x1906 x620))
(assert (x1906 x1494))
(assert (x1906 x679))
(assert (x1906 x1017))
(assert (x1906 x1327))
(assert (x1906 x1258))
(assert (= (and x691 x1946) x733))
(assert (x1906 x919))
(assert (x1906 x851))
(assert (= (x1941 1738207182) (x541 1738207182)))
(assert (x1906 x2001))
(assert (x1906 x1318))
(assert (= (=> (and (= x1614 (x1470 128)) (= x1070 (< 2 x1614))) (and (=> (and x1070 (and (= x1882 2) (= x951 (= x1144 x1497)) (< 2 x713) (= x23 (x1470 x2071)) (< 2 x1334) (= (x1842 (+ x94 32)) x1793) (= (x1470 x1793) x640) (= (x1470 x2190) x713) (= (x1470 x2062) x1334) (= (x1842 (+ 32 x2052)) x2071))) (and (=> x951 x1966) (=> (and (= (= x971 x1144) x1754) (not x951)) (and (=> (not x1754) x544) (=> x1754 x1966))))) (=> (and (not x1070) (and (= x1643 x1561) (= x497 x1839))) x1083))) x2095))
(assert (x1906 x148))
(assert (x1906 x1175))
(check-sat)
(exit)