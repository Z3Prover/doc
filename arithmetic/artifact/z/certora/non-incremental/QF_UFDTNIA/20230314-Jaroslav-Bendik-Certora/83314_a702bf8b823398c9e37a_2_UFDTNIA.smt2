(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1730 0)) (((x74 (x975 Int)) (x1347 (x801 x1730) (x829 Int)) (x619 (x1279 x1730) (x338 x1730) (x428 Int)))))
(declare-fun x832 () Int)
(declare-fun x527 () Int)
(declare-fun x923 () Bool)
(declare-fun x420 () Int)
(declare-fun x168 () Int)
(declare-fun x1710 () Int)
(declare-fun x1017 () Int)
(declare-fun x1784 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x134 () Int)
(declare-fun x1339 () Int)
(declare-fun x1776 () Int)
(declare-fun x291 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x1480 () Int)
(declare-fun x203 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x418 () Int)
(declare-fun x887 () Int)
(declare-fun x932 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x867 () Int)
(declare-fun x927 () Int)
(declare-fun x1040 () x1730)
(declare-fun x310 () Int)
(declare-fun x1133 () Int)
(declare-fun x796 () Int)
(declare-fun x1630 () Bool)
(declare-fun x639 () Int)
(declare-fun x539 () Int)
(declare-fun x1218 () Bool)
(declare-fun x1077 () Int)
(declare-fun x1681 () Int)
(declare-fun x708 () Int)
(declare-fun x68 () Int)
(declare-fun x1282 () Int)
(declare-fun x1467 () Int)
(declare-fun x206 (Int) Int)
(declare-fun x1655 () Int)
(declare-fun x279 () Int)
(declare-fun x98 () Bool)
(declare-fun x1753 () Int)
(declare-fun x132 () Int)
(declare-fun x484 () x1730)
(declare-fun x140 () Int)
(declare-fun x116 () Bool)
(declare-fun x359 () x1730)
(declare-fun x699 () Int)
(declare-fun x309 () Bool)
(declare-fun x1303 (x1730) Int)
(declare-fun x399 () Int)
(declare-fun x1485 () Bool)
(declare-fun x1568 () Int)
(declare-fun x726 (Int) Int)
(declare-fun x757 () Int)
(declare-fun x727 () Int)
(declare-fun x528 () Bool)
(declare-fun x368 () x1730)
(declare-fun x72 () Bool)
(declare-fun x1152 () Int)
(declare-fun x87 () Int)
(declare-fun x1351 () Int)
(declare-fun x1075 () Bool)
(declare-fun x1236 () Int)
(declare-fun x1148 () Int)
(declare-fun x1247 () Bool)
(declare-fun x637 () Bool)
(declare-fun x1683 () Int)
(declare-fun x1685 () Bool)
(declare-fun x1137 () Int)
(declare-fun x108 () Bool)
(declare-fun x55 () Bool)
(declare-fun x212 () Int)
(declare-fun x471 () Int)
(declare-fun x80 () Int)
(declare-fun x1544 () Bool)
(declare-fun x721 () Int)
(declare-fun x41 () Int)
(declare-fun x952 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1139 () Int)
(declare-fun x544 () Int)
(declare-fun x719 () Int)
(declare-fun x1212 () Int)
(declare-fun x1383 () Int)
(declare-fun x421 () Int)
(declare-fun x1179 () Bool)
(declare-fun x1238 () Int)
(declare-fun x731 () Bool)
(declare-fun x426 () Int)
(declare-fun x148 () Int)
(declare-fun x1626 () Bool)
(declare-fun x1660 () Int)
(declare-fun x871 () Int)
(declare-fun x1346 () Bool)
(declare-fun x1779 () Int)
(declare-fun x1014 () Int)
(declare-fun x184 () Int)
(declare-fun x244 () Int)
(declare-fun x77 () Bool)
(declare-fun x1772 () Int)
(declare-fun x819 () Int)
(declare-fun x403 () Int)
(declare-fun x455 () Int)
(declare-fun x252 () Int)
(declare-fun x474 () Int)
(declare-fun x1340 () Bool)
(declare-fun x815 () Int)
(declare-fun x1145 () Int)
(declare-fun x249 () Int)
(declare-fun x1766 () Int)
(declare-fun x890 () Int)
(declare-fun x567 () x1730)
(declare-fun x1371 () Int)
(declare-fun x1739 () x1730)
(declare-fun x1406 () Bool)
(declare-fun x28 () x1730)
(declare-fun x1256 () Bool)
(declare-fun x732 () Bool)
(declare-fun x996 () Int)
(declare-fun x580 () Int)
(declare-fun x1612 () Int)
(declare-fun x185 () Int)
(declare-fun x739 () Int)
(declare-fun x1230 () Int)
(declare-fun x813 () Int)
(declare-fun x1588 () Int)
(declare-fun x918 () Int)
(declare-fun x261 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x878 () Bool)
(declare-fun x483 () Int)
(declare-fun x286 () Int)
(declare-fun x1005 () Bool)
(declare-fun x607 () Bool)
(declare-fun x850 () Int)
(declare-fun x781 () Int)
(declare-fun x753 () Int)
(declare-fun x564 () Int)
(declare-fun x326 () Bool)
(declare-fun x618 () Bool)
(declare-fun x61 () Int)
(declare-fun x204 () Int)
(declare-fun x713 () Int)
(declare-fun x1151 () Int)
(declare-fun x1641 () Bool)
(declare-fun x457 () Int)
(declare-fun x43 () Int)
(declare-fun x1153 () Bool)
(declare-fun x182 () Int)
(declare-fun x1086 () Int)
(declare-fun x413 () Int)
(declare-fun x1098 () Bool)
(declare-fun x40 () Int)
(declare-fun x553 () Bool)
(declare-fun x393 (Int Int) Int)
(declare-fun x1686 () Int)
(declare-fun x824 () Int)
(declare-fun x748 () Bool)
(declare-fun x568 () Int)
(declare-fun x1033 () Int)
(declare-fun x1734 () x1730)
(declare-fun x499 () Int)
(declare-fun x1526 () Int)
(declare-fun x1111 () Int)
(declare-fun x1056 () Bool)
(declare-fun x293 () Bool)
(declare-fun x1635 () Int)
(declare-fun x1003 () Int)
(declare-fun x462 () Int)
(declare-fun x631 () Int)
(declare-fun x1675 () Int)
(declare-fun x444 () Int)
(declare-fun x560 () Bool)
(declare-fun x498 () Bool)
(declare-fun x1251 () Int)
(declare-fun x1457 () Int)
(declare-fun x1720 () Bool)
(declare-fun x1615 () Int)
(declare-fun x667 () Bool)
(declare-fun x472 () Int)
(declare-fun x321 () Bool)
(declare-fun x1453 () Int)
(declare-fun x690 () x1730)
(declare-fun x670 () Int)
(declare-fun x1552 () Int)
(declare-fun x194 () Int)
(declare-fun x1421 () Int)
(declare-fun x1565 () Int)
(declare-fun x297 () Int)
(declare-fun x1505 () Bool)
(declare-fun x353 () Int)
(declare-fun x628 () Int)
(declare-fun x882 () Int)
(declare-fun x1286 () Bool)
(declare-fun x1508 () Int)
(declare-fun x500 () Int)
(declare-fun x434 () Int)
(declare-fun x376 (x1730) Int)
(declare-fun x827 () Int)
(declare-fun x980 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x632 () Int)
(declare-fun x518 () Int)
(declare-fun x807 () Bool)
(declare-fun x720 () x1730)
(declare-fun x1778 () Bool)
(declare-fun x415 () Int)
(declare-fun x161 () Int)
(declare-fun x1132 () Bool)
(declare-fun x1427 () Int)
(declare-fun x730 () Int)
(declare-fun x1091 () Int)
(declare-fun x129 () Int)
(declare-fun x1424 () Int)
(declare-fun x1354 () Int)
(declare-fun x1605 () Int)
(declare-fun x150 () Bool)
(declare-fun x1050 () x1730)
(declare-fun x225 () Int)
(declare-fun x570 () Bool)
(declare-fun x594 () Int)
(declare-fun x1770 () Int)
(declare-fun x1511 () Int)
(declare-fun x1483 () Bool)
(declare-fun x1109 () Int)
(declare-fun x600 () Int)
(declare-fun x1090 () Bool)
(declare-fun x677 () Bool)
(declare-fun x523 (Int Int) Int)
(declare-fun x1643 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x1180 () Int)
(declare-fun x1444 () Int)
(declare-fun x56 () Int)
(declare-fun x1625 () Bool)
(declare-fun x383 () Bool)
(declare-fun x477 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1688 () Int)
(declare-fun x180 () Int)
(declare-fun x1479 () Bool)
(declare-fun x1733 () Int)
(declare-fun x652 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x915 () Bool)
(declare-fun x1654 () Int)
(declare-fun x1052 () Int)
(declare-fun x154 () Bool)
(declare-fun x162 () Int)
(declare-fun x1229 () Int)
(declare-fun x485 () Int)
(declare-fun x104 () Int)
(declare-fun x1563 () Bool)
(declare-fun x1275 () Int)
(declare-fun x780 () Int)
(declare-fun x790 () Bool)
(declare-fun x767 () Int)
(declare-fun x1128 () Bool)
(declare-fun x765 () Int)
(declare-fun x118 () Bool)
(declare-fun x1714 () Int)
(declare-fun x783 () Int)
(declare-fun x684 () Int)
(declare-fun x177 () Int)
(declare-fun x219 (Int) Int)
(declare-fun x390 () Bool)
(declare-fun x771 () Int)
(declare-fun x1556 () Int)
(declare-fun x1200 () Int)
(declare-fun x1108 () Int)
(declare-fun x233 () Bool)
(declare-fun x158 () x1730)
(declare-fun x351 () x1730)
(declare-fun x762 () Int)
(declare-fun x1171 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x892 () Int)
(declare-fun x340 () Int)
(declare-fun x712 () Int)
(declare-fun x367 () Int)
(declare-fun x183 () Int)
(declare-fun x171 () Int)
(declare-fun x1355 () Int)
(declare-fun x1121 () Int)
(declare-fun x470 () Bool)
(declare-fun x416 () Int)
(declare-fun x705 () x1730)
(declare-fun x1204 () Int)
(declare-fun x480 () Bool)
(declare-fun x758 () Bool)
(declare-fun x675 () Bool)
(declare-fun x573 () Bool)
(declare-fun x633 () Int)
(declare-fun x1702 () Bool)
(declare-fun x1708 () Int)
(declare-fun x1039 () Bool)
(declare-fun x729 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x1023 () Int)
(declare-fun x1524 () Int)
(declare-fun x163 () Int)
(declare-fun x1007 () Int)
(declare-fun x1125 () Bool)
(declare-fun x1335 () Int)
(declare-fun x1657 () Int)
(declare-fun x1290 () Int)
(declare-fun x1574 () Int)
(declare-fun x806 () Bool)
(declare-fun x1689 () Int)
(declare-fun x990 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x1706 () Int)
(declare-fun x209 () Bool)
(declare-fun x438 () Bool)
(declare-fun x885 () Int)
(declare-fun x760 (Int) Int)
(declare-fun x121 () Int)
(declare-fun x315 () Int)
(declare-fun x873 () Int)
(declare-fun x123 () Int)
(declare-fun x1458 () Int)
(declare-fun x442 () Int)
(declare-fun x1678 () Bool)
(declare-fun x884 () Int)
(declare-fun x1786 () x1730)
(declare-fun x9 () Int)
(declare-fun x1682 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x851 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x584 () Int)
(declare-fun x937 () Int)
(declare-fun x215 () Bool)
(declare-fun x1173 () Int)
(declare-fun x190 () Bool)
(declare-fun x1366 () Int)
(declare-fun x389 () Int)
(declare-fun x408 () Int)
(declare-fun x1382 () Bool)
(declare-fun x959 () x1730)
(declare-fun x440 () Bool)
(declare-fun x1644 () Int)
(declare-fun x624 () Int)
(declare-fun x849 () Int)
(declare-fun x654 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x1602 () Int)
(declare-fun x1000 () Int)
(declare-fun x251 () Int)
(declare-fun x1353 (Int) Int)
(declare-fun x1781 () Int)
(declare-fun x900 () Bool)
(declare-fun x1633 () x1730)
(declare-fun x1048 () Int)
(declare-fun x1645 () Int)
(declare-fun x1560 () Bool)
(declare-fun x295 () Int)
(declare-fun x989 () x1730)
(declare-fun x216 () Bool)
(declare-fun x794 () Int)
(declare-fun x1628 () x1730)
(declare-fun x496 () Int)
(declare-fun x1661 () Bool)
(declare-fun x744 () Int)
(declare-fun x896 () Int)
(declare-fun x1359 () x1730)
(declare-fun x1535 () Bool)
(declare-fun x585 () Bool)
(declare-fun x469 () Bool)
(declare-fun x1211 () Int)
(declare-fun x166 () Int)
(declare-fun x494 () Int)
(declare-fun x1402 () Bool)
(declare-fun x861 () Int)
(declare-fun x621 () Int)
(declare-fun x258 () Int)
(declare-fun x139 () Int)
(declare-fun x687 () Int)
(declare-fun x1727 () Bool)
(declare-fun x1239 () Int)
(declare-fun x50 () Int)
(declare-fun x1206 () Int)
(declare-fun x1081 () Int)
(declare-fun x852 () Bool)
(declare-fun x282 () Bool)
(declare-fun x127 () Int)
(declare-fun x875 () Int)
(declare-fun x1547 () Int)
(declare-fun x1274 () Int)
(declare-fun x242 () Int)
(declare-fun x782 () Bool)
(declare-fun x798 () Int)
(declare-fun x1436 () Int)
(declare-fun x593 () Bool)
(declare-fun x1185 () Int)
(declare-fun x169 () Int)
(declare-fun x750 () Int)
(declare-fun x868 () Int)
(declare-fun x276 () Bool)
(declare-fun x20 () Bool)
(declare-fun x576 () Int)
(declare-fun x262 () Int)
(declare-fun x1579 () Bool)
(declare-fun x1326 () x1730)
(declare-fun x1650 () Int)
(declare-fun x766 () Int)
(declare-fun x307 () Int)
(declare-fun x1131 () Int)
(declare-fun x559 () Bool)
(declare-fun x1304 () Int)
(declare-fun x308 (Int) Int)
(declare-fun x331 () Bool)
(declare-fun x1769 () Int)
(declare-fun x269 () Int)
(declare-fun x1266 () Int)
(declare-fun x312 () Int)
(declare-fun x443 () Int)
(declare-fun x770 () Int)
(declare-fun x533 () Bool)
(declare-fun x608 () Int)
(declare-fun x186 () Int)
(declare-fun x843 () Bool)
(declare-fun x24 () Int)
(declare-fun x1407 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x414 () Int)
(declare-fun x1029 () Int)
(declare-fun x1780 () Int)
(declare-fun x311 () Int)
(declare-fun x1464 () Bool)
(declare-fun x636 () Int)
(declare-fun x1070 () Int)
(declare-fun x686 () Bool)
(declare-fun x844 () Bool)
(declare-fun x1748 () Int)
(declare-fun x1261 () Int)
(declare-fun x350 () Int)
(declare-fun x174 () Bool)
(declare-fun x120 () Int)
(declare-fun x192 () Bool)
(declare-fun x1700 (Int) x1730)
(declare-fun x1469 () Bool)
(declare-fun x534 () Int)
(declare-fun x738 () Bool)
(declare-fun x1591 () Int)
(declare-fun x848 () Int)
(declare-fun x1364 () Int)
(declare-fun x818 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x1064 () Int)
(declare-fun x482 () Int)
(declare-fun x92 () Int)
(declare-fun x54 () x1730)
(declare-fun x387 () Bool)
(declare-fun x928 () Bool)
(declare-fun x911 () Int)
(declare-fun x1006 () Int)
(declare-fun x981 () Int)
(declare-fun x1567 () Int)
(declare-fun x1564 () Int)
(declare-fun x1400 () Int)
(declare-fun x662 () Int)
(declare-fun x324 () Int)
(declare-fun x320 () Int)
(declare-fun x1189 () Int)
(declare-fun x1428 () Int)
(declare-fun x1621 () Int)
(declare-fun x45 () Int)
(declare-fun x1664 () Int)
(declare-fun x1465 () Int)
(declare-fun x1750 () x1730)
(declare-fun x1502 () Bool)
(declare-fun x679 () Int)
(declare-fun x1607 () Int)
(declare-fun x1130 () Bool)
(declare-fun x1363 () Int)
(declare-fun x423 (Int) Int)
(declare-fun x1041 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1647 () Int)
(declare-fun x1638 () Int)
(declare-fun x1348 () Bool)
(declare-fun x1707 () x1730)
(declare-fun x863 () Bool)
(declare-fun x285 () x1730)
(declare-fun x142 () Int)
(declare-fun x151 () Bool)
(declare-fun x1246 () x1730)
(declare-fun x658 () Int)
(declare-fun x546 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x646 () Bool)
(declare-fun x153 () Bool)
(declare-fun x1726 () x1730)
(declare-fun x828 () Int)
(declare-fun x243 () Int)
(declare-fun x1691 () x1730)
(declare-fun x1728 () Bool)
(declare-fun x577 () x1730)
(declare-fun x1008 () Int)
(declare-fun x921 () x1730)
(declare-fun x1375 () Int)
(declare-fun x371 () Int)
(declare-fun x1001 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x1412 () Int)
(declare-fun x1271 () Int)
(declare-fun x1248 () Int)
(declare-fun x447 () Bool)
(declare-fun x779 () Int)
(declare-fun x1031 () Int)
(declare-fun x1676 () Bool)
(declare-fun x508 () Int)
(declare-fun x274 () Int)
(declare-fun x122 () Int)
(declare-fun x1787 () Int)
(declare-fun x384 () x1730)
(declare-fun x450 () Int)
(declare-fun x88 () Bool)
(declare-fun x505 () Int)
(declare-fun x466 () Int)
(declare-fun x1673 () Int)
(declare-fun x1156 () Bool)
(declare-fun x1488 () Int)
(declare-fun x445 () Int)
(declare-fun x18 () Bool)
(declare-fun x1541 () Int)
(declare-fun x34 () Int)
(declare-fun x1158 () Int)
(declare-fun x1191 () Bool)
(declare-fun x698 () Int)
(declare-fun x519 () Int)
(declare-fun x1344 () Bool)
(declare-fun x298 () Int)
(declare-fun x1669 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1177 () Int)
(declare-fun x89 () Int)
(declare-fun x613 () Int)
(declare-fun x616 () Int)
(declare-fun x733 () Int)
(declare-fun x1378 () Int)
(declare-fun x1334 () Int)
(declare-fun x769 () x1730)
(declare-fun x357 () Int)
(declare-fun x1217 () Int)
(declare-fun x1713 () Int)
(declare-fun x1116 () Int)
(declare-fun x703 () Int)
(declare-fun x1327 () Int)
(declare-fun x659 () x1730)
(declare-fun x1456 () Int)
(declare-fun x436 () Int)
(declare-fun x83 () Bool)
(declare-fun x246 () Int)
(declare-fun x1558 () Bool)
(declare-fun x644 () Int)
(declare-fun x93 () Int)
(declare-fun x540 () Int)
(declare-fun x270 () Bool)
(declare-fun x697 () Int)
(declare-fun x352 () Int)
(declare-fun x700 () Int)
(declare-fun x1373 () Int)
(declare-fun x676 () x1730)
(declare-fun x854 () Bool)
(declare-fun x60 () Int)
(declare-fun x1507 () Int)
(declare-fun x1322 () Bool)
(declare-fun x1349 () Int)
(declare-fun x1614 () Int)
(declare-fun x448 () Bool)
(declare-fun x1696 () Int)
(declare-fun x437 () Int)
(declare-fun x1082 () Int)
(declare-fun x373 () Int)
(declare-fun x1208 () Int)
(declare-fun x809 () Bool)
(declare-fun x814 () Bool)
(declare-fun x197 () Bool)
(declare-fun x59 () Bool)
(declare-fun x535 () Bool)
(declare-fun x1036 (Int) Int)
(declare-fun x681 () Bool)
(declare-fun x968 () Int)
(declare-fun x514 () Bool)
(declare-fun x1285 () Int)
(declare-fun x1025 () x1730)
(declare-fun x1520 () Int)
(declare-fun x355 () Bool)
(declare-fun x497 () Bool)
(declare-fun x110 () Int)
(declare-fun x35 () Bool)
(declare-fun x969 (Int Int) Int)
(declare-fun x922 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x230 () Bool)
(declare-fun x1268 () Int)
(declare-fun x1611 () Int)
(declare-fun x1582 () Int)
(declare-fun x94 () Int)
(declare-fun x578 () Int)
(declare-fun x558 () Bool)
(declare-fun x165 () Bool)
(declare-fun x29 (x1730) Int)
(declare-fun x193 () Int)
(declare-fun x831 () Int)
(declare-fun x606 () Bool)
(declare-fun x1604 () Int)
(declare-fun x1722 () Int)
(declare-fun x1296 () Int)
(declare-fun x1499 () Bool)
(declare-fun x714 () Int)
(declare-fun x1332 () Int)
(declare-fun x210 () Int)
(declare-fun x728 () Int)
(declare-fun x130 () Int)
(declare-fun x1118 () Int)
(declare-fun x866 () Int)
(declare-fun x598 () Bool)
(declare-fun x397 () Int)
(declare-fun x37 () Int)
(declare-fun x531 () Bool)
(declare-fun x1277 () Int)
(declare-fun x214 () Int)
(declare-fun x1754 () Int)
(declare-fun x1078 () Int)
(declare-fun x1494 () Bool)
(declare-fun x895 () Bool)
(declare-fun x1418 () Int)
(declare-fun x281 () Int)
(declare-fun x776 () Int)
(declare-fun x1570 () Int)
(declare-fun x1434 () Bool)
(declare-fun x152 () Int)
(declare-fun x517 () Bool)
(declare-fun x1601 () Int)
(declare-fun x865 () Bool)
(declare-fun x1698 () Int)
(declare-fun x314 () x1730)
(declare-fun x1037 () Int)
(declare-fun x1219 () Int)
(declare-fun x30 () Bool)
(declare-fun x590 () Bool)
(declare-fun x696 () Bool)
(declare-fun x1361 (Int) Int)
(declare-fun x1054 () Bool)
(declare-fun x1021 (Int) Int)
(declare-fun x1609 () Bool)
(declare-fun x1603 () Int)
(declare-fun x785 () Int)
(declare-fun x625 () Bool)
(declare-fun x938 () Int)
(declare-fun x1763 () Int)
(declare-fun x588 () Int)
(declare-fun x1269 () Int)
(declare-fun x581 () Int)
(declare-fun x1325 () Bool)
(declare-fun x1214 () Int)
(declare-fun x1666 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x1449 () Int)
(declare-fun x1538 () Int)
(declare-fun x710 () Int)
(declare-fun x515 () Bool)
(declare-fun x401 () Int)
(declare-fun x988 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x1253 () Int)
(declare-fun x425 () Bool)
(declare-fun x1287 () Int)
(declare-fun x267 () Int)
(declare-fun x334 () x1730)
(declare-fun x503 () Int)
(declare-fun x530 () Int)
(declare-fun x173 () Int)
(declare-fun x273 () Int)
(declare-fun x1398 () Int)
(declare-fun x1590 () Int)
(declare-fun x626 () Int)
(declare-fun x532 () Bool)
(declare-fun x688 () Int)
(declare-fun x1100 () x1730)
(declare-fun x795 () Int)
(declare-fun x1376 () Int)
(declare-fun x1723 () Bool)
(declare-fun x1768 () Int)
(declare-fun x985 () Int)
(declare-fun x39 () Int)
(declare-fun x491 () Int)
(declare-fun x522 () Int)
(declare-fun x1571 () Bool)
(declare-fun x953 () Int)
(declare-fun x788 () Int)
(declare-fun x23 () x1730)
(declare-fun x1481 () x1730)
(declare-fun x1167 () Int)
(declare-fun x301 () Bool)
(declare-fun x42 () Bool)
(declare-fun x542 () Bool)
(declare-fun x589 () Int)
(declare-fun x1549 () x1730)
(declare-fun x369 () Int)
(declare-fun x1677 () Int)
(declare-fun x1328 () Bool)
(declare-fun x886 () Bool)
(declare-fun x38 () Bool)
(declare-fun x1415 () Int)
(declare-fun x343 () Int)
(declare-fun x147 () Int)
(declare-fun x422 () Int)
(declare-fun x465 () Int)
(declare-fun x493 () Bool)
(declare-fun x1646 () Int)
(declare-fun x1725 () Int)
(declare-fun x656 () Int)
(declare-fun x787 () Int)
(declare-fun x461 (Int) Int)
(declare-fun x595 () Int)
(declare-fun x1106 () Bool)
(declare-fun x1155 () Int)
(declare-fun x13 () x1730)
(declare-fun x891 () Int)
(declare-fun x1194 () Int)
(declare-fun x933 () Bool)
(declare-fun x247 () Int)
(declare-fun x1281 () Bool)
(declare-fun x678 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x501 () Int)
(declare-fun x1307 () Int)
(declare-fun x1610 () Bool)
(declare-fun x1620 () Int)
(declare-fun x965 () Int)
(declare-fun x95 () Int)
(declare-fun x1093 () Int)
(declare-fun x742 () Bool)
(declare-fun x1265 () Int)
(declare-fun x954 () Bool)
(declare-fun x715 () Bool)
(declare-fun x925 () Int)
(declare-fun x323 () Int)
(declare-fun x1250 () Int)
(declare-fun x955 () Bool)
(declare-fun x899 () Int)
(declare-fun x231 () Bool)
(declare-fun x672 () Int)
(declare-fun x651 () Bool)
(declare-fun x1537 () Int)
(declare-fun x14 (Int) Int)
(declare-fun x1197 () Bool)
(declare-fun x722 () Bool)
(declare-fun x48 () Int)
(declare-fun x234 () Int)
(declare-fun x617 () Int)
(declare-fun x1176 () Bool)
(declare-fun x1652 () Int)
(declare-fun x303 () Int)
(declare-fun x226 () Int)
(declare-fun x348 () Int)
(declare-fun x622 () Int)
(declare-fun x994 () Int)
(declare-fun x822 () Int)
(declare-fun x547 (Int) Int)
(declare-fun x1705 () Int)
(declare-fun x870 () Int)
(declare-fun x1719 () Int)
(declare-fun x366 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x1474 () Int)
(declare-fun x374 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x586 () Int)
(declare-fun x1701 () Int)
(declare-fun x647 () Int)
(declare-fun x1071 () Bool)
(declare-fun x15 () Bool)
(declare-fun x977 () Int)
(declare-fun x1166 () Int)
(declare-fun x176 () Bool)
(declare-fun x1374 () Int)
(declare-fun x97 (Int) Int)
(declare-fun x316 () Int)
(declare-fun x1419 () Int)
(declare-fun x115 () Bool)
(declare-fun x67 () Int)
(declare-fun x1735 () Int)
(declare-fun x1651 () Int)
(declare-fun x1192 () Bool)
(declare-fun x970 () Int)
(declare-fun x1099 () Bool)
(declare-fun x1672 () Int)
(declare-fun x1530 () Bool)
(declare-fun x1168 () Int)
(declare-fun x775 () Int)
(declare-fun x402 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1525 () Int)
(declare-fun x575 () Int)
(declare-fun x855 () Int)
(declare-fun x372 () Int)
(declare-fun x361 () Int)
(declare-fun x467 () Int)
(declare-fun x8 () Int)
(declare-fun x701 () Int)
(declare-fun x641 () Int)
(declare-fun x1105 () Int)
(declare-fun x1561 () Int)
(declare-fun x453 () Bool)
(declare-fun x459 () x1730)
(declare-fun x468 () Int)
(declare-fun x1631 () Bool)
(declare-fun x1089 () Int)
(declare-fun x566 () Int)
(declare-fun x441 () Bool)
(declare-fun x283 () Bool)
(declare-fun x808 () Bool)
(declare-fun x1435 () Int)
(declare-fun x839 () Int)
(declare-fun x160 () Int)
(declare-fun x1306 () Int)
(declare-fun x1475 () Bool)
(declare-fun x986 () Int)
(declare-fun x1010 () Bool)
(declare-fun x1343 () Int)
(declare-fun x1157 () x1730)
(declare-fun x1299 () Int)
(declare-fun x378 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x107 () x1730)
(declare-fun x65 () Int)
(declare-fun x1107 () Int)
(declare-fun x181 () Int)
(declare-fun x1352 () Int)
(declare-fun x1518 () Int)
(declare-fun x1491 () Int)
(declare-fun x125 () Bool)
(declare-fun x473 () Int)
(declare-fun x138 () Int)
(declare-fun x1583 () Int)
(declare-fun x1058 () Bool)
(declare-fun x826 () Int)
(declare-fun x816 () Bool)
(declare-fun x449 () Int)
(declare-fun x79 () Int)
(declare-fun x611 () Bool)
(declare-fun x6 () Int)
(declare-fun x660 () Int)
(declare-fun x1637 () Int)
(declare-fun x1182 () Bool)
(declare-fun x526 () Int)
(declare-fun x648 () Bool)
(declare-fun x1232 () Int)
(declare-fun x1242 () Int)
(declare-fun x1308 () Int)
(declare-fun x1600 () Int)
(declare-fun x877 () x1730)
(declare-fun x76 () Int)
(declare-fun x1742 () Int)
(declare-fun x1640 () Bool)
(declare-fun x7 () Int)
(declare-fun x345 () Int)
(declare-fun x365 () Bool)
(declare-fun x961 () Int)
(declare-fun x1432 () Bool)
(declare-fun x1278 () Int)
(declare-fun x100 () Int)
(declare-fun x774 () Int)
(declare-fun x419 () Bool)
(declare-fun x375 () Int)
(declare-fun x27 () Bool)
(declare-fun x1295 () x1730)
(declare-fun x1074 () Int)
(declare-fun x32 () Int)
(declare-fun x1486 () Int)
(declare-fun x191 () Bool)
(declare-fun x1490 () Int)
(declare-fun x248 () Int)
(declare-fun x84 () Int)
(declare-fun x550 () Int)
(declare-fun x322 () x1730)
(declare-fun x1447 () Int)
(declare-fun x1587 () Int)
(declare-fun x906 () Bool)
(declare-fun x569 () Int)
(declare-fun x1129 () Bool)
(declare-fun x228 () Int)
(declare-fun x1751 () Bool)
(declare-fun x864 () Int)
(declare-fun x1276 () Bool)
(declare-fun x908 () Bool)
(declare-fun x797 () Int)
(declare-fun x358 (Int Int) Int)
(declare-fun x1573 () Bool)
(declare-fun x683 () Bool)
(declare-fun x145 () Int)
(declare-fun x1553 () Int)
(declare-fun x1136 () Int)
(declare-fun x363 () Int)
(declare-fun x1510 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x926 () Int)
(declare-fun x805 () Bool)
(declare-fun x960 () Bool)
(declare-fun x1697 () Int)
(declare-fun x1047 () Bool)
(declare-fun x328 () Int)
(declare-fun x888 () x1730)
(declare-fun x1087 () Bool)
(declare-fun x630 () Int)
(declare-fun x1519 () Int)
(declare-fun x1704 () Bool)
(declare-fun x512 () Int)
(declare-fun x1551 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x1585 () Int)
(declare-fun x536 () Int)
(declare-fun x1397 () Int)
(declare-fun x90 () Int)
(declare-fun x1293 () Int)
(declare-fun x1482 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1442 () Int)
(declare-fun x395 () Int)
(declare-fun x1195 () Int)
(declare-fun x582 () Int)
(declare-fun x759 () Int)
(declare-fun x264 () Bool)
(declare-fun x1178 () Int)
(declare-fun x538 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x704 () Int)
(declare-fun x1581 () Bool)
(declare-fun x1543 () Int)
(declare-fun x1656 () Bool)
(declare-fun x929 () Int)
(declare-fun x917 () Int)
(declare-fun x1162 () Bool)
(declare-fun x1284 () Int)
(declare-fun x141 () Int)
(declare-fun x85 () Bool)
(declare-fun x1315 () Int)
(declare-fun x96 () Int)
(declare-fun x164 () Int)
(declare-fun x250 () Int)
(declare-fun x71 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x223 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1063 () Int)
(declare-fun x1627 () x1730)
(declare-fun x1559 () Int)
(declare-fun x945 () Int)
(declare-fun x620 () Int)
(declare-fun x1345 () Int)
(declare-fun x513 () Int)
(declare-fun x337 () x1730)
(declare-fun x275 () x1730)
(declare-fun x904 () Bool)
(declare-fun x1313 () Int)
(declare-fun x1577 () Int)
(declare-fun x572 () Int)
(declare-fun x364 () Int)
(declare-fun x1761 () Int)
(declare-fun x1138 () Bool)
(declare-fun x615 () Int)
(declare-fun x950 () Int)
(declare-fun x255 () x1730)
(declare-fun x22 () Int)
(declare-fun x1184 () Int)
(declare-fun x224 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x44 () x1730)
(declare-fun x1245 () Int)
(declare-fun x1252 () Int)
(declare-fun x792 () Int)
(declare-fun x511 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x880 () Int)
(declare-fun x327 () Bool)
(declare-fun x1154 () Int)
(declare-fun x133 () Int)
(declare-fun x1504 () Int)
(declare-fun x680 () Int)
(declare-fun x601 () x1730)
(declare-fun x956 () Int)
(declare-fun x103 (x1730) Int)
(declare-fun x1356 () Int)
(declare-fun x1030 () Int)
(declare-fun x1310 () Bool)
(declare-fun x1187 () Int)
(declare-fun x75 () Bool)
(declare-fun x16 () Int)
(declare-fun x565 () Int)
(declare-fun x113 () x1730)
(declare-fun x1413 () x1730)
(declare-fun x718 () Bool)
(declare-fun x245 () Int)
(declare-fun x1509 (Int) Int)
(declare-fun x821 () Int)
(declare-fun x21 () Int)
(declare-fun x380 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x460 () Int)
(declare-fun x196 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x25 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1372 () Int)
(declare-fun x1532 () Int)
(declare-fun x649 () Int)
(declare-fun x1687 () x1730)
(declare-fun x263 () Int)
(declare-fun x235 () Bool)
(declare-fun x253 () Int)
(declare-fun x1718 () Int)
(declare-fun x1309 () Int)
(declare-fun x1642 () Bool)
(declare-fun x596 () Int)
(declare-fun x1576 () Bool)
(declare-fun x1747 () Int)
(declare-fun x898 () Int)
(declare-fun x1270 () Int)
(declare-fun x1529 () x1730)
(declare-fun x1142 () Bool)
(declare-fun x763 () Bool)
(declare-fun x857 () Int)
(declare-fun x339 () Bool)
(declare-fun x1534 () Int)
(declare-fun x1448 (x1730) Int)
(declare-fun x1693 () Int)
(declare-fun x342 () Bool)
(declare-fun x724 () Int)
(declare-fun x966 () Bool)
(declare-fun x755 () Bool)
(declare-fun x635 () Int)
(declare-fun x1062 () Int)
(declare-fun x379 () Bool)
(declare-fun x1440 () Int)
(declare-fun x159 () Int)
(declare-fun x492 () Bool)
(declare-fun x456 () Bool)
(declare-fun x439 () Int)
(declare-fun x1103 () Int)
(declare-fun x874 () Bool)
(declare-fun x907 () Int)
(declare-fun x1653 () Bool)
(declare-fun x642 () Int)
(declare-fun x1068 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x557 () Int)
(declare-fun x1302 () Int)
(declare-fun x1599 () Bool)
(declare-fun x835 () Bool)
(declare-fun x840 (Int) Int)
(declare-fun x382 () Bool)
(declare-fun x761 () Int)
(declare-fun x1597 () Int)
(declare-fun x1262 () Int)
(declare-fun x901 () Int)
(declare-fun x146 () Int)
(declare-fun x1711 () Int)
(declare-fun x1446 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x1080 () Int)
(declare-fun x889 () Int)
(declare-fun x610 () Int)
(declare-fun x1404 () Int)
(declare-fun x1771 () Bool)
(declare-fun x1617 () Int)
(declare-fun x1517 () Int)
(declare-fun x1066 () Bool)
(declare-fun x529 () Bool)
(declare-fun x820 () Int)
(declare-fun x187 () Int)
(declare-fun x3 () Int)
(declare-fun x217 () Int)
(declare-fun x1300 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x114 () Int)
(declare-fun x910 () Bool)
(declare-fun x1741 () Int)
(declare-fun x1545 () Int)
(declare-fun x478 () Int)
(declare-fun x1161 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x330 () Int)
(declare-fun x1743 () Int)
(declare-fun x1288 (Int) Int)
(declare-fun x689 () Int)
(declare-fun x236 () Int)
(declare-fun x1539 () Int)
(declare-fun x717 () Bool)
(declare-fun x432 () Int)
(declare-fun x1496 () Bool)
(declare-fun x673 () Int)
(declare-fun x143 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x919 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x734 () Int)
(declare-fun x1146 () x1730)
(declare-fun x1199 () Int)
(declare-fun x317 () Bool)
(declare-fun x1113 () Int)
(declare-fun x1198 () Int)
(declare-fun x347 () Bool)
(declare-fun x951 () Int)
(declare-fun x1401 () Int)
(declare-fun x746 () Bool)
(declare-fun x488 () Bool)
(declare-fun x400 () Int)
(declare-fun x872 () Int)
(declare-fun x1280 () Int)
(declare-fun x1542 () Int)
(declare-fun x489 () Int)
(declare-fun x1744 () Bool)
(declare-fun x10 () Int)
(declare-fun x1092 () Int)
(declare-fun x272 () Int)
(declare-fun x1321 () Bool)
(declare-fun x846 () x1730)
(declare-fun x1380 () Int)
(declare-fun x941 () Int)
(declare-fun x556 () Int)
(declare-fun x810 () Int)
(declare-fun x876 () Int)
(declare-fun x49 () Bool)
(declare-fun x1338 () Int)
(declare-fun x167 () Bool)
(declare-fun x306 () Bool)
(declare-fun x664 () Bool)
(declare-fun x858 () Int)
(declare-fun x149 () Bool)
(declare-fun x17 (Int Int) Int)
(declare-fun x1126 () Int)
(declare-fun x1785 () Int)
(declare-fun x189 () Int)
(declare-fun x1695 () Int)
(declare-fun x1140 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x1493 () Int)
(declare-fun x1659 () Int)
(declare-fun x939 () Int)
(declare-fun x1729 () Int)
(declare-fun x259 () Int)
(declare-fun x208 () Int)
(declare-fun x740 () Int)
(declare-fun x1452 () Bool)
(declare-fun x1724 () x1730)
(declare-fun x1767 () x1730)
(declare-fun x1301 () Bool)
(declare-fun x1738 () Int)
(declare-fun x592 () Bool)
(declare-fun x1164 () Int)
(declare-fun x695 () Int)
(declare-fun x1512 () Int)
(declare-fun x5 () Int)
(declare-fun x277 () Int)
(declare-fun x1096 () Int)
(declare-fun x964 () Int)
(declare-fun x1223 () Int)
(declare-fun x11 () Int)
(declare-fun x524 () Int)
(declare-fun x756 () Bool)
(declare-fun x36 () Int)
(declare-fun x1414 () Int)
(declare-fun x931 () Int)
(declare-fun x46 () Bool)
(declare-fun x800 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x136 () Int)
(declare-fun x1783 () Bool)
(declare-fun x1749 () Int)
(declare-fun x1408 () Int)
(declare-fun x905 () Int)
(declare-fun x1546 () Int)
(declare-fun x1492 () Int)
(declare-fun x751 () Bool)
(declare-fun x1263 () Int)
(declare-fun x1596 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x1450 () Int)
(declare-fun x552 () Bool)
(declare-fun x1147 () Int)
(declare-fun x1049 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x1088 () Int)
(declare-fun x1386 () Int)
(declare-fun x1102 () Int)
(declare-fun x1101 () Int)
(declare-fun x506 () Int)
(declare-fun x537 () Int)
(declare-fun x997 () Bool)
(declare-fun x318 () Int)
(declare-fun x1009 () Bool)
(declare-fun x126 () Bool)
(declare-fun x237 () Int)
(declare-fun x665 () Int)
(declare-fun x725 () Int)
(declare-fun x914 () Int)
(declare-fun x1329 () Int)
(declare-fun x117 () Bool)
(declare-fun x63 () Bool)
(declare-fun x1420 () Int)
(declare-fun x1692 () Int)
(declare-fun x62 () Int)
(declare-fun x1684 () Int)
(declare-fun x221 () Int)
(declare-fun x563 () Int)
(declare-fun x405 () Bool)
(declare-fun x1035 () Int)
(declare-fun x958 (Int) Int)
(declare-fun x692 () Int)
(declare-fun x702 () Int)
(declare-fun x883 () Int)
(declare-fun x1170 () Int)
(declare-fun x1773 () Int)
(declare-fun x156 () Int)
(declare-fun x817 () Bool)
(declare-fun x971 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x155 () Int)
(declare-fun x1387 () Int)
(declare-fun x1305 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x1172 () Int)
(declare-fun x1746 () x1730)
(declare-fun x1336 () Int)
(declare-fun x984 () Bool)
(declare-fun x1500 () Int)
(declare-fun x845 () Bool)
(declare-fun x1273 () x1730)
(declare-fun x490 () x1730)
(declare-fun x668 () Bool)
(declare-fun x238 () Bool)
(declare-fun x481 () Int)
(declare-fun x360 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x597 () Int)
(declare-fun x1636 () x1730)
(declare-fun x106 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x691 () Bool)
(declare-fun x709 () Bool)
(declare-fun x385 () Int)
(declare-fun x1699 () Int)
(declare-fun x1756 () Bool)
(declare-fun x398 () Int)
(declare-fun x1350 () Int)
(declare-fun x1169 () Int)
(declare-fun x1665 () Int)
(declare-fun x571 () x1730)
(declare-fun x982 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1175 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x1365 () x1730)
(declare-fun x1160 () Int)
(declare-fun x645 () Int)
(declare-fun x1124 () Int)
(declare-fun x993 () Int)
(declare-fun x370 () Int)
(declare-fun x1498 () Int)
(declare-fun x487 () Bool)
(declare-fun x1323 () Int)
(declare-fun x1634 () Int)
(declare-fun x1368 (x1730) Int)
(declare-fun x1272 () Bool)
(declare-fun x386 () Bool)
(declare-fun x1740 () Int)
(declare-fun x354 () Int)
(declare-fun x1004 () Int)
(declare-fun x1127 () Int)
(declare-fun x1259 () Bool)
(declare-fun x288 () Int)
(declare-fun x972 () Int)
(declare-fun x549 () Int)
(declare-fun x102 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x290 () Int)
(declare-fun x1320 () Int)
(declare-fun x475 () Int)
(declare-fun x1619 () Int)
(declare-fun x1291 () Int)
(declare-fun x743 () Int)
(declare-fun x1466 () Bool)
(declare-fun x1314 () Int)
(declare-fun x1717 () Int)
(declare-fun x555 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x509 () Int)
(declare-fun x694 () Bool)
(declare-fun x404 () Int)
(declare-fun x1042 () Int)
(declare-fun x1523 () x1730)
(declare-fun x836 () Int)
(declare-fun x1745 () Bool)
(declare-fun x685 () Int)
(declare-fun x1002 () Int)
(declare-fun x949 () Int)
(declare-fun x1235 () Bool)
(declare-fun x195 () Int)
(declare-fun x706 () Bool)
(declare-fun x1389 () Int)
(declare-fun x1297 () Bool)
(declare-fun x612 () Bool)
(declare-fun x64 () Int)
(declare-fun x1578 () Bool)
(declare-fun x287 () x1730)
(declare-fun x1632 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x634 () Int)
(declare-fun x1367 () Bool)
(declare-fun x947 () Int)
(declare-fun x170 () Int)
(declare-fun x623 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x574 () Int)
(declare-fun x336 () Bool)
(declare-fun x599 () Bool)
(declare-fun x1224 () Int)
(declare-fun x768 () Int)
(declare-fun x268 () Bool)
(declare-fun x1639 () Int)
(declare-fun x112 () Bool)
(declare-fun x341 () Int)
(declare-fun x516 () Int)
(declare-fun x495 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x1513 () Int)
(declare-fun x202 () Bool)
(declare-fun x296 () Int)
(declare-fun x1112 () Int)
(declare-fun x902 () Int)
(declare-fun x232 () Bool)
(declare-fun x1094 () Int)
(declare-fun x1255 () Int)
(declare-fun x1022 () Int)
(declare-fun x33 () Int)
(declare-fun x897 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1476 () Int)
(declare-fun x388 () Int)
(declare-fun x1244 () Int)
(declare-fun x1470 () Bool)
(declare-fun x838 () Bool)
(declare-fun x974 () Bool)
(declare-fun x1241 () Int)
(declare-fun x543 () Int)
(declare-fun x869 () Int)
(declare-fun x207 () Bool)
(declare-fun x1193 () Int)
(declare-fun x1215 () Bool)
(declare-fun x266 () Int)
(declare-fun x1586 () Int)
(declare-fun x227 () Int)
(declare-fun x1555 () Int)
(declare-fun x1737 () Bool)
(declare-fun x335 () Int)
(declare-fun x1595 () Int)
(declare-fun x1758 () Bool)
(declare-fun x948 () Int)
(declare-fun x1390 () Int)
(declare-fun x1762 () Bool)
(declare-fun x1788 () Int)
(declare-fun x1209 () Int)
(declare-fun x1471 () Int)
(declare-fun x476 () Bool)
(declare-fun x1663 () Int)
(declare-fun x823 () Int)
(declare-fun x1379 () Int)
(declare-fun x1528 () Int)
(declare-fun x1018 () Bool)
(declare-fun x548 () Int)
(declare-fun x1489 () Int)
(declare-fun x319 () Bool)
(declare-fun x583 () Int)
(declare-fun x1222 () Int)
(declare-fun x344 () Int)
(declare-fun x1459 () Int)
(declare-fun x1104 () Int)
(declare-fun x325 () Int)
(declare-fun x1623 () Bool)
(declare-fun x1264 () Int)
(declare-fun x2 () Int)
(declare-fun x1254 () Int)
(declare-fun x119 () Int)
(declare-fun x486 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x1381 () Int)
(declare-fun x591 () Bool)
(declare-fun x1316 () Int)
(declare-fun x913 () Bool)
(declare-fun x433 () Bool)
(declare-fun x211 () Bool)
(declare-fun x406 () Int)
(declare-fun x834 () Int)
(declare-fun x881 () Bool)
(declare-fun x66 () Int)
(declare-fun x213 () Bool)
(declare-fun x916 () Int)
(declare-fun x707 () Int)
(declare-fun x392 () x1730)
(declare-fun x1324 () Int)
(declare-fun x1670 () Int)
(declare-fun x69 () Int)
(declare-fun x47 () Int)
(declare-fun x983 () Bool)
(declare-fun x257 () Int)
(declare-fun x1051 () Int)
(declare-fun x1445 () Int)
(declare-fun x1045 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x587 () Int)
(declare-fun x942 () Int)
(declare-fun x640 () Int)
(declare-fun x12 () Bool)
(declare-fun x666 () Int)
(declare-fun x909 () Int)
(declare-fun x764 () Int)
(declare-fun x653 () Bool)
(declare-fun x53 () Int)
(declare-fun x1120 () Int)
(declare-fun x305 () Int)
(declare-fun x175 () Int)
(declare-fun x693 () Int)
(declare-fun x507 () Int)
(declare-fun x1629 () Int)
(declare-fun x962 () Int)
(declare-fun x205 () Int)
(declare-fun x999 () Int)
(declare-fun x1069 () x1730)
(declare-fun x1468 () Bool)
(declare-fun x579 () Int)
(declare-fun x239 () Int)
(declare-fun x452 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x1388 () Int)
(declare-fun x260 () Int)
(declare-fun x1594 () Int)
(declare-fun x1624 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x1522 () Int)
(declare-fun x410 () Int)
(declare-fun x1084 () Int)
(declare-fun x614 () Int)
(declare-fun x1437 () Int)
(declare-fun x879 () Int)
(declare-fun x1055 () Int)
(declare-fun x562 () Int)
(declare-fun x661 () Int)
(declare-fun x73 () Int)
(declare-fun x1460 () Int)
(declare-fun x349 () Int)
(declare-fun x1085 () Int)
(declare-fun x525 () Int)
(declare-fun x1759 (Int) Int)
(declare-fun x935 () Int)
(declare-fun x943 () Bool)
(declare-fun x521 () Int)
(declare-fun x1667 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x430 () Int)
(declare-fun x973 () Int)
(declare-fun x1765 () Int)
(declare-fun x1079 () Int)
(declare-fun x179 () Int)
(declare-fun x1454 () Int)
(declare-fun x793 () Bool)
(declare-fun x1292 () Int)
(declare-fun x222 () x1730)
(declare-fun x1312 () Bool)
(declare-fun x671 () Bool)
(declare-fun x561 () x1730)
(declare-fun x1548 () Int)
(declare-fun x26 () Bool)
(declare-fun x479 () Bool)
(declare-fun x1764 () Int)
(declare-fun x551 () Int)
(declare-fun x1249 () Bool)
(declare-fun x51 () Int)
(declare-fun x1416 () Bool)
(declare-fun x131 () Bool)
(declare-fun x435 () Int)
(declare-fun x1 () x1730)
(declare-fun x741 () Int)
(declare-fun x1671 () Int)
(declare-fun x963 () Bool)
(declare-fun x99 () Int)
(declare-fun x407 () Bool)
(declare-fun x998 () Int)
(declare-fun x657 () Int)
(declare-fun x862 () Int)
(declare-fun x859 () Int)
(declare-fun x333 () Int)
(declare-fun x1027 () Bool)
(declare-fun x240 () Bool)
(declare-fun x284 () Bool)
(declare-fun x735 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x1566 () Int)
(declare-fun x1357 () Int)
(declare-fun x137 () Bool)
(declare-fun x220 () x1730)
(declare-fun x944 () Int)
(declare-fun x199 () Int)
(declare-fun x830 () Int)
(declare-fun x91 () Int)
(declare-fun x1190 () Int)
(declare-fun x723 () x1730)
(declare-fun x329 (Int) Int)
(declare-fun x124 () Int)
(declare-fun x346 () Int)
(declare-fun x1097 () Int)
(declare-fun x1422 () Int)
(declare-fun x643 () Int)
(declare-fun x903 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x833 () Int)
(declare-fun x1044 () Int)
(declare-fun x1648 () Int)
(declare-fun x1618 () Int)
(declare-fun x752 () Int)
(declare-fun x294 () Bool)
(declare-fun x57 () Int)
(declare-fun x784 () Int)
(declare-fun x464 () Bool)
(declare-fun x957 () Bool)
(declare-fun x201 () Bool)
(declare-fun x946 () Bool)
(define-fun x19 ((x1730 x1730) (x1028 Int)) x1730 (ite ((_ is x1347) x1730) (x1347 (x801 x1730) (+ (x829 x1730) x1028)) (ite ((_ is x619) x1730) (x619 (x1279 x1730) (x338 x1730) (+ (x428 x1730) x1028)) (x74 (+ x1028 (x975 x1730))))))
(define-fun x1114 ((x332 Int)) Int (ite (and (< x332 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x332)) x332 (- x332 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1721 ((x332 Int)) Int (ite (and (>= x332 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x332 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x332) x332))
(define-fun x1438 ((x1043 Int)) Bool (and (< x1043 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1043 0)))
(define-fun x629 ((x1043 Int)) Bool (and (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1043) x1043) (= (x393 x1043 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1043)))
(define-fun x1095 ((x1043 Int)) Bool (and (= 0 (x393 x1043 0)) (= (x393 0 x1043) 0)))
(define-fun x992 ((x1043 Int)) Bool (= (x393 x1043 x1043) x1043))
(define-fun x1115 ((x1043 Int)) Bool (and (x1095 x1043) (x992 x1043) (x629 x1043)))
(define-fun x1774 ((x1043 Int) (x1477 Int)) Bool (= (x393 x1043 x1477) (x393 x1477 x1043)))
(define-fun x802 ((x1043 Int) (x1477 Int)) Bool (and (>= (x393 x1043 x1477) 0) (=> (<= 0 x1477) (<= (x393 x1043 x1477) x1477)) (=> (>= x1043 0) (<= (x393 x1043 x1477) x1043))))
(define-fun x1616 ((x1043 Int) (x1477 Int)) Bool (and (x1774 x1043 x1477) (x802 x1043 x1477)))
(define-fun x128 ((x1043 Int)) Bool (= (+ (mod x1043 32) (x393 x1043 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x1043 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1515 ((x1043 Int)) Bool (and (x128 x1043) (x1616 x1043 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x300 ((x1043 Int)) Bool (= (mod x1043 1461501637330902918203684832716283019655932542976) (x393 x1043 1461501637330902918203684832716283019655932542975)))
(define-fun x396 ((x1043 Int)) Bool (and (x1616 x1043 1461501637330902918203684832716283019655932542975) (x300 x1043)))
(define-fun x674 ((x1043 Int)) Bool (= (mod x1043 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (x393 x1043 115792089237316195423570985008687907853269984665640564039457584007913129639680) (mod x1043 256))))
(define-fun x111 ((x1043 Int)) Bool (and (x674 x1043) (x1616 x1043 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(define-fun x749 ((x1043 Int)) Bool (= (x393 x1043 18446744073709551615) (mod x1043 18446744073709551616)))
(define-fun x609 ((x1043 Int)) Bool (and (x749 x1043) (x1616 x1043 18446744073709551615)))
(define-fun x1123 ((x1043 Int)) Bool (= (mod x1043 2) (x393 x1043 1)))
(define-fun x912 ((x1043 Int)) Bool (and (x1616 x1043 1) (x1123 x1043)))
(define-fun x1712 ((x1043 Int)) Bool (= (mod x1043 79228162514264337593543950336) (x393 x1043 79228162514264337593543950335)))
(define-fun x1370 ((x1043 Int)) Bool (and (x1712 x1043) (x1616 x1043 79228162514264337593543950335)))
(define-fun x711 ((x1043 Int)) Bool (= (x393 x1043 115792089237316195417293883273301227089434195242512125785869492901042639077375) (- x1043 (x393 x1043 6277101735386680763835789423128438253588091106870490562560))))
(define-fun x504 ((x1043 Int)) Bool (and (x711 x1043) (x1616 x1043 115792089237316195417293883273301227089434195242512125785869492901042639077375)))
(define-fun x1396 ((x1043 Int)) Bool (= (+ (mod x1043 79228162514264337593543950336) (x393 x1043 6277101735386680763835789423128438253588091106870490562560)) (mod x1043 6277101735386680763835789423207666416102355444464034512896)))
(define-fun x627 ((x1043 Int)) Bool (and (x1396 x1043) (x1616 x1043 6277101735386680763835789423128438253588091106870490562560)))
(define-fun x302 ((x1043 Int)) Bool (= (mod x1043 4294967296) (x393 x1043 4294967295)))
(define-fun x1516 ((x1043 Int)) Bool (and (x302 x1043) (x1616 x1043 4294967295)))
(define-fun x1575 ((x1043 Int)) Bool (= (+ (x393 x1043 115792089237316195423570985008687907853269984665561335876943319670319585689600) (mod x1043 79228162514264337593543950336)) (mod x1043 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1736 ((x1043 Int)) Bool (and (x1616 x1043 115792089237316195423570985008687907853269984665561335876943319670319585689600) (x1575 x1043)))
(define-fun x847 ((x1043 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x358 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1043)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x358 x1043 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1360 ((x1043 Int)) Bool (and (= (x358 0 x1043) x1043) (= x1043 (x358 x1043 0))))
(define-fun x789 ((x1043 Int)) Bool (= x1043 (x358 x1043 x1043)))
(define-fun x554 ((x1043 Int)) Bool (and (x1360 x1043) (x847 x1043) (x789 x1043)))
(define-fun x772 ((x1043 Int) (x1477 Int)) Bool (= (x358 x1043 x1477) (x358 x1477 x1043)))
(define-fun x936 ((x1043 Int) (x1477 Int)) Bool (and (=> (<= 0 x1043) (>= (x358 x1043 x1477) x1043)) (=> (<= 0 x1477) (<= x1477 (x358 x1043 x1477))) (<= (x358 x1043 x1477) (+ x1477 x1043))))
(define-fun x1385 ((x1043 Int) (x1477 Int)) Bool (and (x772 x1043 x1477) (x936 x1043 x1477)))
(define-fun x81 ((x1043 Int)) Bool (= (x393 x1043 115792089210356248762697446949407573530086143415211086033019366971273553903615) (- x1043 (x393 x1043 26959946660873538059280334323183841250429478006438217036639575736320))))
(define-fun x157 ((x1043 Int)) Bool (and (x81 x1043) (x1616 x1043 115792089210356248762697446949407573530086143415211086033019366971273553903615)))
(define-fun x682 ((x1043 Int)) Bool (= (mod x1043 26959946667150639794667015087019630673637144422540572481103610249216) (+ (mod x1043 6277101735386680763835789423207666416102355444464034512896) (x393 x1043 26959946660873538059280334323183841250429478006438217036639575736320))))
(define-fun x841 ((x1043 Int)) Bool (and (x1616 x1043 26959946660873538059280334323183841250429478006438217036639575736320) (x682 x1043)))
(define-fun x510 ((x1043 Int)) Bool (= (x393 x1043 26959946667150639794667015087019630673637144422540572481103610249215) (mod x1043 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x638 ((x1043 Int)) Bool (and (x510 x1043) (x1616 x1043 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1484 ((x1043 Int)) Bool (= (x393 x1043 255) (mod x1043 256)))
(define-fun x58 ((x1043 Int)) Bool (and (x1484 x1043) (x1616 x1043 255)))
(define-fun x82 ((x856 Int)) Int (ite (= x856 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1021 x856)))
(define-fun x541 ((x856 Int)) Int (ite (= 132 x856) x1316 (x82 x856)))
(define-fun x256 ((x856 Int)) Int (ite (= 0 x856) x1689 (x760 x856)))
(define-fun x1694 ((x856 Int)) Int (ite (= 128 x856) x1689 (x541 x856)))
(define-fun x52 ((x856 Int)) Int (ite x264 (x1694 x856) (x541 x856)))
(define-fun x603 ((x856 x1730)) Int (x376 x856))
(define-fun x1514 ((x856 x1730)) Int (x103 x856))
(define-fun x545 ((x856 Int)) Int (ite (= x856 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1361 x856)))
(define-fun x1032 ((x856 Int)) Int (ite (= 132 x856) x1316 (x545 x856)))
(define-fun x1019 ((x856 Int)) Int (ite (= 128 x856) x1440 (x1032 x856)))
(define-fun x188 ((x856 Int)) Int (ite x1756 (x1019 x856) (x1032 x856)))
(define-fun x200 ((x856 x1730)) Int (x1514 x856))
(define-fun x1317 ((x856 x1730)) Int (x200 x856))
(define-fun x1680 ((x856 x1730)) Int (ite (= x856 x888) x1539 (x1317 x856)))
(define-fun x1572 ((x856 x1730)) Int (ite (= x856 x1628) x797 (x1680 x856)))
(define-fun x995 ((x856 x1730)) Int (ite x851 (x1317 x856) (x1572 x856)))
(define-fun x304 ((x856 x1730)) Int (x995 x856))
(define-fun x1243 ((x856 x1730)) Int (ite x573 (x995 x856) (x304 x856)))
(define-fun x265 ((x856 Int)) Int (ite (= x1729 x856) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x52 x856)))
(define-fun x1755 ((x856 Int)) Int (ite (= x856 x7) x1316 (x265 x856)))
(define-fun x1393 ((x856 Int)) Int (ite (= x856 x1729) x1343 (x1755 x856)))
(define-fun x1165 ((x856 Int)) Int (ite x1609 (x1393 x856) (x1755 x856)))
(define-fun x313 ((x856 x1730)) Int (x1368 x856))
(define-fun x1580 ((x856 Int)) Int (ite (= x1595 x856) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x188 x856)))
(define-fun x736 ((x856 Int)) Int (ite (= x856 x1315) x1316 (x1580 x856)))
(define-fun x86 ((x856 Int)) Int (ite (= x856 x1595) x1491 (x736 x856)))
(define-fun x967 ((x856 Int)) Int (ite x154 (x86 x856) (x736 x856)))
(define-fun x602 ((x856 x1730)) Int (x313 x856))
(define-fun x979 ((x856 x1730)) Int (ite (= x856 x705) x743 (x602 x856)))
(define-fun x101 ((x856 x1730)) Int (ite x487 (x602 x856) (x979 x856)))
(define-fun x218 ((x856 x1730)) Int (ite x715 (x602 x856) (ite x590 (x602 x856) (ite x717 (x602 x856) (x101 x856)))))
(define-fun x1584 ((x856 x1730)) Int (ite (= x856 (x74 9)) x1600 (x218 x856)))
(define-fun x987 ((x856 x1730)) Int (ite (= x856 (x74 9)) x549 (x1584 x856)))
(define-fun x109 ((x856 x1730)) Int (ite (= x856 (x74 9)) x905 (x987 x856)))
(define-fun x812 ((x856 x1730)) Int (ite (= x856 (x74 9)) x855 (x1584 x856)))
(define-fun x1403 ((x856 x1730)) Int (ite (= (x74 9) x856) x1327 (x1584 x856)))
(define-fun x1540 ((x856 x1730)) Int (ite x1301 (ite x532 (x109 x856) (x812 x856)) (x1403 x856)))
(define-fun x604 ((x856 x1730)) Int (ite (= (x74 2) x856) x1287 (x1540 x856)))
(define-fun x837 ((x856 x1730)) Int (ite (= x1687 x856) x1055 (x604 x856)))
(define-fun x1426 ((x856 x1730)) Int (ite x55 (x1540 x856) (x837 x856)))
(define-fun x377 ((x856 x1730)) Int (ite (= (x74 9) x856) x372 (x1426 x856)))
(define-fun x70 ((x856 x1730)) Int (ite x782 (x1426 x856) (x377 x856)))
(define-fun x1318 ((x856 x1730)) Int (ite (= (x74 9) x856) x1444 (x70 x856)))
(define-fun x940 ((x856 x1730)) Int (ite (= (x74 2) x856) x1741 (x1318 x856)))
(define-fun x278 ((x856 x1730)) Int (ite (= x856 x1) x443 (x940 x856)))
(define-fun x424 ((x856 x1730)) Int (ite x1775 (x1318 x856) (x278 x856)))
(define-fun x172 ((x856 x1730)) Int (ite (= x856 (x74 19)) x1178 (x424 x856)))
(define-fun x1531 ((x856 x1730)) Int (ite (= (x74 20) x856) x953 (x172 x856)))
(define-fun x427 ((x856 x1730)) Int (ite (= x222 x856) x68 (x1531 x856)))
(define-fun x1122 ((x856 x1730)) Int (ite x1272 (x1531 x856) (x427 x856)))
(define-fun x1598 ((x856 x1730)) Int (ite x1344 (x602 x856) (ite x1593 (x1531 x856) (x1122 x856))))
(define-fun x229 ((x856 x1730)) Int (ite (= x856 x877) x1445 (x1598 x856)))
(define-fun x105 ((x856 x1730)) Int (ite (= (x74 2) x856) x1512 (x229 x856)))
(define-fun x650 ((x856 x1730)) Int (x105 x856))
(define-fun x930 ((x856 x1730)) Int (ite (= x856 x1146) x880 (x650 x856)))
(define-fun x894 ((x856 x1730)) Int (ite x668 (x650 x856) (x930 x856)))
(define-fun x716 ((x856 x1730)) Int (ite (= x856 x359) x1241 (x894 x856)))
(define-fun x991 ((x856 x1730)) Int (ite x1182 (x894 x856) (x716 x856)))
(define-fun x1501 ((x856 x1730)) Int (ite (= x856 x351) x65 (x991 x856)))
(define-fun x1439 ((x856 x1730)) Int (ite (= x1750 x856) x1545 (x1501 x856)))
(define-fun x1226 ((x856 x1730)) Int (ite x137 (x991 x856) (x1439 x856)))
(define-fun x669 ((x856 x1730)) Int (ite (= x567 x856) x578 (x1226 x856)))
(define-fun x4 ((x856 x1730)) Int (ite x573 (x991 x856) (ite x38 (x1226 x856) (x669 x856))))
(define-fun x429 ((x856 x1730)) Int (x4 x856))
(define-fun x254 ((x856 Int)) Int (ite (= x1292 x856) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1165 x856)))
(define-fun x454 ((x856 Int)) Int (ite (= x856 x166) x1316 (x254 x856)))
(define-fun x853 ((x856 Int)) Int (ite (= x1292 x856) x1160 (x454 x856)))
(define-fun x924 ((x856 Int)) Int (ite x1322 (x454 x856) (x853 x856)))
(define-fun x391 ((x856 x1730)) Int (x603 x856))
(define-fun x1188 ((x856 Int)) Int (ite (= x41 x856) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x967 x856)))
(define-fun x1013 ((x856 Int)) Int (ite (= x136 x856) x1316 (x1188 x856)))
(define-fun x1117 ((x856 Int)) Int (ite (= x41 x856) x133 (x1013 x856)))
(define-fun x825 ((x856 Int)) Int (ite x1061 (x1117 x856) (x1013 x856)))
(define-fun x1536 ((x856 Int)) Int (ite (= x856 0) x1343 (x840 x856)))
(define-fun x1150 ((x856 Int)) Int (ite (= x856 0) x1491 (x461 x856)))
(define-fun x1405 ((x856 Int)) Int (ite (= x856 0) x1160 (x14 x856)))
(define-fun x1183 ((x856 Int)) Int (ite (= x856 0) x133 (x1759 x856)))
(define-fun x1391 ((x856 Int)) Int (x97 x856))
(define-fun x655 ((x856 Int)) Int (ite (= x856 128) x1646 (x308 x856)))
(define-fun x1046 ((x856 Int)) Int (ite (= 160 x856) x62 (x655 x856)))
(define-fun x446 ((x856 Int)) Int (ite (= 192 x856) x942 (x1046 x856)))
(define-fun x1012 ((x856 Int)) Int (ite (= 224 x856) x1029 (x446 x856)))
(define-fun x1135 ((x856 Int)) Int (ite (= x856 256) x1456 (x1012 x856)))
(define-fun x773 ((x856 Int)) Int (ite x1098 (x1012 x856) (ite x816 (x446 x856) (ite x309 (x1046 x856) (ite x722 (x655 x856) (x1135 x856))))))
(define-fun x803 ((x856 Int)) Int (ite (= x856 x1764) x57 (x773 x856)))
(define-fun x1294 ((x856 Int)) Int (ite (and (<= x765 x856) (> (+ x765 x57) x856)) (x97 (+ x697 (- x856 x765))) (x803 x856)))
(define-fun x1337 ((x856 Int)) Int (ite (= x856 x159) 0 (x1294 x856)))
(define-fun x1065 ((x856 Int)) Int (ite (= x1263 x856) x32 (x1337 x856)))
(define-fun x754 ((x856 Int)) Int (ite (and (<= x685 x856) (> (+ x821 x685) x856)) (x97 (+ (- x856 x685) x764)) (x1065 x856)))
(define-fun x920 ((x856 Int)) Int (ite x555 (x1065 x856) (x754 x856)))
(define-fun x1679 ((x856 Int)) Int (ite (= x856 x84) x539 (x920 x856)))
(define-fun x934 ((x856 Int)) Int (ite x963 (x920 x856) (x1679 x856)))
(define-fun x1613 ((x856 Int)) Int (ite (= x634 x856) x104 (x934 x856)))
(define-fun x356 ((x856 Int)) Int (ite (and (>= x856 x367) (< x856 (+ x367 x1686))) (x97 (+ (- x856 x367) x764)) (x1613 x856)))
(define-fun x1240 ((x856 Int)) Int (ite x1649 (x1613 x856) (x356 x856)))
(define-fun x1144 ((x856 Int)) Int (ite (= x244 x856) x94 (x1240 x856)))
(define-fun x178 ((x856 Int)) Int (ite x108 (x1240 x856) (x1144 x856)))
(define-fun x411 ((x856 Int)) Int (ite (= x902 x856) x296 (x178 x856)))
(define-fun x791 ((x856 Int)) Int (ite (and (>= x856 x79) (> (+ x1116 x79) x856)) (x97 (+ x764 (- x856 x79))) (x411 x856)))
(define-fun x381 ((x856 Int)) Int (ite (= x1042 x856) x1779 (x791 x856)))
(define-fun x431 ((x856 Int)) Int (ite (= x1263 x856) 46861972923178205566985210922759877011903582497231265773045854621316061069312 (x1337 x856)))
(define-fun x842 ((x856 Int)) Int (ite (and (<= x1263 x856) (< x856 (+ 32 x1263))) (x958 (+ 0 (- x856 x1263))) (x431 x856)))
(define-fun x292 ((x856 Int)) Int (ite (= x527 x856) x522 (x842 x856)))
(define-fun x745 ((x856 Int)) Int (ite x487 (x1337 x856) (x292 x856)))
(define-fun x409 ((x856 Int)) Int (ite x715 (x1337 x856) (ite x590 (x1337 x856) (ite x717 (x1337 x856) (x745 x856)))))
(define-fun x1409 ((x856 Int)) Int (ite (= x856 x581) x1635 (x409 x856)))
(define-fun x1181 ((x856 Int)) Int (ite (and (>= x856 x1264) (< x856 (+ x862 x1264))) (x97 (+ x764 (- x856 x1264))) (x1409 x856)))
(define-fun x289 ((x856 Int)) Int (ite x1406 (x1409 x856) (x1181 x856)))
(define-fun x280 ((x856 Int)) Int (ite (= x856 64) 128 (x206 x856)))
(define-fun x1149 ((x856 Int)) Int (ite (= x856 x1517) x1607 (x280 x856)))
(define-fun x786 ((x856 Int)) Int (ite (= x467 x856) 81655993114286172543975849523773895523710823181222424266797447834442299080704 (x289 x856)))
(define-fun x1674 ((x856 Int)) Int (ite (= x1488 x856) x156 (x786 x856)))
(define-fun x1289 ((x856 Int)) Int (ite (and (<= x467 x856) (> (+ x467 (ite (> 32 x1329) x1329 32)) x856)) (x1149 (+ x1532 (- x856 x467))) (x1674 x856)))
(define-fun x663 ((x856 Int)) Int (ite x46 (ite x438 (x1289 x856) (x289 x856)) (x289 x856)))
(define-fun x1233 ((x856 Int)) Int (ite (= x856 x1309) x833 (x663 x856)))
(define-fun x1503 ((x856 Int)) Int (ite x77 (x289 x856) (x1233 x856)))
(define-fun x299 ((x856 Int)) Int (ite (= x1094 x856) x1548 (x1503 x856)))
(define-fun x412 ((x856 Int)) Int (ite (and (<= x1378 x856) (< x856 (+ x1378 x909))) (x97 (+ x764 (- x856 x1378))) (x299 x856)))
(define-fun x811 ((x856 Int)) Int (ite x1469 (x299 x856) (x412 x856)))
(define-fun x1342 ((x856 Int)) Int (ite (= x583 x856) x1352 (x811 x856)))
(define-fun x976 ((x856 Int)) Int (ite x1201 (x811 x856) (x1342 x856)))
(define-fun x1533 ((x856 Int)) Int (ite (= x856 x1772) x1740 (x976 x856)))
(define-fun x1662 ((x856 Int)) Int (ite x55 (x976 x856) (x1533 x856)))
(define-fun x1231 ((x856 Int)) Int (ite (= x1489 x856) x350 (x1662 x856)))
(define-fun x1341 ((x856 Int)) Int (ite x1669 (x1662 x856) (x1231 x856)))
(define-fun x1430 ((x856 Int)) Int (ite (= x856 x961) x973 (x1341 x856)))
(define-fun x1417 ((x856 Int)) Int (ite x1775 (x1341 x856) (x1430 x856)))
(define-fun x1557 ((x856 Int)) Int (ite (= 64 x856) 128 (x219 x856)))
(define-fun x1429 ((x856 Int)) Int (ite (= x856 x794) x774 (x1557 x856)))
(define-fun x1703 ((x856 Int)) Int (ite (= x121 x856) 112349551054952423155953805921267728290102753186399332250345724850365349756928 (x1417 x856)))
(define-fun x394 ((x856 Int)) Int (ite (= x856 x53) x1081 (x1703 x856)))
(define-fun x1258 ((x856 Int)) Int (ite (and (> (+ x121 (ite (< x475 32) x475 32)) x856) (<= x121 x856)) (x1429 (+ x824 (- x856 x121))) (x394 x856)))
(define-fun x1497 ((x856 Int)) Int (ite x1593 (x1417 x856) (ite x1272 (x1417 x856) (x1258 x856))))
(define-fun x1163 ((x856 Int)) Int (ite (= x1457 x856) x500 (x1497 x856)))
(define-fun x144 ((x856 Int)) Int (ite (and (>= x856 x316) (< x856 (+ x608 x316))) (x97 (+ x764 (- x856 x316))) (x1163 x856)))
(define-fun x1260 ((x856 Int)) Int (ite (= x856 x1618) x181 (x144 x856)))
(define-fun x777 ((x856 Int)) Int (ite x1344 (ite x932 (x791 x856) (x381 x856)) (ite x671 (x144 x856) (x1260 x856))))
(define-fun x520 ((x856 Int)) Int (ite (= x856 x986) x1401 (x777 x856)))
(define-fun x799 ((x856 Int)) Int (ite (= x856 x1284) x781 (x520 x856)))
(define-fun x1411 ((x856 Int)) Int (ite (and (<= x43 x856) (> (+ x43 x286) x856)) (x97 (+ (- x856 x43) x764)) (x799 x856)))
(define-fun x804 ((x856 Int)) Int (ite (= x1193 x856) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1411 x856)))
(define-fun x451 ((x856 Int)) Int (ite (= x867 x856) x413 (x804 x856)))
(define-fun x1384 ((x856 Int)) Int (ite (= x856 x1212) x400 (x451 x856)))
(define-fun x1782 ((x856 Int)) Int (ite (= x856 x1193) 1 (x1384 x856)))
(define-fun x271 ((x856 Int)) Int (ite x1039 (x1384 x856) (x1782 x856)))
(define-fun x1072 ((x856 Int)) Int (ite (= x856 x864) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x271 x856)))
(define-fun x1034 ((x856 Int)) Int (ite (= x1601 x856) x1088 (x1072 x856)))
(define-fun x1431 ((x856 Int)) Int (ite (= x985 x856) x491 (x1034 x856)))
(define-fun x1487 ((x856 Int)) Int (ite (= x864 x856) 1 (x1431 x856)))
(define-fun x605 ((x856 Int)) Int (ite x851 (x1431 x856) (x1487 x856)))
(define-fun x1119 ((x856 Int)) Int (ite (= x856 x1282) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x605 x856)))
(define-fun x31 ((x856 Int)) Int (ite (= x856 x1574) x1415 (x1119 x856)))
(define-fun x778 ((x856 Int)) Int (ite (= x856 x1776) x51 (x31 x856)))
(define-fun x1461 ((x856 Int)) Int (ite (= x856 x1282) x1471 (x778 x856)))
(define-fun x747 ((x856 Int)) Int (ite x573 (x605 x856) (ite x137 (x778 x856) (x1461 x856))))
(define-fun x1369 ((x856 x1730)) Int (ite (= x856 x1273) x770 (x391 x856)))
(define-fun x502 ((x856 x1730)) Int (ite (= x384 x856) x994 (x1369 x856)))
(define-fun x241 ((x856 x1730)) Int (ite x1039 (x391 x856) (x502 x856)))
(define-fun x1527 ((x856 x1730)) Int (x241 x856))
(define-fun x1410 ((x856 Int)) Int (ite (= x856 x489) x588 (x747 x856)))
(define-fun x978 ((x856 Int)) Int (ite (= x856 x436) x1357 (x1410 x856)))
(define-fun x1330 ((x856 Int)) Int (ite (= x856 x341) x1375 (x978 x856)))
(define-fun x1392 ((x856 Int)) Int (ite (= x856 x40) x1127 (x1330 x856)))
(define-fun x362 ((x856 Int)) Int (ite (= x856 x857) x1166 (x1392 x856)))
(define-fun x1331 ((x856 Int)) Int (ite (= 0 x856) 1 (x329 x856)))
(define-fun x893 ((x856 Int)) Int (ite (= x856 0) 1 (x547 x856)))
(define-fun x198 ((x856 Int)) Int (ite (= x856 128) x1542 (x1353 x856)))
(define-fun x1216 ((x856 Int)) Int (ite (= x856 128) (ite true 1 0) (x198 x856)))
(define-fun x860 ((x856 Int)) Int (ite (= x856 0) x798 (x726 x856)))
(define-fun x1715 ((x856 Int)) Int (ite (and (< x856 (+ 0 x475)) (>= x856 0)) (x1429 (+ x824 (- x856 0))) (x423 x856)))
(define-fun x1057 ((x856 Int)) Int (ite (and (>= x856 0) (> (+ 0 x1329) x856)) (x1149 (+ x1532 (- x856 0))) (x1288 x856)))
(define-fun x1283 ((x856 Int)) Int (ite (= x543 x856) x330 (x362 x856)))
(define-fun x78 ((x856 Int)) Int (ite x1067 (x362 x856) (ite x1723 (x1392 x856) (ite x1010 (x1330 x856) (ite x683 (x978 x856) (x1283 x856))))))
(define-fun x1394 ((x856 Int)) Int (ite (= x856 x885) x993 (x78 x856)))
(define-fun x1395 ((x856 Int)) Int (ite (= x318 x856) x1459 (x1394 x856)))
(define-fun x1550 ((x856 Int)) Int (ite (= x856 x1265) x521 (x1395 x856)))
(define-fun x737 ((x856 Int)) Int (ite (= x1124 x856) x626 (x1550 x856)))
(define-fun x1053 ((x856 Int)) Int (ite (= x856 x1498) x236 (x737 x856)))
(define-fun x1011 ((x856 Int)) Int (ite (= x473 x856) x403 (x1053 x856)))
(define-fun x458 ((x856 Int)) Int (ite x913 (x1053 x856) (ite x748 (x737 x856) (ite x1642 (x1550 x856) (ite x997 (x1395 x856) (x1011 x856))))))
(define-fun x1592 ((x856 Int)) Int (ite (= 0 x856) x1440 (x1509 x856)))
(define-fun x417 ((x1043 Int)) Bool (=> (and (not (= x1043 1871194811)) (not (= 404098525 x1043)) (not (= 2835717307 x1043)) (not (= x1043 18446744073709551615)) (not (= x1043 2580288415)) (not (= x1043 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1043 238709543)) (not (= x1043 3586168516)) (not (= 2681156919 x1043)) (not (= 2757214935 x1043)) (not (= x1043 81655993114286172543975849523773895523710823181222424266797447834442299080704)) (not (= x1043 1889567281)) (not (= 500647658 x1043)) (not (= 4294967296 x1043)) (not (= 274184521717934524641157099916833587280 x1043)) (not (= x1043 2714230913)) (not (= x1043 3224796394)) (not (= 2127478272 x1043)) (not (= 1984976886 x1043)) (not (= x1043 115792089237316195417293883273301227089434195242512125785869492901042639077375)) (not (= 4294967295 x1043)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1043)) (< 10000 x1043) (not (= x1043 3028789119)) (not (= x1043 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (not (= 2863377861 x1043)) (not (= x1043 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= x1043 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 954831406 x1043)) (not (= x1043 79228162514264337593543950335)) (not (= 18446744073709551616 x1043)) (not (= x1043 6277101735386680763835789423207666416102355444464034512895)) (not (= x1043 1439069736)) (not (= x1043 370555621)) (not (= x1043 826074471)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1043)) (not (= x1043 228615836)) (not (= x1043 1000000000000000000)) (not (= 2514000705 x1043)) (not (= 1779675522 x1043)) (not (= x1043 4167276458)) (not (= 1883652118 x1043)) (not (= x1043 363856219)) (not (= 46861972923178205566985210922759877011903582497231265773045854621316061069312 x1043)) (not (= x1043 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (not (= x1043 115792089210356248762697446949407573530086143415211086033019366971273553903615)) (not (= x1043 1962127369)) (not (= x1043 112349551054952423155953805921267728290102753186399332250345724850365349756928)) (not (= x1043 1461501637330902918203684832716283019655932542975)) (not (= 307731845 x1043))) (not ((_ is x74) (x1700 x1043)))))
(assert (= x686 (=> (and x1300 (= x1017 x820) (= x820 (div x662 1000000000000000000))) x1073)))
(assert (x1438 x324))
(assert (= (and x306 (not x809)) x1010))
(assert (x1438 x1378))
(assert (x1438 x1522))
(assert (x1438 x1190))
(assert (= (and x1235 x469) x677))
(assert (= (x1303 (x74 2757214935)) 2757214935))
(assert (x1438 x937))
(assert (x396 x950))
(assert (= (x308 x776) 0))
(assert (x1438 x1733))
(assert (x1438 x1363))
(assert (= x1333 (x1303 (x1700 x1333))))
(assert (= (x1303 (x74 238709543)) 238709543))
(assert (x1438 x1673))
(assert (x1438 x764))
(assert (= 0 (x1021 x640)))
(assert (x1438 x234))
(assert (x1438 x1120))
(assert (= (or x49 x1716) x1015))
(assert (x1438 x363))
(assert (x1438 x617))
(assert (= (x1303 (x1700 x1717)) x1717))
(assert (= (=> (= x873 x1280) x1348) x637))
(assert (x1438 x129))
(assert (= (x1303 (x74 18446744073709551616)) 18446744073709551616))
(assert (x1438 x1585))
(assert (= (x74 115792089237316195417293883273301227089434195242512125785869492901042639077375) (x1700 115792089237316195417293883273301227089434195242512125785869492901042639077375)))
(assert (x1438 x689))
(assert (x1438 x670))
(assert (= (or x18 x1106) x1482))
(assert (= (x1303 (x1700 x530)) x530))
(assert (x1438 x534))
(assert (x1438 x704))
(assert (= (or (and (not x1060) x878) x1026) x922))
(assert (x1438 x970))
(assert (x1438 x643))
(assert (x1438 x868))
(assert (x1438 x972))
(assert (x1438 x1376))
(assert (x1438 x578))
(assert (x1438 x1275))
(assert (= (x206 (+ (- x152 x467) x1532)) 0))
(assert (= (and x216 x1690) x607))
(assert (x1438 x16))
(assert (x1438 x826))
(assert (x1438 x449))
(assert (= (or x1067 x1723 x1128 x683 x1010) x456))
(assert (x1438 x693))
(assert (= (=> (and (= x1785 x1278) (= x410 x1651)) x1571) x606))
(assert (x1438 x951))
(assert (x1438 x205))
(assert (x1438 x1113))
(assert (x417 x580))
(assert (= x124 (x1303 (x1700 x124))))
(assert (= x793 (=> (and (and (= x104 (x934 x1263)) (= x902 (x1114 (+ x634 x173))) (= x173 (x1114 (+ x1615 32))) (= (= 0 x104) x493) (= x1615 (mod (* 32 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (or (and (not x493) (and (= (mod (* 32 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1686) (= (x1114 (+ x634 32)) x367))) x493)) x448)))
(assert (x1438 x1647))
(assert (=> (<= x307 10000) (= (x74 x307) (x1700 x307))))
(assert (x1438 x1000))
(assert (= x1202 (and x1321 x1784)))
(assert (= 0 (x219 (+ x824 (- x707 x121)))))
(assert (x417 x1200))
(assert (= 0 (x308 x1437)))
(assert (x1438 x1284))
(assert (x396 x1735))
(assert (= 0 (x219 (+ x824 (- x509 x121)))))
(assert (x1438 x481))
(assert (x1438 x1713))
(assert (= (x219 (+ (- x33 x121) x824)) 0))
(assert (x1438 x1672))
(assert (x1438 x1170))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 (x1303 (x74 115792089237316195423570985008687907853269984665640564039457584007913129639680))))
(assert (= x1308 (x1303 (x1700 x1308))))
(assert (= x363 (x1303 (x1700 x363))))
(assert (x1438 x435))
(assert (=> (>= 10000 x272) (= (x1700 x272) (x74 x272))))
(assert (= (or x1669 x1632) x149))
(assert (x1438 x1111))
(assert (x912 x926))
(assert (x1438 x99))
(assert (= x382 (and (not x1462) x149)))
(assert (x1438 x420))
(assert (x1438 x702))
(assert (x1438 x765))
(assert (x1438 x697))
(assert (x1115 x91))
(assert (x1438 x1513))
(assert (x1438 x935))
(assert (= 0 (x219 (+ x824 (- x1014 x121)))))
(assert (x1438 x579))
(assert (x1438 x104))
(assert (x1438 x1037))
(assert (x1438 x566))
(assert (x1438 x226))
(assert (x1438 x361))
(assert (x1438 x1639))
(assert (= (and x881 x235) x681))
(assert (x417 x503))
(assert (x1438 x159))
(assert (x1438 x1236))
(assert (x1438 x519))
(assert (x1438 x400))
(assert (x1438 x710))
(assert (= 826074471 (x1303 (x74 826074471))))
(assert (x1438 x330))
(assert (x1438 x307))
(assert (x1438 x1172))
(assert (= x570 (and x546 x125)))
(assert (x1438 x753))
(assert (x1438 x575))
(assert (= x1109 (x1303 (x1700 x1109))))
(assert (x111 x996))
(assert (= (or x1756 x1220) x982))
(assert (x1438 x134))
(assert (x1515 x1490))
(assert (= (and x1478 x1678) x1045))
(assert (= 4294967296 (x1303 (x74 4294967296))))
(assert (x1438 x1232))
(assert (x1438 x189))
(assert (x1438 x422))
(assert (x1438 x644))
(assert (x1438 x608))
(assert (x1115 x1490))
(assert (= (and x117 x1510) x1643))
(assert (x1438 x741))
(assert (x1438 x221))
(assert (x1438 x613))
(assert (= x1463 (and x844 x1027)))
(assert (= (x206 (+ (- x324 x467) x1532)) 0))
(assert (= 0 (x206 (+ x1532 (- x408 x467)))))
(assert (x1438 x119))
(assert (= x38 (and (not x1186) x1475)))
(assert (= (and x1441 x456) x331))
(assert (= (x219 (+ x824 (- x1770 x121))) 0))
(assert (=> (>= 10000 x328) (= (x1700 x328) (x74 x328))))
(assert (x1438 x1173))
(assert (= (x219 (+ x824 (- x324 x121))) 0))
(assert (x1115 x1268))
(assert (x1438 x574))
(assert (= (x1303 (x74 112349551054952423155953805921267728290102753186399332250345724850365349756928)) 112349551054952423155953805921267728290102753186399332250345724850365349756928))
(assert (x1438 x51))
(assert (x638 x1582))
(assert (= (=> (and (= x1374 x175) (= 0 x361) (= x217 x1465)) x1554) x1058))
(assert (= (x206 (+ (- x1014 x467) x1532)) 0))
(assert (= x1554 (=> (and (= x1060 (= x361 0)) (or x1060 (not x1060))) x293)))
(assert (x1438 x413))
(assert (x1438 x796))
(assert (= (or x1608 x573) x497))
(assert (x1438 x136))
(assert (x1438 x483))
(assert (x1438 x315))
(assert (x841 x142))
(assert (= 1461501637330902918203684832716283019655932542975 (x1303 (x74 1461501637330902918203684832716283019655932542975))))
(assert (x1438 x323))
(assert (x1438 x460))
(assert (x1438 x1722))
(assert (= (x1361 x506) 0))
(assert (x1438 x536))
(assert (= (and x480 (not x441)) x696))
(assert (x1438 x141))
(assert (x1438 x1147))
(assert (= x1276 (or x590 x818 x717)))
(assert (=> (<= x938 10000) (= (x1700 x938) (x74 x938))))
(assert (= x1443 (and (not x284) x1455)))
(assert (x1438 x1374))
(assert (= (x74 1779675522) (x1700 1779675522)))
(assert (= (and x331 x528) x126))
(assert (= (or x1174 x1039) x878))
(assert (x1438 x996))
(assert (x1438 x1538))
(assert (x1438 x981))
(assert (= (and x1297 x202) x1573))
(assert (x1115 4294967295))
(assert (x1438 x862))
(assert (x1438 x1089))
(assert (= (x1700 1984976886) (x74 1984976886)))
(assert (= (=> (and (= x442 (x1721 (- x499 x1193))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1064) (= x400 x830) (= (x1114 (+ x867 32)) x1212) (= x413 (x393 1461501637330902918203684832716283019655932542975 x253)) (= x1605 x413) (not (< x1299 826074471)) (< 0 x1022) (= 2835717307 x1299) (= x1047 (< x657 64)) (= (x1448 (x1700 x897)) x1022) (= x1644 (x1114 (+ 4 x1193))) (not (= 0 x388)) (= x513 x442) (not (= x1299 826074471)) (= (x1114 (+ x1644 64)) x499) (= x388 (x1448 (x1700 x897))) (not (= x1299 2514000705)) (not (< x513 4)) (= (x1721 (- x513 4)) x657) (not (= x1299 1889567281)) (= 68 x513) (= x1644 x867)) (and (=> (and (not x1047) (and (= (< x462 x400) x806) (= x1605 x566) (>= x462 0) (<= x462 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x462 (x391 x107)) (= x830 x1044) (= (x619 (x1700 x1316) (x74 1) 0) x107))) (and (=> x806 x1058) (=> (and (and (<= 0 x1387) (= x1273 (x619 (x1700 x1316) (x74 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1387) (= (x1369 x1726) x1387) (= (< x994 x1387) x611) (= (x1721 (- x462 x830)) x770) (= x1726 (x619 (x1700 x1605) (x74 1) 0)) (= (x1114 (+ x1387 x830)) x994)) (not x806)) (and (=> x611 x1058) (=> (and (not x611) (and (= 1 x361) (= x384 (x619 (x1700 x1605) (x74 1) 0)) (= x1374 x175) (= 32 x217))) x1554))))) (=> x1047 x1058))) x560))
(assert (= 0 (x206 (+ (- x1366 x467) x1532))))
(assert (x1438 x1418))
(assert (x417 x889))
(assert (= (x74 363856219) (x1700 363856219)))
(assert (x1438 x76))
(assert (x1438 x977))
(assert (x1115 1461501637330902918203684832716283019655932542975))
(assert (= (x1303 (x1700 x693)) x693))
(assert (= x1577 (x1303 (x1700 x1577))))
(assert (x1438 x1526))
(assert (= x480 (or x355 x1247)))
(assert (x1438 x286))
(assert (x1438 x160))
(assert (x1438 x759))
(assert (= (x969 x449 255) (div x449 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x417 x871))
(assert (=> (<= x1109 10000) (= (x74 x1109) (x1700 x1109))))
(assert (x1438 x93))
(assert (x1438 x1006))
(assert (= x1067 (and x1643 (not x433))))
(assert (x1115 x512))
(assert (x1438 x1421))
(assert (x417 x1619))
(assert (= x26 (or x1485 (and (not x852) x1134))))
(assert (x1438 x1637))
(assert (= 0 (x308 x324)))
(assert (x1438 x1773))
(assert (x1438 x1137))
(assert (x1438 x635))
(assert (= x448 (=> (and (= x1522 (x1240 x1263)) (= x1727 (< 0 x1522))) (and (=> x1727 x261) (=> (not x1727) x464)))))
(assert (= (or x135 x1609) x881))
(assert (= (and x197 x1305) x1576))
(assert (= (and (=> (and x1732 (and (or (and (not x1207) (and (= x821 (mod (* x32 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1114 (+ 32 x1263)) x685))) x1207) (and (= x965 (x602 (x74 2))) (= (x1114 (+ x839 32)) x1442) (= x634 (x1114 (+ x1263 x617))) (= (x1721 (- x595 x1269)) x257) (= x935 (mod (* 32 x32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x268 (= 1 x48)) (= x1207 (= x32 0)) x268 (= x1269 (x1337 x2)) (= x839 (mod (* x733 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x617 (x1114 (+ x935 32))) (not (< x595 x1269)) (= x2 (x1114 (+ x1442 128))) (< x733 x1559) (= 255 x1285) (= (x1337 128) x1198) (= (x602 (x74 2)) x595) (= (x1337 128) x1559) (= (x602 (x74 8)) x1747) (= (x1721 (- x1198 1)) x32) (= x48 (x969 x1747 255))))) x1494) (=> (and (not x1732) (and (or (and (= x216 x486) x216) (and (and (= x1671 (x602 (x74 7))) (= (= x354 0) x486) (= x354 (x393 255 x1671))) (not x216))) (= x216 (> x169 x1588)))) x1159)) x1210))
(assert (x1438 x169))
(assert (= (=> (and (= x1784 (= 0 x434)) (or (not x1784) x1784)) x533) x327))
(assert (x1438 x1518))
(assert (= (and (not x1346) x106) x709))
(assert (= (=> (and (= (x663 x581) x1528) (= (= 0 x721) x1544) (= (not (> x1635 1)) x838) (= x833 (div x929 1000000000000000000)) (= (x1114 (+ x581 32)) x1309) (= (mod (* x1651 x721) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x929) (ite x1544 x1544 (= (div x929 x721) x1651)) (< 0 x1528)) (and (=> (= x1785 x1094) x900) x838)) x1571))
(assert (x417 x1717))
(assert (= x1483 (and x1762 x732)))
(assert (x1438 x944))
(assert (x1438 x761))
(assert (x1438 x73))
(assert (x1438 x175))
(assert (x1438 x404))
(assert (x1438 x631))
(assert (= (div x1371 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x969 x1371 255)))
(assert (= (and x843 (not x1623)) x106))
(assert (= x1425 (and x72 x1666)))
(assert (= (=> (and (< x1143 x297) (= x667 (not (< 1 x679))) (= (x1114 (+ 32 x1094)) x583) (= (x1114 (+ x914 32)) x89) (= x679 (x1342 x1094)) (= (x811 x1094) x1719) (< 0 x1719) (= x551 (x1114 (+ 128 x89))) (= (x811 128) x297) (= x914 (mod (* 32 x1143) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x811 x551) x1352) (= (ite (< 0 x733) 0 1) x1143)) (and x946 x667)) x402))
(assert (x1438 x1480))
(assert (x1438 x1471))
(assert (x1438 x965))
(assert (x1438 x1044))
(assert (x1438 x37))
(assert (x1438 x364))
(assert (x1438 x1084))
(assert (x1438 x1567))
(assert (= x197 (or x555 x233)))
(assert (x1438 x596))
(assert (x1438 x859))
(assert (= (and x1690 (not x216)) x1161))
(assert (x1438 x432))
(assert (= x264 (and x664 (not x654))))
(assert (= (x1700 6277101735386680763835789423207666416102355444464034512895) (x74 6277101735386680763835789423207666416102355444464034512895)))
(assert (= (or x1468 x1406) x453))
(assert (= (x74 1962127369) (x1700 1962127369)))
(assert (= (and x1530 x1382) x151))
(assert (= (or x903 (and (not x102) x982)) x1249))
(assert (x1438 x1511))
(assert (x1438 x1489))
(assert (x1438 x1735))
(assert (x1438 x757))
(assert (x1438 x1204))
(assert (x1115 x1596))
(assert (x417 x1109))
(assert (= x1234 (and x599 x25)))
(assert (x1115 x1397))
(assert (x1438 x836))
(assert (x1438 x295))
(assert (= (x74 2681156919) (x1700 2681156919)))
(assert (x1438 x466))
(assert (= (x219 (+ x824 (- x263 x121))) 0))
(assert (x1438 x1296))
(assert (x1438 x3))
(assert (x1438 x1169))
(assert (x1438 x513))
(assert (= (=> (and (= (x1426 (x74 15)) x1591) (= x1638 (x1426 (x74 16))) (= (x1114 (+ x1740 x1113)) x981) (= (x1426 (x74 14)) x248) (= x1478 (> x1638 x169)) (= x823 (x1426 (x74 13)))) (and (=> (and (and (= x1451 (< x823 x248)) (or (and x1451 (and (= x1248 (x1114 (+ x1386 x823))) (= (x1721 (- x248 x823)) x76) (= (x1721 (- x1638 x1591)) x1158) (= x1590 (x1721 (- x169 x1591))) (< 0 x1158) (= (mod (* x1590 x76) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1708) (= (div x1708 x1158) x1386) (= x1248 x418))) (and (and (= (mod (* x563 x343) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1611) (= x281 (x1721 (- x1638 x1591))) (= x418 x576) (< 0 x281) (= x947 (div x1611 x281)) (= (x1721 (- x823 x947)) x576) (= x343 (x1721 (- x169 x1591))) (= (x1721 (- x823 x248)) x563)) (not x1451)))) x1478) x908) (=> (and (and (= x907 0) (= x1178 x248)) (not x1478)) x336))) x1624))
(assert (= (x969 x633 224) (div x633 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x1438 x1646))
(assert (x1438 x127))
(assert (x1438 x551))
(assert (= x755 (and x35 (not x405))))
(assert (= x1281 (and (not x240) x20)))
(assert (= 0 (x308 x1195)))
(assert (x417 x632))
(assert (x1438 x1230))
(assert (= 0 (x308 x395)))
(assert (= x336 (=> (and (or (and (= x195 x1534) x59) (and (not x59) (and (= x883 (x377 x1627)) (= x813 (x1662 x1086)) (= x328 (x1662 x305)) (= x970 x1534) (= (x1426 (x74 9)) x512) (> x883 0) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639680 x512) x1222) (= (x1114 (+ x1222 1)) x372) (= (x619 (x1700 x1178) (x74 10) 0) x314) (= (x1662 x1086) x1339) (= (x1114 (+ 32 x1086)) x305) (= x1200 (x1662 x305)) (= x1025 (x619 (x1700 x1178) (x74 10) 0)) (= (x1114 (+ x1094 32)) x1086) (= x1627 (x619 (x1700 x1200) x1707 0)) (= (x619 (x1700 x1339) x314 0) x1734) (= (x619 (x1700 x328) x1734 0) x921) (= (x377 x921) x970) (= (x619 (x1700 x813) x1025 0) x1707)))) (= x59 (= x645 x1178))) x30)))
(assert (x1115 6277101735386680763835789423128438253588091106870490562560))
(assert (= x347 (or x1099 x1301)))
(assert (= x1220 (and x988 x706)))
(assert (x1515 x941))
(assert (x1438 x1401))
(assert (= (x308 x739) 0))
(assert (= (=> (and (or (and (and (= (x650 x1146) x1454) (= x1413 (x1347 (x74 25) 0)) (= x880 (x1114 (+ x1454 x556))) (< 0 x610) (= x1146 x1413) (= x610 (x650 (x74 25))) (= x127 25)) x1464) (and (not x1464) (= x127 x693))) (and (not (= x361 0)) (= (x1114 (+ x1190 x1193)) x864) (= (x1114 (+ 31 x217)) x1004) (= x1464 (< 0 x556)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x217) (and (= (<= x217 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x217 32)))) (= x1190 (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1004)))) x1709) x293))
(assert (=> (>= 10000 x1659) (= (x1700 x1659) (x74 x1659))))
(assert (x1438 x388))
(assert (x1438 x925))
(assert (not x112))
(assert (x1438 x1528))
(assert (x1438 x813))
(assert (= (and x535 x497) x306))
(assert (= 0 (x206 (+ x1532 (- x305 x467)))))
(assert (x1438 x766))
(assert (= 370555621 (x1303 (x74 370555621))))
(assert (= 0 (x308 x234)))
(assert (x1438 x1160))
(assert (= 0 (x206 (+ x1532 (- x551 x467)))))
(assert (x1438 x1333))
(assert (= (x74 1871194811) (x1700 1871194811)))
(assert (x1438 x549))
(assert (x1438 x594))
(assert (x1438 x403))
(assert (= x1141 (or x379 x974)))
(assert (x1438 x945))
(assert (x1438 x457))
(assert (x1438 x1458))
(assert (= 2863377861 (x1303 (x74 2863377861))))
(assert (= (x1700 2757214935) (x74 2757214935)))
(assert (x1438 x217))
(assert (x1438 x80))
(assert (x1438 x90))
(assert (= x1606 (or x738 x1142)))
(assert (x1115 115792089237316195423570985008687907853269984665561335876943319670319585689600))
(assert (x1438 x1030))
(assert (= (x969 x633 192) (div x633 6277101735386680763835789423207666416102355444464034512896)))
(assert (= x1406 (and x270 x1049)))
(assert (x1438 x1517))
(assert (x1438 x1094))
(assert (= (and (not x593) x203) x1203))
(assert (= 0 (x206 (+ (- x739 x467) x1532))))
(assert (x1438 x1004))
(assert (x1438 x1287))
(assert (x1438 x57))
(assert (= 0 (x308 x1366)))
(assert (x1438 x661))
(assert (x1438 x421))
(assert (x417 x1450))
(assert (x1438 x1313))
(assert (= (and x933 x800) x379))
(assert (= x1608 (or x38 x1626)))
(assert (x1438 x1620))
(assert (x1438 x1245))
(assert (= x1479 (and x1452 x317)))
(assert (= (=> (and (= x212 x564) (= x1079 x869)) x1640) x1496))
(assert (x1438 x1655))
(assert (x1385 x277 x548))
(assert (x1438 x468))
(assert (= (or x1286 x1649) x1328))
(assert (x1438 x703))
(assert (= (x74 1000000000000000000) (x1700 1000000000000000000)))
(assert (x1438 x565))
(assert (x1438 x1698))
(assert (x1438 x1602))
(assert (x1438 x1781))
(assert (x1438 x11))
(assert (x1438 x168))
(assert (x1438 x1525))
(assert (= x1099 (and x153 (not x1110))))
(assert (x1438 x1749))
(assert (= (and x1407 (not x906)) x1311))
(assert (x157 x142))
(assert (x1438 x439))
(assert (= 0 (x206 (+ x1532 (- x526 x467)))))
(assert (x417 x938))
(assert (= x1407 (or x1576 x963)))
(assert (x1115 x1566))
(assert (x1438 x698))
(assert (x1438 x890))
(assert (= (x1303 (x1700 x822)) x822))
(assert (x1438 x701))
(assert (x1438 x830))
(assert (= x1348 (=> (and (and (= (= 0 x704) x1196) (not (= x195 0))) (or (and (not x1196) (and (= (mod (* x704 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1167) (= x430 (div x1167 x195)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x704)) (= x430 x1271))) (and x1196 (= 0 x1271)))) x209)))
(assert (= 363856219 (x1303 (x74 363856219))))
(assert (x1438 x950))
(assert (= (and x1207 x326) x555))
(assert (= (and x215 (not x756)) x816))
(assert (= (x1303 (x74 1779675522)) 1779675522))
(assert (= x407 (and x755 (not x805))))
(assert (x1438 x249))
(assert (x1438 x1564))
(assert (= x261 (=> (and (= x496 (x1240 x1263)) (= x244 (x1114 (+ 32 x634))) (= x849 (x1144 x1263)) (< 0 x496) (ite x301 x301 (= x1080 (div x719 x1091))) (> x784 0) (= x94 (div x719 1000000000000000000)) (= (x1114 (+ x1263 32)) x80) (= (x1240 x634) x784) (= (= 0 x1091) x301) (= (mod (* x1091 x1080) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x719) (= (not (< 1 x849)) x1132) (= (x1240 x80) x1091)) (and x464 x1132))))
(assert (x1438 x1164))
(assert (x1438 x491))
(assert (=> (>= 10000 x1200) (= (x74 x1200) (x1700 x1200))))
(assert (= x1610 (or x1466 x1745)))
(assert (= (and (not x1059) x696) x807))
(assert (x1438 x1282))
(assert (x1438 x1436))
(assert (x396 x1107))
(assert (= (=> (and (< 0 x1652) (= (x144 x1457) x1652) (= (x1114 (+ x1457 32)) x1618) (= (not (> x1733 1)) x854) (= (x1260 x1457) x1733)) (and x553 x854)) x440))
(assert (= (x74 238709543) (x1700 238709543)))
(assert (= (x1303 (x74 4167276458)) 4167276458))
(assert (= (or x807 x863) x1530))
(assert (x1438 x237))
(assert (x1438 x858))
(assert (x1438 x785))
(assert (x1438 x942))
(assert (= 1871194811 (x1303 (x74 1871194811))))
(assert (x417 x530))
(assert (x1438 x1118))
(assert (x1438 x614))
(assert (= (x1303 (x1700 x870)) x870))
(assert (x1438 x262))
(assert (x417 x1308))
(assert (x1438 x1254))
(assert (= (x1303 (x1700 274184521717934524641157099916833587280)) 274184521717934524641157099916833587280))
(assert (x417 x1224))
(assert (= (x206 (+ (- x389 x467) x1532)) 0))
(assert (= x1778 (or (and x1581 x492) x1479)))
(assert (x1438 x1519))
(assert (= x1130 (or x1551 x1704)))
(assert (x1438 x1262))
(assert (x1438 x467))
(assert (x1438 x1003))
(assert (= (x1700 1439069736) (x74 1439069736)))
(assert (x1438 x647))
(assert (= (x74 1461501637330902918203684832716283019655932542975) (x1700 1461501637330902918203684832716283019655932542975)))
(assert (= (and x15 x1668) x380))
(assert (x1438 x1354))
(assert (x1438 x569))
(assert (x1115 x1004))
(assert (x1115 x253))
(assert (x1438 x1597))
(assert (x1438 x1252))
(assert (x1438 x1714))
(assert (x1438 x1088))
(assert (x1438 x914))
(assert (x1438 x879))
(assert (x1438 x312))
(assert (x1438 x660))
(assert (x1438 x917))
(assert (x1438 x212))
(assert (x417 x693))
(assert (x1438 x550))
(assert (= x1322 (or (and x623 x1066) (and x150 (not x954)))))
(assert (x1438 x89))
(assert (= (=> (= x1214 x226) x928) x1737))
(assert (= x532 (and x1771 x763)))
(assert (x1438 x999))
(assert (= x1666 (or x1469 x1179)))
(assert (x417 x237))
(assert (x1438 x622))
(assert (= (and x957 (not x190)) x25))
(assert (= (x308 x2) 0))
(assert (= (x523 x369 192) (mod (* x369 6277101735386680763835789423207666416102355444464034512896) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x1700 954831406) (x74 954831406)))
(assert (x1438 x783))
(assert (= x1228 (or (and x106 x1346) x517)))
(assert (= (or x167 x55) x1678))
(assert (= (x308 x707) 0))
(assert (= 0 (x308 160)))
(assert (x1115 x258))
(assert (=> (<= x1074 10000) (= (x1700 x1074) (x74 x1074))))
(assert (x1438 x956))
(assert (x1438 x1454))
(assert (= (and (not x425) x1015) x558))
(assert (x1438 x147))
(assert (= 2835717307 (x1303 (x74 2835717307))))
(assert (= (or x291 x1593) x1125))
(assert (= x153 (or x1425 x1201)))
(assert (= x913 (and (not x202) x1297)))
(assert (x1438 x489))
(assert (x1438 x1148))
(assert (x1438 x1314))
(assert (= 0 (x206 (+ (- x1458 x467) x1532))))
(assert (= (x1303 (x1700 x227)) x227))
(assert (= x653 (=> (and (not (= x1293 0)) (= (x1721 (- x1597 x1292)) x139) (= (x1448 (x1700 x1316)) x141) (= x827 x1316) (not (>= (+ x1118 x597) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> 4 x518)) (= (x1114 (+ 31 x1476)) x956) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x956) x1768) (not (or (> x1476 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1476)) (> 32 x1476)))) (= x1118 (x1165 x455)) (= x768 (x1114 (+ x597 x1118))) (= 36 x518) (not (> 954831406 x325)) (= x325 1889567281) (< x325 2127478272) (= x139 x518) (= x1292 (x1114 (+ x1768 x1729))) (not (> 1871194811 x325)) (not (= x64 0)) (= x1597 (x1114 (+ x1421 32))) (< 0 x141) (= x1729 x455) (= x1302 (x1721 (- x518 4))) (> 1984976886 x325) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x836) (= (x1114 (+ 4 x1292)) x1421) (= (or (and (> 32 x1302) (= (<= x1302 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1302)) x1066) (= (x1448 (x1700 x1316)) x64) (= x1421 x166) (not (< x325 1439069736)) (not (= x325 1871194811)) (not (= 1883652118 x325))) (and (=> (and (and (= true x954) (= x827 x1781)) (not x1066)) (and (=> (not x954) x1310) (=> (and x954 (and (= x472 32) (= (x619 (x1700 x827) (x74 0) 0) x285) (= x614 x179) (= x434 1) (= x1160 (x313 x285)))) x327))) (=> x1066 x1310)))))
(assert (x1438 x64))
(assert (x1438 x1080))
(assert (x1438 x1686))
(assert (x1438 x152))
(assert (x1438 x770))
(assert (x1438 x1559))
(assert (x1438 x1424))
(assert (=> (>= 10000 x1333) (= (x1700 x1333) (x74 x1333))))
(assert (x1438 x1604))
(assert (= x552 (and x1625 x1367)))
(assert (x1438 x986))
(assert (x1438 x1787))
(assert (x1438 x557))
(assert (x1438 x926))
(assert (x1438 x907))
(assert (= (and x651 x174) x1016))
(assert (x1438 x186))
(assert (= x1472 (=> (and (or (and (and (= x1594 x1208) (= x1553 0)) x593) (and (and (or (and (not x488) (and (= x1553 0) (= x1208 x1594))) (and (and (= x255 (x619 (x1700 x1109) (x74 0) 0)) (= x1553 1) (= x133 (x429 x255)) (= 32 x1594)) x488)) (and (= x488 true) (= x1109 x700))) (not x593))) (and (= (x1114 (+ x1002 32)) x1236) (not (>= (+ x45 x266) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x145 (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1490)) (not (= 1883652118 x673)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (and (< x875 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) true))) x593) (not (< x673 1439069736)) (not (or (> x962 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x962 32) (= (<= x962 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1672 (x1721 (- x1236 x41))) (= x673 1889567281) (= x506 x1595) (= x1681 (x1114 (+ x45 x266))) (= (x1448 (x1700 x1316)) x439) (not (< x673 1871194811)) (= (x1721 (- x1604 4)) x875) (= (x1448 (x1700 x1316)) x315) (= (x1114 (+ x962 31)) x1490) (= x1002 x136) (not (= 1871194811 x673)) (= x266 (x967 x506)) (= x1316 x1109) (> 1984976886 x673) (= x41 (x1114 (+ x145 x1595))) (= x1672 x1604) (> 2127478272 x673) (not (< x1604 4)) (= (x1114 (+ 4 x41)) x1002) (= x1152 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= x315 0)) (not (> 954831406 x673)) (= x1604 36) (not (= 0 x290)) (> x439 0))) x1319)))
(assert (x1438 x1465))
(assert (= (x1303 (x74 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x1438 x994))
(assert (x1438 x784))
(assert (= 0 (x219 (+ x824 (- x569 x121)))))
(assert (x1438 x1456))
(assert (= x748 (and (not x1563) x126)))
(assert (x1438 x475))
(assert (= (and x593 x203) x201))
(assert (=> (<= x227 10000) (= (x74 x227) (x1700 x227))))
(assert (x1115 255))
(assert (x1438 x179))
(assert (= (and x347 x115) x339))
(assert (x1438 x1556))
(assert (x1438 x1486))
(assert (x1438 x385))
(assert (x1115 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x718 (and x886 x476)))
(assert (= 0 (x219 (+ x824 (- x1366 x121)))))
(assert (= (or x990 x585) x116))
(assert (x1438 x666))
(assert (=> (>= 10000 x237) (= (x74 x237) (x1700 x237))))
(assert (= x143 (and x746 (not x282))))
(assert (x1438 x1136))
(assert (x1438 x1695))
(assert (x1438 x636))
(assert (x1438 x1268))
(assert (= (mod (* 26959946667150639794667015087019630673637144422540572481103610249216 x826) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x523 x826 224)))
(assert (x1438 x1594))
(assert (= (x308 x168) 0))
(assert (= 0 (x1021 x455)))
(assert (x1438 x1180))
(assert (x1438 x1373))
(assert (= (x1303 (x1700 x1148)) x1148))
(assert (x1438 x985))
(assert (x1115 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1438 x1492))
(assert (x417 x870))
(assert (= 0 (x308 x1787)))
(assert (= (x206 (+ x1532 (- x234 x467))) 0))
(assert (x417 x537))
(assert (x1438 x210))
(assert (x1438 x267))
(assert (= x742 (and x515 (not x538))))
(assert (= 0 (x206 (+ (- x1437 x467) x1532))))
(assert (=> (<= x813 10000) (= (x1700 x813) (x74 x813))))
(assert (= x1106 (and x1138 (not x192))))
(assert (x1438 x1603))
(assert (x1438 x584))
(assert (= (=> (and (and (= x598 (> x973 0)) (= (= 0 x631) x283) (not (= x1617 0)) (ite x283 x283 (= (div x471 x631) x1017)) (= (mod (* x631 x1017) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x471) (= (div x471 x1617) x973) (= x1617 (ite (< x1017 1000000000000000000) (x1721 (- 1000000000000000000 x1017)) 0))) (or (and (not x598) (= x466 x194)) (and (and (= x1691 (x619 (x1700 x537) (x74 0) 0)) (= (x393 1461501637330902918203684832716283019655932542975 x61) x948) (= x121 x961) (= (+ x443 x194) x1131) (= x443 (x1114 (+ x973 x661))) (= x466 x1612) (= x1 (x619 (x1700 x948) (x74 0) 0)) (= 0 x644) (= x537 (x393 1461501637330902918203684832716283019655932542975 x61)) (= x36 (- x1131 x1154)) (= x1154 (x940 x1)) (= x452 (= x1612 x36)) (= x661 (x940 x1691)) x452 (not (>= (+ x973 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1741 (x1114 (+ x1324 x973))) (= (x1318 (x74 2)) x1324) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x661 x973)))) x598))) x966) x1073))
(assert (= (or x12 x668) x1452))
(assert (= (x1700 2580288415) (x74 2580288415)))
(assert (x1438 x1596))
(assert (x1438 x1208))
(assert (x1438 x688))
(assert (= x1690 (and x1267 (not x1732))))
(assert (x1515 x258))
(assert (x1438 x1548))
(assert (x1438 x1200))
(assert (x1438 x1397))
(assert (x1438 x245))
(assert (x1438 x1022))
(assert (x1438 x1194))
(assert (x417 x307))
(assert (x1438 x1561))
(assert (= (x1303 (x74 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x928 (=> (= x83 (not (> x1635 1))) (and x83 (=> (= x581 x1214) x419)))))
(assert (x1115 x1683))
(assert (= (x1303 (x74 404098525)) 404098525))
(assert (= 0 (x308 x1770)))
(assert (x1438 x161))
(assert (x1438 x494))
(assert (x1438 x208))
(assert (x1438 x1217))
(assert (x1438 x1008))
(assert (= (or x1610 x983) x365))
(assert (x1438 x1611))
(assert (= (and x1038 x26) x1562))
(assert (x1438 x473))
(assert (= x165 (or x1720 x1778)))
(assert (x1438 x620))
(assert (x1438 x166))
(assert (x1438 x902))
(assert (= x758 (=> (and (= (x811 x1094) x1400) (= (> x1400 0) x72)) (and (=> x72 x402) (=> (not x72) x946)))))
(assert (= x117 (and x809 x306)))
(assert (x111 x252))
(assert (= (x1303 (x1700 x827)) x827))
(assert (= (and x874 (not x493)) x1286))
(assert (= (and x1141 x1558) x1632))
(assert (x1438 x1209))
(assert (= (and x878 x1060) x1026))
(assert (x1115 x186))
(assert (x1438 x1077))
(assert (x1438 x1552))
(assert (x1438 x258))
(assert (= (or x1218 x1061 x201) x814))
(assert (= (or x782 x1009) x933))
(assert (x1438 x1692))
(assert (= (=> (and (= 0 x434) (= x858 x472) (= x179 x614)) x327) x1310))
(assert (= x307 (x1303 (x1700 x307))))
(assert (= 1000000000000000000 (x1303 (x74 1000000000000000000))))
(assert (x1438 x1654))
(assert (x1438 x1543))
(assert (x1438 x248))
(assert (x1438 x318))
(assert (x1438 x281))
(assert (x1438 x1500))
(assert (x1438 x750))
(assert (x1438 x714))
(assert (x1438 x465))
(assert (= (or x677 (and (not x469) x1235)) x203))
(assert (= x632 (x1303 (x1700 x632))))
(assert (= x328 (x1303 (x1700 x328))))
(assert (= x1775 (and x1130 (not x598))))
(assert (x1438 x1408))
(assert (= (x1303 (x1700 x437)) x437))
(assert (x1438 x564))
(assert (= (or (and x844 (not x1027)) x1463) x1475))
(assert (= (and x1462 x149) x865))
(assert (x1438 x41))
(assert (x417 x728))
(assert (x1438 x367))
(assert (x1438 x708))
(assert (x1438 x1650))
(assert (x396 x253))
(assert (= x1259 (or x108 x1667)))
(assert (x1438 x780))
(assert (x1438 x1335))
(assert (x1438 x1269))
(assert (x1438 x568))
(assert (x1438 x1634))
(assert (= (x969 x1747 255) (div x1747 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x1438 x1265))
(assert (x1438 x1766))
(assert (x1438 x941))
(assert (= x533 (=> (and (and (= x640 x1292) (not (or (and (= (<= x472 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x472 32)) (> x472 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x146 (x924 x640)) (= x1435 x187) (= x1435 (x1114 (+ x146 x768))) (not (= 0 x434)) (not (>= (+ x768 x146) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (= x414 (x1114 (+ 31 x312))) (= x876 1962127369) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x764)) (< 227 x764)) (not (> x1646 18446744073709551615)) (= x253 x1296) (not (= x876 1871194811)) (not (= x876 1889567281)) (= x253 x868) (= x701 (x1114 (+ x485 x1698))) (< x876 1984976886) (= x312 (x1114 (+ 4 x890))) (= (= x100 x99) x191) (= x1763 (x1721 (- x764 4))) (= (mod (* 32 x1646) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x964) (> 2127478272 x876) (= (= x643 (mod (* 32 x182) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x648) (= false x1658) (= x214 x1664) (= x1432 (or x729 x952)) (= (> x1646 0) x479) (not (> 1871194811 x876)) (not (or (and (< x1763 224) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1763))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1763))) (< 0 x385) (= x1453 0) (= x1051 x1209) (not (< x876 1439069736)) (or (and (= (<= x414 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x764 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x414 x764)) (and (<= x764 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x414 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x67 x832) (= x1742 x1266) (= x702 x187) (= x952 (> x1764 18446744073709551615)) (= x729 (> 128 x1764)) (= (x97 x312) x1646) (>= x1621 0) (= x752 x714) (<= x96 1461501637330902918203684832716283019655932542975) (= false x1215) (= x485 (x1114 (+ 32 x312))) (= x901 (x1114 (+ x964 32))) (not (< 18446744073709551615 x1692)) (<= 0 x1245) x648 (<= 0 x246) (= x385 (x1448 (x1700 x1316))) (not (> 4 x764)) (>= 1461501637330902918203684832716283019655932542975 x832) (not (> 954831406 x876)) (>= 1461501637330902918203684832716283019655932542975 x1621) (= x641 x1107) (= x1107 x1338) (not (= 1883652118 x876)) (= 1962127369 x415) (= x656 x1664) (<= 0 x832) x191 (<= x253 1461501637330902918203684832716283019655932542975) (= x1139 128) (<= x246 1461501637330902918203684832716283019655932542975) (= x890 x1692) (= (x1114 (+ x901 128)) x1764) (= x276 true) (= x228 x130) (<= 0 x1251) (not (> x701 x764)) (>= 1461501637330902918203684832716283019655932542975 x1245) (= x246 x1266) (>= x96 0) (= (mod (* x1646 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1698) (>= 1461501637330902918203684832716283019655932542975 x1107) (= x90 3586168516) (= x1453 x1381) (<= x1251 1461501637330902918203684832716283019655932542975) (= x568 x1586) (>= x228 0) (= 0 x740) (= x130 x96) (>= 1461501637330902918203684832716283019655932542975 x228) (= x740 (ite x1432 1 0)))) (and (=> (and (and (= x1275 (x1114 (+ 32 x485))) (= (< 1 x1646) x1653) (= (x97 x485) x62)) x479) (and (=> (not x1653) x321) (=> (and x1653 (and (= (x97 x1275) x942) (= x756 (< 2 x1646)) (= x1084 (x1114 (+ x1275 32))))) (and (=> (and x756 (and (= (< 3 x1646) x125) (= x1029 (x97 x1084)) (= (x1114 (+ 32 x1084)) x1180))) (and (=> (not x125) x321) (=> x125 x1579))) (=> (not x756) x321))))) (=> (not x479) x321)))))
(assert (x1438 x1212))
(assert (= x355 (and x365 (not x1076))))
(assert (x1438 x880))
(assert (=> (<= x999 10000) (= (x1700 x999) (x74 x999))))
(assert (x1438 x508))
(assert (x1115 x11))
(assert (x1438 x656))
(assert (= (and x1141 (not x1558)) x1669))
(assert (x1438 x320))
(assert (= x529 (or x378 (and (not x1056) x814))))
(assert (x1438 x1588))
(assert (x1438 x1507))
(assert (= x137 (or x1506 x1641 x1483 (and x1015 x425) (and x558 (not x1622)) x1256)))
(assert (x1115 x252))
(assert (x1438 x485))
(assert (x1438 x1763))
(assert (x1438 x1291))
(assert (= x1128 (and x433 x1643)))
(assert (x1438 x884))
(assert (= x1061 (and x1203 x488)))
(assert (x1438 x1343))
(assert (x1438 x516))
(assert (x1438 x414))
(assert (x1438 x1615))
(assert (x417 x1577))
(assert (x1438 x1683))
(assert (= x1720 (and (not x492) x1581)))
(assert (= (x74 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1700 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x1438 x909))
(assert (x1438 x672))
(assert (x1438 x1274))
(assert (= (x1700 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x74 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (=> (<= x1307 10000) (= (x1700 x1307) (x74 x1307))))
(assert (x1438 x699))
(assert (= (x219 (+ x824 (- 128 x121))) 0))
(assert (x1438 x436))
(assert (= (x206 (+ x1532 (- x1787 x467))) 0))
(assert (x1438 x121))
(assert (x417 274184521717934524641157099916833587280))
(assert (x1438 x526))
(assert (x1438 x673))
(assert (x1438 x634))
(assert (= x1134 (or x407 x851)))
(assert (= (x1303 (x74 2514000705)) 2514000705))
(assert (x417 x1074))
(assert (=> (>= 10000 x1242) (= (x1700 x1242) (x74 x1242))))
(assert (x1438 x357))
(assert (=> (>= 10000 x871) (= (x74 x871) (x1700 x871))))
(assert (= 0 (x308 x1086)))
(assert (x1438 x62))
(assert (x1438 x1664))
(assert (x1438 x247))
(assert (x1736 x1683))
(assert (= (or x470 x1505) x515))
(assert (x417 x239))
(assert (x1438 x866))
(assert (x1438 x1108))
(assert (x1438 x341))
(assert (= x844 (or x1443 x137)))
(assert (x1438 x730))
(assert (x1438 x1445))
(assert (x1115 x956))
(assert (= x1316 (x1303 (x1700 x1316))))
(assert (x1438 x68))
(assert (= x42 (and x915 x380)))
(assert (x1438 x53))
(assert (=> (>= 10000 x827) (= (x74 x827) (x1700 x827))))
(assert (= (x219 (+ x824 (- x152 x121))) 0))
(assert (x1438 x6))
(assert (x1438 x1193))
(assert (x1438 x311))
(assert (x417 x1178))
(assert (x1438 x788))
(assert (= (and x1259 (not x1470)) x932))
(assert (= (and x1623 x843) x517))
(assert (x1438 x685))
(assert (x1438 x1244))
(assert (= (x1303 (x1700 x1178)) x1178))
(assert (= (x1700 115792089237316195423570985008687907853269984665561335876943319670319585689600) (x74 115792089237316195423570985008687907853269984665561335876943319670319585689600)))
(assert (x1438 x1460))
(assert (= (x308 x509) 0))
(assert (x1438 x610))
(assert (x1438 x462))
(assert (= x199 (x1303 (x1700 x199))))
(assert (= (x74 404098525) (x1700 404098525)))
(assert (x1438 x95))
(assert (= (and (not x1257) x453) x77))
(assert (x417 x1659))
(assert (=> (<= x124 10000) (= (x1700 x124) (x74 x124))))
(assert (x1438 x632))
(assert (x1438 x162))
(assert (= (=> (and (and (ite x360 x360 (= x1418 (div x621 x1634))) (= (> x1740 0) x1783) (not (= x5 0)) (= (mod (* x120 x1113) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x557) (= x483 (div x621 1000000000000000000)) (= x120 (x1114 (+ x1219 x483))) (= x1740 (div x557 x5)) (= (ite (> 1000000000000000000 x120) (x1721 (- 1000000000000000000 x120)) 0) x5) (= (= x1634 0) x360) (= (mod (* x1418 x1634) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x621) (= x646 (= x1113 0)) (ite x646 x646 (= (div x557 x1113) x120))) (or (and (= x194 x179) (not x1783)) (and (and (= (x619 (x1700 x1148) (x74 0) 0) x1687) (= (x604 x1040) x783) (= (= x1660 x616) x1071) (= x1436 0) (not (>= (+ x783 x1740) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1071 (= x1040 (x619 (x1700 x272) (x74 0) 0)) (= x194 x616) (= x1261 (x604 x1687)) (= x1660 (- x1706 x1261)) (= (x393 1461501637330902918203684832716283019655932542975 x950) x272) (= x267 (x1540 (x74 2))) (= x1148 (x393 1461501637330902918203684832716283019655932542975 x950)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1740 x267))) (= x1772 x121) (= x1706 (+ x179 x1055)) (= (x1114 (+ x783 x1740)) x1055) (= (x1114 (+ x267 x1740)) x1287)) x1783))) x1624) x592))
(assert (x1438 x1449))
(assert (= (and x480 x441) x1551))
(assert (= x112 (=> (and (and (= x1170 (x29 (x1700 x1316))) (not (= x1316 x1354)) (not (= x1242 x897)) (= x1041 false) (< 0 x1316) (= x698 1962127369) (< 0 x363) (<= x363 1461501637330902918203684832716283019655932542975) (> 2127478272 x1749) (= x221 (x29 (x1700 x1354))) (>= 1461501637330902918203684832716283019655932542975 x897) x223 (<= x1242 1461501637330902918203684832716283019655932542975) (not (= 363856219 x1749)) (= x1749 404098525) (= x943 false) (= 7 x898) (< 0 x1354) (<= 0 x524) (>= x1587 0) (not (= x363 x1242)) (>= x1170 0) (= (> (x1448 (x1700 x1242)) 0) x1298) (= x1007 x1121) x1499 (not (= x1316 x363)) (< 0 x1242) (= (x29 (x1700 x363)) x925) (= x196 false) (< 0 x56) (= x1473 false) (= (> (x1448 (x1700 x1316)) 0) x223) x1225 (<= x1316 1461501637330902918203684832716283019655932542975) (not (= x897 x363)) (not (= x1354 x363)) (not (= x1316 x1242)) (< 0 x897) (not (= 370555621 x1749)) x1068 (not (= x897 x1354)) (> 954831406 x1749) (= (> (x1448 (x1700 x897)) 0) x1225) (= x1068 (> (x1448 (x1700 x363)) 0)) (>= 1461501637330902918203684832716283019655932542975 x1354) (= x1007 (x1368 (x74 2))) (< x1749 500647658) (= x56 (x1448 (x1700 x1316))) (= (< 0 (x1448 (x1700 x1354))) x1499) (= (x29 (x1700 x1242)) x1587) (not (= x1242 x1354)) (>= x221 0) (not (= x897 x1316)) (not (< x1749 228615836)) x1298 (= (x29 (x1700 x897)) x524) (<= 0 x925) (not (> 363856219 x1749))) (and (and (= x848 (x1448 (x1700 x897))) (< x927 363856219) (= x1561 128) (> 2127478272 x927) (not (> 228615836 x927)) (= x269 (x1448 (x1700 x1316))) (= 36 x1230) (= (x1721 (- x1230 4)) x1377) (not (= x927 238709543)) (= x1307 x1316) (< 0 x269) (= x1427 (x1448 (x1700 x897))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x850) (not (= x927 228615836)) (not (> 4 x1230)) (> x848 0) (= 36 x1230) (= x654 (> 32 x1377)) (not (= x1427 0)) (= x927 307731845) (not (= x295 826074471)) (= x132 x1121) (not (< x295 826074471)) (= 1889567281 x295) (> 500647658 x927) (< x927 954831406)) (or (and (not x654) (and (= x1460 x1520) (<= x1689 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x619 (x1700 x1307) (x74 1) 0) x1157) (<= 0 x1689) (= 32 x93) (= x1684 1) (= x1105 x1307) (= (x376 x1157) x1689))) (and (and (= x1460 x1520) (= x1101 x93) (= x1684 0)) x654)))) x366)))
(assert (x1438 x649))
(assert (= (and x282 x746) x1325))
(assert (= (x1700 3028789119) (x74 3028789119)))
(assert (x1438 x47))
(assert (x1438 x170))
(assert (= x983 (and x531 x1162)))
(assert (x1438 x1121))
(assert (x417 x813))
(assert (x111 x445))
(assert (x1438 x22))
(assert (= x20 (and x1191 x591)))
(assert (x1115 115792089237316195417293883273301227089434195242512125785869492901042639077375))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1303 (x74 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (x206 (+ x1532 (- x168 x467))) 0))
(assert (x1438 x873))
(assert (x1438 x588))
(assert (x1438 x1264))
(assert (x1115 x61))
(assert (x1115 x320))
(assert (x1438 x998))
(assert (x1438 x1103))
(assert (= (and x1678 (not x1478)) x390))
(assert (= (x1700 4294967296) (x74 4294967296)))
(assert (= x694 (and x1045 x1451)))
(assert (x1438 x252))
(assert (x1438 x562))
(assert (x1438 x1379))
(assert (x1438 x968))
(assert (x1438 x450))
(assert (x1438 x259))
(assert (x1438 x839))
(assert (x1438 x1710))
(assert (= x118 (and x1162 (not x531))))
(assert (x1438 x193))
(assert (x1438 x1539))
(assert (x1438 x296))
(assert (x1438 x442))
(assert (x1438 x973))
(assert (= (and x1249 x447) x1227))
(assert (= x511 (and x558 x1622)))
(assert (x1438 x501))
(assert (= (and x1475 x1186) x1626))
(assert (x1438 x1788))
(assert (x1438 x861))
(assert (= (and x1752 (not x611)) x1174))
(assert (x1438 x1412))
(assert (= x560 x1560))
(assert (x1438 x779))
(assert (x1438 x408))
(assert (x1438 x1238))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1303 (x74 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (= x863 (and x696 x1059)))
(assert (x1438 x1315))
(assert (= (x308 x33) 0))
(assert (= (x1303 (x1700 x871)) x871))
(assert (= x1307 (x1303 (x1700 x1307))))
(assert (x1438 x401))
(assert (x1438 x527))
(assert (x1115 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1438 x1629))
(assert (= (x1303 (x1700 x239)) x239))
(assert (x1438 x1052))
(assert (x1438 x375))
(assert (x1438 x1520))
(assert (= (x1303 (x1700 x272)) x272))
(assert (x1438 x371))
(assert (x1438 x1565))
(assert (x1438 x260))
(assert (x1438 x1595))
(assert (x1438 x1167))
(assert (= x1312 (=> (= x910 (not (> x1635 1))) (and (=> (= x861 x1457) x1140) x910))))
(assert (x1438 x345))
(assert (= (and x1758 x1728) x717))
(assert (= (and x1134 x852) x1485))
(assert (x1438 x781))
(assert (= (x1303 (x74 3224796394)) 3224796394))
(assert (= (x1303 (x1700 x1619)) x1619))
(assert (x1438 x1754))
(assert (x1438 x1371))
(assert (= (x523 x670 96) (mod (* 79228162514264337593543950336 x670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1438 x626))
(assert (x1438 x349))
(assert (=> (>= 10000 x1619) (= (x74 x1619) (x1700 x1619))))
(assert (x1438 x1105))
(assert (x1438 x1093))
(assert (= 1962127369 (x1303 (x74 1962127369))))
(assert (x1438 x882))
(assert (x1438 x827))
(assert (x1438 x621))
(assert (= x813 (x1303 (x1700 x813))))
(assert (= (and x1783 x960) x167))
(assert (x1438 x1547))
(assert (= x955 (=> (and (or (not x852) x852) (= (= x1693 0) x852)) x224)))
(assert (x1438 x1290))
(assert (x1438 x885))
(assert (= x1625 (and x1090 (not x835))))
(assert (x1438 x820))
(assert (x1438 x725))
(assert (x1438 x500))
(assert (x417 x1339))
(assert (x1438 x1302))
(assert (= (=> (and (> x353 0) (= x353 (x791 x902)) (= (x381 x902) x1092) (= (not (< 1 x1092)) x1054) (= x1042 (x1114 (+ x902 32)))) (and x919 x1054)) x1362))
(assert (x1438 x1587))
(assert (= x1018 (=> (and (= x1374 x785) (= x1693 0) (= x69 x1217)) x955)))
(assert (= (=> (and (= x538 (= 0 x1570)) (or (and (= 0 x1634) x538) (and (not x538) (and (= x1634 x587) (= (div x1474 x195) x587) (= (mod (* x1570 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1474) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x1570)))))) x592) x1197))
(assert (x1438 x1223))
(assert (=> (<= x503 10000) (= (x74 x503) (x1700 x503))))
(assert (x1438 x1092))
(assert (= x1205 (=> (and (= x162 0) (= x242 x977)) x984)))
(assert (= x591 (or x1182 x1562)))
(assert (x1438 x733))
(assert (= (x1700 2127478272) (x74 2127478272)))
(assert (x1438 x1618))
(assert (= (=> (and (= x341 (x1114 (+ 32 x436))) (= x564 x489) (= x263 (x1114 (+ 32 x1639))) (= x1357 (x1410 x1639)) (= x535 (< 0 x1357)) (= x588 64) (= (x1114 (+ 64 x564)) x436)) (and (=> (and (not x535) (and (= x1048 x263) (= x341 x318) (= 0 x422))) x176) (=> (and x535 (and (= (x978 x263) x1375) (= x809 (> x1357 1)) (= (x1114 (+ 32 x263)) x707) (= x40 (x1114 (+ x341 32))))) (and (=> (and x809 (and (= (x1114 (+ x707 32)) x408) (= (x1330 x707) x1127) (= x857 (x1114 (+ 32 x40))) (= (< 2 x1357) x1510))) (and (=> (and (and (= x857 x318) (= x1048 x408) (= x422 2)) (not x1510)) x176) (=> (and (and (= x543 (x1114 (+ 32 x857))) (= (> x1357 3) x433) (= (x1114 (+ 32 x408)) x389) (= x1166 (x1392 x408))) x1510) (and (=> x433 x342) (=> (and (and (= 3 x422) (= x389 x1048) (= x318 x543)) (not x433)) x176))))) (=> (and (and (= x40 x318) (= 1 x422) (= x707 x1048)) (not x809)) x176))))) x1640))
(assert (= (and x1138 x192) x18))
(assert (x1438 x1381))
(assert (x1438 x1769))
(assert (= (x1700 112349551054952423155953805921267728290102753186399332250345724850365349756928) (x74 112349551054952423155953805921267728290102753186399332250345724850365349756928)))
(assert (x1438 x171))
(assert (x1438 x1375))
(assert (= (x969 x522 96) (div x522 79228162514264337593543950336)))
(assert (x1438 x1145))
(assert (x1438 x600))
(assert (x1438 x43))
(assert (x1438 x8))
(assert (x1438 x96))
(assert (x1438 x455))
(assert (= 115792089237316195423570985008687907853269984665561335876943319670319585689600 (x1303 (x74 115792089237316195423570985008687907853269984665561335876943319670319585689600))))
(assert (x1438 x1742))
(assert (x1438 x1701))
(assert (= (=> (and (not (= 2714230913 x519)) (= x425 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1665) (and (> 64 x1665) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1665))))) (= x1415 x161) (= x247 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x968 x1082) (= x1776 (x1114 (+ x1574 32))) (= 2835717307 x519) (= (x1448 (x1700 x1316)) x713) (not (< x519 2681156919)) (> 2863377861 x519) (< 0 x713) (= x1542 x51) (not (= 2681156919 x519)) (not (< x519 2580288415)) (< x519 3224796394) (= (x1448 (x1700 x1316)) x481) (= (x1114 (+ x787 64)) x780) (not (> 2127478272 x519)) (not (= x519 2757214935)) (not (< x1082 4)) (= (x1114 (+ 4 x1282)) x787) (= x968 (x1721 (- x780 x1282))) (= x1665 (x1721 (- x1082 4))) (not (= x481 0)) (= x1415 (x393 1461501637330902918203684832716283019655932542975 x253)) (= x1082 68) (= x1574 x787)) (and (=> x425 x1205) (=> (and (not x425) (and (= true x1622) (= x161 x872))) (and (=> (not x1622) x1205) (=> (and (and (= x1089 x1542) (= (= 0 x1316) x514)) x1622) (and (=> x514 x1205) (=> (and (not x514) (= (= 0 x161) x1762)) (and (=> x1762 x1205) (=> (and (not x1762) (and (= x1492 416) (= x1731 (> x1542 x1585)) (= x989 (x619 (x1700 x1316) (x74 0) 0)) (= (x991 x989) x1585))) (and (=> x1731 x1205) (=> (and (and (= (x991 x351) x834) (= x618 (= x1414 x1151)) x618 (= x937 (x1501 x1326)) (= x1414 (- x92 x834)) (= x351 (x619 (x1700 x1316) (x74 0) 0)) (= x65 (x1721 (- x1585 x1542))) (= x92 (+ x65 x785)) (= (< x1545 x937) x284) (= x1545 (x1114 (+ x937 x1542))) (= (x619 (x1700 x161) (x74 0) 0) x1326)) (not x1731)) (and (=> (and (not x284) (and (= x262 (x1501 x1750)) (= x1750 (x619 (x1700 x161) (x74 0) 0)) (= x162 1) (= x110 (- x819 x262)) (= x242 32) (= (= x110 x1145) x319) x319 (= 1 x1078) (= x798 (x1216 128)) (= (x1216 128) x1471) (= (+ x1545 x1151) x819))) x984) (=> x284 x1205))))))))))))) x808))
(assert (= (and x1267 x1732) x326))
(assert (= x732 (and x511 (not x514))))
(assert (x1438 x1166))
(assert (x1438 x132))
(assert (x1438 x1537))
(assert (=> (>= 10000 x693) (= (x74 x693) (x1700 x693))))
(assert (x1438 x214))
(assert (= (=> (and (= x1639 x1457) (= x1401 x140) (= x1493 x1284) (= x303 x466)) x1083) x553))
(assert (x1438 x795))
(assert (= x1579 (=> (and (= (not (< 4 x1646)) x731) (= (x97 x1180) x1456)) (and x731 x321))))
(assert (= x990 (and x652 x790)))
(assert (x1438 x1648))
(assert (x1438 x831))
(assert (x1438 x325))
(assert (x111 x1189))
(assert (x1438 x518))
(assert (= (and x1530 (not x1382)) x1751))
(assert (= 0 (x308 x765)))
(assert (x1438 x263))
(assert (x1438 x120))
(assert (= (x219 (+ (- x796 x121) x824)) 0))
(assert (= 0 (x308 x1489)))
(assert (= x1745 (and x118 x386)))
(assert (x627 x11))
(assert (x609 x478))
(assert (= (div x998 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x969 x998 255)))
(assert (x1438 x1570))
(assert (x1115 x1107))
(assert (x1438 x124))
(assert (x1115 x941))
(assert (= (x1303 (x74 6277101735386680763835789423207666416102355444464034512895)) 6277101735386680763835789423207666416102355444464034512895))
(assert (x1438 x1271))
(assert (= 0 (x308 x788)))
(assert (x1438 x1427))
(assert (x417 x645))
(assert (= x1416 (and x479 x625)))
(assert (x1115 x142))
(assert (x417 x822))
(assert (x1438 x305))
(assert (x1438 x277))
(assert (x1438 x1420))
(assert (x1515 x1566))
(assert (x1438 x1711))
(assert (= (or x1344 x612) x843))
(assert (= (x206 (+ (- x1086 x467) x1532)) 0))
(assert (= x131 (=> (and (or x102 (not x102)) (= (= x615 0) x102)) x211)))
(assert (x1438 x522))
(assert (= x1224 (x1303 (x1700 x1224))))
(assert (x1438 x855))
(assert (= x1075 (=> (and (= x1257 (> x1635 0)) (= 0 x370)) (and (=> (and (= x1094 x467) (not x1257)) x900) (=> (and (= x190 (= 0 x733)) x1257) (and (=> (and x190 (and (= 1000000000000000000 x1651) (= x1785 x467))) x1571) (=> (and (and (or (and (and (= x410 1000000000000000000) (= x1278 x467)) x599) (and (not x599) (and (= x1195 x467) (= x1517 (x280 64)) (= x1614 (x1721 (- x9 4))) (= x258 (x1114 (+ 31 x1329))) (= x684 0) (> x1677 0) (= (> 32 x1614) x63) (= x574 x6) (= 3028789119 x1408) (= x9 36) (= x251 x6) (not x63) (= (x1114 (+ x494 x467)) x371) (= x1033 (x1114 (+ 4 x467))) (= x1194 (x1448 (x1700 274184521717934524641157099916833587280))) (= x1532 (x1149 64)) (not (= x1408 1779675522)) (= x1773 x9) (= x1488 x1033) (= x210 x410) (= x156 x574) (not (or (> x1329 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1329 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1329) true)))) (= x210 (x1289 x1195)) (= 81655993114286172543975849523773895523710823181222424266797447834442299080704 x516) (= (x1721 (- x635 x467)) x1773) (not (< x9 4)) (= (x393 79228162514264337593543950335 x251) x1607) (= 96 x1093) (= (x1114 (+ x1033 32)) x635) (not (= x1194 0)) (= x1677 (x1448 (x1700 x1316))) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x258) x494) (= (x1721 (- x562 x1532)) x1329) (= x371 x1278) (= x562 (x1114 (+ x1517 32)))))) (and (= x1786 (x619 (x74 0) (x74 17) 0)) (= x156 (x218 x1786)) (= x599 (= x156 0)))) (not x190)) x606)))))))
(assert (x1438 x273))
(assert (= (x1700 307731845) (x74 307731845)))
(assert (= (or x1434 x46) x1676))
(assert (= (x1700 26959946667150639794667015087019630673637144422540572481103610249215) (x74 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1438 x867))
(assert (x1438 x1063))
(assert (x1438 x1476))
(assert (x1438 x399))
(assert (x1438 x1091))
(assert (x417 x1148))
(assert (x1438 x792))
(assert (= 274184521717934524641157099916833587280 (x1303 (x74 274184521717934524641157099916833587280))))
(assert (x1438 x1055))
(assert (= (x219 (+ (- x87 x121) x824)) 0))
(assert (= (and x102 x982) x903))
(assert (x1438 x832))
(assert (= (or x1202 (and x1321 (not x1784))) x625))
(assert (x1438 x572))
(assert (x1115 18446744073709551615))
(assert (x1438 x1042))
(assert (x1438 x1377))
(assert (x1438 x1419))
(assert (x1438 x1768))
(assert (x417 x999))
(assert (= (x1303 (x74 3586168516)) 3586168516))
(assert (x1438 x373))
(assert (x1438 x1074))
(assert (x1438 x1168))
(assert (x1115 x1735))
(assert (x1438 x1386))
(assert (x1438 x1206))
(assert (x1438 x155))
(assert (x1438 x1450))
(assert (x1438 x1222))
(assert (x1438 x589))
(assert (x1438 x576))
(assert (x1438 x1467))
(assert (x1438 x274))
(assert (= (or x477 (and x1281 x542)) x1716))
(assert (x1438 x1372))
(assert (x1438 x1607))
(assert (x1438 x1211))
(assert (= (and x1340 x1606) x1505))
(assert (x1115 x1097))
(assert (= (=> (and (and (not (or (and (= (<= x242 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x242)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x242))) (not (= x162 0)) (= x274 (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x91)) (= (x1114 (+ 31 x242)) x91) (= x212 (x1114 (+ x1282 x274))) (= (> x1645 0) x1186)) (or (and (and (= x1564 (x1226 (x74 25))) (= x1079 25) (= x577 (x1347 (x74 25) 0)) (= x892 (x1226 x567)) (= x578 (x1114 (+ x1645 x892))) (< 2 x1564) (= (x19 x577 2) x567)) x1186) (and (not x1186) (= x1079 x624)))) x1496) x1129))
(assert (x1438 x849))
(assert (x1438 x123))
(assert (x1438 x50))
(assert (x1438 x583))
(assert (x1438 x297))
(assert (x1438 x310))
(assert (= x678 (=> (and (= x550 (x605 128)) (= x1191 (< 2 x550))) (and (=> (and x1191 (and (= x240 (= x897 x1316)) (= x51 (x605 x33)) (= x1722 (x605 x1284)) (> x1780 2) (= x1711 2) (= (x1114 (+ x193 32)) x33) (= (x1114 (+ 32 x739)) x1366) (= (x605 x1366) x1645) (= (x605 x1639) x1780) (< 2 x1722))) (and (=> x240 x98) (=> (and (= x542 (= x1316 x1354)) (not x240)) (and (=> (not x542) x808) (=> x542 x98))))) (=> (and (and (= x564 x1282) (= x869 x624)) (not x1191)) x1640)))))
(assert (=> (<= x1308 10000) (= (x1700 x1308) (x74 x1308))))
(assert (= (x1303 (x1700 x1420)) x1420))
(assert (= (and (not x535) x497) x683))
(assert (= 0 (x219 (+ x824 (- x389 x121)))))
(assert (x1115 x123))
(assert (x1438 x1488))
(assert (x1438 x543))
(assert (x1438 x938))
(assert (= 0 (x308 x1639)))
(assert (x1515 x956))
(assert (x417 x1354))
(assert (x1438 x864))
(assert (x1438 x537))
(assert (x1438 x66))
(assert (x1438 x1358))
(assert (= (x1303 (x1700 x897)) x897))
(assert (x1438 x883))
(assert (x1438 x279))
(assert (= (x1700 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x74 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x74 2863377861) (x1700 2863377861)))
(assert (x1438 x1696))
(assert (x1438 x768))
(assert (= (x1700 2835717307) (x74 2835717307)))
(assert (= (div x826 4294967296) (x969 x826 32)))
(assert (= (x206 (+ x1532 (- x1639 x467))) 0))
(assert (x1438 x857))
(assert (= x1709 (=> (and (= x50 (x271 x1284)) (= (x271 x193) x491) (= x317 (= x1354 x897)) (> x50 1) (= x193 (x1114 (+ 32 x509))) (= x1356 (x271 x739)) (= (x1114 (+ 32 x152)) x739) (= 1 x911) (= x1399 (x271 x1639)) (> x1399 1)) (and (=> x317 x559) (=> (and (not x317) (= true x492)) (and (=> (and (= x1354 x1316) (not x492)) x27) (=> x492 x559)))))))
(assert (x1438 x947))
(assert (x1438 x1568))
(assert (x1438 x87))
(assert (x417 x328))
(assert (x1438 x445))
(assert (x1438 x1139))
(assert (= 0 (x206 (+ (- x509 x467) x1532))))
(assert (= x1242 (x1303 (x1700 x1242))))
(assert (x1438 x1651))
(assert (x1438 x1542))
(assert (= (=> (and (or (not x1027) x1027) (= (= x162 0) x1027)) x1129) x984))
(assert (= 115792089237316195417293883273301227089434195242512125785869492901042639077375 (x1303 (x74 115792089237316195417293883273301227089434195242512125785869492901042639077375))))
(assert (x1438 x1101))
(assert (x1438 x771))
(assert (x1438 x752))
(assert (= 0 (x206 (+ x1532 (- x263 x467)))))
(assert (x417 x948))
(assert (= (x1303 (x1700 x503)) x503))
(assert (= x211 (=> (and (or (and (and (= 0 x290) (= x66 x962)) x447) (and (and (>= x1491 0) (= x962 32) (= x601 (x619 (x1700 x938) (x74 1) 0)) (= x762 x938) (= x290 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491) (= (x1243 x601) x1491)) (not x447))) (and (= x1316 x938) (= 1889567281 x1363) (= x879 36) (not (< x1363 826074471)) (= x866 (x1721 (- x931 x1595))) (= x879 x866) (not (= 826074471 x1363)) (= x1136 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x1114 (+ 128 x21)) x1595) (not (= 0 x450)) (not (< x879 4)) (= x45 (x188 128)) (= (> 32 x1769) x447) (= x47 x1315) (= x1769 (x1721 (- x879 4))) (not (= x615 0)) (= x21 (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1566)) (= (x1114 (+ 4 x1595)) x47) (> x1583 0) (= x931 (x1114 (+ x47 32))) (= x1583 (x1448 (x1700 x1354))) (= x1566 (x1114 (+ 31 x348))) (not (or (and (< x348 32) (= true (<= x348 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x348 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x450 (x1448 (x1700 x1354))))) x675)))
(assert (= x1581 (and x1452 (not x317))))
(assert (= (=> (and x486 (= 0 x744) (= x1630 (< 0 x1635))) (and (=> (and x1630 (= (= x733 0) x1758)) (and (=> (and (= x1214 x1263) x1758) x928) (=> (and (and (= (x602 x1100) x633) (= (x619 (x74 0) (x74 17) 0) x1100) (= x835 (= x633 0))) (not x1758)) (and (=> (and (and (or (and (and (= x636 x639) (= x1291 (x1114 (+ x277 x548))) (= (x619 (x74 0) (x74 17) 0) x484) (> 4294967296 x435) (= x548 x522) (= 96 x399) (= 32 x1743) (= x164 32) (= (x602 x484) x171) (= 0 x939) (= x432 (x393 115792089237316195423570985008687907853269984665561335876943319670319585689600 x1683)) (= (x969 x826 32) x939) (= x230 (>= 79228162514264337593543950335 x548)) (= (x1114 (+ x949 x1263)) x1567) (= x540 (x1448 (x1700 x1717))) (= x1637 192) (= 32 x1262) (= 0 x757) (= x1404 (ite (>= 6277101735386680763835789423207666416102355444464034512895 x639) x1675 x474)) (= (x1114 (+ x369 x169)) x826) (= x474 (x1114 (+ x639 x1696))) (= x776 x1263) (= (x619 (x74 0) (x74 17) 0) x705) (= x134 (x969 x522 96)) (= x60 256) (= x277 x432) (= x759 64) (= x636 (x393 115792089210356248762697446949407573530086143415211086033019366971273553903615 x142)) (= x1567 x226) (= x421 255) (= 255 x160) (= 32 x703) (= x1696 (x523 x369 192)) (= x972 (x393 26959946667150639794667015087019630673637144422540572481103610249215 x1582)) (= x1717 (x393 1461501637330902918203684832716283019655932542975 x1735)) (= x1169 x142) (= x522 (x842 x776)) (= (ite (<= x548 79228162514264337593543950335) x1291 (ite x230 x665 x1602)) x1169) (= x1683 x171) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x320) x949) (= 0 x1697) (= 255 x1373) (= x320 (x1114 (+ x435 31))) (= (x1114 (+ x444 x972)) x743) (= (x1114 (+ x639 x1696)) x1675) (= (x1114 (+ x277 x548)) x665) (= x1602 (x358 x277 x548)) (= x1398 255) (= x1582 x1404) (= 64 x727) (= x1567 x527) (not (= 0 x540)) (= x444 (x523 x826 224)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x435) true) (< x435 32)) (> x435 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x969 x522 96) x1697) (= 0 x134) (= 224 x404)) x1367) (and (not x1367) (= x1263 x226))) (and (= 32 x340) (= (> x169 x1519) x1367) (= (x969 x633 192) x1397) (= 32 x1765) (= 224 x1306) (= x1519 (x969 x633 224)) (= x369 (x393 4294967295 x1397)) (= x373 192))) (not x835)) x1737) (=> (and x835 (= x1263 x1214)) x928))))) (=> (and (= x581 x1263) (not x1630)) x419))) x1159))
(assert (x1438 x335))
(assert (x1438 x506))
(assert (x1438 x1364))
(assert (x1438 x918))
(assert (= (and x957 x190) x1434))
(assert (x1438 x1219))
(assert (= (x1303 (x74 2681156919)) 2681156919))
(assert (x1438 x1708))
(assert (x1438 x1261))
(assert (x1438 x1524))
(assert (x1438 x563))
(assert (= x1433 (=> (and (and (= (x1721 (- x628 4)) x1350) (= x1500 (x1114 (+ x1729 4))) (= x767 (x1448 (x1700 x1354))) (= x859 (x1448 (x1700 x1354))) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x186) x596) (> x767 0) (not (= 0 x859)) (= x628 36) (= (x1721 (- x177 x1729)) x1006) (not (= x1684 0)) (= x1316 x632) (not (= 826074471 x1184)) (not (> 826074471 x1184)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x189) (= x1184 1889567281) (not (> 4 x628)) (= x177 (x1114 (+ x1500 32))) (= x628 x1006) (= x597 (x52 128)) (not (or (and (> 32 x93) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x93) true)) (> x93 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x186 (x1114 (+ 31 x93))) (= x1500 x7) (= (x1114 (+ 128 x596)) x1729) (= x71 (> 32 x1350))) (or (and (not x71) (and (= x1343 (x1514 x676)) (= (x619 (x1700 x632) (x74 1) 0) x676) (= 32 x1476) (= x245 x632) (<= 0 x1343) (<= x1343 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1293) (= x614 x1460))) (and x71 (and (= x1476 x1449) (= x1293 0) (= x1460 x614))))) x463)))
(assert (x1438 x1253))
(assert (x1438 x1292))
(assert (x1438 x138))
(assert (x1438 x630))
(assert (= 4294967295 (x1303 (x74 4294967295))))
(assert (x1438 x1617))
(assert (x1438 x1241))
(assert (= (x1303 (x1700 x938)) x938))
(assert (= (and x59 x1402) x782))
(assert (x1438 x658))
(assert (= (and (not x1305) x197) x963))
(assert (x1438 x1671))
(assert (x1438 x695))
(assert (= x1005 (and x1771 (not x763))))
(assert (x1438 x180))
(assert (= 0 (x308 x1003)))
(assert (= (x1303 (x74 46861972923178205566985210922759877011903582497231265773045854621316061069312)) 46861972923178205566985210922759877011903582497231265773045854621316061069312))
(assert (x1438 x512))
(assert (x1438 x1534))
(assert (x1438 x406))
(assert (= (or x1311 x1024) x874))
(assert (x1438 x889))
(assert (x1438 x94))
(assert (= 2127478272 (x1303 (x74 2127478272))))
(assert (= 0 (x308 x796)))
(assert (x1438 x1387))
(assert (x1438 x40))
(assert (=> (>= 10000 x537) (= (x74 x537) (x1700 x537))))
(assert (x1438 x582))
(assert (x1438 x1214))
(assert (= x1024 (and x906 x1407)))
(assert (x1438 x662))
(assert (x1438 x948))
(assert (x1438 x821))
(assert (x1438 x1532))
(assert (= x1771 (and x1110 x153)))
(assert (= x668 (and x922 (not x1464))))
(assert (= 0 (x308 x305)))
(assert (x1438 x1224))
(assert (= x1200 (x1303 (x1700 x1200))))
(assert (x1438 x1299))
(assert (x1438 x1428))
(assert (x1438 x1242))
(assert (x1438 x1776))
(assert (x1438 x1772))
(assert (x1438 x499))
(assert (= (x206 (+ (- x707 x467) x1532)) 0))
(assert (x1438 x628))
(assert (x1438 x1109))
(assert (= (and x1196 x971) x738))
(assert (x1438 x1583))
(assert (x1438 x10))
(assert (x1438 x183))
(assert (= (and (not x125) x546) x1098))
(assert (=> (>= 10000 x239) (= (x1700 x239) (x74 x239))))
(assert (x1438 x253))
(assert (x1438 x1352))
(assert (= (x1303 (x74 2580288415)) 2580288415))
(assert (x1438 x639))
(assert (x1438 x1614))
(assert (x1438 x931))
(assert (x417 x161))
(assert (=> (>= 10000 x580) (= (x74 x580) (x1700 x580))))
(assert (x1438 x687))
(assert (x1438 x1663))
(assert (x1438 x1096))
(assert (= x1301 (or x532 x1005)))
(assert (=> (<= x1316 10000) (= (x1700 x1316) (x74 x1316))))
(assert (x1438 x410))
(assert (x1438 x1437))
(assert (x1438 x434))
(assert (x1438 x939))
(assert (= x971 (or x1777 x339)))
(assert (x1438 x1155))
(assert (x1438 x1447))
(assert (x1438 x1605))
(assert (= 0 (x206 (+ (- x581 x467) x1532))))
(assert (= x1728 (and x691 x1630)))
(assert (= (x308 x152) 0))
(assert (x1438 x84))
(assert (= (and x511 x514) x1641))
(assert (x1438 x1400))
(assert (= x923 (=> (and (or (and (and (< (* x631 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1336 (div x10 x981)) (= (mod (* x631 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x10) (= x575 x1336)) (not x1076)) (and (= 0 x575) x1076)) (and (= x1076 (= x631 0)) (not (= x981 0)))) x498)))
(assert (x1438 x810))
(assert (x1438 x949))
(assert (=> (>= 10000 x889) (= (x1700 x889) (x74 x889))))
(assert (x1438 x2))
(assert (x1438 x1670))
(assert (x1438 x665))
(assert (= (=> (and (and (ite x1757 x1757 (= x873 (div x1062 x1271))) (= x1467 (x969 x1147 255)) (= x1358 255) (= (div x1062 1000000000000000000) x1219) (= (= 1 x1467) x1340) (= x1389 2) (= x1062 (mod (* x873 x1271) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x1271 0) x1757) (= (x1540 (x74 8)) x1147)) (or (and (and (= (x1540 (x74 18)) x1390) (= (x393 18446744073709551615 x478) x1063) (= x1418 x1063) (= (div x1390 18446744073709551616) x478)) (not x1340)) (and x1340 (= x1418 0)))) x1197) x209))
(assert (= (and x706 (not x988)) x1756))
(assert (x1438 x1081))
(assert (= x1685 (and x598 x1130)))
(assert (= 0 (x308 x80)))
(assert (= (x1700 18446744073709551616) (x74 18446744073709551616)))
(assert (x1438 x5))
(assert (= (x219 (+ x824 (- x1639 x121))) 0))
(assert (x1438 x824))
(assert (x1438 x1491))
(assert (x1438 x236))
(assert (x1438 x640))
(assert (x1438 x1355))
(assert (x1438 x1748))
(assert (= x213 (or x1676 x77)))
(assert (x1438 x1675))
(assert (= (=> (and (= (x1114 (+ x333 x1764)) x1263) (= (x1337 128) x586) (= (x1114 (+ 4 x714)) x259) (= (or x751 x85) x387) (= (> x1263 18446744073709551615) x85) (= x790 (> x586 0)) (= x765 (x1114 (+ 32 x1764))) (not (< x764 x250)) (not (> x57 18446744073709551615)) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x941) x1695) (not (< 18446744073709551615 x752)) (= (x1114 (+ 32 x1695)) x333) (= (> x1764 x1263) x751) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x764) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712)) (and (> x764 x712) (= (<= x764 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712)))) (= (ite x387 1 0) x1655) (= (x1114 (+ x57 x697)) x250) (= x1655 0) (= x375 x1209) (= (x1114 (+ x57 x765)) x159) (= x1513 x1586) (= (x1114 (+ x259 32)) x697) (= x712 (x1114 (+ x259 31))) (= x941 (x1114 (+ 31 x57))) (= x1304 x1635) (= x1304 (x1337 128)) (= (x97 x259) x57)) (and (=> (and (not x790) (= x1177 0)) x1001) (=> x790 x1502))) x321))
(assert (= x808 x98))
(assert (x1438 x1327))
(assert (=> (>= 10000 x645) (= (x74 x645) (x1700 x645))))
(assert (x1438 x79))
(assert (x1438 x707))
(assert (x1438 x774))
(assert (x1438 x1070))
(assert (x1438 x679))
(assert (= x1090 (and x1728 (not x1758))))
(assert (x1438 x182))
(assert (x1438 x1185))
(assert (x1438 x65))
(assert (= (and (not x1196) x971) x1142))
(assert (x1438 x642))
(assert (x1438 x1124))
(assert (= (x206 (+ (- x1424 x467) x1532)) 0))
(assert (= (=> (and (= (x144 x1457) x357) (= (mod (* x500 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x608) (= (x1497 x87) x1023) (= (mod (* 32 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1565) (= (x1114 (+ 32 x1565)) x1663) (= (x1114 (+ x1023 1)) x500) (= x1103 0) (= x1493 (x1114 (+ x1457 x1663))) (= x316 (x1114 (+ x1457 32))) (= (< 0 x357) x1744) (not (> x500 18446744073709551615))) (and (=> (not x1744) x553) (=> (and x1744 (and (or (and (not x282) (and (= x181 x741) (= x741 (x144 x1014)) (< x1654 x1320) (= (x1114 (+ x87 x185)) x1014) (= x185 (x1114 (+ 32 x1096))) (= x1654 (ite (< 0 x733) 0 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x144 x87) x1320) (= (mod (* x1654 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1096))) (and x282 (= 0 x181))) (= (= 0 x733) x282))) x440))) x1140))
(assert (x1438 x724))
(assert (x1515 x734))
(assert (x1438 x1048))
(assert (= x342 (=> (and (= (x1114 (+ 32 x389)) x1031) (= (x1114 (+ x543 32)) x1713) (= x330 (x362 x389)) (= x1156 (not (< 4 x1357)))) (and (=> (and (= 4 x422) (= x318 x1713) (= x1048 x1031)) x176) x1156))))
(assert (x1438 x1266))
(assert (= x1179 (and (not x980) x213)))
(assert (= (or x552 x487) x818))
(assert (x1438 x1665))
(assert (= (x74 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1700 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1438 x616))
(assert (= x900 (=> (and (and (= (x1503 x234) x1629) (not (< x725 x1629)) (< x733 x795) (= (x218 (x74 20)) x884) (= (mod (* 32 x733) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1290) (= x121 (x1114 (+ x1094 x114))) (= x725 (x218 (x74 2))) (= (x1114 (+ x205 32)) x114) (= 255 x1699) (= (x1721 (- x1388 1)) x1548) (= (x1114 (+ 32 x1290)) x288) (= (x1114 (+ 128 x288)) x234) (= x1388 (x1503 128)) (= (x1721 (- x725 x1629)) x1113) (= x645 (x218 (x74 19))) (= x980 (= 0 x1548)) (= x205 (mod (* 32 x1548) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1020 (= 1 x508)) (= x508 (x969 x1371 255)) (= (x1503 128) x795) (= x1371 (x218 (x74 8))) (= 0 x1223) (= (ite x1020 0 x1586) x345)) (or (and (not x980) (and (= (mod (* x1548 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x909) (= (x1114 (+ 32 x1094)) x1378))) x980)) x758)))
(assert (= 0 (x1361 x1199)))
(assert (x1438 x1102))
(assert (= x470 (and x1606 (not x1340))))
(assert (x1438 x887))
(assert (x1438 x1590))
(assert (x1438 x114))
(assert (x1438 x1657))
(assert (= (and x150 x954) x374))
(assert (x1438 x1684))
(assert (= (x206 (+ (- x569 x467) x1532)) 0))
(assert (= x1649 (and x493 x874)))
(assert (=> (>= 10000 x1605) (= (x74 x1605) (x1700 x1605))))
(assert (= (x1700 228615836) (x74 228615836)))
(assert (= (and x1402 (not x59)) x1009))
(assert (x1438 x1320))
(assert (= (x74 2514000705) (x1700 2514000705)))
(assert (x1438 x1051))
(assert (x1438 x1116))
(assert (= x294 (=> (= x180 x724) x923)))
(assert (= x438 (and x25 (not x599))))
(assert (x1438 x1457))
(assert (x609 x1097))
(assert (= (or x1228 x709) x1631))
(assert (= 81655993114286172543975849523773895523710823181222424266797447834442299080704 (x1303 (x74 81655993114286172543975849523773895523710823181222424266797447834442299080704))))
(assert (= x1668 (or x1775 x1685)))
(assert (x1438 x369))
(assert (x1438 x848))
(assert (x1438 x1306))
(assert (x1438 x1031))
(assert (x1438 x721))
(assert (= (x74 18446744073709551615) (x1700 18446744073709551615)))
(assert (= (=> (and (= x1056 (= x1553 0)) (or (not x1056) x1056)) x1213) x1319))
(assert (x1438 x257))
(assert (x1438 x719))
(assert (= (x74 3586168516) (x1700 3586168516)))
(assert (x1438 x899))
(assert (x1438 x354))
(assert (x1438 x1738))
(assert (= x623 (or (and x881 (not x235)) x681)))
(assert (= (x74 370555621) (x1700 370555621)))
(assert (= x652 (or x722 x309 x1098 x816 x570)))
(assert (x1438 x443))
(assert (x1438 x33))
(assert (=> (<= x1224 10000) (= (x74 x1224) (x1700 x1224))))
(assert (=> (<= x1450 10000) (= (x74 x1450) (x1700 x1450))))
(assert (x1438 x353))
(assert (= (x1303 (x74 1883652118)) 1883652118))
(assert (x1438 x869))
(assert (x1438 x1349))
(assert (= x1171 (and x515 x538)))
(assert (x1438 x1389))
(assert (x1438 x1493))
(assert (= x1213 (=> (and (and (= x1537 x666) (= x37 x311) (= x702 x3) (= x1661 (< x3 x426)) (= (or (not x232) x1661) x383) (= x815 x132) (= x1537 x426) (= x232 (> x37 x815))) (and (not (or (> x1594 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1594 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1594 32)))) (= (x825 x1199) x1524) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1524 x1681))) (= x1412 (x1114 (+ x1681 x1524))) (= x1412 x666) (not (= 0 x1553)) (= x41 x1199))) x383)))
(assert (=> (<= x728 10000) (= (x1700 x728) (x74 x728))))
(assert (= (=> (and (= (x1114 (+ x1332 1)) x1600) (= x13 (x619 (x1700 x1224) x659 0)) (= x659 (x619 (x1700 x1650) x337 0)) (= x337 (x619 (x1700 x645) (x74 10) 0)) (= (x976 x1424) x1224) (= (x976 x1094) x594) (= x708 (x1114 (+ x1094 32))) (= (x619 (x1700 x124) x723 0) x275) (= x1549 (x619 (x1700 x645) (x74 10) 0)) (= x507 (x976 x1094)) (= x582 (x1584 x275)) (= (x218 (x74 9)) x918) (= x1424 (x1114 (+ 32 x708))) (= x723 (x619 (x1700 x822) x1549 0)) (= x1332 (x393 115792089237316195423570985008687907853269984665640564039457584007913129639680 x918)) (> x582 0) (> x594 1) (< 0 x507) (= x1650 (x976 x708)) (= x225 (x1584 x13)) (= x124 (x976 x1424)) (= x1110 (= x622 0)) (= x822 (x976 x708))) (and (=> (and x1110 (and (or (and (and (= x322 (x619 (x1700 x239) x720 0)) (= x1529 (x619 (x1700 x1420) x23 0)) (= (x976 x1424) x307) (= x1619 (x976 x1424)) (= (x619 (x1700 x1659) x1359 0) x1739) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639680 x252) x119) (= (x987 x1069) x1120) (> x1270 0) (< 0 x1120) (= x368 (x619 (x1700 x645) (x74 10) 0)) (= (x619 (x1700 x1619) x1767 0) x1633) (= x1270 (x109 x571)) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639680 x996) x208) (= (x976 x708) x239) (= x1547 (x109 x1633)) (= x549 (x1114 (+ 1 x208))) (= (x619 (x1700 x1074) x322 0) x28) (= x1335 x687) (= (x976 x708) x1659) (= x1547 x148) (= x1767 (x619 (x1700 x237) x368 0)) (= (x987 (x74 9)) x252) (= (x987 x28) x1335) (= (x619 (x1700 x645) (x74 10) 0) x1359) (= x1069 (x619 (x1700 x307) x1739 0)) (= (x619 (x1700 x530) x1529 0) x571) (= (x976 x708) x237) (= (x976 x1424) x1074) (= (x619 (x1700 x645) (x74 10) 0) x720) (= x1420 (x976 x708)) (= (x619 (x1700 x645) (x74 10) 0) x23) (= (x1584 (x74 9)) x996) (= (x976 x1424) x530) (= (x1114 (+ x119 1)) x905)) x763) (and (not x763) (and (= x1450 (x976 x708)) (= x225 x687) (= (x619 (x1700 x645) (x74 10) 0) x1481) (= (x619 (x1700 x1308) x959 0) x1295) (= x871 (x976 x1424)) (= (x812 x334) x335) (< 0 x1037) (= (x1584 (x74 9)) x1189) (= x1037 (x812 x1295)) (= x846 (x619 (x1700 x645) (x74 10) 0)) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1189) x352) (= (x976 x1424) x1308) (= (x1114 (+ x352 1)) x855) (= (x976 x708) x199) (= (x619 (x1700 x199) x846 0) x959) (= x148 x335) (= (x619 (x1700 x1450) x1481 0) x1523) (= x334 (x619 (x1700 x871) x1523 0))))) (= (= x1568 0) x763))) x817) (=> (and (and (= x490 (x619 (x1700 x645) (x74 10) 0)) (> x544 0) (= x1766 (x976 x708)) (= x1526 x195) (= x769 (x619 (x1700 x503) x490 0)) (= x503 (x976 x708)) (= x690 (x619 (x1700 x889) x1724 0)) (= x889 (x976 x1424)) (= x1050 (x619 (x1700 x999) x769 0)) (= x457 (x393 115792089237316195423570985008687907853269984665640564039457584007913129639680 x445)) (= x1724 (x619 (x1700 x1766) x220 0)) (= x544 (x1403 x1050)) (= x999 (x976 x1424)) (= x1526 x1108) (= (x1584 (x74 9)) x445) (= (x1114 (+ 1 x457)) x1327) (= (x1403 x690) x1526) (= (x619 (x1700 x645) (x74 10) 0) x220)) (not x1110)) x1569))) x946))
(assert (= (or (and x755 x805) (and x35 x405) (and x165 x904)) x851))
(assert (=> (>= 10000 x1148) (= (x1700 x1148) (x74 x1148))))
(assert (= x1593 (and (not x15) x1668)))
(assert (= (x206 (+ x1532 (- x765 x467))) 0))
(assert (x1438 x1017))
(assert (= 1984976886 (x1303 (x74 1984976886))))
(assert (x1115 x734))
(assert (= (x206 (+ (- x193 x467) x1532)) 0))
(assert (x1438 x1307))
(assert (x1438 x713))
(assert (x1370 x123))
(assert (=> (>= 10000 x897) (= (x1700 x897) (x74 x897))))
(assert (x1438 x370))
(assert (x1438 x1277))
(assert (x1515 x320))
(assert (= x1766 (x1303 (x1700 x1766))))
(assert (= (=> (and (and (= x662 (mod (* x180 x1555) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x1555 0) x1382) (= (= 1000000000000000000 x534) x75) (= (x1721 (- 1000000000000000000 x534)) x1555)) (or (and x1382 (= x1300 x1382)) (and (and (not x75) (= x1155 (div x662 x1555)) (= (= x1155 x180) x1300)) (not x1382)))) x686) x1495))
(assert (= (or x264 x207) x174))
(assert (= (x308 x263) 0))
(assert (= (x219 (+ x824 (- x408 x121))) 0))
(assert (x1438 x834))
(assert (= (x206 (+ x1532 (- x1195 x467))) 0))
(assert (x1438 x1621))
(assert (= (and x625 (not x479)) x722))
(assert (= (x1303 (x1700 x889)) x889))
(assert (x1438 x1677))
(assert (=> (>= 10000 x1339) (= (x74 x1339) (x1700 x1339))))
(assert (x1438 x1652))
(assert (x1115 x950))
(assert (= x546 (and x215 x756)))
(assert (x1438 x1383))
(assert (x1438 x1390))
(assert (x111 x512))
(assert (= (or x1322 x374) x1321))
(assert (x1438 x645))
(assert (x1438 x1474))
(assert (x1115 x996))
(assert (= (and (not x1066) x623) x150))
(assert (= x817 (=> (and (= x195 x148) (= x1108 x687)) x1569)))
(assert (x1438 x1229))
(assert (x1115 x1189))
(assert (x1438 x595))
(assert (x1438 x269))
(assert (x1438 x290))
(assert (x1438 x1339))
(assert (x1438 x712))
(assert (x1438 x1440))
(assert (x417 x363))
(assert (= 0 (x219 (+ (- x526 x121) x824))))
(assert (x1438 x1498))
(assert (x1438 x1133))
(assert (x1438 x164))
(assert (x1438 x303))
(assert (x1438 x1577))
(assert (= (x308 x1424) 0))
(assert (= (=> (and (or (not x651) x651) (= x651 (= x1684 0))) x1433) x366))
(assert (x1438 x1350))
(assert (x1438 x146))
(assert (x1438 x1380))
(assert (x1438 x437))
(assert (x1438 x1785))
(assert (x1438 x350))
(assert (x1438 x521))
(assert (x1438 x641))
(assert (x1438 x1316))
(assert (x1438 x1250))
(assert (x1438 x1324))
(assert (x1438 x505))
(assert (x1438 x246))
(assert (x1438 x1270))
(assert (x1438 x1399))
(assert (= x27 (=> (and (= (x1721 (- x1345 x864)) x753) (= x1345 (x1114 (+ 64 x766))) (= x904 (> 64 x1546)) (= x1277 (x1448 (x1700 x1354))) (not (= 0 x298)) (= x689 68) (= x1088 (x393 1461501637330902918203684832716283019655932542975 x253)) (= x1546 (x1721 (- x689 4))) (= x620 x491) (< 0 x1277) (= x1601 x766) (= x766 (x1114 (+ x864 4))) (not (> 826074471 x899)) (= x753 x689) (= x985 (x1114 (+ 32 x1601))) (not (< x689 4)) (not (= 1889567281 x899)) (= x728 x1088) (= x465 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x298 (x1448 (x1700 x1354))) (not (= x899 2514000705)) (= 2835717307 x899) (not (= 826074471 x899))) (and (=> (and (and (= x728 x1753) (= (< x155 x491) x405) (>= x155 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x155) (= x113 (x619 (x1700 x1316) (x74 1) 0)) (= (x1317 x113) x155) (= x660 x620)) (not x904)) (and (=> x405 x1018) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x16) (= (x619 (x1700 x728) (x74 1) 0) x1365) (<= 0 x16) (= x797 (x1114 (+ x16 x620))) (= (x619 (x1700 x1316) (x74 1) 0) x888) (= (< x797 x16) x805) (= (x1680 x1365) x16) (= (x1721 (- x155 x620)) x1539)) (not x405)) (and (=> x805 x1018) (=> (and (and (= 32 x69) (= (x619 (x1700 x728) (x74 1) 0) x1628) (= x1374 x785) (= x1693 1)) (not x805)) x955))))) (=> x904 x1018)))))
(assert (= 2714230913 (x1303 (x74 2714230913))))
(assert (x609 x1596))
(assert (x1516 x1397))
(assert (x1438 x1725))
(assert (x1438 x1718))
(assert (= x1446 (=> (and (= (x1662 x87) x1252) (= x401 x1252) (= x401 (x1662 x1094)) (= x1558 (> x401 0))) (and (=> (not x1558) x1578) (=> x1558 x88)))))
(assert (= 0 (x206 (+ (- x796 x467) x1532))))
(assert (=> (>= 10000 x632) (= (x1700 x632) (x74 x632))))
(assert (x1438 x580))
(assert (= x1087 (=> (and (= x449 (x1318 (x74 8))) (= x531 (= 1 x536)) (= x1008 0) (= 255 x364) (= (x969 x449 255) x536)) (and (=> (and (not x531) (and (or (and (= x724 x1102) (not x386)) (and x386 (and (= x1504 (x393 18446744073709551615 x1097)) (= (x1318 (x74 18)) x1097) (= x724 x1504)))) (= (< 0 x1552) x386))) x294) (=> (and (= x180 0) x531) x923)))))
(assert (= (x206 (+ x1532 (- x87 x467))) 0))
(assert (x1438 x1035))
(assert (=> (>= 10000 x1650) (= (x74 x1650) (x1700 x1650))))
(assert (x1438 x1255))
(assert (x1438 x892))
(assert (x1438 x1285))
(assert (= x1650 (x1303 (x1700 x1650))))
(assert (= (or x607 x1161) x691))
(assert (x1438 x474))
(assert (x554 x277))
(assert (x1438 x1490))
(assert (x1438 x1555))
(assert (x417 x1766))
(assert (= x238 (or x1016 (and (not x651) x174))))
(assert (x1438 x539))
(assert (= 0 (x308 x408)))
(assert (= (or x742 x1171) x960))
(assert (x1438 x876))
(assert (=> (>= 10000 x363) (= (x1700 x363) (x74 x363))))
(assert (x1115 79228162514264337593543950335))
(assert (= (x1700 4167276458) (x74 4167276458)))
(assert (x1438 x1329))
(assert (x1438 x227))
(assert (= 0 (x308 x87)))
(assert (= (=> (and (= (mod (* 32 x296) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1168) (= x1116 (mod (* 32 x296) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x79 (x1114 (+ x902 32))) (= (x1114 (+ x902 x260)) x1355) (= (x1114 (+ 1 x1422)) x296) (= (x791 x902) x1428) (= x1470 (< 0 x1428)) (= x1422 (x178 x634)) (= 0 x525) (= x260 (x1114 (+ 32 x1168)))) (and (=> (and (and (= (= 0 x733) x192) (or (and (not x192) (and (= (mod (* x1172 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1000) (= (ite (< 0 x733) 0 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1172) (< x1172 x1718) (= (x1114 (+ x1000 32)) x398) (= x1718 (x791 x634)) (= (x791 x395) x1761) (= x1761 x1779) (= x395 (x1114 (+ x634 x398))))) (and (= 0 x1779) x192))) x1470) x1362) (=> (not x1470) x919))) x464))
(assert (x1438 x1453))
(assert (x1438 x1398))
(assert (= (x308 x708) 0))
(assert (x417 x1316))
(assert (x1438 x1741))
(assert (= 0 (x308 x1014)))
(assert (x1438 x316))
(assert (x1438 x624))
(assert (x417 x1605))
(assert (= x997 (and x456 (not x1441))))
(assert (x1438 x509))
(assert (x1438 x1740))
(assert (= (=> (and (and (= x1647 (x1337 x1764)) (= x214 x204) (= x96 x363) (> x1177 0) (= x1237 (> x1647 0))) (or (and x1237 (and (not (or (and (> 32 x1244) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1244) true)) (> x1244 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1732 (= 255 x138)) (= x1244 (x1337 x1764)) (>= 255 x138) (= x138 (x1337 x765)))) (and (= x1237 x1732) (not x1237)))) x1210) x1001))
(assert (x1438 x1512))
(assert (x1438 x1697))
(assert (= x1267 (or x1176 x1702)))
(assert (x1438 x1126))
(assert (= (or x1227 x154) x1235))
(assert (= x1569 (=> (and (= (ite (> x225 x884) (x1721 (- x225 x884)) 0) x704) (= (ite (< x225 x1108) (x1721 (- x1108 x225)) 0) x1570) (= 255 x1383) (= (x969 x998 255) x945) (= x115 (= x945 1)) (= 0 x1334) (= (x1540 (x74 8)) x998)) (and (=> (and (and (or (and (not x476) (= x1102 x1280)) (and x476 (and (= x1596 (x1540 (x74 18))) (= (x393 18446744073709551615 x1596) x810) (= x810 x1280)))) (= (< 0 x1552) x476)) (not x115)) x637) (=> (and (= x873 0) x115) x1348)))))
(assert (x1438 x398))
(assert (x1115 1))
(assert (x1438 x1199))
(assert (x1438 x815))
(assert (x1438 x389))
(assert (x1438 x34))
(assert (x1438 x1033))
(assert (= (or (and x1631 x1047) (and x1589 x806) (and x1752 x611)) x1039))
(assert (x1438 x901))
(assert (x1438 x239))
(assert (x1438 x100))
(assert (x1438 x482))
(assert (x1515 x1004))
(assert (= x1609 (and x238 (not x71))))
(assert (x1438 x1619))
(assert (x1438 x1753))
(assert (x1438 x871))
(assert (x1438 x962))
(assert (= (x1303 (x1700 x1339)) x1339))
(assert (= x1182 (and x26 (not x1038))))
(assert (= (and (not x1237) x116) x1702))
(assert (x1438 x1574))
(assert (x1438 x430))
(assert (= x957 (and x453 x1257)))
(assert (= x1682 (and x732 (not x1762))))
(assert (x1438 x142))
(assert (x1438 x1280))
(assert (x1438 x225))
(assert (x1438 x1248))
(assert (x1438 x122))
(assert (x1370 x251))
(assert (x1438 x1078))
(assert (x1438 x1154))
(assert (x1115 x918))
(assert (= x27 x559))
(assert (= (x206 (+ x1532 (- x1489 x467))) 0))
(assert (x1438 x288))
(assert (x1438 x173))
(assert (= (x1303 (x74 1889567281)) 1889567281))
(assert (x1438 x872))
(assert (x1438 x1638))
(assert (= x224 (=> (and (or (and (and (> x1518 1) (= x1746 (x1347 (x74 25) 0)) (= x1241 (x1114 (+ x1556 x1356))) (= x359 (x19 x1746 1)) (= x1556 (x894 x359)) (= x624 25) (= (x894 (x74 25)) x1518)) x1038) (and (= x624 x127) (not x1038))) (and (not (= x1693 0)) (= x1238 (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x572)) (= x1282 (x1114 (+ x1238 x864))) (not (or (and (= (<= x69 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x69 32)) (> x69 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1114 (+ 31 x69)) x572) (= (> x1356 0) x1038))) x678)))
(assert (x1438 x700))
(assert (x1438 x1635))
(assert (x1438 x743))
(assert (x1438 x1082))
(assert (x1438 x1366))
(assert (=> (<= x1354 10000) (= (x74 x1354) (x1700 x1354))))
(assert (x1438 x328))
(assert (= (x1303 (x74 228615836)) 228615836))
(assert (x1438 x156))
(assert (x1438 x929))
(assert (x1438 x415))
(assert (x1438 x1779))
(assert (x1438 x587))
(assert (= x477 (and x240 x20)))
(assert (= 0 (x206 (+ x1532 (- 128 x467)))))
(assert (= x1656 (=> (and (and (= x1185 (ite (= 0 x1458) x869 (ite (= x1458 32) 0 (ite (= 64 x1458) x564 (x458 x1458))))) (= x672 x344) (= (mod (* 32 x1459) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x416) (< x8 954831406) (= (ite (= x168 0) x869 (ite (= 32 x168) 0 (ite (= 64 x168) x564 (x458 x168)))) x1323) (= (x1114 (+ 32 x564)) x168) (= x564 x1458) (< 0 x95) (= (x1448 (x1700 x1316)) x95) (not (= x8 363856219)) (= x129 x761) (not (> 228615836 x8)) (= x672 (x1114 (+ x416 x1265))) (= x761 (x1114 (+ x1376 x324))) (= x1254 (x4 (x74 2))) (= (mod (* x1459 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1376) (= x8 404098525) (not (> 363856219 x8)) (< x8 500647658) (= x1511 x1459) (not (= x8 370555621)) (< x8 2127478272) (= x1254 x1507)) (and (or (and (and (= (x1527 x459) x1440) (>= x1440 0) (= x459 (x619 (x1700 x1333) (x74 1) 0)) (= 1 x615) (= 32 x348) (= x1274 x1333) (<= x1440 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x988)) (and (and (= x1620 x348) (= 0 x615)) x988)) (and (not (= x1543 228615836)) (> 954831406 x1543) (> 363856219 x1543) (< x1543 500647658) (= x1085 (x1448 (x1700 x897))) (not (> 4 x279)) (= 1889567281 x1379) (= x311 x1507) (not (= 826074471 x1379)) (= 128 x1052) (= (< x1187 32) x988) (= x1187 (x1721 (- x279 4))) (= (x1448 (x1700 x897)) x349) (not (> 228615836 x1543)) (not (= x349 0)) (< 0 x1104) (= 36 x279) (= 36 x279) (= x1104 (x1448 (x1700 x1316))) (= x406 50942633119752846454219349998365661925608737367104304655302372697894809501696) (> x1085 0) (not (= x1543 238709543)) (= x1316 x1333) (not (> 826074471 x1379)) (= x1543 307731845) (> 2127478272 x1543)))) x131)))
(assert (x1438 x875))
(assert (= (or x1751 x151) x1704))
(assert (x1438 x1152))
(assert (= 0 (x308 x273)))
(assert (=> (<= x1717 10000) (= (x74 x1717) (x1700 x1717))))
(assert (= (x1303 (x1700 x1659)) x1659))
(assert (x1438 x1334))
(assert (= x1344 (or x932 x1482)))
(assert (x1438 x1591))
(assert (= (x219 (+ (- x168 x121) x824)) 0))
(assert (x1438 x163))
(assert (= x498 (=> (and (= (> x775 x575) x1760) (= (ite (not x1760) (not x1760) (= x180 0)) x441)) (and (=> (and (not x441) (and (or (and (not x1059) (and (< (* x575 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x482 x534) (= x482 (div x771 x775)) (= x771 (mod (* 1000000000000000000 x575) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and x1059 (= x534 0))) (and (= (= 0 x575) x1059) (not (= 0 x775))))) x1495) (=> (and (= x1017 0) x441) x1073)))))
(assert (x1438 x503))
(assert (= (x1303 (x1700 x948)) x948))
(assert (x1438 x633))
(assert (= (=> (and (= x1284 x1355) (= x179 x303) (= x1639 x902) (= x1401 x882)) x1083) x919))
(assert (= (x1303 (x19 x577 2)) (+ 2 (x1303 x577))))
(assert (= (or x718 x1175) x1777))
(assert (= (x74 1889567281) (x1700 1889567281)))
(assert (x1438 x1541))
(assert (x1438 x397))
(assert (x1438 x1504))
(assert (= x1297 (and x126 x1563)))
(assert (x1438 x343))
(assert (= (and (not x1630) x691) x715))
(assert (= (x1303 (x1700 x728)) x728))
(assert (x1438 x828))
(assert (x1438 x1178))
(assert (x1438 x333))
(assert (x1438 x1263))
(assert (= (and x591 (not x1191)) x573))
(assert (=> (<= x822 10000) (= (x1700 x822) (x74 x822))))
(assert (x1438 x187))
(assert (x1438 x1112))
(assert (= (or x1272 x42) x291))
(assert (x1115 x1582))
(assert (= x1083 (=> (and (= x43 (x1114 (+ 32 x1284))) (not (= x1748 0)) (= (+ x1445 x303) x916) (= x163 0) (= (x393 1461501637330902918203684832716283019655932542975 x1107) x227) (= (x1411 x152) x556) (= (x1721 (- x501 x1401)) x1445) (= x1512 (x1721 (- x1173 x1401))) (= x24 (- x916 x658)) (= x1623 true) (= (= x24 x175) x1599) (= (x1598 x877) x658) (= x1284 x986) (= x158 (x619 (x1700 x227) (x74 0) 0)) (= x877 (x619 (x1700 x693) (x74 0) 0)) (= 434 x1211) (= (x1411 x509) x400) (not (< x501 x1401)) (= x152 (x1114 (+ x1284 32))) (= (x520 128) x781) (= x509 (x1114 (+ 32 x1639))) (= (mod (* x781 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x917) (= 1 x1030) (= (x1598 x158) x501) (= 0 x828) x1599 (not (< x1173 x1401)) (= x693 (x393 1461501637330902918203684832716283019655932542975 x1107)) (= (x1114 (+ x831 x1284)) x1193) (= x1748 (x393 1461501637330902918203684832716283019655932542975 x1107)) (= (mod (* 32 x781) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x286) (= x1173 (x229 (x74 2))) (= (x1114 (+ x917 32)) x831)) (and (=> (and (not x1623) (= (= x1354 x897) x1346)) (and (=> x1346 x1560) (=> (and (not x1346) (= x897 x1316)) x560))) (=> x1623 x1560)))))
(assert (= x231 (and (not x1451) x1045)))
(assert (= x1466 (and x118 (not x386))))
(assert (x417 x227))
(assert (= (or x1325 x143) x1153))
(assert (x1438 x524))
(assert (x1438 x787))
(assert (x1438 x740))
(assert (x1438 x67))
(assert (=> (<= x1420 10000) (= (x1700 x1420) (x74 x1420))))
(assert (x1438 x1404))
(assert (x1438 x1293))
(assert (= x1468 (and (not x1049) x270)))
(assert (x1438 x352))
(assert (x1438 x727))
(assert (= (and (not x1731) x1682) x1455))
(assert (= (x74 81655993114286172543975849523773895523710823181222424266797447834442299080704) (x1700 81655993114286172543975849523773895523710823181222424266797447834442299080704)))
(assert (x1438 x586))
(assert (= (x74 826074471) (x1700 826074471)))
(assert (x1438 x1729))
(assert (x1438 x199))
(assert (x1438 x1545))
(assert (= (x1700 274184521717934524641157099916833587280) (x74 274184521717934524641157099916833587280)))
(assert (= 0 (x219 (+ x824 (- x739 x121)))))
(assert (x1438 x870))
(assert (= x1589 (and x1631 (not x1047))))
(assert (= (and (not x1727) x1328) x108))
(assert (x1438 x1304))
(assert (x1438 x344))
(assert (x1438 x692))
(assert (=> (<= x530 10000) (= (x1700 x530) (x74 x530))))
(assert (x1438 x45))
(assert (x1438 x1198))
(assert (x1438 x1064))
(assert (= (+ (x1303 x1746) 1) (x1303 (x19 x1746 1))))
(assert (x1438 x898))
(assert (x1438 x1177))
(assert (=> (>= 10000 x161) (= (x74 x161) (x1700 x161))))
(assert (= (x206 (+ x1532 (- x1764 x467))) 0))
(assert (x1438 x204))
(assert (= x1218 (and (not x488) x1203)))
(assert (x417 x1242))
(assert (= (and x238 x71) x135))
(assert (= (x74 115792089210356248762697446949407573530086143415211086033019366971273553903615) (x1700 115792089210356248762697446949407573530086143415211086033019366971273553903615)))
(assert (x1438 x478))
(assert (x1438 x416))
(assert (= x176 (=> (and (= x324 (x1114 (+ 32 x1284))) (= x993 (x1721 (- x318 x564))) (= x613 (x1114 (+ x263 x649))) (= (< 0 x1459) x1441) (= x695 (x1114 (+ x887 x341))) (= (x1114 (+ x564 32)) x885) (= (mod (* x1357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x887) (= x1357 x422) (= x649 (mod (* x1357 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1459 (x1394 x1284)) (= x613 x1048) (= x318 x695) (= (x1114 (+ x318 32)) x1265)) (and (=> (and x1441 (and (= (x1114 (+ x1265 32)) x1124) (= x1770 (x1114 (+ x324 32))) (= (< 1 x1459) x528) (= x521 (x1395 x324)))) (and (=> (and (not x528) (and (= x1124 x344) (= x129 x1770) (= 1 x1511))) x1656) (=> (and x528 (and (= (x1550 x1770) x626) (= (> x1459 2) x1563) (= x796 (x1114 (+ 32 x1770))) (= x1498 (x1114 (+ x1124 32))))) (and (=> (and (not x1563) (and (= x1498 x344) (= x796 x129) (= 2 x1511))) x1656) (=> (and x1563 (and (= (x1114 (+ 32 x1498)) x473) (= x202 (< 3 x1459)) (= (x737 x796) x236) (= (x1114 (+ x796 32)) x569))) (and (=> (and (not x202) (and (= x344 x473) (= 3 x1511) (= x569 x129))) x1656) (=> x202 x1221))))))) (=> (and (not x1441) (and (= x324 x129) (= x1511 0) (= x344 x1265))) x1656)))))
(assert (= x746 (and x1744 x1125)))
(assert (= 1439069736 (x1303 (x74 1439069736))))
(assert (x1438 x1023))
(assert (x1438 x896))
(assert (x1438 x1770))
(assert (x1438 x1442))
(assert (x1438 x1323))
(assert (= (and x1416 x1653) x215))
(assert (x1438 x242))
(assert (x1438 x48))
(assert (= (and x331 (not x528)) x1642))
(assert (x396 x61))
(assert (x1438 x597))
(assert (x1438 x60))
(assert (x1115 x445))
(assert (x417 x1307))
(assert (= x1494 (=> (and (= x1250 (x920 x1263)) (= (> x1250 0) x1305)) (and (=> (not x1305) x735) (=> x1305 x1535)))))
(assert (x1438 x346))
(assert (x1438 x250))
(assert (x1438 x1747))
(assert (= (div x1147 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x969 x1147 255)))
(assert (= x55 (and (not x1783) x960)))
(assert (x1438 x1336))
(assert (x1438 x471))
(assert (x1438 x544))
(assert (x1438 x548))
(assert (x1438 x1338))
(assert (x1438 x1553))
(assert (x1438 x1351))
(assert (x1438 x1085))
(assert (x1438 x195))
(assert (x1438 x1693))
(assert (x1438 x897))
(assert (x1438 x1158))
(assert true)
(assert (x1438 x496))
(assert (x1438 x1780))
(assert (x417 x1650))
(assert (x1515 x186))
(assert (x504 x11))
(assert (x417 x124))
(assert (x1438 x891))
(assert (x1438 x395))
(assert (= (=> (and (= (mod (* 32 x1112) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1705) (< x1112 x891) (= (x1679 x1263) x579) (= (not (> x579 1)) x895) (= (x1114 (+ x1263 32)) x84) (< 0 x1229) (= x1229 (x920 x1263)) (= x273 (x1114 (+ 128 x183))) (= (x1114 (+ x1705 32)) x183) (= x539 (x920 x273)) (= x891 (x920 128)) (= (ite (> x733 0) 0 1) x1112)) (and x895 x735)) x1535))
(assert (x1438 x69))
(assert (= (=> (and (or (not x469) x469) (= (= 0 x290) x469)) x1472) x675))
(assert (= (x1303 (x1700 x537)) x537))
(assert (= (and (not x447) x1249) x154))
(assert (x1438 x130))
(assert (=> (<= x1577 10000) (= (x1700 x1577) (x74 x1577))))
(assert (= 0 (x219 (+ x824 (- x1458 x121)))))
(assert (= (x74 3224796394) (x1700 3224796394)))
(assert (x1438 x7))
(assert (x1438 x184))
(assert (= 3028789119 (x1303 (x74 3028789119))))
(assert (x1438 x728))
(assert (= x237 (x1303 (x1700 x237))))
(assert (x1438 x21))
(assert (x1438 x684))
(assert (x1438 x39))
(assert (x1438 x1435))
(assert (x1438 x1187))
(assert (x1438 x1308))
(assert (x1115 x572))
(assert (= (and (not x800) x933) x974))
(assert (x1438 x426))
(assert (x1438 x1459))
(assert (= (x308 x193) 0))
(assert (x1438 x91))
(assert (x1438 x833))
(assert (x1438 x1508))
(assert (x1438 x1189))
(assert (x1438 x798))
(assert (x1438 x32))
(assert (x1438 x1239))
(assert (= (and x380 (not x915)) x1272))
(assert (= (and x922 x1464) x12))
(assert (x1438 x1688))
(assert (x1438 x507))
(assert (x1438 x139))
(assert (x1438 x581))
(assert (x1438 x444))
(assert (x1438 x1659))
(assert (x1438 x964))
(assert (x1438 x185))
(assert (= x233 (and x326 (not x1207))))
(assert (=> (<= x948 10000) (= (x1700 x948) (x74 x948))))
(assert (x417 x827))
(assert (= (and x1237 x116) x1176))
(assert (x1438 x1765))
(assert (= 0 (x219 (+ (- x193 x121) x824))))
(assert (= (and x165 (not x904)) x35))
(assert (x1438 x927))
(assert (= (x1303 (x74 18446744073709551615)) 18446744073709551615))
(assert (x1438 x1689))
(assert (x1438 x243))
(assert (= 0 (x206 (+ (- x1770 x467) x1532))))
(assert (x1438 x1645))
(assert (x1438 x1127))
(assert (x1438 x1002))
(assert (x1438 x1717))
(assert (x1438 x372))
(assert (= x1247 (and x365 x1076)))
(assert (x1438 x272))
(assert (x1438 x1029))
(assert (= 0 (x206 (+ x1532 (- x1003 x467)))))
(assert (= 0 (x308 x569)))
(assert (x1438 x1761))
(assert (x1438 x1644))
(assert (x1438 x1332))
(assert (x1438 x823))
(assert (x1438 x1007))
(assert (x417 x1420))
(assert (= x1506 (and x284 x1455)))
(assert (x1438 x472))
(assert (= (and x886 (not x476)) x1175))
(assert (x111 x1268))
(assert (x1438 x194))
(assert (x1438 x228))
(assert (x1438 x615))
(assert (= 0 (x308 x1458)))
(assert (x1438 x1582))
(assert (x1438 x850))
(assert (x417 x199))
(assert (x1438 x1345))
(assert (= x580 (x1303 (x1700 x580))))
(assert (x1438 x61))
(assert (= (and (not x1744) x1125) x671))
(assert (= (x74 79228162514264337593543950335) (x1700 79228162514264337593543950335)))
(assert (x1438 x1104))
(assert (x417 x1333))
(assert (x1438 x340))
(assert (x1438 x56))
(assert (=> (<= x1766 10000) (= (x74 x1766) (x1700 x1766))))
(assert (= (or x1276 x715) x270))
(assert (x1438 x1086))
(assert (x1438 x1743))
(assert (x1115 x251))
(assert (= x585 (and (not x790) x652)))
(assert (x1438 x133))
(assert (= x908 (=> (and (= x907 1) (= x1178 x418)) x336)))
(assert (= x463 (=> (and (= x235 (= x1293 0)) (or (not x235) x235)) x653)))
(assert (x1438 x1062))
(assert (x1438 x1546))
(assert (x1438 x775))
(assert (x1438 x1566))
(assert (x1438 x1278))
(assert (x1515 x572))
(assert (x1438 x911))
(assert (x1438 x1309))
(assert (x1438 x734))
(assert (x1438 x961))
(assert (= x886 (and x347 (not x115))))
(assert (x1438 x1014))
(assert (x1438 x1764))
(assert (= (x308 x389) 0))
(assert (x1438 x1705))
(assert (=> (<= x199 10000) (= (x74 x199) (x1700 x199))))
(assert (x417 x897))
(assert (= (x1303 (x1700 x645)) x645))
(assert (= x88 (=> (and (= x350 (x1721 (- x688 x1364))) (= x1364 (x1662 x1003)) (= x688 (x1662 x1489)) (= x323 (x1662 x87)) (> x1541 0) (< 0 x323) (= x1003 (x1114 (+ x87 32))) (= x680 (x1662 x1094)) (> x680 0) (= x1541 (x1662 x1094)) (= (x1114 (+ 32 x1094)) x1489) (= (not (< 1 x401)) x845) (not (> x1364 x688))) (and x845 x1578))))
(assert (x1438 x1107))
(assert (= x419 (=> (and (and (not (< 18446744073709551615 x1635)) (= (= 0 x1635) x1049) (= x467 (x1114 (+ x581 x1372))) (= x896 (mod (* 32 x1635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1372 (x1114 (+ 32 x896)))) (or (and (and (= (mod (* x1635 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x862) (= x1264 (x1114 (+ 32 x581)))) (not x1049)) x1049)) x1075)))
(assert (= (and (not x72) x1666) x1201))
(assert (x1438 x9))
(assert (= (x1700 1883652118) (x74 1883652118)))
(assert (x58 x1671))
(assert (x554 x548))
(assert (= x1256 (and x1682 x1731)))
(assert (x1115 x926))
(assert (x1515 x91))
(assert (x1438 x1184))
(assert (x111 x918))
(assert (= (x308 x526) 0))
(assert (= x999 (x1303 (x1700 x999))))
(assert (x1438 x1612))
(assert (= x378 (and x1056 x814)))
(assert (x1438 x762))
(assert (x1438 x348))
(assert (x1438 x953))
(assert (= x1578 (=> (and (or (and (and (< (* x953 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x710 x775) (= x1657 (mod (* 1000000000000000000 x953) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x1657 x1534) x710)) (not x1462)) (and (= 0 x775) x1462)) (and (= x1313 (x1318 x561)) (= x1701 (x393 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1268)) (= x1787 (x1114 (+ x1437 32))) (= (x1341 x1437) x1577) (= (x619 (x1700 x1178) (x74 10) 0) x392) (= x870 (x1341 x1437)) (= (x619 (x1700 x437) x44 0) x54) (= x437 (x1341 x1787)) (= x1636 (x619 (x1700 x1178) (x74 10) 0)) (= x953 (x1318 x54)) (= (x70 (x74 9)) x1268) (= (x1114 (+ 1 x1701)) x1444) (= (x619 (x1700 x1577) x1636 0) x1246) (= (= x953 0) x1462) (= (x619 (x1700 x580) x1246 0) x561) (= x580 (x1341 x1787)) (= (x1721 (- x981 x140)) x631) (= (x619 (x1700 x870) x392 0) x44) (not (= x1534 0)) (= (x1114 (+ x1094 32)) x1437) (> x1313 0) (not (> x140 x981)))) x1087)))
(assert (x1438 x244))
(assert (= (and x980 x213) x1469))
(assert (= x207 (and x664 x654)))
(assert (= 0 (x206 (+ x1532 (- x33 x467)))))
(assert (= (and (not x1653) x1416) x309))
(assert (x1438 x1079))
(assert (= (x969 x1255 6) (div x1255 64)))
(assert (x1438 x1195))
(assert (x1438 x680))
(assert (= x1354 (x1303 (x1700 x1354))))
(assert (= true x664))
(assert (x1438 x540))
(assert (= (x1700 4294967295) (x74 4294967295)))
(assert (= (x1303 (x74 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x74 46861972923178205566985210922759877011903582497231265773045854621316061069312) (x1700 46861972923178205566985210922759877011903582497231265773045854621316061069312)))
(assert (= x1402 (or x390 x495)))
(assert (x1438 x822))
(assert (= (=> (and (= x1192 (not (> x792 1))) (= x1738 x310) (> x589 0) (= (x1337 128) x792) (= (x1337 128) x589) (= (x1337 160) x1738)) (and x1192 (=> (= x1177 x310) x1001))) x1502))
(assert (x1438 x1422))
(assert (x1438 x1601))
(assert (= x706 (or x748 x1573 x997 x913 x1642)))
(assert (x1438 x298))
(assert (=> (<= x870 10000) (= (x74 x870) (x1700 x870))))
(assert (x1438 x1719))
(assert (=> (<= x437 10000) (= (x74 x437) (x1700 x437))))
(assert (x1438 x776))
(assert (x1438 x1388))
(assert (= x495 (or x694 x231)))
(assert (= (x74 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1700 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1115 x478))
(assert (x1438 x1415))
(assert (= (x1303 (x74 954831406)) 954831406))
(assert (= x1723 (and x117 (not x1510))))
(assert (x1438 x1356))
(assert (= (=> (and (or (and (and (= x87 x1137) (= x140 x39)) (not x800)) (and x800 (and (= x73 x140) (= x87 x460)))) (and (not (or (and (< x1508 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1508) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1508))) (= x800 (= x1164 1)) (= x1164 (x1662 x765)) (> 2 x1164) (= (x1662 x1764) x1508))) x1446) x30))
(assert (x1438 x797))
(assert (x417 x437))
(assert (= x590 (and x835 x1090)))
(assert (x1438 x525))
(assert (x1438 x556))
(assert (= (x1303 (x1700 x1450)) x1450))
(assert (x1438 x1151))
(assert (= (and x1281 (not x542)) x49))
(assert (x1115 x1671))
(assert (x1115 26959946660873538059280334323183841250429478006438217036639575736320))
(assert (x1438 x418))
(assert (= (x1303 (x1700 x1074)) x1074))
(assert (x1438 x1681))
(assert (x1438 x140))
(assert (x417 x272))
(assert (= (x1303 (x1700 x161)) x161))
(assert (= 0 (x206 (+ (- x708 x467) x1532))))
(assert (x1438 x657))
(assert (= 79228162514264337593543950335 (x1303 (x74 79228162514264337593543950335))))
(assert (x1438 x177))
(assert (x1438 x145))
(assert (= (x1700 2714230913) (x74 2714230913)))
(assert (x1438 x266))
(assert (= (or x1153 x671) x612))
(assert (= (x1700 500647658) (x74 500647658)))
(assert (= 500647658 (x1303 (x74 500647658))))
(assert (= x735 (=> (and (or (and (and (= x1525 (div x1206 x257)) (< (* x882 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1206 (mod (* x882 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1525 x1080)) (not x906)) (and (= 0 x1080) x906)) (and (not (= 0 x257)) (>= 255 x1447) (= (x934 x765) x1447) (= x1111 (x934 x1764)) (= (= x882 0) x906) (= (x934 x788) x882) (= x788 (x1114 (+ 32 x765))) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1111)) (< x1111 64)) (> x1111 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) x793)))
(assert (x1438 x1586))
(assert (x1438 x1444))
(assert (x1438 x181))
(assert (= x1162 (or x382 x865)))
(assert (x1438 x251))
(assert (x1438 x794))
(assert (x1438 x1097))
(assert (= (or x1234 x438) x46))
(assert (=> (<= x1178 10000) (= (x74 x1178) (x1700 x1178))))
(assert (x1115 115792089210356248762697446949407573530086143415211086033019366971273553903615))
(assert (= (and x1328 x1727) x1667))
(assert (x1438 x993))
(assert (= 0 (x308 x551)))
(assert (= (and x1589 (not x806)) x1752))
(assert (x1438 x905))
(assert (= (x1303 (x74 115792089210356248762697446949407573530086143415211086033019366971273553903615)) 115792089210356248762697446949407573530086143415211086033019366971273553903615))
(assert (x1438 x1143))
(assert (x1438 x1357))
(assert (x1438 x744))
(assert (= (=> (and (= x1423 (not (< 4 x1459))) (= (x1053 x569) x403) (= x1754 (x1114 (+ x569 32))) (= (x1114 (+ x473 32)) x1349)) (and (=> (and (= x1511 4) (= x344 x1349) (= x1754 x129)) x1656) x1423)) x1221))
(assert (x1438 x148))
(assert (x1438 x739))
(assert (= x966 (=> (and (= 0 x249) (= (> x1635 0) x15)) (and (=> (and (not x15) (= x121 x1457)) x1140) (=> (and (and (and (= 6 x779) (= (= x468 1) x915) (= (x969 x1255 6) x926) (= (x393 1 x926) x468)) (or (and (and (= x824 (x1429 64)) (= x1725 x11) (= (x1721 (- x1710 x824)) x475) (not (= 0 x647)) (= x1232 (x393 115792089237316195417293883273301227089434195242512125785869492901042639077375 x11)) (= x944 x123) (= x420 (x1448 (x1700 x1316))) (= (x1448 (x1700 274184521717934524641157099916833587280)) x647) (not (or (> x475 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x475 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x475 32)))) (not x1521) (= x1351 x861) (not (= 3028789119 x692)) (= 0 x1419) (= x287 (x619 (x74 0) (x74 17) 0)) (= x944 x1725) (= x1710 (x1114 (+ x794 32))) (not (> 4 x147)) (= x121 x526) (= x1314 (x1721 (- x147 4))) (= x170 112349551054952423155953805921267728290102753186399332250345724850365349756928) (= x692 4167276458) (= x1725 x1081) (= x1380 x1232) (= (x1721 (- x22 x121)) x1603) (= (x1114 (+ x121 x642)) x1351) (not (= 1779675522 x692)) (= x600 96) (= x730 160) (= (x619 (x74 0) (x74 17) 0) x222) (= x346 (x1114 (+ 4 x121))) (= x184 (x523 x670 96)) (= (x1258 x526) x68) (= (x393 115792089237316195423570985008687907853269984665640564039457584007913129639904 x734) x642) (= x147 x1603) (= x1081 (x1531 x287)) (> x420 0) (= x699 160) (= x734 (x1114 (+ x475 31))) (= (x1114 (+ x184 x1380)) x630) (= 36 x147) (= x1521 (< x1314 32)) (= x794 (x1557 64)) (= x774 (ite (>= 79228162514264337593543950335 x1380) x397 x630)) (= x53 x346) (= x670 (x393 79228162514264337593543950335 x123)) (= x1239 255) (= x1688 96) (= x1070 96) (= x22 (x1114 (+ 32 x346))) (= x397 (x1114 (+ x1380 x184)))) x915) (and (= x861 x121) (not x915)))) x15) x1312)))))
(assert (x1438 x767))
(assert (x1438 x1699))
(assert (= x1138 (and x1470 x1259)))
(assert (= (x1303 (x1700 x1605)) x1605))
(assert (= (x1303 (x74 307731845)) 307731845))
(assert (= x487 (and (not x1367) x1625)))
(assert (x1438 x1251))
(assert (x1438 x530))
(assert (x1438 x1600))
(check-sat)
(exit)