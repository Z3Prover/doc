(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x334 0)) (((x167 (x224 x334) (x127 x334) (x864 Int)) (x1491 (x1538 Int)) (x876 (x441 x334) (x2129 Int)))))
(declare-fun x886 () Bool)
(declare-fun x1737 () Int)
(declare-fun x151 () Bool)
(declare-fun x14 () x334)
(declare-fun x974 () Int)
(declare-fun x1408 () Int)
(declare-fun x748 () Int)
(declare-fun x852 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x37 () Int)
(declare-fun x646 () Bool)
(declare-fun x1790 () Int)
(declare-fun x767 () Bool)
(declare-fun x811 () Int)
(declare-fun x1779 (x334) Int)
(declare-fun x271 () Bool)
(declare-fun x289 () Int)
(declare-fun x74 () Int)
(declare-fun x2113 () Bool)
(declare-fun x457 () Int)
(declare-fun x1982 () Bool)
(declare-fun x1813 () Int)
(declare-fun x421 () Int)
(declare-fun x53 () Int)
(declare-fun x1631 () Bool)
(declare-fun x553 () x334)
(declare-fun x400 () Int)
(declare-fun x1082 () Int)
(declare-fun x306 () Int)
(declare-fun x453 () Int)
(declare-fun x1480 () Int)
(declare-fun x1159 () x334)
(declare-fun x432 () Int)
(declare-fun x914 () x334)
(declare-fun x2052 () Int)
(declare-fun x1971 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1007 () Bool)
(declare-fun x630 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x736 () Bool)
(declare-fun x693 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x498 () Bool)
(declare-fun x981 () x334)
(declare-fun x1532 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x851 () Int)
(declare-fun x2002 () Bool)
(declare-fun x1760 () Int)
(declare-fun x1866 () x334)
(declare-fun x415 () Int)
(declare-fun x843 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x1304 () Int)
(declare-fun x689 () x334)
(declare-fun x240 () Int)
(declare-fun x1455 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1095 () Int)
(declare-fun x853 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x1482 () Int)
(declare-fun x1059 () Int)
(declare-fun x1257 () Bool)
(declare-fun x535 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x1665 () x334)
(declare-fun x1035 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x1721 () Int)
(declare-fun x966 () Bool)
(declare-fun x524 () Int)
(declare-fun x957 () Int)
(declare-fun x1959 () Bool)
(declare-fun x672 () Bool)
(declare-fun x1131 () Int)
(declare-fun x1615 () Bool)
(declare-fun x257 () Bool)
(declare-fun x2034 () Int)
(declare-fun x155 () Bool)
(declare-fun x805 () Int)
(declare-fun x47 () Bool)
(declare-fun x1928 () Int)
(declare-fun x66 () Bool)
(declare-fun x75 () Int)
(declare-fun x877 () Bool)
(declare-fun x586 () Int)
(declare-fun x1904 () Int)
(declare-fun x149 () Int)
(declare-fun x131 () Int)
(declare-fun x1870 () Bool)
(declare-fun x1616 () Int)
(declare-fun x274 () Int)
(declare-fun x1425 () Bool)
(declare-fun x1373 () Int)
(declare-fun x1584 () Bool)
(declare-fun x1984 () Int)
(declare-fun x544 () Int)
(declare-fun x85 () Int)
(declare-fun x1995 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x1155 () x334)
(declare-fun x54 () Int)
(declare-fun x112 () Bool)
(declare-fun x5 () Int)
(declare-fun x976 () Bool)
(declare-fun x1609 () Int)
(declare-fun x1810 () Bool)
(declare-fun x385 () Bool)
(declare-fun x738 () Bool)
(declare-fun x1374 () Int)
(declare-fun x545 () Bool)
(declare-fun x1011 () Int)
(declare-fun x1686 () Int)
(declare-fun x1809 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x1413 () Int)
(declare-fun x1258 () Int)
(declare-fun x1886 () Int)
(declare-fun x1001 () Int)
(declare-fun x707 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x166 () Int)
(declare-fun x1969 () Bool)
(declare-fun x188 () x334)
(declare-fun x515 () Bool)
(declare-fun x1330 () Int)
(declare-fun x1705 () Int)
(declare-fun x959 () Bool)
(declare-fun x382 () Int)
(declare-fun x869 () Bool)
(declare-fun x1650 () Int)
(declare-fun x1025 () Int)
(declare-fun x78 () Int)
(declare-fun x1407 () Int)
(declare-fun x169 () Int)
(declare-fun x2124 () Int)
(declare-fun x1945 () Int)
(declare-fun x1 () Int)
(declare-fun x90 () Int)
(declare-fun x377 () Bool)
(declare-fun x104 () Bool)
(declare-fun x1963 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1905 () Int)
(declare-fun x1450 () Bool)
(declare-fun x508 () Bool)
(declare-fun x2045 () Int)
(declare-fun x2137 () Bool)
(declare-fun x1445 () Int)
(declare-fun x1774 () x334)
(declare-fun x594 () Int)
(declare-fun x1773 () Int)
(declare-fun x1415 () Int)
(declare-fun x790 () Bool)
(declare-fun x983 () x334)
(declare-fun x1627 () Int)
(declare-fun x244 () Int)
(declare-fun x438 () Bool)
(declare-fun x417 () Bool)
(declare-fun x569 () Bool)
(declare-fun x1351 () Int)
(declare-fun x351 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x442 () Int)
(declare-fun x534 () Bool)
(declare-fun x2041 () Int)
(declare-fun x855 () Int)
(declare-fun x222 () Bool)
(declare-fun x1723 () Int)
(declare-fun x1516 () x334)
(declare-fun x1393 () Bool)
(declare-fun x91 () Bool)
(declare-fun x378 () Bool)
(declare-fun x401 () Int)
(declare-fun x617 () Int)
(declare-fun x134 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x1935 () Int)
(declare-fun x1219 () x334)
(declare-fun x1203 () Int)
(declare-fun x1365 () Bool)
(declare-fun x668 () Int)
(declare-fun x1081 () Bool)
(declare-fun x999 () Bool)
(declare-fun x1422 () Int)
(declare-fun x917 () Int)
(declare-fun x680 () Int)
(declare-fun x1250 () Int)
(declare-fun x1985 () Int)
(declare-fun x1642 () Int)
(declare-fun x526 () x334)
(declare-fun x518 () Int)
(declare-fun x1964 () Int)
(declare-fun x568 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x1211 () x334)
(declare-fun x319 () Int)
(declare-fun x723 () Bool)
(declare-fun x183 () Bool)
(declare-fun x1991 () Int)
(declare-fun x765 () Bool)
(declare-fun x804 () Bool)
(declare-fun x659 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x828 () Int)
(declare-fun x1492 () Int)
(declare-fun x1780 () Int)
(declare-fun x1693 () Bool)
(declare-fun x307 (Int) Int)
(declare-fun x880 () Int)
(declare-fun x1970 () Int)
(declare-fun x1497 () Int)
(declare-fun x552 (Int) Int)
(declare-fun x566 () Bool)
(declare-fun x2026 () Int)
(declare-fun x1333 () Int)
(declare-fun x631 () Bool)
(declare-fun x1479 () Int)
(declare-fun x690 () Bool)
(declare-fun x1768 () Int)
(declare-fun x505 () Bool)
(declare-fun x1072 () Int)
(declare-fun x262 () x334)
(declare-fun x1233 () Int)
(declare-fun x511 () Int)
(declare-fun x797 () Int)
(declare-fun x1437 () Bool)
(declare-fun x219 () Bool)
(declare-fun x512 () Bool)
(declare-fun x1097 () Int)
(declare-fun x1019 () Int)
(declare-fun x1846 () Bool)
(declare-fun x1339 (x334) Int)
(declare-fun x200 () Bool)
(declare-fun x1464 () x334)
(declare-fun x209 () Bool)
(declare-fun x130 () Int)
(declare-fun x656 () Bool)
(declare-fun x2037 () Int)
(declare-fun x182 () Int)
(declare-fun x980 () Bool)
(declare-fun x107 () Int)
(declare-fun x887 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x97 () Int)
(declare-fun x1240 () Int)
(declare-fun x1903 () Int)
(declare-fun x1874 () Int)
(declare-fun x673 () Bool)
(declare-fun x220 () Int)
(declare-fun x1280 (x334) Int)
(declare-fun x1911 () Bool)
(declare-fun x458 () Int)
(declare-fun x2 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x773 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1922 () x334)
(declare-fun x497 () Int)
(declare-fun x1993 () Bool)
(declare-fun x2036 () Int)
(declare-fun x205 () Bool)
(declare-fun x293 () Int)
(declare-fun x881 () Int)
(declare-fun x1878 () Int)
(declare-fun x616 () Bool)
(declare-fun x1829 () Bool)
(declare-fun x973 () Int)
(declare-fun x1249 () Int)
(declare-fun x1200 () Bool)
(declare-fun x754 () Int)
(declare-fun x1659 () Int)
(declare-fun x398 () Int)
(declare-fun x2008 () x334)
(declare-fun x343 () Int)
(declare-fun x872 () Bool)
(declare-fun x1069 () Int)
(declare-fun x1807 () Bool)
(declare-fun x1704 () x334)
(declare-fun x201 () Bool)
(declare-fun x1571 () Int)
(declare-fun x1540 () Int)
(declare-fun x1436 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1628 () Bool)
(declare-fun x879 () Bool)
(declare-fun x986 () Int)
(declare-fun x2020 () Bool)
(declare-fun x882 () Int)
(declare-fun x703 () Bool)
(declare-fun x898 () Bool)
(declare-fun x1817 () Int)
(declare-fun x1860 () Int)
(declare-fun x179 () Int)
(declare-fun x1366 () Int)
(declare-fun x2135 () x334)
(declare-fun x830 () Int)
(declare-fun x1735 () Bool)
(declare-fun x2058 () Int)
(declare-fun x349 () Int)
(declare-fun x757 () Int)
(declare-fun x1135 () Bool)
(declare-fun x124 () Bool)
(declare-fun x691 () Int)
(declare-fun x778 () Int)
(declare-fun x1262 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x1840 () Int)
(declare-fun x779 () Bool)
(declare-fun x532 () Int)
(declare-fun x132 () Bool)
(declare-fun x1585 () Int)
(declare-fun x1595 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1980 () Int)
(declare-fun x1661 () Int)
(declare-fun x2147 () Int)
(declare-fun x1607 () Int)
(declare-fun x1134 () Bool)
(declare-fun x92 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x2081 () Int)
(declare-fun x1406 () Int)
(declare-fun x1268 () Int)
(declare-fun x396 () Bool)
(declare-fun x273 () Int)
(declare-fun x1799 () Int)
(declare-fun x699 () x334)
(declare-fun x671 () Int)
(declare-fun x1324 () Bool)
(declare-fun x1271 () Int)
(declare-fun x292 () Bool)
(declare-fun x916 () x334)
(declare-fun x1520 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x527 () Bool)
(declare-fun x1574 () Int)
(declare-fun x1641 () Int)
(declare-fun x366 () Int)
(declare-fun x1214 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x1843 () Int)
(declare-fun x1597 () Int)
(declare-fun x1673 () Int)
(declare-fun x1242 () Int)
(declare-fun x212 () Int)
(declare-fun x657 () Int)
(declare-fun x487 () Bool)
(declare-fun x854 () Int)
(declare-fun x1043 () Int)
(declare-fun x1646 () Bool)
(declare-fun x677 () Bool)
(declare-fun x1537 () Int)
(declare-fun x80 () Int)
(declare-fun x2030 () Int)
(declare-fun x118 () x334)
(declare-fun x1633 () Int)
(declare-fun x833 () Bool)
(declare-fun x705 () Int)
(declare-fun x2091 () x334)
(declare-fun x2042 () Int)
(declare-fun x304 () Bool)
(declare-fun x643 () Int)
(declare-fun x942 () Bool)
(declare-fun x1709 () Int)
(declare-fun x964 () Int)
(declare-fun x1291 () x334)
(declare-fun x825 () Int)
(declare-fun x1112 () Int)
(declare-fun x1699 () Bool)
(declare-fun x195 () Bool)
(declare-fun x1168 () Int)
(declare-fun x1241 () Bool)
(declare-fun x963 () Bool)
(declare-fun x1926 () Int)
(declare-fun x2019 () Bool)
(declare-fun x59 () Bool)
(declare-fun x1404 () Int)
(declare-fun x409 () Int)
(declare-fun x2056 () Int)
(declare-fun x1494 () Int)
(declare-fun x1536 () Int)
(declare-fun x1446 () Bool)
(declare-fun x2117 () Int)
(declare-fun x1565 () Int)
(declare-fun x100 () Int)
(declare-fun x2068 () Int)
(declare-fun x129 () Int)
(declare-fun x1222 () Int)
(declare-fun x1341 () Bool)
(declare-fun x1173 () Int)
(declare-fun x198 () Bool)
(declare-fun x1999 () x334)
(declare-fun x154 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x1864 () Int)
(declare-fun x796 () Bool)
(declare-fun x1655 () Int)
(declare-fun x678 () Bool)
(declare-fun x171 () Int)
(declare-fun x1147 () x334)
(declare-fun x428 () Int)
(declare-fun x70 () Int)
(declare-fun x793 () Int)
(declare-fun x1063 () Int)
(declare-fun x799 () Int)
(declare-fun x1273 () x334)
(declare-fun x7 () Int)
(declare-fun x1856 () Int)
(declare-fun x2060 () Int)
(declare-fun x1380 () Int)
(declare-fun x1124 () Bool)
(declare-fun x950 () Int)
(declare-fun x140 () Int)
(declare-fun x1454 () Int)
(declare-fun x1288 () Int)
(declare-fun x38 () Int)
(declare-fun x1762 () Int)
(declare-fun x16 () Int)
(declare-fun x1625 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x782 () Bool)
(declare-fun x404 () Int)
(declare-fun x1080 () Bool)
(declare-fun x2134 () Int)
(declare-fun x1707 () Int)
(declare-fun x397 () Int)
(declare-fun x2065 () Int)
(declare-fun x1077 () Int)
(declare-fun x1248 () Int)
(declare-fun x549 () Bool)
(declare-fun x440 () Int)
(declare-fun x1570 () Bool)
(declare-fun x317 () Bool)
(declare-fun x2070 () x334)
(declare-fun x199 () Int)
(declare-fun x1645 () Bool)
(declare-fun x390 () Int)
(declare-fun x117 () Int)
(declare-fun x784 () Int)
(declare-fun x2073 () Int)
(declare-fun x62 () Bool)
(declare-fun x810 () Bool)
(declare-fun x755 () x334)
(declare-fun x627 () Bool)
(declare-fun x683 () Int)
(declare-fun x268 () Bool)
(declare-fun x192 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x783 () Int)
(declare-fun x20 () Int)
(declare-fun x1016 () x334)
(declare-fun x1679 () x334)
(declare-fun x1032 () Int)
(declare-fun x576 () Bool)
(declare-fun x454 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x563 () Int)
(declare-fun x143 () Int)
(declare-fun x733 () Int)
(declare-fun x13 () Bool)
(declare-fun x839 () Int)
(declare-fun x187 () Bool)
(declare-fun x867 () Int)
(declare-fun x794 () Int)
(declare-fun x1513 () Int)
(declare-fun x431 () Int)
(declare-fun x529 () Int)
(declare-fun x1736 () Bool)
(declare-fun x2102 () Int)
(declare-fun x2110 () Int)
(declare-fun x165 () Int)
(declare-fun x2049 () Int)
(declare-fun x848 () Bool)
(declare-fun x1897 () Int)
(declare-fun x358 () Int)
(declare-fun x1731 () Int)
(declare-fun x1666 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x685 () x334)
(declare-fun x1939 (x334) Int)
(declare-fun x1261 () Int)
(declare-fun x1453 () Int)
(declare-fun x2095 () Int)
(declare-fun x1697 () Bool)
(declare-fun x1498 () Int)
(declare-fun x1357 () Int)
(declare-fun x1591 () Bool)
(declare-fun x943 () Int)
(declare-fun x1389 () Bool)
(declare-fun x361 () Int)
(declare-fun x1125 () Int)
(declare-fun x1014 () Int)
(declare-fun x1039 () Bool)
(declare-fun x1909 () Int)
(declare-fun x1231 () x334)
(declare-fun x445 () Int)
(declare-fun x2072 () Int)
(declare-fun x111 () Int)
(declare-fun x1730 () Int)
(declare-fun x2122 () Int)
(declare-fun x2080 () Bool)
(declare-fun x905 () Int)
(declare-fun x513 () Bool)
(declare-fun x338 () Int)
(declare-fun x1068 () Bool)
(declare-fun x1066 () Int)
(declare-fun x206 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x1857 () Int)
(declare-fun x1166 () Int)
(declare-fun x414 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x1108 () Int)
(declare-fun x283 (Int Int) Int)
(declare-fun x1716 () Int)
(declare-fun x1573 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1830 () Bool)
(declare-fun x190 () Bool)
(declare-fun x1910 () Int)
(declare-fun x1990 () Int)
(declare-fun x652 () Bool)
(declare-fun x648 () Bool)
(declare-fun x729 () Int)
(declare-fun x891 () Bool)
(declare-fun x667 () Int)
(declare-fun x1076 () Int)
(declare-fun x922 () Bool)
(declare-fun x446 () Int)
(declare-fun x2018 () Int)
(declare-fun x654 () Int)
(declare-fun x556 () Bool)
(declare-fun x1033 () Int)
(declare-fun x1533 () Int)
(declare-fun x1420 () Bool)
(declare-fun x1476 () Int)
(declare-fun x1719 () Int)
(declare-fun x1626 () Int)
(declare-fun x661 () Int)
(declare-fun x1469 () Int)
(declare-fun x655 () Int)
(declare-fun x406 () Bool)
(declare-fun x658 () Int)
(declare-fun x724 () Int)
(declare-fun x702 () Int)
(declare-fun x136 () Int)
(declare-fun x987 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x394 () Int)
(declare-fun x267 () Int)
(declare-fun x1728 () x334)
(declare-fun x1459 () Bool)
(declare-fun x1828 () Int)
(declare-fun x900 () Int)
(declare-fun x1381 () Int)
(declare-fun x1943 () Bool)
(declare-fun x275 () Int)
(declare-fun x583 () Int)
(declare-fun x1487 () Int)
(declare-fun x344 () Int)
(declare-fun x44 () Bool)
(declare-fun x489 () Int)
(declare-fun x1577 () x334)
(declare-fun x150 () Bool)
(declare-fun x1676 () Bool)
(declare-fun x1797 () Int)
(declare-fun x937 () Int)
(declare-fun x1789 () Int)
(declare-fun x456 () Int)
(declare-fun x1559 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x1156 () Int)
(declare-fun x1919 () Bool)
(declare-fun x666 () Int)
(declare-fun x495 () Int)
(declare-fun x1711 () Int)
(declare-fun x1695 () Int)
(declare-fun x1427 () Int)
(declare-fun x591 () Bool)
(declare-fun x1795 () Int)
(declare-fun x2096 () Int)
(declare-fun x1462 () Bool)
(declare-fun x2053 () Int)
(declare-fun x1832 () x334)
(declare-fun x1451 () Int)
(declare-fun x841 () Bool)
(declare-fun x1132 () Int)
(declare-fun x1826 () Int)
(declare-fun x889 () Int)
(declare-fun x1405 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x551 () Int)
(declare-fun x1087 () Int)
(declare-fun x156 () Bool)
(declare-fun x2148 () Int)
(declare-fun x745 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x815 () Int)
(declare-fun x781 () Bool)
(declare-fun x367 () Int)
(declare-fun x381 () Bool)
(declare-fun x216 (Int) Int)
(declare-fun x1612 () Int)
(declare-fun x620 () Bool)
(declare-fun x507 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1662 () Int)
(declare-fun x969 () Int)
(declare-fun x2057 () Bool)
(declare-fun x777 () Int)
(declare-fun x840 () x334)
(declare-fun x2138 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x138 () x334)
(declare-fun x1546 () Bool)
(declare-fun x163 () Int)
(declare-fun x991 () Int)
(declare-fun x1361 () Bool)
(declare-fun x965 () Bool)
(declare-fun x228 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1114 () Int)
(declare-fun x1375 () Int)
(declare-fun x1370 () Int)
(declare-fun x480 () x334)
(declare-fun x1176 () Bool)
(declare-fun x1228 () Int)
(declare-fun x1152 () Bool)
(declare-fun x255 () Int)
(declare-fun x99 () Int)
(declare-fun x1157 () Int)
(declare-fun x994 () Int)
(declare-fun x1978 () Int)
(declare-fun x476 () Int)
(declare-fun x50 () Bool)
(declare-fun x883 () Int)
(declare-fun x55 () Bool)
(declare-fun x940 () Int)
(declare-fun x1060 () Int)
(declare-fun x911 () Int)
(declare-fun x479 () Int)
(declare-fun x1086 () Int)
(declare-fun x628 () Int)
(declare-fun x164 () Int)
(declare-fun x1787 () Bool)
(declare-fun x302 () Int)
(declare-fun x1740 () Int)
(declare-fun x76 () Bool)
(declare-fun x868 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x731 () x334)
(declare-fun x1369 () Int)
(declare-fun x592 () Bool)
(declare-fun x984 () Int)
(declare-fun x571 () Bool)
(declare-fun x1743 () Int)
(declare-fun x2016 () Int)
(declare-fun x2066 () Int)
(declare-fun x2139 () Int)
(declare-fun x621 () Int)
(declare-fun x605 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x1227 () Int)
(declare-fun x8 () Int)
(declare-fun x1103 () Int)
(declare-fun x504 () Bool)
(declare-fun x146 () Int)
(declare-fun x83 () Int)
(declare-fun x291 () Bool)
(declare-fun x1463 () Int)
(declare-fun x547 () Int)
(declare-fun x653 () Int)
(declare-fun x1895 () Int)
(declare-fun x1618 () Bool)
(declare-fun x1530 () Int)
(declare-fun x1523 () Bool)
(declare-fun x827 () Bool)
(declare-fun x94 () Int)
(declare-fun x1881 () Int)
(declare-fun x2054 () Int)
(declare-fun x791 () Bool)
(declare-fun x1712 () x334)
(declare-fun x419 () Int)
(declare-fun x1630 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x1948 () Int)
(declare-fun x1929 () Int)
(declare-fun x2146 () Int)
(declare-fun x2086 () Int)
(declare-fun x1680 () Bool)
(declare-fun x785 () Int)
(declare-fun x410 () Int)
(declare-fun x1983 () Int)
(declare-fun x2093 () Int)
(declare-fun x1272 () Int)
(declare-fun x1879 (Int Int) Int)
(declare-fun x629 () Int)
(declare-fun x194 () Int)
(declare-fun x88 () Int)
(declare-fun x814 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x459 () Int)
(declare-fun x424 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x29 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x1384 () Int)
(declare-fun x1934 () x334)
(declare-fun x2061 () Int)
(declare-fun x817 () Int)
(declare-fun x716 () Int)
(declare-fun x416 () Int)
(declare-fun x1548 () Bool)
(declare-fun x607 () x334)
(declare-fun x393 () Int)
(declare-fun x1783 () Bool)
(declare-fun x1110 () Int)
(declare-fun x1140 () Int)
(declare-fun x1542 () Bool)
(declare-fun x803 () x334)
(declare-fun x1623 () Int)
(declare-fun x1720 () Int)
(declare-fun x1027 () Bool)
(declare-fun x918 () Int)
(declare-fun x1419 () Int)
(declare-fun x1218 () Bool)
(declare-fun x682 () Int)
(declare-fun x746 () Int)
(declare-fun x1833 () Bool)
(declare-fun x2001 () Int)
(declare-fun x2077 () Bool)
(declare-fun x1806 () Int)
(declare-fun x455 () Int)
(declare-fun x45 () Int)
(declare-fun x279 () Int)
(declare-fun x998 () Int)
(declare-fun x399 () Int)
(declare-fun x1638 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x550 () Int)
(declare-fun x28 () Bool)
(declare-fun x354 () Bool)
(declare-fun x266 () Int)
(declare-fun x540 () Bool)
(declare-fun x1047 () Int)
(declare-fun x2075 () Bool)
(declare-fun x1473 () Int)
(declare-fun x1772 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x884 () Int)
(declare-fun x1647 () Bool)
(declare-fun x808 () Int)
(declare-fun x1483 () Bool)
(declare-fun x1823 () Int)
(declare-fun x333 () Int)
(declare-fun x588 () Int)
(declare-fun x625 () Int)
(declare-fun x249 () Int)
(declare-fun x447 () Int)
(declare-fun x1376 () Bool)
(declare-fun x15 () Int)
(declare-fun x1335 () Int)
(declare-fun x688 () Int)
(declare-fun x580 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1906 () Int)
(declare-fun x700 () Int)
(declare-fun x1263 () Int)
(declare-fun x706 () Bool)
(declare-fun x373 () Int)
(declare-fun x1031 () Int)
(declare-fun x1093 () Bool)
(declare-fun x717 () Int)
(declare-fun x1690 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x1784 () Int)
(declare-fun x968 () Bool)
(declare-fun x2038 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x1562 () Int)
(declare-fun x1658 () Int)
(declare-fun x1902 () Bool)
(declare-fun x1018 () x334)
(declare-fun x1514 () Bool)
(declare-fun x1937 () Bool)
(declare-fun x949 () Int)
(declare-fun x1972 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x1013 () Int)
(declare-fun x1583 () Bool)
(declare-fun x235 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x1518 () Int)
(declare-fun x953 () Bool)
(declare-fun x636 () Bool)
(declare-fun x1293 () Int)
(declare-fun x1478 () Int)
(declare-fun x2031 () Int)
(declare-fun x593 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x1136 () Int)
(declare-fun x1746 () Bool)
(declare-fun x6 () Int)
(declare-fun x1753 () Bool)
(declare-fun x1525 () Int)
(declare-fun x1295 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x1281 () Int)
(declare-fun x1725 () Int)
(declare-fun x144 () Int)
(declare-fun x67 () Int)
(declare-fun x1675 () Int)
(declare-fun x1602 () Int)
(declare-fun x1701 () Bool)
(declare-fun x1322 () Int)
(declare-fun x9 () Int)
(declare-fun x681 () Bool)
(declare-fun x1318 () Int)
(declare-fun x1839 () Int)
(declare-fun x1950 () Int)
(declare-fun x122 () Bool)
(declare-fun x1706 () Int)
(declare-fun x1617 () Int)
(declare-fun x4 () Bool)
(declare-fun x418 () Bool)
(declare-fun x180 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x958 () Bool)
(declare-fun x449 () x334)
(declare-fun x1050 () Int)
(declare-fun x1049 () Int)
(declare-fun x579 () Int)
(declare-fun x863 () Int)
(declare-fun x938 () Int)
(declare-fun x2015 () Int)
(declare-fun x389 () Int)
(declare-fun x282 () Bool)
(declare-fun x1634 () x334)
(declare-fun x819 () Int)
(declare-fun x1397 () Bool)
(declare-fun x1186 () Int)
(declare-fun x339 () Int)
(declare-fun x1952 () Int)
(declare-fun x2116 () Int)
(declare-fun x1400 () Int)
(declare-fun x686 () Bool)
(declare-fun x995 () Int)
(declare-fun x1593 () Int)
(declare-fun x1362 () Int)
(declare-fun x359 () Bool)
(declare-fun x632 () Int)
(declare-fun x1073 () Bool)
(declare-fun x1315 () Int)
(declare-fun x460 () Bool)
(declare-fun x1183 () Int)
(declare-fun x901 () Int)
(declare-fun x687 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x1966 () Bool)
(declare-fun x813 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x2141 () Int)
(declare-fun x1942 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x972 () x334)
(declare-fun x548 () Int)
(declare-fun x1266 () Int)
(declare-fun x517 () Int)
(declare-fun x713 () Int)
(declare-fun x172 () Bool)
(declare-fun x519 () Bool)
(declare-fun x1853 () Int)
(declare-fun x22 () x334)
(declare-fun x1894 () Int)
(declare-fun x606 () Bool)
(declare-fun x1283 () Int)
(declare-fun x1869 () Int)
(declare-fun x890 () Bool)
(declare-fun x977 () Int)
(declare-fun x170 () Int)
(declare-fun x892 () Bool)
(declare-fun x69 () Int)
(declare-fun x1460 () Bool)
(declare-fun x1178 () Int)
(declare-fun x1775 () Bool)
(declare-fun x316 () Int)
(declare-fun x753 () Bool)
(declare-fun x543 () Int)
(declare-fun x1216 () Int)
(declare-fun x812 () Int)
(declare-fun x1777 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x1820 () Int)
(declare-fun x1046 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x742 () Bool)
(declare-fun x1859 () Int)
(declare-fun x52 () Int)
(declare-fun x469 () Int)
(declare-fun x1191 () Int)
(declare-fun x248 () Int)
(declare-fun x391 () Int)
(declare-fun x365 () Int)
(declare-fun x768 () Int)
(declare-fun x19 () Bool)
(declare-fun x435 () Int)
(declare-fun x403 () Bool)
(declare-fun x1997 (Int) Int)
(declare-fun x1868 () Bool)
(declare-fun x695 () Bool)
(declare-fun x2145 () Int)
(declare-fun x1343 () Int)
(declare-fun x2076 () Bool)
(declare-fun x374 () Int)
(declare-fun x1088 () Int)
(declare-fun x1184 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1587 () Int)
(declare-fun x41 () Int)
(declare-fun x1371 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x826 () Int)
(declare-fun x356 () Int)
(declare-fun x2090 () Bool)
(declare-fun x1547 () Int)
(declare-fun x1344 () Bool)
(declare-fun x1572 () Int)
(declare-fun x1439 () Int)
(declare-fun x1996 () Bool)
(declare-fun x1502 () Int)
(declare-fun x352 () Int)
(declare-fun x1232 () Bool)
(declare-fun x284 () Bool)
(declare-fun x930 () Int)
(declare-fun x2029 () Int)
(declare-fun x1008 () Int)
(declare-fun x1703 () Bool)
(declare-fun x2017 () Int)
(declare-fun x1243 () Int)
(declare-fun x906 () Bool)
(declare-fun x357 () Bool)
(declare-fun x173 () Int)
(declare-fun x1882 () Int)
(declare-fun x246 () Int)
(declare-fun x760 () Int)
(declare-fun x1034 () Bool)
(declare-fun x807 () Int)
(declare-fun x587 () x334)
(declare-fun x708 () Bool)
(declare-fun x473 () Bool)
(declare-fun x153 () Int)
(declare-fun x137 () Int)
(declare-fun x1252 () Int)
(declare-fun x65 () Int)
(declare-fun x2108 () Bool)
(declare-fun x1692 () Int)
(declare-fun x242 () Int)
(declare-fun x1246 () Bool)
(declare-fun x665 () Int)
(declare-fun x1629 () Int)
(declare-fun x1851 () Bool)
(declare-fun x1914 () Bool)
(declare-fun x947 (Int Int) Int)
(declare-fun x1300 () Int)
(declare-fun x1094 () Int)
(declare-fun x320 () x334)
(declare-fun x1414 () Bool)
(declare-fun x670 () x334)
(declare-fun x1206 () Int)
(declare-fun x2069 () x334)
(declare-fun x26 () Int)
(declare-fun x231 () Int)
(declare-fun x664 () Int)
(declare-fun x575 () Bool)
(declare-fun x1048 () x334)
(declare-fun x615 () x334)
(declare-fun x96 () Int)
(declare-fun x612 () Bool)
(declare-fun x1890 () Int)
(declare-fun x845 () Int)
(declare-fun x1085 () Int)
(declare-fun x613 () Int)
(declare-fun x1363 () Int)
(declare-fun x250 () Bool)
(declare-fun x1360 () Int)
(declare-fun x114 () Bool)
(declare-fun x345 () Int)
(declare-fun x1023 () x334)
(declare-fun x1198 () x334)
(declare-fun x800 () Bool)
(declare-fun x185 () Bool)
(declare-fun x1541 () x334)
(declare-fun x878 () Bool)
(declare-fun x311 () Bool)
(declare-fun x1944 () Int)
(declare-fun x270 () x334)
(declare-fun x1424 () Int)
(declare-fun x1284 () Int)
(declare-fun x749 () Bool)
(declare-fun x1101 () Int)
(declare-fun x909 () Bool)
(declare-fun x1144 () Int)
(declare-fun x1816 () Int)
(declare-fun x1042 () Int)
(declare-fun x660 () Int)
(declare-fun x1040 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x608 () Int)
(declare-fun x730 () Int)
(declare-fun x1608 () Bool)
(declare-fun x798 () Int)
(declare-fun x633 () x334)
(declare-fun x1202 () Bool)
(declare-fun x2046 () Int)
(declare-fun x2132 () Bool)
(declare-fun x639 () x334)
(declare-fun x1229 () Bool)
(declare-fun x380 () Bool)
(declare-fun x1941 () Int)
(declare-fun x623 () Bool)
(declare-fun x191 () Bool)
(declare-fun x204 () Int)
(declare-fun x1689 () Bool)
(declare-fun x1637 () Int)
(declare-fun x1751 (Int) Int)
(declare-fun x462 () Int)
(declare-fun x1430 () Int)
(declare-fun x2079 () Int)
(declare-fun x1917 () x334)
(declare-fun x522 () Int)
(declare-fun x89 () Int)
(declare-fun x1475 () Bool)
(declare-fun x301 () Bool)
(declare-fun x1278 () Int)
(declare-fun x1432 () Int)
(declare-fun x101 () Int)
(declare-fun x598 () Int)
(declare-fun x1975 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x450 () Int)
(declare-fun x714 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x105 () Int)
(declare-fun x1601 () Bool)
(declare-fun x988 () Bool)
(declare-fun x663 () Int)
(declare-fun x514 (Int) Int)
(declare-fun x475 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x821 () Bool)
(declare-fun x597 () Bool)
(declare-fun x2120 () Int)
(declare-fun x902 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1837 () Int)
(declare-fun x1270 () Int)
(declare-fun x1158 () Int)
(declare-fun x2142 () Bool)
(declare-fun x1667 () Int)
(declare-fun x376 () Int)
(declare-fun x437 () Bool)
(declare-fun x162 () Int)
(declare-fun x2012 () Bool)
(declare-fun x1567 () Int)
(declare-fun x2131 () Int)
(declare-fun x103 () Int)
(declare-fun x330 () Bool)
(declare-fun x1503 () Int)
(declare-fun x1138 () Int)
(declare-fun x903 () Int)
(declare-fun x1729 () Int)
(declare-fun x1566 () Bool)
(declare-fun x229 () Int)
(declare-fun x388 () Int)
(declare-fun x1653 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x1622 () Int)
(declare-fun x1163 () Bool)
(declare-fun x1962 () Int)
(declare-fun x1862 () Int)
(declare-fun x2013 () Bool)
(declare-fun x1598 (Int) Int)
(declare-fun x337 () Bool)
(declare-fun x865 () Int)
(declare-fun x1192 () Bool)
(declare-fun x698 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x2149 () Int)
(declare-fun x360 () Bool)
(declare-fun x2010 () Int)
(declare-fun x741 () Int)
(declare-fun x286 () Int)
(declare-fun x1733 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x484 () Bool)
(declare-fun x1818 () Int)
(declare-fun x413 () Int)
(declare-fun x1916 () Int)
(declare-fun x234 () Int)
(declare-fun x2071 () Int)
(declare-fun x1352 () x334)
(declare-fun x761 () Bool)
(declare-fun x452 () Int)
(declare-fun x1010 () Int)
(declare-fun x1290 () Int)
(declare-fun x1575 () Bool)
(declare-fun x189 () Int)
(declare-fun x1932 () Bool)
(declare-fun x762 () Int)
(declare-fun x43 () Int)
(declare-fun x1702 () x334)
(declare-fun x506 () Int)
(declare-fun x1652 () x334)
(declare-fun x253 () Bool)
(declare-fun x115 () Int)
(declare-fun x420 () Int)
(declare-fun x971 () Bool)
(declare-fun x1758 () Int)
(declare-fun x470 () Int)
(declare-fun x1600 () x334)
(declare-fun x1386 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x875 () Int)
(declare-fun x1217 () Int)
(declare-fun x1209 () Bool)
(declare-fun x310 () x334)
(declare-fun x862 () Bool)
(declare-fun x1107 () Int)
(declare-fun x557 () Bool)
(declare-fun x1974 () Int)
(declare-fun x1887 () Bool)
(declare-fun x894 () Int)
(declare-fun x298 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x835 () x334)
(declare-fun x2123 () Int)
(declare-fun x1180 () Int)
(declare-fun x350 () Int)
(declare-fun x2126 () Int)
(declare-fun x280 () Bool)
(declare-fun x1744 () Bool)
(declare-fun x202 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x277 () Int)
(declare-fun x1748 () Int)
(declare-fun x174 () Bool)
(declare-fun x139 () Int)
(declare-fun x39 () Bool)
(declare-fun x481 () Bool)
(declare-fun x1058 () x334)
(declare-fun x1004 () x334)
(declare-fun x314 () x334)
(declare-fun x1329 () Int)
(declare-fun x369 () Bool)
(declare-fun x582 () Bool)
(declare-fun x1938 () Int)
(declare-fun x2133 () Int)
(declare-fun x1979 () Bool)
(declare-fun x1169 () Int)
(declare-fun x952 () Bool)
(declare-fun x873 () Int)
(declare-fun x622 () x334)
(declare-fun x895 () Int)
(declare-fun x1811 (Int) Int)
(declare-fun x744 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x2106 () Int)
(declare-fun x1973 () Int)
(declare-fun x430 () Int)
(declare-fun x1418 () Int)
(declare-fun x145 () Int)
(declare-fun x1277 () Int)
(declare-fun x1885 () Int)
(declare-fun x2040 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x2033 () Int)
(declare-fun x1834 () x334)
(declare-fun x679 () Bool)
(declare-fun x1133 () Int)
(declare-fun x211 () Int)
(declare-fun x759 () Bool)
(declare-fun x739 () x334)
(declare-fun x483 () Bool)
(declare-fun x436 () Bool)
(declare-fun x98 () Bool)
(declare-fun x77 () Int)
(declare-fun x1672 () Bool)
(declare-fun x1992 () Int)
(declare-fun x110 () x334)
(declare-fun x955 () x334)
(declare-fun x290 () Bool)
(declare-fun x572 () Bool)
(declare-fun x1116 () Int)
(declare-fun x1279 () Bool)
(declare-fun x645 () Int)
(declare-fun x1029 () Int)
(declare-fun x73 () Int)
(declare-fun x106 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x722 () Int)
(declare-fun x562 () Int)
(declare-fun x364 () Int)
(declare-fun x1986 () Int)
(declare-fun x1954 () Bool)
(declare-fun x1553 () Int)
(declare-fun x1431 () Int)
(declare-fun x601 () Bool)
(declare-fun x590 () Int)
(declare-fun x1727 () Int)
(declare-fun x1477 (Int) Int)
(declare-fun x1527 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x485 () Bool)
(declare-fun x439 () Bool)
(declare-fun x1111 () Int)
(declare-fun x866 () Bool)
(declare-fun x2107 () Bool)
(declare-fun x56 () Int)
(declare-fun x1815 () Int)
(declare-fun x772 () Bool)
(declare-fun x885 () x334)
(declare-fun x574 (x334) Int)
(declare-fun x1822 () Bool)
(declare-fun x86 () Bool)
(declare-fun x559 () x334)
(declare-fun x387 () Bool)
(declare-fun x158 () Bool)
(declare-fun x1977 () Int)
(declare-fun x1918 () Bool)
(declare-fun x795 () Int)
(declare-fun x272 () Int)
(declare-fun x1292 () Bool)
(declare-fun x1017 () Int)
(declare-fun x332 () Int)
(declare-fun x1340 () Int)
(declare-fun x135 () Int)
(declare-fun x1051 () Int)
(declare-fun x727 () Int)
(declare-fun x36 () Int)
(declare-fun x850 () Bool)
(declare-fun x996 () x334)
(declare-fun x644 () Int)
(declare-fun x1800 () Int)
(declare-fun x108 () Int)
(declare-fun x502 () Bool)
(declare-fun x743 () Int)
(declare-fun x372 () Int)
(declare-fun x1466 () Int)
(declare-fun x408 () Int)
(declare-fun x2082 () Int)
(declare-fun x2035 () x334)
(declare-fun x737 () Bool)
(declare-fun x1766 () Int)
(declare-fun x1041 () Int)
(declare-fun x1115 () x334)
(declare-fun x305 () Int)
(declare-fun x1164 () Bool)
(declare-fun x1127 () Int)
(declare-fun x1927 () x334)
(declare-fun x1260 () Int)
(declare-fun x1313 () Int)
(declare-fun x1236 () Int)
(declare-fun x1084 () Bool)
(declare-fun x464 () Bool)
(declare-fun x1770 () Int)
(declare-fun x32 () Int)
(declare-fun x1596 () Bool)
(declare-fun x2000 () Int)
(declare-fun x1558 () Bool)
(declare-fun x837 () Bool)
(declare-fun x1338 () Int)
(declare-fun x1435 () Bool)
(declare-fun x712 () Bool)
(declare-fun x308 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x774 () Int)
(declare-fun x328 () x334)
(declare-fun x1024 () Bool)
(declare-fun x692 () Int)
(declare-fun x1234 () Int)
(declare-fun x1160 () Bool)
(declare-fun x1316 () Int)
(declare-fun x295 () Int)
(declare-fun x1955 () Int)
(declare-fun x27 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x1793 () x334)
(declare-fun x1401 () Int)
(declare-fun x1531 () Bool)
(declare-fun x531 () Int)
(declare-fun x1754 () Bool)
(declare-fun x1511 () Int)
(declare-fun x2119 () Bool)
(declare-fun x125 () Int)
(declare-fun x2062 () Int)
(declare-fun x1253 () Bool)
(declare-fun x603 () x334)
(declare-fun x1674 () Bool)
(declare-fun x429 () Int)
(declare-fun x1968 () Int)
(declare-fun x278 () Bool)
(declare-fun x1555 () Int)
(declare-fun x2074 () Int)
(declare-fun x300 () Int)
(declare-fun x1443 () Int)
(declare-fun x1297 () x334)
(declare-fun x763 () Int)
(declare-fun x1925 () Int)
(declare-fun x341 () Int)
(declare-fun x1319 () Int)
(declare-fun x1767 () Int)
(declare-fun x849 () Int)
(declare-fun x299 () Int)
(declare-fun x210 () Int)
(declare-fun x1923 () x334)
(declare-fun x466 () x334)
(declare-fun x474 () Int)
(declare-fun x1749 () Bool)
(declare-fun x516 () Int)
(declare-fun x296 () Int)
(declare-fun x386 () Int)
(declare-fun x2125 () x334)
(declare-fun x1739 () Int)
(declare-fun x1299 () Int)
(declare-fun x17 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x920 () Int)
(declare-fun x1434 () Bool)
(declare-fun x342 () Int)
(declare-fun x838 () Bool)
(declare-fun x46 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x499 () Bool)
(declare-fun x1544 () Int)
(declare-fun x1549 () x334)
(declare-fun x1613 () Int)
(declare-fun x740 (x334) Int)
(declare-fun x1038 () Int)
(declare-fun x1083 () Int)
(declare-fun x928 () Bool)
(declare-fun x1838 () Int)
(declare-fun x926 () Int)
(declare-fun x669 () Int)
(declare-fun x241 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x555 () Bool)
(declare-fun x467 () Bool)
(declare-fun x322 () Int)
(declare-fun x979 () Bool)
(declare-fun x443 () Int)
(declare-fun x1130 () Int)
(declare-fun x93 () Bool)
(declare-fun x1179 () Int)
(declare-fun x1079 () Int)
(declare-fun x12 () Int)
(declare-fun x721 () Int)
(declare-fun x1614 () Int)
(declare-fun x494 () Int)
(declare-fun x834 () Int)
(declare-fun x861 () Int)
(declare-fun x81 () Int)
(declare-fun x1539 () x334)
(declare-fun x1327 () Bool)
(declare-fun x1199 () Int)
(declare-fun x806 () Bool)
(declare-fun x1958 () Int)
(declare-fun x2084 () Int)
(declare-fun x533 () Int)
(declare-fun x710 () Bool)
(declare-fun x312 () Int)
(declare-fun x1220 () Bool)
(declare-fun x500 () Int)
(declare-fun x1036 () Int)
(declare-fun x1802 () Bool)
(declare-fun x1489 () Int)
(declare-fun x824 () Bool)
(declare-fun x1353 () Int)
(declare-fun x1195 () Int)
(declare-fun x1474 () Bool)
(declare-fun x1877 () Int)
(declare-fun x1213 () x334)
(declare-fun x1946 () Int)
(declare-fun x1888 () Bool)
(declare-fun x49 () Int)
(declare-fun x1188 () Int)
(declare-fun x2130 () Int)
(declare-fun x1930 () Int)
(declare-fun x1847 () Int)
(declare-fun x993 () Bool)
(declare-fun x1808 () Int)
(declare-fun x2112 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x237 () Bool)
(declare-fun x217 () Int)
(declare-fun x1174 () Int)
(declare-fun x709 () Int)
(declare-fun x148 () Int)
(declare-fun x2021 () Int)
(declare-fun x486 () Int)
(declare-fun x525 () Int)
(declare-fun x1714 () Int)
(declare-fun x626 () Int)
(declare-fun x1510 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x787 () Int)
(declare-fun x1776 () Bool)
(declare-fun x331 () Int)
(declare-fun x1688 () Bool)
(declare-fun x1120 () Int)
(declare-fun x595 () Int)
(declare-fun x1000 () Int)
(declare-fun x1306 () Int)
(declare-fun x260 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1325 () Int)
(declare-fun x933 () Int)
(declare-fun x1644 () x334)
(declare-fun x116 () Int)
(declare-fun x1855 () Int)
(declare-fun x1501 () Bool)
(declare-fun x1819 () Int)
(declare-fun x726 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1812 () Bool)
(declare-fun x186 () Bool)
(declare-fun x541 () Int)
(declare-fun x218 () Bool)
(declare-fun x230 () Int)
(declare-fun x888 () Int)
(declare-fun x1732 () Int)
(declare-fun x384 () Bool)
(declare-fun x1831 () Bool)
(declare-fun x1915 () Int)
(declare-fun x1908 () Int)
(declare-fun x1683 () Bool)
(declare-fun x491 () Int)
(declare-fun x944 () Bool)
(declare-fun x1713 () Int)
(declare-fun x412 () Int)
(declare-fun x923 () Int)
(declare-fun x353 () Int)
(declare-fun x157 () Int)
(declare-fun x604 () x334)
(declare-fun x147 () Bool)
(declare-fun x1956 () Int)
(declare-fun x912 () Int)
(declare-fun x2022 () Int)
(declare-fun x1244 () Bool)
(declare-fun x1172 () Int)
(declare-fun x1296 () Int)
(declare-fun x788 () Int)
(declare-fun x600 () Bool)
(declare-fun x1349 (Int Int) Int)
(declare-fun x924 () Int)
(declare-fun x1741 () Bool)
(declare-fun x581 () x334)
(declare-fun x208 () Int)
(declare-fun x1848 () Int)
(declare-fun x896 () Int)
(declare-fun x614 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x822 () Bool)
(declare-fun x638 () Int)
(declare-fun x792 () Bool)
(declare-fun x538 () Bool)
(declare-fun x2092 () Int)
(declare-fun x1457 () Bool)
(declare-fun x1589 () Int)
(declare-fun x1786 () Bool)
(declare-fun x1465 () Int)
(declare-fun x1988 () Bool)
(declare-fun x1883 () Int)
(declare-fun x1668 () Int)
(declare-fun x252 () Int)
(declare-fun x1684 () Int)
(declare-fun x1490 () Int)
(declare-fun x975 () Int)
(declare-fun x297 () Bool)
(declare-fun x728 () Bool)
(declare-fun x802 () Int)
(declare-fun x363 () Bool)
(declare-fun x1796 () Bool)
(declare-fun x346 () Int)
(declare-fun x405 () Int)
(declare-fun x831 () Int)
(declare-fun x392 () Int)
(declare-fun x573 () Int)
(declare-fun x684 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x427 () Int)
(declare-fun x1496 () Int)
(declare-fun x946 () Int)
(declare-fun x265 () Int)
(declare-fun x1428 () Int)
(declare-fun x1824 () Int)
(declare-fun x936 () Bool)
(declare-fun x1350 () Int)
(declare-fun x1747 () Int)
(declare-fun x725 () Int)
(declare-fun x1005 () Bool)
(declare-fun x641 () x334)
(declare-fun x1654 () Int)
(declare-fun x992 () Int)
(declare-fun x1765 () x334)
(declare-fun x1210 () Bool)
(declare-fun x402 () Bool)
(declare-fun x323 () Int)
(declare-fun x925 () Int)
(declare-fun x2023 () Bool)
(declare-fun x1099 () Int)
(declare-fun x676 () Int)
(declare-fun x1102 () Bool)
(declare-fun x619 () x334)
(declare-fun x956 () x334)
(declare-fun x1858 () Int)
(declare-fun x1504 () x334)
(declare-fun x2028 () Int)
(declare-fun x1900 () Bool)
(declare-fun x160 () Bool)
(declare-fun x2105 () Int)
(declare-fun x1448 () Int)
(declare-fun x1143 () Int)
(declare-fun x642 () x334)
(declare-fun x982 () Bool)
(declare-fun x472 () Bool)
(declare-fun x247 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1006 () Int)
(declare-fun x477 () Bool)
(declare-fun x1167 () Int)
(declare-fun x1398 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x2128 () Int)
(declare-fun x962 () Int)
(declare-fun x133 (Int) Int)
(declare-fun x1921 () Int)
(declare-fun x1062 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x1521 () Int)
(declare-fun x1269 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x1961 () Int)
(declare-fun x589 () Bool)
(declare-fun x1669 () Int)
(declare-fun x58 () x334)
(declare-fun x1651 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x102 () Bool)
(declare-fun x856 () x334)
(declare-fun x1256 () Bool)
(declare-fun x35 () Int)
(declare-fun x362 () Bool)
(declare-fun x650 () Int)
(declare-fun x1664 () Int)
(declare-fun x375 () Bool)
(declare-fun x1334 () Int)
(declare-fun x1090 () Int)
(declare-fun x1512 () Int)
(declare-fun x611 () Int)
(declare-fun x789 () Bool)
(declare-fun x934 () Int)
(declare-fun x61 () Int)
(declare-fun x908 () Bool)
(declare-fun x461 () Bool)
(declare-fun x379 () Int)
(declare-fun x561 () Int)
(declare-fun x285 () Int)
(declare-fun x2136 () Bool)
(declare-fun x907 () Int)
(declare-fun x1447 () Int)
(declare-fun x1331 (Int) x334)
(declare-fun x1884 () Int)
(declare-fun x1761 () Int)
(declare-fun x1568 () Bool)
(declare-fun x21 () Int)
(declare-fun x567 () Int)
(declare-fun x1554 () Bool)
(declare-fun x1057 () Int)
(declare-fun x1403 () Int)
(declare-fun x910 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x23 () Int)
(declare-fun x1563 () Int)
(declare-fun x1383 () Bool)
(declare-fun x913 () Int)
(declare-fun x857 () Int)
(declare-fun x1678 () Int)
(declare-fun x734 () x334)
(declare-fun x1204 () Bool)
(declare-fun x510 () Int)
(declare-fun x355 () Bool)
(declare-fun x503 (Int) Int)
(declare-fun x1506 () Int)
(declare-fun x1876 () Bool)
(declare-fun x370 () Int)
(declare-fun x1499 () Bool)
(declare-fun x121 () Int)
(declare-fun x640 () Int)
(declare-fun x63 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x870 () Int)
(declare-fun x546 () Int)
(declare-fun x718 () Int)
(declare-fun x1141 () Int)
(declare-fun x780 () Int)
(declare-fun x929 () Bool)
(declare-fun x935 () Int)
(declare-fun x675 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x123 () Int)
(declare-fun x1715 () Int)
(declare-fun x764 () Int)
(declare-fun x2087 () Bool)
(declare-fun x34 () Int)
(declare-fun x256 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x1621 (x334) Int)
(declare-fun x1632 () Int)
(declare-fun x948 () Int)
(declare-fun x1611 () Bool)
(declare-fun x560 () Bool)
(declare-fun x2067 () Int)
(declare-fun x1372 () Int)
(declare-fun x1121 () Int)
(declare-fun x1139 () Bool)
(declare-fun x1245 () Int)
(declare-fun x1785 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x1096 () Int)
(declare-fun x967 () Int)
(declare-fun x1239 () x334)
(declare-fun x1515 () Bool)
(declare-fun x395 () Int)
(declare-fun x1205 () Int)
(declare-fun x1590 () Int)
(declare-fun x951 () Int)
(declare-fun x1182 () Bool)
(declare-fun x113 () Bool)
(declare-fun x1543 () Int)
(declare-fun x383 () Bool)
(declare-fun x434 () Bool)
(declare-fun x978 () Int)
(declare-fun x919 () Bool)
(declare-fun x325 () Int)
(declare-fun x1113 () Int)
(declare-fun x451 () Int)
(declare-fun x927 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x1987 () Int)
(declare-fun x1526 () Int)
(declare-fun x1346 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x313 () Bool)
(declare-fun x1578 () Int)
(declare-fun x1844 () Bool)
(declare-fun x2097 () x334)
(declare-fun x1326 () Int)
(declare-fun x1312 () Bool)
(declare-fun x832 () Int)
(declare-fun x697 () Bool)
(declare-fun x48 () Int)
(declare-fun x1332 () Int)
(declare-fun x264 () Bool)
(declare-fun x321 () Int)
(declare-fun x433 () Bool)
(declare-fun x82 () Bool)
(declare-fun x2007 () x334)
(declare-fun x214 () Bool)
(declare-fun x2098 () Int)
(declare-fun x2088 () Int)
(declare-fun x1354 () Int)
(declare-fun x1071 () Int)
(declare-fun x1015 () Int)
(declare-fun x1309 () Bool)
(declare-fun x2014 () x334)
(declare-fun x1556 () Bool)
(declare-fun x1726 () x334)
(declare-fun x2099 () Int)
(declare-fun x941 () Bool)
(declare-fun x226 () Int)
(declare-fun x750 () Int)
(declare-fun x1287 () Int)
(declare-fun x1960 () Bool)
(declare-fun x577 () Bool)
(declare-fun x637 () Int)
(declare-fun x2101 () x334)
(declare-fun x1560 () Bool)
(declare-fun x1875 () Int)
(declare-fun x735 () x334)
(declare-fun x1310 () Int)
(declare-fun x1129 () Bool)
(declare-fun x932 () x334)
(declare-fun x1912 () Bool)
(declare-fun x1867 () Int)
(declare-fun x1075 () Int)
(declare-fun x1764 () Int)
(declare-fun x1274 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x584 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x2011 (x334) Int)
(declare-fun x696 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x602 () Int)
(declare-fun x564 () Bool)
(declare-fun x2055 () Int)
(declare-fun x565 () Bool)
(declare-fun x2100 () Int)
(declare-fun x1951 () Bool)
(declare-fun x1091 () Int)
(declare-fun x207 () x334)
(declare-fun x1535 () Int)
(declare-fun x1254 () Bool)
(declare-fun x1561 () Int)
(declare-fun x1294 () Int)
(declare-fun x1967 () Int)
(declare-fun x842 () Int)
(declare-fun x1355 () Int)
(declare-fun x989 () Int)
(declare-fun x1009 () Int)
(declare-fun x2109 () Int)
(declare-fun x168 () Bool)
(declare-fun x1458 () Int)
(declare-fun x1409 () Bool)
(declare-fun x1030 () Int)
(declare-fun x2025 () Int)
(declare-fun x1805 () x334)
(declare-fun x651 () Int)
(declare-fun x1582 (x334) Int)
(declare-fun x1529 () Int)
(declare-fun x225 () Int)
(declare-fun x694 () Bool)
(declare-fun x1880 () Int)
(declare-fun x1781 () Int)
(declare-fun x11 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x820 () Bool)
(declare-fun x1718 () Int)
(declare-fun x152 () Bool)
(declare-fun x520 () Bool)
(declare-fun x836 () Int)
(declare-fun x624 () Bool)
(declare-fun x1871 () x334)
(declare-fun x758 () Int)
(declare-fun x478 () Bool)
(declare-fun x294 () Bool)
(declare-fun x2140 () Int)
(declare-fun x1486 () Int)
(declare-fun x177 () Int)
(declare-fun x1907 () Int)
(declare-fun x68 () Int)
(declare-fun x719 () Bool)
(declare-fun x368 () Bool)
(declare-fun x816 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x1317 () Int)
(declare-fun x1289 () Int)
(declare-fun x1694 () Bool)
(declare-fun x596 () Bool)
(declare-fun x1745 () Bool)
(declare-fun x287 () Int)
(declare-fun x1947 () Int)
(declare-fun x40 () Bool)
(declare-fun x858 () Int)
(declare-fun x42 () Int)
(declare-fun x1610 () Int)
(declare-fun x1581 () Int)
(declare-fun x1635 () Int)
(declare-fun x263 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x1395 () Int)
(declare-fun x823 () Bool)
(declare-fun x326 () Bool)
(declare-fun x766 () Int)
(declare-fun x1067 () Int)
(declare-fun x1495 () x334)
(declare-fun x57 () Bool)
(declare-fun x318 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x340 () x334)
(declare-fun x1238 () Int)
(declare-fun x1788 () Int)
(declare-fun x1756 () Bool)
(declare-fun x176 () Int)
(declare-fun x251 () Int)
(declare-fun x309 () Int)
(declare-fun x578 () x334)
(declare-fun x493 () Bool)
(declare-fun x2003 () Int)
(declare-fun x1221 () Int)
(declare-fun x238 () Int)
(declare-fun x756 () Bool)
(declare-fun x1551 () Int)
(declare-fun x496 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1522 () Int)
(declare-fun x1302 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x1345 () Int)
(declare-fun x1619 () Int)
(declare-fun x490 () Int)
(declare-fun x1953 () Int)
(declare-fun x775 () Bool)
(declare-fun x1681 () Int)
(declare-fun x990 () Bool)
(declare-fun x1508 () Int)
(declare-fun x1412 () Bool)
(declare-fun x1682 () Int)
(declare-fun x1037 () Int)
(declare-fun x904 () Bool)
(declare-fun x1142 () Int)
(declare-fun x109 () Int)
(declare-fun x2048 () Int)
(declare-fun x335 () x334)
(declare-fun x1640 () Bool)
(declare-fun x599 () Bool)
(declare-fun x1519 () Int)
(declare-fun x585 () Bool)
(declare-fun x463 (x334) Int)
(declare-fun x1557 () Int)
(declare-fun x893 () Int)
(declare-fun x492 () Int)
(declare-fun x1594 () Bool)
(declare-fun x1605 () Int)
(declare-fun x2063 () Bool)
(declare-fun x844 () Bool)
(declare-fun x1484 () Int)
(declare-fun x1303 () Int)
(declare-fun x33 () Int)
(declare-fun x1687 () Int)
(declare-fun x1534 () Int)
(declare-fun x193 () Int)
(declare-fun x1149 () Bool)
(declare-fun x649 () Int)
(declare-fun x1771 () Int)
(declare-fun x1137 () Int)
(declare-fun x184 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x1892 () Int)
(declare-fun x2043 () Bool)
(declare-fun x1265 () Int)
(declare-fun x348 () Bool)
(declare-fun x1998 () Int)
(declare-fun x1387 () Int)
(declare-fun x1852 () Int)
(declare-fun x243 () Bool)
(declare-fun x711 () Bool)
(declare-fun x1872 () Int)
(declare-fun x1588 () Bool)
(declare-fun x233 () Int)
(declare-fun x1251 () Int)
(declare-fun x751 () Int)
(declare-fun x1671 () Bool)
(declare-fun x232 () Int)
(declare-fun x1738 () Int)
(declare-fun x809 () Bool)
(declare-fun x1579 () Int)
(declare-fun x1396 () x334)
(declare-fun x25 () Bool)
(declare-fun x471 () Int)
(declare-fun x223 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1382 () Int)
(declare-fun x468 () Int)
(declare-fun x245 () Int)
(declare-fun x1377 () Int)
(declare-fun x128 () Int)
(declare-fun x1426 () Int)
(declare-fun x720 () Int)
(declare-fun x1896 () Int)
(declare-fun x2103 () Bool)
(declare-fun x254 () Int)
(declare-fun x1643 () Int)
(declare-fun x1580 () Bool)
(declare-fun x1259 () Int)
(declare-fun x407 () Bool)
(declare-fun x196 (x334) Int)
(declare-fun x2114 () Int)
(declare-fun x859 () Int)
(declare-fun x1724 () Int)
(declare-fun x1298 () Int)
(declare-fun x203 () Bool)
(declare-fun x1493 () Int)
(declare-fun x770 () Int)
(declare-fun x1472 () Int)
(declare-fun x1691 () Int)
(declare-fun x1359 () Int)
(declare-fun x609 () Int)
(declare-fun x961 () Int)
(declare-fun x1064 () Bool)
(declare-fun x236 () Int)
(declare-fun x1449 () Int)
(declare-fun x2089 () Bool)
(declare-fun x1569 () Int)
(declare-fun x465 () Int)
(declare-fun x1639 (Int Int) Int)
(declare-fun x1078 () Int)
(declare-fun x2078 () Int)
(declare-fun x1524 () Int)
(declare-fun x1161 () Int)
(declare-fun x1656 () Bool)
(declare-fun x2094 () Int)
(declare-fun x776 () Int)
(declare-fun x324 () Bool)
(declare-fun x846 () Bool)
(declare-fun x570 () Int)
(declare-fun x276 () Int)
(declare-fun x336 () Bool)
(declare-fun x281 () Int)
(declare-fun x95 () Int)
(declare-fun x860 () Int)
(declare-fun x554 () Int)
(declare-fun x1827 () Bool)
(declare-fun x954 () Int)
(declare-fun x288 () Int)
(declare-fun x1379 () x334)
(declare-fun x1223 () Int)
(declare-fun x215 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x120 (Int) Int)
(declare-fun x915 () Int)
(declare-fun x662 () Bool)
(declare-fun x1109 () Int)
(declare-fun x159 () Bool)
(declare-fun x1456 () x334)
(declare-fun x175 () Bool)
(declare-fun x1170 () Int)
(declare-fun x141 () Int)
(declare-fun x939 () Bool)
(declare-fun x1194 () Int)
(declare-fun x536 () Int)
(declare-fun x426 () Int)
(declare-fun x771 () Bool)
(declare-fun x674 () Int)
(declare-fun x985 () Bool)
(declare-fun x1193 () x334)
(declare-fun x1849 () Int)
(declare-fun x329 () Int)
(declare-fun x1545 () Int)
(declare-fun x411 (Int) Int)
(declare-fun x715 () Int)
(declare-fun x178 () x334)
(declare-fun x1225 () Bool)
(declare-fun x126 () Bool)
(declare-fun x530 () Int)
(declare-fun x2047 () Int)
(declare-fun x1320 () Int)
(declare-fun x261 () Int)
(declare-fun x847 () Bool)
(declare-fun x1696 () Int)
(declare-fun x1924 () Int)
(declare-fun x610 () Int)
(declare-fun x258 () Bool)
(declare-fun x72 () Int)
(declare-fun x197 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x704 () Bool)
(declare-fun x181 () Int)
(declare-fun x142 () Int)
(declare-fun x1212 () Int)
(declare-fun x752 () Bool)
(declare-fun x422 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1020 () Int)
(declare-fun x1769 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x945 () Int)
(declare-fun x747 () Int)
(declare-fun x539 () Bool)
(declare-fun x899 () Int)
(declare-fun x1592 () Bool)
(declare-fun x1488 () Int)
(declare-fun x1378 () Bool)
(declare-fun x542 () Bool)
(declare-fun x2004 () x334)
(declare-fun x801 () Bool)
(declare-fun x2111 () Int)
(declare-fun x2006 () Int)
(declare-fun x1177 () Int)
(declare-fun x1187 () Int)
(declare-fun x1481 () Bool)
(declare-fun x647 () Bool)
(declare-fun x1901 () x334)
(declare-fun x1003 () Int)
(declare-fun x501 () Bool)
(declare-fun x1388 () Int)
(declare-fun x161 () Int)
(declare-fun x1710 () Int)
(declare-fun x1342 () Bool)
(declare-fun x2104 () Bool)
(declare-fun x1442 () Int)
(declare-fun x1750 () Bool)
(declare-fun x509 () x334)
(declare-fun x64 () Int)
(declare-fun x2039 (x334) Int)
(declare-fun x1620 () Bool)
(declare-fun x818 () Bool)
(declare-fun x1150 () Int)
(declare-fun x1660 () Int)
(declare-fun x786 () Bool)
(declare-fun x1485 () Int)
(declare-fun x60 () Bool)
(declare-fun x1940 () Int)
(declare-fun x1045 () Int)
(declare-fun x1564 () Bool)
(declare-fun x18 () Bool)
(declare-fun x537 () Bool)
(declare-fun x1841 () Int)
(declare-fun x488 () Int)
(declare-fun x1752 () Bool)
(declare-fun x347 () Int)
(declare-fun x1957 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x1931 (x334) Int)
(declare-fun x931 () Int)
(declare-fun x769 () x334)
(declare-fun x1215 () Bool)
(declare-fun x119 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x874 () Int)
(declare-fun x1165 () Bool)
(declare-fun x829 () Int)
(declare-fun x79 () Int)
(declare-fun x1402 () Int)
(declare-fun x239 () Bool)
(declare-fun x1801 () Int)
(declare-fun x997 () x334)
(declare-fun x444 () Int)
(declare-fun x221 () Int)
(declare-fun x1151 () Int)
(declare-fun x1255 () Bool)
(declare-fun x315 () Int)
(declare-fun x87 () x334)
(declare-fun x701 () Int)
(declare-fun x227 () Int)
(declare-fun x3 () x334)
(declare-fun x732 () Int)
(declare-fun x1348 () Int)
(declare-fun x1410 () Bool)
(declare-fun x970 () Int)
(declare-fun x1933 () Bool)
(declare-fun x1965 () Int)
(declare-fun x2005 () Int)
(declare-fun x1441 () Int)
(declare-fun x1275 () Bool)
(declare-fun x448 () x334)
(declare-fun x425 () x334)
(define-fun x1470 ((x334 x334) (x327 Int)) x334 (ite ((_ is x876) x334) (x876 (x441 x334) (+ x327 (x2129 x334))) (ite ((_ is x167) x334) (x167 (x224 x334) (x127 x334) (+ x327 (x864 x334))) (x1491 (+ (x1538 x334) x327)))))
(define-fun x1394 ((x1002 Int)) Int (ite (and (>= x1002 0) (< x1002 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1002 (- x1002 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1056 ((x1002 Int)) Int (ite (and (< x1002 0) (>= x1002 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1002) x1002))
(define-fun x1390 ((x1128 Int)) Bool (and (<= 0 x1128) (< x1128 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1230 ((x1128 Int)) Bool (and (= (x1879 x1128 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1128)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1128) (x1879 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1128))))
(define-fun x558 ((x1128 Int)) Bool (and (= (x1879 0 x1128) x1128) (= (x1879 x1128 0) x1128)))
(define-fun x634 ((x1128 Int)) Bool (= (x1879 x1128 x1128) 0))
(define-fun x1358 ((x1128 Int)) Bool (and (x558 x1128) (x634 x1128) (x1230 x1128)))
(define-fun x1576 ((x1128 Int) (x1759 Int)) Bool (= (x1879 x1128 x1759) (x1879 x1759 x1128)))
(define-fun x1123 ((x1128 Int) (x1759 Int)) Bool (and (<= (x1879 x1128 x1759) (+ x1128 x1759)) (<= 0 (x1879 x1128 x1759))))
(define-fun x897 ((x1128 Int) (x1759 Int)) Bool (and (x1123 x1128 x1759) (x1576 x1128 x1759)))
(define-fun x1865 ((x1128 Int)) Bool (and (= (x947 x1128 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1128) (= x1128 (x947 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1128))))
(define-fun x213 ((x1128 Int)) Bool (and (= (x947 0 x1128) 0) (= (x947 x1128 0) 0)))
(define-fun x1778 ((x1128 Int)) Bool (= (x947 x1128 x1128) x1128))
(define-fun x1835 ((x1128 Int)) Bool (and (x1865 x1128) (x213 x1128) (x1778 x1128)))
(define-fun x921 ((x1128 Int) (x1759 Int)) Bool (= (x947 x1128 x1759) (x947 x1759 x1128)))
(define-fun x51 ((x1128 Int) (x1759 Int)) Bool (and (>= (x947 x1128 x1759) 0) (=> (>= x1128 0) (>= x1128 (x947 x1128 x1759))) (=> (>= x1759 0) (>= x1759 (x947 x1128 x1759)))))
(define-fun x528 ((x1128 Int) (x1759 Int)) Bool (and (x51 x1128 x1759) (x921 x1128 x1759)))
(define-fun x1423 ((x1128 Int)) Bool (= (mod x1128 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (x947 x1128 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x1128 32))))
(define-fun x1122 ((x1128 Int)) Bool (and (x1423 x1128) (x528 x1128 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x2115 ((x30 Int)) Int (x1751 x30))
(define-fun x1286 ((x30 Int)) Int (x1598 x30))
(define-fun x521 ((x30 Int)) Int (ite (= x30 128) 64376167055515759358535430384376588076944157367080998815916584977429396717568 (x1477 x30)))
(define-fun x2009 ((x30 Int)) Int (ite (= 132 x30) 0 (x521 x30)))
(define-fun x1146 ((x30 Int)) Int (ite (= x30 x1503) 64376167055515759358535430384376588076944157367080998815916584977429396717568 (x1811 x30)))
(define-fun x1586 ((x30 Int)) Int (ite (= x30 x329) x2017 (x1146 x30)))
(define-fun x635 ((x30 Int)) Int (ite (= x2030 x30) 64376167055515759358535430384376588076944157367080998815916584977429396717568 (x307 x30)))
(define-fun x1782 ((x30 Int)) Int (ite (= x1173 x30) x1000 (x635 x30)))
(define-fun x482 ((x30 Int)) Int (ite (= x586 x30) 64376167055515759358535430384376588076944157367080998815916584977429396717568 (x514 x30)))
(define-fun x1385 ((x30 Int)) Int (ite (= x30 x1017) x1388 (x482 x30)))
(define-fun x1708 ((x30 Int)) Int (ite (= x902 x30) 64376167055515759358535430384376588076944157367080998815916584977429396717568 (x411 x30)))
(define-fun x1367 ((x30 Int)) Int (ite (= x30 x751) x1540 (x1708 x30)))
(define-fun x2064 ((x30 Int)) Int (ite (= x2098 x30) 64376167055515759358535430384376588076944157367080998815916584977429396717568 (x503 x30)))
(define-fun x618 ((x30 Int)) Int (ite (= x30 x1045) x2037 (x2064 x30)))
(define-fun x71 ((x30 Int)) Int (ite (= x30 x611) 64376167055515759358535430384376588076944157367080998815916584977429396717568 (x120 x30)))
(define-fun x1677 ((x30 Int)) Int (ite (= x30 x230) x322 (x71 x30)))
(define-fun x2027 ((x30 Int)) Int (ite (= x30 128) x776 (x2009 x30)))
(define-fun x523 ((x30 Int)) Int (ite (= x1503 x30) x416 (x1586 x30)))
(define-fun x24 ((x30 Int)) Int (ite (= x30 x2030) x491 (x1782 x30)))
(define-fun x1836 ((x30 Int)) Int (ite (= x586 x30) x1375 (x1385 x30)))
(define-fun x1468 ((x30 Int)) Int (x133 x30))
(define-fun x371 ((x30 Int)) Int (ite (= x30 128) x930 (x552 x30)))
(define-fun x1842 ((x30 Int)) Int (ite (and (< x30 (+ x930 160)) (<= 160 x30)) (x133 (+ (- x30 160) x408)) (x371 x30)))
(define-fun x269 ((x30 Int)) Int (ite (= x333 x30) 0 (x1842 x30)))
(define-fun x31 ((x30 Int)) Int (ite (= x30 x1077) 9518847204935358166548570266051330015907116135037852959641967396525866745856 (x269 x30)))
(define-fun x1356 ((x30 Int)) Int (ite (= 128 x30) 64376167055515759358535430384376588076944157367080998815916584977429396717568 (x1997 x30)))
(define-fun x1444 ((x30 Int)) Int (ite (= 132 x30) 0 (x1356 x30)))
(define-fun x1861 ((x30 Int)) Int (ite (= 128 x30) x873 (x1444 x30)))
(define-fun x1685 ((x30 Int)) Int (ite (= x30 x902) x912 (x1367 x30)))
(define-fun x960 ((x30 Int)) Int (ite (= x2098 x30) x667 (x618 x30)))
(define-fun x84 ((x30 Int)) Int (ite (= x30 x611) x1238 (x1677 x30)))
(define-fun x1452 ((x1128 Int)) Bool (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1128)) (not (= 4294967295 x1128)) (not (= x1128 2387844748)) (not (= x1128 2103345634)) (not (= x1128 3223297591)) (not (= 2546193204 x1128)) (not (= x1128 2726970035)) (not (= 9518847204935358166548570266051330015907116135037852959641967396525866745856 x1128)) (not (= 369934039 x1128)) (not (= 2306352607 x1128)) (< 10000 x1128) (not (= x1128 3314571236)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1128)) (not (= 3567836568 x1128)) (not (= 2373169201 x1128)) (not (= x1128 18446744073709551616)) (not (= x1128 850923838)) (not (= x1128 3952089556)) (not (= 1461501637330902918203684832716283019655932542975 x1128)) (not (= x1128 643179133)) (not (= x1128 117300739)) (not (= 26959946667150639794667015087019630673637144422540572481103610249216 x1128)) (not (= x1128 1425886544)) (not (= 761525907 x1128)) (not (= x1128 584786547)) (not (= x1128 116652518)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1128)) (not (= x1128 340282366920938463463374607431768211455)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1128)) (not (= 419023261 x1128)) (not (= 18446744073709551615 x1128)) (not (= 1284264308 x1128)) (not (= x1128 1633807128)) (not (= 64376167055515759358535430384376588076944157367080998815916584977429396717568 x1128)) (not (= x1128 340724530)) (not (= x1128 3361977486)) (not (= x1128 1813000879)) (not (= x1128 496069280)) (not (= 353073666 x1128)) (not (= 4294967296 x1128))) (not ((_ is x1491) (x1331 x1128)))))
(assert (x1390 x1357))
(assert (x1390 x1508))
(assert (= x1649 (and x816 x1889)))
(assert (x1390 x486))
(assert (= x773 (or x2002 x1005)))
(assert (x1390 x1748))
(assert (x1390 x139))
(assert (x1390 x1480))
(assert (x1390 x272))
(assert (x1390 x456))
(assert (= (or x737 x1741) x264))
(assert (= x542 (or x354 x1192)))
(assert (x1390 x1284))
(assert (x1390 x208))
(assert (x1390 x1466))
(assert (x1390 x1238))
(assert (= (and x1176 (not x478)) x1972))
(assert (x1390 x2148))
(assert (x1390 x637))
(assert (x1452 x1716))
(assert (x1390 x429))
(assert (x1390 x1537))
(assert (x1390 x1967))
(assert (= x168 (and x1580 x1888)))
(assert (x1390 x1363))
(assert (x1390 x1042))
(assert (x1390 x136))
(assert (= x1754 (and x1772 (not x1803))))
(assert (x1390 x391))
(assert (x1390 x931))
(assert (x1390 x884))
(assert (= x1157 (x1339 (x1331 x1157))))
(assert (x1390 x2060))
(assert (x1390 x350))
(assert (x1390 x948))
(assert (x1390 x1857))
(assert (= x1461 (or x1951 x1285)))
(assert (= (=> (and (= x1802 (= 0 x1885)) (or (and (= x491 0) x1802) (and (and (= x1051 x491) (= x1051 (x1931 x1495)) (<= x1051 26959946667150639794667015087019630673637144422540572481103610249215) (>= x1051 0) (= x1495 (x1470 x981 x1304)) (= (x876 (x1491 9) 0) x981) (= x1304 (x1056 (- x1885 1))) (< x1051 26959946667150639794667015087019630673637144422540572481103610249216)) (not x1802)))) x297) x324))
(assert (x1390 x35))
(assert (= x820 (=> (and (or (and (and (= x1109 (x1394 (+ 4 x768))) (= x2095 (x1639 x766 4)) (= x1109 x1306)) x1244) (and (and (= x768 x1306) (= x2095 x766)) (not x1244))) (= (> (x1639 x766 4) 0) x1244)) x1898)))
(assert (x1390 x751))
(assert (x1390 x900))
(assert (x1390 x193))
(assert (x1390 x2120))
(assert (x1390 x1503))
(assert (x1390 x1894))
(assert (= x294 (or x1070 x298)))
(assert (x1390 x1463))
(assert (= (x1639 x428 4) (div x428 16)))
(assert (x1390 x721))
(assert (= x927 (and x1630 x1154)))
(assert (= (and x1802 x2107) x971))
(assert (x1390 x1571))
(assert (= (and x1021 x1052) x1515))
(assert (x1390 x1032))
(assert (= (x1339 (x1331 x72)) x72))
(assert (x1390 x53))
(assert (x1390 x1403))
(assert (x1390 x1706))
(assert (= (=> (and (= x1295 (> (x1639 x1009 4) 0)) (or (and x1295 (and (= x1907 (x1394 (+ 4 x2055))) (= x1869 x1907) (= (x1639 x1009 4) x665))) (and (and (= x2055 x1869) (= x1009 x665)) (not x1295)))) x1269) x424))
(assert (= x1475 (and (not x1913) x1807)))
(assert (= (+ (x1339 x559) 2) (x1339 (x1470 x559 2))))
(assert (x1390 x661))
(assert (x1390 x561))
(assert (x1390 x1051))
(assert (x1390 x1240))
(assert (x1390 x1687))
(assert (x1390 x1380))
(assert (x1390 x275))
(assert (= (+ (x1339 x22) x1431) (x1339 (x1470 x22 x1431))))
(assert (= (x1639 x1881 1) (div x1881 2)))
(assert (= (div x1684 4294967296) (x1639 x1684 32)))
(assert (x1390 x1258))
(assert (x1390 x602))
(assert (x1390 x1418))
(assert (= (x1339 (x1470 x110 1)) (+ 1 (x1339 x110))))
(assert (= x1777 (or x1421 x17)))
(assert (x1390 x1419))
(assert (= (or x11 x990) x1196))
(assert (= (x1331 340724530) (x1491 340724530)))
(assert (x1390 x925))
(assert (x1390 x595))
(assert (x1390 x1938))
(assert (= (and (not x1341) x796) x439))
(assert (x1390 x1330))
(assert (= x13 (and x1554 x505)))
(assert (= (=> (and (and (< x129 4294967296) (= (x1639 x1643 1) x364) (= x894 (x1394 (+ x364 x671))) (= (div x666 x1637) x1824) (= x106 (x1394 (+ x2016 x376))) (= (ite (> x1313 0) (x1394 (+ x400 1)) x400) x456) (= x2036 (x1639 x894 1)) (= (x1394 (+ x1938 x1441)) x1707) (= (div x666 x376) x2016) (= x1849 (x1639 x106 1)) (= x376 (x1639 x1281 1)) (not x1292) (= x1696 (ite (> x544 x2036) x2036 x544)) (= (div x666 x940) x1447) (>= x129 0) (= (x1394 (+ x1849 x688)) x1643) (= (x1639 x700 1) x1063) (> x940 0) (= x671 (div x666 x364)) (= (div x666 x1849) x688) (= x1600 (x876 (x1491 9) 0)) (= x129 (x740 x178)) (= (< x322 x129) x86) (> x1441 0) (= x544 (div x666 x2036)) (>= 4294967295 x129) (= (div x666 x1441) x1938) (< 0 x1063) (< 0 x2036) (= (x1470 x1600 x1310) x178) (< 0 x364) (= (< x666 x1696) x1292) (= x940 (x1639 x1707 1)) (= x1637 (x283 1 (x1639 x456 1))) (= x1125 (x1394 (+ x725 x1063))) (= (x1639 x794 1) x1313) (> x376 0) (< 0 x1849) (= x700 (x1394 (+ x1824 x1637))) (= (div x666 x1063) x725) (= (x1394 (+ x940 x1447)) x1281) (= (x1639 x1125 1) x1441) (= (x1056 (- x666 x1696)) x1310)) (or (and x86 (and (= x101 0) (= x1310 x245))) (and (and (= x545 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1310)) (= x666 x245) (= x724 x101) (= (x1394 (+ x1310 1)) x724) (not x545)) (not x86)))) x620) x694))
(assert (= (div x233 4294967296) (x1639 x233 32)))
(assert (x1390 x1626))
(assert (x1390 x427))
(assert (= x1274 (=> (and (= x1655 x1478) (= x611 224)) x892)))
(assert (= (x1639 x137 1) (div x137 2)))
(assert (x1390 x1031))
(assert (x1390 x321))
(assert (x1390 x1317))
(assert (x1390 x293))
(assert (x1390 x107))
(assert (= x1683 (or x247 x922)))
(assert (x1358 x593))
(assert (= (and x1434 x1736) x1689))
(assert (= (or x600 x1416) x403))
(assert (= (or x890 x1979) x736))
(assert (x1390 x702))
(assert (= 584786547 (x1339 (x1491 584786547))))
(assert (x1390 x1534))
(assert (x1452 x1203))
(assert (= x4 (or x513 x159)))
(assert (= (x1639 x462 4) (div x462 16)))
(assert (x1390 x531))
(assert (= (div x373 4) (x1639 x373 2)))
(assert (x1390 x2100))
(assert (= x862 (or x1735 x1208)))
(assert (= x1145 (and x1604 (not x1833))))
(assert (x1390 x227))
(assert (x1390 x1838))
(assert (x1390 x579))
(assert (= x1084 (and x1630 (not x1154))))
(assert (x1390 x347))
(assert (x1390 x1451))
(assert (x1390 x261))
(assert (= (or x91 x987) x796))
(assert (= (=> (and (or (and (not x357) (and (= x266 x1684) (= x305 x1059))) (and (and (= x834 x305) (= x1684 (x1639 x266 64)) (= x834 (x1394 (+ x1059 64)))) x357)) (= x357 (< 0 (x1639 x266 64)))) x601) x180))
(assert (= (=> (and (or (and (and (= x748 x33) (= x1800 x923)) (not x813)) (and (and (= (x1394 (+ x33 2)) x1413) (= x1413 x748) (= x1800 (x1639 x923 2))) x813)) (= x813 (> (x1639 x923 2) 0))) x952) x852))
(assert (x1390 x1878))
(assert (= (and x132 x1117) x1237))
(assert (x1390 x476))
(assert (= x76 (=> (and (or (and (and (= x594 x896) (= x6 x1662)) (not x868)) (and (and (= (x1639 x594 4) x896) (= (x1394 (+ x6 4)) x68) (= x68 x1662)) x868)) (= (< 0 (x1639 x594 4)) x868)) x577)))
(assert (= x1734 (=> (and (= 2387844748 x543) (= (x1621 (x1331 x1877)) x105) (not (> 4 x1660)) (not (> 1633807128 x543)) (= x1137 64376167055515759358535430384376588076944157367080998815916584977429396717568) (= (x1394 (+ x586 4)) x1017) (= x1105 (< 5 x666)) (= x1388 x135) (> x1557 x135) (= (x1056 (- x1660 4)) x220) (not (< x543 2387844748)) (= (x1056 (- x550 x586)) x1066) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x220) (and (> 32 x220) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x220) true))) x1548) (> x511 0) (= x1660 36) (not (= x105 0)) (= x511 (x1621 (x1331 x1877))) (= x550 (x1394 (+ x1017 32))) (> 2726970035 x543) (= 9 x1172) (= x1066 x1660) (not x1548)) (and (=> (and (and (= x632 x666) (= 0 x562)) (not x1105)) x2032) (=> (and x1105 (and (or (and (not x478) (and (= x666 x1245) (= 0 x2117))) (and x478 (and (= 128 x2117) (= x1245 (x1639 x666 128))))) (= (< 0 (x1639 x666 128)) x478))) x25)))))
(assert (x1390 x88))
(assert (x1390 x665))
(assert (= (x1339 (x1491 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x1390 x1088))
(assert (= (x1339 (x1470 x1464 x56)) (+ (x1339 x1464) x56)))
(assert (= (and x1244 x291) x1207))
(assert (x1390 x1740))
(assert (= x1254 (and x478 x1176)))
(assert (= x1119 (and x1398 x1324)))
(assert (x1390 x1197))
(assert (x1390 x1760))
(assert (x1390 x1513))
(assert (x1390 x48))
(assert (x1390 x1216))
(assert (= (x1339 (x1470 x1934 x1823)) (+ (x1339 x1934) x1823)))
(assert (= (or x681 x46) x1378))
(assert (x1835 x593))
(assert (x1390 x419))
(assert (x1390 x563))
(assert (= (x1331 1425886544) (x1491 1425886544)))
(assert (x1390 x1199))
(assert (= (or x1139 x838) x520))
(assert (x1390 x1684))
(assert (= (x1339 (x1470 x1644 x1233)) (+ x1233 (x1339 x1644))))
(assert (= (and x1656 x2) x1102))
(assert (= x560 (and (not x351) x66)))
(assert (x1390 x489))
(assert (= x192 (and x1093 (not x27))))
(assert (= x247 (and x1220 x86)))
(assert (x1390 x896))
(assert (= (and x290 x1509) x2132))
(assert (x1390 x785))
(assert (= x330 (and x2113 x40)))
(assert (x1390 x100))
(assert (x1390 x1496))
(assert (x1835 x1174))
(assert (x1835 x2052))
(assert (= (and x1608 (not x1876)) x1745))
(assert (x1390 x212))
(assert (x1390 x640))
(assert (x1390 x1443))
(assert (x1390 x170))
(assert (x1390 x1761))
(assert (x1390 x546))
(assert (= (div x1009 16) (x1639 x1009 4)))
(assert (x897 x1174 x1032))
(assert (= x1546 (and x929 (not x1410))))
(assert (x1390 x1612))
(assert (x1390 x1387))
(assert (= x2104 (and (not x824) x736)))
(assert (x1390 x1533))
(assert (x1390 x1525))
(assert (= (and x684 x1653) x406))
(assert (= (x1639 x1800 1) (div x1800 2)))
(assert (x1390 x1072))
(assert (x1390 x2026))
(assert (= (or x437 x1204) x1364))
(assert (= (x1339 (x1331 x1915)) x1915))
(assert (x1390 x748))
(assert (= x239 (=> (= x256 (not (< x1451 x1984))) (and (=> (= x1984 x849) x1699) x256))))
(assert (x1390 x1544))
(assert (x1390 x1136))
(assert (= x1214 (or x258 x659)))
(assert (= x659 (and x2012 x1829)))
(assert (x1390 x2025))
(assert (x1390 x1060))
(assert (= (x1339 (x1331 x1877)) x1877))
(assert (x1390 x1447))
(assert (x1390 x1494))
(assert (= (+ (x1339 x3) 1) (x1339 (x1470 x3 1))))
(assert (x1390 x2084))
(assert (= x890 (and x1722 (not x175))))
(assert (x1390 x445))
(assert (x1390 x299))
(assert (=> (<= x1203 10000) (= (x1491 x1203) (x1331 x1203))))
(assert (= x454 (=> (and (or (and (and (= x2031 x1773) (= x1569 x811)) (not x684)) (and (and (= x1773 x1131) (= x1569 (x1639 x811 16)) (= x1131 (x1394 (+ 16 x2031)))) x684)) (= (> (x1639 x811 16) 0) x684)) x1314)))
(assert (x1390 x1795))
(assert (= x565 (or x1863 x498)))
(assert (= x1414 (and (not x847) x672)))
(assert (= x2083 (and x822 x29)))
(assert (= (x283 1 (x1639 x345 1)) (mod (ite (> 256 (x1639 x345 1)) (x1349 2 (x1639 x345 1)) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1390 x305))
(assert (not x253))
(assert (=> (<= x1998 10000) (= (x1331 x1998) (x1491 x1998))))
(assert (= x1604 (or x1201 x887)))
(assert (= (x1339 (x1491 4294967296)) 4294967296))
(assert (= (or x368 x1124) x2080))
(assert (x1390 x458))
(assert (x1390 x1087))
(assert (= (and x484 x827) x1192))
(assert (= x1932 (and (not x1509) x290)))
(assert (x1390 x1770))
(assert (x1390 x1205))
(assert (= x572 (and x837 (not x818))))
(assert (x1390 x2053))
(assert (x1390 x680))
(assert (x1390 x949))
(assert (x1390 x440))
(assert (x1390 x1528))
(assert (x1390 x267))
(assert (x1390 x530))
(assert (= (div x729 65536) (x1639 x729 16)))
(assert (x1390 x1299))
(assert (x1390 x1431))
(assert (= (and x168 x1993) x1703))
(assert (= (and x549 x1918) x1688))
(assert (x1390 x2072))
(assert (x1390 x954))
(assert (x1390 x1222))
(assert (= (x1339 (x1470 x448 x154)) (+ (x1339 x448) x154)))
(assert (= x1185 (or x380 x800)))
(assert (x1390 x130))
(assert (x1390 x961))
(assert (x1390 x935))
(assert (x1390 x399))
(assert (x1390 x722))
(assert (x1390 x1038))
(assert (x1390 x1823))
(assert (= (div x896 4) (x1639 x896 2)))
(assert (= (div x249 65536) (x1639 x249 16)))
(assert (= (or x2080 x172) x1829))
(assert (x1390 x1319))
(assert (x1390 x1984))
(assert (x1390 x211))
(assert (= x1455 (and x1026 x190)))
(assert (x1390 x129))
(assert (x1390 x766))
(assert (= (=> (and (or (and (and (>= 26959946667150639794667015087019630673637144422540572481103610249215 x273) (<= 0 x273) (= x808 (x1056 (- x1897 1))) (= (x1931 x619) x273) (= x619 (x1470 x932 x808)) (> 26959946667150639794667015087019630673637144422540572481103610249216 x273) (= x932 (x876 (x1491 9) 0)) (= x273 x416)) (not x383)) (and x383 (= x416 0))) (= x383 (= x1897 0))) x786) x284))
(assert (= (and x1434 (not x1736)) x1467))
(assert (x1390 x2093))
(assert (= x1024 (or x1073 x538)))
(assert (x1390 x1869))
(assert (x1390 x388))
(assert (x1390 x2078))
(assert (= (and x1996 x557) x1735))
(assert (= (and x2057 x357) x1279))
(assert (= x124 (=> (and (= x1092 (< 0 (x1639 x1506 2))) (or (and (and (= x111 x338) (= x338 (x1394 (+ 2 x1087))) (= (x1639 x1506 2) x1839)) x1092) (and (not x1092) (and (= x1506 x1839) (= x1087 x111))))) x47)))
(assert (x1390 x506))
(assert (x1390 x1242))
(assert (= (=> (and (= x351 (= 0 x36)) (or (and (= x1030 0) x351) (and (and (= (x1056 (- x36 1)) x1661) (<= x1896 26959946667150639794667015087019630673637144422540572481103610249215) (= x2014 (x876 (x1491 10) 0)) (<= 0 x1896) (= (x1470 x2014 x1661) x1927) (= x1030 x1896) (= (x1939 x1927) x1896) (= x2034 10) (< x1896 26959946667150639794667015087019630673637144422540572481103610249216)) (not x351)))) x1592) x1253))
(assert (x1452 x459))
(assert (= (x1639 x67 1) (div x67 2)))
(assert (= x1647 (and (not x2076) x1694)))
(assert (= x647 (or x1755 x102)))
(assert (x1390 x1427))
(assert (= x726 (and (not x868) x1165)))
(assert (x1390 x1723))
(assert (= (div x1037 4) (x1639 x1037 2)))
(assert (= (and x542 (not x1787)) x504))
(assert (x1390 x658))
(assert (x1390 x226))
(assert (= (=> (= (not (> x96 x1150)) x1275) (and x1275 (=> (= x1897 x96) x284))) x1911))
(assert (= x423 (=> (and (or (and (and (= (x1394 (+ x125 8)) x1038) (= (x1639 x1228 8) x594) (= x1038 x6)) x1324) (and (and (= x594 x1228) (= x125 x6)) (not x1324))) (= x1324 (> (x1639 x1228 8) 0))) x76)))
(assert (= 1425886544 (x1339 (x1491 1425886544))))
(assert (= (and x1341 x796) x886))
(assert (x1390 x1946))
(assert (x1390 x1362))
(assert (x1390 x700))
(assert (x1390 x1426))
(assert (= (and x1405 x535) x1181))
(assert (= (x1639 x1360 1) (div x1360 2)))
(assert (x1390 x1573))
(assert (x1358 x1587))
(assert (= x648 (or x202 x472)))
(assert (= (x1339 (x1470 x320 x1627)) (+ x1627 (x1339 x320))))
(assert (x1358 x1032))
(assert (x1390 x1727))
(assert (= x1135 (=> (and (or (and x1942 (and (= x1506 (x1639 x462 4)) (= (x1394 (+ 4 x2061)) x1826) (= x1087 x1826))) (and (and (= x462 x1506) (= x2061 x1087)) (not x1942))) (= (> (x1639 x462 4) 0) x1942)) x124)))
(assert (= (=> (and (or (and (and (< x90 26959946667150639794667015087019630673637144422540572481103610249216) (= (x1470 x526 x937) x2125) (= (x876 (x1491 9) 0) x526) (<= 0 x90) (= x90 (x1931 x2125)) (= x912 x90) (<= x90 26959946667150639794667015087019630673637144422540572481103610249215) (= (x1056 (- x849 1)) x937)) (not x944)) (and (= x912 0) x944)) (= (= x849 0) x944)) x222) x1699))
(assert (= (x1639 x700 1) (div x700 2)))
(assert (= 2103345634 (x1339 (x1491 2103345634))))
(assert (x1390 x1161))
(assert (= (x1339 (x1470 x1805 x2025)) (+ x2025 (x1339 x1805))))
(assert (= (or x1954 x773) x66))
(assert (= x1371 (=> (and (= x791 (< 0 (x1639 x729 16))) (or (and (and (= x1316 (x1394 (+ x1320 16))) (= x1720 (x1639 x729 16)) (= x1259 x1316)) x791) (and (not x791) (and (= x729 x1720) (= x1259 x1320))))) x348)))
(assert (= (x1339 (x1470 x340 x727)) (+ (x1339 x340) x727)))
(assert (= (or x1744 x1102) x1814))
(assert (x1390 x1400))
(assert (x1390 x1315))
(assert (x1390 x2102))
(assert (= (+ (x1339 x1793) x121) (x1339 (x1470 x1793 x121))))
(assert (x1390 x373))
(assert (x1390 x1350))
(assert (= (x1339 (x1470 x932 x808)) (+ x808 (x1339 x932))))
(assert (= (=> (and (= x1154 (< 0 (x1639 x379 32))) (or (and (not x1154) (and (= x321 x252) (= x379 x249))) (and (and (= x762 x321) (= x249 (x1639 x379 32)) (= (x1394 (+ x252 32)) x762)) x1154))) x326) x792))
(assert (= (x1339 (x1491 496069280)) 496069280))
(assert (x1390 x157))
(assert (x1390 x9))
(assert (x1390 x1288))
(assert (x1390 x2074))
(assert (x1390 x376))
(assert (x1390 x2006))
(assert (x1390 x21))
(assert (= (x1339 (x1331 x2022)) x2022))
(assert (= (x1331 353073666) (x1491 353073666)))
(assert (= (x1339 (x1470 x188 x272)) (+ x272 (x1339 x188))))
(assert (= (x1339 (x1470 x769 x746)) (+ x746 (x1339 x769))))
(assert (x1390 x1826))
(assert (= x200 (and x1225 (not x218))))
(assert (x1835 x1426))
(assert (x1390 x1278))
(assert (= (div x173 4294967296) (x1639 x173 32)))
(assert (x1390 x232))
(assert (= (and x1742 (not x1255)) x781))
(assert (x1390 x45))
(assert (x1390 x783))
(assert (x1390 x1458))
(assert (x1390 x1044))
(assert (= x636 (and x850 x1809)))
(assert (x1390 x494))
(assert (= (=> (and (and (and (<= x1916 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x107) (<= 0 x1928) (>= x2037 0) (= x512 x1262) (= x1781 x1212) (<= x1090 1461501637330902918203684832716283019655932542975) (= x58 (x1470 x118 2)) (= (x1621 (x1331 x95)) x107) (= x870 x494) (= (not (= 0 x1395)) x512) (= x470 x2001) (= x861 (+ x1050 x2001)) (not (< x1682 3223297591)) (>= x855 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1916 x470)) (= x2006 x346) (<= x1928 1461501637330902918203684832716283019655932542975) (= x1522 128) (= (x167 (x1331 x870) (x1491 1) 0) x670) (= 100 x715) (= x1294 x341) (= x341 0) (= x1050 x1916) (= x1682 3567836568) (<= x470 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 18446744073709551615 x2037) (>= x470 0) (= x218 (= x664 0)) (= x1928 x2082) (= (x1280 x1541) x1916) (>= x1916 0) (not (> 1813000879 x1682)) (< x1682 3952089556) (>= 1461501637330902918203684832716283019655932542975 x855) (= x1212 x855) (= x1541 (x1470 x118 1)) (= x2037 (x1582 x670)) (not (< x1682 3567836568)) (<= 0 x1090) (= x470 (x196 x58)) (= x118 (x167 (x1331 x870) (x1491 4) 0)) (< x2037 18446744073709551616) (= x861 x52)) (and (= (x2011 x1577) x547) (= (= x547 0) x1346) (>= x547 0) (= x819 1284264308) (not (> 1284264308 x819)) (= x487 x1596) (= x32 (x1621 (x1331 x95))) (= x50 (not x487)) (= x1100 (not x1346)) (not (> 850923838 x819)) (= x301 (and x82 x50)) (< x819 1813000879) (= (ite x62 1 0) x1395) (= x1577 (x167 (x1331 x1203) (x1491 8) 0)) (> 18446744073709551616 x547) (= (not (= x1083 0)) x1596) (= x1203 x494) (< 0 x32) (>= 18446744073709551615 x547) (> 1425886544 x819) (= (not x1100) x62) (= 128 x140))) (and (= (ite x1601 1 0) x1083) (= (* x859 x867) x1234) (= (not x1246) x1601) (= (x1685 x902) x859) (= (div x1234 100) x1990) (< (* x867 x859) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1246 (not x801)) (= x801 (not (> x1990 x312))))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1524) (= 160 x2098) (>= x1524 0) (= x398 x1524)) x218) x203) (=> (and (and (= x1726 (x876 (x1491 10) 0)) (= x1872 (x1056 (- x664 1))) (= x1071 (x1939 x207)) (>= 26959946667150639794667015087019630673637144422540572481103610249215 x1071) (<= x1788 4294967295) (> x664 x1872) (= (x463 x207) x1788) (>= x1788 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1071) (< x1788 4294967296) (= (x1470 x1726 x1872) x207) (<= 0 x1071) (= (> x1788 x2037) x2024)) (not x218)) (and (=> (and (not x2024) (and (= x1071 x398) (= x2098 224))) x203) (=> (and x2024 (and (= x1509 (> x664 0)) (= x2067 10) (= 0 x1283) (= 10 x1945) (= x410 0) (< x2037 x2006))) (and (=> (and (= x1194 x664) (not x1509)) x438) (=> (and x1509 (and (and (= (x876 (x1491 10) 0) x1004) (= (div x664 2) x1784) (= x1784 x1864) (not (> 0 x409)) (>= 4294967295 x541) (<= 0 x541) (= x1155 (x1470 x1004 x1864)) (> 4294967296 x541) (= (x1056 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1784)) x409) (= x18 (> x541 x2037)) (= x541 (x463 x1155))) (or (and (not x18) (and (= x664 x1838) (= (x1394 (+ 1 x1864)) x883) (= x217 x883) (not (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1864)))) (and x18 (and (= x217 0) (= x1864 x1838)))))) x1282))))))) x222))
(assert (=> (>= 10000 x1335) (= (x1331 x1335) (x1491 x1335))))
(assert (x1390 x570))
(assert (x1390 x2028))
(assert (= (x1491 117300739) (x1331 117300739)))
(assert (= x941 (and x1446 x1323)))
(assert (x1390 x1178))
(assert (x1390 x287))
(assert (= (=> (= x2076 (> x166 x1426)) (and (=> (and (and (or (and (not x190) (and (= x57 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x193)) (not x57) (= x1199 (x1394 (+ x193 1))) (= x692 x1199) (= x166 x522))) (and (and (= x692 x1426) (= x522 x193)) x190)) (and (= x190 (< 0 x2045)) (= x579 (x947 x1426 x166)) (= (x740 x310) x2045) (< x2045 4294967296) (= x1263 x12) (= x193 (+ x12 x1614)) (< (+ x1263 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1470 x1922 x193) x310) (= x1263 (div (x1879 x1426 x166) 2)) (<= x2045 4294967295) (<= 0 x2045) (= x1922 (x876 (x1491 9) 0)) (= x579 x1614))) x2076) x2121) (=> (and (not x2076) (= x1449 x166)) x1046))) x1693))
(assert (= (=> (and (and (= x1097 x889) (= (x2027 128) x1097)) (and (and (and (and (= x1936 (= x1271 0)) (> 1813000879 x1408) (<= x1271 18446744073709551615) (= (x167 (x1331 x1909) (x1491 8) 0) x1352) (not (< x1408 850923838)) (= (ite x1312 1 0) x1466) (= (not x1936) x313) (> x1108 0) (= x1312 (not x313)) (= x494 x1909) (> 18446744073709551616 x1271) (= (and x698 x187) x1126) (= 128 x136) (not (> 1284264308 x1408)) (= x1116 x668) (= x1108 (x1621 (x1331 x95))) (= x497 0) (>= x1271 0) (> 1425886544 x1408) (= (x2011 x1352) x1271) (= 1284264308 x1408) (= (= 0 x1116) x698)) (and (and (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x913 x1816)) (< x2017 18446744073709551616) (= x353 x1294) (not (< x986 3223297591)) (= x1138 x1195) (= x494 x474) (= x780 x860) (= x913 x2116) (= (+ x108 x2116) x860) (= (and x1812 x461) x1628) (= (x167 (x1331 x474) (x1491 1) 0) x553) (>= x1195 0) (>= 18446744073709551615 x2017) (= x353 0) (= x2144 (= x664 0)) (= x466 (x1470 x689 1)) (>= x2017 0) (= x2082 x1156) (> 3952089556 x986) (>= x1156 0) (not (< x986 3567836568)) (< 0 x1961) (= x1723 x346) (<= 0 x913) (= x689 (x167 (x1331 x474) (x1491 4) 0)) (= x1961 (x1621 (x1331 x95))) (= 128 x788) (not (< x986 1813000879)) (= x54 100) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x913) (<= x1156 1461501637330902918203684832716283019655932542975) (= (x1470 x689 2) x604) (<= 0 x1088) (= x2017 (x1582 x553)) (= x911 x851) (<= x1088 1461501637330902918203684832716283019655932542975) (= x1816 x108) (= x1906 0) (<= 0 x1816) (>= 1461501637330902918203684832716283019655932542975 x1195) (= x461 (= 0 x911)) (= x986 3567836568) (= x1138 x1781) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1816) (= (x1280 x466) x1816) (= (x196 x604) x913)) (and (> 3567836568 x2048) (not (> 1813000879 x2048)) (> x842 0) (= x641 (x167 (x1331 x2022) (x1491 4) 0)) (not (> 3314571236 x2048)) (= x1812 (and x1210 x703)) (= (x1280 x1048) x1120) (= (x1470 x641 1) x1048) (= (x1621 (x1331 x95)) x842) (= x2022 x494) (= 0 x1740) (= x81 x617) (>= x1120 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1120) (= (= x617 0) x1210) (not (< x2048 3223297591)) (not (= x2048 3314571236)) (= x2048 3361977486) (= x851 x1120))) (and (= (and x745 x942) x703) (= x797 x863) (= 0 x148) (= (x196 x699) x1695) (= (x1621 (x1331 x95)) x1011) (not (= x1860 2103345634)) (= (x167 (x1331 x1716) (x1491 4) 0) x1728) (> 2546193204 x1860) (= 2306352607 x1860) (= x81 x1695) (= x494 x1716) (= (x1470 x1728 2) x699) (not (> 1813000879 x1860)) (> x1011 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1695) (= (= 0 x797) x745) (> 3223297591 x1860) (not (> 2103345634 x1860)) (<= 0 x1695))) (and (= x1315 x863) (not (< x251 116652518)) (= x251 340724530) (< 0 x469) (= x469 (x1621 (x1331 x95))) (= x643 x494) (= x1315 (x2039 x1516)) (> 850923838 x251) (not (= 117300739 x251)) (<= 0 x1315) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1315) (= x1437 x418) (= (not (= x1466 0)) x1437) (= x942 (and x418 x1126)) (> 1813000879 x251) (not (= x251 116652518)) (> 369934039 x251) (= (x167 (x1331 x643) (x1491 4) 0) x1516)))) (and (< 0 x221) (>= 18446744073709551615 x442) (not (< x865 3223297591)) (= x221 (x1621 (x1331 x95))) (= x281 (ite (> x442 x1962) x442 x1962)) (= 3223297591 x865) (= x1977 128) (= x1923 (x167 (x1331 x459) (x1491 1) 0)) (= 0 x331) (< x442 18446744073709551616) (= 160 x676) (= (x2011 x509) x1962) (= (x167 (x1331 x459) (x1491 8) 0) x509) (< x865 3567836568) (<= x1962 18446744073709551615) (>= x442 0) (= x281 x668) (= x494 x459) (<= 0 x1962) (> 18446744073709551616 x1962) (= (x1470 x1923 1) x87) (not (< x865 1813000879)) (= (x1779 x87) x442) (= x187 (= 0 x1014)) (< x865 3314571236) (= x2010 x1014))) (and (<= 0 x2010) (= 128 x1654) (not (> 584786547 x232)) (> 1813000879 x232) (>= 18446744073709551615 x2010) (not (= x232 643179133)) (= 0 x391) (= x1634 (x167 (x1331 x1325) (x1491 1) 0)) (= 761525907 x232) (not (< x232 369934039)) (not (= 584786547 x232)) (= (x1621 (x1331 x95)) x404) (= x2010 x831) (= x889 x1377) (> 850923838 x232) (< x2010 18446744073709551616) (= x630 (> x1377 0)) (> x404 0) (= x2010 (x1582 x1634)) (= x1325 x494)))) (and (=> (and (and (< x1547 4294967296) (= x914 (x1470 x1273 x778)) (= x778 (x1056 (- x664 1))) (> x664 x778) (= (x1939 x914) x1166) (= (x463 x914) x1547) (<= 0 x1547) (= (x876 (x1491 10) 0) x1273) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1166) (= x1888 (< x2017 x1547)) (<= x1166 26959946667150639794667015087019630673637144422540572481103610249215) (>= 4294967295 x1547) (>= x1166 0)) (not x2144)) (and (=> (and (and (= x925 10) (= x1993 (< 0 x664)) (= x836 10) (= x500 0) (= 0 x486) (< x2017 x1723)) x1888) (and (=> (and x1993 (and (and (= (x463 x1396) x2073) (>= x2073 0) (= x352 x1801) (= (< x2017 x2073) x843) (= (x1056 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1801)) x1597) (= (x876 (x1491 10) 0) x615) (= (div x664 2) x1801) (not (> 0 x1597)) (<= x2073 4294967295) (= (x1470 x615 x352) x1396) (> 4294967296 x2073)) (or (and (not x843) (and (not (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x352)) (= x664 x432) (= x573 x875) (= x573 (x1394 (+ 1 x352))))) (and x843 (and (= x432 x352) (= 0 x875)))))) x1615) (=> (and (= x664 x1494) (not x1993)) x1804))) (=> (and (not x1888) (and (= x1166 x658) (= 224 x1503))) x939))) (=> (and x2144 (and (= x1503 160) (= x1524 x658) (<= 0 x1524) (<= x1524 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x939))) x1342))
(assert (x1390 x1169))
(assert (x1390 x709))
(assert (= x1386 (and x1255 x1742)))
(assert (x1390 x70))
(assert (= x1611 (and x719 x1065)))
(assert (x1390 x611))
(assert (= x1307 (=> (and (= x1202 (> (x1639 x1590 16) 0)) (or (and (and (= x1228 (x1639 x1590 16)) (= (x1394 (+ x1668 16)) x602) (= x602 x125)) x1202) (and (not x1202) (and (= x1590 x1228) (= x1668 x125))))) x423)))
(assert (x1390 x1497))
(assert (= (x1331 2546193204) (x1491 2546193204)))
(assert (x1390 x470))
(assert (= (and (not x1809) x850) x1224))
(assert (x1390 x854))
(assert (= x2032 (=> (= (< x562 x632) x1846) (and (=> (and x1846 (and (or (and x534 (and (= x165 x1627) (= x517 x562))) (and (and (= (> x1627 115792089237316195423570985008687907853269984665640564039457584007913129639934) x749) (= x517 x1382) (not x749) (= (x1394 (+ x1627 1)) x1382) (= x632 x165)) (not x534))) (and (= x1010 x757) (= x320 (x876 (x1491 9) 0)) (<= 0 x421) (= x534 (> x421 x1388)) (<= x421 4294967295) (= x757 (div (x1879 x562 x632) 2)) (= x1940 x805) (= x421 (x740 x1539)) (< (+ x805 x757) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1627 (+ x1940 x1010)) (= x805 (x947 x562 x632)) (< x421 4294967296) (= (x1470 x320 x1627) x1539)))) x1376) (=> (and (= x632 x1820) (not x1846)) x1074)))))
(assert (x1390 x217))
(assert (x1390 x1978))
(assert (= (x1339 (x1470 x110 2)) (+ 2 (x1339 x110))))
(assert (x1390 x626))
(assert (= x612 (and (not x944) x1420)))
(assert (= x113 (and x1232 x1409)))
(assert (x1390 x242))
(assert (x1452 x474))
(assert (= x508 (and x10 x1775)))
(assert (x1390 x1294))
(assert (x1390 x776))
(assert (x1390 x1655))
(assert (= x291 (or x1810 x1237)))
(assert (= (=> (and (= x783 x166) (= x1426 x488)) x1693) x1697))
(assert (x1390 x594))
(assert (= (or x1647 x614) x910))
(assert (= (x1639 x1707 1) (div x1707 2)))
(assert (x1390 x2145))
(assert (= 1633807128 (x1339 (x1491 1633807128))))
(assert (= (x1339 (x1470 x1726 x1872)) (+ x1872 (x1339 x1726))))
(assert (x528 x162 x366))
(assert (x1390 x1964))
(assert (x1390 x394))
(assert (= (x1339 (x1470 x641 1)) (+ 1 (x1339 x641))))
(assert (x1390 x1840))
(assert (= (and x508 x1982) x1851))
(assert (x1390 x1553))
(assert (= x194 (x1339 (x1331 x194))))
(assert (x1390 x199))
(assert (x1390 x302))
(assert (x1390 x1784))
(assert (x1390 x342))
(assert (x1390 x867))
(assert (= (x1639 x1484 32) (div x1484 4294967296)))
(assert (x1390 x1071))
(assert (= x1742 (or x726 x1821)))
(assert (= (or x2043 x2023) x2051))
(assert (x1390 x1366))
(assert (x1390 x1252))
(assert (= (div x2140 4294967296) (x1639 x2140 32)))
(assert (= (+ (x1339 x1728) 2) (x1339 (x1470 x1728 2))))
(assert (= (div x655 256) (x1639 x655 8)))
(assert (x1390 x1673))
(assert (x1390 x664))
(assert (x1390 x1589))
(assert (x1390 x705))
(assert (= x871 (=> (and (= (= 0 x529) x1021) (or (and (not x1021) (and (< x1534 26959946667150639794667015087019630673637144422540572481103610249216) (= x776 x1534) (= (x876 (x1491 9) 0) x1793) (<= x1534 26959946667150639794667015087019630673637144422540572481103610249215) (= (x1931 x1832) x1534) (= (x1470 x1793 x121) x1832) (= x121 (x1056 (- x529 1))) (>= x1534 0))) (and x1021 (= 0 x776)))) x1342)))
(assert (x1390 x1551))
(assert (x1390 x56))
(assert (x1390 x567))
(assert (= (x1339 (x1331 x1629)) x1629))
(assert (x1390 x1399))
(assert (x1390 x518))
(assert (= (and (not x1021) x1052) x1873))
(assert (= (div x894 2) (x1639 x894 1)))
(assert (x1390 x465))
(assert (x1358 x1426))
(assert (x1390 x1130))
(assert (x1390 x431))
(assert (x1390 x1265))
(assert (x1390 x20))
(assert (x1452 x643))
(assert (x1390 x1820))
(assert (= 3314571236 (x1339 (x1491 3314571236))))
(assert (x1390 x409))
(assert (x1390 x1916))
(assert (x1390 x926))
(assert (x1390 x977))
(assert (= (div x1737 2) (x1639 x1737 1)))
(assert (x1390 x479))
(assert (x1390 x1374))
(assert (x1390 x1015))
(assert (= (x1339 (x1470 x480 x1964)) (+ (x1339 x480) x1964)))
(assert (x1390 x1597))
(assert (= (div x1581 2) (x1639 x1581 1)))
(assert (x1390 x674))
(assert (=> (>= 10000 x643) (= (x1491 x643) (x1331 x643))))
(assert (x1390 x573))
(assert (x1390 x322))
(assert (x1390 x135))
(assert (x1390 x343))
(assert (x1390 x1715))
(assert (= (and x175 x1722) x1979))
(assert (= (x1339 (x1491 1813000879)) 1813000879))
(assert (x1390 x2098))
(assert (x1390 x364))
(assert (= (x1491 2387844748) (x1331 2387844748)))
(assert (x1390 x1895))
(assert (x1390 x967))
(assert (= x434 (or x2063 x879)))
(assert (x1390 x64))
(assert (= x821 (and x846 x1185)))
(assert (x1390 x316))
(assert (x1390 x1306))
(assert (x1390 x41))
(assert (x1390 x16))
(assert (x1390 x1707))
(assert (x1390 x455))
(assert (x1390 x1351))
(assert (x1390 x682))
(assert (= (+ (x1339 x1704) 1) (x1339 (x1470 x1704 1))))
(assert (x1390 x2030))
(assert (x1390 x2047))
(assert (x1390 x1370))
(assert (= (=> (= (not (< x1605 x1929)) x237) (and (=> (= x1929 x36) x1253) x237)) x704))
(assert (x1390 x345))
(assert (= (and x804 (not x791)) x585))
(assert (= x131 (x1339 (x1331 x131))))
(assert (x1390 x632))
(assert (x1390 x389))
(assert (x1390 x794))
(assert (x1390 x125))
(assert (x1390 x598))
(assert (x1390 x1730))
(assert (x1390 x2010))
(assert (x1390 x99))
(assert (x1390 x1641))
(assert (= (=> (and (or (and (and (= x1290 x1748) (= x1748 (x1394 (+ x899 2))) (= x2071 (x1639 x1366 2))) x1257) (and (not x1257) (and (= x899 x1290) (= x1366 x2071)))) (= x1257 (< 0 (x1639 x1366 2)))) x414) x589))
(assert (=> (<= x474 10000) (= (x1331 x474) (x1491 x474))))
(assert (x1390 x905))
(assert (x1390 x1710))
(assert (= x1580 (and (not x2144) x696)))
(assert (= x557 (or x556 x941)))
(assert (x1390 x1045))
(assert (x1390 x2034))
(assert (x1390 x1424))
(assert (= (x1639 x157 1) (div x157 2)))
(assert (= (and (not x767) x597) x814))
(assert (x1390 x430))
(assert (= (x1339 (x1470 x2091 1)) (+ (x1339 x2091) 1)))
(assert (=> (>= 10000 x1157) (= (x1491 x1157) (x1331 x1157))))
(assert (x1390 x1880))
(assert (x1390 x1332))
(assert (= x988 (=> (and (= x70 x398) (= 224 x2098)) x203)))
(assert (x1390 x1897))
(assert (x1390 x1849))
(assert (= (x1339 (x1470 x1923 1)) (+ 1 (x1339 x1923))))
(assert (x1390 x6))
(assert (x1390 x1853))
(assert (x1390 x2073))
(assert (x1390 x1828))
(assert (= x1959 (=> (and (= x2068 x1673) (= x1880 x358)) x1397)))
(assert (x1390 x1454))
(assert (x1390 x1151))
(assert (x1390 x666))
(assert (= (div x1332 2) (x1639 x1332 1)))
(assert (= (+ x94 (x1339 x1297)) (x1339 (x1470 x1297 x94))))
(assert (= x1794 (and x677 x1566)))
(assert (= x1376 (=> (= (not (> x165 x517)) x433) (and (=> (= x1820 x165) x1074) x433))))
(assert (x1390 x471))
(assert (= (x1339 (x1331 x1716)) x1716))
(assert (x1390 x94))
(assert (= (+ x778 (x1339 x1273)) (x1339 (x1470 x1273 x778))))
(assert (x1390 x1406))
(assert (x1390 x1884))
(assert (= x816 (and (not x337) x1214)))
(assert (= x837 (or x104 x1389)))
(assert (= (or x1680 x2118) x2057))
(assert (= (and (not x1888) x1580) x1175))
(assert (= (and (not x1148) x294) x782))
(assert (= x710 (and x2132 x18)))
(assert (x1390 x1043))
(assert (x1390 x1593))
(assert (x1390 x1179))
(assert (x1390 x1150))
(assert (= (x1339 (x1491 2387844748)) 2387844748))
(assert (x1390 x469))
(assert (= (x1639 x1528 4) (div x1528 16)))
(assert (x1390 x1432))
(assert (x1390 x1633))
(assert (= x1854 true))
(assert (x1390 x1590))
(assert (= x112 (=> (and (= x2012 (= x238 0)) (or (and (= x667 0) x2012) (and (not x2012) (and (= (x1931 x2097) x1418) (>= x1418 0) (= (x1056 (- x238 1)) x1288) (= x1058 (x876 (x1491 9) 0)) (< x1418 26959946667150639794667015087019630673637144422540572481103610249216) (= x667 x1418) (= (x1470 x1058 x1288) x2097) (<= x1418 26959946667150639794667015087019630673637144422540572481103610249215))))) x656)))
(assert (= x348 (=> (and (or (and (not x1446) (and (= x2021 x1259) (= x1720 x1528))) (and (and (= (x1639 x1720 8) x1528) (= x2021 x1187) (= x1187 (x1394 (+ x1259 8)))) x1446)) (= x1446 (< 0 (x1639 x1720 8)))) x1933)))
(assert (x1390 x1212))
(assert (= x810 (=> (and (or (and (not x2089) (and (= x1555 x48) (= x1380 x372))) (and x2089 (and (= (x1394 (+ 64 x48)) x2054) (= x372 (x1639 x1380 64)) (= x1555 x2054)))) (= x2089 (< 0 (x1639 x1380 64)))) x119)))
(assert (= x1933 (=> (and (or (and x1996 (and (= x97 (x1394 (+ x2021 4))) (= x1366 (x1639 x1528 4)) (= x97 x899))) (and (not x1996) (and (= x1366 x1528) (= x899 x2021)))) (= (< 0 (x1639 x1528 4)) x1996)) x589)))
(assert (= (x1339 (x1470 x615 x352)) (+ (x1339 x615) x352)))
(assert (= x1638 (and x1104 x1943)))
(assert (x1390 x1714))
(assert (x1390 x1801))
(assert (x1390 x2033))
(assert (x1390 x1921))
(assert (= x976 (and x218 x1225)))
(assert (x1390 x1375))
(assert (= x311 (=> (= x2108 (not (> x741 x170))) (and x2108 (=> (= x741 x1001) x686)))))
(assert (x1390 x1567))
(assert (x1390 x1140))
(assert (x1390 x442))
(assert (= (or x384 x126) x1831))
(assert (x1390 x1487))
(assert (x1390 x984))
(assert (= (x1639 x811 16) (div x811 65536)))
(assert (= (or x1960 x241) x1694))
(assert (x1390 x851))
(assert (= (+ x1132 (x1339 x642)) (x1339 (x1470 x642 x1132))))
(assert (x1390 x296))
(assert (= (x1639 x1518 1) (div x1518 2)))
(assert (x1390 x1137))
(assert (= x1786 (and x436 x2112)))
(assert (= (x1331 3952089556) (x1491 3952089556)))
(assert (= (and x1584 (not x555)) x1583))
(assert (x1390 x1395))
(assert (= (x1639 x506 16) (div x506 65536)))
(assert (x1390 x643))
(assert (x1390 x428))
(assert (x1390 x522))
(assert (x1390 x1079))
(assert (= (x1491 1461501637330902918203684832716283019655932542975) (x1331 1461501637330902918203684832716283019655932542975)))
(assert (= (x1639 x561 1) (div x561 2)))
(assert (= x1208 (and x557 (not x1996))))
(assert (x1390 x660))
(assert (= x417 (=> (= (not (> x343 x1496)) x1462) (and x1462 (=> (= x343 x1905) x1118)))))
(assert (= (and x1792 (not x355)) x1435))
(assert (= (div x1617 2) (x1639 x1617 1)))
(assert (x1390 x1334))
(assert (= (and x1438 x402) x362))
(assert (x1390 x1049))
(assert (x1390 x382))
(assert (= x1752 (and (not x1244) x291)))
(assert (x1390 x1764))
(assert (x1390 x495))
(assert (x1390 x2022))
(assert (= x2143 (and x385 (not x1202))))
(assert (= x1893 (or x1414 x1028)))
(assert (x1390 x1768))
(assert (x1390 x1545))
(assert (x1390 x1944))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249216 (x1339 (x1491 26959946667150639794667015087019630673637144422540572481103610249216))))
(assert (x1358 x632))
(assert (x1390 x162))
(assert (x1390 x938))
(assert (x1390 x1561))
(assert (x1390 x221))
(assert (x1390 x450))
(assert (x1390 x609))
(assert (x1390 x1973))
(assert (x1390 x923))
(assert (x1390 x716))
(assert (x1390 x1579))
(assert (= (and (not x822) x29) x152))
(assert (= (x1339 (x1491 9518847204935358166548570266051330015907116135037852959641967396525866745856)) 9518847204935358166548570266051330015907116135037852959641967396525866745856))
(assert (= x1218 (or x2083 x152)))
(assert (x1390 x1250))
(assert (= x605 (and x878 x228)))
(assert (= (and x1775 (not x10)) x1575))
(assert (x1390 x1617))
(assert (x1390 x870))
(assert (x1122 x1958))
(assert (x1390 x778))
(assert (= x1163 (or x158 x1365)))
(assert (x1390 x2003))
(assert (x1390 x797))
(assert (x1390 x1110))
(assert (x1390 x650))
(assert (= (=> (= (> x1545 x1587) x1566) (and (=> (and (and (and (= (x947 x1587 x1545) x1770) (> 4294967296 x680) (= x189 (div (x1879 x1587 x1545) 2)) (= x38 x1770) (= x532 x189) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x189 x1770)) (= (x876 (x1491 9) 0) x734) (>= 4294967295 x680) (= (+ x38 x532) x350) (<= 0 x680) (= x680 (x740 x1115)) (= (< x2017 x680) x616) (= (x1470 x734 x350) x1115)) (or (and (not x616) (and (= x96 x1545) (= x1150 x1530) (= x1361 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x350)) (not x1361) (= (x1394 (+ x350 1)) x1530))) (and x616 (and (= x1587 x1150) (= x350 x96))))) x1566) x1911) (=> (and (= x1897 x1545) (not x1566)) x284))) x304))
(assert (x1390 x969))
(assert (x1390 x1168))
(assert (= x1630 (or x1786 x866)))
(assert (= (and x168 (not x1993)) x1957))
(assert (x1835 x1545))
(assert (x1390 x128))
(assert (x1390 x1490))
(assert (x1390 x1223))
(assert (= x870 (x1339 (x1331 x870))))
(assert (x1390 x1661))
(assert (x1390 x408))
(assert (x1390 x1729))
(assert (x897 x162 x366))
(assert (= x1139 (and x1364 x2090)))
(assert (x1390 x1790))
(assert (x1390 x1008))
(assert (x1390 x1847))
(assert (x1390 x312))
(assert (x1358 x358))
(assert (= x402 (and x477 x243)))
(assert (= (and x1327 x507) x714))
(assert (x1390 x116))
(assert (x1452 x1335))
(assert (x1452 x1915))
(assert (= (x1639 x1330 1) (div x1330 2)))
(assert (x1390 x1096))
(assert (= (x1339 (x1491 1284264308)) 1284264308))
(assert (x1390 x1986))
(assert (x1390 x1114))
(assert (x1390 x2082))
(assert (x1390 x536))
(assert (= (=> (and (= x1988 (< 0 (x1639 x1780 8))) (or (and x1988 (and (= (x1394 (+ 8 x1289)) x957) (= (x1639 x1780 8) x428) (= x957 x490))) (and (and (= x428 x1780) (= x1289 x490)) (not x1988)))) x2087) x756))
(assert (= x982 (=> (and (= x1503 224) (= x1963 x658)) x939)))
(assert (x1390 x1711))
(assert (= (x1339 (x1491 2546193204)) 2546193204))
(assert (x1390 x1057))
(assert (x1390 x1903))
(assert (x1835 x1443))
(assert (= (x1639 x1260 1) (div x1260 2)))
(assert (= (and (not x1542) x1854) x675))
(assert (= (and x1703 (not x843)) x206))
(assert (x1390 x54))
(assert (= (+ x1465 (x1339 x1219)) (x1339 (x1470 x1219 x1465))))
(assert (x1390 x2094))
(assert (= x228 (and x439 x1507)))
(assert (= (x1339 (x1470 x1239 x1261)) (+ x1261 (x1339 x1239))))
(assert (= x1625 (=> (and (= x1153 (< 0 (x1639 x934 8))) (or (and x1153 (and (= x1497 x208) (= (x1639 x934 8) x1935) (= (x1394 (+ 8 x625)) x208))) (and (not x1153) (and (= x1935 x934) (= x1497 x625))))) x697)))
(assert (= (=> (and (and (and (= 419023261 x1424) (= x738 (not x198)) (= (not x693) x1129) (= (or x301 x906) x624) (= (not (= 0 x1013)) x1302) (< 0 x479) (>= 18446744073709551615 x1571) (= (and x1262 x738) x906) (>= x1571 0) (= x693 (not x1061)) (= x1953 128) (> 1813000879 x1424) (= x494 x374) (= x198 x1302) (= (ite x1129 1 0) x1852) (< x1424 850923838) (= x1571 (x2011 x1147)) (> 18446744073709551616 x1571) (> 584786547 x1424) (not (< x1424 369934039)) (= (< 0 x1571) x1061) (not (= 369934039 x1424)) (= x479 (x1621 (x1331 x95))) (= (x167 (x1331 x374) (x1491 8) 0) x1147)) (and (>= x918 0) (= (x1470 x110 1) x885) (= x293 x2128) (not (> 1813000879 x445)) (>= 1461501637330902918203684832716283019655932542975 x1573) (<= 0 x1573) (= x1095 128) (= 100 x1025) (= x494 x72) (= x295 x1294) (<= x918 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x322 0) (= x337 (= 0 x664)) (= x293 (x1280 x885)) (>= x181 0) (= x1645 x183) (= 3567836568 x445) (= x153 x989) (>= x153 0) (<= x153 1461501637330902918203684832716283019655932542975) (not (> 3223297591 x445)) (= x183 (not (= x1852 0))) (= x295 0) (= x110 (x167 (x1331 x72) (x1491 4) 0)) (= x989 x1781) (= x613 (+ x1616 x2128)) (<= x322 18446744073709551615) (= (x1621 (x1331 x95)) x1043) (= x2082 x1573) (= (x196 x607) x918) (= x613 x1641) (<= 0 x293) (< x322 18446744073709551616) (= x607 (x1470 x110 2)) (> 3952089556 x445) (= x1917 (x167 (x1331 x72) (x1491 1) 0)) (> x1043 0) (= x918 x1616) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x293) (>= 1461501637330902918203684832716283019655932542975 x181) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x293 x918)) (= x322 (x1582 x1917)) (not (< x445 3567836568)) (= x346 x430))) (and (< (* x1813 x398) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite x1164 1 0) x1013) (= x1650 (* x1813 x398)) (= (not x271) x1164) (= (div x1650 100) x1711) (= x1171 (not (> x1711 x52))) (= (not x1171) x271) (= (x960 x2098) x1813))) (and (=> (and x337 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1524) (>= x1524 0) (= x1524 x1655) (= 160 x611))) x892) (=> (and (and (< x1910 4294967296) (= x1987 (x1056 (- x664 1))) (> x664 x1987) (= (x1470 x1159 x1987) x603) (<= 0 x1910) (>= x429 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x429) (>= 4294967295 x1910) (= x1889 (> x1910 x322)) (= (x876 (x1491 10) 0) x1159) (= x429 (x1939 x603)) (>= 26959946667150639794667015087019630673637144422540572481103610249215 x429) (= (x463 x603) x1910)) (not x337)) (and (=> (and (and (= 224 x611) (= x1655 x429)) (not x1889)) x892) (=> (and x1889 (and (= x637 0) (< x322 x430) (= 10 x795) (= (< 0 x664) x1460) (= 10 x1512) (= x2088 0))) (and (=> (and x1460 (and (or (and (and (= x1496 0) (= x1191 x343)) x185) (and (not x185) (and (= x664 x343) (= x302 x1496) (not (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1191)) (= (x1394 (+ 1 x1191)) x302)))) (and (= (x1056 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1057)) x1766) (< x420 4294967296) (= x420 (x463 x335)) (not (< x1766 0)) (= x1057 (div x664 2)) (= (< x322 x420) x185) (>= x420 0) (= x1057 x1191) (= x335 (x1470 x1018 x1191)) (= (x876 (x1491 10) 0) x1018) (<= x420 4294967295)))) x417) (=> (and (= x664 x1905) (not x1460)) x1118))))))) x656))
(assert (x1390 x7))
(assert (x1390 x281))
(assert (x1390 x1187))
(assert (x1390 x2122))
(assert (x1390 x1465))
(assert (= (and x259 x156) x627))
(assert (= (and (not x1846) x648) x515))
(assert (x1390 x1535))
(assert (= x1498 (x1339 (x1331 x1498))))
(assert (x1390 x651))
(assert (x1390 x2021))
(assert (x1390 x1228))
(assert (x1390 x5))
(assert (x1390 x517))
(assert (= x707 (=> (and (and (= (x740 x1652) x1944) (= (ite (> x319 0) (x1394 (+ x645 1)) x645) x1019) (= (< x666 x1340) x1347) (= x277 (x1394 (+ x882 x1692))) (= (x1639 x1130 1) x1892) (= x977 (x1394 (+ x1432 x495))) (= x188 (x876 (x1491 9) 0)) (= (x283 1 (x1639 x1019 1)) x169) (> x1892 0) (= (div x666 x1664) x583) (= (x1639 x1473 1) x1664) (= x721 (div x666 x169)) (= (x1639 x277 1) x244) (= (x1394 (+ x1892 x1206)) x1473) (= x1130 (x1394 (+ x397 x1430))) (= x1430 (x1639 x1374 1)) (= (x1639 x1737 1) x882) (= x1374 (x1394 (+ x169 x721))) (> x1664 0) (= x1737 (x1394 (+ x1664 x583))) (> x451 0) (= x451 (x1639 x977 1)) (>= 4294967295 x1944) (= x199 (x1394 (+ x1525 x244))) (< x1944 4294967296) (= x1692 (div x666 x882)) (= x1340 (ite (> x1609 x451) x451 x1609)) (= (div x666 x1430) x397) (< 0 x882) (not x1347) (= (x1056 (- x666 x1340)) x272) (= (div x666 x495) x1432) (= x495 (x1639 x199 1)) (<= 0 x1944) (> x244 0) (= (div x666 x1892) x1206) (= (x1639 x182 1) x319) (< 0 x1430) (= x1609 (div x666 x451)) (= x822 (> x1944 x1540)) (= (div x666 x244) x1525) (< 0 x495) (= x1652 (x1470 x188 x272))) (or (and (and (= 0 x1806) (= x1965 x272)) x822) (and (and (not x569) (= x569 (> x272 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (= x1968 (x1394 (+ x272 1))) (= x1806 x1968) (= x666 x1965)) (not x822)))) x958)))
(assert (= 850923838 (x1339 (x1491 850923838))))
(assert (x1390 x1925))
(assert (= (div x1738 2) (x1639 x1738 1)))
(assert (x1390 x2067))
(assert (x1390 x1797))
(assert (= x422 (and x2113 (not x40))))
(assert (x1390 x1660))
(assert (x1390 x315))
(assert (x1390 x2139))
(assert (x1390 x1326))
(assert (= (and x303 x1501) x1775))
(assert (x1390 x79))
(assert (=> (>= 10000 x1915) (= (x1491 x1915) (x1331 x1915))))
(assert (= (or x652 x1745) x1500))
(assert (x1390 x1643))
(assert (x1390 x33))
(assert (= (x1639 x345 1) (div x345 2)))
(assert (x1390 x1101))
(assert (x1390 x1695))
(assert (x1390 x1705))
(assert (= (and (not x878) x228) x1954))
(assert (= x241 (and (not x1690) x1436)))
(assert (x1390 x2055))
(assert (x1390 x1069))
(assert (x1390 x895))
(assert (x1390 x341))
(assert (x1390 x654))
(assert (x1390 x1719))
(assert (x1390 x2016))
(assert (= x1124 (and (not x1531) x928)))
(assert (x1390 x43))
(assert (x1390 x717))
(assert (x1390 x2071))
(assert (x1390 x1407))
(assert (x1390 x1116))
(assert (x1390 x393))
(assert (= x2127 (=> (and (= x1326 x366) (= x162 x1760)) x1827)))
(assert (x1390 x1037))
(assert (x1390 x1970))
(assert (= (or x841 x631) x1899))
(assert (= (+ x1482 (x1339 x755)) (x1339 (x1470 x755 x1482))))
(assert (x1390 x72))
(assert (x1390 x1063))
(assert (= x380 (and x4 x1153)))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x1339 (x1491 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x1390 x1724))
(assert (x1390 x899))
(assert (x1390 x1619))
(assert (x1390 x1890))
(assert (= (=> (and (or (and x535 (and (= x733 x1333) (= (x1394 (+ x2117 64)) x1333) (= (x1639 x1245 64) x1484))) (and (not x535) (and (= x733 x2117) (= x1484 x1245)))) (= x535 (< 0 (x1639 x1245 64)))) x568) x25))
(assert (= x1416 (and (not x809) x434)))
(assert (x1390 x793))
(assert (= x1440 (x1339 (x1331 x1440))))
(assert (x1390 x1388))
(assert (= (or x1796 x464) x1943))
(assert (x1390 x950))
(assert (= (div x888 2) (x1639 x888 1)))
(assert (x1390 x1991))
(assert (x1390 x398))
(assert (= x2085 (and x259 (not x156))))
(assert (x1390 x2066))
(assert (x1390 x1011))
(assert (= x1285 (and x712 x1392)))
(assert (x528 x1426 x166))
(assert (x1390 x358))
(assert (x1452 x2022))
(assert (= x1421 (and x534 x317)))
(assert (x1390 x1033))
(assert (x1390 x1669))
(assert (= (and x2024 x200) x290))
(assert (= x567 (x1339 (x1331 x567))))
(assert (x1390 x432))
(assert (= (and x1975 x1670) x1564))
(assert (x1390 x2061))
(assert (= (and (not x576) x814) x473))
(assert (= 2373169201 (x1339 (x1491 2373169201))))
(assert (x1390 x2018))
(assert (= (x1639 x934 8) (div x934 256)))
(assert (=> (<= x870 10000) (= (x1491 x870) (x1331 x870))))
(assert (x1390 x1174))
(assert (x1390 x874))
(assert (x1390 x400))
(assert (x1390 x750))
(assert (= (+ x254 (x1339 x1504)) (x1339 (x1470 x1504 x254))))
(assert (= 3567836568 (x1339 (x1491 3567836568))))
(assert (x1390 x1308))
(assert (x1390 x802))
(assert (x897 x562 x632))
(assert (x1390 x331))
(assert (= x887 (and x1564 (not x537))))
(assert (= (x1639 x1019 1) (div x1019 2)))
(assert (x1390 x279))
(assert (x1390 x2042))
(assert (x1390 x2123))
(assert (x1390 x2096))
(assert (x1390 x225))
(assert (= (x1331 4294967296) (x1491 4294967296)))
(assert (x1390 x356))
(assert (x1390 x392))
(assert (= (x1639 x399 1) (div x399 2)))
(assert (= (x1339 (x1491 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (x1390 x1512))
(assert (x1835 x1673))
(assert (x1390 x1605))
(assert (x897 x1426 x166))
(assert (= (x1339 (x1470 x731 x261)) (+ (x1339 x731) x261)))
(assert (= x95 (x1339 (x1331 x95))))
(assert (x1390 x361))
(assert (x1835 x358))
(assert (x1390 x1555))
(assert (x1390 x1965))
(assert (= (and x1949 x191) x1527))
(assert (x1390 x1261))
(assert (x1390 x1157))
(assert (x1390 x671))
(assert (x1390 x492))
(assert (= (x1339 (x1491 369934039)) 369934039))
(assert (= (x1331 496069280) (x1491 496069280)))
(assert (= 353073666 (x1339 (x1491 353073666))))
(assert (x1390 x1627))
(assert (=> (<= x802 10000) (= (x1331 x802) (x1491 x802))))
(assert (= (=> (and (and (= (div x1713 100) x657) (= (not (> x657 x1641)) x1798) (= (* x1655 x935) x1713) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1655 x935)) (= x1209 (not x1514)) (= x1508 (ite x1209 1 0)) (= x935 (x84 x611)) (= x1514 (not x1798))) (and (= x1027 (or x55 (not x381))) (= (not (= 0 x1508)) x197) (= (and x1645 x1235) x1700) (= x55 (or x624 x1700)) (= x197 x1235))) x1027) x1337))
(assert (x1390 x329))
(assert (x1390 x1578))
(assert (= x1152 (and x1995 (not x223))))
(assert (x1390 x1806))
(assert (= (x1639 x1643 1) (div x1643 2)))
(assert (x1390 x1585))
(assert (= x841 (and x377 x1611)))
(assert (= (and (not x1988) x1624) x298))
(assert (x1390 x1732))
(assert (= x802 (x1339 (x1331 x802))))
(assert (= (x1639 x1935 4) (div x1935 16)))
(assert (= (x1639 x1720 8) (div x1720 256)))
(assert (x1390 x1377))
(assert (= x582 (and x1026 (not x190))))
(assert (x1390 x144))
(assert (x1390 x836))
(assert (x1390 x541))
(assert (x1390 x276))
(assert (x1390 x1860))
(assert (x1390 x1094))
(assert (x1390 x1841))
(assert (= x1804 (=> (and (= (= x1494 0) x1736) (or (and (= x1963 0) x1736) (and (not x1736) (and (= x642 (x876 (x1491 10) 0)) (<= 0 x1687) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1687) (= (x1470 x642 x1132) x996) (= (x1056 (- x1494 1)) x1132) (= x1687 x1963) (= x1687 (x1939 x996)) (>= 26959946667150639794667015087019630673637144422540572481103610249215 x1687) (= 10 x1158))))) x982)))
(assert (= (and x1022 x910) x711))
(assert (x1390 x295))
(assert (x1390 x2000))
(assert (x1390 x457))
(assert (x1390 x101))
(assert (x1390 x1108))
(assert (x1390 x1348))
(assert (= (+ 1 (x1339 x118)) (x1339 (x1470 x118 1))))
(assert (= x892 (=> (and (= x322 x2003) (= 36 x798) (= x1 (x1056 (- x798 4))) (= (x1394 (+ x230 32)) x229) (= x536 (x1056 (- x229 x611))) (= (< 5 x666) x1670) (= x1593 (x1621 (x1331 x1877))) (= x705 9) (> x430 x2003) (not (= 0 x1593)) (< x1526 2726970035) (= 64376167055515759358535430384376588076944157367080998815916584977429396717568 x1613) (= (x1621 (x1331 x1877)) x2079) (= x499 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1) (and (< x1 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1) true)))) (not (< x1526 1633807128)) (not (< x798 4)) (> x2079 0) (not (< x1526 2387844748)) (= 2387844748 x1526) (= x230 (x1394 (+ 4 x611))) (= x536 x798) (not x499)) (and (=> (and (and (= x1032 x666) (= x1174 0)) (not x1670)) x1845) (=> (and x1670 (and (= (< 0 (x1639 x666 128)) x537) (or (and x537 (and (= x1072 (x1639 x666 128)) (= x1472 128))) (and (and (= x666 x1072) (= 0 x1472)) (not x537))))) x1640)))))
(assert (= (and x1988 x1624) x1070))
(assert (x1390 x889))
(assert (x1835 x562))
(assert (= (=> (and (or (and (and (= x173 x1454) (= x42 x905)) (not x519)) (and x519 (and (= x1874 x42) (= x1874 (x1394 (+ 64 x905))) (= x173 (x1639 x1454 64))))) (= (< 0 (x1639 x1454 64)) x519)) x2137) x1971))
(assert (= (div x339 18446744073709551616) (x1639 x339 64)))
(assert (= (x1639 x456 1) (div x456 2)))
(assert (x1390 x2133))
(assert (= (x1491 2306352607) (x1331 2306352607)))
(assert (x1390 x1082))
(assert (x1390 x220))
(assert (x1390 x829))
(assert (x1390 x1019))
(assert (x1390 x1980))
(assert (x1390 x1290))
(assert (x1390 x115))
(assert (x1390 x1173))
(assert (= (div x182 2) (x1639 x182 1)))
(assert (x1390 x309))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1339 (x1491 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1390 x1221))
(assert (x1390 x832))
(assert (=> (<= x1629 10000) (= (x1331 x1629) (x1491 x1629))))
(assert (x1390 x96))
(assert (= x1918 (or x782 x1134)))
(assert (x1390 x888))
(assert (x1390 x1881))
(assert (x1390 x234))
(assert (x1390 x834))
(assert (= x1666 (=> (= (not (> x1096 x1107)) x898) (and (=> (= x274 x1096) x1276) x898))))
(assert (x1358 x2052))
(assert (= x151 (and x1311 (not x1149))))
(assert (x1390 x95))
(assert (= x614 (or x582 x1455)))
(assert (x1390 x34))
(assert (x1390 x2037))
(assert (x1390 x1557))
(assert (x1390 x1404))
(assert (= (div x1454 18446744073709551616) (x1639 x1454 64)))
(assert (x1390 x1565))
(assert (x1390 x842))
(assert (x1390 x1818))
(assert (x1358 x1673))
(assert (= (x1491 1284264308) (x1331 1284264308)))
(assert (x1390 x1184))
(assert (x1390 x1413))
(assert (= (x1339 (x1470 x1198 x1445)) (+ x1445 (x1339 x1198))))
(assert (= (x1491 3223297591) (x1331 3223297591)))
(assert (x1390 x1132))
(assert (x1390 x718))
(assert (= x2050 (or x1411 x460)))
(assert (x1390 x255))
(assert (= (x1491 4294967295) (x1331 4294967295)))
(assert (x1390 x1472))
(assert (x1390 x2031))
(assert (= (x1331 1633807128) (x1491 1633807128)))
(assert (= x1190 (and x1093 x27)))
(assert (x1390 x1448))
(assert (x1452 x95))
(assert (x1390 x1402))
(assert (= x459 (x1339 (x1331 x459))))
(assert (x1390 x1195))
(assert (= (div x1101 2) (x1639 x1101 1)))
(assert (x1390 x1926))
(assert (x1452 x1998))
(assert (x1390 x251))
(assert (x1390 x1113))
(assert (= x1305 (or x560 x606)))
(assert (x1452 x194))
(assert (= (div x2005 2) (x1639 x2005 1)))
(assert (x1390 x1354))
(assert (= (and (not x18) x2132) x1523))
(assert (= (and x2 (not x1656)) x1744))
(assert (x1390 x1245))
(assert (= (x1331 3314571236) (x1491 3314571236)))
(assert (x1390 x1928))
(assert (= (and x1604 x1833) x909))
(assert (x1390 x621))
(assert (x1390 x937))
(assert (= (and x679 (not x1822)) x1863))
(assert (x528 x593 x518))
(assert (= (and x714 (not x1989)) x158))
(assert (x1390 x683))
(assert (= (=> (= (not (> x432 x875)) x1429) (and (=> (= x1494 x432) x1804) x1429)) x1615))
(assert (x1390 x166))
(assert (x1390 x1248))
(assert (x1390 x713))
(assert (x1390 x1236))
(assert (x1452 x1277))
(assert (= (and (not x1295) x690) x1560))
(assert (x1835 x1587))
(assert (x1390 x1987))
(assert (= (and x1646 x775) x1389))
(assert (x1390 x663))
(assert (= x2020 (and x1311 x1149)))
(assert (x1390 x1142))
(assert (= x1309 (and x1757 (not x369))))
(assert (= (or x1515 x1873) x696))
(assert (x1390 x32))
(assert (x1390 x1543))
(assert (= x993 (and x1942 x520)))
(assert (= (=> (and (= (> (x1639 x63 8) 0) x1787) (or (and (and (= x2055 x938) (= x63 x1009)) (not x1787)) (and (and (= x1009 (x1639 x63 8)) (= x1991 x2055) (= x1991 (x1394 (+ 8 x938)))) x1787))) x424) x1636))
(assert (= (div x665 4) (x1639 x665 2)))
(assert (x897 x1673 x358))
(assert (x1390 x111))
(assert (= (x1639 x1626 1) (div x1626 2)))
(assert (x1390 x873))
(assert (= (x1339 (x1470 x1004 x1864)) (+ x1864 (x1339 x1004))))
(assert (x1390 x1906))
(assert (= (+ (x1339 x314) x793) (x1339 (x1470 x314 x793))))
(assert (= (=> (= (not (< x255 x2109)) x282) (and x282 (=> (= x238 x2109) x112))) x1994))
(assert (= x59 (and x555 x1584)))
(assert (x1390 x724))
(assert (x1390 x447))
(assert (x1390 x617))
(assert (x1390 x374))
(assert (x1390 x1662))
(assert (= (x1639 x1272 1) (div x1272 2)))
(assert (= (div x2033 2) (x1639 x2033 1)))
(assert (= (or x1688 x155) x1220))
(assert (x1390 x805))
(assert (x1390 x688))
(assert (x1390 x1014))
(assert (= x436 (or x1224 x636)))
(assert (x1390 x1602))
(assert (x1390 x1977))
(assert (= x999 (or x1591 x174 x473)))
(assert (x1390 x757))
(assert (x1390 x1963))
(assert (x1390 x344))
(assert (= x1471 (and (not x2024) x200)))
(assert (x1390 x917))
(assert (x1390 x1692))
(assert (x1390 x1263))
(assert (= (and (not x519) x2050) x1750))
(assert (= x850 (and x679 x1822)))
(assert (x1358 x366))
(assert (= x498 (or x572 x744)))
(assert (= (or x1081 x1309) x1960))
(assert (= (and (not x813) x1900) x1796))
(assert (= (and x467 x1461) x848))
(assert (= x987 (and (not x383) x1378)))
(assert (x1390 x998))
(assert (= 2306352607 (x1339 (x1491 2306352607))))
(assert (x1390 x1156))
(assert (= (x1339 (x1470 x1665 2)) (+ 2 (x1339 x1665))))
(assert (= x1810 (and x1117 (not x132))))
(assert (= (div x1003 2) (x1639 x1003 1)))
(assert (= (or x1218 x1749) x1267))
(assert (x1390 x149))
(assert (x1390 x1904))
(assert (= (x1491 761525907) (x1331 761525907)))
(assert (= (x1639 x799 1) (div x799 2)))
(assert (x1390 x1303))
(assert (x1390 x1635))
(assert (x1390 x1610))
(assert (x1390 x533))
(assert (= (=> (and (= x847 (< 0 (x1639 x1484 32))) (or (and (and (= x884 x1415) (= x884 (x1394 (+ x733 32))) (= x722 (x1639 x1484 32))) x847) (and (and (= x722 x1484) (= x733 x1415)) (not x847)))) x2119) x568))
(assert (x1390 x957))
(assert (x1390 x811))
(assert (x1390 x1877))
(assert (= (x1491 3567836568) (x1331 3567836568)))
(assert (= (=> (and (or (and (and (= x1590 x372) (= x1555 x1668)) (not x555)) (and (and (= x1668 x1669) (= (x1394 (+ x1555 32)) x1669) (= x1590 (x1639 x372 32))) x555)) (= (< 0 (x1639 x372 32)) x555)) x1307) x119))
(assert (= x980 (and x791 x804)))
(assert (x1390 x1530))
(assert (x1390 x2092))
(assert (x1390 x1372))
(assert (x1390 x1948))
(assert (x1390 x2079))
(assert (x1390 x68))
(assert (x1390 x1569))
(assert (= x2087 (=> (and (= x1148 (> (x1639 x428 4) 0)) (or (and (and (= x1883 x1085) (= x1037 (x1639 x428 4)) (= (x1394 (+ x490 4)) x1085)) x1148) (and (not x1148) (and (= x428 x1037) (= x1883 x490))))) x592)))
(assert (= (and x1829 (not x2012)) x258))
(assert (= (or x186 x1575) x2142))
(assert (x1390 x490))
(assert (x1390 x2147))
(assert (x1390 x1992))
(assert (x1390 x780))
(assert (x1390 x426))
(assert (x1390 x370))
(assert (= x1570 (and x1436 x1690)))
(assert (x1390 x1109))
(assert (x1390 x1266))
(assert (= (x1331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1491 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1390 x669))
(assert (x1390 x386))
(assert (x1390 x300))
(assert (x1390 x145))
(assert (x1390 x1808))
(assert (= (x1331 419023261) (x1491 419023261)))
(assert (x1390 x1521))
(assert (=> (<= x1909 10000) (= (x1331 x1909) (x1491 x1909))))
(assert (x1390 x318))
(assert (= x1975 (or x363 x823 x759)))
(assert (x1390 x1281))
(assert (= x1966 (and (not x2089) x1163)))
(assert (x1390 x401))
(assert (x1390 x1492))
(assert (= 18446744073709551615 (x1339 (x1491 18446744073709551615))))
(assert (= (div x551 2) (x1639 x551 1)))
(assert (= (x283 1 (x1639 x915 1)) (mod (ite (< (x1639 x915 1) 256) (x1349 2 (x1639 x915 1)) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (div x332 2) (x1639 x332 1)))
(assert (x1390 x238))
(assert (= x1204 (and x1024 (not x1532))))
(assert (= x620 (=> (and (= x101 x1174) (= x1032 x245)) x1845)))
(assert (= x28 (=> (and (and (= (x1394 (+ 128 x830)) x1077) (= x623 (and x195 x1068)) (not (= 117300739 x1487)) (not (> 116652518 x1487)) (not (= 116652518 x1487)) (= x246 x179) (= (x1394 (+ 32 x924)) x1133) (not (> x930 18446744073709551615)) (= x455 x2124) (or (and (= (<= x1729 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2120 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1729 x2120)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2120) (<= x1729 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x179 1461501637330902918203684832716283019655932542975) (= x1362 (x1394 (+ x1815 4))) (= (= x176 32) x250) x789 (= x349 x1077) (= x1815 x1947) (>= 1461501637330902918203684832716283019655932542975 x1078) (= x682 x653) (= (x1394 (+ x930 31)) x893) (= (< x1077 128) x872) (= x1632 x1020) (= x930 (x133 x1362)) (= 9518847204935358166548570266051330015907116135037852959641967396525866745856 x1103) (= 0 x951) (not (< 18446744073709551615 x1947)) (and (= true (<= x1729 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1729 131)) (not (or (> x1419 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1419 128) (= true (<= x1419 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (not (= 0 x1732)) x396) (= x674 128) (= x333 (x1394 (+ x930 160))) (= x924 (x947 115792089237316195423570985008687907853269984665640564039457584007913129639904 x893)) (= x141 (x1621 (x1331 x95))) (<= 0 x1078) (= x195 x396) (< 0 x141) (= (x1394 (+ x930 x408)) x1828) (<= 0 x682) (= (x1394 (+ 31 x1133)) x1958) (= (or x872 x219) x209) (> 1813000879 x1487) (= x1884 x179) (= (x1394 (+ x1362 31)) x2120) (= (or x623 x1868) x1189) (= (< 18446744073709551615 x1077) x219) (< x1487 369934039) (not (< x1729 x1828)) (>= 1461501637330902918203684832716283019655932542975 x682) (not (= 340724530 x1487)) (= x933 x1020) (= 353073666 x1487) (= x789 (or x1189 (not x630))) (= x408 (x1394 (+ x1362 32))) (= 32 x176) (= 0 x77) (not (< x1729 4)) (= (ite (= 0 x349) x267 (ite (= 32 x349) x825 (ite (= x349 64) x1077 (x31 x349)))) x1265) (> 850923838 x1487) (<= x998 1461501637330902918203684832716283019655932542975) (= (x947 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1958) x830) (= x2042 x951) (>= x998 0) (= x2046 x1354) (= x1354 x998) (>= 1461501637330902918203684832716283019655932542975 x2124) (= (x1056 (- x1729 4)) x1419) (= (ite x209 1 0) x77) (= x546 x2124)) (and (= x205 (not x1594)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1841 x344)) (= x1594 (not (> x476 x1930))) (= (not x205) x2075) (= x412 (* x1841 x344)) (= x1841 (x1836 x586)) (= (div x412 100) x476) (= x1732 (ite x2075 1 0)))) (and x250 (=> (and (= (x1056 (- x663 4)) x2041) (= x83 0) (not (< x1817 2103345634)) (= 0 x1715) (= 2387844748 x1284) (< x1284 2726970035) (not (> 1633807128 x1284)) (= x1817 2387844748) (= (x1621 (x1331 x95)) x946) (not x2138) (= 36 x663) (= x1690 (> x666 5)) (> 2546193204 x1817) (not (< x1817 1813000879)) (not (= x1817 2306352607)) (= x130 64376167055515759358535430384376588076944157367080998815916584977429396717568) (= x2138 (or (and (> 32 x2041) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2041) true)) (> x2041 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 3223297591 x1817) (= 36 x663) (= x347 9) (< 0 x1485) (not (< x1284 2387844748)) (not (= 0 x609)) (= x609 (x1621 (x1331 x1877))) (> x946 0) (= x1485 (x1621 (x1331 x1877))) (= x1978 128) (not (= 2373169201 x1817)) (= x1718 0) (not (= x1817 2103345634)) (> x973 0) (not (> 4 x663))) (and (=> (and (and (= x666 x166) (= 0 x1426)) (not x1690)) x1693) (=> (and x1690 (and (= x60 (> (x1639 x666 128) 0)) (or (and (and (= x266 (x1639 x666 128)) (= 128 x1059)) x60) (and (not x60) (and (= x666 x266) (= x1059 0)))))) x180)))))))
(assert (x1390 x1076))
(assert (= (and x383 x1378) x91))
(assert (x1390 x1133))
(assert (x1452 x1819))
(assert (x1390 x1864))
(assert (x1390 x1479))
(assert (x1390 x1077))
(assert (= x1588 (=> (and (or (and x959 (and (= x1780 (x1639 x2147 16)) (= x164 x1289) (= x164 (x1394 (+ x161 16))))) (and (not x959) (and (= x2147 x1780) (= x1289 x161)))) (= x959 (> (x1639 x2147 16) 0))) x756)))
(assert (x1390 x105))
(assert (x1390 x608))
(assert (x1390 x395))
(assert (x1390 x1251))
(assert (= x1365 (and x1989 x714)))
(assert (x1390 x1167))
(assert (= (x1331 2726970035) (x1491 2726970035)))
(assert (= 643179133 (x1339 (x1491 643179133))))
(assert (= 64376167055515759358535430384376588076944157367080998815916584977429396717568 (x1339 (x1491 64376167055515759358535430384376588076944157367080998815916584977429396717568))))
(assert (= (and x436 (not x2112)) x866))
(assert (= (or x1672 x1459 x113) x1247))
(assert (= x17 (and x317 (not x534))))
(assert (= (or x575 x993) x564))
(assert (x1390 x410))
(assert (x1390 x1985))
(assert (= (x1331 18446744073709551616) (x1491 18446744073709551616)))
(assert (x1390 x1892))
(assert (x1390 x732))
(assert (= (+ 1 (x1339 x689)) (x1339 (x1470 x689 1))))
(assert (x1390 x1945))
(assert (= x374 (x1339 (x1331 x374))))
(assert (x1390 x1747))
(assert (x1390 x1318))
(assert (x1390 x1335))
(assert (x1390 x902))
(assert (x1358 x518))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 (x1339 (x1491 115792089237316195423570985008687907853269984665640564039457584007913129639934))))
(assert (= x1459 (and (not x1501) x303)))
(assert (= (or x98 x1754) x1757))
(assert (x1390 x2054))
(assert (x1390 x1738))
(assert (= (div x1366 4) (x1639 x1366 2)))
(assert (x1390 x649))
(assert (x1390 x2095))
(assert (x1390 x1009))
(assert (x1390 x2149))
(assert (x1390 x989))
(assert (= (div x2071 2) (x1639 x2071 1)))
(assert (= x475 (and (not x1327) x507)))
(assert (x1390 x1675))
(assert (= x979 (=> (and (= x1646 (> (x1639 x373 2) 0)) (or (and (not x1646) (and (= x116 x1407) (= x373 x431))) (and x1646 (and (= (x1394 (+ 2 x116)) x323) (= x431 (x1639 x373 2)) (= x323 x1407))))) x1717)))
(assert (x1358 x162))
(assert (x1390 x2099))
(assert (x1390 x1668))
(assert (x1390 x77))
(assert (= x47 (=> (and (or (and (not x809) (and (= x706 (> x2025 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (= x621 x1567) (= x440 x666) (not x706) (= x621 (x1394 (+ x2025 1))))) (and x809 (and (= x440 x2025) (= x1567 0)))) (and (= x289 (x1394 (+ x1843 x74))) (= x1370 (x283 1 (x1639 x799 1))) (> 4294967296 x917) (= x1041 (x1394 (+ x1082 x1363))) (= x608 (div x666 x1986)) (= (x1639 x1041 1) x1675) (= (x1394 (+ x1675 x405)) x1479) (= x654 (x1394 (+ x1042 x1370))) (< 0 x1986) (> x595 0) (not x308) (= (x876 (x1491 9) 0) x1805) (= (x1394 (+ x1144 x149)) x994) (> x1675 0) (= (div x666 x1843) x74) (= x595 (x1639 x1479 1)) (>= 4294967295 x917) (= x1986 (x1639 x1343 1)) (= (x1639 x1617 1) x1363) (= x1042 (div x666 x1370)) (= x342 (ite (> x608 x1986) x1986 x608)) (>= x917 0) (= (x1639 x994 1) x1843) (< 0 x1363) (= x1343 (x1394 (+ x595 x954))) (= x1992 (x1639 x1839 1)) (= x2025 (x1056 (- x666 x342))) (= (div x666 x1345) x35) (= x1144 (div x666 x149)) (= (ite (> x1992 0) (x1394 (+ 1 x111)) x111) x799) (= x1345 (x1639 x289 1)) (= x954 (div x666 x595)) (= x149 (x1639 x654 1)) (= (div x666 x1363) x1082) (< 0 x1843) (> x1345 0) (= x1617 (x1394 (+ x35 x1345))) (> x149 0) (= x917 (x740 x1213)) (= (div x666 x1675) x405) (= x308 (< x666 x342)) (= (x1470 x1805 x2025) x1213) (= (> x917 0) x809))) x1055)))
(assert (= (x1339 (x1470 x916 x2139)) (+ (x1339 x916) x2139)))
(assert (x1390 x1691))
(assert (= (div x2147 65536) (x1639 x2147 16)))
(assert (= (x1339 (x1331 x1335)) x1335))
(assert (x1390 x1974))
(assert (= x1411 (and (not x39) x742)))
(assert (x1390 x1017))
(assert (x1390 x1622))
(assert (x1390 x1941))
(assert (x1390 x1316))
(assert (= (or x93 x2051) x687))
(assert (x1390 x75))
(assert (x1390 x1574))
(assert (= (and x223 x1995) x844))
(assert (x1390 x451))
(assert (= (=> (and (= x632 x236) (= x562 x1565)) x2032) x1648))
(assert (x1390 x36))
(assert (x1390 x547))
(assert (x1390 x1036))
(assert (= (and x1649 (not x1460)) x93))
(assert (x1390 x901))
(assert (= (x283 1 (x1639 x799 1)) (mod (ite (> 256 (x1639 x799 1)) (x1349 2 (x1639 x799 1)) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1390 x2081))
(assert (= (=> (and (and (= x494 x194) (<= 0 x2018) (>= 1461501637330902918203684832716283019655932542975 x413) (not (< x1127 584786547)) (= x1533 x1747) (<= x95 1461501637330902918203684832716283019655932542975) (= 4 x1659) (>= x413 0) (= (< 0 (x1621 (x1331 x95))) x646) (< x1127 850923838) (<= x1877 1461501637330902918203684832716283019655932542975) (not (= 584786547 x1127)) (= (x574 (x1331 x1877)) x713) (<= 0 x361) (>= x1184 0) (not (= x95 x1877)) (>= 1461501637330902918203684832716283019655932542975 x1747) (= x1561 x653) (>= x427 0) (>= x713 0) (<= x427 18446744073709551615) (= (x574 (x1331 x95)) x2018) (>= x1848 0) (> x854 0) (<= x361 340282366920938463463374607431768211455) (< x1127 1813000879) (= x1034 false) (= false x1830) (> x95 0) (< x1184 18446744073709551616) (<= 0 x651) (= 353073666 x1579) (not (= x1127 643179133)) (<= x1136 1461501637330902918203684832716283019655932542975) (<= x1561 1461501637330902918203684832716283019655932542975) (= x1211 (x167 (x1331 x194) (x1491 1) 0)) (>= 340282366920938463463374607431768211455 x1848) (<= 0 x1136) (= x626 128) (= x761 false) (= x1184 x548) (> x1877 0) x646 (= false x1919) (not (> 369934039 x1127)) (>= 1461501637330902918203684832716283019655932542975 x651) (= 761525907 x1127) (= x1184 (x1582 x1211)) (<= x1184 18446744073709551615) (<= 0 x1561) (= x651 x1300) x1089 (= x854 (x1621 (x1331 x95))) (= (< 0 (x1621 (x1331 x1877))) x1089) (= x413 x2082) (<= 0 x1747)) (and (and (= 128 x1642) (= 3223297591 x1091) (= 0 x435) (> x1768 0) (= x1076 160) (< x1091 3567836568) (= x494 x1629) (= x1768 (x1621 (x1331 x95))) (= (> x447 0) x360) (not (< x1091 1813000879)) (< x770 18446744073709551616) (>= x1143 0) (= (x1470 x328 1) x270) (<= x770 18446744073709551615) (= (ite (> x770 x1143) x770 x1143) x812) (< x1143 18446744073709551616) (= x1143 (x2011 x1774)) (<= x1143 18446744073709551615) (>= x770 0) (= x1184 x447) (> 3314571236 x1091) (= (x167 (x1331 x1629) (x1491 8) 0) x1774) (= x812 x764) (not (> 3223297591 x1091)) (= (x167 (x1331 x1629) (x1491 1) 0) x328) (= (x1779 x270) x770)) (and (and (= x2084 128) (< x1458 2726970035) (not (> 2103345634 x2141)) (= 0 x73) (= x1542 (< 5 x666)) (< 0 x1904) (not x1098) (= (x1621 (x1331 x1877)) x1904) (= 0 x1511) (= x1183 (+ x117 1)) (not (> 4 x1921)) (= x1458 2387844748) x1676 (= x286 64376167055515759358535430384376588076944157367080998815916584977429396717568) (= (x1621 (x1331 x95)) x828) x2040 (= 2387844748 x2141) (< x2141 3223297591) (= x1401 x446) (= x2106 9) (< 0 x828) (= (x1621 (x1331 x1877)) x1890) (= (<= x1401 x288) x1676) (not (> 2387844748 x1458)) (not (= x2141 2373169201)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1183) x2040) (= x117 x1142) (= 36 x1921) (> 2546193204 x2141) (= 36 x1921) (not (> 1633807128 x1458)) (not (= x2141 2103345634)) (not (= 2306352607 x2141)) (= 1 x211) (not (= 0 x1890)) (= 0 x628) (= (x1056 (- x1921 4)) x394) (not (< x2141 1813000879)) (= x1098 (or (and (< x394 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x394) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x394))) (> x1008 0) (= x1114 x288)) (and (= x2046 x815) (= x2092 x1924) (= x1970 x1227) (= x1853 x1111) (= x720 x2065) (not (> 369934039 x1249)) (= x2072 x393) (not (= 369934039 x1249)) (< x1249 584786547) (= x1112 x388) (= x1533 x1031) (= x227 0) (= 496069280 x1249) (not (= x1249 419023261)) (= x2082 x306) (= x389 x2042) (= x1294 x2053) (= x1142 x664) x44 (= x1114 x1862) (< x1249 850923838) (= (> x1248 0) x1483) (= x1781 x1251) (= x926 x1300) (> x610 0) (= x1240 x653) (= (x1621 (x1331 x95)) x610) (< x1249 1813000879) (= (and x360 x1483) x44) (= x1248 x764) (= x1110 x718) (= x346 x446) (= x1402 x640))))) (and (=> (and x1542 (and (or (and x175 (and (= 128 x21) (= x415 (x1639 x666 128)))) (and (and (= x415 x666) (= x21 0)) (not x175))) (= (> (x1639 x666 128) 0) x175))) x968) (=> (and (and (= x593 0) (= x666 x518)) (not x1542)) x591))) x253))
(assert (x1390 x148))
(assert (x1390 x1632))
(assert (x1390 x2036))
(assert (x1390 x92))
(assert (x1390 x273))
(assert (= x800 (and (not x1153) x4)))
(assert (= (x1639 x594 4) (div x594 16)))
(assert (x1390 x1659))
(assert (x1390 x289))
(assert (x1390 x1233))
(assert (x1390 x1000))
(assert (x1390 x435))
(assert (=> (<= x194 10000) (= (x1331 x194) (x1491 x194))))
(assert (x1390 x1111))
(assert (= (x1639 x2095 2) (div x2095 4)))
(assert (= x507 (or x976 x985 x1471)))
(assert (x1390 x1343))
(assert (x1452 x72))
(assert (= (x1339 (x1331 x1819)) x1819))
(assert (x1390 x1243))
(assert (= x643 (x1339 (x1331 x643))))
(assert (x1390 x1956))
(assert (= 3223297591 (x1339 (x1491 3223297591))))
(assert (x1390 x644))
(assert (= 117300739 (x1339 (x1491 117300739))))
(assert (x1390 x2056))
(assert (x1390 x1329))
(assert (x1390 x453))
(assert (= (=> (and (= x1776 (< 0 (x1639 x2140 32))) (or (and (and (= (x1394 (+ 32 x1319)) x1351) (= x644 x1351) (= (x1639 x2140 32) x506)) x1776) (and (not x1776) (and (= x2140 x506) (= x1319 x644))))) x539) x201))
(assert (x1390 x1848))
(assert (x1390 x1623))
(assert (= x1336 (or x1190 x192)))
(assert (x1390 x1271))
(assert (x1390 x366))
(assert (x1390 x880))
(assert (x1390 x586))
(assert (= (=> (= x1510 (> x358 x1673)) (and (=> (and (and (or (and (not x1531) (and (= x358 x2109) (not x1663) (= (x1394 (+ 1 x2133)) x2086) (= x2086 x255) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2133) x1663))) (and x1531 (and (= x2133 x2109) (= x255 x1673)))) (and (= x1023 (x876 (x1491 9) 0)) (= x1531 (< x2037 x1622)) (= x2008 (x1470 x1023 x2133)) (= x2133 (+ x1563 x978)) (= x1622 (x740 x2008)) (>= 4294967295 x1622) (= x8 (x947 x1673 x358)) (= x8 x1563) (>= x1622 0) (= x978 x563) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x8 x563)) (< x1622 4294967296) (= x563 (div (x1879 x1673 x358) 2)))) x1510) x1994) (=> (and (not x1510) (= x238 x358)) x112))) x1397))
(assert (x1390 x246))
(assert (x1390 x1613))
(assert (x1390 x2141))
(assert (= (and x806 x1267) x1608))
(assert (x1390 x994))
(assert (= (or x781 x1386) x929))
(assert (= x1074 (=> (and (= (= x1820 0) x1949) (or (and (= x1375 0) x1949) (and (and (= (x1470 x480 x1964) x2007) (= (x876 (x1491 9) 0) x480) (= x1318 (x1931 x2007)) (>= x1318 0) (= x1318 x1375) (>= 26959946667150639794667015087019630673637144422540572481103610249215 x1318) (= (x1056 (- x1820 1)) x1964) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1318)) (not x1949)))) x28)))
(assert (= (and x2050 x519) x752))
(assert (= (and x1620 (not x1776)) x538))
(assert (x1835 x366))
(assert (x1390 x1862))
(assert (= x1215 (=> (and (= (> x666 5) x753) (= x444 (x1056 (- x1808 x902))) (not (< x2066 1633807128)) (= x177 (x1621 (x1331 x1877))) (not (< x1578 4)) (= (or (and (= true (<= x457 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x457 32)) (> x457 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1425) (= x444 x1578) (= x1540 x1427) (= x751 (x1394 (+ 4 x902))) (= 9 x1544) (= x1535 (x1621 (x1331 x1877))) (= x701 64376167055515759358535430384376588076944157367080998815916584977429396717568) (< x1427 x962) (> x177 0) (= x1578 36) (not (= 0 x1535)) (not (> 2387844748 x2066)) (= x1808 (x1394 (+ 32 x751))) (not x1425) (= x2066 2387844748) (= x457 (x1056 (- x1578 4))) (> 2726970035 x2066)) (and (=> (and (and (= x2052 x666) (= x1443 0)) (not x753)) x908) (=> (and x753 (and (or (and x39 (and (= 128 x905) (= (x1639 x666 128) x1454))) (and (not x39) (and (= x666 x1454) (= 0 x905)))) (= x39 (< 0 (x1639 x666 128))))) x1971)))))
(assert (= x600 (and x434 x809)))
(assert (= x1225 (or x612 x953)))
(assert (= x2044 (and (not x779) x647)))
(assert (x1390 x171))
(assert (= (x1339 (x1470 x1704 2)) (+ (x1339 x1704) 2)))
(assert (= (x1339 (x1491 4294967295)) 4294967295))
(assert (x1390 x1716))
(assert (x1390 x768))
(assert (x1390 x2062))
(assert (x1390 x349))
(assert (= (or x844 x1152) x827))
(assert (= (x1339 (x1470 x118 2)) (+ 2 (x1339 x118))))
(assert (x1390 x1762))
(assert (x1390 x1482))
(assert (= (and x1398 (not x1324)) x1651))
(assert (x1390 x89))
(assert (x1390 x23))
(assert (= x172 (and (not x1510) x278)))
(assert (x1390 x799))
(assert (= (+ (x1339 x2014) x1661) (x1339 (x1470 x2014 x1661))))
(assert (x1390 x1771))
(assert (= (div x777 2) (x1639 x777 1)))
(assert (x1390 x720))
(assert (x1390 x1725))
(assert (x1390 x1170))
(assert (= (x1339 (x1470 x1549 x975)) (+ (x1339 x1549) x975)))
(assert (x1390 x1484))
(assert (= x191 (or x1777 x515)))
(assert (x1390 x1287))
(assert (x1390 x970))
(assert (= 3361977486 (x1339 (x1491 3361977486))))
(assert (= (and (not x357) x2057) x387))
(assert (x1390 x367))
(assert (x1390 x788))
(assert (x1390 x924))
(assert (= x1821 (and x868 x1165)))
(assert (= x1201 (and x1564 x537)))
(assert (= (or x1763 x1160) x985))
(assert (= x631 (and (not x377) x1611)))
(assert (x1390 x1353))
(assert (= x965 (and x565 (not x728))))
(assert (= (and (not x1889) x816) x823))
(assert (x1390 x74))
(assert (x1835 x162))
(assert (= (and x369 x1757) x1081))
(assert (x1390 x1929))
(assert (x1390 x1856))
(assert (= (and x215 x375) x513))
(assert (x1390 x1012))
(assert (x1390 x1120))
(assert (x1390 x1186))
(assert (x1390 x1536))
(assert (x1390 x1883))
(assert (= x354 (and x827 (not x484))))
(assert (x1390 x2065))
(assert (= (x1639 x1044 1) (div x1044 2)))
(assert (x1390 x610))
(assert (x1390 x777))
(assert (x1390 x1547))
(assert (=> (>= 10000 x1277) (= (x1331 x1277) (x1491 x1277))))
(assert (= (=> (and (or (and (and (= x1079 x400) (= x794 (x1639 x1037 2)) (= (x1394 (+ 2 x1883)) x1079)) x549) (and (and (= x1883 x400) (= x794 x1037)) (not x549))) (= x549 (> (x1639 x1037 2) 0))) x694) x592))
(assert (x1390 x67))
(assert (= (+ x350 (x1339 x734)) (x1339 (x1470 x734 x350))))
(assert (= x1981 (and (not x846) x1185)))
(assert (= (x1331 115792089237316195423570985008687907853269984665640564039457584007913129639934) (x1491 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x1390 x945))
(assert (= x1176 (and x1105 x1247)))
(assert (x1390 x1489))
(assert (= x2043 (and x1391 x185)))
(assert (= (x1639 x199 1) (div x199 2)))
(assert (x1390 x1667))
(assert (x1390 x97))
(assert (= (and x837 x818) x744))
(assert (= (and x1814 (not x959)) x1937))
(assert (x1390 x510))
(assert (= x203 (=> (and (= 64376167055515759358535430384376588076944157367080998815916584977429396717568 x37) (not (= x1186 0)) (= x510 x2037) (= 36 x1886) (< x747 2726970035) (not (> 1633807128 x747)) (= x1287 9) (= x1790 (x1621 (x1331 x1877))) (> x1790 0) (not (> 2387844748 x747)) (= x747 2387844748) (= (or (> x1710 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1710) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1710) true))) x1657) (= (< 5 x666) x1327) (not (> 4 x1886)) (= (x1621 (x1331 x1877)) x1186) (= x1926 x1886) (< x510 x2006) (= x1045 (x1394 (+ 4 x2098))) (not x1657) (= (x1056 (- x1886 4)) x1710) (= x45 (x1394 (+ 32 x1045))) (= x1926 (x1056 (- x45 x2098)))) (and (=> (and x1327 (and (or (and (not x1989) (and (= x666 x1380) (= 0 x48))) (and (and (= x1380 (x1639 x666 128)) (= x48 128)) x1989)) (= x1989 (< 0 (x1639 x666 128))))) x810) (=> (and (and (= x1673 0) (= x666 x358)) (not x1327)) x1397)))))
(assert (x1390 x857))
(assert (x1390 x1540))
(assert (= x1998 (x1339 (x1331 x1998))))
(assert (x1390 x551))
(assert (= (or x848 x673) x1900))
(assert (x1390 x1001))
(assert (= 0 (x552 x349)))
(assert (= (x1331 116652518) (x1491 116652518)))
(assert (x1390 x1313))
(assert (x1390 x2045))
(assert (= (x1491 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1331 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1390 x1091))
(assert (x1390 x444))
(assert (x1390 x117))
(assert (x1390 x1961))
(assert (= (and x677 (not x1566)) x681))
(assert (= (x1491 340282366920938463463374607431768211455) (x1331 340282366920938463463374607431768211455)))
(assert (= x1772 (or x1560 x1368)))
(assert (= (x1639 x1125 1) (div x1125 2)))
(assert (= (x1639 x1130 1) (div x1130 2)))
(assert (= (x283 1 (x1639 x1332 1)) (mod (ite (> 256 (x1639 x1332 1)) (x1349 2 (x1639 x1332 1)) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1390 x1526))
(assert (x1390 x1369))
(assert (x1390 x1955))
(assert (= (x1339 (x1491 340724530)) 340724530))
(assert (x1390 x729))
(assert (= (div x1343 2) (x1639 x1343 1)))
(assert (x1390 x701))
(assert (= x690 (or x504 x378)))
(assert (x1390 x911))
(assert (x1390 x491))
(assert (x1390 x1720))
(assert (= x1914 (or x1556 x206)))
(assert (x1835 x518))
(assert (= x708 (=> (and (or (and (not x2112) (and (= x339 x379) (= x252 x1633))) (and (and (= x901 (x1394 (+ 64 x1633))) (= x901 x252) (= x379 (x1639 x339 64))) x2112)) (= (> (x1639 x339 64) 0) x2112)) x792)))
(assert (=> (>= 10000 x459) (= (x1491 x459) (x1331 x459))))
(assert (= x1398 (or x1698 x2143)))
(assert (= (and x1893 x280) x1568))
(assert (x1390 x1930))
(assert (= (div x415 18446744073709551616) (x1639 x415 64)))
(assert (x1390 x194))
(assert (x1390 x1206))
(assert (= x1749 (and x999 (not x753))))
(assert (x1390 x1950))
(assert (x1390 x1340))
(assert (= (+ x1191 (x1339 x1018)) (x1339 (x1470 x1018 x1191))))
(assert (x1390 x1476))
(assert (x1390 x339))
(assert (= (x1639 x1956 32) (div x1956 4294967296)))
(assert (= (+ (x1339 x739) x2130) (x1339 (x1470 x739 x2130))))
(assert (x1390 x676))
(assert (x1358 x1545))
(assert (= (x1339 (x1470 x526 x937)) (+ x937 (x1339 x526))))
(assert (x528 x1174 x1032))
(assert (x1390 x140))
(assert (x1390 x333))
(assert (= (x1491 2103345634) (x1331 2103345634)))
(assert (= x186 (or x184 x1851)))
(assert (x1390 x913))
(assert (x1390 x161))
(assert (x1390 x733))
(assert (= x326 (=> (and (or (and x215 (and (= x1299 (x1394 (+ 16 x321))) (= (x1639 x249 16) x934) (= x1299 x625))) (and (and (= x625 x321) (= x249 x934)) (not x215))) (= x215 (< 0 (x1639 x249 16)))) x1625)))
(assert (x1390 x169))
(assert (x1390 x883))
(assert (x1390 x819))
(assert (= x1117 (or x406 x771)))
(assert (x1390 x1721))
(assert (x1390 x859))
(assert (x1390 x849))
(assert (x1390 x588))
(assert (= x1165 (or x1119 x1651)))
(assert (x1390 x1029))
(assert (= x1420 (or x1769 x1500)))
(assert (x1390 x1298))
(assert (x1390 x1718))
(assert (x1390 x912))
(assert (= (x1639 x1281 1) (div x1281 2)))
(assert (= (=> (and (= (< 0 (x1639 x173 32)) x40) (or (and (and (= (x1394 (+ 32 x42)) x1719) (= x1719 x2031) (= (x1639 x173 32) x811)) x40) (and (and (= x811 x173) (= x42 x2031)) (not x40)))) x454) x2137))
(assert (= (or x1546 x359) x2019))
(assert (x1390 x2046))
(assert (= (+ (x1339 x2135) 1) (x1339 (x1470 x2135 1))))
(assert (x1390 x1486))
(assert (x1390 x826))
(assert (x1390 x1587))
(assert (x1390 x1609))
(assert (x1390 x593))
(assert (x1452 x374))
(assert (= (x1639 x807 1) (div x807 2)))
(assert (x1390 x933))
(assert (x1452 x1498))
(assert (x1390 x653))
(assert (= (and x294 x1148) x1134))
(assert (= (div x1170 16) (x1639 x1170 4)))
(assert (= x317 (and x1846 x648)))
(assert (x1390 x727))
(assert (x1390 x1952))
(assert (x897 x1587 x1545))
(assert (= (or x59 x1583) x385))
(assert (x1390 x1203))
(assert (=> (>= 10000 x1819) (= (x1331 x1819) (x1491 x1819))))
(assert (x1390 x1637))
(assert (x1452 x1629))
(assert (x1390 x1449))
(assert (= (or x403 x675) x1065))
(assert (x1390 x628))
(assert (x1390 x1788))
(assert (= (and x767 x597) x174))
(assert (x1390 x2130))
(assert (x1390 x1345))
(assert (x1390 x1990))
(assert (= (x1491 64376167055515759358535430384376588076944157367080998815916584977429396717568) (x1331 64376167055515759358535430384376588076944157367080998815916584977429396717568)))
(assert (= (div x1789 2) (x1639 x1789 1)))
(assert (x1390 x920))
(assert (x1390 x1381))
(assert (= x904 (and (not x2038) x2142)))
(assert (= (=> (and (= x467 (> (x1639 x1170 4) 0)) (or (and (and (= x2062 (x1394 (+ 4 x1049))) (= x923 (x1639 x1170 4)) (= x2062 x33)) x467) (and (and (= x33 x1049) (= x1170 x923)) (not x467)))) x852) x122))
(assert (x1390 x2105))
(assert (= x1200 (and (not x1474) x1831)))
(assert (= (x1639 x109 1) (div x109 2)))
(assert (x1390 x2041))
(assert (= (or x627 x2085) x678))
(assert (= x1584 (or x1433 x1966)))
(assert (x1390 x915))
(assert (= (and x1214 x337) x363))
(assert (x1390 x123))
(assert (x1390 x2086))
(assert (x1390 x1682))
(assert (x1390 x1086))
(assert (= x437 (and x1024 x1532)))
(assert (= (x1639 x78 1) (div x78 2)))
(assert (= (or x752 x1750) x2113))
(assert (x1390 x1067))
(assert (x1390 x446))
(assert (x1390 x346))
(assert (x1390 x1304))
(assert (= (x1639 x289 1) (div x289 2)))
(assert (= (or x971 x235) x1409))
(assert (= x493 (and x1814 x959)))
(assert (x1452 x1440))
(assert (= x1902 (or x1932 x1039)))
(assert (x1390 x1003))
(assert (x1390 x146))
(assert (= x1229 (or x596 x1200)))
(assert (x1390 x1816))
(assert (x1390 x416))
(assert (x1390 x865))
(assert (x1452 x1157))
(assert (x1390 x277))
(assert (= (x1339 (x1331 x1277)) x1277))
(assert (x1390 x1983))
(assert (x1390 x2049))
(assert (x1358 x562))
(assert (x1390 x413))
(assert (x1390 x1696))
(assert (x1390 x1264))
(assert (= x1680 (and x1570 (not x60))))
(assert (= x1093 (or x678 x1475)))
(assert (x1390 x1249))
(assert (x1390 x1493))
(assert (= (div x915 2) (x1639 x915 1)))
(assert (x1390 x831))
(assert (x1390 x1524))
(assert (= (x1639 x34 64) (div x34 18446744073709551616)))
(assert (x1390 x1141))
(assert (x1390 x353))
(assert (= (x1491 9518847204935358166548570266051330015907116135037852959641967396525866745856) (x1331 9518847204935358166548570266051330015907116135037852959641967396525866745856)))
(assert (= (and x1620 x1776) x1073))
(assert (x1390 x2029))
(assert (x1390 x855))
(assert (x1390 x1138))
(assert (x1390 x1272))
(assert (x1390 x1439))
(assert (= (x1639 x1479 1) (div x1479 2)))
(assert (= (div x106 2) (x1639 x106 1)))
(assert (= (x1639 x2131 1) (div x2131 2)))
(assert (= (div x2074 65536) (x1639 x2074 16)))
(assert (= (and x687 (not x919)) x483))
(assert (x1390 x230))
(assert (x1390 x795))
(assert (and (= (x1349 2 121) 2658455991569831745807614120560689152) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x1349 2 244)) (= 6582018229284824168619876730229402019930943462534319453394436096 (x1349 2 212)) (= (x1349 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x1349 2 232)) (= 401734511064747568885490523085290650630550748445698208825344 (x1349 2 198)) (= 191561942608236107294793378393788647952342390272950272 (x1349 2 177)) (= (x1349 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= 1125899906842624 (x1349 2 50)) (= 11150372599265311570767859136324180752990208 (x1349 2 143)) (= (x1349 2 226) 107839786668602559178668060348078522694548577690162289924414440996864) (= (x1349 2 17) 131072) (= 288230376151711744 (x1349 2 58)) (= 67108864 (x1349 2 26)) (= (x1349 2 188) 392318858461667547739736838950479151006397215279002157056) (= 1099511627776 (x1349 2 40)) (= (x1349 2 220) 1684996666696914987166688442938726917102321526408785780068975640576) (= 89202980794122492566142873090593446023921664 (x1349 2 146)) (= (x1349 2 233) 13803492693581127574869511724554050904902217944340773110325048447598592) (= 33554432 (x1349 2 25)) (= (x1349 2 35) 34359738368) (= (x1349 2 76) 75557863725914323419136) (= (x1349 2 136) 87112285931760246646623899502532662132736) (= (x1349 2 222) 6739986666787659948666753771754907668409286105635143120275902562304) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x1349 2 252)) (= 1569275433846670190958947355801916604025588861116008628224 (x1349 2 190)) (= (x1349 2 158) 365375409332725729550921208179070754913983135744) (= 2854495385411919762116571938898990272765493248 (x1349 2 151)) (= 1298074214633706907132624082305024 (x1349 2 110)) (= 3533694129556768659166595001485837031654967793751237916243212402585239552 (x1349 2 241)) (= 1532495540865888858358347027150309183618739122183602176 (x1349 2 180)) (= (x1349 2 124) 21267647932558653966460912964485513216) (= (x1349 2 170) 1496577676626844588240573268701473812127674924007424) (= (x1349 2 71) 2361183241434822606848) (= 73786976294838206464 (x1349 2 66)) (= (x1349 2 153) 11417981541647679048466287755595961091061972992) (= (x1349 2 164) 23384026197294446691258957323460528314494920687616) (= (x1349 2 114) 20769187434139310514121985316880384) (= (x1349 2 163) 11692013098647223345629478661730264157247460343808) (= (x1349 2 5) 32) (= 27606985387162255149739023449108101809804435888681546220650096895197184 (x1349 2 234)) (= 340282366920938463463374607431768211456 (x1349 2 128)) (= (x1349 2 42) 4398046511104) (= (x1349 2 192) 6277101735386680763835789423207666416102355444464034512896) (= 32768 (x1349 2 15)) (= (x1349 2 10) 1024) (= 3213876088517980551083924184682325205044405987565585670602752 (x1349 2 201)) (= 383123885216472214589586756787577295904684780545900544 (x1349 2 178)) (= 25711008708143844408671393477458601640355247900524685364822016 (x1349 2 204)) (= 10633823966279326983230456482242756608 (x1349 2 123)) (= (x1349 2 23) 8388608) (= (x1349 2 83) 9671406556917033397649408) (= (x1349 2 109) 649037107316853453566312041152512) (= (x1349 2 242) 7067388259113537318333190002971674063309935587502475832486424805170479104) (= (x1349 2 194) 25108406941546723055343157692830665664409421777856138051584) (= (x1349 2 20) 1048576) (= 100433627766186892221372630771322662657637687111424552206336 (x1349 2 196)) (= 18446744073709551616 (x1349 2 64)) (= 3291009114642412084309938365114701009965471731267159726697218048 (x1349 2 211)) (= (x1349 2 92) 4951760157141521099596496896) (= (x1349 2 132) 5444517870735015415413993718908291383296) (= 36028797018963968 (x1349 2 55)) (= 39614081257132168796771975168 (x1349 2 95)) (= 36893488147419103232 (x1349 2 65)) (= (x1349 2 97) 158456325028528675187087900672) (= 178405961588244985132285746181186892047843328 (x1349 2 147)) (= 14134776518227074636666380005943348126619871175004951664972849610340958208 (x1349 2 243)) (= 166153499473114484112975882535043072 (x1349 2 117)) (= (x1349 2 240) 1766847064778384329583297500742918515827483896875618958121606201292619776) (= 1809251394333065553493296640760748560207343510400633813116524750123642650624 (x1349 2 250)) (= (x1349 2 79) 604462909807314587353088) (= 1152921504606846976 (x1349 2 60)) (= (x1349 2 96) 79228162514264337593543950336) (= 5192296858534827628530496329220096 (x1349 2 112)) (= 8 (x1349 2 3)) (= (x1349 2 37) 137438953472) (= (x1349 2 251) 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (x1349 2 1) 2) (= 26328072917139296674479506920917608079723773850137277813577744384 (x1349 2 214)) (= (x1349 2 61) 2305843009213693952) (= (x1349 2 46) 70368744177664) (= (x1349 2 210) 1645504557321206042154969182557350504982735865633579863348609024) (= (x1349 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= 22835963083295358096932575511191922182123945984 (x1349 2 154)) (= 536870912 (x1349 2 29)) (= (x1349 2 186) 98079714615416886934934209737619787751599303819750539264) (= 18014398509481984 (x1349 2 54)) (= 374144419156711147060143317175368453031918731001856 (x1349 2 168)) (= 1237940039285380274899124224 (x1349 2 90)) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1349 2 255)) (= (x1349 2 103) 10141204801825835211973625643008) (= (x1349 2 22) 4194304) (= (x1349 2 111) 2596148429267413814265248164610048) (= (x1349 2 48) 281474976710656) (= 19807040628566084398385987584 (x1349 2 94)) (= 23945242826029513411849172299223580994042798784118784 (x1349 2 174)) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x1349 2 231)) (= (x1349 2 89) 618970019642690137449562112) (= (x1349 2 119) 664613997892457936451903530140172288) (= (x1349 2 140) 1393796574908163946345982392040522594123776) (= (x1349 2 100) 1267650600228229401496703205376) (= (x1349 2 138) 348449143727040986586495598010130648530944) (= 93536104789177786765035829293842113257979682750464 (x1349 2 166)) (= (x1349 2 187) 196159429230833773869868419475239575503198607639501078528) (= 274877906944 (x1349 2 38)) (= (x1349 2 36) 68719476736) (= 38685626227668133590597632 (x1349 2 85)) (= (x1349 2 193) 12554203470773361527671578846415332832204710888928069025792) (= (x1349 2 213) 13164036458569648337239753460458804039861886925068638906788872192) (= (x1349 2 129) 680564733841876926926749214863536422912) (= 210624583337114373395836055367340864637790190801098222508621955072 (x1349 2 217)) (= (x1349 2 165) 46768052394588893382517914646921056628989841375232) (= (x1349 2 107) 162259276829213363391578010288128) (= (x1349 2 28) 268435456) (= 713623846352979940529142984724747568191373312 (x1349 2 149)) (= (x1349 2 59) 576460752303423488) (= 309485009821345068724781056 (x1349 2 88)) (= 9444732965739290427392 (x1349 2 73)) (= (x1349 2 69) 590295810358705651712) (= (x1349 2 127) 170141183460469231731687303715884105728) (= 43556142965880123323311949751266331066368 (x1349 2 135)) (= 5316911983139663491615228241121378304 (x1349 2 122)) (= 696898287454081973172991196020261297061888 (x1349 2 139)) (= 4294967296 (x1349 2 32)) (= (x1349 2 245) 56539106072908298546665520023773392506479484700019806659891398441363832832) (= (x1349 2 74) 18889465931478580854784) (= (x1349 2 99) 633825300114114700748351602688) (= (x1349 2 169) 748288838313422294120286634350736906063837462003712) (= (x1349 2 120) 1329227995784915872903807060280344576) (= 256 (x1349 2 8)) (= (x1349 2 68) 295147905179352825856) (= (x1349 2 172) 5986310706507378352962293074805895248510699696029696) (= (x1349 2 34) 17179869184) (= 5070602400912917605986812821504 (x1349 2 102)) (= 862718293348820473429344482784628181556388621521298319395315527974912 (x1349 2 229)) (= 17592186044416 (x1349 2 44)) (= 2048 (x1349 2 11)) (= 2535301200456458802993406410752 (x1349 2 101)) (= 356811923176489970264571492362373784095686656 (x1349 2 148)) (= 302231454903657293676544 (x1349 2 78)) (= (x1349 2 125) 42535295865117307932921825928971026432) (= (x1349 2 53) 9007199254740992) (= (x1349 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= (x1349 2 27) 134217728) (= 215679573337205118357336120696157045389097155380324579848828881993728 (x1349 2 227)) (= (x1349 2 77) 151115727451828646838272) (= (x1349 2 116) 83076749736557242056487941267521536) (= 4503599627370496 (x1349 2 52)) (= (x1349 2 126) 85070591730234615865843651857942052864) (= (x1349 2 191) 3138550867693340381917894711603833208051177722232017256448) (= (x1349 2 130) 1361129467683753853853498429727072845824) (= (x1349 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= (x1349 2 141) 2787593149816327892691964784081045188247552) (= (x1349 2 205) 51422017416287688817342786954917203280710495801049370729644032) (= 11972621413014756705924586149611790497021399392059392 (x1349 2 173)) (= (x1349 2 56) 72057594037927936) (= (x1349 2 2) 4) (= (x1349 2 24) 16777216) (= (x1349 2 219) 842498333348457493583344221469363458551160763204392890034487820288) (= 45671926166590716193865151022383844364247891968 (x1349 2 155)) (= 21778071482940061661655974875633165533184 (x1349 2 134)) (= (x1349 2 51) 2251799813685248) (= (x1349 2 6) 64) (= (x1349 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x1349 2 137) 174224571863520493293247799005065324265472) (= (x1349 2 47) 140737488355328) (= (x1349 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x1349 2 237)) (= (x1349 2 142) 5575186299632655785383929568162090376495104) (= 77371252455336267181195264 (x1349 2 86)) (= (x1349 2 157) 182687704666362864775460604089535377456991567872) (= 9223372036854775808 (x1349 2 63)) (= 730750818665451459101842416358141509827966271488 (x1349 2 159)) (= (x1349 2 156) 91343852333181432387730302044767688728495783936) (= 20282409603651670423947251286016 (x1349 2 104)) (= 5708990770823839524233143877797980545530986496 (x1349 2 152)) (= 332306998946228968225951765070086144 (x1349 2 118)) (= (x1349 2 62) 4611686018427387904) (= 421249166674228746791672110734681729275580381602196445017243910144 (x1349 2 218)) (= 5846006549323611672814739330865132078623730171904 (x1349 2 162)) (= 40564819207303340847894502572032 (x1349 2 105)) (= (x1349 2 91) 2475880078570760549798248448) (= 1427247692705959881058285969449495136382746624 (x1349 2 150)) (= (x1349 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= 766247770432944429179173513575154591809369561091801088 (x1349 2 179)) (= (x1349 2 189) 784637716923335095479473677900958302012794430558004314112) (= (x1349 2 215) 52656145834278593348959013841835216159447547700274555627155488768) (= 1073741824 (x1349 2 30)) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x1349 2 246)) (= (x1349 2 21) 2097152) (= (x1349 2 199) 803469022129495137770981046170581301261101496891396417650688) (= 12855504354071922204335696738729300820177623950262342682411008 (x1349 2 203)) (= 512 (x1349 2 9)) (= 8589934592 (x1349 2 33)) (= 3369993333393829974333376885877453834204643052817571560137951281152 (x1349 2 221)) (= (x1349 2 185) 49039857307708443467467104868809893875799651909875269632) (= (x1349 2 18) 262144) (= (x1349 2 70) 1180591620717411303424) (= (x1349 2 13) 8192) (= 41538374868278621028243970633760768 (x1349 2 115)) (= 35184372088832 (x1349 2 45)) (= (x1349 2 57) 144115188075855872) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x1349 2 223)) (= (x1349 2 247) 226156424291633194186662080095093570025917938800079226639565593765455331328) (= (x1349 2 98) 316912650057057350374175801344) (= 26959946667150639794667015087019630673637144422540572481103610249216 (x1349 2 224)) (= (x1349 2 145) 44601490397061246283071436545296723011960832) (= 102844034832575377634685573909834406561420991602098741459288064 (x1349 2 206)) (= 50216813883093446110686315385661331328818843555712276103168 (x1349 2 195)) (= (x1349 2 39) 549755813888) (= (x1349 2 84) 19342813113834066795298816) (= (x1349 2 16) 65536) (= (x1349 2 19) 524288) (= 95780971304118053647396689196894323976171195136475136 (x1349 2 176)) (= (x1349 2 144) 22300745198530623141535718272648361505980416) (= 154742504910672534362390528 (x1349 2 87)) (= (x1349 2 49) 562949953421312) (= (x1349 2 0) 1) (= (x1349 2 81) 2417851639229258349412352) (= 4722366482869645213696 (x1349 2 72)) (= 200867255532373784442745261542645325315275374222849104412672 (x1349 2 197)) (= (x1349 2 131) 2722258935367507707706996859454145691648) (= (x1349 2 225) 53919893334301279589334030174039261347274288845081144962207220498432) (= (x1349 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x1349 2 235)) (= 2923003274661805836407369665432566039311865085952 (x1349 2 161)) (= (x1349 2 236) 110427941548649020598956093796432407239217743554726184882600387580788736) (= 14474011154664524427946373126085988481658748083205070504932198000989141204992 (x1349 2 253)) (= 10889035741470030830827987437816582766592 (x1349 2 133)) (= (x1349 2 41) 2199023255552) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x1349 2 228)) (= 37778931862957161709568 (x1349 2 75)) (= (x1349 2 216) 105312291668557186697918027683670432318895095400549111254310977536) (= (x1349 2 67) 147573952589676412928) (= 4835703278458516698824704 (x1349 2 82)) (= 187072209578355573530071658587684226515959365500928 (x1349 2 167)) (= 2147483648 (x1349 2 31)) (= 6129982163463555433433388108601236734474956488734408704 (x1349 2 182)) (= (x1349 2 184) 24519928653854221733733552434404946937899825954937634816) (= (x1349 2 7) 128) (= (x1349 2 4) 16) (= 1461501637330902918203684832716283019655932542976 (x1349 2 160)) (= (x1349 2 80) 1208925819614629174706176) (= 47890485652059026823698344598447161988085597568237568 (x1349 2 175)) (= (x1349 2 12) 4096) (= (x1349 2 171) 2993155353253689176481146537402947624255349848014848) (= 1725436586697640946858688965569256363112777243042596638790631055949824 (x1349 2 230)) (= (x1349 2 14) 16384) (= (x1349 2 106) 81129638414606681695789005144064) (= 12259964326927110866866776217202473468949912977468817408 (x1349 2 183)) (= 324518553658426726783156020576256 (x1349 2 108)) (= 8796093022208 (x1349 2 43)) (= 411376139330301510538742295639337626245683966408394965837152256 (x1349 2 208)) (= (x1349 2 181) 3064991081731777716716694054300618367237478244367204352) (= (x1349 2 113) 10384593717069655257060992658440192) (= (x1349 2 93) 9903520314283042199192993792)))
(assert (x1390 x875))
(assert (= x2121 (=> (= (not (< x692 x522)) x1671) (and (=> (= x1449 x522) x1046) x1671))))
(assert (x1390 x691))
(assert (= (=> (and (and (and (not (< x1406 369934039)) (= (x1582 x14) x128) (= x43 0) (not (= x1406 643179133)) (<= 0 x128) (< x1406 1813000879) (= x943 (x1621 (x1331 x95))) (< 0 x943) (= 761525907 x1406) (= x392 x128) (< x128 18446744073709551616) (= (x167 (x1331 x131) (x1491 1) 0) x14) (= x1329 128) (not (= x1406 584786547)) (< x1406 850923838) (= x131 x494) (= x382 x2105) (= (> x2105 0) x381) (>= 18446744073709551615 x128) (not (> 584786547 x1406))) (and (and (and (and (and (= (x1470 x1665 2) x1871) (not (< x829 1813000879)) (= x1915 x494) (= (x1621 (x1331 x95)) x1069) (= 2306352607 x829) (= (and x1301 x1256) x1321) (< x829 3223297591) (= x287 0) (= x1665 (x167 (x1331 x1915) (x1491 4) 0)) (= x1513 (x196 x1871)) (>= x1513 0) (= x784 x1513) (= x1301 (= x1761 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1513) (< x829 2546193204) (< 0 x1069) (not (= 2103345634 x829)) (= x1761 x1293) (not (< x829 2103345634))) (and (and (not (< x450 3223297591)) (= (x167 (x1331 x1498) (x1491 4) 0) x2135) (<= x1216 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 3567836568 x450) (= (= 0 x969) x765) (= x1216 (x1280 x138)) (= (x1470 x2135 1) x138) (<= 0 x1216) (not (= 3314571236 x450)) (= x2077 (and x765 x1321)) (= (x1621 (x1331 x95)) x1488) (= x450 3361977486) (not (< x450 3314571236)) (= x969 x784) (= x992 x1216) (= 0 x588) (= x494 x1498) (not (< x450 1813000879)) (> x1488 0)) (and (<= x1536 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1758 x312) (= x1781 x145) (= 100 x1727) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1502 x1536)) (= x1540 (x1582 x955)) (= 0 x661) (<= x1493 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1681) (= (x1470 x559 2) x1379) (= (x1470 x559 1) x639) (= (x167 (x1331 x1157) (x1491 4) 0) x559) (< 0 x1797) (= (x196 x1379) x1536) (= (+ x265 x142) x1758) (not (< x318 1813000879)) (= x494 x1157) (>= x1595 0) (<= 0 x1681) (<= 0 x1493) (>= x1540 0) (<= 0 x1536) (= (and x1226 x2077) x82) (<= x1595 1461501637330902918203684832716283019655932542975) (>= x1502 0) (= x1294 x839) (not (> 3567836568 x318)) (= 0 x839) (= x318 3567836568) (not (< x318 3223297591)) (= x1226 (= x144 0)) (= 128 x1543) (= (x167 (x1331 x1157) (x1491 1) 0) x955) (= x1502 (x1280 x639)) (> 18446744073709551616 x1540) (= x2082 x1595) (< x318 3952089556) (>= 18446744073709551615 x1540) (= x142 x1502) (<= x1502 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x346 x962) (= x767 (= x664 0)) (= x1536 x265) (= x144 x992) (= x145 x1493) (= x1797 (x1621 (x1331 x95)))))) (and (= x1266 340724530) (= x449 (x167 (x1331 x1277) (x1491 4) 0)) (not (= 116652518 x1266)) (> 369934039 x1266) (= x1277 x494) (<= 0 x2100) (= (x2039 x449) x2100) (> 850923838 x1266) (not (= x1266 117300739)) (= x1256 (and x1080 x833)) (< x1266 1813000879) (< 0 x1895) (= (x1621 (x1331 x95)) x1895) (= x833 x150) (not (> 116652518 x1266)) (<= x2100 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x150 (not (= 0 x163))) (= x2100 x1293))) (and (= (= x325 0) x1606) (= (x1621 (x1331 x95)) x240) (< 0 x240) (= x1040 (not x1976)) (= (x2011 x956) x212) (<= x212 18446744073709551615) (not (> 850923838 x1381)) (<= 0 x212) (= x1080 (and x214 x1606)) (= x599 (= 0 x212)) (> 1425886544 x1381) (= 128 x1574) (= x163 (ite x1040 1 0)) (< x1381 1813000879) (= x2047 0) (= x1976 (not x599)) (= 1284264308 x1381) (= x956 (x167 (x1331 x802) (x1491 8) 0)) (not (< x1381 1284264308)) (= x907 x325) (> 18446744073709551616 x212) (= x802 x494))) (and (>= 18446744073709551615 x1585) (= x907 x88) (> 3567836568 x279) (= x578 (x1470 x2091 1)) (> 18446744073709551616 x1585) (<= x629 18446744073709551615) (= (x1779 x578) x629) (< x629 18446744073709551616) (not (> 1813000879 x279)) (= x1422 128) (= x709 0) (= (x167 (x1331 x1998) (x1491 8) 0) x2004) (= (x2011 x2004) x1585) (not (< x279 3223297591)) (= x1242 160) (= x2091 (x167 (x1331 x1998) (x1491 1) 0)) (= x279 3223297591) (= x1278 (x1621 (x1331 x95))) (= x214 (= 0 x1178)) (> x1278 0) (<= 0 x1585) (= x494 x1998) (<= 0 x629) (= x88 (ite (< x1585 x629) x629 x1585)) (< x279 3314571236) (= x1178 x128)))) (and (= x26 (x1861 128)) (= x26 x382))) (and (=> (and x767 (and (>= x1524 0) (= 160 x902) (= x867 x1524) (<= x1524 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x1215) (=> (and (not x767) (and (> 4294967296 x1075) (= x983 (x1470 x916 x2139)) (>= 26959946667150639794667015087019630673637144422540572481103610249215 x1298) (< x2139 x664) (= x1298 (x1939 x983)) (< x1298 26959946667150639794667015087019630673637144422540572481103610249216) (<= x1075 4294967295) (>= x1075 0) (= x2139 (x1056 (- x664 1))) (>= x1298 0) (= (> x1075 x1540) x576) (= (x876 (x1491 10) 0) x916) (= (x463 x983) x1075))) (and (=> (and (and (= x1403 10) (= x945 10) (= x832 0) (= 0 x2094) (= x243 (< 0 x664)) (< x1540 x962)) x576) (and (=> (and (and (or (and (not x1438) (and (= x1107 x89) (= (x1394 (+ x261 1)) x89) (= x664 x1096) (not (> x261 115792089237316195423570985008687907853269984665640564039457584007913129639934)))) (and x1438 (and (= 0 x1107) (= x261 x1096)))) (and (not (< x1878 0)) (= (div x664 2) x1355) (= (x1470 x731 x261) x840) (= (x463 x840) x367) (> 4294967296 x367) (<= 0 x367) (= x261 x1355) (= x1878 (x1056 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1355))) (= (x876 (x1491 10) 0) x731) (= (< x1540 x367) x1438) (<= x367 4294967295))) x243) x1666) (=> (and (not x243) (= x274 x664)) x1276))) (=> (and (and (= x1298 x867) (= 224 x902)) (not x576)) x1215))))) x1053))
(assert (= (div x379 4294967296) (x1639 x379 32)))
(assert (x1390 x625))
(assert (x1390 x1709))
(assert (x1390 x807))
(assert (x1390 x1441))
(assert (=> (<= x1716 10000) (= (x1491 x1716) (x1331 x1716))))
(assert (= (and (not x1670) x1975) x263))
(assert (= (x1331 3361977486) (x1491 3361977486)))
(assert (= x1433 (and x1163 x2089)))
(assert (= (=> (and (= x2126 x1587) (= x683 x1545)) x304) x2103))
(assert (= x566 (and (not x1438) x402)))
(assert (= x1792 (or x1207 x1752)))
(assert (x1390 x106))
(assert (x1390 x85))
(assert (= x160 (and x355 x1792)))
(assert (x1390 x1773))
(assert (= (=> (and (or (and (and (= 0 x488) (= x1233 x783)) x369) (and (not x369) (and (not x1505) (= x783 x666) (= x1731 x488) (= x1731 (x1394 (+ 1 x1233))) (= x1505 (> x1233 115792089237316195423570985008687907853269984665640564039457584007913129639934))))) (and (= (x740 x262) x1338) (= x531 (div x666 x874)) (>= x1338 0) (= x1264 (x1639 x561 1)) (= x970 (x1394 (+ x874 x531))) (< 0 x1743) (= x262 (x1470 x1644 x1233)) (= x2114 (x1639 x1003 1)) (= (x1639 x1272 1) x171) (= x961 (ite (< x171 x1197) x171 x1197)) (= x1983 (x1394 (+ x468 x1264))) (= (x1639 x1983 1) x443) (= (x876 (x1491 9) 0) x1644) (= (x1394 (+ x817 x5)) x1003) (< 0 x443) (= x2029 (x1639 x2005 1)) (< x1338 4294967296) (= x1308 (div x666 x443)) (= x1272 (x1394 (+ x2149 x386))) (> x2114 0) (= (div x666 x171) x1197) (= (div x666 x2114) x1168) (= x1743 (x1639 x551 1)) (= x468 (div x666 x1264)) (= x817 (div x666 x5)) (= (x1056 (- x666 x961)) x1233) (>= 4294967295 x1338) (= x369 (< 0 x1338)) (= x75 (x1394 (+ x1743 x226))) (< 0 x386) (= x407 (> x961 x666)) (= x915 (ite (> x2029 0) (x1394 (+ x64 1)) x64)) (= x561 (x1394 (+ x1168 x2114))) (= (div x666 x386) x2149) (not x407) (= x5 (x1639 x970 1)) (< 0 x171) (< 0 x5) (> x1264 0) (= x386 (x1639 x75 1)) (= x874 (x283 1 (x1639 x915 1))) (= (div x666 x1743) x226) (= (x1394 (+ x1308 x443)) x551))) x1697) x1328))
(assert (x1390 x420))
(assert (= (and x814 x576) x477))
(assert (= (div x1350 2) (x1639 x1350 1)))
(assert (x1390 x1743))
(assert (= (x1339 (x1470 x559 1)) (+ 1 (x1339 x559))))
(assert (= (=> (and (= (< 0 (x1639 x34 64)) x502) (or (and (and (= (x1639 x34 64) x1956) (= x1448 x1767) (= (x1394 (+ 64 x1036)) x1448)) x502) (and (not x502) (and (= x34 x1956) (= x1767 x1036))))) x1920) x966))
(assert (x1390 x1469))
(assert (= (x1639 x722 16) (div x722 65536)))
(assert (x1390 x1180))
(assert (= (and x1202 x385) x1698))
(assert (x1390 x1885))
(assert (x1390 x1143))
(assert (x1390 x254))
(assert (x1390 x550))
(assert (x1390 x2109))
(assert (x1390 x249))
(assert (x1390 x2015))
(assert (= x1039 (or x1523 x710)))
(assert (x1390 x306))
(assert (x1390 x2146))
(assert (= x1325 (x1339 (x1331 x1325))))
(assert (= x184 (and x508 (not x1982))))
(assert (x1390 x1958))
(assert (x1390 x1320))
(assert (x1390 x881))
(assert (= x540 (and x1794 x616)))
(assert (= (div x949 2) (x1639 x949 1)))
(assert (= x297 (=> (and (and (= x1384 (* x1334 x210)) (< (* x1334 x210) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (not x1412) x772) (= x1442 (ite x772 1 0)) (= x1169 (div x1384 100)) (= (not x877) x1412) (= x877 (not (< x1724 x1169))) (= x210 (x24 x2030))) (and (and (= x1440 x494) (<= 0 x1353) (= x346 x1557) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2078 x1353)) (< x2099 3952089556) (= x1702 (x167 (x1331 x1440) (x1491 1) 0)) (= 0 x1223) (<= x2102 1461501637330902918203684832716283019655932542975) (= (x1280 x1866) x2078) (<= x390 1461501637330902918203684832716283019655932542975) (= x2099 3567836568) (= x1746 x1068) (<= 0 x1388) (not (> 3567836568 x2099)) (= x1388 (x1582 x1702)) (= x1704 (x167 (x1331 x1440) (x1491 4) 0)) (= (x1470 x1704 2) x2035) (= x1476 (x1621 (x1331 x95))) (<= x1388 18446744073709551615) (<= 0 x2102) (= x2082 x2102) (<= 0 x1764) (= x143 x1353) (= (x196 x2035) x1353) (<= x1353 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1746 (not (= x1270 0))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2078) (<= x1764 1461501637330902918203684832716283019655932542975) (> x1476 0) (= x1161 x390) (= x758 (+ x143 x1177)) (= x1223 x1294) (>= x2078 0) (= x1930 x758) (not (< x2099 1813000879)) (>= x390 0) (= (= x664 0) x1232) (= x2078 x1177) (= 100 x225) (> 18446744073709551616 x1388) (= x1866 (x1470 x1704 1)) (not (> 3223297591 x2099)) (= x1161 x1781) (= x309 128)) (and (= (< 0 x1840) x1499) (= 128 x465) (= x1819 x494) (<= x1840 18446744073709551615) (= (not x1517) x853) (< x1840 18446744073709551616) (< x649 1813000879) (= x1270 (ite x853 1 0)) (= (x2011 x587) x1840) (= x936 (not (= x1442 0))) (= (and x1887 x1870) x1344) (not (> 369934039 x649)) (>= x1840 0) (= (not x481) x1887) (= x1739 (x1621 (x1331 x95))) (< x649 584786547) (not (= x649 369934039)) (< x649 850923838) (= x481 x936) (= (not x1499) x1517) (< 0 x1739) (= x1868 (or x1344 x1825)) (= x587 (x167 (x1331 x1819) (x1491 8) 0)) (= x649 419023261)))) (and (=> (and x1232 (and (= x586 160) (>= x1524 0) (= x1524 x344) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1524))) x1734) (=> (and (and (= (x1056 (- x664 1)) x727) (= (x876 (x1491 10) 0) x340) (<= x419 26959946667150639794667015087019630673637144422540572481103610249215) (= x835 (x1470 x340 x727)) (<= 0 x419) (<= x123 4294967295) (= x419 (x1939 x835)) (> 4294967296 x123) (> x664 x727) (= x123 (x463 x835)) (< x419 26959946667150639794667015087019630673637144422540572481103610249216) (<= 0 x123) (= x1501 (< x1388 x123))) (not x1232)) (and (=> (and x1501 (and (= 0 x702) (> x1557 x1388) (= 0 x1818) (= 10 x1258) (= (> x664 0) x10) (= 10 x826))) (and (=> (and (and (and (>= 4294967295 x1428) (= x997 (x1470 x739 x2130)) (= (x463 x997) x1428) (= (x876 (x1491 10) 0) x739) (= x1980 (x1056 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x920))) (= (> x1428 x1388) x1982) (<= 0 x1428) (< x1428 4294967296) (= x920 (div x664 2)) (= x920 x2130) (not (> 0 x1980))) (or (and (not x1982) (and (= x1955 x1882) (not (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2130)) (= (x1394 (+ x2130 1)) x1882) (= x664 x1799))) (and (and (= x1955 0) (= x1799 x2130)) x1982))) x10) x1550) (=> (and (= x664 x1372) (not x10)) x723))) (=> (and (not x1501) (and (= x586 224) (= x344 x419))) x1734)))))))
(assert (x1390 x1654))
(assert (= x1558 (and x728 x565)))
(assert (x1390 x894))
(assert (= (x1339 (x1470 x1159 x1987)) (+ (x1339 x1159) x1987)))
(assert (=> (>= 10000 x1440) (= (x1491 x1440) (x1331 x1440))))
(assert (= x1769 (and (not x806) x1267)))
(assert (x1390 x1681))
(assert (x1390 x858))
(assert (x1452 x131))
(assert (x1835 x1032))
(assert (x1390 x73))
(assert (x1390 x975))
(assert (x1390 x1915))
(assert (x1390 x500))
(assert (= (div x63 256) (x1639 x63 8)))
(assert (x1390 x774))
(assert (x1390 x863))
(assert (= (and x919 x687) x257))
(assert (= x723 (=> (and (= (= 0 x1372) x2038) (or (and (not x2038) (and (= x1303 x1908) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1908) (>= 26959946667150639794667015087019630673637144422540572481103610249215 x1908) (= (x1056 (- x1372 1)) x94) (= x1297 (x876 (x1491 10) 0)) (= x1908 (x1939 x1999)) (= 10 x1357) (<= 0 x1908) (= (x1470 x1297 x94) x1999))) (and x2038 (= 0 x1303)))) x114)))
(assert (x1390 x1998))
(assert (x1390 x2048))
(assert (x1390 x1013))
(assert (x1390 x497))
(assert (x1390 x1909))
(assert (= (=> (and (= x867 x1537) (= 224 x902)) x1215) x1674))
(assert (= (=> (and (or (and (and (= (x1639 x233 32) x2147) (= (x1394 (+ x2148 32)) x1067) (= x1067 x161)) x1656) (and (and (= x2147 x233) (= x2148 x161)) (not x1656))) (= (< 0 (x1639 x233 32)) x1656)) x1588) x1559))
(assert (x1390 x762))
(assert (x1390 x943))
(assert (= (mod (ite (< (x1639 x399 1) 256) (x1349 2 (x1639 x399 1)) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x283 1 (x1639 x399 1))))
(assert (x1390 x543))
(assert (= x1311 (or x1175 x527 x1520)))
(assert (x1390 x1))
(assert (= x126 (and x862 x1257)))
(assert (x1390 x83))
(assert (x1390 x1789))
(assert (x1358 x166))
(assert (= (div x1473 2) (x1639 x1473 1)))
(assert (x1390 x1799))
(assert (= x1909 (x1339 (x1331 x1909))))
(assert (= (div x80 2) (x1639 x80 1)))
(assert (x1390 x248))
(assert (x1390 x1066))
(assert (= x1007 (or x362 x566)))
(assert (x1390 x397))
(assert (x1390 x233))
(assert (=> (<= x567 10000) (= (x1331 x567) (x1491 x567))))
(assert (x1390 x288))
(assert (x1390 x338))
(assert (x1390 x1815))
(assert (x1390 x1947))
(assert (= (and x1065 (not x719)) x147))
(assert (x528 x1587 x1545))
(assert (x1390 x743))
(assert (x1390 x1562))
(assert (x1390 x2088))
(assert (x1390 x1107))
(assert (x1390 x1678))
(assert (x1390 x1300))
(assert (x1390 x930))
(assert (x1390 x1522))
(assert (= x1807 (or x1683 x263)))
(assert (= x1046 (=> (and (or (and (= x873 0) x1022) (and (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x900) (= (x1931 x1231) x900) (= (x876 (x1491 9) 0) x1934) (<= 0 x900) (= x900 x873) (>= 26959946667150639794667015087019630673637144422540572481103610249215 x900) (= (x1470 x1934 x1823) x1231) (= (x1056 (- x1449 1)) x1823)) (not x1022))) (= (= 0 x1449) x1022)) x1053)))
(assert (x1390 x1874))
(assert (= (x1639 x1099 8) (div x1099 256)))
(assert (x1390 x404))
(assert (= (and x1220 (not x86)) x922))
(assert (x1390 x907))
(assert (x1390 x548))
(assert (x1390 x798))
(assert (= (x1639 x1839 1) (div x1839 2)))
(assert (x1390 x405))
(assert (x1390 x462))
(assert (x1390 x1686))
(assert (x1390 x176))
(assert (x1390 x1886))
(assert (= (and x1392 (not x712)) x1951))
(assert (x1835 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1390 x1020))
(assert (x1390 x746))
(assert (x1390 x173))
(assert (x1390 x1858))
(assert (x1390 x69))
(assert (x528 x1673 x358))
(assert (x1390 x1852))
(assert (= (=> (and (or (and (= x1537 0) x1554) (and (and (= x972 (x1470 x448 x154)) (= x448 (x876 (x1491 10) 0)) (< x53 26959946667150639794667015087019630673637144422540572481103610249216) (>= x53 0) (>= 26959946667150639794667015087019630673637144422540572481103610249215 x53) (= 10 x1296) (= x154 (x1056 (- x274 1))) (= x53 (x1939 x972)) (= x53 x1537)) (not x1554))) (= (= 0 x274) x1554)) x1674) x1276))
(assert (= x1631 (and x910 (not x1022))))
(assert (= x378 (and x1787 x542)))
(assert (x1390 x1325))
(assert (= (x1339 (x1491 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1390 x252))
(assert (x1390 x1440))
(assert (x1390 x1401))
(assert (= x368 (and x1531 x928)))
(assert (x1390 x1872))
(assert (= (=> (and (or (and x1255 (and (= x1236 (x1394 (+ 2 x1662))) (= (x1639 x896 2) x1350) (= x1236 x1855))) (and (not x1255) (and (= x1855 x1662) (= x1350 x896)))) (= (< 0 (x1639 x896 2)) x1255)) x963) x577))
(assert (x1390 x177))
(assert (x1390 x808))
(assert (x1390 x1127))
(assert (x1390 x1408))
(assert (= (=> (and (> x1322 0) (not x790) (not (> 4 x16)) (= x743 (x1621 (x1331 x1877))) (= (> x666 5) x1822) (= (x1056 (- x1551 x2030)) x1086) (= x16 x1086) (not (< x530 2387844748)) (= 9 x1348) (= x1322 (x1621 (x1331 x1877))) (= x2134 x1000) (= (x1394 (+ x1173 32)) x1551) (= x1373 (x1056 (- x16 4))) (= x16 36) (= 64376167055515759358535430384376588076944157367080998815916584977429396717568 x858) (= x530 2387844748) (not (= 0 x743)) (< x530 2726970035) (> x2096 x2134) (not (< x530 1633807128)) (= (or (and (= true (<= x1373 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1373 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1373)) x790) (= x1173 (x1394 (+ x2030 4)))) (and (=> (and (and (= 0 x162) (= x666 x366)) (not x1822)) x1827) (=> (and (and (or (and (and (= x339 (x1639 x666 128)) (= 128 x1633)) x1809) (and (not x1809) (and (= x339 x666) (= 0 x1633)))) (= x1809 (> (x1639 x666 128) 0))) x1822) x708))) x1552))
(assert (x1390 x784))
(assert (= x2119 (=> (and (= (> (x1639 x722 16) 0) x280) (or (and x280 (and (= (x1394 (+ 16 x1415)) x950) (= x950 x275) (= x1099 (x1639 x722 16)))) (and (and (= x275 x1415) (= x1099 x722)) (not x280)))) x571)))
(assert (x1390 x1875))
(assert (= (div x1380 18446744073709551616) (x1639 x1380 64)))
(assert (= x303 (and (not x1232) x1409)))
(assert (= x1717 (=> (and (and (< 0 x248) (= x452 (div x666 x453)) (= x984 (x1639 x888 1)) (= x316 (div x666 x533)) (= (x740 x2070) x1867) (= (x1639 x431 1) x2110) (= x453 (x1639 x1626 1)) (< 0 x533) (= (ite (> x2110 0) (x1394 (+ x1407 1)) x1407) x763) (= x888 (x1394 (+ x1985 x1795))) (> x23 0) (= x67 (x1394 (+ x1705 x1562))) (= x23 (x1639 x109 1)) (= x1626 (x1394 (+ x1217 x984))) (= x248 (x1639 x137 1)) (= (x1639 x1101 1) x1795) (= (> x1867 x1000) x818) (>= x1867 0) (= x1330 (x1394 (+ x1691 x1603))) (> 4294967296 x1867) (= (x1394 (+ x316 x533)) x1101) (= x533 (x1639 x1330 1)) (= x137 (x1394 (+ x23 x598))) (= (x1639 x67 1) x1691) (= x1705 (div x666 x1562)) (= (div x666 x23) x598) (= (x876 (x1491 9) 0) x1219) (= (x1056 (- x666 x1623)) x1465) (>= 4294967295 x1867) (= x1771 (div x666 x248)) (= (div x666 x1795) x1985) (= x1623 (ite (< x248 x1771) x248 x1771)) (= (x1470 x1219 x1465) x2070) (> x984 0) (< 0 x1691) (= x1562 (x283 1 (x1639 x763 1))) (= (div x666 x1691) x1603) (< 0 x453) (= (< x666 x1623) x1733) (not x1733) (= (x1394 (+ x452 x453)) x109) (< 0 x1795) (= (div x666 x984) x1217)) (or (and (and (= x666 x1326) (= x336 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1465)) (not x336) (= x1521 x1760) (= (x1394 (+ x1465 1)) x1521)) (not x818)) (and (and (= x1760 0) (= x1465 x1326)) x818))) x2127)))
(assert (x1390 x2126))
(assert (= (and x477 (not x243)) x134))
(assert (= (or x869 x904) x1672))
(assert (x1390 x1800))
(assert (x1390 x1268))
(assert (x1390 x1041))
(assert (x1390 x1867))
(assert (x1390 x1855))
(assert (x1390 x137))
(assert (x1390 x1194))
(assert (x1390 x1839))
(assert (x1390 x65))
(assert (x1390 x1322))
(assert (x1390 x323))
(assert (x1390 x141))
(assert (x1452 x1877))
(assert (=> (>= 10000 x95) (= (x1491 x95) (x1331 x95))))
(assert (= (div x977 2) (x1639 x977 1)))
(assert (x1390 x1260))
(assert (= x596 (and x1831 x1474)))
(assert (= (and x1803 x1772) x98))
(assert (x1390 x1090))
(assert (x1390 x1293))
(assert (= (=> (and (= x2090 (> (x1639 x655 8) 0)) (or (and (not x2090) (and (= x2056 x2061) (= x462 x655))) (and x2090 (and (= x462 (x1639 x655 8)) (= x300 (x1394 (+ 8 x2056))) (= x2061 x300))))) x1135) x1481))
(assert (= (and (not x1507) x439) x1182))
(assert (= x472 (and (not x1105) x1247)))
(assert (= 419023261 (x1339 (x1491 419023261))))
(assert (x1390 x163))
(assert (x1390 x1144))
(assert (x1452 x870))
(assert (x1390 x1217))
(assert (= (and (not x1949) x191) x1850))
(assert (= x1118 (=> (and (or (and x919 (= 0 x1478)) (and (and (= (x876 (x1491 10) 0) x2069) (= (x1056 (- x1905 1)) x967) (= x1714 (x1939 x1765)) (= x2026 10) (< x1714 26959946667150639794667015087019630673637144422540572481103610249216) (<= x1714 26959946667150639794667015087019630673637144422540572481103610249215) (>= x1714 0) (= (x1470 x2069 x967) x1765) (= x1714 x1478)) (not x919))) (= x919 (= 0 x1905))) x1274)))
(assert (= x1592 (=> (and (= x2030 224) (= x1030 x1334)) x1552)))
(assert (x1390 x121))
(assert (x1390 x754))
(assert (x1390 x839))
(assert (= x2063 (and x564 x1092)))
(assert (= (x1491 584786547) (x1331 584786547)))
(assert (= (div x1590 65536) (x1639 x1590 16)))
(assert (= (div x654 2) (x1639 x654 1)))
(assert (= (and (not x1062) x1902) x1763))
(assert (x1390 x244))
(assert (= (or x1435 x160) x29))
(assert (=> (>= 10000 x131) (= (x1491 x131) (x1331 x131))))
(assert (x1390 x940))
(assert (= x460 (and x742 x39)))
(assert (= (x1331 2373169201) (x1491 2373169201)))
(assert (= x1368 (and x1295 x690)))
(assert (x528 x562 x632))
(assert (= (x1639 x75 1) (div x75 2)))
(assert (=> (>= 10000 x1498) (= (x1491 x1498) (x1331 x1498))))
(assert (x1390 x1910))
(assert (x1390 x1595))
(assert (x1390 x1338))
(assert (x1390 x1767))
(assert (= (or x151 x1229) x677))
(assert (x1390 x1642))
(assert (= (x1339 (x1470 x1023 x2133)) (+ x2133 (x1339 x1023))))
(assert (x1390 x1485))
(assert (x1390 x1511))
(assert (= (x1339 (x1491 116652518)) 116652518))
(assert (x1390 x164))
(assert (x1390 x815))
(assert (= x2013 (and (not x535) x1405)))
(assert (x1390 x1731))
(assert (x1390 x240))
(assert (x1390 x825))
(assert (x1390 x2134))
(assert (= (and (not x1092) x564) x879))
(assert (= x102 (and x1196 x502)))
(assert (= x968 (=> (and (or (and (and (= x2140 x415) (= x1319 x21)) (not x824)) (and (and (= (x1639 x415 64) x2140) (= (x1394 (+ x21 64)) x691) (= x691 x1319)) x824)) (= x824 (< 0 (x1639 x415 64)))) x201)))
(assert (x1390 x452))
(assert (= x260 (and x736 x824)))
(assert (x1390 x179))
(assert (= x571 (=> (and (= x712 (> (x1639 x1099 8) 0)) (or (and x712 (and (= x1049 x234) (= (x1394 (+ 8 x275)) x234) (= (x1639 x1099 8) x1170))) (and (and (= x275 x1049) (= x1170 x1099)) (not x712)))) x122)))
(assert (= (and (not x2136) x2020) x11))
(assert (x1390 x763))
(assert (x1390 x319))
(assert (x1390 x529))
(assert (= (and x753 x999) x742))
(assert (x1390 x165))
(assert (= (+ 1 (x1339 x328)) (x1339 (x1470 x328 1))))
(assert (x1390 x63))
(assert (x1390 x2068))
(assert (x1390 x1099))
(assert (= (div x1245 18446744073709551616) (x1639 x1245 64)))
(assert (= (or x1279 x387) x1995))
(assert (x897 x593 x518))
(assert (= x438 (=> (and (= (= x1194 0) x1062) (or (and x1062 (= x70 0)) (and (and (= x70 x1553) (= (x1939 x1456) x1553) (= x650 10) (= (x1470 x769 x746) x1456) (= x769 (x876 (x1491 10) 0)) (>= 26959946667150639794667015087019630673637144422540572481103610249215 x1553) (< x1553 26959946667150639794667015087019630673637144422540572481103610249216) (<= 0 x1553) (= x746 (x1056 (- x1194 1)))) (not x1062)))) x988)))
(assert (x1390 x725))
(assert (x1390 x1739))
(assert (x1452 x802))
(assert (= (and x779 x647) x580))
(assert (x1390 x1819))
(assert (x1390 x554))
(assert (x1390 x1277))
(assert (x1390 x154))
(assert (=> (>= 10000 x2022) (= (x1331 x2022) (x1491 x2022))))
(assert (x1390 x1227))
(assert (= x775 (or x1981 x821)))
(assert (= x474 (x1339 (x1331 x474))))
(assert (x1390 x1191))
(assert (x1390 x2110))
(assert (= x46 (or x540 x1791)))
(assert (x1390 x747))
(assert (x1390 x590))
(assert (= x697 (=> (and (= (> (x1639 x1935 4) 0) x846) (or (and (and (= x1935 x373) (= x116 x1497)) (not x846)) (and x846 (and (= x116 x1572) (= x1572 (x1394 (+ 4 x1497))) (= x373 (x1639 x1935 4)))))) x979)))
(assert (= x2118 (and x1570 x60)))
(assert (= (and (not x1257) x862) x384))
(assert (x1390 x1907))
(assert (x1390 x1030))
(assert (x1390 x1519))
(assert (x1390 x934))
(assert (x1390 x1607))
(assert (= (x1491 1813000879) (x1331 1813000879)))
(assert (x1390 x1422))
(assert (x1390 x1078))
(assert (= (=> (and (= x223 (> (x1639 x1684 32) 0)) (or (and (and (= x2074 (x1639 x1684 32)) (= x660 x1847) (= x660 (x1394 (+ 32 x305)))) x223) (and (not x223) (and (= x305 x1847) (= x2074 x1684))))) x1912) x601))
(assert (x1390 x770))
(assert (x1390 x103))
(assert (x1390 x951))
(assert (x1390 x1488))
(assert (x1390 x1962))
(assert (x1390 x1097))
(assert (= (x1339 (x1470 x1922 x193)) (+ x193 (x1339 x1922))))
(assert (x1835 x1958))
(assert (x1122 x893))
(assert (= (or x483 x257) x759))
(assert (x1390 x668))
(assert (= (+ (x1339 x3) 2) (x1339 (x1470 x3 2))))
(assert (x1390 x1502))
(assert (= (+ (x1339 x981) x1304) (x1339 (x1470 x981 x1304))))
(assert (x1835 x632))
(assert (= (or x1305 x1182 x886) x679))
(assert (= x414 (=> (and (and (= (x1394 (+ x65 x1151)) x332) (>= 4294967295 x356) (= x1607 (div x666 x231)) (>= x356 0) (= x1679 (x1470 x314 x793)) (= x1012 (div x666 x9)) (= x1474 (> x356 x2017)) (= x1856 (x1639 x590 1)) (< x356 4294967296) (= (x1639 x1518 1) x1151) (> x9 0) (> x1151 0) (= (div x666 x1205) x2093) (= x931 (x1639 x949 1)) (> x231 0) (= (x876 (x1491 9) 0) x314) (= (x1639 x1167 1) x231) (> x931 0) (= (x1394 (+ x1469 x774)) x1518) (= (x283 1 (x1639 x1332 1)) x1635) (= x356 (x740 x1679)) (not x1599) (= x65 (div x666 x1151)) (= x92 (x1639 x2071 1)) (= (x1394 (+ x1635 x2081)) x1167) (= x1480 (ite (< x931 x570) x931 x570)) (= (ite (< 0 x92) (x1394 (+ 1 x1290)) x1290) x1332) (= (div x666 x931) x570) (= (x1394 (+ x9 x1012)) x949) (= x9 (x1639 x332 1)) (= (x1056 (- x666 x1480)) x793) (= x2081 (div x666 x1635)) (= (x1394 (+ x231 x1607)) x590) (= (div x666 x1856) x395) (> x774 0) (= x774 (x1639 x80 1)) (= (x1394 (+ x1205 x2093)) x80) (= (< x666 x1480) x1599) (= x1205 (x1639 x78 1)) (> x1856 0) (= (x1394 (+ x1856 x395)) x78) (= x1469 (div x666 x774)) (< 0 x1205)) (or (and (not x1474) (and (= (x1394 (+ 1 x793)) x732) (= x732 x2126) (= x683 x666) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x793) x584) (not x584))) (and (and (= x2126 0) (= x683 x793)) x1474))) x2103)))
(assert (x1390 x1382))
(assert (x1390 x1289))
(assert (= (and x672 x847) x1028))
(assert (= (and x1461 (not x467)) x673))
(assert (x1390 x1824))
(assert (= (or x927 x1084) x375))
(assert (x1390 x1781))
(assert (x1390 x153))
(assert (= (div x666 340282366920938463463374607431768211456) (x1639 x666 128)))
(assert (x1390 x992))
(assert (= x869 (and x2142 x2038)))
(assert (x1390 x231))
(assert (x528 x1443 x2052))
(assert (x1390 x1453))
(assert (= (div x794 2) (x1639 x794 1)))
(assert (= (and x1694 x2076) x1026))
(assert (= (or x147 x1899) x1052))
(assert (x1390 x986))
(assert (= (=> (= (< x593 x518) x719) (and (=> (and (not x719) (= x529 x518)) x871) (=> (and x719 (and (and (= x1239 (x876 (x1491 9) 0)) (= x1667 x61) (= x115 (x740 x856)) (= (< 0 x115) x377) (= (x947 x593 x518) x1667) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1667 x1359)) (>= 4294967295 x115) (= x2111 x1359) (= x1261 (+ x61 x2111)) (= (x1470 x1239 x1261) x856) (< x115 4294967296) (<= 0 x115) (= (div (x1879 x593 x518) 2) x1359)) (or (and x377 (and (= x1903 x593) (= x1261 x204))) (and (not x377) (and (= x204 x518) (= x1903 x1490) (= x1490 (x1394 (+ x1261 1))) (= x501 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1261)) (not x501)))))) x1035))) x591))
(assert (x1390 x1529))
(assert (= (x1331 850923838) (x1491 850923838)))
(assert (= (x1339 (x1491 3952089556)) 3952089556))
(assert (= (div x266 18446744073709551616) (x1639 x266 64)))
(assert (= (=> (= (not (> x2049 x1706)) x1891) (and (=> (= x2049 x1885) x324) x1891)) x292))
(assert (x1390 x692))
(assert (= (or x264 x965) x2107))
(assert (x1390 x80))
(assert (x1390 x325))
(assert (= x1969 (and x1943 (not x1104))))
(assert (= (x1491 18446744073709551615) (x1331 18446744073709551615)))
(assert (= x952 (=> (and (and (= x1141 (x283 1 (x1639 x345 1))) (= (div x666 x1439) x1243) (= (x740 x803) x49) (= x1222 (div x666 x146)) (= (x1639 x1789 1) x754) (= (x1470 x735 x2122) x803) (= (x1639 x1044 1) x1950) (= (div x666 x1141) x1686) (= x1610 (x1639 x1800 1)) (< 0 x146) (= (x1394 (+ x1950 x669)) x777) (= (x1639 x1360 1) x1948) (> x1619 0) (= (div x666 x1619) x1489) (<= 0 x49) (= (< x666 x895) x1064) (> x1439 0) (= x1029 (div x666 x1015)) (= (div x666 x1948) x638) (= x20 (div x666 x754)) (>= 4294967295 x49) (= x1104 (> x49 x1388)) (> x1948 0) (= (x1639 x777 1) x146) (not x1064) (= x2015 (x1394 (+ x1222 x146))) (= x895 (ite (< x1015 x1029) x1015 x1029)) (= (x1394 (+ x1686 x1141)) x1260) (= x735 (x876 (x1491 9) 0)) (= x1738 (x1394 (+ x1243 x1439))) (> 4294967296 x49) (= (div x666 x1950) x669) (= x345 (ite (< 0 x1610) (x1394 (+ x748 1)) x748)) (< 0 x1950) (> x754 0) (= x2122 (x1056 (- x666 x895))) (= (x1394 (+ x1619 x1489)) x1360) (= x1439 (x1639 x2015 1)) (> x1015 0) (= (x1639 x1738 1) x1015) (= x1044 (x1394 (+ x754 x20))) (= x1619 (x1639 x1260 1)) (= x1789 (x1394 (+ x638 x1948)))) (or (and (not x1104) (and (= x1369 (x1394 (+ 1 x2122))) (= (> x2122 115792089237316195423570985008687907853269984665640564039457584007913129639934) x1162) (= x1369 x1565) (= x236 x666) (not x1162))) (and x1104 (and (= x1565 0) (= x236 x2122))))) x1648)))
(assert (x1390 x2052))
(assert (x1390 x828))
(assert (= (div x923 4) (x1639 x923 2)))
(assert (= (div x1780 256) (x1639 x1780 8)))
(assert (x1390 x1270))
(assert (x1390 x764))
(assert (= (and x2136 x2020) x990))
(assert (= x1591 (or x13 x1054)))
(assert (x1390 x421))
(assert (x1390 x1498))
(assert (= x1160 (and x1902 x1062)))
(assert (= (and (not x616) x1794) x1791))
(assert (x1390 x1953))
(assert (= x1722 (and x1854 x1542)))
(assert (= (x1331 643179133) (x1491 643179133)))
(assert (x1390 x2140))
(assert (= (x1339 (x1491 18446744073709551616)) 18446744073709551616))
(assert (x897 x1443 x2052))
(assert (x1390 x893))
(assert (x1390 x181))
(assert (= (div x766 16) (x1639 x766 4)))
(assert (x1390 x488))
(assert (x1390 x2017))
(assert (x1390 x352))
(assert (x1390 x629))
(assert (= (x1331 369934039) (x1491 369934039)))
(assert (x1390 x42))
(assert (x1390 x667))
(assert (x1390 x1296))
(assert (x1390 x390))
(assert (= (=> (= x1844 (not (< x217 x1838))) (and x1844 (=> (= x1194 x1838) x438))) x1282))
(assert (x1390 x236))
(assert (x1390 x1310))
(assert (x1390 x266))
(assert (= (and (not x185) x1391) x2023))
(assert (= (x1339 (x1470 x1901 x489)) (+ (x1339 x1901) x489)))
(assert (= (=> (= (> x2052 x1443) x806) (and (=> (and x806 (and (or (and (and (= x1967 x1451) (not x1241) (= x1967 (x1394 (+ 1 x254))) (= x1984 x2052) (= x1241 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x254))) (not x1876)) (and x1876 (and (= x1984 x254) (= x1451 x1443)))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1894 x139)) (= x139 x730) (= x1894 x15) (>= 4294967295 x1678) (> 4294967296 x1678) (= x1712 (x1470 x1504 x254)) (= (div (x1879 x1443 x2052) 2) x1894) (= (+ x730 x15) x254) (= (x740 x1712) x1678) (<= 0 x1678) (= x1504 (x876 (x1491 9) 0)) (= x139 (x947 x1443 x2052)) (= x1876 (< x1540 x1678))))) x239) (=> (and (= x2052 x849) (not x806)) x1699))) x908))
(assert (= (+ (x1339 x689) 2) (x1339 (x1470 x689 2))))
(assert (x1390 x1333))
(assert (x1390 x1896))
(assert (x1390 x1473))
(assert (= (or x1254 x1972) x1405))
(assert (= (x1639 x1374 1) (div x1374 2)))
(assert (x1390 x210))
(assert (= x1314 (=> (and (= x132 (< 0 (x1639 x1569 8))) (or (and (and (= x1773 x768) (= x1569 x766)) (not x132)) (and (and (= x768 x2123) (= (x1639 x1569 8) x766) (= x2123 (x1394 (+ x1773 8)))) x132))) x820)))
(assert (x1358 x1174))
(assert (= x672 (or x1181 x2013)))
(assert (x1390 x332))
(assert (= (div x431 2) (x1639 x431 1)))
(assert (= (or x1568 x2059) x1392))
(assert (= x1620 (or x260 x2104)))
(assert (= x2059 (and (not x280) x1893)))
(assert (x1390 x812))
(assert (x1390 x2005))
(assert (= x1054 (and (not x1554) x505)))
(assert (= (and x813 x1900) x464))
(assert (= x2 (or x1145 x909)))
(assert (= (and x843 x1703) x1556))
(assert (x1390 x1442))
(assert (=> (>= 10000 x374) (= (x1331 x374) (x1491 x374))))
(assert (x1390 x1430))
(assert (= x1845 (=> (= x1913 (> x1032 x1174)) (and (=> (and (and (and (= x755 (x876 (x1491 9) 0)) (= x156 (> x1762 x322)) (= (x1470 x755 x1482) x622) (< x1762 4294967296) (= x1188 x964) (= x1658 x85) (= x1482 (+ x1188 x1658)) (< (+ x964 x85) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (div (x1879 x1174 x1032) 2) x85) (>= x1762 0) (>= 4294967295 x1762) (= (x947 x1174 x1032) x964) (= x1762 (x740 x622))) (or (and (and (= x1174 x170) (= x741 x1482)) x156) (and (and (not x1393) (= x1032 x741) (= x1529 x170) (= x1529 (x1394 (+ x1482 1))) (= x1393 (> x1482 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (not x156)))) x1913) x311) (=> (and (= x1032 x1001) (not x1913)) x686)))))
(assert (x1390 x2117))
(assert (x1390 x274))
(assert (x1390 x90))
(assert (x1390 x1629))
(assert (x1390 x1428))
(assert (= (+ x967 (x1339 x2069)) (x1339 (x1470 x2069 x967))))
(assert (x1390 x1813))
(assert (= x1912 (=> (and (or (and x484 (and (= x991 (x1394 (+ 16 x1847))) (= x63 (x1639 x2074 16)) (= x991 x938))) (and (and (= x938 x1847) (= x2074 x63)) (not x484))) (= (< 0 (x1639 x2074 16)) x484)) x1636)))
(assert (x1390 x474))
(assert (x1390 x1837))
(assert (x1390 x1103))
(assert (= (or x711 x1631) x597))
(assert (= (x1639 x1072 64) (div x1072 18446744073709551616)))
(assert (= (div x994 2) (x1639 x994 1)))
(assert (= (div x372 4294967296) (x1639 x372 32)))
(assert (= x359 (and x929 x1410)))
(assert (= (and x375 (not x215)) x159))
(assert (x1390 x1360))
(assert (x1390 x1359))
(assert (= (and x2144 x696) x527))
(assert (= (and x1649 x1460) x1391))
(assert (= (x1639 x277 1) (div x277 2)))
(assert (= (=> (= (> x366 x162) x728) (and (=> (and (= x366 x1885) (not x728)) x324) (=> (and x728 (and (and (= x426 (x740 x1834)) (= x1404 x974) (= (+ x974 x516) x975) (> 4294967296 x426) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2146 x1404)) (<= x426 4294967295) (= (> x426 x1000) x1383) (= x516 x2146) (= x1549 (x876 (x1491 9) 0)) (= x2146 (x947 x162 x366)) (= x1404 (div (x1879 x162 x366) 2)) (>= x426 0) (= x1834 (x1470 x1549 x975))) (or (and (and (= x471 (x1394 (+ x975 1))) (= x2049 x366) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x975) x891) (not x891) (= x1706 x471)) (not x1383)) (and (and (= x975 x2049) (= x162 x1706)) x1383)))) x292))) x1827))
(assert (= x963 (=> (and (and (= x1317 (x1639 x1581 1)) (> x716 0) (> x1317 0) (= (x283 1 (x1639 x399 1)) x1387) (= x1268 (div x666 x716)) (= (x1394 (+ x1730 x845)) x1881) (= x1581 (x1394 (+ x99 x2028))) (= (div x666 x1387) x1974) (> 4294967296 x492) (= (x1394 (+ x1317 x1453)) x807) (= (x1639 x2131 1) x525) (= x1198 (x876 (x1491 9) 0)) (>= 4294967295 x492) (= x99 (div x666 x2028)) (< 0 x2028) (= (x1639 x1121 1) x995) (= (x740 x1193) x492) (= x857 (div x666 x995)) (= (x1639 x157 1) x2028) (< 0 x1721) (= (x1394 (+ x1721 x1837)) x1121) (< 0 x845) (= (x1394 (+ x2000 x525)) x2033) (= x2000 (div x666 x525)) (= x1837 (div x666 x1721)) (= (x1394 (+ x857 x995)) x157) (< 0 x995) (= x1721 (x1639 x1881 1)) (= (> x492 x2037) x1410) (= x2131 (x1394 (+ x1974 x1387))) (> x525 0) (= (div x666 x845) x1730) (= x1445 (x1056 (- x666 x524))) (>= x492 0) (= x1453 (div x666 x1317)) (= x1193 (x1470 x1198 x1445)) (= (x1639 x807 1) x716) (= (< x666 x524) x1450) (= (ite (< 0 x1857) (x1394 (+ 1 x1855)) x1855) x399) (= x845 (x1639 x2033 1)) (= (ite (< x716 x1268) x716 x1268) x524) (= (x1639 x1350 1) x1857) (not x1450)) (or (and (not x1410) (and (= x1250 x2068) (= (x1394 (+ x1445 1)) x1250) (= (> x1445 115792089237316195423570985008687907853269984665640564039457584007913129639934) x496) (not x496) (= x1880 x666))) (and x1410 (and (= x1880 x1445) (= x2068 0))))) x1959)))
(assert (x1390 x817))
(assert (= (and x1876 x1608) x652))
(assert (= x1550 (=> (= x1457 (not (< x1955 x1799))) (and (=> (= x1372 x1799) x723) x1457))))
(assert (x1390 x1843))
(assert (= (x1639 x763 1) (div x763 2)))
(assert (x1390 x1259))
(assert (= x202 (or x1969 x1638)))
(assert (x1390 x715))
(assert (= x1269 (=> (and (or (and (not x1803) (and (= x2005 x665) (= x1869 x64))) (and (and (= x64 x717) (= x2005 (x1639 x665 2)) (= (x1394 (+ x1869 2)) x717)) x1803)) (= x1803 (< 0 (x1639 x665 2)))) x1328)))
(assert (=> (>= 10000 x72) (= (x1491 x72) (x1331 x72))))
(assert (x1390 x638))
(assert (x1390 x1968))
(assert (= (x1639 x1041 1) (div x1041 2)))
(assert (=> (<= x1877 10000) (= (x1331 x1877) (x1491 x1877))))
(assert (= (or x2044 x580) x804))
(assert (= (x1639 x1121 1) (div x1121 2)))
(assert (= x1055 (=> (and (= x518 x440) (= x1567 x593)) x591)))
(assert (= (and x66 x351) x606))
(assert (x1390 x1415))
(assert (x1390 x204))
(assert (x1390 x1047))
(assert (= x1520 (or x1689 x1467)))
(assert (x1390 x1125))
(assert (x1390 x1085))
(assert (x1390 x37))
(assert (x1390 x1355))
(assert (x1390 x1131))
(assert (= x1755 (and (not x502) x1196)))
(assert (= (x1339 (x1331 x1203)) x1203))
(assert (x1390 x286))
(assert (x1452 x1909))
(assert (= x1624 (or x493 x1937)))
(assert (x1390 x52))
(assert (x1452 x1325))
(assert (= x1035 (=> (= x1701 (not (< x1903 x204))) (and x1701 (=> (= x204 x529) x871)))))
(assert (= x686 (=> (and (or (and (and (>= 26959946667150639794667015087019630673637144422540572481103610249215 x79) (= x685 (x1470 x1901 x489)) (= (x1931 x685) x79) (= x79 x1238) (= x1901 (x876 (x1491 9) 0)) (>= x79 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x79) (= x489 (x1056 (- x1001 1)))) (not x27)) (and (= x1238 0) x27)) (= x27 (= x1001 0))) x1337)))
(assert (x1390 x229))
(assert (x1390 x379))
(assert (x1390 x1445))
(assert (x1390 x1075))
(assert (x1390 x1581))
(assert (= (and x1383 x1558) x737))
(assert (= (or x330 x422) x1653))
(assert (= x1434 (or x1914 x1957)))
(assert (x1390 x2131))
(assert (x1390 x760))
(assert (= x786 (=> (and (and (< (* x401 x658) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x523 x1503) x401) (= x1417 (not (< x780 x458))) (= (not x1785) x1753) (= x365 (* x658 x401)) (= (ite x1753 1 0) x1858) (= (div x365 100) x458) (= (not x1417) x1785)) (and (and (= x268 (not x1783)) (= x1825 (and x268 x1628)) (>= x242 0) (> 1813000879 x1094) (= x567 x494) (= x1291 (x167 (x1331 x567) (x1491 8) 0)) (< 0 x1925) (> 18446744073709551616 x242) (not (> 1284264308 x1094)) (= (ite x485 1 0) x1859) (not (< x1094 850923838)) (= (x2011 x1291) x242) (= x1783 x1106) (= 128 x1400) (>= 18446744073709551615 x242) (= x1925 (x1621 (x1331 x95))) (= x485 (not x695)) (= 1284264308 x1094) (= (= x242 0) x1756) (> 1425886544 x1094) (= (not (= x1858 0)) x1106) (= (not x1756) x695)) (and (= x2058 x1875) (= x1341 (= x664 0)) (= x662 x1870) (= 128 x750) (= 3567836568 x1492) (not (> 3567836568 x1492)) (= x903 x1486) (= x2082 x1519) (<= x1000 18446744073709551615) (< x1492 3952089556) (= x1724 x285) (= x2101 (x1470 x3 1)) (= x285 (+ x1006 x903)) (= x2096 x346) (= x3 (x167 (x1331 x1335) (x1491 4) 0)) (not (< x1492 3223297591)) (= x881 100) (<= 0 x1000) (= (not (= 0 x1859)) x662) (= 0 x1180) (<= x1519 1461501637330902918203684832716283019655932542975) (= (x1470 x3 2) x425) (= (x196 x425) x1033) (= x633 (x167 (x1331 x1335) (x1491 1) 0)) (= (x1280 x2101) x1486) (<= x1033 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x1492 1813000879)) (= x1033 x1006) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1033 x1486)) (<= 0 x1486) (<= 0 x1519) (< x1000 18446744073709551616) (>= 1461501637330902918203684832716283019655932542975 x1140) (<= x1875 1461501637330902918203684832716283019655932542975) (> x785 0) (= x1781 x2058) (= x1180 x1294) (= x785 (x1621 (x1331 x95))) (= x1335 x494) (= x1000 (x1582 x633)) (<= 0 x1033) (<= x1486 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1875 0) (<= 0 x1140)))) (and (=> (and (and (<= x1524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1524 0) (= x2030 160) (= x1524 x1334)) x1341) x1552) (=> (and (not x1341) (and (= x1507 (< x1000 x1113)) (< x1113 4294967296) (<= 0 x1399) (= x1113 (x463 x1016)) (> 26959946667150639794667015087019630673637144422540572481103610249216 x1399) (= x1464 (x876 (x1491 10) 0)) (>= 4294967295 x1113) (> x664 x56) (<= x1399 26959946667150639794667015087019630673637144422540572481103610249215) (= x56 (x1056 (- x664 1))) (>= x1113 0) (= x1399 (x1939 x1016)) (= (x1470 x1464 x56) x1016))) (and (=> (and x1507 (and (< x1000 x2096) (= 0 x1709) (= 10 x1060) (= x878 (< 0 x664)) (= x880 0) (= x1612 10))) (and (=> (and (not x878) (= x36 x664)) x1253) (=> (and x878 (and (or (and (not x1618) (and (= x1605 x100) (= x664 x1929) (not (> x1431 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (= (x1394 (+ x1431 1)) x100))) (and (and (= x1605 0) (= x1431 x1929)) x1618)) (and (= x1431 x370) (= (< x1000 x1952) x1618) (>= x1952 0) (= x22 (x876 (x1491 10) 0)) (= x581 (x1470 x22 x1431)) (> 4294967296 x1952) (= x103 (x1056 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x370))) (<= x1952 4294967295) (not (> 0 x103)) (= (x463 x581) x1952) (= x370 (div x664 2))))) x704))) (=> (and (not x1507) (and (= x2030 224) (= x1334 x1399))) x1552)))))))
(assert (x1390 x562))
(assert (x1390 x882))
(assert (= (and x1420 x944) x953))
(assert (= x539 (=> (and (= (< 0 (x1639 x506 16)) x1532) (or (and (not x1532) (and (= x655 x506) (= x2056 x644))) (and (and (= x655 (x1639 x506 16)) (= x1725 (x1394 (+ 16 x644))) (= x2056 x1725)) x1532))) x1481)))
(assert (= x838 (and x1364 (not x2090))))
(assert (= (x1639 x1167 1) (div x1167 2)))
(assert (x1390 x1478))
(assert (= x259 (and x1913 x1807)))
(assert (x1390 x1518))
(assert (x1390 x1905))
(assert (= x556 (and (not x1446) x1323)))
(assert (= (and (not x1618) x605) x1005))
(assert (x1390 x524))
(assert (x1390 x741))
(assert (x1390 x1059))
(assert (x1390 x443))
(assert (x1390 x657))
(assert (= (and x775 (not x1646)) x104))
(assert (= x235 (and (not x1802) x2107)))
(assert (= (x1491 26959946667150639794667015087019630673637144422540572481103610249216) (x1331 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (+ (x1339 x1600) x1310) (x1339 (x1470 x1600 x1310))))
(assert (x1390 x245))
(assert (x1835 x166))
(assert (x1390 x109))
(assert (= (and x520 (not x1942)) x575))
(assert (x1390 x962))
(assert (x1390 x1025))
(assert (x1390 x1603))
(assert (x1358 x1443))
(assert (x1390 x2058))
(assert (x1390 x1083))
(assert (= x155 (and x1918 (not x549))))
(assert (x1390 x26))
(assert (x1390 x1859))
(assert (= (x283 1 (x1639 x763 1)) (mod (ite (< (x1639 x763 1) 256) (x1349 2 (x1639 x763 1)) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= 761525907 (x1339 (x1491 761525907))))
(assert (= (or x585 x980) x1323))
(assert (x1390 x2106))
(assert (= x771 (and x1653 (not x684))))
(assert (x1390 x189))
(assert (= (x1339 (x1470 x1058 x1288)) (+ x1288 (x1339 x1058))))
(assert (x1390 x830))
(assert (x1390 x946))
(assert (= (div x2015 2) (x1639 x2015 1)))
(assert (x1390 x645))
(assert (x1390 x468))
(assert (x1390 x8))
(assert (x1390 x1172))
(assert (x1390 x1780))
(assert (x1390 x1121))
(assert (x1390 x991))
(assert (x1390 x182))
(assert (= (x1639 x590 1) (div x590 2)))
(assert (x1390 x918))
(assert (=> (<= x1325 10000) (= (x1491 x1325) (x1331 x1325))))
(assert (x1390 x1737))
(assert (x1390 x1166))
(assert (x1390 x415))
(assert (x1390 x845))
(assert (x1390 x583))
(assert (= x278 (or x2019 x475)))
(assert (x1390 x1283))
(assert (x1390 x459))
(assert (x1390 x131))
(assert (x1390 x1112))
(assert (x1390 x1908))
(assert (= (=> (and (not x19) (= x1221 (x1621 (x1331 x1877))) (= x19 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x299) (and (< x299 32) (= true (<= x299 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1589 2387844748) (= x1973 x315) (not (> 2387844748 x1589)) (= x1149 (> x666 5)) (= x2017 x1941) (= x329 (x1394 (+ 4 x1503))) (< x1941 x1723) (= x299 (x1056 (- x315 4))) (= x1602 64376167055515759358535430384376588076944157367080998815916584977429396717568) (not (= 0 x276)) (= x1973 (x1056 (- x2145 x1503))) (> 2726970035 x1589) (= (x1394 (+ x329 32)) x2145) (= 36 x315) (not (> 4 x315)) (= 9 x1179) (not (< x1589 1633807128)) (= (x1621 (x1331 x1877)) x276) (> x1221 0)) (and (=> (and (and (= x1545 x666) (= x1587 0)) (not x1149)) x304) (=> (and (and (or (and (and (= x1036 0) (= x666 x34)) (not x2136)) (and x2136 (and (= x34 (x1639 x666 128)) (= x1036 128)))) (= (> (x1639 x666 128) 0) x2136)) x1149) x966))) x939))
(assert (x1390 x544))
(assert (= (mod (ite (> 256 (x1639 x456 1)) (x1349 2 (x1639 x456 1)) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x283 1 (x1639 x456 1))))
(assert (x1390 x1664))
(assert (x1390 x1882))
(assert (= x1640 (=> (and (or (and x1833 (and (= x2060 (x1394 (+ x1472 64))) (= x2148 x2060) (= (x1639 x1072 64) x233))) (and (and (= x1472 x2148) (= x233 x1072)) (not x1833))) (= x1833 (< 0 (x1639 x1072 64)))) x1559)))
(assert (x1390 x1373))
(assert (x1390 x787))
(assert (x1452 x567))
(assert (x1390 x372))
(assert (= x2002 (and x1618 x605)))
(assert (x1390 x78))
(assert (= x958 (=> (and (= x1806 x1443) (= x2052 x1965)) x908)))
(assert (x1390 x1924))
(assert (x1390 x1095))
(assert (= (div x970 2) (x1639 x970 1)))
(assert (x1835 x893))
(assert (x1390 x525))
(assert (x1390 x1935))
(assert (x1390 x1158))
(assert (x1390 x995))
(assert (x1390 x655))
(assert (x1390 x1817))
(assert (= (or x1007 x134) x505))
(assert (= (div x1506 4) (x1639 x1506 2)))
(assert (= (x1339 (x1491 2726970035)) 2726970035))
(assert (= (and x278 x1510) x928))
(assert (= (=> (and (= x779 (< 0 (x1639 x1956 32))) (or (and x779 (and (= (x1394 (+ 32 x1767)) x69) (= x69 x1320) (= (x1639 x1956 32) x729))) (and (and (= x729 x1956) (= x1320 x1767)) (not x779)))) x1371) x1920))
(assert (x1390 x511))
(assert (x1390 x49))
(assert (= (mod (ite (> 256 (x1639 x1019 1)) (x1349 2 (x1639 x1019 1)) 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x283 1 (x1639 x1019 1))))
(assert (= x1741 (and (not x1383) x1558)))
(assert (x1390 x1572))
(assert (= x114 (=> (and (= x586 224) (= x1303 x344)) x1734)))
(assert (= (div x1228 256) (x1639 x1228 8)))
(assert (x1390 x81))
(assert (= x1436 (or x1850 x1527)))
(assert (x1390 x1506))
(assert (= (x1639 x1569 8) (div x1569 256)))
(assert (= (x1639 x1983 1) (div x1983 2)))
(assert (= (x1339 (x1470 x735 x2122)) (+ (x1339 x735) x2122)))
(assert (= (x1491 26959946667150639794667015087019630673637144422540572481103610249215) (x1331 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1390 x2114))
(assert (x1390 x964))
(assert (x1390 x2124))
(assert (x1390 x973))
(assert (= (=> (and (= (> (x1639 x2095 2) 0) x355) (or (and (and (= x2095 x182) (= x645 x1306)) (not x355)) (and (and (= x1946 x645) (= (x1394 (+ x1306 2)) x1946) (= (x1639 x2095 2) x182)) x355))) x707) x1898))
(assert (x1390 x1766))
(check-sat)
(exit)